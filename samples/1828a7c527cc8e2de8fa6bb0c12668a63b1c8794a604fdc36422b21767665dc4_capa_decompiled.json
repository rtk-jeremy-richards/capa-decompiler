{
    "null": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl method.std::bad_alloc.virtual_0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.004013b0();\n    if ((arg_8h & 1) != 0) {\n        fcn.00409e48(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 81
    },
    "00401b80": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401b80(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00401bb0();\n    if ((arg_8h & 1) != 0) {\n        fcn.00409e48(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 80
    },
    "004071a0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004071a0(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_58h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x42554d;\n    var_ch = *in_FS_OFFSET;\n    arg_8h_00 = *0x435014 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        iVar1 = fcn.00409e18(0x18, arg_8h_00);\n        var_4h = 0;\n        if (iVar1 == 0) {\n            var_18h = 0;\n        }\n        else {\n            fcn.00402ef0(0x18);\n            uVar2 = fcn.00402080();\n            uVar2 = fcn.00401cb0(uVar2);\n            var_4h = CONCAT31(var_4h._1_3_, 1);\n            var_18h = fcn.00407480(uVar2, 0, 1);\n        }\n        *arg_8h = var_18h;\n        var_4h = 0xffffffff;\n        if (iVar1 != 0) {\n            fcn.00401d80();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 4;\n}\n",
        "token_count": 423
    },
    "00407290": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00407290(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_58h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x425a4d;\n    var_ch = *in_FS_OFFSET;\n    arg_8h_00 = *0x435014 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        iVar1 = fcn.00409e18(8, arg_8h_00);\n        var_4h = 0;\n        if (iVar1 == 0) {\n            var_18h = 0;\n        }\n        else {\n            uVar2 = fcn.00402080();\n            uVar2 = fcn.00401cb0(uVar2);\n            var_4h = CONCAT31(var_4h._1_3_, 1);\n            var_18h = fcn.004074f0(uVar2, 0);\n        }\n        *arg_8h = var_18h;\n        var_4h = 0xffffffff;\n        if (iVar1 != 0) {\n            fcn.00401d80();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 4;\n}\n",
        "token_count": 406
    },
    "00409510": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00409510(uint32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint CodePage;\n    int32_t iVar2;\n    uint arg_14h;\n    uint32_t uVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == NULL) {\n        iVar1 = fcn.00411399();\n        iVar1 = *(iVar1 + 8);\n        CodePage = fcn.00411374();\n    }\n    else {\n        iVar1 = arg_ch[3];\n        CodePage = *arg_ch;\n    }\n    if (iVar1 == 0) {\n        if (arg_8h < 0x41) {\n            return arg_8h;\n        }\n        if (0x5a < arg_8h) {\n            return arg_8h;\n        }\n        return arg_8h + 0x20;\n    }\n    if (arg_8h < 0x100) {\n        if (arg_ch == NULL) {\n            iVar2 = fcn.004112f0(arg_8h);\n            if (iVar2 == 0) {\n                return arg_8h;\n            }\ncode_r0x004095b7:\n            iVar2 = fcn.00411237();\n            uVar3 = *(iVar2 + (arg_8h >> 8 & 0xffU) * 2) & 0x8000;\n            goto code_r0x0040959d;\n        }\n        if ((*(arg_ch[1] + arg_8h * 2) & 1) == 0) {\n            return arg_8h;\n        }\n    }\n    else if (arg_ch == NULL) goto code_r0x004095b7;\n    uVar3 = *(arg_ch[1] + (arg_8h >> 8 & 0xffU) * 2) >> 0xf & 1;\ncode_r0x0040959d:\n    if (uVar3 == 0) {\n        var_4h._1_1_ = 0;\n        arg_14h = 1;\n        var_4h._0_1_ = arg_8h;\n    }\n    else {\n        var_4h._2_1_ = 0;\n        arg_14h = 2;\n        var_4h._0_1_ = arg_8h >> 8;\n        var_4h._1_1_ = arg_8h;\n    }\n    iVar1 = fcn.004099ca(iVar1, 0x100, &var_4h, arg_14h, &var_8h, 3, CodePage, 1);\n    if ((iVar1 != 0) && (arg_8h = var_8h,  iVar1 != 1)) {\n        arg_8h = CONCAT11(var_8h, var_8h._1_1_);\n    }\n    return arg_8h;\n}\n",
        "token_count": 683
    },
    "0040968f": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040968f(uint32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint CodePage;\n    int32_t iVar2;\n    uint arg_14h;\n    uint32_t uVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == NULL) {\n        iVar1 = fcn.00411399();\n        iVar1 = *(iVar1 + 8);\n        CodePage = fcn.00411374();\n    }\n    else {\n        iVar1 = arg_ch[3];\n        CodePage = *arg_ch;\n    }\n    if (iVar1 == 0) {\n        if (arg_8h < 0x61) {\n            return arg_8h;\n        }\n        if (0x7a < arg_8h) {\n            return arg_8h;\n        }\n        return arg_8h - 0x20;\n    }\n    if (arg_8h < 0x100) {\n        if (arg_ch == NULL) {\n            iVar2 = fcn.00411260(arg_8h);\n            if (iVar2 == 0) {\n                return arg_8h;\n            }\ncode_r0x00409736:\n            iVar2 = fcn.00411237();\n            uVar3 = *(iVar2 + (arg_8h >> 8 & 0xffU) * 2) & 0x8000;\n            goto code_r0x0040971c;\n        }\n        if ((*(arg_ch[1] + arg_8h * 2) & 2) == 0) {\n            return arg_8h;\n        }\n    }\n    else if (arg_ch == NULL) goto code_r0x00409736;\n    uVar3 = *(arg_ch[1] + (arg_8h >> 8 & 0xffU) * 2) >> 0xf & 1;\ncode_r0x0040971c:\n    if (uVar3 == 0) {\n        var_4h._1_1_ = 0;\n        arg_14h = 1;\n        var_4h._0_1_ = arg_8h;\n    }\n    else {\n        var_4h._2_1_ = 0;\n        arg_14h = 2;\n        var_4h._0_1_ = arg_8h >> 8;\n        var_4h._1_1_ = arg_8h;\n    }\n    iVar1 = fcn.004099ca(iVar1, 0x200, &var_4h, arg_14h, &var_8h, 3, CodePage, 1);\n    if ((iVar1 != 0) && (arg_8h = var_8h,  iVar1 != 1)) {\n        arg_8h = CONCAT11(var_8h, var_8h._1_1_);\n    }\n    return arg_8h;\n}\n",
        "token_count": 681
    },
    "0040e376": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040e376(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x435014 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.0041191b();\n        *puVar1 = 0x16;\n        fcn.0040fa11();\n        goto code_r0x0040e4cb;\n    }\n    fcn.0040e7fe(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.0040e7c2(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    var_ch = 0;\n    iVar2 = fcn.0040ea69();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x0040e4a3;\ncode_r0x0040e4ee:\n                    *(puVar1 + arg_14h + -1) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x0040e4ee;\n                    goto code_r0x0040e4a3;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x0040e4a3:\n            *(puVar1 + var_468h) = 0;\n        }\n    }\n    fcn.0040e891();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x0040e4cb:\n    fcn.00409e05(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 825
    },
    "004081f8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004081f8(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00408110();\n    if ((arg_8h & 1) != 0) {\n        fcn.00409e48(in_ECX + -8);\n    }\n    return in_ECX + -8;\n}\n",
        "token_count": 82
    },
    "0040d348": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040d348(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint32_t *arg_18h, uint arg_1ch, \n            int32_t arg_20h, int32_t arg_24h)\n\n{\n    code *pcVar1;\n    uint32_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    int32_t *piVar8;\n    int32_t var_64h;\n    int32_t var_60h;\n    int32_t var_58h;\n    uint *var_54h;\n    uint var_50h;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    int32_t *var_40h;\n    uint32_t *var_3ch;\n    uint32_t *var_34h;\n    uint32_t *var_30h;\n    uint var_2ch;\n    int32_t *var_28h;\n    int32_t var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint *var_14h;\n    int32_t var_10h;\n    uint32_t *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_18h = var_18h & 0xffffff00;\n    var_8h = fcn.0040e2c0(arg_ch, arg_14h, arg_18h);\n    if ((var_8h < -1) || (arg_18h[1] <= var_8h)) goto code_r0x0040d6e7;\n    if (((*arg_8h != -0x1f928c9d) || (arg_8h[4] != 3)) ||\n       ((((arg_8h[5] != 0x19930520 && (arg_8h[5] != 0x19930521)) && (arg_8h[5] != 0x19930522)) || (arg_8h[7] != 0)))) {\n        var_4h = arg_10h;\n        goto code_r0x0040d496;\n    }\n    iVar4 = fcn.0040cfcc();\n    if (*(iVar4 + 0x10) == 0) {\n        return;\n    }\n    iVar4 = fcn.0040cfcc();\n    arg_8h = *(iVar4 + 0x10);\n    iVar4 = fcn.0040cfcc();\n    var_18h = CONCAT31(var_18h._1_3_, 1);\n    var_4h = *(iVar4 + 0x14);\n    if ((arg_8h == NULL) ||\n       ((((*arg_8h == -0x1f928c9d && (arg_8h[4] == 3)) &&\n         ((arg_8h[5] == 0x19930520 || ((arg_8h[5] == 0x19930521 || (arg_8h[5] == 0x19930522)))))) && (arg_8h[7] == 0))))\n    goto code_r0x0040d6e7;\n    iVar4 = fcn.0040cfcc();\n    if (*(iVar4 + 0x1c) == 0) {\ncode_r0x0040d496:\n        var_30h = arg_18h;\n        var_2ch = 0;\n        if (((*arg_8h == -0x1f928c9d) && (arg_8h[4] == 3)) &&\n           ((arg_8h[5] == 0x19930520 || ((arg_8h[5] == 0x19930521 || (arg_8h[5] == 0x19930522)))))) {\n            if (arg_18h[3] != 0) {\n                fcn.0040a9ab(&var_40h, &var_30h, var_8h, arg_14h, arg_18h, arg_20h);\n                var_28h = var_40h;\n                var_ch = var_3ch;\n                if (var_3ch < var_34h) {\n                    var_1ch = var_3ch * 0x14;\n                    do {\n                        iVar4 = var_8h;\n                        puVar6 = *(*var_28h + 0x10) + var_1ch;\n                        puVar7 = &var_64h;\n                        var_ch = var_3ch;\n                        for (iVar5 = 5; iVar5 != 0; iVar5 = iVar5 + -1) {\n                            *puVar7 = *puVar6;\n                            puVar6 = puVar6 + 1;\n                            puVar7 = puVar7 + 1;\n                        }\n                        if (((var_64h <= iVar4) && (iVar4 <= var_60h)) && (var_10h = 0,  var_58h != 0)) {\n                            iVar4 = arg_8h[7];\n                            var_24h = **(iVar4 + 0xc);\n                            var_20h = *(iVar4 + 0xc) + 1;\n                            var_14h = var_54h;\n                            do {\n                                var_50h = *var_14h;\n                                uStack80 = var_14h[1];\n                                uStack76 = var_14h[2];\n                                uStack72 = var_14h[3];\n                                piVar8 = var_20h;\n                                var_3ch = var_ch;\n                                for (iVar5 = var_24h; var_ch = var_3ch,  0 < iVar5; iVar5 = iVar5 + -1) {\n                                    iVar4 = fcn.0040d823(&var_50h, *piVar8, iVar4);\n                                    if (iVar4 != 0) {\n                                        fcn.0040d2c8(arg_8h, arg_ch, var_4h, arg_14h, arg_18h, &var_50h, *piVar8, \n                                                     &var_64h, arg_20h, arg_24h);\n                                        var_3ch = var_ch;\n                                        goto code_r0x0040d5d1;\n                                    }\n                                    iVar4 = arg_8h[7];\n                                    piVar8 = piVar8 + 1;\n                                    var_3ch = var_ch;\n                                }\n                                var_10h = var_10h + 1;\n                                var_14h = var_14h + 4;\n                            } while (var_10h != var_58h);\n                        }\ncode_r0x0040d5d1:\n                        var_3ch = var_3ch + 1;\n                        var_1ch = var_1ch + 0x14;\n                        var_ch = var_3ch;\n                    } while (var_3ch < var_34h);\n                }\n            }\n            if (arg_1ch != '\\0') {\n                fcn.0040ae06(arg_8h);\n            }\n            if (0x19930520 < (*arg_18h & 0x1fffffff)) {\n                if (arg_18h[7] != 0) {\n                    if ((arg_18h[8] >> 2 & 1) != 0) goto code_r0x0040d62a;\n                    cVar3 = fcn.0040dd5d(arg_8h, arg_18h[7]);\n                    if (cVar3 != '\\0') goto code_r0x0040d676;\n                    goto code_r0x0040d6ab;\n                }\n                if (((arg_18h[8] >> 2 & 1) != 0) && (arg_20h == 0)) {\ncode_r0x0040d62a:\n                    iVar4 = fcn.0040cfcc();\n                    *(iVar4 + 0x10) = arg_8h;\n                    iVar4 = fcn.0040cfcc();\n                    *(iVar4 + 0x14) = var_4h;\n                    goto code_r0x0040d686;\n                }\n            }\n        }\n        else if (arg_18h[3] != 0) {\n            if (arg_1ch != '\\0') goto code_r0x0040d6e7;\n            fcn.0040d6ed(arg_8h, arg_ch, var_4h, arg_14h, arg_18h, var_8h, arg_20h, arg_24h);\n        }\ncode_r0x0040d676:\n        iVar4 = fcn.0040cfcc();\n        if (*(iVar4 + 0x1c) == 0) {\n            return;\n        }\n    }\n    else {\n        iVar4 = fcn.0040cfcc();\n        var_ch = *(iVar4 + 0x1c);\n        iVar4 = fcn.0040cfcc();\n        *(iVar4 + 0x1c) = 0;\n        cVar3 = fcn.0040dd5d(arg_8h, var_ch);\n        puVar2 = var_ch;\n        if (cVar3 != '\\0') goto code_r0x0040d496;\n        arg_24h = 0;\n        arg_18h = puVar2;\n        if (0 < *var_ch) {\n            do {\n                cVar3 = fcn.0040d9e6(0x47d670);\n                if (cVar3 != '\\0') goto code_r0x0040d68b;\n                arg_24h = arg_24h + 0x10;\n                var_10h = var_10h + 1;\n            } while (var_10h < *puVar2);\n        }\ncode_r0x0040d686:\n        fcn.00414e06();\ncode_r0x0040d68b:\n        fcn.0040ae06(arg_8h);\n        fcn.0040d9ce();\n        fcn.0040afc4(&var_3ch, 0x4332c4);\ncode_r0x0040d6ab:\n        iVar4 = fcn.0040cfcc();\n        *(iVar4 + 0x10) = arg_8h;\n        iVar4 = fcn.0040cfcc();\n        *(iVar4 + 0x14) = var_4h;\n        if (arg_24h == 0) {\n            arg_24h = arg_ch;\n        }\n        fcn.0040ab9e(arg_24h, arg_8h);\n        fcn.0040dc5d(arg_ch, arg_14h, arg_18h);\n        arg_8h_00 = fcn.0040de1a(arg_18h);\n        fcn.0040dbd4(arg_8h_00);\n    }\ncode_r0x0040d6e7:\n    fcn.0041192e();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 2526
    },
    "0040edeb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040edeb(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    int32_t in_ECX;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar4 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x0040ee9d:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\ncode_r0x0040eea1:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0040eea4:\n            cVar4 = fcn.0040f2ea(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x0040ee49:\n                arg_8h = 0x10;\n                goto code_r0x0040eea4;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x0040ee5d;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0040ee31;\n                }\n            }\ncode_r0x0040eead:\n            cVar4 = fcn.0040f106();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.0040f0ac();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x0040eead;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x0040ee5d:\n            cVar4 = fcn.0040f257(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.0040f4ce();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x0040eead;\n            if (cVar4 == 'i') goto code_r0x0040ee9d;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.0040f43b();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.0040f4af();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x0040ee49;\n            }\n            goto code_r0x0040eea1;\n        }\ncode_r0x0040ee31:\n        cVar4 = fcn.0040f4e6();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(in_ECX + 0x30) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    var_4h = var_4h._3_1_ << 0x18;\n    uVar1 = *(in_ECX + 0x20);\n    var_8h = 0;\n    if ((uVar1 >> 4 & 1) != 0) {\n        if ((uVar1 >> 6 & 1) == 0) {\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 >> 1 & 1) != 0) {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                    arg_ch = 1;\n                    var_8h = 1;\n                }\n                goto code_r0x0040ef33;\n            }\n            var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n        }\n        else {\n            var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n        }\n        var_8h = 1;\n        arg_ch = 1;\n    }\ncode_r0x0040ef33:\n    cVar4 = *(in_ECX + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar1 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&var_4h + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&var_4h + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        var_8h = arg_ch;\n    }\n    arg_14h = in_ECX + 0x18;\n    arg_10h = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - arg_ch;\n    if ((*(in_ECX + 0x20) & 0xc) == 0) {\n        fcn.0040e751(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n        arg_ch = var_8h;\n    }\n    fcn.0040f67b(&var_4h, arg_ch, arg_14h);\n    if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n        fcn.0040e751(in_ECX + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.0040f5d6(0);\n    if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n        fcn.0040e751(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 1694
    },
    "0040f2ea": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040f2ea(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t arg_ch_00;\n    bool bVar6;\n    uint var_4h;\n    \n    iVar1 = fcn.0040f050(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.0041191b();\n                *puVar2 = 0x16;\n                uVar3 = fcn.0040fa11();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x0040f3a0;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x0040f3a0;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x0040f3a0:\n    uVar5 = *(in_ECX + 0x20);\n    if ((((uVar5 >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar6 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar6);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x20) = uVar5;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = uVar5 & 0xfffffff7;\n        fcn.0040e584(*(in_ECX + 0x28));\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    *(in_ECX + 0x3c) = 0;\n    if (iVar1 == 8) {\n        fcn.0040e6c3(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.0040e650(uVar3, arg_8h, arg_ch);\n    }\n    pcVar4 = *(in_ECX + 0x20) >> 7;\n    if (((pcVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (pcVar4 = *(in_ECX + 0x34),  *pcVar4 != '0')))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(pcVar4 >> 8, 1);\n}\n",
        "token_count": 1126
    },
    "0040f4af": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f4af(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.0040f2ea(8, 0);\n    return;\n}\n",
        "token_count": 94
    },
    "00418c5e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.00418c5e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040a530(0x4336e0, 0x10);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        puVar1 = fcn.00411908();\n        *puVar1 = 0;\n        puVar1 = fcn.0041191b();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < lpCriticalSection) && (lpCriticalSection < *0x47e660)) {\n            iVar3 = (lpCriticalSection & 0x3f) * 0x38;\n            *(unaff_EBP + -0x20) = iVar3;\n            if ((*(*((lpCriticalSection >> 6) * 4 + 0x47e460) + 0x28 + iVar3) & 1) != 0) {\n                fcn.0041e383(lpCriticalSection);\n                uVar2 = 0xffffffff;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((lpCriticalSection >> 6) * 4 + 0x47e460) + 0x28 + *(unaff_EBP + -0x20)) & 1) == 0) {\n                    puVar1 = fcn.0041191b();\n                    *puVar1 = 9;\n                    puVar1 = fcn.00411908();\n                    *puVar1 = 0;\n                }\n                else {\n                    uVar2 = fcn.00418d50(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00418d1d();\n                goto code_r0x00418d40;\n            }\n        }\n        puVar1 = fcn.00411908();\n        *puVar1 = 0;\n        puVar1 = fcn.0041191b();\n        *puVar1 = 9;\n        fcn.0040fa11();\n    }\n    uVar2 = 0xffffffff;\ncode_r0x00418d40:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 666
    },
    "0041913f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.0041913f(int32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.0041191b();\n        *puVar2 = 0x16;\n        fcn.0040fa11();\n        return -1;\n    }\n    arg_8h_00 = fcn.00416c93(arg_8h);\n    if (arg_8h[2] < 0) {\n        arg_8h[2] = 0;\n    }\n    iVar5 = fcn.0041a413(arg_8h_00, 0, 0, 1);\n    arg_10h = iVar5 >> 0x20;\n    if ((iVar5 < 0x100000000) && (iVar5 < 0)) {\ncode_r0x0041926a:\n        iVar7 = -1;\n    }\n    else {\n        if ((arg_8h[3] & 0xc0U) == 0) {\n            return iVar5 - arg_8h[2];\n        }\n        iVar3 = arg_8h_00 >> 6;\n        iVar4 = (arg_8h_00 & 0x3f) * 0x38;\n        uVar1 = *(iVar4 + 0x29 + *(iVar3 * 4 + 0x47e460));\n        var_4h = var_4h & 0xffffff00 | uVar1;\n        iVar7 = *arg_8h - arg_8h[1];\n        if ((arg_8h[3] & 3U) == 0) {\n            if ((arg_8h[3] >> 2 & 1) == 0) {\n                puVar2 = fcn.0041191b();\n                *puVar2 = 0x16;\n                goto code_r0x0041926a;\n            }\n        }\n        else {\n            if ((uVar1 == 1) && ((*(iVar4 + 0x2d + *(iVar3 * 4 + 0x47e460)) & 2) != 0)) {\n                iVar5 = fcn.0041947c(arg_8h, iVar5, arg_10h);\n                return iVar5;\n            }\n            if (*(iVar4 + 0x28 + *(iVar3 * 4 + 0x47e460)) < '\\0') {\n                iVar6 = fcn.00419612(arg_8h[1], *arg_8h, var_4h);\n                iVar7 = iVar6 + iVar7;\n            }\n        }\n        if (iVar5 != 0) {\n            if ((arg_8h[3] & 1U) == 0) {\n                if (uVar1 == 1) {\n                    iVar7 = fcn.00424ee0(iVar7, 2, 0);\n                }\n                iVar7 = iVar7 + iVar5;\n            }\n            else {\n                iVar7 = fcn.004192c3(arg_8h, iVar5, arg_10h, iVar7, iVar7 >> 0x20);\n            }\n        }\n    }\n    return iVar7;\n}\n",
        "token_count": 808
    },
    "004198e7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004198e7(uint32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    fcn.00416c93(arg_ch);\n    if ((arg_ch[3] & 6) == 0) {\n        puVar2 = fcn.0041191b();\n        *puVar2 = 9;\n    }\n    else {\n        if ((arg_ch[3] >> 0xc & 1) == 0) {\n            if ((arg_ch[3] & 1) != 0) {\n                cVar1 = fcn.00419862(arg_ch);\n                arg_ch[2] = 0;\n                if (cVar1 == '\\0') goto code_r0x004196cd;\n                *arg_ch = arg_ch[1];\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffffe;\n            }\n            LOCK();\n            arg_ch[3] = arg_ch[3] | 2;\n            LOCK();\n            arg_ch[3] = arg_ch[3] & 0xfffffff7;\n            arg_ch[2] = 0;\n            if (((arg_ch[3] & 0x4c0) == 0) && (cVar1 = fcn.00416ccf(arg_ch),  cVar1 == '\\0')) {\n                fcn.0041a449(arg_ch);\n            }\n            cVar1 = fcn.00419796(arg_8h, arg_ch);\n            if (cVar1 == '\\0') {\n                LOCK();\n                arg_ch[3] = arg_ch[3] | 0x10;\n                arg_8h = 0xffffffff;\n            }\n            else {\n                arg_8h = arg_8h & 0xff;\n            }\n            return arg_8h;\n        }\n        puVar2 = fcn.0041191b();\n        *puVar2 = 0x22;\n    }\ncode_r0x004196cd:\n    LOCK();\n    arg_ch[3] = arg_ch[3] | 0x10;\n    return 0xffffffff;\n}\n",
        "token_count": 473
    },
    "00401cb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00401cb0(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint uVar2;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4254af;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x435014 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar2 = 0;\n    fcn.00407be7(0);\n    var_4h = 0;\n    fcn.004031b0(uVar2, uVar1);\n    var_4h._0_1_ = 1;\n    fcn.004031b0();\n    var_4h._0_1_ = 2;\n    fcn.00403160();\n    var_4h._0_1_ = 3;\n    fcn.00403160();\n    var_4h._0_1_ = 4;\n    fcn.004031b0();\n    var_4h._0_1_ = 5;\n    fcn.004031b0();\n    var_4h = CONCAT31(var_4h._1_3_, 6);\n    if (arg_8h == 0) {\n        fcn.00407dbf(\"bad locale name\");\n    }\n    else {\n        fcn.00409366(in_ECX, arg_8h);\n    }\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 386
    },
    "00401ef0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401ef0(int32_t *param_1)\n\n{\n    uint in_stack_ffffffec;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*param_1 == 0) {\n        in_stack_ffffffec = 0;\n        fcn.00407be7(0);\n        if (*param_1 == 0) {\n            *0x47dc30 = *0x47dc30 + 1;\n            *param_1 = *0x47dc30;\n        }\n        fcn.00407c3f();\n    }\n    fcn.00409e05(in_stack_ffffffec);\n    return;\n}\n",
        "token_count": 154
    },
    "00402030": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402030(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(param_1 + 4) != 0) && (puVar1 = (**(**(param_1 + 4) + 8))(),  puVar1 != NULL)) {\n        (***puVar1)(1);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "004028c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.004028c0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    uint unaff_EDI;\n    int32_t in_FS_OFFSET;\n    \n    if ((*0x47e858 == NULL) || (*0x47e854 == NULL)) {\n        iVar1 = *(***(*(*(in_FS_OFFSET + 0x30) + 0xc) + 0x14) + 0x10);\n        iVar3 = *(iVar1 + *(iVar1 + 0x3c) + 0x78) + iVar1;\n        uVar4 = 0;\n        do {\n            do {\n                piVar5 = *(*(iVar3 + 0x20) + iVar1 + uVar4 * 4) + iVar1;\n                uVar4 = uVar4 + 1;\n            } while (*piVar5 != 0x64616f4c);\n        } while (piVar5[2] != 0x41797261);\n        *0x47e858 = *(*(iVar3 + 0x1c) + iVar1 + ((uVar4 & 0xffff0000 | *(*(iVar3 + 0x24) + iVar1 + uVar4 * 2)) - 1) * 4)\n                    + iVar1;\n        iVar1 = *(***(*(*(in_FS_OFFSET + 0x30) + 0xc) + 0x14) + 0x10);\n        iVar3 = *(iVar1 + *(iVar1 + 0x3c) + 0x78) + iVar1;\n        uVar4 = 0;\n        do {\n            do {\n                piVar5 = *(*(iVar3 + 0x20) + iVar1 + uVar4 * 4) + iVar1;\n                uVar4 = uVar4 + 1;\n            } while (*piVar5 != 0x50746547);\n        } while (*(piVar5 + 10) != 0x73736572);\n        *0x47e854 = *(*(iVar3 + 0x1c) + iVar1 + ((uVar4 & 0xffff0000 | *(*(iVar3 + 0x24) + iVar1 + uVar4 * 2)) - 1) * 4)\n                    + iVar1;\n    }\n    uVar2 = (**0x47e858)();\n    (**0x47e854)(uVar2);\n    fcn.00409e05(unaff_EDI);\n    return;\n}\n",
        "token_count": 586
    },
    "00403fd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403fd0(int32_t arg_8h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar5;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x42579d;\n    var_ch = *in_FS_OFFSET;\n    uVar3 = *0x435014 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar5 = arg_8h;\n    fcn.004056a0(arg_8h);\n    var_4h = 0;\n    cVar1 = fcn.00402730(iVar5, uVar3);\n    if (cVar1 == '\\0') {\n        *(in_ECX + 4) = 0;\n    }\n    else {\n        iVar4 = fcn.00405930();\n        if ((iVar4 == 0) || (iVar4 == arg_8h)) {\n            *(in_ECX + 4) = 1;\n        }\n        else {\n            fcn.00405740();\n            uVar2 = fcn.00402730(iVar5, uVar3);\n            *(in_ECX + 4) = uVar2;\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 355
    },
    "00404090": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404090(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4257c0;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x435014 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar2 = fcn.00404200(uVar1);\n    fcn.00401570();\n    if (*param_1 != 0) {\n        fcn.00406190(*param_1, param_1[1], uVar2);\n        fcn.004056f0(*param_1, param_1[2] - *param_1);\n        *param_1 = 0;\n        param_1[1] = 0;\n        param_1[2] = 0;\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 289
    },
    "004041d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004041d0(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        fcn.0040f750(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 67
    },
    "00405030": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00405305)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00405030(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint32_t arg_1ch, char *arg_20h, \n            uint32_t arg_24h)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    uint8_t **ppuVar3;\n    uint uVar4;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint arg_18h_00;\n    int32_t arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    int32_t arg_1ch_00;\n    uint arg_1ch_01;\n    uint uVar8;\n    uint var_d0h;\n    uint var_c8h;\n    uint var_c0h;\n    uint var_b8h;\n    uint var_b0h;\n    uint var_a8h;\n    uint var_a0h;\n    uint var_98h;\n    uint var_90h;\n    uint var_8ch;\n    uint32_t var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint32_t var_70h;\n    uint var_6ch;\n    int32_t var_68h;\n    uint32_t var_64h;\n    uint var_60h;\n    uint32_t var_5ch;\n    uint32_t var_58h;\n    int32_t var_54h;\n    char *var_50h;\n    uint8_t var_49h;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_2ch;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4258ab;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x435014 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if ((arg_24h == 0) || ((*arg_20h != '+' && (*arg_20h != '-')))) {\n        var_68h = 0;\n    }\n    else {\n        var_68h = 1;\n    }\n    var_48h = var_68h;\n    uVar2 = fcn.00402760(var_10h);\n    if ((uVar2 & 0x3000) == 0x3000) {\n        var_6ch = 0x431728;\n        if (((var_48h + 2U <= arg_24h) && (arg_20h[var_48h] == '0')) &&\n           ((arg_20h[var_48h + 1] == 'x' || (arg_20h[var_48h + 1] == 'X')))) {\n            var_48h = var_48h + 2;\n        }\n    }\n    else {\n        var_6ch = 0x431724;\n    }\n    var_88h = fcn.0040e330(arg_20h, var_6ch);\n    var_14h._0_2_ = *0x43172c;\n    ppuVar3 = fcn.0040f728();\n    var_14h._0_2_ = var_14h & 0xff00 | **ppuVar3;\n    var_58h = fcn.0040e330(arg_20h, &var_14h);\n    var_78h = fcn.00402800(&var_98h);\n    var_4h = 0;\n    var_74h = var_78h;\n    var_7ch = fcn.004061a0(var_78h);\n    var_4h = 0xffffffff;\n    fcn.00402030();\n    fcn.00403310(arg_24h, 0);\n    var_4h = 1;\n    uVar4 = fcn.00403220(0);\n    fcn.00402210(arg_20h, arg_20h + arg_24h, uVar4);\n    var_84h = fcn.00402800(&var_a0h);\n    var_4h._0_1_ = 2;\n    var_80h = var_84h;\n    var_60h = fcn.004068f0(var_84h);\n    var_4h._0_1_ = 1;\n    fcn.00402030();\n    fcn.00405c70(&var_44h);\n    var_4h = CONCAT31(var_4h._1_3_, 3);\n    var_49h = fcn.00405cb0();\n    if (var_58h != arg_24h) {\n        uVar1 = fcn.00405cd0();\n        puVar5 = fcn.00403220(var_58h);\n        *puVar5 = uVar1;\n    }\n    if (var_58h == arg_24h) {\n        var_70h = var_88h;\n    }\n    else {\n        var_70h = var_58h;\n    }\n    var_5ch = var_70h;\n    var_50h = fcn.00403220(0);\n    while (((*var_50h != '\\x7f' && ('\\0' < *var_50h)) && (*var_50h < var_5ch - var_48h))) {\n        var_5ch = var_5ch - *var_50h;\n        fcn.00405d90(var_5ch, 1, var_49h);\n        if ('\\0' < var_50h[1]) {\n            var_50h = var_50h + 1;\n        }\n    }\n    uVar2 = fcn.00405a80();\n    _var_90h = fcn.004027a0();\n    if (0 < _var_90h) {\n        uVar6 = fcn.004027a0();\n        if (uVar2 < uVar6) {\n            var_54h = fcn.004027a0();\n            var_54h = var_54h - uVar2;\n            goto code_r0x00405332;\n        }\n    }\n    var_54h = 0;\ncode_r0x00405332:\n    var_64h = fcn.00402760();\n    var_64h = var_64h & 0x1c0;\n    if ((var_64h == 0x40) || (var_64h == 0x100)) {\n        if (var_64h == 0x100) {\n            uVar8 = 0;\n            uVar4 = fcn.00403220(0);\n            puVar7 = fcn.00404aa0(arg_8h, &var_b8h, arg_10h, arg_14h, uVar4, uVar8);\n            puVar7 = fcn.00404a50(arg_8h, &var_c0h, *puVar7, puVar7[1], arg_1ch & 0xff, var_54h);\n            arg_10h = *puVar7;\n            arg_14h = puVar7[1];\n            var_54h = 0;\n        }\n        else {\n            uVar8 = 0;\n            uVar4 = fcn.00403220(0);\n            puVar7 = fcn.00404aa0(arg_8h, &var_c8h, arg_10h, arg_14h, uVar4, uVar8);\n            arg_10h = *puVar7;\n            arg_14h = puVar7[1];\n        }\n    }\n    else {\n        puVar7 = fcn.00404a50(arg_8h, &var_a8h, arg_10h, arg_14h, arg_1ch & 0xff, var_54h);\n        uVar4 = *puVar7;\n        uVar8 = puVar7[1];\n        var_54h = 0;\n        arg_1ch_01 = 0;\n        arg_18h_00 = fcn.00403220(0);\n        puVar7 = fcn.00404aa0(arg_8h, &var_b0h, uVar4, uVar8, arg_18h_00, arg_1ch_01);\n        arg_10h = *puVar7;\n        arg_14h = puVar7[1];\n    }\n    arg_8h_00 = uVar2 - var_48h;\n    arg_1ch_00 = var_48h;\n    uVar4 = fcn.00403220(var_48h);\n    puVar7 = fcn.00404aa0(arg_8h, &var_d0h, arg_10h, arg_14h, uVar4, arg_1ch_00);\n    uVar4 = *puVar7;\n    uVar8 = puVar7[1];\n    fcn.004027c0(0, 0);\n    fcn.00404a50(arg_8h, arg_ch, uVar4, uVar8, arg_1ch & 0xff, var_54h);\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    fcn.004032a0();\n    var_4h = 0xffffffff;\n    fcn.004032a0();\n    *in_FS_OFFSET = var_ch;\n    fcn.00409e05(arg_8h_00);\n    return;\n}\n",
        "token_count": 2198
    },
    "00405630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.00405630(uint *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x425800;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x435014 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    piVar2 = fcn.00404180(uVar1, param_1, *param_1);\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))();\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 232
    },
    "004056a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.004056a0(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *in_ECX = arg_8h;\n    piVar1 = fcn.00404180(*in_ECX);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))();\n    }\n    return in_ECX;\n}\n",
        "token_count": 126
    },
    "00405740": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00405740(uint param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4258ed;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    iVar2 = fcn.00404180();\n    if (iVar2 != 0) {\n        fcn.00403fd0(param_1);\n        var_4h = 0;\n        cVar1 = fcn.00403f30();\n        if (cVar1 != '\\0') {\n            var_24h = 0;\n            var_4h = CONCAT31(var_4h._1_3_, 1);\n            iVar2 = fcn.00405c10();\n            if (iVar2 == -1) {\n                var_24h = 4;\n            }\n            var_4h = 0;\n            fcn.004041a0(var_24h, 0);\n        }\n        var_4h = 0xffffffff;\n        fcn.00403f50();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.00409e05(unaff_EDI);\n    return;\n}\n",
        "token_count": 390
    },
    "00405950": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405950(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (*(in_ECX + 0x38) == 0) {\n        var_4h = 4;\n    }\n    else {\n        var_4h = 0;\n    }\n    fcn.00402670(arg_8h | var_4h, arg_ch & 0xff);\n    return;\n}\n",
        "token_count": 120
    },
    "004061a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004061a0(uint arg_8h)\n\n{\n    int32_t *arg_8h_00;\n    uint32_t uVar1;\n    uint arg_8h_01;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_02;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x425955;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x435014 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_02 = 0;\n    var_10h = uVar1;\n    fcn.00407be7(0);\n    var_4h = 0;\n    var_1ch = *0x47e864;\n    arg_8h_01 = fcn.00401ef0(arg_8h_02, uVar1);\n    iVar2 = fcn.004020c0(arg_8h_01);\n    if ((iVar2 == 0) && (var_1ch == NULL)) {\n        iVar2 = fcn.004022b0(&var_1ch, arg_8h);\n        arg_8h_00 = var_1ch;\n        if (iVar2 == -1) {\n            fcn.00401c10();\n        }\n        else {\n            fcn.00402ef0(4);\n            fcn.004078d0(arg_8h_00);\n            var_4h._0_1_ = 1;\n            fcn.00409234(arg_8h_00);\n            (**(*arg_8h_00 + 4))();\n            *0x47e864 = var_1ch;\n            fcn.00407110();\n            var_4h = var_4h._1_3_ << 8;\n            fcn.00407140();\n        }\n    }\n    var_4h = 0xffffffff;\n    fcn.00407c3f();\n    *in_FS_OFFSET = var_ch;\n    fcn.00409e05(arg_8h_02);\n    return;\n}\n",
        "token_count": 567
    },
    "00406350": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040648e)\n// WARNING: Removing unreachable block (ram,0x004063de)\n// WARNING: Removing unreachable block (ram,0x004063b8)\n// WARNING: Removing unreachable block (ram,0x00406577)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00406350(uint param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    uint32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    int64_t iVar2;\n    uint var_8h;\n    uint32_t var_ch_2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint8_t var_22h;\n    uint8_t var_21h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_14h_2;\n    uchar *puStack20;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x42598d;\n    var_ch_3 = *in_FS_OFFSET;\n    var_14h_2 = *0x435014 ^ &stack0xfffffffc;\n    puStack20 = &stack0xffffff6c;\n    *in_FS_OFFSET = &var_ch_3;\n    var_20h = 0;\n    var_34h = fcn.00404830(var_ch_2);\n    var_30h = 0;\n    iVar2 = fcn.004027a0();\n    if ((iVar2 < 1) || (iVar2 = fcn.004027a0(),  iVar2 <= CONCAT44(var_30h, var_34h))) {\n        _var_3ch = 0;\n    }\n    else {\n        _var_3ch = fcn.004027a0();\n        _var_3ch = _var_3ch - CONCAT44(var_30h, var_34h);\n    }\n    _var_2ch = _var_3ch;\n    fcn.00403fd0(var_8h);\n    var_4h = 0;\n    cVar1 = fcn.00403f30();\n    if (cVar1 == '\\0') {\n        var_20h = var_20h | 4;\n    }\n    else {\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        var_40h = fcn.00402760();\n        if ((var_40h & 0x1c0) != 0x40) {\n            while (0 < _var_2ch) {\n                var_21h = fcn.00404160();\n                var_44h = fcn.00404180();\n                var_4ch = fcn.00406050(var_21h);\n                var_48h = var_4ch;\n                var_50h = fcn.00406010();\n                cVar1 = fcn.004060e0(&var_50h, &var_4ch);\n                if (cVar1 != '\\0') {\n                    var_20h = var_20h | 4;\n                    break;\n                }\n                _var_2ch = CONCAT44(var_28h - (var_2ch == 0), var_2ch + -1);\n            }\n        }\n        if (var_20h == 0) {\n            var_54h = fcn.00404180();\n            iVar2 = fcn.00407170(var_ch_2, var_34h, var_30h);\n            unaff_EDI = var_ch_2;\n            if (iVar2 != CONCAT44(var_30h, var_34h)) {\n                var_20h = var_20h | 4;\n            }\n        }\n        if (var_20h == 0) {\n            while (0 < _var_2ch) {\n                var_22h = fcn.00404160();\n                var_58h = fcn.00404180();\n                unaff_EDI = var_22h;\n                var_60h = fcn.00406050(unaff_EDI);\n                var_5ch = var_60h;\n                var_64h = fcn.00406010();\n                cVar1 = fcn.004060e0(&var_64h, &var_60h);\n                if (cVar1 != '\\0') {\n                    var_20h = var_20h | 4;\n                    break;\n                }\n                _var_2ch = CONCAT44(var_28h - (var_2ch == 0), var_2ch + -1);\n            }\n        }\n        fcn.004027c0(0, 0);\n        var_4h = 0;\n    }\n    fcn.004041a0(var_20h, 0);\n    var_4h = 0xffffffff;\n    fcn.00403f50();\n    *in_FS_OFFSET = var_ch_3;\n    fcn.00409e05(unaff_EDI);\n    return;\n}\n",
        "token_count": 1299
    },
    "004066b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004066b0(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4259cd;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x435014 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar2 = fcn.00404200(uVar1);\n    arg_8h_00 = 0x431675;\n    fcn.00401590(0x431675, in_ECX);\n    if (arg_8h != 0) {\n        fcn.004073b0(arg_8h);\n        var_4h = 0;\n        uVar2 = fcn.00407900(*in_ECX, arg_8h, uVar2);\n        in_ECX[1] = uVar2;\n        var_4h = 0xffffffff;\n        fcn.004070f0();\n    }\n    fcn.00401570();\n    *in_FS_OFFSET = var_ch;\n    fcn.00409e05(arg_8h_00);\n    return;\n}\n",
        "token_count": 354
    },
    "00406780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00406780(uint arg_8h)\n\n{\n    int32_t *arg_8h_00;\n    uint32_t uVar1;\n    uint arg_8h_01;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_02;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x425955;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x435014 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_02 = 0;\n    var_10h = uVar1;\n    fcn.00407be7(0);\n    var_4h = 0;\n    var_1ch = *0x47e860;\n    arg_8h_01 = fcn.00401ef0(arg_8h_02, uVar1);\n    iVar2 = fcn.004020c0(arg_8h_01);\n    if ((iVar2 == 0) && (var_1ch == NULL)) {\n        iVar2 = fcn.00407290(&var_1ch, arg_8h);\n        arg_8h_00 = var_1ch;\n        if (iVar2 == -1) {\n            fcn.00401c10();\n        }\n        else {\n            fcn.00402ef0(4);\n            fcn.004078d0(arg_8h_00);\n            var_4h._0_1_ = 1;\n            fcn.00409234(arg_8h_00);\n            (**(*arg_8h_00 + 4))();\n            *0x47e860 = var_1ch;\n            fcn.00407110();\n            var_4h = var_4h._1_3_ << 8;\n            fcn.00407140();\n        }\n    }\n    var_4h = 0xffffffff;\n    fcn.00407c3f();\n    *in_FS_OFFSET = var_ch;\n    fcn.00409e05(arg_8h_02);\n    return;\n}\n",
        "token_count": 565
    },
    "004068f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004068f0(uint arg_8h)\n\n{\n    int32_t *arg_8h_00;\n    uint32_t uVar1;\n    uint arg_8h_01;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_02;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x425955;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x435014 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_02 = 0;\n    var_10h = uVar1;\n    fcn.00407be7(0);\n    var_4h = 0;\n    var_1ch = *0x47e85c;\n    arg_8h_01 = fcn.00401ef0(arg_8h_02, uVar1);\n    iVar2 = fcn.004020c0(arg_8h_01);\n    if ((iVar2 == 0) && (var_1ch == NULL)) {\n        iVar2 = fcn.004071a0(&var_1ch, arg_8h);\n        arg_8h_00 = var_1ch;\n        if (iVar2 == -1) {\n            fcn.00401c10();\n        }\n        else {\n            fcn.00402ef0(4);\n            fcn.004078d0(arg_8h_00);\n            var_4h._0_1_ = 1;\n            fcn.00409234(arg_8h_00);\n            (**(*arg_8h_00 + 4))();\n            *0x47e85c = var_1ch;\n            fcn.00407110();\n            var_4h = var_4h._1_3_ << 8;\n            fcn.00407140();\n        }\n    }\n    var_4h = 0xffffffff;\n    fcn.00407c3f();\n    *in_FS_OFFSET = var_ch;\n    fcn.00409e05(arg_8h_02);\n    return;\n}\n",
        "token_count": 569
    },
    "004070f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004070f0(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        fcn.00404090();\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "00407140": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407140(int32_t *param_1)\n\n{\n    int32_t arg_8h;\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        arg_8h = *param_1;\n        fcn.00402f60();\n        fcn.00407440(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "00407440": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407440(uint *arg_8h)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h != NULL) {\n        (***arg_8h)(1);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00407810": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407810(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        fcn.00405c30();\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "00407830": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nchar * __cdecl fcn.00407830(char *arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    uint var_1h;\n    \n    var_8h = arg_8h;\n    do {\n        cVar1 = *var_8h;\n        var_8h = var_8h + 1;\n    } while (cVar1 != '\\0');\n    var_ch = var_8h + (1 - (arg_8h + 1));\n    pcVar2 = fcn.0040e323(var_ch, 1);\n    var_10h = pcVar2;\n    if (pcVar2 == NULL) {\n        fcn.00407d62();\n    }\n    for (; var_ch != NULL; var_ch = var_ch + -1) {\n        *var_10h = *arg_8h;\n        arg_8h = arg_8h + 1;\n        var_10h = var_10h + 1;\n    }\n    return pcVar2;\n}\n",
        "token_count": 287
    },
    "00407900": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407900(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x425aed;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00402ef0(0xc);\n    fcn.00407af0(arg_8h, arg_10h);\n    var_4h = 0;\n    for (; arg_ch != 0; arg_ch = arg_ch + -1) {\n        fcn.00407b50();\n    }\n    fcn.00407aa0();\n    var_4h = 0xffffffff;\n    fcn.00407ac0();\n    *in_FS_OFFSET = var_ch;\n    fcn.00409e05(arg_10h);\n    return;\n}\n",
        "token_count": 243
    },
    "004079a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004079a0(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h + 0x23 <= arg_8h) {\n        fcn.00401450();\n    }\n    iVar1 = fcn.004014e0(arg_8h + 0x23);\n    if (iVar1 == 0) {\n        fcn.0040fa21();\n    }\n    uVar2 = iVar1 + 0x23U & 0xffffffe0;\n    *(uVar2 - 4) = iVar1;\n    return uVar2;\n}\n",
        "token_count": 168
    },
    "0040804d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040804d(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4254d0;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x435014 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    if (param_1[0x13] != NULL) {\n        fcn.00408579(uVar1);\n    }\n    if (*(param_1 + 0x12) != '\\0') {\n        fcn.00408601();\n    }\n    fcn.004080ef();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 213
    },
    "0040a426": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0040a426(void)\n\n{\n    int16_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    if ((((piVar1 != NULL) && (*piVar1 == 0x5a4d)) && (piVar2 = *(piVar1 + 0x1e) + piVar1,  *piVar2 == 0x4550)) &&\n       ((piVar1 = 0x10b,  *(piVar2 + 6) == 0x10b && (0xe < piVar2[0x1d])))) {\n        return CONCAT31(1, piVar2[0x3a] != 0);\n    }\n    return piVar1 & 0xffffff00;\n}\n",
        "token_count": 188
    },
    "0040db58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040db58(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    \n    *(*(unaff_EBP + 0xc) + -4) = *(unaff_EBP + -0x30);\n    fcn.0040ac46(*(unaff_EBP + -0x34));\n    iVar1 = fcn.0040cfcc();\n    *(iVar1 + 0x10) = *(unaff_EBP + -0x38);\n    iVar1 = fcn.0040cfcc();\n    *(iVar1 + 0x14) = *(unaff_EBP + -0x3c);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((unaff_ESI[5] == 0x19930520 || ((unaff_ESI[5] == 0x19930521 || (unaff_ESI[5] == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x40) == 0 && (unaff_EBX != 0)))) {\n        iVar1 = fcn.0040af0c(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0040ae06(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "0040dc75": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040dc75(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_10h_00;\n    code *pcVar2;\n    int32_t arg_10h_01;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040a530(0x4331e0, 0x10);\n    arg_10h_01 = fcn.0040e2c0(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n    *(unaff_EBP + -0x1c) = arg_10h_01;\n    iVar3 = fcn.0040cfcc();\n    *(iVar3 + 0x18) = *(iVar3 + 0x18) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (arg_10h_01 != *(unaff_EBP + 0x14)) {\n        if ((arg_10h_01 < 0) || (iVar3 = *(unaff_EBP + 0x10),  *(iVar3 + 4) <= arg_10h_01)) goto code_r0x0040dd57;\n        iVar1 = *(iVar3 + 8);\n        arg_10h_00 = *(iVar1 + arg_10h_01 * 8);\n        *(unaff_EBP + -0x20) = arg_10h_00;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + arg_10h_01 * 8) != 0) {\n            fcn.0040e2dd(*(unaff_EBP + 8), iVar3, arg_10h_00);\n            fcn.0040de30(*(*(iVar3 + 8) + 4 + arg_10h_01 * 8), *(unaff_EBP + 8), 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        arg_10h_01 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = arg_10h_01;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040dd43();\n    if (arg_10h_01 == *(unaff_EBP + 0x14)) {\n        fcn.0040e2dd(*(unaff_EBP + 8), *(unaff_EBP + 0x10), arg_10h_01);\n        *in_FS_OFFSET = *(unaff_EBP + -0x10);\n        return;\n    }\ncode_r0x0040dd57:\n    fcn.0041192e();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 732
    },
    "0040dd43": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040dd43(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040cfcc();\n    if (0 < *(iVar1 + 0x18)) {\n        iVar1 = fcn.0040cfcc();\n        *(iVar1 + 0x18) = *(iVar1 + 0x18) + -1;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0040ec9d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040ec9d(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t iStack12;\n    uint uStack8;\n    \n    cVar4 = *(param_1 + 0x31);\n    if (cVar4 != 'F') {\n        if (cVar4 == 'N') {\n            if ((*param_1 & 8) != 0) {\n                return 1;\n            }\n            param_1[7] = 8;\n        }\n        else if (param_1[0xb] == 0) {\n            if (cVar4 < 'k') {\n                if (cVar4 == 'j') {\n                    param_1[0xb] = 5;\n                    return 1;\n                }\n                if (cVar4 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar4 = *pcVar1;\n                    if ((cVar4 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if ((cVar4 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if (((((cVar4 != 'd') && (cVar4 != 'i')) && (cVar4 != 'o')) && ((cVar4 != 'u' && (cVar4 != 'x'))))\n                       && (cVar4 != 'X')) {\n                        return 1;\n                    }\n                    param_1[0xb] = 9;\n                    return 1;\n                }\n                if (cVar4 == 'L') {\n                    param_1[0xb] = 8;\n                    return 1;\n                }\n                if (cVar4 == 'T') {\n                    param_1[0xb] = 0xd;\n                    return 1;\n                }\n                if (cVar4 != 'h') {\n                    return 1;\n                }\n                if (*param_1[4] == 'h') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 1;\n                }\n                else {\n                    uVar7 = 2;\n                }\n            }\n            else {\n                if (cVar4 != 'l') {\n                    if (cVar4 == 't') {\n                        param_1[0xb] = 7;\n                        return 1;\n                    }\n                    if (cVar4 == 'w') {\n                        param_1[0xb] = 0xc;\n                        return 1;\n                    }\n                    if (cVar4 == 'z') {\n                        param_1[0xb] = 6;\n                        return 1;\n                    }\n                    return 1;\n                }\n                if (*param_1[4] == 'l') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 4;\n                }\n                else {\n                    uVar7 = 3;\n                }\n            }\n            param_1[0xb] = uVar7;\n            return 1;\n        }\n        puVar6 = fcn.0041191b();\n        *puVar6 = 0x16;\n        fcn.0040fa11();\n        return 0;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    cVar4 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x0040ee9d:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x0040eea1:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0040eea4:\n            cVar4 = fcn.0040f2ea(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x0040ee49:\n                arg_8h = 0x10;\n                goto code_r0x0040eea4;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x0040ee5d;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0040ee31;\n                }\n            }\ncode_r0x0040eead:\n            cVar4 = fcn.0040f106();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.0040f0ac();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x0040eead;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x0040ee5d:\n            cVar4 = fcn.0040f257(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.0040f4ce();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x0040eead;\n            if (cVar4 == 'i') goto code_r0x0040ee9d;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.0040f43b();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.0040f4af();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x0040ee49;\n            }\n            goto code_r0x0040eea1;\n        }\ncode_r0x0040ee31:\n        cVar4 = fcn.0040f4e6();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(param_1 + 0xc) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n    uVar7 = param_1[8];\n    iStack12 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        uStack8._1_3_ = uStack8 >> 8;\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                    arg_ch = 1;\n                    iStack12 = 1;\n                }\n                goto code_r0x0040ef33;\n            }\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n        }\n        else {\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n        }\n        iStack12 = 1;\n        arg_ch = 1;\n    }\ncode_r0x0040ef33:\n    cVar4 = *(param_1 + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&uStack8 + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&uStack8 + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        iStack12 = arg_ch;\n    }\n    arg_14h = param_1 + 6;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.0040e751(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n        arg_ch = iStack12;\n    }\n    fcn.0040f67b(&uStack8, arg_ch, arg_14h);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.0040e751(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.0040f5d6(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.0040e751(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 2378
    },
    "0041222e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041222e(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    if (*(param_1 + 0x14) != '\\0') {\n        *(param_1 + 0x14) = 0;\n    }\n    puVar1 = fcn.0041191b();\n    *puVar1 = 0x22;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x14) = 0;\n    return 0x22;\n}\n",
        "token_count": 122
    },
    "0041582f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041582f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x47e83c, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0041191b();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.004118a2(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00419690": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nulong __cdecl fcn.00419690(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    ulong uVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040a530(0x433700, 0x10);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.0041191b();\n        *puVar1 = 0x16;\n        fcn.0040fa11();\n        uVar2 = 0xffffffffffffffff;\n    }\n    else {\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        fcn.0040fc9e(*(unaff_EBP + 8));\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.0041913f(*(unaff_EBP + 8));\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -0x1c) = uVar2 >> 0x20;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00419135(0x433700);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 355
    },
    "0041b441": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041b441(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_19h;\n    \n    if (*(unaff_EBP + -0x19) != '\\0') {\n        fcn.0040fb06(3);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0041f0ff": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f0ff(int16_t *arg_8h, int32_t arg_ch, int16_t *arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uStack24;\n    uint var_4h;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x0041f03c:\n            if (arg_ch != 0) {\n                piVar3 = arg_8h;\n                iVar5 = arg_ch;\n                if ((arg_14h == 0) || (arg_10h != NULL)) {\n                    do {\n                        if (*piVar3 == 0) break;\n                        piVar3 = piVar3 + 1;\n                        iVar5 = iVar5 + -1;\n                    } while (iVar5 != 0);\n                    if (iVar5 != 0) {\n                        if (arg_14h == -1) {\n                            iVar4 = arg_10h - piVar3;\n                            do {\n                                iVar1 = *(iVar4 + piVar3);\n                                *piVar3 = iVar1;\n                                piVar3 = piVar3 + 1;\n                                if (iVar1 == 0) break;\n                                iVar5 = iVar5 + -1;\n                            } while (iVar5 != 0);\n                        }\n                        else {\n                            iVar4 = arg_14h;\n                            if (arg_14h != 0) {\n                                do {\n                                    iVar1 = *arg_10h;\n                                    arg_10h = arg_10h + 1;\n                                    *piVar3 = iVar1;\n                                    piVar3 = piVar3 + 1;\n                                    if ((iVar1 == 0) || (iVar5 = iVar5 + -1,  iVar5 == 0)) break;\n                                    iVar4 = iVar4 + -1;\n                                } while (iVar4 != 0);\n                            }\n                            if (iVar4 == 0) {\n                                *piVar3 = 0;\n                            }\n                        }\n                        if (iVar5 != 0) {\n                            return 0;\n                        }\n                        if (arg_14h == -1) {\n                            arg_8h[arg_ch + -1] = 0;\n                            return 0x50;\n                        }\n                        *arg_8h = 0;\n                        puVar2 = fcn.0041191b();\n                        uStack24 = 0x22;\n                        goto code_r0x0041f05a;\n                    }\n                }\n                *arg_8h = 0;\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x0041f03c;\n    puVar2 = fcn.0041191b();\n    uStack24 = 0x16;\ncode_r0x0041f05a:\n    *puVar2 = uStack24;\n    fcn.0040fa11();\n    return uStack24;\n}\n",
        "token_count": 695
    },
    "0042482e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.0042482e(double param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    double dVar7;\n    uchar in_XMM0 [16];\n    double dVar8;\n    double dVar9;\n    double dVar10;\n    double dVar11;\n    double dStack12;\n    \n    iVar4 = 0;\n    while( true ) {\n        uVar2 = SUB162(in_XMM0 >> 0x30, 0) >> 4;\n        dVar6 = SUB168(in_XMM0, 0) & *0x430c60 | *0x430cd0;\n        dVar7 = SUB168(in_XMM0, 0) & *0x430c68 | *0x430cd8;\n        uVar1 = SUB82(*0x430c80 + dVar6, 0) & 0x7f0;\n        dVar11 = *0x430c98 & dVar7;\n        dVar9 = (*0x430c90 & dVar6) * *(uVar1 + 0x431170) - *0x430c70;\n        dVar6 = (dVar6 - (*0x430c90 & dVar6)) * *(uVar1 + 0x431170);\n        dVar8 = (dVar7 - dVar11) * *(uVar1 + 0x431178);\n        dVar7 = dVar6 + dVar9;\n        dVar11 = dVar8 + (dVar11 * *(uVar1 + 0x431178) - *0x430c78);\n        uVar3 = uVar2 - 1;\n        if (uVar3 < 0x7fe) {\n            iVar4 = (uVar2 - 0x3ff) + iVar4;\n            dVar10 = iVar4;\n            iVar5 = 0;\n            if (uVar1 + iVar4 * 0x400 == 0) {\n                iVar5 = 0x10;\n            }\n            return ((*0x430d28 * dVar11 + *0x430d38) * dVar11 + *0x430d48) * dVar11 * dVar11 +\n                   ((*0x430d20 * dVar7 + *0x430d30) * dVar7 + *0x430d40) * dVar7 * dVar7 * dVar7 * dVar7 * dVar7 +\n                   *0x430d50 * dVar7 + *(uVar1 + 0x430d68) + dVar10 * *0x430ca8 + (dVar8 & *(iVar5 + 0x430cb8)) +\n                   *(uVar1 + 0x430d60) + dVar9 + dVar10 * *0x430ca0 + (dVar6 & *(iVar5 + 0x430cb0));\n        }\n        dStack12 = -(*0x430ce0 == param_1);\n        if (SUB82(dStack12, 0) != 0) break;\n        if (uVar3 != 0xffffffff) {\n            if (uVar3 < 0x7ff) {\n                if (*0x430cd0 == (param_1 & *0x430c60 | *0x430cd0)) {\n                    return *0x430d08;\n                }\n                arg_14h = 0x3e9;\n                dStack12 = *0x430c60;\n            }\n            else if (((uVar2 & 0x7ff) < 0x7ff) || ((SUB84(param_1, 0) | param_1 >> 0x20 & 0xfffff) == 0)) {\n                dStack12 = -NAN;\n                arg_14h = 9;\n            }\n            else {\n                arg_14h = 0x3e9;\n            }\n            goto code_r0x00424a3a;\n        }\n        in_XMM0 = CONCAT88(dVar11, param_1 * *0x430cf0);\n        iVar4 = -0x34;\n    }\n    arg_14h = 8;\n    dStack12 = *0x430d00;\ncode_r0x00424a3a:\n    fcn.00422fd4(&param_1, &param_1, &dStack12, arg_14h);\n    return dStack12;\n}\n",
        "token_count": 1011
    },
    "0042528b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.0042528b(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uint16_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    \n    if (0 < *0x47e0bc) {\n        auVar1 = pshuflw(ZEXT216(arg_ch), ZEXT216(arg_ch), 0);\n        do {\n            if ((arg_8h & 0xfff) < 0xff1) {\n                uVar3 = SUB162(auVar1, 0);\n                uVar4 = SUB162(auVar1 >> 0x10, 0);\n                auVar2 = CONCAT214(-(*0x43159e == arg_8h[7]), \n                                   CONCAT212(-(*0x43159c == arg_8h[6]), \n                                             CONCAT210(-(*0x43159a == arg_8h[5]), \n                                                       CONCAT28(-(*0x431598 == arg_8h[4]), \n                                                                CONCAT26(-(*0x431596 == arg_8h[3]), \n                                                                         CONCAT24(-(*0x431594 == arg_8h[2]), \n                                                                                  CONCAT22(-(*0x431592 == arg_8h[1]), \n                                                                                           -(*0x431590 == *arg_8h)))))))\n                                  ) |\n                         CONCAT214(-(arg_8h[7] == uVar4), \n                                   CONCAT212(-(arg_8h[6] == uVar3), \n                                             CONCAT210(-(arg_8h[5] == uVar4), \n                                                       CONCAT28(-(arg_8h[4] == uVar3), \n                                                                CONCAT26(-(arg_8h[3] == uVar4), \n                                                                         CONCAT24(-(arg_8h[2] == uVar3), \n                                                                                  CONCAT22(-(arg_8h[1] == uVar4), \n                                                                                           -(*arg_8h == uVar3))))))));\n                uVar3 = SUB161(auVar2 >> 7, 0) & 1 | (SUB161(auVar2 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar2 >> 0x17, 0) & 1) << 2 | (SUB161(auVar2 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar2 >> 0x27, 0) & 1) << 4 | (SUB161(auVar2 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar2 >> 0x37, 0) & 1) << 6 | (SUB161(auVar2 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar2 >> 0x47, 0) & 1) << 8 | (SUB161(auVar2 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar2 >> 0x57, 0) & 1) << 10 | (SUB161(auVar2 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar2 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar2 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar2 >> 0x77, 0) & 1) << 0xe | SUB161(auVar2 >> 0x7f, 0) << 0xf;\n                if (uVar3 != 0) goto code_r0x00425327;\n                iVar5 = 0x10;\n            }\n            else {\n                if (*arg_8h == arg_ch) {\n                    return arg_8h;\n                }\n                if (*arg_8h == 0) {\n                    return NULL;\n                }\n                iVar5 = 2;\n            }\n            arg_8h = arg_8h + iVar5;\n        } while( true );\n    }\n    uVar3 = *arg_8h;\n    while ((uVar3 != 0 && (uVar3 != arg_ch))) {\n        arg_8h = arg_8h + 1;\n        uVar3 = *arg_8h;\n    }\ncode_r0x004252c6:\n    return (uVar3 != arg_ch) - 1 & arg_8h;\ncode_r0x00425327:\n    iVar5 = 0;\n    if (uVar3 != 0) {\n        for (; (uVar3 >> iVar5 & 1) == 0; iVar5 = iVar5 + 1) {\n        }\n    }\n    arg_8h = arg_8h + iVar5;\n    uVar3 = *arg_8h;\n    goto code_r0x004252c6;\n}\n",
        "token_count": 1127
    },
    "0040ea69": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.0040ea69(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    uint arg_ch;\n    char cVar1;\n    uint *puVar2;\n    uint32_t arg_8h;\n    uint uVar3;\n    uint unaff_EBX;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.0040f557();\n    if (cVar1 != '\\0') {\n        if (*(param_1 + 0x10) == 0) {\ncode_r0x0040ea89:\n            puVar2 = fcn.0041191b();\n            *puVar2 = 0x16;\n            fcn.0040fa11();\n        }\n        else {\n            do {\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                if (*(param_1 + 0x450) == 2) {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0040eb2f:\n                cVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x31) = cVar1;\n                if (cVar1 != '\\0') {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0040eb42;\n                    arg_ch = *(param_1 + 0x1c);\n                    arg_8h = *(param_1 + 0x31);\n                    uVar3 = fcn.0040e951(arg_8h, arg_ch);\n                    *(param_1 + 0x1c) = uVar3;\n    // switch table (8 cases) at 0x40eb6d\n                    switch(uVar3) {\n                    case 0:\n                        cVar1 = fcn.0040ebca();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0040eb2f;\n                    case 2:\n                        cVar1 = fcn.0040eb8d();\n                        break;\n                    case 3:\n                        cVar1 = fcn.0040f01d();\n                        break;\n                    case 4:\n                        goto code_r0x0040eb09;\n                    case 5:\n                        cVar1 = fcn.0040ec77();\n                        break;\n                    case 6:\n                        cVar1 = fcn.0040ec9d();\n                        break;\n                    case 7:\n                        cVar1 = fcn.0040edeb(arg_8h, arg_ch, arg_8h, unaff_EBX, unaff_retaddr, param_2, param_3, param_4\n                                             , param_5, param_6, param_7);\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0040ea9c;\n                    default:\n                        goto code_r0x0040ea89;\n                    }\n                    if (cVar1 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0040eb2f;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\ncode_r0x0040eb42:\n                cVar1 = fcn.0040f572();\n            } while (cVar1 != '\\0');\n        }\n    }\ncode_r0x0040ea9c:\n    return 0xffffffff;\ncode_r0x0040eb09:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0040eb2f;\n}\n",
        "token_count": 964
    },
    "00424f90": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.00424f90(void)\n\n{\n    uint32_t uVar1;\n    float10 in_ST0;\n    uint32_t uStack28;\n    uint16_t uStack24;\n    \n    if (1 < *0x47e0bc) {\n        return in_ST0;\n    }\n    uStack28 = in_ST0 >> 0x20;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    uVar1 = in_ST0 < 0;\n    if (uStack24 < 0x3fff) {\n        return 0;\n    }\n    if (uStack28 < 0) {\n        if (uStack24 < 0x401e) {\n            return (uStack28 >> (0x3eU - uStack24 & 0x1f) ^ -uVar1) + uVar1;\n        }\n        if (((uStack24 < 0x401f) && (uVar1 != 0)) && (uStack28 == 0x80000000)) {\n            return uStack28;\n        }\n    }\n    return 0x80000000;\n}\n",
        "token_count": 262
    },
    "00402a10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n\nvoid fcn.00402a10(void)\n\n{\n    char cVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_48h;\n    uint32_t var_40h;\n    uint var_14h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x42557d;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    for (var_40h = 0; var_4h = 0xffffffff,  var_40h < 0x47400; var_40h = var_40h + 1) {\n        if (var_40h < 0x47414) {\n            cVar1 = *(var_40h + 0x435a70);\n            *(var_40h + 0x435a70) = *(var_40h + 0x435a70) + (*(var_40h + 0x435a70) ^ *(var_40h % 4 + 0x47ce70));\n            *(var_40h + 0x435a70) = *(var_40h + 0x435a70) - cVar1;\n        }\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.00409e05(4);\n    return;\n}\n",
        "token_count": 346
    },
    "00402b70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.00402b70(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_40h;\n    uint var_14h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4255bd;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    fcn.00402f70(10);\n    uVar2 = fcn.00402b50(0x10c);\n    for (var_40h = 0; var_40h < uVar2; var_40h = var_40h + 1) {\n        if (var_40h < uVar2 + 0x14) {\n            cVar1 = *(var_40h + 0x47ce88);\n            *(var_40h + 0x47ce88) = *(var_40h + 0x47ce88) + (*(var_40h + 0x47ce88) ^ *(var_40h % 4 + 0x47ce70));\n            *(var_40h + 0x47ce88) = *(var_40h + 0x47ce88) - cVar1;\n        }\n        var_4h = 0xffffffff;\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.00409e05(unaff_EBX);\n    return;\n}\n",
        "token_count": 415
    },
    "004045e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004045e0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    int32_t arg_10h;\n    uint arg_8h_00;\n    int32_t arg_8h_01;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uchar var_ah;\n    uint var_9h;\n    uint32_t var_4h;\n    \n    var_4h = *0x435014 ^ &stack0xfffffffc;\n    var_1ch = arg_8h;\n    var_14h = *(arg_8h + 0x10);\n    var_20h = fcn.004047e0();\n    var_10h = var_18h;\n    var_ah = var_14h < 0x10;\n    var_9h._0_1_ = var_ah;\n    if (var_ah) {\n        arg_8h_01 = 0x10;\n        fcn.00405bc0(var_18h, var_20h, 0x10);\n        *(var_10h + 0x10) = var_14h;\n        *(var_10h + 0x14) = 0xf;\n    }\n    else {\n        uVar1 = fcn.00404200();\n        var_28h = fcn.00405a00(uVar1);\n        var_2ch = var_14h | 0xf;\n        piVar2 = fcn.00406d30(&var_2ch, &var_28h);\n        var_24h = *piVar2;\n        arg_8h_01 = var_24h + 1;\n        *NULL = fcn.00405b60(arg_8h_01);\n        fcn.00406d60(var_10h, &var_9h + 1);\n        arg_10h = var_14h + 1;\n        uVar1 = var_20h;\n        arg_8h_00 = fcn.00404820(stack0xfffffff4);\n        fcn.00405bc0(arg_8h_00, uVar1, arg_10h);\n        *(var_10h + 0x10) = var_14h;\n        *(var_10h + 0x14) = var_24h;\n    }\n    fcn.00409e05(arg_8h_01);\n    return;\n}\n",
        "token_count": 633
    },
    "00405850": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00405850(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x425920;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    var_4h = 0;\n    cVar1 = fcn.00402730();\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.00402760();\n        if ((uVar2 & 2) != 0) {\n            fcn.00404180();\n            iVar3 = fcn.00405c10();\n            if (iVar3 == -1) {\n                fcn.004041a0(4, 0);\n            }\n        }\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 269
    },
    "00407eba": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00407eba(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040a0ed(8);\n    fcn.00407be7(0);\n    piVar1 = *0x47dc2c;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.00401ef0();\n    iVar3 = fcn.004020c0(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.004083ae(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.00401c10();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.00409234(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x426130)();\n        (*pcVar2)();\n        *0x47dc2c = piVar1;\n    }\n    fcn.00407c3f();\n    fcn.0040a0ca();\n    return;\n}\n",
        "token_count": 423
    },
    "00408e3b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00408e3b(uchar *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t **var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = arg_10h;\n    uVar5 = arg_ch;\n    if ((-1 < arg_10h) && ((0 < arg_10h || (arg_ch != 0)))) {\n        do {\n            if (*in_ECX[7] == 0) {\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = *in_ECX[0xb];\n            }\n            var_ch = in_ECX + 0xb;\n            var_8h = uVar4 >> 0x1f;\n            if ((var_8h < 0) || ((-1 < uVar4 || var_8h < 0 && (uVar4 == 0)))) {\n                pcVar1 = *(*in_ECX + 0x1c);\n                (**0x426130)();\n                iVar2 = (*pcVar1)();\n                if (iVar2 == -1) break;\n                bVar6 = uVar5 != 0;\n                uVar5 = uVar5 - 1;\n                iVar3 = iVar3 + -1 + bVar6;\n                uVar4 = 1;\n                *arg_8h = iVar2;\n            }\n            else {\n                if ((iVar3 <= var_8h) && ((iVar3 < var_8h || (uVar5 < uVar4)))) {\n                    uVar4 = uVar5;\n                    var_8h = iVar3;\n                }\n                fcn.0040b030(arg_8h, *in_ECX[7], uVar4);\n                bVar6 = uVar5 < uVar4;\n                uVar5 = uVar5 - uVar4;\n                iVar3 = (iVar3 - var_8h) - bVar6;\n                **var_ch = **var_ch - uVar4;\n                *in_ECX[7] = *in_ECX[7] + uVar4;\n            }\n            arg_8h = arg_8h + uVar4;\n            if ((iVar3 < 1) && ((iVar3 < 0 || (uVar5 == 0)))) break;\n        } while( true );\n    }\n    return CONCAT44((arg_10h - iVar3) - (arg_ch < uVar5), arg_ch - uVar5);\n}\n",
        "token_count": 627
    },
    "0040900f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0040900f(uchar *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t **var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = arg_10h;\n    uVar5 = arg_ch;\n    if ((-1 < arg_10h) && ((0 < arg_10h || (arg_ch != 0)))) {\n        do {\n            if (*in_ECX[8] == 0) {\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = *in_ECX[0xc];\n            }\n            var_ch = in_ECX + 0xc;\n            var_8h = uVar4 >> 0x1f;\n            if ((var_8h < 0) || ((-1 < uVar4 || var_8h < 0 && (uVar4 == 0)))) {\n                pcVar1 = *(*in_ECX + 0xc);\n                (**0x426130)(*arg_8h);\n                iVar2 = (*pcVar1)();\n                if (iVar2 == -1) break;\n                bVar6 = uVar5 != 0;\n                uVar5 = uVar5 - 1;\n                iVar3 = iVar3 + -1 + bVar6;\n                uVar4 = 1;\n            }\n            else {\n                if ((iVar3 <= var_8h) && ((iVar3 < var_8h || (uVar5 < uVar4)))) {\n                    uVar4 = uVar5;\n                    var_8h = iVar3;\n                }\n                fcn.0040b030(*in_ECX[8], arg_8h, uVar4);\n                bVar6 = uVar5 < uVar4;\n                uVar5 = uVar5 - uVar4;\n                iVar3 = (iVar3 - var_8h) - bVar6;\n                **var_ch = **var_ch - uVar4;\n                *in_ECX[8] = *in_ECX[8] + uVar4;\n            }\n            arg_8h = arg_8h + uVar4;\n            if ((iVar3 < 1) && ((iVar3 < 0 || (uVar5 == 0)))) break;\n        } while( true );\n    }\n    return CONCAT44((arg_10h - iVar3) - (arg_ch < uVar5), arg_ch - uVar5);\n}\n",
        "token_count": 619
    },
    "004190b4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004190b4(uint8_t **arg_8h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint arg_8h_00;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t *arg_ch;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.0041191b();\n        *puVar2 = 0x16;\n        fcn.0040fa11();\n    }\n    else if (((arg_8h[3] >> 0xd & 1) != 0) && ((arg_8h[3] >> 0xc & 1) == 0)) {\n        if ((arg_8h[3] >> 1 & 1) == 0) {\n            LOCK();\n            arg_8h[3] = arg_8h[3] | 1;\n            if ((arg_8h[3] & 0x4c0) == 0) {\n                fcn.0041a449(arg_8h);\n            }\n            *arg_8h = arg_8h[1];\n            puVar3 = arg_8h[6];\n            arg_ch = arg_8h[1];\n            arg_8h_00 = fcn.00416c93(arg_8h);\n            puVar3 = fcn.00419dc7(arg_8h_00, arg_ch, puVar3);\n            arg_8h[2] = puVar3;\n            puVar3 = arg_8h[2];\n            if ((puVar3 != NULL) && (puVar3 != 0xffffffff)) {\n                if ((arg_8h[3] & 6) == 0) {\n                    iVar4 = fcn.00416c93(arg_8h);\n                    if ((iVar4 == -1) || (iVar4 = fcn.00416c93(arg_8h),  iVar4 == -2)) {\n                        iVar4 = 0x435260;\n                    }\n                    else {\n                        iVar4 = fcn.00416c93(arg_8h);\n                        uVar5 = fcn.00416c93(arg_8h);\n                        iVar4 = *((iVar4 >> 6) * 4 + 0x47e460) + (uVar5 & 0x3f) * 0x38;\n                    }\n                    if ((*(iVar4 + 0x28) & 0x82) == 0x82) {\n                        LOCK();\n                        arg_8h[3] = arg_8h[3] | 0x20;\n                    }\n                }\n                if (((arg_8h[6] == 0x200) && ((arg_8h[3] >> 6 & 1) != 0)) && ((arg_8h[3] & 0x100) == 0)) {\n                    arg_8h[6] = 0x1000;\n                }\n                arg_8h[2] = arg_8h[2] + -1;\n                uVar1 = **arg_8h;\n                *arg_8h = *arg_8h + 1;\n                return uVar1;\n            }\n            LOCK();\n            arg_8h[3] = arg_8h[3] | (puVar3 != NULL) * 8 + 8;\n            arg_8h[2] = NULL;\n        }\n        else {\n            LOCK();\n            arg_8h[3] = arg_8h[3] | 0x10;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 809
    },
    "0041cded": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041cded(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x0041cd58:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = 0;\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    iVar3 = arg_14h;\n                    piVar4 = arg_8h;\n                    iVar5 = arg_ch;\n                    if (arg_14h == -1) {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar4);\n                            *piVar4 = iVar1;\n                            piVar4 = piVar4 + 1;\n                            if (iVar1 == 0) break;\n                            iVar5 = iVar5 + -1;\n                        } while (iVar5 != 0);\n                    }\n                    else {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar4);\n                            *piVar4 = iVar1;\n                            piVar4 = piVar4 + 1;\n                            if ((iVar1 == 0) || (iVar5 = iVar5 + -1,  iVar5 == 0)) break;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                        if (iVar3 == 0) {\n                            *piVar4 = 0;\n                        }\n                    }\n                    if (iVar5 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = 0;\n                        return 0x50;\n                    }\n                    *arg_8h = 0;\n                    puVar2 = fcn.0041191b();\n                    uVar6 = 0x22;\n                    goto code_r0x0041cd46;\n                }\n                *arg_8h = 0;\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x0041cd58;\n    puVar2 = fcn.0041191b();\n    uVar6 = 0x16;\ncode_r0x0041cd46:\n    *puVar2 = uVar6;\n    fcn.0040fa11();\n    return uVar6;\n}\n",
        "token_count": 620
    },
    "004229da": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004229da(char *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint uVar6;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x0042295d:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = '\\0';\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    iVar3 = arg_14h;\n                    pcVar4 = arg_8h;\n                    iVar5 = arg_ch;\n                    if (arg_14h == -1) {\n                        do {\n                            cVar1 = pcVar4[arg_10h - arg_8h];\n                            *pcVar4 = cVar1;\n                            pcVar4 = pcVar4 + 1;\n                            if (cVar1 == '\\0') break;\n                            iVar5 = iVar5 + -1;\n                        } while (iVar5 != 0);\n                    }\n                    else {\n                        do {\n                            cVar1 = pcVar4[arg_10h - arg_8h];\n                            *pcVar4 = cVar1;\n                            pcVar4 = pcVar4 + 1;\n                            if ((cVar1 == '\\0') || (iVar5 = iVar5 + -1,  iVar5 == 0)) break;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                        if (iVar3 == 0) {\n                            *pcVar4 = '\\0';\n                        }\n                    }\n                    if (iVar5 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = '\\0';\n                        return 0x50;\n                    }\n                    *arg_8h = '\\0';\n                    puVar2 = fcn.0041191b();\n                    uVar6 = 0x22;\n                    goto code_r0x0042294b;\n                }\n                *arg_8h = '\\0';\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x0042295d;\n    puVar2 = fcn.0041191b();\n    uVar6 = 0x16;\ncode_r0x0042294b:\n    *puVar2 = uVar6;\n    fcn.0040fa11();\n    return uVar6;\n}\n",
        "token_count": 614
    },
    "0042429c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.0042429c(void)\n\n{\n    if (*0x435a60 == -2) {\n        fcn.0042427d();\n    }\n    return *0x435a60 != -1;\n}\n",
        "token_count": 49
    },
    "004242bb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004242bb(void)\n\n{\n    if ((*0x435a60 != -1) && (*0x435a60 != -2)) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x435a60);\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00407610": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00407610(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x435014 ^ &stack0xfffffffc;\n    var_8h = arg_8h | 0xf;\n    if ((var_8h <= arg_10h) && (arg_ch <= arg_10h - (arg_ch >> 1))) {\n        var_ch = (arg_ch >> 1) + arg_ch;\n        fcn.00405710(&var_8h, &var_ch);\n    }\n    fcn.00409e05(var_ch);\n    return;\n}\n",
        "token_count": 186
    },
    "0040a794": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040a803)\n// WARNING: Removing unreachable block (ram,0x0040a7c7)\n// WARNING: Removing unreachable block (ram,0x0040a87b)\n\nuint fcn.0040a794(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t in_XCR0;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x47e0bc = 0;\n    *0x435030 = *0x435030 | 1;\n    iVar3 = (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(10);\n    uVar4 = *0x435030;\n    if (iVar3 != 0) {\n        piVar1 = cpuid_basic_info(0);\n        puVar2 = cpuid_Version_info(1);\n        uVar5 = puVar2[3];\n        if (((piVar1[2] ^ 0x49656e69U | piVar1[3] ^ 0x6c65746eU | piVar1[1] ^ 0x756e6547U) == 0) &&\n           (((((uVar4 = *puVar2 & 0xfff3ff0,  uVar4 == 0x106c0 || (uVar4 == 0x20660)) || (uVar4 == 0x20670)) ||\n             ((uVar4 == 0x30650 || (uVar4 == 0x30660)))) || (uVar4 == 0x30670)))) {\n            *0x47e0c0 = *0x47e0c0 | 1;\n        }\n        if (*piVar1 < 7) {\n            uVar6 = 0;\n        }\n        else {\n            iVar3 = cpuid_Extended_Feature_Enumeration_info(7);\n            uVar6 = *(iVar3 + 4);\n            if ((uVar6 & 0x200) != 0) {\n                *0x47e0c0 = *0x47e0c0 | 2;\n            }\n        }\n        *0x47e0bc = 1;\n        uVar4 = *0x435030 | 2;\n        if ((uVar5 & 0x100000) != 0) {\n            uVar4 = *0x435030 | 6;\n            *0x47e0bc = 2;\n            if ((((uVar5 & 0x8000000) != 0) && ((uVar5 & 0x10000000) != 0)) && ((in_XCR0 & 6) == 6)) {\n                *0x47e0bc = 3;\n                uVar4 = *0x435030 | 0xe;\n                if ((uVar6 & 0x20) != 0) {\n                    *0x47e0bc = 5;\n                    uVar4 = *0x435030 | 0x2e;\n                    if (((uVar6 & 0xd0030000) == 0xd0030000) && ((in_XCR0 & 0xe0) == 0xe0)) {\n                        *0x435030 = *0x435030 | 0x6e;\n                        *0x47e0bc = 6;\n                        uVar4 = *0x435030;\n                    }\n                }\n            }\n        }\n    }\n    *0x435030 = uVar4;\n    return 0;\n}\n",
        "token_count": 856
    },
    "0040afc4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040afc4(int32_t *arg_8h, uint8_t *arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_10h;\n    uint lpArguments;\n    int32_t *var_8h;\n    uint8_t *var_4h;\n    \n    lpArguments = 0x19930520;\n    if (arg_ch != NULL) {\n        if ((*arg_ch & 0x10) != 0) {\n            iVar1 = *(*arg_8h + -4);\n            pcVar2 = *(iVar1 + 0x20);\n            arg_ch = *(iVar1 + 0x18);\n            (**0x426130)(*arg_8h + -4);\n            (*pcVar2)();\n            if (arg_ch == NULL) goto code_r0x0040b00b;\n        }\n        if ((*arg_ch & 8) != 0) {\n            lpArguments = 0x1994000;\n        }\n    }\ncode_r0x0040b00b:\n    var_8h = arg_8h;\n    var_4h = arg_ch;\n    (*_sym.imp.KERNEL32.dll_RaiseException)(0xe06d7363, 1, 3, &lpArguments);\n    return;\n}\n",
        "token_count": 286
    },
    "0041d499": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t __cdecl fcn.0041d499(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    char **ppcVar10;\n    char **arg_8h_00;\n    char **var_28h;\n    char **var_24h;\n    uint var_20h;\n    char **var_1ch;\n    char *var_18h;\n    char *var_14h;\n    char *var_10h;\n    char *var_ch;\n    char **var_8h;\n    char *var_4h;\n    \n    if (arg_ch == NULL) {\n        puVar3 = fcn.0041191b();\n        iVar8 = 0x16;\n        *puVar3 = 0x16;\n        fcn.0040fa11();\n    }\n    else {\n        pcVar7 = NULL;\n        *arg_ch = 0;\n        iVar8 = *arg_8h;\n        var_28h = NULL;\n        var_24h = NULL;\n        var_20h = 0;\n        ppcVar10 = var_28h;\n        while (var_28h = ppcVar10,  iVar8 != 0) {\n            var_4h = CONCAT13(var_4h >> 0x18, 0x3f2a);\n            iVar8 = fcn.00423880(iVar8, &var_4h);\n            if (iVar8 == 0) {\n                iVar8 = fcn.0041d0ce(*arg_8h, 0, 0, &var_28h);\n            }\n            else {\n                iVar8 = fcn.0041d17f(*arg_8h, iVar8, &var_28h);\n            }\n            ppcVar10 = var_28h;\n            var_8h = iVar8;\n            if (iVar8 != 0) goto code_r0x0041d07f;\n            arg_8h = arg_8h + 1;\n            iVar8 = *arg_8h;\n        }\n        var_4h = NULL;\n        var_ch = (var_24h - ppcVar10 >> 2) + 1;\n        uVar9 = ~-(var_24h < ppcVar10) & (var_24h - ppcVar10) + 3U >> 2;\n        var_8h = ppcVar10;\n        if (uVar9 != 0) {\n            uVar6 = 0;\n            do {\n                pcVar5 = *var_8h;\n                var_10h = pcVar5 + 1;\n                do {\n                    cVar1 = *pcVar5;\n                    pcVar5 = pcVar5 + 1;\n                } while (cVar1 != '\\0');\n                pcVar7 = pcVar5 + pcVar7 + (1 - var_10h);\n                var_8h = var_8h + 1;\n                uVar6 = uVar6 + 1;\n                var_4h = pcVar7;\n            } while (uVar6 != uVar9);\n        }\n        iVar8 = fcn.00412a3d(var_ch, var_4h, 1);\n        if (iVar8 == 0) {\n            iVar8 = -1;\n            var_8h = 0xffffffff;\n        }\n        else {\n            var_ch = iVar8 + var_ch * 4;\n            var_18h = var_ch;\n            if (ppcVar10 != var_24h) {\n                var_1ch = iVar8 - ppcVar10;\n                var_8h = ppcVar10;\n                do {\n                    var_14h = *var_8h;\n                    var_10h = var_14h;\n                    do {\n                        cVar1 = *var_10h;\n                        var_10h = var_10h + 1;\n                    } while (cVar1 != '\\0');\n                    var_10h = var_10h + (1 - (var_14h + 1));\n                    iVar4 = fcn.004229da(var_ch, var_4h + (var_18h - var_ch), var_14h, var_10h);\n                    if (iVar4 != 0) {\n                        fcn.0040fa3e(0, 0, 0, 0, 0);\n                        pcVar2 = swi(3);\n                        iVar8 = (*pcVar2)();\n                        return iVar8;\n                    }\n                    *(var_1ch + var_8h) = var_ch;\n                    var_8h = var_8h + 1;\n                    var_ch = var_ch + var_10h;\n                } while (var_8h != var_24h);\n            }\n            var_8h = NULL;\n            *arg_ch = iVar8;\n            iVar8 = 0;\n        }\n        fcn.0041582f(0);\ncode_r0x0041d07f:\n        uVar6 = 0;\n        uVar9 = ~-(var_24h < ppcVar10) & var_24h + (3 - ppcVar10) >> 2;\n        arg_8h_00 = ppcVar10;\n        var_1ch = ppcVar10;\n        var_18h = uVar9;\n        if (uVar9 != 0) {\n            do {\n                fcn.0041582f(*ppcVar10);\n                uVar6 = uVar6 + 1;\n                ppcVar10 = ppcVar10 + 1;\n                iVar8 = var_8h;\n                arg_8h_00 = var_28h;\n            } while (uVar6 != uVar9);\n        }\n        fcn.0041582f(arg_8h_00);\n    }\n    return iVar8;\n}\n",
        "token_count": 1349
    },
    "0041e383": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e383(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x38 + *((lpCriticalSection >> 6) * 4 + 0x47e460));\n    return;\n}\n",
        "token_count": 69
    },
    "0041e3a6": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e3a6(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x38 + *((lpCriticalSection >> 6) * 4 + 0x47e460));\n    return;\n}\n",
        "token_count": 72
    },
    "00420f49": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00420f49(uint8_t *arg_8h, uint32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    \n    if (arg_8h == NULL) {\n        arg_ch = 0;\n    }\n    else {\n        if (arg_ch != 0) {\n            if ((arg_ch & 0xffffff80) == 0) {\n                *arg_8h = arg_ch;\n                return 1;\n            }\n            if ((arg_ch & 0xfffff800) == 0) {\n                uVar3 = 0xc0;\n                iVar4 = 1;\n                iVar2 = iVar4;\n            }\n            else if ((arg_ch & 0xffff0000) == 0) {\n                if ((0xd7ff < arg_ch) && (arg_ch < 0xe000)) {\ncode_r0x00420fe7:\n                    iVar2 = fcn.00420ff4(arg_10h);\n                    return iVar2;\n                }\n                iVar4 = 2;\n                uVar3 = 0xe0;\n                iVar2 = iVar4;\n            }\n            else {\n                if (((arg_ch & 0xffe00000) != 0) || (0x10ffff < arg_ch)) goto code_r0x00420fe7;\n                iVar4 = 3;\n                uVar3 = 0xf0;\n                iVar2 = iVar4;\n            }\n            do {\n                uVar1 = arg_ch;\n                arg_ch = arg_ch >> 6;\n                arg_8h[iVar4] = uVar1 & 0x3f | 0x80;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            *arg_8h = arg_ch | uVar3;\n            *arg_10h = 0;\n            arg_10h[1] = 0;\n            return iVar2 + 1;\n        }\n        *arg_8h = arg_ch;\n    }\n    *arg_10h = arg_ch;\n    arg_10h[1] = arg_ch;\n    return 1;\n}\n",
        "token_count": 493
    },
    "0040991a": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.0040991a(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4254d0;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x435014 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    while (*0x435008 < 10) {\n        iVar1 = *0x435008 * 4;\n        *0x435008 = *0x435008 + 1;\n        pcVar3 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*(iVar1 + 0x47dcc0), uVar2);\n        if (pcVar3 != NULL) {\n            (**0x426130)();\n            (*pcVar3)();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 234
    },
    "004011d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004011d0(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    fcn.0040f76b(arg_8h, noname_1, arg_10h);\n    return;\n}\n",
        "token_count": 58
    },
    "004011f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004011f0(uint arg_8h)\n\n{\n    code **in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x435014 ^ &stack0xfffffffc;\n    *in_ECX = vtable.std::exception.0;\n    in_ECX[1] = NULL;\n    in_ECX[2] = NULL;\n    var_ch = arg_8h;\n    var_8h._0_1_ = 1;\n    fcn.0040ad61(&var_ch, in_ECX + 1);\n    fcn.00409e05(in_ECX);\n    return;\n}\n",
        "token_count": 190
    },
    "00401500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00401500(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_ch = *arg_ch + 0x23;\n    iVar1 = *(*arg_8h + -4);\n    uVar2 = *arg_8h - iVar1;\n    if ((uVar2 < 4) || (0x23 < uVar2)) {\n        fcn.0040fa21(4);\n    }\n    *arg_8h = iVar1;\n    return;\n}\n",
        "token_count": 174
    },
    "00401770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401770(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    uint *arg_ch_00;\n    uint var_ch;\n    uint var_4h;\n    \n    arg_ch_00 = &var_ch;\n    arg_8h_00 = (**(*in_ECX + 0xc))(arg_ch_00, arg_8h, arg_ch);\n    fcn.004016f0(arg_8h_00, arg_ch_00);\n    return;\n}\n",
        "token_count": 125
    },
    "004018e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.004018e0(code *param_1, code *param_2, uint param_3)\n\n{\n    int32_t *in_FS_OFFSET;\n    code *var_8h;\n    code *var_ch_2;\n    uint var_10h_2;\n    uint var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uchar auStack84 [12];\n    uint uStack72;\n    uint var_34h;\n    uchar *puStack32;\n    uint var_18h;\n    uint var_14h;\n    code **var_10h_3;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x42540d;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004018e0::var_ch_3;\n    puStack32 = &stack0xffffffac;\n    fcn.00403530(var_10h_2);\n    var_18h = fcn.00401820(&fcn.004018e0::var_34h, var_8h, var_ch_2, var_10h_2);\n    var_4h = 0;\n    uStack72 = 0x401949;\n    var_14h = var_18h;\n    fcn.004015b0(var_18h);\n    var_4h = 0xffffffff;\n    uStack72 = 0x401958;\n    fcn.004032a0();\n    *var_10h_3 = vtable.std::_System_error.0;\n    var_10h_3[3] = var_8h;\n    var_10h_3[4] = var_ch_2;\n    *in_FS_OFFSET = var_ch_3;\n    return var_10h_3;\n}\n",
        "token_count": 420
    },
    "00401e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00401e60(uint *arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_5ch;\n    uint var_30h;\n    uint var_4h;\n    \n    puVar1 = fcn.0040961c(&var_5ch);\n    puVar3 = &var_30h;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    puVar1 = &var_30h;\n    puVar3 = arg_8h;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 247
    },
    "00402b50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402b50(int32_t arg_8h)\n\n{\n    return arg_8h + 0x672;\n}\n",
        "token_count": 35
    },
    "00402ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402ce0(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00406350(0x47db78, 0x431660);\n    return param_1;\n}\n",
        "token_count": 52
    },
    "00402ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402ef0(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.0040b5b0();\n    return;\n}\n",
        "token_count": 41
    },
    "00402f70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __thiscall fcn.00402f70(int32_t *param_1, uint param_2)\n\n{\n    char cVar1;\n    uint arg_8h;\n    uint *puVar2;\n    uint32_t arg_1ch;\n    int32_t arg_18h;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint in_stack_ffffff70;\n    uint32_t uStack116;\n    uint var_60h;\n    uint var_58h;\n    uint var_50h;\n    int32_t *var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint8_t var_21h;\n    int32_t *var_20h;\n    uint var_1ch;\n    uint32_t var_14h_2;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x425645;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack116 = *0x435014 ^ &stack0xfffffffc;\n    puStack20 = &uStack116;\n    *in_FS_OFFSET = &var_ch_2;\n    var_28h = 0;\n    var_20h = param_1;\n    var_14h_2 = uStack116;\n    fcn.00403fd0(param_1);\n    var_4h = 0;\n    cVar1 = fcn.00403f30();\n    if (cVar1 != '\\0') {\n        var_38h = fcn.00402800(&var_50h);\n        var_4h._0_1_ = 1;\n        var_34h = var_38h;\n        var_40h = fcn.00406780(var_38h);\n        var_4h._0_1_ = 0;\n        fcn.00402030();\n        var_2ch = fcn.00402760();\n        var_2ch = var_2ch & 0xe00;\n        var_30h = var_8h;\n        var_4h = CONCAT31(var_4h._1_3_, 2);\n        var_21h = fcn.00404160();\n        arg_8h = fcn.00404180();\n        arg_1ch = var_21h;\n        arg_18h = var_20h + *(*var_20h + 4);\n        var_3ch = arg_8h;\n        puVar2 = fcn.00403610(arg_8h);\n        in_stack_ffffff70 = puVar2[1];\n        var_44h = fcn.00403ed0(&var_60h, *puVar2, in_stack_ffffff70, arg_8h, arg_18h, arg_1ch);\n        cVar1 = fcn.00403600();\n        if (cVar1 != '\\0') {\n            var_28h = var_28h | 4;\n        }\n        var_4h = 0;\n    }\n    fcn.004041a0(var_28h, 0);\n    var_48h = var_20h;\n    var_4h = 0xffffffff;\n    fcn.00403f50();\n    *in_FS_OFFSET = var_ch_2;\n    fcn.00409e05(in_stack_ffffff70);\n    return;\n}\n",
        "token_count": 841
    },
    "00403220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403220(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.004047e0();\n    return iVar1 + arg_8h;\n}\n",
        "token_count": 59
    },
    "004032c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004032c0(uint arg_8h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar1 = fcn.00404200();\n    uVar1 = fcn.00404820(uVar1);\n    fcn.004068a0(var_1h, uVar1);\n    fcn.00401580(0x431675);\n    fcn.00404700(arg_8h);\n    return in_ECX;\n}\n",
        "token_count": 147
    },
    "00403530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403530(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_20h;\n    uint8_t var_1ah;\n    uchar var_19h;\n    uint var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x42567d;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x435014 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00404200(var_10h);\n    uVar1 = fcn.00404820(&var_19h);\n    fcn.004068a0(var_1ah, uVar1);\n    var_4h = 0;\n    uVar1 = 0x431675;\n    fcn.00401590(0x431675, var_18h);\n    fcn.004045e0(arg_8h);\n    fcn.00401570();\n    var_4h = 0xffffffff;\n    *in_FS_OFFSET = var_ch;\n    fcn.00409e05(uVar1);\n    return;\n}\n",
        "token_count": 291
    },
    "004042e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004042e0(int32_t param_1)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0xf;\n    var_1h._0_1_ = 0;\n    fcn.00405b90(param_1, &var_1h);\n    return;\n}\n",
        "token_count": 132
    },
    "004043b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004043b0(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00405ba0(arg_8h, arg_ch, arg_10h & 0xff);\n    var_1h._0_1_ = 0;\n    fcn.00405b90(arg_8h + arg_ch, &var_1h);\n    return;\n}\n",
        "token_count": 140
    },
    "004044a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004044a0(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00405bc0(arg_8h, arg_10h, arg_ch);\n    var_1h._0_1_ = 0;\n    fcn.00405b90(arg_8h + arg_ch, &var_1h);\n    return;\n}\n",
        "token_count": 134
    },
    "00404580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00404580(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00405bc0(arg_8h, arg_ch, arg_10h);\n    fcn.00405bc0(arg_8h + arg_10h, arg_14h, arg_18h);\n    var_1h._0_1_ = 0;\n    fcn.00405b90(arg_10h + arg_18h + arg_8h, &var_1h);\n    return;\n}\n",
        "token_count": 182
    },
    "00405a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid fcn.00405a00(void)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x435014 ^ &stack0xfffffffc;\n    uVar1 = fcn.00404200();\n    var_8h = fcn.00406010(uVar1);\n    var_10h = 0x10;\n    piVar2 = fcn.00405710(&var_8h, &var_10h);\n    var_14h = *piVar2;\n    var_18h = var_14h + -1;\n    var_1ch = fcn.004014d0();\n    fcn.00406d30(&var_1ch, &var_18h);\n    fcn.00409e05(var_1ch);\n    return;\n}\n",
        "token_count": 253
    },
    "00405aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405aa0(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = fcn.00404820(in_ECX);\n    puVar2 = fcn.00404820(arg_8h);\n    *puVar1 = *puVar2;\n    puVar1[1] = puVar2[1];\n    puVar1[2] = puVar2[2];\n    puVar1[3] = puVar2[3];\n    puVar1[4] = puVar2[4];\n    puVar1[5] = puVar2[5];\n    return;\n}\n",
        "token_count": 174
    },
    "00405b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405b00(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_ECX;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00404820(arg_8h);\n    fcn.00405fa0(arg_8h_00);\n    return in_ECX;\n}\n",
        "token_count": 82
    },
    "00405bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405bc0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040b030(arg_8h, arg_ch, arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 57
    },
    "00405d90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.00405d90(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.004060c0(arg_8h);\n    iVar1 = *(in_ECX + 0x10);\n    if (*(in_ECX + 0x14) - iVar1 < arg_ch) {\n        in_ECX = fcn.00406e50(arg_ch, 0, arg_8h, arg_ch, arg_10h & 0xff);\n    }\n    else {\n        *(in_ECX + 0x10) = iVar1 + arg_ch;\n        iVar2 = fcn.004047e0();\n        iVar2 = iVar2 + arg_8h;\n        fcn.00405bc0(iVar2 + arg_ch, iVar2, (iVar1 - arg_8h) + 1);\n        fcn.00405ba0(iVar2, arg_ch, arg_10h & 0xff);\n    }\n    return in_ECX;\n}\n",
        "token_count": 301
    },
    "00405e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00405e40(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t arg_1ch)\n\n{\n    uint var_4h;\n    \n    fcn.00405bc0(arg_8h, arg_ch, arg_14h);\n    fcn.00405ba0(arg_8h + arg_14h, arg_18h, arg_1ch & 0xff);\n    fcn.00405bc0(arg_8h + arg_14h + arg_18h, arg_ch + arg_14h, (arg_10h - arg_14h) + 1);\n    return;\n}\n",
        "token_count": 169
    },
    "00405f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405f40(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00405bc0(arg_8h, arg_ch, arg_10h);\n    fcn.00405ba0(arg_8h + arg_10h, arg_14h, arg_18h & 0xff);\n    var_1h._0_1_ = 0;\n    fcn.00405b90(arg_10h + arg_14h + arg_8h, &var_1h);\n    return;\n}\n",
        "token_count": 189
    },
    "00405fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nint32_t __cdecl fcn.00405fa0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint noname_0;\n    uint arg_ch;\n    int32_t in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00404820(arg_8h);\n    if (in_ECX != iVar1) {\n        noname_0 = fcn.00404200();\n        arg_ch = fcn.00404200();\n        fcn.00404220(0);\n        fcn.004070d0(noname_0, arg_ch);\n        fcn.00404700(arg_8h);\n    }\n    return in_ECX;\n}\n",
        "token_count": 187
    },
    "00406680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406680(uint noname_0, uint arg_ch)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00404820(arg_ch);\n    fcn.00407380();\n    return in_ECX;\n}\n",
        "token_count": 60
    },
    "004068a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004068a0(uint noname_0, uint arg_ch)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00404820(arg_ch);\n    fcn.00407410();\n    return in_ECX;\n}\n",
        "token_count": 61
    },
    "00406a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.00406a10(uint32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint32_t arg_8h_00;\n    uint *in_ECX;\n    uint *arg_8h_01;\n    uint32_t uVar4;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x435014 ^ &stack0xfffffffc;\n    uVar1 = fcn.00405a00();\n    if (uVar1 < arg_8h) {\n        fcn.004015a0();\n    }\n    uVar1 = in_ECX[5];\n    uVar4 = arg_8h;\n    uVar2 = fcn.004073e0(arg_8h);\n    uVar3 = fcn.00404200();\n    arg_8h_00 = -(0xfffffffe < uVar2) | uVar2 + 1;\n    var_8h = fcn.00405b60(arg_8h_00);\n    fcn.00401570(arg_8h_00, uVar4, uVar3);\n    in_ECX[4] = arg_8h;\n    in_ECX[5] = uVar2;\n    arg_10h = arg_10h & 0xff;\n    uVar3 = fcn.00404820(var_8h);\n    fcn.004043b0(uVar3, arg_8h, arg_10h);\n    if (uVar1 < 0x10) {\n        fcn.00406d60(in_ECX, &var_8h);\n    }\n    else {\n        arg_8h_01 = *in_ECX;\n        fcn.004056f0(arg_8h_01, uVar1 + 1);\n        *in_ECX = var_8h;\n        in_ECX = arg_8h_01;\n    }\n    fcn.00409e05(in_ECX);\n    return;\n}\n",
        "token_count": 511
    },
    "00406b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.00406b00(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint32_t arg_8h_00;\n    uint *in_ECX;\n    uint *arg_8h_01;\n    uint32_t uVar4;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x435014 ^ &stack0xfffffffc;\n    uVar1 = fcn.00405a00();\n    if (uVar1 < arg_8h) {\n        fcn.004015a0();\n    }\n    uVar1 = in_ECX[5];\n    uVar4 = arg_8h;\n    uVar2 = fcn.004073e0(arg_8h);\n    uVar3 = fcn.00404200();\n    arg_8h_00 = -(0xfffffffe < uVar2) | uVar2 + 1;\n    var_8h = fcn.00405b60(arg_8h_00);\n    fcn.00401570(arg_8h_00, uVar4, uVar3);\n    in_ECX[4] = arg_8h;\n    in_ECX[5] = uVar2;\n    uVar3 = fcn.00404820(var_8h);\n    fcn.004044a0(uVar3, arg_8h, arg_10h);\n    if (uVar1 < 0x10) {\n        fcn.00406d60(in_ECX, &var_8h);\n    }\n    else {\n        arg_8h_01 = *in_ECX;\n        fcn.004056f0(arg_8h_01, uVar1 + 1);\n        *in_ECX = var_8h;\n        in_ECX = arg_8h_01;\n    }\n    fcn.00409e05(in_ECX);\n    return;\n}\n",
        "token_count": 494
    },
    "00406bf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406bf0(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint arg_8h_01;\n    uint arg_ch_00;\n    uint *in_ECX;\n    int32_t arg_10h_00;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x435014 ^ &stack0xfffffffc;\n    arg_10h_00 = in_ECX[4];\n    iVar2 = fcn.00405a00();\n    if (iVar2 - arg_10h_00 < arg_8h) {\n        fcn.004015a0();\n    }\n    uVar1 = in_ECX[5];\n    uVar3 = fcn.004073e0(arg_10h_00 + arg_8h);\n    fcn.00404200();\n    var_8h = fcn.00405b60(-(0xfffffffe < uVar3) | uVar3 + 1);\n    fcn.00401570();\n    in_ECX[4] = arg_10h_00 + arg_8h;\n    in_ECX[5] = uVar3;\n    arg_8h_01 = fcn.00404820(var_8h);\n    if (uVar1 < 0x10) {\n        fcn.00404580(arg_8h_01, in_ECX, arg_10h_00, arg_10h, arg_14h);\n        fcn.00406d60(in_ECX, &var_8h);\n    }\n    else {\n        arg_8h_00 = *in_ECX;\n        arg_ch_00 = fcn.00404820(arg_8h_00);\n        fcn.00404580(arg_8h_01, arg_ch_00, arg_10h_00, arg_10h, arg_14h);\n        fcn.004056f0(arg_8h_00, uVar1 + 1);\n        *in_ECX = var_8h;\n    }\n    fcn.00409e05(arg_8h_01);\n    return;\n}\n",
        "token_count": 579
    },
    "00406d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406d60(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_4h;\n    \n    uVar1 = fcn.00404820(arg_8h);\n    uVar1 = fcn.00404820(uVar1);\n    puVar2 = fcn.004011a0(4, uVar1);\n    puVar3 = fcn.00404820(arg_ch);\n    *puVar2 = *puVar3;\n    return;\n}\n",
        "token_count": 129
    },
    "00406da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406da0(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x425a00;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    if (0xfff < arg_ch) {\n        fcn.00401500(&arg_8h, &arg_ch);\n    }\n    fcn.00409e48(arg_8h);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 148
    },
    "00406e50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406e50(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint arg_8h_01;\n    uint arg_ch_00;\n    uint *in_ECX;\n    int32_t arg_10h_00;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x435014 ^ &stack0xfffffffc;\n    arg_10h_00 = in_ECX[4];\n    iVar2 = fcn.00405a00();\n    if (iVar2 - arg_10h_00 < arg_8h) {\n        fcn.004015a0();\n    }\n    uVar1 = in_ECX[5];\n    uVar3 = fcn.004073e0(arg_10h_00 + arg_8h);\n    fcn.00404200();\n    var_8h = fcn.00405b60(-(0xfffffffe < uVar3) | uVar3 + 1);\n    fcn.00401570();\n    in_ECX[4] = arg_10h_00 + arg_8h;\n    in_ECX[5] = uVar3;\n    arg_8h_01 = fcn.00404820(var_8h);\n    if (uVar1 < 0x10) {\n        fcn.00405e40(arg_8h_01, in_ECX, arg_10h_00, arg_10h, arg_14h, arg_18h & 0xff);\n        fcn.00406d60(in_ECX, &var_8h);\n    }\n    else {\n        arg_8h_00 = *in_ECX;\n        arg_18h = arg_18h & 0xff;\n        arg_ch_00 = fcn.00404820(arg_8h_00);\n        fcn.00405e40(arg_8h_01, arg_ch_00, arg_10h_00, arg_10h, arg_14h, arg_18h);\n        fcn.004056f0(arg_8h_00, uVar1 + 1);\n        *in_ECX = var_8h;\n    }\n    fcn.00409e05(arg_8h_01);\n    return;\n}\n",
        "token_count": 618
    },
    "00406f90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406f90(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint arg_8h_01;\n    uint arg_ch_00;\n    uint *in_ECX;\n    int32_t arg_10h_00;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x435014 ^ &stack0xfffffffc;\n    arg_10h_00 = in_ECX[4];\n    iVar2 = fcn.00405a00();\n    if (iVar2 - arg_10h_00 < arg_8h) {\n        fcn.004015a0();\n    }\n    uVar1 = in_ECX[5];\n    uVar3 = fcn.004073e0(arg_10h_00 + arg_8h);\n    fcn.00404200();\n    var_8h = fcn.00405b60(-(0xfffffffe < uVar3) | uVar3 + 1);\n    fcn.00401570();\n    in_ECX[4] = arg_10h_00 + arg_8h;\n    in_ECX[5] = uVar3;\n    arg_8h_01 = fcn.00404820(var_8h);\n    if (uVar1 < 0x10) {\n        fcn.00405f40(arg_8h_01, in_ECX, arg_10h_00, arg_10h, arg_14h & 0xff);\n        fcn.00406d60(in_ECX, &var_8h);\n    }\n    else {\n        arg_8h_00 = *in_ECX;\n        arg_14h = arg_14h & 0xff;\n        arg_ch_00 = fcn.00404820(arg_8h_00);\n        fcn.00405f40(arg_8h_01, arg_ch_00, arg_10h_00, arg_10h, arg_14h);\n        fcn.004056f0(arg_8h_00, uVar1 + 1);\n        *in_ECX = var_8h;\n    }\n    fcn.00409e05(arg_8h_01);\n    return;\n}\n",
        "token_count": 602
    },
    "004073e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004073e0(uint arg_8h)\n\n{\n    uint arg_10h;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    arg_10h = fcn.00405a00();\n    fcn.00407610(arg_8h, *(in_ECX + 0x14), arg_10h);\n    return;\n}\n",
        "token_count": 86
    },
    "00407570": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407570(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    fcn.00404200();\n    iVar1 = fcn.00405b60(iVar1);\n    *in_ECX = iVar1;\n    in_ECX[1] = iVar1;\n    in_ECX[2] = iVar1 + arg_8h;\n    return;\n}\n",
        "token_count": 148
    },
    "004075d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004075d0(void)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00404200();\n    var_8h = fcn.00406010(uVar1);\n    var_ch = fcn.004014d0();\n    puVar2 = fcn.00406d30(&var_ch, &var_8h);\n    return *puVar2;\n}\n",
        "token_count": 115
    },
    "004076a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004076a0(uint arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_ffffff44;\n    uint in_stack_ffffff48;\n    uint var_78h;\n    int32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x425aad;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x435014 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_4ch = fcn.00401ea0();\n    fcn.00401e60(&var_3ch);\n    *(var_44h + 8) = 0;\n    *(var_44h + 0x10) = 0;\n    *(var_44h + 0x14) = 0;\n    var_40h = var_44h;\n    var_4h = 0;\n    if (arg_ch == '\\0') {\n        var_48h = *(var_4ch + 8);\n    }\n    else {\n        var_48h = 0x4315df;\n    }\n    fcn.00401e60(&var_78h);\n    uVar2 = fcn.00407830(var_48h);\n    *(var_44h + 8) = uVar2;\n    uVar2 = fcn.00401eb0();\n    uVar2 = fcn.00407830(uVar2);\n    *(var_44h + 0x10) = uVar2;\n    uVar2 = fcn.00401ec0();\n    uVar2 = fcn.00407830(uVar2);\n    *(var_44h + 0x14) = uVar2;\n    var_40h = 0;\n    if (arg_ch == '\\0') {\n        puVar4 = &var_3ch;\n        puVar5 = &stack0xffffff44;\n        for (iVar3 = 0xb; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00407a40(0, var_4ch, in_stack_ffffff44);\n    }\n    else {\n        uVar1 = fcn.00407a30(0x2e);\n        *(var_44h + 0xc) = uVar1;\n        uVar1 = fcn.00407a30(0x2c);\n        *(var_44h + 0xd) = uVar1;\n    }\n    var_4h = 0xffffffff;\n    fcn.00407810();\n    *in_FS_OFFSET = var_ch;\n    fcn.00409e05(in_stack_ffffff48);\n    return;\n}\n",
        "token_count": 736
    },
    "00407ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407ac0(uint *param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00406190(*param_1, param_1[1], param_1[2]);\n    return;\n}\n",
        "token_count": 54
    },
    "00407b50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407b50(int32_t param_1)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.00404820(*(param_1 + 4));\n    fcn.00407b90(*(param_1 + 8), arg_ch);\n    *(param_1 + 4) = *(param_1 + 4) + 1;\n    return;\n}\n",
        "token_count": 95
    },
    "00407b90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00407b90(uint noname_0, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.00404820(arg_ch);\n    uVar1 = fcn.004011a0(1, uVar1);\n    fcn.00402ce0(uVar1);\n    return;\n}\n",
        "token_count": 101
    },
    "00407f4f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00407f4f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040a0ed(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x10) != 0) {\n        *extraout_ECX = 0x426358;\n        extraout_ECX[4] = 0;\n        extraout_ECX[0xc] = 0;\n        extraout_ECX[0xd] = 0;\n        extraout_ECX[0xe] = 0;\n        extraout_ECX[2] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = 1;\n    }\n    arg_ch_00 = *(unaff_EBP + 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(extraout_ECX + *(*extraout_ECX + 4)) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    *(*(*extraout_ECX + 4) + -4 + extraout_ECX) = *(*extraout_ECX + 4) + -8;\n    fcn.004086c3(arg_8h_00, arg_ch_00);\n    fcn.0040a0ca();\n    return;\n}\n",
        "token_count": 424
    },
    "0040859c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040859c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *(param_1 + 0xc);\n    iVar1 = param_1 + 0x3c;\n    if (*piVar2 != iVar1) {\n        *(param_1 + 0x50) = *piVar2;\n        *(param_1 + 0x54) = **(param_1 + 0x1c) + **(param_1 + 0x2c);\n        piVar2 = *(param_1 + 0xc);\n    }\n    *piVar2 = iVar1;\n    **(param_1 + 0x1c) = iVar1;\n    **(param_1 + 0x2c) = 1;\n    return;\n}\n",
        "token_count": 192
    },
    "0040b720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040b720(uint32_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (arg_10h == 1) {\n        uVar3 = *arg_8h;\n        uVar1 = *arg_ch;\n    }\n    else if (arg_10h == 2) {\n        iVar2 = *arg_8h - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n    }\n    else if (arg_10h == 3) {\n        iVar2 = *arg_8h - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 2);\n        uVar1 = *(arg_ch + 2);\n    }\n    else {\n        if (arg_10h != 4) {\ncode_r0x0040bc03:\n    // switch table (32 cases) at 0x40cd1c\n            switch(arg_10h) {\n            case 0:\n                break;\n            case 1:\n                goto code_r0x0040c408;\n            case 2:\n                goto code_r0x0040c831;\n            case 3:\n                goto code_r0x0040c3c4;\n            case 4:\n                goto code_r0x0040bf88;\n            case 5:\n                goto code_r0x0040c374;\n            case 6:\n                goto code_r0x0040c79e;\n            case 7:\n                goto code_r0x0040cbb7;\n            case 8:\n                goto code_r0x0040bef5;\n            case 9:\n                goto code_r0x0040c2e1;\n            case 10:\n                goto code_r0x0040c70a;\n            case 0xb:\n                goto code_r0x0040cb24;\n            case 0xc:\n                goto code_r0x0040be62;\n            case 0xd:\n                goto code_r0x0040c24e;\n            case 0xe:\n                goto code_r0x0040c677;\n            case 0xf:\n                goto code_r0x0040ca91;\n            case 0x10:\n                goto code_r0x0040bdcf;\n            case 0x11:\n                goto code_r0x0040c1bb;\n            case 0x12:\n                goto code_r0x0040c5e4;\n            case 0x13:\n                goto code_r0x0040c9fd;\n            case 0x14:\n                goto code_r0x0040bd3c;\n            case 0x15:\n                goto code_r0x0040c128;\n            case 0x16:\n                goto code_r0x0040c551;\n            case 0x17:\n                goto code_r0x0040c96a;\n            case 0x1a:\n                goto code_r0x0040c4be;\n            case 0x1b:\n                goto code_r0x0040c8d7;\n            case 0x1c:\n                uVar1 = *(arg_8h + arg_10h + -0x1c);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1c)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\n            case 0x18:\n                uVar1 = *(arg_8h + arg_10h + -0x18);\n                if (uVar1 != *(arg_ch + arg_10h + -0x18)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040bd3c:\n                uVar1 = *(arg_8h + arg_10h + -0x14);\n                if (uVar1 != *(arg_ch + arg_10h + -0x14)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040bdcf:\n                uVar1 = *(arg_8h + arg_10h + -0x10);\n                if (uVar1 != *(arg_ch + arg_10h + -0x10)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040be62:\n                uVar1 = *(arg_8h + arg_10h + -0xc);\n                if (uVar1 != *(arg_ch + arg_10h + -0xc)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040bef5:\n                uVar1 = *(arg_8h + arg_10h + -8);\n                if (uVar1 != *(arg_ch + arg_10h + -8)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040bf88:\n                uVar1 = *(arg_8h + arg_10h + -4);\n                if (uVar1 != *(arg_ch + arg_10h + -4)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -4);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -2) - *(arg_ch + arg_10h + -2);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -1) - *(arg_ch + arg_10h + -1);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\n                break;\n            case 0x1d:\n                uVar1 = *(arg_8h + arg_10h + -0x1d);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1d)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1d);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\n            case 0x19:\n                if (*(arg_8h + arg_10h + -0x19) != *(arg_ch + arg_10h + -0x19)) {\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040c128:\n                uVar1 = *(arg_8h + arg_10h + -0x15);\n                if (uVar1 != *(arg_ch + arg_10h + -0x15)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040c1bb:\n                uVar1 = *(arg_8h + arg_10h + -0x11);\n                if (uVar1 != *(arg_ch + arg_10h + -0x11)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040c24e:\n                uVar1 = *(arg_8h + arg_10h + -0xd);\n                if (uVar1 != *(arg_ch + arg_10h + -0xd)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040c2e1:\n                uVar1 = *(arg_8h + arg_10h + -9);\n                if (uVar1 != *(arg_ch + arg_10h + -9)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040c374:\n                if (*(arg_8h + arg_10h + -5) != *(arg_ch + arg_10h + -5)) {\ncode_r0x0040c380:\n                    iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -4) - *(arg_ch + arg_10h + -4);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\ncode_r0x0040c3c4:\n                    iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\ncode_r0x0040c3e6:\n                    iVar2 = *(arg_8h + arg_10h + -2) - *(arg_ch + arg_10h + -2);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040c408:\n                uVar1 = *(arg_ch + arg_10h + -1);\n                uVar3 = *(arg_8h + arg_10h + -1);\n                if (uVar3 == uVar1) {\n                    return 0;\n                }\n                return (0 < uVar3 - uVar1) * 2 + -1;\n            case 0x1e:\n                uVar1 = *(arg_8h + arg_10h + -0x1e);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1e)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1e);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1d) - *(arg_ch + arg_10h + -0x1d);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040c4be:\n                uVar1 = *(arg_8h + arg_10h + -0x1a);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1a)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040c551:\n                uVar1 = *(arg_8h + arg_10h + -0x16);\n                if (uVar1 != *(arg_ch + arg_10h + -0x16)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040c5e4:\n                uVar1 = *(arg_8h + arg_10h + -0x12);\n                if (uVar1 != *(arg_ch + arg_10h + -0x12)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040c677:\n                uVar1 = *(arg_8h + arg_10h + -0xe);\n                if (uVar1 != *(arg_ch + arg_10h + -0xe)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040c70a:\n                if (*(arg_8h + arg_10h + -10) != *(arg_ch + arg_10h + -10)) {\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040c79e:\n                uVar1 = *(arg_8h + arg_10h + -6);\n                if (uVar1 != *(arg_ch + arg_10h + -6)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -4) - *(arg_ch + arg_10h + -4);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040c831:\n                if (*(arg_8h + arg_10h + -2) != *(arg_ch + arg_10h + -2)) goto code_r0x0040c3e6;\n                break;\n            case 0x1f:\n                uVar1 = *(arg_8h + arg_10h + -0x1f);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1f)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1f);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1e) - *(arg_ch + arg_10h + -0x1e);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1d) - *(arg_ch + arg_10h + -0x1d);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040c8d7:\n                uVar1 = *(arg_8h + arg_10h + -0x1b);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1b)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040c96a:\n                uVar1 = *(arg_8h + arg_10h + -0x17);\n                if (uVar1 != *(arg_ch + arg_10h + -0x17)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040c9fd:\n                if (*(arg_8h + arg_10h + -0x13) != *(arg_ch + arg_10h + -0x13)) {\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040ca91:\n                uVar1 = *(arg_8h + arg_10h + -0xf);\n                if (uVar1 != *(arg_ch + arg_10h + -0xf)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040cb24:\n                uVar1 = *(arg_8h + arg_10h + -0xb);\n                if (uVar1 != *(arg_ch + arg_10h + -0xb)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0040cbb7:\n                if (*(arg_8h + arg_10h + -7) != *(arg_ch + arg_10h + -7)) {\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    goto code_r0x0040c380;\n                }\n                goto code_r0x0040c3c4;\n            default:\n                goto code_r0x0040b766;\n            }\n            return 0;\n        }\n        iVar2 = *arg_8h - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 2) - *(arg_ch + 2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 3);\n        uVar1 = *(arg_ch + 3);\n    }\n    if (uVar3 == uVar1) {\n        return 0;\n    }\n    return (0 < uVar3 - uVar1) * 2 + -1;\ncode_r0x0040b766:\n    if (*arg_8h != *arg_ch) {\n        iVar2 = (*arg_8h & 0xff) - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 2) - *(arg_ch + 2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 3) - *(arg_ch + 3);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[1] != arg_ch[1]) {\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 5) - *(arg_ch + 5);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 6) - *(arg_ch + 6);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 7) - *(arg_ch + 7);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[2] != arg_ch[2]) {\n        iVar2 = *(arg_8h + 2) - *(arg_ch + 2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 9) - *(arg_ch + 9);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 10) - *(arg_ch + 10);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xb) - *(arg_ch + 0xb);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[3] != arg_ch[3]) {\n        iVar2 = (arg_8h[3] & 0xff) - *(arg_ch + 3);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xd) - *(arg_ch + 0xd);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xe) - *(arg_ch + 0xe);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xf) - *(arg_ch + 0xf);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[4] != arg_ch[4]) {\n        iVar2 = (arg_8h[4] & 0xff) - *(arg_ch + 4);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x11) - *(arg_ch + 0x11);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x12) - *(arg_ch + 0x12);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x13) - *(arg_ch + 0x13);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[5] != arg_ch[5]) {\n        iVar2 = (arg_8h[5] & 0xff) - *(arg_ch + 5);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x15) - *(arg_ch + 0x15);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x16) - *(arg_ch + 0x16);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x17) - *(arg_ch + 0x17);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[6] != arg_ch[6]) {\n        iVar2 = (arg_8h[6] & 0xff) - *(arg_ch + 6);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x19) - *(arg_ch + 0x19);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1a) - *(arg_ch + 0x1a);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1b) - *(arg_ch + 0x1b);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[7] != arg_ch[7]) {\n        iVar2 = (arg_8h[7] & 0xff) - *(arg_ch + 7);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1d) - *(arg_ch + 0x1d);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1e) - *(arg_ch + 0x1e);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1f) - *(arg_ch + 0x1f);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    arg_8h = arg_8h + 8;\n    arg_ch = arg_ch + 8;\n    arg_10h = arg_10h + -0x20;\n    goto code_r0x0040bc03;\n}\n",
        "token_count": 13875
    },
    "0040da05": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl\nfcn.0040da05(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    uint arg_ch_00;\n    \n    arg_ch_00 = 0x3c;\n    fcn.0040a530();\n    *(unaff_EBP + -0x1c) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0x40) = 0;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x30) = *(arg_8h_00 + -4);\n    iVar3 = *(unaff_EBP + 8);\n    uVar1 = fcn.0040ac22(unaff_EBP + -0x4c, *(iVar3 + 0x18));\n    *(unaff_EBP + -0x34) = uVar1;\n    iVar2 = fcn.0040cfcc();\n    *(unaff_EBP + -0x38) = *(iVar2 + 0x10);\n    iVar2 = fcn.0040cfcc();\n    *(unaff_EBP + -0x3c) = *(iVar2 + 0x14);\n    iVar2 = fcn.0040cfcc();\n    *(iVar2 + 0x10) = iVar3;\n    iVar3 = fcn.0040cfcc();\n    *(iVar3 + 0x14) = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x44) = 1;\n    *(unaff_EBP + -4) = 1;\n    uVar1 = fcn.0040aa1b(arg_8h_00, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c), *(unaff_EBP + 0x20));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    *(unaff_EBP + -0x44) = 0;\n    fcn.0040db58(0x433208, arg_ch_00);\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 720
    },
    "0040dd5d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040dd5d(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t arg_10h;\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch == NULL) {\n        fcn.0041192e();\n        pcVar3 = swi(3);\n        uVar6 = (*pcVar3)();\n        return uVar6;\n    }\n    iVar7 = *arg_ch;\n    uVar6 = 0;\n    if (0 < iVar7) {\n        var_4h = 0;\n        arg_10h = *(arg_8h + 0x1c);\n        piVar5 = *(arg_10h + 0xc);\n        iVar1 = *piVar5;\n        in_EAX = piVar5 + 1;\n        do {\n            if (0 < iVar1) {\n                iVar2 = arg_ch[1];\n                piVar5 = in_EAX;\n                var_8h = iVar1;\n                do {\n                    iVar4 = fcn.0040d823(iVar2 + var_4h, *piVar5, arg_10h);\n                    if (iVar4 != 0) {\n                        uVar6 = 1;\n                        break;\n                    }\n                    var_8h = var_8h + -1;\n                    piVar5 = piVar5 + 1;\n                } while (0 < var_8h);\n            }\n            var_4h = var_4h + 0x10;\n            iVar7 = iVar7 + -1;\n        } while (iVar7 != 0);\n    }\n    return in_EAX & 0xffffff00 | uVar6;\n}\n",
        "token_count": 474
    },
    "0040e082": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e082(int32_t arg_8h, uint lpProcName, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = arg_8h * 4 + 0x47e158;\n    iVar3 = *piVar1;\n    if (iVar3 == -1) {\n        iVar3 = 0;\n    }\n    else if (iVar3 == 0) {\n        for (; arg_10h != arg_14h; arg_10h = arg_10h + 1) {\n            iVar3 = *arg_10h;\n            iVar4 = *(iVar3 * 4 + 0x47e14c);\n            if (iVar4 == 0) {\n                iVar4 = fcn.0040e122(*(iVar3 * 4 + 0x427ab4));\n                piVar2 = iVar3 * 4 + 0x47e14c;\n                if (iVar4 != 0) {\n                    iVar3 = *piVar2;\n                    *piVar2 = iVar4;\n                    if (iVar3 != 0) {\n                        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar4);\n                    }\n                    goto code_r0x0040e10b;\n                }\n                *piVar2 = -1;\n            }\n            else if (iVar4 != -1) {\ncode_r0x0040e10b:\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, lpProcName);\n                if (iVar3 != 0) {\n                    *piVar1 = iVar3;\n                    return iVar3;\n                }\n                break;\n            }\n        }\n        *piVar1 = -1;\n        iVar3 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 441
    },
    "0040ec77": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040ec77(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h = param_1 + 0x28;\n    if (*(param_1 + 0x31) != '*') {\n        uVar2 = fcn.0040e9f5(arg_8h);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar1;\n    if (iVar1 < 0) {\n        *arg_8h = -1;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 193
    },
    "0040f01d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040f01d(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 + 0x24;\n    if (*(param_1 + 0x31) != '*') {\n        uVar1 = fcn.0040e9f5(arg_8h);\n        return uVar1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar2 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar2;\n    if (iVar2 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        iVar2 = -iVar2;\n        *arg_8h = iVar2;\n    }\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 228
    },
    "0040fabe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fabe(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection * 0x18 + 0x47e178);\n    return;\n}\n",
        "token_count": 49
    },
    "0040fb06": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fb06(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection * 0x18 + 0x47e178);\n    return;\n}\n",
        "token_count": 50
    },
    "0040fc9e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fc9e(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 43
    },
    "0040fcb2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fcb2(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 44
    },
    "00412255": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00412255(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.00412214();\n    iVar1 = fcn.00412294(in_ECX + 8, arg_8h * 2);\n    if (iVar1 == 0) {\n        *(in_ECX + 0x14) = 1;\n        iVar1 = 0;\n        *(in_ECX + 0xc) = arg_8h;\n    }\n    else {\n        *(in_ECX + 0xc) = 0;\n        *(in_ECX + 0x14) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 160
    },
    "004158b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004158b7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.00411972(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.00414ecd(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 119
    },
    "00417a04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417a04(void)\n\n{\n    fcn.00417be9(0, \"AreFileApisANSI\", 0x42a198, \"AreFileApisANSI\");\n    return;\n}\n",
        "token_count": 48
    },
    "00417a1e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417a1e(void)\n\n{\n    fcn.00417be9(1, \"CompareStringEx\", 0x42a1ac, \"CompareStringEx\");\n    return;\n}\n",
        "token_count": 46
    },
    "00417a38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417a38(void)\n\n{\n    fcn.00417be9(2, \"EnumSystemLocalesEx\", 0x42a1c4, \"EnumSystemLocalesEx\");\n    return;\n}\n",
        "token_count": 50
    },
    "00417a52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417a52(void)\n\n{\n    fcn.00417be9(8, \"GetDateFormatEx\", 0x42a200, \"GetDateFormatEx\");\n    return;\n}\n",
        "token_count": 44
    },
    "00417a6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417a6c(void)\n\n{\n    fcn.00417be9(0xb, \"GetLocaleInfoEx\", 0x42a218, \"GetLocaleInfoEx\");\n    return;\n}\n",
        "token_count": 48
    },
    "00417a86": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417a86(void)\n\n{\n    fcn.00417be9(0xe, \"GetTimeFormatEx\", 0x42a230, \"GetTimeFormatEx\");\n    return;\n}\n",
        "token_count": 47
    },
    "00417aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417aa0(void)\n\n{\n    fcn.00417be9(0xf, \"GetUserDefaultLocaleName\", 0x42a248, \"GetUserDefaultLocaleName\");\n    return;\n}\n",
        "token_count": 49
    },
    "00417aba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417aba(void)\n\n{\n    fcn.00417be9(0x13, \"IsValidLocaleName\", 0x42a274, \"IsValidLocaleName\");\n    return;\n}\n",
        "token_count": 45
    },
    "00417ad4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417ad4(void)\n\n{\n    fcn.00417be9(0x15, \"LCIDToLocaleName\", 0x42a2a8, \"LCIDToLocaleName\");\n    return;\n}\n",
        "token_count": 52
    },
    "00417aee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417aee(void)\n\n{\n    fcn.00417be9(0x14, 0x42a298, 0x42a290, 0x42a298);\n    return;\n}\n",
        "token_count": 50
    },
    "00417b08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417b08(void)\n\n{\n    fcn.00417be9(0x16, \"LocaleNameToLCID\", 0x42a2c4, \"LocaleNameToLCID\");\n    return;\n}\n",
        "token_count": 52
    },
    "0041ce10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041ce10(int16_t *arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    int32_t *piVar3;\n    \n    if (arg_8h == NULL) {\n        fcn.00412214();\n        *(arg_ch + 8) = 0;\n        *(arg_ch + 0xc) = 0;\n    }\n    else {\n        if (*arg_8h != 0) {\n            arg_8h_00 = fcn.0041c9cb(arg_14h, 0, arg_8h, 0xffffffff, 0, 0, 0, 0);\n            if (arg_8h_00 == 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.004118e5(uVar2);\n                piVar3 = fcn.0041191b();\n                return *piVar3;\n            }\n            if ((*(arg_ch + 0xc) <= arg_8h_00 && arg_8h_00 != *(arg_ch + 0xc)) &&\n               (iVar1 = fcn.0041d3d6(arg_8h_00),  iVar1 != 0)) {\n                return iVar1;\n            }\n            iVar1 = fcn.0041c9cb(arg_14h, 0, arg_8h, 0xffffffff, *(arg_ch + 8), *(arg_ch + 0xc), 0, 0);\n            if (iVar1 == 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.004118e5(uVar2);\n                piVar3 = fcn.0041191b();\n                return *piVar3;\n            }\n            *(arg_ch + 0x10) = iVar1 + -1;\n            return 0;\n        }\n        if ((*(arg_ch + 0xc) == 0) && (iVar1 = fcn.0041d3d6(1),  iVar1 != 0)) {\n            return iVar1;\n        }\n        **(arg_ch + 8) = 0;\n    }\n    *(arg_ch + 0x10) = 0;\n    return 0;\n}\n",
        "token_count": 532
    },
    "0041d3d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041d3d6(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.00412214();\n    iVar1 = fcn.00412294(in_ECX + 8, arg_8h);\n    if (iVar1 == 0) {\n        *(in_ECX + 0x14) = 1;\n        iVar1 = 0;\n        *(in_ECX + 0xc) = arg_8h;\n    }\n    else {\n        *(in_ECX + 0xc) = 0;\n        *(in_ECX + 0x14) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 158
    },
    "0041e1f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0041e1f9(char *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t arg_ch_00;\n    char cVar1;\n    char cVar2;\n    code *pcVar3;\n    uint *puVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    uint uVar9;\n    char *pcVar10;\n    char *pcVar11;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_8h == NULL) {\n        puVar4 = fcn.0041191b();\n        *puVar4 = 0x16;\n        return 0xffffffff;\n    }\n    pcVar5 = fcn.00425160(arg_8h, 0x3d);\n    pcVar11 = arg_8h;\n    if ((pcVar5 == NULL) || (pcVar5 == arg_8h)) {\ncode_r0x0041e0b3:\n        puVar4 = fcn.0041191b();\n        *puVar4 = 0x16;\n        goto code_r0x0041e0be;\n    }\n    cVar1 = pcVar5[1];\n    fcn.0041e18a();\n    uVar9 = 0;\n    if (*0x47e3e8 == NULL) {\n        if ((arg_ch != 0) && (*0x47e3ec != 0)) {\n            iVar6 = fcn.00412cf7();\n            if (iVar6 == 0) goto code_r0x0041e0b3;\n            fcn.0041e18a();\n            goto code_r0x0041df70;\n        }\n        if (cVar1 == '\\0') {\n            uVar9 = 0;\n            goto code_r0x0041e0c1;\n        }\n        *0x47e3e8 = fcn.004157d2(1, 4);\n        fcn.0041582f(0);\n        if (*0x47e3e8 != NULL) {\n            if (*0x47e3ec == 0) {\n                *0x47e3ec = fcn.004157d2(1, 4);\n                fcn.0041582f(0);\n                if (*0x47e3ec == 0) goto code_r0x0041e0be;\n            }\n            goto code_r0x0041df70;\n        }\n    }\n    else {\ncode_r0x0041df70:\n        piVar7 = *0x47e3e8;\n        if (*0x47e3e8 != NULL) {\n            iVar6 = fcn.0041e1a4(arg_8h, pcVar5 - arg_8h);\n            if ((-1 < iVar6) && (*piVar7 != 0)) {\n                fcn.0041582f(piVar7[iVar6]);\n                if (cVar1 == '\\0') {\n                    for (; piVar7[iVar6] != 0; iVar6 = iVar6 + 1) {\n                        piVar7[iVar6] = piVar7[iVar6 + 1];\n                    }\n                    piVar7 = fcn.0042079d(piVar7, iVar6, 4);\n                    fcn.0041582f(0);\n                    if (piVar7 != NULL) {\ncode_r0x0041e038:\n                        *0x47e3e8 = piVar7;\n                    }\n                }\n                else {\n                    pcVar11 = NULL;\n                    piVar7[iVar6] = arg_8h;\n                }\n                if (arg_ch != 0) {\n                    pcVar10 = arg_8h;\n                    do {\n                        cVar2 = *pcVar10;\n                        pcVar10 = pcVar10 + 1;\n                    } while (cVar2 != '\\0');\n                    iVar6 = fcn.004157d2(pcVar10 + (2 - (arg_8h + 1)), 1);\n                    if (iVar6 != 0) {\n                        iVar8 = fcn.00414e42(iVar6, pcVar10 + (2 - (arg_8h + 1)), arg_8h);\n                        if (iVar8 != 0) {\n                            fcn.0040fa3e(0, 0, 0, 0, 0);\n                            pcVar3 = swi(3);\n                            uVar9 = (*pcVar3)();\n                            return uVar9;\n                        }\n                        (pcVar5 + (iVar6 - arg_8h) + 1)[-1] = '\\0';\n                        iVar8 = fcn.00423a64(iVar6, -(cVar1 != '\\0') & pcVar5 + (iVar6 - arg_8h) + 1);\n                        if (iVar8 == 0) {\n                            puVar4 = fcn.0041191b();\n                            uVar9 = 0xffffffff;\n                            *puVar4 = 0x2a;\n                        }\n                    }\n                    fcn.0041582f(iVar6);\n                }\n                goto code_r0x0041e0c1;\n            }\n            if (cVar1 == '\\0') goto code_r0x0041e0c1;\n            arg_ch_00 = -iVar6 + 2;\n            if ((-iVar6 <= arg_ch_00) && (arg_ch_00 < 0x3fffffff)) {\n                piVar7 = fcn.0042079d(piVar7, arg_ch_00, 4);\n                fcn.0041582f(0);\n                if (piVar7 != NULL) {\n                    piVar7[-iVar6] = arg_8h;\n                    piVar7[1 - iVar6] = 0;\n                    pcVar11 = NULL;\n                    goto code_r0x0041e038;\n                }\n            }\n        }\n    }\ncode_r0x0041e0be:\n    uVar9 = 0xffffffff;\ncode_r0x0041e0c1:\n    fcn.0041582f(pcVar11);\n    return uVar9;\n}\n",
        "token_count": 1385
    },
    "00424ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00424ce0(int16_t *arg_8h)\n\n{\n    if ((*arg_8h == 0x5a4d) && (*(*(arg_8h + 0x1e) + arg_8h) == 0x4550)) {\n        return *(*(arg_8h + 0x1e) + arg_8h + 6) == 0x10b;\n    }\n    return false;\n}\n",
        "token_count": 103
    },
    "0040ad2b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ad2b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040d8b1(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 114
    },
    "00407c3f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407c3f(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (iVar1 != 0) {\n        if (iVar1 < 8) {\n            fcn.004097cc(iVar1 * 0x18 + 0x47dab0);\n        }\n        return;\n    }\n    fcn.0040fb06(4);\n    return;\n}\n",
        "token_count": 104
    },
    "00401d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401d80(uint param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4254d0;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x435014 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.004093b1(param_1);\n    fcn.00403140(uVar1);\n    fcn.00403140();\n    fcn.00403140();\n    fcn.00403140();\n    fcn.00403140();\n    fcn.00403140();\n    fcn.00407c3f();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 205
    },
    "004012c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004012c0(code **param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = vtable.std::exception.0;\n    fcn.0040adc4(param_1 + 1);\n    return;\n}\n",
        "token_count": 59
    },
    "00403310": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403310(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_20h;\n    uchar var_19h;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x42567d;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x435014 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.004068d0(var_19h, uVar1);\n    var_4h = 0;\n    fcn.00401590(0x431675, in_ECX);\n    fcn.004042e0();\n    arg_ch = arg_ch & 0xff;\n    fcn.00404330(arg_8h, arg_ch);\n    fcn.00401570();\n    var_4h = 0xffffffff;\n    *in_FS_OFFSET = var_ch;\n    fcn.00409e05(arg_ch);\n    return;\n}\n",
        "token_count": 273
    },
    "0042427d": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0042427d(void)\n\n{\n    *0x435a60 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "004092f6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004092f6(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00407be7(0);\n    iVar4 = *(arg_8h + 0xc);\n    while (iVar4 != 0) {\n        iVar4 = iVar4 + -1;\n        piVar1 = *(*(arg_8h + 8) + iVar4 * 4);\n        if (piVar1 != NULL) {\n            pcVar2 = *(*piVar1 + 8);\n            (**0x426130)();\n            puVar3 = (*pcVar2)();\n            if (puVar3 != NULL) {\n                pcVar2 = **puVar3;\n                (**0x426130)(1);\n                (*pcVar2)();\n            }\n        }\n    }\n    fcn.0040f750(*(arg_8h + 8));\n    fcn.00407c3f();\n    return;\n}\n",
        "token_count": 244
    },
    "00421013": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00421013(uint8_t *param_1, uint32_t param_2, uint32_t *param_3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    \n    if (param_1 == NULL) {\n        param_2 = 0;\n    }\n    else {\n        if (param_2 != 0) {\n            if ((param_2 & 0xffffff80) == 0) {\n                *param_1 = param_2;\n                return 1;\n            }\n            if ((param_2 & 0xfffff800) == 0) {\n                uVar3 = 0xc0;\n                iVar4 = 1;\n                iVar2 = iVar4;\n            }\n            else if ((param_2 & 0xffff0000) == 0) {\n                if ((0xd7ff < param_2) && (param_2 < 0xe000)) {\ncode_r0x00420fe7:\n                    iVar2 = fcn.00420ff4(param_3);\n                    return iVar2;\n                }\n                iVar4 = 2;\n                uVar3 = 0xe0;\n                iVar2 = iVar4;\n            }\n            else {\n                if (((param_2 & 0xffe00000) != 0) || (0x10ffff < param_2)) goto code_r0x00420fe7;\n                iVar4 = 3;\n                uVar3 = 0xf0;\n                iVar2 = iVar4;\n            }\n            do {\n                uVar1 = param_2;\n                param_2 = param_2 >> 6;\n                param_1[iVar4] = uVar1 & 0x3f | 0x80;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            *param_1 = param_2 | uVar3;\n            *param_3 = 0;\n            param_3[1] = 0;\n            return iVar2 + 1;\n        }\n        *param_1 = param_2;\n    }\n    *param_3 = param_2;\n    param_3[1] = param_2;\n    return 1;\n}\n",
        "token_count": 496
    }
}