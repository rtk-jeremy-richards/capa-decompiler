{
    "null": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint entry0(uint *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint *puVar3;\n    char **ppcVar4;\n    char *pcVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uVar8;\n    bool bVar9;\n    int32_t iVar10;\n    uint *puVar11;\n    uint *unaff_EBX;\n    uchar *unaff_EBP;\n    int32_t unaff_ESI;\n    uint *puVar12;\n    uint *unaff_EDI;\n    int32_t in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint uStack100;\n    uint var_5ch;\n    uint8_t uStack56;\n    uint var_30h;\n    uint var_2ch;\n    uchar *puStack24;\n    uint *var_10h;\n    int32_t iStack16;\n    uint *puStack12;\n    uchar *puStack8;\n    uint uStack4;\n    \n    *0x56b3b8 = 0;\n    iStack16 = 0x4014b2;\n    fcn.00437810();\n    puStack8 = unaff_EBP;\ncode_r0x00401150:\n    puStack24 = &stack0x00000004;\n    puVar3 = &stack0xffffff9c;\n    var_10h = unaff_EBX;\n    iStack16 = unaff_ESI;\n    puStack12 = unaff_EDI;\n    uStack4 = unaff_retaddr;\n    for (iVar10 = 0x11; iVar10 != 0; iVar10 = iVar10 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    if (*0x56b3b8 != 0) {\n        (*_sym.imp.KERNEL32.dll_GetStartupInfoA)(&stack0xffffff9c);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n    unaff_EDI = *(*(in_FS_OFFSET + 0x18) + 4);\n    while( true ) {\n        puVar3 = NULL;\n        LOCK();\n        puVar6 = unaff_EDI;\n        if (*0x56bdf8 != NULL) {\n            puVar3 = *0x56bdf8;\n            puVar6 = *0x56bdf8;\n        }\n        *0x56bdf8 = puVar6;\n        if (puVar3 == NULL) {\n            puVar3 = NULL;\n            goto joined_r0x004013dd;\n        }\n        if (unaff_EDI == puVar3) break;\n        (*pcVar2)(1000);\n    }\n    puVar3 = 0x1;\njoined_r0x004013dd:\n    if (*0x56bdf4 == 1) {\n        sub.msvcrt.dll__amsg_exit(0x1f);\n    }\n    else if (*0x56bdf4 == 0) {\n        *0x56bdf4 = 1;\n        sub.msvcrt.dll__initterm(0x56d00c, 0x56d018);\n    }\n    else {\n        *0x56b004 = 1;\n    }\n    if (*0x56bdf4 == 1) {\n        sub.msvcrt.dll__initterm(0x56d000, 0x56d008);\n        *0x56bdf4 = 2;\n    }\n    if (puVar3 == NULL) {\n        *0x56bdf8 = puVar3;\n    }\n    if (*0x526a74 != NULL) {\n        (**0x526a74)(0, 2, 0);\n    }\n    fcn.00437ca0();\n    *0x56b3cc = (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0x437f20);\n    uStack4 = 0x40123d;\n    fcn.00447780();\n    uStack4 = 0x401242;\n    fcn.00437b20();\n    *0x56bde8 = 0x400000;\n    uStack4 = 0x401251;\n    ppcVar4 = sub.msvcrt.dll___p__acmdln();\n    unaff_EBX = *0x56b018;\n    pcVar5 = *ppcVar4;\n    bVar9 = false;\n    if (pcVar5 != NULL) {\n        do {\n            cVar1 = *pcVar5;\n            if (cVar1 < '!') {\n                if ((cVar1 == '\\0') || (!bVar9)) goto code_r0x00401290;\n                bVar9 = true;\n            }\n            else if (cVar1 == '\\\"') {\n                bVar9 = bVar9 ^ 1;\n            }\n            pcVar5 = pcVar5 + 1;\n        } while( true );\n    }\n    goto code_r0x004012b4;\ncode_r0x00401290:\n    *0x56bdec = pcVar5;\n    if (cVar1 != '\\0') {\n        do {\n            pcVar5 = pcVar5 + 1;\n            *0x56bdec = pcVar5;\n            if (*pcVar5 == '\\0') break;\n        } while (*pcVar5 < '!');\n    }\ncode_r0x004012b4:\n    if ((*0x56b3b8 != 0) && (*0x4ce000 = 10,  (uStack56 & 1) != 0)) {\n        *0x4ce000 = var_30h;\n    }\n    unaff_ESI = *0x56b018 * 4 + 4;\n    uStack4 = 0x4012e7;\n    puVar6 = sub.msvcrt.dll_malloc();\n    puVar3 = puVar6;\n    if (0 < unaff_EBX) {\n        puVar7 = *0x56b014 + unaff_EBX;\n        puVar12 = *0x56b014;\n        do {\n            puVar11 = puVar3 + 1;\n            unaff_EDI = puVar12 + 1;\n            uStack4 = 0x401320;\n            iVar10 = sub.msvcrt.dll_strlen();\n            unaff_ESI = iVar10 + 1;\n            uStack4 = 0x40132b;\n            uVar8 = sub.msvcrt.dll_malloc();\n            *puVar3 = uVar8;\n            param_1 = *puVar12;\n            uStack4 = 0x401341;\n            param_2 = unaff_ESI;\n            sub.msvcrt.dll_memcpy();\n            puVar3 = puVar11;\n            puVar12 = unaff_EDI;\n        } while (puVar7 != unaff_EDI);\n        puVar3 = puVar6 + unaff_EBX;\n        unaff_EBX = puVar11;\n    }\n    *puVar3 = 0;\n    uStack4 = 0x40135f;\n    *0x56b014 = puVar6;\n    fcn.004377d0();\n    *_sym.imp.msvcrt.dll___initenv = *0x56b010;\n    param_2 = *0x56b010;\n    param_1 = *0x56b014;\n    uStack4 = 0x40138b;\n    *0x56b00c = main();\n    if (*0x56b008 != 0) {\n        if (*0x56b004 == 0) {\n            uStack4 = 0x4013ad;\n            sub.msvcrt.dll__cexit();\n        }\n        return *0x56b00c;\n    }\n    uStack4 = 0x401474;\n    unaff_retaddr = *0x56b00c;\n    sub.msvcrt.dll_exit();\n    *0x56b3b8 = 1;\n    iStack16 = 0x401492;\n    fcn.00437810();\n    puStack8 = &stack0xfffffff8;\n    goto code_r0x00401150;\n}\n",
        "token_count": 1823
    },
    "0x43b512": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid case.0x43b512.5(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    \n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar2 == 0) {\n        *0x4ce004 = 0x43c7d0;\n        pcVar3 = 0x43c580;\n    }\n    else {\n        *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"__register_frame_info\");\n        *0x4ce004 = (*pcVar1)(iVar2, \"__deregister_frame_info\");\n    }\n    if (pcVar3 != NULL) {\n        (*pcVar3)(0x52e0f8, 0x56b01c);\n    }\n    fcn.004014c0(fcn.00401590);\n    return;\n}\n",
        "token_count": 285
    },
    "00401590": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00401590(void)\n\n{\n    if (*0x4ce004 != NULL) {\n        (**0x4ce004)(0x52e0f8);\n    }\n    if (*0x56bdf0 != 0) {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(*0x56bdf0);\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "00401734": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Removing unreachable block (ram,0x00401843)\n// WARNING: Removing unreachable block (ram,0x004017ee)\n// WARNING: Removing unreachable block (ram,0x00401866)\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.00401734(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint32_t arg_1ch, int32_t arg_20h, \n            uint32_t arg_24h, int32_t arg_28h, uint32_t arg_2ch, int32_t arg_30h, uint arg_34h, uint arg_38h, \n            uint arg_3ch, uint arg_40h, uint noname_15, uint noname_16, uint arg_4ch, uint arg_50h, uint arg_54h, \n            uint noname_20, uint arg_5ch, uint arg_60h, uint arg_64h, uint noname_24, uint arg_6ch, uint arg_70h, \n            uint arg_74h, uint32_t arg_78h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_48h;\n    uint var_30h;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uchar var_24h;\n    uchar var_23h;\n    uchar var_22h;\n    uchar var_21h;\n    uint var_20h;\n    uint8_t var_19h;\n    uint var_18h;\n    uint32_t var_14h;\n    char var_10h;\n    char var_fh;\n    char var_eh;\n    char var_dh;\n    char var_ch;\n    char var_bh;\n    char var_ah;\n    uint var_9h;\n    \n    var_ah = '\\x01';\n    while (var_ah != '\\0') {\n        var_ah = '\\0';\n    }\n    var_bh = '\\x01';\n    while (var_bh != '\\0') {\n        var_bh = '\\0';\n    }\n    var_ch = '\\x01';\n    while (var_ch != '\\0') {\n        var_ch = '\\0';\n    }\n    var_dh = '\\x01';\n    while (var_dh != '\\0') {\n        var_dh = '\\0';\n    }\n    var_eh = '\\x01';\n    while (var_eh != '\\0') {\n        var_eh = '\\0';\n    }\n    var_fh = '\\x01';\n    while (var_fh != '\\0') {\n        var_fh = '\\0';\n    }\n    var_10h = '\\x01';\n    while (var_10h != '\\0') {\n        var_10h = '\\0';\n    }\n    var_9h._0_1_ = 1;\n    uVar2 = arg_10h * 0x101c;\n    uVar3 = uVar2 * arg_1ch;\n    uVar4 = arg_24h * 0x19c;\n    uVar6 = uVar3 - uVar4;\n    fcn.0048b880(arg_2ch + uVar6, \n                 arg_30h + (((arg_1ch * (uVar2 >> 0x1f) + arg_20h * uVar2 + (uVar2 * arg_1ch >> 0x20)) -\n                            (arg_28h * 0x19c + (arg_24h * 0x19c >> 0x20))) - (uVar3 < uVar4)) + CARRY4(arg_2ch, uVar6));\n    var_18h = 0xfb30264a;\n    var_30h._0_1_ = 0xc1;\n    var_30h._1_1_ = 0x97;\n    var_30h._2_1_ = 0xcb;\n    var_30h._3_1_ = 0x88;\n    var_2ch = 0x5b;\n    var_2bh = 0x95;\n    var_2ah = 0xac;\n    var_29h = 0x41;\n    var_28h = 8;\n    var_27h = 0x18;\n    var_26h = 0xa5;\n    var_25h = 0x92;\n    var_24h = 0x92;\n    var_23h = 0x48;\n    var_22h = 0x68;\n    for (var_14h = 0; var_14h < 0xf; var_14h = var_14h + 1) {\n        uVar1 = (*(&var_30h + var_14h) << 6 | (*(&var_30h + var_14h) ^ 0x10) >> 2) - 0x2a;\n        uVar1 = var_14h - ((-(uVar1 * ' ' | uVar1 >> 3) ^ 99) - 0x29 ^ 0xeb);\n        uVar1 = ~(((uVar1 * '\\x04' | uVar1 >> 6) ^ 0x62) - 0xe);\n        var_19h = uVar1 << 7 | uVar1 >> 1;\n        *(&var_30h + var_14h) = var_19h;\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"kerne\", &var_21h);\n    fcn.00483900();\n    fcn.004b3190(\"l32.dll\");\n    uVar5 = fcn.00455570();\n    var_20h = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar5);\n    var_4ch = 0;\n    *0x56b034 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(var_20h, &var_30h);\n    (**0x56b034)(arg_8h, arg_ch, 0x40, &var_4ch);\n    uVar7 = fcn.004386d0(arg_54h, 0, arg_5ch, arg_60h);\n    fcn.004b2fc0();\n    return uVar7 & 0xffffffff00000000 | uVar7 ^ arg_78h;\n}\n",
        "token_count": 1676
    },
    "00401bac": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.00401bac(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_1ch;\n    uint var_bp_10h;\n    uint var_ch;\n    uint var_bp_4h;\n    \n    iVar1 = fcn.004556e0();\n    uVar2 = fcn.00455570();\n    if (arg_10h == '\\0') {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = 0xfde9;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(uVar4, 0, uVar2, iVar1 + 1, 0, 0);\n    fcn.004b5ad0();\n    fcn.004b47b0(uVar2);\n    uVar4 = fcn.00456350();\n    uVar3 = fcn.00455570();\n    if (arg_10h == '\\0') {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = 0xfde9;\n    }\n    (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(uVar5, 0, uVar3, iVar1 + 1, uVar4, uVar2);\n    return arg_8h;\n}\n",
        "token_count": 343
    },
    "0040235c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Removing unreachable block (ram,0x00402670)\n// WARNING: Removing unreachable block (ram,0x00402661)\n// WARNING: Removing unreachable block (ram,0x0040260e)\n// WARNING: Removing unreachable block (ram,0x004024ca)\n// WARNING: Removing unreachable block (ram,0x004025e0)\n// WARNING: Removing unreachable block (ram,0x0040261e)\n// WARNING: Removing unreachable block (ram,0x00402633)\n// WARNING: Removing unreachable block (ram,0x004026a7)\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0040235c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    ulong *puVar3;\n    ulong *puVar4;\n    char acStack291508 [291328];\n    uint var_b0h;\n    uint var_98h;\n    char var_7dh;\n    uint var_7ch;\n    int32_t var_69h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint uStack72;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_29h;\n    char var_21h;\n    char var_20h;\n    char var_1fh;\n    char var_1eh;\n    uchar var_1dh;\n    int32_t var_1ch;\n    int32_t var_18h;\n    char var_11h;\n    char var_10h;\n    char var_fh;\n    char var_eh;\n    char var_dh;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x40236a;\n    iVar1 = fcn.004386a0();\n    var_29h._0_1_ = 1;\n    var_30h = 0x8a2;\n    var_34h = 0x16b;\n    var_dh = '\\x01';\n    while (var_dh != '\\0') {\n        var_dh = '\\0';\n    }\n    var_eh = '\\x01';\n    while (var_eh != '\\0') {\n        var_eh = '\\0';\n    }\n    var_fh = '\\x01';\n    while (var_fh != '\\0') {\n        var_fh = '\\0';\n    }\n    var_10h = '\\x01';\n    while (var_10h != '\\0') {\n        var_10h = '\\0';\n    }\n    var_11h = '\\x01';\n    while (var_11h != '\\0') {\n        var_11h = '\\0';\n    }\n    var_ch = 0x226f;\n    var_ch = 0xf3e;\n    var_ch = 0xf3e;\n    puVar3 = &stack0xfffffff4 + -iVar1;\n    *(&stack0xfffffff4 + -iVar1) = 0x4024ea;\n    (*_sym.imp.KERNEL32.dll_GetCurrentProcessorNumber)();\n    var_18h = 0;\n    for (var_1ch = 0; var_1ch < 0x336b1; var_1ch = var_1ch + 1) {\n        var_18h = var_18h + 1;\n    }\n    if (var_18h == 0x336b1) {\n        *(puVar3 + 1) = 0x47200;\n        *(puVar3 + 4) = 0x4ce7a0;\n        *puVar3 = &stack0xfffb8d4c;\n        *(puVar3 + -4) = 0x40253f;\n        sub.msvcrt.dll_memcpy();\n        var_38h = 0;\n        var_3ch = 0;\n        var_40h = 0x590813;\n        *(puVar3 + -4) = 0x40255e;\n        fcn.004838d0();\n        *(puVar3 + 4) = &stack0xffffff7f;\n        *puVar3 = \"C:\\\\Windows\\\\Microsoft.NET\\\\Fra\";\n        *(puVar3 + -4) = 0x402579;\n        fcn.004b29a0();\n        *(puVar3 + -0xc) = 0x402586;\n        fcn.00483900();\n        *(puVar3 + -1) = \"mework\\\\v4.0.30319\\\\vbc.exe\";\n        *(puVar3 + -0xc) = 0x40259a;\n        fcn.004b3190();\n        uStack72 = *0x518d88;\n        var_48h = 0;\n        var_4ch = 0x101b;\n        var_58h = 0x950075;\n        var_54h = 0;\n        var_1eh = '\\x01';\n        while (var_1eh != '\\0') {\n            var_1eh = '\\0';\n        }\n        var_1fh = '\\x01';\n        while (var_1fh != '\\0') {\n            var_1fh = '\\0';\n        }\n        var_20h = '\\x01';\n        while (var_20h != '\\0') {\n            var_20h = '\\0';\n        }\n        var_21h = '\\x01';\n        while (var_21h != '\\0') {\n            var_21h = '\\0';\n        }\n        var_1dh = 0;\n        *(puVar3 + 100) = 0x4f8d53;\n        *(puVar3 + 0x5c) = 0x9da0d;\n        *(puVar3 + 0xc) = NULL;\n        *(puVar3 + 0xb) = 0x5a;\n        *(puVar3 + 0x54) = 0x9fd3e;\n        *(puVar3 + 10) = 0x4afc;\n        *(puVar3 + 9) = 0x8f7a6;\n        *(puVar3 + 0x4c) = NULL;\n        *(puVar3 + 0x44) = 0x4e72fa;\n        *(puVar3 + 8) = 0x74d85d;\n        *(puVar3 + 7) = 0xfe61;\n        *(puVar3 + 0x3c) = NULL;\n        *(puVar3 + 0x34) = 0x12342;\n        *(puVar3 + 6) = 0xb8bac;\n        puVar3[5] = 0;\n        *(puVar3 + 0x24) = 0x7742;\n        *(puVar3 + 4) = 0xcd;\n        *(puVar3 + 3) = 0x283;\n        *(puVar3 + 0x1c) = NULL;\n        *(puVar3 + 2) = 0x21e4;\n        *(puVar3 + 0x14) = NULL;\n        *(puVar3 + 1) = 0x30d;\n        *(puVar3 + 0xc) = NULL;\n        *puVar3 = _str._np;\n        *(puVar3 + -4) = 0x299;\n        *(puVar3 + -1) = 0x77e;\n        *(puVar3 + -0xc) = 0x4ce020;\n        *(puVar3 + -2) = 0x40278d;\n        _var_60h = fcn.00401734(*(puVar3 + -0xc), *(puVar3 + -1), *(puVar3 + -4), *puVar3, *(puVar3 + 4), *(puVar3 + 1)\n                                , *(puVar3 + 0xc), *(puVar3 + 2), *(puVar3 + 0x14), *(puVar3 + 3), *(puVar3 + 0x1c), \n                                *(puVar3 + 4), *(puVar3 + 0x24), *(puVar3 + 5), *(puVar3 + 0x2c), *(puVar3 + 6), \n                                *(puVar3 + 0x34), *(puVar3 + 7), *(puVar3 + 0x3c), *(puVar3 + 8), *(puVar3 + 0x44), \n                                *(puVar3 + 9), *(puVar3 + 0x4c), *(puVar3 + 10), *(puVar3 + 0x54), *(puVar3 + 0xb), \n                                *(puVar3 + 0x5c), *(puVar3 + 0xc), *(puVar3 + 100));\n        *puVar3 = 0x5b;\n        *(puVar3 + -4) = 0x77e;\n        *(puVar3 + -1) = 0x4ce020;\n        *(puVar3 + -0xc) = \"ryy6u9x6qFf1C9uGzZEZkL3R2oUz70wsSsoAV0SdpRDX5LnDCSYJVmbBNaTDU8zJRd9JzfitobkgSj4pKJ0xNX8w67\";\n        *(puVar3 + -2) = 0x4027b7;\n        fcn.004015ef(*(puVar3 + -0xc), *(puVar3 + -1), *(puVar3 + -4), *puVar3);\n        *(puVar3 + -4) = 0x1;\n        *(puVar3 + -1) = &fcn.0040235c::var_98h;\n        *(puVar3 + -0xc) = &fcn.0040235c::var_b0h;\n        *(puVar3 + -2) = 0x4027d7;\n        fcn.00401bac(*(puVar3 + -0xc), *(puVar3 + -1), *(puVar3 + -4));\n        *(puVar3 + -2) = 0x4027e4;\n        var_64h = fcn.00456350();\n        *(puVar3 + -2) = 0x4027ec;\n        *NULL = fcn.00401b72();\n        *puVar3 = 0x5b;\n        *(puVar3 + -4) = 0x47200;\n        *(puVar3 + -1) = &stack0xfffb8d4c;\n        *(puVar3 + -0xc) = \"R2v9qXwKNhgOu2jYnbWZHRLs9JJL1m28QX7SBLxXtJeCn50LeRQKsCiKaBAjdr8lh4u5AKXJEg97bHgjgKyLkBLQHK\";\n        *(puVar3 + -2) = 0x402815;\n        fcn.004015ef(*(puVar3 + -0xc), *(puVar3 + -1), *(puVar3 + -4), *puVar3);\n        *(puVar3 + 4) = 0x876512;\n        *puVar3 = 0x656736;\n        *(puVar3 + -4) = &stack0xfffb8d4c;\n        *(puVar3 + -1) = NULL;\n        *(puVar3 + -0xc) = var_64h;\n        puVar4 = puVar3 + -2;\n        *(puVar3 + -2) = 0x402849;\n        (*(stack0xffffff94 + 0x4ce020))();\n        uVar2 = 0;\n        *(puVar4 + -4) = 0x40285b;\n        fcn.004b5ed0();\n        *(puVar4 + -4) = 0x402868;\n        fcn.004b2fc0();\n    }\n    else {\n        for (stack0xffffffd4 = 0x4c; 0 < stack0xffffffd4; unique0x00007a80 = stack0xffffffd4 + -1) {\n        }\n        uVar2 = 0xf983;\n    }\n    return uVar2;\n}\n",
        "token_count": 2853
    },
    "004054c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid fcn.004054c0(void)\n\n{\n    char *pcVar1;\n    uint *puVar2;\n    uint in_stack_fffffe48;\n    ulong uVar3;\n    uint var_13ch;\n    uint var_138h;\n    uint var_11dh;\n    uint var_101h;\n    uint var_e5h;\n    uint var_c9h;\n    uint var_adh;\n    uint var_94h;\n    uint var_79h;\n    uint var_5dh;\n    uint var_41h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.004b2c00();\n    fcn.004b2c00();\n    fcn.004838d0();\n    fcn.004b29a0(\"jwxbujxbdvfurlslwvckdxmgzongseidpb\", &var_11dh);\n    fcn.00403d40(0x15ca, 0xf85, 0, &var_138h, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.00403e42();\n    fcn.004838d0();\n    uVar3 = CONCAT44(0x4055bd, in_stack_fffffe48);\n    fcn.004b29a0(\"qidebajwgiljmfzgmprpepaemjbtbkbmnmnbzqtzrksuqbvouyjkxgbogbmjsbeoakocxdlfufylxrteeqnuqsiwbwm\", \n                 &var_101h);\n    fcn.004838d0(uVar3);\n    fcn.004b29a0(\"gxsexmrtyquntfpeaanvklm\", &var_e5h);\n    fcn.0040412e(1, &var_101h + 1, *0x518fa8, *0x518fa8 >> 0x20, *0x518fa0, *0x518fa0 >> 0x20, *0x518f98, \n                 *0x518f98 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.00404400();\n    fcn.004045cc();\n    fcn.004838d0();\n    fcn.004b29a0(\"aygozijuvnkowzkznwvsx\", &var_c9h);\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.00404b5a(0xe3e, *0x518fc0, *0x518fc0 >> 0x20, &var_c9h + 1, *0x518fb8, *0x518fb8 >> 0x20, 0xae5, *0x518fb0, \n                 *0x518fb0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.00404ba8(*0x518fd0, *0x518fd0 >> 0x20, *0x518fc8, *0x518fc8 >> 0x20);\n    fcn.00405076(0x970);\n    fcn.004053be();\n    fcn.004b2fc0();\n    fcn.004838d0();\n    fcn.004b29a0(\"eikckldedwzlronkkidrksxcouneaaqejngnbirvrohnfkzjrzpqgteaksfehzhulknuwokezsqyvgbup\", &var_79h);\n    fcn.00405430(*0x518ff0, *0x518ff0 >> 0x20, *0x518fe8, *0x518fe8 >> 0x20, 1, *0x518f70, *0x518f70 >> 0x20, 0, \n                 *0x518fe0, *0x518fe0 >> 0x20, 0x968, 0xdbf, &var_94h, *0x518fd8, *0x518fd8 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004039b2(*0x518ff8, *0x518ff8 >> 0x20);\n    fcn.00403a8a();\n    fcn.004838d0();\n    fcn.004b29a0(\"ywjvdqbdggtacgpwhdmhrlaxwjzuxlwalzuygwduysgbjdelnkrjursqgzaifypsjmtwkqfmcznyqetffcvw\", &var_5dh);\n    fcn.004038a2(&var_79h + 1, 0x41f, *0x519008, *0x519008 >> 0x20, *0x519000, *0x519000 >> 0x20, 1, 0, 0x533, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"kzywdqmtcldznwumhgmyoodtfimbzmlgmraacjqutbndhnracukusuxudwmcxigwbovjudbm\", &var_41h);\n    fcn.004838d0();\n    puVar2 = &var_25h;\n    pcVar1 = \"molizkmopbryzodlwvhucxfjmcwrfhkllkuvfeknruqhoxaklscwollswgybay\";\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0(\"mlhzatkjtpfzekgxel\", &var_9h, pcVar1, puVar2);\n    fcn.00403920(0x2f7, 1, &var_25h + 1, *0x519020, *0x519020 >> 0x20, 0, 0, *0x519018, *0x519018 >> 0x20, &var_41h + 1\n                 , *0x519010, *0x519010 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    return;\n}\n",
        "token_count": 1556
    },
    "0040b09e": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.0040b09e(uint param_1)\n\n{\n    uint in_stack_fffffbec;\n    ulong uVar1;\n    uint var_3cch;\n    uint var_3c0h;\n    uint var_3a5h;\n    uint var_389h;\n    uint var_370h;\n    uint var_355h;\n    uint var_339h;\n    uint var_31dh;\n    uint var_304h;\n    uint var_2e9h;\n    uint var_2cdh;\n    uint var_2b1h;\n    uint var_295h;\n    uint var_27ch;\n    uint var_261h;\n    uint var_245h;\n    uint var_229h;\n    uint var_20dh;\n    uint var_1f1h;\n    uint var_1d5h;\n    uint var_1b9h;\n    uint var_1a0h;\n    uint var_185h;\n    uint var_169h;\n    uint var_150h;\n    uint var_138h;\n    uint var_11dh;\n    uint var_101h;\n    uint var_e5h;\n    uint var_c9h;\n    uint var_adh;\n    uint var_94h;\n    uint var_79h;\n    uint var_5dh;\n    uint var_41h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.004b2c00();\n    fcn.004b2c00();\n    fcn.004b2c00();\n    fcn.004838d0();\n    uVar1 = CONCAT44(0x40b109, in_stack_fffffbec);\n    fcn.004b29a0(\"saofnymbjkexrl\", &var_3a5h);\n    fcn.004838d0(uVar1);\n    fcn.004b29a0(\"rpxzntioqgnbnmlbegetjplvrojfuhexlntyvqelmdbsvmosaxnlsmfrjkgxfcltv\", &var_389h);\n    fcn.0040a456(*0x521ec0, *0x521ec0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.0040a496(param_1, *0x521ed0, *0x521ed0 >> 0x20, 1, &var_370h, 0x16c8, 0x1bf, 0x1ccc, *0x521ec8, \n                 *0x521ec8 >> 0x20);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"giliycygjrpdkyqbhavozddbywbgwmuriqdeoytubaztmxnuxl\", &var_339h);\n    fcn.004838d0();\n    fcn.004b29a0(\"wtvvaityjefkfearztyjlmafhmaiiblegpdlnvdfoqhyofvhaddnygpijbddkrxwwltrjczdzjwhognnarouzrvegppnjn\", \n                 &var_31dh);\n    fcn.0040a6a2(&var_339h + 1, 0x8d7, 0x1bc6, &var_355h + 1, *0x521ed8, *0x521ed8 >> 0x20, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"noskwrysiauadwblwabakilcwluftssxufqpsnhrsidgetexqzynqjdxrvtygiwm\", &var_2e9h);\n    fcn.004838d0();\n    fcn.004b29a0(\"vwxygxnyfwoiakluirpjlsegddcnvaszepgwlbjokkleyzqnqfmoouuzoqogxamojyqjpwrepxslsawwpzsgawdqmrn\", \n                 &var_2cdh);\n    fcn.004838d0();\n    fcn.004b29a0(\"sbzvouqpwgkwphrkhulmcddnaeqlmvpmcoswdxyhuhwehumnosxzcvvkdenad\", &var_2b1h);\n    fcn.0040a7aa(param_1, &var_2cdh + 1, 1);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"kltahqvrxoezb\", &var_295h);\n    fcn.0040a87a(&var_2b1h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"sycvcnxrsopbvnuqycsaecxjlobrwjaxducvohitpeoxzdorqkaxaspajundfqchjulowwernoqz\", &var_261h);\n    fcn.004838d0();\n    fcn.004b29a0(\"hqivdwurfdpyhykllaufsqnbgoagtlsjzawx\", &var_245h);\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.0040a9fc(param_1, *0x521ee8, *0x521ee8 >> 0x20, 0x1807, *0x521ee0, *0x521ee0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"rbkiwzpzdipfkswntkldakrquokyxnolaekycxepoeoaggdgvneb\", &var_20dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"mmegkspaoqfzjwpqfgndfdfunebfyjavcqihevwoewncljydogig\", &var_1f1h);\n    fcn.004838d0();\n    fcn.004b29a0(\"pqdgrjvxckumecoawrylrckkkvzxcmixcdafreckjqvnlubgfkfmhvnscavhipcnkfkjigjkwczskpedpqjflzd\", &var_1d5h);\n    fcn.004838d0();\n    fcn.004b29a0(\"pznvewbsqoubypbevpidoeevfvdbdlnf\", &var_1b9h);\n    fcn.0040ae82(&var_1d5h + 1, &var_1f1h + 1, *0x521ef0, *0x521ef0 >> 0x20, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.0040af70(param_1, *0x521f00, *0x521f00 >> 0x20, 0xb4, *0x521ef8, *0x521ef8 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00409a90();\n    fcn.004838d0();\n    fcn.004b29a0(\"mayadcfhhvfdzpptnznuzivzffibuvtxfxskoisafjuc\", &var_185h);\n    fcn.004838d0();\n    fcn.004b29a0(\"mjvvkuhfskdirxzwciysxjecvvarckjjckvyfvfslqonzilsvwjovltltinkkzhyklilxhhhbhhkoiylafilmvlokxzovvwwf\", \n                 &var_169h);\n    fcn.00409bbc(0x65f, 0x89d, 0, 0, *0x521f08, *0x521f08 >> 0x20, &var_185h + 1, 0, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.00409cd2(param_1);\n    fcn.004b2fc0();\n    fcn.0040a070();\n    fcn.0040a19a(param_1, *0x521e18, *0x521e18 >> 0x20, *0x521f10, *0x521f10 >> 0x20);\n    fcn.004b2fc0();\n    fcn.004838d0();\n    fcn.004b29a0(\"vnhew\", &var_11dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"ldmitcmtskszoy\", &var_101h);\n    fcn.004838d0();\n    fcn.004b29a0(\"znxgsdybsawgqupglxzlhshqngybtkzltpkuwugdchhjepoqkweuvcfljyjizoujmyyflxilchwfnxpqnuukfnlgvtnvkddpq\", \n                 &var_e5h);\n    fcn.004838d0();\n    fcn.004b29a0(\"kspzhtrkymqnfzsvitiielfvnfckmjnmpqsnqujzkiadczbzqrxuyxpplsbfoatyopsdyfqpplhsosybvpvyxjrkvz\", &var_c9h)\n    ;\n    fcn.0040a282(&var_e5h + 1, &var_101h + 1, 0xa1b, 0, &var_11dh + 1, 0xfcd, &var_138h, 1, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"xrmgqkjinysulhioitmynioxaozphqjruovqciqjyjxpdqhjszzcoxtm\", &var_adh);\n    fcn.0040a334(*0x521f28, *0x521f28 >> 0x20, *0x521f20, *0x521f20 >> 0x20, &var_c9h + 1, *0x521f18, *0x521f18 >> 0x20)\n    ;\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004093d0(param_1, *0x521f30, *0x521f30 >> 0x20);\n    fcn.004b2fc0();\n    fcn.004838d0();\n    fcn.004b29a0(\"vpkmkflmhpmzaferjnprkymreuswsvkyfotlonglbpjknsahdvwysimdupqes\", &var_79h);\n    fcn.004838d0();\n    fcn.004b29a0(\"ywhnqieuaqsxidowwichrsgtcmzrcaayamogbujxuhnykxxtvbvrokjqmxtksdhm\", &var_5dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"qsii\", &var_41h);\n    fcn.00409438(*0x521f48, *0x521f48 >> 0x20, *0x521f40, *0x521f40 >> 0x20, &var_5dh + 1, &var_79h + 1, &var_94h, 1, \n                 *0x521f38, *0x521f38 >> 0x20, 1, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004095ea(1, 1);\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.0040988e(0x1128, 0x205, 0, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.004098ba(0, *0x521f68, *0x521f68 >> 0x20, *0x521f60, *0x521f60 >> 0x20, *0x521f58, *0x521f58 >> 0x20, 0x68, \n                 &var_25h + 1, 1, *0x521f50, *0x521f50 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004099d8();\n    return;\n}\n",
        "token_count": 3351
    },
    "0040cf80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.0040cf80(void)\n\n{\n    uint var_4h;\n    \n    return 0x165c4;\n}\n",
        "token_count": 30
    },
    "0040d0ca": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.0040d0ca(uint param_1)\n\n{\n    uint in_stack_fffffcc4;\n    ulong uVar1;\n    uint uVar2;\n    char *pcVar3;\n    uint *puVar4;\n    uint var_19ch;\n    uint var_18ch;\n    uint var_171h;\n    uint var_155h;\n    uint var_139h;\n    uint var_11dh;\n    uint var_101h;\n    uint var_e5h;\n    uint var_c9h;\n    uint var_adh;\n    uint var_91h;\n    uint var_75h;\n    uint var_59h;\n    uint var_3dh;\n    uint var_21h;\n    uint var_bp_4h;\n    \n    fcn.004b2c00();\n    fcn.004b2c00();\n    fcn.0040cf80(0xbd);\n    fcn.004838d0();\n    fcn.004b29a0(\"gjfybgxozltjywsqctbngcwxfud\", &var_171h);\n    fcn.0040cf92(0xffa, 0, 499, &var_18ch, 0x69c, 0, *0x522020, *0x522020 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"hzuvmbiljmlocwqjvsrzwbouyuwvxjfssysnxdmhydnbuxlrmunjwflzapqeybkltuwizfojlvdrztsfeijayic\", &var_155h);\n    fcn.004838d0();\n    fcn.004b29a0(\"rpctiztobrjjnxzsapixhnxdqlyliyduzhkfloncqmnrp\", &var_139h);\n    fcn.004838d0();\n    fcn.004b29a0(\"kejoqhvqlydxyohdhggebbgjqtnschktlwuotwckvmvir\", &var_11dh);\n    fcn.0040c528(*0x522030, *0x522030 >> 0x20, &var_139h + 1, &var_155h + 1, &var_171h + 1, 1, *0x522028, \n                 *0x522028 >> 0x20, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"pnwiuqnuujkaxnjkcgygyojexhmxpyspszvgenzqfzfgrhvpggignxgyvswjusngmx\", &var_101h);\n    fcn.0040c6f8(*0x522038, *0x522038 >> 0x20, &var_11dh + 1, 0, 0x1081, 0x370, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.0040c726(*0x522040, *0x522040 >> 0x20);\n    fcn.004838d0();\n    fcn.004b29a0(\"uxbsqawftxqjxmqsussortqvtmwjkffrcvivjkbmpebhfyucnjddfpttnopyntg\", &var_e5h);\n    fcn.004838d0();\n    fcn.004b29a0(\"pznlaoxz\", &var_c9h);\n    fcn.0040c7fa(*0x522048, *0x522048 >> 0x20, &var_e5h + 1, &var_101h + 1, 1, 0x45, 0x4f8, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"niwgipncut\", &var_adh);\n    fcn.0040c824(*0x522058, *0x522058 >> 0x20, &var_c9h + 1, 1, 0, 1, *0x522050, *0x522050 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    puVar4 = &var_91h;\n    pcVar3 = \"oaljledvewwbtsqbzayhmdmiiznmjgsihgkytksqebxoudmovdoiuknbuncajtmvqfbybciruclwahfkuvqevonzefujole\";\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0(\"jejwkwkldjhyaczgfqkrorgtkdcxyhhrelfkxeewzzvjekadyzdvsfvzfvnggeah\", &var_75h, pcVar3, puVar4);\n    fcn.0040c8de(*0x522080, *0x522080 >> 0x20, &var_91h + 1, *0x522078, *0x522078 >> 0x20, 0x34c, 0x950, *0x522070, \n                 *0x522070 >> 0x20, *0x522068, *0x522068 >> 0x20, 1, &var_adh + 1, *0x522060, *0x522060 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"vmtkgcpqcna\", &var_59h);\n    uVar1 = CONCAT44(0x40d621, in_stack_fffffcc4);\n    fcn.0040c9d0(2, &var_75h + 1);\n    fcn.004b2fc0(uVar1);\n    uVar2 = uVar1 >> 0x20;\n    fcn.00483900();\n    fcn.0040ca2e(0x366, uVar2);\n    fcn.0040cbba();\n    fcn.004838d0();\n    fcn.004b29a0(\"rwudnwmuzqmcczrm\", &var_3dh, uVar2);\n    fcn.004838d0();\n    fcn.004b29a0(\"tqhtsclcrkhafkzdegyfcmseurecjsoemwdxqqdwtgxtsuzbbqhvcmanzckutvn\", &var_21h);\n    fcn.0040ce04(&var_3dh + 1, 0x1b76, &var_59h + 1, 0x140f, 1, *0x522090, *0x522090 >> 0x20, *0x522088, \n                 *0x522088 >> 0x20, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.0040c15e(param_1, 0x1f22, *0x5220b0, *0x5220b0 >> 0x20, *0x5220a8, *0x5220a8 >> 0x20, 1, *0x5220a0, \n                 *0x5220a0 >> 0x20, 0xef7, *0x522098, *0x522098 >> 0x20);\n    fcn.004b2fc0();\n    fcn.0040c3ac(*0x5220c0, *0x5220c0 >> 0x20, *0x5220b8, *0x5220b8 >> 0x20, 1, 0x43, 0);\n    return;\n}\n",
        "token_count": 1949
    },
    "0040fcb4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.0040fcb4(uint param_1)\n\n{\n    uint in_stack_fffffd9c;\n    ulong uVar1;\n    uint var_21ch;\n    uint var_20ch;\n    uint var_1f1h;\n    uint var_1d5h;\n    uint var_1bch;\n    uint var_1a1h;\n    uint var_185h;\n    uint var_169h;\n    uint var_14dh;\n    uint var_131h;\n    uint var_115h;\n    uint var_fch;\n    uint var_e1h;\n    uint var_c5h;\n    uint var_a9h;\n    uint var_90h;\n    uint var_75h;\n    uint var_5ch;\n    uint var_41h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.004b2c00();\n    fcn.004838d0();\n    uVar1 = CONCAT44(0x40fcff, in_stack_fffffd9c);\n    fcn.004b29a0(\"ussgakzqcndveqtoppbvyjfkfjxpumkxeqtdgcpgsmqvztampcydidmucsljkyyxjqxttdcuqcyowbvwatqi\", &var_1f1h);\n    fcn.004838d0(uVar1);\n    fcn.004b29a0(\"ujvmdhilqvlmpsqwkbwugrbkfeknpdnswajei\", &var_1d5h);\n    fcn.0040fa90(0, 0x380, *0x522268, *0x522268 >> 0x20, &var_1f1h + 1, 1, &var_20ch, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.0040fb58(0x182);\n    fcn.0040f22e(0x56a, *0x522278, *0x522278 >> 0x20, *0x522270, *0x522270 >> 0x20);\n    fcn.004838d0();\n    fcn.004b29a0(\"fkygsifhvebnfqunnindtgpsstakedminjdpjevbaojadrxnyzzlv\", &var_1a1h);\n    fcn.0040f2c4(param_1, 0x46c, &var_1bch, 0x364, 1, *0x522280, *0x522280 >> 0x20);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.0040f5a6(0x136d, 1);\n    fcn.004838d0();\n    fcn.004b29a0(\"pzjhfydbxgcgjzhnzfcxzvwvedhhkcrh\", &var_185h);\n    fcn.004838d0();\n    fcn.004b29a0(\"olczebxogengndztlkyfedjnscxnuaoycyfalcakflavgmijozebjvsgxkxrp\", &var_169h);\n    fcn.004838d0();\n    fcn.004b29a0(\"olpqiftvrzzuvnaavazapjlzorvugkajdggmocwuiwyiiluw\", &var_14dh);\n    fcn.0040f614(&var_169h + 1, &var_185h + 1, &var_1a1h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"hapoodnbtwstvbpvflnlllkonsbjjcdjmdydmiyilwsznzsrhswgqqjhkwsnftvrkxqwbhmdvoareltbehofxsj\", &var_131h);\n    fcn.0040f822(0x174f, 0, *0x522288, *0x522288 >> 0x20, 0x17b, 0x4e3, &var_14dh + 1, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(0x51abd8, &var_115h);\n    fcn.0040f89c(0, 1, *0x522298, *0x522298 >> 0x20, 0, 0x175, *0x522290, *0x522290 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.0040f8f6(0xb9c, 0, *0x5222b8, *0x5222b8 >> 0x20, *0x5222b0, *0x5222b0 >> 0x20, *0x5222a8, *0x5222a8 >> 0x20, \n                 *0x5222a0, *0x5222a0 >> 0x20);\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.0040e514(param_1, *0x5222d0, *0x5222d0 >> 0x20, &var_fch, 0x77c, 0xf44, 0x4db, 0x1331, *0x5222c8, \n                 *0x5222c8 >> 0x20, *0x5222c0, *0x5222c0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"gaamriujvrhshjpacrpzsuviivgjyxagigscgaqqexses\", &var_c5h);\n    fcn.0040e5c4(1, 0, 1, &var_e1h + 1, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"absejdzjavyxpmpgxuqvglamnlzodhmuzsllqmtkyfyuguuvnnnyjflsxfoaejgzyfeqfcrmtyyshajrulnbnsbw\", &var_a9h);\n    fcn.0040e6d4(0xa2c, 0xbce, &var_c5h + 1, 0x8b, 0x3e6);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.0040e7bc(param_1, *0x5222d8, *0x5222d8 >> 0x20, 1);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"ljnvhwrswfdgkhnbnmhjjeuvjwaw\", &var_41h);\n    fcn.0040e9de(param_1, &var_5ch, *0x5222e8, *0x5222e8 >> 0x20, *0x5222e0, *0x5222e0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.0040eb2a();\n    fcn.0040ebe0();\n    fcn.004838d0();\n    fcn.004b29a0(\"alcqwjzfnzlhbsncvlxhchj\", &var_25h);\n    fcn.004838d0();\n    fcn.004b29a0(\"vgemjxiguxdbubwqllnfnvotsccpufaxkanpgftphcsoohcbxgnwwduhhwidvjisglwqavcwklzveljbxdyopkwpzhqmwlwbtwjp\"\n                 , &var_9h);\n    fcn.0040ed34(&var_25h + 1, 0x5f8, &var_41h + 1, 0, 0x118d, 1, 1, 0x667, *0x5222f0, *0x5222f0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    return;\n}\n",
        "token_count": 2147
    },
    "00411c74": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.00411c74(uint param_1)\n\n{\n    char *pcVar1;\n    uint *puVar2;\n    uint in_stack_fffffbd4;\n    ulong uVar3;\n    ulong in_stack_fffffc80;\n    uint uVar4;\n    uint var_30ch;\n    uint var_2fch;\n    uint var_2e1h;\n    uint var_2c5h;\n    uint var_2a9h;\n    uint var_290h;\n    uint var_275h;\n    uint var_25ch;\n    uint var_244h;\n    uint var_22ch;\n    uint var_211h;\n    uint var_1f8h;\n    uint var_1ddh;\n    uint var_1c1h;\n    uint var_1a5h;\n    uint var_189h;\n    uint var_170h;\n    uint var_155h;\n    uint var_139h;\n    uint var_11dh;\n    uint var_101h;\n    uint var_e5h;\n    uint var_c9h;\n    uint var_adh;\n    uint var_91h;\n    uint var_75h;\n    uint var_59h;\n    uint var_3dh;\n    uint var_21h;\n    uint var_bp_4h;\n    \n    uVar4 = in_stack_fffffc80 >> 0x20;\n    fcn.004b2c00();\n    fcn.004b2c00();\n    fcn.004838d0();\n    fcn.004b29a0(\"hupmajpmbjamuqjgxwsidqmdooaxnvwxjhpvvqvptocntsis\", &var_2e1h);\n    fcn.00410eac(0x1587, 0xc66, *0x5223a8, *0x5223a8 >> 0x20, &var_2fch, 1, *0x5223a0, *0x5223a0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    uVar3 = CONCAT44(uVar4, &var_2c5h);\n    pcVar1 = \"zssxqaxwnyhzorvqysipgkulinwxsqytevljqwdetbryumfwzeorzaz\";\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0(\"njpuesmyxpwrowcfckmomlfeoxaapblamfewsydfdxbskrxednigkjpircmsrfmaqpxsfeqzhqjsrzumtpbsbcksilzyof\", \n                 &var_2a9h, pcVar1, uVar3);\n    fcn.00411110(0xa01, 1, &var_2c5h + 1, *0x5223c0, *0x5223c0 >> 0x20, *0x5223b8, *0x5223b8 >> 0x20, *0x5223b0, \n                 *0x5223b0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.004111e4(param_1, *0x5223d8, *0x5223d8 >> 0x20, &var_290h, *0x5223d0, *0x5223d0 >> 0x20, *0x5223c8, \n                 *0x5223c8 >> 0x20);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004112d4(param_1, 0x18cc, 0, 0x11c3, 0, *0x5223e0, *0x5223e0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00411534(param_1);\n    fcn.004b2fc0();\n    fcn.004838d0();\n    fcn.004b29a0(0x51b3e5, &var_211h);\n    fcn.004116b8(param_1, 0x973, 0);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    uVar3 = CONCAT44(0x411fe3, in_stack_fffffbd4);\n    fcn.004b29a0(\"vubvzfubzukhavtrkubhlbvptrourcpxouulivbmtwrvrtshgqzdtohgkssuoiphwxgkxnsdxxg\", &var_1ddh);\n    fcn.004838d0(uVar3);\n    fcn.004b29a0(\"ohrjmrhtfcadsujggitvuwbkonymwjkqafzmmaejhanrcxysddyyomitalz\", &var_1c1h);\n    fcn.004838d0();\n    fcn.004b29a0(\"ypquvvgjvnafgrojbybbpzdzzqvqzqlaluyakmqgrkgpgclil\", &var_1a5h);\n    fcn.0041176a(param_1, &var_1c1h + 1, *0x522400, *0x522400 >> 0x20, *0x5223f8, *0x5223f8 >> 0x20, 0x1dd, \n                 &var_1ddh + 1, &var_1f8h, *0x5223f0, *0x5223f0 >> 0x20, *0x5223e8, *0x5223e8 >> 0x20);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"txkpowfjnbankayzsijeotnofmncxdtqskgyhfvdpahlpjsqwakbwylbvlhpqdbcdjmlvcqyrmurmumoxpxdlzwngb\", &var_189h\n                );\n    fcn.004118f0(0x810, &var_1a5h + 1, *0x522408, *0x522408 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"gbarwilemwqrvmtyilexaiatkeuuoalobzy\", &var_155h);\n    fcn.00411920(param_1, 0);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"mdrepedkdemeqem\", &var_139h);\n    fcn.00411ace(1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.00410b16(*0x522410, *0x522410 >> 0x20, &var_139h + 1, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.00410bd6(0x1e0);\n    fcn.00410bea(0x12ae, 0, 1, *0x522430, *0x522430 >> 0x20, *0x522428, *0x522428 >> 0x20, *0x522420, *0x522420 >> 0x20\n                 , *0x522418, *0x522418 >> 0x20);\n    fcn.004838d0();\n    fcn.004b29a0(\"apxvxfaokynpnzxrrxwafylxbfzexapo\", &var_101h);\n    fcn.004838d0();\n    fcn.004b29a0(\"ktpgtyfthrjuilfcgqwydyqhbnryqervferagjsuhxzkhpsnylqwdsgwqvwrusxjqpuahvxrzpqtvryxiktuevkucmszjgmqpwx\", \n                 &var_e5h);\n    fcn.004838d0();\n    fcn.004b29a0(\"lnndkzinttklvjywzpagolniygpfebelewhralknnqcyhozmbbnlfpjaushbkssdpkcgjctxtdamxgzbvptriobtsepwefrj\", \n                 &var_c9h);\n    fcn.004106be(*0x522438, *0x522438 >> 0x20, 0x3b9, &var_e5h + 1, &var_101h + 1, 0, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.00410794(0xf76, *0x522440, *0x522440 >> 0x20, 1, &var_c9h + 1, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    puVar2 = &var_91h;\n    pcVar1 = \"ymqyducnqkfumwiagsgfkzflgpkryuyxywwtrfuotwylrucphlejczfpbk\";\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0(\"niwsndq\", &var_75h, pcVar1, puVar2);\n    fcn.004838d0();\n    pcVar1 = \"uzovebojhunsnod\";\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0(0x51b713, &var_3dh, pcVar1);\n    fcn.004838d0();\n    fcn.004b29a0(\"qghdzgnnbzkqxstwrrrzoyeilmbashghkklufivleugerpihrlbopzuaqticodxpxaviauckzdxtkbiyoozegerzhnytejg\", \n                 &var_21h);\n    fcn.004108ce(0x19ae, &var_3dh + 1, 1, &var_59h + 1, &var_75h + 1, *0x522450, *0x522450 >> 0x20, &var_91h + 1, 0, \n                 *0x522448, *0x522448 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004109d6(param_1);\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 2787
    },
    "004151ae": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.004151ae(void)\n\n{\n    uint var_4h;\n    \n    return 1;\n}\n",
        "token_count": 25
    },
    "004154f4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004154f4(void)\n\n{\n    uint var_4h;\n    \n    return;\n}\n",
        "token_count": 24
    },
    "00417076": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.00417076(uint param_1)\n\n{\n    uint in_stack_fffff874;\n    ulong uVar1;\n    char *pcVar2;\n    uint *puVar3;\n    uint var_42ch;\n    uint var_420h;\n    uint var_405h;\n    uint var_3e9h;\n    uint var_3cdh;\n    uint var_3b1h;\n    uint var_395h;\n    uint var_37ch;\n    uint var_361h;\n    uint var_345h;\n    uint var_329h;\n    uint var_30dh;\n    uint var_2f1h;\n    uint var_2d5h;\n    uint var_2b9h;\n    uint var_29dh;\n    uint var_281h;\n    uint var_265h;\n    uint var_249h;\n    uint var_22dh;\n    uint var_211h;\n    uint var_1f5h;\n    uint var_1dch;\n    uint var_1c4h;\n    uint var_1a9h;\n    uint var_18dh;\n    uint var_171h;\n    uint var_155h;\n    uint var_139h;\n    uint var_11dh;\n    uint var_101h;\n    uint var_e5h;\n    uint var_cch;\n    uint var_b1h;\n    uint var_95h;\n    uint var_79h;\n    uint var_5dh;\n    uint var_41h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.004b2c00();\n    fcn.004838d0();\n    fcn.004b29a0(\"kyqrlwgmtexsyduuogbcylmolfhhsxhocajowttcacipfwpqpdrtt\", &var_405h);\n    fcn.004163d0(*0x522760, *0x522760 >> 0x20, 0x16c, 0x1c7c, *0x522758, *0x522758 >> 0x20, 0, &var_420h, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004166d4(0x101);\n    fcn.004838d0();\n    fcn.004b29a0(\"iuagqbwllxpxwcjlumpvulh\", &var_3e9h);\n    fcn.004838d0();\n    fcn.004b29a0(\"yymc\", &var_3cdh);\n    fcn.00416764(1, &var_3e9h + 1, 0x175, 0x2522, 0xe22, &var_405h + 1, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    puVar3 = &var_3b1h;\n    pcVar2 = \"bcnxosfzttvsfvjlsrvelfyhmzmbwmloeuwslqjuahsrsgnhvyfyydeuwyoedrilbbejayyczqzabcyqofntviflkgi\";\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0(\"rqizfaljjkzjxiisqycjiayyaylzmmjxlmcxbylzjtsyjmudtytilmfgkwcdriwuwhkjejharydmlsqlholndexbaekeounasdmo\"\n                 , &var_395h, pcVar2, puVar3);\n    fcn.00416858(&var_3b1h + 1, 0x9d, &var_3cdh + 1, *0x522768, *0x522768 >> 0x20, 0x1e8, 1, 0xf3e, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004169cc(0);\n    fcn.004838d0();\n    fcn.004b29a0(\"nsrprsesiwfpyoxafcippzfvoavnndcvrqrpwhtsnqkfeacqxpybqdqynuwiwufdbhndrwpytfgbyuayynsmjpjpvfrzcb\", \n                 &var_361h);\n    fcn.004838d0();\n    fcn.004b29a0(\"bavhsuxsylxtxzisjonffsvxzipqppizffwszmawwlzlwxabaqzcumengguruabakn\", &var_345h);\n    fcn.004838d0();\n    fcn.004b29a0(\"bcaatrfcewosiqnwrxsfwyvlomtszkkh\", &var_329h);\n    fcn.00416c32(param_1, &var_345h + 1, 0x1531, &var_361h + 1, 0, 0x73, &var_37ch, 0x1f5, 0x4f6, *0x522770, \n                 *0x522770 >> 0x20);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"scrtqcvbzmyrifqzmmyyaq\", &var_30dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"npeslrxhbxnslde\", &var_2f1h);\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.00416dc0(&var_2d5h + 1, *0x522780, *0x522780 >> 0x20, *0x522778, *0x522778 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.00416e5e(*0x522798, *0x522798 >> 0x20, *0x522790, *0x522790 >> 0x20, 0x616, 1, 0x43b, 0x16a, 0x8fb, *0x522788, \n                 *0x522788 >> 0x20);\n    uVar1 = 0x20a100417643;\n    fcn.00416eac();\n    fcn.004838d0(uVar1);\n    fcn.004b29a0(\"fuiwwyvsmsnsevsdwlzlzsdirhgwcwysscffgxorpodgzypdcccsijzgrpugkhtuc\", &var_29dh);\n    fcn.00416f76(0x33a, 0x5c0, *0x5227a0, *0x5227a0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"okhbnddokrjkvxxaajsupoksljrdnkrgd\", &var_281h);\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.0041592a(&var_281h + 1, *0x5227b0, *0x5227b0 >> 0x20, 0, &var_29dh + 1, *0x5227a8, *0x5227a8 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.00415958(*0x5227b8, *0x5227b8 >> 0x20);\n    fcn.004159a6(0);\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.004159f0(&var_265h + 1, *0x5227c0, *0x5227c0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.00415bda(0, *0x5227c8, *0x5227c8 >> 0x20);\n    fcn.004838d0();\n    fcn.004b29a0(\"fiqpwvpaemlbcqmdjtemdvmrztyyzrkqysexnwblcsghbholqtpvfwnguxjmthg\", &var_22dh);\n    fcn.004838d0();\n    fcn.004b29a0(0x51b3e5, &var_211h);\n    fcn.004838d0();\n    fcn.004b29a0(\"dsgnklhyahnclkcysjrdtrjhvsec\", &var_1f5h);\n    fcn.00415d90(0, 1, 0x324, &var_211h + 1, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.00415db8(*0x5227d0, *0x5227d0 >> 0x20);\n    fcn.00415dd6(param_1, 1, 0x829, *0x5227d8, *0x5227d8 >> 0x20);\n    fcn.004b2fc0();\n    fcn.004838d0();\n    fcn.004b29a0(\"swnienkpagxsmqktxhzqolplinntsg\", &var_1a9h);\n    fcn.00415eb2(param_1, 0xd1e, 1, 0, *0x5227f8, *0x5227f8 >> 0x20, 0x396, *0x5227f0, *0x5227f0 >> 0x20, *0x5227e8, \n                 *0x5227e8 >> 0x20, &var_1c4h, 0, *0x5227e0, *0x5227e0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"esikfwfbrjcpkfcrajqiljyfdlbabuilkotjvucnidmkaypcdrimwkxpnaefqkrhufgxwubgrrdis\", &var_18dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"ycacg\", &var_171h);\n    fcn.004838d0();\n    fcn.004b29a0(\"paygkijmplpwfttereegoclbvhgwoteaucukwiuaqavuxcficfqbajvuqzdqi\", &var_155h);\n    fcn.004838d0();\n    fcn.004b29a0(\"rsrtwcmad\", &var_139h);\n    fcn.00415f86();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"fyeeyonrtnahyyhmcnzgzlimakmfhowucpwoueuqxhkjzapeejkytdztwgkihpinscatg\", &var_11dh);\n    fcn.00414d2c(*0x522808, *0x522808 >> 0x20, 0xa4b, &var_139h + 1, 1, 1, *0x522800, *0x522800 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"erdayecqfmyhccxcbvfmemxkoghjcmofiqcqbz\", &var_101h);\n    fcn.00415024(0x733, 0x1068, &var_11dh + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"tkmovhexkeosqsaridjaxxxboqutgdlgebaramyuangq\", &var_e5h);\n    fcn.0041511c(0x44a, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004151ae();\n    fcn.004151be(0x262, 0, *0x522810, *0x522810 >> 0x20);\n    fcn.004838d0();\n    fcn.004b29a0(\"mqcgdmhhwwsepsdkzzoepucdjvcgqxrplhmwutrurecewr\", &var_b1h);\n    fcn.004838d0();\n    fcn.004b29a0(\"ongymngtdqmvweqclyyvydpivmbclhy\", &var_95h);\n    fcn.004838d0();\n    fcn.004b29a0(\"rcogoolshrflsoyunoxcmxljprlkbpegghlfmgzomrnjuecptziqfuwtkvtxpvinpizjqepljhnemfqciycjloklohmllkyinl\", \n                 &var_79h);\n    fcn.004838d0();\n    uVar1 = CONCAT44(0x417e54, in_stack_fffff874);\n    fcn.004b29a0(\"cqppairrikmmgcg\", &var_5dh);\n    fcn.004838d0(uVar1);\n    fcn.004b29a0(\"sqxrrtyknfobgdcnskjcljgctzjhgvrukqgoeysdtxogoycvywlfzknzppciskcqnqivzpiyxgcthrvqxeptsyizsiwydqim\", \n                 &var_41h);\n    fcn.00415404(param_1, &var_5dh + 1, *0x522818, *0x522818 >> 0x20);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"efpagxcgyfdegjuxzxltprfpuxtxbfvyhnwcdccymdpygegmpnshuiwkqcivvevvszylwylrfymnzwgun\", &var_25h);\n    fcn.00415474(&var_41h + 1, 0x1dc7, 0x108c);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004154f4();\n    fcn.00415500();\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.004156bc(&var_25h + 1, *0x522820, *0x522820 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    return;\n}\n",
        "token_count": 3879
    },
    "004195b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.004195b0(uint param_1)\n\n{\n    uint in_stack_fffffd6c;\n    ulong uVar1;\n    uint in_stack_fffffddc;\n    uint var_1cch;\n    uint var_1c4h;\n    uint var_1a9h;\n    uint var_18dh;\n    uint var_171h;\n    uint var_155h;\n    uint var_13ch;\n    uint var_121h;\n    uint var_105h;\n    uint var_e9h;\n    uint var_cdh;\n    uint var_b1h;\n    uint var_95h;\n    uint var_79h;\n    uint var_5dh;\n    uint var_41h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.004b2c00();\n    fcn.00418f36();\n    fcn.004838d0();\n    uVar1 = CONCAT44(0x419608, in_stack_fffffddc);\n    fcn.004b29a0(\"ziaxvyajkaoiqukcidzumuwebsyipuewcjsvvrbjgkaqrkptvldshcpkwwkcgpmkwoc\", &var_1a9h);\n    fcn.004838d0(uVar1);\n    fcn.004b29a0(\"ggxebkslpiyzymgndqlzeharnusiggwuqcbluqrgxyfjqnuxwagtyedbozpbenitdvdtqjpbuklsxgmwinftmnwjpiompmpaz\", \n                 &var_18dh);\n    fcn.004838d0();\n    fcn.004b29a0(0x51d266, &var_171h);\n    fcn.004838d0();\n    fcn.004b29a0(\"nrawdvkmrvtgraxhludsetkkpszlgbaixkiolgkqggwutexn\", &var_155h);\n    fcn.00419156(1, &var_171h + 1, &var_18dh + 1, &var_1a9h + 1, 0x81d, &var_1c4h, *0x5228d8, *0x5228d8 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004192fe();\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.0041942e(param_1, *0x5228e0, *0x5228e0 >> 0x20, 0);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.00419586();\n    fcn.00418a44(*0x5228e8, *0x5228e8 >> 0x20, 0x3d3, 1);\n    fcn.004838d0();\n    uVar1 = CONCAT44(0x419850, in_stack_fffffd6c);\n    fcn.004b29a0(\"uknvbvlsxicyibklbqfmrvsejlxps\", &var_105h);\n    fcn.004838d0(uVar1);\n    fcn.004b29a0(\"csnapwcxocrzk\", &var_e9h);\n    fcn.00418b7a(0xa9e, &var_105h + 1, *0x5228f0, *0x5228f0 >> 0x20, 0, &var_121h + 1, 1, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.00418c54(&var_cdh + 1, *0x522910, *0x522910 >> 0x20, *0x522908, *0x522908 >> 0x20, *0x522900, *0x522900 >> 0x20\n                 , 0, *0x5228f8, *0x5228f8 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.00418dae();\n    fcn.004838d0();\n    fcn.004b29a0(\"iayromwbqquntxmfpkgxyfbjywgfxolgczmgfrzybbjpmhgfppvs\", &var_95h);\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.00418dc6(0xc06, *0x522920, *0x522920 >> 0x20, *0x522918, *0x522918 >> 0x20, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.0041846c(1);\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.004187fc(1, *0x522940, *0x522940 >> 0x20, *0x522938, *0x522938 >> 0x20, 1, 0, 1, *0x522930, *0x522930 >> 0x20, \n                 0x29f, &var_5dh + 1, *0x522928, *0x522928 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"ykmovubkxajggmoszqktcryi\", &var_25h);\n    fcn.004838d0();\n    fcn.004b29a0(\"dymyypsczjmoytcbejvhzvelpkxaiipnerxrvurww\", &var_9h);\n    fcn.0041888a(0x7aa, 0, 0x73b, 0x885, &var_25h + 1, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    return;\n}\n",
        "token_count": 1636
    },
    "0041b5d6": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.0041b5d6(uint param_1)\n\n{\n    char *pcVar1;\n    uint uVar2;\n    uint in_stack_fffffc20;\n    ulong uVar3;\n    uint var_35ch;\n    uint var_358h;\n    uint var_33dh;\n    uint var_324h;\n    uint var_309h;\n    uint var_2f0h;\n    uint var_2d5h;\n    uint var_2b9h;\n    uint var_29dh;\n    uint var_281h;\n    uint var_268h;\n    uint var_24dh;\n    uint var_231h;\n    uint var_215h;\n    uint var_1f9h;\n    uint var_1ddh;\n    uint var_1c1h;\n    uint var_1a5h;\n    uint var_189h;\n    uint var_16dh;\n    uint var_151h;\n    uint var_135h;\n    uint var_119h;\n    uint var_fdh;\n    uint var_e4h;\n    uint var_c9h;\n    uint var_adh;\n    uint var_91h;\n    uint var_75h;\n    uint var_59h;\n    uint var_40h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.004b2c00();\n    fcn.004b2c00();\n    fcn.004838d0();\n    fcn.004b29a0(\"zietwwxpbtwvanbdxrqoxkdqv\", &fcn.0041b5d6::var_33dh);\n    fcn.0041aeb6(0x904, 0x6b5, *0x5229b8, *0x5229b8 >> 0x20, &fcn.0041b5d6::var_358h, 0, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"axgkmbsgdunta\", &fcn.0041b5d6::var_309h);\n    uVar3 = CONCAT44(0x41b6dc, in_stack_fffffc20);\n    fcn.0041af16(param_1, &fcn.0041b5d6::var_324h);\n    fcn.004b2fc0(uVar3);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"zhxpgxleoftbusjrrxpyxaiyssoxprgkvhysdtzvgyrektpjfoxrkulkolihixneeoxjxrwpwwwwpuoms\", \n                 &fcn.0041b5d6::var_2d5h);\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.0041b012(param_1, *0x5229c8, *0x5229c8 >> 0x20, 0, *0x5229c0, *0x5229c0 >> 0x20, 0x203f, 0, 1);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.0041b0c4(1, *0x5229d0, *0x5229d0 >> 0x20, 0, 0, 1);\n    fcn.004838d0();\n    fcn.004b29a0(\"ohtvdtdrhgmnkezipciesjztnuqechxmdkyjyijidbllwzhjsxancylojqeyiqzimqmrrcowtwvmmjmpiqijdqdpzedyqnjkbly\", \n                 &fcn.0041b5d6::var_29dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"fgjvdqrenlfbnabevwdvphchynqxrcdypwtydgredaulmzcundhoaryyervfex\", &fcn.0041b5d6::var_281h);\n    uVar2 = 0x41b8d9;\n    fcn.0041b106(&fcn.0041b5d6::var_29dh + 1, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"gonrsamlauyphgtavpjv\", &fcn.0041b5d6::var_24dh, uVar2);\n    fcn.0041b19e(param_1, 0, &fcn.0041b5d6::var_268h, *0x5229d8, *0x5229d8 >> 0x20);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"tloogmspsmpqnrwdjtzknbdqgajuvuepwjmvernirqpwg\", &fcn.0041b5d6::var_231h);\n    fcn.0041b584(*0x5229e8, *0x5229e8 >> 0x20, &fcn.0041b5d6::var_24dh + 1, 0x63e, 0x4b2, 1, *0x5229e0, \n                 *0x5229e0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.0041a600(0x1ec2, 0x39f, *0x522a08, *0x522a08 >> 0x20, *0x522a00, *0x522a00 >> 0x20, *0x5229f8, *0x5229f8 >> 0x20\n                 , 0, *0x5229f0, *0x5229f0 >> 0x20);\n    fcn.004838d0();\n    fcn.004b29a0(\"vqkdqawghuitnxwafmncdbdfcdpmlmhmsymovjjuewugodqiefibevfslvazcopanoheeuvrrzidohbqgpcnafjeyosvxowozbsx\"\n                 , &fcn.0041b5d6::var_215h);\n    fcn.004838d0();\n    fcn.004b29a0(\"blydmychiekbfrzlzhqhlysoallgtgbygldtkkzljkkzcbyhgww\", &fcn.0041b5d6::var_1f9h);\n    fcn.004838d0();\n    fcn.004b29a0(\"mtomnvnxpesyyswydzvcpuveduklztgifrhemmcljcaibnsalzdjfhmdwablnhoxbmaacqaypo\", &fcn.0041b5d6::var_1ddh);\n    fcn.0041aae0(&fcn.0041b5d6::var_1f9h + 1, &fcn.0041b5d6::var_215h + 1, *0x522a20, *0x522a20 >> 0x20, 1, \n                 &fcn.0041b5d6::var_231h + 1, 0x842, 0x125, *0x522a18, *0x522a18 >> 0x20, *0x522a10, *0x522a10 >> 0x20, \n                 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"mswgenbfxlwrzvchdizpezdyfrivhhjqypfnekeaeukhirvuououpbghvpdayqxybi\", &fcn.0041b5d6::var_1c1h);\n    fcn.004838d0();\n    pcVar1 = \"dzwiqbcfvnqhgvgcolwfxajiscryejctijnplinyuncmvuivllqhjfdmiuhxttlxodugtjmizzcvorgedvwyoz\";\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0(\"yyuqfpkuqovoetjtmevsmswrmizbcxoognvieimklpcxuawcslsrijehrupaxqtfkpipjsyhujjzvdow\", \n                 &fcn.0041b5d6::var_189h, pcVar1);\n    fcn.004838d0();\n    fcn.004b29a0(\"ackyhhwpbzvwehyshkkaazmnambcjbtdgffkfakptrjlgahesrjlvlfsfnbm\", &fcn.0041b5d6::var_16dh);\n    fcn.0041acba(&fcn.0041b5d6::var_189h + 1, 0xc73, &fcn.0041b5d6::var_1a5h + 1, &fcn.0041b5d6::var_1c1h + 1, 0, \n                 *0x522a28, *0x522a28 >> 0x20, &fcn.0041b5d6::var_1ddh + 1, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"jgtfumeynewyvnjhpdnhfsmxxkntfbslupmcpoitncnkwsengytgjpbdgrylwlxwhtoyvhjcfx\", &fcn.0041b5d6::var_151h);\n    fcn.00419e5c(&fcn.0041b5d6::var_16dh + 1, 0, *0x522a30, *0x522a30 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.0041a10c(1);\n    fcn.004838d0();\n    fcn.004b29a0(\"tqoqfqunfwbbdcirpvsxqeggtokwppcoinmsbdoqxrnoazzistflmaucffqqyjjo\", &fcn.0041b5d6::var_135h);\n    fcn.004838d0();\n    pcVar1 = \"gkbgpnsypigloehoyidoeiakkoackkxzwirycpwslhpsjzdhcyvqfclvnregfusnlhtcqffsjp\";\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0(\"ckiuoygcsgeingditlitpmhscpjclulwtjytstfmsxnqmvjupcjrcnywpejlvknxhwzpsyiabbsagj\", \n                 &fcn.0041b5d6::var_fdh, pcVar1);\n    fcn.0041a1ee(&fcn.0041b5d6::var_119h + 1, 1, 0, *0x522a38, *0x522a38 >> 0x20, &fcn.0041b5d6::var_135h + 1, \n                 &fcn.0041b5d6::var_151h + 1, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"dthskqjhzmstzdfrdaicwkegmivyndfxmdbmvcmyblquxqrkhyhbqhxnva\", &fcn.0041b5d6::var_c9h);\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.0041a27a(param_1, *0x522a58, *0x522a58 >> 0x20, *0x522a50, *0x522a50 >> 0x20, &fcn.0041b5d6::var_adh + 1, 0x731\n                 , 0, *0x522a48, *0x522a48 >> 0x20, &fcn.0041b5d6::var_c9h + 1, &fcn.0041b5d6::var_e4h, *0x522a40, \n                 *0x522a40 >> 0x20);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"obqgvyxzguplztnhdlwgvcbysfxghbfkvyohlpqtxvhockjgdwbmvyk\", &fcn.0041b5d6::var_75h);\n    fcn.004838d0();\n    fcn.004b29a0(\"eqlxjadtoxfdoqtajdkchqndeelwpvrphmnabvxodbaiznkfhzoafbqhlmpnlfojravqmnv\", &fcn.0041b5d6::var_59h);\n    fcn.0041a338(0x180, &fcn.0041b5d6::var_75h + 1, *0x522a60, *0x522a60 >> 0x20, 0xc59, &fcn.0041b5d6::var_91h + 1, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    pcVar1 = \"tpysiaiphxipnmuzzgtmjd\";\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0(\"fnuaymlxczvogaonsfckkwjkxbywop\", &fcn.0041b5d6::var_9h, pcVar1);\n    fcn.0041a4b6(param_1, &fcn.0041b5d6::var_25h + 1, 0, *0x522a80, *0x522a80 >> 0x20, *0x522a78, *0x522a78 >> 0x20, \n                 *0x522a70, *0x522a70 >> 0x20, 0, 0x13c0, &fcn.0041b5d6::var_40h, *0x522a68, *0x522a68 >> 0x20, 1);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    return;\n}\n",
        "token_count": 3765
    },
    "0041d6c8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.0041d6c8(void)\n\n{\n    uint var_4h;\n    \n    return 0;\n}\n",
        "token_count": 28
    },
    "0041e9da": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.0041e9da(uint param_1)\n\n{\n    char *pcVar1;\n    ulong uVar2;\n    uint *puVar3;\n    uint var_1fch;\n    uint var_1f0h;\n    uint var_1d5h;\n    uint var_1bch;\n    uint var_1a1h;\n    uint var_185h;\n    uint var_16ch;\n    uint var_151h;\n    uint var_135h;\n    uint var_119h;\n    uint var_fdh;\n    uint var_e1h;\n    uint var_c5h;\n    uint var_a9h;\n    uint var_8dh;\n    uint var_71h;\n    uint var_58h;\n    uint var_40h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.004b2c00();\n    fcn.004b2c00();\n    fcn.004838d0();\n    fcn.004b29a0(\"swlataislojcpebyxoc\", &var_1d5h);\n    fcn.0041e38e(0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"smkgnrquimpbnyxwbupinfwppyyoxchppegvwv\", &var_1a1h);\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.0041e3a8(param_1, *0x522b30, *0x522b30 >> 0x20, &var_1a1h + 1, 0, 1);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.0041e65c(0x1e8, 0, *0x522b40, *0x522b40 >> 0x20, 0x20, *0x522b38, *0x522b38 >> 0x20);\n    fcn.0041e870(param_1, 0, 0);\n    fcn.004b2fc0();\n    fcn.0041e8de(0, 0x788, *0x522b50, *0x522b50 >> 0x20, 0xfa3, *0x522b48, *0x522b48 >> 0x20);\n    fcn.004838d0();\n    fcn.004b29a0(\"brqhihqkayqtxcnycwwiwphtzwnubotaipaxdrmvxgdkjpueej\", &var_151h);\n    fcn.004838d0();\n    fcn.004b29a0(\"bqklkstuvyjwgi\", &var_135h);\n    fcn.0041cf32(&var_151h + 1, 1, &var_16ch, 0x13, *0x522b58, *0x522b58 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"shmpguncqknbtabyqxnjxwaczkjqjfvafuxxuullzuupaunqetgaojgsncwxalyddgncjcdgvyjrt\", &var_119h);\n    fcn.004838d0();\n    fcn.004b29a0(\"dwvcqvmacxsqhgdoxycenxbkpgewqcmwzssbqgvixvmtzvphhgcsjlqxksuhdcdbzerpjnwblmvlcadn\", &var_fdh);\n    fcn.0041cf8a(0x44, 1, 0x1afa, &var_119h + 1, 0, &var_135h + 1, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    puVar3 = &var_e1h;\n    pcVar1 = \"jiwtxotwddjvndedzdkhsyzqqriipgyiobghowdyxcvwpwjssvdfokmojdbrysqcqhqiintknwzlcvlekoqafmfsojzqwm\";\n    fcn.004b29a0();\n    fcn.004838d0();\n    uVar2 = CONCAT44(pcVar1, &var_c5h);\n    pcVar1 = \"abynygjiudblkcdjoslnsnep\";\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0(\"nvhfkbklxvljujhxzbwuxymjcdvi\", &var_a9h, pcVar1, uVar2, puVar3);\n    fcn.0041d124(0x1a5, 1, &var_c5h + 1, *0x522b70, *0x522b70 >> 0x20, *0x522b68, *0x522b68 >> 0x20, 1, *0x522b60, \n                 *0x522b60 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.0041d26a();\n    fcn.0041d3f4();\n    fcn.0041d6c8(0x9a);\n    fcn.004838d0();\n    pcVar1 = \"zpiqkmnuqwixgntgnpzvyflcupnirhfmucmomqnvgyacwqg\";\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0(\"xhcyvgbyublvgooqxnrpyxqgsbhnhsbtwxrbustr\", &var_71h, pcVar1);\n    fcn.0041d6da(1, &var_8dh + 1, 0x787, *0x522b80, *0x522b80 >> 0x20, 0x1914, 0x2cf, *0x522b78, *0x522b78 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.0041d72e(0x17ee, 1, *0x522ba0, *0x522ba0 >> 0x20, *0x522b98, *0x522b98 >> 0x20, *0x522b90, *0x522b90 >> 0x20, \n                 *0x522b88, *0x522b88 >> 0x20);\n    fcn.0041dbf6(0);\n    fcn.0041e1d4(param_1, *0x522ba8, *0x522ba8 >> 0x20);\n    fcn.004b2fc0();\n    fcn.0041c52a(param_1, *0x522bb0, *0x522bb0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.0041cc36(*0x522bb8, *0x522bb8 >> 0x20, 0);\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.0041ce92(0, *0x522bc0, *0x522bc0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(0x51e853, &var_9h);\n    fcn.0041ceb2(*0x522bc8, *0x522bc8 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    return;\n}\n",
        "token_count": 1979
    },
    "00420f70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.00420f70(uint param_1)\n\n{\n    uint in_stack_fffff8f0;\n    ulong uVar1;\n    char *pcVar2;\n    uint in_stack_fffffa44;\n    uint var_43ch;\n    uint var_430h;\n    uint var_415h;\n    uint var_3f9h;\n    uint var_3e0h;\n    uint var_3c5h;\n    uint var_3a9h;\n    uint var_390h;\n    uint var_375h;\n    uint var_35ch;\n    uint var_341h;\n    uint var_328h;\n    uint var_30dh;\n    uint var_2f1h;\n    uint var_2d5h;\n    uint var_2b9h;\n    uint var_29dh;\n    uint var_281h;\n    uint var_265h;\n    uint var_249h;\n    uint var_22dh;\n    uint var_211h;\n    uint var_1f5h;\n    uint var_1dch;\n    uint var_1c1h;\n    uint var_1a5h;\n    uint var_189h;\n    uint var_16dh;\n    uint var_151h;\n    uint var_135h;\n    uint var_119h;\n    uint var_fdh;\n    uint var_e1h;\n    uint var_c5h;\n    uint var_a9h;\n    uint var_90h;\n    uint var_75h;\n    uint var_59h;\n    uint var_40h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.004b2c00();\n    fcn.004838d0();\n    fcn.004b29a0(\"fdbnxhtlkzmzpvcwjvkjhenqgruiolmotdquwaqtnqepfxyeg\", &var_415h);\n    fcn.004838d0();\n    fcn.004b29a0(\"mpelnhqskzhqhj\", &var_3f9h);\n    fcn.00420e6a(1, 1, 0x369, &var_415h + 1, 1, *0x522c90, *0x522c90 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"xdmyzpztrvqcvugrbvlkvizfwfivtrlxriclbzwqtofhwrmbgjjahnwgixkksukpyeuxhyvxijghvypgyggmrsdpogvrc\", \n                 &var_3c5h);\n    fcn.004838d0();\n    fcn.004b29a0(\"ovxouwiqyqhmdywgxraqevtxjllmoidfoumseujexuwjanfggsvf\", &var_3a9h);\n    fcn.00420e9a(param_1, 0, 0x17ef, 1, *0x522ca0, *0x522ca0 >> 0x20, *0x522c98, *0x522c98 >> 0x20, 0, &var_3c5h + 1, 0\n                 , &var_3e0h, 0);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.00420102(0xb20, 0x85a, *0x522cb0, *0x522cb0 >> 0x20, 0xf84, *0x522ca8, *0x522ca8 >> 0x20);\n    fcn.00420620(0x9d2, 1, *0x522cb8, *0x522cb8 >> 0x20);\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.0042067a(param_1, *0x522cc8, *0x522cc8 >> 0x20, &var_390h, *0x522cc0, *0x522cc0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"lfyjwfggduaralyjgiaxzmsvkptvkoyskhgcapzvecmdricbiypafqmvlyswtbyzhicjoqpujoqassyccvsvglfdxyfjrcwd\", \n                 &var_341h);\n    fcn.00420836(param_1, 0x6e7, *0x522cd0, *0x522cd0 >> 0x20, 0, &var_35ch, 0);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.0042095e(param_1);\n    fcn.004b2fc0();\n    fcn.004838d0();\n    fcn.004b29a0(\"etauepsdudbdxlsx\", &var_30dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"hhzzjeopmjqyodwgmnyvffcvomgyt\", &var_2f1h);\n    fcn.00420aec(&var_30dh + 1, &var_328h, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"tlumummwolhztpqrrdjsbxwdtdxqxpelnstjyfdidaxnirdhvcvloznycxswgtjq\", &var_2d5h);\n    fcn.004838d0();\n    uVar1 = CONCAT44(0x421477, in_stack_fffffa44);\n    fcn.004b29a0(\"fklknspsrrjtnotysuldjigdetlevykzvpzcnogjmb\", &var_2b9h);\n    fcn.004838d0(uVar1);\n    fcn.004b29a0(\"zelbtryi\", &var_29dh);\n    fcn.00420b10(&var_2b9h + 1, &var_2d5h + 1, *0x522cd8, *0x522cd8 >> 0x20, 0x1b4, 0, &var_2f1h + 1, 1, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"dmyetonlksgccpudujrpgwbornlavwsqsupxaarrfihqqikuezxywwtmcdqyxghicywsrnblonnrmqtsoaxxkfhcaohowxhrhxob\"\n                 , &var_281h);\n    fcn.004838d0();\n    fcn.004b29a0(\"mdwdblzm\", &var_265h);\n    fcn.00420cbc(*0x522cf0, *0x522cf0 >> 0x20, 0, 0, &var_281h + 1, 0, &var_29dh + 1, *0x522ce8, *0x522ce8 >> 0x20, \n                 0x103, *0x522ce0, *0x522ce0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"qarmafcrqvcnpovwarccvktnfnkrrquxiqyscwxykfzkfxahucukhemkjobtuqjaduwtfyypvhimiujzqnpeg\", &var_249h);\n    fcn.004838d0();\n    fcn.004b29a0(\"mdvapeowuovkygdtssiroudziqn\", &var_22dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"qkramqxbuqzxgbfuw\", &var_211h);\n    fcn.004838d0();\n    fcn.004b29a0(\"wmquyzk\", &var_1f5h);\n    fcn.0041f374(*0x522cf8, *0x522cf8 >> 0x20, 0xbc8, &var_211h + 1, &var_22dh + 1, 0x10ec, &var_249h + 1, &var_265h + 1\n                 , 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    pcVar2 = \"apptuanssgmfvcevzbdmohpdunolzvnrfgkvfaertrxrcnznwzymdqyccsuifqnhovuwlqzvkywemwhhgb\";\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0(\"pymtemsvhyvpzkawfwgn\", &var_1a5h, pcVar2);\n    fcn.0041f51e(param_1, 0, 0x8e7, *0x522d10, *0x522d10 >> 0x20, 1, &var_1c1h + 1, 1, *0x522d08, *0x522d08 >> 0x20, \n                 &var_1dch, *0x522d00, *0x522d00 >> 0x20);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"crlq\", &var_189h);\n    fcn.004838d0();\n    fcn.004b29a0(\"qfoetslyqfrbxafthdauerniarfytfffhybrejmbhluebgjucfacqfxkuribhwzecbqttjflccswxzvbuoutrgw\", &var_16dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"hqbgzzpzqvnvkusdteusivkdodoyxrxqhaf\", &var_151h);\n    fcn.0041f5d0(*0x522d30, *0x522d30 >> 0x20, 0xe6, &var_16dh + 1, *0x522d28, *0x522d28 >> 0x20, 0xba4, *0x522d20, \n                 *0x522d20 >> 0x20, &var_189h + 1, &var_1a5h + 1, 0, *0x522d18, *0x522d18 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"gqetplymlhgqieanjnrjvejntpbeakaczvtsdmvfdw\", &var_135h);\n    fcn.004838d0();\n    uVar1 = CONCAT44(0x421a5f, in_stack_fffff8f0);\n    fcn.004b29a0(\"ggtaaxqhlcfynxuoidvouocfxpyxvmiykvmxkddoxxhtbbjzlyawbtgqsuyynwotllcbzixwdjmhcvxvdlbzgkjxkqgstz\", \n                 &var_119h);\n    fcn.004838d0(uVar1);\n    fcn.004b29a0(0x51f1ff, &var_fdh);\n    fcn.004838d0();\n    fcn.004b29a0(\"vrveywlmmnwjqssrccbhkdxpcacgxmhicyhtkzwipejpesurfkczncdbvihsyyzgifotgnxdqqvviwebbjoaniyegfofsgvfgb\", \n                 &var_e1h);\n    fcn.0041f68e(&var_fdh + 1, 0x10b4, &var_119h + 1, &var_135h + 1, *0x522d38, *0x522d38 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"fftssywnatnxilpuxnktanuanlruklrcpheucgwjlspsiurlzusjmrvkvthieqahbemryfbo\", &var_c5h);\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.0041f72e(&var_c5h + 1, *0x522d50, *0x522d50 >> 0x20, &var_e1h + 1, *0x522d48, *0x522d48 >> 0x20, 0x34, *0x522d40\n                 , *0x522d40 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"erltfrrjyhaaicknicioqnvwbiff\", &var_75h);\n    fcn.004838d0();\n    fcn.004b29a0(\"otibjfeagbmnpgklhrwpmspvkbdzdpxodpvndnojmiaeywpgsdjki\", &var_59h);\n    fcn.0041f924(param_1, 0x1d8, 1, 0x2377, *0x522d60, *0x522d60 >> 0x20, &var_75h + 1, 0, *0x522d58, *0x522d58 >> 0x20)\n    ;\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"lmhhgsvrirgpgydrqpwgwltxyzihjimpnlohoxapxfm\", &var_25h);\n    fcn.004838d0();\n    fcn.004b29a0(\"uxqepwteuijpikgqmvcznqrpiizjzhvnsjuncclnbwiqmbsutetqdwzhcydzumspxrpm\", &var_9h);\n    fcn.0041fb02(param_1, &var_25h + 1, &var_40h, 0x16b3, 0, *0x522d78, *0x522d78 >> 0x20, *0x522d70, *0x522d70 >> 0x20\n                 , *0x522d68, *0x522d68 >> 0x20);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.0041fea6(0xafd, *0x522d98, *0x522d98 >> 0x20, *0x522d90, *0x522d90 >> 0x20, *0x522d88, *0x522d88 >> 0x20, \n                 *0x522d80, *0x522d80 >> 0x20);\n    return;\n}\n",
        "token_count": 4010
    },
    "0042508e": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.0042508e(void)\n\n{\n    uint var_4h;\n    \n    return 0x8aa3;\n}\n",
        "token_count": 30
    },
    "004278e4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.004278e4(uint param_1)\n\n{\n    uint in_stack_fffff9ec;\n    ulong uVar1;\n    char *pcVar2;\n    uint uVar3;\n    uint in_stack_fffffb9c;\n    uint *puVar4;\n    uint var_38ch;\n    uint var_380h;\n    uint var_365h;\n    uint var_349h;\n    uint var_32dh;\n    uint var_314h;\n    uint var_2f9h;\n    uint var_2ddh;\n    uint var_2c1h;\n    uint var_2a5h;\n    uint var_289h;\n    uint var_26dh;\n    uint var_251h;\n    uint var_235h;\n    uint var_219h;\n    uint var_1fdh;\n    uint var_1e4h;\n    uint var_1c9h;\n    uint var_1adh;\n    uint var_191h;\n    uint var_175h;\n    uint var_159h;\n    uint var_13dh;\n    uint var_121h;\n    uint var_105h;\n    uint var_e9h;\n    uint var_cdh;\n    uint var_b1h;\n    uint var_95h;\n    uint var_79h;\n    uint var_5dh;\n    uint var_41h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.004b2c00();\n    fcn.004b2c00();\n    fcn.004b2c00();\n    fcn.004838d0();\n    fcn.004b29a0(\"pjbcxlenskmdhisgpwnqafpienbkucbwigjrwfqzwowujbuoetrkjvmiquywafstywrgtinhjtglkdmdqwsupoyftuiafc\", \n                 &fcn.004278e4::var_365h);\n    fcn.004838d0();\n    fcn.004b29a0(\"hianpzldzsdhgehqgcqhsfvphgupfqxavqkufeibtxfrcmkwzemzjghgcaesvtbagbzpwvpobzjybdvcsgqnxd\", \n                 &fcn.004278e4::var_349h);\n    fcn.004838d0();\n    fcn.004b29a0(\"imwpcdqadbkzzna\", &fcn.004278e4::var_32dh);\n    fcn.004270e4(*0x523120, *0x523120 >> 0x20, 0, &fcn.004278e4::var_349h + 1, &fcn.004278e4::var_365h + 1, 0, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"bswksaemyibtqhgmdboxytbsgifuwphtppdnzsrgwmdqermdnfaadx\", &fcn.004278e4::var_2f9h);\n    fcn.004271f0(param_1, 0x77c, *0x523130, *0x523130 >> 0x20, &fcn.004278e4::var_314h, 1, 0, 0, *0x523128, \n                 *0x523128 >> 0x20);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"dquofkwpwzzhypzykaqtdlzpmcwusyqnbuiztpywsysddghineduplrttvhyicmasyqozgoprxpqlfysbyf\", \n                 &fcn.004278e4::var_2ddh);\n    fcn.004838d0();\n    puVar4 = &fcn.004278e4::var_2c1h;\n    pcVar2 = \"uxpeqaysvejmskxudmsrkneddqoqpeswlltatrrfclzezsmlulrdxy\";\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0(\"nldkktpvdtxtcnozztrlfrzvybqxyfvxlwuqdqpjjmzzrjisheekvqmku\", &fcn.004278e4::var_2a5h, pcVar2, puVar4);\n    fcn.004838d0();\n    uVar1 = CONCAT44(0x427bac, in_stack_fffffb9c);\n    fcn.004b29a0(\"uxybsmgwkkpdzpqxoloftcynmvlyomvrelhik\", &fcn.004278e4::var_289h);\n    fcn.004838d0(uVar1);\n    fcn.004b29a0(\"kcxnxqnowjpjdukfyzpjlnbwettsvfksdfnvniinjuhfjvvdlfsnhagkoenrhgnjjocqjfhnaetteurgqiiytzislgfbnnf\", \n                 &fcn.004278e4::var_26dh);\n    fcn.00427478(&fcn.004278e4::var_289h + 1, 0, *0x523140, *0x523140 >> 0x20, &fcn.004278e4::var_2a5h + 1, 1, \n                 &fcn.004278e4::var_2c1h + 1, *0x523138, *0x523138 >> 0x20, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"wrhudoixhwsolxavgrcywprkqctoqhoowgdkvtufjehxeuftarmpzfojsuxaa\", &fcn.004278e4::var_251h);\n    fcn.0042766a(*0x523150, *0x523150 >> 0x20, *0x523148, *0x523148 >> 0x20, &fcn.004278e4::var_26dh + 1, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"wuqndxzkqvwbbxilyfknpoixukvfufjqjcvopncntjmpryrgzsyyxmirhmngyyafoxexquioqoxapzvfdd\", \n                 &fcn.004278e4::var_235h);\n    fcn.004838d0();\n    fcn.004b29a0(\"zsmkjkfzpiopmpvbqbzmpflmmctiofcqhfcberjmbftembiyyjfnlzqssupkwrxhlbtiq\", &fcn.004278e4::var_219h);\n    fcn.00427856(0xb17, 0x17e4, *0x523168, *0x523168 >> 0x20, *0x523160, *0x523160 >> 0x20, &fcn.004278e4::var_235h + 1\n                 , &fcn.004278e4::var_251h + 1, *0x523158, *0x523158 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"oltaoihnplmbxruauylkogy\", &fcn.004278e4::var_1fdh);\n    fcn.004278c4(1, &fcn.004278e4::var_219h + 1, 0x1582, *0x523170, *0x523170 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004266e2(0x65d, 1);\n    fcn.004266fa(0, 0, 0);\n    fcn.00426788(param_1, 0x1ba, 0x10ac, *0x523188, *0x523188 >> 0x20, *0x523180, *0x523180 >> 0x20, *0x523178, \n                 *0x523178 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00426bae(0, 0x667, 0);\n    fcn.004838d0();\n    fcn.004b29a0();\n    uVar3 = 0x427fc6;\n    fcn.00426bfc(&fcn.004278e4::var_1e4h, *0x523190, *0x523190 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"osfymcetzztshnsaxnbvezjpyenpowcyrswjwnfzjsgiiqmcrlfkmpncfyddzdmqezosdaylrbucvmlaibwkuyilojenqf\", \n                 &fcn.004278e4::var_1adh, uVar3);\n    fcn.004838d0();\n    fcn.004b29a0(\"gflnhhfiajwnapwtavyzinjukqvpm\", &fcn.004278e4::var_191h);\n    fcn.00426c96(1, 0x9b6, &fcn.004278e4::var_1adh + 1, 1, 1, *0x523198, *0x523198 >> 0x20, &fcn.004278e4::var_1c9h + 1\n                 , 0x151a, 0, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    pcVar2 = \"oljjvzmvhxmqkunkjpadcmcmoxxjnbpupppye\";\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0(\"hocwbtwqleqvxzjdqkaiscutlrlsrkeugiztlstychgywfftrex\", &fcn.004278e4::var_159h, pcVar2);\n    fcn.00426e44(0x6af, &fcn.004278e4::var_175h + 1, &fcn.004278e4::var_191h + 1, *0x5231a0, *0x5231a0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"oollyvxehlzdrrkfbzxpwwotulveseseoimtjewiwhyydcdhfubgcpbd\", &fcn.004278e4::var_13dh);\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.00426f62(0, *0x5231b0, *0x5231b0 >> 0x20, &fcn.004278e4::var_13dh + 1, &fcn.004278e4::var_159h + 1, *0x5231a8, \n                 *0x5231a8 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"edirrjfnjnhrrqanpmegrdoghgsqwlmbjugdmahfokxjfncbwhvlli\", &fcn.004278e4::var_105h);\n    fcn.004838d0();\n    pcVar2 = \"bcnfozdxwezbfnxfjxdhfreibpudxauqctananvhztlantxacgwqrcnejdieivyzlywsqddtiaondbfmorwvdmrtzdbtdx\";\n    fcn.004b29a0();\n    uVar1 = CONCAT44(0x4282e8, in_stack_fffff9ec);\n    fcn.00427004(&fcn.004278e4::var_105h + 1, &fcn.004278e4::var_121h + 1, pcVar2);\n    fcn.004b2fc0(uVar1);\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.00425cc0(*0x5231c0, *0x5231c0 >> 0x20, 0x35f, *0x5231b8, *0x5231b8 >> 0x20);\n    fcn.004838d0();\n    fcn.004b29a0(\"zhqgddkdmgfrqvjusjajyenljuecisu\", &fcn.004278e4::var_cdh);\n    fcn.004838d0();\n    fcn.004b29a0(\"taqketwrhccivwbdfmfmysbigaqrpuhqwuqeoyx\", &fcn.004278e4::var_b1h);\n    fcn.00425d62(1, 0x1ab, *0x5231d8, *0x5231d8 >> 0x20, *0x5231d0, *0x5231d0 >> 0x20, 0x1006, \n                 &fcn.004278e4::var_cdh + 1, 0x88, &fcn.004278e4::var_e9h + 1, *0x5231c8, *0x5231c8 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.00425f70(*0x5231f0, *0x5231f0 >> 0x20, 0x1313, *0x5231e8, *0x5231e8 >> 0x20, 0x2ec, 1, 1, 0xc69, *0x5231e0, \n                 *0x5231e0 >> 0x20);\n    fcn.004838d0();\n    fcn.004b29a0(\"prlhpiivnnbtdkopomjcsalqpuipmqwsgclnopagj\", &fcn.004278e4::var_95h);\n    fcn.004838d0();\n    fcn.004b29a0(\"ovzcharfxlfwdxxixfrtehbdgszttxzhqrfdetzwpbshvyikwccdxrgufberkqeaxa\", &fcn.004278e4::var_79h);\n    fcn.004262a0(*0x523210, *0x523210 >> 0x20, 0, 0x54c, &fcn.004278e4::var_95h + 1, &fcn.004278e4::var_b1h + 1, 1, \n                 *0x523208, *0x523208 >> 0x20, *0x523200, *0x523200 >> 0x20, *0x5231f8, *0x5231f8 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"vdzedwswbysdqbydeyjkzhlrqbaxjojawrdmxvxhdgcufqtddblzqcyuylcuhrevtlthrof\", &fcn.004278e4::var_5dh);\n    fcn.00426310(&fcn.004278e4::var_79h + 1, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(0x520d54, &fcn.004278e4::var_41h);\n    fcn.00426386(&fcn.004278e4::var_5dh + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.00426428(0);\n    fcn.00426610();\n    fcn.004838d0();\n    fcn.004b29a0(\"adxgfpifqxymhfenfsbrtfdmybdawilknerkczrwswohin\", &fcn.004278e4::var_25h);\n    fcn.004838d0();\n    fcn.004b29a0(\"ujnkbpuuwgxpbuyrrqgkgtxutractygqvqygexgtbxpxtoohcavjxuqiagrpbeuiewpeigwow\", &fcn.004278e4::var_9h);\n    fcn.004266a4(&fcn.004278e4::var_25h + 1, &fcn.004278e4::var_41h + 1, *0x523218, *0x523218 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    return;\n}\n",
        "token_count": 4292
    },
    "0042b8ae": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.0042b8ae(uint param_1)\n\n{\n    uint uVar1;\n    char *pcVar2;\n    uint *puVar3;\n    uint in_stack_fffffd78;\n    ulong uVar4;\n    uint var_1fch;\n    uint var_1ech;\n    uint var_1d4h;\n    uint var_1bch;\n    uint var_1a1h;\n    uint var_185h;\n    uint var_169h;\n    uint var_14dh;\n    uint var_131h;\n    uint var_115h;\n    uint var_f9h;\n    uint var_ddh;\n    uint var_c1h;\n    uint var_a5h;\n    uint var_8ch;\n    uint var_71h;\n    uint var_58h;\n    uint var_40h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.004b2c00();\n    fcn.0042b5de(param_1, *0x523420, *0x523420 >> 0x20, 0x42e, 0);\n    fcn.004b2fc0();\n    fcn.0042b658();\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.0042b68e(param_1, *0x523430, *0x523430 >> 0x20, &fcn.0042b8ae::var_1bch, 0, *0x523428, *0x523428 >> 0x20, 0, 0);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    uVar4 = CONCAT44(0x42b9f1, in_stack_fffffd78);\n    fcn.004b29a0(\"kweenplvzjsdeperykhjoyvrlnnxbcsfkuontxtkqahowrosucfnnmmjxoibpepfhhdkjqmxjjcznmzouoyiufswbfaqvtzytwik\"\n                 , &fcn.0042b8ae::var_185h);\n    fcn.004838d0(uVar4);\n    fcn.004b29a0(\"zetrfdyaldxzcrwmogylvwqmcantuprfybckrmjyuprdngyzibglulbwsshnqtehqmjsdvnqxoqedybebtmhlsmbgee\", \n                 &fcn.0042b8ae::var_169h);\n    fcn.0042b76e(&fcn.0042b8ae::var_185h + 1, 0x657, *0x523438, *0x523438 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    puVar3 = &fcn.0042b8ae::var_14dh;\n    pcVar2 = \"ysfjakhidnikmqddisfezfeopdh\";\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0(\"ddzggjbecoypvpmipbxfijqmvphfwgfrmgsqzncoivdyghtbiegiefheaditrvclpwgtuaikrdeengmqtxiafqmwco\", \n                 &fcn.0042b8ae::var_131h, pcVar2, puVar3);\n    fcn.0042b7b8(*0x523450, *0x523450 >> 0x20, 0, *0x523448, *0x523448 >> 0x20, 1, 0x166, *0x523440, *0x523440 >> 0x20, \n                 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"xhsbhhhradwrws\", &fcn.0042b8ae::var_115h);\n    fcn.0042b82e(*0x523468, *0x523468 >> 0x20, 0x270, *0x523460, *0x523460 >> 0x20, 1, *0x523458, *0x523458 >> 0x20, \n                 &fcn.0042b8ae::var_131h + 1, 1, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(0x519dbd, &fcn.0042b8ae::var_f9h);\n    fcn.0042b1aa(&fcn.0042b8ae::var_115h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"wpmjilcmcvtjaclfgnypxfungvrdfbgvpztkuwcbxglikvqfswzaqcttfjsb\", &fcn.0042b8ae::var_ddh);\n    fcn.0042a200(&fcn.0042b8ae::var_f9h + 1, 0, *0x523470, *0x523470 >> 0x20, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"puhxqida\", &fcn.0042b8ae::var_c1h);\n    fcn.0042a388(*0x523488, *0x523488 >> 0x20, *0x523480, *0x523480 >> 0x20, &fcn.0042b8ae::var_ddh + 1, 0, 0x7b5, 0x290\n                 , *0x523478, *0x523478 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"lvddtoqipoqxyzfapyffdgqqineigiaopgqieuaxqbvmitydmrhittwbkswxdvqdqffvzubim\", &fcn.0042b8ae::var_a5h);\n    fcn.0042a3ca(0, 0, *0x523498, *0x523498 >> 0x20, &fcn.0042b8ae::var_c1h + 1, 0, *0x523490, *0x523490 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"vpnsfcpnp\", &fcn.0042b8ae::var_71h);\n    fcn.0042a5ac(param_1, &fcn.0042b8ae::var_8ch);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    uVar1 = 0x42beb6;\n    fcn.0042a680(0xe8a, 0);\n    fcn.0042a93a(param_1, uVar1);\n    fcn.004b2fc0();\n    fcn.0042ad9a(0x229c, *0x5234b0, *0x5234b0 >> 0x20, *0x5234a8, *0x5234a8 >> 0x20, *0x5234a0, *0x5234a0 >> 0x20, 1, 1\n                 , 0);\n    fcn.004838d0();\n    fcn.004b29a0(\"briaewejwzecxscixavmlgplhupbhhzlfgcunvwduaenrke\", &fcn.0042b8ae::var_25h);\n    fcn.004838d0();\n    fcn.004b29a0(\"uvjvrrxxtikklzhsdaofpodclpfyuxelusxikruaeayuwfkouwwysvtio\", &fcn.0042b8ae::var_9h);\n    fcn.0042b12e(param_1, &fcn.0042b8ae::var_25h + 1, 0);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    return;\n}\n",
        "token_count": 2078
    },
    "0042dcb0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042dcb0(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    cVar1 = **(in_EAX + 0xc);\n    if ((cVar1 != 'R') && (cVar1 != 'O')) {\n        return param_2;\n    }\n    iVar3 = *(in_EAX + 0x2c) + 3;\n    if (cVar1 == 'R') {\n        iVar3 = *(in_EAX + 0x2c) + 2;\n    }\n    *(in_EAX + 0x2c) = iVar3;\n    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n    uVar2 = fcn.0042dc50(0);\n    return uVar2;\n}\n",
        "token_count": 207
    },
    "0042de20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.0042de20(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    char *pcVar3;\n    bool bVar4;\n    char **in_EAX;\n    int32_t iVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    \n    pcVar3 = *in_EAX;\n    cVar2 = *pcVar3;\n    if (cVar2 == 'n') {\n        pcVar6 = pcVar3 + 1;\n        *in_EAX = pcVar6;\n        cVar2 = pcVar3[1];\n        if (9 < cVar2 - 0x30U) {\n            return 0;\n        }\n        bVar4 = true;\n    }\n    else {\n        if (9 < cVar2 - 0x30U) {\n            return 0;\n        }\n        bVar4 = false;\n        pcVar6 = pcVar3;\n    }\n    iVar5 = cVar2;\n    iVar7 = 0;\n    do {\n        pcVar6 = pcVar6 + 1;\n        *in_EAX = pcVar6;\n        iVar1 = iVar5 + iVar7 * 10;\n        iVar5 = *pcVar6;\n        iVar7 = iVar1 + -0x30;\n        if (9 < *pcVar6 - 0x30U) {\n            if (bVar4) {\n                iVar7 = 0x30 - iVar1;\n            }\n            return iVar7;\n        }\n    } while (iVar7 <= (0x7fffffffU - (iVar5 + -0x30)) / 10);\n    return -1;\n}\n",
        "token_count": 362
    },
    "0042e140": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042e140(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    char *pcVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    \n    uVar2 = *(in_EAX + 0x28);\n    pcVar3 = *(in_EAX + 0xc);\n    cVar1 = *pcVar3;\n    while (cVar1 == 'B') {\n        *(in_EAX + 0xc) = pcVar3 + 1;\n        uVar4 = fcn.0042dfc0();\n        param_2 = fcn.0042dc50(uVar4);\n        pcVar3 = *(in_EAX + 0xc);\n        cVar1 = *pcVar3;\n    }\n    *(in_EAX + 0x28) = uVar2;\n    return param_2;\n}\n",
        "token_count": 203
    },
    "0042e190": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0042e190(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    char *pcVar2;\n    uint32_t uVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char cVar7;\n    uint32_t uVar8;\n    uint uVar9;\n    uint *puVar10;\n    bool bVar11;\n    \n    pcVar2 = *(in_EAX + 0xc);\n    if (*pcVar2 != 'S') {\n        return NULL;\n    }\n    *(in_EAX + 0xc) = pcVar2 + 1;\n    if (pcVar2[1] == '\\0') {\n        cVar4 = '\\0';\ncode_r0x0042e1b5:\n        bVar11 = (*(in_EAX + 8) & 8) != 0;\n        if ((!bVar11) && ((param_2 & 1) != 0)) {\n            bVar11 = **(in_EAX + 0xc) + 0xbdU < 2 || bVar11;\n        }\n        pcVar2 = 0x5259a0;\n        cVar7 = 't';\n        while (cVar4 != cVar7) {\n            pcVar2 = pcVar2 + 0x1c;\n            if (pcVar2 == 0x525a64) {\n                return NULL;\n            }\n            cVar7 = *pcVar2;\n        }\n        iVar5 = *(pcVar2 + 0x14);\n        iVar6 = *(in_EAX + 0x14);\n        iVar1 = *(in_EAX + 0x18);\n        if (iVar5 != 0) {\n            uVar9 = *(pcVar2 + 0x18);\n            if (iVar6 < iVar1) {\n                puVar10 = iVar6 * 0x10 + *(in_EAX + 0x10);\n                puVar10[1] = 0;\n                *(in_EAX + 0x14) = iVar6 + 1;\n                *puVar10 = 0x18;\n                puVar10[2] = iVar5;\n                puVar10[3] = uVar9;\n                iVar6 = iVar6 + 1;\n            }\n            else {\n                puVar10 = NULL;\n            }\n            *(in_EAX + 0x28) = puVar10;\n        }\n        if (bVar11) {\n            uVar9 = *(pcVar2 + 0xc);\n            iVar5 = *(pcVar2 + 0x10);\n        }\n        else {\n            uVar9 = *(pcVar2 + 4);\n            iVar5 = *(pcVar2 + 8);\n        }\n        *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + iVar5;\n        if (iVar6 < iVar1) {\n            puVar10 = iVar6 * 0x10 + *(in_EAX + 0x10);\n            puVar10[1] = 0;\n            *(in_EAX + 0x14) = iVar6 + 1;\n            *puVar10 = 0x18;\n            puVar10[2] = uVar9;\n            puVar10[3] = iVar5;\n        }\n        else {\n            puVar10 = NULL;\n        }\n        if (**(in_EAX + 0xc) == 'B') {\n            puVar10 = fcn.0042e140();\n            if ((puVar10 != NULL) && (iVar5 = *(in_EAX + 0x20),  iVar5 < *(in_EAX + 0x24))) {\n                *(*(in_EAX + 0x1c) + iVar5 * 4) = puVar10;\n                *(in_EAX + 0x20) = iVar5 + 1;\n                return puVar10;\n            }\n            return NULL;\n        }\n        return puVar10;\n    }\n    *(in_EAX + 0xc) = pcVar2 + 2;\n    cVar4 = pcVar2[1];\n    iVar5 = cVar4;\n    if ((cVar4 - 0x30U < 10) || (cVar4 == '_')) {\n        uVar8 = 0;\n        if (cVar4 == '_') {\ncode_r0x0042e228:\n            if (*(in_EAX + 0x20) < uVar8 || *(in_EAX + 0x20) == uVar8) {\n                return NULL;\n            }\n            return *(*(in_EAX + 0x1c) + uVar8 * 4);\n        }\n    }\n    else if (0x19 < cVar4 + 0xbfU) goto code_r0x0042e1b5;\n    uVar8 = 0;\n    if (9 < cVar4 - 0x30U) goto code_r0x0042e28b;\n    do {\n        uVar3 = uVar8;\n        uVar8 = iVar5 + -0x30 + uVar8 * 0x24;\n        while( true ) {\n            if (uVar8 < uVar3) {\n                return NULL;\n            }\n            pcVar2 = *(in_EAX + 0xc);\n            if (*pcVar2 == '\\0') {\n                iVar5 = 0;\n            }\n            else {\n                *(in_EAX + 0xc) = pcVar2 + 1;\n                iVar5 = *pcVar2;\n                if (*pcVar2 == '_') {\n                    uVar8 = uVar8 + 1;\n                    goto code_r0x0042e228;\n                }\n            }\n            if (iVar5 - 0x30U < 10) break;\ncode_r0x0042e28b:\n            if (0x19 < iVar5 + 0xbfU) {\n                return NULL;\n            }\n            uVar3 = uVar8;\n            uVar8 = iVar5 + -0x37 + uVar8 * 0x24;\n        }\n    } while( true );\n}\n",
        "token_count": 1354
    },
    "0042e510": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0042e510(uint param_1, uint *param_2)\n\n{\n    int32_t *piVar1;\n    \n    if (param_2 == NULL) {\n        return NULL;\n    }\n    do {\n    // switch table (76 cases) at 0x524d80\n        switch(*param_2) {\n        case 0:\n        case 6:\n        case 0x18:\n        case 0x27:\n        case 0x2c:\n        case 0x31:\n        case 0x40:\n        case 0x41:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x4a:\n        case 0x4b:\n            goto code_r0x0042e547;\n        case 5:\n            piVar1 = fcn.0042e4e0();\n            if ((piVar1 != NULL) && (*piVar1 == 0x2f)) {\n                return piVar1;\n            }\n            goto code_r0x0042e547;\n        case 7:\n        case 8:\n        case 0x32:\n            goto code_r0x0042e53e;\n        }\n        piVar1 = fcn.0042e510();\n        if (piVar1 != NULL) {\n            return piVar1;\n        }\ncode_r0x0042e53e:\n        param_2 = param_2[3];\n    } while (param_2 != NULL);\ncode_r0x0042e547:\n    return NULL;\n}\n",
        "token_count": 348
    },
    "00437810": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00437810(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    uint32_t auStack40 [6];\n    \n    uStack44 = 0;\n    auStack40[0] = 0;\n    if (*0x517514 != 0xbb40e64e) {\n        *0x517518 = ~*0x517514;\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(&uStack44);\n    uVar4 = uStack48 ^ uStack44;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(auStack40);\n    *0x517514 = uStack44 ^ uVar4 ^ auStack40[0] ^ uVar1 ^ uVar2 ^ uVar3;\n    if (*0x517514 == 0xbb40e64e) {\n        *0x517518 = 0x44bf19b0;\n        *0x517514 = 0xbb40e64f;\n    }\n    else {\n        *0x517518 = ~*0x517514;\n    }\n    return;\n}\n",
        "token_count": 334
    },
    "004378c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004378c0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint unaff_retaddr;\n    uint uVar2;\n    uint var_10h;\n    uint var_ch;\n    \n    *0x56b340 = 0xc0000409;\n    *0x56b344 = 1;\n    *0x56b10c = arg_8h;\n    *0x56b118 = unaff_retaddr;\n    *0x56b124 = *0x10;\n    *0x56b34c = unaff_retaddr;\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x526a6c);\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n    uVar2 = 0xc0000409;\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(iVar1, 0xc0000409);\n    sub.msvcrt.dll_abort();\n    if ((iVar1 != 3) && (iVar1 != 0)) {\n        return 1;\n    }\n    fcn.00438250(0x43793f, iVar1, uVar2);\n    return 1;\n}\n",
        "token_count": 280
    },
    "00437b50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00437d08)\n// WARNING: Removing unreachable block (ram,0x00437dd1)\n// WARNING: Removing unreachable block (ram,0x00437d17)\n// WARNING: Removing unreachable block (ram,0x00437e55)\n// WARNING: Removing unreachable block (ram,0x00437e63)\n// WARNING: Removing unreachable block (ram,0x00437f06)\n// WARNING: Removing unreachable block (ram,0x00437e71)\n// WARNING: Removing unreachable block (ram,0x00437dd6)\n// WARNING: Removing unreachable block (ram,0x00437dde)\n// WARNING: Removing unreachable block (ram,0x00437de9)\n// WARNING: Removing unreachable block (ram,0x00437f10)\n// WARNING: Removing unreachable block (ram,0x00437f80)\n// WARNING: Removing unreachable block (ram,0x00437fd1)\n// WARNING: Removing unreachable block (ram,0x00437fea)\n// WARNING: Removing unreachable block (ram,0x00437f87)\n// WARNING: Removing unreachable block (ram,0x00437f8e)\n// WARNING: Removing unreachable block (ram,0x00437f33)\n// WARNING: Removing unreachable block (ram,0x00437f95)\n// WARNING: Removing unreachable block (ram,0x00438055)\n// WARNING: Removing unreachable block (ram,0x00437fb2)\n// WARNING: Removing unreachable block (ram,0x00438040)\n// WARNING: Removing unreachable block (ram,0x00437f3a)\n// WARNING: Removing unreachable block (ram,0x00438005)\n// WARNING: Removing unreachable block (ram,0x0043800c)\n// WARNING: Removing unreachable block (ram,0x00438075)\n// WARNING: Removing unreachable block (ram,0x00438025)\n// WARNING: Removing unreachable block (ram,0x00438029)\n// WARNING: Removing unreachable block (ram,0x00437f45)\n// WARNING: Removing unreachable block (ram,0x0043808e)\n// WARNING: Removing unreachable block (ram,0x00437f62)\n// WARNING: Removing unreachable block (ram,0x00437f66)\n// WARNING: Removing unreachable block (ram,0x00437fba)\n// WARNING: Removing unreachable block (ram,0x00437fc7)\n// WARNING: Removing unreachable block (ram,0x004380b0)\n// WARNING: Removing unreachable block (ram,0x0043804e)\n// WARNING: Removing unreachable block (ram,0x00437df5)\n// WARNING: Removing unreachable block (ram,0x00437e04)\n// WARNING: Removing unreachable block (ram,0x00437e10)\n// WARNING: Removing unreachable block (ram,0x00437e81)\n// WARNING: Removing unreachable block (ram,0x00437e9a)\n// WARNING: Removing unreachable block (ram,0x00437e9d)\n// WARNING: Removing unreachable block (ram,0x00437e33)\n// WARNING: Removing unreachable block (ram,0x00437ef2)\n// WARNING: Removing unreachable block (ram,0x00437e3c)\n// WARNING: Removing unreachable block (ram,0x00437e45)\n// WARNING: Removing unreachable block (ram,0x00437ed0)\n// WARNING: Removing unreachable block (ram,0x00437ede)\n// WARNING: Removing unreachable block (ram,0x00437ee1)\n// WARNING: Removing unreachable block (ram,0x00437eb3)\n// WARNING: Removing unreachable block (ram,0x00437ec2)\n// WARNING: Removing unreachable block (ram,0x00437d1f)\n// WARNING: Removing unreachable block (ram,0x00437d24)\n// WARNING: Removing unreachable block (ram,0x00437d2c)\n// WARNING: Removing unreachable block (ram,0x00437d53)\n// WARNING: Removing unreachable block (ram,0x00437d78)\n// WARNING: Removing unreachable block (ram,0x00437d7b)\n// WARNING: Removing unreachable block (ram,0x00437d89)\n// WARNING: Removing unreachable block (ram,0x00437d92)\n// WARNING: Removing unreachable block (ram,0x00437da4)\n// WARNING: Removing unreachable block (ram,0x00437dbe)\n// WARNING: Removing unreachable block (ram,0x00437dc9)\n// WARNING: Removing unreachable block (ram,0x00437d50)\n\nuint32_t fcn.00437b50(void)\n\n{\n    uint32_t in_EAX;\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uchar auStack105 [25];\n    uint uStack80;\n    uint32_t uStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    uint uStack40;\n    uint uStack28;\n    uint32_t uStack20;\n    \n    if (*0x56b3c0 < 1) goto code_r0x00437c60;\n    iVar4 = 0;\n    puVar3 = *0x56b3c4 + 0xc;\n    do {\n        if ((*puVar3 <= in_EAX) && (in_EAX < *puVar3 + *(puVar3[1] + 8))) {\n            return in_EAX;\n        }\n        iVar4 = iVar4 + 1;\n        puVar3 = puVar3 + 5;\n        iStack72 = *0x56b3c0;\n    } while (iVar4 != *0x56b3c0);\n    do {\n        iStack68 = fcn.00438440();\n        if (iStack68 == 0) {\ncode_r0x00437c87:\n            uVar2 = fcn.004c5e00();\n            if (*0x56b3bc == 0) {\n                *0x56b3bc = 1;\n                uStack76 = in_EAX;\n                fcn.004384b0();\n                iVar4 = fcn.004386a0();\n                *0x56b3c0 = 0;\n                *0x56b3c4 = &stack0xffffff97 + -iVar4 & 0xfffffff0;\n                uVar2 = 0;\n            }\n            return uVar2;\n        }\n        in_EAX = iStack72 * 0x14;\n        puVar1 = *0x56b3c4 + in_EAX;\n        puVar1[4] = iStack68;\n        *puVar1 = 0;\n        iVar4 = fcn.00438540();\n        *(*0x56b3c4 + 0xc + in_EAX) = iVar4 + *(iStack68 + 0xc);\n        iVar4 = (*_sym.imp.KERNEL32.dll_VirtualQuery)();\n        if (iVar4 == 0) {\n            fcn.004c5e00();\n            goto code_r0x00437c87;\n        }\n        uVar2 = uStack20;\n        if (((uStack20 - 0x40 & 0xffffffbf) == 0) || (uVar2 = uStack20 - 4 & 0xfffffffb,  uVar2 == 0)) {\ncode_r0x00437bfe:\n            *0x56b3c0 = *0x56b3c0 + 1;\n            return uVar2;\n        }\n        iVar4 = in_EAX + *0x56b3c4;\n        *(iVar4 + 4) = uStack40;\n        *(iVar4 + 8) = uStack28;\n        uVar2 = (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n        if (uVar2 != 0) goto code_r0x00437bfe;\n        uStack80 = 0x437c4a;\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        in_EAX = fcn.004c5e00();\ncode_r0x00437c60:\n        iStack72 = 0;\n    } while( true );\n}\n",
        "token_count": 1821
    },
    "004380c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004380c0(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x56b3d8);\n    pcVar3 = _sym.imp.KERNEL32.dll_TlsGetValue;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n    for (puVar1 = *0x56b3d0; puVar1 != NULL; puVar1 = puVar1[2]) {\n        iVar4 = (*pcVar3)(*puVar1);\n        iVar5 = (*pcVar2)();\n        if ((iVar5 == 0) && (iVar4 != 0)) {\n            (*puVar1[1])(iVar4);\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x56b3d8);\n    return;\n}\n",
        "token_count": 212
    },
    "00438250": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00438250(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (param_2 != 1) {\n        if (param_2 == 0) {\n            if (*0x56b3d4 != 0) {\n                fcn.004380c0();\n            }\n            iVar2 = *0x56b3d0;\n            if (*0x56b3d4 == 1) {\n                while (iVar2 != 0) {\n                    iVar1 = *(iVar2 + 8);\n                    fcn.00447658(iVar2);\n                    iVar2 = iVar1;\n                }\n                *0x56b3d0 = 0;\n                *0x56b3d4 = 0;\n                (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(0x56b3d8);\n            }\n        }\n        else if (param_2 == 2) {\n            fcn.00437b20();\n        }\n        else if ((param_2 == 3) && (*0x56b3d4 != 0)) {\n            fcn.004380c0();\n        }\n        return 1;\n    }\n    if (*0x56b3d4 == 0) {\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x56b3d8);\n    }\n    *0x56b3d4 = 1;\n    return 1;\n}\n",
        "token_count": 326
    },
    "004388f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.004388f0(int32_t *param_1, code *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    \n    if ((param_1 != NULL) && (param_2 != NULL)) {\n        if (*param_1 == 0) {\n            LOCK();\n            piVar1 = param_1 + 1;\n            *piVar1 = *piVar1 + 1;\n            pcVar3 = _sym.imp.KERNEL32.dll_Sleep;\n            if (*piVar1 == 0) {\n                (*param_2)();\n                *param_1 = 1;\n                return 0;\n            }\n            iVar2 = *param_1;\n            while (iVar2 == 0) {\n                (*pcVar3)(0);\n                iVar2 = *param_1;\n            }\n        }\n        return 0;\n    }\n    return 0x16;\n}\n",
        "token_count": 209
    },
    "0043a660": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a660(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint unaff_retaddr;\n    uint auStack224 [38];\n    uint uStack72;\n    uint uStack68;\n    uint uStack60;\n    \n    puVar4 = in_EAX;\n    for (iVar3 = 0x20; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    in_EAX[0x18] = 0x40000000;\n    in_EAX[0x13] = unaff_retaddr;\n    iVar3 = fcn.004396e0();\n    pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n    if (iVar3 == 0) {\n        if (*0x515a34 == 0) {\n            if (*0x56b3f4 == '\\0') {\n                *0x56b3f4 = '\\x04';\n                *0x56b3f6 = 4;\n                *0x56b3f5 = 4;\n                *0x56b3f7 = 4;\n                *0x56b3fa = 4;\n                *0x56b3fb = 4;\n                *0x56b3f9 = 4;\n                *0x56b3f8 = '\\x04';\n                *0x56b3ff = 0xc;\n                *0x56b400 = 0xc;\n                *0x56b401 = 0xc;\n                *0x56b402 = 0xc;\n                *0x56b403 = 0xc;\n                *0x56b404 = 0xc;\n                *0x56b3fd = 4;\n                *0x56b3fc = 4;\n            }\n        }\n        else if (*0x515a38 == 0) {\n            LOCK();\n            *0x515a3c = *0x515a3c + 1;\n            if (*0x515a3c == 0) {\n                *0x56b3f4 = '\\x04';\n                *0x56b3f6 = 4;\n                *0x56b3f5 = 4;\n                *0x56b3f7 = 4;\n                *0x56b3fa = 4;\n                *0x56b3fb = 4;\n                *0x56b3f9 = 4;\n                *0x56b3f8 = '\\x04';\n                *0x56b3ff = 0xc;\n                *0x56b400 = 0xc;\n                *0x56b401 = 0xc;\n                *0x56b402 = 0xc;\n                *0x56b403 = 0xc;\n                *0x56b404 = 0xc;\n                *0x56b3fd = 4;\n                *0x56b3fc = 4;\n                *0x515a38 = 1;\n            }\n            else {\n                do {\n                    (*pcVar2)(0);\n                } while (*0x515a38 == 0);\n            }\n        }\n        if (*0x56b3f8 == '\\x04') {\n            if ((*(in_EAX + 99) & 0x40) != 0) {\n                *(in_EAX + 0x1c) = 0;\n            }\n            uStack60 = 1;\n            in_EAX[4] = auStack224;\n            uStack68 = 4;\n            uStack72 = 0;\n            auStack224[0] = param_2;\n            fcn.0043a380();\n            in_EAX[0x13] = param_1;\n            return;\n        }\n    }\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar3 == 0) {\n        *0x4ce004 = 0x43c7d0;\n        pcVar2 = 0x43c580;\n    }\n    else {\n        *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"__register_frame_info\");\n        *0x4ce004 = (*pcVar1)(iVar3, \"__deregister_frame_info\");\n    }\n    if (pcVar2 != NULL) {\n        (*pcVar2)(0x52e0f8, 0x56b01c);\n    }\n    fcn.004014c0(fcn.00401590);\n    return;\n}\n",
        "token_count": 1195
    },
    "0043a850": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a850(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t in_EAX;\n    uint *puVar4;\n    \n    fcn.0043a380();\n    iVar2 = *(param_2 + 0xb4);\n    if (*(param_2 + 4 + iVar2 * 8) == 6) {\n        *(in_EAX + 0x4c) = 0;\n        return;\n    }\n    if (iVar2 < 0x12) {\n        puVar4 = *(in_EAX + iVar2 * 4);\n        if (((*(in_EAX + 99) & 0x40) == 0) || (*(in_EAX + 0x6c + iVar2) == '\\0')) {\n            if (*(iVar2 + 0x56b3f4) != '\\x04') goto code_r0x004c5e75;\n            puVar4 = *puVar4;\n        }\n        *(in_EAX + 0x4c) = puVar4;\n        return;\n    }\ncode_r0x004c5e75:\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar2 == 0) {\n        *0x4ce004 = 0x43c7d0;\n        pcVar3 = 0x43c580;\n    }\n    else {\n        *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"__register_frame_info\");\n        *0x4ce004 = (*pcVar1)(iVar2, \"__deregister_frame_info\");\n    }\n    if (pcVar3 != NULL) {\n        (*pcVar3)(0x52e0f8, 0x56b01c);\n    }\n    fcn.004014c0(fcn.00401590);\n    return;\n}\n",
        "token_count": 575
    },
    "0043bba0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043bba0(uint param_1, uint32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t *puVar4;\n    uint8_t uVar5;\n    uint32_t *in_EAX;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint extraout_ECX;\n    uint32_t uVar10;\n    uint *puVar11;\n    int32_t *piVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    bool bVar17;\n    ulong uVar18;\n    uint in_stack_ffffffa8;\n    code *pcStack76;\n    uint32_t uStack68;\n    uint32_t uStack64;\n    uint32_t uStack60;\n    uint32_t uStack40;\n    uint32_t *puStack36;\n    int32_t iStack32;\n    \n    uVar5 = *(in_EAX + 4);\n    if ((uVar5 & 1) != 0) goto code_r0x0043bbb5;\n    uStack60 = in_EAX[4] >> 0xb;\n    if (uStack60 == 0) {\n        piVar12 = in_EAX[3];\n        if ((uVar5 & 2) == 0) {\n            uStack60 = fcn.0043b790();\n            if (uStack60 != 0xffffffff) goto code_r0x0043bd86;\ncode_r0x0043bc7b:\n            in_EAX[4] = 0x7f8;\n            in_EAX[3] = 0x52720c;\n        }\n        else if (*piVar12 != 0) {\n            do {\n                iVar6 = fcn.0043b790();\n                if (iVar6 == -1) goto code_r0x0043bc7b;\n                piVar12 = piVar12 + 1;\n                uStack60 = uStack60 + iVar6;\n            } while (*piVar12 != 0);\ncode_r0x0043bd86:\n            if ((uStack60 & 0xffe00000) == 0) {\n                in_EAX[4] = in_EAX[4] & 0x7ff | uStack60 << 0xb;\n            }\n            else {\n                in_EAX[4] = in_EAX[4] & 0x7ff;\n            }\n            if (uStack60 != 0) goto code_r0x0043beb0;\n        }\n    }\n    else {\ncode_r0x0043beb0:\n        iVar6 = uStack60 * 4 + 8;\n        puStack36 = sub.msvcrt.dll_malloc(iVar6);\n        if (puStack36 != NULL) {\n            puStack36[1] = 0;\n            iStack32 = sub.msvcrt.dll_malloc(iVar6);\n            if (iStack32 != 0) {\n                *(iStack32 + 4) = 0;\n            }\n            piVar12 = in_EAX[3];\n            if ((*(in_EAX + 4) & 2) == 0) {\n                fcn.0043b8e0();\ncode_r0x0043bf22:\n                iVar6 = iStack32;\n                puVar4 = puStack36;\n                if ((puStack36 == NULL) || (puStack36[1] == uStack60)) {\n                    pcStack76 = fcn.0043bb20;\n                    if (((*(in_EAX + 4) & 4) == 0) && (pcStack76 = 0x43b630,  (*(in_EAX + 4) & 0x7f8) == 0)) {\n                        pcStack76 = 0x43b2a0;\n                    }\n                    if (iStack32 == 0) {\n                        fcn.0043b380();\n                    }\n                    else {\n                        uVar16 = puStack36[1];\n                        if (uVar16 == 0) {\n                            iVar13 = 0;\n                            uVar9 = 0;\n                        }\n                        else {\n                            iVar13 = 0x56b408;\n                            puVar1 = puStack36 + 2;\n                            iVar15 = 8;\n                            while( true ) {\n                                *(iVar6 + iVar15) = iVar13;\n                                iVar13 = puVar4 + iVar15;\n                                if (uVar16 * 4 + 4 == iVar15) break;\n                                while (iVar13 != 0x56b408) {\n                                    in_stack_ffffffa8 = *(puVar4 + iVar15 + 4);\n                                    iVar7 = (*pcStack76)();\n                                    if (-1 < iVar7) goto code_r0x0043bfff;\n                                    iVar7 = iVar6 + (iVar13 - puVar1);\n                                    iVar13 = *(iVar7 + 8);\n                                    *(iVar7 + 8) = 0;\n                                }\n                                iVar13 = 0x56b408;\ncode_r0x0043bfff:\n                                iVar15 = iVar15 + 4;\n                            }\n                            iVar13 = 0;\n                            uVar9 = 0;\n                            uVar14 = 0;\n                            do {\n                                if (*(iVar6 + 8 + uVar14 * 4) == 0) {\n                                    *(iVar6 + 8 + iVar13 * 4) = puVar4[uVar14 + 2];\n                                    iVar13 = iVar13 + 1;\n                                }\n                                else {\n                                    puVar4[uVar9 + 2] = puVar4[uVar14 + 2];\n                                    uVar9 = uVar9 + 1;\n                                }\n                                uVar14 = uVar14 + 1;\n                            } while (uVar16 != uVar14);\n                        }\n                        puVar4[1] = uVar9;\n                        *(iVar6 + 4) = iVar13;\n                        if (*(iStack32 + 4) + puStack36[1] != uStack60) goto code_r0x0043c215;\n                        fcn.0043b380();\n                        iVar6 = iStack32;\n                        puVar4 = puStack36;\n                        uStack60 = *(iStack32 + 4);\n                        if (uStack60 != 0) {\n                            uVar16 = puStack36[1];\n                            do {\n                                iVar13 = uStack60 + -1;\n                                puVar1 = iVar6 + uStack60 * 4;\n                                uStack68 = puVar1[1];\n                                if (uVar16 == 0) {\n                                    puVar4[uStack60 + 1] = uStack68;\n                                    if (uStack60 == 1) break;\n                                    uStack68 = *puVar1;\n                                    iVar15 = uStack60 + -2;\n                                    uStack60 = uStack60 + -2;\n                                }\n                                else {\n                                    iVar7 = uStack60 + -1 + uVar16;\n                                    do {\n                                        uVar9 = uVar16 - 1;\n                                        iVar8 = (*pcStack76)(in_EAX, puVar4[uVar16 + 1], uStack68);\n                                        iVar15 = iVar7;\n                                        uStack60 = iVar13;\n                                        if (iVar8 < 1) break;\n                                        puVar4[iVar7 + 2] = puVar4[uVar16 + 1];\n                                        iVar7 = iVar7 + -1;\n                                        iVar15 = iVar13;\n                                        uVar16 = uVar9;\n                                    } while (uVar9 != 0);\n                                }\n                                puVar4[iVar15 + 2] = uStack68;\n                            } while (uStack60 != 0);\n                            puVar4[1] = puVar4[1] + *(iVar6 + 4);\n                        }\n                        fcn.00447658(iStack32);\n                    }\n                    *puStack36 = in_EAX[3];\n                    in_EAX[3] = puStack36;\n                    *(in_EAX + 4) = *(in_EAX + 4) | 1;\n                    goto code_r0x0043bda7;\n                }\n            }\n            else if (*piVar12 != 0) {\n                do {\n                    piVar12 = piVar12 + 1;\n                    fcn.0043b8e0();\n                } while (*piVar12 != 0);\n                goto code_r0x0043bf22;\n            }\ncode_r0x0043c215:\n            uVar18 = sub.msvcrt.dll_abort();\n            puVar11 = uVar18 >> 0x20;\n            *puVar11 = 0xffffffff;\n            puVar11[1] = extraout_ECX;\n            puVar11[3] = uVar18;\n            iVar6 = *0x515a34;\n            puVar11[2] = in_stack_ffffffa8;\n            puVar11[4] = 0x7f8;\n            pcVar3 = _sym.imp.KERNEL32.dll_Sleep;\n            if (iVar6 == 0) {\ncode_r0x0043c2e6:\n                iVar6 = *0x56b418;\n                puVar11[5] = *0x56b418;\n                *0x56b418 = puVar11;\n            }\n            else {\n                if (*0x515a40 == 0) {\n                    LOCK();\n                    *0x515a44 = *0x515a44 + 1;\n                    if (*0x515a44 == 0) {\n                        fcn.0043b420();\n                        *0x515a40 = 1;\n                    }\n                    else {\n                        do {\n                            (*pcVar3)(0);\n                        } while (*0x515a40 == 0);\n                    }\n                    if (*0x515a34 == 0) goto code_r0x0043c2e6;\n                }\n                LOCK();\n                iVar6 = *0x56b40c + 1;\n                bVar17 = *0x56b40c != -1;\n                *0x56b40c = iVar6;\n                if ((bVar17) &&\n                   (iVar6 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x56b410, 0xffffffff),  iVar6 != 0)) {\n                    LOCK();\n                    *0x56b40c = *0x56b40c + -1;\n                }\n                iVar6 = *0x56b418;\n                iVar13 = *0x515a34;\n                puVar11[5] = *0x56b418;\n                *0x56b418 = puVar11;\n                if (iVar13 != 0) {\n                    LOCK();\n                    iVar13 = *0x56b40c + -1;\n                    iVar6 = *0x56b40c + -1;\n                    *0x56b40c = iVar13;\n                    if (-1 < iVar6) {\n                        iVar6 = (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*0x56b410, 1, 0);\n                    }\n                }\n            }\n            return iVar6;\n        }\n    }\ncode_r0x0043bda7:\n    if (param_2 <= *in_EAX && *in_EAX != param_2) {\n        return 0;\n    }\n    uVar5 = *(in_EAX + 4);\n    piVar12 = in_EAX[3];\n    if ((uVar5 & 1) == 0) {\n        if ((uVar5 & 2) == 0) {\n            iVar6 = fcn.0043b9f0();\n            return iVar6;\n        }\n        iVar6 = *piVar12;\n        while( true ) {\n            if (iVar6 == 0) {\n                return 0;\n            }\n            iVar6 = fcn.0043b9f0();\n            if (iVar6 != 0) break;\n            piVar12 = piVar12 + 1;\n            iVar6 = *piVar12;\n        }\n        return iVar6;\n    }\ncode_r0x0043bbb5:\n    uVar16 = in_EAX[3];\n    uStack68 = *(uVar16 + 4);\n    if ((uVar5 & 4) == 0) {\n        uVar9 = 0;\n        if ((*(in_EAX + 4) & 0x7f8) == 0) {\n            while (uVar9 < uStack68) {\n                uVar10 = uVar9 + uStack68 >> 1;\n                iVar6 = *(uVar16 + 8 + uVar10 * 4);\n                iVar13 = *(iVar6 + 0xc);\n                uVar14 = *(iVar6 + 8);\n                while (uVar2 = uVar10,  param_2 < uVar14) {\n                    if (uVar2 <= uVar9) {\n                        return 0;\n                    }\n                    uVar10 = uVar2 + uVar9 >> 1;\n                    iVar6 = *(uVar16 + 8 + uVar10 * 4);\n                    iVar13 = *(iVar6 + 0xc);\n                    uStack68 = uVar2;\n                    uVar14 = *(iVar6 + 8);\n                }\n                if (param_2 < uVar14 + iVar13) {\n                    return iVar6;\n                }\n                uVar9 = uVar2 + 1;\n            }\n        }\n        else {\n            fcn.0043b4b0();\n            if (uStack68 != 0) {\n                uVar9 = 0;\n                do {\n                    uVar14 = uStack68 + uVar9 >> 1;\n                    iVar6 = *(uVar16 + 8 + uVar14 * 4);\n                    fcn.0043b4f0(&uStack40);\n                    fcn.0043b4f0(&puStack36);\n                    if (uStack40 <= param_2) {\n                        if (param_2 < uStack40 + puStack36) {\n                            return iVar6;\n                        }\n                        uVar9 = uVar14 + 1;\n                        uVar14 = uStack68;\n                    }\n                    uStack68 = uVar14;\n                } while (uVar9 < uVar14);\n            }\n        }\n    }\n    else if (uStack68 != 0) {\n        uStack64 = 0;\n        do {\n            uVar9 = uStack68 + uStack64 >> 1;\n            iVar6 = *(uVar16 + 8 + uVar9 * 4);\n            fcn.0043b6a0();\n            fcn.0043b4b0();\n            fcn.0043b4f0(&uStack40);\n            fcn.0043b4f0(&puStack36);\n            if (uStack40 <= param_2) {\n                if (param_2 < uStack40 + puStack36) {\n                    return iVar6;\n                }\n                uStack64 = uVar9 + 1;\n                uVar9 = uStack68;\n            }\n            uStack68 = uVar9;\n        } while (uStack64 < uStack68);\n    }\n    return 0;\n}\n",
        "token_count": 3336
    },
    "0043c820": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.0043c820(uint32_t param_1, uint32_t *param_2)\n\n{\n    uint32_t **ppuVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    uint32_t auStack32 [4];\n    \n    pcVar3 = _sym.imp.KERNEL32.dll_Sleep;\n    if (*0x515a34 != 0) {\n        if (*0x515a40 == 0) {\n            LOCK();\n            *0x515a44 = *0x515a44 + 1;\n            if (*0x515a44 == 0) {\n                fcn.0043b420();\n                *0x515a40 = 1;\n            }\n            else {\n                do {\n                    (*pcVar3)(0);\n                } while (*0x515a40 == 0);\n            }\n            if (*0x515a34 == 0) goto code_r0x0043c853;\n        }\n        LOCK();\n        *0x56b40c = *0x56b40c + 1;\n        if ((*0x56b40c != 0) &&\n           (iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x56b410, 0xffffffff),  iVar5 != 0)) {\n            LOCK();\n            *0x56b40c = *0x56b40c + -1;\n        }\n    }\ncode_r0x0043c853:\n    if (*0x56b414 == NULL) goto code_r0x0043c880;\n    puVar7 = *0x56b414;\n    if (param_1 < **0x56b414) {\n        do {\n            puVar7 = puVar7[5];\n            if (puVar7 == NULL) goto code_r0x0043c880;\n        } while (param_1 <= *puVar7 && *puVar7 != param_1);\n    }\n    iVar5 = fcn.0043bba0();\n    iVar6 = *0x56b40c;\n    do {\n        while( true ) {\n            *0x56b40c = iVar6;\n            if (iVar5 != 0) {\n                if (*0x515a34 != 0) {\n                    LOCK();\n                    *0x56b40c = iVar6 + -1;\n                    if (-1 < iVar6 + -1) {\n                        (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*0x56b410, 1, 0);\n                    }\n                }\n                *param_2 = puVar7[1];\n                param_2[1] = puVar7[2];\n                if ((*(puVar7 + 4) & 4) != 0) {\n                    fcn.0043b6a0();\n                }\n                fcn.0043b4b0();\n                fcn.0043b4f0(auStack32);\n                param_2[2] = auStack32[0];\n                return iVar5;\n            }\ncode_r0x0043c880:\n            puVar7 = *0x56b418;\n            if (*0x56b418 == NULL) {\n                if (*0x515a34 != 0) {\n                    LOCK();\n                    iVar5 = *0x56b40c + -1;\n                    iVar6 = *0x56b40c + -1;\n                    *0x56b40c = iVar5;\n                    if (-1 < iVar6) {\n                        (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*0x56b410, 1, 0);\n                    }\n                }\n                return 0;\n            }\n            *0x56b418 = (*0x56b418)[5];\n            iVar5 = fcn.0043bba0();\n            if ((*0x56b414 != NULL) &&\n               (uVar2 = *puVar7,  puVar4 = *0x56b414,  uVar2 < **0x56b414 || uVar2 == **0x56b414)) break;\n            puVar7[5] = *0x56b414;\n            iVar6 = *0x56b40c;\n            *0x56b414 = puVar7;\n        }\n        do {\n            ppuVar1 = puVar4 + 5;\n            puVar4 = puVar4[5];\n            if (puVar4 == NULL) break;\n        } while (uVar2 <= *puVar4);\n        puVar7[5] = puVar4;\n        *ppuVar1 = puVar7;\n        iVar6 = *0x56b40c;\n    } while( true );\n}\n",
        "token_count": 1061
    },
    "0043cbf0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0043cbf0(int32_t param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n    if (*0x515a34 == 0) {\n        if (*(param_1 + 8) != 0) {\n            return;\n        }\n        uVar6 = fcn.0043cad0();\n        *(param_1 + 8) = uVar6;\n        return;\n    }\n    uVar10 = *(param_1 + 8);\n    if (uVar10 == 0) {\n        if (*0x515a34 == 0) {\ncode_r0x0043cdc8:\n            uVar10 = *(param_1 + 8);\n            if (uVar10 == 0) goto code_r0x0043cdd7;\n        }\n        else {\n            if (*0x515a48 == 0) {\n                LOCK();\n                *0x515a4c = *0x515a4c + 1;\n                if (*0x515a4c == 0) {\n                    fcn.0043cb70();\n                    *0x515a48 = 1;\n                }\n                else {\n                    do {\n                        (*pcVar2)(0);\n                    } while (*0x515a48 == 0);\n                }\n                if (*0x515a34 == 0) goto code_r0x0043cdc8;\n            }\n            LOCK();\n            *0x56b424 = *0x56b424 + 1;\n            if ((*0x56b424 != 0) &&\n               (iVar8 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x56b428, 0xffffffff),  iVar8 != 0)) {\n                LOCK();\n                *0x56b424 = *0x56b424 + -1;\n            }\n            uVar10 = *(param_1 + 8);\n            if (uVar10 == 0) {\ncode_r0x0043cdd7:\n                uVar10 = *0x56b41c + 1;\n                *0x56b41c = uVar10;\n                *(param_1 + 8) = uVar10;\n            }\n            if (*0x515a34 != 0) {\n                LOCK();\n                iVar8 = *0x56b424 + -1;\n                iVar7 = *0x56b424 + -1;\n                *0x56b424 = iVar8;\n                if (-1 < iVar7) {\n                    (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*0x56b428, 1, 0);\n                }\n            }\n        }\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n    uVar6 = *0x56b420;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    puVar4 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(uVar6);\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n    if (puVar4 == NULL) {\n        puVar4 = sub.msvcrt.dll_calloc(uVar10 + 0x21, 4);\n        if (puVar4 == NULL) {\ncode_r0x004014e0:\n            sub.msvcrt.dll_abort();\n            iVar8 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n            if (iVar8 == 0) {\n                *0x4ce004 = 0x43c7d0;\n                pcVar2 = 0x43c580;\n            }\n            else {\n                *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n                pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n                pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar8, \"__register_frame_info\");\n                *0x4ce004 = (*pcVar1)(iVar8, \"__deregister_frame_info\");\n            }\n            if (pcVar2 != NULL) {\n                (*pcVar2)(0x52e0f8, 0x56b01c);\n            }\n            fcn.004014c0(fcn.00401590);\n            return;\n        }\n        *puVar4 = uVar10 + 0x20;\n    }\n    else {\n        uVar5 = *puVar4;\n        if (uVar10 <= uVar5) goto code_r0x0043cc57;\n        uVar9 = uVar5 * 2;\n        if (uVar5 * 2 < uVar10) {\n            uVar9 = uVar10 + 0x20;\n        }\n        puVar4 = sub.msvcrt.dll_realloc(puVar4, uVar9 * 4 + 4);\n        if (puVar4 == NULL) goto code_r0x004014e0;\n        *puVar4 = uVar9;\n        sub.msvcrt.dll_memset(puVar4 + uVar5 + 1, 0, (uVar9 - uVar5) * 4);\n    }\n    iVar8 = (*_sym.imp.KERNEL32.dll_TlsSetValue)(*0x56b420, puVar4);\n    if (iVar8 == 0) {\n        (*pcVar2)();\n    }\ncode_r0x0043cc57:\n    if (puVar4[uVar10] == 0) {\n        uVar5 = fcn.0043cad0();\n        puVar4[uVar10] = uVar5;\n    }\n    return;\n}\n",
        "token_count": 1298
    },
    "00440c00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00440c00(int16_t *param_1, int16_t *param_2)\n\n{\n    uint16_t uVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    \n    *param_2 = param_1[5] >> 0xf;\n    uVar1 = param_1[5];\n    param_2[1] = uVar1 & 0x7fff;\n    if ((uVar1 & 0x7fff) != 0x7fff) {\n        param_2[2] = 0;\n        piVar3 = param_1 + 4;\n        piVar4 = param_2 + 3;\n        do {\n            piVar2 = piVar3 + -1;\n            *piVar4 = *piVar3;\n            piVar3 = piVar2;\n            piVar4 = piVar4 + 1;\n        } while (piVar2 != param_1 + -1);\n        param_2[8] = 0;\n        return;\n    }\n    if ((param_1[5] & 0x7fffU) == 0x7fff) {\n        piVar3 = param_1;\n        do {\n            piVar4 = piVar3 + 1;\n            if (*piVar3 != 0) {\n                param_2[2] = 0;\n                piVar3 = param_1 + 4;\n                piVar4 = param_2 + 3;\n                do {\n                    piVar2 = piVar3 + -1;\n                    *piVar4 = *piVar3;\n                    piVar3 = piVar2;\n                    piVar4 = piVar4 + 1;\n                } while (piVar2 != param_1 + -2);\n                return;\n            }\n            piVar3 = piVar4;\n        } while (piVar4 != param_1 + 5);\n    }\n    piVar3 = param_2 + 2;\n    do {\n        piVar4 = piVar3 + 1;\n        *piVar3 = 0;\n        piVar3 = piVar4;\n    } while (piVar4 != param_2 + 9);\n    return;\n}\n",
        "token_count": 494
    },
    "00441320": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00441320(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint16_t *puVar2;\n    uint32_t uVar3;\n    uint16_t uVar4;\n    uint32_t uVar5;\n    uint16_t *puVar6;\n    uint16_t uVar7;\n    \n    uVar7 = *(param_1 + 4);\n    uVar5 = uVar7;\n    if (uVar7 == 0) {\n        uVar7 = *(param_1 + 6);\n        iVar1 = 0;\n        if (-1 < uVar7) {\n            while (uVar7 == 0) {\n                puVar2 = param_1 + 6;\n                while( true ) {\n                    puVar6 = puVar2 + 1;\n                    puVar2[-1] = uVar7;\n                    if (puVar6 == param_1 + 0x12) break;\n                    uVar7 = *puVar6;\n                    puVar2 = puVar6;\n                }\n                iVar1 = iVar1 + 0x10;\n                *(param_1 + 0x10) = 0;\n                if (iVar1 == 0x60) {\n                    return;\n                }\n                uVar7 = *(param_1 + 6);\n            }\n            if ((uVar7 & 0xff00) == 0) {\n                do {\n                    uVar7 = 0;\n                    puVar2 = param_1 + 0x10;\n                    do {\n                        uVar4 = *puVar2;\n                        puVar6 = puVar2 + -1;\n                        *puVar2 = uVar4 << 8 | uVar7;\n                        uVar7 = uVar4 >> 8;\n                        puVar2 = puVar6;\n                    } while (puVar6 != param_1 + 2);\n                    uVar7 = *(param_1 + 6);\n                    iVar1 = iVar1 + 8;\n                } while ((uVar7 & 0xff00) == 0);\n            }\n            while (-1 < uVar7) {\n                uVar7 = 0;\n                puVar2 = param_1 + 0x10;\n                do {\n                    if (*puVar2 < 0) {\n                        uVar7 = uVar7 | 1;\n                    }\n                    uVar4 = *puVar2 * 2;\n                    if ((uVar7 & 2) != 0) {\n                        uVar4 = uVar4 | 1;\n                    }\n                    puVar6 = puVar2 + -1;\n                    uVar7 = uVar7 * 2;\n                    *puVar2 = uVar4;\n                    puVar2 = puVar6;\n                } while (param_1 + 2 != puVar6);\n                iVar1 = iVar1 + 1;\n                if (0x60 < iVar1) {\n                    return;\n                }\n                uVar7 = *(param_1 + 6);\n            }\n        }\n    }\n    else {\n        iVar1 = 0;\n        if ((uVar7 & 0xff00) != 0) {\n            iVar1 = 0;\n            puVar2 = param_1 + 4;\n            while( true ) {\n                puVar6 = puVar2 + 1;\n                uVar7 = iVar1;\n                iVar1 = uVar5 << 8;\n                *puVar2 = uVar5 >> 8 | uVar7;\n                if (puVar6 == param_1 + 0x12) break;\n                uVar5 = *puVar6;\n                puVar2 = puVar6;\n            }\n            uVar5 = *(param_1 + 4);\n            iVar1 = -8;\n        }\n        while (uVar5 != 0) {\n            uVar3 = 0;\n            puVar2 = param_1 + 4;\n            while( true ) {\n                if ((uVar5 & 1) != 0) {\n                    uVar3 = uVar3 | 1;\n                }\n                uVar7 = uVar5 >> 1;\n                if ((uVar3 & 2) != 0) {\n                    uVar7 = uVar7 | 0x8000;\n                }\n                puVar6 = puVar2 + 1;\n                uVar3 = uVar3 * 2;\n                *puVar2 = uVar7;\n                if (param_1 + 0x12 == puVar6) break;\n                uVar5 = *puVar6;\n                puVar2 = puVar6;\n            }\n            iVar1 = iVar1 + -1;\n            if (iVar1 == -0x51) {\n                return;\n            }\n            uVar5 = *(param_1 + 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 1047
    },
    "00443ec0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00443ec0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    bool bVar3;\n    \n    piVar2 = param_1 + -1;\n    *param_1 = param_1[-1];\n    param_1[1] = 1 << (param_1[-1] & 0x1f);\n    if (piVar2 != NULL) {\n        if (9 < *param_1) {\n    // WARNING: Could not recover jumptable at 0x00447658. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)();\n            return;\n        }\n        fcn.004465f0();\n        bVar3 = *0x56bd88 == 2;\n        iVar1 = *(*param_1 * 4 + 0x56bd60);\n        *(*param_1 * 4 + 0x56bd60) = piVar2;\n        *piVar2 = iVar1;\n        if (bVar3) {\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x56bda0);\n        }\n    }\n    return;\n}\n",
        "token_count": 269
    },
    "004467d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004467d0(uint *param_1)\n\n{\n    uint uVar1;\n    bool bVar2;\n    \n    if (param_1 != NULL) {\n        if (9 < param_1[1]) {\n    // WARNING: Could not recover jumptable at 0x00447658. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)();\n            return;\n        }\n        fcn.004465f0();\n        bVar2 = *0x56bd88 == 2;\n        uVar1 = *(param_1[1] * 4 + 0x56bd60);\n        *(param_1[1] * 4 + 0x56bd60) = param_1;\n        *param_1 = uVar1;\n        if (bVar2) {\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x56bda0);\n        }\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "004440f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar * fcn.004440f0(int32_t *param_1, int32_t param_2, uint32_t *param_3, uint32_t *param_4, uint32_t param_5, \n                   uint32_t param_6, int32_t *param_7, char **param_8)\n\n{\n    uint32_t *puVar1;\n    double dVar2;\n    double dVar3;\n    double dVar4;\n    bool bVar5;\n    double dVar6;\n    bool bVar7;\n    bool bVar8;\n    bool bVar9;\n    char cVar10;\n    uint32_t *puVar11;\n    char *pcVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    uint32_t uVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    int32_t iVar20;\n    uint32_t uVar21;\n    char *pcVar22;\n    uint32_t *puVar23;\n    uint32_t *puVar24;\n    int32_t iVar25;\n    uint32_t uVar26;\n    char *pcVar27;\n    char *pcVar28;\n    float10 fVar29;\n    uint32_t uStack136;\n    int32_t iStack132;\n    uint32_t uStack124;\n    uint32_t uStack120;\n    uint32_t uStack116;\n    int32_t iStack112;\n    uint32_t uStack108;\n    char *pcStack104;\n    uint uStack100;\n    int32_t iStack96;\n    uint32_t uStack92;\n    int32_t iStack88;\n    uint32_t uStack76;\n    int32_t iStack68;\n    int32_t iStack64;\n    uint32_t uStack60;\n    uint32_t uStack52;\n    uint32_t auStack32 [4];\n    \n    uVar14 = *param_4;\n    *param_4 = uVar14 & 0xffffffcf;\n    // switch table (5 cases) at 0x527880\n    switch(uVar14 & 7) {\n    case 0:\n        goto code_r0x004441f8;\n    case 1:\n    case 2:\n        iVar20 = 0;\n        iVar15 = *param_1;\n        if (0x20 < iVar15) {\n            iVar16 = 0x20;\n            do {\n                iVar25 = iVar16 * 2;\n                iVar20 = iVar20 + 1;\n                iVar18 = iVar16 * -2;\n                iVar16 = iVar25;\n            } while (iVar15 != iVar25 && SBORROW4(iVar15, iVar25) == iVar15 + iVar18 < 0);\n        }\n        iVar20 = fcn.00446700(iVar20);\n        puVar1 = iVar20 + 0x14;\n        puVar11 = param_3;\n        puVar23 = puVar1;\n        do {\n            uVar13 = *puVar11;\n            puVar11 = puVar11 + 1;\n            puVar24 = puVar23 + 1;\n            *puVar23 = uVar13;\n            puVar23 = puVar24;\n        } while (puVar11 <= param_3 + (iVar15 + -1 >> 5));\n        iVar16 = puVar24 - puVar1 >> 2;\ncode_r0x004441aa:\n        iVar25 = iVar16 + -1;\n        if (puVar1[iVar25] == 0) break;\n        puVar1 = iVar20 + 0x10 + iVar16 * 4;\n        uVar13 = 0x1f;\n        if (*puVar1 != 0) {\n            for (; *puVar1 >> uVar13 == 0; uVar13 = uVar13 - 1) {\n            }\n        }\n        *(iVar20 + 0x10) = iVar16;\n        iVar25 = iVar16 * 0x20 - (uVar13 ^ 0x1f);\n        goto code_r0x004441c6;\n    case 3:\n        *param_7 = -0x8000;\n        pcVar12 = fcn.00443e40(\"Infinity\", param_8, 8);\n        return pcVar12;\n    case 4:\n        *param_7 = -0x8000;\n        pcVar12 = fcn.00443e40(0x527879, param_8, 3);\n        return pcVar12;\n    default:\n        return NULL;\n    }\n    iVar16 = iVar25;\n    if (iVar25 == 0) goto code_r0x00444645;\n    goto code_r0x004441aa;\ncode_r0x00445204:\n    while( true ) {\n        iVar15 = fcn.00446d70(iStack132, uVar13);\n        pcVar27 = pcStack104 + 1;\n        if (iVar15 < 1) break;\n        *pcStack104 = uStack120;\n        uVar14 = fcn.00446840(uVar13, 10, 0);\n        if (uVar26 == uVar13) {\n            uVar26 = uVar14;\n        }\n        iVar20 = fcn.00446840(iVar20, 10, 0);\n        iVar15 = fcn.00443ee0(iVar20, iStack132);\n        uStack120 = iVar15 + 0x30;\n        uVar13 = uVar14;\n        pcStack104 = pcVar27;\n    }\n    if (uStack120 == 0x39) {\ncode_r0x00445489:\n        cVar10 = '9';\n        *pcStack104 = '9';\n        goto code_r0x00444dce;\n    }\n    uStack120 = uStack120 + 1;\n    uVar14 = 0x20;\ncode_r0x0044523f:\n    *pcStack104 = uStack120;\ncode_r0x00444de3:\n    fcn.004467d0(iStack132);\n    iStack68 = uStack124 + 1;\n    if (uVar13 == 0) goto code_r0x00444787;\n    if ((uVar26 != 0) && (uVar26 != uVar13)) {\n        fcn.004467d0(uVar26);\n    }\n    goto code_r0x0044477f;\ncode_r0x00444645:\n    *(iVar20 + 0x10) = 0;\ncode_r0x004441c6:\n    auStack32[0] = fcn.00446190(iVar20);\n    uStack120 = param_2;\n    if (auStack32[0] != 0) {\n        fcn.00446080(iVar20, auStack32[0]);\n        uStack120 = param_2 + auStack32[0];\n        iVar25 = iVar25 - auStack32[0];\n    }\n    if (*(iVar20 + 0x10) == 0) {\n        fcn.004467d0(iVar20);\ncode_r0x004441f8:\n        *param_7 = 1;\n        pcVar12 = fcn.00443e40(0x52787d, param_8, 1);\n        return pcVar12;\n    }\n    fVar29 = fcn.00446fa0(iVar20, auStack32);\n    dVar2 = fVar29;\n    uStack136 = dVar2 >> 0x20;\n    iVar18 = uStack120 + iVar25;\n    iVar19 = iVar18 + -1;\n    iVar16 = 1 - iVar18;\n    if (-1 < iVar19) {\n        iVar16 = iVar19;\n    }\n    dVar4 = iVar19 * *0x5278a8 + ((dVar2 & 0xfffffffffffff | 0x3ff0000000000000) - *0x527894) * *0x527898 + *0x5278a0;\n    if (0 < iVar16 + -0x435) {\n        dVar4 = (iVar16 + -0x435) * *0x5278b0 + dVar4;\n    }\n    uStack124 = ROUND(dVar4);\n    if ((dVar4 < 0.0) && (uStack124 != dVar4)) {\n        uStack124 = uStack124 - 1;\n    }\n    bVar7 = true;\n    uVar13 = iVar19 * 0x100000 + (uStack136 & 0xfffff | 0x3ff00000);\n    if (uStack124 < 0x17) {\n        if (*(uStack124 * 8 + 0x527920) <= (dVar2 & 0xffffffff | uVar13 << 0x20)) {\n            bVar7 = false;\n        }\n        else {\n            uStack124 = uStack124 - 1;\n            bVar7 = false;\n        }\n    }\n    uStack92 = 0;\n    pcStack104 = (iVar25 - iVar19) - 1;\n    if (pcStack104 < 0) {\n        pcStack104 = NULL;\n        uStack92 = 1 - (iVar25 - iVar19);\n    }\n    if (uStack124 < 0) {\n        uStack92 = uStack92 - uStack124;\n        uStack76 = 0;\n        iStack88 = -uStack124;\n    }\n    else {\n        pcStack104 = pcStack104 + uStack124;\n        uStack76 = uStack124;\n        iStack88 = 0;\n    }\n    if (9 < param_5) {\n        param_5 = 0;\n        goto code_r0x00444680;\n    }\n    if (param_5 < 6) {\n        bVar5 = iVar18 + 0x3fdU < 0x7f8;\n    }\n    else {\n        param_5 = param_5 - 4;\n        bVar5 = false;\n    }\n    if (param_5 == 3) {\n        bVar9 = false;\ncode_r0x0044445b:\n        uStack60 = uStack124 + param_6;\n        uStack108 = uStack60 + 1;\n        bVar5 = uStack108 < 0xf & bVar5;\n        auStack32[0] = uStack108;\n        if (uStack108 < 1) {\n            auStack32[0] = 1;\n        }\ncode_r0x0044448b:\n        pcVar12 = fcn.00443e00(auStack32[0]);\n        uStack116 = param_1[3] - 1;\n        if (uStack116 != 0) goto code_r0x004444aa;\ncode_r0x004444cb:\n        if ((!bVar5) || (uVar14 = uStack124 | uStack116,  uVar14 != 0)) goto code_r0x004446f0;\n        auStack32[0] = 0;\n        dVar4 = dVar2 & 0xffffffff | uVar13 << 0x20;\n        if ((bVar7) && (dVar4 < 1.0)) {\n            if (uStack108 == 0) {\n                dVar4 = dVar2 & 0xffffffff | uVar13 << 0x20;\n                dVar4 = dVar4 + dVar4 + *0x5278cc;\n                uStack100 = SUB84(dVar4, 0);\n                uStack116 = uStack100;\n                iStack96 = dVar4 >> 0x20;\n                iStack112 = iStack96 + -0x3400000;\n                goto code_r0x00444f6c;\n            }\n            if (0 < uStack60) {\n                dVar4 = dVar4 * *0x5278c4;\n                dVar3 = dVar4 * *0x5278c8 + *0x5278cc;\n                iStack68 = SUB84(dVar3, 0);\n                uStack116 = iStack68;\n                iStack64 = dVar3 >> 0x20;\n                iStack68 = -1;\n                iStack112 = iStack64 + -0x3400000;\n                uVar26 = uStack60;\n                goto code_r0x0044454d;\n            }\ncode_r0x00444638:\n            uStack116 = 0;\n            goto code_r0x004446f0;\n        }\n        dVar4 = dVar2 & 0xffffffff | uVar13 << 0x20;\n        dVar4 = dVar4 + dVar4 + *0x5278cc;\n        iStack68 = SUB84(dVar4, 0);\n        uStack116 = iStack68;\n        iStack64 = dVar4 >> 0x20;\n        iStack112 = iStack64 + -0x3400000;\n        if (uStack108 == 0) {\ncode_r0x00444f6c:\n            dVar4 = (dVar2 & 0xffffffff | uVar13 << 0x20) - *0x5278d0;\n            if (dVar4 <= CONCAT44(iStack112, uStack116)) {\n                if (-CONCAT44(iStack112, uStack116) <= dVar4) goto code_r0x00444638;\n                goto code_r0x00444f96;\n            }\n            iStack68 = 2;\n            iStack132 = 0;\n            uVar13 = 0;\n            goto code_r0x0044475d;\n        }\n        dVar4 = dVar2 & 0xffffffff | uVar13 << 0x20;\n        iStack68 = 0;\n        uVar26 = uStack108;\ncode_r0x0044454d:\n        dVar3 = *(uVar26 * 8 + 0x527918);\n        pcVar28 = pcVar12;\n        if (!bVar9) {\n            dVar3 = dVar3 * CONCAT44(iStack112, uStack116);\n            auStack32[0] = 1;\n            pcVar22 = pcVar12;\n            dVar6 = dVar4;\n            bVar8 = false;\n            while( true ) {\n                iVar16 = ROUND(dVar6);\n                if (iVar16 != 0) {\n                    dVar6 = dVar6 - iVar16;\n                    bVar8 = bVar5;\n                }\n                pcVar27 = pcVar22 + 1;\n                uVar17 = iVar16 + 0x30;\n                *pcVar22 = uVar17;\n                if (auStack32[0] == uVar26) break;\n                dVar6 = dVar6 * *0x5278c4;\n                auStack32[0] = auStack32[0] + 1;\n                pcVar22 = pcVar27;\n                bVar8 = bVar5;\n            }\n            if (!bVar8) {\n                dVar6 = dVar4;\n            }\n            if (dVar3 + *0x5278d4 < dVar6) {\ncode_r0x00445321:\n                iStack68 = iStack68 + 1;\n                goto code_r0x0044504e;\n            }\n            if (*0x5278d4 - dVar3 <= dVar6) goto code_r0x00444638;\n            if (dVar6 == 0.0) {\n                uVar14 = 0;\n                iStack68 = iStack68 + 1;\n                pcVar28 = pcVar27;\n            }\n            else {\n                uVar14 = 0x10;\n                iStack68 = iStack68 + 1;\n                pcVar28 = pcVar27;\n            }\ncode_r0x00445163:\n            do {\n                pcVar27 = pcVar28;\n                pcVar28 = pcVar27 + -1;\n            } while (pcVar27[-1] == '0');\n            goto code_r0x00444787;\n        }\n        auStack32[0] = 0;\n        pcVar27 = pcVar12 + 1;\n        dVar6 = *0x5278d4;\n        uVar17 = ROUND(dVar4) + 0x30;\n        *pcVar12 = uVar17;\n        dVar3 = dVar6 / dVar3 - CONCAT44(iStack112, uStack116);\n        dVar4 = dVar4 - ROUND(dVar4);\n        if (dVar4 < dVar3) {\ncode_r0x004454b1:\n            iStack68 = iStack68 + 1;\n            if (dVar4 != 0.0) {\n                uVar14 = 0x10;\n            }\n            goto code_r0x00444787;\n        }\n        pcVar22 = pcVar27;\n        if (dVar3 <= *0x5278c0 - dVar4) {\n            do {\n                auStack32[0] = auStack32[0] + 1;\n                if (uVar26 <= auStack32[0]) goto code_r0x00444638;\n                pcVar27 = pcVar22 + 1;\n                dVar3 = dVar3 * *0x5278c4;\n                dVar4 = *0x5278c4 * dVar4;\n                uVar21 = ROUND(dVar4);\n                uVar17 = (uVar21 & 0xff) + 0x30;\n                dVar4 = dVar4 - uVar21;\n                *pcVar22 = uVar17;\n                if (dVar4 < dVar3) goto code_r0x004454b1;\n                pcVar22 = pcVar27;\n            } while (dVar3 <= *0x5278c0 - dVar4);\n            goto code_r0x00445321;\n        }\n        iStack68 = iStack68 + 1;\ncode_r0x0044504e:\n        while( true ) {\n            cVar10 = uVar17;\n            pcVar22 = pcVar27 + -1;\n            if (cVar10 != '9') break;\n            if (pcVar22 == pcVar12) {\n                iStack68 = iStack68 + 1;\n                *pcVar28 = '0';\n                cVar10 = pcVar27[-1];\n                pcVar22 = pcVar28;\n                break;\n            }\n            uVar17 = pcVar27[-2];\n            pcVar27 = pcVar22;\n        }\n        uVar14 = 0x20;\n        *pcVar22 = cVar10 + '\\x01';\n        pcVar12 = pcVar28;\n        goto code_r0x00444787;\n    }\n    if (param_5 < 4) {\n        bVar9 = false;\n        if (param_5 == 2) goto code_r0x00444a36;\n    }\n    else {\n        bVar9 = true;\n        if (param_5 == 4) {\ncode_r0x00444a36:\n            uStack108 = 1;\n            if (0 < param_6) {\n                uStack108 = param_6;\n            }\n            bVar5 = uStack108 < 0xf & bVar5;\n            param_6 = uStack108;\n            uStack60 = uStack108;\n            auStack32[0] = uStack108;\n            goto code_r0x0044448b;\n        }\n        if (param_5 == 5) goto code_r0x0044445b;\n    }\ncode_r0x00444680:\n    auStack32[0] = ROUND(iVar15 * *0x5278b8) + 3;\n    pcVar12 = fcn.00443e00(auStack32[0]);\n    uStack116 = param_1[3] - 1;\n    if (uStack116 != 0) {\n        bVar5 = false;\n        bVar9 = true;\n        uStack60 = 0xffffffff;\n        uStack108 = 0xffffffff;\n        param_6 = 0;\ncode_r0x004444aa:\n        uVar26 = 2;\n        if (-1 < uStack116) {\n            uVar26 = uStack116;\n        }\n        uStack116 = 3 - uVar26;\n        if ((uVar14 & 8) == 0) {\n            uStack116 = uVar26;\n        }\n        goto code_r0x004444cb;\n    }\n    param_6 = 0;\n    bVar9 = true;\n    uStack60 = 0xffffffff;\n    uStack108 = 0xffffffff;\ncode_r0x004446f0:\n    if ((uStack120 < 0) || (param_1[5] < uStack124)) {\n        iVar16 = iStack88;\n        uVar14 = uStack92;\n        if (bVar9) {\n            auStack32[0] = (iVar15 - iVar25) + 1;\n            if ((uStack120 - (iVar15 - iVar25) < param_1[1]) && ((param_5 - 3 & 0xfffffffd) != 0)) {\n                auStack32[0] = (uStack120 - param_1[1]) + 1;\n                if ((param_5 < 2 || uStack108 < 1) || (auStack32[0] <= uStack108)) goto code_r0x00444888;\ncode_r0x00444c6e:\n                iVar15 = uStack108 - 1;\n                iVar16 = iStack88 - iVar15;\n                if (iStack88 < iVar15) {\n                    iVar16 = 0;\n                    uStack76 = uStack76 + (iVar15 - iStack88);\n                    iStack88 = iVar15;\n                }\n                auStack32[0] = uStack108;\n                if (uStack108 < 0) {\n                    auStack32[0] = 0;\n                    uVar14 = uStack92 - uStack108;\n                }\n                else {\n                    pcStack104 = pcStack104 + uStack108;\n                    uStack92 = uStack108 + uStack92;\n                }\n            }\n            else {\n                if (1 < param_5) goto code_r0x00444c6e;\ncode_r0x00444888:\n                pcStack104 = pcStack104 + auStack32[0];\n                uStack92 = auStack32[0] + uStack92;\n            }\n            uVar13 = fcn.00446930(1);\n        }\n        else {\n            uVar13 = 0;\n        }\n        uVar26 = uStack76;\n        if ((0 < uVar14) && (0 < pcStack104)) {\n            auStack32[0] = pcStack104;\n            if (uVar14 <= pcStack104) {\n                auStack32[0] = uVar14;\n            }\n            uStack92 = uStack92 - auStack32[0];\n            pcStack104 = pcStack104 - auStack32[0];\n            uVar14 = uVar14 - auStack32[0];\n        }\n        iVar15 = iVar20;\n        if (iStack88 != 0) {\n            if (bVar9) {\n                if (iVar16 != 0) {\n                    uVar13 = fcn.00446ad0(uVar13, iVar16);\n                    iVar15 = fcn.00446960(uVar13, iVar20);\n                    fcn.004467d0(iVar20);\n                    if (iStack88 - iVar16 == 0) goto code_r0x00444903;\n                }\n                iVar15 = fcn.00446ad0(iVar15, iStack88 - iVar16);\n            }\n            else {\n                iVar15 = fcn.00446ad0(iVar20, iStack88);\n            }\n        }\ncode_r0x00444903:\n        iStack132 = fcn.00446930(1);\n        if (uStack76 == 0) {\n            if ((iVar25 == 1 && param_5 < 2) && (param_1[1] + 1 < param_2)) {\ncode_r0x004452f2:\n                uStack92 = uStack92 + 1;\n                pcStack104 = pcStack104 + 1;\n                uStack76 = 1;\n                if (uVar26 != 0) goto code_r0x00444aa3;\n            }\n            uVar26 = 0x1f;\n        }\n        else {\n            iStack132 = fcn.00446ad0(iStack132, uStack76);\n            if ((iVar25 == 1 && param_5 < 2) && (param_1[1] + 1 < param_2)) goto code_r0x004452f2;\n            uStack76 = 0;\ncode_r0x00444aa3:\n            puVar1 = iStack132 + 0x10 + *(iStack132 + 0x10) * 4;\n            uVar26 = 0x1f;\n            if (*puVar1 != 0) {\n                for (; *puVar1 >> uVar26 == 0; uVar26 = uVar26 - 1) {\n                }\n            }\n            uVar26 = uVar26 ^ 0x1f;\n        }\n        uVar26 = (uVar26 - pcStack104) - 4 & 0x1f;\n        iVar20 = iVar15;\n        auStack32[0] = uVar26;\n        if (0 < uStack92 + uVar26) {\n            iVar20 = fcn.00446c50(iVar15, uStack92 + uVar26);\n        }\n        if (0 < auStack32[0] + pcStack104) {\n            iStack132 = fcn.00446c50(iStack132, auStack32[0] + pcStack104);\n        }\n        bVar5 = param_5 < 3;\n        if ((bVar7) && (iVar15 = fcn.00446d70(iVar20, iStack132),  iVar15 < 0)) {\n            uStack124 = uStack124 - 1;\n            iVar20 = fcn.00446840(iVar20, 10, 0);\n            uStack108 = uStack60;\n            if (bVar9) {\n                uVar13 = fcn.00446840(uVar13, 10, 0);\n                if (bVar5 || 0 < uStack60) {\ncode_r0x00444acc:\n                    uVar26 = uVar13;\n                    if (0 < uVar26 + uVar14) {\n                        uVar26 = fcn.00446c50(uVar13, uVar26 + uVar14);\n                    }\n                    uVar13 = uVar26;\n                    if (uStack76 != 0) {\n                        iVar15 = fcn.00446700(*(uVar26 + 4));\n                        sub.msvcrt.dll_memcpy(iVar15 + 0xc, uVar26 + 0xc, *(uVar26 + 0x10) * 4 + 8);\n                        uVar13 = fcn.00446c50(iVar15, 1);\n                    }\n                    auStack32[0] = 1;\n                    pcStack104 = pcVar12;\n                    do {\n                        iVar15 = fcn.00443ee0(iVar20, iStack132);\n                        uStack120 = iVar15 + 0x30;\n                        uVar17 = fcn.00446d70(iVar20, uVar26);\n                        iVar16 = fcn.00446dc0(iStack132, uVar13);\n                        uVar14 = 1;\n                        if (*(iVar16 + 0xc) == 0) {\n                            uVar14 = fcn.00446d70(iVar20, iVar16);\n                        }\n                        fcn.004467d0(iVar16);\n                        if (((uVar14 | param_5) == 0) && (uVar21 = *param_3 & 1 | uStack116,  uVar21 == 0)) {\n                            pcVar27 = pcStack104 + 1;\n                            if (uStack120 == 0x39) goto code_r0x00445489;\n                            if (uVar17 < 1) {\n                                if (*(iVar20 + 0x10) < 2) {\n                                    uVar14 = 0x10;\n                                    if (*(iVar20 + 0x14) == 0) {\n                                        uVar14 = uVar21;\n                                    }\n                                }\n                                else {\n                                    uVar14 = 0x10;\n                                }\n                            }\n                            else {\n                                uStack120 = iVar15 + 0x31;\n                                uVar14 = 0x20;\n                            }\n                            goto code_r0x0044523f;\n                        }\n                        if ((uVar17 < 0) || (((uVar17 | param_5) == 0 && ((*param_3 & 1) == 0)))) {\n                            if (uStack116 == 0) {\n                                if (0 < uVar14) goto code_r0x004454f4;\n                            }\n                            else {\n                                if ((1 < *(iVar20 + 0x10)) || (*(iVar20 + 0x14) != 0)) {\n                                    if (uStack116 != 2) goto code_r0x00445204;\n                                    pcVar27 = pcStack104 + 1;\n                                    uVar14 = 0x10;\n                                    goto code_r0x0044523f;\n                                }\n                                if (uVar14 < 1) {\n                                    pcVar27 = pcStack104 + 1;\n                                    uVar14 = 0;\n                                    goto code_r0x0044523f;\n                                }\ncode_r0x004454f4:\n                                iVar20 = fcn.00446c50(iVar20, 1);\n                                iVar16 = fcn.00446d70(iVar20, iStack132);\n                                if ((iVar16 < 1) && ((iVar16 != 0 || ((uStack120 & 1) == 0)))) {\n                                    uStack116 = 0x20;\n                                }\n                                else {\n                                    if (uStack120 == 0x39) {\n                                        pcVar27 = pcStack104 + 1;\n                                        goto code_r0x00445489;\n                                    }\n                                    uStack116 = 0x20;\n                                    uStack120 = iVar15 + 0x31;\n                                }\n                            }\n                            pcVar27 = pcStack104 + 1;\n                            uVar14 = 0x10;\n                            if ((*(iVar20 + 0x10) < 2) && (uVar14 = uStack116,  *(iVar20 + 0x14) != 0)) {\n                                uVar14 = 0x10;\n                            }\n                            goto code_r0x0044523f;\n                        }\n                        pcVar27 = pcStack104 + 1;\n                        if ((0 < uVar14) && (uStack116 != 2)) {\n                            if (uStack120 == 0x39) goto code_r0x00445489;\n                            uVar14 = 0x20;\n                            *pcStack104 = uStack120 + '\\x01';\n                            goto code_r0x00444de3;\n                        }\n                        *pcStack104 = uStack120;\n                        if (auStack32[0] == uStack108) goto code_r0x00444d94;\n                        iVar20 = fcn.00446840(iVar20, 10, 0);\n                        if (uVar26 == uVar13) {\n                            uVar13 = fcn.00446840(uVar26, 10, 0);\n                            uVar26 = uVar13;\n                        }\n                        else {\n                            uVar26 = fcn.00446840(uVar26, 10, 0);\n                            uVar13 = fcn.00446840(uVar13, 10, 0);\n                        }\n                        auStack32[0] = auStack32[0] + 1;\n                        pcStack104 = pcVar27;\n                    } while( true );\n                }\n            }\n            else if (bVar5 || 0 < uStack60) goto code_r0x00444d30;\n        }\n        else if ((0 < uStack108) || (bVar5)) {\n            if (bVar9) goto code_r0x00444acc;\ncode_r0x00444d30:\n            auStack32[0] = 1;\n            pcVar28 = pcVar12;\n            while( true ) {\n                pcVar27 = pcVar28 + 1;\n                iVar15 = fcn.00443ee0(iVar20, iStack132);\n                uStack120 = iVar15 + 0x30;\n                *pcVar28 = uStack120;\n                if (uStack108 <= auStack32[0]) break;\n                iVar20 = fcn.00446840(iVar20, 10, 0);\n                auStack32[0] = auStack32[0] + 1;\n                pcVar28 = pcVar27;\n            }\n            uVar26 = 0;\ncode_r0x00444d94:\n            if (uStack116 == 0) {\n                iVar20 = fcn.00446c50(iVar20, 1);\n                iVar15 = fcn.00446d70(iVar20, iStack132);\n                cVar10 = pcVar27[-1];\n                if ((0 < iVar15) || ((iVar15 == 0 && ((uStack120 & 1) != 0)))) {\ncode_r0x00444dce:\n                    while (pcVar28 = pcVar27 + -1,  cVar10 == '9') {\n                        if (pcVar28 == pcVar12) {\n                            uStack124 = uStack124 + 1;\n                            uVar14 = 0x20;\n                            *pcVar12 = '1';\n                            goto code_r0x00444de3;\n                        }\n                        cVar10 = pcVar27[-2];\n                        pcVar27 = pcVar28;\n                    }\n                    uVar14 = 0x20;\n                    *pcVar28 = cVar10 + '\\x01';\n                    goto code_r0x00444de3;\n                }\n                iVar15 = *(iVar20 + 0x10);\ncode_r0x0044529a:\n                uVar14 = 0x10;\n                if (iVar15 < 2) {\n                    uVar14 = ~-(*(iVar20 + 0x14) == 0) & 0x10;\n                }\n            }\n            else {\n                iVar15 = *(iVar20 + 0x10);\n                cVar10 = pcVar27[-1];\n                if (uStack116 == 2) goto code_r0x0044529a;\n                if ((1 < iVar15) || (*(iVar20 + 0x14) != 0)) goto code_r0x00444dce;\n                uVar14 = 0;\n            }\n            while (cVar10 == '0') {\n                cVar10 = pcVar27[-2];\n                pcVar27 = pcVar27 + -1;\n            }\n            goto code_r0x00444de3;\n        }\n        pcVar27 = pcVar12;\n        if (uStack108 == 0) {\n            iStack132 = fcn.00446840(iStack132, 5, 0);\n            iVar15 = fcn.00446d70(iVar20, iStack132);\n            if (0 < iVar15) {\n                iStack68 = uStack124 + 2;\n                goto code_r0x0044475d;\n            }\n        }\ncode_r0x004449c0:\n        uVar14 = 0x10;\n        iStack68 = -param_6;\n        pcVar12 = pcVar27;\n    }\n    else {\n        dVar4 = *(uStack124 * 8 + 0x527920);\n        if ((-1 < param_6) || (0 < uStack108)) {\n            dVar2 = dVar2 & 0xffffffff | uVar13 << 0x20;\n            auStack32[0] = 1;\n            iStack68 = uStack124 + 1;\n            pcVar27 = pcVar12 + 1;\n            uStack52 = ROUND(dVar2 / dVar4);\n            *pcVar12 = uStack52 + '0';\n            dVar2 = dVar2 - uStack52 * dVar4;\n            if (dVar2 == 0.0) {\ncode_r0x00444ef8:\n                uVar14 = 0;\n                goto code_r0x00444787;\n            }\n            uVar14 = 1;\n            pcVar28 = pcVar27;\n            if (uStack108 != 1) {\n                do {\n                    uVar14 = uVar14 + 1;\n                    pcVar27 = pcVar28 + 1;\n                    dVar3 = *0x5278c4;\n                    uStack52 = ROUND((dVar2 * dVar3) / dVar4);\n                    *pcVar28 = uStack52 + '0';\n                    dVar2 = dVar2 * dVar3 - uStack52 * dVar4;\n                    auStack32[0] = uVar14;\n                    if (dVar2 == 0.0) goto code_r0x00444ef8;\n                    pcVar28 = pcVar27;\n                } while (uVar14 != uStack108);\n            }\n            pcVar28 = pcVar12;\n            if (uStack116 == 0) {\n                uVar17 = pcVar27[-1];\n                if ((dVar2 + dVar2 <= dVar4) && ((dVar2 + dVar2 != dVar4 || ((uStack52 & 1) == 0)))) {\n                    uVar14 = 0x10;\n                    pcVar28 = pcVar27;\n                    goto code_r0x00445163;\n                }\n            }\n            else {\n                uVar14 = 0x10;\n                if (uStack116 != 1) goto code_r0x00444787;\n                uVar17 = pcVar27[-1];\n            }\n            goto code_r0x0044504e;\n        }\n        if ((uStack108 != 0) || ((dVar2 & 0xffffffff | uVar13 << 0x20) <= dVar4 * *0x5278d0)) {\ncode_r0x00444f96:\n            iStack132 = 0;\n            uVar13 = 0;\n            pcVar27 = pcVar12;\n            goto code_r0x004449c0;\n        }\n        iStack68 = uStack124 + 2;\n        iStack132 = 0;\n        uVar13 = uStack108;\ncode_r0x0044475d:\n        uVar14 = 0x20;\n        pcVar27 = pcVar12 + 1;\n        *pcVar12 = '1';\n    }\n    fcn.004467d0(iStack132);\n    if (uVar13 == 0) goto code_r0x00444787;\ncode_r0x0044477f:\n    fcn.004467d0(uVar13);\ncode_r0x00444787:\n    fcn.004467d0(iVar20);\n    *pcVar27 = '\\0';\n    *param_7 = iStack68;\n    if (param_8 != NULL) {\n        *param_8 = pcVar27;\n    }\n    *param_4 = *param_4 | uVar14;\n    return pcVar12;\n}\n",
        "token_count": 8673
    },
    "00446250": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint fcn.00446250(char **param_1, uint32_t *param_2, uint32_t *param_3)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    int32_t iVar8;\n    uint32_t *puVar9;\n    int32_t iVar10;\n    uint32_t *puVar11;\n    uint32_t *puVar12;\n    uint32_t *puVar13;\n    char *pcVar14;\n    uint8_t uStack68;\n    uint8_t uStack64;\n    int32_t iStack60;\n    uint32_t *puStack56;\n    \n    if (*0x56be30 == '\\0') {\n        fcn.004461e0();\n    }\n    uVar3 = *param_2 & 0x1f;\n    pcVar14 = *param_1;\n    puVar6 = param_3 + (*param_2 >> 5) + 1;\n    if (uVar3 == 0) {\n        puVar6 = param_3 + (*param_2 >> 5);\n    }\n    puVar11 = puVar6 + -1;\n    puVar6[-1] = 0;\n    while (pcVar14[1] - 1 < 0x20) {\n        pcVar14 = pcVar14 + 1;\n    }\n    if (((pcVar14[1] == 0x30) && ((pcVar14[2] & 0xdfU) == 0x58)) && (uVar1 = pcVar14[3],  0x20 < uVar1)) {\n        pcVar14 = pcVar14 + 2;\n    }\n    else {\n        uVar1 = pcVar14[1];\n    }\n    iVar8 = 0;\n    iStack60 = 0;\n    iVar10 = 0;\n    puVar12 = puVar11;\n    puStack56 = puVar11;\n    do {\n        uVar5 = uVar1;\n        if (uVar5 == 0) {\n            if (iVar10 == 0) {\n                return 4;\n            }\ncode_r0x00446470:\n            if ((puVar12 < puStack56) && (iVar8 < 8)) {\n                cVar2 = '\\b' - iVar8;\n                uStack68 = cVar2 * -4 + 0x20;\n                uVar5 = *puVar12;\n                puVar7 = puVar12;\n                do {\n                    puVar9 = puVar7 + 1;\n                    *puVar7 = uVar5 | puVar7[1] << (uStack68 & 0x1f);\n                    uVar5 = puVar7[1] >> (cVar2 * '\\x04' & 0x1fU);\n                    *puVar9 = uVar5;\n                    puVar7 = puVar9;\n                } while (puVar9 < puStack56);\n            }\n            puVar7 = param_3;\n            if (param_3 < puVar12) {\n                do {\n                    puVar9 = puVar12 + 1;\n                    *puVar7 = *puVar12;\n                    puVar12 = puVar9;\n                    puVar13 = puVar7 + 1;\n                    puVar7 = puVar7 + 1;\n                } while (puVar9 <= puVar11);\n                do {\n                    puVar12 = puVar13 + 1;\n                    *puVar13 = 0;\n                    puVar13 = puVar12;\n                } while (puVar12 <= puVar11);\n                uVar5 = puVar6[-1];\n            }\n            else {\n                uVar5 = puVar6[-1];\n                if (uVar3 != 0) {\n                    uVar5 = uVar5 & 0xffffffffU >> (0x20U - uVar3 & 0x1f);\n                    puVar6[-1] = uVar5;\n                }\n            }\n            while( true ) {\n                if (uVar5 != 0) {\n                    return 5;\n                }\n                if (param_3 == puVar11) break;\n                puVar11 = puVar11 + -1;\n                uVar5 = *puVar11;\n            }\n            *puVar11 = 1;\n            return 5;\n        }\n        pcVar4 = pcVar14 + 1;\n        uVar1 = *(uVar5 + 0x56be00);\n        if (uVar1 == 0) {\n            if (0x20 < uVar5) {\n                if ((uVar5 != 0x29) || (iVar10 == 0)) {\n                    pcVar4 = pcVar14 + 2;\n                    if (uVar5 != 0x29) {\n                        cVar2 = pcVar14[2];\n                        while( true ) {\n                            if (cVar2 == '\\0') {\n                                return 4;\n                            }\n                            pcVar4 = pcVar4 + 1;\n                            if (cVar2 == ')') break;\n                            cVar2 = *pcVar4;\n                        }\n                    }\n                    *param_1 = pcVar4;\n                    return 4;\n                }\n                *param_1 = pcVar14 + 2;\n                goto code_r0x00446470;\n            }\n            puVar7 = puVar12;\n            if (iStack60 < iVar10) {\n                if ((puVar12 < puStack56) && (iVar8 < 8)) {\n                    cVar2 = '\\b' - iVar8;\n                    uStack68 = cVar2 * '\\x04';\n                    uStack64 = cVar2 * -4 + 0x20;\n                    uVar5 = *puVar12;\n                    do {\n                        puVar9 = puVar7 + 1;\n                        *puVar7 = uVar5 | puVar7[1] << (uStack64 & 0x1f);\n                        uVar5 = puVar7[1] >> (uStack68 & 0x1f);\n                        *puVar9 = uVar5;\n                        puVar7 = puVar9;\n                    } while (puVar9 < puStack56);\n                }\n                iVar8 = 8;\n                if (puVar12 <= param_3) goto code_r0x0044637d;\n                puVar7 = puVar12 + -1;\n                puVar12[-1] = 0;\n                iVar8 = 0;\n                iStack60 = iVar10;\n                puStack56 = puVar7;\n            }\n            uVar1 = pcVar14[2];\n            while (uVar1 < 0x21) {\n                uVar1 = pcVar4[2];\n                pcVar4 = pcVar4 + 1;\n            }\n            puVar12 = puVar7;\n            if (((uVar1 == 0x30) && ((pcVar4[2] & 0xdfU) == 0x58)) && (0x20 < pcVar4[3])) {\n                pcVar4 = pcVar4 + 2;\n            }\n        }\n        else {\n            iVar8 = iVar8 + 1;\n            iVar10 = iVar10 + 1;\n            if (iVar8 < 9) {\n                uVar5 = *puVar12 << 4;\n            }\n            else {\n                if (puVar12 <= param_3) goto code_r0x0044637d;\n                puVar12[-1] = 0;\n                uVar5 = 0;\n                puVar12 = puVar12 + -1;\n                iVar8 = 1;\n            }\n            *puVar12 = uVar1 & 0xf | uVar5;\n        }\ncode_r0x0044637d:\n        uVar1 = pcVar4[1];\n        pcVar14 = pcVar4;\n    } while( true );\n}\n",
        "token_count": 1757
    },
    "004465f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044667e)\n// WARNING: Removing unreachable block (ram,0x0044666f)\n// WARNING: Removing unreachable block (ram,0x00446674)\n// WARNING: Removing unreachable block (ram,0x00446631)\n\nvoid fcn.004465f0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t in_EAX;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n    pcVar1 = _sym.imp.KERNEL32.dll_InitializeCriticalSection;\n    if (*0x56bd88 != 2) {\n        if (*0x56bd88 != 0) {\n            if (*0x56bd88 == 1) {\n                do {\n                    (*pcVar2)(1);\n                } while (*0x56bd88 == 1);\n                if (*0x56bd88 == 2) goto code_r0x0044663b;\n            }\n            return;\n        }\n        *0x56bd88 = 1;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x56bda0);\n        (*pcVar1)(0x56bdb8);\n        fcn.004014c0(0x4466c0);\n        *0x56bd88 = 2;\n    }\ncode_r0x0044663b:\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_EAX * 0x18 + 0x56bda0);\n    return;\n}\n",
        "token_count": 334
    },
    "00446700": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00446700(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puStack20;\n    \n    fcn.004465f0();\n    iVar2 = *0x56bd88;\n    if (param_1 < 10) {\n        puVar3 = *(param_1 * 4 + 0x56bd60);\n        if (puVar3 != NULL) {\n            *(param_1 * 4 + 0x56bd60) = *puVar3;\n            goto joined_r0x0044677c;\n        }\n        iVar4 = 1 << (param_1 & 0x1f);\n        uVar1 = iVar4 * 4 + 0x1b;\n        if (0x120 < (*0x515a9c + -0x15ad18 >> 3) + (uVar1 >> 3)) goto code_r0x00446750;\n        puVar3 = *0x515a9c;\n        *0x515a9c = (uVar1 & 0xfffffff8) + *0x515a9c;\n    }\n    else {\ncode_r0x00446750:\n        iVar4 = 1 << (param_1 & 0x1f);\n        puVar3 = sub.msvcrt.dll_malloc(iVar4 * 4 + 0x1bU & 0xfffffff8);\n        if (puVar3 == NULL) {\n            return;\n        }\n    }\n    iVar2 = *0x56bd88;\n    puVar3[1] = param_1;\n    puVar3[2] = iVar4;\njoined_r0x0044677c:\n    if (iVar2 == 2) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x56bda0);\n        puVar3 = puStack20;\n    }\n    puVar3[4] = 0;\n    puVar3[3] = 0;\n    return;\n}\n",
        "token_count": 458
    },
    "00446ad0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.00446ad0(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    if (((param_2 & 3) != 0) && (param_1 = fcn.00446840(param_1, *((param_2 & 3) * 4 + 0x5278fc), 0),  param_1 == 0)) {\n        return 0;\n    }\n    param_2 = param_2 >> 2;\n    if (param_2 != 0) {\n        puVar1 = *0x56b440;\n        if (*0x56b440 == NULL) {\n            fcn.004465f0();\n            puVar1 = *0x56b440;\n            if (*0x56b440 == NULL) {\n                puVar1 = fcn.00446700(1);\n                if (puVar1 == NULL) {\n                    *0x56b440 = NULL;\n                    return 0;\n                }\n                puVar1[5] = 0x271;\n                puVar1[4] = 1;\n                *0x56b440 = puVar1;\n                *puVar1 = 0;\n            }\n            if (*0x56bd88 == 2) {\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x56bdb8);\n            }\n        }\n        iVar2 = param_1;\n        if ((param_2 & 1) != 0) goto code_r0x00446b21;\n        while (param_2 = param_2 >> 1,  puVar3 = puVar1,  param_2 != 0) {\n            while( true ) {\n                puVar1 = *puVar3;\n                if (puVar1 == NULL) {\n                    fcn.004465f0();\n                    puVar1 = *puVar3;\n                    if (puVar1 == NULL) {\n                        puVar1 = fcn.00446960(puVar3, puVar3);\n                        *puVar3 = puVar1;\n                        if (puVar1 == NULL) {\n                            return 0;\n                        }\n                        *puVar1 = 0;\n                    }\n                    if (*0x56bd88 == 2) {\n                        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x56bdb8);\n                    }\n                }\n                iVar2 = param_1;\n                if ((param_2 & 1) == 0) break;\ncode_r0x00446b21:\n                param_1 = fcn.00446960(iVar2, puVar1);\n                if (param_1 == 0) {\n                    return 0;\n                }\n                fcn.004467d0(iVar2);\n                param_2 = param_2 >> 1;\n                puVar3 = puVar1;\n                if (param_2 == 0) {\n                    return param_1;\n                }\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 668
    },
    "00446d70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.00446d70(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    \n    iVar1 = *(param_2 + 0x10);\n    uVar2 = *(param_1 + 0x10) - iVar1;\n    if (uVar2 == 0) {\n        puVar4 = param_1 + 0x14 + iVar1;\n        puVar3 = param_2 + 0x14 + iVar1 * 4;\n        do {\n            puVar3 = puVar3 + -1;\n            puVar4 = puVar4 + -1;\n            if (*puVar4 != *puVar3) {\n                return -(*puVar4 < *puVar3) | 1;\n            }\n        } while (param_1 + 0x14 < puVar4);\n    }\n    return uVar2;\n}\n",
        "token_count": 226
    },
    "00446dc0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t fcn.00446dc0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    int32_t *piVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    bool bVar11;\n    int32_t *piStack60;\n    uint32_t *puStack52;\n    int32_t iStack40;\n    \n    iVar1 = *(param_2 + 0x10);\n    iVar10 = *(param_1 + 0x10) - iVar1;\n    bVar11 = iVar10 < 0;\n    iVar4 = param_1;\n    if (iVar10 == 0) {\n        puVar2 = param_1 + 0x14U + iVar1;\n        puVar5 = param_2 + 0x14 + iVar1 * 4;\n        do {\n            puVar5 = puVar5 + -1;\n            puVar2 = puVar2 + -1;\n            if (*puVar2 != *puVar5) {\n                if (*puVar2 < *puVar5) goto code_r0x00446f4b;\n                goto code_r0x00446e10;\n            }\n        } while (param_1 + 0x14U < puVar2);\n        iStack40 = fcn.00446700(0);\n        if (iStack40 != 0) {\n            *(iStack40 + 0x10) = 1;\n            *(iStack40 + 0x14) = 0;\n            return iStack40;\n        }\n    }\n    else {\n        iVar10 = 0;\n        if (bVar11) {\ncode_r0x00446f4b:\n            iVar10 = 1;\n            iVar4 = param_2;\n            param_2 = param_1;\n        }\ncode_r0x00446e10:\n        iStack40 = fcn.00446700(*(iVar4 + 4));\n        if (iStack40 != 0) {\n            *(iStack40 + 0xc) = iVar10;\n            iVar1 = *(iVar4 + 0x10);\n            puVar2 = iVar4 + 0x14 + iVar1;\n            iVar10 = *(param_2 + 0x10);\n            uVar9 = 0;\n            puVar7 = param_2 + 0x14;\n            piVar6 = iStack40 + 0x14;\n            puVar5 = iVar4 + 0x14;\n            do {\n                puStack52 = puVar5;\n                piStack60 = piVar6;\n                puVar8 = puVar7 + 1;\n                puVar5 = puStack52 + 1;\n                uVar3 = *puStack52 - *puVar7;\n                iVar4 = uVar3 - uVar9;\n                piVar6 = piStack60 + 1;\n                uVar9 = -(uVar3 < uVar9) - (*puStack52 < *puVar7) & 1;\n                *piStack60 = iVar4;\n                puVar7 = puVar8;\n            } while (puVar8 < param_2 + 0x14 + iVar10);\n            iVar10 = iVar1;\n            if (puVar5 < puVar2) {\n                do {\n                    puVar7 = puVar5 + 1;\n                    iVar4 = *puVar5 - uVar9;\n                    uVar9 = -(*puVar5 < uVar9) & 1;\n                    *piVar6 = iVar4;\n                    puVar5 = puVar7;\n                    piVar6 = piVar6 + 1;\n                } while (puVar7 < puVar2);\n                piVar6 = piStack60 + (puVar2 + (-5 - puStack52) & 0xfffffffcU) + 8;\n            }\n            while (iVar4 == 0) {\n                iVar4 = piVar6[(iVar10 + -2) - iVar1];\n                iVar10 = iVar10 + -1;\n            }\n            *(iStack40 + 0x10) = iVar10;\n        }\n    }\n    return iStack40;\n}\n",
        "token_count": 956
    },
    "00447420": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00447420(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int8_t iVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    \n    iVar2 = *(param_1 + 0x10);\n    puVar1 = param_1 + 0x14;\n    iVar3 = param_2 >> 5;\n    if (iVar2 < iVar3) {\n        puVar7 = puVar1 + iVar2;\n    }\n    else {\n        puVar7 = puVar1 + iVar3;\n        if (((iVar3 < iVar2) && ((param_2 & 0x1f) != 0)) &&\n           (iVar4 = param_2 & 0x1f,  *puVar7 != (*puVar7 >> iVar4) << iVar4)) {\n            return 1;\n        }\n    }\n    if (puVar7 <= puVar1) {\n        return 0;\n    }\n    puVar6 = puVar7 + -1;\n    if (puVar7[-1] == 0) {\n        uVar5 = puVar6 + (3 - puVar1);\n        do {\n            if ((~uVar5 & 0xfffffffc) + puVar7 == puVar6) {\n                return 0;\n            }\n            puVar6 = puVar6 + -1;\n        } while (*puVar6 == 0);\n    }\n    return 1;\n}\n",
        "token_count": 352
    },
    "00447890": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00447890(uint param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        return 0;\n    }\n    uVar2 = 0;\n    if (*0x56b3d4 != 0) {\n        puVar1 = sub.msvcrt.dll_calloc(1, 0xc);\n        if (puVar1 != NULL) {\n            *puVar1 = param_1;\n            puVar1[1] = param_2;\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x56b3d8);\n            puVar1[2] = *0x56b3d0;\n            *0x56b3d0 = puVar1;\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x56b3d8);\n            return 0;\n        }\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 224
    },
    "00448d40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448d40(uint *param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = 0;\n    param_1[1] = 0;\n    return;\n}\n",
        "token_count": 50
    },
    "0044e1c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0044e1c0(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = fcn.004522b0();\n    piVar1 = *(*arg_8h + 0xc) + iVar3 * 4;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    puVar4 = fcn.004c3430(0x68);\n    puVar4[1] = 0;\n    *puVar4 = 0x52c530;\n    puVar4[2] = 0;\n    puVar4[3] = 0;\n    *(puVar4 + 4) = 0;\n    puVar4[5] = 0;\n    puVar4[6] = 0;\n    puVar4[7] = 0;\n    puVar4[8] = 0;\n    *(puVar4 + 9) = 0;\n    *(puVar4 + 0x19) = 0;\n    fcn.004a7d20(arg_8h);\n    fcn.004ad8f0(puVar4, iVar3);\n    return *piVar1;\n}\n",
        "token_count": 329
    },
    "0044e2b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0044e2b0(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = fcn.004522b0();\n    piVar1 = *(*arg_8h + 0xc) + iVar3 * 4;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    puVar4 = fcn.004c3430(0xa8);\n    puVar4[1] = 0;\n    *puVar4 = 0x52c540;\n    puVar4[2] = 0;\n    puVar4[3] = 0;\n    *(puVar4 + 4) = 0;\n    puVar4[5] = 0;\n    puVar4[6] = 0;\n    puVar4[7] = 0;\n    puVar4[8] = 0;\n    puVar4[9] = 0;\n    *(puVar4 + 0x29) = 0;\n    fcn.004a83f0(arg_8h);\n    fcn.004ad8f0(puVar4, iVar3);\n    return *piVar1;\n}\n",
        "token_count": 327
    },
    "0044e3a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0044e3a0(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = fcn.004522b0();\n    piVar1 = *(*arg_8h + 0xc) + iVar3 * 4;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    puVar4 = fcn.004c3430(0x44);\n    *puVar4 = 0x52c654;\n    puVar4[1] = 0;\n    puVar4[2] = 0;\n    puVar4[3] = 0;\n    *(puVar4 + 4) = 0;\n    *(puVar4 + 0x12) = 0;\n    puVar4[5] = 0;\n    puVar4[6] = 0;\n    puVar4[7] = 0;\n    puVar4[8] = 0;\n    puVar4[9] = 0;\n    puVar4[10] = 0;\n    puVar4[0xb] = 0;\n    puVar4[0xc] = 0;\n    puVar4[0xd] = 0;\n    *(puVar4 + 0x43) = 0;\n    fcn.004aa1f0(arg_8h);\n    fcn.004ad8f0(puVar4, iVar3);\n    return *piVar1;\n}\n",
        "token_count": 389
    },
    "0044e4b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0044e4b0(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = fcn.004522b0();\n    piVar1 = *(*arg_8h + 0xc) + iVar3 * 4;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    puVar4 = fcn.004c3430(0x44);\n    *puVar4 = 0x52c664;\n    puVar4[1] = 0;\n    puVar4[2] = 0;\n    puVar4[3] = 0;\n    *(puVar4 + 4) = 0;\n    *(puVar4 + 0x12) = 0;\n    puVar4[5] = 0;\n    puVar4[6] = 0;\n    puVar4[7] = 0;\n    puVar4[8] = 0;\n    puVar4[9] = 0;\n    puVar4[10] = 0;\n    puVar4[0xb] = 0;\n    puVar4[0xc] = 0;\n    puVar4[0xd] = 0;\n    *(puVar4 + 0x43) = 0;\n    fcn.004aa8d0(arg_8h);\n    fcn.004ad8f0(puVar4, iVar3);\n    return *piVar1;\n}\n",
        "token_count": 389
    },
    "0044e5c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0044e5c0(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = fcn.004522b0();\n    piVar1 = *(*arg_8h + 0xc) + iVar3 * 4;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    puVar4 = fcn.004c3430(0x54);\n    puVar4[1] = 0;\n    *puVar4 = 0x52c674;\n    puVar4[2] = 0;\n    puVar4[3] = 0;\n    *(puVar4 + 4) = 0;\n    *(puVar4 + 0x12) = 0;\n    puVar4[6] = 0;\n    puVar4[7] = 0;\n    puVar4[8] = 0;\n    puVar4[9] = 0;\n    puVar4[10] = 0;\n    puVar4[0xb] = 0;\n    puVar4[0xc] = 0;\n    puVar4[0xd] = 0;\n    puVar4[0xe] = 0;\n    *(puVar4 + 0x52) = 0;\n    fcn.004aafb0(arg_8h);\n    fcn.004ad8f0(puVar4, iVar3);\n    return *piVar1;\n}\n",
        "token_count": 389
    },
    "0044e6d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0044e6d0(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = fcn.004522b0();\n    piVar1 = *(*arg_8h + 0xc) + iVar3 * 4;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    puVar4 = fcn.004c3430(0x54);\n    puVar4[1] = 0;\n    *puVar4 = 0x52c684;\n    puVar4[2] = 0;\n    puVar4[3] = 0;\n    *(puVar4 + 4) = 0;\n    *(puVar4 + 0x12) = 0;\n    puVar4[6] = 0;\n    puVar4[7] = 0;\n    puVar4[8] = 0;\n    puVar4[9] = 0;\n    puVar4[10] = 0;\n    puVar4[0xb] = 0;\n    puVar4[0xc] = 0;\n    puVar4[0xd] = 0;\n    puVar4[0xe] = 0;\n    *(puVar4 + 0x52) = 0;\n    fcn.004ab7d0(arg_8h);\n    fcn.004ad8f0(puVar4, iVar3);\n    return *piVar1;\n}\n",
        "token_count": 390
    },
    "0044f7a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nulong __cdecl\nfcn.0044f7a0(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch, int32_t *arg_20h\n            , uint *arg_24h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    code *unaff_EBX;\n    ulong uVar3;\n    uint32_t in_stack_ffffff54;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint *var_5ch;\n    int32_t var_50h;\n    uint *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_34h;\n    int32_t var_30h;\n    code *var_1ch;\n    code *var_bp_ch;\n    \n    var_1ch = NULL;\n    var_50h = 0;\n    var_bp_ch = unaff_EBX;\n    uVar3 = fcn.00491c00(in_stack_ffffff54 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h & 0xff\n                         , arg_1ch, &var_50h, 0, &var_34h);\n    if (var_50h == 0) {\n        if (var_1ch == NULL) {\n            uVar2 = fcn.004be9d0(\"uninitialized __any_string\");\n            if (var_1ch != NULL) {\n                (*var_1ch)(&var_34h);\n            }\n            fcn.0043b0b0(uVar2);\n            if (var_1ch != NULL) {\n                (*var_1ch)(uVar3 >> 0x20);\n            }\n            fcn.0043b0b0(&var_34h);\n            if (var_bp_ch != NULL) {\n                (*var_bp_ch)(uVar2);\n            }\n            fcn.0043b0b0(&var_34h);\n            if (var_bp_ch != NULL) {\n                (*var_bp_ch)(uVar2);\n            }\n            fcn.0043b0b0(&var_34h);\n            if (var_bp_ch != NULL) {\n                (*var_bp_ch)(uVar2);\n            }\n            fcn.0043b0b0(&var_34h);\n            if (var_bp_ch != NULL) {\n                (*var_bp_ch)(uVar2);\n            }\n            fcn.0043b0b0(&var_34h);\n            if (var_1ch != NULL) {\n                (*var_1ch)(uVar2);\n            }\n            fcn.0043b0b0(&var_34h);\n            if (var_1ch != NULL) {\n                (*var_1ch)(uVar2);\n            }\n            fcn.0043b0b0(&var_34h);\n            fcn.004af220();\n            fcn.004c33f0(&var_34h);\n            fcn.0043b0b0(uVar2);\n            fcn.004af220();\n            fcn.004c33f0(&var_34h);\n            fcn.0043b0b0(uVar2);\n            fcn.004af220();\n            do {\n                fcn.004c33f0(&var_34h);\n                fcn.0043b0b0(uVar2);\n                fcn.004c33f0(&var_34h);\n                fcn.0043b0b0(uVar2);\n                fcn.00453c10();\n                fcn.004afd30();\n            } while( true );\n        }\n        var_4ch = &var_44h;\n        fcn.004b0ab0(var_34h, var_30h + var_34h, arg_8h & 0xffffff00);\n        puVar1 = *arg_24h;\n        if (var_4ch == &var_44h) {\n            fcn.004b25a0(&var_4ch);\n        }\n        else if (puVar1 == arg_24h + 2) {\n            *arg_24h = var_4ch;\n            arg_24h[2] = var_44h;\n            arg_24h[1] = var_48h;\n            var_4ch = &var_44h;\n        }\n        else {\n            uVar2 = arg_24h[2];\n            *arg_24h = var_4ch;\n            arg_24h[1] = var_48h;\n            arg_24h[2] = var_44h;\n            var_4ch = &var_44h;\n            if (puVar1 != NULL) {\n                var_4ch = puVar1;\n                var_44h = uVar2;\n            }\n        }\n        var_5ch = &var_44h;\n        var_48h = 0;\n        *var_4ch = 0;\n        if (var_4ch != var_5ch) {\n            fcn.004c33f0(var_4ch);\n        }\n    }\n    else {\n        *arg_20h = var_50h;\n    }\n    if (var_1ch != NULL) {\n        (*var_1ch)(&var_34h);\n    }\n    return uVar3;\n}\n",
        "token_count": 1240
    },
    "0044f930": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nulong __cdecl\nfcn.0044f930(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch, int32_t *arg_20h, \n            uint arg_24h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    ulong uVar4;\n    uint32_t in_stack_ffffff84;\n    uchar var_3dh;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    code *var_1ch;\n    uint var_bp_ch;\n    \n    var_1ch = NULL;\n    var_3ch = 0;\n    uVar4 = fcn.00491d80(in_stack_ffffff84 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h & 0xff\n                         , arg_1ch, &var_3ch, 0, &var_34h);\n    if (var_3ch == 0) {\n        if (var_1ch == NULL) {\n            uVar3 = fcn.004be9d0(0x523804);\n            fcn.0048bdf0(&var_3dh);\n            if (var_1ch != NULL) {\n                (*var_1ch)(&var_34h);\n            }\n            fcn.0043b0b0(uVar3);\n            fcn.00483f30(&var_3dh);\n            if (var_1ch != NULL) {\n                (*var_1ch)(uVar4 >> 0x20);\n            }\n            fcn.0043b0b0(&var_34h);\n            fcn.004af220();\n            fcn.004c33f0(&var_34h);\n            fcn.0043b0b0(uVar3);\n            fcn.004af220();\n            fcn.004c33f0(&var_34h);\n            fcn.0043b0b0(uVar3);\n            fcn.004af220();\n            do {\n                fcn.004c33f0(&var_34h);\n                fcn.0043b0b0(uVar3);\n                fcn.004c33f0(&var_34h);\n                fcn.0043b0b0(uVar3);\n                fcn.00453c10();\n                fcn.0048e6f0();\n            } while( true );\n        }\n        fcn.0048d4c0(var_34h, var_30h, &var_3dh);\n        fcn.0048c040(&var_38h);\n        if (*0x515a34 == 0) {\n            iVar2 = *(var_38h + -4);\n            *(var_38h + -4) = iVar2 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = var_38h + -4;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar2 < 1) {\n            fcn.0048bdd0(&var_3dh);\n        }\n    }\n    else {\n        *arg_20h = var_3ch;\n    }\n    if (var_1ch != NULL) {\n        (*var_1ch)(&var_34h);\n    }\n    return uVar4;\n}\n",
        "token_count": 811
    },
    "0044fb70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl\nfcn.0044fb70(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch, \n            int32_t *arg_20h, uint *arg_24h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    code *unaff_EBX;\n    uint64_t uVar4;\n    uint32_t in_stack_ffffff54;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_50h;\n    uint *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_34h;\n    int32_t var_30h;\n    code *var_1ch;\n    code *var_bp_ch;\n    \n    var_1ch = NULL;\n    var_50h = 0;\n    var_bp_ch = unaff_EBX;\n    uVar4 = fcn.00491ec0(in_stack_ffffff54 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h & 0xff\n                         , arg_1ch, &var_50h, 0, &var_34h);\n    uVar2 = uVar4;\n    if (var_50h != 0) {\n        *arg_20h = var_50h;\n        goto code_r0x0044fbfb;\n    }\n    if (var_1ch == NULL) {\n        uVar3 = fcn.004be9d0(\"uninitialized __any_string\");\n        if (var_1ch != NULL) {\n            (*var_1ch)(&var_34h);\n        }\n        fcn.0043b0b0(uVar3);\n        if (var_bp_ch != NULL) {\n            (*var_bp_ch)(uVar2);\n        }\n        fcn.0043b0b0(uVar3);\n        if (var_bp_ch != NULL) {\n            (*var_bp_ch)(uVar2);\n        }\n        fcn.0043b0b0(uVar3);\n        if (var_bp_ch != NULL) {\n            (*var_bp_ch)(uVar2);\n        }\n        fcn.0043b0b0(uVar3);\n        if (var_bp_ch != NULL) {\n            (*var_bp_ch)(uVar2);\n        }\n        fcn.0043b0b0(uVar3);\n        if (var_1ch != NULL) {\n            (*var_1ch)(uVar2);\n        }\n        fcn.0043b0b0(uVar3);\n        if (var_1ch != NULL) {\n            (*var_1ch)(uVar2);\n        }\n        fcn.0043b0b0(uVar3);\n        fcn.004af220();\n        fcn.004c33f0(uVar3);\n        fcn.0043b0b0(uVar2);\n        fcn.004af220();\n        fcn.004c33f0(uVar3);\n        fcn.0043b0b0(uVar2);\n        fcn.004af220();\n        do {\n            fcn.004c33f0(uVar3);\n            fcn.0043b0b0(uVar2);\n            fcn.004c33f0(uVar3);\n            fcn.0043b0b0(uVar2);\n            fcn.00453c10();\n            fcn.004afd30();\n        } while( true );\n    }\n    var_4ch = &var_44h;\n    fcn.004b3830(var_34h, var_34h + var_30h * 2, arg_8h & 0xffffff00);\n    puVar1 = *arg_24h;\n    if (var_4ch == &var_44h) {\n        fcn.004b5420(&var_4ch);\n        puVar1 = var_4ch;\n        uVar2 = var_44h;\n    }\n    else {\n        if (puVar1 == arg_24h + 2) {\n            *arg_24h = var_4ch;\n            arg_24h[1] = var_48h;\n            arg_24h[2] = var_44h;\n            goto code_r0x0044fbfb;\n        }\n        uVar2 = arg_24h[2];\n        *arg_24h = var_4ch;\n        arg_24h[1] = var_48h;\n        arg_24h[2] = var_44h;\n        if (puVar1 == NULL) goto code_r0x0044fbfb;\n    }\n    var_44h = uVar2;\n    var_4ch = puVar1;\n    var_48h = 0;\n    *var_4ch = 0;\n    if (var_4ch != &var_44h) {\n        fcn.004c33f0(var_4ch);\n    }\ncode_r0x0044fbfb:\n    if (var_1ch != NULL) {\n        (*var_1ch)(&var_34h);\n    }\n    return uVar4 & 0xffffffff | (arg_ch & 0xffff0000 | uVar4 >> 0x20 & 0xffff) << 0x20;\n}\n",
        "token_count": 1244
    },
    "0044fcf0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl\nfcn.0044fcf0(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch, int32_t *arg_20h\n            , uint arg_24h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    uint64_t uVar5;\n    uint32_t in_stack_ffffff74;\n    uint var_50h;\n    uint var_4ch;\n    uchar var_3dh;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    code *var_1ch;\n    uint var_bp_ch;\n    \n    var_1ch = NULL;\n    var_3ch = 0;\n    uVar5 = fcn.00492050(in_stack_ffffff74 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h & 0xff\n                         , arg_1ch, &var_3ch, 0, &var_34h);\n    uVar2 = uVar5;\n    if (var_3ch == 0) {\n        if (var_1ch == NULL) {\n            uVar4 = fcn.004be9d0(0x523804);\n            fcn.00483f30(&var_3dh);\n            if (var_1ch != NULL) {\n                (*var_1ch)(&var_34h);\n            }\n            fcn.0043b0b0(uVar4);\n            fcn.004af220();\n            fcn.004c33f0(uVar4);\n            fcn.0043b0b0(uVar2);\n            fcn.004af220();\n            fcn.004c33f0(uVar4);\n            fcn.0043b0b0(uVar2);\n            fcn.004af220();\n            do {\n                fcn.004c33f0(uVar4);\n                fcn.0043b0b0(uVar2);\n                fcn.004c33f0(uVar4);\n                fcn.0043b0b0(uVar2);\n                fcn.00453c10();\n                fcn.0048e6f0();\n            } while( true );\n        }\n        fcn.00485730(var_34h, var_30h, &var_3dh);\n        fcn.004841a0(&var_38h);\n        if (*0x515a34 == 0) {\n            iVar3 = *(var_38h + -4);\n            *(var_38h + -4) = iVar3 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = var_38h + -4;\n            iVar3 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar3 < 1) {\n            fcn.00483f10(&var_3dh);\n        }\n    }\n    else {\n        *arg_20h = var_3ch;\n    }\n    if (var_1ch != NULL) {\n        (*var_1ch)(&var_34h);\n    }\n    return uVar5 & 0xffffffff | (arg_ch & 0xffff0000 | uVar5 >> 0x20 & 0xffff) << 0x20;\n}\n",
        "token_count": 808
    },
    "00450060": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl fcn.00450060(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    code *var_1ch;\n    uint var_bp_ch;\n    \n    var_1ch = NULL;\n    uVar2 = 0x450089;\n    fcn.0048d530(arg_1ch);\n    var_30h = *(*arg_1ch + -0xc);\n    var_1ch = 0x493e70;\n    uVar1 = fcn.004922f0(uVar2 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0, \n                         &fcn.00450060::var_34h);\n    if (var_1ch != NULL) {\n        (*var_1ch)(&fcn.00450060::var_34h);\n    }\n    return uVar1;\n}\n",
        "token_count": 297
    },
    "00450290": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl fcn.00450290(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    code *var_1ch;\n    uint var_bp_ch;\n    \n    var_1ch = NULL;\n    uVar2 = 0x4502b9;\n    fcn.004857c0(arg_1ch);\n    var_30h = *(*arg_1ch + -0xc);\n    var_1ch = 0x493ef0;\n    uVar1 = fcn.00492550(uVar2 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0, \n                         &fcn.00450290::var_34h);\n    if (var_1ch != NULL) {\n        (*var_1ch)(&fcn.00450290::var_34h);\n    }\n    return uVar1;\n}\n",
        "token_count": 298
    },
    "00451860": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.00451860(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar var_dh;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    (**(*arg_8h + 0xc))(arg_8h, arg_ch);\n    fcn.00490f80(var_ch, *(var_ch + -0xc));\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_ch + -4);\n        *(var_ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return;\n    }\n    fcn.0048bdd0(&var_dh);\n    return;\n}\n",
        "token_count": 232
    },
    "00451ca0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00451ca0(int32_t *param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    fcn.00451a70();\n    if (*(*param_1 + 0x18) == 0x451d20) {\n        return param_2;\n    }\n    // WARNING: Could not recover jumptable at 0x00451ce0. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar1 = (**(*param_1 + 0x18))();\n    return uVar1;\n}\n",
        "token_count": 130
    },
    "004522f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t ** __cdecl fcn.004522f0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    uint uVar6;\n    int32_t **in_ECX;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint *in_stack_ffffffcc;\n    int32_t **var_28h;\n    int32_t s;\n    int32_t *var_20h;\n    int32_t **var_1ch;\n    uint var_bp_ch;\n    \n    var_1ch = in_ECX + 2;\n    *in_ECX = var_1ch;\n    *(in_ECX + 2) = 0;\n    iVar9 = *arg_8h;\n    in_ECX[1] = NULL;\n    piVar4 = *(iVar9 + 0x10);\n    s = *piVar4;\n    if (s == 0) {\n        fcn.004b0da0(0, 0, 1, 0x2a);\n        return in_ECX;\n    }\n    if (piVar4[1] == 0) {\ncode_r0x00452560:\n        iVar9 = s;\n        uVar6 = sub.msvcrt.dll_strlen(s);\n        fcn.004b0590(0, 0, iVar9, uVar6);\n        return in_ECX;\n    }\n    uVar8 = 0;\n    iVar9 = s;\n    var_28h = in_ECX;\n    var_20h = piVar4;\n    do {\n        uVar8 = uVar8 + 1;\n        iVar1 = var_20h[uVar8];\n        iVar3 = sub.msvcrt.dll_strcmp(iVar9, iVar1);\n        iVar9 = iVar1;\n    } while (uVar8 < 5 && iVar3 == 0);\n    in_ECX = var_28h;\n    if (iVar3 == 0) goto code_r0x00452560;\n    fcn.004b2380(0x80);\n    uVar6 = **0x527c4c;\n    uVar8 = sub.msvcrt.dll_strlen(uVar6);\n    if (0x7fffffffU - var_28h[1] < uVar8) {\n        fcn.004bead0(0x5236fe);\ncode_r0x00452636:\n        fcn.004bead0(0x5236fe);\ncode_r0x00452642:\n        fcn.004bead0(0x5236fe);\n    }\n    else {\n        fcn.004b2500(uVar6, uVar8);\n        piVar4 = var_28h[1];\n        ppiVar5 = *var_28h;\n        if (var_1ch == ppiVar5) {\n            piVar7 = 0xf;\n        }\n        else {\n            piVar7 = var_28h[2];\n        }\n        if (piVar7 < piVar4 + 1) {\n            fcn.004b26d0(piVar4, 0, 0, 1);\n            ppiVar5 = *var_28h;\n        }\n        *(ppiVar5 + piVar4) = 0x3d;\n        var_28h[1] = piVar4 + 1;\n        *(*var_28h + 1 + piVar4) = 0;\n        uVar6 = **(*arg_8h + 0x10);\n        uVar8 = sub.msvcrt.dll_strlen(uVar6);\n        if (uVar8 <= 0x7fffffffU - var_28h[1]) {\n            fcn.004b2500(uVar6, uVar8);\n            iVar9 = 4;\n            while( true ) {\n                piVar4 = var_28h[1];\n                var_20h = piVar4 + 1;\n                ppiVar5 = *var_28h;\n                if (var_1ch == ppiVar5) {\n                    piVar7 = 0xf;\n                }\n                else {\n                    piVar7 = var_28h[2];\n                }\n                if (piVar7 < var_20h) {\n                    fcn.004b26d0(piVar4, 0, 0, 1);\n                    ppiVar5 = *var_28h;\n                }\n                *(ppiVar5 + piVar4) = 0x3b;\n                var_28h[1] = piVar4 + 1;\n                *(*var_28h + 1 + piVar4) = 0;\n                uVar6 = *(*0x527c4c + iVar9);\n                uVar8 = sub.msvcrt.dll_strlen(uVar6);\n                if (0x7fffffffU - var_28h[1] < uVar8) break;\n                fcn.004b2500(uVar6, uVar8);\n                piVar4 = var_28h[1];\n                var_20h = piVar4 + 1;\n                ppiVar5 = *var_28h;\n                if (var_1ch == ppiVar5) {\n                    piVar7 = 0xf;\n                }\n                else {\n                    piVar7 = var_28h[2];\n                }\n                if (piVar7 < var_20h) {\n                    uVar8 = 1;\n                    fcn.004b26d0();\n                    ppiVar5 = *var_28h;\n                }\n                *(ppiVar5 + piVar4) = 0x3d;\n                var_28h[1] = piVar4 + 1;\n                *(*var_28h + 1 + piVar4) = 0;\n                uVar6 = *(*(*arg_8h + 0x10) + iVar9);\n                uVar8 = sub.msvcrt.dll_strlen(uVar6, uVar8);\n                if (0x7fffffffU - var_28h[1] < uVar8) goto code_r0x00452636;\n                fcn.004b2500(uVar6, uVar8);\n                iVar9 = iVar9 + 4;\n                if (iVar9 == 0x18) {\n                    return var_28h;\n                }\n            }\n            goto code_r0x00452642;\n        }\n    }\n    piVar4 = fcn.004bead0(0x5236fe);\n    if (var_1ch != *var_28h) {\n        fcn.004c33f0(*var_28h);\n    }\n    fcn.0043b0b0(piVar4);\n    if (in_stack_ffffffcc != &var_28h) {\n        fcn.004c33f0(in_stack_ffffffcc);\n    }\n    if (piVar4 == 0xffffffff) {\n        fcn.004c36d0(var_28h);\n    }\n    uVar6 = fcn.0043b0b0();\n    fcn.004c3600(uVar6);\n    fcn.004c3770();\n    piVar7 = var_28h[1];\n    while (piVar4 = piVar4 + 1,  piVar4 <= var_28h[2] && var_28h[2] != piVar4) {\n        piVar2 = piVar7[piVar4];\n        if (piVar2 != NULL) {\n            if (*0x515a34 == 0) {\n                iVar9 = piVar2[1];\n                piVar2[1] = iVar9 + -1;\n            }\n            else {\n                LOCK();\n                piVar7 = piVar2 + 1;\n                iVar9 = *piVar7;\n                *piVar7 = *piVar7 + -1;\n            }\n            if (iVar9 == 1) {\n                (**(*piVar2 + 4))();\n            }\n            piVar7 = var_28h[1];\n        }\n    }\n    if (piVar7 != NULL) {\n        fcn.004c33e0(piVar7);\n    }\n    ppiVar5 = var_28h[3];\n    if (ppiVar5 != NULL) {\n        if (var_28h[2] != NULL) {\n            piVar4 = NULL;\n            do {\n                piVar7 = ppiVar5[piVar4];\n                if (piVar7 != NULL) {\n                    if (*0x515a34 == 0) {\n                        iVar9 = piVar7[1];\n                        piVar7[1] = iVar9 + -1;\n                    }\n                    else {\n                        LOCK();\n                        piVar2 = piVar7 + 1;\n                        iVar9 = *piVar2;\n                        *piVar2 = *piVar2 + -1;\n                    }\n                    if (iVar9 == 1) {\n                        (**(*piVar7 + 4))();\n                    }\n                    ppiVar5 = var_28h[3];\n                }\n                piVar4 = piVar4 + 1;\n            } while (piVar4 <= var_28h[2] && var_28h[2] != piVar4);\n            if (ppiVar5 == NULL) goto code_r0x004af07e;\n        }\n        ppiVar5 = fcn.004c33e0(ppiVar5);\n    }\ncode_r0x004af07e:\n    piVar4 = var_28h[4];\n    if (piVar4 != NULL) {\n        iVar9 = 0;\n        do {\n            ppiVar5 = *(piVar4 + iVar9);\n            if (ppiVar5 != NULL) {\n                ppiVar5 = fcn.004c33e0(ppiVar5);\n                piVar4 = var_28h[4];\n            }\n            iVar9 = iVar9 + 4;\n        } while (iVar9 != 0x18);\n        if (piVar4 != NULL) {\n            ppiVar5 = fcn.004c33e0(piVar4);\n        }\n    }\n    return ppiVar5;\n}\n",
        "token_count": 2258
    },
    "00452670": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t * __cdecl fcn.00452670(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t *in_ECX;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    iVar3 = fcn.0048b900(0, 0, &var_19h);\n    *in_ECX = iVar3;\n    piVar1 = *(*arg_8h + 0x10);\n    iVar8 = *piVar1;\n    if (iVar8 == 0) {\n        fcn.0048bc50(0, *(iVar3 + -0xc), 1, 0x2a);\n        return in_ECX;\n    }\n    if (piVar1[1] != 0) {\n        uVar7 = 0;\n        iVar3 = iVar8;\n        do {\n            uVar7 = uVar7 + 1;\n            iVar2 = piVar1[uVar7];\n            iVar4 = sub.msvcrt.dll_strcmp(iVar3, iVar2);\n            iVar3 = iVar2;\n        } while (uVar7 < 5 && iVar4 == 0);\n        if (iVar4 != 0) {\n            fcn.0048d0f0(0x80);\n            uVar6 = **0x527c4c;\n            uVar5 = sub.msvcrt.dll_strlen(uVar6);\n            fcn.0048c220(uVar6, uVar5);\n            iVar8 = *in_ECX;\n            iVar3 = *(iVar8 + -0xc);\n            uVar7 = iVar3 + 1;\n            if ((*(iVar8 + -8) <= uVar7 && uVar7 != *(iVar8 + -8)) || (0 < *(iVar8 + -4))) {\n                fcn.0048d0f0(uVar7);\n            }\n            *(*in_ECX + *(*in_ECX + -0xc)) = 0x3d;\n            iVar8 = *in_ECX;\n            *(iVar8 + -0xc) = uVar7;\n            *(iVar8 + -4) = 0;\n            *(iVar8 + 1 + iVar3) = 0;\n            uVar6 = **(*arg_8h + 0x10);\n            uVar5 = sub.msvcrt.dll_strlen(uVar6);\n            fcn.0048c220(uVar6, uVar5);\n            iVar8 = 4;\n            do {\n                iVar3 = *in_ECX;\n                iVar2 = *(iVar3 + -0xc);\n                uVar7 = iVar2 + 1;\n                if ((*(iVar3 + -8) <= uVar7 && uVar7 != *(iVar3 + -8)) || (0 < *(iVar3 + -4))) {\n                    fcn.0048d0f0(uVar7);\n                }\n                *(*in_ECX + *(*in_ECX + -0xc)) = 0x3b;\n                iVar3 = *in_ECX;\n                *(iVar3 + -0xc) = uVar7;\n                *(iVar3 + -4) = 0;\n                *(iVar3 + 1 + iVar2) = 0;\n                uVar6 = *(*0x527c4c + iVar8);\n                uVar5 = sub.msvcrt.dll_strlen(uVar6);\n                fcn.0048c220(uVar6, uVar5);\n                iVar3 = *in_ECX;\n                iVar2 = *(iVar3 + -0xc);\n                uVar7 = iVar2 + 1;\n                if ((*(iVar3 + -8) <= uVar7 && uVar7 != *(iVar3 + -8)) || (0 < *(iVar3 + -4))) {\n                    fcn.0048d0f0(uVar7);\n                }\n                *(*in_ECX + *(*in_ECX + -0xc)) = 0x3d;\n                iVar3 = *in_ECX;\n                *(iVar3 + -0xc) = uVar7;\n                *(iVar3 + -4) = 0;\n                *(iVar3 + 1 + iVar2) = 0;\n                uVar6 = *(*(*arg_8h + 0x10) + iVar8);\n                uVar5 = sub.msvcrt.dll_strlen(uVar6);\n                fcn.0048c220(uVar6, uVar5);\n                iVar8 = iVar8 + 4;\n            } while (iVar8 != 0x18);\n            return in_ECX;\n        }\n    }\n    uVar6 = sub.msvcrt.dll_strlen(iVar8);\n    fcn.0048c560(iVar8, uVar6);\n    return in_ECX;\n}\n",
        "token_count": 1108
    },
    "004528f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint * __cdecl fcn.004528f0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_00000008;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint32_t in_stack_ffffffcc;\n    uint32_t uVar4;\n    uint uVar5;\n    uint noname_3;\n    uint noname_4;\n    uint in_stack_ffffffe4;\n    uint in_stack_ffffffe8;\n    uint in_stack_ffffffec;\n    uint var_bp_ch;\n    \n    noname_4 = 0xfffffffe;\n    noname_3 = 0x5285a8;\n    uVar5 = 0x5285b0;\n    puVar2 = fcn.004c3b90();\n    if (puVar2 == NULL) {\n        if (arg_8h == 0x516fa0) {\n            puVar3 = fcn.004c3430(0x68, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x52c530;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            *(puVar3 + 9) = 0;\n            *(puVar3 + 0x19) = 0;\n            puVar2 = fcn.004c3430(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52cc1c;\n            puVar2[2] = puVar3;\n            uVar4 = 0x452aaf;\n            fcn.004bb920(0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b610;\n            puVar2[4] = puVar3;\n            fcn.00494d00(uVar4 & 0xffffff00, in_ECX, puVar3);\n        }\n        else if (arg_8h == 0x516f78) {\n            puVar2 = fcn.004c3430(0x10, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52cab0;\n            uVar5 = fcn.004af100();\n            puVar2[2] = uVar5;\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b530;\n        }\n        else if (arg_8h == 0x516fa8) {\n            puVar2 = fcn.004c3430(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52cc64;\n            puVar2[2] = in_ECX;\n            if (*0x515a34 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b6a0;\n        }\n        else if (arg_8h == 0x516fb8) {\n            puVar2 = fcn.004c3430(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52cd24;\n            puVar2[2] = in_ECX;\n            if (*0x515a34 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b748;\n        }\n        else if (arg_8h == 0x516fc0) {\n            puVar2 = fcn.004c3430(0xc, uVar5);\n            iVar1 = *0x515a34;\n            puVar2[1] = 0;\n            *puVar2 = 0x52cd54;\n            puVar2[2] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b7a8;\n        }\n        else if (arg_8h == 0x516db0) {\n            puVar3 = fcn.004c3430(0x44, uVar5);\n            *(puVar3 + 4) = 0;\n            *puVar3 = 0x52c664;\n            puVar3[1] = 0;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            *(puVar3 + 0x43) = 0;\n            puVar2 = fcn.004c3430(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52befc;\n            puVar2[2] = puVar3;\n            fcn.0048e340(0, 0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b870;\n            puVar2[4] = puVar3;\n            fcn.00495a70(in_stack_ffffffcc & 0xffffff00, in_ECX, puVar3);\n        }\n        else if (arg_8h == 0x516dac) {\n            puVar3 = fcn.004c3430(0x44, uVar5);\n            *puVar3 = 0x52c654;\n            puVar3[1] = 0;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            *(puVar3 + 0x43) = 0;\n            puVar2 = fcn.004c3430(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52bec8;\n            puVar2[2] = puVar3;\n            fcn.0048df60(0, 0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b808;\n            puVar2[4] = puVar3;\n            fcn.00495590(in_stack_ffffffcc & 0xffffff00, in_ECX, puVar3);\n        }\n        else if (arg_8h == 0x516f98) {\n            puVar2 = fcn.004c3430(0x14, uVar5);\n            fcn.004bb6c0(0);\n            iVar1 = *0x515a34;\n            puVar2[4] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b5a0;\n        }\n        else if (arg_8h == 0x516fa4) {\n            puVar3 = fcn.004c3430(0xa8, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x52c540;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            *(puVar3 + 0x29) = 0;\n            puVar2 = fcn.004c3430(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52cc40;\n            puVar2[2] = puVar3;\n            uVar4 = 0x452ed3;\n            fcn.004bbc70(0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b658;\n            puVar2[4] = puVar3;\n            fcn.00495100(uVar4 & 0xffffff00, in_ECX, puVar3, noname_3, noname_4, in_stack_ffffffe4, in_stack_ffffffe8, \n                         in_stack_ffffffec, unaff_EBX, unaff_ESI, unaff_EDI, unaff_EBP, unaff_retaddr, 0x516fa4, \n                         in_stack_00000008, in_stack_0000000c, in_stack_00000010, in_stack_00000014, in_stack_00000018, \n                         in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c, \n                         in_stack_00000030, in_stack_00000034, in_stack_00000038, in_stack_0000003c, in_stack_00000040, \n                         in_stack_00000044, in_stack_00000048);\n        }\n        else if (arg_8h == 0x516f7c) {\n            puVar2 = fcn.004c3430(0x10, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52cacc;\n            uVar5 = fcn.004af100();\n            puVar2[2] = uVar5;\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b568;\n        }\n        else if (arg_8h == 0x516fac) {\n            puVar2 = fcn.004c3430(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52cc8c;\n            puVar2[2] = in_ECX;\n            if (*0x515a34 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b6f4;\n        }\n        else if (arg_8h == 0x516fbc) {\n            puVar2 = fcn.004c3430(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52cd3c;\n            puVar2[2] = in_ECX;\n            if (*0x515a34 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b778;\n        }\n        else if (arg_8h == 0x516fc4) {\n            puVar2 = fcn.004c3430(0xc, uVar5);\n            iVar1 = *0x515a34;\n            puVar2[1] = 0;\n            *puVar2 = 0x52cd6c;\n            puVar2[2] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b7d8;\n        }\n        else if (arg_8h == 0x516db8) {\n            puVar3 = fcn.004c3430(0x54, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x52c684;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            puVar3[0xe] = 0;\n            *(puVar3 + 0x52) = 0;\n            puVar2 = fcn.004c3430(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52bf64;\n            puVar2[2] = puVar3;\n            fcn.0048eb10(0, 0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b940;\n            puVar2[4] = puVar3;\n            fcn.004965d0(in_stack_ffffffcc & 0xffffff00, in_ECX, puVar3);\n        }\n        else if (arg_8h == 0x516db4) {\n            puVar3 = fcn.004c3430(0x54, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x52c674;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            puVar3[0xe] = 0;\n            *(puVar3 + 0x52) = 0;\n            puVar2 = fcn.004c3430(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52bf30;\n            puVar2[2] = puVar3;\n            uVar5 = 0;\n            fcn.0048e720(0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b8d8;\n            puVar2[4] = puVar3;\n            fcn.00495ff0(in_stack_ffffffcc & 0xffffff00, in_ECX, puVar3, uVar5, noname_3, noname_4, in_stack_ffffffe4, \n                         in_stack_ffffffe8, in_stack_ffffffec, unaff_EBX, unaff_ESI, unaff_EDI, unaff_EBP, unaff_retaddr\n                         , 0x516db4, in_stack_00000008, in_stack_0000000c, in_stack_00000010, in_stack_00000014, \n                         in_stack_00000018, in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028, \n                         in_stack_0000002c, in_stack_00000030, in_stack_00000034, in_stack_00000038, in_stack_0000003c, \n                         in_stack_00000040, in_stack_00000044);\n        }\n        else {\n            if (arg_8h != 0x516f9c) {\n                uVar5 = fcn.004be9d0(0x5238d0);\n                fcn.004af220();\n                fcn.004c33f0(arg_8h);\n                fcn.0043b0b0(uVar5);\n                fcn.004af220();\n                fcn.004c33f0(arg_8h);\n                fcn.0043b0b0(uVar5);\n                fcn.004af220();\n                do {\n                    fcn.004c33f0(arg_8h);\n                    fcn.0043b0b0(uVar5);\n                    fcn.004c33f0(arg_8h);\n                    fcn.0043b0b0(uVar5);\n                    fcn.00453c10();\n                    fcn.0048e6f0();\n                } while( true );\n            }\n            puVar2 = fcn.004c3430(0x14, uVar5);\n            fcn.004bb850(0);\n            iVar1 = *0x515a34;\n            puVar2[4] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b5d8;\n        }\n    }\n    else {\n        puVar2 = *puVar2;\n    }\n    return puVar2;\n}\n",
        "token_count": 5149
    },
    "00453280": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint * __cdecl fcn.00453280(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_00000008;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    uint in_stack_00000054;\n    uint in_stack_00000058;\n    uint32_t in_stack_ffffffcc;\n    uint32_t uVar4;\n    uint uVar5;\n    uint noname_3;\n    uint noname_4;\n    uint in_stack_ffffffe4;\n    uint in_stack_ffffffe8;\n    uint in_stack_ffffffec;\n    uint var_bp_ch;\n    \n    noname_4 = 0xfffffffe;\n    noname_3 = 0x5285a8;\n    uVar5 = 0x5285b0;\n    puVar2 = fcn.004c3b90();\n    if (puVar2 == NULL) {\n        if (arg_8h == 0x516f48) {\n            puVar3 = fcn.004c3430(0x68, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x52c530;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            *(puVar3 + 9) = 0;\n            *(puVar3 + 0x19) = 0;\n            puVar2 = fcn.004c3430(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52bd00;\n            puVar2[2] = puVar3;\n            uVar4 = 0x45343f;\n            fcn.004b8ce0(0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b634;\n            puVar2[4] = puVar3;\n            fcn.00494ad0(uVar4 & 0xffffff00, in_ECX, puVar3);\n        }\n        else if (arg_8h == 0x516f38) {\n            puVar2 = fcn.004c3430(0x10, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52bc90;\n            uVar5 = fcn.004af100();\n            puVar2[2] = uVar5;\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b54c;\n        }\n        else if (arg_8h == 0x516f50) {\n            puVar2 = fcn.004c3430(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52bd48;\n            puVar2[2] = in_ECX;\n            if (*0x515a34 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b6c8;\n        }\n        else if (arg_8h == 0x516f58) {\n            puVar2 = fcn.004c3430(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52bda0;\n            puVar2[2] = in_ECX;\n            if (*0x515a34 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b760;\n        }\n        else if (arg_8h == 0x516f60) {\n            puVar2 = fcn.004c3430(0xc, uVar5);\n            iVar1 = *0x515a34;\n            puVar2[1] = 0;\n            *puVar2 = 0x52bdd0;\n            puVar2[2] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b7c0;\n        }\n        else if (arg_8h == 0x516f2c) {\n            puVar3 = fcn.004c3430(0x44, uVar5);\n            *(puVar3 + 4) = 0;\n            *puVar3 = 0x52c664;\n            puVar3[1] = 0;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            *(puVar3 + 0x43) = 0;\n            puVar2 = fcn.004c3430(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52ba14;\n            puVar2[2] = puVar3;\n            fcn.004af980(0, 0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b8a4;\n            puVar2[4] = puVar3;\n            fcn.00495790(in_stack_ffffffcc & 0xffffff00, in_ECX, puVar3);\n        }\n        else if (arg_8h == 0x516f28) {\n            puVar3 = fcn.004c3430(0x44, uVar5);\n            *puVar3 = 0x52c654;\n            puVar3[1] = 0;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            *(puVar3 + 0x43) = 0;\n            puVar2 = fcn.004c3430(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52b9e0;\n            puVar2[2] = puVar3;\n            fcn.004af5a0(0, 0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b83c;\n            puVar2[4] = puVar3;\n            fcn.004952b0(in_stack_ffffffcc & 0xffffff00);\n        }\n        else if (arg_8h == 0x516f40) {\n            puVar2 = fcn.004c3430(0x14, uVar5);\n            fcn.004b8a80(0);\n            iVar1 = *0x515a34;\n            puVar2[4] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b5bc;\n        }\n        else if (arg_8h == 0x516f4c) {\n            puVar3 = fcn.004c3430(0xa8, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x52c540;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            *(puVar3 + 0x29) = 0;\n            puVar2 = fcn.004c3430(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52bd24;\n            puVar2[2] = puVar3;\n            uVar4 = 0x453863;\n            fcn.004b9030(0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b67c;\n            puVar2[4] = puVar3;\n            fcn.00494e70(uVar4 & 0xffffff00, in_ECX, puVar3, noname_3, noname_4, in_stack_ffffffe4, in_stack_ffffffe8, \n                         in_stack_ffffffec, unaff_EBX, unaff_ESI, unaff_EDI, unaff_EBP, unaff_retaddr, 0x516f4c, \n                         in_stack_00000008, in_stack_0000000c, in_stack_00000010, in_stack_00000014, in_stack_00000018, \n                         in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c, \n                         in_stack_00000030, in_stack_00000034, in_stack_00000038, in_stack_0000003c, in_stack_00000040, \n                         in_stack_00000044, in_stack_00000048, in_stack_0000004c, in_stack_00000050);\n        }\n        else if (arg_8h == 0x516f3c) {\n            puVar2 = fcn.004c3430(0x10, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52bcac;\n            uVar5 = fcn.004af100();\n            puVar2[2] = uVar5;\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b584;\n        }\n        else if (arg_8h == 0x516f54) {\n            puVar2 = fcn.004c3430(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52bd74;\n            puVar2[2] = in_ECX;\n            if (*0x515a34 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b71c;\n        }\n        else if (arg_8h == 0x516f5c) {\n            puVar2 = fcn.004c3430(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52bdb8;\n            puVar2[2] = in_ECX;\n            if (*0x515a34 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b790;\n        }\n        else if (arg_8h == 0x516f64) {\n            puVar2 = fcn.004c3430(0xc, uVar5);\n            iVar1 = *0x515a34;\n            puVar2[1] = 0;\n            *puVar2 = 0x52bde8;\n            puVar2[2] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b7f0;\n        }\n        else if (arg_8h == 0x516f34) {\n            puVar3 = fcn.004c3430(0x54, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x52c684;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            puVar3[0xe] = 0;\n            *(puVar3 + 0x52) = 0;\n            puVar2 = fcn.004c3430(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52ba7c;\n            puVar2[2] = puVar3;\n            fcn.004b0150(0, 0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b974;\n            puVar2[4] = puVar3;\n            fcn.00496250(in_stack_ffffffcc & 0xffffff00);\n        }\n        else if (arg_8h == 0x516f30) {\n            puVar3 = fcn.004c3430(0x54, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x52c674;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            puVar3[0xe] = 0;\n            *(puVar3 + 0x52) = 0;\n            puVar2 = fcn.004c3430(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52ba48;\n            puVar2[2] = puVar3;\n            uVar5 = 0;\n            fcn.004afd60(0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b90c;\n            puVar2[4] = puVar3;\n            fcn.00495c70(in_stack_ffffffcc & 0xffffff00, in_ECX, puVar3, uVar5, noname_3, noname_4, in_stack_ffffffe4, \n                         in_stack_ffffffe8, in_stack_ffffffec, unaff_EBX, unaff_ESI, unaff_EDI, unaff_EBP, unaff_retaddr\n                         , 0x516f30, in_stack_00000008, in_stack_0000000c, in_stack_00000010, in_stack_00000014, \n                         in_stack_00000018, in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028, \n                         in_stack_0000002c, in_stack_00000030, in_stack_00000034, in_stack_00000038, in_stack_0000003c, \n                         in_stack_00000040, in_stack_00000044, in_stack_00000048, in_stack_0000004c, in_stack_00000050, \n                         in_stack_00000054, in_stack_00000058);\n        }\n        else {\n            if (arg_8h != 0x516f44) {\n                uVar5 = fcn.004be9d0(\"cannot create shim for unknown locale::facet\");\n                fcn.004af220();\n                fcn.004c33f0(arg_8h);\n                fcn.0043b0b0(uVar5);\n                fcn.004af220();\n                fcn.004c33f0(arg_8h);\n                fcn.0043b0b0(uVar5);\n                fcn.004af220();\n                do {\n                    fcn.004c33f0(arg_8h);\n                    fcn.0043b0b0(uVar5);\n                    fcn.004c33f0(arg_8h);\n                    fcn.0043b0b0(uVar5);\n                    fcn.00453c10();\n                    fcn.004afd30();\n                } while( true );\n            }\n            puVar2 = fcn.004c3430(0x14, uVar5);\n            fcn.004b8c10(0);\n            iVar1 = *0x515a34;\n            puVar2[4] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b5f4;\n        }\n    }\n    else {\n        puVar2 = *puVar2;\n    }\n    return puVar2;\n}\n",
        "token_count": 5232
    },
    "00453c50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint32_t __cdecl fcn.00453c50(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *in_ECX;\n    uint var_4ch;\n    uint *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    if (*in_ECX == *arg_8h) {\n        return 1;\n    }\n    piVar1 = *(*in_ECX + 0x10);\n    iVar4 = *piVar1;\n    if (iVar4 != 0) {\n        piVar2 = *(*arg_8h + 0x10);\n        iVar3 = *piVar2;\n        if ((iVar3 != 0) && (iVar4 = sub.msvcrt.dll_strcmp(iVar4, iVar3),  iVar4 == 0)) {\n            if ((piVar1[1] == 0) && (piVar2[1] == 0)) {\n                return 1;\n            }\n            fcn.004522f0(arg_8h);\n            fcn.004522f0(in_ECX);\n            uVar5 = 0;\n            if ((var_44h == var_2ch) && (uVar5 = 1,  var_44h != 0)) {\n                uVar5 = sub.msvcrt.dll_memcmp(var_48h, var_30h, var_44h);\n                uVar5 = uVar5 & 0xffffff00 | uVar5 == 0;\n            }\n            if (var_48h != &var_40h) {\n                uVar5 = uVar5 & 0xff;\n                fcn.004c33f0(var_48h);\n            }\n            if (var_30h == &var_28h) {\n                return uVar5;\n            }\n            fcn.004c33f0(var_30h);\n            return uVar5 & 0xff;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 511
    },
    "00458390": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00458390(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t *arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    char cVar3;\n    bool bVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    int32_t *piVar11;\n    int32_t *piVar12;\n    uint *puVar13;\n    uint *puVar14;\n    int32_t *piVar15;\n    int32_t *piVar17;\n    uint *puVar18;\n    uint *puVar19;\n    uint *puVar20;\n    int32_t iVar21;\n    uint32_t uVar22;\n    uint32_t uVar23;\n    uint uStack68;\n    int32_t aiStack64 [5];\n    char cStack41;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    int32_t *piVar16;\n    \n    aiStack64[1] = arg_24h + 0x6c;\n    aiStack64[0] = 0x4583a7;\n    var_1ch = fcn.004c0920();\n    aiStack64[0] = 0x4583be;\n    iVar5 = fcn.004386a0();\n    iVar5 = -iVar5;\n    *(&stack0xffffffc4 + iVar5) = &fcn.00458390::arg_10h;\n    *(&stack0xffffffc0 + iVar5) = 0x4583d5;\n    cVar2 = fcn.00450a90();\n    if (cVar2 == '\\0') {\n        *(&stack0xffffffbc + iVar5) = 0x4583fd;\n        cVar2 = fcn.00450b30();\n        if (arg_20h != 0) {\n            iVar21 = 0;\n            var_20h = &stack0xffffffd7 + iVar5 & 0xfffffff0;\n            uVar22 = 0;\n            iVar8 = arg_1ch;\n            piVar11 = &stack0xffffffc0 + iVar5;\n            do {\n                while (cVar3 = **(iVar8 + iVar21 * 4),  cVar3 == cVar2) {\ncode_r0x0045844c:\n                    var_20h[uVar22] = iVar21;\n                    uVar22 = uVar22 + 1;\n                    iVar21 = iVar21 + 1;\n                    piVar15 = piVar11;\n                    if (arg_20h == iVar21) goto code_r0x0045845d;\n                }\n                iVar5 = *var_1ch;\n                *piVar11 = cVar3;\n                pcVar1 = *(iVar5 + 8);\n                piVar10 = piVar11 + -1;\n                piVar11[-1] = 0x458430;\n                arg_1ch = iVar8;\n                cVar3 = (*pcVar1)();\n                piVar11 = piVar10 + -4;\n                piVar15 = piVar10 + -4;\n                iVar8 = arg_1ch;\n                if (cVar2 == cVar3) goto code_r0x0045844c;\n                iVar21 = iVar21 + 1;\n                piVar11 = piVar10 + -4;\n            } while (arg_20h != iVar21);\ncode_r0x0045845d:\n            piVar11 = var_20h;\n            var_1ch = uVar22;\n            var_20h = NULL;\n            while (1 < var_1ch) {\n                uVar23 = 1;\n                *piVar15 = *(arg_1ch + *piVar11 * 4);\n                piVar15[-1] = 0x458488;\n                uVar22 = sub.msvcrt.dll_strlen();\n                do {\n                    *piVar15 = *(arg_1ch + piVar11[uVar23] * 4);\n                    piVar15[-1] = 0x4584a1;\n                    uVar6 = sub.msvcrt.dll_strlen();\n                    if (uVar6 < uVar22) {\n                        uVar22 = uVar6;\n                    }\n                    uVar23 = uVar23 + 1;\n                } while (uVar23 < var_1ch);\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    pcVar1 = *(*arg_8h + 0x28);\n                    piVar16 = piVar15 + -1;\n                    piVar15 = piVar15 + -1;\n                    *piVar16 = 0x4586c5;\n                    (*pcVar1)();\n                }\n                var_20h = var_20h + 1;\n                arg_ch = 0xffffffff;\n                if (uVar22 <= var_20h) goto code_r0x004583dc;\n                cVar2 = '\\x01';\n                if ((arg_8h != NULL) && (cVar2 = '\\0',  arg_8h[3] <= arg_8h[2])) {\n                    pcVar1 = *(*arg_8h + 0x24);\n                    piVar17 = piVar15 + -1;\n                    piVar15 = piVar15 + -1;\n                    *piVar17 = 0x4586cf;\n                    iVar5 = (*pcVar1)();\n                    if (iVar5 == -1) {\n                        arg_8h = NULL;\n                        cVar2 = '\\x01';\n                    }\n                }\n                bVar4 = arg_10h != NULL && arg_14h == -1;\n                var_24h._0_1_ = arg_14h == -1;\n                if ((bVar4) && (var_24h._0_1_ = '\\0',  arg_10h[3] <= arg_10h[2])) {\n                    var_24h = var_24h & 0xffffff00;\n                    pcVar1 = *(*arg_10h + 0x24);\n                    puVar13 = piVar15 + -4;\n                    piVar15 = piVar15 + -4;\n                    *puVar13 = 0x45867a;\n                    iVar5 = (*pcVar1)();\n                    if (iVar5 == -1) {\n                        arg_10h = NULL;\n                        var_24h._0_1_ = bVar4;\n                    }\n                }\n                if (cVar2 == var_24h) goto code_r0x004583dc;\n                uVar23 = 0;\n                uVar22 = var_1ch;\n                do {\n                    while( true ) {\n                        piVar9 = piVar11 + uVar23;\n                        var_1ch = var_1ch & 0xffffff00 | *(*(arg_1ch + *piVar9 * 4) + var_20h);\n                        uVar6 = arg_ch;\n                        if (arg_8h != NULL) {\n                            if (arg_8h[2] < arg_8h[3]) {\n                                uVar6 = *arg_8h[2];\n                            }\n                            else {\n                                var_24h = piVar9;\n                                pcVar1 = *(*arg_8h + 0x24);\n                                puVar14 = piVar15 + -4;\n                                piVar15 = piVar15 + -4;\n                                *puVar14 = 0x45869d;\n                                uVar6 = (*pcVar1)();\n                                piVar9 = var_24h;\n                                if (uVar6 == 0xffffffff) {\n                                    arg_8h = NULL;\n                                    uVar6 = 0xffffffff;\n                                }\n                            }\n                        }\n                        if (var_1ch != uVar6) break;\n                        uVar23 = uVar23 + 1;\n                        if (uVar22 <= uVar23) goto code_r0x00458563;\n                    }\n                    uVar22 = uVar22 - 1;\n                    *piVar9 = piVar11[uVar22];\n                } while (uVar23 < uVar22);\ncode_r0x00458563:\n                var_1ch = uVar22;\n            }\n            if (var_1ch == 0x1) {\n                piVar15[-1] = 0x458581;\n                fcn.004a5d20();\n                arg_ch = 0xffffffff;\n                var_24h = *piVar11;\n                var_1ch = *(arg_1ch + *piVar11 * 4);\n                uVar22 = var_20h + 1;\n                *piVar15 = var_1ch;\n                piVar15[-1] = 0x4585a4;\n                var_20h = sub.msvcrt.dll_strlen();\n                if (uVar22 < var_20h) {\n                    do {\n                        arg_ch = 0xffffffff;\n                        cVar2 = '\\x01';\n                        if ((arg_8h != NULL) && (cVar2 = '\\0',  arg_8h[3] <= arg_8h[2])) {\n                            pcVar1 = *(*arg_8h + 0x24);\n                            piVar12 = piVar15 + -1;\n                            piVar15 = piVar15 + -1;\n                            *piVar12 = 0x45863a;\n                            iVar5 = (*pcVar1)();\n                            if (iVar5 == -1) {\n                                arg_8h = NULL;\n                                cVar2 = '\\x01';\n                            }\n                        }\n                        bVar4 = arg_10h != NULL && arg_14h == -1;\n                        cVar3 = arg_14h == -1;\n                        if ((bVar4) && (cVar3 = '\\0',  arg_10h[3] <= arg_10h[2])) {\n                            cStack41 = bVar4;\n                            pcVar1 = *(*arg_10h + 0x24);\n                            puVar18 = piVar15 + -4;\n                            piVar15 = piVar15 + -4;\n                            *puVar18 = 0x458706;\n                            iVar5 = (*pcVar1)();\n                            if (iVar5 == -1) {\n                                arg_10h = NULL;\n                                cVar3 = cStack41;\n                            }\n                        }\n                        if (cVar2 == cVar3) goto code_r0x004583dc;\n                        cVar2 = *(var_1ch + uVar22);\n                        iVar5 = -1;\n                        if (arg_8h == NULL) {\ncode_r0x004585eb:\n                            if (cVar2 != iVar5) goto code_r0x004583dc;\n                            pcVar7 = arg_8h[2];\n                            if (pcVar7 < arg_8h[3]) goto code_r0x00458602;\n                            pcVar1 = *(*arg_8h + 0x28);\n                            puVar19 = piVar15 + -4;\n                            piVar15 = piVar15 + -4;\n                            *puVar19 = 0x458745;\n                            (*pcVar1)();\n                        }\n                        else {\n                            pcVar7 = arg_8h[2];\n                            if (arg_8h[3] <= pcVar7) {\n                                pcVar1 = *(*arg_8h + 0x24);\n                                puVar20 = piVar15 + -4;\n                                piVar15 = piVar15 + -4;\n                                *puVar20 = 0x458762;\n                                iVar5 = (*pcVar1)();\n                                if (iVar5 == -1) {\n                                    arg_8h = NULL;\n                                }\n                                goto code_r0x004585eb;\n                            }\n                            if (cVar2 != *pcVar7) goto code_r0x004583dc;\ncode_r0x00458602:\n                            arg_8h[2] = pcVar7 + 1;\n                        }\n                        uVar22 = uVar22 + 1;\n                    } while (uVar22 != var_20h);\n                }\n                else if (uVar22 != var_20h) goto code_r0x004583dc;\n                arg_ch = 0xffffffff;\n                *arg_18h = var_24h;\n                goto code_r0x004583e2;\n            }\n        }\n    }\ncode_r0x004583dc:\n    *arg_28h = *arg_28h | 4;\ncode_r0x004583e2:\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 2885
    },
    "00459ae0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00459ae0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, uint32_t *arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    code *pcVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    uint *puVar11;\n    uint8_t uVar12;\n    uint8_t uVar13;\n    uint *puVar14;\n    int32_t *piVar15;\n    uchar *puVar16;\n    uint *puVar17;\n    uint *puVar18;\n    uint *puVar19;\n    uint *puVar20;\n    uint *puVar21;\n    uchar *puVar22;\n    uint *puVar23;\n    uint *puVar24;\n    bool bVar25;\n    uint uStack96;\n    int32_t iStack92;\n    uchar auStack73 [5];\n    uint *var_40h;\n    int32_t *var_3ch;\n    uint32_t var_38h;\n    int32_t *var_34h;\n    uint *var_2eh;\n    uint32_t *var_28h;\n    uint32_t *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint var_ch;\n    \n    var_34h = arg_8h;\n    iStack92 = arg_24h + 0x6c;\n    var_38h = arg_ch;\n    var_3ch = arg_10h;\n    uStack96 = 0x459b0c;\n    var_24h = fcn.004c0920();\n    uStack96 = 0x459b24;\n    iVar4 = fcn.004386a0();\n    iVar4 = -iVar4;\n    var_20h._0_1_ = arg_ch == 0xffffffff;\n    var_28h = &stack0xffffffb7 + iVar4 & 0xfffffff0;\n    bVar2 = var_34h != NULL && var_20h;\n    var_1ch = var_1ch & 0xffffff00 | bVar2;\n    puVar16 = &stack0xffffffa4 + iVar4;\n    if ((bVar2) && (var_20h._0_1_ = 0,  puVar16 = &stack0xffffffa4 + iVar4,  var_34h[3] <= var_34h[2])) {\n        var_20h = var_20h & 0xffffff00;\n        pcVar1 = *(*var_34h + 0x24);\n        puVar16 = &stack0xffffffa0 + iVar4;\n        *(&stack0xffffffa0 + iVar4) = 0x459e4e;\n        iVar4 = (*pcVar1)();\n        if (iVar4 == -1) {\n            var_34h = NULL;\n            var_1ch = var_1ch & 0xffffff00;\n            var_20h._0_1_ = var_1ch;\n        }\n    }\n    bVar25 = arg_14h == -1;\n    var_2eh._0_1_ = bVar25;\n    bVar2 = arg_10h != NULL && bVar25;\n    if (bVar2) {\n        if (arg_10h[2] < arg_10h[3]) {\n            bVar25 = false;\n        }\n        else {\n            var_20h = var_20h & 0xffffff00 | var_20h;\n            pcVar1 = *(*arg_10h + 0x24);\n            puVar20 = puVar16 + -4;\n            puVar16 = puVar16 + -4;\n            *puVar20 = 0x459f28;\n            iVar4 = (*pcVar1)();\n            var_3ch = NULL;\n            if (iVar4 != -1) {\n                var_3ch = arg_10h;\n            }\n            bVar25 = iVar4 == -1 && bVar2;\n        }\n    }\n    piVar8 = var_34h;\n    if (var_20h == bVar25) {\n        var_40h = NULL;\n        puVar24 = NULL;\n        puVar23 = NULL;\n    }\n    else {\n        if (var_1ch == '\\0') {\n            var_1ch = var_1ch & 0xffffff00 | arg_ch & 0xff;\n        }\n        else if (var_34h[2] < var_34h[3]) {\n            var_1ch = var_1ch & 0xffffff00 | *var_34h[2];\n        }\n        else {\n            pcVar1 = *(*var_34h + 0x24);\n            puVar21 = puVar16 + -4;\n            puVar16 = puVar16 + -4;\n            *puVar21 = 0x459f56;\n            uVar9 = (*pcVar1)();\n            uVar5 = 0xffffffff;\n            if (uVar9 != 0xffffffff) {\n                uVar5 = uVar9;\n            }\n            var_34h = NULL;\n            if (uVar9 != 0xffffffff) {\n                var_34h = piVar8;\n            }\n            var_1ch = var_1ch & 0xffffff00 | uVar5 & 0xff;\n        }\n        puVar24 = arg_20h * 2;\n        if (puVar24 == NULL) {\n            puVar23 = NULL;\n            var_40h = NULL;\n        }\n        else {\n            var_20h = puVar24;\n            puVar24 = NULL;\n            puVar23 = NULL;\n            piVar8 = puVar16;\n            do {\n                while( true ) {\n                    cVar3 = **(arg_1ch + puVar24 * 4);\n                    if (cVar3 != var_1ch) break;\ncode_r0x00459d88:\n                    var_28h[puVar23] = puVar24;\n                    puVar23 = puVar23 + 1;\n                    puVar24 = puVar24 + 1;\n                    puVar16 = piVar8;\n                    if (puVar24 == var_20h) goto code_r0x00459d99;\n                }\n                uVar5 = *var_24h;\n                *piVar8 = cVar3;\n                pcVar1 = *(uVar5 + 8);\n                piVar15 = piVar8 + -1;\n                piVar8[-1] = 0x459d6d;\n                cVar3 = (*pcVar1)();\n                piVar8 = piVar15 + -4;\n                puVar16 = piVar15 + -4;\n                if (cVar3 == var_1ch) goto code_r0x00459d88;\n                puVar24 = puVar24 + 1;\n                piVar8 = piVar15 + -4;\n            } while (puVar24 != var_20h);\ncode_r0x00459d99:\n            puVar24 = NULL;\n            var_40h = NULL;\n            if (puVar23 != NULL) {\n                if (var_34h[2] < var_34h[3]) {\n                    var_34h[2] = var_34h[2] + 1;\n                    puVar22 = puVar16;\n                }\n                else {\n                    pcVar1 = *(*var_34h + 0x28);\n                    puVar22 = puVar16 + -4;\n                    *(puVar16 + -4) = 0x459f79;\n                    (*pcVar1)();\n                }\n                *(puVar22 + -4) = 0x459dd1;\n                iVar4 = fcn.004386a0();\n                puVar10 = var_28h;\n                puVar24 = NULL;\n                iVar4 = -iVar4;\n                puVar16 = puVar22 + iVar4;\n                var_1ch = puVar23;\n                var_40h = puVar22 + iVar4 + 0x13 & 0xfffffff0;\n                var_20h = puVar22 + iVar4 + 0x13 & 0xfffffff0;\n                do {\n                    *(puVar22 + iVar4) = *(arg_1ch + puVar10[puVar24] * 4);\n                    *(puVar22 + iVar4 + -4) = 0x459dfe;\n                    uVar6 = sub.msvcrt.dll_strlen();\n                    var_20h[puVar24] = uVar6;\n                    puVar24 = puVar24 + 1;\n                } while (var_1ch != puVar24);\n                var_38h = 0xffffffff;\n                puVar24 = 0x1;\n                puVar23 = var_1ch;\n            }\n        }\n    }\n    do {\n        var_20h._0_1_ = var_38h == 0xffffffff;\n        bVar2 = var_34h != NULL && var_20h;\n        uVar5 = var_1ch & 0xffffff00;\n        var_1ch = uVar5 | bVar2;\n        if (bVar2) {\n            if (var_34h[2] < var_34h[3]) {\n                var_1ch = uVar5;\n            }\n            else {\n                var_20h = var_20h & 0xffffff00 | var_20h;\n                pcVar1 = *(*var_34h + 0x24);\n                puVar17 = puVar16 + -4;\n                puVar16 = puVar16 + -4;\n                *puVar17 = 0x459e81;\n                iVar4 = (*pcVar1)();\n                piVar8 = NULL;\n                if (iVar4 != -1) {\n                    var_1ch._0_1_ = 0;\n                    piVar8 = var_34h;\n                }\n                var_34h = piVar8;\n                var_1ch = var_1ch & 0xffffff00 | var_1ch;\n            }\n        }\n        else {\n            var_1ch = uVar5 | var_20h;\n        }\n        uVar12 = var_3ch != NULL & var_2eh;\n        uVar13 = var_2eh;\n        if (uVar12 == 0) {\ncode_r0x00459bb2:\n            if (uVar13 == var_1ch) break;\n        }\n        else {\n            if (var_3ch[3] <= var_3ch[2]) {\n                var_20h = var_20h & 0xffffff00 | var_20h;\n                pcVar1 = *(*var_3ch + 0x24);\n                puVar18 = puVar16 + -4;\n                puVar16 = puVar16 + -4;\n                *puVar18 = 0x459eaf;\n                iVar4 = (*pcVar1)();\n                piVar8 = NULL;\n                if (iVar4 != -1) {\n                    uVar12 = 0;\n                    piVar8 = var_3ch;\n                }\n                var_3ch = piVar8;\n                uVar13 = uVar12;\n                goto code_r0x00459bb2;\n            }\n            if (var_1ch == '\\0') break;\n        }\n        if ((var_34h == NULL) || (var_20h == 0)) {\n            var_2eh._1_1_ = var_38h;\n        }\n        else if (var_34h[2] < var_34h[3]) {\n            var_2eh._1_1_ = *var_34h[2];\n        }\n        else {\n            pcVar1 = *(*var_34h + 0x24);\n            puVar19 = puVar16 + -4;\n            puVar16 = puVar16 + -4;\n            *puVar19 = 0x459ed9;\n            iVar7 = (*pcVar1)();\n            iVar4 = -1;\n            if (iVar7 != -1) {\n                iVar4 = iVar7;\n            }\n            piVar8 = NULL;\n            if (iVar7 != -1) {\n                piVar8 = var_34h;\n            }\n            var_2eh._1_1_ = iVar4;\n            var_34h = piVar8;\n        }\n        if (puVar23 == NULL) goto code_r0x00459c9b;\n        puVar11 = NULL;\n        var_1ch = puVar24;\n        stack0xffffffd0 = NULL;\n        var_20h = var_40h;\n        do {\n            while( true ) {\n                puVar10 = var_40h + puVar11;\n                if (puVar24 <= *puVar10 && *puVar10 != puVar24) break;\n                stack0xffffffd0 = stack0xffffffd0 + 1;\ncode_r0x00459bf7:\n                puVar11 = puVar11 + 1;\n                if (puVar23 <= puVar11) goto code_r0x00459c42;\n            }\n            var_24h = var_28h + puVar11;\n            if (*(*(arg_1ch + *var_24h * 4) + puVar24) == var_2eh._1_1_) goto code_r0x00459bf7;\n            puVar23 = puVar23 + -1;\n            *var_24h = var_28h[puVar23];\n            *puVar10 = var_40h[puVar23];\n        } while (puVar11 < puVar23);\ncode_r0x00459c42:\n        if (stack0xffffffd0 == puVar23) break;\n        if (var_34h[2] < var_34h[3]) {\n            var_34h[2] = var_34h[2] + 1;\n        }\n        else {\n            pcVar1 = *(*var_34h + 0x28);\n            puVar14 = puVar16 + -4;\n            puVar16 = puVar16 + -4;\n            *puVar14 = 0x459cf8;\n            (*pcVar1)();\n        }\n        puVar24 = puVar24 + 1;\n        var_38h = 0xffffffff;\n    } while( true );\n    if (puVar23 == 0x1) {\n        var_40h = *var_40h;\n    }\n    else {\n        if (puVar23 != 0x2) goto code_r0x00459c9b;\n        if (*var_40h == puVar24) goto code_r0x00459d0e;\n        var_40h = var_40h[1];\n    }\n    if (var_40h == puVar24) {\ncode_r0x00459d0e:\n        uVar5 = *var_28h;\n        if (arg_20h <= uVar5) {\n            uVar5 = uVar5 - arg_20h;\n        }\n        *arg_18h = uVar5;\n        return CONCAT44(var_38h, var_34h);\n    }\ncode_r0x00459c9b:\n    *arg_28h = *arg_28h | 4;\n    return CONCAT44(var_38h, var_34h);\n}\n",
        "token_count": 3484
    },
    "0045b4e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.0045b4e0(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, uint32_t *arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    bool bVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    int16_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t *puVar11;\n    uint32_t *puVar12;\n    int32_t *piVar13;\n    uint *puVar14;\n    int32_t *piVar15;\n    uint *puVar17;\n    uint *puVar18;\n    int32_t *piVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint uStack68;\n    int32_t aiStack64 [5];\n    uchar uStack41;\n    uint32_t var_24h;\n    uint32_t *var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    uint *puVar16;\n    \n    aiStack64[1] = arg_24h + 0x6c;\n    aiStack64[0] = 0x45b4f7;\n    var_1ch = fcn.004c0980();\n    aiStack64[0] = 0x45b50f;\n    iVar7 = fcn.004386a0();\n    iVar7 = -iVar7;\n    *(&stack0xffffffc4 + iVar7) = &fcn.0045b4e0::arg_10h;\n    *(&stack0xffffffc0 + iVar7) = 0x45b526;\n    cVar2 = fcn.00450bd0();\n    uVar5 = arg_ch;\n    if (cVar2 == '\\0') {\n        *(&stack0xffffffbc + iVar7) = 0x45b54f;\n        uVar4 = fcn.00450cc0();\n        if (arg_20h != 0) {\n            var_20h = &stack0xffffffd7 + iVar7 & 0xfffffff0;\n            uVar20 = 0;\n            uVar21 = 0;\n            iVar9 = arg_1ch;\n            puVar12 = &stack0xffffffc0 + iVar7;\n            do {\n                while (uVar5 = **(iVar9 + uVar20 * 4),  uVar5 == uVar4) {\ncode_r0x0045b592:\n                    var_20h[uVar21] = uVar20;\n                    uVar21 = uVar21 + 1;\n                    uVar20 = uVar20 + 1;\n                    piVar15 = puVar12;\n                    if (arg_20h == uVar20) goto code_r0x0045b5a3;\n                }\n                iVar7 = *var_1ch;\n                *puVar12 = uVar5;\n                pcVar1 = *(iVar7 + 0x18);\n                puVar11 = puVar12 + -1;\n                puVar12[-1] = 0x45b574;\n                arg_1ch = iVar9;\n                uVar5 = (*pcVar1)();\n                puVar12 = puVar11 + -4;\n                piVar15 = puVar11 + -4;\n                iVar9 = arg_1ch;\n                if (uVar4 == uVar5) goto code_r0x0045b592;\n                uVar20 = uVar20 + 1;\n                puVar12 = puVar11 + -4;\n            } while (arg_20h != uVar20);\ncode_r0x0045b5a3:\n            puVar12 = var_20h;\n            var_20h = NULL;\n            if (1 < uVar21) {\ncode_r0x0045b5c0:\n                var_24h = *puVar12;\n                *piVar15 = *(arg_1ch + *puVar12 * 4);\n                piVar15[-1] = 0x45b5d5;\n                uVar20 = sub.msvcrt.dll_wcslen();\n                var_1ch = uVar21;\n                uVar10 = 1;\n                do {\n                    *piVar15 = *(arg_1ch + puVar12[uVar10] * 4);\n                    piVar15[-1] = 0x45b5f2;\n                    uVar8 = sub.msvcrt.dll_wcslen();\n                    uVar21 = var_1ch;\n                    if (uVar8 < uVar20) {\n                        uVar20 = uVar8;\n                    }\n                    uVar10 = uVar10 + 1;\n                } while (uVar10 < var_1ch);\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    pcVar1 = *(*arg_8h + 0x28);\n                    puVar16 = piVar15 + -1;\n                    piVar15 = piVar15 + -1;\n                    *puVar16 = 0x45b7f5;\n                    (*pcVar1)();\n                }\n                var_20h = var_20h + 1;\n                arg_ch._0_2_ = 0xffff;\n                uVar5 = 0xffff;\n                if (var_20h < uVar20) {\n                    cVar2 = '\\x01';\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar6 = *arg_8h[2];\n                        }\n                        else {\n                            pcVar1 = *(*arg_8h + 0x24);\n                            puVar18 = piVar15 + -4;\n                            piVar15 = piVar15 + -4;\n                            *puVar18 = 0x45b817;\n                            iVar6 = (*pcVar1)();\n                        }\n                        cVar2 = '\\0';\n                        if (iVar6 == -1) {\n                            arg_8h = NULL;\n                            cVar2 = '\\x01';\n                        }\n                    }\n                    var_1ch._0_1_ = arg_14h == -1;\n                    bVar3 = arg_10h != NULL && var_1ch;\n                    var_1ch = var_1ch & 0xffffff00 | bVar3;\n                    if (bVar3) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar6 = *arg_10h[2];\n                        }\n                        else {\n                            pcVar1 = *(*arg_10h + 0x24);\n                            puVar17 = piVar15 + -4;\n                            piVar15 = piVar15 + -4;\n                            *puVar17 = 0x45b810;\n                            iVar6 = (*pcVar1)();\n                        }\n                        var_1ch._0_1_ = '\\0';\n                        if (iVar6 == -1) {\n                            arg_10h = NULL;\n                        }\n                    }\n                    uVar5 = 0xffff;\n                    if (var_1ch != cVar2) {\n                        uVar10 = 0;\n                        var_1ch = var_20h * 2;\n                        uVar20 = var_24h;\n                        do {\n                            uVar5 = *(*(arg_1ch + uVar20 * 4) + var_1ch);\n                            uVar4 = arg_ch;\n                            if (arg_8h != NULL) {\n                                if (arg_8h[2] < arg_8h[3]) {\n                                    uVar4 = *arg_8h[2];\n                                }\n                                else {\n                                    var_24h = uVar5;\n                                    pcVar1 = *(*arg_8h + 0x24);\n                                    puVar14 = piVar15 + -4;\n                                    piVar15 = piVar15 + -4;\n                                    *puVar14 = 0x45b7e8;\n                                    uVar4 = (*pcVar1)();\n                                    uVar5 = var_24h;\n                                }\n                                if (uVar4 == 0xffff) {\n                                    arg_8h = NULL;\n                                }\n                            }\n                            if (uVar5 == uVar4) {\n                                uVar10 = uVar10 + 1;\n                                if (uVar21 <= uVar10) goto code_r0x0045b6ce;\n                            }\n                            else {\n                                uVar21 = uVar21 - 1;\n                                puVar12[uVar10] = puVar12[uVar21];\n                                if (uVar21 <= uVar10) goto code_r0x0045b6ce;\n                            }\n                            uVar20 = puVar12[uVar10];\n                        } while( true );\n                    }\n                }\n                goto code_r0x0045b52d;\n            }\ncode_r0x0045b6d7:\n            uVar5 = arg_ch;\n            if (uVar21 == 1) {\n                piVar15[-1] = 0x45b6e8;\n                fcn.004a6690();\n                uVar21 = var_20h;\n                iVar7 = *(arg_1ch + *puVar12 * 4);\n                var_1ch = *puVar12;\n                *piVar15 = iVar7;\n                piVar15[-1] = 0x45b70a;\n                uVar20 = sub.msvcrt.dll_wcslen();\n                while (uVar21 = uVar21 + 1,  uVar21 < uVar20) {\n                    arg_ch._0_2_ = 0xffff;\n                    uVar5 = 0xffff;\n                    *piVar15 = &fcn.0045b4e0::arg_10h;\n                    piVar15[-1] = 0x45b755;\n                    cVar2 = fcn.00450bd0();\n                    piVar19 = piVar15 + -1;\n                    if (cVar2 != '\\0') goto code_r0x0045b52d;\n                    uVar4 = *(iVar7 + uVar21 * 2);\n                    piVar13 = piVar15 + -1;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            arg_ch._0_2_ = *arg_8h[2];\n                        }\n                        else {\n                            var_20h = uVar4;\n                            pcVar1 = *(*arg_8h + 0x24);\n                            piVar19 = piVar15 + -2;\n                            piVar15[-2] = 0x45b843;\n                            arg_ch._0_2_ = (*pcVar1)();\n                            uVar4 = var_20h;\n                        }\n                        piVar13 = piVar19;\n                        if (arg_ch == 0xffff) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    uVar5 = 0xffff;\n                    if (uVar4 != arg_ch) goto code_r0x0045b52d;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        arg_8h[2] = arg_8h[2] + 2;\n                        piVar15 = piVar13;\n                    }\n                    else {\n                        pcVar1 = *(*arg_8h + 0x28);\n                        piVar15 = piVar13 + -1;\n                        piVar13[-1] = 0x45b821;\n                        (*pcVar1)();\n                    }\n                }\n                uVar5 = 0xffff;\n                if (uVar21 == uVar20) {\n                    *arg_18h = var_1ch;\n                    goto code_r0x0045b533;\n                }\n            }\n        }\n    }\ncode_r0x0045b52d:\n    *arg_28h = *arg_28h | 4;\ncode_r0x0045b533:\n    return CONCAT24(uVar5, arg_8h);\ncode_r0x0045b6ce:\n    if (uVar21 < 2) goto code_r0x0045b6d7;\n    goto code_r0x0045b5c0;\n}\n",
        "token_count": 2783
    },
    "0045d000": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0045d000(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, uint32_t *arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    uint16_t uVar5;\n    int16_t iVar6;\n    uint16_t uVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    uint32_t *puVar10;\n    bool bVar11;\n    uint8_t uVar12;\n    uint32_t uVar13;\n    uint *puVar14;\n    uint32_t *puVar15;\n    uint *puVar16;\n    uint *puVar17;\n    uint *puVar18;\n    uchar *puVar19;\n    uchar *puVar20;\n    uint *puVar22;\n    uchar *puVar23;\n    uint32_t *puVar24;\n    uint32_t *puVar25;\n    bool bVar26;\n    uint uStack96;\n    int32_t iStack92;\n    uchar uStack73;\n    uint var_44h;\n    int32_t *var_40h;\n    int32_t var_39h;\n    int32_t *var_34h;\n    uint var_30h;\n    uint32_t *var_2ch;\n    uint32_t *var_28h;\n    uint32_t *var_24h;\n    uint32_t *var_20h;\n    uint32_t *var_1ch;\n    uint var_ch;\n    uint *puVar21;\n    \n    var_34h = arg_8h;\n    iStack92 = arg_24h + 0x6c;\n    var_44h = arg_ch;\n    uVar7 = arg_ch;\n    var_40h = arg_10h;\n    uStack96 = 0x45d030;\n    var_30h._0_2_ = uVar7;\n    var_1ch = fcn.004c0980();\n    uStack96 = 0x45d048;\n    iVar8 = fcn.004386a0();\n    iVar8 = -iVar8;\n    puVar19 = &stack0xffffffa4 + iVar8;\n    var_24h = &stack0xffffffb7 + iVar8 & 0xfffffff0;\n    bVar11 = var_34h != NULL && uVar7 == 0xffff;\n    puVar20 = &stack0xffffffa4 + iVar8;\n    var_20h._0_1_ = uVar7 == 0xffff;\n    bVar4 = bVar11;\n    if (bVar11) {\n        if (var_34h[2] < var_34h[3]) {\n            iVar6 = *var_34h[2];\n        }\n        else {\n            pcVar2 = *(*var_34h + 0x24);\n            puVar19 = &stack0xffffffa0 + iVar8;\n            *(&stack0xffffffa0 + iVar8) = 0x45d47d;\n            iVar6 = (*pcVar2)();\n        }\n        puVar20 = puVar19;\n        var_20h._0_1_ = false;\n        if (iVar6 == -1) {\n            var_34h = NULL;\n            bVar4 = false;\n            var_20h._0_1_ = bVar11;\n        }\n    }\n    bVar26 = arg_14h == -1;\n    var_39h._0_1_ = bVar26;\n    bVar11 = arg_10h != NULL && bVar26;\n    if (bVar11) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar6 = *arg_10h[2];\n        }\n        else {\n            var_20h = var_20h & 0xffffff00 | var_20h;\n            pcVar2 = *(*arg_10h + 0x24);\n            puVar21 = puVar20 + -4;\n            puVar20 = puVar20 + -4;\n            *puVar21 = 0x45d48c;\n            iVar6 = (*pcVar2)();\n        }\n        var_40h = NULL;\n        if (iVar6 != -1) {\n            var_40h = arg_10h;\n        }\n        bVar26 = iVar6 == -1 && bVar11;\n    }\n    if (bVar26 == var_20h) {\n        var_20h = NULL;\n        puVar24 = NULL;\n        puVar25 = NULL;\n    }\n    else {\n        uVar7 = var_30h;\n        if (bVar4) {\n            if (var_34h[2] < var_34h[3]) {\n                uVar7 = *var_34h[2];\n            }\n            else {\n                pcVar2 = *(*var_34h + 0x24);\n                puVar22 = puVar20 + -4;\n                puVar20 = puVar20 + -4;\n                *puVar22 = 0x45d49d;\n                uVar7 = (*pcVar2)();\n            }\n            piVar9 = NULL;\n            if (uVar7 != 0xffff) {\n                piVar9 = var_34h;\n            }\n            var_34h = piVar9;\n        }\n        var_20h = arg_20h * 2;\n        if (arg_20h * 2 == 0) {\n            puVar25 = NULL;\n            puVar24 = NULL;\n        }\n        else {\n            uVar13 = 0;\n            puVar25 = NULL;\n            puVar24 = puVar20;\n            do {\n                while (uVar5 = **(arg_1ch + uVar13 * 4),  uVar5 == uVar7) {\ncode_r0x0045d313:\n                    var_24h[puVar25] = uVar13;\n                    puVar25 = puVar25 + 1;\n                    uVar13 = uVar13 + 1;\n                    puVar20 = puVar24;\n                    if (uVar13 == var_20h) goto code_r0x0045d324;\n                }\n                uVar3 = *var_1ch;\n                *puVar24 = uVar5;\n                pcVar2 = *(uVar3 + 0x18);\n                puVar15 = puVar24 + -1;\n                puVar24[-1] = 0x45d2f5;\n                uVar5 = (*pcVar2)();\n                puVar24 = puVar15 + -4;\n                puVar20 = puVar15 + -4;\n                if (uVar5 == uVar7) goto code_r0x0045d313;\n                uVar13 = uVar13 + 1;\n                puVar24 = puVar15 + -4;\n            } while (uVar13 != var_20h);\ncode_r0x0045d324:\n            var_20h = NULL;\n            puVar24 = NULL;\n            if (puVar25 != NULL) {\n                if (var_34h[2] < var_34h[3]) {\n                    var_34h[2] = var_34h[2] + 2;\n                    puVar23 = puVar20;\n                }\n                else {\n                    pcVar2 = *(*var_34h + 0x28);\n                    puVar23 = puVar20 + -4;\n                    *(puVar20 + -4) = 0x45d4a9;\n                    (*pcVar2)();\n                }\n                *(puVar23 + -4) = 0x45d35c;\n                iVar8 = fcn.004386a0();\n                puVar24 = var_24h;\n                iVar8 = -iVar8;\n                puVar20 = puVar23 + iVar8;\n                var_1ch = puVar25;\n                var_20h = puVar23 + iVar8 + 0x13 & 0xfffffff0;\n                var_28h = puVar23 + iVar8 + 0x13 & 0xfffffff0;\n                puVar25 = NULL;\n                do {\n                    *(puVar23 + iVar8) = *(arg_1ch + puVar24[puVar25] * 4);\n                    *(puVar23 + iVar8 + -4) = 0x45d38e;\n                    uVar13 = sub.msvcrt.dll_wcslen();\n                    var_20h[puVar25] = uVar13;\n                    puVar25 = puVar25 + 1;\n                } while (var_1ch != puVar25);\n                var_20h = 0x1;\n                var_30h._0_2_ = 0xffff;\n                puVar24 = var_28h;\n                puVar25 = var_1ch;\n            }\n        }\n    }\n    do {\n        var_28h._0_1_ = var_30h == 0xffff;\n        var_1ch = var_1ch & 0xffffff00 | var_28h;\n        bVar11 = var_34h != NULL && var_28h;\n        if (bVar11) {\n            if (var_34h[2] < var_34h[3]) {\n                iVar6 = *var_34h[2];\n                var_28h._0_1_ = bVar11;\n            }\n            else {\n                var_28h = var_28h & 0xffffff00 | bVar11;\n                pcVar2 = *(*var_34h + 0x24);\n                puVar16 = puVar20 + -4;\n                puVar20 = puVar20 + -4;\n                *puVar16 = 0x45d41b;\n                iVar6 = (*pcVar2)();\n            }\n            piVar9 = NULL;\n            if (iVar6 != -1) {\n                var_28h._0_1_ = 0;\n                piVar9 = var_34h;\n            }\n            var_34h = piVar9;\n        }\n        uVar12 = var_40h != NULL & var_39h;\n        if (uVar12 == 0) {\n            if (var_28h == var_39h) break;\n        }\n        else {\n            if (var_40h[2] < var_40h[3]) {\n                iVar6 = *var_40h[2];\n            }\n            else {\n                var_28h = var_28h & 0xffffff00 | var_28h;\n                pcVar2 = *(*var_40h + 0x24);\n                puVar17 = puVar20 + -4;\n                puVar20 = puVar20 + -4;\n                *puVar17 = 0x45d42f;\n                iVar6 = (*pcVar2)();\n            }\n            piVar9 = NULL;\n            if (iVar6 != -1) {\n                uVar12 = 0;\n                piVar9 = var_40h;\n            }\n            var_40h = piVar9;\n            if (var_28h == uVar12) break;\n        }\n        if ((var_34h == NULL) || (var_1ch == '\\0')) {\n            var_30h._2_2_ = var_30h;\n        }\n        else {\n            if (var_34h[2] < var_34h[3]) {\n                var_30h._2_2_ = *var_34h[2];\n            }\n            else {\n                pcVar2 = *(*var_34h + 0x24);\n                puVar18 = puVar20 + -4;\n                puVar20 = puVar20 + -4;\n                *puVar18 = 0x45d440;\n                var_30h._2_2_ = (*pcVar2)();\n            }\n            piVar9 = NULL;\n            if (var_30h._2_2_ != 0xffff) {\n                piVar9 = var_34h;\n            }\n            var_34h = piVar9;\n        }\n        if (puVar25 == NULL) goto code_r0x0045d200;\n        puVar10 = NULL;\n        var_1ch = puVar24;\n        puVar24 = var_1ch;\n        var_2ch = NULL;\n        stack0xffffffc4 = var_20h * 2;\n        do {\n            while (puVar1 = puVar24 + puVar10,  *puVar1 < var_20h || *puVar1 == var_20h) {\n                var_2ch = var_2ch + 1;\ncode_r0x0045d11a:\n                puVar10 = puVar10 + 1;\n                if (puVar25 <= puVar10) goto code_r0x0045d169;\n            }\n            var_28h = var_24h + puVar10;\n            if (*(*(arg_1ch + *var_28h * 4) + var_20h * 2) == var_30h._2_2_) goto code_r0x0045d11a;\n            puVar25 = puVar25 + -1;\n            *var_28h = var_24h[puVar25];\n            *puVar1 = puVar24[puVar25];\n        } while (puVar10 < puVar25);\ncode_r0x0045d169:\n        if (var_2ch == puVar25) break;\n        if (var_34h[2] < var_34h[3]) {\n            var_34h[2] = var_34h[2] + 2;\n        }\n        else {\n            pcVar2 = *(*var_34h + 0x28);\n            puVar14 = puVar20 + -4;\n            puVar20 = puVar20 + -4;\n            *puVar14 = 0x45d288;\n            (*pcVar2)();\n        }\n        var_20h = var_20h + 1;\n        var_30h._0_2_ = 0xffff;\n    } while( true );\n    if (puVar25 == 0x1) {\n        uVar13 = *puVar24;\njoined_r0x0045d2a0:\n        if (uVar13 == var_20h) {\ncode_r0x0045d2a6:\n            uVar13 = *var_24h;\n            if (arg_20h <= uVar13) {\n                uVar13 = uVar13 - arg_20h;\n            }\n            *arg_18h = uVar13;\n            goto code_r0x0045d206;\n        }\n    }\n    else if (puVar25 == 0x2) {\n        if (*puVar24 != var_20h) {\n            uVar13 = puVar24[1];\n            goto joined_r0x0045d2a0;\n        }\n        goto code_r0x0045d2a6;\n    }\ncode_r0x0045d200:\n    *arg_28h = *arg_28h | 4;\ncode_r0x0045d206:\n    var_44h = CONCAT22(var_44h._2_2_, var_30h);\n    return CONCAT44(var_44h, var_34h);\n}\n",
        "token_count": 3440
    },
    "0045e020": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffb0 : 0x0045e0e0\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x0045e9d7)\n// WARNING: Removing unreachable block (ram,0x0045e18e)\n// WARNING: Removing unreachable block (ram,0x0045e198)\n// WARNING: Removing unreachable block (ram,0x0045e1a2)\n// WARNING: Removing unreachable block (ram,0x0045e8b0)\n// WARNING: Removing unreachable block (ram,0x0045ec58)\n// WARNING: Removing unreachable block (ram,0x0045ec66)\n// WARNING: Removing unreachable block (ram,0x0045e1ab)\n// WARNING: Removing unreachable block (ram,0x0045e1b7)\n// WARNING: Removing unreachable block (ram,0x0045e960)\n// WARNING: Removing unreachable block (ram,0x0045e8bc)\n// WARNING: Removing unreachable block (ram,0x0045e8cb)\n// WARNING: Removing unreachable block (ram,0x0045e1c6)\n// WARNING: Removing unreachable block (ram,0x0045e1cc)\n// WARNING: Removing unreachable block (ram,0x0045e130)\n// WARNING: Removing unreachable block (ram,0x0045e13a)\n// WARNING: Removing unreachable block (ram,0x0045e790)\n// WARNING: Removing unreachable block (ram,0x0045e13d)\n// WARNING: Removing unreachable block (ram,0x0045e150)\n// WARNING: Removing unreachable block (ram,0x0045e880)\n// WARNING: Removing unreachable block (ram,0x0045e88e)\n// WARNING: Removing unreachable block (ram,0x0045e89c)\n// WARNING: Removing unreachable block (ram,0x0045e16a)\n// WARNING: Removing unreachable block (ram,0x0045e178)\n// WARNING: Removing unreachable block (ram,0x0045e180)\n// WARNING: Removing unreachable block (ram,0x0045e761)\n// WARNING: Removing unreachable block (ram,0x0045e76d)\n// WARNING: Removing unreachable block (ram,0x0045e783)\n// WARNING: Removing unreachable block (ram,0x0045e182)\n// WARNING: Removing unreachable block (ram,0x0045e970)\n// WARNING: Removing unreachable block (ram,0x0045e97c)\n// WARNING: Removing unreachable block (ram,0x0045e98c)\n// WARNING: Removing unreachable block (ram,0x0045e994)\n// WARNING: Removing unreachable block (ram,0x0045ea0e)\n// WARNING: Removing unreachable block (ram,0x0045e661)\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.0045e020(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    ulong uVar7;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    int32_t var_70h;\n    uint var_6bh;\n    uint s;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    arg_8h_00 = arg_18h + 0x6c;\n    fcn.004c0920(arg_8h_00);\n    iVar3 = fcn.004522b0();\n    piVar1 = *(*(arg_18h + 0x6c) + 0xc) + iVar3 * 4;\n    iVar6 = *piVar1;\n    if (iVar6 == 0) {\n        puVar5 = fcn.004c3430(0x44);\n        *puVar5 = 0x52c654;\n        puVar5[1] = 0;\n        puVar5[2] = 0;\n        puVar5[3] = 0;\n        *(puVar5 + 4) = 0;\n        *(puVar5 + 0x12) = 0;\n        puVar5[5] = 0;\n        puVar5[6] = 0;\n        puVar5[7] = 0;\n        puVar5[8] = 0;\n        puVar5[9] = 0;\n        puVar5[10] = 0;\n        puVar5[0xb] = 0;\n        puVar5[0xc] = 0;\n        puVar5[0xd] = 0;\n        *(puVar5 + 0x43) = 0;\n        fcn.004aa1f0(arg_8h_00);\n        fcn.004ad8f0(puVar5, iVar3);\n        iVar6 = *piVar1;\n    }\n    var_48h = &var_40h;\n    var_44h = 0;\n    var_40h._0_1_ = 0;\n    if (*(iVar6 + 0x10) != '\\0') {\n        fcn.004b2380(0x20);\n    }\n    var_30h = &var_28h;\n    var_2ch = 0;\n    var_28h._0_1_ = 0;\n    fcn.004b2380(0x20);\n    var_70h = 1;\n    var_4ch = *(iVar6 + 0x34);\n    puVar5 = &var_4ch;\n    while( true ) {\n        if (var_4ch < 5) {\n    // WARNING: Could not recover jumptable at 0x0045e108. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x523ecc\n            uVar7 = (**(*puVar5 * 4 + 0x523ecc))();\n            return uVar7;\n        }\n        if (3 < var_70h) break;\n        puVar5 = &var_4ch + var_70h;\n        var_4ch._0_1_ = *puVar5;\n        var_70h = var_70h + 1;\n    }\n    if ((var_2ch < 2) || (uVar4 = fcn.004552a0(0x30, 0),  uVar4 == 0)) goto code_r0x0045e986;\n    if (uVar4 == 0xffffffff) {\n        uVar4 = var_2ch - 1;\n        if (uVar4 == 0xffffffff) {\n            *var_30h = 0;\n            goto code_r0x0045e986;\n        }\n        if (uVar4 == 0) goto code_r0x0045e986;\n    }\n    if (var_2ch < uVar4) {\n        uVar4 = var_2ch;\n    }\n    fcn.004b2480(0, uVar4);\ncode_r0x0045e986:\n    if (var_44h != 0) {\n        fcn.004b2860(0);\n        cVar2 = fcn.004be6e0(*(iVar6 + 8), *(iVar6 + 0xc), &var_48h);\n        if (cVar2 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.004b0f40(&var_30h);\n    cVar2 = fcn.00450a90(&arg_10h);\n    if (cVar2 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    if (var_48h != &var_40h) {\n        fcn.004c33f0(var_48h);\n    }\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 1960
    },
    "0045ed30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffb0 : 0x0045edf0\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x0045f6e7)\n// WARNING: Removing unreachable block (ram,0x0045ee9e)\n// WARNING: Removing unreachable block (ram,0x0045eea8)\n// WARNING: Removing unreachable block (ram,0x0045eeb2)\n// WARNING: Removing unreachable block (ram,0x0045f5c0)\n// WARNING: Removing unreachable block (ram,0x0045f968)\n// WARNING: Removing unreachable block (ram,0x0045f976)\n// WARNING: Removing unreachable block (ram,0x0045eebb)\n// WARNING: Removing unreachable block (ram,0x0045eec7)\n// WARNING: Removing unreachable block (ram,0x0045f670)\n// WARNING: Removing unreachable block (ram,0x0045f5cc)\n// WARNING: Removing unreachable block (ram,0x0045f5db)\n// WARNING: Removing unreachable block (ram,0x0045eed6)\n// WARNING: Removing unreachable block (ram,0x0045eedc)\n// WARNING: Removing unreachable block (ram,0x0045ee40)\n// WARNING: Removing unreachable block (ram,0x0045ee4a)\n// WARNING: Removing unreachable block (ram,0x0045f4a0)\n// WARNING: Removing unreachable block (ram,0x0045ee4d)\n// WARNING: Removing unreachable block (ram,0x0045ee60)\n// WARNING: Removing unreachable block (ram,0x0045f590)\n// WARNING: Removing unreachable block (ram,0x0045f59e)\n// WARNING: Removing unreachable block (ram,0x0045f5ac)\n// WARNING: Removing unreachable block (ram,0x0045ee7a)\n// WARNING: Removing unreachable block (ram,0x0045ee88)\n// WARNING: Removing unreachable block (ram,0x0045ee90)\n// WARNING: Removing unreachable block (ram,0x0045f471)\n// WARNING: Removing unreachable block (ram,0x0045f47d)\n// WARNING: Removing unreachable block (ram,0x0045f493)\n// WARNING: Removing unreachable block (ram,0x0045ee92)\n// WARNING: Removing unreachable block (ram,0x0045f680)\n// WARNING: Removing unreachable block (ram,0x0045f68c)\n// WARNING: Removing unreachable block (ram,0x0045f69c)\n// WARNING: Removing unreachable block (ram,0x0045f6a4)\n// WARNING: Removing unreachable block (ram,0x0045f71e)\n// WARNING: Removing unreachable block (ram,0x0045f371)\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.0045ed30(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    ulong uVar7;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    int32_t var_70h;\n    uint var_6bh;\n    uint s;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    arg_8h_00 = arg_18h + 0x6c;\n    fcn.004c0920(arg_8h_00);\n    iVar3 = fcn.004522b0();\n    piVar1 = *(*(arg_18h + 0x6c) + 0xc) + iVar3 * 4;\n    iVar6 = *piVar1;\n    if (iVar6 == 0) {\n        puVar5 = fcn.004c3430(0x44);\n        *puVar5 = 0x52c664;\n        puVar5[1] = 0;\n        puVar5[2] = 0;\n        puVar5[3] = 0;\n        *(puVar5 + 4) = 0;\n        *(puVar5 + 0x12) = 0;\n        puVar5[5] = 0;\n        puVar5[6] = 0;\n        puVar5[7] = 0;\n        puVar5[8] = 0;\n        puVar5[9] = 0;\n        puVar5[10] = 0;\n        puVar5[0xb] = 0;\n        puVar5[0xc] = 0;\n        puVar5[0xd] = 0;\n        *(puVar5 + 0x43) = 0;\n        fcn.004aa8d0(arg_8h_00);\n        fcn.004ad8f0(puVar5, iVar3);\n        iVar6 = *piVar1;\n    }\n    var_48h = &var_40h;\n    var_44h = 0;\n    var_40h._0_1_ = 0;\n    if (*(iVar6 + 0x10) != '\\0') {\n        fcn.004b2380(0x20);\n    }\n    var_30h = &var_28h;\n    var_2ch = 0;\n    var_28h._0_1_ = 0;\n    fcn.004b2380(0x20);\n    var_70h = 1;\n    var_4ch = *(iVar6 + 0x34);\n    puVar5 = &var_4ch;\n    while( true ) {\n        if (var_4ch < 5) {\n    // WARNING: Could not recover jumptable at 0x0045ee18. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x523eb8\n            uVar7 = (**(*puVar5 * 4 + 0x523eb8))();\n            return uVar7;\n        }\n        if (3 < var_70h) break;\n        puVar5 = &var_4ch + var_70h;\n        var_4ch._0_1_ = *puVar5;\n        var_70h = var_70h + 1;\n    }\n    if ((var_2ch < 2) || (uVar4 = fcn.004552a0(0x30, 0),  uVar4 == 0)) goto code_r0x0045f696;\n    if (uVar4 == 0xffffffff) {\n        uVar4 = var_2ch - 1;\n        if (uVar4 == 0xffffffff) {\n            *var_30h = 0;\n            goto code_r0x0045f696;\n        }\n        if (uVar4 == 0) goto code_r0x0045f696;\n    }\n    if (var_2ch < uVar4) {\n        uVar4 = var_2ch;\n    }\n    fcn.004b2480(0, uVar4);\ncode_r0x0045f696:\n    if (var_44h != 0) {\n        fcn.004b2860(0);\n        cVar2 = fcn.004be6e0(*(iVar6 + 8), *(iVar6 + 0xc), &var_48h);\n        if (cVar2 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.004b0f40(&var_30h);\n    cVar2 = fcn.00450a90(&arg_10h);\n    if (cVar2 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    if (var_48h != &var_40h) {\n        fcn.004c33f0(var_48h);\n    }\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 1958
    },
    "0045fc90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffb0 : 0x0045fd5d\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x004605c0)\n// WARNING: Removing unreachable block (ram,0x0045fdfb)\n// WARNING: Removing unreachable block (ram,0x0045fe06)\n// WARNING: Removing unreachable block (ram,0x0046061f)\n// WARNING: Removing unreachable block (ram,0x004608ea)\n// WARNING: Removing unreachable block (ram,0x0046062b)\n// WARNING: Removing unreachable block (ram,0x0046062e)\n// WARNING: Removing unreachable block (ram,0x00460638)\n// WARNING: Removing unreachable block (ram,0x0045fe10)\n// WARNING: Removing unreachable block (ram,0x0045fe1d)\n// WARNING: Removing unreachable block (ram,0x004606d6)\n// WARNING: Removing unreachable block (ram,0x0045fe2c)\n// WARNING: Removing unreachable block (ram,0x0045fe32)\n// WARNING: Removing unreachable block (ram,0x0045fda8)\n// WARNING: Removing unreachable block (ram,0x0045fdb5)\n// WARNING: Removing unreachable block (ram,0x0046045f)\n// WARNING: Removing unreachable block (ram,0x0045fdbb)\n// WARNING: Removing unreachable block (ram,0x0045fe43)\n// WARNING: Removing unreachable block (ram,0x0045fe59)\n// WARNING: Removing unreachable block (ram,0x004608e0)\n// WARNING: Removing unreachable block (ram,0x0045fe65)\n// WARNING: Removing unreachable block (ram,0x0045fe68)\n// WARNING: Removing unreachable block (ram,0x0045fe74)\n// WARNING: Removing unreachable block (ram,0x0045fdd0)\n// WARNING: Removing unreachable block (ram,0x00460530)\n// WARNING: Removing unreachable block (ram,0x004608f4)\n// WARNING: Removing unreachable block (ram,0x0046053c)\n// WARNING: Removing unreachable block (ram,0x0046053f)\n// WARNING: Removing unreachable block (ram,0x0046054b)\n// WARNING: Removing unreachable block (ram,0x0045fdea)\n// WARNING: Removing unreachable block (ram,0x0045fdf2)\n// WARNING: Removing unreachable block (ram,0x0046055c)\n// WARNING: Removing unreachable block (ram,0x00460565)\n// WARNING: Removing unreachable block (ram,0x00460575)\n// WARNING: Removing unreachable block (ram,0x0046057d)\n// WARNING: Removing unreachable block (ram,0x004605fa)\n// WARNING: Removing unreachable block (ram,0x00460283)\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.0045fc90(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    int32_t arg_8h_00;\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    ulong uVar6;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    int32_t var_74h;\n    uint var_6fh;\n    uint var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    arg_8h_00 = arg_18h + 0x6c;\n    fcn.004c0980(arg_8h_00);\n    iVar3 = fcn.004522b0();\n    piVar1 = *(*(arg_18h + 0x6c) + 0xc) + iVar3 * 4;\n    var_64h = *piVar1;\n    if (var_64h == 0) {\n        puVar5 = fcn.004c3430(0x54);\n        puVar5[1] = 0;\n        *puVar5 = 0x52c674;\n        puVar5[2] = 0;\n        puVar5[3] = 0;\n        *(puVar5 + 4) = 0;\n        *(puVar5 + 0x12) = 0;\n        puVar5[6] = 0;\n        puVar5[7] = 0;\n        puVar5[8] = 0;\n        puVar5[9] = 0;\n        puVar5[10] = 0;\n        puVar5[0xb] = 0;\n        puVar5[0xc] = 0;\n        puVar5[0xd] = 0;\n        puVar5[0xe] = 0;\n        *(puVar5 + 0x52) = 0;\n        fcn.004aafb0(arg_8h_00);\n        fcn.004ad8f0(puVar5, iVar3);\n        var_64h = *piVar1;\n    }\n    var_48h = &var_40h;\n    var_44h = 0;\n    var_40h._0_1_ = 0;\n    if (*(var_64h + 0x10) != '\\0') {\n        fcn.004b2380(0x20);\n    }\n    var_30h = &var_28h;\n    var_2ch = 0;\n    var_28h._0_1_ = 0;\n    fcn.004b2380(0x20);\n    var_74h = 1;\n    var_4ch = *(var_64h + 0x38);\n    puVar5 = &var_4ch;\n    while( true ) {\n        if (var_4ch < 5) {\n    // WARNING: Could not recover jumptable at 0x0045fd81. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x524188\n            uVar6 = (**(*puVar5 * 4 + 0x524188))();\n            return uVar6;\n        }\n        if (3 < var_74h) break;\n        puVar5 = &var_4ch + var_74h;\n        var_4ch._0_1_ = *puVar5;\n        var_74h = var_74h + 1;\n    }\n    if ((var_2ch < 2) || (uVar4 = fcn.004552a0(0x30, 0),  uVar4 == 0)) goto code_r0x0046056f;\n    if (uVar4 == 0xffffffff) {\n        uVar4 = var_2ch - 1;\n        if (uVar4 == 0xffffffff) {\n            *var_30h = 0;\n            goto code_r0x0046056f;\n        }\n        if (uVar4 == 0) goto code_r0x0046056f;\n    }\n    if (var_2ch < uVar4) {\n        uVar4 = var_2ch;\n    }\n    fcn.004b2480(0, uVar4);\ncode_r0x0046056f:\n    if (var_44h != 0) {\n        fcn.004b2860(0);\n        cVar2 = fcn.004be6e0(*(var_64h + 8), *(var_64h + 0xc), &var_48h);\n        if (cVar2 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.004b0f40(&var_30h);\n    cVar2 = fcn.00450bd0(&arg_10h);\n    if (cVar2 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    if (var_48h != &var_40h) {\n        fcn.004c33f0(var_48h);\n    }\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 1976
    },
    "004609d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffb0 : 0x00460a9d\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00461300)\n// WARNING: Removing unreachable block (ram,0x00460b3b)\n// WARNING: Removing unreachable block (ram,0x00460b46)\n// WARNING: Removing unreachable block (ram,0x0046135f)\n// WARNING: Removing unreachable block (ram,0x0046162a)\n// WARNING: Removing unreachable block (ram,0x0046136b)\n// WARNING: Removing unreachable block (ram,0x0046136e)\n// WARNING: Removing unreachable block (ram,0x00461378)\n// WARNING: Removing unreachable block (ram,0x00460b50)\n// WARNING: Removing unreachable block (ram,0x00460b5d)\n// WARNING: Removing unreachable block (ram,0x00461416)\n// WARNING: Removing unreachable block (ram,0x00460b6c)\n// WARNING: Removing unreachable block (ram,0x00460b72)\n// WARNING: Removing unreachable block (ram,0x00460ae8)\n// WARNING: Removing unreachable block (ram,0x00460af5)\n// WARNING: Removing unreachable block (ram,0x0046119f)\n// WARNING: Removing unreachable block (ram,0x00460afb)\n// WARNING: Removing unreachable block (ram,0x00460b83)\n// WARNING: Removing unreachable block (ram,0x00460b99)\n// WARNING: Removing unreachable block (ram,0x00461620)\n// WARNING: Removing unreachable block (ram,0x00460ba5)\n// WARNING: Removing unreachable block (ram,0x00460ba8)\n// WARNING: Removing unreachable block (ram,0x00460bb4)\n// WARNING: Removing unreachable block (ram,0x00460b10)\n// WARNING: Removing unreachable block (ram,0x00461270)\n// WARNING: Removing unreachable block (ram,0x00461634)\n// WARNING: Removing unreachable block (ram,0x0046127c)\n// WARNING: Removing unreachable block (ram,0x0046127f)\n// WARNING: Removing unreachable block (ram,0x0046128b)\n// WARNING: Removing unreachable block (ram,0x00460b2a)\n// WARNING: Removing unreachable block (ram,0x00460b32)\n// WARNING: Removing unreachable block (ram,0x0046129c)\n// WARNING: Removing unreachable block (ram,0x004612a5)\n// WARNING: Removing unreachable block (ram,0x004612b5)\n// WARNING: Removing unreachable block (ram,0x004612bd)\n// WARNING: Removing unreachable block (ram,0x0046133a)\n// WARNING: Removing unreachable block (ram,0x00460fc3)\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.004609d0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    int32_t arg_8h_00;\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    ulong uVar6;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    int32_t var_74h;\n    uint var_6fh;\n    uint var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    arg_8h_00 = arg_18h + 0x6c;\n    fcn.004c0980(arg_8h_00);\n    iVar3 = fcn.004522b0();\n    piVar1 = *(*(arg_18h + 0x6c) + 0xc) + iVar3 * 4;\n    var_64h = *piVar1;\n    if (var_64h == 0) {\n        puVar5 = fcn.004c3430(0x54);\n        puVar5[1] = 0;\n        *puVar5 = 0x52c684;\n        puVar5[2] = 0;\n        puVar5[3] = 0;\n        *(puVar5 + 4) = 0;\n        *(puVar5 + 0x12) = 0;\n        puVar5[6] = 0;\n        puVar5[7] = 0;\n        puVar5[8] = 0;\n        puVar5[9] = 0;\n        puVar5[10] = 0;\n        puVar5[0xb] = 0;\n        puVar5[0xc] = 0;\n        puVar5[0xd] = 0;\n        puVar5[0xe] = 0;\n        *(puVar5 + 0x52) = 0;\n        fcn.004ab7d0(arg_8h_00);\n        fcn.004ad8f0(puVar5, iVar3);\n        var_64h = *piVar1;\n    }\n    var_48h = &var_40h;\n    var_44h = 0;\n    var_40h._0_1_ = 0;\n    if (*(var_64h + 0x10) != '\\0') {\n        fcn.004b2380(0x20);\n    }\n    var_30h = &var_28h;\n    var_2ch = 0;\n    var_28h._0_1_ = 0;\n    fcn.004b2380(0x20);\n    var_74h = 1;\n    var_4ch = *(var_64h + 0x38);\n    puVar5 = &var_4ch;\n    while( true ) {\n        if (var_4ch < 5) {\n    // WARNING: Could not recover jumptable at 0x00460ac1. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x524174\n            uVar6 = (**(*puVar5 * 4 + 0x524174))();\n            return uVar6;\n        }\n        if (3 < var_74h) break;\n        puVar5 = &var_4ch + var_74h;\n        var_4ch._0_1_ = *puVar5;\n        var_74h = var_74h + 1;\n    }\n    if ((var_2ch < 2) || (uVar4 = fcn.004552a0(0x30, 0),  uVar4 == 0)) goto code_r0x004612af;\n    if (uVar4 == 0xffffffff) {\n        uVar4 = var_2ch - 1;\n        if (uVar4 == 0xffffffff) {\n            *var_30h = 0;\n            goto code_r0x004612af;\n        }\n        if (uVar4 == 0) goto code_r0x004612af;\n    }\n    if (var_2ch < uVar4) {\n        uVar4 = var_2ch;\n    }\n    fcn.004b2480(0, uVar4);\ncode_r0x004612af:\n    if (var_44h != 0) {\n        fcn.004b2860(0);\n        cVar2 = fcn.004be6e0(*(var_64h + 8), *(var_64h + 0xc), &var_48h);\n        if (cVar2 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.004b0f40(&var_30h);\n    cVar2 = fcn.00450bd0(&arg_10h);\n    if (cVar2 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    if (var_48h != &var_40h) {\n        fcn.004c33f0(var_48h);\n    }\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 1972
    },
    "004619d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl fcn.004619d0(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    unkbyte10 in_stack_00000018;\n    uint uStack132;\n    uint *puStack128;\n    uint32_t auStack124 [4];\n    unkbyte10 aStack108 [2];\n    uint *var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint *var_30h;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_48h = arg_10h;\n    var_4ch = arg_18h;\n    auStack124[0] = arg_14h + 0x6c;\n    puStack128 = 0x4619f9;\n    fcn.004af3a0();\n    puStack128 = &fcn.004619d0::var_34h;\n    uStack132 = 0x461a07;\n    piVar3 = fcn.004c0920();\n    uStack132 = 0x461a13;\n    iVar4 = fcn.004386a0();\n    iVar4 = -iVar4;\n    piVar7 = &stack0xffffff80 + iVar4;\n    uVar6 = &fcn.004619d0::var_50h + iVar4 + 3 & 0xfffffff0;\n    var_40h = uVar6;\n    *(&stack0xffffff7c + iVar4) = 0x461a24;\n    var_30h = fcn.004af100();\n    *(&stack0xffffff90 + iVar4) = 0;\n    *(&stack0xffffff8c + iVar4) = 0x523db4;\n    *(&stack0xffffff88 + iVar4) = 0x40;\n    *(&stack0xffffff94 + iVar4) = in_stack_00000018;\n    *(&stack0xffffff84 + iVar4) = uVar6;\n    *(&stack0xffffff80 + iVar4) = &fcn.004619d0::var_30h;\n    *(&stack0xffffff7c + iVar4) = 0x461a55;\n    iVar5 = fcn.004bde30();\n    if (0x3f < iVar5) {\n        var_50h = iVar5 + 1;\n        *(&stack0xffffff7c + iVar4) = 0x461a70;\n        iVar5 = fcn.004386a0();\n        iVar5 = -iVar5;\n        piVar7 = &stack0xffffff80 + iVar5 + iVar4;\n        uVar6 = &fcn.004619d0::var_50h + iVar5 + iVar4 + 3 & 0xfffffff0;\n        var_40h = uVar6;\n        *(&stack0xffffff7c + iVar5 + iVar4) = 0x461a81;\n        var_30h = fcn.004af100();\n        iVar2 = var_50h;\n        *(&stack0xffffff90 + iVar5 + iVar4) = 0;\n        *(&stack0xffffff8c + iVar5 + iVar4) = 0x523db4;\n        *(&stack0xffffff94 + iVar5 + iVar4) = in_stack_00000018;\n        *(&stack0xffffff88 + iVar5 + iVar4) = iVar2;\n        *(&stack0xffffff84 + iVar5 + iVar4) = uVar6;\n        *(&stack0xffffff80 + iVar5 + iVar4) = &fcn.004619d0::var_30h;\n        *(&stack0xffffff7c + iVar5 + iVar4) = 0x461aae;\n        iVar5 = fcn.004bde30();\n    }\n    piVar7[1] = 0;\n    *piVar7 = iVar5;\n    var_30h = &fcn.004619d0::var_28h;\n    piVar7[-1] = 0x461ac8;\n    fcn.004b08e0();\n    piVar9 = piVar7 + -2;\n    var_50h = var_30h;\n    if (*(piVar3 + 7) != '\\x01') {\n        if (*(piVar3 + 7) == '\\0') {\n            piVar7[-3] = 0x461b87;\n            fcn.00451a70();\n            pcVar1 = *(*piVar3 + 0x1c);\n        }\n        else {\n            pcVar1 = *(*piVar3 + 0x1c);\n        }\n        if (pcVar1 != 0x451cf0) {\n            *piVar7 = var_50h;\n            iVar5 = iVar5 + var_40h;\n            piVar7[-2] = var_40h;\n            piVar7[-1] = iVar5;\n            piVar8 = piVar7 + -3;\n            piVar7[-3] = 0x461bae;\n            (*pcVar1)();\n            piVar9 = piVar8 + -0xc;\n            goto code_r0x00461b07;\n        }\n    }\n    uVar6 = var_40h;\n    *piVar7 = iVar5;\n    piVar7[-1] = uVar6;\n    piVar7[-2] = var_50h;\n    piVar7[-3] = 0x461b07;\n    sub.msvcrt.dll_memcpy();\ncode_r0x00461b07:\n    piVar9[4] = &fcn.004619d0::var_30h;\n    piVar9[3] = var_4ch;\n    piVar9[1] = arg_ch;\n    piVar9[2] = arg_14h;\n    *piVar9 = arg_8h;\n    if (var_48h == '\\0') {\n        piVar9[-1] = 0x461b79;\n        _var_40h = fcn.00461be0(*piVar9, piVar9[1], piVar9[2], piVar9[3], piVar9[4]);\n    }\n    else {\n        piVar9[-1] = 0x461b35;\n        _var_40h = fcn.00462360(*piVar9, piVar9[1], piVar9[2], piVar9[3], piVar9[4]);\n    }\n    if (var_30h != &fcn.004619d0::var_28h) {\n        piVar9[-5] = var_30h;\n        var_40h = _var_40h;\n        var_3ch = _var_40h >> 0x20;\n        piVar9[-6] = 0x461b50;\n        fcn.004c33f0();\n    }\n    var_40h = _var_40h;\n    var_3ch = _var_40h >> 0x20;\n    piVar9[-6] = 0x461b64;\n    fcn.004af4c0();\n    return _var_40h;\n}\n",
        "token_count": 1710
    },
    "00461be0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.00461be0(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, uint8_t **arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t **ppiVar2;\n    uchar uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uchar *puVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    uint8_t *puVar11;\n    bool bVar12;\n    int32_t *piVar13;\n    uint8_t *puVar14;\n    uint *puVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    char *var_7ch;\n    uint var_78h;\n    uint32_t var_74h;\n    uint32_t var_70h;\n    uint var_6ch;\n    uint8_t var_65h;\n    uint32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_4ch;\n    uint *var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    var_64h = arg_ch;\n    var_65h = arg_ch;\n    iVar4 = fcn.004c0920(arg_10h + 0x6c);\n    iVar5 = fcn.004522b0();\n    ppiVar2 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    piVar13 = *ppiVar2;\n    if (piVar13 == NULL) {\n        puVar15 = fcn.004c3430(0x44);\n        *puVar15 = 0x52c654;\n        *(puVar15 + 4) = 0;\n        puVar15[1] = 0;\n        puVar15[2] = 0;\n        puVar15[3] = 0;\n        *(puVar15 + 0x12) = 0;\n        puVar15[5] = 0;\n        puVar15[6] = 0;\n        puVar15[7] = 0;\n        puVar15[8] = 0;\n        puVar15[9] = 0;\n        puVar15[10] = 0;\n        puVar15[0xb] = 0;\n        puVar15[0xc] = 0;\n        puVar15[0xd] = 0;\n        *(puVar15 + 0x43) = 0;\n        fcn.004aa1f0(arg_10h + 0x6c);\n        fcn.004ad8f0(puVar15, iVar5);\n        piVar13 = *ppiVar2;\n    }\n    puVar14 = *arg_18h;\n    if (*puVar14 == *(piVar13 + 0xe)) {\n        var_4ch = piVar13[0xd];\n        if (arg_18h[1] == NULL) goto code_r0x00461c96;\n        var_7ch = piVar13[9];\n        puVar14 = puVar14 + 1;\n        var_74h = piVar13[10];\n    }\n    else {\n        var_4ch = piVar13[0xc];\n        var_7ch = piVar13[7];\n        var_74h = piVar13[8];\n    }\n    puVar11 = arg_18h[1] + puVar14;\n    if ((puVar11 <= puVar14) || (puVar6 = puVar14,  (*(*(iVar4 + 0x18) + *puVar14 * 2) & 8) == 0))\n    goto code_r0x00461c96;\n    do {\n        puVar6 = puVar6 + 1;\n        if (puVar11 == puVar6) {\n            uVar16 = puVar11 - puVar14;\n            goto joined_r0x00461cc6;\n        }\n    } while ((*(*(iVar4 + 0x18) + *puVar6 * 2) & 8) != 0);\n    uVar16 = puVar6 - puVar14;\njoined_r0x00461cc6:\n    if (uVar16 == 0) goto code_r0x00461c96;\n    var_48h = &var_40h;\n    var_44h = 0;\n    var_40h = var_40h & 0xffffff00;\n    fcn.004b2380(uVar16 * 2);\n    iVar4 = piVar13[0xb];\n    var_70h = uVar16 - iVar4;\n    if (var_70h < 1) {\ncode_r0x00461d81:\n        uVar17 = var_44h;\n        if (iVar4 < 1) {\ncode_r0x00461d8f:\n            uVar17 = var_44h + var_74h;\n            uVar16 = *(arg_10h + 0xc) & 0xb0;\n            if ((*(arg_10h + 0xc) & 0x200) != 0) {\n                uVar17 = uVar17 + piVar13[6];\n            }\n            var_30h = &var_28h;\n            var_2ch = 0;\n            var_28h = var_28h & 0xffffff00;\n            fcn.004b2380(uVar17 * 2);\n            puVar15 = &var_4ch;\n            var_70h = *(arg_10h + 8);\n            bVar12 = uVar16 == 0x10 && uVar17 < var_70h;\n            do {\n                uVar1 = var_2ch;\n                if (*puVar15 < 5) {\n    // switch table (5 cases) at 0x523da0\n                    switch(*puVar15) {\n                    case 0:\n                        if (bVar12) {\n                            fcn.004b0da0(var_2ch, 0, var_70h - uVar17, arg_14h);\n                        }\n                        break;\n                    case 1:\n                        if (bVar12) {\n                            fcn.004b0da0(var_2ch, 0, var_70h - uVar17, arg_14h);\n                        }\n                        else {\n                            uVar8 = var_2ch + 1;\n                            uVar9 = 0xf;\n                            if (var_30h != &var_28h) {\n                                uVar9 = var_28h;\n                            }\n                            if (uVar9 < uVar8) {\n                                fcn.004b26d0(var_2ch, 0, 0, 1);\n                            }\n                            *(var_30h + uVar1) = arg_14h;\n                            *(var_30h + uVar1 + 1) = 0;\n                            var_2ch = uVar8;\n                        }\n                        break;\n                    case 2:\n                        if ((*(arg_10h + 0xd) & 2) != 0) {\n                            if (0x7fffffff - var_2ch < piVar13[6]) goto code_r0x004622dc;\n                            fcn.004b2500(piVar13[5], piVar13[6]);\n                        }\n                        break;\n                    case 3:\n                        if (var_74h != 0) {\n                            fcn.004b2860(*var_7ch);\n                        }\n                        break;\n                    case 4:\n                        fcn.004b2500(var_48h, var_44h);\n                    }\n                }\n                puVar15 = puVar15 + 1;\n            } while (&var_48h != puVar15);\n            if (var_74h < 2) {\n                if (var_2ch < var_70h) goto code_r0x00461fc1;\ncode_r0x00461f5c:\n                var_70h = var_2ch;\n            }\n            else {\n                piVar13 = 0x7fffffff - var_2ch;\n                if (piVar13 < var_74h - 1) goto code_r0x004622b4;\n                fcn.004b2500(var_7ch + 1, var_74h - 1);\n                if (var_70h <= var_2ch) goto code_r0x00461f5c;\ncode_r0x00461fc1:\n                if (uVar16 == 0x20) {\n                    fcn.004b0da0(var_2ch, 0, var_70h - var_2ch, arg_14h);\n                }\n                else {\n                    fcn.004b0da0(0, 0, var_70h - var_2ch, arg_14h);\n                }\n            }\n            if (var_65h == 0) {\n                uVar16 = (**(*arg_8h + 0x30))(var_30h, var_70h);\n                var_65h = var_70h != uVar16;\n            }\n            var_64h = arg_ch & 0xffffff00;\n            if (var_30h != &var_28h) {\n                fcn.004c33f0(var_30h);\n            }\n            if (var_48h != &var_40h) {\n                fcn.004c33f0(var_48h);\n            }\ncode_r0x00461c96:\n            *(arg_10h + 8) = 0;\n            var_64h = var_64h & 0xffffff00 | var_65h;\n            return CONCAT44(var_64h, arg_8h);\n        }\n        uVar3 = *(piVar13 + 0x11);\n        uVar1 = var_44h + 1;\n        uVar8 = 0xf;\n        if (var_48h != &var_40h) {\n            uVar8 = var_40h;\n        }\n        if (uVar8 < uVar1) {\n            fcn.004b26d0(var_44h, 0, 0, 1);\n        }\n        *(var_48h + uVar17) = uVar3;\n        *(var_48h + uVar1) = 0;\n        var_44h = uVar1;\n        if (var_70h < 0) {\n            fcn.004b0da0(uVar1, 0, -var_70h, *(piVar13 + 0x39));\n            if (0x7fffffff - var_44h < uVar16) goto code_r0x004622e8;\n            fcn.004b2500(puVar14, uVar16);\n            goto code_r0x00461d8f;\n        }\n        if (piVar13[0xb] <= 0x7fffffff - uVar1) {\n            fcn.004b2500(puVar14 + var_70h, piVar13[0xb]);\n            goto code_r0x00461d8f;\n        }\n        fcn.004bead0(0x523d20);\ncode_r0x004622b4:\n        fcn.004bead0(0x523d20);\n    }\n    else {\n        if (iVar4 < 0) {\n            var_70h = uVar16;\n        }\n        if (piVar13[3] == 0) {\n            fcn.004b0590(0, var_44h, puVar14, var_70h);\n            iVar4 = piVar13[0xb];\n            goto code_r0x00461d81;\n        }\n        fcn.004b0da0(0, var_44h, var_70h * 2, 0);\n        puVar7 = fcn.004bd7f0(var_48h, *(piVar13 + 0x12), piVar13[2], piVar13[3], puVar14, puVar14 + var_70h);\n        if (puVar7 - var_48h <= var_44h) {\n            *puVar7 = 0;\n            iVar4 = piVar13[0xb];\n            var_44h = puVar7 - var_48h;\n            goto code_r0x00461d81;\n        }\n    }\n    fcn.004bf0c0(0x523d54, 0x523d3d);\ncode_r0x004622dc:\n    fcn.004bead0(0x523d20);\ncode_r0x004622e8:\n    uVar10 = fcn.004bead0(0x523d20);\n    fcn.004c3600(uVar10);\n    do {\n        uVar10 = fcn.004c3a90();\n        fcn.004c3600(uVar10);\n        (**(*piVar13 + 4))();\n    } while( true );\n}\n",
        "token_count": 2982
    },
    "00462360": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.00462360(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, uint8_t **arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t **ppiVar2;\n    uchar uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uchar *puVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    uint8_t *puVar11;\n    bool bVar12;\n    int32_t *piVar13;\n    uint8_t *puVar14;\n    uint *puVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    char *var_7ch;\n    uint var_78h;\n    uint32_t var_74h;\n    uint32_t var_70h;\n    uint var_6ch;\n    uint8_t var_65h;\n    uint32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_4ch;\n    uint *var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    var_64h = arg_ch;\n    var_65h = arg_ch;\n    iVar4 = fcn.004c0920(arg_10h + 0x6c);\n    iVar5 = fcn.004522b0();\n    ppiVar2 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    piVar13 = *ppiVar2;\n    if (piVar13 == NULL) {\n        puVar15 = fcn.004c3430(0x44);\n        *puVar15 = 0x52c664;\n        *(puVar15 + 4) = 0;\n        puVar15[1] = 0;\n        puVar15[2] = 0;\n        puVar15[3] = 0;\n        *(puVar15 + 0x12) = 0;\n        puVar15[5] = 0;\n        puVar15[6] = 0;\n        puVar15[7] = 0;\n        puVar15[8] = 0;\n        puVar15[9] = 0;\n        puVar15[10] = 0;\n        puVar15[0xb] = 0;\n        puVar15[0xc] = 0;\n        puVar15[0xd] = 0;\n        *(puVar15 + 0x43) = 0;\n        fcn.004aa8d0(arg_10h + 0x6c);\n        fcn.004ad8f0(puVar15, iVar5);\n        piVar13 = *ppiVar2;\n    }\n    puVar14 = *arg_18h;\n    if (*puVar14 == *(piVar13 + 0xe)) {\n        var_4ch = piVar13[0xd];\n        if (arg_18h[1] == NULL) goto code_r0x00462416;\n        var_7ch = piVar13[9];\n        puVar14 = puVar14 + 1;\n        var_74h = piVar13[10];\n    }\n    else {\n        var_4ch = piVar13[0xc];\n        var_7ch = piVar13[7];\n        var_74h = piVar13[8];\n    }\n    puVar11 = arg_18h[1] + puVar14;\n    if ((puVar11 <= puVar14) || (puVar6 = puVar14,  (*(*(iVar4 + 0x18) + *puVar14 * 2) & 8) == 0))\n    goto code_r0x00462416;\n    do {\n        puVar6 = puVar6 + 1;\n        if (puVar11 == puVar6) {\n            uVar16 = puVar11 - puVar14;\n            goto joined_r0x00462446;\n        }\n    } while ((*(*(iVar4 + 0x18) + *puVar6 * 2) & 8) != 0);\n    uVar16 = puVar6 - puVar14;\njoined_r0x00462446:\n    if (uVar16 == 0) goto code_r0x00462416;\n    var_48h = &var_40h;\n    var_44h = 0;\n    var_40h = var_40h & 0xffffff00;\n    fcn.004b2380(uVar16 * 2);\n    iVar4 = piVar13[0xb];\n    var_70h = uVar16 - iVar4;\n    if (var_70h < 1) {\ncode_r0x00462501:\n        uVar17 = var_44h;\n        if (iVar4 < 1) {\ncode_r0x0046250f:\n            uVar17 = var_44h + var_74h;\n            uVar16 = *(arg_10h + 0xc) & 0xb0;\n            if ((*(arg_10h + 0xc) & 0x200) != 0) {\n                uVar17 = uVar17 + piVar13[6];\n            }\n            var_30h = &var_28h;\n            var_2ch = 0;\n            var_28h = var_28h & 0xffffff00;\n            fcn.004b2380(uVar17 * 2);\n            puVar15 = &var_4ch;\n            var_70h = *(arg_10h + 8);\n            bVar12 = uVar16 == 0x10 && uVar17 < var_70h;\n            do {\n                uVar1 = var_2ch;\n                if (*puVar15 < 5) {\n    // switch table (5 cases) at 0x523d8c\n                    switch(*puVar15) {\n                    case 0:\n                        if (bVar12) {\n                            fcn.004b0da0(var_2ch, 0, var_70h - uVar17, arg_14h);\n                        }\n                        break;\n                    case 1:\n                        if (bVar12) {\n                            fcn.004b0da0(var_2ch, 0, var_70h - uVar17, arg_14h);\n                        }\n                        else {\n                            uVar8 = var_2ch + 1;\n                            uVar9 = 0xf;\n                            if (var_30h != &var_28h) {\n                                uVar9 = var_28h;\n                            }\n                            if (uVar9 < uVar8) {\n                                fcn.004b26d0(var_2ch, 0, 0, 1);\n                            }\n                            *(var_30h + uVar1) = arg_14h;\n                            *(var_30h + uVar1 + 1) = 0;\n                            var_2ch = uVar8;\n                        }\n                        break;\n                    case 2:\n                        if ((*(arg_10h + 0xd) & 2) != 0) {\n                            if (0x7fffffff - var_2ch < piVar13[6]) goto code_r0x00462a5c;\n                            fcn.004b2500(piVar13[5], piVar13[6]);\n                        }\n                        break;\n                    case 3:\n                        if (var_74h != 0) {\n                            fcn.004b2860(*var_7ch);\n                        }\n                        break;\n                    case 4:\n                        fcn.004b2500(var_48h, var_44h);\n                    }\n                }\n                puVar15 = puVar15 + 1;\n            } while (&var_48h != puVar15);\n            if (var_74h < 2) {\n                if (var_2ch < var_70h) goto code_r0x00462741;\ncode_r0x004626dc:\n                var_70h = var_2ch;\n            }\n            else {\n                piVar13 = 0x7fffffff - var_2ch;\n                if (piVar13 < var_74h - 1) goto code_r0x00462a34;\n                fcn.004b2500(var_7ch + 1, var_74h - 1);\n                if (var_70h <= var_2ch) goto code_r0x004626dc;\ncode_r0x00462741:\n                if (uVar16 == 0x20) {\n                    fcn.004b0da0(var_2ch, 0, var_70h - var_2ch, arg_14h);\n                }\n                else {\n                    fcn.004b0da0(0, 0, var_70h - var_2ch, arg_14h);\n                }\n            }\n            if (var_65h == 0) {\n                uVar16 = (**(*arg_8h + 0x30))(var_30h, var_70h);\n                var_65h = var_70h != uVar16;\n            }\n            var_64h = arg_ch & 0xffffff00;\n            if (var_30h != &var_28h) {\n                fcn.004c33f0(var_30h);\n            }\n            if (var_48h != &var_40h) {\n                fcn.004c33f0(var_48h);\n            }\ncode_r0x00462416:\n            *(arg_10h + 8) = 0;\n            var_64h = var_64h & 0xffffff00 | var_65h;\n            return CONCAT44(var_64h, arg_8h);\n        }\n        uVar3 = *(piVar13 + 0x11);\n        uVar1 = var_44h + 1;\n        uVar8 = 0xf;\n        if (var_48h != &var_40h) {\n            uVar8 = var_40h;\n        }\n        if (uVar8 < uVar1) {\n            fcn.004b26d0(var_44h, 0, 0, 1);\n        }\n        *(var_48h + uVar17) = uVar3;\n        *(var_48h + uVar1) = 0;\n        var_44h = uVar1;\n        if (var_70h < 0) {\n            fcn.004b0da0(uVar1, 0, -var_70h, *(piVar13 + 0x39));\n            if (0x7fffffff - var_44h < uVar16) goto code_r0x00462a68;\n            fcn.004b2500(puVar14, uVar16);\n            goto code_r0x0046250f;\n        }\n        if (piVar13[0xb] <= 0x7fffffff - uVar1) {\n            fcn.004b2500(puVar14 + var_70h, piVar13[0xb]);\n            goto code_r0x0046250f;\n        }\n        fcn.004bead0(0x523d20);\ncode_r0x00462a34:\n        fcn.004bead0(0x523d20);\n    }\n    else {\n        if (iVar4 < 0) {\n            var_70h = uVar16;\n        }\n        if (piVar13[3] == 0) {\n            fcn.004b0590(0, var_44h, puVar14, var_70h);\n            iVar4 = piVar13[0xb];\n            goto code_r0x00462501;\n        }\n        fcn.004b0da0(0, var_44h, var_70h * 2, 0);\n        puVar7 = fcn.004bd7f0(var_48h, *(piVar13 + 0x12), piVar13[2], piVar13[3], puVar14, puVar14 + var_70h);\n        if (puVar7 - var_48h <= var_44h) {\n            *puVar7 = 0;\n            iVar4 = piVar13[0xb];\n            var_44h = puVar7 - var_48h;\n            goto code_r0x00462501;\n        }\n    }\n    fcn.004bf0c0(0x523d54, 0x523d3d);\ncode_r0x00462a5c:\n    fcn.004bead0(0x523d20);\ncode_r0x00462a68:\n    uVar10 = fcn.004bead0(0x523d20);\n    fcn.004c3600(uVar10);\n    do {\n        uVar10 = fcn.004c3a90();\n        fcn.004c3600(uVar10);\n        (**(*piVar13 + 4))();\n    } while( true );\n}\n",
        "token_count": 2968
    },
    "00462b90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl fcn.00462b90(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    uint32_t *puVar7;\n    unkbyte10 in_stack_00000018;\n    uint uStack132;\n    uint *puStack128;\n    uint32_t auStack124 [4];\n    unkbyte10 aStack108 [2];\n    uint32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t *var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint *var_30h;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_4ch = arg_10h;\n    var_50h = arg_18h;\n    auStack124[0] = arg_14h + 0x6c;\n    puStack128 = 0x462bb9;\n    fcn.004af3a0();\n    puStack128 = &fcn.00462b90::var_34h;\n    uStack132 = 0x462bc7;\n    var_44h = fcn.004c0980();\n    uStack132 = 0x462bd4;\n    iVar2 = fcn.004386a0();\n    iVar2 = -iVar2;\n    piVar6 = &stack0xffffff80 + iVar2;\n    uVar5 = &fcn.00462b90::var_50h + iVar2 + 3 & 0xfffffff0;\n    var_40h = uVar5;\n    *(&stack0xffffff7c + iVar2) = 0x462be5;\n    var_30h = fcn.004af100();\n    *(&stack0xffffff90 + iVar2) = 0;\n    *(&stack0xffffff8c + iVar2) = 0x524070;\n    *(&stack0xffffff88 + iVar2) = 0x40;\n    *(&stack0xffffff94 + iVar2) = in_stack_00000018;\n    *(&stack0xffffff84 + iVar2) = uVar5;\n    *(&stack0xffffff80 + iVar2) = &fcn.00462b90::var_30h;\n    *(&stack0xffffff7c + iVar2) = 0x462c16;\n    iVar3 = fcn.004bde30();\n    if (0x3f < iVar3) {\n        *(&stack0xffffff7c + iVar2) = 0x462c2e;\n        iVar4 = fcn.004386a0();\n        iVar4 = -iVar4;\n        piVar6 = &stack0xffffff80 + iVar4 + iVar2;\n        uVar5 = &fcn.00462b90::var_50h + iVar4 + iVar2 + 3 & 0xfffffff0;\n        var_40h = uVar5;\n        *(&stack0xffffff7c + iVar4 + iVar2) = 0x462c3f;\n        var_30h = fcn.004af100();\n        *(&stack0xffffff90 + iVar4 + iVar2) = 0;\n        *(&stack0xffffff8c + iVar4 + iVar2) = 0x524070;\n        *(&stack0xffffff88 + iVar4 + iVar2) = iVar3 + 1;\n        *(&stack0xffffff94 + iVar4 + iVar2) = in_stack_00000018;\n        *(&stack0xffffff84 + iVar4 + iVar2) = uVar5;\n        *(&stack0xffffff80 + iVar4 + iVar2) = &fcn.00462b90::var_30h;\n        *(&stack0xffffff7c + iVar4 + iVar2) = 0x462c69;\n        iVar3 = fcn.004bde30();\n    }\n    piVar6[1] = 0;\n    *piVar6 = iVar3;\n    var_30h = &fcn.00462b90::var_28h;\n    piVar6[-1] = 0x462c83;\n    fcn.004b3690();\n    iVar2 = *var_44h;\n    *piVar6 = var_30h;\n    iVar3 = iVar3 + var_40h;\n    piVar6[-2] = var_40h;\n    piVar6[-1] = iVar3;\n    pcVar1 = *(iVar2 + 0x2c);\n    puVar7 = piVar6 + -3;\n    piVar6[-3] = 0x462ca1;\n    (*pcVar1)();\n    uVar5 = var_50h & 0xffff;\n    puVar7[1] = &fcn.00462b90::var_30h;\n    *puVar7 = uVar5;\n    puVar7[-2] = arg_ch;\n    puVar7[-1] = arg_14h;\n    puVar7[-3] = arg_8h;\n    if (var_4ch == '\\0') {\n        puVar7[-4] = 0x462d15;\n        _var_40h = fcn.00462d40(puVar7[-3], puVar7[-2], puVar7[-1], *puVar7, puVar7[1]);\n    }\n    else {\n        puVar7[-4] = 0x462cd2;\n        _var_40h = fcn.00463520(puVar7[-3], puVar7[-2], puVar7[-1], *puVar7, puVar7[1]);\n    }\n    if (var_30h != &fcn.00462b90::var_28h) {\n        puVar7[-8] = var_30h;\n        var_40h = _var_40h;\n        var_3ch = _var_40h >> 0x20;\n        puVar7[-9] = 0x462cea;\n        fcn.004c33f0();\n    }\n    var_40h = _var_40h;\n    var_3ch = _var_40h >> 0x20;\n    puVar7[-9] = 0x462cfe;\n    fcn.004af4c0();\n    return _var_40h;\n}\n",
        "token_count": 1484
    },
    "00462d40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nulong __cdecl fcn.00462d40(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, int16_t **arg_18h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ushort uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    ushort *puVar6;\n    int32_t *piVar7;\n    uint32_t extraout_ECX;\n    bool bVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t extraout_EDX;\n    int32_t iVar11;\n    int16_t *piVar12;\n    uint *puVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint uVar16;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint32_t var_80h;\n    uint var_7ch;\n    ushort *var_78h;\n    uint32_t var_74h;\n    uint32_t var_70h;\n    uint var_6ch;\n    uint8_t var_65h;\n    uint32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint *var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_bp_ch;\n    \n    var_64h = arg_ch;\n    var_65h = arg_ch;\n    piVar4 = fcn.004c0980(arg_10h + 0x6c);\n    iVar5 = fcn.004522b0();\n    piVar7 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    iVar11 = *piVar7;\n    if (iVar11 == 0) {\n        puVar13 = fcn.004c3430(0x54);\n        puVar13[1] = 0;\n        *puVar13 = 0x52c674;\n        puVar13[2] = 0;\n        puVar13[3] = 0;\n        *(puVar13 + 4) = 0;\n        *(puVar13 + 0x12) = 0;\n        puVar13[6] = 0;\n        puVar13[7] = 0;\n        puVar13[8] = 0;\n        puVar13[9] = 0;\n        puVar13[10] = 0;\n        puVar13[0xb] = 0;\n        puVar13[0xc] = 0;\n        puVar13[0xd] = 0;\n        puVar13[0xe] = 0;\n        *(puVar13 + 0x52) = 0;\n        fcn.004aafb0(arg_10h + 0x6c);\n        fcn.004ad8f0(puVar13, iVar5);\n        iVar11 = *piVar7;\n    }\n    piVar12 = *arg_18h;\n    if (*piVar12 == *(iVar11 + 0x3c)) {\n        var_4ch = *(iVar11 + 0x38);\n        var_78h = *(iVar11 + 0x28);\n        var_70h = *(iVar11 + 0x2c);\n        if (arg_18h[1] != NULL) {\n            piVar12 = piVar12 + 1;\n        }\n    }\n    else {\n        var_4ch = *(iVar11 + 0x34);\n        var_70h = *(iVar11 + 0x24);\n        var_78h = *(iVar11 + 0x20);\n    }\n    iVar5 = (**(*piVar4 + 0x14))(8, piVar12, piVar12 + arg_18h[1]);\n    uVar14 = iVar5 - piVar12 >> 1;\n    if (uVar14 == 0) goto code_r0x00462de7;\n    var_48h = &var_40h;\n    var_40h = var_40h._2_2_ << 0x10;\n    var_44h = 0;\n    fcn.004b51f0(iVar5 - piVar12);\n    iVar5 = *(iVar11 + 0x30);\n    var_80h = uVar14 - iVar5;\n    if (var_80h < 1) {\ncode_r0x00462efa:\n        uVar15 = var_44h;\n        if (iVar5 < 1) {\ncode_r0x00462f02:\n            uVar15 = var_44h + var_70h;\n            uVar14 = *(arg_10h + 0xc) & 0xb0;\n            if ((*(arg_10h + 0xc) & 0x200) != 0) {\n                uVar15 = uVar15 + *(iVar11 + 0x1c);\n            }\n            var_30h = &var_28h;\n            var_2ch = 0;\n            var_28h = var_28h & 0xffff0000;\n            fcn.004b51f0(uVar15 * 2);\n            puVar13 = &var_4ch;\n            uVar9 = *(arg_10h + 8);\n            bVar8 = uVar14 == 0x10 && uVar15 < uVar9;\n            do {\n                uVar2 = var_2ch;\n                if (*puVar13 < 5) {\n    // switch table (5 cases) at 0x52405c\n                    switch(*puVar13) {\n                    case 0:\n                        if (bVar8) {\n                            fcn.004b3b10(var_2ch, 0, uVar9 - uVar15, arg_14h);\n                        }\n                        break;\n                    case 1:\n                        if (bVar8) {\n                            fcn.004b3b10(var_2ch, 0, uVar9 - uVar15, arg_14h);\n                        }\n                        else {\n                            uVar1 = var_2ch + 1;\n                            uVar10 = 7;\n                            if (var_30h != &var_28h) {\n                                uVar10 = var_28h;\n                            }\n                            if (uVar10 < uVar1) {\n                                fcn.004b5560(var_2ch, 0, 0, 1);\n                            }\n                            *(var_30h + uVar2 * 2) = arg_14h;\n                            *(var_30h + uVar2 * 2 + 2) = 0;\n                            var_2ch = uVar1;\n                        }\n                        break;\n                    case 2:\n                        if ((*(arg_10h + 0xd) & 2) != 0) {\n                            if (0x3fffffff - var_2ch < *(iVar11 + 0x1c)) goto code_r0x0046347b;\n                            fcn.004b5380(*(iVar11 + 0x18), *(iVar11 + 0x1c));\n                        }\n                        break;\n                    case 3:\n                        if (var_70h != 0) {\n                            uVar3 = *var_78h;\n                            uVar1 = var_2ch + 1;\n                            uVar10 = 7;\n                            if (var_30h != &var_28h) {\n                                uVar10 = var_28h;\n                            }\n                            if (uVar10 < uVar1) {\n                                fcn.004b5560(var_2ch, 0, 0, 1);\n                            }\n                            *(var_30h + uVar2 * 2) = uVar3;\n                            *(var_30h + uVar2 * 2 + 2) = 0;\n                            var_2ch = uVar1;\n                        }\n                        break;\n                    case 4:\n                        fcn.004b5380(var_48h, var_44h);\n                    }\n                }\n                puVar13 = puVar13 + 1;\n            } while (&var_48h != puVar13);\n            var_74h = var_2ch;\n            if (1 < var_70h) {\n                if (0x3fffffff - var_2ch < var_70h - 1) goto code_r0x00463487;\n                fcn.004b5380(var_78h + 1, var_70h - 1);\n                var_74h = var_2ch;\n            }\n            var_2ch = var_74h;\n            if (var_74h < uVar9) {\n                if (uVar14 == 0x20) {\n                    fcn.004b3b10(var_74h, 0, uVar9 - var_74h, arg_14h);\n                    var_74h = uVar9;\n                }\n                else {\n                    fcn.004b3b10(0, 0, uVar9 - var_74h, arg_14h);\n                    var_74h = uVar9;\n                }\n            }\n            if (var_65h == 0) {\n                uVar14 = (**(*arg_8h + 0x30))(var_30h, var_74h);\n                var_65h = uVar14 != var_74h;\n            }\n            var_64h = arg_ch & 0xffffff00;\n            if (var_30h != &var_28h) {\n                fcn.004c33f0(var_30h);\n            }\n            if (var_48h != &var_40h) {\n                fcn.004c33f0(var_48h);\n            }\ncode_r0x00462de7:\n            *(arg_10h + 8) = 0;\n            var_64h = var_64h & 0xffffff00 | var_65h;\n            return CONCAT44(var_64h, arg_8h);\n        }\n        uVar3 = *(iVar11 + 0x12);\n        uVar2 = var_44h + 1;\n        uVar9 = 7;\n        if (var_48h != &var_40h) {\n            uVar9 = var_40h;\n        }\n        if (uVar9 < uVar2) {\n            fcn.004b5560(var_44h, 0, 0, 1);\n        }\n        *(var_48h + uVar15 * 2) = uVar3;\n        *(var_48h + uVar15 * 2 + 2) = 0;\n        var_44h = uVar2;\n        if (var_80h < 0) {\n            uVar15 = *(iVar11 + 0x3e);\n            uVar16 = 0;\n            uVar9 = -var_80h;\n            fcn.004b3b10(uVar2, 0, uVar9, uVar15);\n            if (0x3fffffff - var_44h < uVar14) goto code_r0x004634af;\n            fcn.004b5380(piVar12, uVar14);\n            goto code_r0x00462f02;\n        }\n        if (*(iVar11 + 0x30) <= 0x3fffffff - uVar2) {\n            fcn.004b5380(piVar12 + var_80h, *(iVar11 + 0x30));\n            goto code_r0x00462f02;\n        }\n        fcn.004bead0(0x523fdc);\ncode_r0x0046347b:\n        fcn.004bead0(0x523fdc);\ncode_r0x00463487:\n        fcn.004bead0(0x523fdc);\n        uVar15 = extraout_ECX;\n        uVar9 = extraout_EDX;\n    }\n    else {\n        if (iVar5 < 0) {\n            var_80h = uVar14;\n        }\n        if (*(iVar11 + 0xc) == 0) {\n            fcn.004b3310(0, var_44h, piVar12, var_80h);\n            iVar5 = *(iVar11 + 0x30);\n            goto code_r0x00462efa;\n        }\n        fcn.004b3b10(0, var_44h, var_80h * 2, 0);\n        puVar6 = fcn.004bd950(var_48h, *(iVar11 + 0x14), *(iVar11 + 8), *(iVar11 + 0xc), piVar12, piVar12 + var_80h);\n        uVar9 = puVar6 - var_48h >> 1;\n        uVar15 = var_44h;\n        if (uVar9 <= var_44h) {\n            *puVar6 = 0;\n            iVar5 = *(iVar11 + 0x30);\n            var_44h = uVar9;\n            goto code_r0x00462efa;\n        }\n    }\n    uVar16 = 0x523ff9;\n    fcn.004bf0c0(0x524010, 0x523ff9);\ncode_r0x004634af:\n    piVar7 = fcn.004bead0(0x523fdc, uVar16, uVar9, uVar15);\n    if (var_48h != &var_40h) {\n        fcn.004c33f0(var_48h);\n    }\n    uVar16 = fcn.0043b0b0(piVar7);\n    fcn.004c3600(uVar16);\n    (**(*piVar7 + 4))();\n    do {\n        uVar16 = fcn.004c3a90();\n        fcn.004c3600(uVar16);\n    } while( true );\n}\n",
        "token_count": 3137
    },
    "00463520": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nulong __cdecl fcn.00463520(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, int16_t **arg_18h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ushort uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    ushort *puVar6;\n    int32_t *piVar7;\n    uint32_t extraout_ECX;\n    bool bVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t extraout_EDX;\n    int32_t iVar11;\n    int16_t *piVar12;\n    uint *puVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint uVar16;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint32_t var_80h;\n    uint var_7ch;\n    ushort *var_78h;\n    uint32_t var_74h;\n    uint32_t var_70h;\n    uint var_6ch;\n    uint8_t var_65h;\n    uint32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint *var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_bp_ch;\n    \n    var_64h = arg_ch;\n    var_65h = arg_ch;\n    piVar4 = fcn.004c0980(arg_10h + 0x6c);\n    iVar5 = fcn.004522b0();\n    piVar7 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    iVar11 = *piVar7;\n    if (iVar11 == 0) {\n        puVar13 = fcn.004c3430(0x54);\n        puVar13[1] = 0;\n        *puVar13 = 0x52c684;\n        puVar13[2] = 0;\n        puVar13[3] = 0;\n        *(puVar13 + 4) = 0;\n        *(puVar13 + 0x12) = 0;\n        puVar13[6] = 0;\n        puVar13[7] = 0;\n        puVar13[8] = 0;\n        puVar13[9] = 0;\n        puVar13[10] = 0;\n        puVar13[0xb] = 0;\n        puVar13[0xc] = 0;\n        puVar13[0xd] = 0;\n        puVar13[0xe] = 0;\n        *(puVar13 + 0x52) = 0;\n        fcn.004ab7d0(arg_10h + 0x6c);\n        fcn.004ad8f0(puVar13, iVar5);\n        iVar11 = *piVar7;\n    }\n    piVar12 = *arg_18h;\n    if (*piVar12 == *(iVar11 + 0x3c)) {\n        var_4ch = *(iVar11 + 0x38);\n        var_78h = *(iVar11 + 0x28);\n        var_70h = *(iVar11 + 0x2c);\n        if (arg_18h[1] != NULL) {\n            piVar12 = piVar12 + 1;\n        }\n    }\n    else {\n        var_4ch = *(iVar11 + 0x34);\n        var_70h = *(iVar11 + 0x24);\n        var_78h = *(iVar11 + 0x20);\n    }\n    iVar5 = (**(*piVar4 + 0x14))(8, piVar12, piVar12 + arg_18h[1]);\n    uVar14 = iVar5 - piVar12 >> 1;\n    if (uVar14 == 0) goto code_r0x004635c7;\n    var_48h = &var_40h;\n    var_40h = var_40h._2_2_ << 0x10;\n    var_44h = 0;\n    fcn.004b51f0(iVar5 - piVar12);\n    iVar5 = *(iVar11 + 0x30);\n    var_80h = uVar14 - iVar5;\n    if (var_80h < 1) {\ncode_r0x004636da:\n        uVar15 = var_44h;\n        if (iVar5 < 1) {\ncode_r0x004636e2:\n            uVar15 = var_44h + var_70h;\n            uVar14 = *(arg_10h + 0xc) & 0xb0;\n            if ((*(arg_10h + 0xc) & 0x200) != 0) {\n                uVar15 = uVar15 + *(iVar11 + 0x1c);\n            }\n            var_30h = &var_28h;\n            var_2ch = 0;\n            var_28h = var_28h & 0xffff0000;\n            fcn.004b51f0(uVar15 * 2);\n            puVar13 = &var_4ch;\n            uVar9 = *(arg_10h + 8);\n            bVar8 = uVar14 == 0x10 && uVar15 < uVar9;\n            do {\n                uVar2 = var_2ch;\n                if (*puVar13 < 5) {\n    // switch table (5 cases) at 0x524048\n                    switch(*puVar13) {\n                    case 0:\n                        if (bVar8) {\n                            fcn.004b3b10(var_2ch, 0, uVar9 - uVar15, arg_14h);\n                        }\n                        break;\n                    case 1:\n                        if (bVar8) {\n                            fcn.004b3b10(var_2ch, 0, uVar9 - uVar15, arg_14h);\n                        }\n                        else {\n                            uVar1 = var_2ch + 1;\n                            uVar10 = 7;\n                            if (var_30h != &var_28h) {\n                                uVar10 = var_28h;\n                            }\n                            if (uVar10 < uVar1) {\n                                fcn.004b5560(var_2ch, 0, 0, 1);\n                            }\n                            *(var_30h + uVar2 * 2) = arg_14h;\n                            *(var_30h + uVar2 * 2 + 2) = 0;\n                            var_2ch = uVar1;\n                        }\n                        break;\n                    case 2:\n                        if ((*(arg_10h + 0xd) & 2) != 0) {\n                            if (0x3fffffff - var_2ch < *(iVar11 + 0x1c)) goto code_r0x00463c5b;\n                            fcn.004b5380(*(iVar11 + 0x18), *(iVar11 + 0x1c));\n                        }\n                        break;\n                    case 3:\n                        if (var_70h != 0) {\n                            uVar3 = *var_78h;\n                            uVar1 = var_2ch + 1;\n                            uVar10 = 7;\n                            if (var_30h != &var_28h) {\n                                uVar10 = var_28h;\n                            }\n                            if (uVar10 < uVar1) {\n                                fcn.004b5560(var_2ch, 0, 0, 1);\n                            }\n                            *(var_30h + uVar2 * 2) = uVar3;\n                            *(var_30h + uVar2 * 2 + 2) = 0;\n                            var_2ch = uVar1;\n                        }\n                        break;\n                    case 4:\n                        fcn.004b5380(var_48h, var_44h);\n                    }\n                }\n                puVar13 = puVar13 + 1;\n            } while (&var_48h != puVar13);\n            var_74h = var_2ch;\n            if (1 < var_70h) {\n                if (0x3fffffff - var_2ch < var_70h - 1) goto code_r0x00463c67;\n                fcn.004b5380(var_78h + 1, var_70h - 1);\n                var_74h = var_2ch;\n            }\n            var_2ch = var_74h;\n            if (var_74h < uVar9) {\n                if (uVar14 == 0x20) {\n                    fcn.004b3b10(var_74h, 0, uVar9 - var_74h, arg_14h);\n                    var_74h = uVar9;\n                }\n                else {\n                    fcn.004b3b10(0, 0, uVar9 - var_74h, arg_14h);\n                    var_74h = uVar9;\n                }\n            }\n            if (var_65h == 0) {\n                uVar14 = (**(*arg_8h + 0x30))(var_30h, var_74h);\n                var_65h = uVar14 != var_74h;\n            }\n            var_64h = arg_ch & 0xffffff00;\n            if (var_30h != &var_28h) {\n                fcn.004c33f0(var_30h);\n            }\n            if (var_48h != &var_40h) {\n                fcn.004c33f0(var_48h);\n            }\ncode_r0x004635c7:\n            *(arg_10h + 8) = 0;\n            var_64h = var_64h & 0xffffff00 | var_65h;\n            return CONCAT44(var_64h, arg_8h);\n        }\n        uVar3 = *(iVar11 + 0x12);\n        uVar2 = var_44h + 1;\n        uVar9 = 7;\n        if (var_48h != &var_40h) {\n            uVar9 = var_40h;\n        }\n        if (uVar9 < uVar2) {\n            fcn.004b5560(var_44h, 0, 0, 1);\n        }\n        *(var_48h + uVar15 * 2) = uVar3;\n        *(var_48h + uVar15 * 2 + 2) = 0;\n        var_44h = uVar2;\n        if (var_80h < 0) {\n            uVar15 = *(iVar11 + 0x3e);\n            uVar16 = 0;\n            uVar9 = -var_80h;\n            fcn.004b3b10(uVar2, 0, uVar9, uVar15);\n            if (0x3fffffff - var_44h < uVar14) goto code_r0x00463c8f;\n            fcn.004b5380(piVar12, uVar14);\n            goto code_r0x004636e2;\n        }\n        if (*(iVar11 + 0x30) <= 0x3fffffff - uVar2) {\n            fcn.004b5380(piVar12 + var_80h, *(iVar11 + 0x30));\n            goto code_r0x004636e2;\n        }\n        fcn.004bead0(0x523fdc);\ncode_r0x00463c5b:\n        fcn.004bead0(0x523fdc);\ncode_r0x00463c67:\n        fcn.004bead0(0x523fdc);\n        uVar15 = extraout_ECX;\n        uVar9 = extraout_EDX;\n    }\n    else {\n        if (iVar5 < 0) {\n            var_80h = uVar14;\n        }\n        if (*(iVar11 + 0xc) == 0) {\n            fcn.004b3310(0, var_44h, piVar12, var_80h);\n            iVar5 = *(iVar11 + 0x30);\n            goto code_r0x004636da;\n        }\n        fcn.004b3b10(0, var_44h, var_80h * 2, 0);\n        puVar6 = fcn.004bd950(var_48h, *(iVar11 + 0x14), *(iVar11 + 8), *(iVar11 + 0xc), piVar12, piVar12 + var_80h);\n        uVar9 = puVar6 - var_48h >> 1;\n        uVar15 = var_44h;\n        if (uVar9 <= var_44h) {\n            *puVar6 = 0;\n            iVar5 = *(iVar11 + 0x30);\n            var_44h = uVar9;\n            goto code_r0x004636da;\n        }\n    }\n    uVar16 = 0x523ff9;\n    fcn.004bf0c0(0x524010, 0x523ff9);\ncode_r0x00463c8f:\n    piVar7 = fcn.004bead0(0x523fdc, uVar16, uVar9, uVar15);\n    if (var_48h != &var_40h) {\n        fcn.004c33f0(var_48h);\n    }\n    uVar16 = fcn.0043b0b0(piVar7);\n    fcn.004c3600(uVar16);\n    (**(*piVar7 + 4))();\n    do {\n        uVar16 = fcn.004c3a90();\n        fcn.004c3600(uVar16);\n    } while( true );\n}\n",
        "token_count": 3144
    },
    "004644a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.004644a0(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    iVar2 = fcn.0048b900(0, 0, &var_19h);\n    *in_ECX = iVar2;\n    iVar2 = fcn.0048b9e0(arg_ch, arg_10h, &var_19h, 0);\n    uVar6 = (arg_10h - arg_ch) * 2;\n    iVar5 = *(iVar2 + -0xc) + iVar2;\n    var_2ch = fcn.004c3410(uVar6);\n    while( true ) {\n        uVar3 = fcn.00464470(var_2ch, iVar2, uVar6);\n        if (uVar6 <= uVar3) {\n            uVar6 = uVar3 + 1;\n            fcn.004c33e0(var_2ch);\n            var_2ch = fcn.004c3410(uVar6);\n            uVar3 = fcn.00464470(var_2ch, iVar2, uVar6);\n        }\n        fcn.0048c220(var_2ch, uVar3);\n        iVar4 = sub.msvcrt.dll_strlen(iVar2);\n        if (iVar5 == iVar2 + iVar4) break;\n        iVar1 = *in_ECX;\n        iVar2 = iVar2 + iVar4 + 1;\n        iVar4 = *(iVar1 + -0xc);\n        uVar3 = iVar4 + 1;\n        if ((*(iVar1 + -8) <= uVar3 && uVar3 != *(iVar1 + -8)) || (0 < *(iVar1 + -4))) {\n            fcn.0048d0f0(uVar3);\n        }\n        *(*in_ECX + *(*in_ECX + -0xc)) = 0;\n        iVar1 = *in_ECX;\n        *(iVar1 + -0xc) = uVar3;\n        *(iVar1 + -4) = 0;\n        *(iVar1 + 1 + iVar4) = 0;\n    }\n    fcn.004c33e0(var_2ch);\n    fcn.0048bdf0(&var_19h);\n    return;\n}\n",
        "token_count": 619
    },
    "00464880": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t * __cdecl fcn.00464880(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t *in_ECX;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uchar uVar9;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    iVar1 = fcn.004839f0(0, 0, &var_19h);\n    *in_ECX = iVar1;\n    uVar9 = 0;\n    var_30h = arg_ch;\n    iVar2 = fcn.00483ae0(arg_ch, arg_10h, &var_19h, 0);\n    iVar1 = *(iVar2 + -0xc);\n    uVar7 = arg_10h - arg_ch;\n    if (0x3ffffffe < uVar7) {\ncode_r0x00464a4e:\n        uVar5 = fcn.004c3b60(var_30h);\n        do {\n            fcn.004c3600(uVar5);\n            uVar5 = fcn.004c3a90();\n        } while( true );\n    }\n    var_30h = fcn.004c3410(uVar7 * 2);\n    iVar6 = iVar2;\n    do {\n        uVar8 = uVar7;\n        uVar3 = fcn.00464850(var_30h, iVar6, uVar7);\n        if (uVar7 <= uVar3) {\n            uVar7 = uVar3 + 1;\n            fcn.004c33e0();\n            if (0x3ffffffe < uVar7) {\n                fcn.004c3b60();\n                goto code_r0x00464a4e;\n            }\n            var_30h = fcn.004c3410();\n            uVar3 = fcn.00464850();\n        }\n        fcn.00484390(var_30h, uVar3, uVar8, uVar9, iVar2);\n        iVar4 = sub.msvcrt.dll_wcslen(iVar6);\n        iVar6 = iVar6 + iVar4 * 2;\n        if (iVar2 + iVar1 * 2 == iVar6) {\n            fcn.004c33e0(var_30h);\n            fcn.00483f30(&var_19h);\n            return in_ECX;\n        }\n        iVar4 = *in_ECX;\n        iVar6 = iVar6 + 2;\n        uVar8 = *(iVar4 + -0xc) + 1;\n        if ((*(iVar4 + -8) <= uVar8 && uVar8 != *(iVar4 + -8)) || (0 < *(iVar4 + -4))) {\n            fcn.00485370(uVar8);\n        }\n        iVar4 = *in_ECX;\n        *(iVar4 + *(iVar4 + -0xc) * 2) = 0;\n        *(iVar4 + -4) = 0;\n        *(iVar4 + -0xc) = uVar8;\n        *(iVar4 + uVar8 * 2) = 0;\n    } while( true );\n}\n",
        "token_count": 799
    },
    "00464b00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00464b00(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    bool bVar6;\n    bool bVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    char cVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    bool bVar14;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    iVar5 = arg_18h;\n    uVar13 = 8;\n    iVar3 = fcn.0044e1c0(arg_18h + 0x6c);\n    uVar4 = *(iVar5 + 0xc) & 0x4a;\n    if ((uVar4 != 0x40) && (uVar13 = 10,  uVar4 == 8)) {\n        uVar13 = 0x10;\n    }\n    bVar6 = arg_8h != NULL && arg_ch == 0xffffffff;\n    bVar14 = arg_ch == 0xffffffff;\n    if (((bVar6) && (bVar14 = false,  arg_8h[3] <= arg_8h[2])) && (iVar5 = (**(*arg_8h + 0x24))(),  iVar5 == -1)) {\n        arg_8h = NULL;\n        bVar14 = bVar6;\n    }\n    bVar6 = arg_10h != NULL && arg_14h == -1;\n    var_44h._0_1_ = arg_14h == -1;\n    if ((bVar6) && (var_44h._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar5 = (**(*arg_10h + 0x24))();\n        var_44h._0_1_ = false;\n        if (iVar5 == -1) {\n            arg_10h = NULL;\n            var_44h._0_1_ = bVar6;\n        }\n    }\n    if (var_44h == bVar14) {\n        bVar14 = false;\n        uVar12 = 0;\n        var_50h._3_1_ = 1;\n        var_44h = 0;\n        bVar6 = false;\n    }\n    else {\n        uVar12 = arg_ch;\n        if ((arg_ch == 0xffffffff) && (arg_8h != NULL)) {\n            if (arg_8h[3] <= arg_8h[2]) {\n                uVar12 = (**(*arg_8h + 0x24))();\n                if (uVar12 == 0xffffffff) {\n                    arg_8h = NULL;\n                    uVar12 = 0xffffffff;\n                }\n                goto code_r0x00464b90;\n            }\n            uVar1 = *arg_8h[2];\n            uVar12 = uVar1;\n            cVar2 = *(iVar3 + 0x10);\n            bVar14 = *(iVar3 + 0x4a) == uVar1;\n            if (!bVar14) goto code_r0x00464ba0;\ncode_r0x00464ba9:\n            if (((cVar2 == '\\0') || (*(iVar3 + 0x25) != uVar12)) && (*(iVar3 + 0x24) != uVar12)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                var_50h._3_1_ = fcn.00450a90(&arg_10h);\n                var_44h = 0;\n                bVar6 = false;\n                if (var_50h._3_1_ != 0) goto code_r0x00464c00;\n                uVar12 = fcn.00450b30();\n                cVar2 = *(iVar3 + 0x10);\n            }\n        }\n        else {\ncode_r0x00464b90:\n            cVar2 = *(iVar3 + 0x10);\n            bVar14 = *(iVar3 + 0x4a) == uVar12;\n            if (bVar14) goto code_r0x00464ba9;\ncode_r0x00464ba0:\n            if (*(iVar3 + 0x4b) == uVar12) goto code_r0x00464ba9;\n            bVar14 = false;\n        }\n        var_44h = 0;\n        bVar6 = false;\n        while (((cVar10 = uVar12,  cVar2 == '\\0' || (*(iVar3 + 0x25) != cVar10)) && (*(iVar3 + 0x24) != cVar10))) {\n            if (*(iVar3 + 0x4e) == cVar10) {\n                bVar7 = uVar13 == 10 | bVar6 ^ 1U;\n                if (!bVar7) goto code_r0x00464dba;\n                bVar6 = uVar4 == 0 || uVar13 == 8;\n                if (uVar4 != 0 && uVar13 != 8) {\n                    var_44h = var_44h + 1;\n                    goto code_r0x00464dee;\n                }\n                var_44h = 0;\n                uVar13 = 8;\n                uVar11 = arg_8h[2];\n                if (arg_8h[3] <= uVar11) goto code_r0x00464e90;\ncode_r0x00464dfd:\n                arg_8h[2] = uVar11 + 1;\ncode_r0x00464e0a:\n                var_48h._0_1_ = false;\n                if ((arg_8h[3] <= arg_8h[2]) && (iVar5 = (**(*arg_8h + 0x24))(),  iVar5 == -1)) {\n                    arg_8h = NULL;\n                    var_48h._0_1_ = true;\n                }\n            }\n            else {\n                if (!bVar6) break;\ncode_r0x00464dba:\n                if ((*(iVar3 + 0x4c) != cVar10) && (*(iVar3 + 0x4d) != cVar10)) {\n                    var_50h._3_1_ = 0;\n                    bVar6 = true;\n                    goto code_r0x00464c00;\n                }\n                var_50h._3_1_ = uVar13 == 0x10 || uVar4 == 0;\n                if (uVar13 != 0x10 && uVar4 != 0) {\n                    bVar6 = true;\n                    goto code_r0x00464c0c;\n                }\n                var_44h = 0;\n                uVar13 = 0x10;\n                bVar7 = false;\ncode_r0x00464dee:\n                uVar11 = arg_8h[2];\n                bVar6 = bVar7;\n                if (uVar11 < arg_8h[3]) goto code_r0x00464dfd;\ncode_r0x00464e90:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x00464e0a;\n                var_48h._0_1_ = true;\n            }\n            arg_ch = 0xffffffff;\n            bVar9 = arg_10h != NULL && arg_14h == -1;\n            bVar7 = arg_14h == -1;\n            if ((bVar9) && (bVar7 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar5 = (**(*arg_10h + 0x24))();\n                bVar7 = false;\n                if (iVar5 == -1) {\n                    arg_10h = NULL;\n                    bVar7 = bVar9;\n                }\n            }\n            if (var_48h._0_1_ == bVar7) {\n                var_50h._3_1_ = 1;\n                goto code_r0x00464c00;\n            }\n            uVar12 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar12 = *arg_8h[2];\n                }\n                else {\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar12 = 0xffffffff;\n                    }\n                }\n            }\n            if (!bVar6) break;\n            cVar2 = *(iVar3 + 0x10);\n        }\n        var_50h._3_1_ = 0;\n    }\ncode_r0x00464c00:\n    var_4ch = 0x16;\n    if (uVar13 != 0x10) {\ncode_r0x00464c0c:\n        var_4ch = uVar13;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (*(iVar3 + 0x10) != '\\0') {\n        fcn.004b2380(0x20);\n    }\n    uVar4 = 0xffffffff / uVar13;\n    var_50h._2_1_ = *(iVar3 + 100);\n    if (var_50h._2_1_ == 0) {\n        if (var_50h._3_1_ == 0) {\n            var_50h._1_1_ = 0;\n            var_48h = 0;\ncode_r0x00464c64:\n            cVar2 = uVar12;\n            iVar5 = cVar2;\n            if (var_4ch < 0xb) {\n                if ((cVar2 < '0') || (var_4ch + '0' <= cVar2)) goto code_r0x00464f03;\n            }\n            else if (9 < cVar2 - 0x30U) goto code_r0x00464eec;\n            uVar12 = iVar5 - 0x30;\ncode_r0x00464c86:\n            if (uVar12 != 0xffffffff) {\n                do {\n                    if (uVar4 < var_48h) {\n                        var_50h._1_1_ = 1;\n                        uVar12 = arg_8h[2];\n                        if (arg_8h[3] <= uVar12) goto code_r0x00464f95;\ncode_r0x00464cc2:\n                        arg_8h[2] = uVar12 + 1;\ncode_r0x00464ccf:\n                        var_50h._2_1_ = false;\n                        if (arg_8h[3] <= arg_8h[2]) {\n                            iVar5 = (**(*arg_8h + 0x24))();\n                            var_50h._2_1_ = false;\n                            if (iVar5 == -1) {\n                                arg_8h = NULL;\n                                var_50h._2_1_ = true;\n                            }\n                        }\n                    }\n                    else {\n                        uVar11 = var_48h * uVar13;\n                        var_48h = uVar12 + uVar11;\n                        var_50h._1_1_ = var_50h._1_1_ | ~uVar12 < uVar11;\n                        uVar12 = arg_8h[2];\n                        var_44h = var_44h + 1;\n                        if (uVar12 < arg_8h[3]) goto code_r0x00464cc2;\ncode_r0x00464f95:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00464ccf;\n                        var_50h._2_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar9 = arg_10h != NULL && arg_14h == -1;\n                    bVar7 = arg_14h == -1;\n                    if ((bVar9) && (bVar7 = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar5 = (**(*arg_10h + 0x24))();\n                        bVar7 = false;\n                        if (iVar5 == -1) {\n                            arg_10h = NULL;\n                            bVar7 = bVar9;\n                        }\n                    }\n                    if (var_50h._2_1_ == bVar7) {\n                        var_50h._2_1_ = 1;\n                        goto code_r0x00464d06;\n                    }\n                    uVar12 = arg_ch;\n                    if (arg_8h == NULL) goto code_r0x00464c64;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar12 = *arg_8h[2];\n                        goto code_r0x00464c64;\n                    }\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 != 0xffffffff) goto code_r0x00464c64;\n                    arg_8h = NULL;\n                    if (var_4ch < 0xb) break;\n                    cVar2 = -1;\n                    iVar5 = -1;\ncode_r0x00464eec:\n                    if (5 < cVar2 + 0x9fU) goto code_r0x00465050;\n                    uVar12 = iVar5 - 0x57;\n                    if (uVar12 == 0xffffffff) break;\n                } while( true );\n            }\n            goto code_r0x00464f03;\n        }\n        var_50h._2_1_ = var_50h._3_1_;\n        var_50h._1_1_ = 0;\n        var_50h._3_1_ = 0;\n        var_48h = 0;\n    }\n    else {\n        if (var_50h._3_1_ == 0) {\n            var_50h._1_1_ = 0;\n            var_48h = 0;\ncode_r0x004650bb:\n            uVar11 = var_2ch;\n            cVar2 = uVar12;\n            if ((*(iVar3 + 0x10) == 0) || (*(iVar3 + 0x25) != cVar2)) {\n                if ((cVar2 == *(iVar3 + 0x24)) ||\n                   (iVar5 = sub.msvcrt.dll_memchr(iVar3 + 0x4e, cVar2, var_4ch),  iVar5 == 0)) goto code_r0x00464f03;\n                uVar12 = iVar5 - (iVar3 + 0x4e);\n                if (0xf < uVar12) {\n                    uVar12 = uVar12 - 6;\n                }\n                if (var_48h <= uVar4) {\n                    uVar11 = var_48h * uVar13;\n                    var_48h = uVar12 + uVar11;\n                    var_50h._1_1_ = var_50h._1_1_ | ~uVar12 < uVar11;\n                    var_44h = var_44h + 1;\n                    goto code_r0x00465122;\n                }\n                uVar12 = arg_8h[2];\n                var_50h._1_1_ = var_50h._2_1_;\n                if (arg_8h[3] <= uVar12) goto code_r0x00465182;\ncode_r0x0046512d:\n                arg_8h[2] = uVar12 + 1;\ncode_r0x0046513a:\n                var_5ch._0_1_ = 0;\n                if (arg_8h[3] <= arg_8h[2]) {\n                    iVar5 = (**(*arg_8h + 0x24))();\n                    var_5ch._0_1_ = 0;\n                    if (iVar5 == -1) {\n                        arg_8h = NULL;\n                        var_5ch._0_1_ = var_50h._2_1_;\n                    }\n                }\n            }\n            else {\n                if (var_44h == 0) {\n                    var_50h._2_1_ = 0;\n                    var_50h._3_1_ = *(iVar3 + 0x10);\n                    goto code_r0x00464d06;\n                }\n                uVar12 = var_2ch + 1;\n                uVar8 = 0xf;\n                if (stack0xffffffcc != &var_28h) {\n                    uVar8 = var_28h;\n                }\n                if (uVar8 < uVar12) {\n                    fcn.004b26d0(var_2ch, 0, 0, 1);\n                }\n                var_44h = 0;\n                *(stack0xffffffcc + uVar11) = var_44h;\n                *(stack0xffffffcc + uVar12) = 0;\n                var_2ch = uVar12;\ncode_r0x00465122:\n                uVar12 = arg_8h[2];\n                if (uVar12 < arg_8h[3]) goto code_r0x0046512d;\ncode_r0x00465182:\n                (**(*arg_8h + 0x28))();\n                var_5ch._0_1_ = var_50h._2_1_;\n                if (arg_8h != NULL) goto code_r0x0046513a;\n            }\n            arg_ch = 0xffffffff;\n            bVar9 = arg_10h != NULL && arg_14h == -1;\n            bVar7 = arg_14h == -1;\n            if ((bVar9) && (bVar7 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar5 = (**(*arg_10h + 0x24))();\n                bVar7 = false;\n                if (iVar5 == -1) {\n                    arg_10h = NULL;\n                    bVar7 = bVar9;\n                }\n            }\n            if (var_5ch == bVar7) goto code_r0x00464d06;\n            uVar12 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar12 = *arg_8h[2];\n                }\n                else {\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar12 = 0xffffffff;\n                    }\n                }\n            }\n            goto code_r0x004650bb;\n        }\n        var_48h = 0;\n        var_50h._1_1_ = 0;\n        var_50h._2_1_ = var_50h._3_1_;\n        var_50h._3_1_ = 0;\n    }\ncode_r0x00464d06:\n    if (var_2ch != 0) goto code_r0x00464f12;\ncode_r0x00464d0e:\n    if ((var_44h != 0) || (bVar6)) {\ncode_r0x00464f57:\n        if (var_50h._3_1_ == 0) {\n            if (var_50h._1_1_ == 0) {\n                uVar4 = -var_48h;\n                if (!bVar14) {\n                    uVar4 = var_48h;\n                }\n                *arg_20h = uVar4;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00464d35;\n        }\n    }\ncode_r0x00464d23:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00464d35:\n    if (var_50h._2_1_ != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != &var_28h) {\n        fcn.004c33f0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x00465050:\n    if (5 < cVar2 + 0xbfU) goto code_r0x00464f03;\n    uVar12 = iVar5 - 0x37;\n    goto code_r0x00464c86;\ncode_r0x00464f03:\n    var_50h._2_1_ = 0;\n    if (var_2ch == 0) goto code_r0x00464d0e;\ncode_r0x00464f12:\n    fcn.004b2860(var_44h);\n    cVar2 = fcn.004be6e0(*(iVar3 + 8), *(iVar3 + 0xc), &var_31h + 1);\n    if (cVar2 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar6) || ((var_44h | var_2ch) != 0)) goto code_r0x00464f57;\n    goto code_r0x00464d23;\n}\n",
        "token_count": 5038
    },
    "00465530": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00465530(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    bool bVar7;\n    bool bVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    char cVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    bool bVar14;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint8_t var_4fh;\n    uint8_t var_4eh;\n    uint32_t var_4dh;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    iVar6 = arg_18h;\n    uVar13 = 8;\n    iVar3 = fcn.0044e1c0(arg_18h + 0x6c);\n    uVar4 = *(iVar6 + 0xc) & 0x4a;\n    if ((uVar4 != 0x40) && (uVar13 = 10,  uVar4 == 8)) {\n        uVar13 = 0x10;\n    }\n    bVar7 = arg_8h != NULL && arg_ch == 0xffffffff;\n    bVar14 = arg_ch == 0xffffffff;\n    if (((bVar7) && (bVar14 = false,  arg_8h[3] <= arg_8h[2])) && (iVar6 = (**(*arg_8h + 0x24))(),  iVar6 == -1)) {\n        arg_8h = NULL;\n        bVar14 = bVar7;\n    }\n    bVar7 = arg_10h != NULL && arg_14h == -1;\n    var_44h._0_1_ = arg_14h == -1;\n    if ((bVar7) && (var_44h._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar6 = (**(*arg_10h + 0x24))();\n        var_44h._0_1_ = false;\n        if (iVar6 == -1) {\n            arg_10h = NULL;\n            var_44h._0_1_ = bVar7;\n        }\n    }\n    if (var_44h == bVar14) {\n        bVar14 = false;\n        uVar12 = 0;\n        var_4dh._0_1_ = 1;\n        var_44h = 0;\n        bVar7 = false;\n    }\n    else {\n        uVar12 = arg_ch;\n        if ((arg_ch == 0xffffffff) && (arg_8h != NULL)) {\n            if (arg_8h[3] <= arg_8h[2]) {\n                uVar12 = (**(*arg_8h + 0x24))();\n                if (uVar12 == 0xffffffff) {\n                    arg_8h = NULL;\n                    uVar12 = 0xffffffff;\n                }\n                goto code_r0x004655c0;\n            }\n            uVar1 = *arg_8h[2];\n            uVar12 = uVar1;\n            cVar2 = *(iVar3 + 0x10);\n            bVar14 = *(iVar3 + 0x4a) == uVar1;\n            if (!bVar14) goto code_r0x004655d0;\ncode_r0x004655d9:\n            if (((cVar2 == '\\0') || (*(iVar3 + 0x25) != uVar12)) && (*(iVar3 + 0x24) != uVar12)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                var_4dh._0_1_ = fcn.00450a90(&arg_10h);\n                var_44h = 0;\n                bVar7 = false;\n                if (var_4dh != 0) goto code_r0x00465630;\n                uVar12 = fcn.00450b30();\n                cVar2 = *(iVar3 + 0x10);\n            }\n        }\n        else {\ncode_r0x004655c0:\n            cVar2 = *(iVar3 + 0x10);\n            bVar14 = *(iVar3 + 0x4a) == uVar12;\n            if (bVar14) goto code_r0x004655d9;\ncode_r0x004655d0:\n            if (*(iVar3 + 0x4b) == uVar12) goto code_r0x004655d9;\n            bVar14 = false;\n        }\n        var_44h = 0;\n        bVar7 = false;\n        while (((cVar11 = uVar12,  cVar2 == '\\0' || (*(iVar3 + 0x25) != cVar11)) && (*(iVar3 + 0x24) != cVar11))) {\n            if (*(iVar3 + 0x4e) == cVar11) {\n                bVar8 = uVar13 == 10 | bVar7 ^ 1U;\n                if (!bVar8) goto code_r0x004657fa;\n                bVar7 = uVar4 == 0 || uVar13 == 8;\n                if (uVar4 != 0 && uVar13 != 8) {\n                    var_44h = var_44h + 1;\n                    goto code_r0x0046582e;\n                }\n                var_44h = 0;\n                uVar13 = 8;\n                uVar5 = arg_8h[2];\n                if (arg_8h[3] <= uVar5) goto code_r0x004658d0;\ncode_r0x0046583d:\n                arg_8h[2] = uVar5 + 1;\ncode_r0x0046584a:\n                var_48h._0_1_ = false;\n                if ((arg_8h[3] <= arg_8h[2]) && (iVar6 = (**(*arg_8h + 0x24))(),  iVar6 == -1)) {\n                    arg_8h = NULL;\n                    var_48h._0_1_ = true;\n                }\n            }\n            else {\n                if (!bVar7) break;\ncode_r0x004657fa:\n                if ((*(iVar3 + 0x4c) != cVar11) && (*(iVar3 + 0x4d) != cVar11)) {\n                    var_4dh._0_1_ = 0;\n                    bVar7 = true;\n                    goto code_r0x00465630;\n                }\n                var_4dh._0_1_ = uVar13 == 0x10 || uVar4 == 0;\n                if (uVar13 != 0x10 && uVar4 != 0) {\n                    bVar7 = true;\n                    goto code_r0x0046563c;\n                }\n                var_44h = 0;\n                uVar13 = 0x10;\n                bVar8 = false;\ncode_r0x0046582e:\n                uVar5 = arg_8h[2];\n                bVar7 = bVar8;\n                if (uVar5 < arg_8h[3]) goto code_r0x0046583d;\ncode_r0x004658d0:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x0046584a;\n                var_48h._0_1_ = true;\n            }\n            arg_ch = 0xffffffff;\n            bVar10 = arg_10h != NULL && arg_14h == -1;\n            bVar8 = arg_14h == -1;\n            if ((bVar10) && (bVar8 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar6 = (**(*arg_10h + 0x24))();\n                bVar8 = false;\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    bVar8 = bVar10;\n                }\n            }\n            if (bVar8 == var_48h._0_1_) {\n                var_4dh._0_1_ = 1;\n                goto code_r0x00465630;\n            }\n            uVar12 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar12 = *arg_8h[2];\n                }\n                else {\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar12 = 0xffffffff;\n                    }\n                }\n            }\n            if (!bVar7) break;\n            cVar2 = *(iVar3 + 0x10);\n        }\n        var_4dh._0_1_ = 0;\n    }\ncode_r0x00465630:\n    stack0xffffffb0 = 0x16;\n    if (uVar13 != 0x10) {\ncode_r0x0046563c:\n        unique0x1000043c = uVar13;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (*(iVar3 + 0x10) != '\\0') {\n        fcn.004b2380(0x20);\n    }\n    uVar4 = bVar14 + 0x7fffffff;\n    var_4eh = *(iVar3 + 100);\n    if (var_4eh == 0) {\n        if (var_4dh == 0) {\n            var_4fh = 0;\n            var_48h = 0;\ncode_r0x004656a0:\n            cVar2 = uVar12;\n            iVar6 = cVar2;\n            if (stack0xffffffb0 < 0xb) {\n                if ((cVar2 < '0') || (var_4dh._1_1_ + '0' <= cVar2)) goto code_r0x00465943;\n            }\n            else if (9 < cVar2 - 0x30U) goto code_r0x0046592c;\n            iVar6 = iVar6 + -0x30;\ncode_r0x004656c2:\n            if (iVar6 != -1) {\n                do {\n                    if (uVar4 / uVar13 < var_48h) {\n                        var_4fh = 1;\n                        uVar12 = arg_8h[2];\n                        if (arg_8h[3] <= uVar12) goto code_r0x004659e3;\ncode_r0x004656ff:\n                        arg_8h[2] = uVar12 + 1;\ncode_r0x0046570c:\n                        var_4eh = false;\n                        if (arg_8h[3] <= arg_8h[2]) {\n                            iVar6 = (**(*arg_8h + 0x24))();\n                            var_4eh = false;\n                            if (iVar6 == -1) {\n                                arg_8h = NULL;\n                                var_4eh = true;\n                            }\n                        }\n                    }\n                    else {\n                        uVar12 = var_48h * uVar13;\n                        var_48h = iVar6 + uVar12;\n                        var_4fh = var_4fh | uVar4 - iVar6 < uVar12;\n                        uVar12 = arg_8h[2];\n                        var_44h = var_44h + 1;\n                        if (uVar12 < arg_8h[3]) goto code_r0x004656ff;\ncode_r0x004659e3:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0046570c;\n                        var_4eh = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar10 = arg_10h != NULL && arg_14h == -1;\n                    bVar8 = arg_14h == -1;\n                    if ((bVar10) && (bVar8 = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar6 = (**(*arg_10h + 0x24))();\n                        bVar8 = false;\n                        if (iVar6 == -1) {\n                            arg_10h = NULL;\n                            bVar8 = bVar10;\n                        }\n                    }\n                    if (bVar8 == var_4eh) {\n                        var_4eh = 1;\n                        goto code_r0x00465743;\n                    }\n                    uVar12 = arg_ch;\n                    if (arg_8h == NULL) goto code_r0x004656a0;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar12 = *arg_8h[2];\n                        goto code_r0x004656a0;\n                    }\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 != 0xffffffff) goto code_r0x004656a0;\n                    arg_8h = NULL;\n                    if (stack0xffffffb0 < 0xb) break;\n                    cVar2 = -1;\n                    iVar6 = -1;\ncode_r0x0046592c:\n                    if (5 < cVar2 + 0x9fU) goto code_r0x00465aa0;\n                    iVar6 = iVar6 + -0x57;\n                    if (iVar6 == -1) break;\n                } while( true );\n            }\n            goto code_r0x00465943;\n        }\n        var_4eh = var_4dh;\n        var_4fh = 0;\n        var_4dh._0_1_ = 0;\n        var_48h = 0;\n    }\n    else {\n        if (var_4dh == 0) {\n            var_4fh = 0;\n            var_48h = 0;\ncode_r0x00465b0b:\n            uVar5 = var_2ch;\n            cVar2 = uVar12;\n            if ((*(iVar3 + 0x10) == 0) || (*(iVar3 + 0x25) != cVar2)) {\n                if ((cVar2 == *(iVar3 + 0x24)) ||\n                   (iVar6 = sub.msvcrt.dll_memchr(iVar3 + 0x4e, cVar2, stack0xffffffb0),  iVar6 == 0))\n                goto code_r0x00465943;\n                iVar6 = iVar6 - (iVar3 + 0x4e);\n                if (0xf < iVar6) {\n                    iVar6 = iVar6 + -6;\n                }\n                if (var_48h <= uVar4 / uVar13) {\n                    uVar12 = var_48h * uVar13;\n                    var_48h = iVar6 + uVar12;\n                    var_4fh = var_4fh | uVar4 - iVar6 < uVar12;\n                    var_44h = var_44h + 1;\n                    goto code_r0x00465b73;\n                }\n                uVar12 = arg_8h[2];\n                var_4fh = var_4eh;\n                if (arg_8h[3] <= uVar12) goto code_r0x00465bd2;\ncode_r0x00465b7e:\n                arg_8h[2] = uVar12 + 1;\ncode_r0x00465b8b:\n                var_60h._0_1_ = 0;\n                if (arg_8h[3] <= arg_8h[2]) {\n                    iVar6 = (**(*arg_8h + 0x24))();\n                    var_60h._0_1_ = 0;\n                    if (iVar6 == -1) {\n                        arg_8h = NULL;\n                        var_60h._0_1_ = var_4eh;\n                    }\n                }\n            }\n            else {\n                if (var_44h == 0) {\n                    var_4eh = 0;\n                    var_4dh._0_1_ = *(iVar3 + 0x10);\n                    goto code_r0x00465743;\n                }\n                uVar12 = var_2ch + 1;\n                uVar9 = 0xf;\n                if (stack0xffffffcc != &var_28h) {\n                    uVar9 = var_28h;\n                }\n                if (uVar9 < uVar12) {\n                    fcn.004b26d0(var_2ch, 0, 0, 1);\n                }\n                var_44h = 0;\n                *(stack0xffffffcc + uVar5) = var_44h;\n                *(stack0xffffffcc + uVar12) = 0;\n                var_2ch = uVar12;\ncode_r0x00465b73:\n                uVar12 = arg_8h[2];\n                if (uVar12 < arg_8h[3]) goto code_r0x00465b7e;\ncode_r0x00465bd2:\n                (**(*arg_8h + 0x28))();\n                var_60h._0_1_ = var_4eh;\n                if (arg_8h != NULL) goto code_r0x00465b8b;\n            }\n            arg_ch = 0xffffffff;\n            bVar10 = arg_10h != NULL && arg_14h == -1;\n            bVar8 = arg_14h == -1;\n            if ((bVar10) && (bVar8 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar6 = (**(*arg_10h + 0x24))();\n                bVar8 = false;\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    bVar8 = bVar10;\n                }\n            }\n            if (bVar8 == var_60h) goto code_r0x00465743;\n            uVar12 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar12 = *arg_8h[2];\n                }\n                else {\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar12 = 0xffffffff;\n                    }\n                }\n            }\n            goto code_r0x00465b0b;\n        }\n        var_48h = 0;\n        var_4fh = 0;\n        var_4eh = var_4dh;\n        var_4dh._0_1_ = 0;\n    }\ncode_r0x00465743:\n    if (var_2ch != 0) goto code_r0x00465952;\ncode_r0x0046574b:\n    if ((var_44h != 0) || (bVar7)) {\ncode_r0x00465997:\n        if (var_4dh == 0) {\n            if (var_4fh == 0) {\n                uVar4 = -var_48h;\n                if (!bVar14) {\n                    uVar4 = var_48h;\n                }\n                *arg_20h = uVar4;\n            }\n            else {\n                *arg_20h = bVar14 + 0x7fffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00465772;\n        }\n    }\ncode_r0x00465760:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00465772:\n    if (var_4eh != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != &var_28h) {\n        fcn.004c33f0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x00465aa0:\n    if (5 < cVar2 + 0xbfU) goto code_r0x00465943;\n    iVar6 = iVar6 + -0x37;\n    goto code_r0x004656c2;\ncode_r0x00465943:\n    var_4eh = 0;\n    if (var_2ch == 0) goto code_r0x0046574b;\ncode_r0x00465952:\n    fcn.004b2860(var_44h);\n    cVar2 = fcn.004be6e0(*(iVar3 + 8), *(iVar3 + 0xc), &var_31h + 1);\n    if (cVar2 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar7) || ((var_44h | var_2ch) != 0)) goto code_r0x00465997;\n    goto code_r0x00465760;\n}\n",
        "token_count": 4912
    },
    "00465f80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00465f80(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    bool bVar6;\n    bool bVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    char cVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    bool bVar14;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    iVar5 = arg_18h;\n    uVar13 = 8;\n    iVar3 = fcn.0044e1c0(arg_18h + 0x6c);\n    uVar4 = *(iVar5 + 0xc) & 0x4a;\n    if ((uVar4 != 0x40) && (uVar13 = 10,  uVar4 == 8)) {\n        uVar13 = 0x10;\n    }\n    bVar6 = arg_8h != NULL && arg_ch == 0xffffffff;\n    bVar14 = arg_ch == 0xffffffff;\n    if (((bVar6) && (bVar14 = false,  arg_8h[3] <= arg_8h[2])) && (iVar5 = (**(*arg_8h + 0x24))(),  iVar5 == -1)) {\n        arg_8h = NULL;\n        bVar14 = bVar6;\n    }\n    bVar6 = arg_10h != NULL && arg_14h == -1;\n    var_44h._0_1_ = arg_14h == -1;\n    if ((bVar6) && (var_44h._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar5 = (**(*arg_10h + 0x24))();\n        var_44h._0_1_ = false;\n        if (iVar5 == -1) {\n            arg_10h = NULL;\n            var_44h._0_1_ = bVar6;\n        }\n    }\n    if (var_44h == bVar14) {\n        bVar14 = false;\n        uVar12 = 0;\n        var_50h._3_1_ = 1;\n        var_44h = 0;\n        bVar6 = false;\n    }\n    else {\n        uVar12 = arg_ch;\n        if ((arg_ch == 0xffffffff) && (arg_8h != NULL)) {\n            if (arg_8h[3] <= arg_8h[2]) {\n                uVar12 = (**(*arg_8h + 0x24))();\n                if (uVar12 == 0xffffffff) {\n                    arg_8h = NULL;\n                    uVar12 = 0xffffffff;\n                }\n                goto code_r0x00466010;\n            }\n            uVar1 = *arg_8h[2];\n            uVar12 = uVar1;\n            cVar2 = *(iVar3 + 0x10);\n            bVar14 = *(iVar3 + 0x4a) == uVar1;\n            if (!bVar14) goto code_r0x00466020;\ncode_r0x00466029:\n            if (((cVar2 == '\\0') || (*(iVar3 + 0x25) != uVar12)) && (*(iVar3 + 0x24) != uVar12)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                var_50h._3_1_ = fcn.00450a90(&arg_10h);\n                var_44h = 0;\n                bVar6 = false;\n                if (var_50h._3_1_ != 0) goto code_r0x00466080;\n                uVar12 = fcn.00450b30();\n                cVar2 = *(iVar3 + 0x10);\n            }\n        }\n        else {\ncode_r0x00466010:\n            cVar2 = *(iVar3 + 0x10);\n            bVar14 = *(iVar3 + 0x4a) == uVar12;\n            if (bVar14) goto code_r0x00466029;\ncode_r0x00466020:\n            if (*(iVar3 + 0x4b) == uVar12) goto code_r0x00466029;\n            bVar14 = false;\n        }\n        var_44h = 0;\n        bVar6 = false;\n        while (((cVar10 = uVar12,  cVar2 == '\\0' || (*(iVar3 + 0x25) != cVar10)) && (*(iVar3 + 0x24) != cVar10))) {\n            if (*(iVar3 + 0x4e) == cVar10) {\n                bVar7 = uVar13 == 10 | bVar6 ^ 1U;\n                if (!bVar7) goto code_r0x0046623a;\n                bVar6 = uVar4 == 0 || uVar13 == 8;\n                if (uVar4 != 0 && uVar13 != 8) {\n                    var_44h = var_44h + 1;\n                    goto code_r0x0046626e;\n                }\n                var_44h = 0;\n                uVar13 = 8;\n                uVar11 = arg_8h[2];\n                if (arg_8h[3] <= uVar11) goto code_r0x00466310;\ncode_r0x0046627d:\n                arg_8h[2] = uVar11 + 1;\ncode_r0x0046628a:\n                var_48h._0_1_ = false;\n                if ((arg_8h[3] <= arg_8h[2]) && (iVar5 = (**(*arg_8h + 0x24))(),  iVar5 == -1)) {\n                    arg_8h = NULL;\n                    var_48h._0_1_ = true;\n                }\n            }\n            else {\n                if (!bVar6) break;\ncode_r0x0046623a:\n                if ((*(iVar3 + 0x4c) != cVar10) && (*(iVar3 + 0x4d) != cVar10)) {\n                    var_50h._3_1_ = 0;\n                    bVar6 = true;\n                    goto code_r0x00466080;\n                }\n                var_50h._3_1_ = uVar13 == 0x10 || uVar4 == 0;\n                if (uVar13 != 0x10 && uVar4 != 0) {\n                    bVar6 = true;\n                    goto code_r0x0046608c;\n                }\n                var_44h = 0;\n                uVar13 = 0x10;\n                bVar7 = false;\ncode_r0x0046626e:\n                uVar11 = arg_8h[2];\n                bVar6 = bVar7;\n                if (uVar11 < arg_8h[3]) goto code_r0x0046627d;\ncode_r0x00466310:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x0046628a;\n                var_48h._0_1_ = true;\n            }\n            arg_ch = 0xffffffff;\n            bVar9 = arg_10h != NULL && arg_14h == -1;\n            bVar7 = arg_14h == -1;\n            if ((bVar9) && (bVar7 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar5 = (**(*arg_10h + 0x24))();\n                bVar7 = false;\n                if (iVar5 == -1) {\n                    arg_10h = NULL;\n                    bVar7 = bVar9;\n                }\n            }\n            if (var_48h._0_1_ == bVar7) {\n                var_50h._3_1_ = 1;\n                goto code_r0x00466080;\n            }\n            uVar12 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar12 = *arg_8h[2];\n                }\n                else {\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar12 = 0xffffffff;\n                    }\n                }\n            }\n            if (!bVar6) break;\n            cVar2 = *(iVar3 + 0x10);\n        }\n        var_50h._3_1_ = 0;\n    }\ncode_r0x00466080:\n    var_4ch = 0x16;\n    if (uVar13 != 0x10) {\ncode_r0x0046608c:\n        var_4ch = uVar13;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (*(iVar3 + 0x10) != '\\0') {\n        fcn.004b2380(0x20);\n    }\n    uVar4 = 0xffffffff / uVar13;\n    var_50h._2_1_ = *(iVar3 + 100);\n    if (var_50h._2_1_ == 0) {\n        if (var_50h._3_1_ == 0) {\n            var_50h._1_1_ = 0;\n            var_48h = 0;\ncode_r0x004660e4:\n            cVar2 = uVar12;\n            iVar5 = cVar2;\n            if (var_4ch < 0xb) {\n                if ((cVar2 < '0') || (var_4ch + '0' <= cVar2)) goto code_r0x00466383;\n            }\n            else if (9 < cVar2 - 0x30U) goto code_r0x0046636c;\n            uVar12 = iVar5 - 0x30;\ncode_r0x00466106:\n            if (uVar12 != 0xffffffff) {\n                do {\n                    if (uVar4 < var_48h) {\n                        var_50h._1_1_ = 1;\n                        uVar12 = arg_8h[2];\n                        if (arg_8h[3] <= uVar12) goto code_r0x00466415;\ncode_r0x00466142:\n                        arg_8h[2] = uVar12 + 1;\ncode_r0x0046614f:\n                        var_50h._2_1_ = false;\n                        if (arg_8h[3] <= arg_8h[2]) {\n                            iVar5 = (**(*arg_8h + 0x24))();\n                            var_50h._2_1_ = false;\n                            if (iVar5 == -1) {\n                                arg_8h = NULL;\n                                var_50h._2_1_ = true;\n                            }\n                        }\n                    }\n                    else {\n                        uVar11 = var_48h * uVar13;\n                        var_48h = uVar12 + uVar11;\n                        var_50h._1_1_ = var_50h._1_1_ | ~uVar12 < uVar11;\n                        uVar12 = arg_8h[2];\n                        var_44h = var_44h + 1;\n                        if (uVar12 < arg_8h[3]) goto code_r0x00466142;\ncode_r0x00466415:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0046614f;\n                        var_50h._2_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar9 = arg_10h != NULL && arg_14h == -1;\n                    bVar7 = arg_14h == -1;\n                    if ((bVar9) && (bVar7 = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar5 = (**(*arg_10h + 0x24))();\n                        bVar7 = false;\n                        if (iVar5 == -1) {\n                            arg_10h = NULL;\n                            bVar7 = bVar9;\n                        }\n                    }\n                    if (var_50h._2_1_ == bVar7) {\n                        var_50h._2_1_ = 1;\n                        goto code_r0x00466186;\n                    }\n                    uVar12 = arg_ch;\n                    if (arg_8h == NULL) goto code_r0x004660e4;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar12 = *arg_8h[2];\n                        goto code_r0x004660e4;\n                    }\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 != 0xffffffff) goto code_r0x004660e4;\n                    arg_8h = NULL;\n                    if (var_4ch < 0xb) break;\n                    cVar2 = -1;\n                    iVar5 = -1;\ncode_r0x0046636c:\n                    if (5 < cVar2 + 0x9fU) goto code_r0x004664d0;\n                    uVar12 = iVar5 - 0x57;\n                    if (uVar12 == 0xffffffff) break;\n                } while( true );\n            }\n            goto code_r0x00466383;\n        }\n        var_50h._2_1_ = var_50h._3_1_;\n        var_50h._1_1_ = 0;\n        var_50h._3_1_ = 0;\n        var_48h = 0;\n    }\n    else {\n        if (var_50h._3_1_ == 0) {\n            var_50h._1_1_ = 0;\n            var_48h = 0;\ncode_r0x0046653b:\n            uVar11 = var_2ch;\n            cVar2 = uVar12;\n            if ((*(iVar3 + 0x10) == 0) || (*(iVar3 + 0x25) != cVar2)) {\n                if ((cVar2 == *(iVar3 + 0x24)) ||\n                   (iVar5 = sub.msvcrt.dll_memchr(iVar3 + 0x4e, cVar2, var_4ch),  iVar5 == 0)) goto code_r0x00466383;\n                uVar12 = iVar5 - (iVar3 + 0x4e);\n                if (0xf < uVar12) {\n                    uVar12 = uVar12 - 6;\n                }\n                if (var_48h <= uVar4) {\n                    uVar11 = var_48h * uVar13;\n                    var_48h = uVar12 + uVar11;\n                    var_50h._1_1_ = var_50h._1_1_ | ~uVar12 < uVar11;\n                    var_44h = var_44h + 1;\n                    goto code_r0x004665a2;\n                }\n                uVar12 = arg_8h[2];\n                var_50h._1_1_ = var_50h._2_1_;\n                if (arg_8h[3] <= uVar12) goto code_r0x00466602;\ncode_r0x004665ad:\n                arg_8h[2] = uVar12 + 1;\ncode_r0x004665ba:\n                var_5ch._0_1_ = 0;\n                if (arg_8h[3] <= arg_8h[2]) {\n                    iVar5 = (**(*arg_8h + 0x24))();\n                    var_5ch._0_1_ = 0;\n                    if (iVar5 == -1) {\n                        arg_8h = NULL;\n                        var_5ch._0_1_ = var_50h._2_1_;\n                    }\n                }\n            }\n            else {\n                if (var_44h == 0) {\n                    var_50h._2_1_ = 0;\n                    var_50h._3_1_ = *(iVar3 + 0x10);\n                    goto code_r0x00466186;\n                }\n                uVar12 = var_2ch + 1;\n                uVar8 = 0xf;\n                if (stack0xffffffcc != &var_28h) {\n                    uVar8 = var_28h;\n                }\n                if (uVar8 < uVar12) {\n                    fcn.004b26d0(var_2ch, 0, 0, 1);\n                }\n                var_44h = 0;\n                *(stack0xffffffcc + uVar11) = var_44h;\n                *(stack0xffffffcc + uVar12) = 0;\n                var_2ch = uVar12;\ncode_r0x004665a2:\n                uVar12 = arg_8h[2];\n                if (uVar12 < arg_8h[3]) goto code_r0x004665ad;\ncode_r0x00466602:\n                (**(*arg_8h + 0x28))();\n                var_5ch._0_1_ = var_50h._2_1_;\n                if (arg_8h != NULL) goto code_r0x004665ba;\n            }\n            arg_ch = 0xffffffff;\n            bVar9 = arg_10h != NULL && arg_14h == -1;\n            bVar7 = arg_14h == -1;\n            if ((bVar9) && (bVar7 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar5 = (**(*arg_10h + 0x24))();\n                bVar7 = false;\n                if (iVar5 == -1) {\n                    arg_10h = NULL;\n                    bVar7 = bVar9;\n                }\n            }\n            if (var_5ch == bVar7) goto code_r0x00466186;\n            uVar12 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar12 = *arg_8h[2];\n                }\n                else {\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar12 = 0xffffffff;\n                    }\n                }\n            }\n            goto code_r0x0046653b;\n        }\n        var_48h = 0;\n        var_50h._1_1_ = 0;\n        var_50h._2_1_ = var_50h._3_1_;\n        var_50h._3_1_ = 0;\n    }\ncode_r0x00466186:\n    if (var_2ch != 0) goto code_r0x00466392;\ncode_r0x0046618e:\n    if ((var_44h != 0) || (bVar6)) {\ncode_r0x004663d7:\n        if (var_50h._3_1_ == 0) {\n            if (var_50h._1_1_ == 0) {\n                uVar4 = -var_48h;\n                if (!bVar14) {\n                    uVar4 = var_48h;\n                }\n                *arg_20h = uVar4;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x004661b5;\n        }\n    }\ncode_r0x004661a3:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x004661b5:\n    if (var_50h._2_1_ != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != &var_28h) {\n        fcn.004c33f0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x004664d0:\n    if (5 < cVar2 + 0xbfU) goto code_r0x00466383;\n    uVar12 = iVar5 - 0x37;\n    goto code_r0x00466106;\ncode_r0x00466383:\n    var_50h._2_1_ = 0;\n    if (var_2ch == 0) goto code_r0x0046618e;\ncode_r0x00466392:\n    fcn.004b2860(var_44h);\n    cVar2 = fcn.004be6e0(*(iVar3 + 8), *(iVar3 + 0xc), &var_31h + 1);\n    if (cVar2 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar6) || ((var_44h | var_2ch) != 0)) goto code_r0x004663d7;\n    goto code_r0x004661a3;\n}\n",
        "token_count": 5012
    },
    "004669b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.004669b0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint16_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    int32_t iVar9;\n    bool bVar10;\n    bool bVar11;\n    char cVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    iVar9 = arg_18h;\n    uVar14 = 8;\n    iVar5 = fcn.0044e1c0(arg_18h + 0x6c);\n    uVar6 = *(iVar9 + 0xc) & 0x4a;\n    if ((uVar6 != 0x40) && (uVar14 = 10,  uVar6 == 8)) {\n        uVar14 = 0x10;\n    }\n    bVar8 = arg_8h != NULL && arg_ch == 0xffffffff;\n    bVar10 = arg_ch == 0xffffffff;\n    if (((bVar8) && (bVar10 = false,  arg_8h[3] <= arg_8h[2])) && (iVar9 = (**(*arg_8h + 0x24))(),  iVar9 == -1)) {\n        arg_8h = NULL;\n        bVar10 = bVar8;\n    }\n    bVar8 = arg_10h != NULL && arg_14h == -1;\n    var_44h._0_1_ = arg_14h == -1;\n    if ((bVar8) && (var_44h._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar9 = (**(*arg_10h + 0x24))();\n        var_44h._0_1_ = false;\n        if (iVar9 == -1) {\n            arg_10h = NULL;\n            var_44h._0_1_ = bVar8;\n        }\n    }\n    if (var_44h == bVar10) {\n        bVar8 = false;\n        uVar13 = 0;\n        var_50h._3_1_ = 1;\n        var_44h = 0;\n        bVar10 = false;\n    }\n    else {\n        uVar13 = arg_ch;\n        if ((arg_ch == 0xffffffff) && (arg_8h != NULL)) {\n            if (arg_8h[3] <= arg_8h[2]) {\n                uVar13 = (**(*arg_8h + 0x24))();\n                if (uVar13 == 0xffffffff) {\n                    arg_8h = NULL;\n                    uVar13 = 0xffffffff;\n                }\n                goto code_r0x00466a40;\n            }\n            uVar1 = *arg_8h[2];\n            uVar13 = uVar1;\n            cVar3 = *(iVar5 + 0x10);\n            bVar8 = *(iVar5 + 0x4a) == uVar1;\n            if (!bVar8) goto code_r0x00466a50;\ncode_r0x00466a59:\n            if (((cVar3 == '\\0') || (*(iVar5 + 0x25) != uVar13)) && (*(iVar5 + 0x24) != uVar13)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                var_50h._3_1_ = fcn.00450a90(&arg_10h);\n                var_44h = 0;\n                bVar10 = false;\n                if (var_50h._3_1_ != 0) goto code_r0x00466ab0;\n                uVar13 = fcn.00450b30();\n                cVar3 = *(iVar5 + 0x10);\n            }\n        }\n        else {\ncode_r0x00466a40:\n            cVar3 = *(iVar5 + 0x10);\n            bVar8 = *(iVar5 + 0x4a) == uVar13;\n            if (bVar8) goto code_r0x00466a59;\ncode_r0x00466a50:\n            if (*(iVar5 + 0x4b) == uVar13) goto code_r0x00466a59;\n            bVar8 = false;\n        }\n        var_44h = 0;\n        bVar10 = false;\n        while (((cVar12 = uVar13,  cVar3 == '\\0' || (*(iVar5 + 0x25) != cVar12)) && (*(iVar5 + 0x24) != cVar12))) {\n            if (*(iVar5 + 0x4e) == cVar12) {\n                bVar2 = uVar14 == 10 | bVar10 ^ 1U;\n                if (!bVar2) goto code_r0x00466c6a;\n                bVar10 = uVar6 == 0 || uVar14 == 8;\n                if (uVar6 != 0 && uVar14 != 8) {\n                    var_44h = var_44h + 1;\n                    goto code_r0x00466c9e;\n                }\n                var_44h = 0;\n                uVar14 = 8;\n                uVar7 = arg_8h[2];\n                if (arg_8h[3] <= uVar7) goto code_r0x00466d40;\ncode_r0x00466cad:\n                arg_8h[2] = uVar7 + 1;\ncode_r0x00466cba:\n                var_48h._0_1_ = false;\n                if ((arg_8h[3] <= arg_8h[2]) && (iVar9 = (**(*arg_8h + 0x24))(),  iVar9 == -1)) {\n                    arg_8h = NULL;\n                    var_48h._0_1_ = true;\n                }\n            }\n            else {\n                if (!bVar10) break;\ncode_r0x00466c6a:\n                if ((*(iVar5 + 0x4c) != cVar12) && (*(iVar5 + 0x4d) != cVar12)) {\n                    var_50h._3_1_ = 0;\n                    bVar10 = true;\n                    goto code_r0x00466ab0;\n                }\n                var_50h._3_1_ = uVar14 == 0x10 || uVar6 == 0;\n                if (uVar14 != 0x10 && uVar6 != 0) {\n                    bVar10 = true;\n                    goto code_r0x00466abc;\n                }\n                var_44h = 0;\n                uVar14 = 0x10;\n                bVar2 = false;\ncode_r0x00466c9e:\n                uVar7 = arg_8h[2];\n                bVar10 = bVar2;\n                if (uVar7 < arg_8h[3]) goto code_r0x00466cad;\ncode_r0x00466d40:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x00466cba;\n                var_48h._0_1_ = true;\n            }\n            arg_ch = 0xffffffff;\n            bVar2 = arg_10h != NULL && arg_14h == -1;\n            var_50h._2_1_ = arg_14h == -1;\n            if ((bVar2) && (var_50h._2_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n                var_50h._2_1_ = false;\n                iVar9 = (**(*arg_10h + 0x24))();\n                if (iVar9 == -1) {\n                    arg_10h = NULL;\n                    var_50h._2_1_ = bVar2;\n                }\n            }\n            if (var_48h._0_1_ == var_50h._2_1_) {\n                var_50h._3_1_ = 1;\n                goto code_r0x00466ab0;\n            }\n            uVar13 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar13 = *arg_8h[2];\n                }\n                else {\n                    uVar13 = (**(*arg_8h + 0x24))();\n                    if (uVar13 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar13 = 0xffffffff;\n                    }\n                }\n            }\n            if (!bVar10) break;\n            cVar3 = *(iVar5 + 0x10);\n        }\n        var_50h._3_1_ = 0;\n    }\ncode_r0x00466ab0:\n    var_4ch = 0x16;\n    if (uVar14 != 0x10) {\ncode_r0x00466abc:\n        var_4ch = uVar14;\n    }\n    uVar1 = var_50h._3_1_;\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (*(iVar5 + 0x10) != '\\0') {\n        fcn.004b2380(0x20);\n    }\n    var_50h._2_1_ = *(iVar5 + 100);\n    var_54h._0_2_ = 0xffff / uVar14;\n    if (var_50h._2_1_ == 0) {\n        if (var_50h._3_1_ == 0) {\n            var_50h._1_1_ = 0;\n            var_48h = 0;\ncode_r0x00466b12:\n            cVar3 = uVar13;\n            iVar9 = cVar3;\n            if (var_4ch < 0xb) {\n                if ((cVar3 < '0') || (var_4ch + '0' <= cVar3)) goto code_r0x00466db2;\n            }\n            else if (9 < cVar3 - 0x30U) goto code_r0x00466d9b;\n            iVar9 = iVar9 + -0x30;\ncode_r0x00466b34:\n            if (iVar9 != -1) {\n                do {\n                    if (var_54h < var_48h) {\n                        var_50h._1_1_ = 1;\n                        uVar6 = arg_8h[2];\n                        if (arg_8h[3] <= uVar6) goto code_r0x00466e46;\ncode_r0x00466b79:\n                        arg_8h[2] = uVar6 + 1;\ncode_r0x00466b86:\n                        var_50h._2_1_ = false;\n                        if (arg_8h[3] <= arg_8h[2]) {\n                            iVar9 = (**(*arg_8h + 0x24))();\n                            var_50h._2_1_ = false;\n                            if (iVar9 == -1) {\n                                arg_8h = NULL;\n                                var_50h._2_1_ = true;\n                            }\n                        }\n                    }\n                    else {\n                        var_50h._1_1_ = var_50h._1_1_ | 0xffff - iVar9 < (var_48h * uVar14 & 0xffff);\n                        var_48h = iVar9 + var_48h * uVar14;\n                        uVar6 = arg_8h[2];\n                        var_44h = var_44h + 1;\n                        if (uVar6 < arg_8h[3]) goto code_r0x00466b79;\ncode_r0x00466e46:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00466b86;\n                        var_50h._2_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar11 = arg_10h != NULL && arg_14h == -1;\n                    bVar2 = arg_14h == -1;\n                    if ((bVar11) && (bVar2 = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar9 = (**(*arg_10h + 0x24))();\n                        bVar2 = false;\n                        if (iVar9 == -1) {\n                            arg_10h = NULL;\n                            bVar2 = bVar11;\n                        }\n                    }\n                    if (var_50h._2_1_ == bVar2) {\n                        var_50h._2_1_ = 1;\n                        goto code_r0x00466bbd;\n                    }\n                    uVar13 = arg_ch;\n                    if (arg_8h == NULL) goto code_r0x00466b12;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar13 = *arg_8h[2];\n                        goto code_r0x00466b12;\n                    }\n                    uVar13 = (**(*arg_8h + 0x24))();\n                    if (uVar13 != 0xffffffff) goto code_r0x00466b12;\n                    arg_8h = NULL;\n                    if (var_4ch < 0xb) break;\n                    cVar3 = -1;\n                    iVar9 = -1;\ncode_r0x00466d9b:\n                    if (5 < cVar3 + 0x9fU) goto code_r0x00466f00;\n                    iVar9 = iVar9 + -0x57;\n                    if (iVar9 == -1) break;\n                } while( true );\n            }\n            goto code_r0x00466db2;\n        }\n        var_50h._2_1_ = var_50h._3_1_;\n        var_50h._1_1_ = 0;\n        var_50h._3_1_ = 0;\n        var_48h._0_2_ = 0;\n    }\n    else {\n        if (var_50h._3_1_ == 0) {\n            var_50h._1_1_ = 0;\n            var_48h = 0;\ncode_r0x00466f6a:\n            uVar6 = var_2ch;\n            cVar3 = uVar13;\n            if ((*(iVar5 + 0x10) == 0) || (*(iVar5 + 0x25) != cVar3)) {\n                if ((cVar3 == *(iVar5 + 0x24)) ||\n                   (iVar9 = sub.msvcrt.dll_memchr(iVar5 + 0x4e, cVar3, var_4ch),  iVar9 == 0)) goto code_r0x00466db2;\n                iVar9 = iVar9 - (iVar5 + 0x4e);\n                if (0xf < iVar9) {\n                    iVar9 = iVar9 + -6;\n                }\n                if (var_48h <= var_54h) {\n                    var_50h._1_1_ = var_50h._1_1_ | 0xffff - iVar9 < (var_48h * uVar14 & 0xffff);\n                    var_44h = var_44h + 1;\n                    var_48h = iVar9 + var_48h * uVar14;\n                    goto code_r0x00466fda;\n                }\n                uVar6 = arg_8h[2];\n                var_50h._1_1_ = var_50h._2_1_;\n                if (arg_8h[3] <= uVar6) goto code_r0x00467034;\ncode_r0x00466fe5:\n                arg_8h[2] = uVar6 + 1;\ncode_r0x00466ff2:\n                var_5ch._0_1_ = 0;\n                if (arg_8h[3] <= arg_8h[2]) {\n                    iVar9 = (**(*arg_8h + 0x24))();\n                    var_5ch._0_1_ = 0;\n                    if (iVar9 == -1) {\n                        arg_8h = NULL;\n                        var_5ch._0_1_ = var_50h._2_1_;\n                    }\n                }\n            }\n            else {\n                if (var_44h == 0) {\n                    var_50h._2_1_ = 0;\n                    var_50h._3_1_ = *(iVar5 + 0x10);\n                    goto code_r0x00466bbd;\n                }\n                uVar13 = var_2ch + 1;\n                uVar7 = 0xf;\n                if (stack0xffffffcc != &var_28h) {\n                    uVar7 = var_28h;\n                }\n                if (uVar7 < uVar13) {\n                    fcn.004b26d0(var_2ch, 0, 0, 1);\n                }\n                var_44h = 0;\n                *(stack0xffffffcc + uVar6) = var_44h;\n                *(stack0xffffffcc + uVar13) = 0;\n                var_2ch = uVar13;\ncode_r0x00466fda:\n                uVar6 = arg_8h[2];\n                if (uVar6 < arg_8h[3]) goto code_r0x00466fe5;\ncode_r0x00467034:\n                (**(*arg_8h + 0x28))();\n                var_5ch._0_1_ = var_50h._2_1_;\n                if (arg_8h != NULL) goto code_r0x00466ff2;\n            }\n            arg_ch = 0xffffffff;\n            bVar11 = arg_10h != NULL && arg_14h == -1;\n            bVar2 = arg_14h == -1;\n            if ((bVar11) && (bVar2 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar9 = (**(*arg_10h + 0x24))();\n                bVar2 = false;\n                if (iVar9 == -1) {\n                    arg_10h = NULL;\n                    bVar2 = bVar11;\n                }\n            }\n            if (bVar2 == var_5ch) goto code_r0x00466bbd;\n            uVar13 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar13 = *arg_8h[2];\n                }\n                else {\n                    uVar13 = (**(*arg_8h + 0x24))();\n                    if (uVar13 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar13 = 0xffffffff;\n                    }\n                }\n            }\n            goto code_r0x00466f6a;\n        }\n        var_50h._1_1_ = 0;\n        var_50h._3_1_ = 0;\n        var_50h._2_1_ = uVar1;\n        var_48h._0_2_ = 0;\n    }\ncode_r0x00466bbd:\n    if (var_2ch != 0) goto code_r0x00466dc1;\ncode_r0x00466bc5:\n    if ((var_44h != 0) || (bVar10)) {\ncode_r0x00466e06:\n        if (var_50h._3_1_ == 0) {\n            if (var_50h._1_1_ == 0) {\n                uVar4 = -var_48h;\n                if (!bVar8) {\n                    uVar4 = var_48h;\n                }\n                *arg_20h = uVar4;\n            }\n            else {\n                *arg_20h = 0xffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00466beb;\n        }\n    }\ncode_r0x00466bda:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00466beb:\n    if (var_50h._2_1_ != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != &var_28h) {\n        fcn.004c33f0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x00466f00:\n    if (5 < cVar3 + 0xbfU) goto code_r0x00466db2;\n    iVar9 = iVar9 + -0x37;\n    goto code_r0x00466b34;\ncode_r0x00466db2:\n    var_50h._2_1_ = 0;\n    if (var_2ch == 0) goto code_r0x00466bc5;\ncode_r0x00466dc1:\n    fcn.004b2860(var_44h);\n    cVar3 = fcn.004be6e0(*(iVar5 + 8), *(iVar5 + 0xc), &var_31h + 1);\n    if (cVar3 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar10) || ((var_44h | var_2ch) != 0)) goto code_r0x00466e06;\n    goto code_r0x00466bda;\n}\n",
        "token_count": 5095
    },
    "004673e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.004673e0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    uint32_t uVar9;\n    char cVar10;\n    bool bVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    ulong uVar16;\n    uint var_6dh;\n    uint32_t var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint8_t var_44h;\n    uint8_t var_43h;\n    uint8_t var_42h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_bp_ch;\n    \n    iVar6 = arg_18h;\n    uVar13 = 8;\n    iVar3 = fcn.0044e1c0(arg_18h + 0x6c);\n    uVar4 = *(iVar6 + 0xc) & 0x4a;\n    if ((uVar4 != 0x40) && (uVar13 = 0x10,  uVar4 != 8)) {\n        uVar13 = 10;\n    }\n    bVar8 = arg_8h != NULL && arg_ch == 0xffffffff;\n    bVar15 = arg_ch == 0xffffffff;\n    if (((bVar8) && (bVar15 = false,  arg_8h[3] <= arg_8h[2])) && (iVar6 = (**(*arg_8h + 0x24))(),  iVar6 == -1)) {\n        arg_8h = NULL;\n        bVar15 = bVar8;\n    }\n    bVar8 = arg_10h != NULL && arg_14h == -1;\n    var_48h._0_1_ = arg_14h == -1;\n    if ((bVar8) && (var_48h._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar6 = (**(*arg_10h + 0x24))();\n        var_48h._0_1_ = false;\n        if (iVar6 == -1) {\n            arg_10h = NULL;\n            var_48h._0_1_ = bVar8;\n        }\n    }\n    if (var_48h == bVar15) {\n        bVar8 = false;\n        uVar7 = 0;\n        var_42h = 1;\n        var_48h = 0;\n        bVar15 = false;\n    }\n    else {\n        uVar7 = arg_ch;\n        if ((arg_ch == 0xffffffff) && (arg_8h != NULL)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar7 = *arg_8h[2];\n            }\n            else {\n                uVar7 = (**(*arg_8h + 0x24))();\n                if (uVar7 == 0xffffffff) {\n                    arg_8h = NULL;\n                    uVar7 = 0xffffffff;\n                }\n            }\n        }\n        cVar2 = *(iVar3 + 0x10);\n        cVar10 = uVar7;\n        bVar8 = *(iVar3 + 0x4a) == cVar10;\n        if ((bVar8) || (*(iVar3 + 0x4b) == cVar10)) {\n            if (((cVar2 == '\\0') || (*(iVar3 + 0x25) != cVar10)) && (*(iVar3 + 0x24) != cVar10)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                var_42h = fcn.00450a90(&arg_10h);\n                var_48h = 0;\n                bVar15 = false;\n                if (var_42h != 0) goto code_r0x004674e1;\n                uVar7 = fcn.00450b30();\n                cVar2 = *(iVar3 + 0x10);\n            }\n        }\n        else {\n            bVar8 = false;\n        }\n        var_48h = 0;\n        bVar15 = false;\n        while (((cVar10 = uVar7,  cVar2 == '\\0' || (*(iVar3 + 0x25) != cVar10)) && (*(iVar3 + 0x24) != cVar10))) {\n            if (*(iVar3 + 0x4e) == cVar10) {\n                bVar1 = uVar13 == 10 | bVar15 ^ 1U;\n                if (!bVar1) goto code_r0x00467720;\n                bVar15 = uVar4 == 0 || uVar13 == 8;\n                if (uVar4 != 0 && uVar13 != 8) {\n                    var_48h = var_48h + 1;\n                    goto code_r0x00467754;\n                }\n                var_48h = 0;\n                uVar13 = 8;\n                uVar12 = arg_8h[2];\n                if (arg_8h[3] <= uVar12) {\n                    uVar13 = 8;\n                    goto code_r0x00467800;\n                }\ncode_r0x00467763:\n                arg_8h[2] = uVar12 + 1;\ncode_r0x00467770:\n                var_50h._0_1_ = false;\n                if ((arg_8h[3] <= arg_8h[2]) && (iVar6 = (**(*arg_8h + 0x24))(),  iVar6 == -1)) {\n                    arg_8h = NULL;\n                    var_50h._0_1_ = true;\n                }\n            }\n            else {\n                if (!bVar15) break;\ncode_r0x00467720:\n                if ((*(iVar3 + 0x4c) != cVar10) && (*(iVar3 + 0x4d) != cVar10)) {\n                    var_42h = 0;\n                    bVar15 = true;\n                    goto code_r0x004674e1;\n                }\n                var_42h = uVar13 == 0x10 || uVar4 == 0;\n                if (uVar13 != 0x10 && uVar4 != 0) {\n                    bVar15 = true;\n                    goto code_r0x004674ed;\n                }\n                var_48h = 0;\n                uVar13 = 0x10;\n                bVar1 = false;\ncode_r0x00467754:\n                uVar12 = arg_8h[2];\n                bVar15 = bVar1;\n                if (uVar12 < arg_8h[3]) goto code_r0x00467763;\ncode_r0x00467800:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x00467770;\n                var_50h._0_1_ = true;\n            }\n            arg_ch = 0xffffffff;\n            bVar1 = arg_10h != NULL && arg_14h == -1;\n            var_42h = arg_14h == -1;\n            if ((bVar1) && (var_42h = false,  arg_10h[3] <= arg_10h[2])) {\n                var_42h = false;\n                iVar6 = (**(*arg_10h + 0x24))();\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    var_42h = bVar1;\n                }\n            }\n            if (var_42h == var_50h._0_1_) {\n                var_42h = 1;\n                goto code_r0x004674e1;\n            }\n            uVar7 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar7 = *arg_8h[2];\n                }\n                else {\n                    uVar7 = (**(*arg_8h + 0x24))();\n                    if (uVar7 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar7 = 0xffffffff;\n                    }\n                }\n            }\n            if (!bVar15) break;\n            cVar2 = *(iVar3 + 0x10);\n        }\n        var_42h = 0;\n    }\ncode_r0x004674e1:\n    var_54h = 0x16;\n    if (uVar13 != 0x10) {\ncode_r0x004674ed:\n        var_54h = uVar13;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (*(iVar3 + 0x10) != '\\0') {\n        fcn.004b2380(0x20);\n    }\n    var_68h = 0;\n    var_64h = -0x80000000;\n    if (!bVar8) {\n        var_68h = 0xffffffff;\n        var_64h = 0x7fffffff;\n    }\n    uVar16 = fcn.004386d0(var_68h, var_64h, uVar13, 0);\n    uVar4 = uVar16 >> 0x20;\n    var_43h = *(iVar3 + 100);\n    if (var_43h == 0) {\n        if (var_42h == 0) {\n            var_44h = 0;\n            uVar12 = 0;\n            uVar14 = 0;\ncode_r0x00467590:\n            cVar2 = uVar7;\n            iVar6 = cVar2;\n            if (var_54h < 0xb) {\n                if ((cVar2 < '0') || (var_54h + '0' <= cVar2)) goto code_r0x00467872;\n            }\n            else if (9 < cVar2 - 0x30U) goto code_r0x0046785b;\n            uVar7 = iVar6 - 0x30;\ncode_r0x004675b2:\n            if (uVar7 != 0xffffffff) {\n                do {\n                    if (uVar4 < uVar14 || uVar4 - uVar14 < (uVar16 < uVar12)) {\n                        var_44h = 1;\n                        uVar7 = arg_8h[2];\n                        if (arg_8h[3] <= uVar7) goto code_r0x00467923;\ncode_r0x00467612:\n                        arg_8h[2] = uVar7 + 1;\ncode_r0x0046761f:\n                        var_43h = false;\n                        if (arg_8h[3] <= arg_8h[2]) {\n                            iVar6 = (**(*arg_8h + 0x24))();\n                            var_43h = false;\n                            if (iVar6 == -1) {\n                                arg_8h = NULL;\n                                var_43h = true;\n                            }\n                        }\n                    }\n                    else {\n                        uVar5 = uVar12 * uVar13;\n                        uVar14 = (uVar12 * uVar13 >> 0x20) + uVar13 * uVar14;\n                        uVar12 = (var_64h - (uVar7 >> 0x1f)) - (var_68h < uVar7);\n                        var_44h = var_44h | (uVar12 < uVar14 || uVar12 - uVar14 < (var_68h - uVar7 < uVar5));\n                        uVar12 = uVar5 + uVar7;\n                        uVar14 = uVar14 + (uVar7 >> 0x1f) + CARRY4(uVar5, uVar7);\n                        var_48h = var_48h + 1;\n                        uVar7 = arg_8h[2];\n                        if (uVar7 < arg_8h[3]) goto code_r0x00467612;\ncode_r0x00467923:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0046761f;\n                        var_43h = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar11 = arg_10h != NULL && arg_14h == -1;\n                    bVar1 = arg_14h == -1;\n                    if ((bVar11) && (bVar1 = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar6 = (**(*arg_10h + 0x24))();\n                        bVar1 = false;\n                        if (iVar6 == -1) {\n                            arg_10h = NULL;\n                            bVar1 = bVar11;\n                        }\n                    }\n                    if (bVar1 == var_43h) {\n                        var_43h = 1;\n                        goto code_r0x00467656;\n                    }\n                    uVar7 = arg_ch;\n                    if (arg_8h == NULL) goto code_r0x00467590;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar7 = *arg_8h[2];\n                        goto code_r0x00467590;\n                    }\n                    uVar7 = (**(*arg_8h + 0x24))();\n                    if (uVar7 != 0xffffffff) goto code_r0x00467590;\n                    arg_8h = NULL;\n                    if (var_54h < 0xb) break;\n                    cVar2 = -1;\n                    iVar6 = -1;\ncode_r0x0046785b:\n                    if (5 < cVar2 + 0x9fU) goto code_r0x004679e0;\n                    uVar7 = iVar6 - 0x57;\n                    if (uVar7 == 0xffffffff) break;\n                } while( true );\n            }\n            goto code_r0x00467872;\n        }\n        var_43h = var_42h;\n        var_44h = 0;\n        uVar12 = 0;\n        var_42h = 0;\n        uVar14 = 0;\n    }\n    else {\n        if (var_42h == 0) {\n            var_44h = 0;\n            uVar12 = 0;\n            uVar14 = 0;\ncode_r0x00467a4b:\n            uVar5 = var_2ch;\n            cVar2 = uVar7;\n            if ((*(iVar3 + 0x10) == 0) || (*(iVar3 + 0x25) != cVar2)) {\n                if ((cVar2 == *(iVar3 + 0x24)) ||\n                   (iVar6 = sub.msvcrt.dll_memchr(iVar3 + 0x4e, cVar2, var_54h),  iVar6 == 0)) goto code_r0x00467872;\n                uVar7 = iVar6 - (iVar3 + 0x4e);\n                if (0xf < uVar7) {\n                    uVar7 = uVar7 - 6;\n                }\n                if (uVar14 <= uVar4 && (uVar16 < uVar12) <= uVar4 - uVar14) {\n                    uVar5 = uVar12 * uVar13;\n                    uVar14 = (uVar12 * uVar13 >> 0x20) + uVar13 * uVar14;\n                    uVar12 = (var_64h - (uVar7 >> 0x1f)) - (var_68h < uVar7);\n                    var_44h = var_44h | (uVar12 < uVar14 || uVar12 - uVar14 < (var_68h - uVar7 < uVar5));\n                    uVar12 = uVar5 + uVar7;\n                    uVar14 = uVar14 + (uVar7 >> 0x1f) + CARRY4(uVar5, uVar7);\n                    var_48h = var_48h + 1;\n                    goto code_r0x00467ae2;\n                }\n                uVar7 = arg_8h[2];\n                var_44h = var_43h;\n                if (arg_8h[3] <= uVar7) goto code_r0x00467b42;\ncode_r0x00467aed:\n                arg_8h[2] = uVar7 + 1;\ncode_r0x00467afa:\n                var_6dh._1_1_ = 0;\n                if (arg_8h[3] <= arg_8h[2]) {\n                    iVar6 = (**(*arg_8h + 0x24))();\n                    var_6dh._1_1_ = 0;\n                    if (iVar6 == -1) {\n                        arg_8h = NULL;\n                        var_6dh._1_1_ = var_43h;\n                    }\n                }\n            }\n            else {\n                if (var_48h == 0) {\n                    var_43h = 0;\n                    var_42h = *(iVar3 + 0x10);\n                    goto code_r0x00467656;\n                }\n                uVar7 = var_2ch + 1;\n                uVar9 = 0xf;\n                if (stack0xffffffcc != &var_28h) {\n                    uVar9 = var_28h;\n                }\n                if (uVar9 < uVar7) {\n                    fcn.004b26d0(var_2ch, 0, 0, 1);\n                }\n                var_48h = 0;\n                *(stack0xffffffcc + uVar5) = var_48h;\n                *(stack0xffffffcc + uVar7) = 0;\n                var_2ch = uVar7;\ncode_r0x00467ae2:\n                uVar7 = arg_8h[2];\n                if (uVar7 < arg_8h[3]) goto code_r0x00467aed;\ncode_r0x00467b42:\n                (**(*arg_8h + 0x28))();\n                var_6dh._1_1_ = var_43h;\n                if (arg_8h != NULL) goto code_r0x00467afa;\n            }\n            arg_ch = 0xffffffff;\n            bVar11 = arg_10h != NULL && arg_14h == -1;\n            bVar1 = arg_14h == -1;\n            if ((bVar11) && (bVar1 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar6 = (**(*arg_10h + 0x24))();\n                bVar1 = false;\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    bVar1 = bVar11;\n                }\n            }\n            if (bVar1 == var_6dh._1_1_) goto code_r0x00467656;\n            uVar7 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar7 = *arg_8h[2];\n                }\n                else {\n                    uVar7 = (**(*arg_8h + 0x24))();\n                    if (uVar7 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar7 = 0xffffffff;\n                    }\n                }\n            }\n            goto code_r0x00467a4b;\n        }\n        uVar12 = 0;\n        uVar14 = 0;\n        var_44h = 0;\n        var_43h = var_42h;\n        var_42h = 0;\n    }\ncode_r0x00467656:\n    if (var_2ch != 0) goto code_r0x00467881;\ncode_r0x0046765e:\n    if ((var_48h != 0) || (bVar15)) {\ncode_r0x004678c9:\n        if (var_42h == 0) {\n            if (var_44h == 0) {\n                if (bVar8) {\n                    bVar15 = uVar12 != 0;\n                    uVar12 = -uVar12;\n                    uVar14 = -(uVar14 + bVar15);\n                }\n                *arg_20h = uVar12;\n                arg_20h[1] = uVar14;\n            }\n            else {\n                uVar4 = 0;\n                uVar13 = 0x80000000;\n                if (!bVar8) {\n                    uVar4 = 0xffffffff;\n                    uVar13 = 0x7fffffff;\n                }\n                *arg_20h = uVar4;\n                arg_20h[1] = uVar13;\n                *arg_1ch = 4;\n            }\n            goto code_r0x0046768c;\n        }\n    }\ncode_r0x00467673:\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x0046768c:\n    if (var_43h != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != &var_28h) {\n        fcn.004c33f0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x004679e0:\n    if (5 < cVar2 + 0xbfU) goto code_r0x00467872;\n    uVar7 = iVar6 - 0x37;\n    goto code_r0x004675b2;\ncode_r0x00467872:\n    var_43h = 0;\n    if (var_2ch == 0) goto code_r0x0046765e;\ncode_r0x00467881:\n    fcn.004b2860(var_48h);\n    cVar2 = fcn.004be6e0(*(iVar3 + 8), *(iVar3 + 0xc), &var_31h + 1);\n    if (cVar2 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar15) || ((var_48h | var_2ch) != 0)) goto code_r0x004678c9;\n    goto code_r0x00467673;\n}\n",
        "token_count": 5266
    },
    "00467ee0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00467ee0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    uint32_t uVar9;\n    char cVar10;\n    bool bVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    ulong uVar16;\n    uint var_65h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint8_t var_44h;\n    uint8_t var_43h;\n    uint8_t var_42h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_bp_ch;\n    \n    iVar6 = arg_18h;\n    uVar13 = 8;\n    iVar3 = fcn.0044e1c0(arg_18h + 0x6c);\n    uVar4 = *(iVar6 + 0xc) & 0x4a;\n    if ((uVar4 != 0x40) && (uVar13 = 0x10,  uVar4 != 8)) {\n        uVar13 = 10;\n    }\n    bVar8 = arg_8h != NULL && arg_ch == 0xffffffff;\n    bVar15 = arg_ch == 0xffffffff;\n    if (((bVar8) && (bVar15 = false,  arg_8h[3] <= arg_8h[2])) && (iVar6 = (**(*arg_8h + 0x24))(),  iVar6 == -1)) {\n        arg_8h = NULL;\n        bVar15 = bVar8;\n    }\n    bVar8 = arg_10h != NULL && arg_14h == -1;\n    var_48h._0_1_ = arg_14h == -1;\n    if ((bVar8) && (var_48h._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar6 = (**(*arg_10h + 0x24))();\n        var_48h._0_1_ = false;\n        if (iVar6 == -1) {\n            arg_10h = NULL;\n            var_48h._0_1_ = bVar8;\n        }\n    }\n    if (var_48h == bVar15) {\n        bVar8 = false;\n        uVar7 = 0;\n        var_42h = 1;\n        var_48h = 0;\n        bVar15 = false;\n    }\n    else {\n        uVar7 = arg_ch;\n        if ((arg_ch == 0xffffffff) && (arg_8h != NULL)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar7 = *arg_8h[2];\n            }\n            else {\n                uVar7 = (**(*arg_8h + 0x24))();\n                if (uVar7 == 0xffffffff) {\n                    arg_8h = NULL;\n                    uVar7 = 0xffffffff;\n                }\n            }\n        }\n        cVar2 = *(iVar3 + 0x10);\n        cVar10 = uVar7;\n        bVar8 = *(iVar3 + 0x4a) == cVar10;\n        if ((bVar8) || (*(iVar3 + 0x4b) == cVar10)) {\n            if (((cVar2 == '\\0') || (*(iVar3 + 0x25) != cVar10)) && (*(iVar3 + 0x24) != cVar10)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                var_42h = fcn.00450a90(&arg_10h);\n                var_48h = 0;\n                bVar15 = false;\n                if (var_42h != 0) goto code_r0x00467fe1;\n                uVar7 = fcn.00450b30();\n                cVar2 = *(iVar3 + 0x10);\n            }\n        }\n        else {\n            bVar8 = false;\n        }\n        var_48h = 0;\n        bVar15 = false;\n        while (((cVar10 = uVar7,  cVar2 == '\\0' || (*(iVar3 + 0x25) != cVar10)) && (*(iVar3 + 0x24) != cVar10))) {\n            if (*(iVar3 + 0x4e) == cVar10) {\n                bVar1 = uVar13 == 10 | bVar15 ^ 1U;\n                if (!bVar1) goto code_r0x004681f0;\n                bVar15 = uVar4 == 0 || uVar13 == 8;\n                if (uVar4 != 0 && uVar13 != 8) {\n                    var_48h = var_48h + 1;\n                    goto code_r0x00468224;\n                }\n                var_48h = 0;\n                uVar13 = 8;\n                uVar12 = arg_8h[2];\n                if (arg_8h[3] <= uVar12) {\n                    uVar13 = 8;\n                    goto code_r0x004682d0;\n                }\ncode_r0x00468233:\n                arg_8h[2] = uVar12 + 1;\ncode_r0x00468240:\n                var_50h._0_1_ = false;\n                if ((arg_8h[3] <= arg_8h[2]) && (iVar6 = (**(*arg_8h + 0x24))(),  iVar6 == -1)) {\n                    arg_8h = NULL;\n                    var_50h._0_1_ = true;\n                }\n            }\n            else {\n                if (!bVar15) break;\ncode_r0x004681f0:\n                if ((*(iVar3 + 0x4c) != cVar10) && (*(iVar3 + 0x4d) != cVar10)) {\n                    var_42h = 0;\n                    bVar15 = true;\n                    goto code_r0x00467fe1;\n                }\n                var_42h = uVar13 == 0x10 || uVar4 == 0;\n                if (uVar13 != 0x10 && uVar4 != 0) {\n                    bVar15 = true;\n                    goto code_r0x00467fed;\n                }\n                var_48h = 0;\n                uVar13 = 0x10;\n                bVar1 = false;\ncode_r0x00468224:\n                uVar12 = arg_8h[2];\n                bVar15 = bVar1;\n                if (uVar12 < arg_8h[3]) goto code_r0x00468233;\ncode_r0x004682d0:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x00468240;\n                var_50h._0_1_ = true;\n            }\n            arg_ch = 0xffffffff;\n            bVar1 = arg_10h != NULL && arg_14h == -1;\n            var_42h = arg_14h == -1;\n            if ((bVar1) && (var_42h = false,  arg_10h[3] <= arg_10h[2])) {\n                var_42h = false;\n                iVar6 = (**(*arg_10h + 0x24))();\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    var_42h = bVar1;\n                }\n            }\n            if (var_50h._0_1_ == var_42h) {\n                var_42h = 1;\n                goto code_r0x00467fe1;\n            }\n            uVar7 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar7 = *arg_8h[2];\n                }\n                else {\n                    uVar7 = (**(*arg_8h + 0x24))();\n                    if (uVar7 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar7 = 0xffffffff;\n                    }\n                }\n            }\n            if (!bVar15) break;\n            cVar2 = *(iVar3 + 0x10);\n        }\n        var_42h = 0;\n    }\ncode_r0x00467fe1:\n    var_54h = 0x16;\n    if (uVar13 != 0x10) {\ncode_r0x00467fed:\n        var_54h = uVar13;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (*(iVar3 + 0x10) != '\\0') {\n        fcn.004b2380(0x20);\n    }\n    uVar16 = fcn.004386d0(0xffffffff, 0xffffffff, uVar13, 0);\n    uVar4 = uVar16 >> 0x20;\n    var_43h = *(iVar3 + 100);\n    if (var_43h == 0) {\n        if (var_42h == 0) {\n            var_44h = 0;\n            uVar12 = 0;\n            uVar14 = 0;\ncode_r0x00468070:\n            cVar2 = uVar7;\n            iVar6 = cVar2;\n            if (var_54h < 0xb) {\n                if ((cVar2 < '0') || (var_54h + '0' <= cVar2)) goto code_r0x00468342;\n            }\n            else if (9 < cVar2 - 0x30U) goto code_r0x0046832b;\n            uVar7 = iVar6 - 0x30;\ncode_r0x00468092:\n            if (uVar7 != 0xffffffff) {\n                do {\n                    if (uVar4 < uVar14 || uVar4 - uVar14 < (uVar16 < uVar12)) {\n                        var_44h = 1;\n                        uVar7 = arg_8h[2];\n                        if (arg_8h[3] <= uVar7) goto code_r0x004683e3;\ncode_r0x004680ee:\n                        arg_8h[2] = uVar7 + 1;\ncode_r0x004680fb:\n                        var_43h = false;\n                        if (arg_8h[3] <= arg_8h[2]) {\n                            iVar6 = (**(*arg_8h + 0x24))();\n                            var_43h = false;\n                            if (iVar6 == -1) {\n                                arg_8h = NULL;\n                                var_43h = true;\n                            }\n                        }\n                    }\n                    else {\n                        uVar5 = uVar12 * uVar13;\n                        uVar14 = (uVar12 * uVar13 >> 0x20) + uVar13 * uVar14;\n                        uVar12 = ~(uVar7 >> 0x1f);\n                        var_44h = var_44h | (uVar12 < uVar14 || uVar12 - uVar14 < (~uVar7 < uVar5));\n                        uVar12 = uVar7 + uVar5;\n                        uVar14 = (uVar7 >> 0x1f) + uVar14 + CARRY4(uVar7, uVar5);\n                        var_48h = var_48h + 1;\n                        uVar7 = arg_8h[2];\n                        if (uVar7 < arg_8h[3]) goto code_r0x004680ee;\ncode_r0x004683e3:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x004680fb;\n                        var_43h = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar11 = arg_10h != NULL && arg_14h == -1;\n                    bVar1 = arg_14h == -1;\n                    if ((bVar11) && (bVar1 = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar6 = (**(*arg_10h + 0x24))();\n                        bVar1 = false;\n                        if (iVar6 == -1) {\n                            arg_10h = NULL;\n                            bVar1 = bVar11;\n                        }\n                    }\n                    if (var_43h == bVar1) {\n                        var_43h = 1;\n                        goto code_r0x00468132;\n                    }\n                    uVar7 = arg_ch;\n                    if (arg_8h == NULL) goto code_r0x00468070;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar7 = *arg_8h[2];\n                        goto code_r0x00468070;\n                    }\n                    uVar7 = (**(*arg_8h + 0x24))();\n                    if (uVar7 != 0xffffffff) goto code_r0x00468070;\n                    arg_8h = NULL;\n                    if (var_54h < 0xb) break;\n                    cVar2 = -1;\n                    iVar6 = -1;\ncode_r0x0046832b:\n                    if (5 < cVar2 + 0x9fU) goto code_r0x004684a0;\n                    uVar7 = iVar6 - 0x57;\n                    if (uVar7 == 0xffffffff) break;\n                } while( true );\n            }\n            goto code_r0x00468342;\n        }\n        var_43h = var_42h;\n        var_44h = 0;\n        uVar12 = 0;\n        var_42h = 0;\n        uVar14 = 0;\n    }\n    else {\n        if (var_42h == 0) {\n            var_44h = 0;\n            uVar12 = 0;\n            uVar14 = 0;\ncode_r0x0046850b:\n            uVar5 = var_2ch;\n            cVar2 = uVar7;\n            if ((*(iVar3 + 0x10) == 0) || (*(iVar3 + 0x25) != cVar2)) {\n                if ((cVar2 == *(iVar3 + 0x24)) ||\n                   (iVar6 = sub.msvcrt.dll_memchr(iVar3 + 0x4e, cVar2, var_54h),  iVar6 == 0)) goto code_r0x00468342;\n                uVar7 = iVar6 - (iVar3 + 0x4e);\n                if (0xf < uVar7) {\n                    uVar7 = uVar7 - 6;\n                }\n                if (uVar14 <= uVar4 && (uVar16 < uVar12) <= uVar4 - uVar14) {\n                    uVar5 = uVar12 * uVar13;\n                    uVar14 = (uVar12 * uVar13 >> 0x20) + uVar13 * uVar14;\n                    uVar12 = ~(uVar7 >> 0x1f);\n                    var_44h = var_44h | (uVar12 < uVar14 || uVar12 - uVar14 < (~uVar7 < uVar5));\n                    uVar12 = uVar5 + uVar7;\n                    uVar14 = uVar14 + (uVar7 >> 0x1f) + CARRY4(uVar5, uVar7);\n                    var_48h = var_48h + 1;\n                    goto code_r0x0046859a;\n                }\n                uVar7 = arg_8h[2];\n                var_44h = var_43h;\n                if (arg_8h[3] <= uVar7) goto code_r0x004685f4;\ncode_r0x004685a5:\n                arg_8h[2] = uVar7 + 1;\ncode_r0x004685b2:\n                var_65h._1_1_ = 0;\n                if (arg_8h[3] <= arg_8h[2]) {\n                    iVar6 = (**(*arg_8h + 0x24))();\n                    var_65h._1_1_ = 0;\n                    if (iVar6 == -1) {\n                        arg_8h = NULL;\n                        var_65h._1_1_ = var_43h;\n                    }\n                }\n            }\n            else {\n                if (var_48h == 0) {\n                    var_43h = 0;\n                    var_42h = *(iVar3 + 0x10);\n                    goto code_r0x00468132;\n                }\n                uVar7 = var_2ch + 1;\n                uVar9 = 0xf;\n                if (stack0xffffffcc != &var_28h) {\n                    uVar9 = var_28h;\n                }\n                if (uVar9 < uVar7) {\n                    fcn.004b26d0(var_2ch, 0, 0, 1);\n                }\n                var_48h = 0;\n                *(stack0xffffffcc + uVar5) = var_48h;\n                *(stack0xffffffcc + uVar7) = 0;\n                var_2ch = uVar7;\ncode_r0x0046859a:\n                uVar7 = arg_8h[2];\n                if (uVar7 < arg_8h[3]) goto code_r0x004685a5;\ncode_r0x004685f4:\n                (**(*arg_8h + 0x28))();\n                var_65h._1_1_ = var_43h;\n                if (arg_8h != NULL) goto code_r0x004685b2;\n            }\n            arg_ch = 0xffffffff;\n            bVar11 = arg_10h != NULL && arg_14h == -1;\n            bVar1 = arg_14h == -1;\n            if ((bVar11) && (bVar1 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar6 = (**(*arg_10h + 0x24))();\n                bVar1 = false;\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    bVar1 = bVar11;\n                }\n            }\n            if (var_65h._1_1_ == bVar1) goto code_r0x00468132;\n            uVar7 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar7 = *arg_8h[2];\n                }\n                else {\n                    uVar7 = (**(*arg_8h + 0x24))();\n                    if (uVar7 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar7 = 0xffffffff;\n                    }\n                }\n            }\n            goto code_r0x0046850b;\n        }\n        uVar12 = 0;\n        uVar14 = 0;\n        var_44h = 0;\n        var_43h = var_42h;\n        var_42h = 0;\n    }\ncode_r0x00468132:\n    if (var_2ch != 0) goto code_r0x00468351;\ncode_r0x0046813a:\n    if ((var_48h != 0) || (bVar15)) {\ncode_r0x00468399:\n        if (var_42h == 0) {\n            if (var_44h == 0) {\n                if (bVar8) {\n                    bVar15 = uVar12 != 0;\n                    uVar12 = -uVar12;\n                    uVar14 = -(uVar14 + bVar15);\n                }\n                *arg_20h = uVar12;\n                arg_20h[1] = uVar14;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                arg_20h[1] = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00468168;\n        }\n    }\ncode_r0x0046814f:\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x00468168:\n    if (var_43h != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != &var_28h) {\n        fcn.004c33f0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x004684a0:\n    if (5 < cVar2 + 0xbfU) goto code_r0x00468342;\n    uVar7 = iVar6 - 0x37;\n    goto code_r0x00468092;\ncode_r0x00468342:\n    var_43h = 0;\n    if (var_2ch == 0) goto code_r0x0046813a;\ncode_r0x00468351:\n    fcn.004b2860(var_48h);\n    cVar2 = fcn.004be6e0(*(iVar3 + 8), *(iVar3 + 0xc), &var_31h + 1);\n    if (cVar2 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar15) || ((var_48h | var_2ch) != 0)) goto code_r0x00468399;\n    goto code_r0x0046814f;\n}\n",
        "token_count": 5102
    },
    "00468990": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00468990(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    uint8_t uVar4;\n    char cVar5;\n    char cVar6;\n    bool bVar7;\n    char cVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    uint var_50h;\n    uint var_4ch;\n    uint8_t var_45h;\n    uint *var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar12 = arg_18h;\n    iVar9 = fcn.0044e1c0(arg_18h + 0x6c);\n    uVar10 = *(iVar12 + 0xc) & 0x4a;\n    if (uVar10 == 0x40) {\n        var_38h = 8;\ncode_r0x004689d0:\n        cVar5 = fcn.00450a90(&arg_10h);\n        if (cVar5 == '\\0') {\ncode_r0x004689ef:\n            var_44h = &arg_10h;\n            uVar11 = fcn.00450b80();\n            cVar6 = uVar11;\n            bVar15 = *(iVar9 + 0x4a) == cVar6;\n            cVar5 = *(iVar9 + 0x10);\n            if ((((bVar15) || (*(iVar9 + 0x4b) == cVar6)) && ((cVar5 == '\\0' || (*(iVar9 + 0x25) != cVar6)))) &&\n               (*(iVar9 + 0x24) != cVar6)) {\n                fcn.004a5d20();\n                arg_ch = 0xffffffff;\n                cVar5 = fcn.00450a90(var_44h);\n                var_34h = 0;\n                bVar2 = false;\n                if (cVar5 == '\\0') {\n                    uVar11 = fcn.00450b80();\n                    cVar5 = *(iVar9 + 0x10);\n                    goto code_r0x00468bfc;\n                }\n            }\n            else {\ncode_r0x00468bfc:\n                var_34h = 0;\n                bVar2 = false;\n                while (((cVar6 = uVar11,  cVar5 == '\\0' || (*(iVar9 + 0x25) != cVar6)) && (*(iVar9 + 0x24) != cVar6))) {\n                    if (*(iVar9 + 0x4e) == cVar6) {\n                        bVar7 = var_38h == 10 | bVar2 ^ 1U;\n                        if (!bVar7) goto code_r0x00468c39;\n                        bVar2 = uVar10 == 0 || var_38h == 8;\n                        if (uVar10 != 0 && var_38h != 8) {\n                            var_34h = var_34h + 1;\n                            goto code_r0x00468c6d;\n                        }\n                        var_34h = 0;\n                        var_38h = 8;\n                        uVar13 = arg_8h[2];\n                        if (arg_8h[3] <= uVar13) goto code_r0x00468d10;\ncode_r0x00468c7c:\n                        arg_8h[2] = uVar13 + 1;\ncode_r0x00468c89:\n                        var_38h._0_1_ = false;\n                        if ((arg_8h[3] <= arg_8h[2]) && (iVar12 = (**(*arg_8h + 0x24))(),  iVar12 == -1)) {\n                            arg_8h = NULL;\n                            var_38h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar2) break;\ncode_r0x00468c39:\n                        if ((*(iVar9 + 0x4c) != cVar6) && (*(iVar9 + 0x4d) != cVar6)) {\n                            cVar5 = '\\0';\n                            bVar2 = true;\n                            goto code_r0x00468a61;\n                        }\n                        cVar5 = var_38h == 0x10 || uVar10 == 0;\n                        if (var_38h != 0x10 && uVar10 != 0) {\n                            bVar2 = true;\n                            goto code_r0x00468a6e;\n                        }\n                        var_34h = 0;\n                        var_38h = 0x10;\n                        bVar7 = false;\ncode_r0x00468c6d:\n                        uVar13 = arg_8h[2];\n                        bVar2 = bVar7;\n                        if (uVar13 < arg_8h[3]) goto code_r0x00468c7c;\ncode_r0x00468d10:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00468c89;\n                        var_38h._0_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar7 = arg_10h != NULL && arg_14h == -1;\n                    var_45h = arg_14h == -1;\n                    if ((bVar7) && (var_45h = false,  arg_10h[3] <= arg_10h[2])) {\n                        var_45h = false;\n                        iVar12 = (**(*arg_10h + 0x24))();\n                        if (iVar12 == -1) {\n                            arg_10h = NULL;\n                            var_45h = bVar7;\n                        }\n                    }\n                    if (var_38h._0_1_ == var_45h) {\n                        cVar5 = '\\x01';\n                        goto code_r0x00468a61;\n                    }\n                    uVar11 = arg_ch;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar11 = *arg_8h[2];\n                        }\n                        else {\n                            uVar11 = (**(*arg_8h + 0x24))();\n                            if (uVar11 == 0xffffffff) {\n                                arg_8h = NULL;\n                                uVar11 = 0xffffffff;\n                            }\n                        }\n                    }\n                    if (!bVar2) break;\n                    cVar5 = *(iVar9 + 0x10);\n                }\n                cVar5 = '\\0';\n            }\ncode_r0x00468a61:\n            var_40h = 0x16;\n            if (var_38h == 0x10) goto code_r0x00468a74;\n        }\n        else {\n            uVar11 = 0;\n            var_34h = 0;\n            bVar2 = false;\n            bVar15 = false;\n        }\ncode_r0x00468a6e:\n        var_40h = var_38h;\n    }\n    else {\n        if (uVar10 != 8) {\n            var_38h = 10;\n            goto code_r0x004689d0;\n        }\n        cVar5 = fcn.00450a90(&arg_10h);\n        if (cVar5 == '\\0') {\n            var_38h = 0x10;\n            goto code_r0x004689ef;\n        }\n        uVar11 = 0;\n        var_34h = 0;\n        bVar2 = false;\n        bVar15 = false;\n        var_38h = 0x10;\n        var_40h = 0x16;\n    }\ncode_r0x00468a74:\n    var_44h = &arg_10h;\n    *NULL = fcn.0048b900(0, 0, &var_1eh + 1);\n    if (*(iVar9 + 0x10) != '\\0') {\n        fcn.0048d0f0(0x20);\n    }\n    uVar10 = 0xffffffff / var_38h;\n    uVar1 = *(iVar9 + 100);\n    cVar6 = cVar5;\n    if (uVar1 == 0) {\n        var_45h = 0;\n        if (cVar5 == '\\0') {\n            uVar13 = 0;\n            do {\n                cVar6 = uVar11;\n                iVar12 = cVar6;\n                if (var_40h < 0xb) {\n                    if ((cVar6 < '0') || (var_40h + '0' <= cVar6)) goto code_r0x00468d84;\ncode_r0x00468af1:\n                    uVar11 = iVar12 - 0x30;\n                }\n                else {\n                    if (cVar6 - 0x30U < 10) goto code_r0x00468af1;\n                    if (cVar6 + 0x9fU < 6) {\n                        uVar11 = iVar12 - 0x57;\n                    }\n                    else {\n                        if (5 < cVar6 + 0xbfU) goto code_r0x00468d84;\n                        uVar11 = iVar12 - 0x37;\n                    }\n                }\n                if (uVar11 == 0xffffffff) goto code_r0x00468d84;\n                if (uVar10 < uVar13) {\n                    var_45h = 1;\n                    uVar11 = arg_8h[2];\n                    if (arg_8h[3] <= uVar11) goto code_r0x00468e23;\ncode_r0x00468b2b:\n                    arg_8h[2] = uVar11 + 1;\n                }\n                else {\n                    uVar14 = uVar13 * var_38h;\n                    uVar13 = uVar14 + uVar11;\n                    var_45h = var_45h | ~uVar11 < uVar14;\n                    uVar11 = arg_8h[2];\n                    var_34h = var_34h + 1;\n                    if (uVar11 < arg_8h[3]) goto code_r0x00468b2b;\ncode_r0x00468e23:\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                cVar6 = fcn.00450a90(var_44h);\n                cVar8 = cVar5;\n                if (cVar6 != '\\0') goto code_r0x00468b53;\n                uVar11 = fcn.00450b80();\n            } while( true );\n        }\n        uVar13 = 0;\n        cVar8 = '\\0';\ncode_r0x00468b53:\n        cVar3 = cVar6;\n        cVar5 = cVar8;\n        if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x00468b61;\ncode_r0x00468d94:\n        cVar6 = cVar3;\n        fcn.0048d3d0(var_34h);\n        cVar8 = fcn.004be720(*(iVar9 + 8), *(iVar9 + 0xc), &var_1eh + 2);\n        if (cVar8 == '\\0') {\n            *arg_1ch = 4;\n        }\n        if (((var_34h != 0) || (bVar2)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x00468de2;\n    }\n    else {\n        if (cVar5 != '\\0') {\n            uVar13 = 0;\n            var_45h = 0;\n            cVar8 = '\\0';\n            goto code_r0x00468b53;\n        }\n        var_45h = 0;\n        uVar13 = 0;\n        cVar8 = *(iVar9 + 0x10);\n        if ((cVar8 != '\\0') && (*(iVar9 + 0x25) == uVar11)) goto code_r0x00468f90;\ncode_r0x00468ee7:\n        if ((uVar11 != *(iVar9 + 0x24)) && (iVar12 = sub.msvcrt.dll_memchr(iVar9 + 0x4e, uVar11, var_40h),  iVar12 != 0)\n           ) {\n            uVar11 = iVar12 - (iVar9 + 0x4e);\n            if (0xf < uVar11) {\n                uVar11 = uVar11 - 6;\n            }\n            uVar4 = uVar1;\n            if (uVar13 <= uVar10) {\n                uVar14 = uVar13 * var_38h;\n                var_34h = var_34h + 1;\n                uVar13 = uVar14 + uVar11;\n                uVar4 = var_45h | ~uVar11 < uVar14;\n            }\n            var_45h = uVar4;\n            uVar11 = arg_8h[2];\n            if (arg_8h[3] <= uVar11) goto code_r0x00468fbe;\n            do {\n                arg_8h[2] = uVar11 + 1;\n                while( true ) {\n                    arg_ch = 0xffffffff;\n                    cVar6 = fcn.00450a90(var_44h);\n                    cVar8 = cVar5;\n                    if (cVar6 != '\\0') goto code_r0x00468b53;\n                    uVar11 = fcn.00450b80();\n                    cVar8 = *(iVar9 + 0x10);\n                    if ((cVar8 == '\\0') || (*(iVar9 + 0x25) != uVar11)) goto code_r0x00468ee7;\ncode_r0x00468f90:\n                    if (var_34h == 0) {\n                        cVar6 = '\\0';\n                        goto code_r0x00468b53;\n                    }\n                    fcn.0048d3d0(var_34h);\n                    var_34h = 0;\n                    uVar11 = arg_8h[2];\n                    if (uVar11 < arg_8h[3]) break;\ncode_r0x00468fbe:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\ncode_r0x00468d84:\n        cVar6 = '\\0';\n        cVar3 = '\\0';\n        if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x00468d94;\ncode_r0x00468b61:\n        if ((var_34h != 0) || (bVar2)) {\ncode_r0x00468de2:\n            if (cVar5 == '\\0') {\n                if (var_45h == 0) {\n                    if (bVar15) {\n                        uVar13 = -uVar13;\n                    }\n                    *arg_20h = uVar13;\n                }\n                else {\n                    *arg_20h = 0xffffffff;\n                    *arg_1ch = 4;\n                }\n                goto code_r0x00468b88;\n            }\n        }\n    }\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00468b88:\n    if (cVar6 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048bdf0(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3641
    },
    "00469120": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00469120(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    uint8_t uVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    bool bVar11;\n    uint32_t var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint var_44h;\n    uint *var_40h;\n    uint32_t var_3ch;\n    int32_t var_38h;\n    uint8_t var_33h;\n    uint8_t var_32h;\n    uint8_t var_31h;\n    uint32_t var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar9 = arg_18h;\n    iVar6 = fcn.0044e1c0(arg_18h + 0x6c);\n    uVar7 = *(iVar9 + 0xc) & 0x4a;\n    if (uVar7 == 0x40) {\n        var_30h = 8;\ncode_r0x0046915f:\n        var_32h = fcn.00450a90(&arg_10h);\n        if (var_32h == 0) {\ncode_r0x0046917e:\n            var_40h = &arg_10h;\n            uVar8 = fcn.00450b80();\n            cVar1 = uVar8;\n            bVar11 = *(iVar6 + 0x4a) == cVar1;\n            cVar5 = *(iVar6 + 0x10);\n            if ((((bVar11) || (*(iVar6 + 0x4b) == cVar1)) && ((cVar5 == '\\0' || (*(iVar6 + 0x25) != cVar1)))) &&\n               (*(iVar6 + 0x24) != cVar1)) {\n                fcn.004a5d20();\n                arg_ch = 0xffffffff;\n                var_32h = fcn.00450a90(var_40h);\n                var_38h = 0;\n                var_31h = false;\n                if (var_32h == 0) {\n                    uVar8 = fcn.00450b80();\n                    cVar5 = *(iVar6 + 0x10);\n                    goto code_r0x00469380;\n                }\n            }\n            else {\ncode_r0x00469380:\n                var_38h = 0;\n                var_31h = false;\n                while (((cVar1 = uVar8,  cVar5 == '\\0' || (*(iVar6 + 0x25) != cVar1)) && (*(iVar6 + 0x24) != cVar1))) {\n                    if (*(iVar6 + 0x4e) == cVar1) {\n                        var_31h = var_30h == 10 | var_31h ^ 1;\n                        if (var_31h == false) goto code_r0x004693bc;\n                        bVar3 = uVar7 == 0 || var_30h == 8;\n                        if (uVar7 != 0 && var_30h != 8) {\n                            var_38h = var_38h + 1;\n                            goto code_r0x004693f0;\n                        }\n                        var_38h = 0;\n                        var_30h = 8;\n                        uVar10 = arg_8h[2];\n                        var_31h = bVar3;\n                        if (arg_8h[3] <= uVar10) goto code_r0x00469640;\ncode_r0x004693ff:\n                        arg_8h[2] = uVar10 + 1;\ncode_r0x0046940c:\n                        var_32h = false;\n                        if ((arg_8h[3] <= arg_8h[2]) && (iVar9 = (**(*arg_8h + 0x24))(),  iVar9 == -1)) {\n                            arg_8h = NULL;\n                            var_32h = true;\n                        }\n                    }\n                    else {\n                        if (var_31h == false) break;\ncode_r0x004693bc:\n                        if ((*(iVar6 + 0x4c) != cVar1) && (*(iVar6 + 0x4d) != cVar1)) {\n                            var_32h = 0;\n                            var_31h = true;\n                            goto code_r0x004691f0;\n                        }\n                        var_32h = var_30h == 0x10 || uVar7 == 0;\n                        if (var_30h != 0x10 && uVar7 != 0) {\n                            var_31h = true;\n                            goto code_r0x004691fc;\n                        }\n                        var_38h = 0;\n                        var_31h = false;\n                        var_30h = 0x10;\ncode_r0x004693f0:\n                        uVar10 = arg_8h[2];\n                        if (uVar10 < arg_8h[3]) goto code_r0x004693ff;\ncode_r0x00469640:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0046940c;\n                        var_32h = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar3 = arg_10h != NULL && arg_14h == -1;\n                    var_3ch._0_1_ = arg_14h == -1;\n                    if ((bVar3) && (var_3ch._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar9 = (**(*arg_10h + 0x24))();\n                        var_3ch._0_1_ = false;\n                        if (iVar9 == -1) {\n                            arg_10h = NULL;\n                            var_3ch._0_1_ = bVar3;\n                        }\n                    }\n                    if (var_3ch == var_32h) {\n                        var_32h = 1;\n                        goto code_r0x004691f0;\n                    }\n                    uVar8 = arg_ch;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar8 = *arg_8h[2];\n                        }\n                        else {\n                            uVar8 = (**(*arg_8h + 0x24))();\n                            if (uVar8 == 0xffffffff) {\n                                arg_8h = NULL;\n                                uVar8 = 0xffffffff;\n                            }\n                        }\n                    }\n                    if (var_31h == false) break;\n                    cVar5 = *(iVar6 + 0x10);\n                }\n                var_32h = 0;\n            }\ncode_r0x004691f0:\n            var_3ch = 0x16;\n            if (var_30h != 0x10) goto code_r0x004691fc;\n        }\n        else {\n            uVar8 = 0;\n            var_38h = 0;\n            var_31h = false;\n            bVar11 = false;\ncode_r0x004691fc:\n            var_3ch = var_30h;\n        }\n        *NULL = fcn.0048b900(0, 0, &var_1eh + 1);\n        var_58h = var_30h;\n        if (*(iVar6 + 0x10) != '\\0') {\ncode_r0x00469830:\n            fcn.0048d0f0(0x20);\n            var_58h = var_30h;\n        }\n        uVar2 = var_32h;\n        var_40h = &arg_10h;\n        var_48h = bVar11 + 0x7fffffff;\n        var_4ch = var_48h / var_58h;\n        var_33h = *(iVar6 + 100);\n        if (var_33h == 0) {\n            if (var_32h == 0) {\n                var_33h = var_32h;\n                var_30h = 0;\n                do {\n                    cVar5 = uVar8;\n                    iVar9 = cVar5;\n                    if (var_3ch < 0xb) {\n                        if ((cVar5 < '0') || (var_3ch + '0' <= cVar5)) goto code_r0x004696b4;\ncode_r0x00469293:\n                        iVar9 = iVar9 + -0x30;\n                    }\n                    else {\n                        if (cVar5 - 0x30U < 10) goto code_r0x00469293;\n                        if (cVar5 + 0x9fU < 6) {\n                            iVar9 = iVar9 + -0x57;\n                        }\n                        else {\n                            if (5 < cVar5 + 0xbfU) goto code_r0x004696b4;\n                            iVar9 = iVar9 + -0x37;\n                        }\n                    }\n                    if (iVar9 == -1) goto code_r0x004696b4;\n                    if (var_4ch < var_30h) {\n                        var_33h = 1;\n                        uVar7 = arg_8h[2];\n                        if (arg_8h[3] <= uVar7) goto code_r0x00469756;\ncode_r0x004692d3:\n                        arg_8h[2] = uVar7 + 1;\n                    }\n                    else {\n                        uVar7 = var_30h * var_58h;\n                        var_30h = iVar9 + uVar7;\n                        var_33h = var_33h | var_48h - iVar9 < uVar7;\n                        uVar7 = arg_8h[2];\n                        var_38h = var_38h + 1;\n                        if (uVar7 < arg_8h[3]) goto code_r0x004692d3;\ncode_r0x00469756:\n                        (**(*arg_8h + 0x28))();\n                    }\n                    arg_ch = 0xffffffff;\n                    uVar2 = fcn.00450a90(var_40h);\n                    if (uVar2 != 0) goto code_r0x004692fb;\n                    uVar8 = fcn.00450b80();\n                } while( true );\n            }\n            var_30h = 0;\n            var_32h = 0;\n            goto code_r0x004692fb;\n        }\ncode_r0x004694e0:\n        uVar2 = var_32h;\n        var_40h = &arg_10h;\n        if (var_32h != 0) {\n            var_30h = 0;\n            var_33h = 0;\n            var_32h = 0;\n            goto code_r0x004692fb;\n        }\n        uVar4 = *(iVar6 + 0x10);\n        var_33h = 0;\n        var_30h = 0;\n        if ((uVar4 != 0) && (*(iVar6 + 0x25) == uVar8)) goto code_r0x004695b8;\ncode_r0x00469509:\n        if ((uVar8 != *(iVar6 + 0x24)) && (iVar9 = sub.msvcrt.dll_memchr(iVar6 + 0x4e, uVar8, var_3ch),  iVar9 != 0)) {\n            iVar9 = iVar9 - (iVar6 + 0x4e);\n            if (0xf < iVar9) {\n                iVar9 = iVar9 + -6;\n            }\n            if (var_4ch < var_30h) {\n                var_33h = 1;\n            }\n            else {\n                uVar7 = var_30h * var_58h;\n                var_30h = iVar9 + uVar7;\n                var_33h = var_33h | var_48h - iVar9 < uVar7;\n                var_38h = var_38h + 1;\n            }\n            uVar7 = arg_8h[2];\n            if (arg_8h[3] <= uVar7) goto code_r0x004695e6;\n            do {\n                arg_8h[2] = uVar7 + 1;\n                while( true ) {\n                    arg_ch = 0xffffffff;\n                    uVar2 = fcn.00450a90(var_40h);\n                    if (uVar2 != 0) goto code_r0x004692fb;\n                    uVar8 = fcn.00450b80();\n                    uVar4 = *(iVar6 + 0x10);\n                    if ((uVar4 == 0) || (*(iVar6 + 0x25) != uVar8)) goto code_r0x00469509;\ncode_r0x004695b8:\n                    if (var_38h == 0) {\n                        uVar2 = 0;\n                        var_32h = uVar4;\n                        goto code_r0x004692fb;\n                    }\n                    fcn.0048d3d0(var_38h);\n                    var_38h = 0;\n                    uVar7 = arg_8h[2];\n                    if (uVar7 < arg_8h[3]) break;\ncode_r0x004695e6:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\ncode_r0x004696b4:\n        uVar2 = 0;\n        uVar4 = 0;\n        if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x004696c4;\ncode_r0x00469309:\n        if ((var_38h != 0) || (var_31h == 1)) {\ncode_r0x00469711:\n            if (var_32h == 0) {\n                if (var_33h == 0) {\n                    uVar7 = -var_30h;\n                    if (!bVar11) {\n                        uVar7 = var_30h;\n                    }\n                    *arg_20h = uVar7;\n                }\n                else {\n                    *arg_20h = bVar11 + 0x7fffffff;\n                    *arg_1ch = 4;\n                }\n                goto code_r0x00469330;\n            }\n        }\n    }\n    else {\n        var_30h = 10;\n        if (uVar7 != 8) goto code_r0x0046915f;\n        var_30h = 0x10;\n        uVar2 = fcn.00450a90(&arg_10h);\n        if (uVar2 == 0) goto code_r0x0046917e;\n        *NULL = fcn.0048b900(0, 0, &var_1eh + 1);\n        uVar4 = *(iVar6 + 0x10);\n        if (uVar4 != 0) {\n            var_38h = 0;\n            uVar8 = 0;\n            var_31h = false;\n            bVar11 = false;\n            var_3ch = 0x16;\n            var_32h = uVar4;\n            goto code_r0x00469830;\n        }\n        var_32h = *(iVar6 + 100);\n        bVar11 = false;\n        if (var_32h != 0) {\n            var_3ch = 0x16;\n            uVar8 = 0;\n            var_4ch = 0x7ffffff;\n            var_48h = 0x7fffffff;\n            var_38h = 0;\n            var_58h = 0x10;\n            var_31h = uVar4;\n            goto code_r0x004694e0;\n        }\n        var_33h = 0;\n        var_30h = 0;\n        var_38h = 0;\n        var_31h = var_32h;\ncode_r0x004692fb:\n        uVar4 = uVar2;\n        if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x00469309;\ncode_r0x004696c4:\n        uVar2 = uVar4;\n        fcn.0048d3d0(var_38h);\n        cVar5 = fcn.004be720(*(iVar6 + 8), *(iVar6 + 0xc), &var_1eh + 2);\n        if (cVar5 == '\\0') {\n            *arg_1ch = 4;\n        }\n        if (((var_38h != 0) || (var_31h == 1)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x00469711;\n    }\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00469330:\n    var_54h = &var_1eh + 1;\n    if (uVar2 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048bdf0(var_54h);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3963
    },
    "00469990": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00469990(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    uint8_t uVar4;\n    char cVar5;\n    char cVar6;\n    bool bVar7;\n    char cVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    uint s;\n    uint var_4ch;\n    uint8_t var_45h;\n    uint *var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar12 = arg_18h;\n    iVar9 = fcn.0044e1c0(arg_18h + 0x6c);\n    uVar10 = *(iVar12 + 0xc) & 0x4a;\n    if (uVar10 == 0x40) {\n        var_38h = 8;\ncode_r0x004699d0:\n        cVar5 = fcn.00450a90(&arg_10h);\n        if (cVar5 == '\\0') {\ncode_r0x004699ef:\n            var_44h = &arg_10h;\n            uVar11 = fcn.00450b80();\n            cVar6 = uVar11;\n            bVar15 = *(iVar9 + 0x4a) == cVar6;\n            cVar5 = *(iVar9 + 0x10);\n            if ((((bVar15) || (*(iVar9 + 0x4b) == cVar6)) && ((cVar5 == '\\0' || (*(iVar9 + 0x25) != cVar6)))) &&\n               (*(iVar9 + 0x24) != cVar6)) {\n                fcn.004a5d20();\n                arg_ch = 0xffffffff;\n                cVar5 = fcn.00450a90(var_44h);\n                var_34h = 0;\n                bVar2 = false;\n                if (cVar5 == '\\0') {\n                    uVar11 = fcn.00450b80();\n                    cVar5 = *(iVar9 + 0x10);\n                    goto code_r0x00469bfc;\n                }\n            }\n            else {\ncode_r0x00469bfc:\n                var_34h = 0;\n                bVar2 = false;\n                while (((cVar6 = uVar11,  cVar5 == '\\0' || (*(iVar9 + 0x25) != cVar6)) && (*(iVar9 + 0x24) != cVar6))) {\n                    if (*(iVar9 + 0x4e) == cVar6) {\n                        bVar7 = var_38h == 10 | bVar2 ^ 1U;\n                        if (!bVar7) goto code_r0x00469c39;\n                        bVar2 = uVar10 == 0 || var_38h == 8;\n                        if (uVar10 != 0 && var_38h != 8) {\n                            var_34h = var_34h + 1;\n                            goto code_r0x00469c6d;\n                        }\n                        var_34h = 0;\n                        var_38h = 8;\n                        uVar13 = arg_8h[2];\n                        if (arg_8h[3] <= uVar13) goto code_r0x00469d10;\ncode_r0x00469c7c:\n                        arg_8h[2] = uVar13 + 1;\ncode_r0x00469c89:\n                        var_38h._0_1_ = false;\n                        if ((arg_8h[3] <= arg_8h[2]) && (iVar12 = (**(*arg_8h + 0x24))(),  iVar12 == -1)) {\n                            arg_8h = NULL;\n                            var_38h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar2) break;\ncode_r0x00469c39:\n                        if ((*(iVar9 + 0x4c) != cVar6) && (*(iVar9 + 0x4d) != cVar6)) {\n                            cVar5 = '\\0';\n                            bVar2 = true;\n                            goto code_r0x00469a61;\n                        }\n                        cVar5 = var_38h == 0x10 || uVar10 == 0;\n                        if (var_38h != 0x10 && uVar10 != 0) {\n                            bVar2 = true;\n                            goto code_r0x00469a6e;\n                        }\n                        var_34h = 0;\n                        var_38h = 0x10;\n                        bVar7 = false;\ncode_r0x00469c6d:\n                        uVar13 = arg_8h[2];\n                        bVar2 = bVar7;\n                        if (uVar13 < arg_8h[3]) goto code_r0x00469c7c;\ncode_r0x00469d10:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00469c89;\n                        var_38h._0_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar7 = arg_10h != NULL && arg_14h == -1;\n                    var_45h = arg_14h == -1;\n                    if ((bVar7) && (var_45h = false,  arg_10h[3] <= arg_10h[2])) {\n                        var_45h = false;\n                        iVar12 = (**(*arg_10h + 0x24))();\n                        if (iVar12 == -1) {\n                            arg_10h = NULL;\n                            var_45h = bVar7;\n                        }\n                    }\n                    if (var_38h._0_1_ == var_45h) {\n                        cVar5 = '\\x01';\n                        goto code_r0x00469a61;\n                    }\n                    uVar11 = arg_ch;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar11 = *arg_8h[2];\n                        }\n                        else {\n                            uVar11 = (**(*arg_8h + 0x24))();\n                            if (uVar11 == 0xffffffff) {\n                                arg_8h = NULL;\n                                uVar11 = 0xffffffff;\n                            }\n                        }\n                    }\n                    if (!bVar2) break;\n                    cVar5 = *(iVar9 + 0x10);\n                }\n                cVar5 = '\\0';\n            }\ncode_r0x00469a61:\n            var_40h = 0x16;\n            if (var_38h == 0x10) goto code_r0x00469a74;\n        }\n        else {\n            uVar11 = 0;\n            var_34h = 0;\n            bVar2 = false;\n            bVar15 = false;\n        }\ncode_r0x00469a6e:\n        var_40h = var_38h;\n    }\n    else {\n        if (uVar10 != 8) {\n            var_38h = 10;\n            goto code_r0x004699d0;\n        }\n        cVar5 = fcn.00450a90(&arg_10h);\n        if (cVar5 == '\\0') {\n            var_38h = 0x10;\n            goto code_r0x004699ef;\n        }\n        uVar11 = 0;\n        var_34h = 0;\n        bVar2 = false;\n        bVar15 = false;\n        var_38h = 0x10;\n        var_40h = 0x16;\n    }\ncode_r0x00469a74:\n    var_44h = &arg_10h;\n    *NULL = fcn.0048b900(0, 0, &var_1eh + 1);\n    if (*(iVar9 + 0x10) != '\\0') {\n        fcn.0048d0f0(0x20);\n    }\n    uVar10 = 0xffffffff / var_38h;\n    uVar1 = *(iVar9 + 100);\n    cVar6 = cVar5;\n    if (uVar1 == 0) {\n        var_45h = 0;\n        if (cVar5 == '\\0') {\n            uVar13 = 0;\n            do {\n                cVar6 = uVar11;\n                iVar12 = cVar6;\n                if (var_40h < 0xb) {\n                    if ((cVar6 < '0') || (var_40h + '0' <= cVar6)) goto code_r0x00469d84;\ncode_r0x00469af1:\n                    uVar11 = iVar12 - 0x30;\n                }\n                else {\n                    if (cVar6 - 0x30U < 10) goto code_r0x00469af1;\n                    if (cVar6 + 0x9fU < 6) {\n                        uVar11 = iVar12 - 0x57;\n                    }\n                    else {\n                        if (5 < cVar6 + 0xbfU) goto code_r0x00469d84;\n                        uVar11 = iVar12 - 0x37;\n                    }\n                }\n                if (uVar11 == 0xffffffff) goto code_r0x00469d84;\n                if (uVar10 < uVar13) {\n                    var_45h = 1;\n                    uVar11 = arg_8h[2];\n                    if (arg_8h[3] <= uVar11) goto code_r0x00469e23;\ncode_r0x00469b2b:\n                    arg_8h[2] = uVar11 + 1;\n                }\n                else {\n                    uVar14 = uVar13 * var_38h;\n                    uVar13 = uVar14 + uVar11;\n                    var_45h = var_45h | ~uVar11 < uVar14;\n                    uVar11 = arg_8h[2];\n                    var_34h = var_34h + 1;\n                    if (uVar11 < arg_8h[3]) goto code_r0x00469b2b;\ncode_r0x00469e23:\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                cVar6 = fcn.00450a90(var_44h);\n                cVar8 = cVar5;\n                if (cVar6 != '\\0') goto code_r0x00469b53;\n                uVar11 = fcn.00450b80();\n            } while( true );\n        }\n        uVar13 = 0;\n        cVar8 = '\\0';\ncode_r0x00469b53:\n        cVar3 = cVar6;\n        cVar5 = cVar8;\n        if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x00469b61;\ncode_r0x00469d94:\n        cVar6 = cVar3;\n        fcn.0048d3d0(var_34h);\n        cVar8 = fcn.004be720(*(iVar9 + 8), *(iVar9 + 0xc), &var_1eh + 2);\n        if (cVar8 == '\\0') {\n            *arg_1ch = 4;\n        }\n        if (((var_34h != 0) || (bVar2)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x00469de2;\n    }\n    else {\n        if (cVar5 != '\\0') {\n            uVar13 = 0;\n            var_45h = 0;\n            cVar8 = '\\0';\n            goto code_r0x00469b53;\n        }\n        var_45h = 0;\n        uVar13 = 0;\n        cVar8 = *(iVar9 + 0x10);\n        if ((cVar8 != '\\0') && (*(iVar9 + 0x25) == uVar11)) goto code_r0x00469f90;\ncode_r0x00469ee7:\n        if ((uVar11 != *(iVar9 + 0x24)) && (iVar12 = sub.msvcrt.dll_memchr(iVar9 + 0x4e, uVar11, var_40h),  iVar12 != 0)\n           ) {\n            uVar11 = iVar12 - (iVar9 + 0x4e);\n            if (0xf < uVar11) {\n                uVar11 = uVar11 - 6;\n            }\n            uVar4 = uVar1;\n            if (uVar13 <= uVar10) {\n                uVar14 = uVar13 * var_38h;\n                var_34h = var_34h + 1;\n                uVar13 = uVar14 + uVar11;\n                uVar4 = var_45h | ~uVar11 < uVar14;\n            }\n            var_45h = uVar4;\n            uVar11 = arg_8h[2];\n            if (arg_8h[3] <= uVar11) goto code_r0x00469fbe;\n            do {\n                arg_8h[2] = uVar11 + 1;\n                while( true ) {\n                    arg_ch = 0xffffffff;\n                    cVar6 = fcn.00450a90(var_44h);\n                    cVar8 = cVar5;\n                    if (cVar6 != '\\0') goto code_r0x00469b53;\n                    uVar11 = fcn.00450b80();\n                    cVar8 = *(iVar9 + 0x10);\n                    if ((cVar8 == '\\0') || (*(iVar9 + 0x25) != uVar11)) goto code_r0x00469ee7;\ncode_r0x00469f90:\n                    if (var_34h == 0) {\n                        cVar6 = '\\0';\n                        goto code_r0x00469b53;\n                    }\n                    fcn.0048d3d0(var_34h);\n                    var_34h = 0;\n                    uVar11 = arg_8h[2];\n                    if (uVar11 < arg_8h[3]) break;\ncode_r0x00469fbe:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\ncode_r0x00469d84:\n        cVar6 = '\\0';\n        cVar3 = '\\0';\n        if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x00469d94;\ncode_r0x00469b61:\n        if ((var_34h != 0) || (bVar2)) {\ncode_r0x00469de2:\n            if (cVar5 == '\\0') {\n                if (var_45h == 0) {\n                    if (bVar15) {\n                        uVar13 = -uVar13;\n                    }\n                    *arg_20h = uVar13;\n                }\n                else {\n                    *arg_20h = 0xffffffff;\n                    *arg_1ch = 4;\n                }\n                goto code_r0x00469b88;\n            }\n        }\n    }\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00469b88:\n    if (cVar6 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048bdf0(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3638
    },
    "0046a120": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0046a120(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint16_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    uint8_t uVar4;\n    char cVar5;\n    char cVar6;\n    bool bVar7;\n    char cVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint16_t uVar14;\n    int32_t iVar15;\n    bool bVar16;\n    uint var_50h;\n    uint var_4ch;\n    uint8_t var_45h;\n    uint *var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar15 = arg_18h;\n    iVar9 = fcn.0044e1c0(arg_18h + 0x6c);\n    uVar10 = *(iVar15 + 0xc) & 0x4a;\n    if (uVar10 == 0x40) {\n        var_38h = 8;\ncode_r0x0046a160:\n        cVar5 = fcn.00450a90(&arg_10h);\n        if (cVar5 == '\\0') {\ncode_r0x0046a17f:\n            var_44h = &arg_10h;\n            uVar11 = fcn.00450b80();\n            cVar6 = uVar11;\n            bVar16 = *(iVar9 + 0x4a) == cVar6;\n            cVar5 = *(iVar9 + 0x10);\n            if ((((bVar16) || (*(iVar9 + 0x4b) == cVar6)) && ((cVar5 == '\\0' || (*(iVar9 + 0x25) != cVar6)))) &&\n               (*(iVar9 + 0x24) != cVar6)) {\n                fcn.004a5d20();\n                arg_ch = 0xffffffff;\n                cVar5 = fcn.00450a90(var_44h);\n                var_34h = 0;\n                bVar2 = false;\n                if (cVar5 == '\\0') {\n                    uVar11 = fcn.00450b80();\n                    cVar5 = *(iVar9 + 0x10);\n                    goto code_r0x0046a391;\n                }\n            }\n            else {\ncode_r0x0046a391:\n                var_34h = 0;\n                bVar2 = false;\n                while (((cVar6 = uVar11,  cVar5 == '\\0' || (*(iVar9 + 0x25) != cVar6)) && (*(iVar9 + 0x24) != cVar6))) {\n                    if (*(iVar9 + 0x4e) == cVar6) {\n                        bVar7 = var_38h == 10 | bVar2 ^ 1U;\n                        if (!bVar7) goto code_r0x0046a3cd;\n                        bVar2 = uVar10 == 0 || var_38h == 8;\n                        if (uVar10 != 0 && var_38h != 8) {\n                            var_34h = var_34h + 1;\n                            goto code_r0x0046a401;\n                        }\n                        var_34h = 0;\n                        var_38h = 8;\n                        uVar13 = arg_8h[2];\n                        if (arg_8h[3] <= uVar13) goto code_r0x0046a4b0;\ncode_r0x0046a410:\n                        arg_8h[2] = uVar13 + 1;\ncode_r0x0046a41d:\n                        var_38h._0_1_ = false;\n                        if ((arg_8h[3] <= arg_8h[2]) && (iVar15 = (**(*arg_8h + 0x24))(),  iVar15 == -1)) {\n                            arg_8h = NULL;\n                            var_38h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar2) break;\ncode_r0x0046a3cd:\n                        if ((*(iVar9 + 0x4c) != cVar6) && (*(iVar9 + 0x4d) != cVar6)) {\n                            cVar5 = '\\0';\n                            bVar2 = true;\n                            goto code_r0x0046a1f1;\n                        }\n                        cVar5 = var_38h == 0x10 || uVar10 == 0;\n                        if (var_38h != 0x10 && uVar10 != 0) {\n                            bVar2 = true;\n                            goto code_r0x0046a1fe;\n                        }\n                        var_34h = 0;\n                        var_38h = 0x10;\n                        bVar7 = false;\ncode_r0x0046a401:\n                        uVar13 = arg_8h[2];\n                        bVar2 = bVar7;\n                        if (uVar13 < arg_8h[3]) goto code_r0x0046a410;\ncode_r0x0046a4b0:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0046a41d;\n                        var_38h._0_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar7 = arg_10h != NULL && arg_14h == -1;\n                    var_45h = arg_14h == -1;\n                    if ((bVar7) && (var_45h = false,  arg_10h[3] <= arg_10h[2])) {\n                        var_45h = false;\n                        iVar15 = (**(*arg_10h + 0x24))();\n                        if (iVar15 == -1) {\n                            arg_10h = NULL;\n                            var_45h = bVar7;\n                        }\n                    }\n                    if (var_38h._0_1_ == var_45h) {\n                        cVar5 = '\\x01';\n                        goto code_r0x0046a1f1;\n                    }\n                    uVar11 = arg_ch;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar11 = *arg_8h[2];\n                        }\n                        else {\n                            uVar11 = (**(*arg_8h + 0x24))();\n                            if (uVar11 == 0xffffffff) {\n                                arg_8h = NULL;\n                                uVar11 = 0xffffffff;\n                            }\n                        }\n                    }\n                    if (!bVar2) break;\n                    cVar5 = *(iVar9 + 0x10);\n                }\n                cVar5 = '\\0';\n            }\ncode_r0x0046a1f1:\n            var_40h = 0x16;\n            if (var_38h == 0x10) goto code_r0x0046a204;\n        }\n        else {\n            uVar11 = 0;\n            var_34h = 0;\n            bVar2 = false;\n            bVar16 = false;\n        }\ncode_r0x0046a1fe:\n        var_40h = var_38h;\n    }\n    else {\n        if (uVar10 != 8) {\n            var_38h = 10;\n            goto code_r0x0046a160;\n        }\n        cVar5 = fcn.00450a90(&arg_10h);\n        if (cVar5 == '\\0') {\n            var_38h = 0x10;\n            goto code_r0x0046a17f;\n        }\n        uVar11 = 0;\n        var_34h = 0;\n        bVar2 = false;\n        bVar16 = false;\n        var_38h = 0x10;\n        var_40h = 0x16;\n    }\ncode_r0x0046a204:\n    var_44h = &arg_10h;\n    *NULL = fcn.0048b900(0, 0, &var_1eh + 1);\n    if (*(iVar9 + 0x10) != '\\0') {\n        fcn.0048d0f0(0x20);\n    }\n    uVar1 = *(iVar9 + 100);\n    var_4ch._0_2_ = 0xffff / var_38h;\n    cVar6 = cVar5;\n    if (uVar1 == 0) {\n        var_45h = 0;\n        if (cVar5 == '\\0') {\n            iVar15 = 0;\n            do {\n                uVar14 = iVar15;\n                cVar6 = uVar11;\n                iVar12 = cVar6;\n                if (var_40h < 0xb) {\n                    if ((cVar6 < '0') || (var_40h + '0' <= cVar6)) goto code_r0x0046a524;\ncode_r0x0046a280:\n                    iVar12 = iVar12 + -0x30;\n                }\n                else {\n                    if (cVar6 - 0x30U < 10) goto code_r0x0046a280;\n                    if (cVar6 + 0x9fU < 6) {\n                        iVar12 = iVar12 + -0x57;\n                    }\n                    else {\n                        if (5 < cVar6 + 0xbfU) goto code_r0x0046a524;\n                        iVar12 = iVar12 + -0x37;\n                    }\n                }\n                if (iVar12 == -1) goto code_r0x0046a524;\n                if (var_4ch < uVar14) {\n                    var_45h = 1;\n                    uVar10 = arg_8h[2];\n                    if (arg_8h[3] <= uVar10) goto code_r0x0046a5c3;\ncode_r0x0046a2c2:\n                    arg_8h[2] = uVar10 + 1;\n                }\n                else {\n                    iVar15 = uVar14 * var_38h + iVar12;\n                    var_45h = var_45h | 0xffff - iVar12 < uVar14 * var_38h;\n                    var_34h = var_34h + 1;\n                    uVar10 = arg_8h[2];\n                    if (uVar10 < arg_8h[3]) goto code_r0x0046a2c2;\ncode_r0x0046a5c3:\n                    (**(*arg_8h + 0x28))();\n                }\n                uVar14 = iVar15;\n                arg_ch = 0xffffffff;\n                cVar6 = fcn.00450a90(var_44h);\n                cVar8 = cVar5;\n                if (cVar6 != '\\0') goto code_r0x0046a2ea;\n                uVar11 = fcn.00450b80();\n            } while( true );\n        }\n        uVar14 = 0;\n        cVar8 = '\\0';\ncode_r0x0046a2ea:\n        cVar3 = cVar6;\n        cVar5 = cVar8;\n        if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x0046a2f8;\ncode_r0x0046a534:\n        cVar6 = cVar3;\n        fcn.0048d3d0(var_34h);\n        cVar8 = fcn.004be720(*(iVar9 + 8), *(iVar9 + 0xc), &var_1eh + 2);\n        if (cVar8 == '\\0') {\n            *arg_1ch = 4;\n        }\n        if (((var_34h != 0) || (bVar2)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x0046a582;\n    }\n    else {\n        if (cVar5 != '\\0') {\n            uVar14 = 0;\n            var_45h = 0;\n            cVar8 = '\\0';\n            goto code_r0x0046a2ea;\n        }\n        var_45h = 0;\n        iVar15 = 0;\n        cVar8 = *(iVar9 + 0x10);\n        if ((cVar8 != '\\0') && (*(iVar9 + 0x25) == uVar11)) goto code_r0x0046a738;\ncode_r0x0046a687:\n        uVar14 = iVar15;\n        if ((uVar11 != *(iVar9 + 0x24)) && (iVar12 = sub.msvcrt.dll_memchr(iVar9 + 0x4e, uVar11, var_40h),  iVar12 != 0)\n           ) {\n            iVar12 = iVar12 - (iVar9 + 0x4e);\n            if (0xf < iVar12) {\n                iVar12 = iVar12 + -6;\n            }\n            uVar4 = uVar1;\n            if (uVar14 <= var_4ch) {\n                var_34h = var_34h + 1;\n                iVar15 = uVar14 * var_38h + iVar12;\n                uVar4 = var_45h | 0xffff - iVar12 < uVar14 * var_38h;\n            }\n            var_45h = uVar4;\n            uVar10 = arg_8h[2];\n            if (arg_8h[3] <= uVar10) goto code_r0x0046a766;\n            do {\n                arg_8h[2] = uVar10 + 1;\n                while( true ) {\n                    uVar14 = iVar15;\n                    arg_ch = 0xffffffff;\n                    cVar6 = fcn.00450a90(var_44h);\n                    cVar8 = cVar5;\n                    if (cVar6 != '\\0') goto code_r0x0046a2ea;\n                    uVar11 = fcn.00450b80();\n                    cVar8 = *(iVar9 + 0x10);\n                    if ((cVar8 == '\\0') || (*(iVar9 + 0x25) != uVar11)) goto code_r0x0046a687;\ncode_r0x0046a738:\n                    uVar14 = iVar15;\n                    if (var_34h == 0) {\n                        cVar6 = '\\0';\n                        goto code_r0x0046a2ea;\n                    }\n                    fcn.0048d3d0(var_34h);\n                    var_34h = 0;\n                    uVar10 = arg_8h[2];\n                    if (uVar10 < arg_8h[3]) break;\ncode_r0x0046a766:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\ncode_r0x0046a524:\n        cVar6 = '\\0';\n        cVar3 = '\\0';\n        if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x0046a534;\ncode_r0x0046a2f8:\n        if ((var_34h != 0) || (bVar2)) {\ncode_r0x0046a582:\n            if (cVar5 == '\\0') {\n                if (var_45h == 0) {\n                    if (bVar16) {\n                        uVar14 = -uVar14;\n                    }\n                    *arg_20h = uVar14;\n                }\n                else {\n                    *arg_20h = 0xffff;\n                    *arg_1ch = 4;\n                }\n                goto code_r0x0046a31e;\n            }\n        }\n    }\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x0046a31e:\n    if (cVar6 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048bdf0(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3711
    },
    "0046a8d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0046a8d0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    char cVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    bool bVar13;\n    ulong uVar14;\n    int32_t var_60h;\n    uint var_5ch;\n    uint32_t var_58h;\n    int32_t var_54h;\n    uint32_t var_50h;\n    uint32_t var_4ch;\n    uint *var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint8_t var_33h;\n    uint8_t var_32h;\n    uint8_t var_31h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar8 = arg_18h;\n    iVar5 = fcn.0044e1c0(arg_18h + 0x6c);\n    uVar6 = *(iVar8 + 0xc) & 0x4a;\n    if (uVar6 == 0x40) {\n        var_40h = 8;\ncode_r0x0046a90f:\n        var_32h = fcn.00450a90(&arg_10h);\n        if (var_32h == 0) {\ncode_r0x0046a92e:\n            var_48h = &arg_10h;\n            uVar7 = fcn.00450b80();\n            cVar4 = uVar7;\n            bVar13 = *(iVar5 + 0x4a) == cVar4;\n            if (bVar13) {\n                cVar10 = *(iVar5 + 0x10);\ncode_r0x0046a95e:\n                if (((cVar10 != '\\0') && (*(iVar5 + 0x25) == cVar4)) || (*(iVar5 + 0x24) == cVar4))\n                goto code_r0x0046ad97;\n                fcn.004a5d20();\n                arg_ch = 0xffffffff;\n                var_32h = fcn.00450a90(var_48h);\n                var_38h = 0;\n                var_31h = false;\n                if (var_32h == 0) {\n                    uVar7 = fcn.00450b80();\n                    cVar10 = *(iVar5 + 0x10);\n                    goto code_r0x0046ad97;\n                }\n            }\n            else {\n                cVar10 = *(iVar5 + 0x10);\n                if (*(iVar5 + 0x4b) == cVar4) goto code_r0x0046a95e;\ncode_r0x0046ad97:\n                var_38h = 0;\n                var_31h = false;\n                while (((cVar4 = uVar7,  cVar10 == '\\0' || (*(iVar5 + 0x25) != cVar4)) && (*(iVar5 + 0x24) != cVar4))) {\n                    if (*(iVar5 + 0x4e) == cVar4) {\n                        var_31h = var_40h == 10 | var_31h ^ 1;\n                        if (var_31h == false) goto code_r0x0046addf;\n                        bVar3 = uVar6 == 0 || var_40h == 8;\n                        if (uVar6 != 0 && var_40h != 8) {\n                            var_38h = var_38h + 1;\n                            goto code_r0x0046ae13;\n                        }\n                        var_38h = 0;\n                        var_40h = 8;\n                        uVar11 = arg_8h[2];\n                        var_31h = bVar3;\n                        if (arg_8h[3] <= uVar11) {\n                            var_40h = 8;\n                            goto code_r0x0046aec0;\n                        }\ncode_r0x0046ae22:\n                        arg_8h[2] = uVar11 + 1;\ncode_r0x0046ae2f:\n                        var_40h._0_1_ = false;\n                        if ((arg_8h[3] <= arg_8h[2]) && (iVar8 = (**(*arg_8h + 0x24))(),  iVar8 == -1)) {\n                            arg_8h = NULL;\n                            var_40h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (var_31h == false) break;\ncode_r0x0046addf:\n                        if ((*(iVar5 + 0x4c) != cVar4) && (*(iVar5 + 0x4d) != cVar4)) {\n                            var_32h = 0;\n                            var_31h = true;\n                            goto code_r0x0046a9b0;\n                        }\n                        var_32h = var_40h == 0x10 || uVar6 == 0;\n                        if (var_40h != 0x10 && uVar6 != 0) {\n                            var_31h = true;\n                            goto code_r0x0046a9bc;\n                        }\n                        var_38h = 0;\n                        var_40h = 0x10;\n                        var_31h = false;\ncode_r0x0046ae13:\n                        uVar11 = arg_8h[2];\n                        if (uVar11 < arg_8h[3]) goto code_r0x0046ae22;\ncode_r0x0046aec0:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0046ae2f;\n                        var_40h._0_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar3 = arg_10h != NULL && arg_14h == -1;\n                    var_33h = arg_14h == -1;\n                    if ((bVar3) && (var_33h = false,  arg_10h[3] <= arg_10h[2])) {\n                        var_33h = false;\n                        iVar8 = (**(*arg_10h + 0x24))();\n                        if (iVar8 == -1) {\n                            arg_10h = NULL;\n                            var_33h = bVar3;\n                        }\n                    }\n                    if (var_33h == var_40h._0_1_) {\n                        var_32h = 1;\n                        goto code_r0x0046a9b0;\n                    }\n                    uVar7 = arg_ch;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar7 = *arg_8h[2];\n                        }\n                        else {\n                            uVar7 = (**(*arg_8h + 0x24))();\n                            if (uVar7 == 0xffffffff) {\n                                arg_8h = NULL;\n                                uVar7 = 0xffffffff;\n                            }\n                        }\n                    }\n                    if (var_31h == false) break;\n                    cVar10 = *(iVar5 + 0x10);\n                }\n                var_32h = 0;\n            }\ncode_r0x0046a9b0:\n            var_44h = 0x16;\n            if (var_40h != 0x10) goto code_r0x0046a9bc;\n        }\n        else {\n            uVar7 = 0;\n            var_38h = 0;\n            var_31h = false;\n            bVar13 = false;\ncode_r0x0046a9bc:\n            var_44h = var_40h;\n        }\n        *NULL = fcn.0048b900(0, 0, &var_1eh + 1);\n        if (*(iVar5 + 0x10) != '\\0') {\ncode_r0x0046b0c0:\n            fcn.0048d0f0(0x20);\n        }\n        uVar1 = var_32h;\n        var_48h = &arg_10h;\n        var_58h = 0;\n        var_54h = -0x80000000;\n        if (!bVar13) {\n            var_58h = 0xffffffff;\n            var_54h = 0x7fffffff;\n        }\n        uVar14 = fcn.004386d0(var_58h, var_54h, var_40h, 0);\n        uVar6 = uVar14 >> 0x20;\n        var_33h = *(iVar5 + 100);\n        if (var_33h == 0) {\n            if (var_32h == 0) {\n                var_33h = var_32h;\n                uVar11 = 0;\n                uVar12 = 0;\n                do {\n                    cVar4 = uVar7;\n                    iVar8 = cVar4;\n                    if (var_44h < 0xb) {\n                        if ((cVar4 < '0') || (var_44h + '0' <= cVar4)) goto code_r0x0046af40;\ncode_r0x0046aa8f:\n                        uVar7 = iVar8 - 0x30;\n                    }\n                    else {\n                        if (cVar4 - 0x30U < 10) goto code_r0x0046aa8f;\n                        uVar7 = iVar8 - 0x57;\n                        if (5 < cVar4 + 0x9fU) {\n                            if (5 < cVar4 + 0xbfU) goto code_r0x0046af40;\n                            uVar7 = iVar8 - 0x37;\n                        }\n                    }\n                    if (uVar7 == 0xffffffff) goto code_r0x0046af40;\n                    if (uVar6 < uVar12 || uVar6 - uVar12 < (uVar14 < uVar11)) {\n                        var_33h = 1;\n                        uVar7 = arg_8h[2];\n                        if (arg_8h[3] <= uVar7) goto code_r0x0046aff5;\ncode_r0x0046aaf2:\n                        arg_8h[2] = uVar7 + 1;\n                    }\n                    else {\n                        uVar9 = uVar11 * var_40h;\n                        uVar12 = (uVar11 * var_40h >> 0x20) + var_40h * uVar12;\n                        uVar11 = (var_54h - (uVar7 >> 0x1f)) - (var_58h < uVar7);\n                        var_33h = var_33h | (uVar11 < uVar12 || uVar11 - uVar12 < (var_58h - uVar7 < uVar9));\n                        uVar11 = uVar9 + uVar7;\n                        uVar12 = uVar12 + (uVar7 >> 0x1f) + CARRY4(uVar9, uVar7);\n                        var_38h = var_38h + 1;\n                        uVar7 = arg_8h[2];\n                        if (uVar7 < arg_8h[3]) goto code_r0x0046aaf2;\ncode_r0x0046aff5:\n                        (**(*arg_8h + 0x28))();\n                    }\n                    arg_ch = 0xffffffff;\n                    uVar1 = fcn.00450a90(var_48h);\n                    if (uVar1 != 0) goto code_r0x0046ab1a;\n                    uVar7 = fcn.00450b80();\n                } while( true );\n            }\n            uVar11 = 0;\n            var_32h = 0;\n            uVar12 = 0;\n            goto code_r0x0046ab1a;\n        }\ncode_r0x0046ac43:\n        uVar1 = var_32h;\n        var_50h = uVar14 >> 0x20;\n        var_4ch = uVar14;\n        var_48h = &arg_10h;\n        if (var_32h != 0) {\n            uVar11 = 0;\n            uVar12 = 0;\n            var_33h = 0;\n            var_32h = 0;\n            goto code_r0x0046ab1a;\n        }\n        var_33h = 0;\n        uVar11 = 0;\n        uVar12 = 0;\n        uVar2 = *(iVar5 + 0x10);\n        if ((uVar2 != 0) && (*(iVar5 + 0x25) == uVar7)) goto code_r0x0046ad4e;\ncode_r0x0046ac72:\n        if ((uVar7 != *(iVar5 + 0x24)) && (iVar8 = sub.msvcrt.dll_memchr(iVar5 + 0x4e, uVar7, var_44h),  iVar8 != 0)) {\n            uVar6 = iVar8 - (iVar5 + 0x4e);\n            if (0xf < uVar6) {\n                uVar6 = uVar6 - 6;\n            }\n            if (var_50h < uVar12 || var_50h - uVar12 < (var_4ch < uVar11)) {\n                var_33h = 1;\n            }\n            else {\n                uVar7 = uVar11 * var_40h;\n                uVar12 = (uVar11 * var_40h >> 0x20) + var_40h * uVar12;\n                uVar11 = (var_54h - (uVar6 >> 0x1f)) - (var_58h < uVar6);\n                var_33h = var_33h | (uVar11 < uVar12 || uVar11 - uVar12 < (var_58h - uVar6 < uVar7));\n                uVar11 = uVar7 + uVar6;\n                uVar12 = uVar12 + (uVar6 >> 0x1f) + CARRY4(uVar7, uVar6);\n                var_38h = var_38h + 1;\n            }\n            uVar6 = arg_8h[2];\n            if (arg_8h[3] <= uVar6) goto code_r0x0046ad7c;\n            do {\n                arg_8h[2] = uVar6 + 1;\n                while( true ) {\n                    arg_ch = 0xffffffff;\n                    uVar1 = fcn.00450a90(var_48h);\n                    if (uVar1 != 0) goto code_r0x0046ab1a;\n                    uVar7 = fcn.00450b80();\n                    uVar2 = *(iVar5 + 0x10);\n                    if ((uVar2 == 0) || (*(iVar5 + 0x25) != uVar7)) goto code_r0x0046ac72;\ncode_r0x0046ad4e:\n                    if (var_38h == 0) {\n                        uVar1 = 0;\n                        var_32h = uVar2;\n                        goto code_r0x0046ab1a;\n                    }\n                    fcn.0048d3d0(var_38h);\n                    var_38h = 0;\n                    uVar6 = arg_8h[2];\n                    if (uVar6 < arg_8h[3]) break;\ncode_r0x0046ad7c:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\ncode_r0x0046af40:\n        uVar1 = 0;\n        uVar2 = 0;\n        if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x0046af50;\ncode_r0x0046ab28:\n        if ((var_38h != 0) || (var_31h == 1)) {\ncode_r0x0046afa1:\n            if (var_32h == 0) {\n                if (var_33h == 0) {\n                    if (bVar13) {\n                        bVar13 = uVar11 != 0;\n                        uVar11 = -uVar11;\n                        uVar12 = -(uVar12 + bVar13);\n                    }\n                    *arg_20h = uVar11;\n                    arg_20h[1] = uVar12;\n                }\n                else {\n                    uVar6 = 0;\n                    uVar7 = 0x80000000;\n                    if (!bVar13) {\n                        uVar6 = 0xffffffff;\n                        uVar7 = 0x7fffffff;\n                    }\n                    *arg_20h = uVar6;\n                    arg_20h[1] = uVar7;\n                    *arg_1ch = 4;\n                }\n                goto code_r0x0046ab56;\n            }\n        }\n    }\n    else {\n        var_40h = 10;\n        if (uVar6 != 8) goto code_r0x0046a90f;\n        var_40h = 0x10;\n        uVar1 = fcn.00450a90(&arg_10h);\n        if (uVar1 == 0) goto code_r0x0046a92e;\n        *NULL = fcn.0048b900(0, 0, &var_1eh + 1);\n        uVar2 = *(iVar5 + 0x10);\n        if (uVar2 != 0) {\n            var_38h = 0;\n            uVar7 = 0;\n            var_31h = false;\n            bVar13 = false;\n            var_44h = 0x16;\n            var_40h = 0x10;\n            var_32h = uVar2;\n            goto code_r0x0046b0c0;\n        }\n        var_32h = *(iVar5 + 100);\n        bVar13 = false;\n        if (var_32h != 0) {\n            var_44h = 0x16;\n            uVar7 = 0;\n            uVar14 = 0x7ffffffffffffff;\n            var_58h = 0xffffffff;\n            var_54h = 0x7fffffff;\n            var_38h = 0;\n            var_40h = 0x10;\n            var_31h = uVar2;\n            goto code_r0x0046ac43;\n        }\n        uVar11 = 0;\n        uVar12 = 0;\n        var_33h = 0;\n        var_38h = 0;\n        var_31h = var_32h;\ncode_r0x0046ab1a:\n        uVar2 = uVar1;\n        if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x0046ab28;\ncode_r0x0046af50:\n        uVar1 = uVar2;\n        fcn.0048d3d0(var_38h);\n        cVar4 = fcn.004be720(*(iVar5 + 8), *(iVar5 + 0xc), &var_1eh + 2);\n        if (cVar4 == '\\0') {\n            *arg_1ch = 4;\n        }\n        if (((var_38h != 0) || (var_31h == 1)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x0046afa1;\n    }\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x0046ab56:\n    var_60h = &var_1eh + 1;\n    if (uVar1 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048bdf0(var_60h);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 4611
    },
    "0046b200": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0046b200(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    bool bVar14;\n    bool bVar15;\n    ulong uVar16;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint *var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint8_t var_3eh;\n    int32_t var_3dh;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar10 = arg_18h;\n    iVar6 = fcn.0044e1c0(arg_18h + 0x6c);\n    uVar7 = *(iVar10 + 0xc) & 0x4a;\n    if (uVar7 == 0x40) {\n        uVar13 = 8;\ncode_r0x0046b23f:\n        var_3dh._0_1_ = fcn.00450a90(&arg_10h);\n        if (var_3dh == '\\0') {\ncode_r0x0046b25e:\n            var_50h = &arg_10h;\n            uVar8 = fcn.00450b80();\n            cVar5 = uVar8;\n            bVar15 = *(iVar6 + 0x4a) == cVar5;\n            cVar3 = *(iVar6 + 0x10);\n            if ((((bVar15) || (*(iVar6 + 0x4b) == cVar5)) && ((cVar3 == '\\0' || (*(iVar6 + 0x25) != cVar5)))) &&\n               (*(iVar6 + 0x24) != cVar5)) {\n                fcn.004a5d20();\n                arg_ch = 0xffffffff;\n                var_3dh._0_1_ = fcn.00450a90(var_50h);\n                stack0xffffffc0 = 0;\n                bVar14 = false;\n                if (var_3dh == '\\0') {\n                    uVar8 = fcn.00450b80();\n                    cVar3 = *(iVar6 + 0x10);\n                    goto code_r0x0046b4b0;\n                }\n            }\n            else {\ncode_r0x0046b4b0:\n                stack0xffffffc0 = 0;\n                bVar14 = false;\n                while (((cVar5 = uVar8,  cVar3 == '\\0' || (*(iVar6 + 0x25) != cVar5)) && (*(iVar6 + 0x24) != cVar5))) {\n                    if (*(iVar6 + 0x4e) == cVar5) {\n                        bVar4 = uVar13 == 10 | bVar14 ^ 1U;\n                        if (!bVar4) goto code_r0x0046b4f9;\n                        bVar14 = uVar7 == 0 || uVar13 == 8;\n                        if (uVar7 != 0 && uVar13 != 8) {\n                            unique0x00007a80 = stack0xffffffc0 + 1;\n                            goto code_r0x0046b52d;\n                        }\n                        stack0xffffffc0 = 0;\n                        uVar13 = 8;\n                        uVar9 = arg_8h[2];\n                        if (arg_8h[3] <= uVar9) goto code_r0x0046b630;\ncode_r0x0046b53c:\n                        arg_8h[2] = uVar9 + 1;\ncode_r0x0046b549:\n                        var_38h._0_1_ = false;\n                        if ((arg_8h[3] <= arg_8h[2]) && (iVar10 = (**(*arg_8h + 0x24))(),  iVar10 == -1)) {\n                            arg_8h = NULL;\n                            var_38h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar14) break;\ncode_r0x0046b4f9:\n                        if ((*(iVar6 + 0x4c) != cVar5) && (*(iVar6 + 0x4d) != cVar5)) {\n                            var_3dh._0_1_ = '\\0';\n                            bVar14 = true;\n                            goto code_r0x0046b2d0;\n                        }\n                        var_3dh._0_1_ = uVar13 == 0x10 || uVar7 == 0;\n                        if (uVar13 != 0x10 && uVar7 != 0) {\n                            bVar14 = true;\n                            goto code_r0x0046b2dc;\n                        }\n                        stack0xffffffc0 = 0;\n                        uVar13 = 0x10;\n                        bVar4 = false;\ncode_r0x0046b52d:\n                        uVar9 = arg_8h[2];\n                        bVar14 = bVar4;\n                        if (uVar9 < arg_8h[3]) goto code_r0x0046b53c;\ncode_r0x0046b630:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0046b549;\n                        var_38h._0_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar4 = arg_10h != NULL && arg_14h == -1;\n                    var_4ch._0_1_ = arg_14h == -1;\n                    if ((bVar4) && (var_4ch._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar10 = (**(*arg_10h + 0x24))();\n                        var_4ch._0_1_ = false;\n                        if (iVar10 == -1) {\n                            arg_10h = NULL;\n                            var_4ch._0_1_ = bVar4;\n                        }\n                    }\n                    if (var_38h._0_1_ == var_4ch) {\n                        var_3dh._0_1_ = '\\x01';\n                        goto code_r0x0046b2d0;\n                    }\n                    uVar8 = arg_ch;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar8 = *arg_8h[2];\n                        }\n                        else {\n                            uVar8 = (**(*arg_8h + 0x24))();\n                            if (uVar8 == 0xffffffff) {\n                                arg_8h = NULL;\n                                uVar8 = 0xffffffff;\n                            }\n                        }\n                    }\n                    if (!bVar14) break;\n                    cVar3 = *(iVar6 + 0x10);\n                }\n                var_3dh._0_1_ = '\\0';\n            }\ncode_r0x0046b2d0:\n            var_4ch = 0x16;\n            if (uVar13 == 0x10) goto code_r0x0046b2df;\n        }\n        else {\n            uVar8 = 0;\n            stack0xffffffc0 = 0;\n            bVar14 = false;\n            bVar15 = false;\n        }\ncode_r0x0046b2dc:\n        var_4ch = uVar13;\n    }\n    else {\n        uVar13 = 10;\n        if (uVar7 != 8) goto code_r0x0046b23f;\n        uVar13 = 0x10;\n        var_3dh._0_1_ = fcn.00450a90(&arg_10h);\n        if (var_3dh == '\\0') goto code_r0x0046b25e;\n        uVar8 = 0;\n        stack0xffffffc0 = 0;\n        uVar13 = 0x10;\n        bVar14 = false;\n        bVar15 = false;\n        var_4ch = 0x16;\n    }\ncode_r0x0046b2df:\n    cVar3 = var_3dh;\n    var_50h = &arg_10h;\n    *NULL = fcn.0048b900(0, 0, &var_1eh + 1);\n    if (*(iVar6 + 0x10) != '\\0') {\n        fcn.0048d0f0(0x20);\n    }\n    uVar16 = fcn.004386d0(0xffffffff, 0xffffffff, uVar13, 0);\n    uVar7 = uVar16 >> 0x20;\n    uVar1 = *(iVar6 + 100);\n    if (uVar1 == 0) {\n        var_3eh = 0;\n        if (var_3dh == '\\0') {\n            var_38h = 0;\n            var_34h = 0;\n            do {\n                cVar3 = uVar8;\n                iVar10 = cVar3;\n                if (var_4ch < 0xb) {\n                    if ((cVar3 < '0') || (var_4ch + '0' <= cVar3)) goto code_r0x0046b6a2;\ncode_r0x0046b390:\n                    uVar8 = iVar10 - 0x30;\n                }\n                else {\n                    if (cVar3 - 0x30U < 10) goto code_r0x0046b390;\n                    if (cVar3 + 0x9fU < 6) {\n                        uVar8 = iVar10 - 0x57;\n                    }\n                    else {\n                        if (5 < cVar3 + 0xbfU) goto code_r0x0046b6a2;\n                        uVar8 = iVar10 - 0x37;\n                    }\n                }\n                if (uVar8 == 0xffffffff) goto code_r0x0046b6a2;\n                if (uVar7 < var_34h || uVar7 - var_34h < (uVar16 < var_38h)) {\n                    var_3eh = 1;\n                    uVar8 = arg_8h[2];\n                    if (arg_8h[3] <= uVar8) goto code_r0x0046b753;\ncode_r0x0046b3fe:\n                    arg_8h[2] = uVar8 + 1;\n                }\n                else {\n                    uVar9 = var_38h * uVar13;\n                    uVar12 = (var_38h * uVar13 >> 0x20) + uVar13 * var_34h;\n                    uVar11 = ~(uVar8 >> 0x1f);\n                    var_3eh = var_3eh | (uVar11 < uVar12 || uVar11 - uVar12 < (~uVar8 < uVar9));\n                    var_38h = uVar8 + uVar9;\n                    var_34h = (uVar8 >> 0x1f) + uVar12 + CARRY4(uVar8, uVar9);\n                    uVar8 = arg_8h[2];\n                    unique0x00007a80 = stack0xffffffc0 + 1;\n                    if (uVar8 < arg_8h[3]) goto code_r0x0046b3fe;\ncode_r0x0046b753:\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                cVar3 = fcn.00450a90(var_50h);\n                if (cVar3 != '\\0') goto code_r0x0046b426;\n                uVar8 = fcn.00450b80();\n            } while( true );\n        }\n        var_38h = 0;\n        var_3dh._0_1_ = '\\0';\n        var_34h = 0;\ncode_r0x0046b426:\n        cVar5 = cVar3;\n        if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x0046b434;\ncode_r0x0046b6b2:\n        cVar3 = cVar5;\n        fcn.0048d3d0(var_3dh._1_1_);\n        cVar5 = fcn.004be720(*(iVar6 + 8), *(iVar6 + 0xc), &var_1eh + 2);\n        if (cVar5 == '\\0') {\n            *arg_1ch = 4;\n        }\n        if (((stack0xffffffc0 != 0) || (bVar14)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x0046b700;\n    }\n    else {\n        if (var_3dh != '\\0') {\n            var_38h = 0;\n            var_34h = 0;\n            var_3eh = 0;\n            var_3dh._0_1_ = '\\0';\n            goto code_r0x0046b426;\n        }\n        var_3eh = 0;\n        cVar5 = *(iVar6 + 0x10);\n        var_38h = 0;\n        var_34h = 0;\n        if ((cVar5 != '\\0') && (*(iVar6 + 0x25) == uVar8)) goto code_r0x0046b90d;\ncode_r0x0046b825:\n        if ((uVar8 != *(iVar6 + 0x24)) && (iVar10 = sub.msvcrt.dll_memchr(iVar6 + 0x4e, uVar8, var_4ch),  iVar10 != 0))\n        {\n            uVar8 = iVar10 - (iVar6 + 0x4e);\n            if (0xf < uVar8) {\n                uVar8 = uVar8 - 6;\n            }\n            uVar2 = uVar1;\n            if (var_34h <= uVar7 && (uVar16 < var_38h) <= uVar7 - var_34h) {\n                uVar9 = var_38h * uVar13;\n                uVar12 = uVar13 * var_34h + (var_38h * uVar13 >> 0x20);\n                uVar11 = ~(uVar8 >> 0x1f);\n                var_38h = uVar8 + uVar9;\n                var_34h = (uVar8 >> 0x1f) + uVar12 + CARRY4(uVar8, uVar9);\n                unique0x00007a80 = stack0xffffffc0 + 1;\n                uVar2 = var_3eh | (uVar11 < uVar12 || uVar11 - uVar12 < (~uVar8 < uVar9));\n            }\n            var_3eh = uVar2;\n            uVar8 = arg_8h[2];\n            if (arg_8h[3] <= uVar8) goto code_r0x0046b93d;\n            do {\n                arg_8h[2] = uVar8 + 1;\n                while( true ) {\n                    arg_ch = 0xffffffff;\n                    cVar3 = fcn.00450a90(var_50h);\n                    if (cVar3 != '\\0') goto code_r0x0046b426;\n                    uVar8 = fcn.00450b80();\n                    cVar5 = *(iVar6 + 0x10);\n                    if ((cVar5 == '\\0') || (*(iVar6 + 0x25) != uVar8)) goto code_r0x0046b825;\ncode_r0x0046b90d:\n                    if (stack0xffffffc0 == 0) {\n                        cVar3 = '\\0';\n                        var_3dh._0_1_ = cVar5;\n                        goto code_r0x0046b426;\n                    }\n                    fcn.0048d3d0(stack0xffffffc0);\n                    stack0xffffffc0 = 0;\n                    uVar8 = arg_8h[2];\n                    if (uVar8 < arg_8h[3]) break;\ncode_r0x0046b93d:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\ncode_r0x0046b6a2:\n        cVar3 = '\\0';\n        cVar5 = '\\0';\n        if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x0046b6b2;\ncode_r0x0046b434:\n        if ((stack0xffffffc0 != 0) || (bVar14)) {\ncode_r0x0046b700:\n            if (var_3dh == '\\0') {\n                if (var_3eh == 0) {\n                    if (bVar15) {\n                        bVar14 = var_38h != 0;\n                        var_38h = -var_38h;\n                        var_34h = -(var_34h + bVar14);\n                    }\n                    *arg_20h = var_38h;\n                    arg_20h[1] = var_34h;\n                }\n                else {\n                    *arg_20h = 0xffffffff;\n                    arg_20h[1] = 0xffffffff;\n                    *arg_1ch = 4;\n                }\n                goto code_r0x0046b462;\n            }\n        }\n    }\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x0046b462:\n    if (cVar3 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048bdf0(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 4161
    },
    "0046bab0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0046bab0(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint noname_3, int32_t arg_18h, uint *arg_1ch, int32_t *arg_20h\n            )\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint8_t uVar8;\n    uint8_t uVar9;\n    uint8_t uVar10;\n    uint8_t uVar11;\n    uint s;\n    int32_t var_38h;\n    uint var_31h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar4 = fcn.0044e1c0(arg_18h + 0x6c);\n    var_31h._0_1_ = fcn.00450a90(&arg_10h);\n    if (var_31h == 0) {\n        cVar3 = fcn.00450b80();\n        cVar2 = *(iVar4 + 0x10);\n        if ((((*(iVar4 + 0x4b) == cVar3) || (*(iVar4 + 0x4a) == cVar3)) &&\n            ((cVar2 == '\\0' || (*(iVar4 + 0x25) != cVar3)))) && (*(iVar4 + 0x24) != cVar3)) {\n            fcn.0048d3d0((*(iVar4 + 0x4b) != cVar3) * '\\x02' + '+');\n            fcn.004a5d20();\n            arg_ch = 0xffffffff;\n            var_31h._0_1_ = fcn.00450a90(&arg_10h);\n            var_38h = 0;\n            uVar10 = 0;\n            if (var_31h != 0) goto code_r0x0046bb00;\n            cVar3 = fcn.00450b80();\n            cVar2 = *(iVar4 + 0x10);\n        }\n        uVar10 = 0;\n        var_38h = 0;\n        while ((((cVar2 == '\\0' || (*(iVar4 + 0x25) != cVar3)) && (*(iVar4 + 0x24) != cVar3)) &&\n               (*(iVar4 + 0x4e) == cVar3))) {\n            if (uVar10 == 0) {\n                fcn.0048d3d0(0x30);\n                uVar6 = arg_8h[2];\n                if (uVar6 < arg_8h[3]) goto code_r0x0046c061;\ncode_r0x0046c0b0:\n                (**(*arg_8h + 0x28))();\n            }\n            else {\n                uVar6 = arg_8h[2];\n                if (arg_8h[3] <= uVar6) goto code_r0x0046c0b0;\ncode_r0x0046c061:\n                arg_8h[2] = uVar6 + 1;\n            }\n            var_38h = var_38h + 1;\n            arg_ch = 0xffffffff;\n            var_31h._0_1_ = fcn.00450a90(&arg_10h);\n            uVar10 = var_31h;\n            if (var_31h != 0) goto code_r0x0046bb00;\n            cVar3 = fcn.00450b80();\n            cVar2 = *(iVar4 + 0x10);\n            uVar10 = 1;\n        }\n        var_31h._0_1_ = 0;\n    }\n    else {\n        cVar3 = '\\0';\n        var_38h = 0;\n        uVar10 = 0;\n    }\ncode_r0x0046bb00:\n    *NULL = fcn.0048b900(0, 0, &var_1eh + 1);\n    if (*(iVar4 + 0x10) != '\\0') {\n        fcn.0048d0f0(0x20);\n    }\n    uVar11 = *(iVar4 + 100);\n    if (uVar11 == 0) {\n        if (var_31h == 0) {\n            uVar1 = 0;\ncode_r0x0046bc6f:\n            if (9 < cVar3 - 0x30U) goto code_r0x0046bcf0;\ncode_r0x0046bc7a:\n            if (cVar3 + -0x30 == -1) goto code_r0x0046bcf0;\n            fcn.0048d3d0(cVar3 + -0x30 + '0');\n            uVar11 = 1;\ncode_r0x0046bc9b:\n            uVar6 = arg_8h[2];\n            uVar10 = uVar1;\n            if (arg_8h[3] <= uVar6) goto code_r0x0046bda7;\n            do {\n                arg_8h[2] = uVar6 + 1;\n                uVar1 = uVar10;\n                uVar10 = uVar11;\n                while( true ) {\n                    arg_ch = 0xffffffff;\n                    cVar2 = fcn.00450a90(&arg_10h);\n                    if (cVar2 != '\\0') goto code_r0x0046bbdc;\n                    cVar3 = fcn.00450b80();\n                    if (cVar3 - 0x30U < 10) goto code_r0x0046bc7a;\ncode_r0x0046bcf0:\n                    if ((*(iVar4 + 0x24) == cVar3) && ((var_31h | uVar1) == 0)) {\n                        fcn.0048d3d0(0x2e);\n                        uVar1 = 0;\n                        var_31h._0_1_ = 1;\n                        uVar11 = uVar10;\n                        goto code_r0x0046bc9b;\n                    }\n                    if (((*(iVar4 + 0x5c) != cVar3) && (*(iVar4 + 0x62) != cVar3)) ||\n                       (uVar10 = uVar10 & (uVar1 ^ 1),  uVar10 == 0)) goto code_r0x0046bbdc;\n                    fcn.0048d3d0(0x65);\n                    if (arg_8h[2] < arg_8h[3]) {\n                        arg_8h[2] = arg_8h[2] + 1;\n                    }\n                    else {\n                        (**(*arg_8h + 0x28))();\n                    }\n                    arg_ch = 0xffffffff;\n                    cVar2 = fcn.00450a90(&arg_10h);\n                    if (cVar2 != '\\0') goto code_r0x0046c180;\n                    cVar3 = fcn.00450b80();\n                    if (*(iVar4 + 0x4b) == cVar3) {\n                        uVar7 = 0x2b;\n                    }\n                    else {\n                        uVar1 = uVar10;\n                        if (*(iVar4 + 0x4a) != cVar3) goto code_r0x0046bc6f;\n                        uVar7 = 0x2d;\n                    }\n                    fcn.0048d3d0(uVar7);\n                    uVar6 = arg_8h[2];\n                    uVar11 = uVar10;\n                    if (uVar6 < arg_8h[3]) break;\ncode_r0x0046bda7:\n                    (**(*arg_8h + 0x28))();\n                    uVar1 = uVar10;\n                    uVar10 = uVar11;\n                }\n            } while( true );\n        }\n    }\n    else if (var_31h == 0) {\n        uVar9 = *(iVar4 + 0x10);\n        uVar1 = 0;\ncode_r0x0046bb50:\n        if ((uVar9 != 0) && (*(iVar4 + 0x25) == cVar3)) {\n            var_31h._0_1_ = var_31h | uVar1;\n            if (var_31h == 0) {\n                if (var_38h != 0) {\n                    fcn.0048d3d0(var_38h);\n                    uVar8 = 0;\n                    var_38h = 0;\n                    goto code_r0x0046bba7;\n                }\n                fcn.0048d220(0, *(*arg_20h + -0xc), 0);\n                iVar5 = *(stack0xffffffe0 + -0xc);\n                goto joined_r0x0046c1b6;\n            }\n            iVar5 = *(stack0xffffffe0 + -0xc);\n            goto joined_r0x0046c1a3;\n        }\n        if (*(iVar4 + 0x24) == cVar3) {\n            uVar8 = uVar1 | var_31h;\n            iVar5 = *(stack0xffffffe0 + -0xc);\n            if (uVar8 == 0) {\n                if (iVar5 != 0) {\n                    fcn.0048d3d0(var_38h);\n                }\n                fcn.0048d3d0(0x2e);\n                uVar6 = arg_8h[2];\n                var_31h._0_1_ = uVar11;\n                if (arg_8h[3] <= uVar6) goto code_r0x0046be11;\n                goto code_r0x0046bbb6;\n            }\n            goto joined_r0x0046c1a3;\n        }\n        iVar5 = sub.msvcrt.dll_memchr(iVar4 + 0x4e, cVar3, 10);\n        if (iVar5 != 0) {\n            fcn.0048d3d0((iVar5 - (iVar4 + 0x4e)) + '0');\n            var_38h = var_38h + 1;\n            uVar8 = uVar1;\n            uVar10 = uVar11;\n            goto code_r0x0046bba7;\n        }\n        if ((*(iVar4 + 0x5c) != cVar3) && (*(iVar4 + 0x62) != cVar3)) goto code_r0x0046bbdc;\n        iVar5 = *(stack0xffffffe0 + -0xc);\n        uVar8 = uVar10 & (uVar1 ^ 1);\n        if (uVar8 == 0) goto code_r0x0046bbe2;\n        if ((iVar5 != 0) && (var_31h == 0)) {\n            fcn.0048d3d0(var_38h);\n        }\n        fcn.0048d3d0(0x65);\n        fcn.004a5d20();\n        arg_ch = 0xffffffff;\n        cVar2 = fcn.00450a90(&arg_10h);\n        if (cVar2 == '\\0') goto code_r0x0046beaf;\ncode_r0x0046c180:\n        arg_ch = 0xffffffff;\n        iVar5 = *(stack0xffffffe0 + -0xc);\njoined_r0x0046c1a3:\n        if (iVar5 == 0) goto code_r0x0046bc34;\n        goto code_r0x0046bc11;\n    }\n    iVar5 = *(stack0xffffffe0 + -0xc);\njoined_r0x0046c1b6:\n    if (iVar5 == 0) goto code_r0x0046bc34;\ncode_r0x0046bbfa:\n    fcn.0048d3d0(var_38h);\n    goto code_r0x0046bc11;\ncode_r0x0046beaf:\n    cVar3 = fcn.00450b80();\n    uVar9 = *(iVar4 + 0x10);\n    if ((((*(iVar4 + 0x4b) == cVar3) || (uVar1 = uVar8,  uVar10 = uVar8,  *(iVar4 + 0x4a) == cVar3)) &&\n        ((uVar9 == 0 || (uVar1 = uVar9,  uVar10 = uVar9,  *(iVar4 + 0x25) != cVar3)))) &&\n       (uVar1 = uVar8,  uVar10 = uVar8,  *(iVar4 + 0x24) != cVar3)) {\n        fcn.0048d3d0((*(iVar4 + 0x4b) != cVar3) * '\\x02' + '+');\ncode_r0x0046bba7:\n        uVar6 = arg_8h[2];\n        if (uVar6 < arg_8h[3]) {\ncode_r0x0046bbb6:\n            arg_8h[2] = uVar6 + 1;\n            uVar1 = uVar8;\n        }\n        else {\ncode_r0x0046be11:\n            (**(*arg_8h + 0x28))();\n            uVar1 = uVar8;\n        }\n        arg_ch = 0xffffffff;\n        cVar2 = fcn.00450a90(&arg_10h);\n        if (cVar2 != '\\0') goto code_r0x0046bbdc;\n        cVar3 = fcn.00450b80();\n        uVar9 = *(iVar4 + 0x10);\n    }\n    goto code_r0x0046bb50;\ncode_r0x0046bbdc:\n    iVar5 = *(stack0xffffffe0 + -0xc);\ncode_r0x0046bbe2:\n    if (iVar5 == 0) goto code_r0x0046bc34;\n    if ((var_31h == 0) && (uVar1 == 0)) goto code_r0x0046bbfa;\ncode_r0x0046bc11:\n    cVar2 = fcn.004be720(*(iVar4 + 8), *(iVar4 + 0xc), &var_1eh + 2);\n    if (cVar2 == '\\0') {\n        *arg_1ch = 4;\n    }\ncode_r0x0046bc34:\n    fcn.0048bdf0(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3284
    },
    "0046c7b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nulong __cdecl\nfcn.0046c7b0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t *arg_1ch_00;\n    char cVar3;\n    ulong uVar4;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    arg_1ch_00 = arg_1ch;\n    var_20h = fcn.0048b900(0, 0, &var_1ch);\n    fcn.0048d0f0(0x20);\n    uVar4 = fcn.0046bab0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch_00, &var_20h);\n    var_1ch = fcn.004af100();\n    fcn.004bdab0(var_20h, arg_20h, arg_1ch_00, &var_1ch);\n    cVar3 = fcn.00450a90(&arg_10h);\n    if (cVar3 != '\\0') {\n        *arg_1ch_00 = *arg_1ch_00 | 2;\n    }\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_20h + -4);\n        *(var_20h + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_20h + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar4;\n    }\n    fcn.0048bdd0(&var_1ch);\n    return uVar4;\n}\n",
        "token_count": 472
    },
    "0046c8e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl\nfcn.0046c8e0(uint arg_8h, uint arg_ch, int32_t *arg_10h, int32_t arg_14h, uint arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    bool bVar4;\n    uint64_t uVar5;\n    int32_t *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    var_20h = fcn.0048b900(0, 0, &var_1ch);\n    fcn.0048d0f0(0x20);\n    uVar5 = fcn.0046bab0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_20h);\n    var_34h = uVar5;\n    var_1ch = fcn.004af100();\n    fcn.004bdbd0(var_20h, arg_20h, arg_1ch, &var_1ch);\n    bVar3 = uVar5 >> 0x20 == -1;\n    bVar4 = var_34h != NULL && bVar3;\n    if ((bVar4) && (bVar3 = false,  var_34h[3] <= var_34h[2])) {\n        iVar2 = (**(*var_34h + 0x24))();\n        if (iVar2 == -1) {\n            var_34h = NULL;\n        }\n        bVar3 = iVar2 == -1 && bVar4;\n    }\n    bVar4 = arg_14h == -1;\n    if (((arg_10h != NULL) && (bVar4)) && (bVar4 = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar2 = (**(*arg_10h + 0x24))();\n        bVar4 = iVar2 == -1;\n    }\n    if (bVar4 == bVar3) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_20h + -4);\n        *(var_20h + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_20h + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar5 & 0xffffffff00000000 | ZEXT48(var_34h);\n    }\n    fcn.0048bdd0(&var_1ch);\n    return uVar5 & 0xffffffff00000000 | ZEXT48(var_34h);\n}\n",
        "token_count": 690
    },
    "0046ca90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl\nfcn.0046ca90(uint arg_8h, uint arg_ch, int32_t *arg_10h, int32_t arg_14h, uint arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    bool bVar4;\n    uint64_t uVar5;\n    int32_t *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    var_20h = fcn.0048b900(0, 0, &var_1ch);\n    fcn.0048d0f0(0x20);\n    uVar5 = fcn.0046bab0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_20h);\n    var_34h = uVar5;\n    var_1ch = fcn.004af100();\n    fcn.004bdce0(var_20h, arg_20h, arg_1ch, &var_1ch);\n    bVar3 = uVar5 >> 0x20 == -1;\n    bVar4 = var_34h != NULL && bVar3;\n    if ((bVar4) && (bVar3 = false,  var_34h[3] <= var_34h[2])) {\n        iVar2 = (**(*var_34h + 0x24))();\n        if (iVar2 == -1) {\n            var_34h = NULL;\n        }\n        bVar3 = iVar2 == -1 && bVar4;\n    }\n    bVar4 = arg_14h == -1;\n    if (((arg_10h != NULL) && (bVar4)) && (bVar4 = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar2 = (**(*arg_10h + 0x24))();\n        bVar4 = iVar2 == -1;\n    }\n    if (bVar4 == bVar3) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_20h + -4);\n        *(var_20h + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_20h + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar5 & 0xffffffff00000000 | ZEXT48(var_34h);\n    }\n    fcn.0048bdd0(&var_1ch);\n    return uVar5 & 0xffffffff00000000 | ZEXT48(var_34h);\n}\n",
        "token_count": 688
    },
    "0046cca0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0046cca0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    int16_t *piVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint8_t uVar5;\n    char cVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    int16_t *piVar9;\n    bool bVar10;\n    bool bVar11;\n    bool bVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint *var_60h;\n    uint var_5ch;\n    uint var_57h;\n    uint32_t var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint8_t var_43h;\n    uint8_t var_42h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    iVar4 = arg_18h;\n    iVar8 = fcn.0044e2b0(arg_18h + 0x6c);\n    var_40h = 8;\n    uVar18 = *(iVar4 + 0xc) & 0x4a;\n    if ((uVar18 != 0x40) && (var_40h = 10,  uVar18 == 8)) {\n        var_40h = 0x10;\n    }\n    bVar11 = arg_8h != NULL && arg_ch == -1;\n    bVar10 = arg_ch == -1;\n    if (bVar11) {\n        if (arg_8h[2] < arg_8h[3]) {\n            iVar7 = *arg_8h[2];\n        }\n        else {\n            iVar7 = (**(*arg_8h + 0x24))();\n        }\n        bVar10 = false;\n        if (iVar7 == -1) {\n            arg_8h = NULL;\n            bVar10 = bVar11;\n        }\n    }\n    bVar12 = arg_10h != NULL && arg_14h == -1;\n    bVar11 = arg_14h == -1;\n    if (bVar12) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar7 = *arg_10h[2];\n        }\n        else {\n            iVar7 = (**(*arg_10h + 0x24))();\n        }\n        bVar11 = false;\n        if (iVar7 == -1) {\n            arg_10h = NULL;\n            bVar11 = bVar12;\n        }\n    }\n    if (bVar11 == bVar10) {\n        cVar6 = *(iVar8 + 0x10);\n        bVar11 = false;\n        uVar17 = 0;\n        uVar19 = 0;\n        var_42h = 1;\n        bVar10 = false;\n    }\n    else {\n        uVar17 = arg_ch & 0xffff;\n        if ((arg_8h != NULL) && (arg_ch == -1)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar17 = *arg_8h[2];\n            }\n            else {\n                uVar17 = (**(*arg_8h + 0x24))();\n            }\n            if (uVar17 == -1) {\n                arg_8h = NULL;\n            }\n        }\n        cVar6 = *(iVar8 + 0x10);\n        iVar7 = uVar17;\n        bVar11 = *(iVar8 + 0x70) == iVar7;\n        if ((bVar11) || (*(iVar8 + 0x72) == iVar7)) {\n            if (((cVar6 == '\\0') || (*(iVar8 + 0x26) != iVar7)) && (*(iVar8 + 0x24) != iVar7)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_42h = fcn.00450bd0(&arg_10h);\n                if (var_42h != 0) {\n                    cVar6 = *(iVar8 + 0x10);\n                    uVar19 = 0;\n                    bVar10 = false;\n                    goto code_r0x0046ce7a;\n                }\n                uVar17 = fcn.00450cc0();\n                cVar6 = *(iVar8 + 0x10);\n            }\n        }\n        else {\n            bVar11 = false;\n        }\n        bVar10 = false;\n        uVar19 = 0;\n        do {\n            iVar7 = uVar17;\n            if ((cVar6 != '\\0') && (*(iVar8 + 0x26) == iVar7)) {\n                var_42h = 0;\n                if (var_40h != 0x10) goto code_r0x0046ce87;\n                var_28h = var_28h & 0xffffff00;\n                var_50h = 0x16;\n                goto code_r0x0046d4f0;\n            }\n            if (*(iVar8 + 0x24) == iVar7) break;\n            if (*(iVar8 + 0x78) == iVar7) {\n                bVar12 = var_40h == 10 | bVar10 ^ 1U;\n                if (!bVar12) goto code_r0x0046cde2;\n                bVar10 = uVar18 == 0 || var_40h == 8;\n                if (uVar18 != 0 && var_40h != 8) {\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0046ce16;\n                }\n                uVar19 = 0;\n                var_40h = 8;\n                uVar14 = arg_8h[2];\n                if (uVar14 < arg_8h[3]) goto code_r0x0046ce25;\ncode_r0x0046d060:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x0046ce34;\n                var_48h._0_1_ = true;\n            }\n            else {\n                if (!bVar10) break;\ncode_r0x0046cde2:\n                if ((*(iVar8 + 0x74) != iVar7) && (*(iVar8 + 0x76) != iVar7)) {\n                    var_42h = 0;\n                    bVar10 = true;\n                    goto code_r0x0046ce7a;\n                }\n                var_42h = var_40h == 0x10 || uVar18 == 0;\n                if (var_40h != 0x10 && uVar18 != 0) {\n                    bVar10 = true;\n                    goto code_r0x0046ce87;\n                }\n                bVar12 = false;\n                uVar19 = 0;\n                var_40h = 0x10;\ncode_r0x0046ce16:\n                uVar14 = arg_8h[2];\n                bVar10 = bVar12;\n                if (arg_8h[3] <= uVar14) goto code_r0x0046d060;\ncode_r0x0046ce25:\n                arg_8h[2] = uVar14 + 2;\ncode_r0x0046ce34:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar7 = *arg_8h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_8h + 0x24))();\n                }\n                var_48h._0_1_ = false;\n                if (iVar7 == -1) {\n                    arg_8h = NULL;\n                    var_48h._0_1_ = true;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar15 = arg_10h != NULL && arg_14h == -1;\n            bVar12 = arg_14h == -1;\n            if (bVar15) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar7 = *arg_10h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_10h + 0x24))();\n                }\n                bVar12 = false;\n                if (iVar7 == -1) {\n                    arg_10h = NULL;\n                    bVar12 = bVar15;\n                }\n            }\n            if (var_48h._0_1_ == bVar12) {\n                var_42h = 1;\n                cVar6 = *(iVar8 + 0x10);\n                goto code_r0x0046ce7a;\n            }\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            cVar6 = *(iVar8 + 0x10);\n        } while (bVar10);\n        var_42h = 0;\n    }\ncode_r0x0046ce7a:\n    var_50h = 0x16;\n    if (var_40h != 0x10) {\ncode_r0x0046ce87:\n        var_50h = var_40h;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (cVar6 != '\\0') {\ncode_r0x0046d4f0:\n        stack0xffffffcc = &var_28h;\n        var_2ch = 0;\n        fcn.004b2380(0x20);\n    }\n    uVar5 = var_42h;\n    var_60h = &var_28h;\n    uVar18 = 0xffffffff / var_40h;\n    uVar2 = *(iVar8 + 0xa4);\n    if (uVar2 == 0) {\n        if (var_42h == 0) {\n            var_43h = 0;\n            var_48h = 0;\ncode_r0x0046cee8:\n            uVar16 = uVar17;\n            uVar17 = uVar17 & 0xffff;\n            if (var_50h < 0xb) {\n                if ((uVar16 < 0x30) || (var_50h + 0x30U <= uVar16)) goto code_r0x0046d110;\n            }\n            else if (9 < uVar16 - 0x30) goto code_r0x0046d0ed;\n            uVar17 = uVar17 - 0x30;\ncode_r0x0046cf0c:\n            if (uVar17 != 0xffffffff) {\n                do {\n                    if (uVar18 < var_48h) {\n                        var_43h = 1;\n                        uVar17 = arg_8h[2];\n                        if (uVar17 < arg_8h[3]) goto code_r0x0046cf4a;\ncode_r0x0046d1a3:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0046cf59;\n                        var_4ch._0_1_ = true;\n                    }\n                    else {\n                        var_43h = var_43h | ~uVar17 < var_48h * var_40h;\n                        var_48h = uVar17 + var_48h * var_40h;\n                        uVar19 = uVar19 + 1;\n                        uVar17 = arg_8h[2];\n                        if (arg_8h[3] <= uVar17) goto code_r0x0046d1a3;\ncode_r0x0046cf4a:\n                        arg_8h[2] = uVar17 + 2;\ncode_r0x0046cf59:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar7 = *arg_8h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_8h + 0x24))();\n                        }\n                        var_4ch._0_1_ = false;\n                        if (iVar7 == -1) {\n                            arg_8h = NULL;\n                            var_4ch._0_1_ = true;\n                        }\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar15 = arg_10h != NULL && arg_14h == -1;\n                    bVar12 = arg_14h == -1;\n                    if (bVar15) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar7 = *arg_10h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar12 = false;\n                        if (iVar7 == -1) {\n                            arg_10h = NULL;\n                            bVar12 = bVar15;\n                        }\n                    }\n                    if (var_4ch._0_1_ == bVar12) {\n                        uVar2 = 1;\n                        goto code_r0x0046cf9e;\n                    }\n                    uVar17 = 0xffff;\n                    if (arg_8h == NULL) goto code_r0x0046cee8;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar17 = *arg_8h[2];\n                    }\n                    else {\n                        uVar17 = (**(*arg_8h + 0x24))();\n                    }\n                    uVar16 = uVar17;\n                    if (uVar16 != 0xffff) goto code_r0x0046cee8;\n                    arg_8h = NULL;\n                    if (var_50h < 0xb) break;\n                    uVar17 = 0xffff;\ncode_r0x0046d0ed:\n                    if (5 < uVar16 - 0x61) goto code_r0x0046d270;\n                    uVar17 = uVar17 - 0x57;\n                    if (uVar17 == 0xffffffff) break;\n                } while( true );\n            }\n            goto code_r0x0046d110;\n        }\n        var_43h = 0;\n        var_42h = 0;\n        var_48h = 0;\n        uVar2 = uVar5;\n    }\n    else {\n        if (var_42h == 0) {\n            piVar1 = iVar8 + 0x78;\n            var_43h = 0;\n            var_48h = 0;\ncode_r0x0046d2b0:\n            uVar14 = var_2ch;\n            iVar7 = uVar17;\n            if ((*(iVar8 + 0x10) == 0) || (*(iVar8 + 0x26) != iVar7)) {\n                if (iVar7 == *(iVar8 + 0x24)) goto code_r0x0046d110;\n                iVar3 = *piVar1;\n                piVar9 = piVar1;\n                uVar17 = var_50h;\n                while (iVar3 != iVar7) {\n                    piVar9 = piVar9 + 1;\n                    uVar17 = uVar17 - 1;\n                    if (uVar17 == 0) goto code_r0x0046d110;\n                    iVar3 = *piVar9;\n                }\n                uVar17 = piVar9 - piVar1 >> 1;\n                if (0x1e < piVar9 - piVar1) {\n                    uVar17 = uVar17 - 6;\n                }\n                if (var_48h <= uVar18) {\n                    uVar14 = var_48h * var_40h;\n                    var_48h = uVar17 + uVar14;\n                    var_43h = var_43h | ~uVar17 < uVar14;\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0046d303;\n                }\n                uVar17 = arg_8h[2];\n                var_43h = uVar2;\n                if (uVar17 < arg_8h[3]) goto code_r0x0046d312;\ncode_r0x0046d3d8:\n                (**(*arg_8h + 0x28))();\n                var_57h._1_1_ = uVar2;\n                if (arg_8h != NULL) goto code_r0x0046d321;\n            }\n            else {\n                if (uVar19 == 0) {\n                    var_42h = *(iVar8 + 0x10);\n                    uVar2 = 0;\n                    goto code_r0x0046cf9e;\n                }\n                uVar17 = var_2ch + 1;\n                uVar13 = 0xf;\n                if (stack0xffffffcc != var_60h) {\n                    uVar13 = var_28h;\n                }\n                if (uVar13 < uVar17) {\n                    fcn.004b26d0(var_2ch, 0, 0, 1);\n                }\n                *(stack0xffffffcc + uVar14) = uVar19;\n                *(stack0xffffffcc + uVar17) = 0;\n                uVar19 = 0;\n                var_2ch = uVar17;\ncode_r0x0046d303:\n                uVar17 = arg_8h[2];\n                if (arg_8h[3] <= uVar17) goto code_r0x0046d3d8;\ncode_r0x0046d312:\n                arg_8h[2] = uVar17 + 2;\ncode_r0x0046d321:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar7 = *arg_8h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_8h + 0x24))();\n                }\n                var_57h._1_1_ = 0;\n                if (iVar7 == -1) {\n                    arg_8h = NULL;\n                    var_57h._1_1_ = uVar2;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar15 = arg_10h != NULL && arg_14h == -1;\n            bVar12 = arg_14h == -1;\n            if (bVar15) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar7 = *arg_10h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_10h + 0x24))();\n                }\n                bVar12 = false;\n                if (iVar7 == -1) {\n                    arg_10h = NULL;\n                    bVar12 = bVar15;\n                }\n            }\n            if (bVar12 == var_57h._1_1_) goto code_r0x0046cf9e;\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            goto code_r0x0046d2b0;\n        }\n        var_48h = 0;\n        var_43h = 0;\n        var_42h = 0;\n        uVar2 = uVar5;\n    }\ncode_r0x0046cf9e:\n    if (var_2ch != 0) goto code_r0x0046d11f;\ncode_r0x0046cfb0:\n    if ((uVar19 != 0) || (bVar10)) {\ncode_r0x0046d161:\n        if (var_42h == 0) {\n            if (var_43h == 0) {\n                uVar18 = -var_48h;\n                if (!bVar11) {\n                    uVar18 = var_48h;\n                }\n                *arg_20h = uVar18;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x0046cfd4;\n        }\n    }\ncode_r0x0046cfc2:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x0046cfd4:\n    if (uVar2 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != var_60h) {\n        fcn.004c33f0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x0046d270:\n    if (5 < uVar16 - 0x41) goto code_r0x0046d110;\n    uVar17 = uVar17 - 0x37;\n    goto code_r0x0046cf0c;\ncode_r0x0046d110:\n    uVar2 = 0;\n    if (var_2ch == 0) goto code_r0x0046cfb0;\ncode_r0x0046d11f:\n    fcn.004b2860(uVar19);\n    cVar6 = fcn.004be6e0(*(iVar8 + 8), *(iVar8 + 0xc), &var_31h + 1);\n    if (cVar6 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar10) || ((uVar19 | var_2ch) != 0)) goto code_r0x0046d161;\n    goto code_r0x0046cfc2;\n}\n",
        "token_count": 5164
    },
    "0046d750": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0046d750(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    int16_t *piVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    uint8_t uVar4;\n    char cVar5;\n    int16_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int16_t *piVar10;\n    bool bVar11;\n    bool bVar12;\n    bool bVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint var_68h;\n    uint *var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint8_t var_56h;\n    uint var_54h;\n    uint32_t var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint8_t var_43h;\n    uint8_t var_42h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    iVar9 = arg_18h;\n    iVar7 = fcn.0044e2b0(arg_18h + 0x6c);\n    var_40h = 8;\n    uVar18 = *(iVar9 + 0xc) & 0x4a;\n    if ((uVar18 != 0x40) && (var_40h = 10,  uVar18 == 8)) {\n        var_40h = 0x10;\n    }\n    bVar12 = arg_8h != NULL && arg_ch == -1;\n    bVar11 = arg_ch == -1;\n    if (bVar12) {\n        if (arg_8h[2] < arg_8h[3]) {\n            iVar6 = *arg_8h[2];\n        }\n        else {\n            iVar6 = (**(*arg_8h + 0x24))();\n        }\n        bVar11 = false;\n        if (iVar6 == -1) {\n            arg_8h = NULL;\n            bVar11 = bVar12;\n        }\n    }\n    bVar13 = arg_10h != NULL && arg_14h == -1;\n    bVar12 = arg_14h == -1;\n    if (bVar13) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar6 = *arg_10h[2];\n        }\n        else {\n            iVar6 = (**(*arg_10h + 0x24))();\n        }\n        bVar12 = false;\n        if (iVar6 == -1) {\n            arg_10h = NULL;\n            bVar12 = bVar13;\n        }\n    }\n    if (bVar12 == bVar11) {\n        cVar5 = *(iVar7 + 0x10);\n        bVar12 = false;\n        uVar17 = 0;\n        uVar19 = 0;\n        var_42h = 1;\n        bVar11 = false;\n    }\n    else {\n        uVar17 = arg_ch & 0xffff;\n        if ((arg_8h != NULL) && (arg_ch == -1)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar17 = *arg_8h[2];\n            }\n            else {\n                uVar17 = (**(*arg_8h + 0x24))();\n            }\n            if (uVar17 == -1) {\n                arg_8h = NULL;\n            }\n        }\n        cVar5 = *(iVar7 + 0x10);\n        iVar6 = uVar17;\n        bVar12 = *(iVar7 + 0x70) == iVar6;\n        if ((bVar12) || (*(iVar7 + 0x72) == iVar6)) {\n            if (((cVar5 == '\\0') || (*(iVar7 + 0x26) != iVar6)) && (*(iVar7 + 0x24) != iVar6)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_42h = fcn.00450bd0(&arg_10h);\n                if (var_42h != 0) {\n                    cVar5 = *(iVar7 + 0x10);\n                    uVar19 = 0;\n                    bVar11 = false;\n                    goto code_r0x0046d92a;\n                }\n                uVar17 = fcn.00450cc0();\n                cVar5 = *(iVar7 + 0x10);\n            }\n        }\n        else {\n            bVar12 = false;\n        }\n        bVar11 = false;\n        uVar19 = 0;\n        do {\n            iVar6 = uVar17;\n            if ((cVar5 != '\\0') && (*(iVar7 + 0x26) == iVar6)) {\n                var_42h = 0;\n                if (var_40h != 0x10) goto code_r0x0046d937;\n                var_28h = var_28h & 0xffffff00;\n                var_50h = 0x16;\n                goto code_r0x0046dfb0;\n            }\n            if (*(iVar7 + 0x24) == iVar6) break;\n            if (*(iVar7 + 0x78) == iVar6) {\n                bVar13 = var_40h == 10 | bVar11 ^ 1U;\n                if (!bVar13) goto code_r0x0046d892;\n                bVar11 = uVar18 == 0 || var_40h == 8;\n                if (uVar18 != 0 && var_40h != 8) {\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0046d8c6;\n                }\n                uVar19 = 0;\n                var_40h = 8;\n                uVar8 = arg_8h[2];\n                if (uVar8 < arg_8h[3]) goto code_r0x0046d8d5;\ncode_r0x0046db10:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x0046d8e4;\n                var_48h._0_1_ = true;\n            }\n            else {\n                if (!bVar11) break;\ncode_r0x0046d892:\n                if ((*(iVar7 + 0x74) != iVar6) && (*(iVar7 + 0x76) != iVar6)) {\n                    var_42h = 0;\n                    bVar11 = true;\n                    goto code_r0x0046d92a;\n                }\n                var_42h = var_40h == 0x10 || uVar18 == 0;\n                if (var_40h != 0x10 && uVar18 != 0) {\n                    bVar11 = true;\n                    goto code_r0x0046d937;\n                }\n                bVar13 = false;\n                uVar19 = 0;\n                var_40h = 0x10;\ncode_r0x0046d8c6:\n                uVar8 = arg_8h[2];\n                bVar11 = bVar13;\n                if (arg_8h[3] <= uVar8) goto code_r0x0046db10;\ncode_r0x0046d8d5:\n                arg_8h[2] = uVar8 + 2;\ncode_r0x0046d8e4:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar6 = *arg_8h[2];\n                }\n                else {\n                    iVar6 = (**(*arg_8h + 0x24))();\n                }\n                var_48h._0_1_ = false;\n                if (iVar6 == -1) {\n                    arg_8h = NULL;\n                    var_48h._0_1_ = true;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar15 = arg_10h != NULL && arg_14h == -1;\n            bVar13 = arg_14h == -1;\n            if (bVar15) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar6 = *arg_10h[2];\n                }\n                else {\n                    iVar6 = (**(*arg_10h + 0x24))();\n                }\n                bVar13 = false;\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    bVar13 = bVar15;\n                }\n            }\n            if (bVar13 == var_48h._0_1_) {\n                var_42h = 1;\n                cVar5 = *(iVar7 + 0x10);\n                goto code_r0x0046d92a;\n            }\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            cVar5 = *(iVar7 + 0x10);\n        } while (bVar11);\n        var_42h = 0;\n    }\ncode_r0x0046d92a:\n    var_50h = 0x16;\n    if (var_40h != 0x10) {\ncode_r0x0046d937:\n        var_50h = var_40h;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (cVar5 != '\\0') {\ncode_r0x0046dfb0:\n        stack0xffffffcc = &var_28h;\n        var_2ch = 0;\n        fcn.004b2380(0x20);\n    }\n    uVar4 = var_42h;\n    var_64h = &var_28h;\n    uVar18 = bVar12 + 0x7fffffff;\n    uVar2 = *(iVar7 + 0xa4);\n    if (uVar2 == 0) {\n        if (var_42h == 0) {\n            var_43h = 0;\n            var_48h = 0;\ncode_r0x0046d9a1:\n            uVar16 = uVar17;\n            uVar17 = uVar17 & 0xffff;\n            if (var_50h < 0xb) {\n                if ((uVar16 < 0x30) || (var_50h + 0x30U <= uVar16)) goto code_r0x0046dbc0;\n            }\n            else if (9 < uVar16 - 0x30) goto code_r0x0046db9d;\n            iVar9 = uVar17 - 0x30;\ncode_r0x0046d9c5:\n            if (iVar9 != -1) {\n                do {\n                    if (uVar18 / var_40h < var_48h) {\n                        var_43h = 1;\n                        uVar17 = arg_8h[2];\n                        if (uVar17 < arg_8h[3]) goto code_r0x0046da04;\ncode_r0x0046dc56:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0046da13;\n                        var_4ch._0_1_ = true;\n                    }\n                    else {\n                        var_43h = var_43h | uVar18 - iVar9 < var_48h * var_40h;\n                        var_48h = iVar9 + var_48h * var_40h;\n                        uVar19 = uVar19 + 1;\n                        uVar17 = arg_8h[2];\n                        if (arg_8h[3] <= uVar17) goto code_r0x0046dc56;\ncode_r0x0046da04:\n                        arg_8h[2] = uVar17 + 2;\ncode_r0x0046da13:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar6 = *arg_8h[2];\n                        }\n                        else {\n                            iVar6 = (**(*arg_8h + 0x24))();\n                        }\n                        var_4ch._0_1_ = false;\n                        if (iVar6 == -1) {\n                            arg_8h = NULL;\n                            var_4ch._0_1_ = true;\n                        }\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar15 = arg_10h != NULL && arg_14h == -1;\n                    bVar13 = arg_14h == -1;\n                    if (bVar15) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar6 = *arg_10h[2];\n                        }\n                        else {\n                            iVar6 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar13 = false;\n                        if (iVar6 == -1) {\n                            arg_10h = NULL;\n                            bVar13 = bVar15;\n                        }\n                    }\n                    if (var_4ch._0_1_ == bVar13) {\n                        uVar2 = 1;\n                        goto code_r0x0046da58;\n                    }\n                    uVar17 = 0xffff;\n                    if (arg_8h == NULL) goto code_r0x0046d9a1;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar17 = *arg_8h[2];\n                    }\n                    else {\n                        uVar17 = (**(*arg_8h + 0x24))();\n                    }\n                    uVar16 = uVar17;\n                    if (uVar16 != 0xffff) goto code_r0x0046d9a1;\n                    arg_8h = NULL;\n                    if (var_50h < 0xb) break;\n                    uVar17 = 0xffff;\ncode_r0x0046db9d:\n                    if (5 < uVar16 - 0x61) goto code_r0x0046dd30;\n                    iVar9 = uVar17 - 0x57;\n                    if (iVar9 == -1) break;\n                } while( true );\n            }\n            goto code_r0x0046dbc0;\n        }\n        var_43h = 0;\n        var_42h = 0;\n        var_48h = 0;\n        uVar2 = uVar4;\n    }\n    else {\n        if (var_42h == 0) {\n            piVar1 = iVar7 + 0x78;\n            var_43h = 0;\n            var_48h = 0;\ncode_r0x0046dd70:\n            uVar8 = var_2ch;\n            iVar6 = uVar17;\n            if ((*(iVar7 + 0x10) == 0) || (*(iVar7 + 0x26) != iVar6)) {\n                if (iVar6 == *(iVar7 + 0x24)) goto code_r0x0046dbc0;\n                iVar3 = *piVar1;\n                piVar10 = piVar1;\n                uVar17 = var_50h;\n                while (iVar3 != iVar6) {\n                    piVar10 = piVar10 + 1;\n                    uVar17 = uVar17 - 1;\n                    if (uVar17 == 0) goto code_r0x0046dbc0;\n                    iVar3 = *piVar10;\n                }\n                iVar9 = piVar10 - piVar1 >> 1;\n                if (0x1e < piVar10 - piVar1) {\n                    iVar9 = iVar9 + -6;\n                }\n                if (var_48h <= uVar18 / var_40h) {\n                    uVar17 = var_48h * var_40h;\n                    var_48h = iVar9 + uVar17;\n                    var_43h = var_43h | uVar18 - iVar9 < uVar17;\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0046ddc3;\n                }\n                uVar17 = arg_8h[2];\n                var_43h = uVar2;\n                if (uVar17 < arg_8h[3]) goto code_r0x0046ddd2;\ncode_r0x0046de98:\n                (**(*arg_8h + 0x28))();\n                var_56h = uVar2;\n                if (arg_8h != NULL) goto code_r0x0046dde1;\n            }\n            else {\n                if (uVar19 == 0) {\n                    var_42h = *(iVar7 + 0x10);\n                    uVar2 = 0;\n                    goto code_r0x0046da58;\n                }\n                uVar17 = var_2ch + 1;\n                uVar14 = 0xf;\n                if (stack0xffffffcc != var_64h) {\n                    uVar14 = var_28h;\n                }\n                if (uVar14 < uVar17) {\n                    fcn.004b26d0(var_2ch, 0, 0, 1);\n                }\n                *(stack0xffffffcc + uVar8) = uVar19;\n                *(stack0xffffffcc + uVar17) = 0;\n                uVar19 = 0;\n                var_2ch = uVar17;\ncode_r0x0046ddc3:\n                uVar17 = arg_8h[2];\n                if (arg_8h[3] <= uVar17) goto code_r0x0046de98;\ncode_r0x0046ddd2:\n                arg_8h[2] = uVar17 + 2;\ncode_r0x0046dde1:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar6 = *arg_8h[2];\n                }\n                else {\n                    iVar6 = (**(*arg_8h + 0x24))();\n                }\n                var_56h = 0;\n                if (iVar6 == -1) {\n                    arg_8h = NULL;\n                    var_56h = uVar2;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar15 = arg_10h != NULL && arg_14h == -1;\n            bVar13 = arg_14h == -1;\n            if (bVar15) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar6 = *arg_10h[2];\n                }\n                else {\n                    iVar6 = (**(*arg_10h + 0x24))();\n                }\n                bVar13 = false;\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    bVar13 = bVar15;\n                }\n            }\n            if (bVar13 == var_56h) goto code_r0x0046da58;\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            goto code_r0x0046dd70;\n        }\n        var_48h = 0;\n        var_43h = 0;\n        var_42h = 0;\n        uVar2 = uVar4;\n    }\ncode_r0x0046da58:\n    if (var_2ch != 0) goto code_r0x0046dbcf;\ncode_r0x0046da60:\n    if ((uVar19 != 0) || (bVar11)) {\ncode_r0x0046dc11:\n        if (var_42h == 0) {\n            if (var_43h == 0) {\n                uVar18 = -var_48h;\n                if (!bVar12) {\n                    uVar18 = var_48h;\n                }\n                *arg_20h = uVar18;\n            }\n            else {\n                *arg_20h = bVar12 + 0x7fffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x0046da84;\n        }\n    }\ncode_r0x0046da72:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x0046da84:\n    if (uVar2 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != var_64h) {\n        fcn.004c33f0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x0046dd30:\n    if (5 < uVar16 - 0x41) goto code_r0x0046dbc0;\n    iVar9 = uVar17 - 0x37;\n    goto code_r0x0046d9c5;\ncode_r0x0046dbc0:\n    uVar2 = 0;\n    if (var_2ch == 0) goto code_r0x0046da60;\ncode_r0x0046dbcf:\n    fcn.004b2860(uVar19);\n    cVar5 = fcn.004be6e0(*(iVar7 + 8), *(iVar7 + 0xc), &var_31h + 1);\n    if (cVar5 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar11) || ((uVar19 | var_2ch) != 0)) goto code_r0x0046dc11;\n    goto code_r0x0046da72;\n}\n",
        "token_count": 5168
    },
    "0046e210": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0046e210(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    int16_t *piVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint8_t uVar5;\n    char cVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    int16_t *piVar9;\n    bool bVar10;\n    bool bVar11;\n    bool bVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint *var_60h;\n    uint var_5ch;\n    uint var_57h;\n    uint32_t var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint8_t var_43h;\n    uint8_t var_42h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    iVar4 = arg_18h;\n    iVar8 = fcn.0044e2b0(arg_18h + 0x6c);\n    var_40h = 8;\n    uVar18 = *(iVar4 + 0xc) & 0x4a;\n    if ((uVar18 != 0x40) && (var_40h = 10,  uVar18 == 8)) {\n        var_40h = 0x10;\n    }\n    bVar11 = arg_8h != NULL && arg_ch == -1;\n    bVar10 = arg_ch == -1;\n    if (bVar11) {\n        if (arg_8h[2] < arg_8h[3]) {\n            iVar7 = *arg_8h[2];\n        }\n        else {\n            iVar7 = (**(*arg_8h + 0x24))();\n        }\n        bVar10 = false;\n        if (iVar7 == -1) {\n            arg_8h = NULL;\n            bVar10 = bVar11;\n        }\n    }\n    bVar12 = arg_10h != NULL && arg_14h == -1;\n    bVar11 = arg_14h == -1;\n    if (bVar12) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar7 = *arg_10h[2];\n        }\n        else {\n            iVar7 = (**(*arg_10h + 0x24))();\n        }\n        bVar11 = false;\n        if (iVar7 == -1) {\n            arg_10h = NULL;\n            bVar11 = bVar12;\n        }\n    }\n    if (bVar11 == bVar10) {\n        cVar6 = *(iVar8 + 0x10);\n        bVar11 = false;\n        uVar17 = 0;\n        uVar19 = 0;\n        var_42h = 1;\n        bVar10 = false;\n    }\n    else {\n        uVar17 = arg_ch & 0xffff;\n        if ((arg_8h != NULL) && (arg_ch == -1)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar17 = *arg_8h[2];\n            }\n            else {\n                uVar17 = (**(*arg_8h + 0x24))();\n            }\n            if (uVar17 == -1) {\n                arg_8h = NULL;\n            }\n        }\n        cVar6 = *(iVar8 + 0x10);\n        iVar7 = uVar17;\n        bVar11 = *(iVar8 + 0x70) == iVar7;\n        if ((bVar11) || (*(iVar8 + 0x72) == iVar7)) {\n            if (((cVar6 == '\\0') || (*(iVar8 + 0x26) != iVar7)) && (*(iVar8 + 0x24) != iVar7)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_42h = fcn.00450bd0(&arg_10h);\n                if (var_42h != 0) {\n                    cVar6 = *(iVar8 + 0x10);\n                    uVar19 = 0;\n                    bVar10 = false;\n                    goto code_r0x0046e3ea;\n                }\n                uVar17 = fcn.00450cc0();\n                cVar6 = *(iVar8 + 0x10);\n            }\n        }\n        else {\n            bVar11 = false;\n        }\n        bVar10 = false;\n        uVar19 = 0;\n        do {\n            iVar7 = uVar17;\n            if ((cVar6 != '\\0') && (*(iVar8 + 0x26) == iVar7)) {\n                var_42h = 0;\n                if (var_40h != 0x10) goto code_r0x0046e3f7;\n                var_28h = var_28h & 0xffffff00;\n                var_50h = 0x16;\n                goto code_r0x0046ea60;\n            }\n            if (*(iVar8 + 0x24) == iVar7) break;\n            if (*(iVar8 + 0x78) == iVar7) {\n                bVar12 = var_40h == 10 | bVar10 ^ 1U;\n                if (!bVar12) goto code_r0x0046e352;\n                bVar10 = uVar18 == 0 || var_40h == 8;\n                if (uVar18 != 0 && var_40h != 8) {\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0046e386;\n                }\n                uVar19 = 0;\n                var_40h = 8;\n                uVar14 = arg_8h[2];\n                if (uVar14 < arg_8h[3]) goto code_r0x0046e395;\ncode_r0x0046e5d0:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x0046e3a4;\n                var_48h._0_1_ = true;\n            }\n            else {\n                if (!bVar10) break;\ncode_r0x0046e352:\n                if ((*(iVar8 + 0x74) != iVar7) && (*(iVar8 + 0x76) != iVar7)) {\n                    var_42h = 0;\n                    bVar10 = true;\n                    goto code_r0x0046e3ea;\n                }\n                var_42h = var_40h == 0x10 || uVar18 == 0;\n                if (var_40h != 0x10 && uVar18 != 0) {\n                    bVar10 = true;\n                    goto code_r0x0046e3f7;\n                }\n                bVar12 = false;\n                uVar19 = 0;\n                var_40h = 0x10;\ncode_r0x0046e386:\n                uVar14 = arg_8h[2];\n                bVar10 = bVar12;\n                if (arg_8h[3] <= uVar14) goto code_r0x0046e5d0;\ncode_r0x0046e395:\n                arg_8h[2] = uVar14 + 2;\ncode_r0x0046e3a4:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar7 = *arg_8h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_8h + 0x24))();\n                }\n                var_48h._0_1_ = false;\n                if (iVar7 == -1) {\n                    arg_8h = NULL;\n                    var_48h._0_1_ = true;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar15 = arg_10h != NULL && arg_14h == -1;\n            bVar12 = arg_14h == -1;\n            if (bVar15) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar7 = *arg_10h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_10h + 0x24))();\n                }\n                bVar12 = false;\n                if (iVar7 == -1) {\n                    arg_10h = NULL;\n                    bVar12 = bVar15;\n                }\n            }\n            if (var_48h._0_1_ == bVar12) {\n                var_42h = 1;\n                cVar6 = *(iVar8 + 0x10);\n                goto code_r0x0046e3ea;\n            }\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            cVar6 = *(iVar8 + 0x10);\n        } while (bVar10);\n        var_42h = 0;\n    }\ncode_r0x0046e3ea:\n    var_50h = 0x16;\n    if (var_40h != 0x10) {\ncode_r0x0046e3f7:\n        var_50h = var_40h;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (cVar6 != '\\0') {\ncode_r0x0046ea60:\n        stack0xffffffcc = &var_28h;\n        var_2ch = 0;\n        fcn.004b2380(0x20);\n    }\n    uVar5 = var_42h;\n    var_60h = &var_28h;\n    uVar18 = 0xffffffff / var_40h;\n    uVar2 = *(iVar8 + 0xa4);\n    if (uVar2 == 0) {\n        if (var_42h == 0) {\n            var_43h = 0;\n            var_48h = 0;\ncode_r0x0046e458:\n            uVar16 = uVar17;\n            uVar17 = uVar17 & 0xffff;\n            if (var_50h < 0xb) {\n                if ((uVar16 < 0x30) || (var_50h + 0x30U <= uVar16)) goto code_r0x0046e680;\n            }\n            else if (9 < uVar16 - 0x30) goto code_r0x0046e65d;\n            uVar17 = uVar17 - 0x30;\ncode_r0x0046e47c:\n            if (uVar17 != 0xffffffff) {\n                do {\n                    if (uVar18 < var_48h) {\n                        var_43h = 1;\n                        uVar17 = arg_8h[2];\n                        if (uVar17 < arg_8h[3]) goto code_r0x0046e4ba;\ncode_r0x0046e713:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0046e4c9;\n                        var_4ch._0_1_ = true;\n                    }\n                    else {\n                        var_43h = var_43h | ~uVar17 < var_48h * var_40h;\n                        var_48h = uVar17 + var_48h * var_40h;\n                        uVar19 = uVar19 + 1;\n                        uVar17 = arg_8h[2];\n                        if (arg_8h[3] <= uVar17) goto code_r0x0046e713;\ncode_r0x0046e4ba:\n                        arg_8h[2] = uVar17 + 2;\ncode_r0x0046e4c9:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar7 = *arg_8h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_8h + 0x24))();\n                        }\n                        var_4ch._0_1_ = false;\n                        if (iVar7 == -1) {\n                            arg_8h = NULL;\n                            var_4ch._0_1_ = true;\n                        }\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar15 = arg_10h != NULL && arg_14h == -1;\n                    bVar12 = arg_14h == -1;\n                    if (bVar15) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar7 = *arg_10h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar12 = false;\n                        if (iVar7 == -1) {\n                            arg_10h = NULL;\n                            bVar12 = bVar15;\n                        }\n                    }\n                    if (var_4ch._0_1_ == bVar12) {\n                        uVar2 = 1;\n                        goto code_r0x0046e50e;\n                    }\n                    uVar17 = 0xffff;\n                    if (arg_8h == NULL) goto code_r0x0046e458;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar17 = *arg_8h[2];\n                    }\n                    else {\n                        uVar17 = (**(*arg_8h + 0x24))();\n                    }\n                    uVar16 = uVar17;\n                    if (uVar16 != 0xffff) goto code_r0x0046e458;\n                    arg_8h = NULL;\n                    if (var_50h < 0xb) break;\n                    uVar17 = 0xffff;\ncode_r0x0046e65d:\n                    if (5 < uVar16 - 0x61) goto code_r0x0046e7e0;\n                    uVar17 = uVar17 - 0x57;\n                    if (uVar17 == 0xffffffff) break;\n                } while( true );\n            }\n            goto code_r0x0046e680;\n        }\n        var_43h = 0;\n        var_42h = 0;\n        var_48h = 0;\n        uVar2 = uVar5;\n    }\n    else {\n        if (var_42h == 0) {\n            piVar1 = iVar8 + 0x78;\n            var_43h = 0;\n            var_48h = 0;\ncode_r0x0046e820:\n            uVar14 = var_2ch;\n            iVar7 = uVar17;\n            if ((*(iVar8 + 0x10) == 0) || (*(iVar8 + 0x26) != iVar7)) {\n                if (iVar7 == *(iVar8 + 0x24)) goto code_r0x0046e680;\n                iVar3 = *piVar1;\n                piVar9 = piVar1;\n                uVar17 = var_50h;\n                while (iVar3 != iVar7) {\n                    piVar9 = piVar9 + 1;\n                    uVar17 = uVar17 - 1;\n                    if (uVar17 == 0) goto code_r0x0046e680;\n                    iVar3 = *piVar9;\n                }\n                uVar17 = piVar9 - piVar1 >> 1;\n                if (0x1e < piVar9 - piVar1) {\n                    uVar17 = uVar17 - 6;\n                }\n                if (var_48h <= uVar18) {\n                    uVar14 = var_48h * var_40h;\n                    var_48h = uVar17 + uVar14;\n                    var_43h = var_43h | ~uVar17 < uVar14;\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0046e873;\n                }\n                uVar17 = arg_8h[2];\n                var_43h = uVar2;\n                if (uVar17 < arg_8h[3]) goto code_r0x0046e882;\ncode_r0x0046e948:\n                (**(*arg_8h + 0x28))();\n                var_57h._1_1_ = uVar2;\n                if (arg_8h != NULL) goto code_r0x0046e891;\n            }\n            else {\n                if (uVar19 == 0) {\n                    var_42h = *(iVar8 + 0x10);\n                    uVar2 = 0;\n                    goto code_r0x0046e50e;\n                }\n                uVar17 = var_2ch + 1;\n                uVar13 = 0xf;\n                if (stack0xffffffcc != var_60h) {\n                    uVar13 = var_28h;\n                }\n                if (uVar13 < uVar17) {\n                    fcn.004b26d0(var_2ch, 0, 0, 1);\n                }\n                *(stack0xffffffcc + uVar14) = uVar19;\n                *(stack0xffffffcc + uVar17) = 0;\n                uVar19 = 0;\n                var_2ch = uVar17;\ncode_r0x0046e873:\n                uVar17 = arg_8h[2];\n                if (arg_8h[3] <= uVar17) goto code_r0x0046e948;\ncode_r0x0046e882:\n                arg_8h[2] = uVar17 + 2;\ncode_r0x0046e891:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar7 = *arg_8h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_8h + 0x24))();\n                }\n                var_57h._1_1_ = 0;\n                if (iVar7 == -1) {\n                    arg_8h = NULL;\n                    var_57h._1_1_ = uVar2;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar15 = arg_10h != NULL && arg_14h == -1;\n            bVar12 = arg_14h == -1;\n            if (bVar15) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar7 = *arg_10h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_10h + 0x24))();\n                }\n                bVar12 = false;\n                if (iVar7 == -1) {\n                    arg_10h = NULL;\n                    bVar12 = bVar15;\n                }\n            }\n            if (bVar12 == var_57h._1_1_) goto code_r0x0046e50e;\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            goto code_r0x0046e820;\n        }\n        var_48h = 0;\n        var_43h = 0;\n        var_42h = 0;\n        uVar2 = uVar5;\n    }\ncode_r0x0046e50e:\n    if (var_2ch != 0) goto code_r0x0046e68f;\ncode_r0x0046e520:\n    if ((uVar19 != 0) || (bVar10)) {\ncode_r0x0046e6d1:\n        if (var_42h == 0) {\n            if (var_43h == 0) {\n                uVar18 = -var_48h;\n                if (!bVar11) {\n                    uVar18 = var_48h;\n                }\n                *arg_20h = uVar18;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x0046e544;\n        }\n    }\ncode_r0x0046e532:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x0046e544:\n    if (uVar2 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != var_60h) {\n        fcn.004c33f0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x0046e7e0:\n    if (5 < uVar16 - 0x41) goto code_r0x0046e680;\n    uVar17 = uVar17 - 0x37;\n    goto code_r0x0046e47c;\ncode_r0x0046e680:\n    uVar2 = 0;\n    if (var_2ch == 0) goto code_r0x0046e520;\ncode_r0x0046e68f:\n    fcn.004b2860(uVar19);\n    cVar6 = fcn.004be6e0(*(iVar8 + 8), *(iVar8 + 0xc), &var_31h + 1);\n    if (cVar6 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar10) || ((uVar19 | var_2ch) != 0)) goto code_r0x0046e6d1;\n    goto code_r0x0046e532;\n}\n",
        "token_count": 5166
    },
    "0046ecc0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0046ecc0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint16_t *arg_20h)\n\n{\n    int16_t *piVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    char cVar7;\n    bool bVar8;\n    int16_t iVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int16_t *piVar13;\n    bool bVar14;\n    uint16_t uVar15;\n    uint8_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint var_5ch;\n    uint *var_58h;\n    uint var_54h;\n    uint32_t var_4fh;\n    uint var_48h;\n    uint16_t var_44h;\n    uint8_t var_42h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_bp_ch;\n    \n    iVar12 = arg_18h;\n    iVar10 = fcn.0044e2b0(arg_18h + 0x6c);\n    var_40h = 8;\n    uVar18 = *(iVar12 + 0xc) & 0x4a;\n    if ((uVar18 != 0x40) && (var_40h = 10,  uVar18 == 8)) {\n        var_40h = 0x10;\n    }\n    bVar4 = arg_8h != NULL && arg_ch == -1;\n    bVar14 = arg_ch == -1;\n    if (bVar4) {\n        if (arg_8h[2] < arg_8h[3]) {\n            iVar9 = *arg_8h[2];\n        }\n        else {\n            iVar9 = (**(*arg_8h + 0x24))();\n        }\n        bVar14 = false;\n        if (iVar9 == -1) {\n            arg_8h = NULL;\n            bVar14 = bVar4;\n        }\n    }\n    bVar4 = arg_10h != NULL && arg_14h == -1;\n    bVar5 = arg_14h == -1;\n    if (bVar4) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar9 = *arg_10h[2];\n        }\n        else {\n            iVar9 = (**(*arg_10h + 0x24))();\n        }\n        bVar5 = false;\n        if (iVar9 == -1) {\n            arg_10h = NULL;\n            bVar5 = bVar4;\n        }\n    }\n    if (bVar5 == bVar14) {\n        cVar7 = *(iVar10 + 0x10);\n        bVar4 = false;\n        uVar17 = 0;\n        uVar19 = 0;\n        var_42h = 1;\n        bVar14 = false;\n    }\n    else {\n        uVar17 = arg_ch & 0xffff;\n        if ((arg_8h != NULL) && (arg_ch == -1)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar17 = *arg_8h[2];\n            }\n            else {\n                uVar17 = (**(*arg_8h + 0x24))();\n            }\n            if (uVar17 == -1) {\n                arg_8h = NULL;\n            }\n        }\n        cVar7 = *(iVar10 + 0x10);\n        iVar9 = uVar17;\n        bVar4 = *(iVar10 + 0x70) == iVar9;\n        if ((bVar4) || (*(iVar10 + 0x72) == iVar9)) {\n            if (((cVar7 == '\\0') || (*(iVar10 + 0x26) != iVar9)) && (*(iVar10 + 0x24) != iVar9)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_42h = fcn.00450bd0(&arg_10h);\n                if (var_42h != 0) {\n                    cVar7 = *(iVar10 + 0x10);\n                    uVar19 = 0;\n                    bVar14 = false;\n                    goto code_r0x0046eeaa;\n                }\n                uVar17 = fcn.00450cc0();\n                cVar7 = *(iVar10 + 0x10);\n            }\n        }\n        else {\n            bVar4 = false;\n        }\n        bVar14 = false;\n        uVar19 = 0;\n        do {\n            iVar9 = uVar17;\n            if ((cVar7 != '\\0') && (*(iVar10 + 0x26) == iVar9)) {\n                var_42h = 0;\n                if (var_40h != 0x10) goto code_r0x0046eeb7;\n                var_28h = var_28h & 0xffffff00;\n                stack0xffffffb0 = 0x16;\n                goto code_r0x0046f580;\n            }\n            if (*(iVar10 + 0x24) == iVar9) break;\n            if (*(iVar10 + 0x78) == iVar9) {\n                bVar5 = var_40h == 10 | bVar14 ^ 1U;\n                if (!bVar5) goto code_r0x0046ee12;\n                bVar14 = uVar18 == 0 || var_40h == 8;\n                if (uVar18 != 0 && var_40h != 8) {\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0046ee46;\n                }\n                uVar19 = 0;\n                var_40h = 8;\n                uVar11 = arg_8h[2];\n                if (uVar11 < arg_8h[3]) goto code_r0x0046ee55;\ncode_r0x0046f0a0:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x0046ee64;\n                var_44h._0_1_ = true;\n            }\n            else {\n                if (!bVar14) break;\ncode_r0x0046ee12:\n                if ((*(iVar10 + 0x74) != iVar9) && (*(iVar10 + 0x76) != iVar9)) {\n                    var_42h = 0;\n                    bVar14 = true;\n                    goto code_r0x0046eeaa;\n                }\n                var_42h = var_40h == 0x10 || uVar18 == 0;\n                if (var_40h != 0x10 && uVar18 != 0) {\n                    bVar14 = true;\n                    goto code_r0x0046eeb7;\n                }\n                bVar5 = false;\n                uVar19 = 0;\n                var_40h = 0x10;\ncode_r0x0046ee46:\n                uVar11 = arg_8h[2];\n                bVar14 = bVar5;\n                if (arg_8h[3] <= uVar11) goto code_r0x0046f0a0;\ncode_r0x0046ee55:\n                arg_8h[2] = uVar11 + 2;\ncode_r0x0046ee64:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar9 = *arg_8h[2];\n                }\n                else {\n                    iVar9 = (**(*arg_8h + 0x24))();\n                }\n                var_44h._0_1_ = false;\n                if (iVar9 == -1) {\n                    arg_8h = NULL;\n                    var_44h._0_1_ = true;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar8 = arg_10h != NULL && arg_14h == -1;\n            bVar5 = arg_14h == -1;\n            if (bVar8) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar9 = *arg_10h[2];\n                }\n                else {\n                    iVar9 = (**(*arg_10h + 0x24))();\n                }\n                bVar5 = false;\n                if (iVar9 == -1) {\n                    arg_10h = NULL;\n                    bVar5 = bVar8;\n                }\n            }\n            if (var_44h._0_1_ == bVar5) {\n                var_42h = 1;\n                cVar7 = *(iVar10 + 0x10);\n                goto code_r0x0046eeaa;\n            }\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            cVar7 = *(iVar10 + 0x10);\n        } while (bVar14);\n        var_42h = 0;\n    }\ncode_r0x0046eeaa:\n    stack0xffffffb0 = 0x16;\n    if (var_40h != 0x10) {\ncode_r0x0046eeb7:\n        stack0xffffffb0 = var_40h;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (cVar7 != '\\0') {\ncode_r0x0046f580:\n        stack0xffffffcc = &var_28h;\n        var_2ch = 0;\n        fcn.004b2380(0x20);\n    }\n    uVar16 = var_42h;\n    var_58h = &var_28h;\n    uVar2 = *(iVar10 + 0xa4);\n    var_54h._0_2_ = 0xffff / var_40h;\n    if (uVar2 == 0) {\n        if (var_42h == 0) {\n            var_4fh._2_1_ = 0;\n            var_44h = 0;\ncode_r0x0046ef16:\n            uVar15 = uVar17;\n            uVar17 = uVar17 & 0xffff;\n            if (stack0xffffffb0 < 0xb) {\n                if ((uVar15 < 0x30) || (stack0xffffffb0 + 0x30U <= uVar15)) goto code_r0x0046f150;\n            }\n            else if (9 < uVar15 - 0x30) goto code_r0x0046f12d;\n            iVar12 = uVar17 - 0x30;\ncode_r0x0046ef3a:\n            if (iVar12 != -1) {\n                do {\n                    if (var_54h < var_44h) {\n                        var_4fh._2_1_ = 1;\n                        uVar18 = arg_8h[2];\n                        if (uVar18 < arg_8h[3]) goto code_r0x0046ef85;\ncode_r0x0046f213:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0046ef94;\n                        bVar5 = true;\n                    }\n                    else {\n                        var_4fh._2_1_ = var_4fh._2_1_ | 0xffff - iVar12 < var_44h * var_40h;\n                        var_44h = iVar12 + var_44h * var_40h;\n                        uVar19 = uVar19 + 1;\n                        uVar18 = arg_8h[2];\n                        if (arg_8h[3] <= uVar18) goto code_r0x0046f213;\ncode_r0x0046ef85:\n                        arg_8h[2] = uVar18 + 2;\ncode_r0x0046ef94:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar9 = *arg_8h[2];\n                        }\n                        else {\n                            iVar9 = (**(*arg_8h + 0x24))();\n                        }\n                        bVar5 = false;\n                        if (iVar9 == -1) {\n                            arg_8h = NULL;\n                            bVar5 = true;\n                        }\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar6 = arg_10h != NULL && arg_14h == -1;\n                    bVar8 = arg_14h == -1;\n                    if (bVar6) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar9 = *arg_10h[2];\n                        }\n                        else {\n                            iVar9 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar8 = false;\n                        if (iVar9 == -1) {\n                            arg_10h = NULL;\n                            bVar8 = bVar6;\n                        }\n                    }\n                    if (bVar5 == bVar8) {\n                        uVar2 = 1;\n                        goto code_r0x0046efde;\n                    }\n                    uVar17 = 0xffff;\n                    if (arg_8h == NULL) goto code_r0x0046ef16;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar17 = *arg_8h[2];\n                    }\n                    else {\n                        uVar17 = (**(*arg_8h + 0x24))();\n                    }\n                    uVar15 = uVar17;\n                    if (uVar15 != 0xffff) goto code_r0x0046ef16;\n                    arg_8h = NULL;\n                    if (stack0xffffffb0 < 0xb) break;\n                    uVar17 = 0xffff;\ncode_r0x0046f12d:\n                    if (5 < uVar15 - 0x61) goto code_r0x0046f2f0;\n                    iVar12 = uVar17 - 0x57;\n                    if (iVar12 == -1) break;\n                } while( true );\n            }\n            goto code_r0x0046f150;\n        }\n        var_4fh._2_1_ = 0;\n        var_42h = 0;\n        var_44h = 0;\n        uVar2 = uVar16;\n    }\n    else {\n        if (var_42h == 0) {\n            piVar1 = iVar10 + 0x78;\n            var_4fh._2_1_ = 0;\n            var_44h = 0;\ncode_r0x0046f32f:\n            uVar18 = var_2ch;\n            iVar9 = uVar17;\n            if ((*(iVar10 + 0x10) == 0) || (*(iVar10 + 0x26) != iVar9)) {\n                if (iVar9 == *(iVar10 + 0x24)) goto code_r0x0046f150;\n                iVar3 = *piVar1;\n                piVar13 = piVar1;\n                uVar18 = stack0xffffffb0;\n                while (iVar3 != iVar9) {\n                    piVar13 = piVar13 + 1;\n                    uVar18 = uVar18 - 1;\n                    if (uVar18 == 0) goto code_r0x0046f150;\n                    iVar3 = *piVar13;\n                }\n                iVar12 = piVar13 - piVar1 >> 1;\n                if (0x1e < piVar13 - piVar1) {\n                    iVar12 = iVar12 + -6;\n                }\n                if (var_44h <= var_54h) {\n                    uVar15 = var_44h * var_40h;\n                    var_44h = iVar12 + uVar15;\n                    var_4fh._2_1_ = var_4fh._2_1_ | 0xffff - iVar12 < uVar15;\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0046f382;\n                }\n                uVar18 = arg_8h[2];\n                var_4fh._2_1_ = uVar2;\n                if (uVar18 < arg_8h[3]) goto code_r0x0046f391;\ncode_r0x0046f45a:\n                (**(*arg_8h + 0x28))();\n                uVar16 = uVar2;\n                if (arg_8h != NULL) goto code_r0x0046f3a0;\n            }\n            else {\n                if (uVar19 == 0) {\n                    var_42h = *(iVar10 + 0x10);\n                    uVar2 = 0;\n                    goto code_r0x0046efde;\n                }\n                uVar17 = var_2ch + 1;\n                uVar11 = 0xf;\n                if (stack0xffffffcc != var_58h) {\n                    uVar11 = var_28h;\n                }\n                if (uVar11 < uVar17) {\n                    fcn.004b26d0(var_2ch, 0, 0, 1);\n                }\n                *(stack0xffffffcc + uVar18) = uVar19;\n                *(stack0xffffffcc + uVar17) = 0;\n                uVar19 = 0;\n                var_2ch = uVar17;\ncode_r0x0046f382:\n                uVar18 = arg_8h[2];\n                if (arg_8h[3] <= uVar18) goto code_r0x0046f45a;\ncode_r0x0046f391:\n                arg_8h[2] = uVar18 + 2;\ncode_r0x0046f3a0:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar9 = *arg_8h[2];\n                }\n                else {\n                    iVar9 = (**(*arg_8h + 0x24))();\n                }\n                uVar16 = 0;\n                if (iVar9 == -1) {\n                    arg_8h = NULL;\n                    uVar16 = uVar2;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar8 = arg_10h != NULL && arg_14h == -1;\n            bVar5 = arg_14h == -1;\n            if (bVar8) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar9 = *arg_10h[2];\n                }\n                else {\n                    iVar9 = (**(*arg_10h + 0x24))();\n                }\n                bVar5 = false;\n                if (iVar9 == -1) {\n                    arg_10h = NULL;\n                    bVar5 = bVar8;\n                }\n            }\n            if (bVar5 == uVar16) goto code_r0x0046efde;\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            goto code_r0x0046f32f;\n        }\n        var_4fh._2_1_ = 0;\n        var_42h = 0;\n        var_44h = 0;\n        uVar2 = uVar16;\n    }\ncode_r0x0046efde:\n    if (var_2ch != 0) goto code_r0x0046f162;\ncode_r0x0046eff0:\n    if ((uVar19 != 0) || (bVar14)) {\ncode_r0x0046f1cb:\n        if (var_42h == 0) {\n            if (var_4fh._2_1_ == 0) {\n                uVar15 = -var_44h;\n                if (!bVar4) {\n                    uVar15 = var_44h;\n                }\n                *arg_20h = uVar15;\n            }\n            else {\n                *arg_20h = 0xffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x0046f013;\n        }\n    }\ncode_r0x0046f002:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x0046f013:\n    if (uVar2 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != var_58h) {\n        fcn.004c33f0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x0046f2f0:\n    if (5 < uVar15 - 0x41) goto code_r0x0046f150;\n    iVar12 = uVar17 - 0x37;\n    goto code_r0x0046ef3a;\ncode_r0x0046f150:\n    uVar2 = 0;\n    if (var_2ch == 0) goto code_r0x0046eff0;\ncode_r0x0046f162:\n    uVar17 = var_2ch;\n    uVar18 = var_2ch + 1;\n    uVar11 = 0xf;\n    if (stack0xffffffcc != var_58h) {\n        uVar11 = var_28h;\n    }\n    if (uVar11 < uVar18) {\n        fcn.004b26d0(var_2ch, 0, 0, 1);\n    }\n    *(stack0xffffffcc + uVar17) = uVar19;\n    *(stack0xffffffcc + uVar18) = 0;\n    var_2ch = uVar18;\n    cVar7 = fcn.004be6e0(*(iVar10 + 8), *(iVar10 + 0xc), &var_31h + 1);\n    if (cVar7 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar14) || ((uVar19 | var_2ch) != 0)) goto code_r0x0046f1cb;\n    goto code_r0x0046f002;\n}\n",
        "token_count": 5279
    },
    "0046f810": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0046f810(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int16_t *piVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    uint16_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    bool bVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    ulong uVar16;\n    uint *var_70h;\n    uint var_6ch;\n    uint32_t var_68h;\n    int32_t var_64h;\n    uint32_t var_60h;\n    uint32_t var_5ch;\n    uint var_58h;\n    uint32_t var_54h;\n    uint32_t var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    char var_42h;\n    char var_41h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_bp_ch;\n    \n    iVar7 = arg_18h;\n    iVar4 = fcn.0044e2b0(arg_18h + 0x6c);\n    uVar5 = *(iVar7 + 0xc) & 0x4a;\n    if (uVar5 == 0x40) {\n        var_50h = 8;\ncode_r0x0046f850:\n        var_42h = fcn.00450bd0(&arg_10h);\n        if (var_42h == '\\0') {\ncode_r0x0046f86c:\n            uVar11 = arg_ch & 0xffff;\n            if ((arg_8h != NULL) && (arg_ch == -1)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar11 = *arg_8h[2];\n                }\n                else {\n                    uVar11 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar11 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            cVar2 = *(iVar4 + 0x10);\n            iVar3 = uVar11;\n            bVar15 = *(iVar4 + 0x70) == iVar3;\n            if ((((bVar15) || (*(iVar4 + 0x72) == iVar3)) && ((cVar2 == '\\0' || (*(iVar4 + 0x26) != iVar3)))) &&\n               (*(iVar4 + 0x24) != iVar3)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_42h = fcn.00450bd0(&arg_10h);\n                if (var_42h == '\\0') {\n                    uVar11 = fcn.00450cc0();\n                    cVar2 = *(iVar4 + 0x10);\n                    goto code_r0x0046f910;\n                }\n                var_48h = 0;\n                var_41h = false;\n                cVar2 = *(iVar4 + 0x10);\n            }\n            else {\ncode_r0x0046f910:\n                var_48h = 0;\n                var_41h = false;\n                do {\n                    iVar3 = uVar11;\n                    if ((cVar2 != '\\0') && (*(iVar4 + 0x26) == iVar3)) {\n                        var_42h = '\\0';\n                        if (var_50h != 0x10) goto code_r0x0046f9fd;\n                        var_28h = var_28h & 0xffffff00;\n                        var_54h = 0x16;\n                        goto code_r0x004701d2;\n                    }\n                    if (*(iVar4 + 0x24) == iVar3) break;\n                    if (*(iVar4 + 0x78) == iVar3) {\n                        var_41h = var_50h == 10 | var_41h ^ 1U;\n                        if (var_41h == false) goto code_r0x0046f952;\n                        bVar13 = var_50h == 8 || uVar5 == 0;\n                        if (var_50h != 8 && uVar5 != 0) {\n                            var_48h = var_48h + 1;\n                            goto code_r0x0046f98b;\n                        }\n                        var_48h = 0;\n                        var_50h = 8;\n                        uVar12 = arg_8h[2];\n                        var_41h = bVar13;\n                        if (arg_8h[3] <= uVar12) {\n                            var_50h = 8;\n                            goto code_r0x0046fcb0;\n                        }\ncode_r0x0046f99a:\n                        arg_8h[2] = uVar12 + 2;\ncode_r0x0046f9a9:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar3 = *arg_8h[2];\n                        }\n                        else {\n                            iVar3 = (**(*arg_8h + 0x24))();\n                        }\n                        bVar13 = false;\n                        if (iVar3 == -1) {\n                            arg_8h = NULL;\n                            bVar13 = true;\n                        }\n                    }\n                    else {\n                        if (var_41h == false) break;\ncode_r0x0046f952:\n                        if ((*(iVar4 + 0x74) != iVar3) && (*(iVar4 + 0x76) != iVar3)) {\n                            var_42h = '\\0';\n                            var_41h = true;\n                            goto code_r0x0046f9f1;\n                        }\n                        var_42h = var_50h == 0x10 || uVar5 == 0;\n                        if (var_50h != 0x10 && uVar5 != 0) {\n                            var_41h = true;\n                            goto code_r0x0046f9fd;\n                        }\n                        var_48h = 0;\n                        var_50h = 0x10;\n                        var_41h = false;\ncode_r0x0046f98b:\n                        uVar12 = arg_8h[2];\n                        if (uVar12 < arg_8h[3]) goto code_r0x0046f99a;\ncode_r0x0046fcb0:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0046f9a9;\n                        bVar13 = true;\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar9 = arg_10h != NULL && arg_14h == -1;\n                    bVar1 = arg_14h == -1;\n                    if (bVar9) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar3 = *arg_10h[2];\n                        }\n                        else {\n                            iVar3 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar1 = false;\n                        if (iVar3 == -1) {\n                            arg_10h = NULL;\n                            bVar1 = bVar9;\n                        }\n                    }\n                    if (bVar1 == bVar13) {\n                        var_42h = '\\x01';\n                        cVar2 = *(iVar4 + 0x10);\n                        goto code_r0x0046f9f1;\n                    }\n                    uVar11 = 0xffff;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar11 = *arg_8h[2];\n                        }\n                        else {\n                            uVar11 = (**(*arg_8h + 0x24))();\n                        }\n                        if (uVar11 == -1) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    cVar2 = *(iVar4 + 0x10);\n                } while (var_41h != false);\n                var_42h = '\\0';\n            }\ncode_r0x0046f9f1:\n            var_54h = 0x16;\n            if (var_50h != 0x10) goto code_r0x0046f9fd;\n        }\n        else {\n            uVar11 = 0;\n            var_48h = 0;\n            var_41h = false;\n            cVar2 = *(iVar4 + 0x10);\n            bVar15 = false;\ncode_r0x0046f9fd:\n            var_54h = var_50h;\n        }\n        unique0x00001d00 = &var_28h;\n        var_2ch = 0;\n        var_28h = var_28h & 0xffffff00;\n        if (cVar2 != '\\0') {\ncode_r0x004701d2:\n            stack0xffffffcc = &var_28h;\n            var_2ch = 0;\n            fcn.004b2380(0x20);\n        }\n        var_68h = 0;\n        var_64h = -0x80000000;\n        if (!bVar15) {\n            var_68h = 0xffffffff;\n            var_64h = 0x7fffffff;\n        }\n        uVar16 = fcn.004386d0(var_68h, var_64h, var_50h, 0);\n        uVar5 = uVar16 >> 0x20;\n        if (*(iVar4 + 0xa4) == '\\0') {\n            if (var_42h == '\\0') {\n                bVar13 = false;\n                uVar12 = 0;\n                uVar14 = 0;\ncode_r0x0046fa94:\n                uVar10 = uVar11;\n                uVar11 = uVar11 & 0xffff;\n                if (var_54h < 0xb) {\n                    if ((uVar10 < 0x30) || (var_54h + 0x30U <= uVar10)) goto code_r0x0046fd72;\n                }\n                else if (9 < uVar10 - 0x30) goto code_r0x0046fd4d;\n                uVar8 = uVar11 - 0x30;\ncode_r0x0046fab8:\n                if (uVar8 != 0xffffffff) {\n                    do {\n                        if (uVar5 < uVar14 || uVar5 - uVar14 < (uVar16 < uVar12)) {\n                            bVar13 = true;\n                            uVar11 = arg_8h[2];\n                            if (arg_8h[3] <= uVar11) goto code_r0x0046fe23;\ncode_r0x0046fb18:\n                            arg_8h[2] = uVar11 + 2;\ncode_r0x0046fb27:\n                            if (arg_8h[2] < arg_8h[3]) {\n                                iVar3 = *arg_8h[2];\n                            }\n                            else {\n                                iVar3 = (**(*arg_8h + 0x24))();\n                            }\n                            var_58h._0_1_ = false;\n                            if (iVar3 == -1) {\n                                arg_8h = NULL;\n                                var_58h._0_1_ = true;\n                            }\n                        }\n                        else {\n                            uVar11 = uVar12 * var_50h;\n                            uVar14 = (uVar12 * var_50h >> 0x20) + var_50h * uVar14;\n                            uVar12 = (var_64h - (uVar8 >> 0x1f)) - (var_68h < uVar8);\n                            bVar13 = bVar13 | (uVar12 < uVar14 || uVar12 - uVar14 < (var_68h - uVar8 < uVar11));\n                            uVar12 = uVar11 + uVar8;\n                            uVar14 = uVar14 + (uVar8 >> 0x1f) + CARRY4(uVar11, uVar8);\n                            var_48h = var_48h + 1;\n                            uVar11 = arg_8h[2];\n                            if (uVar11 < arg_8h[3]) goto code_r0x0046fb18;\ncode_r0x0046fe23:\n                            (**(*arg_8h + 0x28))();\n                            if (arg_8h != NULL) goto code_r0x0046fb27;\n                            var_58h._0_1_ = true;\n                        }\n                        arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                        bVar9 = arg_10h != NULL && arg_14h == -1;\n                        bVar1 = arg_14h == -1;\n                        if (bVar9) {\n                            if (arg_10h[2] < arg_10h[3]) {\n                                iVar3 = *arg_10h[2];\n                            }\n                            else {\n                                iVar3 = (**(*arg_10h + 0x24))();\n                            }\n                            bVar1 = false;\n                            if (iVar3 == -1) {\n                                arg_10h = NULL;\n                                bVar1 = bVar9;\n                            }\n                        }\n                        if (var_58h._0_1_ == bVar1) goto code_r0x0046fb65;\n                        uVar11 = 0xffff;\n                        if (arg_8h == NULL) goto code_r0x0046fa94;\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar11 = *arg_8h[2];\n                        }\n                        else {\n                            uVar11 = (**(*arg_8h + 0x24))();\n                        }\n                        uVar10 = uVar11;\n                        if (uVar10 != 0xffff) goto code_r0x0046fa94;\n                        arg_8h = NULL;\n                        if (var_54h < 0xb) break;\n                        uVar11 = 0xffff;\ncode_r0x0046fd4d:\n                        uVar8 = uVar11 - 0x57;\n                        if (uVar10 - 0x61 < 6) goto code_r0x0046fab8;\n                        if ((5 < uVar10 - 0x41) || (uVar8 = uVar11 - 0x37,  uVar8 == 0xffffffff)) break;\n                    } while( true );\n                }\n                goto code_r0x0046fd72;\n            }\n            goto code_r0x0046fc41;\n        }\ncode_r0x0046ff50:\n        var_50h._0_1_ = var_42h;\n        var_60h = uVar16 >> 0x20;\n        var_5ch = uVar16;\n        var_70h = &var_28h;\n        if (var_42h == '\\0') {\n            bVar13 = false;\n            uVar12 = 0;\n            uVar14 = 0;\ncode_r0x0046ff6b:\n            uVar5 = var_2ch;\n            iVar3 = uVar11;\n            if ((*(iVar4 + 0x10) == '\\0') || (*(iVar4 + 0x26) != iVar3)) {\n                piVar6 = iVar4 + 0x78;\n                uVar5 = var_54h;\n                if (iVar3 == *(iVar4 + 0x24)) goto code_r0x0046fd72;\n                while (*piVar6 != iVar3) {\n                    uVar5 = uVar5 - 1;\n                    piVar6 = piVar6 + 1;\n                    if (uVar5 == 0) {\n                        var_50h._0_1_ = '\\0';\n                        goto code_r0x0046fb6c;\n                    }\n                }\n                iVar7 = piVar6 - (iVar4 + 0x78);\n                uVar11 = iVar7 >> 1;\n                uVar5 = uVar11 - 6;\n                if (iVar7 < 0x1f) {\n                    uVar5 = uVar11;\n                }\n                if (uVar14 <= var_60h && (var_5ch < uVar12) <= var_60h - uVar14) {\n                    uVar11 = uVar12 * var_50h;\n                    uVar14 = (uVar12 * var_50h >> 0x20) + var_50h * uVar14;\n                    uVar12 = (var_64h - (uVar5 >> 0x1f)) - (var_68h < uVar5);\n                    bVar13 = bVar13 | (uVar12 < uVar14 || uVar12 - uVar14 < (var_68h - uVar5 < uVar11));\n                    uVar12 = uVar11 + uVar5;\n                    uVar14 = uVar14 + (uVar5 >> 0x1f) + CARRY4(uVar11, uVar5);\n                    var_48h = var_48h + 1;\n                    goto code_r0x0046ffcd;\n                }\n                bVar13 = true;\n                uVar5 = arg_8h[2];\n                if (arg_8h[3] <= uVar5) goto code_r0x004700e0;\ncode_r0x0046ffdc:\n                arg_8h[2] = uVar5 + 2;\ncode_r0x0046ffeb:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar3 = *arg_8h[2];\n                }\n                else {\n                    iVar3 = (**(*arg_8h + 0x24))();\n                }\n                var_58h._0_1_ = false;\n                if (iVar3 == -1) {\n                    arg_8h = NULL;\n                    var_58h._0_1_ = true;\n                }\n            }\n            else {\n                if (var_48h == 0) {\n                    var_50h._0_1_ = '\\0';\n                    var_42h = *(iVar4 + 0x10);\n                    goto code_r0x0046fb6c;\n                }\n                uVar11 = var_2ch + 1;\n                uVar8 = 0xf;\n                if (stack0xffffffcc != var_70h) {\n                    uVar8 = var_28h;\n                }\n                if (uVar8 < uVar11) {\n                    fcn.004b26d0(var_2ch, 0, 0, 1);\n                }\n                var_48h = 0;\n                *(stack0xffffffcc + uVar5) = var_48h;\n                *(stack0xffffffcc + uVar11) = 0;\n                var_2ch = uVar11;\ncode_r0x0046ffcd:\n                uVar5 = arg_8h[2];\n                if (uVar5 < arg_8h[3]) goto code_r0x0046ffdc;\ncode_r0x004700e0:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x0046ffeb;\n                var_58h._0_1_ = true;\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar9 = arg_10h != NULL && arg_14h == -1;\n            bVar1 = arg_14h == -1;\n            if (bVar9) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar3 = *arg_10h[2];\n                }\n                else {\n                    iVar3 = (**(*arg_10h + 0x24))();\n                }\n                bVar1 = false;\n                if (iVar3 == -1) {\n                    arg_10h = NULL;\n                    bVar1 = bVar9;\n                }\n            }\n            if (bVar1 != var_58h._0_1_) {\n                uVar11 = 0xffff;\n                if (arg_8h != NULL) {\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar11 = *arg_8h[2];\n                    }\n                    else {\n                        uVar11 = (**(*arg_8h + 0x24))();\n                    }\n                    if (uVar11 == -1) {\n                        arg_8h = NULL;\n                    }\n                }\n                goto code_r0x0046ff6b;\n            }\ncode_r0x0046fb65:\n            var_50h._0_1_ = '\\x01';\n        }\n        else {\n            uVar12 = 0;\n            uVar14 = 0;\n            bVar13 = false;\n            var_42h = '\\0';\n        }\n    }\n    else {\n        var_50h = 10;\n        if (uVar5 != 8) goto code_r0x0046f850;\n        var_50h = 0x10;\n        cVar2 = fcn.00450bd0(&arg_10h);\n        if (cVar2 == '\\0') goto code_r0x0046f86c;\n        unique0x00001d00 = &var_28h;\n        var_2ch = 0;\n        var_42h = *(iVar4 + 0x10);\n        var_28h = var_28h & 0xffffff00;\n        if (var_42h != '\\0') {\n            uVar11 = 0;\n            var_48h = 0;\n            var_41h = false;\n            bVar15 = false;\n            var_54h = 0x16;\n            goto code_r0x004701d2;\n        }\n        var_42h = *(iVar4 + 0xa4);\n        bVar15 = false;\n        if (var_42h != '\\0') {\n            var_48h = 0;\n            uVar11 = 0;\n            var_41h = false;\n            uVar16 = 0x7ffffffffffffff;\n            var_68h = 0xffffffff;\n            var_64h = 0x7fffffff;\n            var_50h = 0x10;\n            var_54h = 0x16;\n            goto code_r0x0046ff50;\n        }\n        var_48h = 0;\n        var_41h = var_42h;\ncode_r0x0046fc41:\n        uVar12 = 0;\n        uVar14 = 0;\n        bVar13 = false;\n        var_42h = '\\0';\n        var_50h._0_1_ = '\\x01';\n    }\ncode_r0x0046fb6c:\n    if (var_2ch == 0) goto code_r0x0046fb74;\ncode_r0x0046fd81:\n    fcn.004b2860(var_48h);\n    cVar2 = fcn.004be6e0(*(iVar4 + 8), *(iVar4 + 0xc), &var_31h + 1);\n    if (cVar2 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if (var_41h == '\\0') {\n        var_48h = var_48h | var_2ch;\n        goto joined_r0x0046fb83;\n    }\ncode_r0x0046fdc8:\n    if (var_42h == '\\0') {\n        if (bVar13) {\n            uVar5 = 0;\n            uVar11 = 0x80000000;\n            if (!bVar15) {\n                uVar5 = 0xffffffff;\n                uVar11 = 0x7fffffff;\n            }\n            *arg_20h = uVar5;\n            arg_20h[1] = uVar11;\n            *arg_1ch = 4;\n        }\n        else {\n            if (bVar15) {\n                bVar15 = uVar12 != 0;\n                uVar12 = -uVar12;\n                uVar14 = -(uVar14 + bVar15);\n            }\n            *arg_20h = uVar12;\n            arg_20h[1] = uVar14;\n        }\n        goto code_r0x0046fba2;\n    }\n    goto code_r0x0046fb89;\ncode_r0x0046fd72:\n    var_50h._0_1_ = '\\0';\n    if (var_2ch != 0) goto code_r0x0046fd81;\ncode_r0x0046fb74:\n    if (var_41h == '\\x01') goto code_r0x0046fdc8;\njoined_r0x0046fb83:\n    if (var_48h != 0) goto code_r0x0046fdc8;\ncode_r0x0046fb89:\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x0046fba2:\n    var_70h = &var_28h;\n    if (var_50h != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != var_70h) {\n        fcn.004c33f0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 5845
    },
    "004703a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.004703a0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    bool bVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int16_t *piVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint16_t uVar15;\n    uint32_t uVar16;\n    uint8_t uVar17;\n    uint32_t uVar18;\n    bool bVar19;\n    ulong uVar20;\n    uint var_6ch;\n    uint *var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_bp_ch;\n    \n    iVar12 = arg_18h;\n    uVar18 = 8;\n    iVar8 = fcn.0044e2b0(arg_18h + 0x6c);\n    uVar9 = *(iVar12 + 0xc) & 0x4a;\n    if ((uVar9 != 0x40) && (uVar18 = 0x10,  uVar9 != 8)) {\n        uVar18 = 10;\n    }\n    bVar2 = arg_8h != NULL && arg_ch == -1;\n    bVar19 = arg_ch == -1;\n    if (bVar2) {\n        if (arg_8h[2] < arg_8h[3]) {\n            iVar7 = *arg_8h[2];\n        }\n        else {\n            iVar7 = (**(*arg_8h + 0x24))();\n        }\n        bVar19 = false;\n        if (iVar7 == -1) {\n            arg_8h = NULL;\n            bVar19 = bVar2;\n        }\n    }\n    bVar2 = arg_10h != NULL && arg_14h == -1;\n    bVar3 = arg_14h == -1;\n    if (bVar2) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar7 = *arg_10h[2];\n        }\n        else {\n            iVar7 = (**(*arg_10h + 0x24))();\n        }\n        bVar3 = false;\n        if (iVar7 == -1) {\n            arg_10h = NULL;\n            bVar3 = bVar2;\n        }\n    }\n    if (bVar3 == bVar19) {\n        cVar5 = *(iVar8 + 0x10);\n        bVar2 = false;\n        uVar16 = 0;\n        var_48h._2_1_ = 1;\n        var_44h = 0;\n        bVar19 = false;\n    }\n    else {\n        uVar16 = arg_ch & 0xffff;\n        if ((arg_8h != NULL) && (arg_ch == -1)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar16 = *arg_8h[2];\n            }\n            else {\n                uVar16 = (**(*arg_8h + 0x24))();\n            }\n            if (uVar16 == -1) {\n                arg_8h = NULL;\n            }\n        }\n        cVar5 = *(iVar8 + 0x10);\n        iVar7 = uVar16;\n        bVar2 = *(iVar8 + 0x70) == iVar7;\n        if ((bVar2) || (*(iVar8 + 0x72) == iVar7)) {\n            if (((cVar5 == '\\0') || (*(iVar8 + 0x26) != iVar7)) && (*(iVar8 + 0x24) != iVar7)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_48h._2_1_ = fcn.00450bd0(&arg_10h);\n                if (var_48h._2_1_ != 0) {\n                    cVar5 = *(iVar8 + 0x10);\n                    var_44h = 0;\n                    bVar19 = false;\n                    goto code_r0x00470599;\n                }\n                uVar16 = fcn.00450cc0();\n                cVar5 = *(iVar8 + 0x10);\n            }\n        }\n        else {\n            bVar2 = false;\n        }\n        var_44h = 0;\n        bVar19 = false;\n        do {\n            iVar7 = uVar16;\n            if ((cVar5 != '\\0') && (*(iVar8 + 0x26) == iVar7)) {\n                var_48h._2_1_ = 0;\n                if (uVar18 != 0x10) goto code_r0x004705a5;\n                var_28h = var_28h & 0xffffff00;\n                var_50h = 0x16;\n                goto code_r0x00470cd0;\n            }\n            if (*(iVar8 + 0x24) == iVar7) break;\n            if (*(iVar8 + 0x78) == iVar7) {\n                bVar3 = uVar18 == 10 | bVar19 ^ 1U;\n                if (!bVar3) goto code_r0x004704f8;\n                bVar19 = uVar9 == 0 || uVar18 == 8;\n                if (uVar9 != 0 && uVar18 != 8) {\n                    var_44h = var_44h + 1;\n                    goto code_r0x0047052e;\n                }\n                var_44h = 0;\n                uVar18 = 8;\n                uVar10 = arg_8h[2];\n                if (arg_8h[3] <= uVar10) goto code_r0x004707d0;\ncode_r0x0047053d:\n                arg_8h[2] = uVar10 + 2;\ncode_r0x0047054c:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar7 = *arg_8h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_8h + 0x24))();\n                }\n                var_48h._3_1_ = false;\n                if (iVar7 == -1) {\n                    arg_8h = NULL;\n                    var_48h._3_1_ = true;\n                }\n            }\n            else {\n                if (!bVar19) break;\ncode_r0x004704f8:\n                if ((*(iVar8 + 0x74) != iVar7) && (*(iVar8 + 0x76) != iVar7)) {\n                    var_48h._2_1_ = 0;\n                    bVar19 = true;\n                    goto code_r0x00470599;\n                }\n                var_48h._2_1_ = uVar18 == 0x10 || uVar9 == 0;\n                if (uVar18 != 0x10 && uVar9 != 0) {\n                    bVar19 = true;\n                    goto code_r0x004705a5;\n                }\n                var_44h = 0;\n                uVar18 = 0x10;\n                bVar3 = false;\ncode_r0x0047052e:\n                uVar10 = arg_8h[2];\n                bVar19 = bVar3;\n                if (uVar10 < arg_8h[3]) goto code_r0x0047053d;\ncode_r0x004707d0:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x0047054c;\n                var_48h._3_1_ = true;\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar6 = arg_10h != NULL && arg_14h == -1;\n            bVar3 = arg_14h == -1;\n            if (bVar6) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar7 = *arg_10h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_10h + 0x24))();\n                }\n                bVar3 = false;\n                if (iVar7 == -1) {\n                    arg_10h = NULL;\n                    bVar3 = bVar6;\n                }\n            }\n            if (var_48h._3_1_ == bVar3) {\n                cVar5 = *(iVar8 + 0x10);\n                var_48h._2_1_ = 1;\n                goto code_r0x00470599;\n            }\n            uVar16 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar16 = *arg_8h[2];\n                }\n                else {\n                    uVar16 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar16 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            cVar5 = *(iVar8 + 0x10);\n        } while (bVar19);\n        var_48h._2_1_ = 0;\n    }\ncode_r0x00470599:\n    var_50h = 0x16;\n    if (uVar18 != 0x10) {\ncode_r0x004705a5:\n        var_50h = uVar18;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (cVar5 != '\\0') {\ncode_r0x00470cd0:\n        stack0xffffffcc = &var_28h;\n        var_2ch = 0;\n        fcn.004b2380(0x20);\n    }\n    uVar17 = var_48h._2_1_;\n    var_68h = &var_28h;\n    uVar20 = fcn.004386d0(0xffffffff, 0xffffffff, uVar18, 0);\n    uVar9 = uVar20 >> 0x20;\n    uVar1 = *(iVar8 + 0xa4);\n    if (uVar1 == 0) {\n        if (var_48h._2_1_ == 0) {\n            var_48h._1_1_ = 0;\n            var_40h = 0;\n            var_3ch = 0;\ncode_r0x00470628:\n            uVar15 = uVar16;\n            uVar16 = uVar16 & 0xffff;\n            if (var_50h < 0xb) {\n                if ((uVar15 < 0x30) || (var_50h + 0x30U <= uVar15)) goto code_r0x00470880;\n            }\n            else if (9 < uVar15 - 0x30) goto code_r0x0047085d;\n            uVar16 = uVar16 - 0x30;\ncode_r0x0047064c:\n            if (uVar16 != 0xffffffff) {\n                do {\n                    if (uVar9 < var_3ch || uVar9 - var_3ch < (uVar20 < var_40h)) {\n                        var_48h._1_1_ = 1;\n                        uVar16 = arg_8h[2];\n                        if (arg_8h[3] <= uVar16) goto code_r0x00470923;\ncode_r0x004706b7:\n                        arg_8h[2] = uVar16 + 2;\ncode_r0x004706c6:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar7 = *arg_8h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_8h + 0x24))();\n                        }\n                        bVar3 = false;\n                        if (iVar7 == -1) {\n                            arg_8h = NULL;\n                            bVar3 = true;\n                        }\n                    }\n                    else {\n                        uVar10 = var_40h * uVar18;\n                        uVar14 = (var_40h * uVar18 >> 0x20) + uVar18 * var_3ch;\n                        uVar13 = ~(uVar16 >> 0x1f);\n                        var_48h._1_1_ = var_48h._1_1_ | (uVar13 < uVar14 || uVar13 - uVar14 < (~uVar16 < uVar10));\n                        var_40h = uVar16 + uVar10;\n                        var_3ch = (uVar16 >> 0x1f) + uVar14 + CARRY4(uVar16, uVar10);\n                        uVar16 = arg_8h[2];\n                        var_44h = var_44h + 1;\n                        if (uVar16 < arg_8h[3]) goto code_r0x004706b7;\ncode_r0x00470923:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x004706c6;\n                        bVar3 = true;\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar4 = arg_10h != NULL && arg_14h == -1;\n                    bVar6 = arg_14h == -1;\n                    if (bVar4) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar7 = *arg_10h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar6 = false;\n                        if (iVar7 == -1) {\n                            arg_10h = NULL;\n                            bVar6 = bVar4;\n                        }\n                    }\n                    if (bVar3 == bVar6) {\n                        uVar1 = 1;\n                        goto code_r0x0047070c;\n                    }\n                    uVar16 = 0xffff;\n                    if (arg_8h == NULL) goto code_r0x00470628;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar16 = *arg_8h[2];\n                    }\n                    else {\n                        uVar16 = (**(*arg_8h + 0x24))();\n                    }\n                    uVar15 = uVar16;\n                    if (uVar15 != 0xffff) goto code_r0x00470628;\n                    arg_8h = NULL;\n                    if (var_50h < 0xb) break;\n                    uVar16 = 0xffff;\ncode_r0x0047085d:\n                    if (5 < uVar15 - 0x61) goto code_r0x00470a01;\n                    uVar16 = uVar16 - 0x57;\n                    if (uVar16 == 0xffffffff) break;\n                } while( true );\n            }\n            goto code_r0x00470880;\n        }\n        var_48h._1_1_ = 0;\n        var_48h._2_1_ = 0;\n        var_40h = 0;\n        var_3ch = 0;\n        uVar1 = uVar17;\n    }\n    else {\n        if (var_48h._2_1_ == 0) {\n            var_48h._1_1_ = 0;\n            var_40h = 0;\n            var_3ch = 0;\n            do {\n                uVar10 = var_2ch;\n                iVar7 = uVar16;\n                if ((*(iVar8 + 0x10) == 0) || (*(iVar8 + 0x26) != iVar7)) {\n                    piVar11 = iVar8 + 0x78;\n                    uVar16 = var_50h;\n                    if (iVar7 == *(iVar8 + 0x24)) goto code_r0x00470880;\n                    while (*piVar11 != iVar7) {\n                        uVar16 = uVar16 - 1;\n                        piVar11 = piVar11 + 1;\n                        if (uVar16 == 0) {\n                            uVar1 = 0;\n                            goto code_r0x0047070c;\n                        }\n                    }\n                    iVar12 = piVar11 - (iVar8 + 0x78);\n                    uVar10 = iVar12 >> 1;\n                    uVar16 = uVar10 - 6;\n                    if (iVar12 < 0x1f) {\n                        uVar16 = uVar10;\n                    }\n                    if (var_3ch <= uVar9 && (uVar20 < var_40h) <= uVar9 - var_3ch) {\n                        uVar10 = var_40h * uVar18;\n                        uVar14 = var_3ch * uVar18 + (var_40h * uVar18 >> 0x20);\n                        uVar13 = ~(uVar16 >> 0x1f);\n                        var_48h._1_1_ = var_48h._1_1_ | (uVar13 < uVar14 || uVar13 - uVar14 < (~uVar16 < uVar10));\n                        var_40h = uVar16 + uVar10;\n                        var_3ch = (uVar16 >> 0x1f) + uVar14 + CARRY4(uVar16, uVar10);\n                        var_44h = var_44h + 1;\n                        goto code_r0x00470aad;\n                    }\n                    uVar16 = arg_8h[2];\n                    var_48h._1_1_ = uVar1;\n                    if (arg_8h[3] <= uVar16) goto code_r0x00470b89;\ncode_r0x00470abc:\n                    arg_8h[2] = uVar16 + 2;\ncode_r0x00470acb:\n                    if (arg_8h[2] < arg_8h[3]) {\n                        iVar7 = *arg_8h[2];\n                    }\n                    else {\n                        iVar7 = (**(*arg_8h + 0x24))();\n                    }\n                    uVar17 = 0;\n                    if (iVar7 == -1) {\n                        arg_8h = NULL;\n                        uVar17 = uVar1;\n                    }\n                }\n                else {\n                    if (var_44h == 0) {\n                        var_48h._2_1_ = *(iVar8 + 0x10);\n                        uVar1 = 0;\n                        goto code_r0x0047070c;\n                    }\n                    uVar16 = var_2ch + 1;\n                    uVar13 = 0xf;\n                    if (stack0xffffffcc != var_68h) {\n                        uVar13 = var_28h;\n                    }\n                    if (uVar13 < uVar16) {\n                        fcn.004b26d0(var_2ch, 0, 0, 1);\n                    }\n                    var_44h = 0;\n                    *(stack0xffffffcc + uVar10) = var_44h;\n                    *(stack0xffffffcc + uVar16) = 0;\n                    var_2ch = uVar16;\ncode_r0x00470aad:\n                    uVar16 = arg_8h[2];\n                    if (uVar16 < arg_8h[3]) goto code_r0x00470abc;\ncode_r0x00470b89:\n                    (**(*arg_8h + 0x28))();\n                    uVar17 = uVar1;\n                    if (arg_8h != NULL) goto code_r0x00470acb;\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                bVar6 = arg_10h != NULL && arg_14h == -1;\n                bVar3 = arg_14h == -1;\n                if (bVar6) {\n                    if (arg_10h[2] < arg_10h[3]) {\n                        iVar7 = *arg_10h[2];\n                    }\n                    else {\n                        iVar7 = (**(*arg_10h + 0x24))();\n                    }\n                    bVar3 = false;\n                    if (iVar7 == -1) {\n                        arg_10h = NULL;\n                        bVar3 = bVar6;\n                    }\n                }\n                if (bVar3 == uVar17) goto code_r0x0047070c;\n                uVar16 = 0xffff;\n                if (arg_8h != NULL) {\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar16 = *arg_8h[2];\n                    }\n                    else {\n                        uVar16 = (**(*arg_8h + 0x24))();\n                    }\n                    if (uVar16 == -1) {\n                        arg_8h = NULL;\n                    }\n                }\n            } while( true );\n        }\n        var_48h._1_1_ = 0;\n        var_40h = 0;\n        var_3ch = 0;\n        var_48h._2_1_ = 0;\n        uVar1 = uVar17;\n    }\ncode_r0x0047070c:\n    if (var_2ch != 0) goto code_r0x0047088f;\ncode_r0x00470714:\n    if ((var_44h != 0) || (bVar19)) {\ncode_r0x004708d3:\n        if (var_48h._2_1_ == 0) {\n            if (var_48h._1_1_ == 0) {\n                if (bVar2) {\n                    bVar19 = var_40h != 0;\n                    var_40h = -var_40h;\n                    var_3ch = -(var_3ch + bVar19);\n                }\n                *arg_20h = var_40h;\n                arg_20h[1] = var_3ch;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                arg_20h[1] = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00470742;\n        }\n    }\ncode_r0x00470729:\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x00470742:\n    if (uVar1 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != var_68h) {\n        fcn.004c33f0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x00470a01:\n    if (5 < uVar15 - 0x41) goto code_r0x00470880;\n    uVar16 = uVar16 - 0x37;\n    goto code_r0x0047064c;\ncode_r0x00470880:\n    uVar1 = 0;\n    if (var_2ch == 0) goto code_r0x00470714;\ncode_r0x0047088f:\n    fcn.004b2860(var_44h);\n    cVar5 = fcn.004be6e0(*(iVar8 + 8), *(iVar8 + 0xc), &var_31h + 1);\n    if (cVar5 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar19) || ((var_44h | var_2ch) != 0)) goto code_r0x004708d3;\n    goto code_r0x00470729;\n}\n",
        "token_count": 5555
    },
    "00470f30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00470f30(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    bool bVar4;\n    char cVar5;\n    uint16_t uVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint16_t *puVar10;\n    int32_t iVar11;\n    bool bVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    bool bVar16;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint *var_40h;\n    uint32_t var_3ch;\n    uint8_t var_36h;\n    int32_t var_35h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar11 = arg_18h;\n    iVar8 = fcn.0044e2b0(arg_18h + 0x6c);\n    uVar14 = *(iVar11 + 0xc) & 0x4a;\n    if (uVar14 == 0x40) {\n        uVar15 = 8;\ncode_r0x00470f6f:\n        var_35h._0_1_ = fcn.00450bd0(&arg_10h);\n        if (var_35h == '\\0') {\ncode_r0x00470f8e:\n            var_40h = &arg_10h;\n            uVar6 = fcn.00450c70();\n            bVar16 = *(iVar8 + 0x70) == uVar6;\n            cVar3 = *(iVar8 + 0x10);\n            if ((((bVar16) || (*(iVar8 + 0x72) == uVar6)) && ((cVar3 == '\\0' || (*(iVar8 + 0x26) != uVar6)))) &&\n               (*(iVar8 + 0x24) != uVar6)) {\n                fcn.004a6690();\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_35h._0_1_ = fcn.00450bd0(var_40h);\n                stack0xffffffc8 = 0;\n                bVar2 = false;\n                if (var_35h == '\\0') {\n                    uVar6 = fcn.00450c70();\n                    cVar3 = *(iVar8 + 0x10);\n                    goto code_r0x004711d8;\n                }\n            }\n            else {\ncode_r0x004711d8:\n                stack0xffffffc8 = 0;\n                bVar2 = false;\n                while (((cVar3 == '\\0' || (*(iVar8 + 0x26) != uVar6)) && (*(iVar8 + 0x24) != uVar6))) {\n                    if (*(iVar8 + 0x78) == uVar6) {\n                        bVar4 = uVar15 == 10 | bVar2 ^ 1U;\n                        if (!bVar4) goto code_r0x0047120f;\n                        bVar2 = uVar14 == 0 || uVar15 == 8;\n                        if (uVar14 != 0 && uVar15 != 8) {\n                            unique0x00007a80 = stack0xffffffc8 + 1;\n                            goto code_r0x00471245;\n                        }\n                        stack0xffffffc8 = 0;\n                        uVar15 = 8;\n                        uVar9 = arg_8h[2];\n                        if (arg_8h[3] <= uVar9) goto code_r0x00471300;\ncode_r0x00471254:\n                        arg_8h[2] = uVar9 + 2;\ncode_r0x00471263:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar7 = *arg_8h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_8h + 0x24))();\n                        }\n                        var_35h._0_1_ = false;\n                        if (iVar7 == -1) {\n                            arg_8h = NULL;\n                            var_35h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar2) break;\ncode_r0x0047120f:\n                        if ((*(iVar8 + 0x74) != uVar6) && (*(iVar8 + 0x76) != uVar6)) {\n                            var_35h._0_1_ = '\\0';\n                            bVar2 = true;\n                            goto code_r0x00471010;\n                        }\n                        var_35h._0_1_ = uVar15 == 0x10 || uVar14 == 0;\n                        if (uVar15 != 0x10 && uVar14 != 0) {\n                            bVar2 = true;\n                            goto code_r0x0047101c;\n                        }\n                        stack0xffffffc8 = 0;\n                        uVar15 = 0x10;\n                        bVar4 = false;\ncode_r0x00471245:\n                        uVar9 = arg_8h[2];\n                        bVar2 = bVar4;\n                        if (uVar9 < arg_8h[3]) goto code_r0x00471254;\ncode_r0x00471300:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00471263;\n                        var_35h._0_1_ = true;\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar12 = arg_10h != NULL && arg_14h == -1;\n                    bVar4 = arg_14h == -1;\n                    if (bVar12) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar7 = *arg_10h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar4 = false;\n                        if (iVar7 == -1) {\n                            arg_10h = NULL;\n                            bVar4 = bVar12;\n                        }\n                    }\n                    if (var_35h == bVar4) {\n                        var_35h._0_1_ = '\\x01';\n                        goto code_r0x00471010;\n                    }\n                    uVar6 = 0xffff;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar6 = *arg_8h[2];\n                        }\n                        else {\n                            uVar6 = (**(*arg_8h + 0x24))();\n                        }\n                        if (uVar6 == 0xffff) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    if (!bVar2) break;\n                    cVar3 = *(iVar8 + 0x10);\n                }\n                var_35h._0_1_ = '\\0';\n            }\ncode_r0x00471010:\n            var_44h = 0x16;\n            if (uVar15 == 0x10) goto code_r0x0047101f;\n        }\n        else {\n            uVar6 = 0;\n            stack0xffffffc8 = 0;\n            bVar2 = false;\n            bVar16 = false;\n        }\ncode_r0x0047101c:\n        var_44h = uVar15;\n    }\n    else {\n        if (uVar14 != 8) {\n            uVar15 = 10;\n            goto code_r0x00470f6f;\n        }\n        uVar15 = 0x10;\n        var_35h._0_1_ = fcn.00450bd0(&arg_10h);\n        if (var_35h == '\\0') goto code_r0x00470f8e;\n        uVar6 = 0;\n        stack0xffffffc8 = 0;\n        uVar15 = 0x10;\n        bVar2 = false;\n        bVar16 = false;\n        var_44h = 0x16;\n    }\ncode_r0x0047101f:\n    cVar3 = var_35h;\n    var_40h = &arg_10h;\n    *NULL = fcn.0048b900(0, 0, &var_1eh + 1);\n    if (*(iVar8 + 0x10) != '\\0') {\n        fcn.0048d0f0(0x20);\n    }\n    uVar14 = 0xffffffff / uVar15;\n    uVar1 = *(iVar8 + 0xa4);\n    if (uVar1 == 0) {\n        var_36h = 0;\n        if (var_35h == '\\0') {\n            var_3ch = 0;\n            do {\n                uVar9 = uVar6;\n                if (var_44h < 0xb) {\n                    if ((uVar6 < 0x30) || (var_44h + 0x30U <= uVar6)) goto code_r0x004713b0;\ncode_r0x004710a6:\n                    uVar9 = uVar9 - 0x30;\n                }\n                else {\n                    if (uVar6 - 0x30 < 10) goto code_r0x004710a6;\n                    if (uVar6 - 0x61 < 6) {\n                        uVar9 = uVar9 - 0x57;\n                    }\n                    else {\n                        if (5 < uVar6 - 0x41) goto code_r0x004713b0;\n                        uVar9 = uVar9 - 0x37;\n                    }\n                }\n                if (uVar9 == 0xffffffff) goto code_r0x004713b0;\n                if (uVar14 < var_3ch) {\n                    var_36h = 1;\n                    uVar9 = arg_8h[2];\n                    if (arg_8h[3] <= uVar9) goto code_r0x00471453;\ncode_r0x004710e5:\n                    arg_8h[2] = uVar9 + 2;\n                }\n                else {\n                    var_36h = var_36h | ~uVar9 < var_3ch * uVar15;\n                    var_3ch = uVar9 + var_3ch * uVar15;\n                    unique0x00007a80 = stack0xffffffc8 + 1;\n                    uVar9 = arg_8h[2];\n                    if (uVar9 < arg_8h[3]) goto code_r0x004710e5;\ncode_r0x00471453:\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                cVar3 = fcn.00450bd0(var_40h);\n                if (cVar3 != '\\0') goto code_r0x0047110f;\n                uVar6 = fcn.00450c70();\n            } while( true );\n        }\n        var_3ch = 0;\n        var_35h._0_1_ = '\\0';\n    }\n    else if (var_35h == '\\0') {\n        var_36h = 0;\n        cVar5 = *(iVar8 + 0x10);\n        var_3ch = 0;\n        if (cVar5 == '\\0') goto code_r0x00471580;\ncode_r0x00471508:\n        if (*(iVar8 + 0x26) != uVar6) goto code_r0x00471580;\n        if (stack0xffffffc8 != 0) {\n            fcn.0048d3d0(stack0xffffffc8);\n            stack0xffffffc8 = 0;\ncode_r0x00471531:\n            uVar9 = arg_8h[2];\n            if (arg_8h[3] <= uVar9) goto code_r0x004715e3;\n            do {\n                arg_8h[2] = uVar9 + 2;\n                while( true ) {\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    cVar3 = fcn.00450bd0(var_40h);\n                    if (cVar3 != '\\0') goto code_r0x0047110f;\n                    uVar6 = fcn.00450c70();\n                    cVar5 = *(iVar8 + 0x10);\n                    if (cVar5 != '\\0') goto code_r0x00471508;\ncode_r0x00471580:\n                    puVar10 = iVar8 + 0x78;\n                    uVar9 = var_44h;\n                    if (uVar6 == *(iVar8 + 0x24)) goto code_r0x004713b0;\n                    while (*puVar10 != uVar6) {\n                        uVar9 = uVar9 - 1;\n                        puVar10 = puVar10 + 1;\n                        if (uVar9 == 0) {\n                            cVar3 = '\\0';\n                            goto code_r0x0047110f;\n                        }\n                    }\n                    iVar11 = puVar10 - (iVar8 + 0x78);\n                    uVar9 = iVar11 >> 1;\n                    if (0x1e < iVar11) {\n                        uVar9 = uVar9 - 6;\n                    }\n                    if (var_3ch <= uVar14) {\n                        uVar13 = var_3ch * uVar15;\n                        var_3ch = uVar9 + uVar13;\n                        var_36h = var_36h | ~uVar9 < uVar13;\n                        unique0x00007a80 = stack0xffffffc8 + 1;\n                        goto code_r0x00471531;\n                    }\n                    uVar9 = arg_8h[2];\n                    var_36h = uVar1;\n                    if (uVar9 < arg_8h[3]) break;\ncode_r0x004715e3:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\n        cVar3 = '\\0';\n        var_35h._0_1_ = cVar5;\n    }\n    else {\n        var_3ch = 0;\n        var_36h = 0;\n        var_35h._0_1_ = '\\0';\n    }\ncode_r0x0047110f:\n    cVar5 = cVar3;\n    if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x004713c0;\ncode_r0x0047111d:\n    if ((stack0xffffffc8 != 0) || (bVar2)) {\ncode_r0x0047140d:\n        if (var_35h == '\\0') {\n            if (var_36h == 0) {\n                uVar14 = -var_3ch;\n                if (!bVar16) {\n                    uVar14 = var_3ch;\n                }\n                *arg_20h = uVar14;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00471144;\n        }\n    }\n    goto code_r0x00471132;\ncode_r0x004713b0:\n    cVar3 = '\\0';\n    cVar5 = '\\0';\n    if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x0047111d;\ncode_r0x004713c0:\n    cVar3 = cVar5;\n    fcn.0048d3d0(var_35h._1_1_);\n    cVar5 = fcn.004be720(*(iVar8 + 8), *(iVar8 + 0xc), &var_1eh + 2);\n    if (cVar5 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if (((stack0xffffffc8 != 0) || (bVar2)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x0047140d;\ncode_r0x00471132:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00471144:\n    if (cVar3 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048bdf0(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3795
    },
    "00471730": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00471730(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    char cVar4;\n    uint8_t uVar5;\n    uint16_t uVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint16_t *puVar12;\n    int32_t iVar13;\n    bool bVar14;\n    bool bVar15;\n    uint32_t var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    uint32_t var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint *var_40h;\n    uint32_t var_3ch;\n    uint8_t var_36h;\n    int32_t var_35h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar10 = arg_18h;\n    iVar8 = fcn.0044e2b0(arg_18h + 0x6c);\n    uVar9 = *(iVar10 + 0xc) & 0x4a;\n    if (uVar9 == 0x40) {\n        var_5ch = 8;\ncode_r0x0047176f:\n        var_35h._0_1_ = fcn.00450bd0(&arg_10h);\n        if (var_35h == 0) {\ncode_r0x0047178e:\n            var_40h = &arg_10h;\n            uVar6 = fcn.00450c70();\n            bVar15 = *(iVar8 + 0x70) == uVar6;\n            cVar4 = *(iVar8 + 0x10);\n            if ((((bVar15) || (*(iVar8 + 0x72) == uVar6)) && ((cVar4 == '\\0' || (*(iVar8 + 0x26) != uVar6)))) &&\n               (*(iVar8 + 0x24) != uVar6)) {\n                fcn.004a6690();\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_35h._0_1_ = fcn.00450bd0(var_40h);\n                stack0xffffffc8 = 0;\n                bVar1 = false;\n                if (var_35h == 0) {\n                    uVar6 = fcn.00450c70();\n                    cVar4 = *(iVar8 + 0x10);\n                    goto code_r0x00471990;\n                }\n            }\n            else {\ncode_r0x00471990:\n                stack0xffffffc8 = 0;\n                bVar1 = false;\n                while (((cVar4 == '\\0' || (*(iVar8 + 0x26) != uVar6)) && (*(iVar8 + 0x24) != uVar6))) {\n                    if (*(iVar8 + 0x78) == uVar6) {\n                        bVar3 = var_5ch == 10 | bVar1 ^ 1U;\n                        if (!bVar3) goto code_r0x004719cc;\n                        bVar1 = uVar9 == 0 || var_5ch == 8;\n                        if (uVar9 != 0 && var_5ch != 8) {\n                            unique0x00007a80 = stack0xffffffc8 + 1;\n                            goto code_r0x00471a02;\n                        }\n                        stack0xffffffc8 = 0;\n                        var_5ch = 8;\n                        uVar11 = arg_8h[2];\n                        if (arg_8h[3] <= uVar11) goto code_r0x00471b40;\ncode_r0x00471a11:\n                        arg_8h[2] = uVar11 + 2;\ncode_r0x00471a20:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar7 = *arg_8h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_8h + 0x24))();\n                        }\n                        var_35h._0_1_ = false;\n                        if (iVar7 == -1) {\n                            arg_8h = NULL;\n                            var_35h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar1) break;\ncode_r0x004719cc:\n                        if ((*(iVar8 + 0x74) != uVar6) && (*(iVar8 + 0x76) != uVar6)) {\n                            var_35h._0_1_ = 0;\n                            bVar1 = true;\n                            goto code_r0x00471801;\n                        }\n                        var_35h._0_1_ = var_5ch == 0x10 || uVar9 == 0;\n                        if (var_5ch != 0x10 && uVar9 != 0) {\n                            bVar1 = true;\n                            goto code_r0x0047180d;\n                        }\n                        stack0xffffffc8 = 0;\n                        var_5ch = 0x10;\n                        bVar3 = false;\ncode_r0x00471a02:\n                        uVar11 = arg_8h[2];\n                        bVar1 = bVar3;\n                        if (uVar11 < arg_8h[3]) goto code_r0x00471a11;\ncode_r0x00471b40:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00471a20;\n                        var_35h._0_1_ = true;\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar14 = arg_10h != NULL && arg_14h == -1;\n                    bVar3 = arg_14h == -1;\n                    if (bVar14) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar7 = *arg_10h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar3 = false;\n                        if (iVar7 == -1) {\n                            arg_10h = NULL;\n                            bVar3 = bVar14;\n                        }\n                    }\n                    if (bVar3 == var_35h) {\n                        var_35h._0_1_ = 1;\n                        goto code_r0x00471801;\n                    }\n                    uVar6 = 0xffff;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar6 = *arg_8h[2];\n                        }\n                        else {\n                            uVar6 = (**(*arg_8h + 0x24))();\n                        }\n                        if (uVar6 == 0xffff) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    if (!bVar1) break;\n                    cVar4 = *(iVar8 + 0x10);\n                }\n                var_35h._0_1_ = 0;\n            }\ncode_r0x00471801:\n            var_44h = 0x16;\n            if (var_5ch != 0x10) goto code_r0x0047180d;\n        }\n        else {\n            uVar6 = 0;\n            stack0xffffffc8 = 0;\n            bVar1 = false;\n            bVar15 = false;\ncode_r0x0047180d:\n            var_44h = var_5ch;\n        }\n        *NULL = fcn.0048b900(0, 0, &var_1eh + 1);\n        if (*(iVar8 + 0x10) != '\\0') {\ncode_r0x00471eb0:\n            fcn.0048d0f0(0x20);\n        }\n        uVar2 = var_35h;\n        var_40h = &arg_10h;\n        var_4ch = bVar15 + 0x7fffffff;\n        var_50h = var_4ch / var_5ch;\n        var_36h = *(iVar8 + 0xa4);\n        if (var_36h == 0) {\n            if (var_35h == 0) {\n                var_36h = var_35h;\n                var_3ch = 0;\n                do {\n                    uVar9 = uVar6;\n                    if (var_44h < 0xb) {\n                        if ((uVar6 < 0x30) || (var_44h + 0x30U <= uVar6)) goto code_r0x00471bf0;\ncode_r0x004718aa:\n                        iVar10 = uVar9 - 0x30;\n                    }\n                    else {\n                        if (uVar6 - 0x30 < 10) goto code_r0x004718aa;\n                        if (uVar6 - 0x61 < 6) {\n                            iVar10 = uVar9 - 0x57;\n                        }\n                        else {\n                            if (5 < uVar6 - 0x41) goto code_r0x00471bf0;\n                            iVar10 = uVar9 - 0x37;\n                        }\n                    }\n                    if (iVar10 == -1) goto code_r0x00471bf0;\n                    if (var_50h < var_3ch) {\n                        var_36h = 1;\n                        uVar9 = arg_8h[2];\n                        if (arg_8h[3] <= uVar9) goto code_r0x00471c93;\ncode_r0x004718ea:\n                        arg_8h[2] = uVar9 + 2;\n                    }\n                    else {\n                        var_36h = var_36h | var_4ch - iVar10 < var_3ch * var_5ch;\n                        var_3ch = iVar10 + var_3ch * var_5ch;\n                        unique0x00007a80 = stack0xffffffc8 + 1;\n                        uVar9 = arg_8h[2];\n                        if (uVar9 < arg_8h[3]) goto code_r0x004718ea;\ncode_r0x00471c93:\n                        (**(*arg_8h + 0x28))();\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    uVar2 = fcn.00450bd0(var_40h);\n                    if (uVar2 != 0) goto code_r0x00471914;\n                    uVar6 = fcn.00450c70();\n                } while( true );\n            }\n            var_3ch = 0;\n            var_35h._0_1_ = 0;\n        }\n        else {\ncode_r0x00471d51:\n            uVar2 = var_35h;\n            if (var_35h == 0) {\n                uVar5 = *(iVar8 + 0x10);\n                var_36h = 0;\n                var_3ch = 0;\n                if (uVar5 == 0) goto code_r0x00471df0;\ncode_r0x00471d71:\n                if (*(iVar8 + 0x26) != uVar6) goto code_r0x00471df0;\n                if (stack0xffffffc8 != 0) {\n                    fcn.0048d3d0(stack0xffffffc8);\n                    stack0xffffffc8 = 0;\ncode_r0x00471d9a:\n                    uVar9 = arg_8h[2];\n                    if (arg_8h[3] <= uVar9) goto code_r0x00471e4f;\n                    do {\n                        arg_8h[2] = uVar9 + 2;\n                        while( true ) {\n                            var_40h = &arg_10h;\n                            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                            uVar2 = fcn.00450bd0(var_40h);\n                            if (uVar2 != 0) goto code_r0x00471914;\n                            uVar6 = fcn.00450c70();\n                            uVar5 = *(iVar8 + 0x10);\n                            if (uVar5 != 0) goto code_r0x00471d71;\ncode_r0x00471df0:\n                            puVar12 = iVar8 + 0x78;\n                            uVar9 = var_44h;\n                            if (uVar6 == *(iVar8 + 0x24)) goto code_r0x00471bf0;\n                            while (*puVar12 != uVar6) {\n                                uVar9 = uVar9 - 1;\n                                puVar12 = puVar12 + 1;\n                                if (uVar9 == 0) {\n                                    uVar2 = 0;\n                                    goto code_r0x00471914;\n                                }\n                            }\n                            iVar13 = puVar12 - (iVar8 + 0x78);\n                            iVar10 = iVar13 >> 1;\n                            if (0x1e < iVar13) {\n                                iVar10 = iVar10 + -6;\n                            }\n                            if (var_3ch <= var_50h) {\n                                uVar9 = var_3ch * var_5ch;\n                                var_3ch = iVar10 + uVar9;\n                                var_36h = var_36h | var_4ch - iVar10 < uVar9;\n                                unique0x00007a80 = stack0xffffffc8 + 1;\n                                goto code_r0x00471d9a;\n                            }\n                            var_36h = 1;\n                            uVar9 = arg_8h[2];\n                            if (uVar9 < arg_8h[3]) break;\ncode_r0x00471e4f:\n                            (**(*arg_8h + 0x28))();\n                        }\n                    } while( true );\n                }\n                uVar2 = 0;\n                var_35h._0_1_ = uVar5;\n            }\n            else {\n                var_3ch = 0;\n                var_36h = 0;\n                var_35h._0_1_ = 0;\n            }\n        }\n    }\n    else {\n        var_5ch = 10;\n        if (uVar9 != 8) goto code_r0x0047176f;\n        var_5ch = 0x10;\n        uVar2 = fcn.00450bd0(&arg_10h);\n        if (uVar2 == 0) goto code_r0x0047178e;\n        *NULL = fcn.0048b900(0, 0, &var_1eh + 1);\n        var_35h._0_1_ = *(iVar8 + 0x10);\n        if (var_35h != 0) {\n            stack0xffffffc8 = 0;\n            uVar6 = 0;\n            var_5ch = 0x10;\n            bVar1 = false;\n            bVar15 = false;\n            var_44h = 0x16;\n            goto code_r0x00471eb0;\n        }\n        var_36h = *(iVar8 + 0xa4);\n        bVar15 = false;\n        bVar1 = false;\n        var_35h._0_1_ = var_36h;\n        if (var_36h != 0) {\n            stack0xffffffc8 = 0;\n            uVar6 = 0;\n            var_44h = 0x16;\n            var_50h = 0x7ffffff;\n            var_4ch = 0x7fffffff;\n            var_5ch = 0x10;\n            goto code_r0x00471d51;\n        }\n        var_3ch = 0;\n        stack0xffffffc8 = 0;\n    }\ncode_r0x00471914:\n    uVar5 = uVar2;\n    if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x00471922;\ncode_r0x00471c00:\n    uVar2 = uVar5;\n    fcn.0048d3d0(var_35h._1_1_);\n    cVar4 = fcn.004be720(*(iVar8 + 8), *(iVar8 + 0xc), &var_1eh + 2);\n    if (cVar4 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if (((stack0xffffffc8 != 0) || (bVar1)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x00471c4d;\n    goto code_r0x00471937;\ncode_r0x00471bf0:\n    uVar2 = 0;\n    uVar5 = 0;\n    if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x00471c00;\ncode_r0x00471922:\n    if ((stack0xffffffc8 != 0) || (bVar1)) {\ncode_r0x00471c4d:\n        if (var_35h == 0) {\n            if (var_36h == 0) {\n                uVar9 = -var_3ch;\n                if (!bVar15) {\n                    uVar9 = var_3ch;\n                }\n                *arg_20h = uVar9;\n            }\n            else {\n                *arg_20h = bVar15 + 0x7fffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00471949;\n        }\n    }\ncode_r0x00471937:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00471949:\n    var_58h = &var_1eh + 1;\n    if (uVar2 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048bdf0(var_58h);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 4128
    },
    "00471fd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00471fd0(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    bool bVar4;\n    char cVar5;\n    uint16_t uVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint16_t *puVar10;\n    int32_t iVar11;\n    bool bVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    bool bVar16;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint *var_40h;\n    uint32_t var_3ch;\n    uint8_t var_36h;\n    int32_t var_35h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar11 = arg_18h;\n    iVar8 = fcn.0044e2b0(arg_18h + 0x6c);\n    uVar14 = *(iVar11 + 0xc) & 0x4a;\n    if (uVar14 == 0x40) {\n        uVar15 = 8;\ncode_r0x0047200f:\n        var_35h._0_1_ = fcn.00450bd0(&arg_10h);\n        if (var_35h == '\\0') {\ncode_r0x0047202e:\n            var_40h = &arg_10h;\n            uVar6 = fcn.00450c70();\n            bVar16 = *(iVar8 + 0x70) == uVar6;\n            cVar3 = *(iVar8 + 0x10);\n            if ((((bVar16) || (*(iVar8 + 0x72) == uVar6)) && ((cVar3 == '\\0' || (*(iVar8 + 0x26) != uVar6)))) &&\n               (*(iVar8 + 0x24) != uVar6)) {\n                fcn.004a6690();\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_35h._0_1_ = fcn.00450bd0(var_40h);\n                stack0xffffffc8 = 0;\n                bVar2 = false;\n                if (var_35h == '\\0') {\n                    uVar6 = fcn.00450c70();\n                    cVar3 = *(iVar8 + 0x10);\n                    goto code_r0x00472278;\n                }\n            }\n            else {\ncode_r0x00472278:\n                stack0xffffffc8 = 0;\n                bVar2 = false;\n                while (((cVar3 == '\\0' || (*(iVar8 + 0x26) != uVar6)) && (*(iVar8 + 0x24) != uVar6))) {\n                    if (*(iVar8 + 0x78) == uVar6) {\n                        bVar4 = uVar15 == 10 | bVar2 ^ 1U;\n                        if (!bVar4) goto code_r0x004722af;\n                        bVar2 = uVar14 == 0 || uVar15 == 8;\n                        if (uVar14 != 0 && uVar15 != 8) {\n                            unique0x00007a80 = stack0xffffffc8 + 1;\n                            goto code_r0x004722e5;\n                        }\n                        stack0xffffffc8 = 0;\n                        uVar15 = 8;\n                        uVar9 = arg_8h[2];\n                        if (arg_8h[3] <= uVar9) goto code_r0x004723a0;\ncode_r0x004722f4:\n                        arg_8h[2] = uVar9 + 2;\ncode_r0x00472303:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar7 = *arg_8h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_8h + 0x24))();\n                        }\n                        var_35h._0_1_ = false;\n                        if (iVar7 == -1) {\n                            arg_8h = NULL;\n                            var_35h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar2) break;\ncode_r0x004722af:\n                        if ((*(iVar8 + 0x74) != uVar6) && (*(iVar8 + 0x76) != uVar6)) {\n                            var_35h._0_1_ = '\\0';\n                            bVar2 = true;\n                            goto code_r0x004720b0;\n                        }\n                        var_35h._0_1_ = uVar15 == 0x10 || uVar14 == 0;\n                        if (uVar15 != 0x10 && uVar14 != 0) {\n                            bVar2 = true;\n                            goto code_r0x004720bc;\n                        }\n                        stack0xffffffc8 = 0;\n                        uVar15 = 0x10;\n                        bVar4 = false;\ncode_r0x004722e5:\n                        uVar9 = arg_8h[2];\n                        bVar2 = bVar4;\n                        if (uVar9 < arg_8h[3]) goto code_r0x004722f4;\ncode_r0x004723a0:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00472303;\n                        var_35h._0_1_ = true;\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar12 = arg_10h != NULL && arg_14h == -1;\n                    bVar4 = arg_14h == -1;\n                    if (bVar12) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar7 = *arg_10h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar4 = false;\n                        if (iVar7 == -1) {\n                            arg_10h = NULL;\n                            bVar4 = bVar12;\n                        }\n                    }\n                    if (var_35h == bVar4) {\n                        var_35h._0_1_ = '\\x01';\n                        goto code_r0x004720b0;\n                    }\n                    uVar6 = 0xffff;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar6 = *arg_8h[2];\n                        }\n                        else {\n                            uVar6 = (**(*arg_8h + 0x24))();\n                        }\n                        if (uVar6 == 0xffff) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    if (!bVar2) break;\n                    cVar3 = *(iVar8 + 0x10);\n                }\n                var_35h._0_1_ = '\\0';\n            }\ncode_r0x004720b0:\n            var_44h = 0x16;\n            if (uVar15 == 0x10) goto code_r0x004720bf;\n        }\n        else {\n            uVar6 = 0;\n            stack0xffffffc8 = 0;\n            bVar2 = false;\n            bVar16 = false;\n        }\ncode_r0x004720bc:\n        var_44h = uVar15;\n    }\n    else {\n        if (uVar14 != 8) {\n            uVar15 = 10;\n            goto code_r0x0047200f;\n        }\n        uVar15 = 0x10;\n        var_35h._0_1_ = fcn.00450bd0(&arg_10h);\n        if (var_35h == '\\0') goto code_r0x0047202e;\n        uVar6 = 0;\n        stack0xffffffc8 = 0;\n        uVar15 = 0x10;\n        bVar2 = false;\n        bVar16 = false;\n        var_44h = 0x16;\n    }\ncode_r0x004720bf:\n    cVar3 = var_35h;\n    var_40h = &arg_10h;\n    *NULL = fcn.0048b900(0, 0, &var_1eh + 1);\n    if (*(iVar8 + 0x10) != '\\0') {\n        fcn.0048d0f0(0x20);\n    }\n    uVar14 = 0xffffffff / uVar15;\n    uVar1 = *(iVar8 + 0xa4);\n    if (uVar1 == 0) {\n        var_36h = 0;\n        if (var_35h == '\\0') {\n            var_3ch = 0;\n            do {\n                uVar9 = uVar6;\n                if (var_44h < 0xb) {\n                    if ((uVar6 < 0x30) || (var_44h + 0x30U <= uVar6)) goto code_r0x00472450;\ncode_r0x00472146:\n                    uVar9 = uVar9 - 0x30;\n                }\n                else {\n                    if (uVar6 - 0x30 < 10) goto code_r0x00472146;\n                    if (uVar6 - 0x61 < 6) {\n                        uVar9 = uVar9 - 0x57;\n                    }\n                    else {\n                        if (5 < uVar6 - 0x41) goto code_r0x00472450;\n                        uVar9 = uVar9 - 0x37;\n                    }\n                }\n                if (uVar9 == 0xffffffff) goto code_r0x00472450;\n                if (uVar14 < var_3ch) {\n                    var_36h = 1;\n                    uVar9 = arg_8h[2];\n                    if (arg_8h[3] <= uVar9) goto code_r0x004724f3;\ncode_r0x00472185:\n                    arg_8h[2] = uVar9 + 2;\n                }\n                else {\n                    var_36h = var_36h | ~uVar9 < var_3ch * uVar15;\n                    var_3ch = uVar9 + var_3ch * uVar15;\n                    unique0x00007a80 = stack0xffffffc8 + 1;\n                    uVar9 = arg_8h[2];\n                    if (uVar9 < arg_8h[3]) goto code_r0x00472185;\ncode_r0x004724f3:\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                cVar3 = fcn.00450bd0(var_40h);\n                if (cVar3 != '\\0') goto code_r0x004721af;\n                uVar6 = fcn.00450c70();\n            } while( true );\n        }\n        var_3ch = 0;\n        var_35h._0_1_ = '\\0';\n    }\n    else if (var_35h == '\\0') {\n        var_36h = 0;\n        cVar5 = *(iVar8 + 0x10);\n        var_3ch = 0;\n        if (cVar5 == '\\0') goto code_r0x00472620;\ncode_r0x004725a8:\n        if (*(iVar8 + 0x26) != uVar6) goto code_r0x00472620;\n        if (stack0xffffffc8 != 0) {\n            fcn.0048d3d0(stack0xffffffc8);\n            stack0xffffffc8 = 0;\ncode_r0x004725d1:\n            uVar9 = arg_8h[2];\n            if (arg_8h[3] <= uVar9) goto code_r0x00472683;\n            do {\n                arg_8h[2] = uVar9 + 2;\n                while( true ) {\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    cVar3 = fcn.00450bd0(var_40h);\n                    if (cVar3 != '\\0') goto code_r0x004721af;\n                    uVar6 = fcn.00450c70();\n                    cVar5 = *(iVar8 + 0x10);\n                    if (cVar5 != '\\0') goto code_r0x004725a8;\ncode_r0x00472620:\n                    puVar10 = iVar8 + 0x78;\n                    uVar9 = var_44h;\n                    if (uVar6 == *(iVar8 + 0x24)) goto code_r0x00472450;\n                    while (*puVar10 != uVar6) {\n                        uVar9 = uVar9 - 1;\n                        puVar10 = puVar10 + 1;\n                        if (uVar9 == 0) {\n                            cVar3 = '\\0';\n                            goto code_r0x004721af;\n                        }\n                    }\n                    iVar11 = puVar10 - (iVar8 + 0x78);\n                    uVar9 = iVar11 >> 1;\n                    if (0x1e < iVar11) {\n                        uVar9 = uVar9 - 6;\n                    }\n                    if (var_3ch <= uVar14) {\n                        uVar13 = var_3ch * uVar15;\n                        var_3ch = uVar9 + uVar13;\n                        var_36h = var_36h | ~uVar9 < uVar13;\n                        unique0x00007a80 = stack0xffffffc8 + 1;\n                        goto code_r0x004725d1;\n                    }\n                    uVar9 = arg_8h[2];\n                    var_36h = uVar1;\n                    if (uVar9 < arg_8h[3]) break;\ncode_r0x00472683:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\n        cVar3 = '\\0';\n        var_35h._0_1_ = cVar5;\n    }\n    else {\n        var_3ch = 0;\n        var_36h = 0;\n        var_35h._0_1_ = '\\0';\n    }\ncode_r0x004721af:\n    cVar5 = cVar3;\n    if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x00472460;\ncode_r0x004721bd:\n    if ((stack0xffffffc8 != 0) || (bVar2)) {\ncode_r0x004724ad:\n        if (var_35h == '\\0') {\n            if (var_36h == 0) {\n                uVar14 = -var_3ch;\n                if (!bVar16) {\n                    uVar14 = var_3ch;\n                }\n                *arg_20h = uVar14;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x004721e4;\n        }\n    }\n    goto code_r0x004721d2;\ncode_r0x00472450:\n    cVar3 = '\\0';\n    cVar5 = '\\0';\n    if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x004721bd;\ncode_r0x00472460:\n    cVar3 = cVar5;\n    fcn.0048d3d0(var_35h._1_1_);\n    cVar5 = fcn.004be720(*(iVar8 + 8), *(iVar8 + 0xc), &var_1eh + 2);\n    if (cVar5 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if (((stack0xffffffc8 != 0) || (bVar2)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x004724ad;\ncode_r0x004721d2:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x004721e4:\n    if (cVar3 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048bdf0(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3781
    },
    "004727d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.004727d0(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint16_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    bool bVar4;\n    char cVar5;\n    uint16_t uVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint16_t *puVar11;\n    int32_t iVar12;\n    bool bVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    bool bVar16;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint *var_40h;\n    uint32_t var_3ch;\n    uint8_t var_36h;\n    int32_t var_35h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar9 = arg_18h;\n    iVar8 = fcn.0044e2b0(arg_18h + 0x6c);\n    uVar14 = *(iVar9 + 0xc) & 0x4a;\n    if (uVar14 == 0x40) {\n        uVar15 = 8;\ncode_r0x0047280f:\n        var_35h._0_1_ = fcn.00450bd0(&arg_10h);\n        if (var_35h == '\\0') {\ncode_r0x0047282e:\n            var_40h = &arg_10h;\n            uVar6 = fcn.00450c70();\n            bVar16 = *(iVar8 + 0x70) == uVar6;\n            cVar3 = *(iVar8 + 0x10);\n            if ((((bVar16) || (*(iVar8 + 0x72) == uVar6)) && ((cVar3 == '\\0' || (*(iVar8 + 0x26) != uVar6)))) &&\n               (*(iVar8 + 0x24) != uVar6)) {\n                fcn.004a6690();\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_35h._0_1_ = fcn.00450bd0(var_40h);\n                stack0xffffffc8 = 0;\n                bVar2 = false;\n                if (var_35h == '\\0') {\n                    uVar6 = fcn.00450c70();\n                    cVar3 = *(iVar8 + 0x10);\n                    goto code_r0x00472a7b;\n                }\n            }\n            else {\ncode_r0x00472a7b:\n                stack0xffffffc8 = 0;\n                bVar2 = false;\n                while (((cVar3 == '\\0' || (*(iVar8 + 0x26) != uVar6)) && (*(iVar8 + 0x24) != uVar6))) {\n                    if (*(iVar8 + 0x78) == uVar6) {\n                        bVar4 = uVar15 == 10 | bVar2 ^ 1U;\n                        if (!bVar4) goto code_r0x00472abc;\n                        bVar2 = uVar14 == 0 || uVar15 == 8;\n                        if (uVar14 != 0 && uVar15 != 8) {\n                            unique0x00007a80 = stack0xffffffc8 + 1;\n                            goto code_r0x00472af2;\n                        }\n                        stack0xffffffc8 = 0;\n                        uVar15 = 8;\n                        uVar10 = arg_8h[2];\n                        if (arg_8h[3] <= uVar10) goto code_r0x00472ba0;\ncode_r0x00472b01:\n                        arg_8h[2] = uVar10 + 2;\ncode_r0x00472b10:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar7 = *arg_8h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_8h + 0x24))();\n                        }\n                        var_35h._0_1_ = false;\n                        if (iVar7 == -1) {\n                            arg_8h = NULL;\n                            var_35h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar2) break;\ncode_r0x00472abc:\n                        if ((*(iVar8 + 0x74) != uVar6) && (*(iVar8 + 0x76) != uVar6)) {\n                            var_35h._0_1_ = '\\0';\n                            bVar2 = true;\n                            goto code_r0x004728b0;\n                        }\n                        var_35h._0_1_ = uVar15 == 0x10 || uVar14 == 0;\n                        if (uVar15 != 0x10 && uVar14 != 0) {\n                            bVar2 = true;\n                            goto code_r0x004728bc;\n                        }\n                        stack0xffffffc8 = 0;\n                        uVar15 = 0x10;\n                        bVar4 = false;\ncode_r0x00472af2:\n                        uVar10 = arg_8h[2];\n                        bVar2 = bVar4;\n                        if (uVar10 < arg_8h[3]) goto code_r0x00472b01;\ncode_r0x00472ba0:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00472b10;\n                        var_35h._0_1_ = true;\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar13 = arg_10h != NULL && arg_14h == -1;\n                    bVar4 = arg_14h == -1;\n                    if (bVar13) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar7 = *arg_10h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar4 = false;\n                        if (iVar7 == -1) {\n                            arg_10h = NULL;\n                            bVar4 = bVar13;\n                        }\n                    }\n                    if (var_35h == bVar4) {\n                        var_35h._0_1_ = '\\x01';\n                        goto code_r0x004728b0;\n                    }\n                    uVar6 = 0xffff;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar6 = *arg_8h[2];\n                        }\n                        else {\n                            uVar6 = (**(*arg_8h + 0x24))();\n                        }\n                        if (uVar6 == 0xffff) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    if (!bVar2) break;\n                    cVar3 = *(iVar8 + 0x10);\n                }\n                var_35h._0_1_ = '\\0';\n            }\ncode_r0x004728b0:\n            var_44h = 0x16;\n            if (uVar15 == 0x10) goto code_r0x004728bf;\n        }\n        else {\n            uVar6 = 0;\n            stack0xffffffc8 = 0;\n            bVar2 = false;\n            bVar16 = false;\n        }\ncode_r0x004728bc:\n        var_44h = uVar15;\n    }\n    else {\n        if (uVar14 != 8) {\n            uVar15 = 10;\n            goto code_r0x0047280f;\n        }\n        uVar15 = 0x10;\n        var_35h._0_1_ = fcn.00450bd0(&arg_10h);\n        if (var_35h == '\\0') goto code_r0x0047282e;\n        uVar6 = 0;\n        stack0xffffffc8 = 0;\n        uVar15 = 0x10;\n        bVar2 = false;\n        bVar16 = false;\n        var_44h = 0x16;\n    }\ncode_r0x004728bf:\n    cVar3 = var_35h;\n    var_40h = &arg_10h;\n    *NULL = fcn.0048b900(0, 0, &var_1eh + 1);\n    if (*(iVar8 + 0x10) != '\\0') {\n        fcn.0048d0f0(0x20);\n    }\n    uVar1 = *(iVar8 + 0xa4);\n    var_48h._0_2_ = 0xffff / uVar15;\n    if (uVar1 == 0) {\n        var_36h = 0;\n        if (var_35h == '\\0') {\n            var_3ch = 0;\n            do {\n                uVar14 = uVar6;\n                if (var_44h < 0xb) {\n                    if ((uVar6 < 0x30) || (var_44h + 0x30U <= uVar6)) goto code_r0x00472c50;\ncode_r0x00472944:\n                    iVar9 = uVar14 - 0x30;\n                }\n                else {\n                    if (uVar6 - 0x30 < 10) goto code_r0x00472944;\n                    if (uVar6 - 0x61 < 6) {\n                        iVar9 = uVar14 - 0x57;\n                    }\n                    else {\n                        if (5 < uVar6 - 0x41) goto code_r0x00472c50;\n                        iVar9 = uVar14 - 0x37;\n                    }\n                }\n                if (iVar9 == -1) goto code_r0x00472c50;\n                if (var_48h < var_3ch) {\n                    var_36h = 1;\n                    uVar14 = arg_8h[2];\n                    if (arg_8h[3] <= uVar14) goto code_r0x00472cf3;\ncode_r0x0047298e:\n                    arg_8h[2] = uVar14 + 2;\n                }\n                else {\n                    var_36h = var_36h | 0xffff - iVar9 < (var_3ch * uVar15 & 0xffff);\n                    var_3ch = iVar9 + var_3ch * uVar15;\n                    unique0x00007a80 = stack0xffffffc8 + 1;\n                    uVar14 = arg_8h[2];\n                    if (uVar14 < arg_8h[3]) goto code_r0x0047298e;\ncode_r0x00472cf3:\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                cVar3 = fcn.00450bd0(var_40h);\n                if (cVar3 != '\\0') goto code_r0x004729b8;\n                uVar6 = fcn.00450c70();\n            } while( true );\n        }\n        var_35h._0_1_ = '\\0';\n        var_3ch._0_2_ = 0;\n    }\n    else if (var_35h == '\\0') {\n        var_36h = 0;\n        cVar5 = *(iVar8 + 0x10);\n        var_3ch = 0;\n        if (cVar5 == '\\0') goto code_r0x00472e20;\ncode_r0x00472da7:\n        if (*(iVar8 + 0x26) != uVar6) goto code_r0x00472e20;\n        if (stack0xffffffc8 != 0) {\n            fcn.0048d3d0(stack0xffffffc8);\n            stack0xffffffc8 = 0;\ncode_r0x00472dd0:\n            uVar14 = arg_8h[2];\n            if (arg_8h[3] <= uVar14) goto code_r0x00472e85;\n            do {\n                arg_8h[2] = uVar14 + 2;\n                while( true ) {\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    cVar3 = fcn.00450bd0(var_40h);\n                    if (cVar3 != '\\0') goto code_r0x004729b8;\n                    uVar6 = fcn.00450c70();\n                    cVar5 = *(iVar8 + 0x10);\n                    if (cVar5 != '\\0') goto code_r0x00472da7;\ncode_r0x00472e20:\n                    puVar11 = iVar8 + 0x78;\n                    uVar14 = var_44h;\n                    if (uVar6 == *(iVar8 + 0x24)) goto code_r0x00472c50;\n                    while (*puVar11 != uVar6) {\n                        uVar14 = uVar14 - 1;\n                        puVar11 = puVar11 + 1;\n                        if (uVar14 == 0) {\n                            cVar3 = '\\0';\n                            goto code_r0x004729b8;\n                        }\n                    }\n                    iVar12 = puVar11 - (iVar8 + 0x78);\n                    iVar9 = iVar12 >> 1;\n                    if (0x1e < iVar12) {\n                        iVar9 = iVar9 + -6;\n                    }\n                    if (var_3ch <= var_48h) {\n                        var_36h = var_36h | 0xffff - iVar9 < (var_3ch * uVar15 & 0xffff);\n                        var_3ch = iVar9 + var_3ch * uVar15;\n                        unique0x00007a80 = stack0xffffffc8 + 1;\n                        goto code_r0x00472dd0;\n                    }\n                    uVar14 = arg_8h[2];\n                    var_36h = uVar1;\n                    if (uVar14 < arg_8h[3]) break;\ncode_r0x00472e85:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\n        cVar3 = '\\0';\n        var_35h._0_1_ = cVar5;\n    }\n    else {\n        var_36h = 0;\n        var_3ch._0_2_ = 0;\n        var_35h._0_1_ = '\\0';\n    }\ncode_r0x004729b8:\n    cVar5 = cVar3;\n    if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x00472c60;\ncode_r0x004729c6:\n    if ((stack0xffffffc8 != 0) || (bVar2)) {\ncode_r0x00472cad:\n        if (var_35h == '\\0') {\n            if (var_36h == 0) {\n                uVar6 = -var_3ch;\n                if (!bVar16) {\n                    uVar6 = var_3ch;\n                }\n                *arg_20h = uVar6;\n            }\n            else {\n                *arg_20h = 0xffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x004729ec;\n        }\n    }\n    goto code_r0x004729db;\ncode_r0x00472c50:\n    cVar3 = '\\0';\n    cVar5 = '\\0';\n    if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x004729c6;\ncode_r0x00472c60:\n    cVar3 = cVar5;\n    fcn.0048d3d0(var_35h._1_1_);\n    cVar5 = fcn.004be720(*(iVar8 + 8), *(iVar8 + 0xc), &var_1eh + 2);\n    if (cVar5 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if (((stack0xffffffc8 != 0) || (bVar2)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x00472cad;\ncode_r0x004729db:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x004729ec:\n    if (cVar3 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048bdf0(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3820
    },
    "00472fe0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00472fe0(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    bool bVar5;\n    char cVar6;\n    uint8_t uVar7;\n    uint16_t uVar8;\n    int16_t iVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint16_t *puVar13;\n    int32_t iVar14;\n    bool bVar15;\n    uint32_t uVar16;\n    bool bVar17;\n    uint32_t uVar18;\n    bool bVar19;\n    bool bVar20;\n    ulong uVar21;\n    int32_t var_64h;\n    uint32_t var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    uint32_t var_54h;\n    uint32_t var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint var_44h;\n    uint *var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint8_t var_32h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar14 = arg_18h;\n    iVar10 = fcn.0044e2b0(arg_18h + 0x6c);\n    uVar11 = *(iVar14 + 0xc) & 0x4a;\n    if (uVar11 == 0x40) {\n        var_48h = 8;\ncode_r0x0047301f:\n        uVar3 = fcn.00450bd0(&arg_10h);\n        if (uVar3 == 0) {\ncode_r0x0047303e:\n            var_40h = &arg_10h;\n            uVar8 = fcn.00450c70();\n            bVar20 = *(iVar10 + 0x70) == uVar8;\n            if (bVar20) {\n                cVar6 = *(iVar10 + 0x10);\ncode_r0x00473071:\n                if (((cVar6 != '\\0') && (*(iVar10 + 0x26) == uVar8)) || (*(iVar10 + 0x24) == uVar8))\n                goto code_r0x00473358;\n                fcn.004a6690();\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                uVar3 = fcn.00450bd0(var_40h);\n                var_38h = 0;\n                bVar19 = false;\n                if (uVar3 == 0) {\n                    uVar8 = fcn.00450c70();\n                    cVar6 = *(iVar10 + 0x10);\n                    goto code_r0x00473358;\n                }\n            }\n            else {\n                cVar6 = *(iVar10 + 0x10);\n                if (*(iVar10 + 0x72) == uVar8) goto code_r0x00473071;\ncode_r0x00473358:\n                var_38h = 0;\n                bVar19 = false;\n                while (((cVar6 == '\\0' || (*(iVar10 + 0x26) != uVar8)) && (*(iVar10 + 0x24) != uVar8))) {\n                    if (*(iVar10 + 0x78) == uVar8) {\n                        bVar17 = var_48h == 10 | bVar19 ^ 1U;\n                        if (!bVar17) goto code_r0x004733a2;\n                        bVar19 = uVar11 == 0 || var_48h == 8;\n                        if (uVar11 != 0 && var_48h != 8) {\n                            var_38h = var_38h + 1;\n                            goto code_r0x004733db;\n                        }\n                        var_38h = 0;\n                        var_48h = 8;\n                        uVar16 = arg_8h[2];\n                        if (arg_8h[3] <= uVar16) {\n                            var_48h = 8;\n                            goto code_r0x00473490;\n                        }\ncode_r0x004733ea:\n                        arg_8h[2] = uVar16 + 2;\ncode_r0x004733f9:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar9 = *arg_8h[2];\n                        }\n                        else {\n                            iVar9 = (**(*arg_8h + 0x24))();\n                        }\n                        bVar17 = false;\n                        if (iVar9 == -1) {\n                            arg_8h = NULL;\n                            bVar17 = true;\n                        }\n                    }\n                    else {\n                        if (!bVar19) break;\ncode_r0x004733a2:\n                        if ((*(iVar10 + 0x74) != uVar8) && (*(iVar10 + 0x76) != uVar8)) {\n                            uVar3 = 0;\n                            bVar19 = true;\n                            goto code_r0x004730d0;\n                        }\n                        uVar3 = var_48h == 0x10 || uVar11 == 0;\n                        if (var_48h != 0x10 && uVar11 != 0) {\n                            bVar19 = true;\n                            goto code_r0x004730dc;\n                        }\n                        var_38h = 0;\n                        var_48h = 0x10;\n                        bVar17 = false;\ncode_r0x004733db:\n                        uVar16 = arg_8h[2];\n                        bVar19 = bVar17;\n                        if (uVar16 < arg_8h[3]) goto code_r0x004733ea;\ncode_r0x00473490:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x004733f9;\n                        bVar17 = true;\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar15 = arg_10h != NULL && arg_14h == -1;\n                    bVar5 = arg_14h == -1;\n                    if (bVar15) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar9 = *arg_10h[2];\n                        }\n                        else {\n                            iVar9 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar5 = false;\n                        if (iVar9 == -1) {\n                            arg_10h = NULL;\n                            bVar5 = bVar15;\n                        }\n                    }\n                    if (bVar5 == bVar17) {\n                        uVar3 = 1;\n                        goto code_r0x004730d0;\n                    }\n                    uVar8 = 0xffff;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar8 = *arg_8h[2];\n                        }\n                        else {\n                            uVar8 = (**(*arg_8h + 0x24))();\n                        }\n                        if (uVar8 == 0xffff) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    if (!bVar19) break;\n                    cVar6 = *(iVar10 + 0x10);\n                }\n                uVar3 = 0;\n            }\ncode_r0x004730d0:\n            var_4ch = 0x16;\n            if (var_48h != 0x10) goto code_r0x004730dc;\n        }\n        else {\n            uVar8 = 0;\n            var_38h = 0;\n            bVar19 = false;\n            bVar20 = false;\ncode_r0x004730dc:\n            var_4ch = var_48h;\n        }\n        *NULL = fcn.0048b900(0, 0, &var_1eh + 1);\n        if (*(iVar10 + 0x10) != '\\0') {\ncode_r0x00473840:\n            fcn.0048d0f0(0x20);\n        }\n        var_40h = &arg_10h;\n        var_60h = 0;\n        var_5ch = -0x80000000;\n        if (!bVar20) {\n            var_60h = 0xffffffff;\n            var_5ch = 0x7fffffff;\n        }\n        uVar21 = fcn.004386d0(var_60h, var_5ch, var_48h, 0);\n        uVar11 = uVar21 >> 0x20;\n        var_32h = *(iVar10 + 0xa4);\n        if (var_32h == 0) {\n            if (uVar3 == 0) {\n                uVar16 = 0;\n                uVar18 = 0;\n                var_32h = uVar3;\n                do {\n                    uVar12 = uVar8;\n                    if (var_4ch < 0xb) {\n                        if ((uVar8 < 0x30) || (var_4ch + 0x30U <= uVar8)) goto code_r0x00473542;\ncode_r0x004731ac:\n                        uVar1 = uVar12 - 0x30;\n                    }\n                    else {\n                        if (uVar8 - 0x30 < 10) goto code_r0x004731ac;\n                        uVar1 = uVar12 - 0x57;\n                        if (5 < uVar8 - 0x61) {\n                            if (5 < uVar8 - 0x41) goto code_r0x00473542;\n                            uVar1 = uVar12 - 0x37;\n                        }\n                    }\n                    if (uVar1 == 0xffffffff) goto code_r0x00473542;\n                    if (uVar11 < uVar18 || uVar11 - uVar18 < (uVar21 < uVar16)) {\n                        var_32h = 1;\n                        uVar12 = arg_8h[2];\n                        if (arg_8h[3] <= uVar12) goto code_r0x004735f7;\ncode_r0x0047320f:\n                        arg_8h[2] = uVar12 + 2;\n                    }\n                    else {\n                        uVar12 = uVar16 * var_48h;\n                        uVar18 = (uVar16 * var_48h >> 0x20) + var_48h * uVar18;\n                        uVar16 = (var_5ch - (uVar1 >> 0x1f)) - (var_60h < uVar1);\n                        var_32h = var_32h | (uVar16 < uVar18 || uVar16 - uVar18 < (var_60h - uVar1 < uVar12));\n                        uVar16 = uVar12 + uVar1;\n                        uVar18 = uVar18 + (uVar1 >> 0x1f) + CARRY4(uVar12, uVar1);\n                        var_38h = var_38h + 1;\n                        uVar12 = arg_8h[2];\n                        if (uVar12 < arg_8h[3]) goto code_r0x0047320f;\ncode_r0x004735f7:\n                        (**(*arg_8h + 0x28))();\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    uVar4 = fcn.00450bd0(var_40h);\n                    uVar7 = uVar3;\n                    if (uVar4 != 0) goto code_r0x00473239;\n                    uVar8 = fcn.00450c70();\n                } while( true );\n            }\n            uVar16 = 0;\n            uVar18 = 0;\n            uVar4 = uVar3;\n            uVar7 = 0;\n        }\n        else {\ncode_r0x004736b2:\n            var_54h = uVar21 >> 0x20;\n            var_50h = uVar21;\n            if (uVar3 == 0) {\n                var_32h = 0;\n                uVar16 = 0;\n                uVar18 = 0;\n                uVar7 = *(iVar10 + 0x10);\n                if (uVar7 == 0) goto code_r0x00473753;\ncode_r0x004736d8:\n                if (*(iVar10 + 0x26) != uVar8) goto code_r0x00473753;\n                if (var_38h != 0) {\n                    fcn.0048d3d0(var_38h);\n                    var_38h = 0;\ncode_r0x00473701:\n                    uVar11 = arg_8h[2];\n                    if (arg_8h[3] <= uVar11) goto code_r0x004737c0;\n                    do {\n                        arg_8h[2] = uVar11 + 2;\n                        while( true ) {\n                            var_40h = &arg_10h;\n                            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                            uVar4 = fcn.00450bd0(var_40h);\n                            uVar7 = uVar3;\n                            if (uVar4 != 0) goto code_r0x00473239;\n                            uVar8 = fcn.00450c70();\n                            uVar7 = *(iVar10 + 0x10);\n                            if (uVar7 != 0) goto code_r0x004736d8;\ncode_r0x00473753:\n                            puVar13 = iVar10 + 0x78;\n                            uVar11 = var_4ch;\n                            if (uVar8 == *(iVar10 + 0x24)) goto code_r0x00473542;\n                            while (*puVar13 != uVar8) {\n                                uVar11 = uVar11 - 1;\n                                puVar13 = puVar13 + 1;\n                                if (uVar11 == 0) {\n                                    uVar4 = 0;\n                                    uVar7 = uVar3;\n                                    goto code_r0x00473239;\n                                }\n                            }\n                            iVar14 = puVar13 - (iVar10 + 0x78);\n                            uVar12 = iVar14 >> 1;\n                            uVar11 = uVar12 - 6;\n                            if (iVar14 < 0x1f) {\n                                uVar11 = uVar12;\n                            }\n                            if (uVar18 <= var_54h && (var_50h < uVar16) <= var_54h - uVar18) {\n                                uVar12 = uVar16 * var_48h;\n                                uVar18 = (uVar16 * var_48h >> 0x20) + var_48h * uVar18;\n                                uVar16 = (var_5ch - (uVar11 >> 0x1f)) - (var_60h < uVar11);\n                                var_32h = var_32h | (uVar16 < uVar18 || uVar16 - uVar18 < (var_60h - uVar11 < uVar12));\n                                uVar16 = uVar12 + uVar11;\n                                uVar18 = uVar18 + (uVar11 >> 0x1f) + CARRY4(uVar12, uVar11);\n                                var_38h = var_38h + 1;\n                                goto code_r0x00473701;\n                            }\n                            var_32h = 1;\n                            uVar11 = arg_8h[2];\n                            if (uVar11 < arg_8h[3]) break;\ncode_r0x004737c0:\n                            (**(*arg_8h + 0x28))();\n                        }\n                    } while( true );\n                }\n                uVar4 = 0;\n            }\n            else {\n                uVar16 = 0;\n                uVar18 = 0;\n                var_32h = 0;\n                uVar7 = 0;\n                uVar4 = uVar3;\n            }\n        }\n    }\n    else {\n        var_48h = 10;\n        if (uVar11 != 8) goto code_r0x0047301f;\n        var_48h = 0x10;\n        uVar4 = fcn.00450bd0(&arg_10h);\n        if (uVar4 == 0) goto code_r0x0047303e;\n        *NULL = fcn.0048b900(0, 0, &var_1eh + 1);\n        uVar3 = *(iVar10 + 0x10);\n        if (uVar3 != 0) {\n            var_38h = 0;\n            uVar8 = 0;\n            bVar19 = false;\n            bVar20 = false;\n            var_4ch = 0x16;\n            var_48h = 0x10;\n            goto code_r0x00473840;\n        }\n        var_32h = *(iVar10 + 0xa4);\n        bVar20 = false;\n        bVar19 = false;\n        if (var_32h != 0) {\n            var_38h = 0;\n            uVar8 = 0;\n            var_4ch = 0x16;\n            uVar21 = 0x7ffffffffffffff;\n            var_60h = 0xffffffff;\n            var_5ch = 0x7fffffff;\n            var_48h = 0x10;\n            uVar3 = var_32h;\n            goto code_r0x004736b2;\n        }\n        uVar7 = 0;\n        uVar16 = 0;\n        uVar18 = 0;\n        var_38h = 0;\n    }\ncode_r0x00473239:\n    uVar2 = uVar4;\n    uVar3 = uVar7;\n    if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x00473247;\ncode_r0x00473552:\n    uVar4 = uVar2;\n    fcn.0048d3d0(var_38h);\n    cVar6 = fcn.004be720(*(iVar10 + 8), *(iVar10 + 0xc), &var_1eh + 2);\n    if (cVar6 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if (((var_38h != 0) || (bVar19)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x004735a3;\n    goto code_r0x0047325c;\ncode_r0x00473542:\n    uVar4 = 0;\n    uVar2 = 0;\n    if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x00473552;\ncode_r0x00473247:\n    if ((var_38h != 0) || (bVar19)) {\ncode_r0x004735a3:\n        if (uVar3 == 0) {\n            if (var_32h == 0) {\n                if (bVar20) {\n                    bVar19 = uVar16 != 0;\n                    uVar16 = -uVar16;\n                    uVar18 = -(uVar18 + bVar19);\n                }\n                *arg_20h = uVar16;\n                arg_20h[1] = uVar18;\n            }\n            else {\n                uVar11 = 0;\n                uVar16 = 0x80000000;\n                if (!bVar20) {\n                    uVar11 = 0xffffffff;\n                    uVar16 = 0x7fffffff;\n                }\n                *arg_20h = uVar11;\n                arg_20h[1] = uVar16;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00473275;\n        }\n    }\ncode_r0x0047325c:\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x00473275:\n    var_64h = &var_1eh + 1;\n    if (uVar4 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048bdf0(var_64h);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 4645
    },
    "00473940": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00473940(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint16_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    char cVar5;\n    bool bVar6;\n    char cVar7;\n    uint16_t uVar8;\n    int16_t iVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint16_t *puVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    bool bVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    bool bVar19;\n    bool bVar20;\n    ulong uVar21;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint32_t var_50h;\n    uint *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint8_t var_3eh;\n    int32_t var_3dh;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar4 = arg_18h;\n    iVar10 = fcn.0044e2b0(arg_18h + 0x6c);\n    uVar11 = *(iVar4 + 0xc) & 0x4a;\n    if (uVar11 == 0x40) {\n        uVar18 = 8;\ncode_r0x0047397f:\n        var_3dh._0_1_ = fcn.00450bd0(&arg_10h);\n        if (var_3dh == '\\0') {\ncode_r0x0047399e:\n            var_4ch = &arg_10h;\n            uVar8 = fcn.00450c70();\n            bVar20 = *(iVar10 + 0x70) == uVar8;\n            cVar5 = *(iVar10 + 0x10);\n            if ((((bVar20) || (*(iVar10 + 0x72) == uVar8)) && ((cVar5 == '\\0' || (*(iVar10 + 0x26) != uVar8)))) &&\n               (*(iVar10 + 0x24) != uVar8)) {\n                fcn.004a6690();\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_3dh._0_1_ = fcn.00450bd0(var_4ch);\n                stack0xffffffc0 = 0;\n                bVar19 = false;\n                if (var_3dh == '\\0') {\n                    uVar8 = fcn.00450c70();\n                    cVar5 = *(iVar10 + 0x10);\n                    goto code_r0x00473bf0;\n                }\n            }\n            else {\ncode_r0x00473bf0:\n                stack0xffffffc0 = 0;\n                bVar19 = false;\n                while (((cVar5 == '\\0' || (*(iVar10 + 0x26) != uVar8)) && (*(iVar10 + 0x24) != uVar8))) {\n                    if (*(iVar10 + 0x78) == uVar8) {\n                        bVar6 = uVar18 == 10 | bVar19 ^ 1U;\n                        if (!bVar6) goto code_r0x00473c2c;\n                        bVar19 = uVar11 == 0 || uVar18 == 8;\n                        if (uVar11 != 0 && uVar18 != 8) {\n                            unique0x00007a80 = stack0xffffffc0 + 1;\n                            goto code_r0x00473c62;\n                        }\n                        stack0xffffffc0 = 0;\n                        uVar18 = 8;\n                        uVar14 = arg_8h[2];\n                        if (uVar14 < arg_8h[3]) goto code_r0x00473c71;\ncode_r0x00473d70:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00473c80;\n                        var_38h._0_1_ = true;\n                    }\n                    else {\n                        if (!bVar19) break;\ncode_r0x00473c2c:\n                        if ((*(iVar10 + 0x74) != uVar8) && (*(iVar10 + 0x76) != uVar8)) {\n                            var_3dh._0_1_ = '\\0';\n                            bVar19 = true;\n                            goto code_r0x00473a11;\n                        }\n                        var_3dh._0_1_ = uVar18 == 0x10 || uVar11 == 0;\n                        if (uVar18 != 0x10 && uVar11 != 0) {\n                            bVar19 = true;\n                            goto code_r0x00473a1d;\n                        }\n                        stack0xffffffc0 = 0;\n                        uVar18 = 0x10;\n                        bVar6 = false;\ncode_r0x00473c62:\n                        uVar14 = arg_8h[2];\n                        bVar19 = bVar6;\n                        if (arg_8h[3] <= uVar14) goto code_r0x00473d70;\ncode_r0x00473c71:\n                        arg_8h[2] = uVar14 + 2;\ncode_r0x00473c80:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar9 = *arg_8h[2];\n                        }\n                        else {\n                            iVar9 = (**(*arg_8h + 0x24))();\n                        }\n                        var_38h._0_1_ = false;\n                        if (iVar9 == -1) {\n                            arg_8h = NULL;\n                            var_38h._0_1_ = true;\n                        }\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar16 = arg_10h != NULL && arg_14h == -1;\n                    bVar6 = arg_14h == -1;\n                    if (bVar16) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar9 = *arg_10h[2];\n                        }\n                        else {\n                            iVar9 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar6 = false;\n                        if (iVar9 == -1) {\n                            arg_10h = NULL;\n                            bVar6 = bVar16;\n                        }\n                    }\n                    if (var_38h._0_1_ == bVar6) {\n                        var_3dh._0_1_ = '\\x01';\n                        goto code_r0x00473a11;\n                    }\n                    uVar8 = 0xffff;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar8 = *arg_8h[2];\n                        }\n                        else {\n                            uVar8 = (**(*arg_8h + 0x24))();\n                        }\n                        if (uVar8 == 0xffff) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    if (!bVar19) break;\n                    cVar5 = *(iVar10 + 0x10);\n                }\n                var_3dh._0_1_ = '\\0';\n            }\ncode_r0x00473a11:\n            var_50h = 0x16;\n            if (uVar18 == 0x10) goto code_r0x00473a20;\n        }\n        else {\n            uVar8 = 0;\n            stack0xffffffc0 = 0;\n            bVar19 = false;\n            bVar20 = false;\n        }\ncode_r0x00473a1d:\n        var_50h = uVar18;\n    }\n    else {\n        uVar18 = 10;\n        if (uVar11 != 8) goto code_r0x0047397f;\n        uVar18 = 0x10;\n        var_3dh._0_1_ = fcn.00450bd0(&arg_10h);\n        if (var_3dh == '\\0') goto code_r0x0047399e;\n        uVar8 = 0;\n        stack0xffffffc0 = 0;\n        uVar18 = 0x10;\n        bVar19 = false;\n        bVar20 = false;\n        var_50h = 0x16;\n    }\ncode_r0x00473a20:\n    cVar5 = var_3dh;\n    var_4ch = &arg_10h;\n    *NULL = fcn.0048b900(0, 0, &var_1eh + 1);\n    if (*(iVar10 + 0x10) != '\\0') {\n        fcn.0048d0f0(0x20);\n    }\n    uVar21 = fcn.004386d0(0xffffffff, 0xffffffff, uVar18, 0);\n    uVar11 = uVar21 >> 0x20;\n    uVar2 = *(iVar10 + 0xa4);\n    if (uVar2 == 0) {\n        var_3eh = 0;\n        if (var_3dh == '\\0') {\n            var_38h = 0;\n            var_34h = 0;\n            do {\n                uVar14 = uVar8;\n                if (var_50h < 0xb) {\n                    if ((uVar8 < 0x30) || (var_50h + 0x30U <= uVar8)) goto code_r0x00473e20;\ncode_r0x00473acd:\n                    uVar14 = uVar14 - 0x30;\n                }\n                else {\n                    if (uVar8 - 0x30 < 10) goto code_r0x00473acd;\n                    if (uVar8 - 0x61 < 6) {\n                        uVar14 = uVar14 - 0x57;\n                    }\n                    else {\n                        if (5 < uVar8 - 0x41) goto code_r0x00473e20;\n                        uVar14 = uVar14 - 0x37;\n                    }\n                }\n                if (uVar14 == 0xffffffff) goto code_r0x00473e20;\n                if (uVar11 < var_34h || uVar11 - var_34h < (uVar21 < var_38h)) {\n                    var_3eh = 1;\n                    uVar14 = arg_8h[2];\n                    if (uVar14 < arg_8h[3]) goto code_r0x00473b3b;\ncode_r0x00473ec8:\n                    (**(*arg_8h + 0x28))();\n                }\n                else {\n                    uVar12 = var_38h * uVar18;\n                    uVar17 = (var_38h * uVar18 >> 0x20) + uVar18 * var_34h;\n                    uVar15 = ~(uVar14 >> 0x1f);\n                    var_3eh = var_3eh | (uVar15 < uVar17 || uVar15 - uVar17 < (~uVar14 < uVar12));\n                    var_38h = uVar14 + uVar12;\n                    var_34h = (uVar14 >> 0x1f) + uVar17 + CARRY4(uVar14, uVar12);\n                    uVar14 = arg_8h[2];\n                    unique0x00007a80 = stack0xffffffc0 + 1;\n                    if (arg_8h[3] <= uVar14) goto code_r0x00473ec8;\ncode_r0x00473b3b:\n                    arg_8h[2] = uVar14 + 2;\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                cVar5 = fcn.00450bd0(var_4ch);\n                if (cVar5 != '\\0') goto code_r0x00473b65;\n                uVar8 = fcn.00450c70();\n            } while( true );\n        }\n        var_38h = 0;\n        var_3dh._0_1_ = '\\0';\n        var_34h = 0;\n    }\n    else if (var_3dh == '\\0') {\n        puVar1 = iVar10 + 0x78;\n        var_3eh = 0;\n        cVar7 = *(iVar10 + 0x10);\n        var_38h = 0;\n        var_34h = 0;\n        if (cVar7 == '\\0') goto code_r0x00474000;\ncode_r0x00473f83:\n        if (*(iVar10 + 0x26) != uVar8) goto code_r0x00474000;\n        if (stack0xffffffc0 != 0) {\n            fcn.0048d3d0(stack0xffffffc0);\n            stack0xffffffc0 = 0;\ncode_r0x00473fae:\n            uVar14 = arg_8h[2];\n            if (arg_8h[3] <= uVar14) goto code_r0x00474067;\n            do {\n                arg_8h[2] = uVar14 + 2;\n                while( true ) {\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    cVar5 = fcn.00450bd0(var_4ch);\n                    if (cVar5 != '\\0') goto code_r0x00473b65;\n                    uVar8 = fcn.00450c70();\n                    cVar7 = *(iVar10 + 0x10);\n                    if (cVar7 != '\\0') goto code_r0x00473f83;\ncode_r0x00474000:\n                    if (uVar8 == *(iVar10 + 0x24)) goto code_r0x00473e20;\n                    uVar3 = *puVar1;\n                    puVar13 = puVar1;\n                    uVar14 = var_50h;\n                    while (uVar3 != uVar8) {\n                        puVar13 = puVar13 + 1;\n                        uVar14 = uVar14 - 1;\n                        if (uVar14 == 0) goto code_r0x00473e20;\n                        uVar3 = *puVar13;\n                    }\n                    uVar12 = puVar13 - puVar1 >> 1;\n                    uVar14 = uVar12 - 6;\n                    if (puVar13 - puVar1 < 0x1f) {\n                        uVar14 = uVar12;\n                    }\n                    if (var_34h <= uVar11 && (uVar21 < var_38h) <= uVar11 - var_34h) {\n                        uVar12 = var_38h * uVar18;\n                        uVar17 = var_34h * uVar18 + (var_38h * uVar18 >> 0x20);\n                        uVar15 = ~(uVar14 >> 0x1f);\n                        var_3eh = var_3eh | (uVar15 < uVar17 || uVar15 - uVar17 < (~uVar14 < uVar12));\n                        var_38h = uVar14 + uVar12;\n                        var_34h = (uVar14 >> 0x1f) + uVar17 + CARRY4(uVar14, uVar12);\n                        unique0x00007a80 = stack0xffffffc0 + 1;\n                        goto code_r0x00473fae;\n                    }\n                    uVar14 = arg_8h[2];\n                    var_3eh = uVar2;\n                    if (uVar14 < arg_8h[3]) break;\ncode_r0x00474067:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\n        cVar5 = '\\0';\n        var_3dh._0_1_ = cVar7;\n    }\n    else {\n        var_38h = 0;\n        var_34h = 0;\n        var_3eh = 0;\n        var_3dh._0_1_ = '\\0';\n    }\ncode_r0x00473b65:\n    cVar7 = cVar5;\n    if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x00473e30;\ncode_r0x00473b73:\n    if ((stack0xffffffc0 != 0) || (bVar19)) {\ncode_r0x00473e7e:\n        if (var_3dh == '\\0') {\n            if (var_3eh == 0) {\n                if (bVar20) {\n                    bVar19 = var_38h != 0;\n                    var_38h = -var_38h;\n                    var_34h = -(var_34h + bVar19);\n                }\n                *arg_20h = var_38h;\n                arg_20h[1] = var_34h;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                arg_20h[1] = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00473ba1;\n        }\n    }\n    goto code_r0x00473b88;\ncode_r0x00473e20:\n    cVar5 = '\\0';\n    cVar7 = '\\0';\n    if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x00473b73;\ncode_r0x00473e30:\n    cVar5 = cVar7;\n    fcn.0048d3d0(var_3dh._1_1_);\n    cVar7 = fcn.004be720(*(iVar10 + 8), *(iVar10 + 0xc), &var_1eh + 2);\n    if (cVar7 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if (((stack0xffffffc0 != 0) || (bVar19)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x00473e7e;\ncode_r0x00473b88:\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x00473ba1:\n    if (cVar5 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048bdf0(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 4270
    },
    "00474200": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00474200(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint noname_3, int32_t arg_18h, uint *arg_1ch, int32_t *arg_20h\n            )\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    char cVar4;\n    uint8_t uVar5;\n    uint16_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint uVar9;\n    int32_t iVar10;\n    uint16_t *puVar11;\n    uint8_t uVar12;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint8_t var_31h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar7 = fcn.0044e2b0(arg_18h + 0x6c);\n    uVar3 = fcn.00450bd0(&arg_10h);\n    if (uVar3 == 0) {\n        uVar6 = fcn.00450c70();\n        cVar4 = *(iVar7 + 0x10);\n        if ((((*(iVar7 + 0x72) == uVar6) || (*(iVar7 + 0x70) == uVar6)) &&\n            ((cVar4 == '\\0' || (*(iVar7 + 0x26) != uVar6)))) && (*(iVar7 + 0x24) != uVar6)) {\n            fcn.0048d3d0((*(iVar7 + 0x72) != uVar6) * '\\x02' + '+');\n            fcn.004a6690();\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            uVar3 = fcn.00450bd0(&arg_10h);\n            var_38h = 0;\n            uVar12 = 0;\n            if (uVar3 != 0) goto code_r0x00474250;\n            uVar6 = fcn.00450c70();\n            cVar4 = *(iVar7 + 0x10);\n        }\n        uVar12 = 0;\n        var_38h = 0;\n        while ((((cVar4 == '\\0' || (*(iVar7 + 0x26) != uVar6)) && (*(iVar7 + 0x24) != uVar6)) &&\n               (*(iVar7 + 0x78) == uVar6))) {\n            if (uVar12 == 0) {\n                fcn.0048d3d0(0x30);\n                uVar8 = arg_8h[2];\n                if (uVar8 < arg_8h[3]) goto code_r0x004747b4;\ncode_r0x00474805:\n                (**(*arg_8h + 0x28))();\n            }\n            else {\n                uVar8 = arg_8h[2];\n                if (arg_8h[3] <= uVar8) goto code_r0x00474805;\ncode_r0x004747b4:\n                arg_8h[2] = uVar8 + 2;\n            }\n            var_38h = var_38h + 1;\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            uVar3 = fcn.00450bd0(&arg_10h);\n            uVar12 = uVar3;\n            if (uVar3 != 0) goto code_r0x00474250;\n            uVar6 = fcn.00450c70();\n            uVar12 = 1;\n            cVar4 = *(iVar7 + 0x10);\n        }\n        uVar3 = 0;\n    }\n    else {\n        var_38h = 0;\n        uVar6 = 0;\n        uVar12 = 0;\n    }\ncode_r0x00474250:\n    *NULL = fcn.0048b900(0, 0, &var_1eh + 1);\n    if (*(iVar7 + 0x10) != '\\0') {\n        fcn.0048d0f0(0x20);\n    }\n    uVar2 = *(iVar7 + 0xa4);\n    if (uVar2 == 0) {\n        if (uVar3 == 0) {\n            var_31h = 0;\ncode_r0x00474298:\n            if (9 < uVar6 - 0x30) goto code_r0x00474315;\ncode_r0x004742a4:\n            if (uVar6 - 0x30 == -1) goto code_r0x00474315;\n            fcn.0048d3d0((uVar6 - 0x30) + '0');\n            uVar12 = 1;\ncode_r0x004742c4:\n            uVar8 = arg_8h[2];\n            if (arg_8h[3] <= uVar8) goto code_r0x00474619;\n            do {\n                arg_8h[2] = uVar8 + 2;\n                while( true ) {\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    cVar4 = fcn.00450bd0(&arg_10h);\n                    if (cVar4 != '\\0') goto code_r0x0047446e;\n                    uVar6 = fcn.00450c70();\n                    if (uVar6 - 0x30 < 10) goto code_r0x004742a4;\ncode_r0x00474315:\n                    if ((*(iVar7 + 0x24) == uVar6) && ((uVar3 | var_31h) == 0)) {\n                        fcn.0048d3d0(0x2e);\n                        var_31h = 0;\n                        uVar3 = 1;\n                        goto code_r0x004742c4;\n                    }\n                    if (((*(iVar7 + 0x94) != uVar6) && (*(iVar7 + 0xa0) != uVar6)) ||\n                       (uVar12 = uVar12 & (var_31h ^ 1),  uVar12 == 0)) goto code_r0x0047446e;\n                    fcn.0048d3d0(0x65);\n                    if (arg_8h[2] < arg_8h[3]) {\n                        arg_8h[2] = arg_8h[2] + 2;\n                    }\n                    else {\n                        (**(*arg_8h + 0x28))();\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    cVar4 = fcn.00450bd0(&arg_10h);\n                    if (cVar4 != '\\0') goto code_r0x004748dd;\n                    uVar6 = fcn.00450c70();\n                    var_31h = uVar12;\n                    if (*(iVar7 + 0x72) == uVar6) {\n                        uVar9 = 0x2b;\n                    }\n                    else {\n                        uVar9 = 0x2d;\n                        if (*(iVar7 + 0x70) != uVar6) goto code_r0x00474298;\n                    }\n                    fcn.0048d3d0(uVar9);\n                    uVar8 = arg_8h[2];\n                    if (uVar8 < arg_8h[3]) break;\ncode_r0x00474619:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\n    }\n    else if (uVar3 == 0) {\n        var_31h = 0;\n        uVar5 = *(iVar7 + 0x10);\ncode_r0x004743e2:\n        if ((uVar5 != 0) && (*(iVar7 + 0x26) == uVar6)) {\n            uVar3 = uVar3 | var_31h;\n            if (uVar3 == 0) {\n                if (var_38h != 0) {\n                    fcn.0048d3d0(var_38h);\n                    var_31h = 0;\n                    var_38h = 0;\n                    goto code_r0x00474437;\n                }\n                fcn.0048d220(0, *(*arg_20h + -0xc), 0);\n                iVar10 = *(stack0xffffffe0 + -0xc);\n                goto joined_r0x00474908;\n            }\n            iVar10 = *(stack0xffffffe0 + -0xc);\n            goto joined_r0x004748d2;\n        }\n        puVar11 = iVar7 + 0x78;\n        if (*(iVar7 + 0x24) == uVar6) {\n            iVar10 = *(stack0xffffffe0 + -0xc);\n            if ((var_31h | uVar3) == 0) {\n                if (iVar10 != 0) {\n                    fcn.0048d3d0(var_38h);\n                }\n                fcn.0048d3d0(0x2e);\n                var_31h = var_31h | uVar3;\n                uVar3 = uVar2;\n                goto code_r0x00474437;\n            }\n            goto joined_r0x004748d2;\n        }\n        do {\n            if (*puVar11 == uVar6) {\n                fcn.0048d3d0((puVar11 - (iVar7 + 0x78) >> 1) + '0');\n                var_38h = var_38h + 1;\n                uVar8 = arg_8h[2];\n                uVar12 = uVar2;\n                if (uVar8 < arg_8h[3]) goto code_r0x00474446;\n                goto code_r0x00474656;\n            }\n            puVar11 = puVar11 + 1;\n        } while (puVar11 != iVar7 + 0x8c);\n        if ((*(iVar7 + 0x94) != uVar6) && (*(iVar7 + 0xa0) != uVar6)) goto code_r0x0047446e;\n        uVar1 = uVar12 & (var_31h ^ 1);\n        iVar10 = *(stack0xffffffe0 + -0xc);\n        if (uVar1 == 0) goto code_r0x00474474;\n        if ((iVar10 != 0) && (uVar3 == 0)) {\n            fcn.0048d3d0(var_38h);\n        }\n        fcn.0048d3d0(0x65);\n        if (arg_8h[2] < arg_8h[3]) {\n            arg_8h[2] = arg_8h[2] + 2;\n        }\n        else {\n            (**(*arg_8h + 0x28))();\n        }\n        arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n        cVar4 = fcn.00450bd0(&arg_10h);\n        if (cVar4 == '\\0') goto code_r0x00474593;\ncode_r0x004748dd:\n        iVar10 = *(stack0xffffffe0 + -0xc);\njoined_r0x004748d2:\n        if (iVar10 == 0) goto code_r0x004744be;\n        goto code_r0x0047449b;\n    }\n    iVar10 = *(stack0xffffffe0 + -0xc);\njoined_r0x00474908:\n    if (iVar10 == 0) goto code_r0x004744be;\ncode_r0x00474484:\n    fcn.0048d3d0(var_38h);\n    goto code_r0x0047449b;\ncode_r0x00474593:\n    uVar6 = fcn.00450c70();\n    uVar5 = *(iVar7 + 0x10);\n    if ((((*(iVar7 + 0x72) == uVar6) || (var_31h = uVar1,  uVar12 = uVar1,  *(iVar7 + 0x70) == uVar6)) &&\n        ((uVar5 == 0 || (var_31h = uVar5,  uVar12 = uVar5,  *(iVar7 + 0x26) != uVar6)))) &&\n       (var_31h = uVar1,  uVar12 = uVar1,  *(iVar7 + 0x24) != uVar6)) {\n        fcn.0048d3d0((*(iVar7 + 0x72) != uVar6) * '\\x02' + '+');\ncode_r0x00474437:\n        uVar8 = arg_8h[2];\n        if (uVar8 < arg_8h[3]) {\ncode_r0x00474446:\n            arg_8h[2] = uVar8 + 2;\n        }\n        else {\ncode_r0x00474656:\n            (**(*arg_8h + 0x28))();\n        }\n        arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n        cVar4 = fcn.00450bd0(&arg_10h);\n        if (cVar4 != '\\0') goto code_r0x0047446e;\n        uVar6 = fcn.00450c70();\n        uVar5 = *(iVar7 + 0x10);\n    }\n    goto code_r0x004743e2;\ncode_r0x0047446e:\n    iVar10 = *(stack0xffffffe0 + -0xc);\ncode_r0x00474474:\n    if (iVar10 == 0) goto code_r0x004744be;\n    if ((uVar3 == 0) && (var_31h == 0)) goto code_r0x00474484;\ncode_r0x0047449b:\n    cVar4 = fcn.004be720(*(iVar7 + 8), *(iVar7 + 0xc), &var_1eh + 2);\n    if (cVar4 == '\\0') {\n        *arg_1ch = 4;\n    }\ncode_r0x004744be:\n    fcn.0048bdf0(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3237
    },
    "00474f70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00474f70(uint arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h, uint32_t *arg_1ch, uint arg_20h\n            )\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    bool bVar8;\n    ulong uVar9;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    var_20h = fcn.0048b900(0, 0, &var_1ch);\n    fcn.0048d0f0(0x20);\n    uVar9 = fcn.00474200(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_20h);\n    piVar3 = uVar9;\n    uVar4 = uVar9 >> 0x20 & 0xffff;\n    uVar5 = arg_ch & 0xffff0000 | uVar4;\n    var_1ch = fcn.004af100();\n    fcn.004bdab0(var_20h, arg_20h, arg_1ch, &var_1ch);\n    bVar7 = uVar4 == -1;\n    bVar8 = piVar3 != NULL && bVar7;\n    piVar6 = piVar3;\n    if (bVar8) {\n        if (piVar3[2] < piVar3[3]) {\n            iVar2 = *piVar3[2];\n        }\n        else {\n            iVar2 = (**(*piVar3 + 0x24))();\n        }\n        bVar7 = iVar2 == -1 && bVar8;\n        piVar6 = NULL;\n        if (iVar2 != -1) {\n            piVar6 = piVar3;\n        }\n    }\n    var_38h._0_2_ = arg_14h;\n    bVar8 = var_38h == -1;\n    if ((arg_10h != NULL) && (bVar8)) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar2 = *arg_10h[2];\n        }\n        else {\n            iVar2 = (**(*arg_10h + 0x24))();\n        }\n        bVar8 = iVar2 == -1;\n    }\n    if (bVar8 == bVar7) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (*0x515a34 == 0) {\n        iVar1 = *(var_20h + -4);\n        *(var_20h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar3 = var_20h + -4;\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n    }\n    if (0 < iVar1) {\n        return CONCAT44(uVar5, piVar6);\n    }\n    fcn.0048bdd0(&var_1ch);\n    return CONCAT44(uVar5, piVar6);\n}\n",
        "token_count": 806
    },
    "00475150": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00475150(uint arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h, uint32_t *arg_1ch, uint arg_20h\n            )\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    bool bVar8;\n    ulong uVar9;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    var_20h = fcn.0048b900(0, 0, &var_1ch);\n    fcn.0048d0f0(0x20);\n    uVar9 = fcn.00474200(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_20h);\n    piVar3 = uVar9;\n    uVar4 = uVar9 >> 0x20 & 0xffff;\n    uVar5 = arg_ch & 0xffff0000 | uVar4;\n    var_1ch = fcn.004af100();\n    fcn.004bdbd0(var_20h, arg_20h, arg_1ch, &var_1ch);\n    bVar7 = uVar4 == -1;\n    bVar8 = piVar3 != NULL && bVar7;\n    piVar6 = piVar3;\n    if (bVar8) {\n        if (piVar3[2] < piVar3[3]) {\n            iVar2 = *piVar3[2];\n        }\n        else {\n            iVar2 = (**(*piVar3 + 0x24))();\n        }\n        bVar7 = iVar2 == -1 && bVar8;\n        piVar6 = NULL;\n        if (iVar2 != -1) {\n            piVar6 = piVar3;\n        }\n    }\n    var_38h._0_2_ = arg_14h;\n    bVar8 = var_38h == -1;\n    if ((arg_10h != NULL) && (bVar8)) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar2 = *arg_10h[2];\n        }\n        else {\n            iVar2 = (**(*arg_10h + 0x24))();\n        }\n        bVar8 = iVar2 == -1;\n    }\n    if (bVar8 == bVar7) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (*0x515a34 == 0) {\n        iVar1 = *(var_20h + -4);\n        *(var_20h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar3 = var_20h + -4;\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n    }\n    if (0 < iVar1) {\n        return CONCAT44(uVar5, piVar6);\n    }\n    fcn.0048bdd0(&var_1ch);\n    return CONCAT44(uVar5, piVar6);\n}\n",
        "token_count": 805
    },
    "00475330": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00475330(uint arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h, uint32_t *arg_1ch, uint arg_20h\n            )\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    bool bVar8;\n    ulong uVar9;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    var_20h = fcn.0048b900(0, 0, &var_1ch);\n    fcn.0048d0f0(0x20);\n    uVar9 = fcn.00474200(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_20h);\n    piVar3 = uVar9;\n    uVar4 = uVar9 >> 0x20 & 0xffff;\n    uVar5 = arg_ch & 0xffff0000 | uVar4;\n    var_1ch = fcn.004af100();\n    fcn.004bdce0(var_20h, arg_20h, arg_1ch, &var_1ch);\n    bVar7 = uVar4 == -1;\n    bVar8 = piVar3 != NULL && bVar7;\n    piVar6 = piVar3;\n    if (bVar8) {\n        if (piVar3[2] < piVar3[3]) {\n            iVar2 = *piVar3[2];\n        }\n        else {\n            iVar2 = (**(*piVar3 + 0x24))();\n        }\n        bVar7 = iVar2 == -1 && bVar8;\n        piVar6 = NULL;\n        if (iVar2 != -1) {\n            piVar6 = piVar3;\n        }\n    }\n    var_38h._0_2_ = arg_14h;\n    bVar8 = var_38h == -1;\n    if ((arg_10h != NULL) && (bVar8)) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar2 = *arg_10h[2];\n        }\n        else {\n            iVar2 = (**(*arg_10h + 0x24))();\n        }\n        bVar8 = iVar2 == -1;\n    }\n    if (bVar8 == bVar7) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (*0x515a34 == 0) {\n        iVar1 = *(var_20h + -4);\n        *(var_20h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar3 = var_20h + -4;\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n    }\n    if (0 < iVar1) {\n        return CONCAT44(uVar5, piVar6);\n    }\n    fcn.0048bdd0(&var_1ch);\n    return CONCAT44(uVar5, piVar6);\n}\n",
        "token_count": 805
    },
    "004755c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.004755c0(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uchar *puVar10;\n    uint *puVar11;\n    uchar *puVar12;\n    uint uVar13;\n    uchar *puVar14;\n    ulong uVar15;\n    uint uStackY116;\n    int32_t iStackY112;\n    uchar auStack73 [5];\n    uint32_t var_40h;\n    uint var_3ch;\n    uchar *var_38h;\n    uint var_34h;\n    int32_t *var_30h;\n    uint32_t var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_30h = arg_8h;\n    var_34h = arg_ch;\n    var_3ch = arg_14h;\n    iStackY112 = 0x4755ec;\n    iVar6 = fcn.0044e1c0(arg_10h + 0x6c);\n    var_2ch = iVar6 + 0x26;\n    uVar2 = *(arg_10h + 0xc);\n    uStackY116 = 0x475607;\n    iVar7 = fcn.004386a0();\n    iVar7 = -iVar7;\n    puVar11 = &stack0xffffff90 + iVar7;\n    puVar12 = &stack0xffffff90 + iVar7;\n    var_40h = uVar2 & 0x4a;\n    uVar5 = var_40h != 0x40 && var_40h != 8;\n    var_2ch = var_2ch & 0xffffff00 | uVar5;\n    iVar8 = arg_18h;\n    if (arg_18h < 1) {\n        iVar8 = -arg_18h;\n        if (var_40h == 0x40 || var_40h == 8) {\n            iVar8 = arg_18h;\n        }\n    }\n    *(&stack0xffffff94 + iVar7) = iVar8;\n    *(&stack0xffffff98 + iVar7) = iVar6 + 0x26;\n    *(&stack0xffffffa0 + iVar7) = uVar5;\n    *(&stack0xffffff9c + iVar7) = uVar2;\n    *(&stack0xffffff90 + iVar7) = (&stack0xffffffb7 + iVar7 & 0xfffffff0) + 0x14;\n    var_38h = &stack0xffffffb7 + iVar7 & 0xfffffff0;\n    *(&stack0xffffff8c + iVar7) = 0x47565d;\n    iVar8 = fcn.004bd470();\n    if (*(iVar6 + 0x10) == '\\0') {\n        puVar10 = var_38h + (0x14 - iVar8);\n        puVar14 = var_38h + (0x14 - iVar8);\n        if (var_2ch != '\\0') goto code_r0x0047567b;\ncode_r0x004757aa:\n        puVar14 = puVar10;\n        if (((uVar2 & 0x200) != 0) && (arg_18h != 0)) {\n            if (var_40h == 0x40) {\n                iVar8 = iVar8 + 1;\n                puVar14 = puVar10 + -1;\n                *puVar14 = *(iVar6 + 0x2a);\n            }\n            else {\n                iVar8 = iVar8 + 2;\n                puVar14 = puVar10 + -2;\n                puVar10[-1] = *(iVar6 + 0x28 + (uVar2 >> 0xe & 1));\n                *puVar14 = *(iVar6 + 0x2a);\n            }\n        }\ncode_r0x0047568e:\n        iVar7 = *(arg_10h + 8);\n        puVar11 = puVar12;\n        if (iVar7 <= iVar8) goto code_r0x00475698;\n    }\n    else {\n        *(&stack0xffffff8c + iVar7) = 0x475760;\n        uVar15 = fcn.004386a0();\n        iVar9 = uVar15 >> 0x20;\n        iVar4 = -uVar15;\n        puVar11 = &stack0xffffff90 + iVar4 + iVar7;\n        puVar12 = &stack0xffffff90 + iVar4 + iVar7;\n        *(&stack0xffffffa4 + iVar4 + iVar7) = iVar8 + iVar9;\n        *(&stack0xffffffa0 + iVar4 + iVar7) = iVar9;\n        puVar14 = (&stack0xffffffb7 + iVar4 + iVar7 & 0xfffffff0) + 2;\n        *(&stack0xffffff9c + iVar4 + iVar7) = *(iVar6 + 0xc);\n        var_38h = puVar14;\n        *(&stack0xffffff98 + iVar4 + iVar7) = *(iVar6 + 8);\n        cVar1 = *(iVar6 + 0x25);\n        *(&stack0xffffff90 + iVar4 + iVar7) = puVar14;\n        *(&stack0xffffff94 + iVar4 + iVar7) = cVar1;\n        *(&stack0xffffff8c + iVar4 + iVar7) = 0x475797;\n        iVar8 = fcn.004bd7f0();\n        iVar8 = iVar8 - var_38h;\n        puVar10 = var_38h;\n        puVar14 = var_38h;\n        if (var_2ch == '\\0') goto code_r0x004757aa;\ncode_r0x0047567b:\n        puVar12 = puVar11;\n        if (arg_18h < 0) {\n            iVar8 = iVar8 + 1;\n            puVar14[-1] = *(iVar6 + 0x26);\n            puVar14 = puVar14 + -1;\n            goto code_r0x0047568e;\n        }\n        if ((uVar2 & 0x800) == 0) goto code_r0x0047568e;\n        iVar8 = iVar8 + 1;\n        puVar14 = puVar14 + -1;\n        *puVar14 = *(iVar6 + 0x27);\n        iVar7 = *(arg_10h + 8);\n        if (iVar7 <= iVar8) goto code_r0x00475698;\n    }\n    *(puVar11 + -4) = 0x475704;\n    uVar15 = fcn.004386a0();\n    iVar6 = -uVar15;\n    *(puVar11 + iVar6 + 0x14) = iVar8;\n    *(puVar11 + iVar6 + 4) = var_3ch;\n    puVar14 = puVar11 + iVar6 + 0x27 & 0xfffffff0;\n    *(puVar11 + iVar6 + 0xc) = uVar15 >> 0x20;\n    *(puVar11 + iVar6 + 0x10) = iVar7;\n    *(puVar11 + iVar6 + 8) = puVar14;\n    *(puVar11 + iVar6) = arg_10h;\n    *(puVar11 + iVar6 + -4) = 0x475732;\n    fcn.004ac250();\n    iVar8 = iVar7;\n    puVar11 = puVar11 + iVar6;\ncode_r0x00475698:\n    uVar13 = var_34h;\n    *(arg_10h + 8) = 0;\n    if (var_34h == '\\0') {\n        iVar7 = *var_30h;\n        puVar11[1] = iVar8;\n        *puVar11 = puVar14;\n        pcVar3 = *(iVar7 + 0x30);\n        puVar11[-1] = 0x4756ba;\n        iVar7 = (*pcVar3)();\n        if (iVar7 != iVar8) {\n            uVar13 = 1;\n        }\n    }\n    return CONCAT44(uVar13, var_30h) & 0xffffffffff;\n}\n",
        "token_count": 1916
    },
    "00475800": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.00475800(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uchar *puVar9;\n    int32_t iVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uint *puVar13;\n    uint uVar14;\n    uchar *puVar15;\n    ulong uVar16;\n    uint uStackY116;\n    int32_t iStackY112;\n    uchar uStack73;\n    int32_t var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uchar *var_38h;\n    uint var_34h;\n    char var_2dh;\n    int32_t *var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_2ch = arg_8h;\n    var_34h = arg_ch;\n    var_3ch = arg_14h;\n    iStackY112 = 0x47582c;\n    iVar5 = fcn.0044e1c0(arg_10h + 0x6c);\n    uVar2 = *(arg_10h + 0xc);\n    uStackY116 = 0x475847;\n    var_44h = iVar5 + 0x26;\n    iVar6 = fcn.004386a0();\n    iVar6 = -iVar6;\n    puVar12 = &stack0xffffff90 + iVar6;\n    puVar11 = &stack0xffffff90 + iVar6;\n    uVar7 = uVar2 & 0x4a;\n    *(&stack0xffffff98 + iVar6) = iVar5 + 0x26;\n    var_40h = uVar7;\n    *(&stack0xffffff9c + iVar6) = uVar2;\n    var_38h = &stack0xffffffb7 + iVar6 & 0xfffffff0;\n    var_2dh = uVar7 != 0x40 && uVar7 != 8;\n    *(&stack0xffffffa0 + iVar6) = var_2dh;\n    *(&stack0xffffff94 + iVar6) = arg_18h;\n    *(&stack0xffffff90 + iVar6) = (&stack0xffffffb7 + iVar6 & 0xfffffff0) + 0x14;\n    *(&stack0xffffff8c + iVar6) = 0x47588d;\n    iVar8 = fcn.004bd470();\n    puVar9 = var_38h + (0x14 - iVar8);\n    if (*(iVar5 + 0x10) != '\\0') {\n        *(&stack0xffffff8c + iVar6) = 0x47590f;\n        uVar16 = fcn.004386a0();\n        iVar10 = uVar16 >> 0x20;\n        iVar4 = -uVar16;\n        puVar12 = &stack0xffffff90 + iVar4 + iVar6;\n        puVar11 = &stack0xffffff90 + iVar4 + iVar6;\n        *(&stack0xffffffa4 + iVar4 + iVar6) = iVar8 + iVar10;\n        *(&stack0xffffffa0 + iVar4 + iVar6) = iVar10;\n        puVar9 = (&stack0xffffffb7 + iVar4 + iVar6 & 0xfffffff0) + 2;\n        *(&stack0xffffff9c + iVar4 + iVar6) = *(iVar5 + 0xc);\n        var_38h = puVar9;\n        *(&stack0xffffff98 + iVar4 + iVar6) = *(iVar5 + 8);\n        cVar1 = *(iVar5 + 0x25);\n        *(&stack0xffffff90 + iVar4 + iVar6) = puVar9;\n        *(&stack0xffffff94 + iVar4 + iVar6) = cVar1;\n        *(&stack0xffffff8c + iVar4 + iVar6) = 0x475946;\n        iVar8 = fcn.004bd7f0();\n        iVar8 = iVar8 - var_38h;\n        puVar9 = var_38h;\n    }\n    puVar15 = puVar9;\n    if (((var_2dh == '\\0') && (puVar12 = puVar11,  (uVar2 & 0x200) != 0)) && (arg_18h != 0)) {\n        if (var_40h == 0x40) {\n            iVar8 = iVar8 + 1;\n            puVar15 = puVar9 + -1;\n            *puVar15 = *(iVar5 + 0x2a);\n        }\n        else {\n            iVar8 = iVar8 + 2;\n            puVar15 = puVar9 + -2;\n            puVar9[-1] = *(var_44h + 2 + (uVar2 >> 0xe & 1));\n            *puVar15 = *(iVar5 + 0x2a);\n        }\n    }\n    iVar6 = *(arg_10h + 8);\n    puVar13 = puVar12;\n    if (iVar8 < iVar6) {\n        *(puVar12 + -4) = 0x4759ae;\n        uVar16 = fcn.004386a0();\n        iVar5 = -uVar16;\n        puVar13 = puVar12 + iVar5;\n        *(puVar12 + iVar5 + 0x14) = iVar8;\n        *(puVar12 + iVar5 + 4) = var_3ch;\n        puVar15 = puVar12 + iVar5 + 0x27 & 0xfffffff0;\n        *(puVar12 + iVar5 + 0xc) = uVar16 >> 0x20;\n        *(puVar12 + iVar5 + 0x10) = iVar6;\n        *(puVar12 + iVar5 + 8) = puVar15;\n        *(puVar12 + iVar5) = arg_10h;\n        *(puVar12 + iVar5 + -4) = 0x4759dc;\n        fcn.004ac250();\n        iVar8 = iVar6;\n    }\n    uVar14 = var_34h;\n    *(arg_10h + 8) = 0;\n    if (var_34h == '\\0') {\n        iVar6 = *var_2ch;\n        puVar13[1] = iVar8;\n        *puVar13 = puVar15;\n        pcVar3 = *(iVar6 + 0x30);\n        puVar13[-1] = 0x4758d7;\n        iVar6 = (*pcVar3)();\n        if (iVar6 != iVar8) {\n            uVar14 = 1;\n        }\n    }\n    return CONCAT44(uVar14, var_2ch) & 0xffffffffff;\n}\n",
        "token_count": 1595
    },
    "00475a00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.00475a00(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint32_t arg_18h, uint32_t arg_1ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    bool bVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint *puVar12;\n    uchar *puVar13;\n    uint32_t uVar14;\n    uint uVar15;\n    uchar *puVar16;\n    uchar *puVar17;\n    ulong uVar18;\n    uint uStackY116;\n    int32_t iStackY112;\n    uint32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint32_t var_3ch;\n    int32_t *var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_38h = arg_8h;\n    var_2ch = arg_1ch;\n    var_40h = arg_ch;\n    var_44h = arg_14h;\n    var_30h = arg_18h;\n    iStackY112 = 0x475a3a;\n    iVar5 = fcn.0044e1c0(arg_10h + 0x6c);\n    var_34h = iVar5 + 0x26;\n    var_48h = *(arg_10h + 0xc);\n    uStackY116 = 0x475a58;\n    var_3ch = var_48h;\n    iVar6 = fcn.004386a0();\n    iVar6 = -iVar6;\n    puVar12 = &stack0xffffff90 + iVar6;\n    puVar13 = &stack0xffffff90 + iVar6;\n    var_48h = var_48h & 0x4a;\n    uVar14 = &fcn.00475a00::var_48h + iVar6 + 3 & 0xfffffff0;\n    bVar9 = var_48h != 0x40 && var_48h != 8;\n    uVar4 = bVar9;\n    var_34h = var_34h & 0xffffff00 | uVar4;\n    uVar7 = var_30h;\n    uVar10 = var_2ch;\n    if ((((var_2ch - 1) + (var_30h != 0) | var_2ch) < 0) && (bVar9)) {\n        uVar7 = -var_30h;\n        uVar10 = -(var_2ch + (var_30h != 0));\n    }\n    *(&stack0xffffff94 + iVar6) = uVar7;\n    *(&stack0xffffff98 + iVar6) = uVar10;\n    *(&stack0xffffffa4 + iVar6) = uVar4;\n    uVar4 = var_3ch;\n    *(&stack0xffffff90 + iVar6) = uVar14 + 0x28;\n    *(&stack0xffffffa0 + iVar6) = uVar4;\n    *(&stack0xffffff9c + iVar6) = iVar5 + 0x26;\n    *(&stack0xffffff8c + iVar6) = 0x475ac3;\n    iVar8 = fcn.004bd520();\n    puVar16 = (uVar14 - iVar8) + 0x28;\n    if (*(iVar5 + 0x10) == '\\0') {\n        if (var_34h != '\\0') goto code_r0x00475ade;\ncode_r0x00475c04:\n        puVar17 = puVar16;\n        if (((var_3ch & 0x200) != 0) && ((var_30h | var_2ch) != 0)) {\n            if (var_48h == 0x40) {\n                iVar8 = iVar8 + 1;\n                puVar17 = puVar16 + -1;\n                *puVar17 = *(iVar5 + 0x2a);\n            }\n            else {\n                iVar8 = iVar8 + 2;\n                puVar17 = puVar16 + -2;\n                puVar16[-1] = *(iVar5 + 0x28 + (var_3ch >> 0xe & 1));\n                *puVar17 = *(iVar5 + 0x2a);\n            }\n        }\ncode_r0x00475af2:\n        iVar6 = *(arg_10h + 8);\n        puVar12 = puVar13;\n        if (iVar6 <= iVar8) goto code_r0x00475afc;\n    }\n    else {\n        *(&stack0xffffff8c + iVar6) = 0x475bc0;\n        uVar18 = fcn.004386a0();\n        iVar11 = uVar18 >> 0x20;\n        iVar3 = -uVar18;\n        puVar12 = &stack0xffffff90 + iVar3 + iVar6;\n        puVar13 = &stack0xffffff90 + iVar3 + iVar6;\n        *(&stack0xffffffa4 + iVar3 + iVar6) = iVar8 + iVar11;\n        *(&stack0xffffffa0 + iVar3 + iVar6) = iVar11;\n        puVar16 = (&fcn.00475a00::var_48h + iVar3 + iVar6 + 3 & 0xfffffff0U) + 2;\n        *(&stack0xffffff9c + iVar3 + iVar6) = *(iVar5 + 0xc);\n        *(&stack0xffffff98 + iVar3 + iVar6) = *(iVar5 + 8);\n        cVar1 = *(iVar5 + 0x25);\n        *(&stack0xffffff90 + iVar3 + iVar6) = puVar16;\n        *(&stack0xffffff94 + iVar3 + iVar6) = cVar1;\n        *(&stack0xffffff8c + iVar3 + iVar6) = 0x475bf4;\n        iVar8 = fcn.004bd7f0();\n        iVar8 = iVar8 - puVar16;\n        if (var_34h == '\\0') goto code_r0x00475c04;\ncode_r0x00475ade:\n        puVar13 = puVar12;\n        if (var_2ch < 0) {\n            iVar8 = iVar8 + 1;\n            puVar16[-1] = *(iVar5 + 0x26);\n            puVar17 = puVar16 + -1;\n            goto code_r0x00475af2;\n        }\n        puVar17 = puVar16;\n        if ((var_3ch & 0x800) == 0) goto code_r0x00475af2;\n        iVar8 = iVar8 + 1;\n        puVar17 = puVar16 + -1;\n        *puVar17 = *(iVar5 + 0x27);\n        iVar6 = *(arg_10h + 8);\n        if (iVar6 <= iVar8) goto code_r0x00475afc;\n    }\n    *(puVar12 + -4) = 0x475b65;\n    uVar18 = fcn.004386a0();\n    iVar5 = -uVar18;\n    *(puVar12 + iVar5 + 0x14) = iVar8;\n    *(puVar12 + iVar5 + 4) = var_44h;\n    puVar17 = puVar12 + iVar5 + 0x27 & 0xfffffff0;\n    *(puVar12 + iVar5 + 0xc) = uVar18 >> 0x20;\n    *(puVar12 + iVar5 + 0x10) = iVar6;\n    *(puVar12 + iVar5 + 8) = puVar17;\n    *(puVar12 + iVar5) = arg_10h;\n    *(puVar12 + iVar5 + -4) = 0x475b93;\n    fcn.004ac250();\n    iVar8 = iVar6;\n    puVar12 = puVar12 + iVar5;\ncode_r0x00475afc:\n    uVar15 = var_40h;\n    *(arg_10h + 8) = 0;\n    if (var_40h == '\\0') {\n        iVar6 = *var_38h;\n        puVar12[1] = iVar8;\n        *puVar12 = puVar17;\n        pcVar2 = *(iVar6 + 0x30);\n        puVar12[-1] = 0x475b1e;\n        iVar6 = (*pcVar2)();\n        if (iVar6 != iVar8) {\n            uVar15 = 1;\n        }\n    }\n    return CONCAT44(uVar15, var_38h) & 0xffffffffff;\n}\n",
        "token_count": 2036
    },
    "00475c60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.00475c60(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint32_t arg_18h, uint32_t arg_1ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    bool bVar9;\n    uchar *puVar10;\n    int32_t iVar11;\n    uchar *puVar12;\n    uchar *puVar13;\n    uint *puVar14;\n    uint uVar15;\n    uchar *puVar16;\n    ulong uVar17;\n    uint uStackY116;\n    int32_t iStackY112;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uchar *var_3ch;\n    uint var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    int32_t *var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_2ch = arg_8h;\n    var_44h = arg_18h;\n    var_38h = arg_ch;\n    var_40h = arg_14h;\n    var_30h = arg_1ch;\n    iStackY112 = 0x475c98;\n    iVar5 = fcn.0044e1c0(arg_10h + 0x6c);\n    var_34h = iVar5 + 0x26;\n    uVar2 = *(arg_10h + 0xc);\n    uStackY116 = 0x475cb3;\n    iVar6 = fcn.004386a0();\n    iVar6 = -iVar6;\n    puVar13 = &stack0xffffff90 + iVar6;\n    puVar12 = &stack0xffffff90 + iVar6;\n    uVar7 = uVar2 & 0x4a;\n    *(&stack0xffffff94 + iVar6) = arg_18h;\n    puVar10 = &fcn.00475c60::var_48h + iVar6 + 3 & 0xfffffff0;\n    var_48h = uVar7;\n    *(&stack0xffffffa0 + iVar6) = uVar2;\n    var_3ch = puVar10;\n    bVar9 = uVar7 != 0x40 && uVar7 != 8;\n    var_34h = var_34h & 0xffffff00 | bVar9;\n    *(&stack0xffffffa4 + iVar6) = bVar9;\n    uVar7 = var_30h;\n    *(&stack0xffffff9c + iVar6) = iVar5 + 0x26;\n    *(&stack0xffffff98 + iVar6) = uVar7;\n    *(&stack0xffffff90 + iVar6) = puVar10 + 0x28;\n    *(&stack0xffffff8c + iVar6) = 0x475d00;\n    iVar8 = fcn.004bd520();\n    puVar10 = var_3ch + (0x28 - iVar8);\n    if (*(iVar5 + 0x10) == '\\0') {\n    }\n    else {\n        *(&stack0xffffff8c + iVar6) = 0x475d7f;\n        uVar17 = fcn.004386a0();\n        iVar11 = uVar17 >> 0x20;\n        iVar4 = -uVar17;\n        puVar13 = &stack0xffffff90 + iVar4 + iVar6;\n        puVar12 = &stack0xffffff90 + iVar4 + iVar6;\n        *(&stack0xffffffa4 + iVar4 + iVar6) = iVar8 + iVar11;\n        *(&stack0xffffffa0 + iVar4 + iVar6) = iVar11;\n        puVar10 = (&fcn.00475c60::var_48h + iVar4 + iVar6 + 3 & 0xfffffff0U) + 2;\n        *(&stack0xffffff9c + iVar4 + iVar6) = *(iVar5 + 0xc);\n        var_3ch = puVar10;\n        *(&stack0xffffff98 + iVar4 + iVar6) = *(iVar5 + 8);\n        cVar1 = *(iVar5 + 0x25);\n        *(&stack0xffffff90 + iVar4 + iVar6) = puVar10;\n        *(&stack0xffffff94 + iVar4 + iVar6) = cVar1;\n        *(&stack0xffffff8c + iVar4 + iVar6) = 0x475db6;\n        iVar8 = fcn.004bd7f0();\n        iVar8 = iVar8 - var_3ch;\n        puVar10 = var_3ch;\n    }\n    puVar16 = puVar10;\n    if (((var_34h == '\\0') && (puVar13 = puVar12,  (uVar2 & 0x200) != 0)) && ((var_44h | var_30h) != 0)) {\n        if (var_48h == 0x40) {\n            iVar8 = iVar8 + 1;\n            puVar16 = puVar10 + -1;\n            *puVar16 = *(iVar5 + 0x2a);\n        }\n        else {\n            iVar8 = iVar8 + 2;\n            puVar16 = puVar10 + -2;\n            puVar10[-1] = *(iVar5 + 0x28 + (uVar2 >> 0xe & 1));\n            *puVar16 = *(iVar5 + 0x2a);\n        }\n    }\n    iVar6 = *(arg_10h + 8);\n    puVar14 = puVar13;\n    if (iVar8 < iVar6) {\n        *(puVar13 + -4) = 0x475e1e;\n        uVar17 = fcn.004386a0();\n        iVar5 = -uVar17;\n        puVar14 = puVar13 + iVar5;\n        *(puVar13 + iVar5 + 0x14) = iVar8;\n        *(puVar13 + iVar5 + 4) = var_40h;\n        puVar16 = puVar13 + iVar5 + 0x27 & 0xfffffff0;\n        *(puVar13 + iVar5 + 0xc) = uVar17 >> 0x20;\n        *(puVar13 + iVar5 + 0x10) = iVar6;\n        *(puVar13 + iVar5 + 8) = puVar16;\n        *(puVar13 + iVar5) = arg_10h;\n        *(puVar13 + iVar5 + -4) = 0x475e4c;\n        fcn.004ac250();\n        iVar8 = iVar6;\n    }\n    uVar15 = var_38h;\n    *(arg_10h + 8) = 0;\n    if (var_38h == '\\0') {\n        iVar6 = *var_2ch;\n        puVar14[1] = iVar8;\n        *puVar14 = puVar16;\n        pcVar3 = *(iVar6 + 0x30);\n        puVar14[-1] = 0x475d4a;\n        iVar6 = (*pcVar3)();\n        if (iVar6 != iVar8) {\n            uVar15 = 1;\n        }\n    }\n    return CONCAT44(uVar15, var_2ch) & 0xffffffffff;\n}\n",
        "token_count": 1713
    },
    "00475f30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.00475f30(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t *piVar9;\n    char **ppcVar10;\n    uchar *puVar11;\n    char **ppcVar12;\n    char *pcVar13;\n    char *pcVar14;\n    bool bVar15;\n    ulong uVar16;\n    ulong in_stack_00000018;\n    uint uStackY148;\n    int32_t iStackY144;\n    int32_t *piStack136;\n    int32_t iStack132;\n    uchar auStack128 [27];\n    uchar auStack101 [5];\n    int32_t *var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    uint uStack72;\n    int32_t *var_40h;\n    char *s;\n    char *var_31h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_40h = arg_8h;\n    _var_48h = in_stack_00000018;\n    var_50h = arg_ch;\n    var_58h = arg_14h;\n    iStackY144 = 0x475f68;\n    var_4ch = fcn.0044e1c0(arg_10h + 0x6c);\n    iVar7 = *(arg_10h + 4);\n    if (iVar7 < 0) {\n        iVar7 = 6;\n    }\n    piStack136 = arg_18h;\n    iStackY144 = arg_10h;\n    uStackY148 = 0x475f99;\n    fcn.0048de20();\n    uStackY148 = 0x475fb1;\n    uVar16 = fcn.004386a0();\n    iVar2 = -uVar16;\n    piVar9 = &stack0xffffff70 + iVar2;\n    s = &stack0xffffff9b + iVar2 & 0xfffffff0;\n    if (uVar16 >> 0x20 == 0x104) {\n        *(&stack0xffffff6c + iVar2) = 0x47625a;\n        var_2ch = fcn.004af100();\n        uVar16 = _var_48h;\n        *(&stack0xffffff7c + iVar2) = &fcn.00475f30::var_28h;\n        pcVar3 = s;\n        *(&stack0xffffff78 + iVar2) = 0x2d;\n        *(&stack0xffffff74 + iVar2) = pcVar3;\n        *(&stack0xffffff70 + iVar2) = &fcn.00475f30::var_2ch;\n        *(&stack0xffffff80 + iVar2) = uVar16;\n        *(&stack0xffffff6c + iVar2) = 0x476282;\n        *NULL = fcn.004bde30();\n        if (0x2c < *NULL) {\n            var_5ch = *NULL + 1;\n            *(&stack0xffffff6c + iVar2) = 0x4762a2;\n            iVar7 = fcn.004386a0();\n            iVar7 = -iVar7;\n            piVar9 = &stack0xffffff70 + iVar7 + iVar2;\n            s = &stack0xffffff9b + iVar7 + iVar2 & 0xfffffff0;\n            *(&stack0xffffff6c + iVar7 + iVar2) = 0x4762b3;\n            var_2ch = fcn.004af100();\n            uVar16 = _var_48h;\n            piVar6 = var_5ch;\n            *(&stack0xffffff7c + iVar7 + iVar2) = &fcn.00475f30::var_28h;\n            pcVar3 = s;\n            *(&stack0xffffff78 + iVar7 + iVar2) = piVar6;\n            *(&stack0xffffff74 + iVar7 + iVar2) = pcVar3;\n            *(&stack0xffffff70 + iVar7 + iVar2) = &fcn.00475f30::var_2ch;\n            *(&stack0xffffff80 + iVar7 + iVar2) = uVar16;\n            *(&stack0xffffff6c + iVar7 + iVar2) = 0x4762d7;\n            *NULL = fcn.004bde30();\n        }\n    }\n    else {\n        *(&stack0xffffff6c + iVar2) = 0x475fce;\n        var_2ch = fcn.004af100();\n        uVar16 = _var_48h;\n        *(&stack0xffffff80 + iVar2) = iVar7;\n        pcVar3 = s;\n        *(&stack0xffffff7c + iVar2) = &fcn.00475f30::var_28h;\n        *(&stack0xffffff74 + iVar2) = pcVar3;\n        *(&stack0xffffff78 + iVar2) = 0x2d;\n        *(&stack0xffffff70 + iVar2) = &fcn.00475f30::var_2ch;\n        *(&stack0xffffff84 + iVar2) = uVar16;\n        *(&stack0xffffff6c + iVar2) = 0x475ffa;\n        *NULL = fcn.004bde30();\n        piVar9 = &stack0xffffff70 + iVar2;\n        if (0x2c < *NULL) {\n            var_5ch = *NULL + 1;\n            *(&stack0xffffff6c + iVar2) = 0x476114;\n            iVar4 = fcn.004386a0();\n            iVar4 = -iVar4;\n            piVar9 = &stack0xffffff70 + iVar4 + iVar2;\n            s = &stack0xffffff9b + iVar4 + iVar2 & 0xfffffff0;\n            *(&stack0xffffff6c + iVar4 + iVar2) = 0x476125;\n            var_2ch = fcn.004af100();\n            uVar16 = _var_48h;\n            piVar6 = var_5ch;\n            *(&stack0xffffff80 + iVar4 + iVar2) = iVar7;\n            pcVar3 = s;\n            *(&stack0xffffff7c + iVar4 + iVar2) = &fcn.00475f30::var_28h;\n            *(&stack0xffffff74 + iVar4 + iVar2) = pcVar3;\n            *(&stack0xffffff78 + iVar4 + iVar2) = piVar6;\n            *(&stack0xffffff70 + iVar4 + iVar2) = &fcn.00475f30::var_2ch;\n            *(&stack0xffffff84 + iVar4 + iVar2) = uVar16;\n            *(&stack0xffffff6c + iVar4 + iVar2) = 0x476150;\n            *NULL = fcn.004bde30();\n        }\n    }\n    *piVar9 = arg_10h + 0x6c;\n    piVar9[-1] = 0x47600e;\n    fcn.004c0920();\n    pcVar13 = stack0xffffffcc;\n    piVar9[-1] = 0x476023;\n    uVar16 = fcn.004386a0();\n    pcVar3 = s;\n    piVar6 = uVar16 >> 0x20;\n    iVar7 = -uVar16;\n    ppcVar12 = piVar9 + iVar7;\n    pcVar14 = piVar9 + iVar7 + 0x2b & 0xfffffff0;\n    _var_48h = CONCAT44(uStack72, piVar9 + iVar7 + 0x2b) & 0xfffffffffffffff0;\n    if (*(piVar6 + 7) == '\\x01') {\n        *(piVar9 + iVar7 + 8) = pcVar13;\n        *(piVar9 + iVar7) = pcVar14;\n        *(piVar9 + iVar7 + 4) = pcVar3;\n        *(piVar9 + iVar7 + -4) = 0x476393;\n        sub.msvcrt.dll_memcpy();\n    }\n    else {\n        if (*(piVar6 + 7) == '\\0') {\n            var_5ch = piVar6;\n            *(piVar9 + iVar7 + -4) = 0x4762ea;\n            fcn.00451a70();\n            pcVar1 = *(*var_5ch + 0x1c);\n            pcVar3 = s;\n        }\n        else {\n            pcVar1 = *(*piVar6 + 0x1c);\n        }\n        s = pcVar3;\n        if (pcVar1 == 0x451cf0) {\n            *(piVar9 + iVar7 + 8) = pcVar13;\n            *(piVar9 + iVar7) = pcVar14;\n            *(piVar9 + iVar7 + 4) = pcVar3;\n            *(piVar9 + iVar7 + -4) = 0x476066;\n            sub.msvcrt.dll_memcpy();\n            ppcVar12 = piVar9 + iVar7;\n            pcVar13 = stack0xffffffcc;\n        }\n        else {\n            *(piVar9 + iVar7 + 8) = pcVar14;\n            *(piVar9 + iVar7) = pcVar3;\n            *(piVar9 + iVar7 + 4) = pcVar13 + pcVar3;\n            puVar11 = piVar9 + iVar7 + -4;\n            *(piVar9 + iVar7 + -4) = 0x476311;\n            (*pcVar1)();\n            ppcVar12 = puVar11 + -0xc;\n            pcVar13 = stack0xffffffcc;\n        }\n    }\n    pcVar3 = s;\n    if (pcVar13 == NULL) {\n        if (*(var_4ch + 0x10) != '\\0') goto code_r0x0047616f;\ncode_r0x004760ab:\n        pcVar3 = *(arg_10h + 8);\n        ppcVar10 = ppcVar12;\n        if (pcVar3 <= pcVar13) goto code_r0x004760b9;\n    }\n    else {\n        ppcVar12[2] = pcVar13;\n        ppcVar12[1] = 0x2e;\n        *ppcVar12 = pcVar3;\n        ppcVar12[-1] = 0x47608a;\n        iVar7 = sub.msvcrt.dll_memchr();\n        if (iVar7 == 0) {\n            if ((*(var_4ch + 0x10) != '\\0') &&\n               ((pcVar13 < 3 ||\n                (((s[1] < ':' && (var_5ch = var_5ch & 0xffffff00 | s[2],  s[2] - 0x30U < 10)) && ('/' < s[1]))))))\n            goto code_r0x0047616f;\n            goto code_r0x004760ab;\n        }\n        pcVar14[iVar7 - s] = *(var_4ch + 0x24);\n        if (*(var_4ch + 0x10) == '\\0') goto code_r0x004760ab;\ncode_r0x0047616f:\n        ppcVar12[-1] = 0x47617e;\n        uVar16 = fcn.004386a0();\n        iVar7 = -uVar16;\n        pcVar5 = ppcVar12 + iVar7 + 0x2b & 0xfffffff0;\n        bVar15 = (*s - 0x2bU & 0xfd) == 0;\n        pcVar3 = pcVar5;\n        if (bVar15) {\n            _var_48h = _var_48h & 0xffffffff00000000 | ZEXT48(pcVar14 + 1);\n            *pcVar5 = *pcVar14;\n            stack0xffffffcc = pcVar13 + -1;\n            pcVar3 = pcVar5 + 1;\n        }\n        s = pcVar5;\n        *(ppcVar12 + iVar7 + 0x18) = &fcn.00475f30::var_31h + 1;\n        *(ppcVar12 + iVar7 + 0x14) = var_48h;\n        iVar2 = var_4ch;\n        *(ppcVar12 + iVar7 + 0x10) = pcVar3;\n        *(ppcVar12 + iVar7 + 0xc) = uVar16 >> 0x20;\n        *(ppcVar12 + iVar7 + 8) = *(iVar2 + 0x25);\n        *(ppcVar12 + iVar7 + 4) = *(iVar2 + 0xc);\n        *(ppcVar12 + iVar7) = *(iVar2 + 8);\n        *(ppcVar12 + iVar7 + -4) = 0x4761ee;\n        fcn.00475e70();\n        pcVar13 = stack0xffffffcc + bVar15;\n        ppcVar10 = ppcVar12 + iVar7 + -0x1c;\n        ppcVar12 = ppcVar12 + iVar7 + -0x1c;\n        stack0xffffffcc = pcVar13;\n        _var_48h = _var_48h & 0xffffffff00000000 | ZEXT48(s);\n        pcVar3 = *(arg_10h + 8);\n        if (pcVar3 <= pcVar13) goto code_r0x004760b9;\n    }\n    *(ppcVar10 + -4) = 0x476219;\n    iVar7 = fcn.004386a0();\n    iVar7 = -iVar7;\n    ppcVar12 = ppcVar10 + iVar7;\n    *(ppcVar10 + iVar7 + 0x14) = pcVar13;\n    *(ppcVar10 + iVar7 + 0xc) = var_48h;\n    *(ppcVar10 + iVar7 + 0x10) = pcVar3;\n    *(ppcVar10 + iVar7 + 4) = var_58h;\n    *(ppcVar10 + iVar7 + 8) = ppcVar10 + iVar7 + 0x2b & 0xfffffff0;\n    *(ppcVar10 + iVar7) = arg_10h;\n    *(ppcVar10 + iVar7 + -4) = 0x47624a;\n    fcn.004ac250();\n    stack0xffffffcc = pcVar3;\n    _var_48h = _var_48h & 0xffffffff00000000 | ZEXT48(ppcVar10 + iVar7 + 0x2b) & 0xfffffffffffffff0;\n    pcVar13 = pcVar3;\ncode_r0x004760b9:\n    uVar8 = var_50h;\n    *(arg_10h + 8) = 0;\n    if (var_50h == '\\0') {\n        iVar7 = *var_40h;\n        ppcVar12[1] = pcVar13;\n        *ppcVar12 = var_48h;\n        pcVar1 = *(iVar7 + 0x30);\n        ppcVar12[-1] = 0x4760de;\n        pcVar3 = (*pcVar1)();\n        if (pcVar3 != pcVar13) {\n            uVar8 = 1;\n        }\n    }\n    return CONCAT44(uVar8, var_40h) & 0xffffffffff;\n}\n",
        "token_count": 3553
    },
    "004763a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.004763a0(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t *piVar9;\n    char **ppcVar10;\n    uchar *puVar11;\n    char **ppcVar12;\n    char *pcVar13;\n    char *pcVar14;\n    bool bVar15;\n    ulong uVar16;\n    unkbyte10 in_stack_00000018;\n    uint uStackY132;\n    int32_t iStackY128;\n    char *pcStack120;\n    int32_t iStack116;\n    uchar auStack112 [20];\n    int32_t *var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t *var_44h;\n    char *var_40h;\n    char *s;\n    char *var_31h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_44h = arg_8h;\n    var_4ch = arg_ch;\n    var_54h = arg_14h;\n    iStackY128 = 0x4763d2;\n    var_48h = fcn.0044e1c0(arg_10h + 0x6c);\n    iVar7 = *(arg_10h + 4);\n    if (iVar7 < 0) {\n        iVar7 = 6;\n    }\n    pcStack120 = arg_18h;\n    iStackY128 = arg_10h;\n    uStackY132 = 0x476403;\n    fcn.0048de20();\n    uStackY132 = 0x47641b;\n    uVar16 = fcn.004386a0();\n    iVar2 = -uVar16;\n    piVar9 = &stack0xffffff80 + iVar2;\n    s = &fcn.004763a0::var_50h + iVar2 + 3 & 0xfffffff0;\n    if (uVar16 >> 0x20 == 0x104) {\n        *(&stack0xffffff7c + iVar2) = 0x4766ca;\n        var_2ch = fcn.004af100();\n        *(&stack0xffffff8c + iVar2) = &fcn.004763a0::var_28h;\n        pcVar3 = s;\n        *(&stack0xffffff88 + iVar2) = 0x36;\n        *(&stack0xffffff90 + iVar2) = in_stack_00000018;\n        *(&stack0xffffff84 + iVar2) = pcVar3;\n        *(&stack0xffffff80 + iVar2) = &fcn.004763a0::var_2ch;\n        *(&stack0xffffff7c + iVar2) = 0x4766f2;\n        *NULL = fcn.004bde30();\n        if (0x35 < *NULL) {\n            var_40h = *NULL + 1;\n            *(&stack0xffffff7c + iVar2) = 0x476712;\n            iVar7 = fcn.004386a0();\n            iVar7 = -iVar7;\n            piVar9 = &stack0xffffff80 + iVar7 + iVar2;\n            s = &fcn.004763a0::var_50h + iVar7 + iVar2 + 3 & 0xfffffff0;\n            *(&stack0xffffff7c + iVar7 + iVar2) = 0x476723;\n            var_2ch = fcn.004af100();\n            pcVar3 = var_40h;\n            *(&stack0xffffff8c + iVar7 + iVar2) = &fcn.004763a0::var_28h;\n            pcVar13 = s;\n            *(&stack0xffffff88 + iVar7 + iVar2) = pcVar3;\n            *(&stack0xffffff90 + iVar7 + iVar2) = in_stack_00000018;\n            *(&stack0xffffff84 + iVar7 + iVar2) = pcVar13;\n            *(&stack0xffffff80 + iVar7 + iVar2) = &fcn.004763a0::var_2ch;\n            *(&stack0xffffff7c + iVar7 + iVar2) = 0x476747;\n            *NULL = fcn.004bde30();\n        }\n    }\n    else {\n        *(&stack0xffffff7c + iVar2) = 0x476438;\n        var_2ch = fcn.004af100();\n        *(&stack0xffffff90 + iVar2) = iVar7;\n        pcVar3 = s;\n        *(&stack0xffffff8c + iVar2) = &fcn.004763a0::var_28h;\n        *(&stack0xffffff94 + iVar2) = in_stack_00000018;\n        *(&stack0xffffff84 + iVar2) = pcVar3;\n        *(&stack0xffffff88 + iVar2) = 0x36;\n        *(&stack0xffffff80 + iVar2) = &fcn.004763a0::var_2ch;\n        *(&stack0xffffff7c + iVar2) = 0x476464;\n        *NULL = fcn.004bde30();\n        piVar9 = &stack0xffffff80 + iVar2;\n        if (0x35 < *NULL) {\n            var_40h = *NULL + 1;\n            *(&stack0xffffff7c + iVar2) = 0x476584;\n            iVar4 = fcn.004386a0();\n            iVar4 = -iVar4;\n            piVar9 = &stack0xffffff80 + iVar4 + iVar2;\n            s = &fcn.004763a0::var_50h + iVar4 + iVar2 + 3 & 0xfffffff0;\n            *(&stack0xffffff7c + iVar4 + iVar2) = 0x476595;\n            var_2ch = fcn.004af100();\n            pcVar3 = var_40h;\n            *(&stack0xffffff90 + iVar4 + iVar2) = iVar7;\n            pcVar13 = s;\n            *(&stack0xffffff8c + iVar4 + iVar2) = &fcn.004763a0::var_28h;\n            *(&stack0xffffff94 + iVar4 + iVar2) = in_stack_00000018;\n            *(&stack0xffffff84 + iVar4 + iVar2) = pcVar13;\n            *(&stack0xffffff88 + iVar4 + iVar2) = pcVar3;\n            *(&stack0xffffff80 + iVar4 + iVar2) = &fcn.004763a0::var_2ch;\n            *(&stack0xffffff7c + iVar4 + iVar2) = 0x4765c0;\n            *NULL = fcn.004bde30();\n        }\n    }\n    *piVar9 = arg_10h + 0x6c;\n    piVar9[-1] = 0x476478;\n    fcn.004c0920();\n    pcVar13 = stack0xffffffcc;\n    piVar9[-1] = 0x47648d;\n    uVar16 = fcn.004386a0();\n    pcVar3 = s;\n    piVar6 = uVar16 >> 0x20;\n    iVar7 = -uVar16;\n    ppcVar12 = piVar9 + iVar7;\n    pcVar14 = piVar9 + iVar7 + 0x2f & 0xfffffff0;\n    var_40h = pcVar14;\n    if (*(piVar6 + 7) == '\\x01') {\n        *(piVar9 + iVar7 + 8) = pcVar13;\n        *(piVar9 + iVar7) = pcVar14;\n        *(piVar9 + iVar7 + 4) = pcVar3;\n        *(piVar9 + iVar7 + -4) = 0x476803;\n        sub.msvcrt.dll_memcpy();\n    }\n    else {\n        if (*(piVar6 + 7) == '\\0') {\n            var_58h = piVar6;\n            *(piVar9 + iVar7 + -4) = 0x47675a;\n            fcn.00451a70();\n            pcVar1 = *(*var_58h + 0x1c);\n            pcVar3 = s;\n        }\n        else {\n            pcVar1 = *(*piVar6 + 0x1c);\n        }\n        s = pcVar3;\n        if (pcVar1 == 0x451cf0) {\n            *(piVar9 + iVar7 + 8) = pcVar13;\n            *(piVar9 + iVar7) = pcVar14;\n            *(piVar9 + iVar7 + 4) = pcVar3;\n            *(piVar9 + iVar7 + -4) = 0x4764d0;\n            sub.msvcrt.dll_memcpy();\n            ppcVar12 = piVar9 + iVar7;\n            pcVar13 = stack0xffffffcc;\n        }\n        else {\n            *(piVar9 + iVar7 + 8) = pcVar14;\n            *(piVar9 + iVar7) = pcVar3;\n            *(piVar9 + iVar7 + 4) = pcVar13 + pcVar3;\n            puVar11 = piVar9 + iVar7 + -4;\n            *(piVar9 + iVar7 + -4) = 0x476781;\n            (*pcVar1)();\n            ppcVar12 = puVar11 + -0xc;\n            pcVar13 = stack0xffffffcc;\n        }\n    }\n    pcVar3 = s;\n    if (pcVar13 == NULL) {\n        if (*(var_48h + 0x10) != '\\0') goto code_r0x004765df;\ncode_r0x00476515:\n        pcVar3 = *(arg_10h + 8);\n        ppcVar10 = ppcVar12;\n        if (pcVar3 <= pcVar13) goto code_r0x00476523;\n    }\n    else {\n        ppcVar12[2] = pcVar13;\n        ppcVar12[1] = 0x2e;\n        *ppcVar12 = pcVar3;\n        ppcVar12[-1] = 0x4764f4;\n        iVar7 = sub.msvcrt.dll_memchr();\n        if (iVar7 == 0) {\n            if ((*(var_48h + 0x10) != '\\0') &&\n               ((pcVar13 < 3 ||\n                (((s[1] < ':' && (var_58h = var_58h & 0xffffff00 | s[2],  s[2] - 0x30U < 10)) && ('/' < s[1]))))))\n            goto code_r0x004765df;\n            goto code_r0x00476515;\n        }\n        pcVar14[iVar7 - s] = *(var_48h + 0x24);\n        if (*(var_48h + 0x10) == '\\0') goto code_r0x00476515;\ncode_r0x004765df:\n        ppcVar12[-1] = 0x4765ee;\n        uVar16 = fcn.004386a0();\n        iVar7 = -uVar16;\n        pcVar5 = ppcVar12 + iVar7 + 0x2f & 0xfffffff0;\n        bVar15 = (*s - 0x2bU & 0xfd) == 0;\n        pcVar3 = pcVar5;\n        if (bVar15) {\n            var_40h = pcVar14 + 1;\n            *pcVar5 = *pcVar14;\n            stack0xffffffcc = pcVar13 + -1;\n            pcVar3 = pcVar5 + 1;\n        }\n        pcVar13 = var_40h;\n        s = pcVar5;\n        *(ppcVar12 + iVar7 + 0x18) = &fcn.004763a0::var_31h + 1;\n        *(ppcVar12 + iVar7 + 0x14) = pcVar13;\n        iVar2 = var_48h;\n        *(ppcVar12 + iVar7 + 0x10) = pcVar3;\n        *(ppcVar12 + iVar7 + 0xc) = uVar16 >> 0x20;\n        *(ppcVar12 + iVar7 + 8) = *(iVar2 + 0x25);\n        *(ppcVar12 + iVar7 + 4) = *(iVar2 + 0xc);\n        *(ppcVar12 + iVar7) = *(iVar2 + 8);\n        *(ppcVar12 + iVar7 + -4) = 0x47665e;\n        fcn.00475e70();\n        pcVar13 = stack0xffffffcc + bVar15;\n        ppcVar10 = ppcVar12 + iVar7 + -0x1c;\n        ppcVar12 = ppcVar12 + iVar7 + -0x1c;\n        stack0xffffffcc = pcVar13;\n        var_40h = s;\n        pcVar3 = *(arg_10h + 8);\n        if (pcVar3 <= pcVar13) goto code_r0x00476523;\n    }\n    *(ppcVar10 + -4) = 0x476689;\n    iVar7 = fcn.004386a0();\n    pcVar14 = var_40h;\n    iVar7 = -iVar7;\n    ppcVar12 = ppcVar10 + iVar7;\n    *(ppcVar10 + iVar7 + 0x14) = pcVar13;\n    *(ppcVar10 + iVar7 + 0xc) = pcVar14;\n    *(ppcVar10 + iVar7 + 0x10) = pcVar3;\n    *(ppcVar10 + iVar7 + 4) = var_54h;\n    *(ppcVar10 + iVar7 + 8) = ppcVar10 + iVar7 + 0x2f & 0xfffffff0;\n    *(ppcVar10 + iVar7) = arg_10h;\n    *(ppcVar10 + iVar7 + -4) = 0x4766ba;\n    fcn.004ac250();\n    stack0xffffffcc = pcVar3;\n    var_40h = ppcVar10 + iVar7 + 0x2f & 0xfffffff0;\n    pcVar13 = pcVar3;\ncode_r0x00476523:\n    pcVar3 = var_40h;\n    uVar8 = var_4ch;\n    *(arg_10h + 8) = 0;\n    if (var_4ch == '\\0') {\n        iVar7 = *var_44h;\n        ppcVar12[1] = pcVar13;\n        *ppcVar12 = pcVar3;\n        pcVar1 = *(iVar7 + 0x30);\n        ppcVar12[-1] = 0x476548;\n        pcVar3 = (*pcVar1)();\n        if (pcVar3 != pcVar13) {\n            uVar8 = 1;\n        }\n    }\n    return CONCAT44(uVar8, var_44h) & 0xffffffffff;\n}\n",
        "token_count": 3463
    },
    "004769e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.004769e0(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint32_t arg_18h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint extraout_ECX;\n    uchar *puVar7;\n    uint64_t uVar8;\n    uint32_t auStackY148 [2];\n    uchar auStack109 [5];\n    uint32_t var_64h;\n    int32_t var_60h;\n    int32_t var_5ch;\n    uint32_t var_58h;\n    uint32_t var_54h;\n    int32_t var_50h;\n    uint32_t var_4ch;\n    uint var_30h;\n    uint var_2ch;\n    uint var_19h;\n    uint var_ch;\n    \n    var_50h = arg_14h;\n    var_54h = *(arg_10h + 0xc);\n    if ((var_54h & 1) == 0) {\n        var_50h._0_1_ = arg_14h;\n        auStackY148[1] = 0x476a24;\n        uVar8 = fcn.004755c0(arg_8h, arg_ch, arg_10h, var_50h, arg_18h & 0xff);\n        return uVar8 & 0xffffffff | (arg_ch & 0xffffff00 | uVar8 >> 0x20 & 0xff) << 0x20;\n    }\n    var_58h = arg_18h;\n    var_4ch = var_4ch & 0xffffff00 | arg_ch & 0xff;\n    auStackY148[1] = 0x476a58;\n    iVar4 = fcn.0044e1c0(arg_10h + 0x6c);\n    if (var_58h == '\\0') {\n        var_58h = *(iVar4 + 0x1c);\n        iVar4 = *(iVar4 + 0x20);\n        iVar6 = *(arg_10h + 8);\n        if (iVar4 < iVar6) goto code_r0x00476ac4;\ncode_r0x00476a72:\n        *(arg_10h + 8) = 0;\n        if (var_4ch != '\\0') goto code_r0x00476a9f;\n    }\n    else {\n        var_58h = *(iVar4 + 0x14);\n        iVar4 = *(iVar4 + 0x18);\n        iVar6 = *(arg_10h + 8);\n        if (iVar6 <= iVar4) goto code_r0x00476a72;\ncode_r0x00476ac4:\n        var_60h = iVar6 - iVar4;\n        auStackY148[0] = 0x476adc;\n        var_5ch = iVar4;\n        iVar4 = fcn.004386a0();\n        iVar4 = -iVar4;\n        *(&stack0xffffff78 + iVar4) = extraout_ECX;\n        var_64h = &stack0xffffff93 + iVar4 & 0xfffffff0;\n        *(&stack0xffffff70 + iVar4) = &stack0xffffff93 + iVar4 & 0xfffffff0;\n        *(&stack0xffffff74 + iVar4) = var_50h;\n        *(&stack0xffffff6c + iVar4) = 0x476afe;\n        sub.msvcrt.dll_memset();\n        uVar3 = var_58h;\n        iVar5 = var_5ch;\n        iVar6 = var_60h;\n        uVar2 = var_64h;\n        *(arg_10h + 8) = 0;\n        if ((var_54h & 0xb0) == 0x20) {\n            if (var_4ch != '\\0') goto code_r0x00476a9f;\n            iVar6 = *arg_8h;\n            *(&stack0xffffff74 + iVar4) = var_5ch;\n            var_4ch = iVar5;\n            *(&stack0xffffff70 + iVar4) = uVar3;\n            pcVar1 = *(iVar6 + 0x30);\n            puVar7 = &stack0xffffff6c + iVar4;\n            *(&stack0xffffff6c + iVar4) = 0x476b6e;\n            iVar6 = (*pcVar1)();\n            iVar4 = var_60h;\n            uVar2 = var_64h;\n            if (var_4ch == iVar6) {\n                iVar6 = *arg_8h;\n                *(puVar7 + -4) = var_60h;\n                *(puVar7 + -8) = uVar2;\n                pcVar1 = *(iVar6 + 0x30);\n                *(puVar7 + -0xc) = 0x476b8c;\n                iVar6 = (*pcVar1)();\n                var_4ch = iVar4 != iVar6;\n                goto code_r0x00476a9f;\n            }\ncode_r0x00476b40:\n            var_4ch = 1;\n            goto code_r0x00476a9f;\n        }\n        var_50h = var_5ch;\n        if (var_4ch != '\\0') goto code_r0x00476a9f;\n        iVar5 = *arg_8h;\n        *(&stack0xffffff74 + iVar4) = var_60h;\n        *(&stack0xffffff70 + iVar4) = uVar2;\n        iVar5 = (**(iVar5 + 0x30))();\n        iVar4 = var_50h;\n        if (iVar6 != iVar5) goto code_r0x00476b40;\n    }\n    auStackY148[1] = var_58h;\n    auStackY148[0] = 0x476a93;\n    var_4ch = iVar4;\n    iVar4 = (**(*arg_8h + 0x30))();\n    var_4ch = var_4ch != iVar4;\ncode_r0x00476a9f:\n    return CONCAT44(arg_ch & 0xffffff00 | var_4ch & 0xff, arg_8h);\n}\n",
        "token_count": 1451
    },
    "00476cd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.00476cd0(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    ushort *puVar10;\n    uint *puVar11;\n    uchar *puVar12;\n    uint uVar13;\n    ushort *puVar14;\n    ulong uVar15;\n    uint uStackY116;\n    int32_t iStackY112;\n    uchar auStack73 [5];\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    ushort *var_38h;\n    uint var_34h;\n    int32_t *var_30h;\n    uint32_t var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_30h = arg_8h;\n    var_34h = arg_ch;\n    var_3ch = arg_14h;\n    iStackY112 = 0x476cfc;\n    iVar5 = fcn.0044e2b0(arg_10h + 0x6c);\n    var_2ch = iVar5 + 0x28;\n    uVar8 = *(arg_10h + 0xc);\n    uStackY116 = 0x476d17;\n    iVar6 = fcn.004386a0();\n    iVar6 = -iVar6;\n    puVar11 = &stack0xffffff90 + iVar6;\n    puVar12 = &stack0xffffff90 + iVar6;\n    var_40h = uVar8 & 0x4a;\n    uVar4 = var_40h != 0x40 && var_40h != 8;\n    var_2ch = var_2ch & 0xffffff00 | uVar4;\n    iVar7 = arg_18h;\n    if (arg_18h < 1) {\n        iVar7 = -arg_18h;\n        if (var_40h == 0x40 || var_40h == 8) {\n            iVar7 = arg_18h;\n        }\n    }\n    *(&stack0xffffff94 + iVar6) = iVar7;\n    *(&stack0xffffff98 + iVar6) = iVar5 + 0x28;\n    *(&stack0xffffffa0 + iVar6) = uVar4;\n    *(&stack0xffffff9c + iVar6) = uVar8;\n    *(&stack0xffffff90 + iVar6) = (&stack0xffffffb7 + iVar6 & 0xfffffff0) + 0x14;\n    var_38h = &stack0xffffffb7 + iVar6 & 0xfffffff0;\n    *(&stack0xffffff8c + iVar6) = 0x476d6d;\n    iVar7 = fcn.004bd610();\n    if (*(iVar5 + 0x10) == '\\0') {\n        puVar10 = var_38h + (0x14 - iVar7);\n        puVar14 = var_38h + (0x14 - iVar7);\n        if (var_2ch != '\\0') goto code_r0x00476d90;\ncode_r0x00476ec1:\n        puVar14 = puVar10;\n        if (((uVar8 & 0x200) != 0) && (arg_18h != 0)) {\n            if (var_40h == 0x40) {\n                iVar7 = iVar7 + 1;\n                puVar14 = puVar10 + -1;\n                *puVar14 = *(iVar5 + 0x30);\n            }\n            else {\n                iVar7 = iVar7 + 2;\n                puVar14 = puVar10 + -2;\n                puVar10[-1] = *(iVar5 + 0x28 + ((uVar8 >> 0xe & 1) + 2) * 2);\n                *puVar14 = *(iVar5 + 0x30);\n            }\n        }\ncode_r0x00476da3:\n        iVar6 = *(arg_10h + 8);\n        puVar11 = puVar12;\n        if (iVar6 <= iVar7) goto code_r0x00476dad;\n    }\n    else {\n        *(&stack0xffffff8c + iVar6) = 0x476e74;\n        uVar15 = fcn.004386a0();\n        iVar9 = uVar15 >> 0x20;\n        iVar3 = -uVar15;\n        puVar11 = &stack0xffffff90 + iVar3 + iVar6;\n        puVar12 = &stack0xffffff90 + iVar3 + iVar6;\n        *(&stack0xffffffa0 + iVar3 + iVar6) = iVar9;\n        *(&stack0xffffffa4 + iVar3 + iVar6) = iVar9 + iVar7 * 2;\n        puVar14 = (&stack0xffffffb7 + iVar3 + iVar6 & 0xfffffff0) + 4;\n        *(&stack0xffffff9c + iVar3 + iVar6) = *(iVar5 + 0xc);\n        var_38h = puVar14;\n        *(&stack0xffffff98 + iVar3 + iVar6) = *(iVar5 + 8);\n        uVar1 = *(iVar5 + 0x26);\n        *(&stack0xffffff90 + iVar3 + iVar6) = puVar14;\n        *(&stack0xffffff94 + iVar3 + iVar6) = uVar1;\n        *(&stack0xffffff8c + iVar3 + iVar6) = 0x476eac;\n        iVar6 = fcn.004bd950();\n        iVar7 = iVar6 - var_38h >> 1;\n        puVar10 = var_38h;\n        puVar14 = var_38h;\n        if (var_2ch == '\\0') goto code_r0x00476ec1;\ncode_r0x00476d90:\n        puVar12 = puVar11;\n        if (arg_18h < 0) {\n            iVar7 = iVar7 + 1;\n            puVar14[-1] = *(iVar5 + 0x28);\n            puVar14 = puVar14 + -1;\n            goto code_r0x00476da3;\n        }\n        if ((uVar8 & 0x800) == 0) goto code_r0x00476da3;\n        iVar7 = iVar7 + 1;\n        puVar14 = puVar14 + -1;\n        *puVar14 = *(iVar5 + 0x2a);\n        iVar6 = *(arg_10h + 8);\n        if (iVar6 <= iVar7) goto code_r0x00476dad;\n    }\n    *(puVar11 + -4) = 0x476e18;\n    uVar15 = fcn.004386a0();\n    iVar5 = -uVar15;\n    uVar8 = var_3ch & 0xffff;\n    *(puVar11 + iVar5 + 0x14) = iVar7;\n    *(puVar11 + iVar5 + 4) = uVar8;\n    puVar14 = puVar11 + iVar5 + 0x27 & 0xfffffff0;\n    *(puVar11 + iVar5 + 0xc) = uVar15 >> 0x20;\n    *(puVar11 + iVar5 + 0x10) = iVar6;\n    *(puVar11 + iVar5 + 8) = puVar14;\n    *(puVar11 + iVar5) = arg_10h;\n    *(puVar11 + iVar5 + -4) = 0x476e46;\n    fcn.004ac550();\n    iVar7 = iVar6;\n    puVar11 = puVar11 + iVar5;\ncode_r0x00476dad:\n    uVar13 = var_34h;\n    *(arg_10h + 8) = 0;\n    if (var_34h == '\\0') {\n        iVar6 = *var_30h;\n        puVar11[1] = iVar7;\n        *puVar11 = puVar14;\n        pcVar2 = *(iVar6 + 0x30);\n        puVar11[-1] = 0x476dcf;\n        iVar6 = (*pcVar2)();\n        if (iVar6 != iVar7) {\n            uVar13 = 1;\n        }\n    }\n    return CONCAT44(uVar13, var_30h) & 0xffffffffff;\n}\n",
        "token_count": 1954
    },
    "00476f20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl fcn.00476f20(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    ushort *puVar9;\n    int32_t iVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uint *puVar13;\n    uint uVar14;\n    ushort *puVar15;\n    ulong uVar16;\n    uint uStackY116;\n    int32_t iStackY112;\n    uchar uStack73;\n    int32_t var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    ushort *var_38h;\n    uint var_34h;\n    char var_2dh;\n    int32_t *var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_2ch = arg_8h;\n    var_34h = arg_ch;\n    var_3ch = arg_14h;\n    iStackY112 = 0x476f4c;\n    iVar4 = fcn.0044e2b0(arg_10h + 0x6c);\n    uVar8 = *(arg_10h + 0xc);\n    uStackY116 = 0x476f67;\n    var_44h = iVar4 + 0x28;\n    iVar5 = fcn.004386a0();\n    iVar5 = -iVar5;\n    puVar12 = &stack0xffffff90 + iVar5;\n    puVar11 = &stack0xffffff90 + iVar5;\n    uVar6 = uVar8 & 0x4a;\n    *(&stack0xffffff98 + iVar5) = iVar4 + 0x28;\n    var_40h = uVar6;\n    *(&stack0xffffff9c + iVar5) = uVar8;\n    var_38h = &stack0xffffffb7 + iVar5 & 0xfffffff0;\n    var_2dh = uVar6 != 0x40 && uVar6 != 8;\n    *(&stack0xffffffa0 + iVar5) = var_2dh;\n    *(&stack0xffffff94 + iVar5) = arg_18h;\n    *(&stack0xffffff90 + iVar5) = (&stack0xffffffb7 + iVar5 & 0xfffffff0) + 0x14;\n    *(&stack0xffffff8c + iVar5) = 0x476fad;\n    iVar7 = fcn.004bd610();\n    puVar9 = var_38h + (0x14 - iVar7);\n    if (*(iVar4 + 0x10) != '\\0') {\n        *(&stack0xffffff8c + iVar5) = 0x477032;\n        uVar16 = fcn.004386a0();\n        iVar10 = uVar16 >> 0x20;\n        iVar3 = -uVar16;\n        puVar12 = &stack0xffffff90 + iVar3 + iVar5;\n        puVar11 = &stack0xffffff90 + iVar3 + iVar5;\n        *(&stack0xffffffa0 + iVar3 + iVar5) = iVar10;\n        *(&stack0xffffffa4 + iVar3 + iVar5) = iVar10 + iVar7 * 2;\n        puVar9 = (&stack0xffffffb7 + iVar3 + iVar5 & 0xfffffff0) + 4;\n        *(&stack0xffffff9c + iVar3 + iVar5) = *(iVar4 + 0xc);\n        var_38h = puVar9;\n        *(&stack0xffffff98 + iVar3 + iVar5) = *(iVar4 + 8);\n        uVar1 = *(iVar4 + 0x26);\n        *(&stack0xffffff90 + iVar3 + iVar5) = puVar9;\n        *(&stack0xffffff94 + iVar3 + iVar5) = uVar1;\n        *(&stack0xffffff8c + iVar3 + iVar5) = 0x47706a;\n        iVar5 = fcn.004bd950();\n        iVar7 = iVar5 - var_38h >> 1;\n        puVar9 = var_38h;\n    }\n    puVar15 = puVar9;\n    if (((var_2dh == '\\0') && (puVar12 = puVar11,  (uVar8 & 0x200) != 0)) && (arg_18h != 0)) {\n        if (var_40h == 0x40) {\n            iVar7 = iVar7 + 1;\n            puVar15 = puVar9 + -1;\n            *puVar15 = *(iVar4 + 0x30);\n        }\n        else {\n            iVar7 = iVar7 + 2;\n            puVar15 = puVar9 + -2;\n            puVar9[-1] = *(var_44h + ((uVar8 >> 0xe & 1) + 2) * 2);\n            *puVar15 = *(iVar4 + 0x30);\n        }\n    }\n    iVar5 = *(arg_10h + 8);\n    puVar13 = puVar12;\n    if (iVar7 < iVar5) {\n        *(puVar12 + -4) = 0x4770d3;\n        uVar16 = fcn.004386a0();\n        iVar4 = -uVar16;\n        puVar13 = puVar12 + iVar4;\n        uVar8 = var_3ch & 0xffff;\n        *(puVar12 + iVar4 + 0x14) = iVar7;\n        *(puVar12 + iVar4 + 4) = uVar8;\n        puVar15 = puVar12 + iVar4 + 0x27 & 0xfffffff0;\n        *(puVar12 + iVar4 + 0xc) = uVar16 >> 0x20;\n        *(puVar12 + iVar4 + 0x10) = iVar5;\n        *(puVar12 + iVar4 + 8) = puVar15;\n        *(puVar12 + iVar4) = arg_10h;\n        *(puVar12 + iVar4 + -4) = 0x477101;\n        fcn.004ac550();\n        iVar7 = iVar5;\n    }\n    uVar14 = var_34h;\n    *(arg_10h + 8) = 0;\n    if (var_34h == '\\0') {\n        iVar5 = *var_2ch;\n        puVar13[1] = iVar7;\n        *puVar13 = puVar15;\n        pcVar2 = *(iVar5 + 0x30);\n        puVar13[-1] = 0x476ffc;\n        iVar5 = (*pcVar2)();\n        if (iVar5 != iVar7) {\n            uVar14 = 1;\n        }\n    }\n    return CONCAT44(uVar14, var_2ch) & 0xffffffffff;\n}\n",
        "token_count": 1611
    },
    "00477120": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.00477120(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h, uint32_t arg_1ch)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint *puVar12;\n    uchar *puVar13;\n    uint32_t uVar14;\n    uint uVar15;\n    ushort *puVar16;\n    ushort *puVar17;\n    ulong uVar18;\n    uint uStackY116;\n    int32_t iStackY112;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint32_t var_3ch;\n    int32_t *var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_38h = arg_8h;\n    var_2ch = arg_1ch;\n    var_40h = arg_ch;\n    var_44h = arg_14h;\n    var_30h = arg_18h;\n    iStackY112 = 0x47715a;\n    iVar4 = fcn.0044e2b0(arg_10h + 0x6c);\n    var_34h = iVar4 + 0x28;\n    var_48h = *(arg_10h + 0xc);\n    uStackY116 = 0x477178;\n    var_3ch = var_48h;\n    iVar5 = fcn.004386a0();\n    iVar5 = -iVar5;\n    puVar12 = &stack0xffffff90 + iVar5;\n    puVar13 = &stack0xffffff90 + iVar5;\n    var_48h = var_48h & 0x4a;\n    uVar14 = &fcn.00477120::var_48h + iVar5 + 3 & 0xfffffff0;\n    bVar9 = var_48h != 0x40 && var_48h != 8;\n    uVar8 = bVar9;\n    var_34h = var_34h & 0xffffff00 | uVar8;\n    uVar6 = var_30h;\n    uVar10 = var_2ch;\n    if ((((var_2ch - 1) + (var_30h != 0) | var_2ch) < 0) && (bVar9)) {\n        uVar6 = -var_30h;\n        uVar10 = -(var_2ch + (var_30h != 0));\n    }\n    *(&stack0xffffff94 + iVar5) = uVar6;\n    *(&stack0xffffff98 + iVar5) = uVar10;\n    *(&stack0xffffffa4 + iVar5) = uVar8;\n    uVar8 = var_3ch;\n    *(&stack0xffffff90 + iVar5) = uVar14 + 0x50;\n    *(&stack0xffffffa0 + iVar5) = uVar8;\n    *(&stack0xffffff9c + iVar5) = iVar4 + 0x28;\n    *(&stack0xffffff8c + iVar5) = 0x4771e3;\n    iVar7 = fcn.004bd6c0();\n    puVar16 = uVar14 + (0x28 - iVar7) * 2;\n    if (*(iVar4 + 0x10) == '\\0') {\n        if (var_34h != '\\0') goto code_r0x00477203;\ncode_r0x0047733b:\n        puVar17 = puVar16;\n        if (((var_3ch & 0x200) != 0) && ((var_30h | var_2ch) != 0)) {\n            if (var_48h == 0x40) {\n                iVar7 = iVar7 + 1;\n                puVar17 = puVar16 + -1;\n                *puVar17 = *(iVar4 + 0x30);\n            }\n            else {\n                iVar7 = iVar7 + 2;\n                puVar17 = puVar16 + -2;\n                puVar16[-1] = *(iVar4 + 0x28 + ((var_3ch >> 0xe & 1) + 2) * 2);\n                *puVar17 = *(iVar4 + 0x30);\n            }\n        }\ncode_r0x00477217:\n        iVar5 = *(arg_10h + 8);\n        puVar12 = puVar13;\n        if (iVar5 <= iVar7) goto code_r0x00477221;\n    }\n    else {\n        *(&stack0xffffff8c + iVar5) = 0x4772f4;\n        uVar18 = fcn.004386a0();\n        iVar11 = uVar18 >> 0x20;\n        iVar3 = -uVar18;\n        puVar12 = &stack0xffffff90 + iVar3 + iVar5;\n        puVar13 = &stack0xffffff90 + iVar3 + iVar5;\n        *(&stack0xffffffa0 + iVar3 + iVar5) = iVar11;\n        *(&stack0xffffffa4 + iVar3 + iVar5) = iVar11 + iVar7 * 2;\n        puVar16 = (&fcn.00477120::var_48h + iVar3 + iVar5 + 3 & 0xfffffff0U) + 4;\n        *(&stack0xffffff9c + iVar3 + iVar5) = *(iVar4 + 0xc);\n        *(&stack0xffffff98 + iVar3 + iVar5) = *(iVar4 + 8);\n        uVar1 = *(iVar4 + 0x26);\n        *(&stack0xffffff90 + iVar3 + iVar5) = puVar16;\n        *(&stack0xffffff94 + iVar3 + iVar5) = uVar1;\n        *(&stack0xffffff8c + iVar3 + iVar5) = 0x477329;\n        iVar5 = fcn.004bd950();\n        iVar7 = iVar5 - puVar16 >> 1;\n        if (var_34h == '\\0') goto code_r0x0047733b;\ncode_r0x00477203:\n        puVar13 = puVar12;\n        if (var_2ch < 0) {\n            iVar7 = iVar7 + 1;\n            puVar16[-1] = *(iVar4 + 0x28);\n            puVar17 = puVar16 + -1;\n            goto code_r0x00477217;\n        }\n        puVar17 = puVar16;\n        if ((var_3ch & 0x800) == 0) goto code_r0x00477217;\n        iVar7 = iVar7 + 1;\n        puVar17 = puVar16 + -1;\n        *puVar17 = *(iVar4 + 0x2a);\n        iVar5 = *(arg_10h + 8);\n        if (iVar5 <= iVar7) goto code_r0x00477221;\n    }\n    *(puVar12 + -4) = 0x477296;\n    uVar18 = fcn.004386a0();\n    iVar4 = -uVar18;\n    uVar8 = var_44h & 0xffff;\n    *(puVar12 + iVar4 + 0x14) = iVar7;\n    *(puVar12 + iVar4 + 4) = uVar8;\n    puVar17 = puVar12 + iVar4 + 0x27 & 0xfffffff0;\n    *(puVar12 + iVar4 + 0xc) = uVar18 >> 0x20;\n    *(puVar12 + iVar4 + 0x10) = iVar5;\n    *(puVar12 + iVar4 + 8) = puVar17;\n    *(puVar12 + iVar4) = arg_10h;\n    *(puVar12 + iVar4 + -4) = 0x4772c4;\n    fcn.004ac550();\n    iVar7 = iVar5;\n    puVar12 = puVar12 + iVar4;\ncode_r0x00477221:\n    uVar15 = var_40h;\n    *(arg_10h + 8) = 0;\n    if (var_40h == '\\0') {\n        iVar5 = *var_38h;\n        puVar12[1] = iVar7;\n        *puVar12 = puVar17;\n        pcVar2 = *(iVar5 + 0x30);\n        puVar12[-1] = 0x477243;\n        iVar5 = (*pcVar2)();\n        if (iVar5 != iVar7) {\n            uVar15 = 1;\n        }\n    }\n    return CONCAT44(uVar15, var_38h) & 0xffffffffff;\n}\n",
        "token_count": 2061
    },
    "004773a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.004773a0(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h, uint32_t arg_1ch)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    ushort *puVar10;\n    int32_t iVar11;\n    uchar *puVar12;\n    uchar *puVar13;\n    uint *puVar14;\n    uint uVar15;\n    ushort *puVar16;\n    ulong uVar17;\n    uint uStackY116;\n    int32_t iStackY112;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    ushort *var_3ch;\n    uint var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    int32_t *var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_2ch = arg_8h;\n    var_44h = arg_18h;\n    var_38h = arg_ch;\n    var_40h = arg_14h;\n    var_30h = arg_1ch;\n    iStackY112 = 0x4773d8;\n    iVar4 = fcn.0044e2b0(arg_10h + 0x6c);\n    var_34h = iVar4 + 0x28;\n    uVar8 = *(arg_10h + 0xc);\n    uStackY116 = 0x4773f3;\n    iVar5 = fcn.004386a0();\n    iVar5 = -iVar5;\n    puVar13 = &stack0xffffff90 + iVar5;\n    puVar12 = &stack0xffffff90 + iVar5;\n    uVar6 = uVar8 & 0x4a;\n    *(&stack0xffffff94 + iVar5) = arg_18h;\n    puVar10 = &fcn.004773a0::var_48h + iVar5 + 3 & 0xfffffff0;\n    var_48h = uVar6;\n    *(&stack0xffffffa0 + iVar5) = uVar8;\n    var_3ch = puVar10;\n    bVar9 = uVar6 != 0x40 && uVar6 != 8;\n    var_34h = var_34h & 0xffffff00 | bVar9;\n    *(&stack0xffffffa4 + iVar5) = bVar9;\n    uVar6 = var_30h;\n    *(&stack0xffffff9c + iVar5) = iVar4 + 0x28;\n    *(&stack0xffffff98 + iVar5) = uVar6;\n    *(&stack0xffffff90 + iVar5) = puVar10 + 0x28;\n    *(&stack0xffffff8c + iVar5) = 0x477440;\n    iVar7 = fcn.004bd6c0();\n    puVar10 = var_3ch + (0x28 - iVar7);\n    if (*(iVar4 + 0x10) == '\\0') {\n    }\n    else {\n        *(&stack0xffffff8c + iVar5) = 0x4774c4;\n        uVar17 = fcn.004386a0();\n        iVar11 = uVar17 >> 0x20;\n        iVar3 = -uVar17;\n        puVar13 = &stack0xffffff90 + iVar3 + iVar5;\n        puVar12 = &stack0xffffff90 + iVar3 + iVar5;\n        *(&stack0xffffffa0 + iVar3 + iVar5) = iVar11;\n        *(&stack0xffffffa4 + iVar3 + iVar5) = iVar11 + iVar7 * 2;\n        puVar10 = (&fcn.004773a0::var_48h + iVar3 + iVar5 + 3 & 0xfffffff0U) + 4;\n        *(&stack0xffffff9c + iVar3 + iVar5) = *(iVar4 + 0xc);\n        var_3ch = puVar10;\n        *(&stack0xffffff98 + iVar3 + iVar5) = *(iVar4 + 8);\n        uVar1 = *(iVar4 + 0x26);\n        *(&stack0xffffff90 + iVar3 + iVar5) = puVar10;\n        *(&stack0xffffff94 + iVar3 + iVar5) = uVar1;\n        *(&stack0xffffff8c + iVar3 + iVar5) = 0x4774fc;\n        iVar5 = fcn.004bd950();\n        iVar7 = iVar5 - var_3ch >> 1;\n        puVar10 = var_3ch;\n    }\n    puVar16 = puVar10;\n    if (((var_34h == '\\0') && (puVar13 = puVar12,  (uVar8 & 0x200) != 0)) && ((var_44h | var_30h) != 0)) {\n        if (var_48h == 0x40) {\n            iVar7 = iVar7 + 1;\n            puVar16 = puVar10 + -1;\n            *puVar16 = *(iVar4 + 0x30);\n        }\n        else {\n            iVar7 = iVar7 + 2;\n            puVar16 = puVar10 + -2;\n            puVar10[-1] = *(iVar4 + 0x28 + ((uVar8 >> 0xe & 1) + 2) * 2);\n            *puVar16 = *(iVar4 + 0x30);\n        }\n    }\n    iVar5 = *(arg_10h + 8);\n    puVar14 = puVar13;\n    if (iVar7 < iVar5) {\n        *(puVar13 + -4) = 0x47756f;\n        uVar17 = fcn.004386a0();\n        iVar4 = -uVar17;\n        puVar14 = puVar13 + iVar4;\n        uVar8 = var_40h & 0xffff;\n        *(puVar13 + iVar4 + 0x14) = iVar7;\n        *(puVar13 + iVar4 + 4) = uVar8;\n        puVar16 = puVar13 + iVar4 + 0x27 & 0xfffffff0;\n        *(puVar13 + iVar4 + 0xc) = uVar17 >> 0x20;\n        *(puVar13 + iVar4 + 0x10) = iVar5;\n        *(puVar13 + iVar4 + 8) = puVar16;\n        *(puVar13 + iVar4) = arg_10h;\n        *(puVar13 + iVar4 + -4) = 0x47759d;\n        fcn.004ac550();\n        iVar7 = iVar5;\n    }\n    uVar15 = var_38h;\n    *(arg_10h + 8) = 0;\n    if (var_38h == '\\0') {\n        iVar5 = *var_2ch;\n        puVar14[1] = iVar7;\n        *puVar14 = puVar16;\n        pcVar2 = *(iVar5 + 0x30);\n        puVar14[-1] = 0x47748f;\n        iVar5 = (*pcVar2)();\n        if (iVar5 != iVar7) {\n            uVar15 = 1;\n        }\n    }\n    return CONCAT44(uVar15, var_2ch) & 0xffffffffff;\n}\n",
        "token_count": 1742
    },
    "00477690": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.00477690(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    ushort uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    ushort *puVar8;\n    int32_t *extraout_ECX;\n    char *pcVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t *piVar12;\n    uchar *puVar13;\n    char **ppcVar14;\n    uchar *puVar15;\n    ushort *puVar16;\n    uint uVar17;\n    ushort *puVar18;\n    bool bVar19;\n    ulong uVar20;\n    uint64_t in_stack_00000018;\n    uint uStackY148;\n    int32_t iStackY144;\n    char *pcStack136;\n    int32_t iStack132;\n    uchar auStack128 [27];\n    uchar auStack101 [5];\n    char *var_5ch;\n    uint32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_48h;\n    int32_t *var_44h;\n    int32_t var_40h;\n    ushort *s;\n    char *var_31h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_44h = arg_8h;\n    _var_50h = in_stack_00000018;\n    var_48h = arg_ch;\n    var_58h = arg_14h;\n    iStackY144 = 0x4776c8;\n    var_40h = fcn.0044e2b0(arg_10h + 0x6c);\n    iVar11 = *(arg_10h + 4);\n    if (iVar11 < 0) {\n        iVar11 = 6;\n    }\n    pcStack136 = arg_18h;\n    iStackY144 = arg_10h;\n    uStackY148 = 0x4776f9;\n    fcn.0048de20();\n    uStackY148 = 0x477711;\n    uVar20 = fcn.004386a0();\n    iVar4 = -uVar20;\n    piVar12 = &stack0xffffff70 + iVar4;\n    s = &stack0xffffff9b + iVar4 & 0xfffffff0;\n    if (uVar20 >> 0x20 == 0x104) {\n        *(&stack0xffffff6c + iVar4) = 0x47799a;\n        var_2ch = fcn.004af100();\n        uVar5 = _var_50h;\n        *(&stack0xffffff7c + iVar4) = &fcn.00477690::var_28h;\n        puVar16 = s;\n        *(&stack0xffffff78 + iVar4) = 0x2d;\n        *(&stack0xffffff74 + iVar4) = puVar16;\n        *(&stack0xffffff70 + iVar4) = &fcn.00477690::var_2ch;\n        *(&stack0xffffff80 + iVar4) = uVar5;\n        *(&stack0xffffff6c + iVar4) = 0x4779c2;\n        *NULL = fcn.004bde30();\n        if (0x2c < *NULL) {\n            var_5ch = *NULL + 1;\n            *(&stack0xffffff6c + iVar4) = 0x4779e2;\n            iVar11 = fcn.004386a0();\n            iVar11 = -iVar11;\n            piVar12 = &stack0xffffff70 + iVar11 + iVar4;\n            s = &stack0xffffff9b + iVar11 + iVar4 & 0xfffffff0;\n            *(&stack0xffffff6c + iVar11 + iVar4) = 0x4779f3;\n            var_2ch = fcn.004af100();\n            uVar5 = _var_50h;\n            pcVar9 = var_5ch;\n            *(&stack0xffffff7c + iVar11 + iVar4) = &fcn.00477690::var_28h;\n            puVar16 = s;\n            *(&stack0xffffff78 + iVar11 + iVar4) = pcVar9;\n            *(&stack0xffffff74 + iVar11 + iVar4) = puVar16;\n            *(&stack0xffffff70 + iVar11 + iVar4) = &fcn.00477690::var_2ch;\n            *(&stack0xffffff80 + iVar11 + iVar4) = uVar5;\n            *(&stack0xffffff6c + iVar11 + iVar4) = 0x477a17;\n            *NULL = fcn.004bde30();\n        }\n    }\n    else {\n        *(&stack0xffffff6c + iVar4) = 0x47772e;\n        var_2ch = fcn.004af100();\n        uVar5 = _var_50h;\n        *(&stack0xffffff80 + iVar4) = iVar11;\n        puVar16 = s;\n        *(&stack0xffffff7c + iVar4) = &fcn.00477690::var_28h;\n        *(&stack0xffffff74 + iVar4) = puVar16;\n        *(&stack0xffffff78 + iVar4) = 0x2d;\n        *(&stack0xffffff70 + iVar4) = &fcn.00477690::var_2ch;\n        *(&stack0xffffff84 + iVar4) = uVar5;\n        *(&stack0xffffff6c + iVar4) = 0x47775a;\n        *NULL = fcn.004bde30();\n        piVar12 = &stack0xffffff70 + iVar4;\n        if (0x2c < *NULL) {\n            var_5ch = *NULL + 1;\n            *(&stack0xffffff6c + iVar4) = 0x477855;\n            iVar7 = fcn.004386a0();\n            iVar7 = -iVar7;\n            piVar12 = &stack0xffffff70 + iVar7 + iVar4;\n            s = &stack0xffffff9b + iVar7 + iVar4 & 0xfffffff0;\n            *(&stack0xffffff6c + iVar7 + iVar4) = 0x477866;\n            var_2ch = fcn.004af100();\n            uVar5 = _var_50h;\n            pcVar9 = var_5ch;\n            *(&stack0xffffff80 + iVar7 + iVar4) = iVar11;\n            puVar16 = s;\n            *(&stack0xffffff7c + iVar7 + iVar4) = &fcn.00477690::var_28h;\n            *(&stack0xffffff74 + iVar7 + iVar4) = puVar16;\n            *(&stack0xffffff78 + iVar7 + iVar4) = pcVar9;\n            *(&stack0xffffff70 + iVar7 + iVar4) = &fcn.00477690::var_2ch;\n            *(&stack0xffffff84 + iVar7 + iVar4) = uVar5;\n            *(&stack0xffffff6c + iVar7 + iVar4) = 0x477891;\n            *NULL = fcn.004bde30();\n        }\n    }\n    *piVar12 = arg_10h + 0x6c;\n    piVar12[-1] = 0x47776e;\n    fcn.004c0980();\n    piVar12[-1] = 0x477782;\n    uVar20 = fcn.004386a0();\n    iVar4 = -uVar20;\n    iVar11 = *extraout_ECX;\n    pcVar9 = (uVar20 >> 0x20) + s;\n    *(piVar12 + iVar4) = s;\n    puVar16 = piVar12 + iVar4 + 0x2b & 0xfffffff0;\n    *(piVar12 + iVar4 + 4) = pcVar9;\n    *(piVar12 + iVar4 + 8) = puVar16;\n    pcVar3 = *(iVar11 + 0x2c);\n    puVar13 = piVar12 + iVar4 + -4;\n    *(piVar12 + iVar4 + -4) = 0x4777a2;\n    (*pcVar3)();\n    pcVar9 = stack0xffffffcc;\n    puVar18 = s;\n    ppcVar14 = puVar13 + -0xc;\n    puVar15 = puVar13 + -0xc;\n    if (stack0xffffffcc == NULL) {\n        if (*(var_40h + 0x10) != '\\0') goto code_r0x004778af;\ncode_r0x004777ee:\n        pcVar6 = *(arg_10h + 8);\n        if (pcVar6 <= pcVar9) goto code_r0x004777fc;\n    }\n    else {\n        *(puVar13 + -4) = stack0xffffffcc;\n        *(puVar13 + -8) = 0x2e;\n        *(puVar13 + -0xc) = puVar18;\n        *(puVar13 + -0x10) = 0x4777c7;\n        iVar11 = sub.msvcrt.dll_memchr();\n        cVar1 = *(var_40h + 0x10);\n        if (iVar11 == 0) {\n            if ((cVar1 != '\\0') &&\n               ((pcVar9 < 3 ||\n                (((*(s + 1) < ':' && (_var_50h = _var_50h & 0xffffffffffffff00 | *(s + 1),  *(s + 1) - 0x30 < 10)) &&\n                 ('/' < *(s + 1))))))) goto code_r0x004778af;\n            goto code_r0x004777ee;\n        }\n        puVar16[iVar11 - s] = *(var_40h + 0x24);\n        if (cVar1 == '\\0') goto code_r0x004777ee;\ncode_r0x004778af:\n        *(puVar13 + -0x10) = 0x4778c1;\n        uVar20 = fcn.004386a0();\n        iVar4 = var_40h;\n        iVar11 = -uVar20;\n        puVar8 = puVar13 + iVar11 + 0x1f & 0xfffffff0;\n        bVar19 = (*s - 0x2bU & 0xfd) == 0;\n        puVar18 = puVar8;\n        if (bVar19) {\n            uVar2 = *puVar16;\n            puVar16 = puVar16 + 1;\n            stack0xffffffcc = pcVar9 + -1;\n            *puVar8 = uVar2;\n            puVar18 = puVar8 + 1;\n        }\n        s = puVar8;\n        *(puVar13 + iVar11 + 0xc) = &fcn.00477690::var_31h + 1;\n        *(puVar13 + iVar11 + 8) = puVar16;\n        *(puVar13 + iVar11 + 4) = puVar18;\n        *(puVar13 + iVar11) = uVar20 >> 0x20;\n        *(puVar13 + iVar11 + -4) = *(iVar4 + 0x26);\n        *(puVar13 + iVar11 + -8) = *(iVar4 + 0xc);\n        *(puVar13 + iVar11 + -0xc) = *(iVar4 + 8);\n        *(puVar13 + iVar11 + -0x10) = 0x47792c;\n        fcn.004775c0();\n        pcVar9 = stack0xffffffcc + bVar19;\n        puVar15 = puVar13 + iVar11 + -0x28;\n        ppcVar14 = puVar13 + iVar11 + -0x28;\n        stack0xffffffcc = pcVar9;\n        pcVar6 = *(arg_10h + 8);\n        puVar16 = s;\n        if (pcVar6 <= pcVar9) goto code_r0x004777fc;\n    }\n    *(puVar15 + -4) = 0x477957;\n    iVar11 = fcn.004386a0();\n    uVar10 = var_58h & 0xffff;\n    iVar11 = -iVar11;\n    ppcVar14 = puVar15 + iVar11;\n    *(puVar15 + iVar11 + 0x14) = pcVar9;\n    *(puVar15 + iVar11 + 0xc) = puVar16;\n    *(puVar15 + iVar11 + 8) = puVar15 + iVar11 + 0x2b & 0xfffffff0;\n    s = puVar15 + iVar11 + 0x2b & 0xfffffff0;\n    *(puVar15 + iVar11 + 0x10) = pcVar6;\n    *(puVar15 + iVar11) = arg_10h;\n    *(puVar15 + iVar11 + 4) = uVar10;\n    *(puVar15 + iVar11 + -4) = 0x477988;\n    fcn.004ac550();\n    stack0xffffffcc = pcVar6;\n    pcVar9 = pcVar6;\n    puVar16 = s;\ncode_r0x004777fc:\n    uVar17 = var_48h;\n    *(arg_10h + 8) = 0;\n    if (var_48h == '\\0') {\n        iVar11 = *var_44h;\n        ppcVar14[1] = pcVar9;\n        *ppcVar14 = puVar16;\n        pcVar3 = *(iVar11 + 0x30);\n        ppcVar14[-1] = 0x47781e;\n        pcVar6 = (*pcVar3)();\n        if (pcVar9 != pcVar6) {\n            uVar17 = 1;\n        }\n    }\n    return CONCAT44(uVar17, var_44h) & 0xffffffffff;\n}\n",
        "token_count": 3176
    },
    "00477a70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl fcn.00477a70(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    ushort uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    ushort *puVar7;\n    int32_t *extraout_ECX;\n    char *pcVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t *piVar11;\n    uchar *puVar12;\n    char **ppcVar13;\n    uchar *puVar14;\n    ushort *puVar15;\n    uint uVar16;\n    ushort *puVar17;\n    bool bVar18;\n    ulong uVar19;\n    unkbyte10 in_stack_00000018;\n    uint uStackY132;\n    int32_t iStackY128;\n    char *pcStack120;\n    int32_t iStack116;\n    uchar auStack112 [24];\n    char *var_54h;\n    uint32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t *var_44h;\n    int32_t var_40h;\n    ushort *s;\n    char *var_31h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_44h = arg_8h;\n    var_48h = arg_ch;\n    var_50h = arg_14h;\n    iStackY128 = 0x477aa2;\n    var_40h = fcn.0044e2b0(arg_10h + 0x6c);\n    iVar10 = *(arg_10h + 4);\n    if (iVar10 < 0) {\n        iVar10 = 6;\n    }\n    pcStack120 = arg_18h;\n    iStackY128 = arg_10h;\n    uStackY132 = 0x477ad3;\n    fcn.0048de20();\n    uStackY132 = 0x477aeb;\n    uVar19 = fcn.004386a0();\n    iVar4 = -uVar19;\n    piVar11 = &stack0xffffff80 + iVar4;\n    s = &fcn.00477a70::var_50h + iVar4 + 3 & 0xfffffff0;\n    if (uVar19 >> 0x20 == 0x104) {\n        *(&stack0xffffff7c + iVar4) = 0x477d7a;\n        var_2ch = fcn.004af100();\n        *(&stack0xffffff8c + iVar4) = &fcn.00477a70::var_28h;\n        puVar15 = s;\n        *(&stack0xffffff88 + iVar4) = 0x36;\n        *(&stack0xffffff90 + iVar4) = in_stack_00000018;\n        *(&stack0xffffff84 + iVar4) = puVar15;\n        *(&stack0xffffff80 + iVar4) = &fcn.00477a70::var_2ch;\n        *(&stack0xffffff7c + iVar4) = 0x477da2;\n        *NULL = fcn.004bde30();\n        if (0x35 < *NULL) {\n            var_54h = *NULL + 1;\n            *(&stack0xffffff7c + iVar4) = 0x477dc2;\n            iVar10 = fcn.004386a0();\n            iVar10 = -iVar10;\n            piVar11 = &stack0xffffff80 + iVar10 + iVar4;\n            s = &fcn.00477a70::var_50h + iVar10 + iVar4 + 3 & 0xfffffff0;\n            *(&stack0xffffff7c + iVar10 + iVar4) = 0x477dd3;\n            var_2ch = fcn.004af100();\n            pcVar8 = var_54h;\n            *(&stack0xffffff8c + iVar10 + iVar4) = &fcn.00477a70::var_28h;\n            puVar15 = s;\n            *(&stack0xffffff88 + iVar10 + iVar4) = pcVar8;\n            *(&stack0xffffff90 + iVar10 + iVar4) = in_stack_00000018;\n            *(&stack0xffffff84 + iVar10 + iVar4) = puVar15;\n            *(&stack0xffffff80 + iVar10 + iVar4) = &fcn.00477a70::var_2ch;\n            *(&stack0xffffff7c + iVar10 + iVar4) = 0x477df7;\n            *NULL = fcn.004bde30();\n        }\n    }\n    else {\n        *(&stack0xffffff7c + iVar4) = 0x477b08;\n        var_2ch = fcn.004af100();\n        *(&stack0xffffff90 + iVar4) = iVar10;\n        puVar15 = s;\n        *(&stack0xffffff8c + iVar4) = &fcn.00477a70::var_28h;\n        *(&stack0xffffff94 + iVar4) = in_stack_00000018;\n        *(&stack0xffffff84 + iVar4) = puVar15;\n        *(&stack0xffffff88 + iVar4) = 0x36;\n        *(&stack0xffffff80 + iVar4) = &fcn.00477a70::var_2ch;\n        *(&stack0xffffff7c + iVar4) = 0x477b34;\n        *NULL = fcn.004bde30();\n        piVar11 = &stack0xffffff80 + iVar4;\n        if (0x35 < *NULL) {\n            var_54h = *NULL + 1;\n            *(&stack0xffffff7c + iVar4) = 0x477c34;\n            iVar6 = fcn.004386a0();\n            iVar6 = -iVar6;\n            piVar11 = &stack0xffffff80 + iVar6 + iVar4;\n            s = &fcn.00477a70::var_50h + iVar6 + iVar4 + 3 & 0xfffffff0;\n            *(&stack0xffffff7c + iVar6 + iVar4) = 0x477c45;\n            var_2ch = fcn.004af100();\n            pcVar8 = var_54h;\n            *(&stack0xffffff90 + iVar6 + iVar4) = iVar10;\n            puVar15 = s;\n            *(&stack0xffffff8c + iVar6 + iVar4) = &fcn.00477a70::var_28h;\n            *(&stack0xffffff94 + iVar6 + iVar4) = in_stack_00000018;\n            *(&stack0xffffff84 + iVar6 + iVar4) = puVar15;\n            *(&stack0xffffff88 + iVar6 + iVar4) = pcVar8;\n            *(&stack0xffffff80 + iVar6 + iVar4) = &fcn.00477a70::var_2ch;\n            *(&stack0xffffff7c + iVar6 + iVar4) = 0x477c70;\n            *NULL = fcn.004bde30();\n        }\n    }\n    *piVar11 = arg_10h + 0x6c;\n    piVar11[-1] = 0x477b48;\n    fcn.004c0980();\n    piVar11[-1] = 0x477b5c;\n    uVar19 = fcn.004386a0();\n    iVar4 = -uVar19;\n    iVar10 = *extraout_ECX;\n    pcVar8 = (uVar19 >> 0x20) + s;\n    *(piVar11 + iVar4) = s;\n    puVar15 = piVar11 + iVar4 + 0x2f & 0xfffffff0;\n    *(piVar11 + iVar4 + 4) = pcVar8;\n    *(piVar11 + iVar4 + 8) = puVar15;\n    pcVar3 = *(iVar10 + 0x2c);\n    puVar12 = piVar11 + iVar4 + -4;\n    *(piVar11 + iVar4 + -4) = 0x477b7c;\n    (*pcVar3)();\n    pcVar8 = stack0xffffffcc;\n    puVar17 = s;\n    ppcVar13 = puVar12 + -0xc;\n    puVar14 = puVar12 + -0xc;\n    if (stack0xffffffcc == NULL) {\n        if (*(var_40h + 0x10) != '\\0') goto code_r0x00477c8f;\ncode_r0x00477bc8:\n        pcVar5 = *(arg_10h + 8);\n        if (pcVar5 <= pcVar8) goto code_r0x00477bd6;\n    }\n    else {\n        *(puVar12 + -4) = stack0xffffffcc;\n        *(puVar12 + -8) = 0x2e;\n        *(puVar12 + -0xc) = puVar17;\n        *(puVar12 + -0x10) = 0x477ba1;\n        iVar10 = sub.msvcrt.dll_memchr();\n        cVar1 = *(var_40h + 0x10);\n        if (iVar10 == 0) {\n            if ((cVar1 != '\\0') &&\n               ((pcVar8 < 3 ||\n                (((*(s + 1) < ':' && (var_54h = var_54h & 0xffffff00 | *(s + 1),  *(s + 1) - 0x30 < 10)) &&\n                 ('/' < *(s + 1))))))) goto code_r0x00477c8f;\n            goto code_r0x00477bc8;\n        }\n        puVar15[iVar10 - s] = *(var_40h + 0x24);\n        if (cVar1 == '\\0') goto code_r0x00477bc8;\ncode_r0x00477c8f:\n        *(puVar12 + -0x10) = 0x477ca1;\n        uVar19 = fcn.004386a0();\n        iVar4 = var_40h;\n        iVar10 = -uVar19;\n        puVar7 = puVar12 + iVar10 + 0x23 & 0xfffffff0;\n        bVar18 = (*s - 0x2bU & 0xfd) == 0;\n        puVar17 = puVar7;\n        if (bVar18) {\n            uVar2 = *puVar15;\n            puVar15 = puVar15 + 1;\n            stack0xffffffcc = pcVar8 + -1;\n            *puVar7 = uVar2;\n            puVar17 = puVar7 + 1;\n        }\n        s = puVar7;\n        *(puVar12 + iVar10 + 0xc) = &fcn.00477a70::var_31h + 1;\n        *(puVar12 + iVar10 + 8) = puVar15;\n        *(puVar12 + iVar10 + 4) = puVar17;\n        *(puVar12 + iVar10) = uVar19 >> 0x20;\n        *(puVar12 + iVar10 + -4) = *(iVar4 + 0x26);\n        *(puVar12 + iVar10 + -8) = *(iVar4 + 0xc);\n        *(puVar12 + iVar10 + -0xc) = *(iVar4 + 8);\n        *(puVar12 + iVar10 + -0x10) = 0x477d0c;\n        fcn.004775c0();\n        pcVar8 = stack0xffffffcc + bVar18;\n        puVar14 = puVar12 + iVar10 + -0x28;\n        ppcVar13 = puVar12 + iVar10 + -0x28;\n        stack0xffffffcc = pcVar8;\n        pcVar5 = *(arg_10h + 8);\n        puVar15 = s;\n        if (pcVar5 <= pcVar8) goto code_r0x00477bd6;\n    }\n    *(puVar14 + -4) = 0x477d37;\n    iVar10 = fcn.004386a0();\n    uVar9 = var_50h & 0xffff;\n    iVar10 = -iVar10;\n    ppcVar13 = puVar14 + iVar10;\n    *(puVar14 + iVar10 + 0x14) = pcVar8;\n    *(puVar14 + iVar10 + 0xc) = puVar15;\n    *(puVar14 + iVar10 + 8) = puVar14 + iVar10 + 0x2f & 0xfffffff0;\n    s = puVar14 + iVar10 + 0x2f & 0xfffffff0;\n    *(puVar14 + iVar10 + 0x10) = pcVar5;\n    *(puVar14 + iVar10) = arg_10h;\n    *(puVar14 + iVar10 + 4) = uVar9;\n    *(puVar14 + iVar10 + -4) = 0x477d68;\n    fcn.004ac550();\n    stack0xffffffcc = pcVar5;\n    pcVar8 = pcVar5;\n    puVar15 = s;\ncode_r0x00477bd6:\n    uVar16 = var_48h;\n    *(arg_10h + 8) = 0;\n    if (var_48h == '\\0') {\n        iVar10 = *var_44h;\n        ppcVar13[1] = pcVar8;\n        *ppcVar13 = puVar15;\n        pcVar3 = *(iVar10 + 0x30);\n        ppcVar13[-1] = 0x477bf8;\n        pcVar5 = (*pcVar3)();\n        if (pcVar8 != pcVar5) {\n            uVar16 = 1;\n        }\n    }\n    return CONCAT44(uVar16, var_44h) & 0xffffffffff;\n}\n",
        "token_count": 3142
    },
    "00478020": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.00478020(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint16_t *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t extraout_ECX;\n    int32_t iVar8;\n    uchar *puVar9;\n    uint64_t uVar10;\n    ulong uVar11;\n    uint16_t *apuStackY148 [2];\n    uchar auStack109 [9];\n    uint16_t *var_60h;\n    int32_t var_5ch;\n    uint32_t var_58h;\n    uint32_t var_52h;\n    uint32_t var_4ch;\n    uint var_30h;\n    uint var_2ch;\n    uint var_19h;\n    uint var_ch;\n    \n    unique0x00007a00 = *(arg_10h + 0xc);\n    var_52h._0_2_ = arg_14h;\n    if ((unique0x00007a00 & 1) == 0) {\n        apuStackY148[1] = 0x478068;\n        uVar10 = fcn.00476cd0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h & 0xff);\n        return uVar10 & 0xffffffff | (arg_ch & 0xffffff00 | uVar10 >> 0x20 & 0xff) << 0x20;\n    }\n    var_58h = arg_18h;\n    var_4ch = var_4ch & 0xffffff00 | arg_ch & 0xff;\n    apuStackY148[1] = 0x4780a7;\n    iVar3 = fcn.0044e2b0(arg_10h + 0x6c);\n    if (var_58h == '\\0') {\n        var_58h = *(iVar3 + 0x1c);\n        uVar6 = *(iVar3 + 0x20);\n        iVar3 = *(arg_10h + 8);\n        if (uVar6 < iVar3) goto code_r0x004780cc;\ncode_r0x0047815c:\n        *(arg_10h + 8) = 0;\n        if (var_4ch != '\\0') goto code_r0x0047818c;\ncode_r0x0047816c:\n        apuStackY148[1] = var_58h;\n        apuStackY148[0] = 0x478180;\n        var_4ch = uVar6;\n        uVar6 = (**(*arg_8h + 0x30))();\n        var_4ch = var_4ch != uVar6;\n    }\n    else {\n        var_58h = *(iVar3 + 0x14);\n        uVar6 = *(iVar3 + 0x18);\n        iVar3 = *(arg_10h + 8);\n        if (iVar3 <= uVar6) goto code_r0x0047815c;\ncode_r0x004780cc:\n        var_5ch = iVar3 - uVar6;\n        apuStackY148[0] = 0x4780e2;\n        uVar11 = fcn.004386a0();\n        uVar2 = var_58h;\n        iVar7 = var_5ch;\n        uVar6 = uVar11 >> 0x20;\n        iVar3 = -uVar11;\n        puVar4 = &stack0xffffff93 + iVar3 & 0xfffffff0;\n        var_60h = puVar4;\n        puVar5 = puVar4;\n        iVar8 = extraout_ECX;\n        do {\n            *puVar5 = var_52h;\n            puVar5 = puVar5 + 1;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n        *(arg_10h + 8) = 0;\n        if ((stack0xffffffac & 0xb0) == 0x20) {\n            if (var_4ch != '\\0') goto code_r0x0047818c;\n            iVar7 = *arg_8h;\n            *(&stack0xffffff74 + iVar3) = uVar6;\n            var_4ch = uVar6;\n            *(&stack0xffffff70 + iVar3) = uVar2;\n            pcVar1 = *(iVar7 + 0x30);\n            puVar9 = &stack0xffffff6c + iVar3;\n            *(&stack0xffffff6c + iVar3) = 0x4781bb;\n            uVar6 = (*pcVar1)();\n            iVar3 = var_5ch;\n            puVar5 = var_60h;\n            if (var_4ch == uVar6) {\n                iVar7 = *arg_8h;\n                *(puVar9 + -4) = var_5ch;\n                *(puVar9 + -8) = puVar5;\n                pcVar1 = *(iVar7 + 0x30);\n                *(puVar9 + -0xc) = 0x4781dd;\n                iVar7 = (*pcVar1)();\n                var_4ch = iVar3 != iVar7;\n                goto code_r0x0047818c;\n            }\n        }\n        else {\n            if (var_4ch != '\\0') goto code_r0x0047818c;\n            iVar8 = *arg_8h;\n            unique0x1000019c = uVar6;\n            *(&stack0xffffff74 + iVar3) = var_5ch;\n            *(&stack0xffffff70 + iVar3) = puVar4;\n            iVar3 = (**(iVar8 + 0x30))();\n            uVar6 = stack0xffffffac;\n            if (iVar7 == iVar3) goto code_r0x0047816c;\n        }\n        var_4ch = 1;\n    }\ncode_r0x0047818c:\n    return CONCAT44(arg_ch & 0xffffff00 | var_4ch & 0xff, arg_8h);\n}\n",
        "token_count": 1429
    },
    "004791b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.004791b0(int32_t *arg_8h, uint32_t arg_ch, uint arg_10h, uint noname_3, int32_t *arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    int32_t *piVar11;\n    uint *puVar12;\n    int32_t *piVar13;\n    int32_t iVar15;\n    int32_t *piVar16;\n    uint uStack68;\n    int32_t aiStack64 [5];\n    uchar uStack41;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    int32_t *piVar14;\n    \n    aiStack64[1] = arg_24h + 0x6c;\n    aiStack64[0] = 0x4791c7;\n    var_1ch = fcn.004c0920();\n    aiStack64[0] = 0x4791de;\n    iVar4 = fcn.004386a0();\n    iVar4 = -iVar4;\n    *(&stack0xffffffc4 + iVar4) = &fcn.004791b0::arg_10h;\n    *(&stack0xffffffc0 + iVar4) = 0x4791f5;\n    cVar2 = fcn.00450a90();\n    if (cVar2 == '\\0') {\n        *(&stack0xffffffbc + iVar4) = 0x47921d;\n        cVar2 = fcn.00450b80();\n        if (arg_20h != 0) {\n            iVar15 = 0;\n            var_20h = &stack0xffffffd7 + iVar4 & 0xfffffff0;\n            piVar16 = NULL;\n            iVar7 = arg_1ch;\n            piVar11 = &stack0xffffffc0 + iVar4;\n            do {\n                while (cVar3 = **(iVar7 + iVar15 * 4),  cVar3 == cVar2) {\ncode_r0x0047926c:\n                    var_20h[piVar16] = iVar15;\n                    piVar16 = piVar16 + 1;\n                    iVar15 = iVar15 + 1;\n                    piVar13 = piVar11;\n                    if (arg_20h == iVar15) goto code_r0x0047927d;\n                }\n                iVar4 = *var_1ch;\n                *piVar11 = cVar3;\n                pcVar1 = *(iVar4 + 8);\n                piVar10 = piVar11 + -1;\n                piVar11[-1] = 0x479250;\n                arg_1ch = iVar7;\n                cVar3 = (*pcVar1)();\n                piVar11 = piVar10 + -4;\n                piVar13 = piVar10 + -4;\n                iVar7 = arg_1ch;\n                if (cVar2 == cVar3) goto code_r0x0047926c;\n                iVar15 = iVar15 + 1;\n                piVar11 = piVar10 + -4;\n            } while (arg_20h != iVar15);\ncode_r0x0047927d:\n            piVar11 = var_20h;\n            var_20h = NULL;\njoined_r0x0047928e:\n            if (0x1 < piVar16) {\n                *piVar13 = *(arg_1ch + *piVar11 * 4);\n                piVar13[-1] = 0x4792a6;\n                uVar5 = sub.msvcrt.dll_strlen();\n                var_1ch = piVar16;\n                piVar9 = 0x1;\n                do {\n                    *piVar13 = *(arg_1ch + piVar11[piVar9] * 4);\n                    piVar13[-1] = 0x4792c3;\n                    uVar6 = sub.msvcrt.dll_strlen();\n                    piVar16 = var_1ch;\n                    if (uVar6 < uVar5) {\n                        uVar5 = uVar6;\n                    }\n                    piVar9 = piVar9 + 1;\n                } while (piVar9 < var_1ch);\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    pcVar1 = *(*arg_8h + 0x28);\n                    piVar14 = piVar13 + -1;\n                    piVar13 = piVar13 + -1;\n                    *piVar14 = 0x479445;\n                    (*pcVar1)();\n                }\n                var_20h = var_20h + 1;\n                arg_ch = 0xffffffff;\n                if (uVar5 <= var_20h) goto code_r0x004791fc;\n                *piVar13 = &fcn.004791b0::arg_10h;\n                piVar13[-1] = 0x479310;\n                cVar2 = fcn.00450a90();\n                piVar13 = piVar13 + -1;\n                if (cVar2 != '\\0') goto code_r0x004791fc;\n                piVar9 = NULL;\n                do {\n                    while( true ) {\n                        piVar8 = piVar11 + piVar9;\n                        var_1ch = var_1ch & 0xffffff00 | *(*(arg_1ch + *piVar8 * 4) + var_20h);\n                        uVar5 = arg_ch;\n                        if (arg_8h != NULL) {\n                            if (arg_8h[2] < arg_8h[3]) {\n                                uVar5 = *arg_8h[2];\n                            }\n                            else {\n                                var_24h = piVar8;\n                                pcVar1 = *(*arg_8h + 0x24);\n                                puVar12 = piVar13 + -4;\n                                piVar13 = piVar13 + -4;\n                                *puVar12 = 0x47941c;\n                                uVar5 = (*pcVar1)();\n                                piVar8 = var_24h;\n                                if (uVar5 == 0xffffffff) {\n                                    arg_8h = NULL;\n                                    uVar5 = 0xffffffff;\n                                }\n                            }\n                        }\n                        if (var_1ch != uVar5) break;\n                        piVar9 = piVar9 + 1;\n                        if (piVar16 <= piVar9) goto joined_r0x0047928e;\n                    }\n                    piVar16 = piVar16 + -1;\n                    *piVar8 = piVar11[piVar16];\n                } while (piVar9 < piVar16);\n                goto joined_r0x0047928e;\n            }\n            if (piVar16 == 0x1) {\n                piVar13[-1] = 0x47937d;\n                fcn.004a5d20();\n                uVar5 = var_20h;\n                arg_ch = 0xffffffff;\n                iVar4 = *(arg_1ch + *piVar11 * 4);\n                var_20h = *piVar11;\n                uVar5 = uVar5 + 1;\n                *piVar13 = iVar4;\n                piVar13[-1] = 0x47939d;\n                var_1ch = sub.msvcrt.dll_strlen();\n                if (uVar5 < var_1ch) {\n                    do {\n                        arg_ch = 0xffffffff;\n                        *piVar13 = &fcn.004791b0::arg_10h;\n                        piVar13[-1] = 0x4793be;\n                        cVar2 = fcn.00450a90();\n                        if (cVar2 != '\\0') goto code_r0x004791fc;\n                        cVar2 = *(iVar4 + uVar5);\n                        piVar13[-2] = 0x4793d8;\n                        cVar3 = fcn.00450b80();\n                        if (cVar2 != cVar3) goto code_r0x004791fc;\n                        uVar5 = uVar5 + 1;\n                        piVar13[-2] = 0x4793eb;\n                        fcn.004a5d20();\n                        piVar13 = piVar13 + -1;\n                    } while (uVar5 != var_1ch);\n                }\n                else if (uVar5 != var_1ch) goto code_r0x004791fc;\n                arg_ch = 0xffffffff;\n                *arg_18h = var_20h;\n                goto code_r0x00479202;\n            }\n        }\n    }\ncode_r0x004791fc:\n    *arg_28h = *arg_28h | 4;\ncode_r0x00479202:\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 2081
    },
    "0047a6c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0047a6c0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t **arg_18h, int32_t arg_1ch, \n            int32_t *arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint8_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t *piVar8;\n    int32_t **ppiVar9;\n    int32_t **ppiVar10;\n    bool bVar11;\n    uint *puVar12;\n    uchar *puVar13;\n    uint *puVar15;\n    int32_t *piVar16;\n    uchar *puVar17;\n    uint *puVar18;\n    int32_t **ppiVar19;\n    int32_t **ppiVar20;\n    ulong uVar21;\n    uint uStack84;\n    int32_t aiStack80 [5];\n    uchar uStack57;\n    int32_t **var_34h;\n    int32_t **var_2dh;\n    int32_t **var_28h;\n    int32_t **var_24h;\n    int32_t **var_20h;\n    int32_t **var_1ch;\n    uint var_ch;\n    uint *puVar14;\n    \n    aiStack80[1] = arg_24h + 0x6c;\n    aiStack80[0] = 0x47a6d7;\n    var_24h = fcn.004c0920();\n    aiStack80[0] = 0x47a6ef;\n    iVar6 = fcn.004386a0();\n    iVar6 = -iVar6;\n    var_28h = &stack0xffffffc7 + iVar6 & 0xfffffff0;\n    *(&stack0xffffffb4 + iVar6) = &fcn.0047a6c0::arg_10h;\n    *(&stack0xffffffb0 + iVar6) = 0x47a709;\n    cVar4 = fcn.00450a90();\n    puVar13 = &stack0xffffffb0 + iVar6;\n    if (cVar4 == '\\0') {\n        ppiVar20 = NULL;\n        ppiVar10 = NULL;\n        *(&stack0xffffffac + iVar6) = 0x47a934;\n        uVar5 = fcn.00450b80();\n        iVar3 = arg_1ch;\n        var_1ch = var_1ch & 0xffffff00 | uVar5;\n        ppiVar19 = arg_20h * 2;\n        if (ppiVar19 == NULL) {\n            var_34h = NULL;\n            ppiVar20 = ppiVar19;\n        }\n        else {\n            var_20h = ppiVar19;\n            piVar8 = &stack0xffffffb0 + iVar6;\n            do {\n                while( true ) {\n                    cVar4 = **(iVar3 + ppiVar20 * 4);\n                    if (cVar4 != var_1ch) break;\ncode_r0x0047a978:\n                    var_28h[ppiVar10] = ppiVar20;\n                    ppiVar10 = ppiVar10 + 1;\n                    ppiVar20 = ppiVar20 + 1;\n                    puVar17 = piVar8;\n                    if (ppiVar20 == var_20h) goto code_r0x0047a989;\n                }\n                piVar2 = *var_24h;\n                *piVar8 = cVar4;\n                pcVar1 = piVar2[2];\n                piVar16 = piVar8 + -1;\n                piVar8[-1] = 0x47a95d;\n                cVar4 = (*pcVar1)();\n                piVar8 = piVar16 + -4;\n                puVar17 = piVar16 + -4;\n                if (var_1ch == cVar4) goto code_r0x0047a978;\n                ppiVar20 = ppiVar20 + 1;\n                piVar8 = piVar16 + -4;\n            } while (ppiVar20 != var_20h);\ncode_r0x0047a989:\n            if (ppiVar10 == NULL) {\n                var_34h = NULL;\n                puVar13 = puVar17;\n                ppiVar19 = ppiVar10;\n                ppiVar20 = NULL;\n            }\n            else {\n                *(puVar17 + -4) = 0x47a9c4;\n                fcn.004a5d20();\n                arg_ch = 0xffffffff;\n                *(puVar17 + -4) = 0x47a9e0;\n                uVar21 = fcn.004386a0();\n                iVar3 = arg_1ch;\n                iVar6 = -uVar21;\n                puVar13 = puVar17 + iVar6;\n                var_20h = ppiVar10;\n                var_1ch = (uVar21 >> 0x20) + var_28h;\n                var_34h = puVar17 + iVar6 + 0x13 & 0xfffffff0;\n                ppiVar19 = var_28h;\n                ppiVar20 = puVar17 + iVar6 + 0x13 & 0xfffffff0;\n                do {\n                    piVar8 = *ppiVar19;\n                    ppiVar19 = ppiVar19 + 1;\n                    *(puVar17 + iVar6) = *(iVar3 + piVar8 * 4);\n                    *(puVar17 + iVar6 + -4) = 0x47aa13;\n                    piVar8 = sub.msvcrt.dll_strlen();\n                    *ppiVar20 = piVar8;\n                    ppiVar20 = ppiVar20 + 1;\n                } while (ppiVar19 != var_1ch);\n                ppiVar19 = var_20h;\n                ppiVar20 = 0x1;\n            }\n        }\n    }\n    else {\n        var_34h = NULL;\n        puVar13 = &stack0xffffffb0 + iVar6;\n        ppiVar19 = NULL;\n        ppiVar20 = NULL;\n    }\n    var_20h._0_1_ = arg_ch == 0xffffffff;\n    bVar11 = arg_8h != NULL && var_20h;\n    if (bVar11) goto code_r0x0047a82d;\n    while( true ) {\n        var_1ch._0_1_ = arg_14h == -1;\n        bVar11 = arg_10h != NULL && var_1ch;\n        var_1ch = var_1ch & 0xffffff00 | bVar11;\n        if ((bVar11) && (var_1ch._0_1_ = 0,  arg_10h[3] <= arg_10h[2])) {\n            var_20h = var_20h & 0xffffff00 | var_20h;\n            pcVar1 = *(*arg_10h + 0x24);\n            puVar14 = puVar13 + -4;\n            puVar13 = puVar13 + -4;\n            *puVar14 = 0x47a886;\n            iVar6 = (*pcVar1)();\n            if (iVar6 == -1) {\n                arg_10h = NULL;\n            }\n        }\n        if (var_20h == var_1ch) break;\n        uVar7 = arg_ch;\n        if ((arg_ch == 0xffffffff) && (arg_8h != NULL)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar7 = *arg_8h[2];\n                goto code_r0x0047a775;\n            }\n            pcVar1 = *(*arg_8h + 0x24);\n            puVar18 = puVar13 + -4;\n            puVar13 = puVar13 + -4;\n            *puVar18 = 0x47a9a6;\n            uVar7 = (*pcVar1)();\n            if (uVar7 != 0xffffffff) goto code_r0x0047a775;\n            arg_8h = NULL;\n            var_2dh._0_1_ = -1;\n        }\n        else {\ncode_r0x0047a775:\n            var_2dh._0_1_ = uVar7;\n        }\n        if (ppiVar19 == NULL) goto code_r0x0047a8e3;\n        ppiVar10 = NULL;\n        var_1ch = ppiVar20;\n        stack0xffffffd0 = NULL;\n        var_20h = var_34h;\n        do {\n            while( true ) {\n                ppiVar9 = var_34h + ppiVar10;\n                if (ppiVar20 <= *ppiVar9 && *ppiVar9 != ppiVar20) break;\n                stack0xffffffd0 = stack0xffffffd0 + 1;\ncode_r0x0047a799:\n                ppiVar10 = ppiVar10 + 1;\n                if (ppiVar19 <= ppiVar10) goto code_r0x0047a7e8;\n            }\n            var_24h = var_28h + ppiVar10;\n            if (*(*(arg_1ch + *var_24h * 4) + ppiVar20) == var_2dh) goto code_r0x0047a799;\n            ppiVar19 = ppiVar19 + -1;\n            *var_24h = var_28h[ppiVar19];\n            *ppiVar9 = var_34h[ppiVar19];\n        } while (ppiVar10 < ppiVar19);\ncode_r0x0047a7e8:\n        if (stack0xffffffd0 == ppiVar19) break;\n        if (arg_8h[2] < arg_8h[3]) {\n            arg_8h[2] = arg_8h[2] + 1;\n        }\n        else {\n            pcVar1 = *(*arg_8h + 0x28);\n            puVar15 = puVar13 + -4;\n            puVar13 = puVar13 + -4;\n            *puVar15 = 0x47a8c5;\n            (*pcVar1)();\n        }\n        ppiVar20 = ppiVar20 + 1;\n        arg_ch = 0xffffffff;\n        bVar11 = arg_8h != NULL;\n        var_20h._0_1_ = 1;\n        if (bVar11) {\ncode_r0x0047a82d:\n            var_20h._0_1_ = 0;\n            if (arg_8h[3] <= arg_8h[2]) {\n                var_1ch = var_1ch & 0xffffff00;\n                pcVar1 = *(*arg_8h + 0x24);\n                puVar12 = puVar13 + -4;\n                puVar13 = puVar13 + -4;\n                *puVar12 = 0x47a843;\n                iVar6 = (*pcVar1)();\n                var_20h._0_1_ = var_1ch;\n                if (iVar6 == -1) {\n                    arg_8h = NULL;\n                    var_20h._0_1_ = bVar11;\n                }\n            }\n        }\n    }\n    if (ppiVar19 == 0x1) {\n        var_34h = *var_34h;\n    }\n    else {\n        if (ppiVar19 != 0x2) goto code_r0x0047a8e3;\n        if (*var_34h == ppiVar20) goto code_r0x0047a900;\n        var_34h = var_34h[1];\n    }\n    if (var_34h == ppiVar20) {\ncode_r0x0047a900:\n        piVar8 = *var_28h;\n        if (arg_20h <= piVar8) {\n            piVar8 = piVar8 - arg_20h;\n        }\n        *arg_18h = piVar8;\n        return CONCAT44(arg_ch, arg_8h);\n    }\ncode_r0x0047a8e3:\n    *arg_28h = *arg_28h | 4;\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 2805
    },
    "0047bc80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint64_t __cdecl\nfcn.0047bc80(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint noname_3, int32_t *arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    int16_t iVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t *piVar12;\n    int32_t *piVar13;\n    uint32_t *puVar14;\n    uint32_t *puVar15;\n    uint *puVar16;\n    int32_t *piVar17;\n    int32_t iVar19;\n    int32_t *piVar20;\n    uint uStack68;\n    int32_t aiStack64 [5];\n    int32_t *var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    uint *puVar18;\n    \n    aiStack64[1] = arg_24h + 0x6c;\n    aiStack64[0] = 0x47bc97;\n    var_1ch = fcn.004c0980();\n    aiStack64[0] = 0x47bcaf;\n    iVar8 = fcn.004386a0();\n    iVar8 = -iVar8;\n    *(&stack0xffffffc4 + iVar8) = &fcn.0047bc80::arg_10h;\n    *(&stack0xffffffc0 + iVar8) = 0x47bcc6;\n    cVar3 = fcn.00450bd0();\n    iVar1 = arg_ch;\n    if (cVar3 == '\\0') {\n        *(&stack0xffffffbc + iVar8) = 0x47bcef;\n        uVar4 = fcn.00450c70();\n        if (arg_20h != 0) {\n            var_20h = &fcn.0047bc80::var_28h + iVar8 + 3 & 0xfffffff0;\n            iVar19 = 0;\n            piVar20 = NULL;\n            iVar11 = arg_1ch;\n            puVar15 = &stack0xffffffc0 + iVar8;\n            do {\n                while (uVar5 = **(iVar11 + iVar19 * 4),  uVar5 == uVar4) {\ncode_r0x0047bd32:\n                    var_20h[piVar20] = iVar19;\n                    piVar20 = piVar20 + 1;\n                    iVar19 = iVar19 + 1;\n                    piVar17 = puVar15;\n                    if (arg_20h == iVar19) goto code_r0x0047bd43;\n                }\n                iVar8 = *var_1ch;\n                *puVar15 = uVar5;\n                pcVar2 = *(iVar8 + 0x18);\n                puVar14 = puVar15 + -1;\n                puVar15[-1] = 0x47bd14;\n                arg_1ch = iVar11;\n                uVar5 = (*pcVar2)();\n                puVar15 = puVar14 + -4;\n                piVar17 = puVar14 + -4;\n                iVar11 = arg_1ch;\n                if (uVar4 == uVar5) goto code_r0x0047bd32;\n                iVar19 = iVar19 + 1;\n                puVar15 = puVar14 + -4;\n            } while (arg_20h != iVar19);\ncode_r0x0047bd43:\n            piVar12 = var_20h;\n            var_20h = NULL;\n            if (0x1 < piVar20) {\ncode_r0x0047bd60:\n                iVar8 = *piVar12;\n                var_28h = piVar12;\n                *piVar17 = *(arg_1ch + iVar8 * 4);\n                piVar17[-1] = 0x47bd73;\n                uVar9 = sub.msvcrt.dll_wcslen();\n                piVar12 = var_28h;\n                var_1ch = piVar20;\n                var_24h = iVar8;\n                piVar13 = 0x1;\n                do {\n                    *piVar17 = *(arg_1ch + piVar12[piVar13] * 4);\n                    piVar17[-1] = 0x47bda1;\n                    uVar10 = sub.msvcrt.dll_wcslen();\n                    piVar20 = var_1ch;\n                    iVar8 = var_24h;\n                    if (uVar10 < uVar9) {\n                        uVar9 = uVar10;\n                    }\n                    piVar13 = piVar13 + 1;\n                } while (piVar13 < var_1ch);\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    var_1ch = piVar12;\n                    pcVar2 = *(*arg_8h + 0x28);\n                    puVar18 = piVar17 + -1;\n                    piVar17 = piVar17 + -1;\n                    *puVar18 = 0x47bf2a;\n                    (*pcVar2)();\n                    piVar12 = var_1ch;\n                }\n                var_20h = var_20h + 1;\n                var_24h = piVar12;\n                arg_ch._0_2_ = -1;\n                iVar1 = -1;\n                if (var_20h < uVar9) {\n                    *piVar17 = &fcn.0047bc80::arg_10h;\n                    piVar17[-1] = 0x47bdf6;\n                    cVar3 = fcn.00450bd0();\n                    piVar17 = piVar17 + -1;\n                    iVar1 = -1;\n                    if (cVar3 == '\\0') {\n                        piVar13 = NULL;\n                        var_1ch = var_20h * 2;\n                        piVar12 = var_24h;\n                        do {\n                            iVar1 = *(*(arg_1ch + iVar8 * 4) + var_1ch);\n                            iVar7 = arg_ch;\n                            if (arg_8h != NULL) {\n                                if (arg_8h[2] < arg_8h[3]) {\n                                    iVar7 = *arg_8h[2];\n                                }\n                                else {\n                                    var_24h = piVar12;\n                                    pcVar2 = *(*arg_8h + 0x24);\n                                    puVar16 = piVar17 + -4;\n                                    piVar17 = piVar17 + -4;\n                                    *puVar16 = 0x47bf1d;\n                                    iVar7 = (*pcVar2)();\n                                    piVar12 = var_24h;\n                                }\n                                if (iVar7 == -1) {\n                                    arg_8h = NULL;\n                                }\n                            }\n                            if (iVar1 == iVar7) {\n                                piVar13 = piVar13 + 1;\n                                if (piVar20 <= piVar13) goto code_r0x0047be4e;\n                            }\n                            else {\n                                piVar20 = piVar20 + -1;\n                                piVar12[piVar13] = piVar12[piVar20];\n                                if (piVar20 <= piVar13) goto code_r0x0047be4e;\n                            }\n                            iVar8 = piVar12[piVar13];\n                        } while( true );\n                    }\n                }\n                goto code_r0x0047bccd;\n            }\ncode_r0x0047be59:\n            iVar1 = arg_ch;\n            if (piVar20 == 0x1) {\n                piVar17[-1] = 0x47be6a;\n                fcn.004a6690();\n                uVar9 = var_20h;\n                var_20h = *piVar12;\n                uVar9 = uVar9 + 1;\n                iVar8 = *(arg_1ch + *piVar12 * 4);\n                *piVar17 = iVar8;\n                piVar17[-1] = 0x47be8c;\n                var_1ch = sub.msvcrt.dll_wcslen();\n                piVar20 = piVar17;\n                if (uVar9 < var_1ch) {\n                    do {\n                        *piVar20 = &fcn.0047bc80::arg_10h;\n                        piVar20[-1] = 0x47bea1;\n                        cVar3 = fcn.00450bd0();\n                        iVar1 = -1;\n                        if (cVar3 != '\\0') goto code_r0x0047bccd;\n                        iVar7 = *(iVar8 + uVar9 * 2);\n                        piVar20[-2] = 0x47bebc;\n                        iVar6 = fcn.00450c70();\n                        iVar1 = -1;\n                        if (iVar7 != iVar6) goto code_r0x0047bccd;\n                        uVar9 = uVar9 + 1;\n                        piVar20[-2] = 0x47bed0;\n                        fcn.004a6690();\n                        piVar20 = piVar20 + -1;\n                    } while (uVar9 < var_1ch);\n                }\n                iVar1 = -1;\n                if (var_1ch == uVar9) {\n                    *arg_18h = var_20h;\n                    goto code_r0x0047bcd3;\n                }\n            }\n        }\n    }\ncode_r0x0047bccd:\n    *arg_28h = *arg_28h | 4;\ncode_r0x0047bcd3:\n    return CONCAT24(iVar1, arg_8h);\ncode_r0x0047be4e:\n    if (piVar20 < 0x2) goto code_r0x0047be59;\n    goto code_r0x0047bd60;\n}\n",
        "token_count": 2286
    },
    "0047d6c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.0047d6c0(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, uint32_t *arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    char cVar4;\n    bool bVar5;\n    ushort uVar6;\n    int16_t iVar7;\n    int32_t *piVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint *puVar12;\n    uint32_t *puVar13;\n    uint32_t *puVar14;\n    uchar *puVar15;\n    uchar *puVar16;\n    uint *puVar18;\n    uint *puVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint32_t *puVar22;\n    uint8_t uVar23;\n    ulong uVar24;\n    uint uStack84;\n    int32_t aiStack80 [5];\n    uchar uStack57;\n    int32_t var_34h;\n    uint32_t var_2eh;\n    uint32_t *var_28h;\n    uint32_t *var_24h;\n    uint32_t var_20h;\n    uint32_t *var_1ch;\n    uint var_ch;\n    uint *puVar17;\n    \n    aiStack80[1] = arg_24h + 0x6c;\n    aiStack80[0] = 0x47d6d7;\n    piVar8 = fcn.004c0980();\n    aiStack80[0] = 0x47d6ee;\n    iVar9 = fcn.004386a0();\n    iVar9 = -iVar9;\n    var_24h = &stack0xffffffc7 + iVar9 & 0xfffffff0;\n    *(&stack0xffffffb4 + iVar9) = &fcn.0047d6c0::arg_10h;\n    *(&stack0xffffffb0 + iVar9) = 0x47d708;\n    cVar4 = fcn.00450bd0();\n    if (cVar4 == '\\0') {\n        uVar10 = 0;\n        uVar21 = 0;\n        *(&stack0xffffffac + iVar9) = 0x47d953;\n        uVar6 = fcn.00450c70();\n        var_1ch = CONCAT22(var_1ch._2_2_, uVar6);\n        uVar20 = arg_20h * 2;\n        var_20h = uVar20;\n        iVar11 = arg_1ch;\n        puVar14 = &stack0xffffffb0 + iVar9;\n        if (uVar20 == 0) {\n            puVar16 = &stack0xffffffb0 + iVar9;\n            puVar14 = NULL;\n        }\n        else {\n            do {\n                while( true ) {\n                    uVar1 = **(iVar11 + uVar10 * 4);\n                    if (uVar1 != var_1ch) break;\ncode_r0x0047d99d:\n                    var_24h[uVar21] = uVar10;\n                    uVar21 = uVar21 + 1;\n                    uVar10 = uVar10 + 1;\n                    puVar15 = puVar14;\n                    uVar20 = uVar21;\n                    if (uVar10 == var_20h) goto code_r0x0047d9ae;\n                }\n                iVar9 = *piVar8;\n                *puVar14 = uVar1;\n                pcVar2 = *(iVar9 + 0x18);\n                puVar13 = puVar14 + -1;\n                puVar14[-1] = 0x47d97d;\n                arg_1ch = iVar11;\n                iVar7 = (*pcVar2)();\n                puVar14 = puVar13 + -4;\n                puVar15 = puVar13 + -4;\n                iVar11 = arg_1ch;\n                if (var_1ch == iVar7) goto code_r0x0047d99d;\n                uVar10 = uVar10 + 1;\n                puVar14 = puVar13 + -4;\n                uVar20 = uVar21;\n            } while (uVar10 != var_20h);\ncode_r0x0047d9ae:\n            var_20h = 0;\n            puVar16 = puVar15;\n            puVar14 = NULL;\n            if (uVar20 != 0) {\n                *(puVar15 + -4) = 0x47d9c7;\n                fcn.004a6690();\n                *(puVar15 + -4) = 0x47d9e5;\n                uVar24 = fcn.004386a0();\n                iVar11 = arg_1ch;\n                iVar9 = -uVar24;\n                puVar16 = puVar15 + iVar9;\n                var_20h = uVar20;\n                var_28h = puVar15 + iVar9 + 0x13 & 0xfffffff0;\n                var_1ch = (uVar24 >> 0x20) + var_24h;\n                puVar14 = var_24h;\n                puVar22 = puVar15 + iVar9 + 0x13 & 0xfffffff0;\n                do {\n                    arg_ch = 0xffff;\n                    uVar20 = *puVar14;\n                    puVar14 = puVar14 + 1;\n                    *(puVar15 + iVar9) = *(iVar11 + uVar20 * 4);\n                    *(puVar15 + iVar9 + -4) = 0x47da16;\n                    uVar10 = sub.msvcrt.dll_wcslen();\n                    uVar20 = var_20h;\n                    *puVar22 = uVar10;\n                    puVar22 = puVar22 + 1;\n                } while (var_1ch != puVar14);\n                var_20h = 1;\n                puVar14 = var_28h;\n            }\n        }\n    }\n    else {\n        var_20h = 0;\n        uVar20 = 0;\n        puVar16 = &stack0xffffffb0 + iVar9;\n        puVar14 = NULL;\n    }\n    uVar23 = arg_ch == -1;\n    var_1ch._0_1_ = arg_8h != NULL && uVar23;\n    uVar3 = arg_ch;\n    if (var_1ch) goto code_r0x0047d843;\n    while( true ) {\n        arg_ch._0_2_ = uVar3;\n        var_1ch._0_1_ = arg_14h == -1;\n        bVar5 = arg_10h != NULL && var_1ch;\n        var_1ch = var_1ch & 0xffffff00 | bVar5;\n        if (bVar5) {\n            if (arg_10h[2] < arg_10h[3]) {\n                iVar7 = *arg_10h[2];\n            }\n            else {\n                pcVar2 = *(*arg_10h + 0x24);\n                puVar17 = puVar16 + -4;\n                puVar16 = puVar16 + -4;\n                *puVar17 = 0x47da38;\n                iVar7 = (*pcVar2)();\n            }\n            var_1ch._0_1_ = 0;\n            if (iVar7 == -1) {\n                arg_10h = NULL;\n            }\n        }\n        if (uVar23 == var_1ch) break;\n        var_2eh._0_2_ = arg_ch;\n        if ((arg_ch == -1) && (arg_8h != NULL)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                var_2eh._0_2_ = *arg_8h[2];\n            }\n            else {\n                pcVar2 = *(*arg_8h + 0x24);\n                puVar19 = puVar16 + -4;\n                puVar16 = puVar16 + -4;\n                *puVar19 = 0x47da53;\n                var_2eh._0_2_ = (*pcVar2)();\n            }\n            if (var_2eh == -1) {\n                arg_8h = NULL;\n            }\n        }\n        if (uVar20 == 0) goto code_r0x0047d8ba;\n        uVar10 = 0;\n        var_1ch = puVar14;\n        puVar14 = var_1ch;\n        stack0xffffffd0 = 0;\n        var_34h = var_20h * 2;\n        do {\n            while( true ) {\n                puVar22 = puVar14 + uVar10;\n                if (var_20h <= *puVar22 && *puVar22 != var_20h) break;\n                stack0xffffffd0 = stack0xffffffd0 + 1;\ncode_r0x0047d7a7:\n                uVar10 = uVar10 + 1;\n                if (uVar20 <= uVar10) goto code_r0x0047d7fa;\n            }\n            var_28h = var_24h + uVar10;\n            if (*(*(arg_1ch + *var_28h * 4) + var_20h * 2) == var_2eh) goto code_r0x0047d7a7;\n            uVar20 = uVar20 - 1;\n            *var_28h = var_24h[uVar20];\n            *puVar22 = puVar14[uVar20];\n        } while (uVar10 < uVar20);\ncode_r0x0047d7fa:\n        if (stack0xffffffd0 == uVar20) break;\n        if (arg_8h[2] < arg_8h[3]) {\n            arg_8h[2] = arg_8h[2] + 2;\n        }\n        else {\n            pcVar2 = *(*arg_8h + 0x28);\n            puVar12 = puVar16 + -4;\n            puVar16 = puVar16 + -4;\n            *puVar12 = 0x47d905;\n            (*pcVar2)();\n        }\n        var_20h = var_20h + 1;\n        arg_ch = 0xffff;\n        var_1ch._0_1_ = arg_8h != NULL;\n        uVar23 = 1;\n        uVar3 = 0xffff;\n        if (var_1ch) {\ncode_r0x0047d843:\n            if (arg_8h[2] < arg_8h[3]) {\n                iVar7 = *arg_8h[2];\n            }\n            else {\n                var_1ch = var_1ch & 0xffffff00 | var_1ch;\n                pcVar2 = *(*arg_8h + 0x24);\n                puVar18 = puVar16 + -4;\n                puVar16 = puVar16 + -4;\n                *puVar18 = 0x47da45;\n                iVar7 = (*pcVar2)();\n            }\n            uVar23 = 0;\n            uVar3 = arg_ch;\n            if (iVar7 == -1) {\n                arg_8h = NULL;\n                uVar23 = var_1ch;\n            }\n        }\n    }\n    if (uVar20 == 1) {\n        uVar20 = *puVar14;\n    }\n    else {\n        if (uVar20 != 2) goto code_r0x0047d8ba;\n        if (*puVar14 == var_20h) goto code_r0x0047d91e;\n        uVar20 = puVar14[1];\n    }\n    if (uVar20 == var_20h) {\ncode_r0x0047d91e:\n        uVar20 = *var_24h;\n        if (arg_20h <= uVar20) {\n            uVar20 = uVar20 - arg_20h;\n        }\n        *arg_18h = uVar20;\n        return CONCAT24(arg_ch, arg_8h);\n    }\ncode_r0x0047d8ba:\n    *arg_28h = *arg_28h | 4;\n    return CONCAT44(uVar3, arg_8h);\n}\n",
        "token_count": 2801
    },
    "0047ee50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffe0 : 0x0047ef17\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x0047f51b)\n// WARNING: Removing unreachable block (ram,0x0047efa7)\n// WARNING: Removing unreachable block (ram,0x0047efaf)\n// WARNING: Removing unreachable block (ram,0x0047efc6)\n// WARNING: Removing unreachable block (ram,0x0047ef80)\n// WARNING: Removing unreachable block (ram,0x0047efd1)\n// WARNING: Removing unreachable block (ram,0x0047ef86)\n// WARNING: Removing unreachable block (ram,0x0047ef63)\n// WARNING: Removing unreachable block (ram,0x0047ef6d)\n// WARNING: Removing unreachable block (ram,0x0047f37a)\n// WARNING: Removing unreachable block (ram,0x0047f3e0)\n// WARNING: Removing unreachable block (ram,0x0047ef73)\n// WARNING: Removing unreachable block (ram,0x0047ef90)\n// WARNING: Removing unreachable block (ram,0x0047f4e0)\n// WARNING: Removing unreachable block (ram,0x0047f4e9)\n// WARNING: Removing unreachable block (ram,0x0047f6cc)\n// WARNING: Removing unreachable block (ram,0x0047f6e0)\n// WARNING: Removing unreachable block (ram,0x0047f5b0)\n// WARNING: Removing unreachable block (ram,0x0047f37d)\n// WARNING: Removing unreachable block (ram,0x0047f5bf)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.0047ee50(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint var_36h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_27h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar2 = arg_18h + 0x6c;\n    fcn.004c0920(iVar2);\n    iVar2 = fcn.0044e3a0(iVar2);\n    *NULL = fcn.0048b900(0, 0, &var_1ch);\n    if (*(iVar2 + 0x10) != '\\0') {\n        fcn.0048d0f0(0x20);\n    }\n    var_20h = fcn.0048b900(0, 0, &var_27h + 1);\n    fcn.0048d0f0(0x20);\n    var_3ch = 1;\n    var_1ch = *(iVar2 + 0x34);\n    puVar3 = &var_1ch;\n    while( true ) {\n        if (var_1ch < 5) {\n    // WARNING: Could not recover jumptable at 0x0047ef3c. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x5244dc\n            uVar5 = (**(*puVar3 * 4 + 0x5244dc))();\n            return uVar5;\n        }\n        if (3 < var_3ch) break;\n        puVar3 = &var_1ch + var_3ch;\n        var_1ch._0_1_ = *puVar3;\n        var_3ch = var_3ch + 1;\n    }\n    if ((1 < *(var_20h + -0xc)) && (iVar4 = fcn.0044c6f0(0x30, 0),  iVar4 != 0)) {\n        if (iVar4 == -1) {\n            iVar4 = *(var_20h + -0xc) + -1;\n        }\n        fcn.0048c160(0, iVar4);\n    }\n    if (*(stack0xffffffd8 + -0xc) != 0) {\n        fcn.0048d3d0(0);\n        cVar1 = fcn.004be720(*(iVar2 + 8), *(iVar2 + 0xc), &var_27h + 3);\n        if (cVar1 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.0048c040(&var_20h);\n    cVar1 = fcn.00450a90(&arg_10h);\n    if (cVar1 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048bdf0(&var_27h + 2);\n    fcn.0048bdf0(&var_27h + 2);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 1223
    },
    "0047f780": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffe0 : 0x0047f847\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x0047fe4b)\n// WARNING: Removing unreachable block (ram,0x0047f8d7)\n// WARNING: Removing unreachable block (ram,0x0047f8df)\n// WARNING: Removing unreachable block (ram,0x0047f8f6)\n// WARNING: Removing unreachable block (ram,0x0047f8b0)\n// WARNING: Removing unreachable block (ram,0x0047f901)\n// WARNING: Removing unreachable block (ram,0x0047f8b6)\n// WARNING: Removing unreachable block (ram,0x0047f893)\n// WARNING: Removing unreachable block (ram,0x0047f89d)\n// WARNING: Removing unreachable block (ram,0x0047fcaa)\n// WARNING: Removing unreachable block (ram,0x0047fd10)\n// WARNING: Removing unreachable block (ram,0x0047f8a3)\n// WARNING: Removing unreachable block (ram,0x0047f8c0)\n// WARNING: Removing unreachable block (ram,0x0047fe10)\n// WARNING: Removing unreachable block (ram,0x0047fe19)\n// WARNING: Removing unreachable block (ram,0x0047fffc)\n// WARNING: Removing unreachable block (ram,0x00480010)\n// WARNING: Removing unreachable block (ram,0x0047fee0)\n// WARNING: Removing unreachable block (ram,0x0047fcad)\n// WARNING: Removing unreachable block (ram,0x0047feef)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.0047f780(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint var_36h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_27h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar2 = arg_18h + 0x6c;\n    fcn.004c0920(iVar2);\n    iVar2 = fcn.0044e4b0(iVar2);\n    *NULL = fcn.0048b900(0, 0, &var_1ch);\n    if (*(iVar2 + 0x10) != '\\0') {\n        fcn.0048d0f0(0x20);\n    }\n    var_20h = fcn.0048b900(0, 0, &var_27h + 1);\n    fcn.0048d0f0(0x20);\n    var_3ch = 1;\n    var_1ch = *(iVar2 + 0x34);\n    puVar3 = &var_1ch;\n    while( true ) {\n        if (var_1ch < 5) {\n    // WARNING: Could not recover jumptable at 0x0047f86c. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x5244c8\n            uVar5 = (**(*puVar3 * 4 + 0x5244c8))();\n            return uVar5;\n        }\n        if (3 < var_3ch) break;\n        puVar3 = &var_1ch + var_3ch;\n        var_1ch._0_1_ = *puVar3;\n        var_3ch = var_3ch + 1;\n    }\n    if ((1 < *(var_20h + -0xc)) && (iVar4 = fcn.0044c6f0(0x30, 0),  iVar4 != 0)) {\n        if (iVar4 == -1) {\n            iVar4 = *(var_20h + -0xc) + -1;\n        }\n        fcn.0048c160(0, iVar4);\n    }\n    if (*(stack0xffffffd8 + -0xc) != 0) {\n        fcn.0048d3d0(0);\n        cVar1 = fcn.004be720(*(iVar2 + 8), *(iVar2 + 0xc), &var_27h + 3);\n        if (cVar1 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.0048c040(&var_20h);\n    cVar1 = fcn.00450a90(&arg_10h);\n    if (cVar1 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048bdf0(&var_27h + 2);\n    fcn.0048bdf0(&var_27h + 2);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 1222
    },
    "004800d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nulong __cdecl\nfcn.004800d0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            int32_t *arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_2ch;\n    int32_t var_1dh;\n    uint var_bp_ch;\n    \n    piVar3 = fcn.004c0920(arg_1ch + 0x6c);\n    *NULL = fcn.0048b900(0, 0, &var_1dh);\n    if (arg_18h == '\\0') {\n        uVar5 = fcn.0047ee50(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_1dh + 1);\n    }\n    else {\n        uVar5 = fcn.0047f780(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_1dh + 1);\n    }\n    iVar1 = *(stack0xffffffe0 + -0xc);\n    if (iVar1 != 0) {\n        fcn.0048cb50(iVar1, 0);\n        iVar4 = *arg_24h;\n        if (-1 < *(iVar4 + -4)) {\n            fcn.0048b8c0();\n            iVar4 = *arg_24h;\n        }\n        iVar2 = stack0xffffffe0;\n        if (*(piVar3 + 7) != '\\x01') {\n            if (*(piVar3 + 7) == '\\0') {\n                fcn.00451a70();\n            }\n            if (*(*piVar3 + 0x1c) != 0x451cf0) {\n                (**(*piVar3 + 0x1c))(iVar2, iVar1 + iVar2, iVar4);\n                goto code_r0x004801c4;\n            }\n        }\n        sub.msvcrt.dll_memcpy(iVar4, iVar2, iVar1);\n    }\ncode_r0x004801c4:\n    if (*0x515a34 == 0) {\n        iVar1 = *(stack0xffffffe0 + -4);\n        *(stack0xffffffe0 + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar3 = stack0xffffffe0 + -4;\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n    }\n    if (0 < iVar1) {\n        return uVar5;\n    }\n    fcn.0048bdd0(&var_1dh);\n    return uVar5;\n}\n",
        "token_count": 661
    },
    "00480290": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nulong __cdecl\nfcn.00480290(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    var_20h = fcn.0048b900(0, 0, &var_1ch);\n    if (arg_18h == '\\0') {\n        uVar3 = fcn.0047ee50(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_20h);\n    }\n    else {\n        uVar3 = fcn.0047f780(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_20h);\n    }\n    var_1ch = fcn.004af100();\n    fcn.004bdbd0(var_20h, arg_24h, arg_20h, &var_1ch);\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_20h + -4);\n        *(var_20h + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_20h + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar3;\n    }\n    fcn.0048bdd0(&var_1ch);\n    return uVar3;\n}\n",
        "token_count": 438
    },
    "004803b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffe0 : 0x0048048c\n// WARNING: Removing unreachable block (ram,0x00480871)\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00480a95)\n// WARNING: Removing unreachable block (ram,0x00480521)\n// WARNING: Removing unreachable block (ram,0x00480537)\n// WARNING: Removing unreachable block (ram,0x004804f0)\n// WARNING: Removing unreachable block (ram,0x00480542)\n// WARNING: Removing unreachable block (ram,0x004804f6)\n// WARNING: Removing unreachable block (ram,0x00480983)\n// WARNING: Removing unreachable block (ram,0x00480c69)\n// WARNING: Removing unreachable block (ram,0x00480cdd)\n// WARNING: Removing unreachable block (ram,0x00480c73)\n// WARNING: Removing unreachable block (ram,0x00480c7c)\n// WARNING: Removing unreachable block (ram,0x00480cd3)\n// WARNING: Removing unreachable block (ram,0x00480c83)\n// WARNING: Removing unreachable block (ram,0x00480b30)\n// WARNING: Removing unreachable block (ram,0x00480b42)\n// WARNING: Removing unreachable block (ram,0x004804cd)\n// WARNING: Removing unreachable block (ram,0x00480518)\n// WARNING: Removing unreachable block (ram,0x00480a5a)\n// WARNING: Removing unreachable block (ram,0x00480874)\n// WARNING: Removing unreachable block (ram,0x00480a63)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.004803b0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    ulong uVar6;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ah;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_27h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = arg_18h + 0x6c;\n    fcn.004c0980(iVar3);\n    iVar3 = fcn.0044e5c0(iVar3);\n    *NULL = fcn.0048b900(0, 0, &var_1ch);\n    if (*(iVar3 + 0x10) != '\\0') {\n        fcn.0048d0f0(0x20);\n    }\n    var_20h = fcn.0048b900(0, 0, &var_27h + 1);\n    fcn.0048d0f0(0x20);\n    var_40h = 1;\n    var_1ch = *(iVar3 + 0x38);\n    puVar4 = &var_1ch;\n    while( true ) {\n        if (var_1ch < 5) {\n    // WARNING: Could not recover jumptable at 0x004804a6. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x5248c0\n            uVar6 = (**(*puVar4 * 4 + 0x5248c0))();\n            return uVar6;\n        }\n        if (3 < var_40h) break;\n        puVar4 = &var_1ch + var_40h;\n        var_1ch._0_1_ = *puVar4;\n        var_40h = var_40h + 1;\n    }\n    if ((1 < *(var_20h + -0xc)) && (uVar5 = fcn.0044c6f0(0x30, 0),  uVar5 != 0)) {\n        uVar1 = *(var_20h + -0xc);\n        if (uVar5 == 0xffffffff) {\n            uVar5 = uVar1 - 1;\n        }\n        if (uVar1 < uVar5) {\n            uVar5 = uVar1;\n        }\n        fcn.0048d220(0, uVar5, 0);\n    }\n    if (*(stack0xffffffd8 + -0xc) != 0) {\n        fcn.0048d3d0(0);\n        cVar2 = fcn.004be720(*(iVar3 + 8), *(iVar3 + 0xc), &var_27h + 3);\n        if (cVar2 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.0048c040(&var_20h);\n    cVar2 = fcn.00450bd0(&arg_10h);\n    if (cVar2 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048bdf0(&var_27h + 2);\n    fcn.0048bdf0(&var_27h + 2);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 1273
    },
    "00480d30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffe0 : 0x00480e0c\n// WARNING: Removing unreachable block (ram,0x004811f1)\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00481415)\n// WARNING: Removing unreachable block (ram,0x00480ea1)\n// WARNING: Removing unreachable block (ram,0x00480eb7)\n// WARNING: Removing unreachable block (ram,0x00480e70)\n// WARNING: Removing unreachable block (ram,0x00480ec2)\n// WARNING: Removing unreachable block (ram,0x00480e76)\n// WARNING: Removing unreachable block (ram,0x00481303)\n// WARNING: Removing unreachable block (ram,0x004815e9)\n// WARNING: Removing unreachable block (ram,0x0048165d)\n// WARNING: Removing unreachable block (ram,0x004815f3)\n// WARNING: Removing unreachable block (ram,0x004815fc)\n// WARNING: Removing unreachable block (ram,0x00481653)\n// WARNING: Removing unreachable block (ram,0x00481603)\n// WARNING: Removing unreachable block (ram,0x004814b0)\n// WARNING: Removing unreachable block (ram,0x004814c2)\n// WARNING: Removing unreachable block (ram,0x00480e4d)\n// WARNING: Removing unreachable block (ram,0x00480e98)\n// WARNING: Removing unreachable block (ram,0x004813da)\n// WARNING: Removing unreachable block (ram,0x004811f4)\n// WARNING: Removing unreachable block (ram,0x004813e3)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.00480d30(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    ulong uVar6;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ah;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_27h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = arg_18h + 0x6c;\n    fcn.004c0980(iVar3);\n    iVar3 = fcn.0044e6d0(iVar3);\n    *NULL = fcn.0048b900(0, 0, &var_1ch);\n    if (*(iVar3 + 0x10) != '\\0') {\n        fcn.0048d0f0(0x20);\n    }\n    var_20h = fcn.0048b900(0, 0, &var_27h + 1);\n    fcn.0048d0f0(0x20);\n    var_40h = 1;\n    var_1ch = *(iVar3 + 0x38);\n    puVar4 = &var_1ch;\n    while( true ) {\n        if (var_1ch < 5) {\n    // WARNING: Could not recover jumptable at 0x00480e26. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x5248ac\n            uVar6 = (**(*puVar4 * 4 + 0x5248ac))();\n            return uVar6;\n        }\n        if (3 < var_40h) break;\n        puVar4 = &var_1ch + var_40h;\n        var_1ch._0_1_ = *puVar4;\n        var_40h = var_40h + 1;\n    }\n    if ((1 < *(var_20h + -0xc)) && (uVar5 = fcn.0044c6f0(0x30, 0),  uVar5 != 0)) {\n        uVar1 = *(var_20h + -0xc);\n        if (uVar5 == 0xffffffff) {\n            uVar5 = uVar1 - 1;\n        }\n        if (uVar1 < uVar5) {\n            uVar5 = uVar1;\n        }\n        fcn.0048d220(0, uVar5, 0);\n    }\n    if (*(stack0xffffffd8 + -0xc) != 0) {\n        fcn.0048d3d0(0);\n        cVar2 = fcn.004be720(*(iVar3 + 8), *(iVar3 + 0xc), &var_27h + 3);\n        if (cVar2 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.0048c040(&var_20h);\n    cVar2 = fcn.00450bd0(&arg_10h);\n    if (cVar2 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048bdf0(&var_27h + 2);\n    fcn.0048bdf0(&var_27h + 2);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 1273
    },
    "004816d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl\nfcn.004816d0(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            int32_t *arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1dh;\n    uint var_bp_ch;\n    \n    piVar2 = fcn.004c0980(arg_1ch + 0x6c);\n    *NULL = fcn.0048b900(0, 0, &var_1dh);\n    if (arg_18h == '\\0') {\n        uVar5 = fcn.004803b0(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_1dh + 1);\n    }\n    else {\n        uVar5 = fcn.00480d30(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_1dh + 1);\n    }\n    iVar1 = *(stack0xffffffe0 + -0xc);\n    uVar4 = arg_ch & 0xffff0000 | uVar5 >> 0x20 & 0xffff;\n    if (iVar1 != 0) {\n        fcn.00484d40(iVar1, 0);\n        iVar3 = *arg_24h;\n        if (-1 < *(iVar3 + -4)) {\n            fcn.004839b0();\n            iVar3 = *arg_24h;\n        }\n        (**(*piVar2 + 0x2c))(stack0xffffffe0, iVar1 + stack0xffffffe0, iVar3);\n    }\n    if (*0x515a34 == 0) {\n        iVar1 = *(stack0xffffffe0 + -4);\n        *(stack0xffffffe0 + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = stack0xffffffe0 + -4;\n        iVar1 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (0 < iVar1) {\n        return uVar5 & 0xffffffff | uVar4 << 0x20;\n    }\n    fcn.0048bdd0(&var_1dh);\n    return uVar5 & 0xffffffff | uVar4 << 0x20;\n}\n",
        "token_count": 630
    },
    "00481850": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl\nfcn.00481850(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    var_20h = fcn.0048b900(0, 0, &var_1ch);\n    if (arg_18h == '\\0') {\n        uVar4 = fcn.004803b0(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_20h);\n    }\n    else {\n        uVar4 = fcn.00480d30(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_20h);\n    }\n    uVar3 = arg_ch & 0xffff0000 | uVar4 >> 0x20 & 0xffff;\n    var_1ch = fcn.004af100();\n    fcn.004bdbd0(var_20h, arg_24h, arg_20h, &var_1ch);\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_20h + -4);\n        *(var_20h + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_20h + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar4 & 0xffffffff | uVar3 << 0x20;\n    }\n    fcn.0048bdd0(&var_1ch);\n    return uVar4 & 0xffffffff | uVar3 << 0x20;\n}\n",
        "token_count": 519
    },
    "00481a30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl fcn.00481a30(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    uint *puVar8;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    unkbyte10 in_stack_00000018;\n    uint uStack116;\n    uint *puStack112;\n    uint32_t auStack108 [4];\n    unkbyte10 aStack92 [2];\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint32_t var_34h;\n    int32_t *var_30h;\n    uint var_2ch;\n    uchar var_21h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_bp_ch;\n    \n    var_3ch = arg_10h;\n    var_40h = arg_18h;\n    auStack108[0] = arg_14h + 0x6c;\n    puStack112 = 0x481a59;\n    fcn.004af3a0();\n    puStack112 = &fcn.00481a30::var_20h;\n    uStack116 = 0x481a67;\n    var_30h = fcn.004c0920();\n    uStack116 = 0x481a74;\n    iVar3 = fcn.004386a0();\n    iVar3 = -iVar3;\n    piVar7 = &stack0xffffff90 + iVar3;\n    uVar6 = &fcn.00481a30::var_40h + iVar3 + 3 & 0xfffffff0;\n    var_34h = uVar6;\n    *(&stack0xffffff8c + iVar3) = 0x481a85;\n    var_1ch = fcn.004af100();\n    *(&stack0xffffffa0 + iVar3) = 0;\n    *(&stack0xffffff9c + iVar3) = 0x5243c4;\n    *(&stack0xffffff98 + iVar3) = 0x40;\n    *(&stack0xffffffa4 + iVar3) = in_stack_00000018;\n    *(&stack0xffffff94 + iVar3) = uVar6;\n    *(&stack0xffffff90 + iVar3) = &fcn.00481a30::var_1ch;\n    *(&stack0xffffff8c + iVar3) = 0x481ab6;\n    iVar4 = fcn.004bde30();\n    if (0x3f < iVar4) {\n        *(&stack0xffffff8c + iVar3) = 0x481ace;\n        iVar5 = fcn.004386a0();\n        iVar5 = -iVar5;\n        piVar7 = &stack0xffffff90 + iVar5 + iVar3;\n        uVar6 = &fcn.00481a30::var_40h + iVar5 + iVar3 + 3 & 0xfffffff0;\n        var_34h = uVar6;\n        *(&stack0xffffff8c + iVar5 + iVar3) = 0x481adf;\n        var_1ch = fcn.004af100();\n        *(&stack0xffffffa0 + iVar5 + iVar3) = 0;\n        *(&stack0xffffff9c + iVar5 + iVar3) = 0x5243c4;\n        *(&stack0xffffff98 + iVar5 + iVar3) = iVar4 + 1;\n        *(&stack0xffffffa4 + iVar5 + iVar3) = in_stack_00000018;\n        *(&stack0xffffff94 + iVar5 + iVar3) = uVar6;\n        *(&stack0xffffff90 + iVar5 + iVar3) = &fcn.00481a30::var_1ch;\n        *(&stack0xffffff8c + iVar5 + iVar3) = 0x481b09;\n        iVar4 = fcn.004bde30();\n    }\n    piVar7[1] = 0;\n    piVar7[2] = &stack0xffffffdb;\n    *piVar7 = iVar4;\n    piVar7[-1] = 0x481b24;\n    fcn.0048d720();\n    piVar10 = piVar7 + -3;\n    if (-1 < *(var_1ch + -4)) {\n        piVar7[-4] = 0x481bf7;\n        fcn.0048b8c0();\n    }\n    iVar3 = var_1ch;\n    if (*(var_30h + 7) != '\\x01') {\n        if (*(var_30h + 7) == '\\0') {\n            piVar7[-4] = 0x481c38;\n            fcn.00451a70();\n            pcVar2 = *(*var_30h + 0x1c);\n            uVar6 = var_34h;\n        }\n        else {\n            pcVar2 = *(*var_30h + 0x1c);\n            uVar6 = var_34h;\n        }\n        var_34h = uVar6;\n        if (pcVar2 != 0x451cf0) {\n            piVar7[-1] = iVar3;\n            piVar7[-3] = uVar6;\n            piVar7[-2] = iVar4 + uVar6;\n            piVar9 = piVar7 + -4;\n            piVar7[-4] = 0x481c60;\n            (*pcVar2)();\n            piVar10 = piVar9 + -0xc;\n            goto code_r0x00481b6e;\n        }\n    }\n    uVar6 = var_34h;\n    piVar7[-1] = iVar4;\n    piVar7[-3] = iVar3;\n    piVar7[-2] = uVar6;\n    piVar7[-4] = 0x481b6e;\n    sub.msvcrt.dll_memcpy();\ncode_r0x00481b6e:\n    piVar10[4] = &fcn.00481a30::var_1ch;\n    piVar10[3] = var_40h;\n    piVar10[1] = arg_ch;\n    piVar10[2] = arg_14h;\n    *piVar10 = arg_8h;\n    if (var_3ch == '\\0') {\n        piVar10[-1] = 0x481be5;\n        _var_30h = fcn.00481ca0(*piVar10, piVar10[1], piVar10[2], piVar10[3], piVar10[4]);\n    }\n    else {\n        piVar10[-1] = 0x481b9c;\n        _var_30h = fcn.004822e0(*piVar10, piVar10[1], piVar10[2], piVar10[3], piVar10[4]);\n    }\n    if (*0x515a34 == 0) {\n        iVar3 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    puVar8 = piVar10 + -5;\n    if (iVar3 < 1) {\n        var_30h = _var_30h;\n        piVar10[-5] = &stack0xffffffdb;\n        var_2ch = _var_30h >> 0x20;\n        piVar10[-6] = 0x481c22;\n        fcn.0048bdd0();\n        puVar8 = piVar10 + -6;\n    }\n    var_30h = _var_30h;\n    var_2ch = _var_30h >> 0x20;\n    puVar8[-1] = 0x481bc7;\n    fcn.004af4c0();\n    return _var_30h;\n}\n",
        "token_count": 1872
    },
    "00481ca0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.00481ca0(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, uint8_t **arg_18h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    int32_t *piVar7;\n    uint8_t *puVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint8_t *puVar13;\n    uint *puVar14;\n    uint uVar15;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    char *var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint8_t var_35h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_26h;\n    uchar var_25h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_ch;\n    \n    var_34h = arg_ch;\n    var_35h = arg_ch;\n    iVar4 = fcn.004c0920(arg_10h + 0x6c);\n    iVar5 = fcn.004522b0();\n    piVar7 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    iVar11 = *piVar7;\n    if (iVar11 == 0) {\n        puVar14 = fcn.004c3430(0x44);\n        *puVar14 = 0x52c654;\n        *(puVar14 + 4) = 0;\n        puVar14[1] = 0;\n        puVar14[2] = 0;\n        puVar14[3] = 0;\n        *(puVar14 + 0x12) = 0;\n        puVar14[5] = 0;\n        puVar14[6] = 0;\n        puVar14[7] = 0;\n        puVar14[8] = 0;\n        puVar14[9] = 0;\n        puVar14[10] = 0;\n        puVar14[0xb] = 0;\n        puVar14[0xc] = 0;\n        puVar14[0xd] = 0;\n        *(puVar14 + 0x43) = 0;\n        fcn.004aa1f0(arg_10h + 0x6c);\n        fcn.004ad8f0(puVar14, iVar5);\n        iVar11 = *piVar7;\n    }\n    puVar13 = *arg_18h;\n    piVar7 = puVar13 + -0xc;\n    if (*puVar13 == *(iVar11 + 0x38)) {\n        var_1ch = *(iVar11 + 0x34);\n        if (*piVar7 == 0) goto code_r0x00481d56;\n        var_50h = *(iVar11 + 0x24);\n        puVar13 = puVar13 + 1;\n        var_44h = *(iVar11 + 0x28);\n    }\n    else {\n        var_1ch = *(iVar11 + 0x30);\n        var_50h = *(iVar11 + 0x1c);\n        var_44h = *(iVar11 + 0x20);\n    }\n    puVar8 = puVar13 + *piVar7;\n    if ((puVar13 < puVar8) && (puVar6 = puVar13,  (*(*(iVar4 + 0x18) + *puVar13 * 2) & 8) != 0)) {\n        do {\n            puVar6 = puVar6 + 1;\n            if (puVar8 == puVar6) {\n                iVar4 = puVar8 - puVar13;\n                goto joined_r0x00481d86;\n            }\n        } while ((*(*(iVar4 + 0x18) + *puVar6 * 2) & 8) != 0);\n        iVar4 = puVar6 - puVar13;\njoined_r0x00481d86:\n        if (iVar4 != 0) {\n            var_24h = fcn.0048b900(0, 0, &var_20h);\n            fcn.0048d0f0(iVar4 * 2);\n            iVar5 = *(iVar11 + 0x2c);\n            var_40h = iVar4 - iVar5;\n            if (0 < var_40h) {\n                if (iVar5 < 0) {\n                    var_40h = iVar4;\n                }\n                if (*(iVar11 + 0xc) == 0) {\n                    fcn.0048c560(puVar13, var_40h);\n                    iVar5 = *(iVar11 + 0x2c);\n                }\n                else {\n                    fcn.0048bc50(0, *(var_24h + -0xc), var_40h * 2, 0);\n                    uVar15 = *(iVar11 + 0xc);\n                    uVar2 = *(iVar11 + 8);\n                    cVar1 = *(iVar11 + 0x12);\n                    if (-1 < *(var_24h + -4)) {\n                        fcn.0048b8c0();\n                    }\n                    iVar5 = fcn.004bd7f0(var_24h, cVar1, uVar2, uVar15, puVar13, puVar13 + var_40h);\n                    if (-1 < *(var_24h + -4)) {\n                        fcn.0048b8c0();\n                    }\n                    uVar9 = iVar5 - var_24h;\n                    uVar12 = *(var_24h + -0xc);\n                    if (uVar12 < uVar9) {\n                        uVar15 = 0x524350;\n                        piVar7 = fcn.004bf0c0(0x524364, 0x524350);\n                        fcn.0048bdf0(&var_25h, uVar15, uVar9, uVar12);\n                        fcn.0048bdf0(&var_25h);\n                        uVar15 = fcn.0043b0b0(piVar7);\n                        fcn.004c3600(uVar15);\n                        (**(*piVar7 + 4))();\n                        do {\n                            uVar15 = fcn.004c3a90();\n                            fcn.004c3600(uVar15);\n                        } while( true );\n                    }\n                    fcn.0048d220(uVar9, uVar12 - uVar9, 0);\n                    iVar5 = *(iVar11 + 0x2c);\n                }\n            }\n            if (0 < iVar5) {\n                fcn.0048d3d0(*(iVar11 + 0x11));\n                if (var_40h < 0) {\n                    fcn.0048c440(-var_40h, *(iVar11 + 0x39));\n                    fcn.0048c220(puVar13, iVar4);\n                }\n                else {\n                    fcn.0048c220(puVar13 + var_40h, *(iVar11 + 0x2c));\n                }\n            }\n            uVar9 = var_44h + *(var_24h + -0xc);\n            uVar12 = *(arg_10h + 0xc) & 0xb0;\n            if ((*(arg_10h + 0xc) & 0x200) != 0) {\n                uVar9 = uVar9 + *(iVar11 + 0x18);\n            }\n            var_20h = fcn.0048b900(0, 0, &var_26h);\n            fcn.0048d0f0(uVar9 * 2);\n            uVar3 = *(arg_10h + 8);\n            puVar14 = &var_1ch;\n            bVar10 = uVar12 == 0x10 && uVar9 < uVar3;\n            do {\n                if (*puVar14 < 5) {\n    // switch table (5 cases) at 0x5243b0\n                    switch(*puVar14) {\n                    case 0:\n                        if (bVar10) {\ncode_r0x00481fad:\n                            fcn.0048c440(uVar3 - uVar9, arg_14h);\n                        }\n                        break;\n                    case 1:\n                        if (bVar10) goto code_r0x00481fad;\n                        fcn.0048d3d0(arg_14h);\n                        break;\n                    case 2:\n                        if ((*(arg_10h + 0xd) & 2) != 0) {\n                            fcn.0048c220(*(iVar11 + 0x14), *(iVar11 + 0x18));\n                        }\n                        break;\n                    case 3:\n                        if (var_44h != 0) {\n                            fcn.0048d3d0(*var_50h);\n                        }\n                        break;\n                    case 4:\n                        fcn.0048c2e0(&var_24h);\n                    }\n                }\n                puVar14 = puVar14 + 1;\n            } while (puVar14 != &var_18h);\n            if (var_44h < 2) {\n                uVar9 = *(var_20h + -0xc);\n            }\n            else {\n                fcn.0048c220(var_50h + 1, var_44h - 1);\n                uVar9 = *(var_20h + -0xc);\n            }\n            if (uVar9 < uVar3) {\n                if (uVar12 == 0x20) {\n                    fcn.0048c440(uVar3 - uVar9, arg_14h);\n                    uVar9 = uVar3;\n                }\n                else {\n                    fcn.0048bc50(0, 0, uVar3 - uVar9, arg_14h);\n                    uVar9 = uVar3;\n                }\n            }\n            if (var_35h == 0) {\n                uVar12 = (**(*arg_8h + 0x30))(var_20h, uVar9);\n                var_35h = uVar12 != uVar9;\n            }\n            var_34h = arg_ch & 0xffffff00;\n            fcn.0048bdf0(&var_25h);\n            fcn.0048bdf0(&var_25h);\n        }\n    }\ncode_r0x00481d56:\n    *(arg_10h + 8) = 0;\n    var_34h = var_34h & 0xffffff00 | var_35h;\n    return CONCAT44(var_34h, arg_8h);\n}\n",
        "token_count": 2494
    },
    "004822e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.004822e0(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, uint8_t **arg_18h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    int32_t *piVar7;\n    uint8_t *puVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint8_t *puVar13;\n    uint *puVar14;\n    uint uVar15;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    char *var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint8_t var_35h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_26h;\n    uchar var_25h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_ch;\n    \n    var_34h = arg_ch;\n    var_35h = arg_ch;\n    iVar4 = fcn.004c0920(arg_10h + 0x6c);\n    iVar5 = fcn.004522b0();\n    piVar7 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    iVar11 = *piVar7;\n    if (iVar11 == 0) {\n        puVar14 = fcn.004c3430(0x44);\n        *puVar14 = 0x52c664;\n        *(puVar14 + 4) = 0;\n        puVar14[1] = 0;\n        puVar14[2] = 0;\n        puVar14[3] = 0;\n        *(puVar14 + 0x12) = 0;\n        puVar14[5] = 0;\n        puVar14[6] = 0;\n        puVar14[7] = 0;\n        puVar14[8] = 0;\n        puVar14[9] = 0;\n        puVar14[10] = 0;\n        puVar14[0xb] = 0;\n        puVar14[0xc] = 0;\n        puVar14[0xd] = 0;\n        *(puVar14 + 0x43) = 0;\n        fcn.004aa8d0(arg_10h + 0x6c);\n        fcn.004ad8f0(puVar14, iVar5);\n        iVar11 = *piVar7;\n    }\n    puVar13 = *arg_18h;\n    piVar7 = puVar13 + -0xc;\n    if (*puVar13 == *(iVar11 + 0x38)) {\n        var_1ch = *(iVar11 + 0x34);\n        if (*piVar7 == 0) goto code_r0x00482396;\n        var_50h = *(iVar11 + 0x24);\n        puVar13 = puVar13 + 1;\n        var_44h = *(iVar11 + 0x28);\n    }\n    else {\n        var_1ch = *(iVar11 + 0x30);\n        var_50h = *(iVar11 + 0x1c);\n        var_44h = *(iVar11 + 0x20);\n    }\n    puVar8 = puVar13 + *piVar7;\n    if ((puVar13 < puVar8) && (puVar6 = puVar13,  (*(*(iVar4 + 0x18) + *puVar13 * 2) & 8) != 0)) {\n        do {\n            puVar6 = puVar6 + 1;\n            if (puVar8 == puVar6) {\n                iVar4 = puVar8 - puVar13;\n                goto joined_r0x004823c6;\n            }\n        } while ((*(*(iVar4 + 0x18) + *puVar6 * 2) & 8) != 0);\n        iVar4 = puVar6 - puVar13;\njoined_r0x004823c6:\n        if (iVar4 != 0) {\n            var_24h = fcn.0048b900(0, 0, &var_20h);\n            fcn.0048d0f0(iVar4 * 2);\n            iVar5 = *(iVar11 + 0x2c);\n            var_40h = iVar4 - iVar5;\n            if (0 < var_40h) {\n                if (iVar5 < 0) {\n                    var_40h = iVar4;\n                }\n                if (*(iVar11 + 0xc) == 0) {\n                    fcn.0048c560(puVar13, var_40h);\n                    iVar5 = *(iVar11 + 0x2c);\n                }\n                else {\n                    fcn.0048bc50(0, *(var_24h + -0xc), var_40h * 2, 0);\n                    uVar15 = *(iVar11 + 0xc);\n                    uVar2 = *(iVar11 + 8);\n                    cVar1 = *(iVar11 + 0x12);\n                    if (-1 < *(var_24h + -4)) {\n                        fcn.0048b8c0();\n                    }\n                    iVar5 = fcn.004bd7f0(var_24h, cVar1, uVar2, uVar15, puVar13, puVar13 + var_40h);\n                    if (-1 < *(var_24h + -4)) {\n                        fcn.0048b8c0();\n                    }\n                    uVar9 = iVar5 - var_24h;\n                    uVar12 = *(var_24h + -0xc);\n                    if (uVar12 < uVar9) {\n                        uVar15 = 0x524350;\n                        piVar7 = fcn.004bf0c0(0x524364, 0x524350);\n                        fcn.0048bdf0(&var_25h, uVar15, uVar9, uVar12);\n                        fcn.0048bdf0(&var_25h);\n                        uVar15 = fcn.0043b0b0(piVar7);\n                        fcn.004c3600(uVar15);\n                        (**(*piVar7 + 4))();\n                        do {\n                            uVar15 = fcn.004c3a90();\n                            fcn.004c3600(uVar15);\n                        } while( true );\n                    }\n                    fcn.0048d220(uVar9, uVar12 - uVar9, 0);\n                    iVar5 = *(iVar11 + 0x2c);\n                }\n            }\n            if (0 < iVar5) {\n                fcn.0048d3d0(*(iVar11 + 0x11));\n                if (var_40h < 0) {\n                    fcn.0048c440(-var_40h, *(iVar11 + 0x39));\n                    fcn.0048c220(puVar13, iVar4);\n                }\n                else {\n                    fcn.0048c220(puVar13 + var_40h, *(iVar11 + 0x2c));\n                }\n            }\n            uVar9 = var_44h + *(var_24h + -0xc);\n            uVar12 = *(arg_10h + 0xc) & 0xb0;\n            if ((*(arg_10h + 0xc) & 0x200) != 0) {\n                uVar9 = uVar9 + *(iVar11 + 0x18);\n            }\n            var_20h = fcn.0048b900(0, 0, &var_26h);\n            fcn.0048d0f0(uVar9 * 2);\n            uVar3 = *(arg_10h + 8);\n            puVar14 = &var_1ch;\n            bVar10 = uVar12 == 0x10 && uVar9 < uVar3;\n            do {\n                if (*puVar14 < 5) {\n    // switch table (5 cases) at 0x52439c\n                    switch(*puVar14) {\n                    case 0:\n                        if (bVar10) {\ncode_r0x004825ed:\n                            fcn.0048c440(uVar3 - uVar9, arg_14h);\n                        }\n                        break;\n                    case 1:\n                        if (bVar10) goto code_r0x004825ed;\n                        fcn.0048d3d0(arg_14h);\n                        break;\n                    case 2:\n                        if ((*(arg_10h + 0xd) & 2) != 0) {\n                            fcn.0048c220(*(iVar11 + 0x14), *(iVar11 + 0x18));\n                        }\n                        break;\n                    case 3:\n                        if (var_44h != 0) {\n                            fcn.0048d3d0(*var_50h);\n                        }\n                        break;\n                    case 4:\n                        fcn.0048c2e0(&var_24h);\n                    }\n                }\n                puVar14 = puVar14 + 1;\n            } while (puVar14 != &var_18h);\n            if (var_44h < 2) {\n                uVar9 = *(var_20h + -0xc);\n            }\n            else {\n                fcn.0048c220(var_50h + 1, var_44h - 1);\n                uVar9 = *(var_20h + -0xc);\n            }\n            if (uVar9 < uVar3) {\n                if (uVar12 == 0x20) {\n                    fcn.0048c440(uVar3 - uVar9, arg_14h);\n                    uVar9 = uVar3;\n                }\n                else {\n                    fcn.0048bc50(0, 0, uVar3 - uVar9, arg_14h);\n                    uVar9 = uVar3;\n                }\n            }\n            if (var_35h == 0) {\n                uVar12 = (**(*arg_8h + 0x30))(var_20h, uVar9);\n                var_35h = uVar12 != uVar9;\n            }\n            var_34h = arg_ch & 0xffffff00;\n            fcn.0048bdf0(&var_25h);\n            fcn.0048bdf0(&var_25h);\n        }\n    }\ncode_r0x00482396:\n    *(arg_10h + 8) = 0;\n    var_34h = var_34h & 0xffffff00 | var_35h;\n    return CONCAT44(var_34h, arg_8h);\n}\n",
        "token_count": 2491
    },
    "004829d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl fcn.004829d0(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    uint32_t *puVar8;\n    uint32_t *puVar9;\n    unkbyte10 in_stack_00000018;\n    uint uStack116;\n    uint *puStack112;\n    uint32_t auStack108 [2];\n    char *apcStack100 [2];\n    unkbyte10 aStack92 [2];\n    int32_t var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t *var_34h;\n    uint32_t var_30h;\n    uint var_2ch;\n    uchar var_21h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_bp_ch;\n    \n    var_3ch = arg_10h;\n    var_40h = arg_18h;\n    auStack108[0] = arg_14h + 0x6c;\n    puStack112 = 0x4829fb;\n    fcn.004af3a0();\n    uStack116 = 0x482a06;\n    puStack112 = &fcn.004829d0::var_20h;\n    var_34h = fcn.004c0980();\n    uStack116 = 0x482a13;\n    iVar4 = fcn.004386a0();\n    iVar4 = -iVar4;\n    piVar7 = &stack0xffffff90 + iVar4;\n    uVar6 = &fcn.004829d0::var_40h + iVar4 + 3 & 0xfffffff0;\n    var_30h = uVar6;\n    *(&stack0xffffff8c + iVar4) = 0x482a24;\n    var_1ch = fcn.004af100();\n    *(&stack0xffffffa0 + iVar4) = 0;\n    *(&stack0xffffff9c + iVar4) = \"%.*Lf\";\n    *(&stack0xffffff98 + iVar4) = 0x40;\n    *(&stack0xffffffa4 + iVar4) = in_stack_00000018;\n    *(&stack0xffffff94 + iVar4) = uVar6;\n    *(&stack0xffffff90 + iVar4) = &fcn.004829d0::var_1ch;\n    *(&stack0xffffff8c + iVar4) = 0x482a55;\n    iVar5 = fcn.004bde30();\n    if (0x3f < iVar5) {\n        var_44h = iVar5 + 1;\n        *(&stack0xffffff8c + iVar4) = 0x482a70;\n        iVar5 = fcn.004386a0();\n        iVar5 = -iVar5;\n        piVar7 = &stack0xffffff90 + iVar5 + iVar4;\n        uVar6 = &fcn.004829d0::var_40h + iVar5 + iVar4 + 3 & 0xfffffff0;\n        var_30h = uVar6;\n        *(&stack0xffffff8c + iVar5 + iVar4) = 0x482a81;\n        var_1ch = fcn.004af100();\n        iVar3 = var_44h;\n        *(&stack0xffffffa0 + iVar5 + iVar4) = 0;\n        *(&stack0xffffff9c + iVar5 + iVar4) = \"%.*Lf\";\n        *(&stack0xffffffa4 + iVar5 + iVar4) = in_stack_00000018;\n        *(&stack0xffffff98 + iVar5 + iVar4) = iVar3;\n        *(&stack0xffffff94 + iVar5 + iVar4) = uVar6;\n        *(&stack0xffffff90 + iVar5 + iVar4) = &fcn.004829d0::var_1ch;\n        *(&stack0xffffff8c + iVar5 + iVar4) = 0x482aae;\n        iVar5 = fcn.004bde30();\n    }\n    piVar7[1] = 0;\n    piVar7[2] = &stack0xffffffdb;\n    *piVar7 = iVar5;\n    piVar7[-1] = 0x482ac9;\n    fcn.004859b0();\n    if (-1 < *(var_1ch + -4)) {\n        piVar7[-4] = 0x482b97;\n        fcn.004839b0();\n    }\n    iVar4 = *var_34h;\n    piVar7[-1] = var_1ch;\n    iVar5 = iVar5 + var_30h;\n    piVar7[-3] = var_30h;\n    piVar7[-2] = iVar5;\n    pcVar2 = *(iVar4 + 0x2c);\n    puVar8 = piVar7 + -4;\n    piVar7[-4] = 0x482af2;\n    (*pcVar2)();\n    if (var_3ch == '\\0') {\n        *puVar8 = var_40h & 0xffff;\n        puVar8[1] = &fcn.004829d0::var_1ch;\n        puVar8[-2] = arg_ch;\n        puVar8[-1] = arg_14h;\n        puVar8[-3] = arg_8h;\n        puVar8[-4] = 0x482b84;\n        _var_30h = fcn.00482c00(puVar8[-3], puVar8[-2], puVar8[-1], *puVar8, puVar8[1]);\n    }\n    else {\n        *puVar8 = var_40h & 0xffff;\n        puVar8[1] = &fcn.004829d0::var_1ch;\n        puVar8[-2] = arg_ch;\n        puVar8[-1] = arg_14h;\n        puVar8[-3] = arg_8h;\n        puVar8[-4] = 0x482b23;\n        _var_30h = fcn.00483220(puVar8[-3], puVar8[-2], puVar8[-1], *puVar8, puVar8[1]);\n    }\n    if (*0x515a34 == 0) {\n        iVar4 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    puVar9 = puVar8 + -8;\n    if (iVar4 < 1) {\n        var_30h = _var_30h;\n        puVar8[-8] = &stack0xffffffdb;\n        var_2ch = _var_30h >> 0x20;\n        puVar8[-9] = 0x482bc2;\n        fcn.00483f10();\n        puVar9 = puVar8 + -9;\n    }\n    var_30h = _var_30h;\n    var_2ch = _var_30h >> 0x20;\n    puVar9[-1] = 0x482b4d;\n    fcn.004af4c0();\n    return _var_30h;\n}\n",
        "token_count": 1743
    },
    "00482c00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.00482c00(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, int16_t **arg_18h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    bool bVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int16_t *piVar11;\n    uint32_t uVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    uint uVar15;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    ushort *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint8_t var_35h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_26h;\n    uchar var_25h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_ch;\n    \n    var_34h = arg_ch;\n    var_35h = arg_ch;\n    piVar4 = fcn.004c0980(arg_10h + 0x6c);\n    iVar5 = fcn.004522b0();\n    piVar7 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    iVar10 = *piVar7;\n    if (iVar10 == 0) {\n        puVar13 = fcn.004c3430(0x54);\n        puVar13[1] = 0;\n        *puVar13 = 0x52c674;\n        puVar13[2] = 0;\n        puVar13[3] = 0;\n        *(puVar13 + 4) = 0;\n        *(puVar13 + 0x12) = 0;\n        puVar13[6] = 0;\n        puVar13[7] = 0;\n        puVar13[8] = 0;\n        puVar13[9] = 0;\n        puVar13[10] = 0;\n        puVar13[0xb] = 0;\n        puVar13[0xc] = 0;\n        puVar13[0xd] = 0;\n        puVar13[0xe] = 0;\n        *(puVar13 + 0x52) = 0;\n        fcn.004aafb0(arg_10h + 0x6c);\n        fcn.004ad8f0(puVar13, iVar5);\n        iVar10 = *piVar7;\n    }\n    piVar11 = *arg_18h;\n    if (*piVar11 == *(iVar10 + 0x3c)) {\n        var_1ch = *(iVar10 + 0x38);\n        var_4ch = *(iVar10 + 0x28);\n        var_40h = *(iVar10 + 0x2c);\n        if (*(piVar11 + -6) != 0) {\n            piVar11 = piVar11 + 1;\n        }\n    }\n    else {\n        var_1ch = *(iVar10 + 0x34);\n        var_40h = *(iVar10 + 0x24);\n        var_4ch = *(iVar10 + 0x20);\n    }\n    iVar5 = (**(*piVar4 + 0x14))(8, piVar11, piVar11 + *(piVar11 + -6));\n    iVar6 = iVar5 - piVar11 >> 1;\n    if (iVar6 != 0) {\n        var_24h = fcn.004839f0(0, 0, &var_20h);\n        fcn.00485370(iVar5 - piVar11);\n        iVar5 = *(iVar10 + 0x30);\n        iVar14 = iVar6 - iVar5;\n        if (0 < iVar14) {\n            if (iVar5 < 0) {\n                iVar14 = iVar6;\n            }\n            if (*(iVar10 + 0xc) == 0) {\n                fcn.00484700(piVar11, iVar14);\n                iVar5 = *(iVar10 + 0x30);\n            }\n            else {\n                fcn.00483d70(0, *(var_24h + -0xc), iVar14 * 2, 0);\n                uVar15 = *(iVar10 + 0xc);\n                uVar2 = *(iVar10 + 8);\n                uVar1 = *(iVar10 + 0x14);\n                if (-1 < *(var_24h + -4)) {\n                    fcn.004839b0();\n                }\n                iVar5 = fcn.004bd950(var_24h, uVar1, uVar2, uVar15, piVar11, piVar11 + iVar14);\n                if (-1 < *(var_24h + -4)) {\n                    fcn.004839b0();\n                }\n                uVar12 = *(var_24h + -0xc);\n                uVar9 = iVar5 - var_24h >> 1;\n                if (uVar12 < uVar9) {\n                    uVar15 = 0x524734;\n                    piVar7 = fcn.004bf0c0(0x524748, 0x524734);\n                    fcn.00483f30(&var_25h, uVar15, uVar9, uVar12);\n                    uVar15 = fcn.0043b0b0(piVar7);\n                    fcn.004c3600(uVar15);\n                    (**(*piVar7 + 4))();\n                    do {\n                        uVar15 = fcn.004c3a90();\n                        fcn.004c3600(uVar15);\n                    } while( true );\n                }\n                fcn.004854a0(uVar9, uVar12 - uVar9, 0);\n                iVar5 = *(iVar10 + 0x30);\n            }\n        }\n        if (0 < iVar5) {\n            fcn.00485640(*(iVar10 + 0x12));\n            if (iVar14 < 0) {\n                fcn.004845e0(-iVar14, *(iVar10 + 0x3e));\n                fcn.00484390(piVar11, iVar6);\n            }\n            else {\n                fcn.00484390(piVar11 + iVar14, *(iVar10 + 0x30));\n            }\n        }\n        uVar9 = var_40h + *(var_24h + -0xc);\n        uVar12 = *(arg_10h + 0xc) & 0xb0;\n        if ((*(arg_10h + 0xc) & 0x200) != 0) {\n            uVar9 = uVar9 + *(iVar10 + 0x1c);\n        }\n        var_20h = fcn.004839f0(0, 0, &var_26h);\n        fcn.00485370(uVar9 * 2);\n        uVar3 = *(arg_10h + 8);\n        puVar13 = &var_1ch;\n        bVar8 = uVar12 == 0x10 && uVar9 < uVar3;\n        do {\n            if (*puVar13 < 5) {\n    // switch table (5 cases) at 0x524794\n                switch(*puVar13) {\n                case 0:\n                    if (bVar8) {\ncode_r0x00482edd:\n                        fcn.004845e0(uVar3 - uVar9, arg_14h);\n                    }\n                    break;\n                case 1:\n                    if (bVar8) goto code_r0x00482edd;\n                    fcn.00485640(arg_14h);\n                    break;\n                case 2:\n                    if ((*(arg_10h + 0xd) & 2) != 0) {\n                        fcn.00484390(*(iVar10 + 0x18), *(iVar10 + 0x1c));\n                    }\n                    break;\n                case 3:\n                    if (var_40h != 0) {\n                        fcn.00485640(*var_4ch);\n                    }\n                    break;\n                case 4:\n                    fcn.00484470(&var_24h);\n                }\n            }\n            puVar13 = puVar13 + 1;\n        } while (puVar13 != &var_18h);\n        if (var_40h < 2) {\n            uVar9 = *(var_20h + -0xc);\n        }\n        else {\n            fcn.00484390(var_4ch + 1, var_40h - 1);\n            uVar9 = *(var_20h + -0xc);\n        }\n        if (uVar9 < uVar3) {\n            if (uVar12 == 0x20) {\n                fcn.004845e0(uVar3 - uVar9, arg_14h);\n                uVar9 = uVar3;\n            }\n            else {\n                fcn.00483d70(0, 0, uVar3 - uVar9, arg_14h);\n                uVar9 = uVar3;\n            }\n        }\n        if (var_35h == 0) {\n            uVar12 = (**(*arg_8h + 0x30))(var_20h, uVar9);\n            var_35h = uVar12 != uVar9;\n        }\n        var_34h = arg_ch & 0xffffff00;\n        fcn.00483f30(&var_25h);\n        fcn.00483f30(&var_25h);\n    }\n    *(arg_10h + 8) = 0;\n    var_34h = var_34h & 0xffffff00 | var_35h;\n    return CONCAT44(var_34h, arg_8h);\n}\n",
        "token_count": 2278
    },
    "00483220": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.00483220(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, int16_t **arg_18h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    bool bVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int16_t *piVar11;\n    uint32_t uVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    uint uVar15;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    ushort *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint8_t var_35h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_26h;\n    uchar var_25h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_ch;\n    \n    var_34h = arg_ch;\n    var_35h = arg_ch;\n    piVar4 = fcn.004c0980(arg_10h + 0x6c);\n    iVar5 = fcn.004522b0();\n    piVar7 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    iVar10 = *piVar7;\n    if (iVar10 == 0) {\n        puVar13 = fcn.004c3430(0x54);\n        puVar13[1] = 0;\n        *puVar13 = 0x52c684;\n        puVar13[2] = 0;\n        puVar13[3] = 0;\n        *(puVar13 + 4) = 0;\n        *(puVar13 + 0x12) = 0;\n        puVar13[6] = 0;\n        puVar13[7] = 0;\n        puVar13[8] = 0;\n        puVar13[9] = 0;\n        puVar13[10] = 0;\n        puVar13[0xb] = 0;\n        puVar13[0xc] = 0;\n        puVar13[0xd] = 0;\n        puVar13[0xe] = 0;\n        *(puVar13 + 0x52) = 0;\n        fcn.004ab7d0(arg_10h + 0x6c);\n        fcn.004ad8f0(puVar13, iVar5);\n        iVar10 = *piVar7;\n    }\n    piVar11 = *arg_18h;\n    if (*piVar11 == *(iVar10 + 0x3c)) {\n        var_1ch = *(iVar10 + 0x38);\n        var_4ch = *(iVar10 + 0x28);\n        var_40h = *(iVar10 + 0x2c);\n        if (*(piVar11 + -6) != 0) {\n            piVar11 = piVar11 + 1;\n        }\n    }\n    else {\n        var_1ch = *(iVar10 + 0x34);\n        var_40h = *(iVar10 + 0x24);\n        var_4ch = *(iVar10 + 0x20);\n    }\n    iVar5 = (**(*piVar4 + 0x14))(8, piVar11, piVar11 + *(piVar11 + -6));\n    iVar6 = iVar5 - piVar11 >> 1;\n    if (iVar6 != 0) {\n        var_24h = fcn.004839f0(0, 0, &var_20h);\n        fcn.00485370(iVar5 - piVar11);\n        iVar5 = *(iVar10 + 0x30);\n        iVar14 = iVar6 - iVar5;\n        if (0 < iVar14) {\n            if (iVar5 < 0) {\n                iVar14 = iVar6;\n            }\n            if (*(iVar10 + 0xc) == 0) {\n                fcn.00484700(piVar11, iVar14);\n                iVar5 = *(iVar10 + 0x30);\n            }\n            else {\n                fcn.00483d70(0, *(var_24h + -0xc), iVar14 * 2, 0);\n                uVar15 = *(iVar10 + 0xc);\n                uVar2 = *(iVar10 + 8);\n                uVar1 = *(iVar10 + 0x14);\n                if (-1 < *(var_24h + -4)) {\n                    fcn.004839b0();\n                }\n                iVar5 = fcn.004bd950(var_24h, uVar1, uVar2, uVar15, piVar11, piVar11 + iVar14);\n                if (-1 < *(var_24h + -4)) {\n                    fcn.004839b0();\n                }\n                uVar12 = *(var_24h + -0xc);\n                uVar9 = iVar5 - var_24h >> 1;\n                if (uVar12 < uVar9) {\n                    uVar15 = 0x524734;\n                    piVar7 = fcn.004bf0c0(0x524748, 0x524734);\n                    fcn.00483f30(&var_25h, uVar15, uVar9, uVar12);\n                    uVar15 = fcn.0043b0b0(piVar7);\n                    fcn.004c3600(uVar15);\n                    (**(*piVar7 + 4))();\n                    do {\n                        uVar15 = fcn.004c3a90();\n                        fcn.004c3600(uVar15);\n                    } while( true );\n                }\n                fcn.004854a0(uVar9, uVar12 - uVar9, 0);\n                iVar5 = *(iVar10 + 0x30);\n            }\n        }\n        if (0 < iVar5) {\n            fcn.00485640(*(iVar10 + 0x12));\n            if (iVar14 < 0) {\n                fcn.004845e0(-iVar14, *(iVar10 + 0x3e));\n                fcn.00484390(piVar11, iVar6);\n            }\n            else {\n                fcn.00484390(piVar11 + iVar14, *(iVar10 + 0x30));\n            }\n        }\n        uVar9 = var_40h + *(var_24h + -0xc);\n        uVar12 = *(arg_10h + 0xc) & 0xb0;\n        if ((*(arg_10h + 0xc) & 0x200) != 0) {\n            uVar9 = uVar9 + *(iVar10 + 0x1c);\n        }\n        var_20h = fcn.004839f0(0, 0, &var_26h);\n        fcn.00485370(uVar9 * 2);\n        uVar3 = *(arg_10h + 8);\n        puVar13 = &var_1ch;\n        bVar8 = uVar12 == 0x10 && uVar9 < uVar3;\n        do {\n            if (*puVar13 < 5) {\n    // switch table (5 cases) at 0x524780\n                switch(*puVar13) {\n                case 0:\n                    if (bVar8) {\ncode_r0x004834fd:\n                        fcn.004845e0(uVar3 - uVar9, arg_14h);\n                    }\n                    break;\n                case 1:\n                    if (bVar8) goto code_r0x004834fd;\n                    fcn.00485640(arg_14h);\n                    break;\n                case 2:\n                    if ((*(arg_10h + 0xd) & 2) != 0) {\n                        fcn.00484390(*(iVar10 + 0x18), *(iVar10 + 0x1c));\n                    }\n                    break;\n                case 3:\n                    if (var_40h != 0) {\n                        fcn.00485640(*var_4ch);\n                    }\n                    break;\n                case 4:\n                    fcn.00484470(&var_24h);\n                }\n            }\n            puVar13 = puVar13 + 1;\n        } while (puVar13 != &var_18h);\n        if (var_40h < 2) {\n            uVar9 = *(var_20h + -0xc);\n        }\n        else {\n            fcn.00484390(var_4ch + 1, var_40h - 1);\n            uVar9 = *(var_20h + -0xc);\n        }\n        if (uVar9 < uVar3) {\n            if (uVar12 == 0x20) {\n                fcn.004845e0(uVar3 - uVar9, arg_14h);\n                uVar9 = uVar3;\n            }\n            else {\n                fcn.00483d70(0, 0, uVar3 - uVar9, arg_14h);\n                uVar9 = uVar3;\n            }\n        }\n        if (var_35h == 0) {\n            uVar12 = (**(*arg_8h + 0x30))(var_20h, uVar9);\n            var_35h = uVar12 != uVar9;\n        }\n        var_34h = arg_ch & 0xffffff00;\n        fcn.00483f30(&var_25h);\n        fcn.00483f30(&var_25h);\n    }\n    *(arg_10h + 8) = 0;\n    var_34h = var_34h & 0xffffff00 | var_35h;\n    return CONCAT44(var_34h, arg_8h);\n}\n",
        "token_count": 2278
    },
    "00483d40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00483d40(void)\n\n{\n    fcn.00485370(0);\n    return;\n}\n",
        "token_count": 26
    },
    "00484390": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00484390(int32_t *param_1, ushort *param_2, uint32_t param_3)\n\n{\n    int32_t *piVar1;\n    ushort *puVar2;\n    ushort *puVar3;\n    int32_t iVar4;\n    int32_t *extraout_ECX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t *in_stack_ffffffd8;\n    \n    if (param_3 == 0) {\n        return param_1;\n    }\n    puVar3 = *param_1;\n    if (0x1ffffffeU - *(puVar3 + -6) < param_3) {\n        fcn.004bead0(0x523c3e);\n        iVar6 = *(*in_stack_ffffffd8 + -0xc);\n        if (iVar6 != 0) {\n            iVar4 = *extraout_ECX;\n            uVar5 = *(iVar4 + -0xc) + iVar6;\n            if ((uVar5 < *(iVar4 + -8) || uVar5 == *(iVar4 + -8)) && (*(iVar4 + -4) < 1)) {\n                iVar4 = *extraout_ECX;\n                puVar2 = *in_stack_ffffffd8;\n                puVar3 = iVar4 + *(iVar4 + -0xc) * 2;\n            }\n            else {\n                fcn.00485370(uVar5);\n                iVar4 = *extraout_ECX;\n                puVar2 = *in_stack_ffffffd8;\n                puVar3 = iVar4 + *(iVar4 + -0xc) * 2;\n            }\n            if (iVar6 == 1) {\n                *puVar3 = *puVar2;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(puVar3, puVar2, iVar6 * 2);\n                iVar4 = *extraout_ECX;\n            }\n            *(iVar4 + -4) = 0;\n            *(iVar4 + -0xc) = uVar5;\n            *(iVar4 + uVar5 * 2) = 0;\n            return extraout_ECX;\n        }\n        return extraout_ECX;\n    }\n    uVar5 = *(puVar3 + -6) + param_3;\n    if ((*(puVar3 + -4) <= uVar5 && uVar5 != *(puVar3 + -4)) || (piVar1 = puVar3 + -2,  puVar3 = *param_1,  0 < *piVar1)\n       ) {\n        if ((puVar3 <= param_2) && (param_2 <= puVar3 + *(puVar3 + -6))) {\n            iVar6 = param_2 - puVar3;\n            fcn.00485370(uVar5);\n            puVar3 = *param_1;\n            param_2 = iVar6 + puVar3;\n            puVar2 = puVar3 + *(puVar3 + -6);\n            goto joined_r0x0048443d;\n        }\n        fcn.00485370(uVar5);\n        puVar3 = *param_1;\n    }\n    puVar2 = puVar3 + *(puVar3 + -6);\njoined_r0x0048443d:\n    if (param_3 == 1) {\n        *puVar2 = *param_2;\n    }\n    else {\n        sub.msvcrt.dll_memcpy(puVar2, param_2, param_3 * 2);\n        puVar3 = *param_1;\n    }\n    *(puVar3 + -2) = 0;\n    *(puVar3 + -6) = uVar5;\n    puVar3[uVar5] = 0;\n    return param_1;\n}\n",
        "token_count": 832
    },
    "00484470": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00484470(int32_t *param_1, int32_t *param_2)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    iVar2 = *(*param_2 + -0xc);\n    if (iVar2 != 0) {\n        iVar4 = *param_1;\n        uVar5 = *(iVar4 + -0xc) + iVar2;\n        if ((uVar5 < *(iVar4 + -8) || uVar5 == *(iVar4 + -8)) && (*(iVar4 + -4) < 1)) {\n            iVar4 = *param_1;\n            puVar3 = *param_2;\n            puVar1 = iVar4 + *(iVar4 + -0xc) * 2;\n        }\n        else {\n            fcn.00485370(uVar5);\n            iVar4 = *param_1;\n            puVar3 = *param_2;\n            puVar1 = iVar4 + *(iVar4 + -0xc) * 2;\n        }\n        if (iVar2 == 1) {\n            *puVar1 = *puVar3;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar1, puVar3, iVar2 * 2);\n            iVar4 = *param_1;\n        }\n        *(iVar4 + -4) = 0;\n        *(iVar4 + -0xc) = uVar5;\n        *(iVar4 + uVar5 * 2) = 0;\n        return param_1;\n    }\n    return param_1;\n}\n",
        "token_count": 368
    },
    "00484610": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00484610(int32_t *param_1, uint32_t param_2, ushort param_3)\n\n{\n    int32_t iVar1;\n    ushort *puVar2;\n    uint extraout_ECX;\n    uint32_t uVar3;\n    uint uStack56;\n    int32_t *piStack36;\n    \n    iVar1 = *param_1;\n    if (param_2 <= 0x1ffffffeU - *(iVar1 + -0xc)) {\n        uVar3 = *(iVar1 + -0xc) + param_2;\n        if ((uVar3 < *(iVar1 + -8) || uVar3 == *(iVar1 + -8)) && (*(iVar1 + -4) < 1)) {\n            iVar1 = *param_1;\n            puVar2 = iVar1 + *(iVar1 + -0xc) * 2;\n        }\n        else {\n            fcn.00485370(uVar3);\n            iVar1 = *piStack36;\n            puVar2 = iVar1 + *(iVar1 + -0xc) * 2;\n        }\n        if (param_2 == 1) {\n            *puVar2 = param_3;\n        }\n        else if (param_2 != 0) {\n            do {\n                *puVar2 = param_3;\n                puVar2 = puVar2 + 1;\n                param_2 = param_2 - 1;\n            } while (param_2 != 0);\n        }\n        *(iVar1 + -4) = 0;\n        *(iVar1 + -0xc) = uVar3;\n        *(iVar1 + uVar3 * 2) = 0;\n        return 0;\n    }\n    fcn.004bead0(0x523c3e);\n    fcn.004841a0(uStack56, param_2);\n    return extraout_ECX;\n}\n",
        "token_count": 417
    },
    "00485640": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00485640(int32_t *param_1, ushort param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_1;\n    uVar1 = *(iVar2 + -0xc) + 1;\n    if ((*(iVar2 + -8) <= uVar1 && uVar1 != *(iVar2 + -8)) || (0 < *(iVar2 + -4))) {\n        fcn.00485370(uVar1);\n    }\n    iVar2 = *param_1;\n    *(iVar2 + *(iVar2 + -0xc) * 2) = param_2;\n    *(iVar2 + -4) = 0;\n    *(iVar2 + -0xc) = uVar1;\n    *(iVar2 + uVar1 * 2) = 0;\n    return;\n}\n",
        "token_count": 195
    },
    "00486290": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00486290(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.004bb510();\n    in_ECX[0x1f] = 0;\n    *(in_ECX + 0x20) = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    in_ECX[0x23] = 0;\n    in_ECX[0x24] = 0;\n    *in_ECX = 0x527ea8;\n    in_ECX[3] = 0x527ebc;\n    in_ECX[1] = 0;\n    fcn.004bc340(arg_8h);\n    in_ECX[2] = 0x527ed0;\n    in_ECX[3] = 0x527ee4;\n    fcn.004bc340(arg_8h);\n    *in_ECX = 0x52be2c;\n    in_ECX[3] = 0x52be54;\n    in_ECX[2] = 0x52be40;\n    return;\n}\n",
        "token_count": 274
    },
    "00486370": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.00486370(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bb510();\n    param_1[0x1f] = 0;\n    *(param_1 + 0x20) = 0;\n    param_1[0x21] = 0;\n    param_1[0x22] = 0;\n    param_1[0x23] = 0;\n    param_1[0x24] = 0;\n    *param_1 = 0x527ea8;\n    param_1[3] = 0x527ebc;\n    param_1[1] = 0;\n    fcn.004bc340(0);\n    param_1[2] = 0x527ed0;\n    param_1[3] = 0x527ee4;\n    fcn.004bc340(0);\n    *param_1 = 0x52be2c;\n    param_1[3] = 0x52be54;\n    param_1[2] = 0x52be40;\n    return;\n}\n",
        "token_count": 263
    },
    "00486500": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00486500(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.004bc340(arg_ch);\n    iVar1 = arg_8h[3];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[4];\n    fcn.004bc340(arg_ch);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[5];\n    in_ECX[2] = arg_8h[6];\n    return;\n}\n",
        "token_count": 241
    },
    "00486590": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.00486590(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_8h;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.004bc340(0);\n    iVar1 = arg_8h[3];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[4];\n    fcn.004bc340(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[5];\n    in_ECX[2] = arg_8h[6];\n    return;\n}\n",
        "token_count": 241
    },
    "00486770": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n// WARNING: Variable defined which should be unmapped: var_ch_2\n// WARNING: Removing unreachable block (ram,0x00487220)\n// WARNING: Removing unreachable block (ram,0x00487100)\n// WARNING: Removing unreachable block (ram,0x00486fe0)\n// WARNING: Removing unreachable block (ram,0x00486ec0)\n// WARNING: Removing unreachable block (ram,0x00486da0)\n// WARNING: Removing unreachable block (ram,0x00486c80)\n// WARNING: Removing unreachable block (ram,0x00486b60)\n// WARNING: Removing unreachable block (ram,0x00486a40)\n// WARNING: Removing unreachable block (ram,0x00486920)\n// WARNING: Removing unreachable block (ram,0x00486800)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.00486770(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    int32_t *extraout_ECX_03;\n    int32_t *extraout_ECX_04;\n    int32_t *extraout_ECX_05;\n    int32_t *extraout_ECX_06;\n    int32_t *extraout_ECX_07;\n    int32_t *extraout_ECX_08;\n    int32_t *extraout_ECX_09;\n    int32_t *extraout_ECX_10;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    int32_t extraout_EDX_03;\n    int32_t extraout_EDX_04;\n    int32_t extraout_EDX_05;\n    int32_t extraout_EDX_06;\n    int32_t extraout_EDX_07;\n    int32_t extraout_EDX_08;\n    uint8_t *puVar8;\n    int32_t iVar9;\n    uchar *puVar10;\n    ulong uVar11;\n    uint var_1dh;\n    uint var_ch;\n    char cStack989;\n    uint var_1ch_12;\n    int32_t in_stack_fffffc48;\n    uchar *in_stack_fffffc4c;\n    uint32_t var_ch_12;\n    uint var_bp_8h;\n    char cStack873;\n    uint32_t uStack872;\n    uint uStack856;\n    int32_t iStack852;\n    uint var_1dh_11;\n    uint var_ch_11;\n    uint var_1dh_10;\n    uint var_ch_10;\n    uint var_1dh_9;\n    uint var_ch_9;\n    uint var_1dh_8;\n    uint var_ch_8;\n    uint var_1dh_7;\n    uint var_ch_7;\n    uint var_1dh_6;\n    uint var_ch_6;\n    uint var_1dh_5;\n    uint var_ch_5;\n    uint var_1dh_4;\n    uint var_ch_4;\n    uint var_1dh_3;\n    uint var_ch_3;\n    uint var_1dh_2;\n    uint var_ch_2;\n    \n    fcn.00488790();\n    if (var_1dh_2 == '\\0') {\n        return param_1;\n    }\n    piVar5 = *(param_1 + *(*param_1 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x30))();\n        return param_1;\n    }\n    fcn.004be620();\n    if (extraout_EDX == 1) {\n        fcn.004c3600();\n        iVar9 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar9 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return param_1;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.00488790();\n    if (var_1dh_3 == '\\0') {\n        return extraout_ECX;\n    }\n    piVar5 = *(extraout_ECX + *(*extraout_ECX + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 8))();\n        return extraout_ECX;\n    }\n    fcn.004be620();\n    if (extraout_EDX_00 == 1) {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return extraout_ECX;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.00488790();\n    if (var_1dh_4 == '\\0') {\n        return extraout_ECX_00;\n    }\n    piVar5 = *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x28))();\n        return extraout_ECX_00;\n    }\n    fcn.004be620();\n    if (extraout_EDX_01 == 1) {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return extraout_ECX_00;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.00488790();\n    if (var_1dh_5 == '\\0') {\n        return extraout_ECX_01;\n    }\n    piVar5 = *(extraout_ECX_01 + *(*extraout_ECX_01 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x2c))();\n        return extraout_ECX_01;\n    }\n    fcn.004be620();\n    if (extraout_EDX_02 == 1) {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return extraout_ECX_01;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.00488790();\n    if (var_1dh_6 == '\\0') {\n        return extraout_ECX_02;\n    }\n    piVar5 = *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x24))();\n        return extraout_ECX_02;\n    }\n    fcn.004be620();\n    if (extraout_EDX_03 == 1) {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return extraout_ECX_02;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.00488790();\n    if (var_1dh_7 == '\\0') {\n        return extraout_ECX_03;\n    }\n    piVar5 = *(extraout_ECX_03 + *(*extraout_ECX_03 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x14))();\n        return extraout_ECX_03;\n    }\n    fcn.004be620();\n    if (extraout_EDX_04 == 1) {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return extraout_ECX_03;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.00488790();\n    if (var_1dh_8 == '\\0') {\n        return extraout_ECX_04;\n    }\n    piVar5 = *(extraout_ECX_04 + *(*extraout_ECX_04 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0xc))();\n        return extraout_ECX_04;\n    }\n    fcn.004be620();\n    if (extraout_EDX_05 == 1) {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_04 + -0xc);\n        puVar1 = extraout_ECX_04 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_04 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_04 + -0xc);\n        puVar1 = extraout_ECX_04 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_04 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return extraout_ECX_04;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.00488790();\n    if (var_1dh_9 == '\\0') {\n        return extraout_ECX_05;\n    }\n    piVar5 = *(extraout_ECX_05 + *(*extraout_ECX_05 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x18))();\n        return extraout_ECX_05;\n    }\n    fcn.004be620();\n    if (extraout_EDX_06 == 1) {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_05 + -0xc);\n        puVar1 = extraout_ECX_05 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_05 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_05 + -0xc);\n        puVar1 = extraout_ECX_05 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_05 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return extraout_ECX_05;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.00488790();\n    if (var_1dh_10 == '\\0') {\n        return extraout_ECX_06;\n    }\n    piVar5 = *(extraout_ECX_06 + *(*extraout_ECX_06 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x10))();\n        return extraout_ECX_06;\n    }\n    fcn.004be620();\n    if (extraout_EDX_07 == 1) {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return extraout_ECX_06;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.00488790();\n    if (var_1dh_11 == '\\0') {\n        return extraout_ECX_07;\n    }\n    iStack852 = *(*extraout_ECX_07 + -0xc) + extraout_ECX_07;\n    if (*(iStack852 + 0x84) != NULL) {\n        (**(**(iStack852 + 0x84) + 0x1c))();\n        return extraout_ECX_07;\n    }\n    fcn.004be620();\n    if (extraout_EDX_08 == 1) {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_07 + -0xc);\n        puVar1 = extraout_ECX_07 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_07 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_07 + -0xc);\n        puVar1 = extraout_ECX_07 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_07 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return extraout_ECX_07;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    uStack856 = fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    piVar5 = extraout_ECX_08;\n    fcn.00488790(extraout_ECX_08, 0);\n    if (cStack873 == '\\0') {\n        return extraout_ECX_08;\n    }\n    uStack872 = 0;\n    iVar9 = *(*extraout_ECX_08 + -0xc) + extraout_ECX_08;\n    if (*(iVar9 + 0x84) != NULL) {\n        (**(**(iVar9 + 0x84) + 0x20))(*(iVar9 + 0x78), 0xffffffff, 0, 0xffffffff, iVar9, &stack0xfffffc98, 0x4871ae);\ncode_r0x00487329:\n        if (uStack872 == 0) {\n            return extraout_ECX_08;\n        }\n        fcn.004bc4a0(uStack872 | *(extraout_ECX_08 + *(*extraout_ECX_08 + -0xc) + 0x14));\n        return extraout_ECX_08;\n    }\n    uVar11 = fcn.004be620();\n    if (uVar11 >> 0x20 == 1) {\n        fcn.004c3600(uVar11);\n        iVar9 = *(*extraout_ECX_08 + -0xc);\n        puVar1 = extraout_ECX_08 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_08 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        piVar3 = fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600(uVar11);\n        iVar9 = *(*extraout_ECX_08 + -0xc);\n        puVar1 = extraout_ECX_08 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_08 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            goto code_r0x00487329;\n        }\n        fcn.004c3a90();\n        piVar3 = extraout_ECX_08;\n    }\n    fcn.004c3770();\n    uVar4 = fcn.0043b0b0(piVar3);\n    fcn.004c3770();\n    fcn.0043b0b0(uVar4);\n    piVar3 = *(extraout_ECX_09 + *(*extraout_ECX_09 + -0xc) + 0x7c);\n    if (piVar3 != NULL) {\n        if (*(piVar3 + 7) == '\\0') {\n            fcn.00451a70();\n            iVar9 = 10;\n            if (*(*piVar3 + 0x18) != 0x451d20) {\n                cVar2 = (**(*piVar3 + 0x18))(10);\n                iVar9 = cVar2;\n            }\n        }\n        else {\n            iVar9 = *(piVar3 + 0x27);\n        }\n        piVar5 = fcn.00487450(0x4872ce, piVar5, iVar9);\n        return piVar5;\n    }\n    fcn.004be620();\n    extraout_ECX_10[1] = 0;\n    fcn.00488790(extraout_ECX_10, 1);\n    if (cStack989 == '\\0') {\n        if (0 < in_stack_fffffc48) {\n            *in_stack_fffffc4c = 0;\n            iVar9 = extraout_ECX_10[1];\n            goto joined_r0x00487510;\n        }\n        iVar9 = extraout_ECX_10[1];\ncode_r0x004875b6:\n        if (iVar9 != 0) {\n            return extraout_ECX_10;\n        }\n    }\n    else {\n        piVar5 = *(extraout_ECX_10 + *(*extraout_ECX_10 + -0xc) + 0x78);\n        puVar7 = piVar5[2];\n        if (puVar7 <= piVar5[3] && piVar5[3] != puVar7) goto code_r0x0048751e;\ncode_r0x004874e0:\n        uVar6 = (**(*piVar5 + 0x24))();\n        iVar9 = extraout_ECX_10[1];\n        puVar10 = in_stack_fffffc4c;\n        if (iVar9 + 1 < in_stack_fffffc48) {\n            do {\n                in_stack_fffffc4c = puVar10;\n                if (uVar6 == 0xffffffff) {\ncode_r0x0048755e:\n                    uVar6 = 2;\n                    puVar10 = in_stack_fffffc4c;\ncode_r0x00487563:\n                    if (0 < in_stack_fffffc48) {\n                        *puVar10 = 0;\n                    }\n                    if (extraout_ECX_10[1] == 0) {\n                        uVar6 = uVar6 | 4;\n                    }\n                    else if (uVar6 == 0) {\n                        return extraout_ECX_10;\n                    }\n                    goto code_r0x004874a1;\n                }\n                if ((var_ch_12 & 0xff) == uVar6) {\n                    uVar6 = 0;\n                    goto code_r0x00487563;\n                }\n                in_stack_fffffc4c = puVar10 + 1;\n                *puVar10 = uVar6;\n                puVar7 = piVar5[2];\n                puVar8 = piVar5[3];\n                extraout_ECX_10[1] = extraout_ECX_10[1] + 1;\n                if (puVar7 < puVar8) {\n                    puVar7 = puVar7 + 1;\n                    piVar5[2] = puVar7;\n                }\n                else {\n                    iVar9 = (**(*piVar5 + 0x28))();\n                    if (iVar9 == -1) goto code_r0x0048755e;\n                    puVar7 = piVar5[2];\n                    puVar8 = piVar5[3];\n                }\n                if (puVar8 <= puVar7) goto code_r0x004874e0;\ncode_r0x0048751e:\n                iVar9 = extraout_ECX_10[1];\n                uVar6 = *puVar7;\n                puVar10 = in_stack_fffffc4c;\n                if (in_stack_fffffc48 <= iVar9 + 1) break;\n            } while( true );\n        }\n        if (uVar6 == 0xffffffff) {\n            if (0 < in_stack_fffffc48) {\n                *in_stack_fffffc4c = 0;\n                iVar9 = extraout_ECX_10[1];\n            }\n            if (iVar9 == 0) {\n                uVar6 = 6;\n            }\n            else {\n                uVar6 = 2;\n            }\n            goto code_r0x004874a1;\n        }\n        if (in_stack_fffffc48 < 1) goto code_r0x004875b6;\n        *in_stack_fffffc4c = 0;\n        iVar9 = extraout_ECX_10[1];\njoined_r0x00487510:\n        if (iVar9 != 0) {\n            return extraout_ECX_10;\n        }\n    }\n    uVar6 = 4;\ncode_r0x004874a1:\n    fcn.004bc4a0(uVar6 | *(extraout_ECX_10 + *(*extraout_ECX_10 + -0xc) + 0x14));\n    return extraout_ECX_10;\n}\n",
        "token_count": 6437
    },
    "004876f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004876f0(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint var_2ch;\n    uint var_19h;\n    uint var_ch;\n    \n    in_ECX[1] = 0;\n    fcn.00488790();\n    if (var_19h != '\\0') {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        puVar3 = piVar1[2];\n        if (piVar1[3] < puVar3 || piVar1[3] == puVar3) goto code_r0x004877b0;\n        uVar2 = *puVar3;\n        uVar6 = uVar2;\ncode_r0x00487744:\n        if ((arg_ch & 0xff) != uVar2) {\n            do {\n                if (arg_8h[5] < arg_8h[6]) {\n                    *arg_8h[5] = uVar6;\n                    arg_8h[5] = arg_8h[5] + 1;\n                    puVar3 = piVar1[2];\n                    puVar5 = piVar1[3];\n                    in_ECX[1] = in_ECX[1] + 1;\n                    if (puVar5 <= puVar3) goto code_r0x004877f4;\ncode_r0x00487769:\n                    puVar3 = puVar3 + 1;\n                    piVar1[2] = puVar3;\n                }\n                else {\n                    iVar4 = (**(*arg_8h + 0x34))(uVar6);\n                    if (iVar4 == -1) break;\n                    puVar3 = piVar1[2];\n                    puVar5 = piVar1[3];\n                    in_ECX[1] = in_ECX[1] + 1;\n                    if (puVar3 < puVar5) goto code_r0x00487769;\ncode_r0x004877f4:\n                    iVar4 = (**(*piVar1 + 0x28))();\n                    if (iVar4 == -1) goto code_r0x004877c0;\n                    puVar3 = piVar1[2];\n                    puVar5 = piVar1[3];\n                }\n                if (puVar5 <= puVar3) goto code_r0x004877b0;\n                uVar6 = *puVar3;\n                if ((arg_ch & 0xff) == uVar6) break;\n            } while( true );\n        }\n    }\n    if (in_ECX[1] != 0) {\n        return;\n    }\n    uVar6 = 4;\ncode_r0x0048778c:\n    fcn.004bc4a0(uVar6 | *(in_ECX + *(*in_ECX + -0xc) + 0x14));\n    return;\ncode_r0x004877b0:\n    uVar2 = (**(*piVar1 + 0x24))();\n    uVar6 = uVar2 & 0xff;\n    if (uVar2 == 0xffffffff) goto code_r0x004877c0;\n    goto code_r0x00487744;\ncode_r0x004877c0:\n    uVar6 = (-(in_ECX[1] == 0) & 4) + 2;\n    goto code_r0x0048778c;\n}\n",
        "token_count": 834
    },
    "00487ba0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00487ba0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    in_ECX[1] = 0;\n    fcn.00488790();\n    if (var_9h != '\\0') {\n        iVar1 = (**(**(in_ECX + *(*in_ECX + -0xc) + 0x78) + 0x20))(arg_8h, arg_ch);\n        in_ECX[1] = iVar1;\n        if (arg_ch != iVar1) {\n            fcn.004bc4a0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 6);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "00487e00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00487e00(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_39h;\n    uint32_t var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.004bc4a0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 0xfffffffd);\n    fcn.00488790();\n    if ((var_39h != '\\0') && ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0)) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x14))(piVar1, arg_8h, arg_ch, arg_10h, arg_14h, 8);\n        if ((var_34h & stack0xffffffc4) == 0xffffffff) {\n            fcn.004bc4a0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 364
    },
    "00487f50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00487f50(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint32_t var_29h;\n    uint32_t var_24h;\n    uint var_ch;\n    \n    fcn.004bc4a0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 0xfffffffd);\n    fcn.00488790();\n    if ((var_29h != '\\0') && ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0)) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x10))(piVar1, arg_8h, arg_ch, arg_10h, 8);\n        if ((var_24h & stack0xffffffd4) == 0xffffffff) {\n            fcn.004bc4a0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 297
    },
    "00488170": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.00488170(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    param_1[1] = 0;\n    fcn.004bc4a0(*(param_1 + *(*param_1 + -0xc) + 0x14) & 0xfffffffd);\n    fcn.00488790(param_1, 1);\n    if (var_9h != '\\0') {\n        iVar2 = *(*param_1 + -0xc) + param_1;\n        piVar1 = *(iVar2 + 0x78);\n        if (piVar1 == NULL) {\ncode_r0x004881f2:\n            fcn.004bc4a0(*(iVar2 + 0x14) | 1);\n            return param_1;\n        }\n        if (piVar1[1] < piVar1[2]) {\n            piVar1[2] = piVar1[2] - 1;\n        }\n        else {\n            iVar2 = (**(*piVar1 + 0x2c))(0xffffffff);\n            if (iVar2 == -1) {\n                iVar2 = *(*param_1 + -0xc) + param_1;\n                goto code_r0x004881f2;\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 345
    },
    "00488790": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00488bc3: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00488bc8)\n\nint32_t * __thiscall fcn.00488790(uchar *param_1, int32_t *param_2, int32_t *param_3)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    uint8_t uVar3;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uchar *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    uint8_t *puVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    ulong uVar13;\n    uint8_t *puStack184;\n    char cStack153;\n    uchar *puStack120;\n    int32_t in_stack_ffffff8c;\n    uint8_t uStack104;\n    int32_t *piStack40;\n    int32_t *piStack36;\n    \n    *param_1 = 0;\n    iVar5 = *param_2;\n    iVar9 = *(iVar5 + -0xc) + param_2;\n    piVar6 = *(iVar9 + 0x14);\n    if (*(iVar9 + 0x14) != NULL) goto code_r0x00488855;\n    if (*(iVar9 + 0x70) == 0) {\n        if ((param_3 != '\\0') || ((*(iVar9 + 0xd) & 0x10) == 0)) goto code_r0x00488880;\ncode_r0x004887e3:\n        piVar6 = *(iVar9 + 0x78);\n        puVar10 = piVar6[2];\n        if (piVar6[3] < puVar10 || piVar6[3] == puVar10) {\n            iVar12 = (**(*piVar6 + 0x24))();\n            iVar5 = *param_2;\n            iVar11 = *(iVar5 + -0xc) + param_2;\n            iVar9 = *(iVar11 + 0x7c);\n            if (iVar9 == 0) goto code_r0x0048888d;\n            if (iVar12 == -1) {\ncode_r0x0048884f:\n                piVar6 = *(iVar11 + 0x14) | 2;\n                goto code_r0x00488855;\n            }\n            uVar3 = iVar12;\n        }\n        else {\n            iVar9 = *(iVar9 + 0x7c);\n            uVar3 = *puVar10;\n            if (iVar9 == 0) {\ncode_r0x0048888d:\n                uVar13 = fcn.004be620();\n                if (uVar13 >> 0x20 == 1) {\n                    fcn.004c3600(uVar13);\n                    iVar5 = *(*param_2 + -0xc);\n                    puVar1 = param_2 + iVar5 + 0x14;\n                    *puVar1 = *puVar1 | 1;\n                    if ((*(param_2 + iVar5 + 0x10) & 1) != 0) {\n                        fcn.004c3a90();\n                    }\n                    param_2 = fcn.004c3a90();\n                }\n                else {\n                    fcn.004c3600(uVar13);\n                    iVar5 = *(*param_2 + -0xc);\n                    puVar1 = param_2 + iVar5 + 0x14;\n                    *puVar1 = *puVar1 | 1;\n                    if ((*(param_2 + iVar5 + 0x10) & 1) == 0) {\n                        fcn.004c3770();\n                        iVar9 = param_2 + *(*param_2 + -0xc);\n                        goto code_r0x004888c0;\n                    }\n                    fcn.004c3a90();\n                }\n                fcn.004c3770();\n                uVar7 = fcn.0043b0b0(param_2);\n                fcn.004c3770();\n                fcn.0043b0b0(uVar7);\n                *extraout_ECX = 0;\n                iVar5 = *piStack40;\n                iVar9 = *(iVar5 + -0xc) + piStack40;\n                piVar6 = *(iVar9 + 0x14);\n                if (*(iVar9 + 0x14) != NULL) goto code_r0x00488a55;\n                if (*(iVar9 + 0x70) == 0) {\n                    if ((piStack36 != '\\0') || ((*(iVar9 + 0xd) & 0x10) == 0)) goto code_r0x00488a80;\ncode_r0x004889e3:\n                    piVar6 = *(iVar9 + 0x78);\n                    puVar10 = piVar6[2];\n                    if (piVar6[3] < puVar10 || piVar6[3] == puVar10) {\n                        iVar9 = (**(*piVar6 + 0x24))();\n                        iVar5 = *piStack40;\n                        iVar12 = *(iVar5 + -0xc) + piStack40;\n                        puStack120 = *(iVar12 + 0x7c);\n                        if (puStack120 == NULL) goto code_r0x00488a8d;\n                        if (iVar9 == -1) {\ncode_r0x00488a4f:\n                            piVar6 = *(iVar12 + 0x14) | 2;\n                            goto code_r0x00488a55;\n                        }\n                        uVar3 = iVar9;\n                    }\n                    else {\n                        puStack120 = *(iVar9 + 0x7c);\n                        uVar3 = *puVar10;\n                        if (puStack120 == NULL) {\ncode_r0x00488a8d:\n                            uVar13 = fcn.004be620();\n                            if (uVar13 >> 0x20 == 1) {\n                                fcn.004c3600(uVar13);\n                                iVar5 = *(*piStack40 + -0xc);\n                                puVar1 = piStack40 + iVar5 + 0x14;\n                                *puVar1 = *puVar1 | 1;\n                                if ((*(piStack40 + iVar5 + 0x10) & 1) != 0) {\n                                    fcn.004c3a90();\n                                }\n                                piStack40 = fcn.004c3a90();\ncode_r0x00488b65:\n                                fcn.004c3770();\n                                uVar7 = fcn.0043b0b0(piStack40);\n                                fcn.004c3770();\n                                fcn.0043b0b0(uVar7);\n                                piVar6 = *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x7c);\n                                if (piVar6 == NULL) {\n                                    fcn.004be620();\n                                    piVar6 = extraout_ECX_01;\n                                }\n                                else {\n                                    if (*(piVar6 + 7) == '\\0') {\n                                        fcn.00451a70();\n                                        if (*(*piVar6 + 0x18) != 0x451d20) {\n                                            (**(*piVar6 + 0x18))(10);\n                                        }\n                                    }\n                                    in_stack_ffffff8c = 0x488bc8;\n                                    piVar6 = extraout_ECX_00;\n                                }\n                                piVar6[1] = 0;\n                                fcn.00488790(piVar6, 1);\n                                if (cStack153 == '\\0') {\n                                    if (in_stack_ffffff8c < 1) {\n                                        iVar5 = piVar6[1];\n                                    }\n                                    else {\n                                        *puStack120 = 0;\n                                        iVar5 = piVar6[1];\n                                    }\njoined_r0x00488ea7:\n                                    if (iVar5 != 0) {\n                                        return piVar6;\n                                    }\n                                    uVar8 = 4;\ncode_r0x00488c65:\n                                    fcn.004bc4a0(uVar8 | *(piVar6 + *(*piVar6 + -0xc) + 0x14));\n                                    return piVar6;\n                                }\n                                piVar2 = *(piVar6 + *(*piVar6 + -0xc) + 0x78);\n                                puVar10 = piVar2[2];\n                                if (piVar2[3] < puVar10 || piVar2[3] == puVar10) {\n                                    uVar8 = (**(*piVar2 + 0x24))();\n                                }\n                                else {\n                                    uVar8 = *puVar10;\n                                }\n                                iVar9 = piVar6[1];\ncode_r0x00488cbc:\n                                iVar5 = iVar9 + 1;\n                                if (iVar5 < in_stack_ffffff8c) {\n                                    do {\n                                        if (uVar8 == 0xffffffff) {\ncode_r0x00488e30:\n                                            if (0 < in_stack_ffffff8c) {\n                                                *puStack120 = 0;\n                                            }\n                                            iVar9 = piVar6[1];\n                                            goto code_r0x00488e3e;\n                                        }\n                                        puStack184 = piVar2[3];\n                                        puVar10 = piVar2[2];\n                                        if (uStack104 == uVar8) goto code_r0x00488e80;\n                                        iVar5 = (in_stack_ffffff8c - iVar9) + -1;\n                                        iVar12 = puStack184 - puVar10;\n                                        if (iVar5 <= puStack184 - puVar10) {\n                                            iVar12 = iVar5;\n                                        }\n                                        if (iVar12 < 2) {\n                                            *puStack120 = uVar8;\n                                            puVar4 = piVar2[2];\n                                            puStack120 = puStack120 + 1;\n                                            puVar10 = piVar2[3];\n                                            piVar6[1] = piVar6[1] + 1;\n                                            if (puVar4 < puVar10) {\n                                                puVar4 = puVar4 + 1;\n                                                piVar2[2] = puVar4;\n                                            }\n                                            else {\n                                                iVar5 = (**(*piVar2 + 0x28))();\n                                                if (iVar5 == -1) goto code_r0x00488e30;\n                                                puVar4 = piVar2[2];\n                                                puVar10 = piVar2[3];\n                                            }\n                                            if (puVar4 < puVar10) {\n                                                uVar8 = *puVar4;\n                                                iVar9 = piVar6[1];\n                                            }\n                                            else {\n                                                uVar8 = (**(*piVar2 + 0x24))();\n                                                iVar9 = piVar6[1];\n                                            }\n                                            goto code_r0x00488cbc;\n                                        }\n                                        puVar4 = sub.msvcrt.dll_memchr(puVar10, uStack104, iVar12);\n                                        if ((puVar4 == NULL) || (iVar12 = puVar4 - puVar10,  iVar12 != 0)) {\n                                            sub.msvcrt.dll_memcpy(puStack120, puVar10, iVar12);\n                                            puStack184 = piVar2[3];\n                                            iVar9 = piVar6[1];\n                                            puVar4 = piVar2[2] + iVar12;\n                                        }\n                                        iVar9 = iVar9 + iVar12;\n                                        piVar2[2] = puVar4;\n                                        puStack120 = puStack120 + iVar12;\n                                        piVar6[1] = iVar9;\n                                        if (puStack184 <= puVar4) goto code_r0x00488e00;\n                                        uVar8 = *puVar4;\n                                        iVar5 = iVar9 + 1;\n                                        if (in_stack_ffffff8c <= iVar5) break;\n                                    } while( true );\n                                }\n                                if (uVar8 == 0xffffffff) {\n                                    if (0 < in_stack_ffffff8c) {\n                                        *puStack120 = 0;\n                                        uVar8 = (-(piVar6[1] == 0) & 4) + 2;\n                                        goto code_r0x00488c65;\n                                    }\ncode_r0x00488e3e:\n                                    uVar8 = 2;\ncode_r0x00488e43:\n                                    if (iVar9 == 0) {\n                                        uVar8 = uVar8 | 4;\n                                    }\n                                    goto code_r0x00488c65;\n                                }\n                                if (uStack104 != uVar8) {\n                                    if (0 < in_stack_ffffff8c) {\n                                        *puStack120 = 0;\n                                        uVar8 = 4;\n                                        goto code_r0x00488c65;\n                                    }\n                                    uVar8 = 4;\n                                    goto code_r0x00488e43;\n                                }\n                                puStack184 = piVar2[3];\n                                puVar10 = piVar2[2];\ncode_r0x00488e80:\n                                piVar6[1] = iVar5;\n                                if (puVar10 < puStack184) {\n                                    piVar2[2] = puVar10 + 1;\n                                    if (0 < in_stack_ffffff8c) {\n                                        *puStack120 = 0;\n                                        iVar5 = piVar6[1];\n                                    }\n                                }\n                                else {\n                                    (**(*piVar2 + 0x28))();\n                                    if (in_stack_ffffff8c < 1) {\n                                        iVar5 = piVar6[1];\n                                    }\n                                    else {\n                                        *puStack120 = 0;\n                                        iVar5 = piVar6[1];\n                                    }\n                                }\n                                goto joined_r0x00488ea7;\n                            }\n                            fcn.004c3600(uVar13);\n                            iVar5 = *(*piStack40 + -0xc);\n                            puVar1 = piStack40 + iVar5 + 0x14;\n                            *puVar1 = *puVar1 | 1;\n                            if ((*(piStack40 + iVar5 + 0x10) & 1) != 0) {\n                                fcn.004c3a90();\n                                goto code_r0x00488b65;\n                            }\n                            fcn.004c3770();\n                            iVar9 = piStack40 + *(*piStack40 + -0xc);\n                            goto code_r0x00488ac0;\n                        }\n                    }\n                    if ((*(*(puStack120 + 0x18) + uVar3 * 2) & 0x20) != 0) {\n                        do {\n                            puVar10 = piVar6[3];\n                            if (puVar10 <= piVar6[2]) {\n                                iVar5 = (**(*piVar6 + 0x28))();\n                                if (iVar5 != -1) {\n                                    puVar4 = piVar6[2];\n                                    puVar10 = piVar6[3];\n                                    goto code_r0x00488a16;\n                                }\ncode_r0x00488a48:\n                                iVar12 = piStack40 + *(*piStack40 + -0xc);\n                                goto code_r0x00488a4f;\n                            }\n                            puVar4 = piVar6[2] + 1;\n                            piVar6[2] = puVar4;\ncode_r0x00488a16:\n                            if (puVar4 < puVar10) {\n                                uVar3 = *puVar4;\n                            }\n                            else {\n                                iVar5 = (**(*piVar6 + 0x24))();\n                                if (iVar5 == -1) goto code_r0x00488a48;\n                                uVar3 = iVar5;\n                            }\n                        } while ((*(*(puStack120 + 0x18) + uVar3 * 2) & 0x20) != 0);\n                        iVar5 = *piStack40;\n                    }\n                    piStack36 = *(piStack40 + *(iVar5 + -0xc) + 0x14);\n                }\n                else {\n                    fcn.00489bc0();\n                    iVar5 = *piStack40;\n                    iVar9 = *(iVar5 + -0xc) + piStack40;\n                    if ((piStack36 == '\\0') && ((*(iVar9 + 0xd) & 0x10) != 0)) goto code_r0x004889e3;\ncode_r0x00488ac0:\n                    piStack36 = *(iVar9 + 0x14);\n                }\n                piVar6 = piStack36;\n                if (piStack36 == NULL) {\ncode_r0x00488a80:\n                    *extraout_ECX = 1;\n                    return piStack36;\n                }\ncode_r0x00488a55:\n                piVar6 = fcn.004bc4a0(piVar6 | 4);\n                return piVar6;\n            }\n        }\n        if ((*(*(iVar9 + 0x18) + uVar3 * 2) & 0x20) != 0) {\n            do {\n                puVar10 = piVar6[3];\n                if (puVar10 <= piVar6[2]) {\n                    iVar5 = (**(*piVar6 + 0x28))();\n                    if (iVar5 != -1) {\n                        puVar4 = piVar6[2];\n                        puVar10 = piVar6[3];\n                        goto code_r0x00488816;\n                    }\ncode_r0x00488848:\n                    iVar11 = param_2 + *(*param_2 + -0xc);\n                    goto code_r0x0048884f;\n                }\n                puVar4 = piVar6[2] + 1;\n                piVar6[2] = puVar4;\ncode_r0x00488816:\n                if (puVar4 < puVar10) {\n                    uVar3 = *puVar4;\n                }\n                else {\n                    iVar5 = (**(*piVar6 + 0x24))();\n                    if (iVar5 == -1) goto code_r0x00488848;\n                    uVar3 = iVar5;\n                }\n            } while ((*(*(iVar9 + 0x18) + uVar3 * 2) & 0x20) != 0);\n            iVar5 = *param_2;\n        }\n        param_3 = *(param_2 + *(iVar5 + -0xc) + 0x14);\n    }\n    else {\n        fcn.00489bc0();\n        iVar5 = *param_2;\n        iVar9 = *(iVar5 + -0xc) + param_2;\n        if ((param_3 == '\\0') && ((*(iVar9 + 0xd) & 0x10) != 0)) goto code_r0x004887e3;\ncode_r0x004888c0:\n        param_3 = *(iVar9 + 0x14);\n    }\n    piVar6 = param_3;\n    if (param_3 == NULL) {\ncode_r0x00488880:\n        *param_1 = 1;\n        return param_3;\n    }\ncode_r0x00488855:\n    piVar6 = fcn.004bc4a0(piVar6 | 4);\n    return piVar6;\ncode_r0x00488e00:\n    uVar8 = (**(*piVar2 + 0x24))();\n    iVar9 = piVar6[1];\n    goto code_r0x00488cbc;\n}\n",
        "token_count": 4263
    },
    "00488f30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00488f30(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint var_9h;\n    \n    in_ECX[1] = 0;\n    fcn.004bc4a0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 0xfffffffd);\n    fcn.00488790();\n    if (var_9h != '\\0') {\n        iVar3 = *(*in_ECX + -0xc) + in_ECX;\n        piVar1 = *(iVar3 + 0x78);\n        if (piVar1 == NULL) {\ncode_r0x00488fc2:\n            fcn.004bc4a0(*(iVar3 + 0x14) | 1);\n            return;\n        }\n        uVar2 = piVar1[2];\n        if ((piVar1[1] < uVar2) && (arg_8h == *(uVar2 - 1))) {\n            piVar1[2] = uVar2 - 1;\n        }\n        else {\n            iVar3 = (**(*piVar1 + 0x2c))(arg_8h);\n            if (iVar3 == -1) {\n                iVar3 = *(*in_ECX + -0xc) + in_ECX;\n                goto code_r0x00488fc2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 360
    },
    "00489050": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00489050(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    in_ECX[1] = 0;\n    fcn.00488790();\n    if (var_9h != '\\0') {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        iVar2 = piVar1[3] - piVar1[2];\n        if (iVar2 == 0) {\n            iVar2 = (**(*piVar1 + 0x1c))();\n        }\n        if (0 < iVar2) {\n            if (arg_ch < iVar2) {\n                iVar2 = arg_ch;\n            }\n            iVar2 = (**(**(in_ECX + *(*in_ECX + -0xc) + 0x78) + 0x20))(arg_8h, iVar2);\n            in_ECX[1] = iVar2;\n            return iVar2;\n        }\n        if (iVar2 == -1) {\n            fcn.004bc4a0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 2);\n        }\n    }\n    return in_ECX[1];\n}\n",
        "token_count": 337
    },
    "00489240": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00489240(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.004bb510();\n    in_ECX[0x1e] = 0;\n    *(in_ECX + 0x1f) = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    in_ECX[0x23] = 0;\n    *in_ECX = 0x52be68;\n    in_ECX[2] = 0x52be7c;\n    in_ECX[1] = 0;\n    fcn.004bc340(arg_8h);\n    return;\n}\n",
        "token_count": 190
    },
    "004892d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.004892d0(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bb510();\n    param_1[0x1e] = 0;\n    *(param_1 + 0x1f) = 0;\n    param_1[0x20] = 0;\n    param_1[0x21] = 0;\n    param_1[0x22] = 0;\n    param_1[0x23] = 0;\n    *param_1 = 0x52be68;\n    param_1[2] = 0x52be7c;\n    param_1[1] = 0;\n    fcn.004bc340(0);\n    return;\n}\n",
        "token_count": 182
    },
    "00489720": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00489720(uint *arg_8h)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    int32_t *extraout_ECX_03;\n    int32_t *extraout_ECX_04;\n    int32_t *extraout_ECX_05;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX_06;\n    uint8_t *puVar8;\n    int32_t iVar9;\n    uchar *puVar10;\n    int32_t unaff_EDI;\n    ulong uVar11;\n    char cStack653;\n    int32_t in_stack_fffffd98;\n    uchar *in_stack_fffffd9c;\n    uint32_t uStack604;\n    uint uVar12;\n    char cStack537;\n    uint32_t uStack536;\n    uint uStack520;\n    int32_t iStack516;\n    int32_t iStack512;\n    uchar *puStack508;\n    int32_t *piStack504;\n    uint uStack500;\n    int32_t *piStack496;\n    uint uStack492;\n    int32_t iStack488;\n    uchar *puStack484;\n    uint uStack480;\n    char cStack453;\n    uint32_t uStack452;\n    uint uStack436;\n    int32_t iStack432;\n    int32_t iStack428;\n    uchar *puStack424;\n    int32_t *piStack420;\n    uint uStack416;\n    int32_t *piStack412;\n    uint uStack408;\n    int32_t iStack404;\n    uchar *puStack400;\n    uint uStack396;\n    char cStack369;\n    uint32_t uStack368;\n    uint uStack352;\n    int32_t iStack348;\n    int32_t iStack344;\n    uchar *puStack340;\n    int32_t *piStack336;\n    uint uStack332;\n    int32_t *piStack328;\n    uint uStack324;\n    int32_t iStack320;\n    uchar *puStack316;\n    uint uStack312;\n    char cStack285;\n    uint32_t uStack284;\n    uint uStack268;\n    int32_t iStack264;\n    int32_t iStack260;\n    uchar *puStack256;\n    int32_t *piStack252;\n    uint uStack248;\n    int32_t *piStack244;\n    uint uStack240;\n    int32_t iStack236;\n    uchar *puStack232;\n    uint uStack228;\n    char cStack201;\n    uint32_t uStack200;\n    uint uStack184;\n    int32_t iStack180;\n    int32_t iStack176;\n    uchar *puStack172;\n    int32_t *piStack168;\n    uint uStack164;\n    int32_t *piStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uchar *puStack148;\n    uint uStack144;\n    char cStack117;\n    uint32_t uStack116;\n    uint uStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    uchar *puStack88;\n    int32_t *piStack84;\n    uint uStack80;\n    int32_t *piStack76;\n    uint uStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    uint *puStack60;\n    uint32_t var_21h;\n    uint var_1ch;\n    uint var_ch;\n    \n    uStack72 = 0;\n    uStack80 = 0x48973e;\n    piStack76 = in_ECX;\n    fcn.00488790();\n    if (var_21h == '\\0') {\n        return in_ECX;\n    }\n    stack0xffffffdc = 0;\n    iStack96 = *(*in_ECX + -0xc) + in_ECX;\n    if (*(iStack96 + 0x84) != NULL) {\n        piStack84 = *(iStack96 + 0x78);\n        puStack60 = &fcn.00489720::var_1ch;\n        iStack64 = &fcn.00489720::var_21h + 1;\n        piStack76 = NULL;\n        uStack72 = 0xffffffff;\n        uStack80 = 0xffffffff;\n        puStack88 = 0x489796;\n        iStack68 = iStack96;\n        (**(**(iStack96 + 0x84) + 0xc))();\n        *arg_8h = var_1ch;\ncode_r0x004897a1:\n        if (stack0xffffffdc == 0) {\n            return in_ECX;\n        }\n        piStack84 = stack0xffffffdc | *(in_ECX + *(*in_ECX + -0xc) + 0x14);\n        puStack88 = 0x4897c6;\n        fcn.004bc4a0();\n        return in_ECX;\n    }\n    puStack88 = 0x4897da;\n    uVar11 = fcn.004be620();\n    piStack84 = uVar11;\n    if (uVar11 >> 0x20 == 1) {\n        puStack88 = 0x489804;\n        fcn.004c3600();\n        iVar9 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar9 + 0x10) & 1) == 0) {\n            puStack88 = 0x489818;\n            fcn.004c3a90();\n        }\n        puStack88 = 0x48981d;\n        in_ECX = fcn.004c3a90();\n    }\n    else {\n        puStack88 = 0x4897e7;\n        fcn.004c3600();\n        unaff_EDI = *(*in_ECX + -0xc) + in_ECX;\n        *(unaff_EDI + 0x14) = *(unaff_EDI + 0x14) | 1;\n        if ((*(unaff_EDI + 0x10) & 1) == 0) {\n            puStack88 = 0x4897fd;\n            fcn.004c3770();\n            goto code_r0x004897a1;\n        }\n        puStack88 = 0x489826;\n        fcn.004c3a90();\n    }\n    puStack88 = 0x48982b;\n    fcn.004c3770();\n    puStack88 = 0x489833;\n    piStack84 = in_ECX;\n    uStack100 = fcn.0043b0b0();\n    puStack88 = 0x48983a;\n    fcn.004c3770();\n    puStack88 = 0x489842;\n    piStack84 = uStack100;\n    fcn.0043b0b0();\n    uStack156 = 0;\n    uStack164 = 0x486d2e;\n    piStack160 = extraout_ECX_06;\n    iStack92 = unaff_EDI;\n    puStack88 = &stack0xfffffffc;\n    fcn.00488790();\n    if (cStack117 == '\\0') {\n        return extraout_ECX_06;\n    }\n    uStack116 = 0;\n    iStack180 = *(*extraout_ECX_06 + -0xc) + extraout_ECX_06;\n    if (*(iStack180 + 0x84) != NULL) {\n        piStack168 = *(iStack180 + 0x78);\n        uStack144 = uStack80;\n        puStack148 = &stack0xffffff8c;\n        piStack160 = NULL;\n        uStack156 = 0xffffffff;\n        uStack164 = 0xffffffff;\n        puStack172 = 0x486d86;\n        iStack152 = iStack180;\n        (**(**(iStack180 + 0x84) + 0x14))();\ncode_r0x00486d89:\n        if (uStack116 == 0) {\n            return extraout_ECX_06;\n        }\n        piStack168 = uStack116 | *(extraout_ECX_06 + *(*extraout_ECX_06 + -0xc) + 0x14);\n        puStack172 = 0x486db2;\n        fcn.004bc4a0();\n        return extraout_ECX_06;\n    }\n    puStack172 = 0x486dc6;\n    uVar11 = fcn.004be620();\n    piStack168 = uVar11;\n    if (uVar11 >> 0x20 == 1) {\n        puStack172 = 0x486df0;\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            puStack172 = 0x486e04;\n            fcn.004c3a90();\n        }\n        puStack172 = 0x486e09;\n        piVar5 = fcn.004c3a90();\n    }\n    else {\n        puStack172 = 0x486dd3;\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            puStack172 = 0x486de9;\n            fcn.004c3770();\n            goto code_r0x00486d89;\n        }\n        puStack172 = 0x486e12;\n        fcn.004c3a90();\n        piVar5 = extraout_ECX_06;\n    }\n    puStack172 = 0x486e17;\n    fcn.004c3770();\n    puStack172 = 0x486e1f;\n    piStack168 = piVar5;\n    uStack184 = fcn.0043b0b0();\n    puStack172 = 0x486e26;\n    fcn.004c3770();\n    puStack172 = 0x486e2e;\n    piStack168 = uStack184;\n    fcn.0043b0b0();\n    uStack240 = 0;\n    uStack248 = 0x486e4e;\n    piStack244 = extraout_ECX;\n    iStack176 = unaff_EDI;\n    puStack172 = &stack0xffffffa8;\n    fcn.00488790();\n    if (cStack201 == '\\0') {\n        return extraout_ECX;\n    }\n    uStack200 = 0;\n    iStack264 = *(*extraout_ECX + -0xc) + extraout_ECX;\n    if (*(iStack264 + 0x84) != NULL) {\n        piStack252 = *(iStack264 + 0x78);\n        uStack228 = uStack164;\n        puStack232 = &stack0xffffff38;\n        piStack244 = NULL;\n        uStack240 = 0xffffffff;\n        uStack248 = 0xffffffff;\n        puStack256 = 0x486ea6;\n        iStack236 = iStack264;\n        (**(**(iStack264 + 0x84) + 0xc))();\ncode_r0x00486ea9:\n        if (uStack200 == 0) {\n            return extraout_ECX;\n        }\n        piStack252 = uStack200 | *(extraout_ECX + *(*extraout_ECX + -0xc) + 0x14);\n        puStack256 = 0x486ed2;\n        fcn.004bc4a0();\n        return extraout_ECX;\n    }\n    puStack256 = 0x486ee6;\n    uVar11 = fcn.004be620();\n    piStack252 = uVar11;\n    if (uVar11 >> 0x20 == 1) {\n        puStack256 = 0x486f10;\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            puStack256 = 0x486f24;\n            fcn.004c3a90();\n        }\n        puStack256 = 0x486f29;\n        piVar5 = fcn.004c3a90();\n    }\n    else {\n        puStack256 = 0x486ef3;\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            puStack256 = 0x486f09;\n            fcn.004c3770();\n            goto code_r0x00486ea9;\n        }\n        puStack256 = 0x486f32;\n        fcn.004c3a90();\n        piVar5 = extraout_ECX;\n    }\n    puStack256 = 0x486f37;\n    fcn.004c3770();\n    puStack256 = 0x486f3f;\n    piStack252 = piVar5;\n    uStack268 = fcn.0043b0b0();\n    puStack256 = 0x486f46;\n    fcn.004c3770();\n    puStack256 = 0x486f4e;\n    piStack252 = uStack268;\n    fcn.0043b0b0();\n    uStack324 = 0;\n    uStack332 = 0x486f6e;\n    piStack328 = extraout_ECX_00;\n    iStack260 = unaff_EDI;\n    puStack256 = &stack0xffffff54;\n    fcn.00488790();\n    if (cStack285 == '\\0') {\n        return extraout_ECX_00;\n    }\n    uStack284 = 0;\n    iStack348 = *(*extraout_ECX_00 + -0xc) + extraout_ECX_00;\n    if (*(iStack348 + 0x84) != NULL) {\n        piStack336 = *(iStack348 + 0x78);\n        uStack312 = uStack248;\n        puStack316 = &stack0xfffffee4;\n        piStack328 = NULL;\n        uStack324 = 0xffffffff;\n        uStack332 = 0xffffffff;\n        puStack340 = 0x486fc6;\n        iStack320 = iStack348;\n        (**(**(iStack348 + 0x84) + 0x18))();\ncode_r0x00486fc9:\n        if (uStack284 == 0) {\n            return extraout_ECX_00;\n        }\n        piStack336 = uStack284 | *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x14);\n        puStack340 = 0x486ff2;\n        fcn.004bc4a0();\n        return extraout_ECX_00;\n    }\n    puStack340 = 0x487006;\n    uVar11 = fcn.004be620();\n    piStack336 = uVar11;\n    if (uVar11 >> 0x20 == 1) {\n        puStack340 = 0x487030;\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            puStack340 = 0x487044;\n            fcn.004c3a90();\n        }\n        puStack340 = 0x487049;\n        piVar5 = fcn.004c3a90();\n    }\n    else {\n        puStack340 = 0x487013;\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            puStack340 = 0x487029;\n            fcn.004c3770();\n            goto code_r0x00486fc9;\n        }\n        puStack340 = 0x487052;\n        fcn.004c3a90();\n        piVar5 = extraout_ECX_00;\n    }\n    puStack340 = 0x487057;\n    fcn.004c3770();\n    puStack340 = 0x48705f;\n    piStack336 = piVar5;\n    uStack352 = fcn.0043b0b0();\n    puStack340 = 0x487066;\n    fcn.004c3770();\n    puStack340 = 0x48706e;\n    piStack336 = uStack352;\n    fcn.0043b0b0();\n    uStack408 = 0;\n    uStack416 = 0x48708e;\n    piStack412 = extraout_ECX_01;\n    iStack344 = unaff_EDI;\n    puStack340 = &stack0xffffff00;\n    fcn.00488790();\n    if (cStack369 == '\\0') {\n        return extraout_ECX_01;\n    }\n    uStack368 = 0;\n    iStack432 = *(*extraout_ECX_01 + -0xc) + extraout_ECX_01;\n    if (*(iStack432 + 0x84) != NULL) {\n        piStack420 = *(iStack432 + 0x78);\n        uStack396 = uStack332;\n        puStack400 = &stack0xfffffe90;\n        piStack412 = NULL;\n        uStack408 = 0xffffffff;\n        uStack416 = 0xffffffff;\n        puStack424 = 0x4870e6;\n        iStack404 = iStack432;\n        (**(**(iStack432 + 0x84) + 0x10))();\ncode_r0x004870e9:\n        if (uStack368 == 0) {\n            return extraout_ECX_01;\n        }\n        piStack420 = uStack368 | *(extraout_ECX_01 + *(*extraout_ECX_01 + -0xc) + 0x14);\n        puStack424 = 0x487112;\n        fcn.004bc4a0();\n        return extraout_ECX_01;\n    }\n    puStack424 = 0x487126;\n    uVar11 = fcn.004be620();\n    piStack420 = uVar11;\n    if (uVar11 >> 0x20 == 1) {\n        puStack424 = 0x487150;\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            puStack424 = 0x487164;\n            fcn.004c3a90();\n        }\n        puStack424 = 0x487169;\n        piVar5 = fcn.004c3a90();\n    }\n    else {\n        puStack424 = 0x487133;\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            puStack424 = 0x487149;\n            fcn.004c3770();\n            goto code_r0x004870e9;\n        }\n        puStack424 = 0x487172;\n        fcn.004c3a90();\n        piVar5 = extraout_ECX_01;\n    }\n    puStack424 = 0x487177;\n    fcn.004c3770();\n    puStack424 = 0x48717f;\n    piStack420 = piVar5;\n    uStack436 = fcn.0043b0b0();\n    puStack424 = 0x487186;\n    fcn.004c3770();\n    puStack424 = 0x48718e;\n    piStack420 = uStack436;\n    fcn.0043b0b0();\n    uStack492 = 0;\n    uStack500 = 0x4871ae;\n    piStack496 = extraout_ECX_02;\n    iStack428 = unaff_EDI;\n    puStack424 = &stack0xfffffeac;\n    fcn.00488790();\n    if (cStack453 == '\\0') {\n        return extraout_ECX_02;\n    }\n    uStack452 = 0;\n    iStack516 = *(*extraout_ECX_02 + -0xc) + extraout_ECX_02;\n    if (*(iStack516 + 0x84) != NULL) {\n        piStack504 = *(iStack516 + 0x78);\n        uStack480 = uStack416;\n        puStack484 = &stack0xfffffe3c;\n        piStack496 = NULL;\n        uStack492 = 0xffffffff;\n        uStack500 = 0xffffffff;\n        puStack508 = 0x487206;\n        iStack488 = iStack516;\n        (**(**(iStack516 + 0x84) + 0x1c))();\ncode_r0x00487209:\n        if (uStack452 == 0) {\n            return extraout_ECX_02;\n        }\n        piStack504 = uStack452 | *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x14);\n        puStack508 = 0x487232;\n        fcn.004bc4a0();\n        return extraout_ECX_02;\n    }\n    puStack508 = 0x487246;\n    uVar11 = fcn.004be620();\n    piStack504 = uVar11;\n    if (uVar11 >> 0x20 == 1) {\n        puStack508 = 0x487270;\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            puStack508 = 0x487284;\n            fcn.004c3a90();\n        }\n        puStack508 = 0x487289;\n        piVar5 = fcn.004c3a90();\n    }\n    else {\n        puStack508 = 0x487253;\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            puStack508 = 0x487269;\n            fcn.004c3770();\n            goto code_r0x00487209;\n        }\n        puStack508 = 0x487292;\n        fcn.004c3a90();\n        piVar5 = extraout_ECX_02;\n    }\n    puStack508 = 0x487297;\n    fcn.004c3770();\n    puStack508 = 0x48729f;\n    piStack504 = piVar5;\n    uStack520 = fcn.0043b0b0();\n    puStack508 = 0x4872a6;\n    fcn.004c3770();\n    puStack508 = 0x4872ae;\n    piStack504 = uStack520;\n    fcn.0043b0b0();\n    uVar12 = 0x4872ce;\n    piVar5 = extraout_ECX_03;\n    iStack512 = unaff_EDI;\n    puStack508 = &stack0xfffffe58;\n    fcn.00488790(extraout_ECX_03, 0);\n    if (cStack537 == '\\0') {\n        return extraout_ECX_03;\n    }\n    uStack536 = 0;\n    iVar9 = *(*extraout_ECX_03 + -0xc) + extraout_ECX_03;\n    if (*(iVar9 + 0x84) != NULL) {\n        (**(**(iVar9 + 0x84) + 0x20))(*(iVar9 + 0x78), 0xffffffff, 0, 0xffffffff, iVar9, &stack0xfffffde8, uStack500);\ncode_r0x00487329:\n        if (uStack536 == 0) {\n            return extraout_ECX_03;\n        }\n        fcn.004bc4a0(uStack536 | *(extraout_ECX_03 + *(*extraout_ECX_03 + -0xc) + 0x14));\n        return extraout_ECX_03;\n    }\n    uVar11 = fcn.004be620();\n    if (uVar11 >> 0x20 == 1) {\n        fcn.004c3600(uVar11);\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        piVar3 = fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600(uVar11);\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            goto code_r0x00487329;\n        }\n        fcn.004c3a90();\n        piVar3 = extraout_ECX_03;\n    }\n    fcn.004c3770();\n    uVar4 = fcn.0043b0b0(piVar3);\n    fcn.004c3770();\n    fcn.0043b0b0(uVar4);\n    piVar3 = *(extraout_ECX_04 + *(*extraout_ECX_04 + -0xc) + 0x7c);\n    if (piVar3 != NULL) {\n        if (*(piVar3 + 7) == '\\0') {\n            fcn.00451a70();\n            iVar9 = 10;\n            if (*(*piVar3 + 0x18) != 0x451d20) {\n                cVar2 = (**(*piVar3 + 0x18))(10);\n                iVar9 = cVar2;\n            }\n        }\n        else {\n            iVar9 = *(piVar3 + 0x27);\n        }\n        piVar5 = fcn.00487450(uVar12, piVar5, iVar9);\n        return piVar5;\n    }\n    fcn.004be620();\n    extraout_ECX_05[1] = 0;\n    fcn.00488790(extraout_ECX_05, 1);\n    if (cStack653 == '\\0') {\n        if (0 < in_stack_fffffd98) {\n            *in_stack_fffffd9c = 0;\n            iVar9 = extraout_ECX_05[1];\n            goto joined_r0x00487510;\n        }\n        iVar9 = extraout_ECX_05[1];\ncode_r0x004875b6:\n        if (iVar9 != 0) {\n            return extraout_ECX_05;\n        }\n    }\n    else {\n        piVar5 = *(extraout_ECX_05 + *(*extraout_ECX_05 + -0xc) + 0x78);\n        puVar7 = piVar5[2];\n        if (puVar7 <= piVar5[3] && piVar5[3] != puVar7) goto code_r0x0048751e;\ncode_r0x004874e0:\n        uVar6 = (**(*piVar5 + 0x24))();\n        iVar9 = extraout_ECX_05[1];\n        puVar10 = in_stack_fffffd9c;\n        if (iVar9 + 1 < in_stack_fffffd98) {\n            do {\n                in_stack_fffffd9c = puVar10;\n                if (uVar6 == 0xffffffff) {\ncode_r0x0048755e:\n                    uVar6 = 2;\n                    puVar10 = in_stack_fffffd9c;\ncode_r0x00487563:\n                    if (0 < in_stack_fffffd98) {\n                        *puVar10 = 0;\n                    }\n                    if (extraout_ECX_05[1] == 0) {\n                        uVar6 = uVar6 | 4;\n                    }\n                    else if (uVar6 == 0) {\n                        return extraout_ECX_05;\n                    }\n                    goto code_r0x004874a1;\n                }\n                if ((uStack604 & 0xff) == uVar6) {\n                    uVar6 = 0;\n                    goto code_r0x00487563;\n                }\n                in_stack_fffffd9c = puVar10 + 1;\n                *puVar10 = uVar6;\n                puVar7 = piVar5[2];\n                puVar8 = piVar5[3];\n                extraout_ECX_05[1] = extraout_ECX_05[1] + 1;\n                if (puVar7 < puVar8) {\n                    puVar7 = puVar7 + 1;\n                    piVar5[2] = puVar7;\n                }\n                else {\n                    iVar9 = (**(*piVar5 + 0x28))();\n                    if (iVar9 == -1) goto code_r0x0048755e;\n                    puVar7 = piVar5[2];\n                    puVar8 = piVar5[3];\n                }\n                if (puVar8 <= puVar7) goto code_r0x004874e0;\ncode_r0x0048751e:\n                iVar9 = extraout_ECX_05[1];\n                uVar6 = *puVar7;\n                puVar10 = in_stack_fffffd9c;\n                if (in_stack_fffffd98 <= iVar9 + 1) break;\n            } while( true );\n        }\n        if (uVar6 == 0xffffffff) {\n            if (0 < in_stack_fffffd98) {\n                *in_stack_fffffd9c = 0;\n                iVar9 = extraout_ECX_05[1];\n            }\n            if (iVar9 == 0) {\n                uVar6 = 6;\n            }\n            else {\n                uVar6 = 2;\n            }\n            goto code_r0x004874a1;\n        }\n        if (in_stack_fffffd98 < 1) goto code_r0x004875b6;\n        *in_stack_fffffd9c = 0;\n        iVar9 = extraout_ECX_05[1];\njoined_r0x00487510:\n        if (iVar9 != 0) {\n            return extraout_ECX_05;\n        }\n    }\n    uVar6 = 4;\ncode_r0x004874a1:\n    fcn.004bc4a0(uVar6 | *(extraout_ECX_05 + *(*extraout_ECX_05 + -0xc) + 0x14));\n    return extraout_ECX_05;\n}\n",
        "token_count": 7437
    },
    "00489880": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00487220)\n// WARNING: Removing unreachable block (ram,0x00487100)\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00489880(ushort *arg_8h)\n\n{\n    uint32_t *puVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint8_t *puVar8;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX_03;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    uint8_t *puVar9;\n    int32_t extraout_EDX_01;\n    int32_t iVar10;\n    uchar *puVar11;\n    ulong uVar12;\n    char cStack401;\n    int32_t in_stack_fffffe94;\n    uchar *in_stack_fffffe98;\n    uint32_t uStack352;\n    uint uVar13;\n    char cStack285;\n    uint32_t auStack284 [4];\n    uint uStack268;\n    int32_t iStack264;\n    char cStack201;\n    char cStack117;\n    uint var_21h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    fcn.00488790();\n    if (var_21h == '\\0') {\n        return in_ECX;\n    }\n    bVar2 = false;\n    piVar6 = *(in_ECX + *(*in_ECX + -0xc) + 0x84);\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 0xc))();\n        if (var_1ch < -0x8000) {\n            bVar2 = true;\n            *arg_8h = 0x8000;\n        }\n        else {\n            if (0x7fff < var_1ch) {\n                *arg_8h = 0x7fff;\n                goto code_r0x0048994d;\n            }\n            *arg_8h = var_1ch;\n        }\ncode_r0x0048991c:\n        if (!bVar2) {\n            return in_ECX;\n        }\ncode_r0x0048994d:\n        fcn.004bc4a0();\n        return in_ECX;\n    }\n    fcn.004be620();\n    if (extraout_EDX_01 == 1) {\n        fcn.004c3600();\n        iVar10 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar10 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            goto code_r0x0048991c;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.00488790();\n    if (cStack117 == '\\0') {\n        return extraout_ECX_03;\n    }\n    piVar6 = *(extraout_ECX_03 + *(*extraout_ECX_03 + -0xc) + 0x84);\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 0x10))();\n        return extraout_ECX_03;\n    }\n    fcn.004be620();\n    if (extraout_EDX == 1) {\n        fcn.004c3600();\n        iVar10 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar10 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return extraout_ECX_03;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.00488790();\n    if (cStack201 == '\\0') {\n        return extraout_ECX;\n    }\n    iStack264 = *(*extraout_ECX + -0xc) + extraout_ECX;\n    if (*(iStack264 + 0x84) != NULL) {\n        (**(**(iStack264 + 0x84) + 0x1c))();\n        return extraout_ECX;\n    }\n    fcn.004be620();\n    if (extraout_EDX_00 == 1) {\n        fcn.004c3600();\n        iVar10 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar10 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return extraout_ECX;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    uStack268 = fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    uVar13 = 0x4872ce;\n    piVar6 = extraout_ECX_00;\n    fcn.00488790(extraout_ECX_00, 0);\n    if (cStack285 == '\\0') {\n        return extraout_ECX_00;\n    }\n    auStack284[0] = 0;\n    iVar10 = *(*extraout_ECX_00 + -0xc) + extraout_ECX_00;\n    if (*(iVar10 + 0x84) != NULL) {\n        (**(**(iVar10 + 0x84) + 0x20))(*(iVar10 + 0x78), 0xffffffff, 0, 0xffffffff, iVar10, auStack284, 0x4871ae);\ncode_r0x00487329:\n        if (auStack284[0] == 0) {\n            return extraout_ECX_00;\n        }\n        fcn.004bc4a0(auStack284[0] | *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x14));\n        return extraout_ECX_00;\n    }\n    uVar12 = fcn.004be620();\n    if (uVar12 >> 0x20 == 1) {\n        fcn.004c3600(uVar12);\n        iVar10 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        piVar4 = fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600(uVar12);\n        iVar10 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            goto code_r0x00487329;\n        }\n        fcn.004c3a90();\n        piVar4 = extraout_ECX_00;\n    }\n    fcn.004c3770();\n    uVar5 = fcn.0043b0b0(piVar4);\n    fcn.004c3770();\n    fcn.0043b0b0(uVar5);\n    piVar4 = *(extraout_ECX_01 + *(*extraout_ECX_01 + -0xc) + 0x7c);\n    if (piVar4 != NULL) {\n        if (*(piVar4 + 7) == '\\0') {\n            fcn.00451a70();\n            iVar10 = 10;\n            if (*(*piVar4 + 0x18) != 0x451d20) {\n                cVar3 = (**(*piVar4 + 0x18))(10);\n                iVar10 = cVar3;\n            }\n        }\n        else {\n            iVar10 = *(piVar4 + 0x27);\n        }\n        piVar6 = fcn.00487450(uVar13, piVar6, iVar10);\n        return piVar6;\n    }\n    fcn.004be620();\n    extraout_ECX_02[1] = 0;\n    fcn.00488790(extraout_ECX_02, 1);\n    if (cStack401 == '\\0') {\n        if (0 < in_stack_fffffe94) {\n            *in_stack_fffffe98 = 0;\n            iVar10 = extraout_ECX_02[1];\n            goto joined_r0x00487510;\n        }\n        iVar10 = extraout_ECX_02[1];\ncode_r0x004875b6:\n        if (iVar10 != 0) {\n            return extraout_ECX_02;\n        }\n    }\n    else {\n        piVar6 = *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x78);\n        puVar8 = piVar6[2];\n        if (puVar8 <= piVar6[3] && piVar6[3] != puVar8) goto code_r0x0048751e;\ncode_r0x004874e0:\n        uVar7 = (**(*piVar6 + 0x24))();\n        iVar10 = extraout_ECX_02[1];\n        puVar11 = in_stack_fffffe98;\n        if (iVar10 + 1 < in_stack_fffffe94) {\n            do {\n                in_stack_fffffe98 = puVar11;\n                if (uVar7 == 0xffffffff) {\ncode_r0x0048755e:\n                    uVar7 = 2;\n                    puVar11 = in_stack_fffffe98;\ncode_r0x00487563:\n                    if (0 < in_stack_fffffe94) {\n                        *puVar11 = 0;\n                    }\n                    if (extraout_ECX_02[1] == 0) {\n                        uVar7 = uVar7 | 4;\n                    }\n                    else if (uVar7 == 0) {\n                        return extraout_ECX_02;\n                    }\n                    goto code_r0x004874a1;\n                }\n                if ((uStack352 & 0xff) == uVar7) {\n                    uVar7 = 0;\n                    goto code_r0x00487563;\n                }\n                in_stack_fffffe98 = puVar11 + 1;\n                *puVar11 = uVar7;\n                puVar8 = piVar6[2];\n                puVar9 = piVar6[3];\n                extraout_ECX_02[1] = extraout_ECX_02[1] + 1;\n                if (puVar8 < puVar9) {\n                    puVar8 = puVar8 + 1;\n                    piVar6[2] = puVar8;\n                }\n                else {\n                    iVar10 = (**(*piVar6 + 0x28))();\n                    if (iVar10 == -1) goto code_r0x0048755e;\n                    puVar8 = piVar6[2];\n                    puVar9 = piVar6[3];\n                }\n                if (puVar9 <= puVar8) goto code_r0x004874e0;\ncode_r0x0048751e:\n                iVar10 = extraout_ECX_02[1];\n                uVar7 = *puVar8;\n                puVar11 = in_stack_fffffe98;\n                if (in_stack_fffffe94 <= iVar10 + 1) break;\n            } while( true );\n        }\n        if (uVar7 == 0xffffffff) {\n            if (0 < in_stack_fffffe94) {\n                *in_stack_fffffe98 = 0;\n                iVar10 = extraout_ECX_02[1];\n            }\n            if (iVar10 == 0) {\n                uVar7 = 6;\n            }\n            else {\n                uVar7 = 2;\n            }\n            goto code_r0x004874a1;\n        }\n        if (in_stack_fffffe94 < 1) goto code_r0x004875b6;\n        *in_stack_fffffe98 = 0;\n        iVar10 = extraout_ECX_02[1];\njoined_r0x00487510:\n        if (iVar10 != 0) {\n            return extraout_ECX_02;\n        }\n    }\n    uVar7 = 4;\ncode_r0x004874a1:\n    fcn.004bc4a0(uVar7 | *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x14));\n    return extraout_ECX_02;\n}\n",
        "token_count": 3404
    },
    "00489a20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00489a20(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    fcn.0048a0a0();\n    if (var_10h != '\\0') {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        if (piVar1[5] < piVar1[6]) {\n            *piVar1[5] = arg_8h;\n            piVar1[5] = piVar1[5] + 1;\n        }\n        else {\n            iVar3 = (**(*piVar1 + 0x34))(arg_8h);\n            if (iVar3 == -1) {\n                fcn.004bc4a0();\n            }\n        }\n    }\n    iVar3 = *(*var_ch + -0xc);\n    if ((*(var_ch + iVar3 + 0xd) & 0x20) != 0) {\n        cVar2 = fcn.004be790();\n        if ((cVar2 == '\\0') && (piVar1 = *(var_ch + iVar3 + 0x78),  piVar1 != NULL)) {\n            iVar3 = (**(*piVar1 + 0x18))();\n            if (iVar3 == -1) {\n                fcn.004bc4a0(*(var_ch + *(*var_ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 398
    },
    "00489bc0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00489bc0(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *(param_1 + *(*param_1 + -0xc) + 0x78);\n    if (piVar1 != NULL) {\n        iVar2 = (**(*piVar1 + 0x18))();\n        if (iVar2 == -1) {\n            fcn.004bc4a0(*(param_1 + *(*param_1 + -0xc) + 0x14) | 1);\n            return param_1;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 151
    },
    "00489c70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00489c70(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    if ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x14))(piVar1, arg_8h, arg_ch, arg_10h, arg_14h, 0x10);\n        if ((var_34h & var_38h) == 0xffffffff) {\n            fcn.004bc4a0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 312
    },
    "00489d90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00489d90(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint var_ch;\n    \n    if ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x10))(piVar1, arg_8h, arg_ch, arg_10h, 0x10);\n        if ((var_24h & var_28h) == 0xffffffff) {\n            fcn.004bc4a0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "00489f70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00489f70(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    fcn.0048a0a0();\n    if (var_10h != '\\0') {\n        iVar3 = (**(**(in_ECX + *(*in_ECX + -0xc) + 0x78) + 0x30))(arg_8h, arg_ch);\n        if (arg_ch != iVar3) {\n            fcn.004bc4a0();\n        }\n    }\n    iVar3 = *(*var_ch + -0xc);\n    if ((*(var_ch + iVar3 + 0xd) & 0x20) != 0) {\n        cVar2 = fcn.004be790();\n        if ((cVar2 == '\\0') && (piVar1 = *(var_ch + iVar3 + 0x78),  piVar1 != NULL)) {\n            iVar3 = (**(*piVar1 + 0x18))();\n            if (iVar3 == -1) {\n                fcn.004bc4a0(*(var_ch + *(*var_ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 343
    },
    "0048a0a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0048a0a0(uchar *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iStack24;\n    uint uStack20;\n    \n    *param_1 = 0;\n    iVar1 = *param_2;\n    *(param_1 + 4) = param_2;\n    uVar3 = *(iVar1 + -0xc) + param_2;\n    uVar5 = *(uVar3 + 0x14);\n    if (*(uVar3 + 0x70) != 0) {\n        if (uVar5 != 0) goto code_r0x0048a0c8;\n        fcn.00489bc0();\n        uVar3 = param_2 + *(*param_2 + -0xc);\n        uVar5 = *(uVar3 + 0x14);\n    }\n    if (uVar5 == 0) {\n        *param_1 = 1;\n        return uVar3;\n    }\ncode_r0x0048a0c8:\n    uVar4 = uVar5 | 4;\n    if (*(uVar3 + 0x78) == 0) {\n        uVar4 = uVar5 | 5;\n    }\n    *(uVar3 + 0x14) = uVar4;\n    if ((*(uVar3 + 0x10) & uVar4) == 0) {\n        return uVar4;\n    }\n    fcn.004be7b0(\"basic_ios::clear\");\n    fcn.004af3a0(iStack24 + 0x6c);\n    fcn.004baa20(iStack24, uStack20);\n    fcn.004af4c0();\n    fcn.004bc220(uStack20);\n    piVar2 = *(iStack24 + 0x78);\n    if (piVar2 != NULL) {\n        fcn.004af3a0(piVar2 + 7);\n        (**(*piVar2 + 8))(uStack20);\n        fcn.004af510(uStack20);\n        fcn.004af4c0();\n    }\n    return extraout_ECX;\n}\n",
        "token_count": 530
    },
    "0048a270": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0048a270(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t *piVar7;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0048a0a0();\n    if (var_20h == '\\0') goto code_r0x0048a307;\n    iVar5 = *(*in_ECX + -0xc) + in_ECX;\n    piVar7 = *(iVar5 + 0x80);\n    if (piVar7 == NULL) {\n        fcn.004be620();\ncode_r0x0048a3d3:\n        uVar6 = fcn.004be620();\n        piVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004c3600(piVar7);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c3a90();\n                fcn.004c3770();\n            }\n            else {\n                fcn.004c3a90();\n                fcn.004c3770();\n            }\n            fcn.0048a160();\n            piVar7 = in_ECX;\n            fcn.0043b0b0(in_ECX);\n        }\n        fcn.004c3600(piVar7);\n        iVar5 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar5 + 0x10) & 1) != 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3770();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar2 = *(iVar5 + 0x7c);\n            if (piVar2 == NULL) goto code_r0x0048a3d3;\n            if (*(piVar2 + 7) == '\\0') {\n                fcn.00451a70();\n                var_30h = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar2 + 0x18) != 0x451d20) {\n                    cVar4 = (**(*piVar2 + 0x18))(0x20);\n                    var_30h = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar2 + 0x3d);\n                var_30h = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar3 = *in_ECX;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar3 + -0xc) + in_ECX;\n        }\n        else {\n            var_30h = *(iVar5 + 0x74);\n        }\n        (**(*piVar7 + 0x24))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_30h, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.004bc4a0();\n        }\n    }\ncode_r0x0048a307:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.004be790();\n        if ((cVar4 == '\\0') && (piVar7 = *(var_1ch + iVar5 + 0x78),  piVar7 != NULL)) {\n            iVar5 = (**(*piVar7 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.004bc4a0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 1044
    },
    "0048a450": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0048a450(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t *piVar7;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0048a0a0();\n    if (var_20h == '\\0') goto code_r0x0048a4f4;\n    iVar5 = *(*in_ECX + -0xc) + in_ECX;\n    piVar7 = *(iVar5 + 0x80);\n    if (piVar7 == NULL) {\n        fcn.004be620();\ncode_r0x0048a5c3:\n        uVar6 = fcn.004be620();\n        piVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004c3600(piVar7);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c3a90();\n                fcn.004c3770();\n            }\n            else {\n                fcn.004c3a90();\n                fcn.004c3770();\n            }\n            fcn.0048a160();\n            piVar7 = in_ECX;\n            fcn.0043b0b0(in_ECX);\n        }\n        fcn.004c3600(piVar7);\n        iVar5 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar5 + 0x10) & 1) != 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3770();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar2 = *(iVar5 + 0x7c);\n            if (piVar2 == NULL) goto code_r0x0048a5c3;\n            if (*(piVar2 + 7) == '\\0') {\n                fcn.00451a70();\n                var_2ch = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar2 + 0x18) != 0x451d20) {\n                    cVar4 = (**(*piVar2 + 0x18))(0x20);\n                    var_2ch = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar2 + 0x3d);\n                var_2ch = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar3 = *in_ECX;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar3 + -0xc) + in_ECX;\n        }\n        else {\n            var_2ch = *(iVar5 + 0x74);\n        }\n        (**(*piVar7 + 8))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_2ch, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.004bc4a0();\n        }\n    }\ncode_r0x0048a4f4:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.004be790();\n        if ((cVar4 == '\\0') && (piVar7 = *(var_1ch + iVar5 + 0x78),  piVar7 != NULL)) {\n            iVar5 = (**(*piVar7 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.004bc4a0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 1053
    },
    "0048a640": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.0048a640(int32_t *param_1, ulong param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    char cVar4;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t iVar7;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0048a0a0(param_1);\n    if (var_20h == '\\0') goto code_r0x0048a6dd;\n    iVar5 = *(*param_1 + -0xc) + param_1;\n    piVar2 = *(iVar5 + 0x80);\n    if (piVar2 == NULL) {\n        fcn.004be620();\ncode_r0x0048a7b3:\n        uVar6 = fcn.004be620();\n        iVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004c3600(uVar6);\n            param_1 = param_1 + *(*param_1 + -0xc);\n            param_1[5] = param_1[5] | 1;\n            if ((*(param_1 + 4) & 1) == 0) {\n                iVar5 = fcn.004c3a90();\n                fcn.004c3770();\n            }\n            else {\n                fcn.004c3a90();\n                fcn.004c3770();\n            }\n            fcn.0048a160();\n            fcn.0043b0b0(iVar5);\n            iVar7 = iVar5;\n        }\n        fcn.004c3600(iVar7);\n        iVar5 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar5 + 0x10) & 1) != 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3770();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar3 = *(iVar5 + 0x7c);\n            if (piVar3 == NULL) goto code_r0x0048a7b3;\n            if (*(piVar3 + 7) == '\\0') {\n                fcn.00451a70();\n                var_34h = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar3 + 0x18) != 0x451d20) {\n                    cVar4 = (**(*piVar3 + 0x18))(0x20);\n                    var_34h = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar3 + 0x3d);\n                var_34h = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar7 = *param_1;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar7 + -0xc) + param_1;\n        }\n        else {\n            var_34h = *(iVar5 + 0x74);\n        }\n        (**(*piVar2 + 0x1c))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_34h, param_2);\n        if (extraout_DL != '\\0') {\n            fcn.004bc4a0();\n        }\n    }\ncode_r0x0048a6dd:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.004be790();\n        if ((cVar4 == '\\0') && (piVar2 = *(var_1ch + iVar5 + 0x78),  piVar2 != NULL)) {\n            iVar5 = (**(*piVar2 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.004bc4a0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 1044
    },
    "0048a830": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.0048a830(int32_t *param_1, unkbyte10 param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    char cVar4;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t iVar7;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0048a0a0(param_1);\n    if (var_20h == '\\0') goto code_r0x0048a8c7;\n    iVar5 = *(*param_1 + -0xc) + param_1;\n    piVar2 = *(iVar5 + 0x80);\n    if (piVar2 == NULL) {\n        fcn.004be620();\ncode_r0x0048a993:\n        uVar6 = fcn.004be620();\n        iVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004c3600(uVar6);\n            param_1 = param_1 + *(*param_1 + -0xc);\n            param_1[5] = param_1[5] | 1;\n            if ((*(param_1 + 4) & 1) == 0) {\n                iVar5 = fcn.004c3a90();\n                fcn.004c3770();\n            }\n            else {\n                fcn.004c3a90();\n                fcn.004c3770();\n            }\n            fcn.0048a160();\n            fcn.0043b0b0(iVar5);\n            iVar7 = iVar5;\n        }\n        fcn.004c3600(iVar7);\n        iVar5 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar5 + 0x10) & 1) != 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3770();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar3 = *(iVar5 + 0x7c);\n            if (piVar3 == NULL) goto code_r0x0048a993;\n            if (*(piVar3 + 7) == '\\0') {\n                fcn.00451a70();\n                var_2ch = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar3 + 0x18) != 0x451d20) {\n                    cVar4 = (**(*piVar3 + 0x18))(0x20);\n                    var_2ch = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar3 + 0x3d);\n                var_2ch = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar7 = *param_1;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar7 + -0xc) + param_1;\n        }\n        else {\n            var_2ch = *(iVar5 + 0x74);\n        }\n        (**(*piVar2 + 0x20))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_2ch, param_2);\n        if (extraout_DL != '\\0') {\n            fcn.004bc4a0();\n        }\n    }\ncode_r0x0048a8c7:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.004be790();\n        if ((cVar4 == '\\0') && (piVar2 = *(var_1ch + iVar5 + 0x78),  piVar2 != NULL)) {\n            iVar5 = (**(*piVar2 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.004bc4a0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 1043
    },
    "0048abf0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0048abf0(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t *piVar7;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0048a0a0();\n    if (var_20h == '\\0') goto code_r0x0048ac87;\n    iVar5 = *(*in_ECX + -0xc) + in_ECX;\n    piVar7 = *(iVar5 + 0x80);\n    if (piVar7 == NULL) {\n        fcn.004be620();\ncode_r0x0048ad53:\n        uVar6 = fcn.004be620();\n        piVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004c3600(piVar7);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c3a90();\n                fcn.004c3770();\n            }\n            else {\n                fcn.004c3a90();\n                fcn.004c3770();\n            }\n            fcn.0048a160();\n            piVar7 = in_ECX;\n            fcn.0043b0b0(in_ECX);\n        }\n        fcn.004c3600(piVar7);\n        iVar5 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar5 + 0x10) & 1) != 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3770();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar2 = *(iVar5 + 0x7c);\n            if (piVar2 == NULL) goto code_r0x0048ad53;\n            if (*(piVar2 + 7) == '\\0') {\n                fcn.00451a70();\n                var_30h = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar2 + 0x18) != 0x451d20) {\n                    cVar4 = (**(*piVar2 + 0x18))(0x20);\n                    var_30h = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar2 + 0x3d);\n                var_30h = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar3 = *in_ECX;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar3 + -0xc) + in_ECX;\n        }\n        else {\n            var_30h = *(iVar5 + 0x74);\n        }\n        (**(*piVar7 + 0x10))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_30h, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.004bc4a0();\n        }\n    }\ncode_r0x0048ac87:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.004be790();\n        if ((cVar4 == '\\0') && (piVar7 = *(var_1ch + iVar5 + 0x78),  piVar7 != NULL)) {\n            iVar5 = (**(*piVar7 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.004bc4a0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 1041
    },
    "0048add0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0048add0(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t *piVar7;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0048a0a0();\n    if (var_20h == '\\0') goto code_r0x0048ae84;\n    iVar5 = *(*in_ECX + -0xc) + in_ECX;\n    piVar7 = *(iVar5 + 0x80);\n    if (piVar7 == NULL) {\n        fcn.004be620();\ncode_r0x0048af53:\n        uVar6 = fcn.004be620();\n        piVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004c3600(piVar7);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c3a90();\n                fcn.004c3770();\n            }\n            else {\n                fcn.004c3a90();\n                fcn.004c3770();\n            }\n            fcn.0048a160();\n            piVar7 = in_ECX;\n            fcn.0043b0b0(in_ECX);\n        }\n        fcn.004c3600(piVar7);\n        iVar5 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar5 + 0x10) & 1) != 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3770();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar2 = *(iVar5 + 0x7c);\n            if (piVar2 == NULL) goto code_r0x0048af53;\n            if (*(piVar2 + 7) == '\\0') {\n                fcn.00451a70();\n                var_30h = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar2 + 0x18) != 0x451d20) {\n                    cVar4 = (**(*piVar2 + 0x18))(0x20);\n                    var_30h = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar2 + 0x3d);\n                var_30h = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar3 = *in_ECX;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar3 + -0xc) + in_ECX;\n        }\n        else {\n            var_30h = *(iVar5 + 0x74);\n        }\n        (**(*piVar7 + 0x14))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_30h, arg_8h, arg_ch);\n        if (extraout_DL != '\\0') {\n            fcn.004bc4a0();\n        }\n    }\ncode_r0x0048ae84:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.004be790();\n        if ((cVar4 == '\\0') && (piVar7 = *(var_1ch + iVar5 + 0x78),  piVar7 != NULL)) {\n            iVar5 = (**(*piVar7 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.004bc4a0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 1068
    },
    "0048b1d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0048b1d0(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_ch;\n    \n    fcn.004bb510();\n    *in_ECX = 0x52be90;\n    *(in_ECX + 0x1e) = 0;\n    iVar3 = *arg_8h;\n    in_ECX[0x1d] = 0;\n    iVar3 = arg_8h + *(iVar3 + -0xc);\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    in_ECX[1] = 0x52bea4;\n    fcn.004bab00(iVar3);\n    fcn.004bc220(in_ECX + 0x1c);\n    uVar2 = *(iVar3 + 0x70);\n    *(iVar3 + 0x70) = 0;\n    in_ECX[0x1d] = uVar2;\n    *(in_ECX + 0x1e) = *(iVar3 + 0x74);\n    uVar1 = *(iVar3 + 0x75);\n    in_ECX[0x1f] = 0;\n    *(in_ECX + 0x79) = uVar1;\n    return;\n}\n",
        "token_count": 357
    },
    "0048b290": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0048b290(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.004bb510();\n    in_ECX[0x1d] = 0;\n    *(in_ECX + 0x1e) = 0;\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    *in_ECX = 0x52be90;\n    in_ECX[1] = 0x52bea4;\n    fcn.004bc340(arg_8h);\n    return;\n}\n",
        "token_count": 181
    },
    "0048b380": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.0048b380(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bb510();\n    param_1[0x1d] = 0;\n    *(param_1 + 0x1e) = 0;\n    param_1[0x1f] = 0;\n    param_1[0x20] = 0;\n    param_1[0x21] = 0;\n    param_1[0x22] = 0;\n    *param_1 = 0x52be90;\n    param_1[1] = 0x52bea4;\n    fcn.004bc340(0);\n    return;\n}\n",
        "token_count": 172
    },
    "0048b640": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0048b640(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    uchar var_11h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    fcn.0048a0a0();\n    if (var_10h == '\\0') {\n        if (arg_8h != 0) goto code_r0x0048b698;\n        uVar3 = 1;\n        iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    }\n    else {\n        iVar4 = *(*in_ECX + -0xc) + in_ECX;\n        if (arg_8h == 0) {\n            uVar3 = 1;\n        }\n        else {\n            iVar4 = fcn.004bebe0(arg_8h, *(iVar4 + 0x78), &var_11h);\n            if (iVar4 != 0) goto code_r0x0048b698;\n            uVar3 = 4;\n            iVar4 = *(*in_ECX + -0xc) + in_ECX;\n        }\n    }\n    fcn.004bc4a0(uVar3 | *(iVar4 + 0x14));\ncode_r0x0048b698:\n    piVar1 = var_ch;\n    iVar4 = *(*var_ch + -0xc);\n    if ((*(var_ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar2 = fcn.004be790();\n        if ((cVar2 == '\\0') && (piVar1 = *(piVar1 + iVar4 + 0x78),  piVar1 != NULL)) {\n            iVar4 = (**(*piVar1 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.004bc4a0(*(var_ch + *(*var_ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 505
    },
    "0048b7e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0048b7e0(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t *piVar7;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0048a0a0();\n    if (var_20h == '\\0') goto code_r0x0048aaa7;\n    iVar5 = *(*in_ECX + -0xc) + in_ECX;\n    piVar7 = *(iVar5 + 0x80);\n    if (piVar7 == NULL) {\n        fcn.004be620();\ncode_r0x0048ab73:\n        uVar6 = fcn.004be620();\n        piVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004c3600(piVar7);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c3a90();\n                fcn.004c3770();\n            }\n            else {\n                fcn.004c3a90();\n                fcn.004c3770();\n            }\n            fcn.0048a160();\n            piVar7 = in_ECX;\n            fcn.0043b0b0(in_ECX);\n        }\n        fcn.004c3600(piVar7);\n        iVar5 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar5 + 0x10) & 1) != 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3770();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar2 = *(iVar5 + 0x7c);\n            if (piVar2 == NULL) goto code_r0x0048ab73;\n            if (*(piVar2 + 7) == '\\0') {\n                fcn.00451a70();\n                var_30h = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar2 + 0x18) != 0x451d20) {\n                    cVar4 = (**(*piVar2 + 0x18))(0x20);\n                    var_30h = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar2 + 0x3d);\n                var_30h = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar3 = *in_ECX;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar3 + -0xc) + in_ECX;\n        }\n        else {\n            var_30h = *(iVar5 + 0x74);\n        }\n        (**(*piVar7 + 0xc))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_30h, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.004bc4a0();\n        }\n    }\ncode_r0x0048aaa7:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.004be790();\n        if ((cVar4 == '\\0') && (piVar7 = *(var_1ch + iVar5 + 0x78),  piVar7 != NULL)) {\n            iVar5 = (**(*piVar7 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.004bc4a0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 1041
    },
    "0048b880": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0048b880(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t *piVar7;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0048a0a0();\n    if (var_20h == '\\0') goto code_r0x0048b084;\n    iVar5 = *(*in_ECX + -0xc) + in_ECX;\n    piVar7 = *(iVar5 + 0x80);\n    if (piVar7 == NULL) {\n        fcn.004be620();\ncode_r0x0048b153:\n        uVar6 = fcn.004be620();\n        piVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004c3600(piVar7);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c3a90();\n                fcn.004c3770();\n            }\n            else {\n                fcn.004c3a90();\n                fcn.004c3770();\n            }\n            fcn.0048a160();\n            piVar7 = in_ECX;\n            fcn.0043b0b0(in_ECX);\n        }\n        fcn.004c3600(piVar7);\n        iVar5 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar5 + 0x10) & 1) != 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3770();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar2 = *(iVar5 + 0x7c);\n            if (piVar2 == NULL) goto code_r0x0048b153;\n            if (*(piVar2 + 7) == '\\0') {\n                fcn.00451a70();\n                var_30h = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar2 + 0x18) != 0x451d20) {\n                    cVar4 = (**(*piVar2 + 0x18))(0x20);\n                    var_30h = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar2 + 0x3d);\n                var_30h = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar3 = *in_ECX;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar3 + -0xc) + in_ECX;\n        }\n        else {\n            var_30h = *(iVar5 + 0x74);\n        }\n        (**(*piVar7 + 0x18))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_30h, arg_8h, arg_ch);\n        if (extraout_DL != '\\0') {\n            fcn.004bc4a0();\n        }\n    }\ncode_r0x0048b084:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.004be790();\n        if ((cVar4 == '\\0') && (piVar7 = *(var_1ch + iVar5 + 0x78),  piVar7 != NULL)) {\n            iVar5 = (**(*piVar7 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.004bc4a0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 1068
    },
    "0048bc20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048bc20(void)\n\n{\n    fcn.0048d0f0(0);\n    return;\n}\n",
        "token_count": 29
    },
    "0048bf60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.0048bf60(uint32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    \n    if (0x3ffffffc < param_1) {\n        fcn.004bead0(0x5239a5);\n        iVar2 = *extraout_ECX;\n        iVar1 = *(iVar2 + -0xc);\n        if (-1 < *(iVar2 + -4)) {\n            fcn.0048b8c0();\n            iVar2 = *extraout_ECX;\n        }\n        return iVar2 + iVar1 + -1;\n    }\n    if (param_2 < param_1) {\n        if (param_1 < param_2 * 2) {\n            param_1 = param_2 * 2;\n        }\n        if (((0x1000 < param_1 + 0x1d) && (param_2 < param_1)) &&\n           (param_1 = (param_1 + 0x1000) - (param_1 + 0x1d & 0xfff),  0x3ffffffc < param_1)) {\n            param_1 = 0x3ffffffc;\n        }\n    }\n    iVar2 = fcn.004c3430(param_1 + 0xd);\n    *(iVar2 + 4) = param_1;\n    *(iVar2 + 8) = 0;\n    return iVar2;\n}\n",
        "token_count": 334
    },
    "0048c220": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0048c220(int32_t *param_1, uchar *param_2, uint32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    int32_t *extraout_ECX;\n    uint32_t uVar6;\n    int32_t *in_stack_ffffffd8;\n    \n    if (param_3 == 0) {\n        return param_1;\n    }\n    puVar4 = *param_1;\n    if (0x3ffffffcU - *(puVar4 + -0xc) < param_3) {\n        fcn.004bead0(0x523a2e);\n        iVar2 = *(*in_stack_ffffffd8 + -0xc);\n        if (iVar2 != 0) {\n            iVar3 = *extraout_ECX;\n            uVar6 = *(iVar3 + -0xc) + iVar2;\n            if ((uVar6 < *(iVar3 + -8) || uVar6 == *(iVar3 + -8)) && (*(iVar3 + -4) < 1)) {\n                puVar4 = *in_stack_ffffffd8;\n                puVar5 = *extraout_ECX + *(*extraout_ECX + -0xc);\n            }\n            else {\n                fcn.0048d0f0(uVar6);\n                puVar4 = *in_stack_ffffffd8;\n                puVar5 = *extraout_ECX + *(*extraout_ECX + -0xc);\n            }\n            if (iVar2 == 1) {\n                *puVar5 = *puVar4;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(puVar5, puVar4, iVar2);\n            }\n            iVar2 = *extraout_ECX;\n            *(iVar2 + -4) = 0;\n            *(iVar2 + -0xc) = uVar6;\n            *(iVar2 + uVar6) = 0;\n            return extraout_ECX;\n        }\n        return extraout_ECX;\n    }\n    uVar6 = *(puVar4 + -0xc) + param_3;\n    if ((*(puVar4 + -8) <= uVar6 && uVar6 != *(puVar4 + -8)) || (piVar1 = puVar4 + -4,  puVar4 = *param_1,  0 < *piVar1)\n       ) {\n        if ((puVar4 <= param_2) && (param_2 <= puVar4 + *(puVar4 + -0xc))) {\n            fcn.0048d0f0(uVar6);\n            iVar2 = *param_1;\n            param_2 = param_2 + (iVar2 - puVar4);\n            puVar4 = iVar2 + *(iVar2 + -0xc);\n            goto joined_r0x0048c2b9;\n        }\n        fcn.0048d0f0(uVar6);\n        puVar4 = *param_1;\n    }\n    puVar4 = puVar4 + *(puVar4 + -0xc);\njoined_r0x0048c2b9:\n    if (param_3 == 1) {\n        *puVar4 = *param_2;\n    }\n    else {\n        sub.msvcrt.dll_memcpy(puVar4, param_2, param_3);\n    }\n    iVar2 = *param_1;\n    *(iVar2 + -4) = 0;\n    *(iVar2 + -0xc) = uVar6;\n    *(iVar2 + uVar6) = 0;\n    return param_1;\n}\n",
        "token_count": 813
    },
    "0048c2e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0048c2e0(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    uint32_t uVar5;\n    \n    iVar1 = *(*param_2 + -0xc);\n    if (iVar1 != 0) {\n        iVar2 = *param_1;\n        uVar5 = *(iVar2 + -0xc) + iVar1;\n        if ((uVar5 < *(iVar2 + -8) || uVar5 == *(iVar2 + -8)) && (*(iVar2 + -4) < 1)) {\n            puVar3 = *param_2;\n            puVar4 = *param_1 + *(*param_1 + -0xc);\n        }\n        else {\n            fcn.0048d0f0(uVar5);\n            puVar3 = *param_2;\n            puVar4 = *param_1 + *(*param_1 + -0xc);\n        }\n        if (iVar1 == 1) {\n            *puVar4 = *puVar3;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar4, puVar3, iVar1);\n        }\n        iVar1 = *param_1;\n        *(iVar1 + -4) = 0;\n        *(iVar1 + -0xc) = uVar5;\n        *(iVar1 + uVar5) = 0;\n        return param_1;\n    }\n    return param_1;\n}\n",
        "token_count": 348
    },
    "0048c470": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0048c470(int32_t *param_1, uint32_t param_2, char param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t extraout_ECX;\n    uint32_t uVar4;\n    uint in_stack_ffffffd8;\n    \n    iVar1 = *param_1;\n    iVar2 = *(iVar1 + -0xc);\n    if (param_2 <= 0x3ffffffcU - iVar2) {\n        uVar4 = iVar2 + param_2;\n        if ((uVar4 < *(iVar1 + -8) || uVar4 == *(iVar1 + -8)) && (*(iVar1 + -4) < 1)) {\n            pcVar3 = *param_1 + *(*param_1 + -0xc);\n        }\n        else {\n            fcn.0048d0f0(uVar4);\n            pcVar3 = *param_1 + *(*param_1 + -0xc);\n        }\n        if (param_2 == 1) {\n            *pcVar3 = param_3;\n        }\n        else {\n            sub.msvcrt.dll_memset(pcVar3, param_3, param_2);\n        }\n        iVar1 = *param_1;\n        *(iVar1 + -4) = 0;\n        *(iVar1 + -0xc) = uVar4;\n        *(iVar1 + uVar4) = 0;\n        return iVar1;\n    }\n    fcn.004bead0(0x523a2e);\n    fcn.0048c040(in_stack_ffffffd8, iVar2);\n    return extraout_ECX;\n}\n",
        "token_count": 378
    },
    "0048d3d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0048d3d0(int32_t *param_1, uchar param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *param_1;\n    iVar3 = *(iVar2 + -0xc);\n    uVar1 = iVar3 + 1;\n    if ((*(iVar2 + -8) <= uVar1 && uVar1 != *(iVar2 + -8)) || (0 < *(iVar2 + -4))) {\n        fcn.0048d0f0(uVar1);\n    }\n    *(*param_1 + *(*param_1 + -0xc)) = param_2;\n    iVar2 = *param_1;\n    *(iVar2 + -4) = 0;\n    *(iVar2 + -0xc) = uVar1;\n    *(iVar2 + 1 + iVar3) = 0;\n    return;\n}\n",
        "token_count": 211
    },
    "0048f240": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0048f240(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint var_8h;\n    \n    *in_ECX = 0x52bf98;\n    in_ECX[1] = arg_ch != 0;\n    in_ECX[2] = arg_8h;\n    uVar1 = fcn.004af0f0();\n    in_ECX[4] = uVar1;\n    fcn.0048ef00(0);\n    return;\n}\n",
        "token_count": 142
    },
    "0048f980": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0048f980(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint var_8h;\n    \n    *in_ECX = 0x52bfa8;\n    in_ECX[1] = arg_ch != 0;\n    in_ECX[2] = arg_8h;\n    uVar1 = fcn.004af0f0();\n    in_ECX[4] = uVar1;\n    fcn.0048f640(0);\n    return;\n}\n",
        "token_count": 143
    },
    "0048fe50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0048fe50(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    \n    *in_ECX = 0x52bfb8;\n    fcn.0048d530(arg_8h);\n    return;\n}\n",
        "token_count": 80
    },
    "0048feb0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048feb0(uint *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar auStack13 [9];\n    \n    iVar3 = *0x515a34;\n    *param_1 = 0x52bfb8;\n    iVar2 = param_1[1];\n    if (iVar3 == 0) {\n        iVar3 = *(iVar2 + -4);\n        *(iVar2 + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar2 + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar3) {\n        fcn.004bd220();\n        return;\n    }\n    fcn.0048bdd0(auStack13);\n    fcn.004bd220();\n    return;\n}\n",
        "token_count": 212
    },
    "0048ff40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0048ff40(uint *param_1, uint param_2)\n\n{\n    fcn.004a14c0(param_2);\n    *param_1 = 0x52bfcc;\n    return;\n}\n",
        "token_count": 54
    },
    "00491350": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00491350(uint *param_1, uint param_2)\n\n{\n    fcn.0048fdb0(param_2);\n    *param_1 = 0x52c050;\n    return;\n}\n",
        "token_count": 52
    },
    "00491410": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00491410(uint *param_1, uint param_2)\n\n{\n    fcn.0048fdb0(param_2);\n    *param_1 = 0x52c064;\n    return;\n}\n",
        "token_count": 52
    },
    "004914d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004914d0(uint *param_1, uint param_2)\n\n{\n    fcn.0048fdb0(param_2);\n    *param_1 = 0x52c078;\n    return;\n}\n",
        "token_count": 53
    },
    "00491c00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl\nfcn.00491c00(uint noname_0, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t *arg_28h, int32_t arg_2ch, int32_t arg_30h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1dh;\n    uint var_bp_ch;\n    \n    if (arg_2ch == 0) {\n        *NULL = fcn.0048b900(0, 0, &var_1dh);\n        uVar3 = (**(*arg_ch + 0xc))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, &var_1dh + 1);\n        if (*arg_28h == 0) {\n            if (*(arg_30h + 0x18) != NULL) {\n                (**(arg_30h + 0x18))(arg_30h);\n            }\n            fcn.0048d530(&var_1dh + 1);\n            uVar2 = *(stack0xffffffe0 + -0xc);\n            *(arg_30h + 0x18) = 0x493e70;\n            *(arg_30h + 4) = uVar2;\n        }\n        if (*0x515a34 == 0) {\n            iVar4 = *(stack0xffffffe0 + -4);\n            *(stack0xffffffe0 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = stack0xffffffe0 + -4;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.0048bdd0(&var_1dh);\n        }\n    }\n    else {\n        uVar3 = (**(*arg_ch + 8))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 558
    },
    "00491ec0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl\nfcn.00491ec0(uint noname_0, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t *arg_28h, int32_t arg_2ch, int32_t arg_30h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1dh;\n    uint var_bp_ch;\n    \n    if (arg_2ch == 0) {\n        *NULL = fcn.004839f0(0, 0, &var_1dh);\n        uVar3 = (**(*arg_ch + 0xc))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, &var_1dh + 1);\n        if (*arg_28h == 0) {\n            if (*(arg_30h + 0x18) != NULL) {\n                (**(arg_30h + 0x18))(arg_30h);\n            }\n            fcn.004857c0(&var_1dh + 1);\n            uVar2 = *(stack0xffffffe0 + -0xc);\n            *(arg_30h + 0x18) = 0x493ef0;\n            *(arg_30h + 4) = uVar2;\n        }\n        if (*0x515a34 == 0) {\n            iVar4 = *(stack0xffffffe0 + -4);\n            *(stack0xffffffe0 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = stack0xffffffe0 + -4;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.00483f10(&var_1dh);\n        }\n    }\n    else {\n        uVar3 = (**(*arg_ch + 8))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 572
    },
    "004921b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0049237b)\n\nuint __cdecl\nfcn.004921b0(uint noname_0, int32_t *noname_1, uint noname_2, uint noname_3, uint32_t noname_4, uint noname_5, \n            uint noname_6, uint noname_7, uint noname_8, uint noname_9, int32_t noname_10, uint noname_11, \n            uint noname_12, uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, \n            uint noname_18, uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, \n            uint noname_24, uint noname_25, uint noname_26, uint noname_27, uint noname_28, uint noname_29, \n            uint noname_30, uint noname_31, uint noname_32, uint noname_33, uint noname_34, uint noname_35, \n            uint noname_36, uint noname_37, uint noname_38, uint noname_39, uint noname_40, uint noname_41, \n            uint noname_42, uint noname_43, uint noname_44, uint noname_45, uint noname_46, uint noname_47, \n            uint noname_48, uint noname_49, uint noname_50, uint noname_51, uint arg_ch, uint arg_10h, uint arg_14h, \n            uint arg_18h, uint arg_1ch, uint arg_20h, uint noname_58, uint noname_59, uint noname_60, uint arg_30h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    uint var_1ch_3;\n    uint var_1ch;\n    uint var_bp_ch;\n    uint32_t in_stack_fffffe70;\n    uchar *puStack352;\n    uchar auStack344 [8];\n    uint uStack336;\n    uchar *puStack332;\n    uint uStack316;\n    uint uStack312;\n    int32_t iStack308;\n    uchar *puStack304;\n    uint32_t uStack300;\n    int32_t *piStack292;\n    uint uStack288;\n    uint uStack284;\n    uchar uStack280;\n    uint uStack276;\n    ushort uStack272;\n    ushort uStack268;\n    ulong uStack266;\n    int32_t *piStack256;\n    uchar uStack237;\n    int32_t iStack236;\n    uint uStack220;\n    int32_t iStack212;\n    uchar *puStack208;\n    int32_t *piStack196;\n    uint32_t uStack184;\n    int32_t iStack160;\n    uchar *puStack148;\n    uchar auStack140 [8];\n    uint uStack132;\n    uchar *puStack128;\n    uint uStack112;\n    uint uStack108;\n    int32_t iStack104;\n    uchar *puStack100;\n    uint32_t uStack96;\n    int32_t *piStack88;\n    uint32_t uStack76;\n    int32_t var_30h_4;\n    uint var_2ch_2;\n    uchar var_1dh_2;\n    int32_t var_1ch_4;\n    \n    if (noname_10 == 0) {\n        uStack96 = 0x492286;\n        uVar3 = (**(*noname_1 + 8))();\n        return uVar3;\n    }\n    iStack212 = *(noname_10 + 0x18);\n    if (iStack212 != 0) {\n        uStack96 = 0x4921f5;\n        fcn.0048d4c0();\n        puStack100 = noname_3;\n        iStack104 = noname_2;\n        uStack108 = 0x492228;\n        uStack96 = noname_4 & 0xff;\n        uVar3 = (**(*noname_1 + 0xc))();\n        if (*0x515a34 == 0) {\n            iVar4 = *(var_1ch_4 + -4);\n            *(var_1ch_4 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = var_1ch_4 + -4;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar4 < 1) {\n            puStack128 = &stack0xffffffdf;\n            uStack132 = 0x4922b3;\n            fcn.0048bdd0();\n            return uVar3;\n        }\n        return uVar3;\n    }\n    uStack96 = 0x4922d0;\n    uStack112 = fcn.004be9d0(0x523804);\n    uStack96 = 0x4922e3;\n    fcn.0048bdf0();\n    puStack100 = 0x4922ec;\n    uStack96 = uStack112;\n    fcn.0043b0b0();\n    uStack108 = noname_6;\n    iStack104 = iStack212;\n    if (var_30h_4 == 0) {\n        puStack208 = 0x4923d6;\n        puStack100 = &stack0xfffffffc;\n        uVar3 = (**(*piStack88 + 8))();\n        return uVar3;\n    }\n    if (*(var_30h_4 + 0x18) != 0) {\n        puStack208 = 0x49233b;\n        puStack100 = &stack0xfffffffc;\n        fcn.004b0ab0();\n        uStack220 = 0x49236e;\n        puStack208 = uStack76 & 0xff;\n        uVar3 = (**(*piStack88 + 0xc))();\n        return uVar3;\n    }\n    puStack208 = 0x4923ed;\n    puStack100 = &stack0xfffffffc;\n    uStack220 = fcn.004be9d0(\"uninitialized __any_string\");\n    if (puStack148 != &stack0xffffff74) {\n        puStack208 = 0x492401;\n        fcn.004c33f0();\n    }\n    puStack208 = 0x492409;\n    fcn.0043b0b0();\n    if (iStack160 == 0) {\n        uStack300 = 0x4924e4;\n        puStack208 = &stack0xffffff9c;\n        uVar3 = (**(*piStack196 + 8))();\n        return uVar3;\n    }\n    iStack308 = *(iStack160 + 0x18);\n    if (iStack308 == 0) {\n        uStack300 = 0x49252f;\n        puStack208 = &stack0xffffff9c;\n        uStack316 = fcn.004be9d0(0x523804);\n        uStack300 = 0x492542;\n        fcn.00483f30();\n        puStack304 = 0x49254b;\n        uStack300 = uStack316;\n        fcn.0043b0b0();\n        if (piStack256 == NULL) {\n            puStack304 = &stack0xffffff30;\n            uVar3 = (**(*piStack292 + 8))\n                              (uStack288, uStack284, uStack280, uStack276, uStack272, CONCAT82(uStack266, uStack268));\n            return uVar3;\n        }\n        if (piStack256[6] != 0) {\n            puStack352 = &stack0xfffffea8;\n            puStack304 = &stack0xffffff30;\n            fcn.004b3830(*piStack256, *piStack256 + piStack256[1] * 2, in_stack_fffffe70 & 0xffffff00);\n            uVar3 = (**(*piStack292 + 0xc))(uStack288, uStack284, uStack280, uStack276, uStack272, &stack0xfffffea0);\n            if (puStack352 != &stack0xfffffea8) {\n                fcn.004c33f0(puStack352);\n            }\n            return uVar3;\n        }\n        puStack304 = &stack0xffffff30;\n        uVar3 = fcn.004be9d0(\"uninitialized __any_string\");\n        if (puStack352 != &stack0xfffffea8) {\n            fcn.004c33f0(puStack352);\n        }\n        fcn.0043b0b0(uVar3);\n        iVar4 = *0x515a34;\n        *extraout_ECX = 0x52b530;\n        piVar1 = extraout_ECX[3];\n        if (iVar4 == 0) {\n            iVar4 = piVar1[1];\n            piVar1[1] = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar2 = piVar1 + 1;\n            iVar4 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n        }\n        if (iVar4 == 1) {\n            (**(*piVar1 + 4))();\n        }\n        *extraout_ECX = 0x52cab0;\n        fcn.004af1f0(extraout_ECX + 2);\n        fcn.004af220();\n        uVar3 = fcn.004c33f0(extraout_ECX);\n        return uVar3;\n    }\n    uStack300 = 0x492458;\n    puStack208 = &stack0xffffff9c;\n    fcn.00485730();\n    uStack312 = 0x492486;\n    uStack300 = uStack184 & 0xff;\n    uVar3 = (**(*piStack196 + 0xc))();\n    if (*0x515a34 == 0) {\n        iVar4 = *(iStack236 + -4);\n        *(iStack236 + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack236 + -4;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar4 < 1) {\n        puStack332 = &stack0xffffff13;\n        uStack336 = 0x492512;\n        fcn.00483f10();\n        return uVar3;\n    }\n    return uVar3;\n}\n",
        "token_count": 2390
    },
    "00492410": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00492410(uint param_1, int32_t *param_2, uint param_3, uint param_4, uint32_t param_5, uint param_6, \n                 uint param_7)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    uint32_t var_18h;\n    uint var_1ch_3;\n    uint var_20h_2;\n    int32_t var_30h_3;\n    uint32_t in_stack_ffffff3c;\n    uchar *var_30h_5;\n    uint var_2ch;\n    uchar auStack140 [8];\n    uchar auStack132 [3];\n    uchar *var_1dh_3;\n    uint uStack112;\n    uint uStack108;\n    int32_t iStack104;\n    uchar *puStack100;\n    uint32_t uStack96;\n    int32_t *piStack88;\n    uint uStack84;\n    uint uStack80;\n    uchar uStack76;\n    uint var_1ch_5;\n    ushort uStack68;\n    ushort uStack64;\n    ulong uStack62;\n    int32_t *piStack52;\n    uchar var_1dh_2;\n    int32_t var_1ch_4;\n    \n    if (var_30h_3 == 0) {\n        uStack96 = 0x4924e4;\n        uVar3 = (**(*param_2 + 8))();\n        return uVar3;\n    }\n    iStack104 = *(var_30h_3 + 0x18);\n    if (iStack104 != 0) {\n        uStack96 = 0x492458;\n        fcn.00485730();\n        puStack100 = param_4;\n        iStack104 = param_3;\n        uStack108 = 0x492486;\n        uStack96 = var_18h & 0xff;\n        uVar3 = (**(*param_2 + 0xc))();\n        if (*0x515a34 == 0) {\n            iVar4 = *(var_1ch_4 + -4);\n            *(var_1ch_4 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = var_1ch_4 + -4;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (0 < iVar4) {\n            return uVar3;\n        }\n        unique0x00001d00 = &stack0xffffffdf;\n        _auStack132 = 0x492512;\n        fcn.00483f10();\n        return uVar3;\n    }\n    uStack96 = 0x49252f;\n    uStack112 = fcn.004be9d0(0x523804);\n    uStack96 = 0x492542;\n    fcn.00483f30();\n    puStack100 = 0x49254b;\n    uStack96 = uStack112;\n    fcn.0043b0b0();\n    uStack108 = var_20h_2;\n    if (piStack52 == NULL) {\n        puStack100 = &stack0xfffffffc;\n        uVar3 = (**(*piStack88 + 8))(uStack84, uStack80, uStack76, var_1ch_5, uStack68, CONCAT82(uStack62, uStack64));\n        return uVar3;\n    }\n    if (piStack52[6] == 0) {\n        puStack100 = &stack0xfffffffc;\n        uVar3 = fcn.004be9d0(\"uninitialized __any_string\");\n        if (var_30h_5 != &stack0xffffff74) {\n            fcn.004c33f0(var_30h_5);\n        }\n        fcn.0043b0b0(uVar3);\n        iVar4 = *0x515a34;\n        *extraout_ECX = 0x52b530;\n        piVar1 = extraout_ECX[3];\n        if (iVar4 == 0) {\n            iVar4 = piVar1[1];\n            piVar1[1] = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar2 = piVar1 + 1;\n            iVar4 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n        }\n        if (iVar4 == 1) {\n            (**(*piVar1 + 4))();\n        }\n        *extraout_ECX = 0x52cab0;\n        fcn.004af1f0(extraout_ECX + 2);\n        fcn.004af220();\n        uVar3 = fcn.004c33f0(extraout_ECX);\n        return uVar3;\n    }\n    var_30h_5 = &stack0xffffff74;\n    puStack100 = &stack0xfffffffc;\n    fcn.004b3830(*piStack52, *piStack52 + piStack52[1] * 2, in_stack_ffffff3c & 0xffffff00);\n    uVar3 = (**(*piStack88 + 0xc))(uStack84, uStack80, uStack76, var_1ch_5, uStack68, &fcn.00492410::var_30h_5);\n    if (var_30h_5 != &stack0xffffff74) {\n        fcn.004c33f0(var_30h_5);\n    }\n    return uVar3;\n}\n",
        "token_count": 1242
    },
    "00493f70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl\nfcn.00493f70(uint noname_0, int32_t *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t var_22h;\n    int32_t var_1ch;\n    uint var_bp_ch;\n    \n    fcn.0048d4c0(arg_20h, arg_24h, &var_22h);\n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h, arg_1ch, &var_22h + 2);\n    if (*(arg_10h + 0x18) != NULL) {\n        (**(arg_10h + 0x18))(arg_10h);\n    }\n    fcn.0048d530(&var_1ch);\n    iVar3 = *0x515a34;\n    uVar2 = *(var_1ch + -0xc);\n    *(arg_10h + 0x18) = 0x493e70;\n    *(arg_10h + 4) = uVar2;\n    if (iVar3 == 0) {\n        iVar3 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.0048bdd0(&var_22h + 1);\n    }\n    if (*0x515a34 == 0) {\n        iVar3 = *(unique0x10000064 + -4);\n        *(unique0x10000064 + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = unique0x10000064 + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar3) {\n        return;\n    }\n    fcn.0048bdd0(&var_1ch);\n    return;\n}\n",
        "token_count": 544
    },
    "004941b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl\nfcn.004941b0(uint noname_0, int32_t *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t var_22h;\n    int32_t var_1ch;\n    uint var_bp_ch;\n    \n    fcn.00485730(arg_20h, arg_24h, &var_22h);\n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h, arg_1ch, &var_22h + 2);\n    if (*(arg_10h + 0x18) != NULL) {\n        (**(arg_10h + 0x18))(arg_10h);\n    }\n    fcn.004857c0(&var_1ch);\n    iVar3 = *0x515a34;\n    uVar2 = *(var_1ch + -0xc);\n    *(arg_10h + 0x18) = 0x493ef0;\n    *(arg_10h + 4) = uVar2;\n    if (iVar3 == 0) {\n        iVar3 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.00483f10(&var_22h + 1);\n    }\n    if (*0x515a34 == 0) {\n        iVar3 = *(unique0x10000064 + -4);\n        *(unique0x10000064 + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = unique0x10000064 + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar3) {\n        return;\n    }\n    fcn.00483f10(&var_1ch);\n    return;\n}\n",
        "token_count": 541
    },
    "004943f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004943f0(uint noname_0, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_2ch;\n    uchar var_1dh;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    fcn.0048d4c0(arg_10h, arg_14h, &var_1dh);\n    uVar3 = (**(*arg_ch + 8))(&var_1ch, arg_18h);\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar3;\n    }\n    fcn.0048bdd0(&var_1dh);\n    return uVar3;\n}\n",
        "token_count": 285
    },
    "00494520": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00494520(uint noname_0, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_2ch;\n    uchar var_1dh;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    fcn.0048d4c0(arg_10h, arg_14h, &var_1dh);\n    uVar3 = (**(*arg_ch + 8))(&var_1ch, arg_18h);\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar3;\n    }\n    fcn.0048bdd0(&var_1dh);\n    return uVar3;\n}\n",
        "token_count": 284
    },
    "004947d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.004947d0(uint noname_0, int32_t *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar var_dh;\n    int32_t var_ch;\n    uint var_bp_8h;\n    \n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h);\n    if (*(arg_10h + 0x18) != NULL) {\n        (**(arg_10h + 0x18))(arg_10h);\n    }\n    fcn.0048d530(&var_ch);\n    iVar3 = *0x515a34;\n    uVar2 = *(var_ch + -0xc);\n    *(arg_10h + 0x18) = 0x493e70;\n    *(arg_10h + 4) = uVar2;\n    if (iVar3 == 0) {\n        iVar3 = *(var_ch + -4);\n        *(var_ch + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_ch + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar3) {\n        return;\n    }\n    fcn.0048bdd0(&var_dh);\n    return;\n}\n",
        "token_count": 348
    },
    "00494930": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.00494930(uint noname_0, int32_t *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar var_dh;\n    int32_t var_ch;\n    uint var_bp_8h;\n    \n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h);\n    if (*(arg_10h + 0x18) != NULL) {\n        (**(arg_10h + 0x18))(arg_10h);\n    }\n    fcn.004857c0(&var_ch);\n    iVar3 = *0x515a34;\n    uVar2 = *(var_ch + -0xc);\n    *(arg_10h + 0x18) = 0x493ef0;\n    *(arg_10h + 4) = uVar2;\n    if (iVar3 == 0) {\n        iVar3 = *(var_ch + -4);\n        *(var_ch + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_ch + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar3) {\n        return;\n    }\n    fcn.00483f10(&var_dh);\n    return;\n}\n",
        "token_count": 347
    },
    "00494ad0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00494ad0(uint noname_0, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_2ch;\n    uchar var_1dh;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    uVar3 = (**(*arg_ch + 8))();\n    *(arg_10h + 0x24) = uVar3;\n    uVar3 = (**(*arg_ch + 0xc))();\n    *(arg_10h + 8) = 0;\n    *(arg_10h + 0x25) = uVar3;\n    *(arg_10h + 0x14) = 0;\n    *(arg_10h + 0x1c) = 0;\n    *(arg_10h + 100) = 1;\n    (**(*arg_ch + 0x10))(arg_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar4 = fcn.004c3410(iVar2 + 1);\n    fcn.0044c7b0(iVar4, iVar2, 0);\n    *(arg_10h + 0xc) = iVar2;\n    *(iVar4 + iVar2) = 0;\n    *(arg_10h + 8) = iVar4;\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0048bdd0(&var_1dh);\n    }\n    (**(*arg_ch + 0x14))(arg_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar4 = fcn.004c3410(iVar2 + 1);\n    fcn.0044c7b0(iVar4, iVar2, 0);\n    *(arg_10h + 0x18) = iVar2;\n    *(iVar4 + iVar2) = 0;\n    iVar2 = *0x515a34;\n    *(arg_10h + 0x14) = iVar4;\n    if (iVar2 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0048bdd0(&var_1dh);\n    }\n    (**(*arg_ch + 0x18))(arg_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar5 = fcn.004c3410(iVar2 + 1);\n    fcn.0044c7b0(iVar5, iVar2, 0);\n    iVar4 = *0x515a34;\n    *(arg_10h + 0x1c) = iVar5;\n    *(iVar5 + iVar2) = 0;\n    *(arg_10h + 0x20) = iVar2;\n    if (iVar4 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return;\n    }\n    fcn.0048bdd0(&var_1dh);\n    return;\n}\n",
        "token_count": 931
    },
    "00494d00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00494d00(uint noname_0, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    uVar1 = (**(*arg_ch + 8))();\n    *(arg_10h + 0x24) = uVar1;\n    uVar1 = (**(*arg_ch + 0xc))();\n    *(arg_10h + 8) = 0;\n    *(arg_10h + 0x25) = uVar1;\n    *(arg_10h + 0x14) = 0;\n    *(arg_10h + 0x1c) = 0;\n    *(arg_10h + 100) = 1;\n    (**(*arg_ch + 0x10))(arg_ch);\n    iVar2 = fcn.004c3410(var_2ch + 1);\n    fcn.00455340(iVar2, var_2ch, 0);\n    *(arg_10h + 0xc) = var_2ch;\n    *(iVar2 + var_2ch) = 0;\n    *(arg_10h + 8) = iVar2;\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    (**(*arg_ch + 0x14))(arg_ch);\n    iVar2 = fcn.004c3410(var_2ch + 1);\n    fcn.00455340(iVar2, var_2ch, 0);\n    *(arg_10h + 0x18) = var_2ch;\n    *(iVar2 + var_2ch) = 0;\n    *(arg_10h + 0x14) = iVar2;\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    (**(*arg_ch + 0x18))(arg_ch);\n    iVar2 = fcn.004c3410(var_2ch + 1);\n    fcn.00455340(iVar2, var_2ch, 0);\n    *(iVar2 + var_2ch) = 0;\n    *(arg_10h + 0x1c) = iVar2;\n    *(arg_10h + 0x20) = var_2ch;\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    return;\n}\n",
        "token_count": 616
    },
    "00494e70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch_2\n\nvoid __cdecl\nfcn.00494e70(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar uVar4;\n    ushort uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    int32_t *var_ch_2;\n    int32_t var_10h_2;\n    uint var_ch;\n    uint var_10h;\n    uint var_2ch;\n    uint var_1ch;\n    uchar uStack249;\n    int32_t iStack248;\n    uchar *puStack232;\n    int32_t *piStack228;\n    int32_t *piStack224;\n    uchar *puStack220;\n    uchar *puStack216;\n    int32_t *piStack212;\n    int32_t *piStack208;\n    int32_t iStack204;\n    int32_t iStack200;\n    int32_t *piStack196;\n    uint uStack192;\n    int32_t iStack172;\n    int32_t *piStack168;\n    uchar *puStack156;\n    int32_t *piStack152;\n    uchar auStack148 [28];\n    int32_t iStack120;\n    int32_t *piStack116;\n    uchar *puStack112;\n    uchar *puStack108;\n    int32_t iStack104;\n    uchar *puStack100;\n    int32_t *piStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    int32_t iStack80;\n    int32_t *piStack76;\n    uint uStack72;\n    uint var_3ch_2;\n    int32_t var_30h_2;\n    int32_t var_2ch_3;\n    uint var_3ch;\n    uchar var_1dh_3;\n    int32_t var_30h;\n    uint var_2ch_2;\n    uint var_28h;\n    uint var_1ch_2;\n    \n    iStack80 = 0x494e86;\n    uVar5 = (**(*var_ch_2 + 8))();\n    *(var_10h_2 + 0x24) = uVar5;\n    iStack80 = 0x494e91;\n    uVar5 = (**(*var_ch_2 + 0xc))();\n    *(var_10h_2 + 8) = 0;\n    *(var_10h_2 + 0x26) = uVar5;\n    iVar6 = *var_ch_2;\n    *(var_10h_2 + 0x14) = 0;\n    *(var_10h_2 + 0x1c) = 0;\n    *(var_10h_2 + 0xa4) = 1;\n    piStack76 = var_ch_2;\n    iStack80 = 0x494ebc;\n    (**(iVar6 + 0x10))();\n    iVar6 = *(var_30h + -0xc);\n    iStack80 = iVar6 + 1;\n    uStack84 = 0x494ed0;\n    iStack80 = fcn.004c3410();\n    uStack72 = 0;\n    uStack84 = 0x494eea;\n    piStack76 = iVar6;\n    var_2ch_3 = iStack80;\n    fcn.0044c7b0();\n    *(var_10h_2 + 0xc) = iVar6;\n    *(var_2ch_3 + iVar6) = 0;\n    *(var_10h_2 + 8) = var_2ch_3;\n    if (*0x515a34 == 0) {\n        iVar6 = *(var_30h + -4);\n        *(var_30h + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar10 = var_30h + -4;\n        iVar6 = *piVar10;\n        *piVar10 = *piVar10 + -1;\n    }\n    if (iVar6 < 1) {\n        puStack92 = &stack0xffffffdf;\n        piStack96 = 0x495040;\n        fcn.0048bdd0();\n    }\n    piStack96 = var_ch_2;\n    puStack100 = 0x494f26;\n    (**(*var_ch_2 + 0x14))();\n    var_2ch_3 = *(var_30h + -0xc);\n    uVar11 = var_2ch_3 + 1;\n    if (uVar11 < 0x3fffffff) {\n        puStack100 = uVar11 * 2;\n        iStack104 = 0x494f4f;\n        var_30h_2 = puStack100;\n        iVar6 = fcn.004c3410();\n        puStack92 = NULL;\n        piStack96 = var_2ch_3;\n        iStack104 = 0x494f6b;\n        puStack100 = iVar6;\n        fcn.0044b8d0();\n        *(var_10h_2 + 0x14) = iVar6;\n        *(iVar6 + -2 + var_30h_2) = 0;\n        *(var_10h_2 + 0x18) = var_2ch_3;\n        if (*0x515a34 == 0) {\n            iVar6 = *(var_30h + -4);\n            *(var_30h + -4) = iVar6 + -1;\n        }\n        else {\n            LOCK();\n            piVar10 = var_30h + -4;\n            iVar6 = *piVar10;\n            *piVar10 = *piVar10 + -1;\n        }\n        if (iVar6 < 1) {\n            puStack112 = &stack0xffffffdf;\n            piStack116 = 0x495070;\n            fcn.00483f10();\n        }\n        piStack116 = var_ch_2;\n        iStack120 = 0x494fad;\n        (**(*var_ch_2 + 0x18))();\n        uVar11 = *(var_30h + -0xc);\n        var_ch_2 = uVar11 + 1;\n        if (var_ch_2 < 0x3fffffff) {\n            puStack100 = 0x494fcf;\n            piStack96 = var_ch_2 * 2;\n            piStack96 = fcn.004c3410();\n            uStack88 = 0;\n            puStack100 = 0x494fe9;\n            puStack92 = uVar11;\n            var_2ch_3 = piStack96;\n            fcn.0044b8d0();\n            *(var_10h_2 + 0x20) = uVar11;\n            *(var_10h_2 + 0x1c) = var_2ch_3;\n            iVar6 = *0x515a34;\n            *(var_2ch_3 + -2 + var_ch_2 * 2) = 0;\n            if (iVar6 == 0) {\n                iVar6 = *(var_30h + -4);\n                *(var_30h + -4) = iVar6 + -1;\n            }\n            else {\n                LOCK();\n                piVar10 = var_30h + -4;\n                iVar6 = *piVar10;\n                *piVar10 = *piVar10 + -1;\n            }\n            if (0 < iVar6) {\n                return;\n            }\n            puStack108 = &stack0xffffffdf;\n            puStack112 = 0x49509c;\n            fcn.00483f10();\n            return;\n        }\n        puStack100 = 0x4950bd;\n        fcn.004c3b60();\n        piStack96 = &stack0xffffffdf;\n        puStack100 = 0x4950ce;\n        fcn.0048bdf0();\n        puStack100 = var_10h_2;\n        iStack104 = 0x4950d7;\n        fcn.0043b0b0();\n    }\n    else {\n        iStack104 = 0x4950b0;\n        var_10h_2 = fcn.004c3b60();\n    }\n    puStack100 = &stack0xffffffdf;\n    iStack104 = 0x4950e8;\n    fcn.00483f30();\n    puStack108 = 0x4950f1;\n    iStack104 = var_10h_2;\n    fcn.0043b0b0();\n    puVar3 = puStack92;\n    piVar10 = piStack96;\n    iStack200 = 0x495116;\n    iStack120 = var_10h_2;\n    piStack116 = var_ch_2;\n    puStack112 = uVar11;\n    puStack108 = &stack0xfffffffc;\n    uVar5 = (**(*piStack96 + 8))();\n    *(puVar3 + 0x24) = uVar5;\n    iStack200 = 0x495121;\n    uVar5 = (**(*piVar10 + 0xc))();\n    *(puVar3 + 8) = 0;\n    *(puVar3 + 0x26) = uVar5;\n    iVar6 = *piVar10;\n    *(puVar3 + 0x14) = 0;\n    *(puVar3 + 0x1c) = 0;\n    puVar3[0xa4] = 1;\n    piStack196 = piVar10;\n    iStack200 = 0x49514c;\n    (**(iVar6 + 0x10))();\n    piVar1 = piStack152;\n    iStack200 = piStack152 + 1;\n    iStack204 = 0x49515d;\n    iStack200 = fcn.004c3410();\n    uStack192 = 0;\n    piStack196 = piVar1;\n    iStack204 = 0x495177;\n    piStack168 = iStack200;\n    fcn.00455340();\n    *(puVar3 + 0xc) = piVar1;\n    *(piStack168 + piVar1) = 0;\n    *(puVar3 + 8) = piStack168;\n    if (puStack156 != &stack0xffffff6c) {\n        piStack212 = puStack156;\n        puStack216 = 0x495199;\n        fcn.004c33f0();\n    }\n    piStack212 = piVar10;\n    puStack216 = 0x4951a4;\n    (**(*piVar10 + 0x14))();\n    piStack224 = piStack152 + 1;\n    piStack168 = piStack152;\n    if (piStack224 < 0x3fffffff) {\n        puStack216 = piStack224 * 2;\n        puStack220 = 0x4951ca;\n        iStack172 = puStack216;\n        iVar6 = fcn.004c3410();\n        piStack208 = NULL;\n        piStack212 = piStack168;\n        puStack220 = 0x4951e6;\n        puStack216 = iVar6;\n        fcn.004560f0();\n        *(puVar3 + 0x14) = iVar6;\n        *(puVar3 + 0x18) = piStack168;\n        *(iVar6 + -2 + iStack172) = 0;\n        if (puStack156 != &stack0xffffff6c) {\n            piStack228 = puStack156;\n            puStack232 = 0x49520e;\n            fcn.004c33f0();\n        }\n        piStack228 = piVar10;\n        puStack232 = 0x495219;\n        (**(*piVar10 + 0x18))();\n        piVar10 = piStack152 + 1;\n        piStack224 = piStack152;\n        if (piVar10 < 0x3fffffff) {\n            puStack220 = 0x495234;\n            puStack216 = piVar10 * 2;\n            puStack216 = fcn.004c3410();\n            piStack208 = NULL;\n            piStack212 = piStack152;\n            puStack220 = 0x49524e;\n            piStack168 = puStack216;\n            fcn.004560f0();\n            *(puVar3 + 0x20) = piStack152;\n            *(piStack168 + -2 + piVar10 * 2) = 0;\n            *(puVar3 + 0x1c) = piStack168;\n            if (puStack156 != &stack0xffffff6c) {\n                piStack228 = puStack156;\n                puStack232 = 0x495273;\n                fcn.004c33f0();\n            }\n            return;\n        }\n    }\n    else {\n        puStack220 = 0x49528c;\n        fcn.004c3b60();\n    }\n    puStack220 = 0x495291;\n    fcn.004c3b60();\n    if (puStack156 != &stack0xffffff6c) {\n        puStack216 = puStack156;\n        puStack220 = 0x4952a3;\n        fcn.004c33f0();\n    }\n    puStack216 = puVar3;\n    puStack220 = 0x4952ab;\n    fcn.0043b0b0();\n    iVar2 = iStack204;\n    piVar1 = piStack208;\n    puStack232 = puVar3;\n    piStack228 = piVar10;\n    puStack220 = &stack0xffffff94;\n    uVar4 = (**(*piStack208 + 8))();\n    *(iVar2 + 0x11) = uVar4;\n    uVar4 = (**(*piVar1 + 0xc))();\n    *(iVar2 + 0x12) = uVar4;\n    uVar7 = (**(*piVar1 + 0x20))();\n    *(iVar2 + 8) = 0;\n    *(iVar2 + 0x2c) = uVar7;\n    *(iVar2 + 0x14) = 0;\n    *(iVar2 + 0x1c) = 0;\n    *(iVar2 + 0x24) = 0;\n    *(iVar2 + 0x43) = 1;\n    (**(*piVar1 + 0x10))(piVar1);\n    iVar6 = *(iStack248 + -0xc);\n    iVar8 = fcn.004c3410(iVar6 + 1);\n    fcn.0044c7b0(iVar8, iVar6, 0);\n    *(iVar2 + 0xc) = iVar6;\n    *(iVar8 + iVar6) = 0;\n    *(iVar2 + 8) = iVar8;\n    if (*0x515a34 == 0) {\n        iVar6 = *(iStack248 + -4);\n        *(iStack248 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar10 = iStack248 + -4;\n        iVar6 = *piVar10;\n        *piVar10 = *piVar10 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0048bdd0(&stack0xffffff07);\n    }\n    (**(*piVar1 + 0x14))(piVar1);\n    iVar6 = *(iStack248 + -0xc);\n    iVar8 = fcn.004c3410(iVar6 + 1);\n    fcn.0044c7b0(iVar8, iVar6, 0);\n    *(iVar2 + 0x18) = iVar6;\n    *(iVar8 + iVar6) = 0;\n    *(iVar2 + 0x14) = iVar8;\n    if (*0x515a34 == 0) {\n        iVar6 = *(iStack248 + -4);\n        *(iStack248 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar10 = iStack248 + -4;\n        iVar6 = *piVar10;\n        *piVar10 = *piVar10 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0048bdd0(&stack0xffffff07);\n    }\n    (**(*piVar1 + 0x18))(piVar1);\n    iVar6 = *(iStack248 + -0xc);\n    iVar8 = fcn.004c3410(iVar6 + 1);\n    fcn.0044c7b0(iVar8, iVar6, 0);\n    *(iVar2 + 0x20) = iVar6;\n    *(iVar8 + iVar6) = 0;\n    iVar6 = *0x515a34;\n    *(iVar2 + 0x1c) = iVar8;\n    if (iVar6 == 0) {\n        iVar6 = *(iStack248 + -4);\n        *(iStack248 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar10 = iStack248 + -4;\n        iVar6 = *piVar10;\n        *piVar10 = *piVar10 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0048bdd0(&stack0xffffff07);\n    }\n    (**(*piVar1 + 0x1c))(piVar1);\n    iVar6 = *(iStack248 + -0xc);\n    iVar9 = fcn.004c3410(iVar6 + 1);\n    fcn.0044c7b0(iVar9, iVar6, 0);\n    iVar8 = *0x515a34;\n    *(iVar2 + 0x28) = iVar6;\n    *(iVar9 + iVar6) = 0;\n    *(iVar2 + 0x24) = iVar9;\n    if (iVar8 == 0) {\n        iVar6 = *(iStack248 + -4);\n        *(iStack248 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar10 = iStack248 + -4;\n        iVar6 = *piVar10;\n        *piVar10 = *piVar10 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0048bdd0(&stack0xffffff07);\n    }\n    uVar7 = (**(*piVar1 + 0x24))();\n    *(iVar2 + 0x30) = uVar7;\n    uVar7 = (**(*piVar1 + 0x28))();\n    *(iVar2 + 0x34) = uVar7;\n    return;\n}\n",
        "token_count": 4365
    },
    "00495100": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nvoid __cdecl\nfcn.00495100(uint noname_0, uint noname_1, int32_t noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, \n            uint noname_25, uint noname_26, uint noname_27, uint noname_28, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uchar uVar4;\n    ushort uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t *var_ch;\n    uint var_3ch;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar uStack145;\n    int32_t iStack144;\n    int32_t iStack128;\n    int32_t *piStack124;\n    int32_t *piStack120;\n    uchar *puStack116;\n    uint *puStack112;\n    int32_t *piStack108;\n    int32_t *piStack104;\n    int32_t iStack100;\n    int32_t iStack96;\n    int32_t *piStack92;\n    uint uStack88;\n    int32_t var_40h;\n    int32_t *var_3ch_2;\n    uint *var_30h_2;\n    int32_t *var_2ch_2;\n    uint var_28h_2;\n    uint var_ch_2;\n    \n    iStack96 = 0x495116;\n    uVar5 = (**(*var_ch + 8))();\n    *(noname_2 + 0x24) = uVar5;\n    iStack96 = 0x495121;\n    uVar5 = (**(*var_ch + 0xc))();\n    *(noname_2 + 8) = 0;\n    *(noname_2 + 0x26) = uVar5;\n    iVar6 = *var_ch;\n    *(noname_2 + 0x14) = 0;\n    *(noname_2 + 0x1c) = 0;\n    *(noname_2 + 0xa4) = 1;\n    piStack92 = var_ch;\n    iStack96 = 0x49514c;\n    (**(iVar6 + 0x10))();\n    piVar2 = var_2ch_2;\n    iStack96 = var_2ch_2 + 1;\n    iStack100 = 0x49515d;\n    iStack96 = fcn.004c3410();\n    uStack88 = 0;\n    piStack92 = piVar2;\n    iStack100 = 0x495177;\n    var_3ch_2 = iStack96;\n    fcn.00455340();\n    *(noname_2 + 0xc) = piVar2;\n    *(var_3ch_2 + piVar2) = 0;\n    *(noname_2 + 8) = var_3ch_2;\n    if (var_30h_2 != &fcn.00495100::var_28h_2) {\n        piStack108 = var_30h_2;\n        puStack112 = 0x495199;\n        fcn.004c33f0();\n    }\n    piStack108 = var_ch;\n    puStack112 = 0x4951a4;\n    (**(*var_ch + 0x14))();\n    piStack120 = var_2ch_2 + 1;\n    var_3ch_2 = var_2ch_2;\n    if (piStack120 < 0x3fffffff) {\n        puStack112 = piStack120 * 2;\n        puStack116 = 0x4951ca;\n        var_40h = puStack112;\n        iVar6 = fcn.004c3410();\n        piStack104 = NULL;\n        piStack108 = var_3ch_2;\n        puStack116 = 0x4951e6;\n        puStack112 = iVar6;\n        fcn.004560f0();\n        *(noname_2 + 0x14) = iVar6;\n        *(noname_2 + 0x18) = var_3ch_2;\n        *(iVar6 + -2 + var_40h) = 0;\n        if (var_30h_2 != &fcn.00495100::var_28h_2) {\n            piStack124 = var_30h_2;\n            iStack128 = 0x49520e;\n            fcn.004c33f0();\n        }\n        piStack124 = var_ch;\n        iStack128 = 0x495219;\n        (**(*var_ch + 0x18))();\n        var_ch = var_2ch_2 + 1;\n        piStack120 = var_2ch_2;\n        if (var_ch < 0x3fffffff) {\n            puStack116 = 0x495234;\n            puStack112 = var_ch * 2;\n            puStack112 = fcn.004c3410();\n            piStack104 = NULL;\n            piStack108 = var_2ch_2;\n            puStack116 = 0x49524e;\n            var_3ch_2 = puStack112;\n            fcn.004560f0();\n            *(noname_2 + 0x20) = var_2ch_2;\n            *(var_3ch_2 + -2 + var_ch * 2) = 0;\n            *(noname_2 + 0x1c) = var_3ch_2;\n            if (var_30h_2 != &fcn.00495100::var_28h_2) {\n                piStack124 = var_30h_2;\n                iStack128 = 0x495273;\n                fcn.004c33f0();\n            }\n            return;\n        }\n    }\n    else {\n        puStack116 = 0x49528c;\n        fcn.004c3b60();\n    }\n    puStack116 = 0x495291;\n    fcn.004c3b60();\n    if (var_30h_2 != &fcn.00495100::var_28h_2) {\n        puStack112 = var_30h_2;\n        puStack116 = 0x4952a3;\n        fcn.004c33f0();\n    }\n    puStack112 = noname_2;\n    puStack116 = 0x4952ab;\n    fcn.0043b0b0();\n    iVar3 = iStack100;\n    piVar2 = piStack104;\n    iStack128 = noname_2;\n    piStack124 = var_ch;\n    puStack116 = &stack0xfffffffc;\n    uVar4 = (**(*piStack104 + 8))();\n    *(iVar3 + 0x11) = uVar4;\n    uVar4 = (**(*piVar2 + 0xc))();\n    *(iVar3 + 0x12) = uVar4;\n    uVar7 = (**(*piVar2 + 0x20))();\n    *(iVar3 + 8) = 0;\n    *(iVar3 + 0x2c) = uVar7;\n    *(iVar3 + 0x14) = 0;\n    *(iVar3 + 0x1c) = 0;\n    *(iVar3 + 0x24) = 0;\n    *(iVar3 + 0x43) = 1;\n    (**(*piVar2 + 0x10))(piVar2);\n    iVar6 = *(iStack144 + -0xc);\n    iVar8 = fcn.004c3410(iVar6 + 1);\n    fcn.0044c7b0(iVar8, iVar6, 0);\n    *(iVar3 + 0xc) = iVar6;\n    *(iVar8 + iVar6) = 0;\n    *(iVar3 + 8) = iVar8;\n    if (*0x515a34 == 0) {\n        iVar6 = *(iStack144 + -4);\n        *(iStack144 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack144 + -4;\n        iVar6 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0048bdd0(&stack0xffffff6f);\n    }\n    (**(*piVar2 + 0x14))(piVar2);\n    iVar6 = *(iStack144 + -0xc);\n    iVar8 = fcn.004c3410(iVar6 + 1);\n    fcn.0044c7b0(iVar8, iVar6, 0);\n    *(iVar3 + 0x18) = iVar6;\n    *(iVar8 + iVar6) = 0;\n    *(iVar3 + 0x14) = iVar8;\n    if (*0x515a34 == 0) {\n        iVar6 = *(iStack144 + -4);\n        *(iStack144 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack144 + -4;\n        iVar6 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0048bdd0(&stack0xffffff6f);\n    }\n    (**(*piVar2 + 0x18))(piVar2);\n    iVar6 = *(iStack144 + -0xc);\n    iVar8 = fcn.004c3410(iVar6 + 1);\n    fcn.0044c7b0(iVar8, iVar6, 0);\n    *(iVar3 + 0x20) = iVar6;\n    *(iVar8 + iVar6) = 0;\n    iVar6 = *0x515a34;\n    *(iVar3 + 0x1c) = iVar8;\n    if (iVar6 == 0) {\n        iVar6 = *(iStack144 + -4);\n        *(iStack144 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack144 + -4;\n        iVar6 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0048bdd0(&stack0xffffff6f);\n    }\n    (**(*piVar2 + 0x1c))(piVar2);\n    iVar6 = *(iStack144 + -0xc);\n    iVar9 = fcn.004c3410(iVar6 + 1);\n    fcn.0044c7b0(iVar9, iVar6, 0);\n    iVar8 = *0x515a34;\n    *(iVar3 + 0x28) = iVar6;\n    *(iVar9 + iVar6) = 0;\n    *(iVar3 + 0x24) = iVar9;\n    if (iVar8 == 0) {\n        iVar6 = *(iStack144 + -4);\n        *(iStack144 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack144 + -4;\n        iVar6 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0048bdd0(&stack0xffffff6f);\n    }\n    uVar7 = (**(*piVar2 + 0x24))();\n    *(iVar3 + 0x30) = uVar7;\n    uVar7 = (**(*piVar2 + 0x28))();\n    *(iVar3 + 0x34) = uVar7;\n    return;\n}\n",
        "token_count": 2771
    },
    "004952b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nvoid fcn.004952b0(uint param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *var_ch;\n    int32_t var_10h;\n    uint var_2ch_2;\n    uchar var_1dh;\n    int32_t var_1ch;\n    uint var_ch_2;\n    \n    uVar3 = (**(*var_ch + 8))();\n    *(var_10h + 0x11) = uVar3;\n    uVar3 = (**(*var_ch + 0xc))();\n    *(var_10h + 0x12) = uVar3;\n    uVar4 = (**(*var_ch + 0x20))();\n    *(var_10h + 8) = 0;\n    *(var_10h + 0x2c) = uVar4;\n    *(var_10h + 0x14) = 0;\n    *(var_10h + 0x1c) = 0;\n    *(var_10h + 0x24) = 0;\n    *(var_10h + 0x43) = 1;\n    (**(*var_ch + 0x10))(var_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar5 = fcn.004c3410(iVar2 + 1);\n    fcn.0044c7b0(iVar5, iVar2, 0);\n    *(var_10h + 0xc) = iVar2;\n    *(iVar5 + iVar2) = 0;\n    *(var_10h + 8) = iVar5;\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0048bdd0(&var_1dh);\n    }\n    (**(*var_ch + 0x14))(var_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar5 = fcn.004c3410(iVar2 + 1);\n    fcn.0044c7b0(iVar5, iVar2, 0);\n    *(var_10h + 0x18) = iVar2;\n    *(iVar5 + iVar2) = 0;\n    *(var_10h + 0x14) = iVar5;\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0048bdd0(&var_1dh);\n    }\n    (**(*var_ch + 0x18))(var_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar5 = fcn.004c3410(iVar2 + 1);\n    fcn.0044c7b0(iVar5, iVar2, 0);\n    *(var_10h + 0x20) = iVar2;\n    *(iVar5 + iVar2) = 0;\n    iVar2 = *0x515a34;\n    *(var_10h + 0x1c) = iVar5;\n    if (iVar2 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0048bdd0(&var_1dh);\n    }\n    (**(*var_ch + 0x1c))(var_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar6 = fcn.004c3410(iVar2 + 1);\n    fcn.0044c7b0(iVar6, iVar2, 0);\n    iVar5 = *0x515a34;\n    *(var_10h + 0x28) = iVar2;\n    *(iVar6 + iVar2) = 0;\n    *(var_10h + 0x24) = iVar6;\n    if (iVar5 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0048bdd0(&var_1dh);\n    }\n    uVar4 = (**(*var_ch + 0x24))();\n    *(var_10h + 0x30) = uVar4;\n    uVar4 = (**(*var_ch + 0x28))();\n    *(var_10h + 0x34) = uVar4;\n    return;\n}\n",
        "token_count": 1299
    },
    "00495590": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00495590(uint noname_0, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    uVar1 = (**(*arg_ch + 8))();\n    *(arg_10h + 0x11) = uVar1;\n    uVar1 = (**(*arg_ch + 0xc))();\n    *(arg_10h + 0x12) = uVar1;\n    uVar2 = (**(*arg_ch + 0x20))();\n    *(arg_10h + 8) = 0;\n    *(arg_10h + 0x2c) = uVar2;\n    *(arg_10h + 0x14) = 0;\n    *(arg_10h + 0x1c) = 0;\n    *(arg_10h + 0x24) = 0;\n    *(arg_10h + 0x43) = 1;\n    (**(*arg_ch + 0x10))(arg_ch);\n    iVar3 = fcn.004c3410(var_2ch + 1);\n    fcn.00455340(iVar3, var_2ch, 0);\n    *(arg_10h + 0xc) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 8) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    (**(*arg_ch + 0x14))(arg_ch);\n    iVar3 = fcn.004c3410(var_2ch + 1);\n    fcn.00455340(iVar3, var_2ch, 0);\n    *(arg_10h + 0x18) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 0x14) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    (**(*arg_ch + 0x18))(arg_ch);\n    iVar3 = fcn.004c3410(var_2ch + 1);\n    fcn.00455340(iVar3, var_2ch, 0);\n    *(arg_10h + 0x20) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 0x1c) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    (**(*arg_ch + 0x1c))(arg_ch);\n    iVar3 = fcn.004c3410(var_2ch + 1);\n    fcn.00455340(iVar3, var_2ch, 0);\n    *(arg_10h + 0x28) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 0x24) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    uVar2 = (**(*arg_ch + 0x24))();\n    *(arg_10h + 0x30) = uVar2;\n    uVar2 = (**(*arg_ch + 0x28))();\n    *(arg_10h + 0x34) = uVar2;\n    return;\n}\n",
        "token_count": 871
    },
    "00495790": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00495790(uint noname_0, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_2ch;\n    uchar var_1dh;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    uVar3 = (**(*arg_ch + 8))();\n    *(arg_10h + 0x11) = uVar3;\n    uVar3 = (**(*arg_ch + 0xc))();\n    *(arg_10h + 0x12) = uVar3;\n    uVar4 = (**(*arg_ch + 0x20))();\n    *(arg_10h + 8) = 0;\n    *(arg_10h + 0x2c) = uVar4;\n    *(arg_10h + 0x14) = 0;\n    *(arg_10h + 0x1c) = 0;\n    *(arg_10h + 0x24) = 0;\n    *(arg_10h + 0x43) = 1;\n    (**(*arg_ch + 0x10))(arg_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar5 = fcn.004c3410(iVar2 + 1);\n    fcn.0044c7b0(iVar5, iVar2, 0);\n    *(arg_10h + 0xc) = iVar2;\n    *(iVar5 + iVar2) = 0;\n    *(arg_10h + 8) = iVar5;\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0048bdd0(&var_1dh);\n    }\n    (**(*arg_ch + 0x14))(arg_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar5 = fcn.004c3410(iVar2 + 1);\n    fcn.0044c7b0(iVar5, iVar2, 0);\n    *(arg_10h + 0x18) = iVar2;\n    *(iVar5 + iVar2) = 0;\n    *(arg_10h + 0x14) = iVar5;\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0048bdd0(&var_1dh);\n    }\n    (**(*arg_ch + 0x18))(arg_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar5 = fcn.004c3410(iVar2 + 1);\n    fcn.0044c7b0(iVar5, iVar2, 0);\n    *(arg_10h + 0x20) = iVar2;\n    *(iVar5 + iVar2) = 0;\n    iVar2 = *0x515a34;\n    *(arg_10h + 0x1c) = iVar5;\n    if (iVar2 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0048bdd0(&var_1dh);\n    }\n    (**(*arg_ch + 0x1c))(arg_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar6 = fcn.004c3410(iVar2 + 1);\n    fcn.0044c7b0(iVar6, iVar2, 0);\n    iVar5 = *0x515a34;\n    *(arg_10h + 0x28) = iVar2;\n    *(iVar6 + iVar2) = 0;\n    *(arg_10h + 0x24) = iVar6;\n    if (iVar5 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0048bdd0(&var_1dh);\n    }\n    uVar4 = (**(*arg_ch + 0x24))();\n    *(arg_10h + 0x30) = uVar4;\n    uVar4 = (**(*arg_ch + 0x28))();\n    *(arg_10h + 0x34) = uVar4;\n    return;\n}\n",
        "token_count": 1278
    },
    "00495a70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00495a70(uint noname_0, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    uVar1 = (**(*arg_ch + 8))();\n    *(arg_10h + 0x11) = uVar1;\n    uVar1 = (**(*arg_ch + 0xc))();\n    *(arg_10h + 0x12) = uVar1;\n    uVar2 = (**(*arg_ch + 0x20))();\n    *(arg_10h + 8) = 0;\n    *(arg_10h + 0x2c) = uVar2;\n    *(arg_10h + 0x14) = 0;\n    *(arg_10h + 0x1c) = 0;\n    *(arg_10h + 0x24) = 0;\n    *(arg_10h + 0x43) = 1;\n    (**(*arg_ch + 0x10))(arg_ch);\n    iVar3 = fcn.004c3410(var_2ch + 1);\n    fcn.00455340(iVar3, var_2ch, 0);\n    *(arg_10h + 0xc) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 8) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    (**(*arg_ch + 0x14))(arg_ch);\n    iVar3 = fcn.004c3410(var_2ch + 1);\n    fcn.00455340(iVar3, var_2ch, 0);\n    *(arg_10h + 0x18) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 0x14) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    (**(*arg_ch + 0x18))(arg_ch);\n    iVar3 = fcn.004c3410(var_2ch + 1);\n    fcn.00455340(iVar3, var_2ch, 0);\n    *(arg_10h + 0x20) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 0x1c) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    (**(*arg_ch + 0x1c))(arg_ch);\n    iVar3 = fcn.004c3410(var_2ch + 1);\n    fcn.00455340(iVar3, var_2ch, 0);\n    *(arg_10h + 0x28) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 0x24) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    uVar2 = (**(*arg_ch + 0x24))();\n    *(arg_10h + 0x30) = uVar2;\n    uVar2 = (**(*arg_ch + 0x28))();\n    *(arg_10h + 0x34) = uVar2;\n    return;\n}\n",
        "token_count": 872
    },
    "00495c70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_1ch_2\n\nvoid __cdecl\nfcn.00495c70(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint arg_ch, uint arg_10h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint *extraout_ECX;\n    uint32_t uVar8;\n    int32_t *var_ch_2;\n    int32_t var_10h_2;\n    uint var_ch;\n    uint var_10h;\n    uint var_2ch;\n    uint var_1ch;\n    uchar *puStack380;\n    int32_t iStack376;\n    uchar auStack372 [28];\n    int32_t iStack344;\n    int32_t *piStack340;\n    int32_t *piStack336;\n    uchar *puStack332;\n    int32_t iStack328;\n    uchar *puStack324;\n    int32_t *piStack320;\n    int32_t *piStack316;\n    uchar *puStack312;\n    uint uStack304;\n    int32_t iStack300;\n    int32_t *piStack296;\n    uint uStack292;\n    int32_t iStack272;\n    int32_t *piStack268;\n    uchar auStack253 [17];\n    int32_t *piStack236;\n    int32_t *piStack232;\n    uint32_t uStack228;\n    uchar *puStack224;\n    int32_t *piStack220;\n    int32_t *piStack216;\n    int32_t *piStack212;\n    int32_t iStack208;\n    int32_t iStack204;\n    int32_t *piStack200;\n    uint uStack196;\n    int32_t iStack176;\n    int32_t *piStack172;\n    int32_t *piStack160;\n    int32_t *piStack156;\n    int32_t aiStack152 [7];\n    int32_t iStack124;\n    int32_t *piStack120;\n    int32_t *piStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    int32_t *piStack100;\n    int32_t *piStack96;\n    int32_t iStack92;\n    uint uStack84;\n    int32_t iStack80;\n    int32_t *piStack76;\n    uint uStack72;\n    int32_t var_30h_2;\n    int32_t *var_2ch_3;\n    uint var_28h_2;\n    uint var_3ch;\n    int32_t var_1ch_3;\n    uint var_30h;\n    uint var_2ch_2;\n    uint var_28h;\n    uint var_1ch_2;\n    \n    iStack80 = 0x495c86;\n    uVar1 = (**(*var_ch_2 + 8))();\n    *(var_10h_2 + 0x12) = uVar1;\n    iStack80 = 0x495c91;\n    uVar1 = (**(*var_ch_2 + 0xc))();\n    *(var_10h_2 + 0x14) = uVar1;\n    iStack80 = 0x495c9c;\n    uVar2 = (**(*var_ch_2 + 0x20))();\n    *(var_10h_2 + 8) = 0;\n    *(var_10h_2 + 0x30) = uVar2;\n    *(var_10h_2 + 0x18) = 0;\n    *(var_10h_2 + 0x20) = 0;\n    *(var_10h_2 + 0x28) = 0;\n    *(var_10h_2 + 0x52) = 1;\n    piStack76 = var_ch_2;\n    iStack80 = 0x495cca;\n    (**(*var_ch_2 + 0x10))();\n    iVar4 = *(var_1ch_3 + -0xc);\n    iStack80 = iVar4 + 1;\n    uStack84 = 0x495cde;\n    iStack80 = fcn.004c3410();\n    uStack72 = 0;\n    uStack84 = 0x495cf8;\n    piStack76 = iVar4;\n    var_2ch_3 = iStack80;\n    fcn.0044c7b0();\n    *(var_10h_2 + 0xc) = iVar4;\n    *(var_2ch_3 + iVar4) = 0;\n    *(var_10h_2 + 8) = var_2ch_3;\n    if (*0x515a34 == 0) {\n        iVar4 = *(var_1ch_3 + -4);\n        *(var_1ch_3 + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar3 = var_1ch_3 + -4;\n        iVar4 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n    }\n    if (iVar4 < 1) {\n        iStack92 = &fcn.00495c70::var_3ch + 3;\n        piStack96 = 0x495f00;\n        fcn.0048bdd0();\n    }\n    piStack96 = var_ch_2;\n    piStack100 = 0x495d34;\n    (**(*var_ch_2 + 0x14))();\n    var_2ch_3 = *(var_1ch_3 + -0xc);\n    uVar8 = var_2ch_3 + 1;\n    if (uVar8 < 0x3fffffff) {\n        piStack100 = uVar8 * 2;\n        iStack104 = 0x495d5d;\n        var_30h_2 = piStack100;\n        piVar3 = fcn.004c3410();\n        iStack92 = 0;\n        piStack96 = var_2ch_3;\n        iStack104 = 0x495d79;\n        piStack100 = piVar3;\n        fcn.0044b8d0();\n        *(var_10h_2 + 0x18) = piVar3;\n        *(piVar3 + var_30h_2 + -2) = 0;\n        *(var_10h_2 + 0x1c) = var_2ch_3;\n        if (*0x515a34 == 0) {\n            iVar4 = *(var_1ch_3 + -4);\n            *(var_1ch_3 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = var_1ch_3 + -4;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            puStack112 = &fcn.00495c70::var_3ch + 3;\n            piStack116 = 0x495f30;\n            fcn.00483f10();\n        }\n        piStack116 = var_ch_2;\n        piStack120 = 0x495dbb;\n        (**(*var_ch_2 + 0x18))();\n        var_2ch_3 = *(var_1ch_3 + -0xc);\n        uVar8 = var_2ch_3 + 1;\n        if (0x3ffffffe < uVar8) goto code_r0x00495fbf;\n        iStack108 = 0x495de0;\n        iStack104 = uVar8 * 2;\n        iStack104 = fcn.004c3410();\n        piStack96 = NULL;\n        piStack100 = var_2ch_3;\n        iStack108 = 0x495dff;\n        var_30h_2 = iStack104;\n        fcn.0044b8d0();\n        *(var_30h_2 + -2 + uVar8 * 2) = 0;\n        iVar4 = *0x515a34;\n        *(var_10h_2 + 0x20) = var_30h_2;\n        *(var_10h_2 + 0x24) = var_2ch_3;\n        if (iVar4 == 0) {\n            iVar4 = *(var_1ch_3 + -4);\n            *(var_1ch_3 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = var_1ch_3 + -4;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            piStack116 = &fcn.00495c70::var_3ch + 3;\n            piStack120 = 0x495f60;\n            fcn.00483f10();\n        }\n        piStack120 = var_ch_2;\n        iStack124 = 0x495e41;\n        (**(*var_ch_2 + 0x1c))();\n        var_2ch_3 = *(var_1ch_3 + -0xc);\n        uVar8 = var_2ch_3 + 1;\n        if (uVar8 < 0x3fffffff) {\n            iStack104 = uVar8 * 2;\n            iStack108 = 0x495e6a;\n            var_30h_2 = iStack104;\n            iVar4 = fcn.004c3410();\n            piStack96 = NULL;\n            piStack100 = var_2ch_3;\n            iStack108 = 0x495e86;\n            iStack104 = iVar4;\n            fcn.0044b8d0();\n            *(var_10h_2 + 0x28) = iVar4;\n            *(iVar4 + -2 + var_30h_2) = 0;\n            iVar4 = *0x515a34;\n            *(var_10h_2 + 0x2c) = var_2ch_3;\n            if (iVar4 == 0) {\n                iVar4 = *(var_1ch_3 + -4);\n                *(var_1ch_3 + -4) = iVar4 + -1;\n            }\n            else {\n                LOCK();\n                piVar3 = var_1ch_3 + -4;\n                iVar4 = *piVar3;\n                *piVar3 = *piVar3 + -1;\n            }\n            if (iVar4 < 1) {\n                piStack116 = &fcn.00495c70::var_3ch + 3;\n                piStack120 = 0x495f90;\n                fcn.00483f10();\n            }\n            iStack124 = 0x495ec5;\n            uVar2 = (**(*var_ch_2 + 0x24))();\n            *(var_10h_2 + 0x34) = uVar2;\n            iStack124 = 0x495ecf;\n            uVar2 = (**(*var_ch_2 + 0x28))();\n            *(var_10h_2 + 0x38) = uVar2;\n            return;\n        }\n        iStack108 = 0x495fd1;\n        fcn.004c3b60();\n    }\n    else {\n        iStack104 = 0x495fa5;\n        fcn.004c3b60();\n        piStack100 = &fcn.00495c70::var_3ch + 3;\n        iStack104 = 0x495fb6;\n        fcn.0048bdf0();\n        iStack104 = var_10h_2;\n        iStack108 = 0x495fbf;\n        fcn.0043b0b0();\ncode_r0x00495fbf:\n        iStack108 = 0x495fc4;\n        var_10h_2 = fcn.004c3b60();\n    }\n    iStack104 = &fcn.00495c70::var_3ch + 3;\n    iStack108 = 0x495fe2;\n    fcn.00483f30();\n    puStack112 = 0x495feb;\n    iStack108 = var_10h_2;\n    fcn.0043b0b0();\n    piVar5 = piStack96;\n    piVar6 = piStack100;\n    piStack120 = var_ch_2;\n    iStack204 = 0x496006;\n    iStack124 = var_10h_2;\n    piStack116 = uVar8;\n    puStack112 = &fcn.00495c70::var_1ch_2;\n    uVar1 = (**(*piStack100 + 8))();\n    *(piVar5 + 0x12) = uVar1;\n    iStack204 = 0x496011;\n    uVar1 = (**(*piVar6 + 0xc))();\n    *(piVar5 + 5) = uVar1;\n    iStack204 = 0x49601c;\n    iVar4 = (**(*piVar6 + 0x20))();\n    piVar5[2] = 0;\n    piVar5[0xc] = iVar4;\n    piVar5[6] = 0;\n    piVar5[8] = 0;\n    piVar5[10] = 0;\n    *(piVar5 + 0x52) = 1;\n    piStack200 = piVar6;\n    iStack204 = 0x49604a;\n    (**(*piVar6 + 0x10))();\n    piVar3 = piStack156;\n    iStack204 = piStack156 + 1;\n    iStack208 = 0x49605b;\n    iStack204 = fcn.004c3410();\n    uStack196 = 0;\n    piStack200 = piVar3;\n    iStack208 = 0x496075;\n    piStack172 = iStack204;\n    fcn.00455340();\n    piVar5[3] = piVar3;\n    *(piStack172 + piVar3) = 0;\n    piVar5[2] = piStack172;\n    if (piStack160 != &stack0xffffff68) {\n        piStack216 = piStack160;\n        piStack220 = 0x496097;\n        fcn.004c33f0();\n    }\n    piStack216 = piVar6;\n    piStack220 = 0x4960a2;\n    (**(*piVar6 + 0x14))();\n    uStack228 = piStack156 + 1;\n    piStack172 = piStack156;\n    if (uStack228 < 0x3fffffff) {\n        piStack220 = uStack228 * 2;\n        puStack224 = 0x4960c8;\n        iStack176 = piStack220;\n        iVar4 = fcn.004c3410();\n        piStack212 = NULL;\n        piStack216 = piStack172;\n        puStack224 = 0x4960e4;\n        piStack220 = iVar4;\n        fcn.004560f0();\n        piVar5[6] = iVar4;\n        piVar5[7] = piStack172;\n        *(iVar4 + -2 + iStack176) = 0;\n        if (piStack160 != &stack0xffffff68) {\n            piStack232 = piStack160;\n            piStack236 = 0x49610c;\n            fcn.004c33f0();\n        }\n        piStack232 = piVar6;\n        piStack236 = 0x496117;\n        (**(*piVar6 + 0x18))();\n        uStack228 = piStack156 + 1;\n        piStack172 = piStack156;\n        if (0x3ffffffe < uStack228) goto code_r0x00496227;\n        puStack224 = 0x496139;\n        piStack220 = uStack228 * 2;\n        piStack220 = fcn.004c3410();\n        piStack212 = NULL;\n        piStack216 = piStack172;\n        puStack224 = 0x496158;\n        iStack176 = piStack220;\n        fcn.004560f0();\n        *(iStack176 + -2 + uStack228 * 2) = 0;\n        piVar5[8] = iStack176;\n        piVar5[9] = piStack172;\n        if (piStack160 != &stack0xffffff68) {\n            piStack232 = piStack160;\n            piStack236 = 0x496180;\n            fcn.004c33f0();\n        }\n        piStack232 = piVar6;\n        piStack236 = 0x49618b;\n        (**(*piVar6 + 0x1c))();\n        uStack228 = piStack156 + 1;\n        piStack172 = piStack156;\n        if (uStack228 < 0x3fffffff) {\n            piStack220 = uStack228 * 2;\n            puStack224 = 0x4961ad;\n            iStack176 = piStack220;\n            iVar4 = fcn.004c3410();\n            piStack212 = NULL;\n            piStack216 = piStack172;\n            puStack224 = 0x4961c9;\n            piStack220 = iVar4;\n            fcn.004560f0();\n            piVar5[10] = iVar4;\n            *(iVar4 + -2 + iStack176) = 0;\n            piVar5[0xb] = piStack172;\n            if (piStack160 != &stack0xffffff68) {\n                piStack232 = piStack160;\n                piStack236 = 0x4961f1;\n                fcn.004c33f0();\n            }\n            piStack236 = 0x4961f8;\n            iVar4 = (**(*piVar6 + 0x24))();\n            piVar5[0xd] = iVar4;\n            piStack236 = 0x496202;\n            iVar4 = (**(*piVar6 + 0x28))();\n            piVar5[0xe] = iVar4;\n            return;\n        }\n        puStack224 = 0x49621a;\n        piVar5 = fcn.004c3b60();\n    }\n    else {\n        puStack224 = 0x496227;\n        fcn.004c3b60();\ncode_r0x00496227:\n        puStack224 = 0x49622c;\n        fcn.004c3b60();\n    }\n    if (piStack160 != &stack0xffffff68) {\n        piStack220 = piStack160;\n        puStack224 = 0x49623e;\n        fcn.004c33f0();\n    }\n    puStack224 = 0x496246;\n    piStack220 = piVar5;\n    fcn.0043b0b0();\n    iVar7 = iStack208;\n    piVar3 = piStack212;\n    piStack232 = piVar6;\n    iStack300 = 0x496266;\n    piStack236 = piVar5;\n    puStack224 = &stack0xffffff90;\n    uVar1 = (**(*piStack212 + 8))();\n    *(iVar7 + 0x12) = uVar1;\n    iStack300 = 0x496271;\n    uVar1 = (**(*piVar3 + 0xc))();\n    *(iVar7 + 0x14) = uVar1;\n    iStack300 = 0x49627c;\n    uVar2 = (**(*piVar3 + 0x20))();\n    *(iVar7 + 8) = 0;\n    *(iVar7 + 0x30) = uVar2;\n    *(iVar7 + 0x18) = 0;\n    *(iVar7 + 0x20) = 0;\n    *(iVar7 + 0x28) = 0;\n    *(iVar7 + 0x52) = 1;\n    piStack296 = piVar3;\n    iStack300 = 0x4962aa;\n    (**(*piVar3 + 0x10))();\n    iVar4 = *(auStack253._1_4_ + -0xc);\n    iStack300 = iVar4 + 1;\n    uStack304 = 0x4962be;\n    iStack300 = fcn.004c3410();\n    uStack292 = 0;\n    uStack304 = 0x4962d8;\n    piStack296 = iVar4;\n    piStack268 = iStack300;\n    fcn.0044c7b0();\n    *(iVar7 + 0xc) = iVar4;\n    *(piStack268 + iVar4) = 0;\n    *(iVar7 + 8) = piStack268;\n    if (*0x515a34 == 0) {\n        iVar4 = *(auStack253._1_4_ + -4);\n        *(auStack253._1_4_ + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar6 = auStack253._1_4_ + -4;\n        iVar4 = *piVar6;\n        *piVar6 = *piVar6 + -1;\n    }\n    if (iVar4 < 1) {\n        puStack312 = &stack0xffffff03;\n        piStack316 = 0x4964e0;\n        fcn.0048bdd0();\n    }\n    piStack316 = piVar3;\n    piStack320 = 0x496314;\n    (**(*piVar3 + 0x14))();\n    piStack268 = *(auStack253._1_4_ + -0xc);\n    uVar8 = piStack268 + 1;\n    if (uVar8 < 0x3fffffff) {\n        piStack320 = uVar8 * 2;\n        puStack324 = 0x49633d;\n        iStack272 = piStack320;\n        piVar6 = fcn.004c3410();\n        puStack312 = NULL;\n        piStack316 = piStack268;\n        puStack324 = 0x496359;\n        piStack320 = piVar6;\n        fcn.0044b8d0();\n        *(iVar7 + 0x18) = piVar6;\n        *(piVar6 + iStack272 + -2) = 0;\n        *(iVar7 + 0x1c) = piStack268;\n        if (*0x515a34 == 0) {\n            iVar4 = *(auStack253._1_4_ + -4);\n            *(auStack253._1_4_ + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar6 = auStack253._1_4_ + -4;\n            iVar4 = *piVar6;\n            *piVar6 = *piVar6 + -1;\n        }\n        if (iVar4 < 1) {\n            puStack332 = &stack0xffffff03;\n            piStack336 = 0x496510;\n            fcn.00483f10();\n        }\n        piStack336 = piVar3;\n        piStack340 = 0x49639b;\n        (**(*piVar3 + 0x18))();\n        piStack268 = *(auStack253._1_4_ + -0xc);\n        uVar8 = piStack268 + 1;\n        if (0x3ffffffe < uVar8) goto code_r0x0049659f;\n        iStack328 = 0x4963c0;\n        puStack324 = uVar8 * 2;\n        puStack324 = fcn.004c3410();\n        piStack316 = NULL;\n        piStack320 = piStack268;\n        iStack328 = 0x4963df;\n        iStack272 = puStack324;\n        fcn.0044b8d0();\n        *(iStack272 + -2 + uVar8 * 2) = 0;\n        iVar4 = *0x515a34;\n        *(iVar7 + 0x20) = iStack272;\n        *(iVar7 + 0x24) = piStack268;\n        if (iVar4 == 0) {\n            iVar4 = *(auStack253._1_4_ + -4);\n            *(auStack253._1_4_ + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar6 = auStack253._1_4_ + -4;\n            iVar4 = *piVar6;\n            *piVar6 = *piVar6 + -1;\n        }\n        if (iVar4 < 1) {\n            piStack336 = &stack0xffffff03;\n            piStack340 = 0x496540;\n            fcn.00483f10();\n        }\n        piStack340 = piVar3;\n        iStack344 = 0x496421;\n        (**(*piVar3 + 0x1c))();\n        piStack268 = *(auStack253._1_4_ + -0xc);\n        uVar8 = piStack268 + 1;\n        if (uVar8 < 0x3fffffff) {\n            puStack324 = uVar8 * 2;\n            iStack328 = 0x49644a;\n            iStack272 = puStack324;\n            iVar4 = fcn.004c3410();\n            piStack316 = NULL;\n            piStack320 = piStack268;\n            iStack328 = 0x496466;\n            puStack324 = iVar4;\n            fcn.0044b8d0();\n            *(iVar7 + 0x28) = iVar4;\n            *(iVar4 + -2 + iStack272) = 0;\n            iVar4 = *0x515a34;\n            *(iVar7 + 0x2c) = piStack268;\n            if (iVar4 == 0) {\n                iVar4 = *(auStack253._1_4_ + -4);\n                *(auStack253._1_4_ + -4) = iVar4 + -1;\n            }\n            else {\n                LOCK();\n                piVar6 = auStack253._1_4_ + -4;\n                iVar4 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n            }\n            if (iVar4 < 1) {\n                piStack336 = &stack0xffffff03;\n                piStack340 = 0x496570;\n                fcn.00483f10();\n            }\n            iStack344 = 0x4964a5;\n            uVar2 = (**(*piVar3 + 0x24))();\n            *(iVar7 + 0x34) = uVar2;\n            iStack344 = 0x4964af;\n            uVar2 = (**(*piVar3 + 0x28))();\n            *(iVar7 + 0x38) = uVar2;\n            return;\n        }\n        iStack328 = 0x4965b1;\n        fcn.004c3b60();\n    }\n    else {\n        puStack324 = 0x496585;\n        fcn.004c3b60();\n        piStack320 = &stack0xffffff03;\n        puStack324 = 0x496596;\n        fcn.0048bdf0();\n        puStack324 = iVar7;\n        iStack328 = 0x49659f;\n        fcn.0043b0b0();\ncode_r0x0049659f:\n        iStack328 = 0x4965a4;\n        iVar7 = fcn.004c3b60();\n    }\n    puStack324 = &stack0xffffff03;\n    iStack328 = 0x4965c2;\n    fcn.00483f30();\n    puStack332 = 0x4965cb;\n    iStack328 = iVar7;\n    fcn.0043b0b0();\n    piVar5 = piStack316;\n    piVar6 = piStack320;\n    piStack340 = piVar3;\n    iStack344 = iVar7;\n    piStack336 = uVar8;\n    puStack332 = &stack0xffffff20;\n    uVar1 = (**(*piStack320 + 8))();\n    *(piVar5 + 0x12) = uVar1;\n    uVar1 = (**(*piVar6 + 0xc))();\n    *(piVar5 + 5) = uVar1;\n    iVar4 = (**(*piVar6 + 0x20))();\n    piVar5[2] = 0;\n    piVar5[0xc] = iVar4;\n    piVar5[6] = 0;\n    piVar5[8] = 0;\n    piVar5[10] = 0;\n    *(piVar5 + 0x52) = 1;\n    (**(*piVar6 + 0x10))(piVar6);\n    iVar4 = fcn.004c3410(iStack376 + 1);\n    fcn.00455340(iVar4, iStack376, 0);\n    piVar5[3] = iStack376;\n    *(iVar4 + iStack376) = 0;\n    piVar5[2] = iVar4;\n    if (puStack380 != &stack0xfffffe8c) {\n        fcn.004c33f0(puStack380);\n    }\n    (**(*piVar6 + 0x14))(piVar6);\n    if (iStack376 + 1U < 0x3fffffff) {\n        iVar4 = (iStack376 + 1U) * 2;\n        iVar7 = fcn.004c3410(iVar4);\n        fcn.004560f0(iVar7, iStack376, 0);\n        piVar5[6] = iVar7;\n        piVar5[7] = iStack376;\n        *(iVar7 + -2 + iVar4) = 0;\n        if (puStack380 != &stack0xfffffe8c) {\n            fcn.004c33f0(puStack380);\n        }\n        (**(*piVar6 + 0x18))(piVar6);\n        if (iStack376 + 1U < 0x3fffffff) {\n            iVar4 = (iStack376 + 1U) * 2;\n            iVar7 = fcn.004c3410(iVar4);\n            fcn.004560f0(iVar7, iStack376, 0);\n            *(iVar7 + -2 + iVar4) = 0;\n            piVar5[8] = iVar7;\n            piVar5[9] = iStack376;\n            if (puStack380 != &stack0xfffffe8c) {\n                fcn.004c33f0(puStack380);\n            }\n            (**(*piVar6 + 0x1c))(piVar6);\n            if (iStack376 + 1U < 0x3fffffff) {\n                iVar4 = (iStack376 + 1U) * 2;\n                iVar7 = fcn.004c3410(iVar4);\n                fcn.004560f0(iVar7, iStack376, 0);\n                piVar5[10] = iVar7;\n                *(iVar7 + -2 + iVar4) = 0;\n                piVar5[0xb] = iStack376;\n                if (puStack380 != &stack0xfffffe8c) {\n                    fcn.004c33f0(puStack380);\n                }\n                iVar4 = (**(*piVar6 + 0x24))();\n                piVar5[0xd] = iVar4;\n                iVar4 = (**(*piVar6 + 0x28))();\n                piVar5[0xe] = iVar4;\n                return;\n            }\n            piVar5 = fcn.004c3b60();\n            goto code_r0x0049680c;\n        }\n    }\n    else {\n        fcn.004c3b60();\n    }\n    fcn.004c3b60();\ncode_r0x0049680c:\n    if (puStack380 != &stack0xfffffe8c) {\n        fcn.004c33f0(puStack380);\n    }\n    fcn.0043b0b0(piVar5);\n    *extraout_ECX = 0x52c0a0;\n    fcn.004bede0(extraout_ECX + 4);\n    *extraout_ECX = 0x52be00;\n    fcn.004915b0();\n    fcn.004c33f0(extraout_ECX);\n    return;\n}\n",
        "token_count": 7447
    },
    "00495ff0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_4\n\nvoid __cdecl\nfcn.00495ff0(uint noname_0, uint noname_1, int32_t noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, \n            uint noname_25, uint noname_26, uint noname_27, uint noname_28, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    ushort uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    uint *extraout_ECX;\n    uint32_t uVar8;\n    int32_t *var_ch;\n    uint var_3ch;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *puStack272;\n    int32_t iStack268;\n    uchar auStack264 [28];\n    int32_t iStack236;\n    int32_t *piStack232;\n    int32_t *piStack228;\n    uchar *puStack224;\n    int32_t iStack220;\n    int32_t iStack216;\n    int32_t *piStack212;\n    int32_t *piStack208;\n    int32_t iStack204;\n    uint uStack196;\n    int32_t iStack192;\n    int32_t *piStack188;\n    uint var_30h_3;\n    uint var_2ch_4;\n    uint var_28h_3;\n    uint var_3ch_2;\n    int32_t iStack164;\n    int32_t *piStack160;\n    uint var_30h_2;\n    uint var_2ch_3;\n    uint var_28h_2;\n    int32_t iStack144;\n    int32_t iStack128;\n    int32_t *var_ch_3;\n    uint32_t var_10h_3;\n    uchar *puStack116;\n    int32_t *piStack112;\n    int32_t *piStack108;\n    int32_t *piStack104;\n    int32_t iStack100;\n    int32_t var_ch_2;\n    int32_t *var_10h_2;\n    uint uStack88;\n    int32_t var_40h;\n    int32_t *var_3ch_3;\n    int32_t *var_30h_4;\n    int32_t *var_2ch_2;\n    uint var_28h_4;\n    uint var_ch_4;\n    \n    var_ch_2 = 0x496006;\n    uVar2 = (**(*var_ch + 8))();\n    *(noname_2 + 0x12) = uVar2;\n    var_ch_2 = 0x496011;\n    uVar2 = (**(*var_ch + 0xc))();\n    *(noname_2 + 0x14) = uVar2;\n    var_ch_2 = 0x49601c;\n    uVar3 = (**(*var_ch + 0x20))();\n    *(noname_2 + 8) = 0;\n    *(noname_2 + 0x30) = uVar3;\n    *(noname_2 + 0x18) = 0;\n    *(noname_2 + 0x20) = 0;\n    *(noname_2 + 0x28) = 0;\n    *(noname_2 + 0x52) = 1;\n    var_10h_2 = var_ch;\n    var_ch_2 = 0x49604a;\n    (**(*var_ch + 0x10))();\n    piVar1 = var_2ch_2;\n    var_ch_2 = var_2ch_2 + 1;\n    iStack100 = 0x49605b;\n    var_ch_2 = fcn.004c3410();\n    uStack88 = 0;\n    var_10h_2 = piVar1;\n    iStack100 = 0x496075;\n    var_3ch_3 = var_ch_2;\n    fcn.00455340();\n    *(noname_2 + 0xc) = piVar1;\n    *(var_3ch_3 + piVar1) = 0;\n    *(noname_2 + 8) = var_3ch_3;\n    if (var_30h_4 != &fcn.00495ff0::var_28h_4) {\n        piStack108 = var_30h_4;\n        piStack112 = 0x496097;\n        fcn.004c33f0();\n    }\n    piStack108 = var_ch;\n    piStack112 = 0x4960a2;\n    (**(*var_ch + 0x14))();\n    var_10h_3 = var_2ch_2 + 1;\n    var_3ch_3 = var_2ch_2;\n    if (var_10h_3 < 0x3fffffff) {\n        piStack112 = var_10h_3 * 2;\n        puStack116 = 0x4960c8;\n        var_40h = piStack112;\n        iVar4 = fcn.004c3410();\n        piStack104 = NULL;\n        piStack108 = var_3ch_3;\n        puStack116 = 0x4960e4;\n        piStack112 = iVar4;\n        fcn.004560f0();\n        *(noname_2 + 0x18) = iVar4;\n        *(noname_2 + 0x1c) = var_3ch_3;\n        *(iVar4 + -2 + var_40h) = 0;\n        if (var_30h_4 != &fcn.00495ff0::var_28h_4) {\n            var_ch_3 = var_30h_4;\n            iStack128 = 0x49610c;\n            fcn.004c33f0();\n        }\n        var_ch_3 = var_ch;\n        iStack128 = 0x496117;\n        (**(*var_ch + 0x18))();\n        var_10h_3 = var_2ch_2 + 1;\n        var_3ch_3 = var_2ch_2;\n        if (0x3ffffffe < var_10h_3) goto code_r0x00496227;\n        puStack116 = 0x496139;\n        piStack112 = var_10h_3 * 2;\n        piStack112 = fcn.004c3410();\n        piStack104 = NULL;\n        piStack108 = var_3ch_3;\n        puStack116 = 0x496158;\n        var_40h = piStack112;\n        fcn.004560f0();\n        *(var_40h + -2 + var_10h_3 * 2) = 0;\n        *(noname_2 + 0x20) = var_40h;\n        *(noname_2 + 0x24) = var_3ch_3;\n        if (var_30h_4 != &fcn.00495ff0::var_28h_4) {\n            var_ch_3 = var_30h_4;\n            iStack128 = 0x496180;\n            fcn.004c33f0();\n        }\n        var_ch_3 = var_ch;\n        iStack128 = 0x49618b;\n        (**(*var_ch + 0x1c))();\n        var_10h_3 = var_2ch_2 + 1;\n        var_3ch_3 = var_2ch_2;\n        if (var_10h_3 < 0x3fffffff) {\n            piStack112 = var_10h_3 * 2;\n            puStack116 = 0x4961ad;\n            var_40h = piStack112;\n            iVar4 = fcn.004c3410();\n            piStack104 = NULL;\n            piStack108 = var_3ch_3;\n            puStack116 = 0x4961c9;\n            piStack112 = iVar4;\n            fcn.004560f0();\n            *(noname_2 + 0x28) = iVar4;\n            *(iVar4 + -2 + var_40h) = 0;\n            *(noname_2 + 0x2c) = var_3ch_3;\n            if (var_30h_4 != &fcn.00495ff0::var_28h_4) {\n                var_ch_3 = var_30h_4;\n                iStack128 = 0x4961f1;\n                fcn.004c33f0();\n            }\n            iStack128 = 0x4961f8;\n            uVar3 = (**(*var_ch + 0x24))();\n            *(noname_2 + 0x34) = uVar3;\n            iStack128 = 0x496202;\n            uVar3 = (**(*var_ch + 0x28))();\n            *(noname_2 + 0x38) = uVar3;\n            return;\n        }\n        puStack116 = 0x49621a;\n        noname_2 = fcn.004c3b60();\n    }\n    else {\n        puStack116 = 0x496227;\n        fcn.004c3b60();\ncode_r0x00496227:\n        puStack116 = 0x49622c;\n        fcn.004c3b60();\n    }\n    if (var_30h_4 != &fcn.00495ff0::var_28h_4) {\n        piStack112 = var_30h_4;\n        puStack116 = 0x49623e;\n        fcn.004c33f0();\n    }\n    puStack116 = 0x496246;\n    piStack112 = noname_2;\n    fcn.0043b0b0();\n    iVar6 = iStack100;\n    piVar1 = piStack104;\n    var_ch_3 = var_ch;\n    iStack192 = 0x496266;\n    iStack128 = noname_2;\n    puStack116 = &stack0xfffffffc;\n    uVar2 = (**(*piStack104 + 8))();\n    *(iVar6 + 0x12) = uVar2;\n    iStack192 = 0x496271;\n    uVar2 = (**(*piVar1 + 0xc))();\n    *(iVar6 + 0x14) = uVar2;\n    iStack192 = 0x49627c;\n    uVar3 = (**(*piVar1 + 0x20))();\n    *(iVar6 + 8) = 0;\n    *(iVar6 + 0x30) = uVar3;\n    *(iVar6 + 0x18) = 0;\n    *(iVar6 + 0x20) = 0;\n    *(iVar6 + 0x28) = 0;\n    *(iVar6 + 0x52) = 1;\n    piStack188 = piVar1;\n    iStack192 = 0x4962aa;\n    (**(*piVar1 + 0x10))();\n    iVar4 = *(iStack144 + -0xc);\n    iStack192 = iVar4 + 1;\n    uStack196 = 0x4962be;\n    iStack192 = fcn.004c3410();\n    var_30h_3 = 0;\n    uStack196 = 0x4962d8;\n    piStack188 = iVar4;\n    piStack160 = iStack192;\n    fcn.0044c7b0();\n    *(iVar6 + 0xc) = iVar4;\n    *(piStack160 + iVar4) = 0;\n    *(iVar6 + 8) = piStack160;\n    if (*0x515a34 == 0) {\n        iVar4 = *(iStack144 + -4);\n        *(iStack144 + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar5 = iStack144 + -4;\n        iVar4 = *piVar5;\n        *piVar5 = *piVar5 + -1;\n    }\n    if (iVar4 < 1) {\n        iStack204 = &fcn.00495ff0::var_28h_2 + 3;\n        piStack208 = 0x4964e0;\n        fcn.0048bdd0();\n    }\n    piStack208 = piVar1;\n    piStack212 = 0x496314;\n    (**(*piVar1 + 0x14))();\n    piStack160 = *(iStack144 + -0xc);\n    uVar8 = piStack160 + 1;\n    if (uVar8 < 0x3fffffff) {\n        piStack212 = uVar8 * 2;\n        iStack216 = 0x49633d;\n        iStack164 = piStack212;\n        piVar5 = fcn.004c3410();\n        iStack204 = 0;\n        piStack208 = piStack160;\n        iStack216 = 0x496359;\n        piStack212 = piVar5;\n        fcn.0044b8d0();\n        *(iVar6 + 0x18) = piVar5;\n        *(piVar5 + iStack164 + -2) = 0;\n        *(iVar6 + 0x1c) = piStack160;\n        if (*0x515a34 == 0) {\n            iVar4 = *(iStack144 + -4);\n            *(iStack144 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar5 = iStack144 + -4;\n            iVar4 = *piVar5;\n            *piVar5 = *piVar5 + -1;\n        }\n        if (iVar4 < 1) {\n            puStack224 = &fcn.00495ff0::var_28h_2 + 3;\n            piStack228 = 0x496510;\n            fcn.00483f10();\n        }\n        piStack228 = piVar1;\n        piStack232 = 0x49639b;\n        (**(*piVar1 + 0x18))();\n        piStack160 = *(iStack144 + -0xc);\n        uVar8 = piStack160 + 1;\n        if (0x3ffffffe < uVar8) goto code_r0x0049659f;\n        iStack220 = 0x4963c0;\n        iStack216 = uVar8 * 2;\n        iStack216 = fcn.004c3410();\n        piStack208 = NULL;\n        piStack212 = piStack160;\n        iStack220 = 0x4963df;\n        iStack164 = iStack216;\n        fcn.0044b8d0();\n        *(iStack164 + -2 + uVar8 * 2) = 0;\n        iVar4 = *0x515a34;\n        *(iVar6 + 0x20) = iStack164;\n        *(iVar6 + 0x24) = piStack160;\n        if (iVar4 == 0) {\n            iVar4 = *(iStack144 + -4);\n            *(iStack144 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar5 = iStack144 + -4;\n            iVar4 = *piVar5;\n            *piVar5 = *piVar5 + -1;\n        }\n        if (iVar4 < 1) {\n            piStack228 = &fcn.00495ff0::var_28h_2 + 3;\n            piStack232 = 0x496540;\n            fcn.00483f10();\n        }\n        piStack232 = piVar1;\n        iStack236 = 0x496421;\n        (**(*piVar1 + 0x1c))();\n        piStack160 = *(iStack144 + -0xc);\n        uVar8 = piStack160 + 1;\n        if (uVar8 < 0x3fffffff) {\n            iStack216 = uVar8 * 2;\n            iStack220 = 0x49644a;\n            iStack164 = iStack216;\n            iVar4 = fcn.004c3410();\n            piStack208 = NULL;\n            piStack212 = piStack160;\n            iStack220 = 0x496466;\n            iStack216 = iVar4;\n            fcn.0044b8d0();\n            *(iVar6 + 0x28) = iVar4;\n            *(iVar4 + -2 + iStack164) = 0;\n            iVar4 = *0x515a34;\n            *(iVar6 + 0x2c) = piStack160;\n            if (iVar4 == 0) {\n                iVar4 = *(iStack144 + -4);\n                *(iStack144 + -4) = iVar4 + -1;\n            }\n            else {\n                LOCK();\n                piVar5 = iStack144 + -4;\n                iVar4 = *piVar5;\n                *piVar5 = *piVar5 + -1;\n            }\n            if (iVar4 < 1) {\n                piStack228 = &fcn.00495ff0::var_28h_2 + 3;\n                piStack232 = 0x496570;\n                fcn.00483f10();\n            }\n            iStack236 = 0x4964a5;\n            uVar3 = (**(*piVar1 + 0x24))();\n            *(iVar6 + 0x34) = uVar3;\n            iStack236 = 0x4964af;\n            uVar3 = (**(*piVar1 + 0x28))();\n            *(iVar6 + 0x38) = uVar3;\n            return;\n        }\n        iStack220 = 0x4965b1;\n        fcn.004c3b60();\n    }\n    else {\n        iStack216 = 0x496585;\n        fcn.004c3b60();\n        piStack212 = &fcn.00495ff0::var_28h_2 + 3;\n        iStack216 = 0x496596;\n        fcn.0048bdf0();\n        iStack216 = iVar6;\n        iStack220 = 0x49659f;\n        fcn.0043b0b0();\ncode_r0x0049659f:\n        iStack220 = 0x4965a4;\n        iVar6 = fcn.004c3b60();\n    }\n    iStack216 = &fcn.00495ff0::var_28h_2 + 3;\n    iStack220 = 0x4965c2;\n    fcn.00483f30();\n    puStack224 = 0x4965cb;\n    iStack220 = iVar6;\n    fcn.0043b0b0();\n    piVar7 = piStack208;\n    piVar5 = piStack212;\n    piStack232 = piVar1;\n    iStack236 = iVar6;\n    piStack228 = uVar8;\n    puStack224 = &stack0xffffff8c;\n    uVar2 = (**(*piStack212 + 8))();\n    *(piVar7 + 0x12) = uVar2;\n    uVar2 = (**(*piVar5 + 0xc))();\n    *(piVar7 + 5) = uVar2;\n    iVar4 = (**(*piVar5 + 0x20))();\n    piVar7[2] = 0;\n    piVar7[0xc] = iVar4;\n    piVar7[6] = 0;\n    piVar7[8] = 0;\n    piVar7[10] = 0;\n    *(piVar7 + 0x52) = 1;\n    (**(*piVar5 + 0x10))(piVar5);\n    iVar4 = fcn.004c3410(iStack268 + 1);\n    fcn.00455340(iVar4, iStack268, 0);\n    piVar7[3] = iStack268;\n    *(iVar4 + iStack268) = 0;\n    piVar7[2] = iVar4;\n    if (puStack272 != &stack0xfffffef8) {\n        fcn.004c33f0(puStack272);\n    }\n    (**(*piVar5 + 0x14))(piVar5);\n    if (iStack268 + 1U < 0x3fffffff) {\n        iVar4 = (iStack268 + 1U) * 2;\n        iVar6 = fcn.004c3410(iVar4);\n        fcn.004560f0(iVar6, iStack268, 0);\n        piVar7[6] = iVar6;\n        piVar7[7] = iStack268;\n        *(iVar6 + -2 + iVar4) = 0;\n        if (puStack272 != &stack0xfffffef8) {\n            fcn.004c33f0(puStack272);\n        }\n        (**(*piVar5 + 0x18))(piVar5);\n        if (iStack268 + 1U < 0x3fffffff) {\n            iVar4 = (iStack268 + 1U) * 2;\n            iVar6 = fcn.004c3410(iVar4);\n            fcn.004560f0(iVar6, iStack268, 0);\n            *(iVar6 + -2 + iVar4) = 0;\n            piVar7[8] = iVar6;\n            piVar7[9] = iStack268;\n            if (puStack272 != &stack0xfffffef8) {\n                fcn.004c33f0(puStack272);\n            }\n            (**(*piVar5 + 0x1c))(piVar5);\n            if (iStack268 + 1U < 0x3fffffff) {\n                iVar4 = (iStack268 + 1U) * 2;\n                iVar6 = fcn.004c3410(iVar4);\n                fcn.004560f0(iVar6, iStack268, 0);\n                piVar7[10] = iVar6;\n                *(iVar6 + -2 + iVar4) = 0;\n                piVar7[0xb] = iStack268;\n                if (puStack272 != &stack0xfffffef8) {\n                    fcn.004c33f0(puStack272);\n                }\n                iVar4 = (**(*piVar5 + 0x24))();\n                piVar7[0xd] = iVar4;\n                iVar4 = (**(*piVar5 + 0x28))();\n                piVar7[0xe] = iVar4;\n                return;\n            }\n            piVar7 = fcn.004c3b60();\n            goto code_r0x0049680c;\n        }\n    }\n    else {\n        fcn.004c3b60();\n    }\n    fcn.004c3b60();\ncode_r0x0049680c:\n    if (puStack272 != &stack0xfffffef8) {\n        fcn.004c33f0(puStack272);\n    }\n    fcn.0043b0b0(piVar7);\n    *extraout_ECX = 0x52c0a0;\n    fcn.004bede0(extraout_ECX + 4);\n    *extraout_ECX = 0x52be00;\n    fcn.004915b0();\n    fcn.004c33f0(extraout_ECX);\n    return;\n}\n",
        "token_count": 5339
    },
    "00496250": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00496250(uint param_1, int32_t *param_2, int32_t param_3)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint *extraout_ECX;\n    uint32_t uVar7;\n    int32_t *var_ch;\n    int32_t var_10h;\n    uint var_30h_3;\n    uint var_2ch_4;\n    uint var_1ch_3;\n    uint *puStack160;\n    int32_t var_30h_2;\n    uint var_2ch_3;\n    uint var_28h_2;\n    uint var_1ch_2;\n    int32_t var_ch_3;\n    int32_t *var_10h_3;\n    int32_t *piStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    uchar *puStack104;\n    int32_t *piStack100;\n    int32_t *piStack96;\n    uchar *var_10h_2;\n    uint uStack84;\n    int32_t iStack80;\n    int32_t *piStack76;\n    uint uStack72;\n    int32_t iStack52;\n    int32_t *var_2ch_2;\n    uchar var_1dh;\n    int32_t var_1ch;\n    \n    iStack80 = 0x496266;\n    uVar1 = (**(*var_ch + 8))();\n    *(var_10h + 0x12) = uVar1;\n    iStack80 = 0x496271;\n    uVar1 = (**(*var_ch + 0xc))();\n    *(var_10h + 0x14) = uVar1;\n    iStack80 = 0x49627c;\n    uVar2 = (**(*var_ch + 0x20))();\n    *(var_10h + 8) = 0;\n    *(var_10h + 0x30) = uVar2;\n    *(var_10h + 0x18) = 0;\n    *(var_10h + 0x20) = 0;\n    *(var_10h + 0x28) = 0;\n    *(var_10h + 0x52) = 1;\n    piStack76 = var_ch;\n    iStack80 = 0x4962aa;\n    (**(*var_ch + 0x10))();\n    iVar4 = *(var_1ch + -0xc);\n    iStack80 = iVar4 + 1;\n    uStack84 = 0x4962be;\n    iStack80 = fcn.004c3410();\n    uStack72 = 0;\n    uStack84 = 0x4962d8;\n    piStack76 = iVar4;\n    var_2ch_2 = iStack80;\n    fcn.0044c7b0();\n    *(var_10h + 0xc) = iVar4;\n    *(var_2ch_2 + iVar4) = 0;\n    *(var_10h + 8) = var_2ch_2;\n    if (*0x515a34 == 0) {\n        iVar4 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar3 = var_1ch + -4;\n        iVar4 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n    }\n    if (iVar4 < 1) {\n        var_10h_2 = &stack0xffffffdf;\n        piStack96 = 0x4964e0;\n        fcn.0048bdd0();\n    }\n    piStack96 = var_ch;\n    piStack100 = 0x496314;\n    (**(*var_ch + 0x14))();\n    var_2ch_2 = *(var_1ch + -0xc);\n    uVar7 = var_2ch_2 + 1;\n    if (uVar7 < 0x3fffffff) {\n        piStack100 = uVar7 * 2;\n        puStack104 = 0x49633d;\n        iStack52 = piStack100;\n        piVar3 = fcn.004c3410();\n        var_10h_2 = NULL;\n        piStack96 = var_2ch_2;\n        puStack104 = 0x496359;\n        piStack100 = piVar3;\n        fcn.0044b8d0();\n        *(var_10h + 0x18) = piVar3;\n        *(piVar3 + iStack52 + -2) = 0;\n        *(var_10h + 0x1c) = var_2ch_2;\n        if (*0x515a34 == 0) {\n            iVar4 = *(var_1ch + -4);\n            *(var_1ch + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = var_1ch + -4;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            puStack112 = &stack0xffffffdf;\n            piStack116 = 0x496510;\n            fcn.00483f10();\n        }\n        piStack116 = var_ch;\n        var_10h_3 = 0x49639b;\n        (**(*var_ch + 0x18))();\n        var_2ch_2 = *(var_1ch + -0xc);\n        uVar7 = var_2ch_2 + 1;\n        if (0x3ffffffe < uVar7) goto code_r0x0049659f;\n        iStack108 = 0x4963c0;\n        puStack104 = uVar7 * 2;\n        puStack104 = fcn.004c3410();\n        piStack96 = NULL;\n        piStack100 = var_2ch_2;\n        iStack108 = 0x4963df;\n        iStack52 = puStack104;\n        fcn.0044b8d0();\n        *(iStack52 + -2 + uVar7 * 2) = 0;\n        iVar4 = *0x515a34;\n        *(var_10h + 0x20) = iStack52;\n        *(var_10h + 0x24) = var_2ch_2;\n        if (iVar4 == 0) {\n            iVar4 = *(var_1ch + -4);\n            *(var_1ch + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = var_1ch + -4;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            piStack116 = &stack0xffffffdf;\n            var_10h_3 = 0x496540;\n            fcn.00483f10();\n        }\n        var_10h_3 = var_ch;\n        var_ch_3 = 0x496421;\n        (**(*var_ch + 0x1c))();\n        var_2ch_2 = *(var_1ch + -0xc);\n        uVar7 = var_2ch_2 + 1;\n        if (uVar7 < 0x3fffffff) {\n            puStack104 = uVar7 * 2;\n            iStack108 = 0x49644a;\n            iStack52 = puStack104;\n            iVar4 = fcn.004c3410();\n            piStack96 = NULL;\n            piStack100 = var_2ch_2;\n            iStack108 = 0x496466;\n            puStack104 = iVar4;\n            fcn.0044b8d0();\n            *(var_10h + 0x28) = iVar4;\n            *(iVar4 + -2 + iStack52) = 0;\n            iVar4 = *0x515a34;\n            *(var_10h + 0x2c) = var_2ch_2;\n            if (iVar4 == 0) {\n                iVar4 = *(var_1ch + -4);\n                *(var_1ch + -4) = iVar4 + -1;\n            }\n            else {\n                LOCK();\n                piVar3 = var_1ch + -4;\n                iVar4 = *piVar3;\n                *piVar3 = *piVar3 + -1;\n            }\n            if (iVar4 < 1) {\n                piStack116 = &stack0xffffffdf;\n                var_10h_3 = 0x496570;\n                fcn.00483f10();\n            }\n            var_ch_3 = 0x4964a5;\n            uVar2 = (**(*var_ch + 0x24))();\n            *(var_10h + 0x34) = uVar2;\n            var_ch_3 = 0x4964af;\n            uVar2 = (**(*var_ch + 0x28))();\n            *(var_10h + 0x38) = uVar2;\n            return;\n        }\n        iStack108 = 0x4965b1;\n        fcn.004c3b60();\n    }\n    else {\n        puStack104 = 0x496585;\n        fcn.004c3b60();\n        piStack100 = &stack0xffffffdf;\n        puStack104 = 0x496596;\n        fcn.0048bdf0();\n        puStack104 = var_10h;\n        iStack108 = 0x49659f;\n        fcn.0043b0b0();\ncode_r0x0049659f:\n        iStack108 = 0x4965a4;\n        var_10h = fcn.004c3b60();\n    }\n    puStack104 = &stack0xffffffdf;\n    iStack108 = 0x4965c2;\n    fcn.00483f30();\n    puStack112 = 0x4965cb;\n    iStack108 = var_10h;\n    fcn.0043b0b0();\n    piVar6 = piStack96;\n    piVar3 = piStack100;\n    var_10h_3 = var_ch;\n    var_ch_3 = var_10h;\n    piStack116 = uVar7;\n    puStack112 = &stack0xfffffffc;\n    uVar1 = (**(*piStack100 + 8))();\n    *(piVar6 + 0x12) = uVar1;\n    uVar1 = (**(*piVar3 + 0xc))();\n    *(piVar6 + 5) = uVar1;\n    iVar4 = (**(*piVar3 + 0x20))();\n    piVar6[2] = 0;\n    piVar6[0xc] = iVar4;\n    piVar6[6] = 0;\n    piVar6[8] = 0;\n    piVar6[10] = 0;\n    *(piVar6 + 0x52) = 1;\n    (**(*piVar3 + 0x10))(piVar3);\n    iVar4 = fcn.004c3410(var_30h_2 + 1);\n    fcn.00455340(iVar4, var_30h_2, 0);\n    piVar6[3] = var_30h_2;\n    *(iVar4 + var_30h_2) = 0;\n    piVar6[2] = iVar4;\n    if (puStack160 != &fcn.00496250::var_2ch_3) {\n        fcn.004c33f0(puStack160);\n    }\n    (**(*piVar3 + 0x14))(piVar3);\n    if (var_30h_2 + 1U < 0x3fffffff) {\n        iVar4 = (var_30h_2 + 1U) * 2;\n        iVar5 = fcn.004c3410(iVar4);\n        fcn.004560f0(iVar5, var_30h_2, 0);\n        piVar6[6] = iVar5;\n        piVar6[7] = var_30h_2;\n        *(iVar5 + -2 + iVar4) = 0;\n        if (puStack160 != &fcn.00496250::var_2ch_3) {\n            fcn.004c33f0(puStack160);\n        }\n        (**(*piVar3 + 0x18))(piVar3);\n        if (var_30h_2 + 1U < 0x3fffffff) {\n            iVar4 = (var_30h_2 + 1U) * 2;\n            iVar5 = fcn.004c3410(iVar4);\n            fcn.004560f0(iVar5, var_30h_2, 0);\n            *(iVar5 + -2 + iVar4) = 0;\n            piVar6[8] = iVar5;\n            piVar6[9] = var_30h_2;\n            if (puStack160 != &fcn.00496250::var_2ch_3) {\n                fcn.004c33f0(puStack160);\n            }\n            (**(*piVar3 + 0x1c))(piVar3);\n            if (var_30h_2 + 1U < 0x3fffffff) {\n                iVar4 = (var_30h_2 + 1U) * 2;\n                iVar5 = fcn.004c3410(iVar4);\n                fcn.004560f0(iVar5, var_30h_2, 0);\n                piVar6[10] = iVar5;\n                *(iVar5 + -2 + iVar4) = 0;\n                piVar6[0xb] = var_30h_2;\n                if (puStack160 != &fcn.00496250::var_2ch_3) {\n                    fcn.004c33f0(puStack160);\n                }\n                iVar4 = (**(*piVar3 + 0x24))();\n                piVar6[0xd] = iVar4;\n                iVar4 = (**(*piVar3 + 0x28))();\n                piVar6[0xe] = iVar4;\n                return;\n            }\n            piVar6 = fcn.004c3b60();\n            goto code_r0x0049680c;\n        }\n    }\n    else {\n        fcn.004c3b60();\n    }\n    fcn.004c3b60();\ncode_r0x0049680c:\n    if (puStack160 != &fcn.00496250::var_2ch_3) {\n        fcn.004c33f0(puStack160);\n    }\n    fcn.0043b0b0(piVar6);\n    *extraout_ECX = 0x52c0a0;\n    fcn.004bede0(extraout_ECX + 4);\n    *extraout_ECX = 0x52be00;\n    fcn.004915b0();\n    fcn.004c33f0(extraout_ECX);\n    return;\n}\n",
        "token_count": 3402
    },
    "004965d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004965d0(uint noname_0, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    uVar1 = (**(*arg_ch + 8))();\n    *(arg_10h + 0x12) = uVar1;\n    uVar1 = (**(*arg_ch + 0xc))();\n    *(arg_10h + 0x14) = uVar1;\n    uVar2 = (**(*arg_ch + 0x20))();\n    *(arg_10h + 8) = 0;\n    *(arg_10h + 0x30) = uVar2;\n    *(arg_10h + 0x18) = 0;\n    *(arg_10h + 0x20) = 0;\n    *(arg_10h + 0x28) = 0;\n    *(arg_10h + 0x52) = 1;\n    (**(*arg_ch + 0x10))(arg_ch);\n    iVar3 = fcn.004c3410(var_2ch + 1);\n    fcn.00455340(iVar3, var_2ch, 0);\n    *(arg_10h + 0xc) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 8) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    (**(*arg_ch + 0x14))(arg_ch);\n    if (var_2ch + 1U < 0x3fffffff) {\n        iVar3 = (var_2ch + 1U) * 2;\n        iVar4 = fcn.004c3410(iVar3);\n        fcn.004560f0(iVar4, var_2ch, 0);\n        *(arg_10h + 0x18) = iVar4;\n        *(arg_10h + 0x1c) = var_2ch;\n        *(iVar4 + -2 + iVar3) = 0;\n        if (var_30h != &var_28h) {\n            fcn.004c33f0(var_30h);\n        }\n        (**(*arg_ch + 0x18))(arg_ch);\n        if (var_2ch + 1U < 0x3fffffff) {\n            iVar3 = (var_2ch + 1U) * 2;\n            iVar4 = fcn.004c3410(iVar3);\n            fcn.004560f0(iVar4, var_2ch, 0);\n            *(iVar4 + -2 + iVar3) = 0;\n            *(arg_10h + 0x20) = iVar4;\n            *(arg_10h + 0x24) = var_2ch;\n            if (var_30h != &var_28h) {\n                fcn.004c33f0(var_30h);\n            }\n            (**(*arg_ch + 0x1c))(arg_ch);\n            if (var_2ch + 1U < 0x3fffffff) {\n                iVar3 = (var_2ch + 1U) * 2;\n                iVar4 = fcn.004c3410(iVar3);\n                fcn.004560f0(iVar4, var_2ch, 0);\n                *(arg_10h + 0x28) = iVar4;\n                *(iVar4 + -2 + iVar3) = 0;\n                *(arg_10h + 0x2c) = var_2ch;\n                if (var_30h != &var_28h) {\n                    fcn.004c33f0(var_30h);\n                }\n                uVar2 = (**(*arg_ch + 0x24))();\n                *(arg_10h + 0x34) = uVar2;\n                uVar2 = (**(*arg_ch + 0x28))();\n                *(arg_10h + 0x38) = uVar2;\n                return;\n            }\n            arg_10h = fcn.004c3b60();\n            goto code_r0x0049680c;\n        }\n    }\n    else {\n        fcn.004c3b60();\n    }\n    fcn.004c3b60();\ncode_r0x0049680c:\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    fcn.0043b0b0(arg_10h);\n    *extraout_ECX = 0x52c0a0;\n    fcn.004bede0(extraout_ECX + 4);\n    *extraout_ECX = 0x52be00;\n    fcn.004915b0();\n    fcn.004c33f0(extraout_ECX);\n    return;\n}\n",
        "token_count": 1182
    },
    "004a15c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004a15c0(uint *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar auStack13 [9];\n    \n    iVar3 = *0x515a34;\n    *param_1 = 0x52c210;\n    iVar2 = param_1[1];\n    if (iVar3 == 0) {\n        iVar3 = *(iVar2 + -4);\n        *(iVar2 + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar2 + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar3) {\n        fcn.004bd220();\n        return;\n    }\n    fcn.0048bdd0(auStack13);\n    fcn.004bd220();\n    return;\n}\n",
        "token_count": 212
    },
    "00496a10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00496a10(int32_t *param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_EDX;\n    int32_t *piVar5;\n    int32_t aiStack240 [5];\n    int32_t *piStack220;\n    uint32_t uStack216;\n    int32_t iStack200;\n    uint32_t uStack196;\n    uint8_t uStack181;\n    int32_t iStack176;\n    uchar auStack156 [4];\n    int32_t iStack152;\n    \n    uStack216 = 1;\n    if (param_1[4] < param_1[5]) {\n        uVar2 = (**(*param_1 + 0x34))();\n        uStack216 = uVar2 & 0xffffff00 | uVar2 != 0xffffffff;\n    }\n    if (*(param_1 + 0x4a) == '\\0') {\n        return uStack216;\n    }\n    if (param_1[0x16] != NULL) {\n        uStack181 = (**(*param_1[0x16] + 0x18))();\n        if (uStack181 != 0) {\n            return uStack216;\n        }\n        if (uStack216 == '\\0') {\n            return uStack216;\n        }\n        do {\n            uVar2 = (**(*param_1[0x16] + 0xc))();\n            if (uVar2 == 2) goto code_r0x00496ac0;\n            if ((1 < uVar2) || (iStack152 - auStack156 < 1)) break;\n            iVar3 = fcn.00490b60();\n            if (iStack176 != iVar3) goto code_r0x00496ac0;\n        } while (uVar2 == 1);\n        iVar3 = (**(*param_1 + 0x34))();\n        uStack181 = iVar3 != -1;\ncode_r0x00496ac0:\n        return uStack181;\n    }\n    fcn.004be620();\n    piStack220 = param_1;\n    if (*(extraout_ECX + 0x58) == NULL) goto code_r0x00496c6f;\n    cVar1 = (**(**(extraout_ECX + 0x58) + 0x18))();\n    if (cVar1 == '\\0') {\n        (**(**(extraout_ECX + 0x58) + 0x20))();\n        fcn.004386a0();\n        piVar5 = aiStack240 + 1;\n        uVar2 = (**(**(extraout_ECX + 0x58) + 8))\n                          (extraout_ECX + 0x38, iStack200, iStack200 + uStack196, piVar5, aiStack240, \n                           extraout_EDX + aiStack240, aiStack240);\n        if (uVar2 < 2) {\n            uStack196 = aiStack240[0] - aiStack240;\n            iVar3 = aiStack240[0];\n            uVar4 = fcn.00490b60(aiStack240, uStack196);\n            if ((uStack196 != uVar4) || ((uVar2 & 1) == 0)) goto code_r0x00496bbe;\n            iVar3 = (**(**(extraout_ECX + 0x58) + 8))\n                              (piVar5, aiStack240[1], *(extraout_ECX + 0x14), aiStack240 + 1, aiStack240, iVar3, \n                               aiStack240);\n            if (iVar3 != 2) {\n                uVar4 = aiStack240[0] - aiStack240;\n                uVar2 = fcn.00490b60(aiStack240, uVar4);\n                return uVar2 & 0xffffff00 | uVar2 == uVar4;\n            }\n        }\n        else if (uVar2 == 3) goto code_r0x00496ba9;\n        fcn.004be7b0(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x00496c6f:\n        fcn.004be620();\n        if (*(extraout_ECX_00 + 0x48) != '\\0') {\n            if (*(extraout_ECX_00 + 0x40) != 0) {\n                fcn.004c33e0(*(extraout_ECX_00 + 0x40));\n            }\n            *(extraout_ECX_00 + 0x40) = 0;\n            *(extraout_ECX_00 + 0x48) = 0;\n        }\n        uVar2 = *(extraout_ECX_00 + 0x5c);\n        if (uVar2 != 0) {\n            uVar2 = fcn.004c33e0(uVar2);\n        }\n        *(extraout_ECX_00 + 0x5c) = 0;\n        *(extraout_ECX_00 + 0x60) = 0;\n        *(extraout_ECX_00 + 100) = 0;\n        *(extraout_ECX_00 + 0x68) = 0;\n        return uVar2;\n    }\ncode_r0x00496ba9:\n    uVar4 = fcn.00490b60(iStack200, uStack196);\ncode_r0x00496bbe:\n    return uVar4 & 0xffffff00 | uVar4 == uStack196;\n}\n",
        "token_count": 1248
    },
    "004981e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004981e0(uint *param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    \n    fcn.004a6240(param_2);\n    param_1[9] = 0;\n    uVar2 = *(param_2 + 0x28);\n    *param_1 = 0x52c0c8;\n    param_1[10] = uVar2;\n    uVar1 = *(param_2 + 0x2c);\n    param_1[8] = 0;\n    *(param_1 + 0xb) = uVar1;\n    uVar2 = *(param_2 + 0x30);\n    *(param_2 + 0x28) = 0;\n    *(param_2 + 0x2c) = 0;\n    *(param_2 + 0x30) = 0;\n    param_1[0xc] = uVar2;\n    param_1[0xd] = *(param_2 + 0x34);\n    param_1[0xe] = *(param_2 + 0x38);\n    param_1[0xf] = *(param_2 + 0x3c);\n    uVar2 = *(param_2 + 0x40);\n    *(param_2 + 0x40) = 0;\n    param_1[0x10] = uVar2;\n    uVar2 = *(param_2 + 0x44);\n    *(param_2 + 0x44) = 1;\n    param_1[0x11] = uVar2;\n    uVar1 = *(param_2 + 0x48);\n    *(param_2 + 0x48) = 0;\n    *(param_1 + 0x12) = uVar1;\n    uVar1 = *(param_2 + 0x49);\n    *(param_2 + 0x49) = 0;\n    *(param_1 + 0x49) = uVar1;\n    uVar1 = *(param_2 + 0x4a);\n    *(param_2 + 0x4a) = 0;\n    *(param_1 + 0x4a) = uVar1;\n    *(param_1 + 0x4b) = *(param_2 + 0x4b);\n    uVar2 = *(param_2 + 0x4c);\n    *(param_2 + 0x4c) = 0;\n    param_1[0x13] = uVar2;\n    uVar2 = *(param_2 + 0x50);\n    *(param_2 + 0x50) = 0;\n    param_1[0x14] = uVar2;\n    uVar1 = *(param_2 + 0x54);\n    *(param_2 + 0x54) = 0;\n    *(param_1 + 0x15) = uVar1;\n    param_1[0x16] = *(param_2 + 0x58);\n    uVar2 = *(param_2 + 0x5c);\n    *(param_2 + 0x5c) = 0;\n    param_1[0x17] = uVar2;\n    uVar2 = *(param_2 + 0x60);\n    *(param_2 + 0x60) = 0;\n    param_1[0x18] = uVar2;\n    uVar2 = *(param_2 + 100);\n    *(param_2 + 100) = 0;\n    param_1[0x19] = uVar2;\n    uVar2 = *(param_2 + 0x68);\n    *(param_2 + 0x68) = 0;\n    param_1[0x1a] = uVar2;\n    uVar2 = *(param_2 + 0x40);\n    *(param_2 + 0x14) = 0;\n    *(param_2 + 4) = uVar2;\n    *(param_2 + 8) = uVar2;\n    *(param_2 + 0xc) = uVar2;\n    *(param_2 + 0x10) = 0;\n    *(param_2 + 0x18) = 0;\n    *(param_2 + 0x38) = *(param_2 + 0x34);\n    *(param_2 + 0x3c) = *(param_2 + 0x34);\n    return;\n}\n",
        "token_count": 1014
    },
    "00498320": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00498320(code **param_1)\n\n{\n    char cVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n    param_1[1] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    fcn.004af3d0();\n    *param_1 = 0x52c0c8;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    fcn.00490d90(param_1 + 8);\n    param_1[0xc] = NULL;\n    param_1[0xd] = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xf] = NULL;\n    param_1[0x10] = NULL;\n    param_1[0x11] = 0x200;\n    param_1[0x12] = NULL;\n    param_1[0x13] = NULL;\n    param_1[0x14] = NULL;\n    *(param_1 + 0x15) = 0;\n    param_1[0x16] = NULL;\n    param_1[0x17] = NULL;\n    param_1[0x18] = NULL;\n    param_1[0x19] = NULL;\n    param_1[0x1a] = NULL;\n    cVar1 = fcn.004bfa90(param_1 + 7);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    pcVar2 = fcn.004c09e0(param_1 + 7);\n    param_1[0x16] = pcVar2;\n    return;\n}\n",
        "token_count": 430
    },
    "00498580": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00498580(code **param_1)\n\n{\n    char cVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n    param_1[1] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    fcn.004af3d0();\n    *param_1 = 0x52c0c8;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    fcn.00490d90(param_1 + 8);\n    param_1[0xc] = NULL;\n    param_1[0xd] = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xf] = NULL;\n    param_1[0x10] = NULL;\n    param_1[0x11] = 0x200;\n    param_1[0x12] = NULL;\n    param_1[0x13] = NULL;\n    param_1[0x14] = NULL;\n    *(param_1 + 0x15) = 0;\n    param_1[0x16] = NULL;\n    param_1[0x17] = NULL;\n    param_1[0x18] = NULL;\n    param_1[0x19] = NULL;\n    param_1[0x1a] = NULL;\n    cVar1 = fcn.004bfa90(param_1 + 7);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    pcVar2 = fcn.004c09e0(param_1 + 7);\n    param_1[0x16] = pcVar2;\n    return;\n}\n",
        "token_count": 430
    },
    "004989a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004989a0(int32_t *param_1)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_EDX;\n    int32_t *piVar6;\n    int32_t aiStack240 [5];\n    int32_t *piStack220;\n    uint32_t uStack216;\n    int32_t iStack200;\n    uint32_t uStack196;\n    uint8_t uStack181;\n    int32_t iStack176;\n    uchar auStack156 [4];\n    int32_t iStack152;\n    \n    uStack216 = 1;\n    if (param_1[4] < param_1[5]) {\n        uVar3 = (**(*param_1 + 0x34))();\n        uStack216 = uVar3 & 0xffffff00 | uVar3 != -1;\n    }\n    if (*(param_1 + 0x4a) == '\\0') {\n        return uStack216;\n    }\n    if (param_1[0x17] != NULL) {\n        uStack181 = (**(*param_1[0x17] + 0x18))();\n        if (uStack181 != 0) {\n            return uStack216;\n        }\n        if (uStack216 == '\\0') {\n            return uStack216;\n        }\n        do {\n            uVar3 = (**(*param_1[0x17] + 0xc))();\n            if (uVar3 == 2) goto code_r0x00498a50;\n            if ((1 < uVar3) || (iStack152 - auStack156 < 1)) break;\n            iVar4 = fcn.00490b60();\n            if (iStack176 != iVar4) goto code_r0x00498a50;\n        } while (uVar3 == 1);\n        iVar2 = (**(*param_1 + 0x34))();\n        uStack181 = iVar2 != -1;\ncode_r0x00498a50:\n        return uStack181;\n    }\n    fcn.004be620();\n    piStack220 = param_1;\n    if (*(extraout_ECX + 0x5c) == NULL) goto code_r0x00498bff;\n    cVar1 = (**(**(extraout_ECX + 0x5c) + 0x18))();\n    if (cVar1 == '\\0') {\n        (**(**(extraout_ECX + 0x5c) + 0x20))();\n        fcn.004386a0();\n        piVar6 = aiStack240 + 1;\n        uVar3 = (**(**(extraout_ECX + 0x5c) + 8))\n                          (extraout_ECX + 0x38, iStack200, iStack200 + uStack196 * 2, piVar6, aiStack240, \n                           extraout_EDX + aiStack240, aiStack240);\n        if (uVar3 < 2) {\n            uStack196 = aiStack240[0] - aiStack240;\n            iVar4 = aiStack240[0];\n            uVar5 = fcn.00490b60(aiStack240, uStack196);\n            if ((uStack196 != uVar5) || ((uVar3 & 1) == 0)) goto code_r0x00498b4c;\n            iVar4 = (**(**(extraout_ECX + 0x5c) + 8))\n                              (piVar6, aiStack240[1], *(extraout_ECX + 0x14), aiStack240 + 1, aiStack240, iVar4, \n                               aiStack240);\n            if (iVar4 != 2) {\n                uVar5 = aiStack240[0] - aiStack240;\n                uVar3 = fcn.00490b60(aiStack240, uVar5);\n                return uVar3 & 0xffffff00 | uVar3 == uVar5;\n            }\n        }\n        else if (uVar3 == 3) goto code_r0x00498b37;\n        fcn.004be7b0(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x00498bff:\n        fcn.004be620();\n        if (*(extraout_ECX_00 + 0x48) != '\\0') {\n            if (*(extraout_ECX_00 + 0x40) != 0) {\n                fcn.004c33e0(*(extraout_ECX_00 + 0x40));\n            }\n            *(extraout_ECX_00 + 0x40) = 0;\n            *(extraout_ECX_00 + 0x48) = 0;\n        }\n        uVar3 = *(extraout_ECX_00 + 0x60);\n        if (uVar3 != 0) {\n            uVar3 = fcn.004c33e0(uVar3);\n        }\n        *(extraout_ECX_00 + 0x60) = 0;\n        *(extraout_ECX_00 + 100) = 0;\n        *(extraout_ECX_00 + 0x68) = 0;\n        *(extraout_ECX_00 + 0x6c) = 0;\n        return uVar3;\n    }\ncode_r0x00498b37:\n    uVar5 = fcn.00490b60(iStack200, uStack196);\ncode_r0x00498b4c:\n    return uVar5 & 0xffffff00 | uVar5 == uStack196;\n}\n",
        "token_count": 1261
    },
    "0049a1b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0049a1b0(uint *param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    \n    fcn.004a6be0(param_2);\n    param_1[9] = 0;\n    uVar2 = *(param_2 + 0x28);\n    *param_1 = 0x52c108;\n    param_1[10] = uVar2;\n    uVar1 = *(param_2 + 0x2c);\n    param_1[8] = 0;\n    *(param_1 + 0xb) = uVar1;\n    uVar2 = *(param_2 + 0x30);\n    *(param_2 + 0x28) = 0;\n    *(param_2 + 0x2c) = 0;\n    *(param_2 + 0x30) = 0;\n    param_1[0xc] = uVar2;\n    param_1[0xd] = *(param_2 + 0x34);\n    param_1[0xe] = *(param_2 + 0x38);\n    param_1[0xf] = *(param_2 + 0x3c);\n    uVar2 = *(param_2 + 0x40);\n    *(param_2 + 0x40) = 0;\n    param_1[0x10] = uVar2;\n    uVar2 = *(param_2 + 0x44);\n    *(param_2 + 0x44) = 1;\n    param_1[0x11] = uVar2;\n    uVar1 = *(param_2 + 0x48);\n    *(param_2 + 0x48) = 0;\n    *(param_1 + 0x12) = uVar1;\n    uVar1 = *(param_2 + 0x49);\n    *(param_2 + 0x49) = 0;\n    *(param_1 + 0x49) = uVar1;\n    uVar1 = *(param_2 + 0x4a);\n    *(param_2 + 0x4a) = 0;\n    *(param_1 + 0x4a) = uVar1;\n    *(param_1 + 0x13) = *(param_2 + 0x4c);\n    uVar2 = *(param_2 + 0x50);\n    *(param_2 + 0x50) = 0;\n    param_1[0x14] = uVar2;\n    uVar2 = *(param_2 + 0x54);\n    *(param_2 + 0x54) = 0;\n    param_1[0x15] = uVar2;\n    uVar1 = *(param_2 + 0x58);\n    *(param_2 + 0x58) = 0;\n    *(param_1 + 0x16) = uVar1;\n    param_1[0x17] = *(param_2 + 0x5c);\n    uVar2 = *(param_2 + 0x60);\n    *(param_2 + 0x60) = 0;\n    param_1[0x18] = uVar2;\n    uVar2 = *(param_2 + 100);\n    *(param_2 + 100) = 0;\n    param_1[0x19] = uVar2;\n    uVar2 = *(param_2 + 0x68);\n    *(param_2 + 0x68) = 0;\n    param_1[0x1a] = uVar2;\n    uVar2 = *(param_2 + 0x6c);\n    *(param_2 + 0x6c) = 0;\n    param_1[0x1b] = uVar2;\n    uVar2 = *(param_2 + 0x40);\n    *(param_2 + 0x14) = 0;\n    *(param_2 + 4) = uVar2;\n    *(param_2 + 8) = uVar2;\n    *(param_2 + 0xc) = uVar2;\n    *(param_2 + 0x10) = 0;\n    *(param_2 + 0x18) = 0;\n    *(param_2 + 0x38) = *(param_2 + 0x34);\n    *(param_2 + 0x3c) = *(param_2 + 0x34);\n    return;\n}\n",
        "token_count": 1014
    },
    "0049a2f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049a2f0(code **param_1)\n\n{\n    char cVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.ages_bynameIcE.0;\n    param_1[1] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    fcn.004af3d0();\n    *param_1 = 0x52c108;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    fcn.00490d90(param_1 + 8);\n    param_1[0xc] = NULL;\n    param_1[0xd] = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xf] = NULL;\n    param_1[0x10] = NULL;\n    param_1[0x11] = 0x200;\n    *(param_1 + 0x12) = 0;\n    *(param_1 + 0x4a) = 0;\n    *(param_1 + 0x13) = 0;\n    param_1[0x14] = NULL;\n    param_1[0x15] = NULL;\n    *(param_1 + 0x16) = 0;\n    param_1[0x17] = NULL;\n    param_1[0x18] = NULL;\n    param_1[0x19] = NULL;\n    param_1[0x1a] = NULL;\n    param_1[0x1b] = NULL;\n    cVar1 = fcn.004bfae0(param_1 + 7);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    pcVar2 = fcn.004c0a40(param_1 + 7);\n    param_1[0x17] = pcVar2;\n    return;\n}\n",
        "token_count": 462
    },
    "0049a560": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049a560(code **param_1)\n\n{\n    char cVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.ages_bynameIcE.0;\n    param_1[1] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    fcn.004af3d0();\n    *param_1 = 0x52c108;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    fcn.00490d90(param_1 + 8);\n    param_1[0xc] = NULL;\n    param_1[0xd] = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xf] = NULL;\n    param_1[0x10] = NULL;\n    param_1[0x11] = 0x200;\n    *(param_1 + 0x12) = 0;\n    *(param_1 + 0x4a) = 0;\n    *(param_1 + 0x13) = 0;\n    param_1[0x14] = NULL;\n    param_1[0x15] = NULL;\n    *(param_1 + 0x16) = 0;\n    param_1[0x17] = NULL;\n    param_1[0x18] = NULL;\n    param_1[0x19] = NULL;\n    param_1[0x1a] = NULL;\n    param_1[0x1b] = NULL;\n    cVar1 = fcn.004bfae0(param_1 + 7);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    pcVar2 = fcn.004c0a40(param_1 + 7);\n    param_1[0x17] = pcVar2;\n    return;\n}\n",
        "token_count": 460
    },
    "0049aa00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049aa00(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.004bb510();\n    *in_ECX = 0x527f34;\n    *(in_ECX + 0x3b) = 0;\n    iVar3 = arg_8h[1];\n    in_ECX[0x3a] = 0;\n    in_ECX[1] = iVar3;\n    iVar3 = *arg_8h;\n    in_ECX[0x3c] = 0;\n    iVar3 = *(iVar3 + -0xc);\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    iVar3 = iVar3 + arg_8h;\n    in_ECX[0x1e] = 0x527f48;\n    in_ECX[0x3f] = 0;\n    fcn.004bab00(iVar3);\n    fcn.004bc220(in_ECX + 0x39);\n    uVar2 = *(iVar3 + 0x70);\n    *(iVar3 + 0x70) = 0;\n    in_ECX[0x3a] = uVar2;\n    *(in_ECX + 0x3b) = *(iVar3 + 0x74);\n    uVar1 = *(iVar3 + 0x75);\n    in_ECX[0x3c] = 0;\n    *(in_ECX + 0xed) = uVar1;\n    arg_8h[1] = 0;\n    *in_ECX = 0x52c14c;\n    in_ECX[0x1e] = 0x52c174;\n    in_ECX[2] = 0x52c160;\n    fcn.004981e0(arg_8h + 3);\n    in_ECX[0x3c] = in_ECX + 3;\n    return;\n}\n",
        "token_count": 487
    },
    "0049ab40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049ab40(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bb510();\n    *in_ECX = 0x527f34;\n    in_ECX[0x3a] = 0;\n    *(in_ECX + 0x3b) = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x3f] = 0;\n    in_ECX[0x1e] = 0x527f48;\n    in_ECX[1] = 0;\n    fcn.004bc340(0);\n    in_ECX[2] = 0x527f5c;\n    in_ECX[0x1e] = 0x527f70;\n    fcn.004bc340(0);\n    *in_ECX = 0x52c14c;\n    in_ECX[0x1e] = 0x52c174;\n    in_ECX[2] = 0x52c160;\n    fcn.00498320();\n    fcn.004bc340(in_ECX + 3);\n    iVar1 = fcn.00496d10(arg_8h, arg_ch);\n    if (iVar1 != 0) {\n        fcn.004bc4a0(0);\n        return;\n    }\n    fcn.004bc4a0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 400
    },
    "0049aca0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049aca0(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bb510();\n    *in_ECX = 0x527f34;\n    in_ECX[0x3a] = 0;\n    *(in_ECX + 0x3b) = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x3f] = 0;\n    in_ECX[0x1e] = 0x527f48;\n    in_ECX[1] = 0;\n    fcn.004bc340(0);\n    in_ECX[2] = 0x527f5c;\n    in_ECX[0x1e] = 0x527f70;\n    fcn.004bc340(0);\n    *in_ECX = 0x52c14c;\n    in_ECX[0x1e] = 0x52c174;\n    in_ECX[2] = 0x52c160;\n    fcn.00498320();\n    fcn.004bc340(in_ECX + 3);\n    iVar1 = fcn.00496d10(*arg_8h, arg_ch);\n    if (iVar1 != 0) {\n        fcn.004bc4a0(0);\n        return;\n    }\n    fcn.004bc4a0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 402
    },
    "0049ae00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.0049ae00(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bb510();\n    *param_1 = 0x527f34;\n    param_1[0x3a] = 0;\n    *(param_1 + 0x3b) = 0;\n    param_1[0x3c] = 0;\n    param_1[0x3d] = 0;\n    param_1[0x3e] = 0;\n    param_1[0x3f] = 0;\n    param_1[0x1e] = 0x527f48;\n    param_1[1] = 0;\n    fcn.004bc340(0);\n    param_1[2] = 0x527f5c;\n    param_1[0x1e] = 0x527f70;\n    fcn.004bc340(0);\n    *param_1 = 0x52c14c;\n    param_1[0x1e] = 0x52c174;\n    param_1[2] = 0x52c160;\n    fcn.00498320();\n    fcn.004bc340(param_1 + 3);\n    return;\n}\n",
        "token_count": 301
    },
    "0049af10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049af10(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar2 = arg_8h[2];\n    *in_ECX = iVar2;\n    *(in_ECX + *(iVar2 + -0xc)) = arg_8h[3];\n    in_ECX[1] = arg_ch[1];\n    iVar2 = *(iVar2 + -0xc);\n    iVar4 = *(*arg_ch + -0xc) + arg_ch;\n    fcn.004bab00(iVar4);\n    fcn.004bc220(in_ECX + iVar2 + 0x6c);\n    uVar3 = *(iVar4 + 0x70);\n    *(iVar4 + 0x70) = 0;\n    *(in_ECX + iVar2 + 0x70) = uVar3;\n    *(in_ECX + iVar2 + 0x74) = *(iVar4 + 0x74);\n    uVar1 = *(iVar4 + 0x75);\n    *(in_ECX + iVar2 + 0x78) = 0;\n    *(in_ECX + iVar2 + 0x75) = uVar1;\n    iVar2 = arg_8h[4];\n    arg_ch[1] = 0;\n    in_ECX[2] = iVar2;\n    *(in_ECX + *(iVar2 + -0xc) + 8) = arg_8h[5];\n    iVar2 = arg_8h[1];\n    *in_ECX = iVar2;\n    *(in_ECX + *(iVar2 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar2 = *arg_8h;\n    *in_ECX = iVar2;\n    *(in_ECX + *(iVar2 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.004981e0(arg_ch + 3);\n    *(in_ECX + *(*in_ECX + -0xc) + 0x78) = in_ECX + 3;\n    return;\n}\n",
        "token_count": 551
    },
    "0049b040": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049b040(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[2];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    in_ECX[1] = 0;\n    fcn.004bc340(0);\n    iVar1 = arg_8h[4];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[5];\n    fcn.004bc340(0);\n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.00498320();\n    fcn.004bc340(in_ECX + 3);\n    iVar1 = fcn.00496d10(arg_ch, arg_10h);\n    if (iVar1 != 0) {\n        fcn.004bc4a0(0);\n        return;\n    }\n    fcn.004bc4a0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 406
    },
    "0049b1a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049b1a0(int32_t *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[2];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    in_ECX[1] = 0;\n    fcn.004bc340(0);\n    iVar1 = arg_8h[4];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[5];\n    fcn.004bc340(0);\n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.00498320();\n    fcn.004bc340(in_ECX + 3);\n    iVar1 = fcn.00496d10(*arg_ch, arg_10h);\n    if (iVar1 != 0) {\n        fcn.004bc4a0(0);\n        return;\n    }\n    fcn.004bc4a0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 410
    },
    "0049b300": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049b300(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[2];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    in_ECX[1] = 0;\n    fcn.004bc340(0);\n    iVar1 = arg_8h[4];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[5];\n    fcn.004bc340(0);\n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.00498320();\n    fcn.004bc340(in_ECX + 3);\n    return;\n}\n",
        "token_count": 317
    },
    "0049b7c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049b7c0(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.004bb510();\n    *in_ECX = 0x527f84;\n    *(in_ECX + 0x3c) = 0;\n    iVar3 = arg_8h[1];\n    in_ECX[0x3b] = 0;\n    in_ECX[1] = iVar3;\n    iVar3 = *arg_8h;\n    *(in_ECX + 0xf2) = 0;\n    iVar3 = *(iVar3 + -0xc);\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    iVar3 = iVar3 + arg_8h;\n    in_ECX[0x1f] = 0x527f98;\n    in_ECX[0x3f] = 0;\n    in_ECX[0x40] = 0;\n    fcn.004bab00(iVar3);\n    fcn.004bca50(in_ECX + 0x3a);\n    uVar2 = *(iVar3 + 0x70);\n    *(iVar3 + 0x70) = 0;\n    in_ECX[0x3b] = uVar2;\n    *(in_ECX + 0x3c) = *(iVar3 + 0x74);\n    uVar1 = *(iVar3 + 0x76);\n    in_ECX[0x3d] = 0;\n    *(in_ECX + 0xf2) = uVar1;\n    arg_8h[1] = 0;\n    *in_ECX = 0x52c188;\n    in_ECX[0x1f] = 0x52c1b0;\n    in_ECX[2] = 0x52c19c;\n    fcn.0049a1b0(arg_8h + 3);\n    in_ECX[0x3d] = in_ECX + 3;\n    return;\n}\n",
        "token_count": 510
    },
    "0049b900": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049b900(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bb510();\n    *(in_ECX + 0xf2) = 0;\n    in_ECX[0x3b] = 0;\n    *(in_ECX + 0x3c) = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x3f] = 0;\n    in_ECX[0x40] = 0;\n    *in_ECX = 0x527f84;\n    in_ECX[0x1f] = 0x527f98;\n    in_ECX[1] = 0;\n    fcn.004bcb40(0);\n    in_ECX[2] = 0x527fe8;\n    in_ECX[0x1f] = 0x527ffc;\n    fcn.004bcb40(0);\n    *in_ECX = 0x52c188;\n    in_ECX[0x1f] = 0x52c1b0;\n    in_ECX[2] = 0x52c19c;\n    fcn.0049a2f0();\n    fcn.004bcb40(in_ECX + 3);\n    iVar1 = fcn.00498cc0(arg_8h, arg_ch);\n    if (iVar1 != 0) {\n        fcn.004bccc0(0);\n        return;\n    }\n    fcn.004bccc0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 418
    },
    "0049ba70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049ba70(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bb510();\n    *(in_ECX + 0xf2) = 0;\n    in_ECX[0x3b] = 0;\n    *(in_ECX + 0x3c) = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x3f] = 0;\n    in_ECX[0x40] = 0;\n    *in_ECX = 0x527f84;\n    in_ECX[0x1f] = 0x527f98;\n    in_ECX[1] = 0;\n    fcn.004bcb40(0);\n    in_ECX[2] = 0x527fe8;\n    in_ECX[0x1f] = 0x527ffc;\n    fcn.004bcb40(0);\n    *in_ECX = 0x52c188;\n    in_ECX[0x1f] = 0x52c1b0;\n    in_ECX[2] = 0x52c19c;\n    fcn.0049a2f0();\n    fcn.004bcb40(in_ECX + 3);\n    iVar1 = fcn.00498cc0(*arg_8h, arg_ch);\n    if (iVar1 != 0) {\n        fcn.004bccc0(0);\n        return;\n    }\n    fcn.004bccc0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 420
    },
    "0049bbe0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.0049bbe0(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bb510();\n    *(param_1 + 0xf2) = 0;\n    param_1[0x3b] = 0;\n    *(param_1 + 0x3c) = 0;\n    param_1[0x3d] = 0;\n    param_1[0x3e] = 0;\n    param_1[0x3f] = 0;\n    param_1[0x40] = 0;\n    *param_1 = 0x527f84;\n    param_1[0x1f] = 0x527f98;\n    param_1[1] = 0;\n    fcn.004bcb40(0);\n    param_1[2] = 0x527fe8;\n    param_1[0x1f] = 0x527ffc;\n    fcn.004bcb40(0);\n    *param_1 = 0x52c188;\n    param_1[0x1f] = 0x52c1b0;\n    param_1[2] = 0x52c19c;\n    fcn.0049a2f0();\n    fcn.004bcb40(param_1 + 3);\n    return;\n}\n",
        "token_count": 321
    },
    "0049bcf0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049bcf0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uchar uVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = arg_8h[2];\n    *in_ECX = iVar3;\n    *(in_ECX + *(iVar3 + -0xc)) = arg_8h[3];\n    in_ECX[1] = arg_ch[1];\n    iVar3 = *(iVar3 + -0xc);\n    iVar5 = *(*arg_ch + -0xc) + arg_ch;\n    fcn.004bab00(iVar5);\n    fcn.004bca50(in_ECX + iVar3 + 0x6c);\n    uVar4 = *(iVar5 + 0x70);\n    *(iVar5 + 0x70) = 0;\n    *(in_ECX + iVar3 + 0x70) = uVar4;\n    uVar2 = *(iVar5 + 0x74);\n    uVar1 = *(iVar5 + 0x76);\n    *(in_ECX + iVar3 + 0x78) = 0;\n    *(in_ECX + iVar3 + 0x74) = uVar2;\n    *(in_ECX + iVar3 + 0x76) = uVar1;\n    iVar3 = arg_8h[4];\n    arg_ch[1] = 0;\n    in_ECX[2] = iVar3;\n    *(in_ECX + *(iVar3 + -0xc) + 8) = arg_8h[5];\n    iVar3 = arg_8h[1];\n    *in_ECX = iVar3;\n    *(in_ECX + *(iVar3 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar3 = *arg_8h;\n    *in_ECX = iVar3;\n    *(in_ECX + *(iVar3 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.0049a1b0(arg_ch + 3);\n    *(in_ECX + *(*in_ECX + -0xc) + 0x78) = in_ECX + 3;\n    return;\n}\n",
        "token_count": 570
    },
    "0049be20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049be20(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[2];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    in_ECX[1] = 0;\n    fcn.004bcb40(0);\n    iVar1 = arg_8h[4];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[5];\n    fcn.004bcb40(0);\n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.0049a2f0();\n    fcn.004bcb40(in_ECX + 3);\n    iVar1 = fcn.00498cc0(arg_ch, arg_10h);\n    if (iVar1 != 0) {\n        fcn.004bccc0(0);\n        return;\n    }\n    fcn.004bccc0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 410
    },
    "0049bf80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049bf80(int32_t *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[2];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    in_ECX[1] = 0;\n    fcn.004bcb40(0);\n    iVar1 = arg_8h[4];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[5];\n    fcn.004bcb40(0);\n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.0049a2f0();\n    fcn.004bcb40(in_ECX + 3);\n    iVar1 = fcn.00498cc0(*arg_ch, arg_10h);\n    if (iVar1 != 0) {\n        fcn.004bccc0(0);\n        return;\n    }\n    fcn.004bccc0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 412
    },
    "0049c0e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049c0e0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[2];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    in_ECX[1] = 0;\n    fcn.004bcb40(0);\n    iVar1 = arg_8h[4];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[5];\n    fcn.004bcb40(0);\n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.0049a2f0();\n    fcn.004bcb40(in_ECX + 3);\n    return;\n}\n",
        "token_count": 325
    },
    "0049c3f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch_12\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch_2\n// WARNING: Removing unreachable block (ram,0x0049cea0)\n// WARNING: Removing unreachable block (ram,0x0049cd80)\n// WARNING: Removing unreachable block (ram,0x0049cc60)\n// WARNING: Removing unreachable block (ram,0x0049cb40)\n// WARNING: Removing unreachable block (ram,0x0049ca20)\n// WARNING: Removing unreachable block (ram,0x0049c900)\n// WARNING: Removing unreachable block (ram,0x0049c7e0)\n// WARNING: Removing unreachable block (ram,0x0049c6c0)\n// WARNING: Removing unreachable block (ram,0x0049c5a0)\n// WARNING: Removing unreachable block (ram,0x0049c480)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.0049c3f0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    ushort uVar2;\n    int16_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int16_t *piVar6;\n    uint32_t uVar7;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    int32_t *extraout_ECX_03;\n    int32_t *extraout_ECX_04;\n    int32_t *extraout_ECX_05;\n    int32_t *extraout_ECX_06;\n    int32_t *extraout_ECX_07;\n    int32_t *extraout_ECX_08;\n    int32_t *extraout_ECX_09;\n    int32_t *extraout_ECX_10;\n    int32_t iVar8;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    int32_t extraout_EDX_03;\n    int32_t extraout_EDX_04;\n    int32_t extraout_EDX_05;\n    int32_t extraout_EDX_06;\n    int32_t extraout_EDX_07;\n    int32_t extraout_EDX_08;\n    int32_t iVar9;\n    ulong uVar10;\n    uint var_8h_11;\n    uint var_1dh;\n    uint var_ch;\n    char cStack989;\n    uint var_1ch_12;\n    int32_t in_stack_fffffc48;\n    int16_t *in_stack_fffffc4c;\n    uint var_ch_12;\n    uint var_8h;\n    char cStack873;\n    uint32_t uStack872;\n    uint uStack856;\n    int32_t iStack852;\n    uint var_1dh_11;\n    uint var_ch_11;\n    uint var_8h_2;\n    uint var_1dh_10;\n    uint var_ch_10;\n    uint var_8h_3;\n    uint var_1dh_9;\n    uint var_ch_9;\n    uint var_8h_4;\n    uint var_1dh_8;\n    uint var_ch_8;\n    uint var_8h_5;\n    uint var_1dh_7;\n    uint var_ch_7;\n    uint var_8h_6;\n    uint var_1dh_6;\n    uint var_ch_6;\n    uint var_8h_7;\n    uint var_1dh_5;\n    uint var_ch_5;\n    uint var_8h_8;\n    uint var_1dh_4;\n    uint var_ch_4;\n    uint var_8h_9;\n    uint var_1dh_3;\n    uint var_ch_3;\n    uint var_8h_10;\n    uint var_1dh_2;\n    uint var_ch_2;\n    \n    fcn.0049e450();\n    if (var_1dh_2 == '\\0') {\n        return param_1;\n    }\n    piVar5 = *(param_1 + *(*param_1 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x30))();\n        return param_1;\n    }\n    fcn.004be620();\n    if (extraout_EDX == 1) {\n        fcn.004c3600();\n        iVar9 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar9 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return param_1;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.0049e450();\n    if (var_1dh_3 == '\\0') {\n        return extraout_ECX;\n    }\n    piVar5 = *(extraout_ECX + *(*extraout_ECX + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 8))();\n        return extraout_ECX;\n    }\n    fcn.004be620();\n    if (extraout_EDX_00 == 1) {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return extraout_ECX;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.0049e450();\n    if (var_1dh_4 == '\\0') {\n        return extraout_ECX_00;\n    }\n    piVar5 = *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x28))();\n        return extraout_ECX_00;\n    }\n    fcn.004be620();\n    if (extraout_EDX_01 == 1) {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return extraout_ECX_00;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.0049e450();\n    if (var_1dh_5 == '\\0') {\n        return extraout_ECX_01;\n    }\n    piVar5 = *(extraout_ECX_01 + *(*extraout_ECX_01 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x2c))();\n        return extraout_ECX_01;\n    }\n    fcn.004be620();\n    if (extraout_EDX_02 == 1) {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return extraout_ECX_01;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.0049e450();\n    if (var_1dh_6 == '\\0') {\n        return extraout_ECX_02;\n    }\n    piVar5 = *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x24))();\n        return extraout_ECX_02;\n    }\n    fcn.004be620();\n    if (extraout_EDX_03 == 1) {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return extraout_ECX_02;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.0049e450();\n    if (var_1dh_7 == '\\0') {\n        return extraout_ECX_03;\n    }\n    piVar5 = *(extraout_ECX_03 + *(*extraout_ECX_03 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x14))();\n        return extraout_ECX_03;\n    }\n    fcn.004be620();\n    if (extraout_EDX_04 == 1) {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return extraout_ECX_03;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.0049e450();\n    if (var_1dh_8 == '\\0') {\n        return extraout_ECX_04;\n    }\n    piVar5 = *(extraout_ECX_04 + *(*extraout_ECX_04 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0xc))();\n        return extraout_ECX_04;\n    }\n    fcn.004be620();\n    if (extraout_EDX_05 == 1) {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_04 + -0xc);\n        puVar1 = extraout_ECX_04 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_04 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_04 + -0xc);\n        puVar1 = extraout_ECX_04 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_04 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return extraout_ECX_04;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.0049e450();\n    if (var_1dh_9 == '\\0') {\n        return extraout_ECX_05;\n    }\n    piVar5 = *(extraout_ECX_05 + *(*extraout_ECX_05 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x18))();\n        return extraout_ECX_05;\n    }\n    fcn.004be620();\n    if (extraout_EDX_06 == 1) {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_05 + -0xc);\n        puVar1 = extraout_ECX_05 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_05 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_05 + -0xc);\n        puVar1 = extraout_ECX_05 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_05 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return extraout_ECX_05;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.0049e450();\n    if (var_1dh_10 == '\\0') {\n        return extraout_ECX_06;\n    }\n    piVar5 = *(extraout_ECX_06 + *(*extraout_ECX_06 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x10))();\n        return extraout_ECX_06;\n    }\n    fcn.004be620();\n    if (extraout_EDX_07 == 1) {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return extraout_ECX_06;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.0049e450();\n    if (var_1dh_11 == '\\0') {\n        return extraout_ECX_07;\n    }\n    iStack852 = *(*extraout_ECX_07 + -0xc) + extraout_ECX_07;\n    if (*(iStack852 + 0x84) != NULL) {\n        (**(**(iStack852 + 0x84) + 0x1c))();\n        return extraout_ECX_07;\n    }\n    fcn.004be620();\n    if (extraout_EDX_08 == 1) {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_07 + -0xc);\n        puVar1 = extraout_ECX_07 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_07 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_07 + -0xc);\n        puVar1 = extraout_ECX_07 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_07 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return extraout_ECX_07;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    uStack856 = fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.0049e450(extraout_ECX_08, 0);\n    if (cStack873 == '\\0') {\n        return extraout_ECX_08;\n    }\n    uStack872 = 0;\n    iVar9 = *(*extraout_ECX_08 + -0xc) + extraout_ECX_08;\n    if (*(iVar9 + 0x84) != NULL) {\n        (**(**(iVar9 + 0x84) + 0x20))(*(iVar9 + 0x78), 0xffff, 0, 0xffff, iVar9, &stack0xfffffc98, 0x49ce2e);\ncode_r0x0049cfa9:\n        if (uStack872 == 0) {\n            return extraout_ECX_08;\n        }\n        fcn.004bccc0(uStack872 | *(extraout_ECX_08 + *(*extraout_ECX_08 + -0xc) + 0x14));\n        return extraout_ECX_08;\n    }\n    uVar10 = fcn.004be620();\n    if (uVar10 >> 0x20 == 1) {\n        fcn.004c3600(uVar10);\n        iVar9 = *(*extraout_ECX_08 + -0xc);\n        puVar1 = extraout_ECX_08 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_08 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        piVar5 = fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600(uVar10);\n        iVar9 = *(*extraout_ECX_08 + -0xc);\n        puVar1 = extraout_ECX_08 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_08 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            goto code_r0x0049cfa9;\n        }\n        fcn.004c3a90();\n        piVar5 = extraout_ECX_08;\n    }\n    fcn.004c3770();\n    uVar4 = fcn.0043b0b0(piVar5);\n    fcn.004c3770();\n    fcn.0043b0b0(uVar4);\n    piVar5 = *(extraout_ECX_09 + *(*extraout_ECX_09 + -0xc) + 0x7c);\n    if (piVar5 != NULL) {\n        uVar2 = (**(*piVar5 + 0x28))(10);\n        piVar5 = fcn.0049d0a0(uVar4, 0x49cf4e, uVar2);\n        return piVar5;\n    }\n    fcn.004be620();\n    extraout_ECX_10[1] = 0;\n    fcn.0049e450(extraout_ECX_10, 1);\n    if (cStack989 == '\\0') {\n        iVar8 = extraout_ECX_10[1];\n    }\n    else {\n        piVar5 = *(extraout_ECX_10 + *(*extraout_ECX_10 + -0xc) + 0x78);\n        piVar6 = piVar5[2];\n        if (piVar6 <= piVar5[3] && piVar5[3] != piVar6) goto code_r0x0049d167;\ncode_r0x0049d111:\n        iVar3 = (**(*piVar5 + 0x24))();\n        iVar8 = extraout_ECX_10[1];\n        iVar9 = iVar8 + 1;\n        piVar6 = in_stack_fffffc4c;\n        if (iVar9 < in_stack_fffffc48) {\n            do {\n                if (iVar3 == -1) {\n                    uVar7 = 2;\ncode_r0x0049d252:\n                    if (0 < in_stack_fffffc48) {\n                        *piVar6 = 0;\n                    }\n                    if (iVar8 == 0) {\ncode_r0x0049d1cd:\n                        uVar7 = uVar7 | 4;\n                    }\n                    else if (uVar7 == 0) {\n                        return extraout_ECX_10;\n                    }\n                    goto code_r0x0049d225;\n                }\n                if (iVar3 == var_ch_12) {\n                    uVar7 = 0;\n                    goto code_r0x0049d252;\n                }\n                in_stack_fffffc4c = piVar6 + 1;\n                *piVar6 = iVar3;\n                extraout_ECX_10[1] = iVar9;\n                piVar6 = piVar5[2];\n                if (piVar6 < piVar5[3]) {\n                    iVar3 = *piVar6;\n                    piVar5[2] = piVar6 + 1;\n                    if (iVar3 != -1) goto code_r0x0049d15f;\ncode_r0x0049d1b0:\n                    iVar9 = extraout_ECX_10[1];\n                    if (in_stack_fffffc48 < 1) {\n                        if (iVar9 != 0) goto code_r0x0049d143;\n                        uVar7 = 6;\n                    }\n                    else {\n                        *in_stack_fffffc4c = 0;\n                        uVar7 = 2;\n                        if (iVar9 == 0) goto code_r0x0049d1cd;\n                    }\n                    goto code_r0x0049d225;\n                }\n                iVar3 = (**(*piVar5 + 0x28))();\n                if (iVar3 == -1) goto code_r0x0049d1b0;\ncode_r0x0049d15f:\n                piVar6 = piVar5[2];\n                if (piVar5[3] <= piVar6) goto code_r0x0049d111;\ncode_r0x0049d167:\n                iVar8 = extraout_ECX_10[1];\n                iVar3 = *piVar6;\n                iVar9 = iVar8 + 1;\n                piVar6 = in_stack_fffffc4c;\n                if (in_stack_fffffc48 <= iVar9) break;\n            } while( true );\n        }\n        if (iVar3 == -1) {\n            if (0 < in_stack_fffffc48) {\n                *in_stack_fffffc4c = 0;\n            }\n            uVar7 = 6;\n            if (iVar8 != 0) {\ncode_r0x0049d143:\n                uVar7 = 2;\n            }\n            goto code_r0x0049d225;\n        }\n    }\n    if (0 < in_stack_fffffc48) {\n        *in_stack_fffffc4c = 0;\n    }\n    if (iVar8 != 0) {\n        return extraout_ECX_10;\n    }\n    uVar7 = 4;\ncode_r0x0049d225:\n    fcn.004bccc0(uVar7 | *(extraout_ECX_10 + *(*extraout_ECX_10 + -0xc) + 0x14));\n    return extraout_ECX_10;\n}\n",
        "token_count": 6445
    },
    "0049d340": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0049d340(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int16_t *piVar2;\n    int16_t iVar3;\n    uint32_t uVar4;\n    int32_t *in_ECX;\n    uint var_30h;\n    uint var_2ah;\n    uint var_19h;\n    uint var_ch;\n    \n    in_ECX[1] = 0;\n    fcn.0049e450();\n    if (var_19h == '\\0') {\ncode_r0x0049d411:\n        if (in_ECX[1] != 0) {\n            return;\n        }\n        uVar4 = 4;\n    }\n    else {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        piVar2 = piVar1[2];\n        if (piVar1[3] < piVar2 || piVar1[3] == piVar2) {\n            iVar3 = (**(*piVar1 + 0x24))();\n        }\n        else {\n            iVar3 = *piVar2;\n        }\n        while (iVar3 != -1) {\n            if (iVar3 == arg_ch) goto code_r0x0049d411;\n            piVar2 = arg_8h[5];\n            if (piVar2 < arg_8h[6]) {\n                *piVar2 = iVar3;\n                arg_8h[5] = piVar2 + 1;\n            }\n            else {\n                iVar3 = (**(*arg_8h + 0x34))(iVar3);\n                if (iVar3 == -1) goto code_r0x0049d411;\n            }\n            in_ECX[1] = in_ECX[1] + 1;\n            piVar2 = piVar1[2];\n            if (piVar2 < piVar1[3]) {\n                iVar3 = *piVar2;\n                piVar1[2] = piVar2 + 1;\n            }\n            else {\n                iVar3 = (**(*piVar1 + 0x28))();\n            }\n            if (iVar3 == -1) break;\n            if (piVar1[2] < piVar1[3]) {\n                iVar3 = *piVar1[2];\n            }\n            else {\n                iVar3 = (**(*piVar1 + 0x24))();\n            }\n        }\n        uVar4 = (-(in_ECX[1] == 0) & 4) + 2;\n    }\n    fcn.004bccc0(uVar4 | *(in_ECX + *(*in_ECX + -0xc) + 0x14));\n    return;\n}\n",
        "token_count": 628
    },
    "0049d820": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0049d820(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    in_ECX[1] = 0;\n    fcn.0049e450();\n    if (var_9h != '\\0') {\n        iVar1 = (**(**(in_ECX + *(*in_ECX + -0xc) + 0x78) + 0x20))(arg_8h, arg_ch);\n        in_ECX[1] = iVar1;\n        if (arg_ch != iVar1) {\n            fcn.004bccc0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 6);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "0049da80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0049da80(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_39h;\n    uint32_t var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.004bccc0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 0xfffffffd);\n    fcn.0049e450();\n    if ((var_39h != '\\0') && ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0)) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x14))(piVar1, arg_8h, arg_ch, arg_10h, arg_14h, 8);\n        if ((var_34h & stack0xffffffc4) == 0xffffffff) {\n            fcn.004bccc0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 363
    },
    "0049dbd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0049dbd0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint32_t var_29h;\n    uint32_t var_24h;\n    uint var_ch;\n    \n    fcn.004bccc0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 0xfffffffd);\n    fcn.0049e450();\n    if ((var_29h != '\\0') && ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0)) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x10))(piVar1, arg_8h, arg_ch, arg_10h, 8);\n        if ((var_24h & stack0xffffffd4) == 0xffffffff) {\n            fcn.004bccc0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 297
    },
    "0049ddf0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.0049ddf0(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    param_1[1] = 0;\n    fcn.004bccc0(*(param_1 + *(*param_1 + -0xc) + 0x14) & 0xfffffffd);\n    fcn.0049e450(param_1, 1);\n    if (var_9h == '\\0') {\n        return param_1;\n    }\n    iVar4 = *(*param_1 + -0xc) + param_1;\n    piVar1 = *(iVar4 + 0x78);\n    if (piVar1 != NULL) {\n        uVar2 = piVar1[2];\n        if (piVar1[1] < uVar2) {\n            piVar1[2] = uVar2 - 2;\n            iVar3 = *(uVar2 - 2);\n        }\n        else {\n            iVar3 = (**(*piVar1 + 0x2c))(0xffff);\n        }\n        if (iVar3 != -1) {\n            return param_1;\n        }\n        iVar4 = *(*param_1 + -0xc) + param_1;\n    }\n    fcn.004bccc0(*(iVar4 + 0x14) | 1);\n    return param_1;\n}\n",
        "token_count": 364
    },
    "0049e450": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0049e84a: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0049e84f)\n\nint32_t * __thiscall fcn.0049e450(int32_t *param_1, int32_t *param_2, char param_3)\n\n{\n    uint32_t *puVar1;\n    int16_t *piVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    char cVar5;\n    int16_t iVar6;\n    uint16_t uVar7;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    uint uVar10;\n    int32_t iVar11;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t iVar12;\n    int32_t *piVar13;\n    int32_t *piVar14;\n    int32_t *piVar15;\n    ulong uVar16;\n    int32_t *piStack216;\n    int32_t *piStack212;\n    int32_t *piStack208;\n    int16_t iStack204;\n    char cStack185;\n    int16_t *piStack152;\n    int32_t in_stack_ffffff6c;\n    int16_t iStack136;\n    uchar *puStack64;\n    int32_t *piStack60;\n    int32_t *piStack56;\n    char cStack52;\n    int32_t *piStack32;\n    \n    *param_1 = 0;\n    iVar11 = *(*param_2 + -0xc) + param_2;\n    uVar8 = *(iVar11 + 0x14);\n    piStack32 = param_1;\n    if (uVar8 != 0) goto code_r0x0049e53d;\n    if (*(iVar11 + 0x70) != 0) {\n        puStack64 = 0x49e489;\n        fcn.0049f880();\n        iVar11 = *(*param_2 + -0xc) + param_2;\n        if ((param_3 == '\\0') && ((*(iVar11 + 0xd) & 0x10) != 0)) goto code_r0x0049e4a2;\ncode_r0x0049e5a7:\n        uVar8 = *(iVar11 + 0x14);\n        if (uVar8 == 0) {\n            *piStack32 = 1;\n            return piStack32;\n        }\ncode_r0x0049e53d:\n        piStack60 = uVar8 | 4;\n        puStack64 = 0x49e548;\n        piVar9 = fcn.004bccc0();\n        return piVar9;\n    }\n    if ((param_3 != '\\0') || ((*(iVar11 + 0xd) & 0x10) == 0)) {\n        *param_1 = 1;\n        return param_1;\n    }\ncode_r0x0049e4a2:\n    piVar9 = *(iVar11 + 0x78);\n    if (piVar9[2] < piVar9[3]) {\n        uVar7 = *piVar9[2];\n    }\n    else {\n        puStack64 = 0x49e5d7;\n        uVar7 = (**(*piVar9 + 0x24))();\n        iVar11 = *(*param_2 + -0xc) + param_2;\n    }\n    piVar14 = *(iVar11 + 0x7c);\n    if (piVar14 != NULL) {\n        if (uVar7 != 0xffff) {\n            do {\n                piStack56 = uVar7;\n                piStack60 = 0x20;\n                puStack64 = 0x49e509;\n                cVar5 = (**(*piVar14 + 8))();\n                if (cVar5 == '\\0') goto code_r0x0049e5a0;\n                piVar2 = piVar9[2];\n                if (piVar2 < piVar9[3]) {\n                    iVar6 = *piVar2;\n                    piVar9[2] = piVar2 + 1;\n                }\n                else {\n                    puStack64 = 0x49e523;\n                    iVar6 = (**(*piVar9 + 0x28))();\n                }\n                if (iVar6 == -1) break;\n                if (piVar9[2] < piVar9[3]) {\n                    uVar7 = *piVar9[2];\n                }\n                else {\n                    puStack64 = 0x49e5c7;\n                    uVar7 = (**(*piVar9 + 0x24))();\n                }\n            } while (uVar7 != 0xffff);\n            iVar11 = param_2 + *(*param_2 + -0xc);\n        }\n        uVar8 = *(iVar11 + 0x14) | 2;\n        goto code_r0x0049e53d;\n    }\n    puStack64 = 0x49e5e8;\n    uVar16 = fcn.004be620();\n    piStack60 = uVar16;\n    if (uVar16 >> 0x20 == 1) {\n        puStack64 = 0x49e5ef;\n        fcn.004c3600();\n        iVar11 = *(*param_2 + -0xc);\n        puVar1 = param_2 + iVar11 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_2 + iVar11 + 0x10) & 1) != 0) {\n            puStack64 = 0x49e603;\n            fcn.004c3a90();\n        }\n        puStack64 = 0x49e608;\n        piVar9 = fcn.004c3a90();\n    }\n    else {\n        puStack64 = 0x49e580;\n        fcn.004c3600();\n        iVar11 = *(*param_2 + -0xc);\n        puVar1 = param_2 + iVar11 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_2 + iVar11 + 0x10) & 1) == 0) {\n            puStack64 = 0x49e596;\n            fcn.004c3770();\ncode_r0x0049e5a0:\n            iVar11 = param_2 + *(*param_2 + -0xc);\n            goto code_r0x0049e5a7;\n        }\n        puStack64 = 0x49e611;\n        fcn.004c3a90();\n    }\n    puStack64 = 0x49e616;\n    fcn.004c3770();\n    puStack64 = 0x49e61e;\n    piStack60 = piVar9;\n    uVar10 = fcn.0043b0b0();\n    puStack64 = 0x49e625;\n    fcn.004c3770();\n    puStack64 = 0x49e62d;\n    piStack60 = uVar10;\n    fcn.0043b0b0();\n    piStack152 = &stack0xffffffc0;\n    *extraout_ECX = 0;\n    iVar11 = *(*piStack56 + -0xc) + piStack56;\n    uVar8 = *(iVar11 + 0x14);\n    puStack64 = &stack0xfffffffc;\n    if (uVar8 != 0) goto code_r0x0049e71d;\n    if (*(iVar11 + 0x70) != 0) {\n        puStack64 = &stack0xfffffffc;\n        fcn.0049f880();\n        iVar11 = *(*piStack56 + -0xc) + piStack56;\n        if ((cStack52 == '\\0') && ((*(iVar11 + 0xd) & 0x10) != 0)) goto code_r0x0049e682;\ncode_r0x0049e787:\n        uVar8 = *(iVar11 + 0x14);\n        if (uVar8 == 0) {\n            *extraout_ECX = 1;\n            return extraout_ECX;\n        }\ncode_r0x0049e71d:\n        piVar9 = fcn.004bccc0(uVar8 | 4);\n        return piVar9;\n    }\n    if ((cStack52 != '\\0') || (puStack64 = &stack0xfffffffc,  (*(iVar11 + 0xd) & 0x10) == 0)) {\n        *extraout_ECX = 1;\n        return extraout_ECX;\n    }\ncode_r0x0049e682:\n    piVar9 = *(iVar11 + 0x78);\n    if (piVar9[2] < piVar9[3]) {\n        iVar6 = *piVar9[2];\n    }\n    else {\n        iVar6 = (**(*piVar9 + 0x24))();\n        iVar11 = *(*piStack56 + -0xc) + piStack56;\n    }\n    piVar14 = *(iVar11 + 0x7c);\n    if (piVar14 != NULL) {\n        if (iVar6 != -1) {\n            do {\n                cVar5 = (**(*piVar14 + 8))(0x20, iVar6);\n                if (cVar5 == '\\0') goto code_r0x0049e780;\n                piVar2 = piVar9[2];\n                if (piVar2 < piVar9[3]) {\n                    iVar6 = *piVar2;\n                    piVar9[2] = piVar2 + 1;\n                }\n                else {\n                    iVar6 = (**(*piVar9 + 0x28))();\n                }\n                if (iVar6 == -1) break;\n                if (piVar9[2] < piVar9[3]) {\n                    iVar6 = *piVar9[2];\n                }\n                else {\n                    iVar6 = (**(*piVar9 + 0x24))();\n                }\n            } while (iVar6 != -1);\n            iVar11 = piStack56 + *(*piStack56 + -0xc);\n        }\n        uVar8 = *(iVar11 + 0x14) | 2;\n        goto code_r0x0049e71d;\n    }\n    uVar16 = fcn.004be620();\n    if (uVar16 >> 0x20 == 1) {\n        fcn.004c3600(uVar16);\n        iVar11 = *(*piStack56 + -0xc);\n        puVar1 = piStack56 + iVar11 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(piStack56 + iVar11 + 0x10) & 1) != 0) {\n            fcn.004c3a90();\n        }\n        piVar9 = fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600(uVar16);\n        iVar11 = *(*piStack56 + -0xc);\n        puVar1 = piStack56 + iVar11 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(piStack56 + iVar11 + 0x10) & 1) == 0) {\n            fcn.004c3770();\ncode_r0x0049e780:\n            iVar11 = piStack56 + *(*piStack56 + -0xc);\n            goto code_r0x0049e787;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    uVar10 = fcn.0043b0b0(piVar9);\n    fcn.004c3770();\n    fcn.0043b0b0(uVar10);\n    piVar9 = *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x7c);\n    if (piVar9 == NULL) {\n        fcn.004be620();\n        piVar9 = extraout_ECX_01;\n    }\n    else {\n        iStack136 = (**(*piVar9 + 0x28))(10);\n        in_stack_ffffff6c = 0x49e84f;\n        piVar9 = extraout_ECX_00;\n    }\n    piVar9[1] = 0;\n    fcn.0049e450(piVar9, 1);\n    if (cStack185 == '\\0') {\n        iVar11 = piVar9[1];\n        if (0 < in_stack_ffffff6c) {\n    // WARNING: Ignoring partial resolution of indirect\n            puStack64._0_2_ = 0;\n        }\njoined_r0x0049eb44:\n        if (iVar11 != 0) {\n            return piStack208;\n        }\n        uVar8 = 4;\n    }\n    else {\n        piVar9 = *(piStack208 + *(*piStack208 + -0xc) + 0x78);\n        piVar2 = piVar9[2];\n        if (piVar9[3] < piVar2 || piVar9[3] == piVar2) {\n            iVar6 = (**(*piVar9 + 0x24))();\n        }\n        else {\n            iVar6 = *piVar2;\n            piStack152 = &stack0xffffffc0;\n        }\ncode_r0x0049e93f:\n        iVar12 = piStack208[1];\n        while (iVar11 = iVar12 + 1,  iVar11 < in_stack_ffffff6c) {\n            while( true ) {\n                if (iVar6 == -1) goto code_r0x0049eaac;\n                piStack216 = piVar9[3];\n                piVar14 = piVar9[2];\n                if (iVar6 == iStack136) goto code_r0x0049e8ee;\n                piStack212 = (in_stack_ffffff6c - iVar12) + -1;\n                piVar15 = piStack216 - piVar14 >> 1;\n                if (piStack212 <= piVar15) {\n                    piVar15 = piStack212;\n                }\n                piVar3 = piVar14;\n                piVar13 = piVar15;\n                piVar4 = piVar14;\n                if (piVar15 < 2) break;\n                while (piStack212 = piVar15,  piVar4 != NULL) {\n                    if (*piVar3 == iStack136) {\n                        iVar11 = piVar3 - piVar14;\n                        piStack212 = iVar11 >> 1;\n                        if (piStack212 == NULL) goto code_r0x0049e9dc;\n                        break;\n                    }\n                    piVar13 = piVar13 + -1;\n                    piVar3 = piVar3 + 2;\n                    piVar4 = piVar13;\n                }\n                iVar11 = piStack212 * 2;\n                sub.msvcrt.dll_memcpy(piStack152, piVar14, iVar11);\n                piVar14 = piVar9[2];\n                iVar12 = piStack208[1];\n                piStack216 = piVar9[3];\ncode_r0x0049e9dc:\n                piStack152 = piStack152 + iVar11;\n                iVar12 = iVar12 + piStack212;\n                piVar14 = iVar11 + piVar14;\n                piVar9[2] = piVar14;\n                piStack208[1] = iVar12;\n                if (piStack216 <= piVar14) {\n                    iVar6 = (**(*piVar9 + 0x24))();\n                    goto code_r0x0049e93f;\n                }\n                iVar6 = *piVar14;\n                iVar11 = iVar12 + 1;\n                if (in_stack_ffffff6c <= iVar11) goto code_r0x0049ea08;\n            }\n            *piStack152 = iVar6;\n            piStack152 = piStack152 + 1;\n            piStack208[1] = iVar11;\n            if (piVar14 < piStack216) {\n                iVar6 = *piVar14;\n                piVar9[2] = piVar14 + 2;\n            }\n            else {\n                iVar6 = (**(*piVar9 + 0x28))();\n            }\n            if (iVar6 == -1) {\n                iVar12 = piStack208[1];\ncode_r0x0049eaac:\n                uVar8 = 2;\n                if (0 < in_stack_ffffff6c) {\n                    *piStack152 = 0;\n                }\n                goto code_r0x0049eac2;\n            }\n            if (piVar9[2] < piVar9[3]) {\n                iVar6 = *piVar9[2];\n                iVar12 = piStack208[1];\n            }\n            else {\n                iVar6 = (**(*piVar9 + 0x24))();\n                iVar12 = piStack208[1];\n            }\n        }\ncode_r0x0049ea08:\n        if (iVar6 == -1) {\n            if (0 < in_stack_ffffff6c) {\n                *piStack152 = 0;\n                uVar8 = (-(iVar12 == 0) & 4) + 2;\n                goto code_r0x0049e8bd;\n            }\n            uVar8 = 2;\n        }\n        else {\n            if (iVar6 == iStack204) {\n                piStack216 = piVar9[3];\n                piVar14 = piVar9[2];\ncode_r0x0049e8ee:\n                piStack208[1] = iVar11;\n                if (piVar14 < piStack216) {\n                    piVar9[2] = piVar14 + 2;\n                    if (0 < in_stack_ffffff6c) {\n                        *piStack152 = 0;\n                    }\n                }\n                else {\n                    (**(*piVar9 + 0x28))();\n                    iVar11 = piStack208[1];\n                    if (0 < in_stack_ffffff6c) {\n                        *piStack152 = 0;\n                    }\n                }\n                goto joined_r0x0049eb44;\n            }\n            if (0 < in_stack_ffffff6c) {\n                *piStack152 = 0;\n                uVar8 = 4;\n                goto code_r0x0049e8bd;\n            }\n            uVar8 = 4;\n        }\ncode_r0x0049eac2:\n        if (iVar12 == 0) {\n            uVar8 = uVar8 | 4;\n        }\n    }\ncode_r0x0049e8bd:\n    fcn.004bccc0(uVar8 | *(piStack208 + *(*piStack208 + -0xc) + 0x14));\n    return piStack212;\n}\n",
        "token_count": 4153
    },
    "0049eb90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0049eb90(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int16_t iVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    uint var_9h;\n    \n    in_ECX[1] = 0;\n    fcn.004bccc0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 0xfffffffd);\n    fcn.0049e450();\n    if (var_9h == '\\0') {\n        return;\n    }\n    iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    piVar1 = *(iVar4 + 0x78);\n    if (piVar1 != NULL) {\n        uVar2 = piVar1[2];\n        if ((piVar1[1] < uVar2) && (iVar3 = *(uVar2 - 2),  arg_8h == iVar3)) {\n            piVar1[2] = uVar2 - 2;\n        }\n        else {\n            iVar3 = (**(*piVar1 + 0x2c))(arg_8h);\n        }\n        if (iVar3 != -1) {\n            return;\n        }\n        iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    }\n    fcn.004bccc0(*(iVar4 + 0x14) | 1);\n    return;\n}\n",
        "token_count": 356
    },
    "0049ecb0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0049ecb0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    in_ECX[1] = 0;\n    fcn.0049e450();\n    if (var_9h != '\\0') {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        if (piVar1[2] == piVar1[3]) {\n            iVar2 = (**(*piVar1 + 0x1c))();\n        }\n        else {\n            iVar2 = piVar1[3] - piVar1[2] >> 1;\n        }\n        if (0 < iVar2) {\n            if (arg_ch < iVar2) {\n                iVar2 = arg_ch;\n            }\n            iVar2 = (**(**(in_ECX + *(*in_ECX + -0xc) + 0x78) + 0x20))(arg_8h, iVar2);\n            in_ECX[1] = iVar2;\n            return iVar2;\n        }\n        if (iVar2 == -1) {\n            fcn.004bccc0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 2);\n        }\n    }\n    return in_ECX[1];\n}\n",
        "token_count": 355
    },
    "0049eeb0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049eeb0(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.004bb510();\n    in_ECX[0x1e] = 0;\n    *(in_ECX + 0x1f) = 0;\n    *(in_ECX + 0x7e) = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    in_ECX[0x23] = 0;\n    *in_ECX = 0x52c1c4;\n    in_ECX[2] = 0x52c1d8;\n    in_ECX[1] = 0;\n    fcn.004bcb40(arg_8h);\n    return;\n}\n",
        "token_count": 212
    },
    "0049ef50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.0049ef50(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bb510();\n    param_1[0x1e] = 0;\n    *(param_1 + 0x1f) = 0;\n    *(param_1 + 0x7e) = 0;\n    param_1[0x20] = 0;\n    param_1[0x21] = 0;\n    param_1[0x22] = 0;\n    param_1[0x23] = 0;\n    *param_1 = 0x52c1c4;\n    param_1[2] = 0x52c1d8;\n    param_1[1] = 0;\n    fcn.004bcb40(0);\n    return;\n}\n",
        "token_count": 202
    },
    "0049f3b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0049f3b0(uint *arg_8h)\n\n{\n    uint32_t *puVar1;\n    ushort uVar2;\n    int16_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int16_t *piVar6;\n    uint32_t uVar7;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    int32_t *extraout_ECX_03;\n    int32_t *extraout_ECX_04;\n    int32_t *extraout_ECX_05;\n    int32_t iVar8;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX_06;\n    int32_t iVar9;\n    int32_t unaff_EDI;\n    ulong uVar10;\n    char cStack653;\n    int32_t in_stack_fffffd98;\n    int16_t *in_stack_fffffd9c;\n    int16_t iStack604;\n    uint uVar11;\n    char cStack537;\n    uint32_t uStack536;\n    uint uStack520;\n    int32_t iStack516;\n    int32_t iStack512;\n    uchar *puStack508;\n    int32_t *piStack504;\n    uint uStack500;\n    int32_t *piStack496;\n    uint uStack492;\n    int32_t iStack488;\n    uchar *puStack484;\n    uint uStack480;\n    char cStack453;\n    uint32_t uStack452;\n    uint uStack436;\n    int32_t iStack432;\n    int32_t iStack428;\n    uchar *puStack424;\n    int32_t *piStack420;\n    uint uStack416;\n    int32_t *piStack412;\n    uint uStack408;\n    int32_t iStack404;\n    uchar *puStack400;\n    uint uStack396;\n    char cStack369;\n    uint32_t uStack368;\n    uint uStack352;\n    int32_t iStack348;\n    int32_t iStack344;\n    uchar *puStack340;\n    int32_t *piStack336;\n    uint uStack332;\n    int32_t *piStack328;\n    uint uStack324;\n    int32_t iStack320;\n    uchar *puStack316;\n    uint uStack312;\n    char cStack285;\n    uint32_t uStack284;\n    uint uStack268;\n    int32_t iStack264;\n    int32_t iStack260;\n    uchar *puStack256;\n    int32_t *piStack252;\n    uint uStack248;\n    int32_t *piStack244;\n    uint uStack240;\n    int32_t iStack236;\n    uchar *puStack232;\n    uint uStack228;\n    char cStack201;\n    uint32_t uStack200;\n    uint uStack184;\n    int32_t iStack180;\n    int32_t iStack176;\n    uchar *puStack172;\n    int32_t *piStack168;\n    uint uStack164;\n    int32_t *piStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uchar *puStack148;\n    uint uStack144;\n    char cStack117;\n    uint32_t uStack116;\n    uint uStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    uchar *puStack88;\n    int32_t *piStack84;\n    uint uStack80;\n    int32_t *piStack76;\n    uint uStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    uint *puStack60;\n    uint32_t var_21h;\n    uint var_1ch;\n    uint var_ch;\n    \n    uStack72 = 0;\n    uStack80 = 0x49f3ce;\n    piStack76 = in_ECX;\n    fcn.0049e450();\n    if (var_21h == '\\0') {\n        return in_ECX;\n    }\n    stack0xffffffdc = 0;\n    iStack96 = *(*in_ECX + -0xc) + in_ECX;\n    if (*(iStack96 + 0x84) != NULL) {\n        piStack84 = *(iStack96 + 0x78);\n        puStack60 = &fcn.0049f3b0::var_1ch;\n        iStack64 = &fcn.0049f3b0::var_21h + 1;\n        piStack76 = NULL;\n        uStack72 = 0xffff;\n        uStack80 = 0xffff;\n        puStack88 = 0x49f426;\n        iStack68 = iStack96;\n        (**(**(iStack96 + 0x84) + 0xc))();\n        *arg_8h = var_1ch;\ncode_r0x0049f431:\n        if (stack0xffffffdc == 0) {\n            return in_ECX;\n        }\n        piStack84 = stack0xffffffdc | *(in_ECX + *(*in_ECX + -0xc) + 0x14);\n        puStack88 = 0x49f456;\n        fcn.004bccc0();\n        return in_ECX;\n    }\n    puStack88 = 0x49f46a;\n    uVar10 = fcn.004be620();\n    piStack84 = uVar10;\n    if (uVar10 >> 0x20 == 1) {\n        puStack88 = 0x49f494;\n        fcn.004c3600();\n        iVar9 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar9 + 0x10) & 1) == 0) {\n            puStack88 = 0x49f4a8;\n            fcn.004c3a90();\n        }\n        puStack88 = 0x49f4ad;\n        in_ECX = fcn.004c3a90();\n    }\n    else {\n        puStack88 = 0x49f477;\n        fcn.004c3600();\n        unaff_EDI = *(*in_ECX + -0xc) + in_ECX;\n        *(unaff_EDI + 0x14) = *(unaff_EDI + 0x14) | 1;\n        if ((*(unaff_EDI + 0x10) & 1) == 0) {\n            puStack88 = 0x49f48d;\n            fcn.004c3770();\n            goto code_r0x0049f431;\n        }\n        puStack88 = 0x49f4b6;\n        fcn.004c3a90();\n    }\n    puStack88 = 0x49f4bb;\n    fcn.004c3770();\n    puStack88 = 0x49f4c3;\n    piStack84 = in_ECX;\n    uStack100 = fcn.0043b0b0();\n    puStack88 = 0x49f4ca;\n    fcn.004c3770();\n    puStack88 = 0x49f4d2;\n    piStack84 = uStack100;\n    fcn.0043b0b0();\n    uStack156 = 0;\n    uStack164 = 0x49c9ae;\n    piStack160 = extraout_ECX_06;\n    iStack92 = unaff_EDI;\n    puStack88 = &stack0xfffffffc;\n    fcn.0049e450();\n    if (cStack117 == '\\0') {\n        return extraout_ECX_06;\n    }\n    uStack116 = 0;\n    iStack180 = *(*extraout_ECX_06 + -0xc) + extraout_ECX_06;\n    if (*(iStack180 + 0x84) != NULL) {\n        piStack168 = *(iStack180 + 0x78);\n        uStack144 = uStack80;\n        puStack148 = &stack0xffffff8c;\n        piStack160 = NULL;\n        uStack156 = 0xffff;\n        uStack164 = 0xffff;\n        puStack172 = 0x49ca06;\n        iStack152 = iStack180;\n        (**(**(iStack180 + 0x84) + 0x14))();\ncode_r0x0049ca09:\n        if (uStack116 == 0) {\n            return extraout_ECX_06;\n        }\n        piStack168 = uStack116 | *(extraout_ECX_06 + *(*extraout_ECX_06 + -0xc) + 0x14);\n        puStack172 = 0x49ca32;\n        fcn.004bccc0();\n        return extraout_ECX_06;\n    }\n    puStack172 = 0x49ca46;\n    uVar10 = fcn.004be620();\n    piStack168 = uVar10;\n    if (uVar10 >> 0x20 == 1) {\n        puStack172 = 0x49ca70;\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            puStack172 = 0x49ca84;\n            fcn.004c3a90();\n        }\n        puStack172 = 0x49ca89;\n        piVar5 = fcn.004c3a90();\n    }\n    else {\n        puStack172 = 0x49ca53;\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            puStack172 = 0x49ca69;\n            fcn.004c3770();\n            goto code_r0x0049ca09;\n        }\n        puStack172 = 0x49ca92;\n        fcn.004c3a90();\n        piVar5 = extraout_ECX_06;\n    }\n    puStack172 = 0x49ca97;\n    fcn.004c3770();\n    puStack172 = 0x49ca9f;\n    piStack168 = piVar5;\n    uStack184 = fcn.0043b0b0();\n    puStack172 = 0x49caa6;\n    fcn.004c3770();\n    puStack172 = 0x49caae;\n    piStack168 = uStack184;\n    fcn.0043b0b0();\n    uStack240 = 0;\n    uStack248 = 0x49cace;\n    piStack244 = extraout_ECX;\n    iStack176 = unaff_EDI;\n    puStack172 = &stack0xffffffa8;\n    fcn.0049e450();\n    if (cStack201 == '\\0') {\n        return extraout_ECX;\n    }\n    uStack200 = 0;\n    iStack264 = *(*extraout_ECX + -0xc) + extraout_ECX;\n    if (*(iStack264 + 0x84) != NULL) {\n        piStack252 = *(iStack264 + 0x78);\n        uStack228 = uStack164;\n        puStack232 = &stack0xffffff38;\n        piStack244 = NULL;\n        uStack240 = 0xffff;\n        uStack248 = 0xffff;\n        puStack256 = 0x49cb26;\n        iStack236 = iStack264;\n        (**(**(iStack264 + 0x84) + 0xc))();\ncode_r0x0049cb29:\n        if (uStack200 == 0) {\n            return extraout_ECX;\n        }\n        piStack252 = uStack200 | *(extraout_ECX + *(*extraout_ECX + -0xc) + 0x14);\n        puStack256 = 0x49cb52;\n        fcn.004bccc0();\n        return extraout_ECX;\n    }\n    puStack256 = 0x49cb66;\n    uVar10 = fcn.004be620();\n    piStack252 = uVar10;\n    if (uVar10 >> 0x20 == 1) {\n        puStack256 = 0x49cb90;\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            puStack256 = 0x49cba4;\n            fcn.004c3a90();\n        }\n        puStack256 = 0x49cba9;\n        piVar5 = fcn.004c3a90();\n    }\n    else {\n        puStack256 = 0x49cb73;\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            puStack256 = 0x49cb89;\n            fcn.004c3770();\n            goto code_r0x0049cb29;\n        }\n        puStack256 = 0x49cbb2;\n        fcn.004c3a90();\n        piVar5 = extraout_ECX;\n    }\n    puStack256 = 0x49cbb7;\n    fcn.004c3770();\n    puStack256 = 0x49cbbf;\n    piStack252 = piVar5;\n    uStack268 = fcn.0043b0b0();\n    puStack256 = 0x49cbc6;\n    fcn.004c3770();\n    puStack256 = 0x49cbce;\n    piStack252 = uStack268;\n    fcn.0043b0b0();\n    uStack324 = 0;\n    uStack332 = 0x49cbee;\n    piStack328 = extraout_ECX_00;\n    iStack260 = unaff_EDI;\n    puStack256 = &stack0xffffff54;\n    fcn.0049e450();\n    if (cStack285 == '\\0') {\n        return extraout_ECX_00;\n    }\n    uStack284 = 0;\n    iStack348 = *(*extraout_ECX_00 + -0xc) + extraout_ECX_00;\n    if (*(iStack348 + 0x84) != NULL) {\n        piStack336 = *(iStack348 + 0x78);\n        uStack312 = uStack248;\n        puStack316 = &stack0xfffffee4;\n        piStack328 = NULL;\n        uStack324 = 0xffff;\n        uStack332 = 0xffff;\n        puStack340 = 0x49cc46;\n        iStack320 = iStack348;\n        (**(**(iStack348 + 0x84) + 0x18))();\ncode_r0x0049cc49:\n        if (uStack284 == 0) {\n            return extraout_ECX_00;\n        }\n        piStack336 = uStack284 | *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x14);\n        puStack340 = 0x49cc72;\n        fcn.004bccc0();\n        return extraout_ECX_00;\n    }\n    puStack340 = 0x49cc86;\n    uVar10 = fcn.004be620();\n    piStack336 = uVar10;\n    if (uVar10 >> 0x20 == 1) {\n        puStack340 = 0x49ccb0;\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            puStack340 = 0x49ccc4;\n            fcn.004c3a90();\n        }\n        puStack340 = 0x49ccc9;\n        piVar5 = fcn.004c3a90();\n    }\n    else {\n        puStack340 = 0x49cc93;\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            puStack340 = 0x49cca9;\n            fcn.004c3770();\n            goto code_r0x0049cc49;\n        }\n        puStack340 = 0x49ccd2;\n        fcn.004c3a90();\n        piVar5 = extraout_ECX_00;\n    }\n    puStack340 = 0x49ccd7;\n    fcn.004c3770();\n    puStack340 = 0x49ccdf;\n    piStack336 = piVar5;\n    uStack352 = fcn.0043b0b0();\n    puStack340 = 0x49cce6;\n    fcn.004c3770();\n    puStack340 = 0x49ccee;\n    piStack336 = uStack352;\n    fcn.0043b0b0();\n    uStack408 = 0;\n    uStack416 = 0x49cd0e;\n    piStack412 = extraout_ECX_01;\n    iStack344 = unaff_EDI;\n    puStack340 = &stack0xffffff00;\n    fcn.0049e450();\n    if (cStack369 == '\\0') {\n        return extraout_ECX_01;\n    }\n    uStack368 = 0;\n    iStack432 = *(*extraout_ECX_01 + -0xc) + extraout_ECX_01;\n    if (*(iStack432 + 0x84) != NULL) {\n        piStack420 = *(iStack432 + 0x78);\n        uStack396 = uStack332;\n        puStack400 = &stack0xfffffe90;\n        piStack412 = NULL;\n        uStack408 = 0xffff;\n        uStack416 = 0xffff;\n        puStack424 = 0x49cd66;\n        iStack404 = iStack432;\n        (**(**(iStack432 + 0x84) + 0x10))();\ncode_r0x0049cd69:\n        if (uStack368 == 0) {\n            return extraout_ECX_01;\n        }\n        piStack420 = uStack368 | *(extraout_ECX_01 + *(*extraout_ECX_01 + -0xc) + 0x14);\n        puStack424 = 0x49cd92;\n        fcn.004bccc0();\n        return extraout_ECX_01;\n    }\n    puStack424 = 0x49cda6;\n    uVar10 = fcn.004be620();\n    piStack420 = uVar10;\n    if (uVar10 >> 0x20 == 1) {\n        puStack424 = 0x49cdd0;\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            puStack424 = 0x49cde4;\n            fcn.004c3a90();\n        }\n        puStack424 = 0x49cde9;\n        piVar5 = fcn.004c3a90();\n    }\n    else {\n        puStack424 = 0x49cdb3;\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            puStack424 = 0x49cdc9;\n            fcn.004c3770();\n            goto code_r0x0049cd69;\n        }\n        puStack424 = 0x49cdf2;\n        fcn.004c3a90();\n        piVar5 = extraout_ECX_01;\n    }\n    puStack424 = 0x49cdf7;\n    fcn.004c3770();\n    puStack424 = 0x49cdff;\n    piStack420 = piVar5;\n    uStack436 = fcn.0043b0b0();\n    puStack424 = 0x49ce06;\n    fcn.004c3770();\n    puStack424 = 0x49ce0e;\n    piStack420 = uStack436;\n    fcn.0043b0b0();\n    uStack492 = 0;\n    uStack500 = 0x49ce2e;\n    piStack496 = extraout_ECX_02;\n    iStack428 = unaff_EDI;\n    puStack424 = &stack0xfffffeac;\n    fcn.0049e450();\n    if (cStack453 == '\\0') {\n        return extraout_ECX_02;\n    }\n    uStack452 = 0;\n    iStack516 = *(*extraout_ECX_02 + -0xc) + extraout_ECX_02;\n    if (*(iStack516 + 0x84) != NULL) {\n        piStack504 = *(iStack516 + 0x78);\n        uStack480 = uStack416;\n        puStack484 = &stack0xfffffe3c;\n        piStack496 = NULL;\n        uStack492 = 0xffff;\n        uStack500 = 0xffff;\n        puStack508 = 0x49ce86;\n        iStack488 = iStack516;\n        (**(**(iStack516 + 0x84) + 0x1c))();\ncode_r0x0049ce89:\n        if (uStack452 == 0) {\n            return extraout_ECX_02;\n        }\n        piStack504 = uStack452 | *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x14);\n        puStack508 = 0x49ceb2;\n        fcn.004bccc0();\n        return extraout_ECX_02;\n    }\n    puStack508 = 0x49cec6;\n    uVar10 = fcn.004be620();\n    piStack504 = uVar10;\n    if (uVar10 >> 0x20 == 1) {\n        puStack508 = 0x49cef0;\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            puStack508 = 0x49cf04;\n            fcn.004c3a90();\n        }\n        puStack508 = 0x49cf09;\n        piVar5 = fcn.004c3a90();\n    }\n    else {\n        puStack508 = 0x49ced3;\n        fcn.004c3600();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            puStack508 = 0x49cee9;\n            fcn.004c3770();\n            goto code_r0x0049ce89;\n        }\n        puStack508 = 0x49cf12;\n        fcn.004c3a90();\n        piVar5 = extraout_ECX_02;\n    }\n    puStack508 = 0x49cf17;\n    fcn.004c3770();\n    puStack508 = 0x49cf1f;\n    piStack504 = piVar5;\n    uStack520 = fcn.0043b0b0();\n    puStack508 = 0x49cf26;\n    fcn.004c3770();\n    puStack508 = 0x49cf2e;\n    piStack504 = uStack520;\n    fcn.0043b0b0();\n    uVar11 = 0x49cf4e;\n    iStack512 = unaff_EDI;\n    puStack508 = &stack0xfffffe58;\n    fcn.0049e450(extraout_ECX_03, 0);\n    if (cStack537 == '\\0') {\n        return extraout_ECX_03;\n    }\n    uStack536 = 0;\n    iVar9 = *(*extraout_ECX_03 + -0xc) + extraout_ECX_03;\n    if (*(iVar9 + 0x84) != NULL) {\n        (**(**(iVar9 + 0x84) + 0x20))(*(iVar9 + 0x78), 0xffff, 0, 0xffff, iVar9, &stack0xfffffde8, uStack500);\ncode_r0x0049cfa9:\n        if (uStack536 == 0) {\n            return extraout_ECX_03;\n        }\n        fcn.004bccc0(uStack536 | *(extraout_ECX_03 + *(*extraout_ECX_03 + -0xc) + 0x14));\n        return extraout_ECX_03;\n    }\n    uVar10 = fcn.004be620();\n    if (uVar10 >> 0x20 == 1) {\n        fcn.004c3600(uVar10);\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        piVar5 = fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600(uVar10);\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            goto code_r0x0049cfa9;\n        }\n        fcn.004c3a90();\n        piVar5 = extraout_ECX_03;\n    }\n    fcn.004c3770();\n    uVar4 = fcn.0043b0b0(piVar5);\n    fcn.004c3770();\n    fcn.0043b0b0(uVar4);\n    piVar5 = *(extraout_ECX_04 + *(*extraout_ECX_04 + -0xc) + 0x7c);\n    if (piVar5 != NULL) {\n        uVar2 = (**(*piVar5 + 0x28))(10);\n        piVar5 = fcn.0049d0a0(uVar4, uVar11, uVar2);\n        return piVar5;\n    }\n    fcn.004be620();\n    extraout_ECX_05[1] = 0;\n    fcn.0049e450(extraout_ECX_05, 1);\n    if (cStack653 == '\\0') {\n        iVar8 = extraout_ECX_05[1];\n    }\n    else {\n        piVar5 = *(extraout_ECX_05 + *(*extraout_ECX_05 + -0xc) + 0x78);\n        piVar6 = piVar5[2];\n        if (piVar6 <= piVar5[3] && piVar5[3] != piVar6) goto code_r0x0049d167;\ncode_r0x0049d111:\n        iVar3 = (**(*piVar5 + 0x24))();\n        iVar8 = extraout_ECX_05[1];\n        iVar9 = iVar8 + 1;\n        piVar6 = in_stack_fffffd9c;\n        if (iVar9 < in_stack_fffffd98) {\n            do {\n                if (iVar3 == -1) {\n                    uVar7 = 2;\ncode_r0x0049d252:\n                    if (0 < in_stack_fffffd98) {\n                        *piVar6 = 0;\n                    }\n                    if (iVar8 == 0) {\ncode_r0x0049d1cd:\n                        uVar7 = uVar7 | 4;\n                    }\n                    else if (uVar7 == 0) {\n                        return extraout_ECX_05;\n                    }\n                    goto code_r0x0049d225;\n                }\n                if (iVar3 == iStack604) {\n                    uVar7 = 0;\n                    goto code_r0x0049d252;\n                }\n                in_stack_fffffd9c = piVar6 + 1;\n                *piVar6 = iVar3;\n                extraout_ECX_05[1] = iVar9;\n                piVar6 = piVar5[2];\n                if (piVar6 < piVar5[3]) {\n                    iVar3 = *piVar6;\n                    piVar5[2] = piVar6 + 1;\n                    if (iVar3 != -1) goto code_r0x0049d15f;\ncode_r0x0049d1b0:\n                    iVar9 = extraout_ECX_05[1];\n                    if (in_stack_fffffd98 < 1) {\n                        if (iVar9 != 0) goto code_r0x0049d143;\n                        uVar7 = 6;\n                    }\n                    else {\n                        *in_stack_fffffd9c = 0;\n                        uVar7 = 2;\n                        if (iVar9 == 0) goto code_r0x0049d1cd;\n                    }\n                    goto code_r0x0049d225;\n                }\n                iVar3 = (**(*piVar5 + 0x28))();\n                if (iVar3 == -1) goto code_r0x0049d1b0;\ncode_r0x0049d15f:\n                piVar6 = piVar5[2];\n                if (piVar5[3] <= piVar6) goto code_r0x0049d111;\ncode_r0x0049d167:\n                iVar8 = extraout_ECX_05[1];\n                iVar3 = *piVar6;\n                iVar9 = iVar8 + 1;\n                piVar6 = in_stack_fffffd9c;\n                if (in_stack_fffffd98 <= iVar9) break;\n            } while( true );\n        }\n        if (iVar3 == -1) {\n            if (0 < in_stack_fffffd98) {\n                *in_stack_fffffd9c = 0;\n            }\n            uVar7 = 6;\n            if (iVar8 != 0) {\ncode_r0x0049d143:\n                uVar7 = 2;\n            }\n            goto code_r0x0049d225;\n        }\n    }\n    if (0 < in_stack_fffffd98) {\n        *in_stack_fffffd9c = 0;\n    }\n    if (iVar8 != 0) {\n        return extraout_ECX_05;\n    }\n    uVar7 = 4;\ncode_r0x0049d225:\n    fcn.004bccc0(uVar7 | *(extraout_ECX_05 + *(*extraout_ECX_05 + -0xc) + 0x14));\n    return extraout_ECX_05;\n}\n",
        "token_count": 7380
    },
    "0049f510": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x0049cea0)\n// WARNING: Removing unreachable block (ram,0x0049cd80)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0049f510(ushort *arg_8h)\n\n{\n    uint32_t *puVar1;\n    bool bVar2;\n    ushort uVar3;\n    int16_t iVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int16_t *piVar7;\n    uint32_t uVar8;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    int32_t iVar9;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX_03;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t iVar10;\n    ulong uVar11;\n    char cStack401;\n    int32_t in_stack_fffffe94;\n    int16_t *in_stack_fffffe98;\n    int16_t iStack352;\n    uint uVar12;\n    char cStack285;\n    uint32_t auStack284 [4];\n    uint uStack268;\n    int32_t iStack264;\n    char cStack201;\n    char cStack117;\n    uint var_21h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    fcn.0049e450();\n    if (var_21h == '\\0') {\n        return in_ECX;\n    }\n    bVar2 = false;\n    piVar6 = *(in_ECX + *(*in_ECX + -0xc) + 0x84);\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 0xc))();\n        if (var_1ch < -0x8000) {\n            bVar2 = true;\n            *arg_8h = 0x8000;\n        }\n        else {\n            if (0x7fff < var_1ch) {\n                *arg_8h = 0x7fff;\n                goto code_r0x0049f5dd;\n            }\n            *arg_8h = var_1ch;\n        }\ncode_r0x0049f5ac:\n        if (!bVar2) {\n            return in_ECX;\n        }\ncode_r0x0049f5dd:\n        fcn.004bccc0();\n        return in_ECX;\n    }\n    fcn.004be620();\n    if (extraout_EDX_01 == 1) {\n        fcn.004c3600();\n        iVar10 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar10 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            goto code_r0x0049f5ac;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.0049e450();\n    if (cStack117 == '\\0') {\n        return extraout_ECX_03;\n    }\n    piVar6 = *(extraout_ECX_03 + *(*extraout_ECX_03 + -0xc) + 0x84);\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 0x10))();\n        return extraout_ECX_03;\n    }\n    fcn.004be620();\n    if (extraout_EDX == 1) {\n        fcn.004c3600();\n        iVar10 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar10 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return extraout_ECX_03;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    fcn.0049e450();\n    if (cStack201 == '\\0') {\n        return extraout_ECX;\n    }\n    iStack264 = *(*extraout_ECX + -0xc) + extraout_ECX;\n    if (*(iStack264 + 0x84) != NULL) {\n        (**(**(iStack264 + 0x84) + 0x1c))();\n        return extraout_ECX;\n    }\n    fcn.004be620();\n    if (extraout_EDX_00 == 1) {\n        fcn.004c3600();\n        iVar10 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600();\n        iVar10 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            return extraout_ECX;\n        }\n        fcn.004c3a90();\n    }\n    fcn.004c3770();\n    uStack268 = fcn.0043b0b0();\n    fcn.004c3770();\n    fcn.0043b0b0();\n    uVar12 = 0x49cf4e;\n    fcn.0049e450(extraout_ECX_00, 0);\n    if (cStack285 == '\\0') {\n        return extraout_ECX_00;\n    }\n    auStack284[0] = 0;\n    iVar10 = *(*extraout_ECX_00 + -0xc) + extraout_ECX_00;\n    if (*(iVar10 + 0x84) != NULL) {\n        (**(**(iVar10 + 0x84) + 0x20))(*(iVar10 + 0x78), 0xffff, 0, 0xffff, iVar10, auStack284, 0x49ce2e);\ncode_r0x0049cfa9:\n        if (auStack284[0] == 0) {\n            return extraout_ECX_00;\n        }\n        fcn.004bccc0(auStack284[0] | *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x14));\n        return extraout_ECX_00;\n    }\n    uVar11 = fcn.004be620();\n    if (uVar11 >> 0x20 == 1) {\n        fcn.004c3600(uVar11);\n        iVar10 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c3a90();\n        }\n        piVar6 = fcn.004c3a90();\n    }\n    else {\n        fcn.004c3600(uVar11);\n        iVar10 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c3770();\n            goto code_r0x0049cfa9;\n        }\n        fcn.004c3a90();\n        piVar6 = extraout_ECX_00;\n    }\n    fcn.004c3770();\n    uVar5 = fcn.0043b0b0(piVar6);\n    fcn.004c3770();\n    fcn.0043b0b0(uVar5);\n    piVar6 = *(extraout_ECX_01 + *(*extraout_ECX_01 + -0xc) + 0x7c);\n    if (piVar6 != NULL) {\n        uVar3 = (**(*piVar6 + 0x28))(10);\n        piVar6 = fcn.0049d0a0(uVar5, uVar12, uVar3);\n        return piVar6;\n    }\n    fcn.004be620();\n    extraout_ECX_02[1] = 0;\n    fcn.0049e450(extraout_ECX_02, 1);\n    if (cStack401 == '\\0') {\n        iVar9 = extraout_ECX_02[1];\n    }\n    else {\n        piVar6 = *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x78);\n        piVar7 = piVar6[2];\n        if (piVar7 <= piVar6[3] && piVar6[3] != piVar7) goto code_r0x0049d167;\ncode_r0x0049d111:\n        iVar4 = (**(*piVar6 + 0x24))();\n        iVar9 = extraout_ECX_02[1];\n        iVar10 = iVar9 + 1;\n        piVar7 = in_stack_fffffe98;\n        if (iVar10 < in_stack_fffffe94) {\n            do {\n                if (iVar4 == -1) {\n                    uVar8 = 2;\ncode_r0x0049d252:\n                    if (0 < in_stack_fffffe94) {\n                        *piVar7 = 0;\n                    }\n                    if (iVar9 == 0) {\ncode_r0x0049d1cd:\n                        uVar8 = uVar8 | 4;\n                    }\n                    else if (uVar8 == 0) {\n                        return extraout_ECX_02;\n                    }\n                    goto code_r0x0049d225;\n                }\n                if (iVar4 == iStack352) {\n                    uVar8 = 0;\n                    goto code_r0x0049d252;\n                }\n                in_stack_fffffe98 = piVar7 + 1;\n                *piVar7 = iVar4;\n                extraout_ECX_02[1] = iVar10;\n                piVar7 = piVar6[2];\n                if (piVar6[3] <= piVar7) {\n                    iVar4 = (**(*piVar6 + 0x28))();\n                    if (iVar4 != -1) goto code_r0x0049d15f;\ncode_r0x0049d1b0:\n                    iVar10 = extraout_ECX_02[1];\n                    if (in_stack_fffffe94 < 1) {\n                        if (iVar10 != 0) goto code_r0x0049d143;\n                        uVar8 = 6;\n                    }\n                    else {\n                        *in_stack_fffffe98 = 0;\n                        uVar8 = 2;\n                        if (iVar10 == 0) goto code_r0x0049d1cd;\n                    }\n                    goto code_r0x0049d225;\n                }\n                iVar4 = *piVar7;\n                piVar6[2] = piVar7 + 1;\n                if (iVar4 == -1) goto code_r0x0049d1b0;\ncode_r0x0049d15f:\n                piVar7 = piVar6[2];\n                if (piVar6[3] <= piVar7) goto code_r0x0049d111;\ncode_r0x0049d167:\n                iVar9 = extraout_ECX_02[1];\n                iVar4 = *piVar7;\n                iVar10 = iVar9 + 1;\n                piVar7 = in_stack_fffffe98;\n                if (in_stack_fffffe94 <= iVar10) break;\n            } while( true );\n        }\n        if (iVar4 == -1) {\n            if (0 < in_stack_fffffe94) {\n                *in_stack_fffffe98 = 0;\n            }\n            uVar8 = 6;\n            if (iVar9 != 0) {\ncode_r0x0049d143:\n                uVar8 = 2;\n            }\n            goto code_r0x0049d225;\n        }\n    }\n    if (0 < in_stack_fffffe94) {\n        *in_stack_fffffe98 = 0;\n    }\n    if (iVar9 != 0) {\n        return extraout_ECX_02;\n    }\n    uVar8 = 4;\ncode_r0x0049d225:\n    fcn.004bccc0(uVar8 | *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x14));\n    return extraout_ECX_02;\n}\n",
        "token_count": 3288
    },
    "0049f6b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0049f6b0(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int16_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0049fd60();\n    if (var_20h != '\\0') {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        piVar2 = piVar1[5];\n        if (piVar2 < piVar1[6]) {\n            *piVar2 = arg_8h;\n            piVar1[5] = piVar2 + 1;\n        }\n        else {\n            arg_8h._0_2_ = (**(*piVar1 + 0x34))(arg_8h);\n        }\n        if (arg_8h == -1) {\n            fcn.004bccc0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 1);\n        }\n    }\n    iVar4 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.004be790();\n        if ((cVar3 == '\\0') && (piVar1 = *(var_1ch + iVar4 + 0x78),  piVar1 != NULL)) {\n            iVar4 = (**(*piVar1 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.004bccc0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 447
    },
    "0049f880": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0049f880(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *(param_1 + *(*param_1 + -0xc) + 0x78);\n    if (piVar1 != NULL) {\n        iVar2 = (**(*piVar1 + 0x18))();\n        if (iVar2 == -1) {\n            fcn.004bccc0(*(param_1 + *(*param_1 + -0xc) + 0x14) | 1);\n            return param_1;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 150
    },
    "0049f930": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049f930(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    if ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x14))(piVar1, arg_8h, arg_ch, arg_10h, arg_14h, 0x10);\n        if ((var_34h & var_38h) == 0xffffffff) {\n            fcn.004bccc0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 311
    },
    "0049fa50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049fa50(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint var_ch;\n    \n    if ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x10))(piVar1, arg_8h, arg_ch, arg_10h, 0x10);\n        if ((var_24h & var_28h) == 0xffffffff) {\n            fcn.004bccc0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "0049fc30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0049fc30(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    fcn.0049fd60();\n    if (var_10h != '\\0') {\n        iVar3 = (**(**(in_ECX + *(*in_ECX + -0xc) + 0x78) + 0x30))(arg_8h, arg_ch);\n        if (arg_ch != iVar3) {\n            fcn.004bccc0();\n        }\n    }\n    iVar3 = *(*var_ch + -0xc);\n    if ((*(var_ch + iVar3 + 0xd) & 0x20) != 0) {\n        cVar2 = fcn.004be790();\n        if ((cVar2 == '\\0') && (piVar1 = *(var_ch + iVar3 + 0x78),  piVar1 != NULL)) {\n            iVar3 = (**(*piVar1 + 0x18))();\n            if (iVar3 == -1) {\n                fcn.004bccc0(*(var_ch + *(*var_ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 339
    },
    "0049fd60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0049fd60(uchar *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iStack24;\n    uint uStack20;\n    \n    *param_1 = 0;\n    iVar1 = *param_2;\n    *(param_1 + 4) = param_2;\n    uVar3 = *(iVar1 + -0xc) + param_2;\n    uVar5 = *(uVar3 + 0x14);\n    if (*(uVar3 + 0x70) != 0) {\n        if (uVar5 != 0) goto code_r0x0049fd88;\n        fcn.0049f880();\n        uVar3 = param_2 + *(*param_2 + -0xc);\n        uVar5 = *(uVar3 + 0x14);\n    }\n    if (uVar5 == 0) {\n        *param_1 = 1;\n        return uVar3;\n    }\ncode_r0x0049fd88:\n    uVar4 = uVar5 | 4;\n    if (*(uVar3 + 0x78) == 0) {\n        uVar4 = uVar5 | 5;\n    }\n    *(uVar3 + 0x14) = uVar4;\n    if ((*(uVar3 + 0x10) & uVar4) == 0) {\n        return uVar4;\n    }\n    fcn.004be7b0(\"basic_ios::clear\");\n    fcn.004af3a0(iStack24 + 0x6c);\n    fcn.004baa20(iStack24, uStack20);\n    fcn.004af4c0();\n    fcn.004bca50(uStack20);\n    piVar2 = *(iStack24 + 0x78);\n    if (piVar2 != NULL) {\n        fcn.004af3a0(piVar2 + 7);\n        (**(*piVar2 + 8))(uStack20);\n        fcn.004af510(uStack20);\n        fcn.004af4c0();\n    }\n    return extraout_ECX;\n}\n",
        "token_count": 525
    },
    "0049ff30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0049ff30(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar4;\n    ulong uVar5;\n    int32_t *piVar6;\n    uint var_2eh;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0049fd60();\n    if (var_20h == '\\0') goto code_r0x0049ffc9;\n    iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    piVar6 = *(iVar4 + 0x80);\n    if (piVar6 == NULL) {\n        fcn.004be620();\ncode_r0x004a0050:\n        uVar5 = fcn.004be620();\n        piVar6 = uVar5;\n        if (uVar5 >> 0x20 == 1) {\n            fcn.004c3600(piVar6);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c3a90();\n                fcn.004c3770();\n            }\n            else {\n                fcn.004c3a90();\n                fcn.004c3770();\n            }\n            fcn.0049fe20();\n            piVar6 = in_ECX;\n            fcn.0043b0b0(in_ECX);\n        }\n        fcn.004c3600(piVar6);\n        iVar4 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar4 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar4 + 0x10) & 1) != 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3770();\n    }\n    else {\n        if (*(iVar4 + 0x76) == '\\0') {\n            if (*(iVar4 + 0x7c) == NULL) goto code_r0x004a0050;\n            var_2eh._0_2_ = (**(**(iVar4 + 0x7c) + 0x28))(0x20);\n            iVar2 = *in_ECX;\n            *(iVar4 + 0x74) = var_2eh;\n            *(iVar4 + 0x76) = 1;\n            iVar4 = *(iVar2 + -0xc) + in_ECX;\n        }\n        else {\n            var_2eh._0_2_ = *(iVar4 + 0x74);\n        }\n        (**(*piVar6 + 0x24))(*(iVar4 + 0x78), *(iVar4 + 0x78) == 0, iVar4, var_2eh, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.004bccc0();\n        }\n    }\ncode_r0x0049ffc9:\n    iVar4 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.004be790();\n        if ((cVar3 == '\\0') && (piVar6 = *(var_1ch + iVar4 + 0x78),  piVar6 != NULL)) {\n            iVar4 = (**(*piVar6 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.004bccc0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 919
    },
    "004a00d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.004a00d0(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    ushort uVar4;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t *piVar7;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0049fd60();\n    if (var_20h == '\\0') goto code_r0x004a017a;\n    iVar5 = *(*in_ECX + -0xc) + in_ECX;\n    piVar7 = *(iVar5 + 0x80);\n    if (piVar7 == NULL) {\n        fcn.004be620();\ncode_r0x004a0200:\n        uVar6 = fcn.004be620();\n        piVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004c3600(piVar7);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c3a90();\n                fcn.004c3770();\n            }\n            else {\n                fcn.004c3a90();\n                fcn.004c3770();\n            }\n            fcn.0049fe20();\n            piVar7 = in_ECX;\n            fcn.0043b0b0(in_ECX);\n        }\n        fcn.004c3600(piVar7);\n        iVar5 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar5 + 0x10) & 1) != 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3770();\n    }\n    else {\n        if (*(iVar5 + 0x76) == '\\0') {\n            if (*(iVar5 + 0x7c) == NULL) goto code_r0x004a0200;\n            uVar4 = (**(**(iVar5 + 0x7c) + 0x28))(0x20);\n            iVar2 = *in_ECX;\n            *(iVar5 + 0x74) = uVar4;\n            *(iVar5 + 0x76) = 1;\n            iVar5 = *(iVar2 + -0xc) + in_ECX;\n        }\n        else {\n            uVar4 = *(iVar5 + 0x74);\n        }\n        (**(*piVar7 + 8))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, uVar4, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.004bccc0();\n        }\n    }\ncode_r0x004a017a:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.004be790();\n        if ((cVar3 == '\\0') && (piVar7 = *(var_1ch + iVar5 + 0x78),  piVar7 != NULL)) {\n            iVar5 = (**(*piVar7 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.004bccc0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 924
    },
    "004a0280": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.004a0280(int32_t *param_1, ulong param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    char cVar3;\n    ushort uVar4;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t iVar7;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0049fd60(param_1);\n    if (var_20h == '\\0') goto code_r0x004a031a;\n    iVar5 = *(*param_1 + -0xc) + param_1;\n    piVar2 = *(iVar5 + 0x80);\n    if (piVar2 == NULL) {\n        fcn.004be620();\ncode_r0x004a03a0:\n        uVar6 = fcn.004be620();\n        iVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004c3600(uVar6);\n            param_1 = param_1 + *(*param_1 + -0xc);\n            param_1[5] = param_1[5] | 1;\n            if ((*(param_1 + 4) & 1) == 0) {\n                iVar5 = fcn.004c3a90();\n                fcn.004c3770();\n            }\n            else {\n                fcn.004c3a90();\n                fcn.004c3770();\n            }\n            fcn.0049fe20();\n            fcn.0043b0b0(iVar5);\n            iVar7 = iVar5;\n        }\n        fcn.004c3600(iVar7);\n        iVar5 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar5 + 0x10) & 1) != 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3770();\n    }\n    else {\n        if (*(iVar5 + 0x76) == '\\0') {\n            if (*(iVar5 + 0x7c) == NULL) goto code_r0x004a03a0;\n            uVar4 = (**(**(iVar5 + 0x7c) + 0x28))(0x20);\n            iVar7 = *param_1;\n            *(iVar5 + 0x74) = uVar4;\n            *(iVar5 + 0x76) = 1;\n            iVar5 = *(iVar7 + -0xc) + param_1;\n        }\n        else {\n            uVar4 = *(iVar5 + 0x74);\n        }\n        (**(*piVar2 + 0x1c))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, uVar4, param_2);\n        if (extraout_DL != '\\0') {\n            fcn.004bccc0();\n        }\n    }\ncode_r0x004a031a:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.004be790();\n        if ((cVar3 == '\\0') && (piVar2 = *(var_1ch + iVar5 + 0x78),  piVar2 != NULL)) {\n            iVar5 = (**(*piVar2 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.004bccc0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 911
    },
    "004a0420": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.004a0420(int32_t *param_1, unkbyte10 param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    char cVar3;\n    ushort uVar4;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t iVar7;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0049fd60(param_1);\n    if (var_20h == '\\0') goto code_r0x004a04b4;\n    iVar5 = *(*param_1 + -0xc) + param_1;\n    piVar2 = *(iVar5 + 0x80);\n    if (piVar2 == NULL) {\n        fcn.004be620();\ncode_r0x004a0540:\n        uVar6 = fcn.004be620();\n        iVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004c3600(uVar6);\n            param_1 = param_1 + *(*param_1 + -0xc);\n            param_1[5] = param_1[5] | 1;\n            if ((*(param_1 + 4) & 1) == 0) {\n                iVar5 = fcn.004c3a90();\n                fcn.004c3770();\n            }\n            else {\n                fcn.004c3a90();\n                fcn.004c3770();\n            }\n            fcn.0049fe20();\n            fcn.0043b0b0(iVar5);\n            iVar7 = iVar5;\n        }\n        fcn.004c3600(iVar7);\n        iVar5 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar5 + 0x10) & 1) != 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3770();\n    }\n    else {\n        if (*(iVar5 + 0x76) == '\\0') {\n            if (*(iVar5 + 0x7c) == NULL) goto code_r0x004a0540;\n            uVar4 = (**(**(iVar5 + 0x7c) + 0x28))(0x20);\n            iVar7 = *param_1;\n            *(iVar5 + 0x74) = uVar4;\n            *(iVar5 + 0x76) = 1;\n            iVar5 = *(iVar7 + -0xc) + param_1;\n        }\n        else {\n            uVar4 = *(iVar5 + 0x74);\n        }\n        (**(*piVar2 + 0x20))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, uVar4, param_2);\n        if (extraout_DL != '\\0') {\n            fcn.004bccc0();\n        }\n    }\ncode_r0x004a04b4:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.004be790();\n        if ((cVar3 == '\\0') && (piVar2 = *(var_1ch + iVar5 + 0x78),  piVar2 != NULL)) {\n            iVar5 = (**(*piVar2 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.004bccc0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 912
    },
    "004a05c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.004a05c0(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar4;\n    ulong uVar5;\n    int32_t *piVar6;\n    uint var_2eh;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0049fd60();\n    if (var_20h == '\\0') goto code_r0x004a0659;\n    iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    piVar6 = *(iVar4 + 0x80);\n    if (piVar6 == NULL) {\n        fcn.004be620();\ncode_r0x004a06e0:\n        uVar5 = fcn.004be620();\n        piVar6 = uVar5;\n        if (uVar5 >> 0x20 == 1) {\n            fcn.004c3600(piVar6);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c3a90();\n                fcn.004c3770();\n            }\n            else {\n                fcn.004c3a90();\n                fcn.004c3770();\n            }\n            fcn.0049fe20();\n            piVar6 = in_ECX;\n            fcn.0043b0b0(in_ECX);\n        }\n        fcn.004c3600(piVar6);\n        iVar4 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar4 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar4 + 0x10) & 1) != 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3770();\n    }\n    else {\n        if (*(iVar4 + 0x76) == '\\0') {\n            if (*(iVar4 + 0x7c) == NULL) goto code_r0x004a06e0;\n            var_2eh._0_2_ = (**(**(iVar4 + 0x7c) + 0x28))(0x20);\n            iVar2 = *in_ECX;\n            *(iVar4 + 0x74) = var_2eh;\n            *(iVar4 + 0x76) = 1;\n            iVar4 = *(iVar2 + -0xc) + in_ECX;\n        }\n        else {\n            var_2eh._0_2_ = *(iVar4 + 0x74);\n        }\n        (**(*piVar6 + 0xc))(*(iVar4 + 0x78), *(iVar4 + 0x78) == 0, iVar4, var_2eh, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.004bccc0();\n        }\n    }\ncode_r0x004a0659:\n    iVar4 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.004be790();\n        if ((cVar3 == '\\0') && (piVar6 = *(var_1ch + iVar4 + 0x78),  piVar6 != NULL)) {\n            iVar4 = (**(*piVar6 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.004bccc0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 921
    },
    "004a0760": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.004a0760(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar4;\n    ulong uVar5;\n    int32_t *piVar6;\n    uint var_2eh;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0049fd60();\n    if (var_20h == '\\0') goto code_r0x004a07f9;\n    iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    piVar6 = *(iVar4 + 0x80);\n    if (piVar6 == NULL) {\n        fcn.004be620();\ncode_r0x004a0880:\n        uVar5 = fcn.004be620();\n        piVar6 = uVar5;\n        if (uVar5 >> 0x20 == 1) {\n            fcn.004c3600(piVar6);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c3a90();\n                fcn.004c3770();\n            }\n            else {\n                fcn.004c3a90();\n                fcn.004c3770();\n            }\n            fcn.0049fe20();\n            piVar6 = in_ECX;\n            fcn.0043b0b0(in_ECX);\n        }\n        fcn.004c3600(piVar6);\n        iVar4 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar4 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar4 + 0x10) & 1) != 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3770();\n    }\n    else {\n        if (*(iVar4 + 0x76) == '\\0') {\n            if (*(iVar4 + 0x7c) == NULL) goto code_r0x004a0880;\n            var_2eh._0_2_ = (**(**(iVar4 + 0x7c) + 0x28))(0x20);\n            iVar2 = *in_ECX;\n            *(iVar4 + 0x74) = var_2eh;\n            *(iVar4 + 0x76) = 1;\n            iVar4 = *(iVar2 + -0xc) + in_ECX;\n        }\n        else {\n            var_2eh._0_2_ = *(iVar4 + 0x74);\n        }\n        (**(*piVar6 + 0x10))(*(iVar4 + 0x78), *(iVar4 + 0x78) == 0, iVar4, var_2eh, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.004bccc0();\n        }\n    }\ncode_r0x004a07f9:\n    iVar4 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.004be790();\n        if ((cVar3 == '\\0') && (piVar6 = *(var_1ch + iVar4 + 0x78),  piVar6 != NULL)) {\n            iVar4 = (**(*piVar6 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.004bccc0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 921
    },
    "004a0900": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.004a0900(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar4;\n    ulong uVar5;\n    int32_t *piVar6;\n    ushort var_3ah;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0049fd60();\n    if (var_20h == '\\0') goto code_r0x004a09b6;\n    iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    piVar6 = *(iVar4 + 0x80);\n    if (piVar6 == NULL) {\n        fcn.004be620();\ncode_r0x004a0a40:\n        uVar5 = fcn.004be620();\n        piVar6 = uVar5;\n        if (uVar5 >> 0x20 == 1) {\n            fcn.004c3600(piVar6);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c3a90();\n                fcn.004c3770();\n            }\n            else {\n                fcn.004c3a90();\n                fcn.004c3770();\n            }\n            fcn.0049fe20();\n            piVar6 = in_ECX;\n            fcn.0043b0b0(in_ECX);\n        }\n        fcn.004c3600(piVar6);\n        iVar4 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar4 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar4 + 0x10) & 1) != 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3770();\n    }\n    else {\n        if (*(iVar4 + 0x76) == '\\0') {\n            if (*(iVar4 + 0x7c) == NULL) goto code_r0x004a0a40;\n            var_3ah = (**(**(iVar4 + 0x7c) + 0x28))(0x20);\n            iVar2 = *in_ECX;\n            *(iVar4 + 0x74) = var_3ah;\n            *(iVar4 + 0x76) = 1;\n            iVar4 = *(iVar2 + -0xc) + in_ECX;\n        }\n        else {\n            var_3ah = *(iVar4 + 0x74);\n        }\n        (**(*piVar6 + 0x14))(*(iVar4 + 0x78), *(iVar4 + 0x78) == 0, iVar4, var_3ah, arg_8h, arg_ch);\n        if (extraout_DL != '\\0') {\n            fcn.004bccc0();\n        }\n    }\ncode_r0x004a09b6:\n    iVar4 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.004be790();\n        if ((cVar3 == '\\0') && (piVar6 = *(var_1ch + iVar4 + 0x78),  piVar6 != NULL)) {\n            iVar4 = (**(*piVar6 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.004bccc0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 948
    },
    "004a0ac0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.004a0ac0(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar4;\n    ulong uVar5;\n    int32_t *piVar6;\n    ushort var_3ah;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0049fd60();\n    if (var_20h == '\\0') goto code_r0x004a0b76;\n    iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    piVar6 = *(iVar4 + 0x80);\n    if (piVar6 == NULL) {\n        fcn.004be620();\ncode_r0x004a0c00:\n        uVar5 = fcn.004be620();\n        piVar6 = uVar5;\n        if (uVar5 >> 0x20 == 1) {\n            fcn.004c3600(piVar6);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c3a90();\n                fcn.004c3770();\n            }\n            else {\n                fcn.004c3a90();\n                fcn.004c3770();\n            }\n            fcn.0049fe20();\n            piVar6 = in_ECX;\n            fcn.0043b0b0(in_ECX);\n        }\n        fcn.004c3600(piVar6);\n        iVar4 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar4 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar4 + 0x10) & 1) != 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3770();\n    }\n    else {\n        if (*(iVar4 + 0x76) == '\\0') {\n            if (*(iVar4 + 0x7c) == NULL) goto code_r0x004a0c00;\n            var_3ah = (**(**(iVar4 + 0x7c) + 0x28))(0x20);\n            iVar2 = *in_ECX;\n            *(iVar4 + 0x74) = var_3ah;\n            *(iVar4 + 0x76) = 1;\n            iVar4 = *(iVar2 + -0xc) + in_ECX;\n        }\n        else {\n            var_3ah = *(iVar4 + 0x74);\n        }\n        (**(*piVar6 + 0x18))(*(iVar4 + 0x78), *(iVar4 + 0x78) == 0, iVar4, var_3ah, arg_8h, arg_ch);\n        if (extraout_DL != '\\0') {\n            fcn.004bccc0();\n        }\n    }\ncode_r0x004a0b76:\n    iVar4 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.004be790();\n        if ((cVar3 == '\\0') && (piVar6 = *(var_1ch + iVar4 + 0x78),  piVar6 != NULL)) {\n            iVar4 = (**(*piVar6 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.004bccc0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 949
    },
    "004a0c80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a0c80(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_ch;\n    \n    fcn.004bb510();\n    *in_ECX = 0x52c1ec;\n    *(in_ECX + 0x1e) = 0;\n    iVar3 = *arg_8h;\n    in_ECX[0x1d] = 0;\n    iVar3 = arg_8h + *(iVar3 + -0xc);\n    *(in_ECX + 0x7a) = 0;\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    in_ECX[1] = 0x52c200;\n    fcn.004bab00(iVar3);\n    fcn.004bca50(in_ECX + 0x1c);\n    uVar2 = *(iVar3 + 0x70);\n    *(iVar3 + 0x70) = 0;\n    in_ECX[0x1d] = uVar2;\n    *(in_ECX + 0x1e) = *(iVar3 + 0x74);\n    uVar1 = *(iVar3 + 0x76);\n    in_ECX[0x1f] = 0;\n    *(in_ECX + 0x7a) = uVar1;\n    return;\n}\n",
        "token_count": 374
    },
    "004a0d50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a0d50(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.004bb510();\n    in_ECX[0x1d] = 0;\n    *(in_ECX + 0x1e) = 0;\n    *(in_ECX + 0x7a) = 0;\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    *in_ECX = 0x52c1ec;\n    in_ECX[1] = 0x52c200;\n    fcn.004bcb40(arg_8h);\n    return;\n}\n",
        "token_count": 199
    },
    "004a0e40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.004a0e40(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bb510();\n    param_1[0x1d] = 0;\n    *(param_1 + 0x1e) = 0;\n    *(param_1 + 0x7a) = 0;\n    param_1[0x1f] = 0;\n    param_1[0x20] = 0;\n    param_1[0x21] = 0;\n    param_1[0x22] = 0;\n    *param_1 = 0x52c1ec;\n    param_1[1] = 0x52c200;\n    fcn.004bcb40(0);\n    return;\n}\n",
        "token_count": 190
    },
    "004a1100": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004a1100(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    uchar var_11h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    fcn.0049fd60();\n    if (var_10h == '\\0') {\n        if (arg_8h != 0) goto code_r0x004a1158;\n        uVar3 = 1;\n        iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    }\n    else {\n        iVar4 = *(*in_ECX + -0xc) + in_ECX;\n        if (arg_8h == 0) {\n            uVar3 = 1;\n        }\n        else {\n            iVar4 = fcn.004bece0(arg_8h, *(iVar4 + 0x78), &var_11h);\n            if (iVar4 != 0) goto code_r0x004a1158;\n            uVar3 = 4;\n            iVar4 = *(*in_ECX + -0xc) + in_ECX;\n        }\n    }\n    fcn.004bccc0(uVar3 | *(iVar4 + 0x14));\ncode_r0x004a1158:\n    piVar1 = var_ch;\n    iVar4 = *(*var_ch + -0xc);\n    if ((*(var_ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar2 = fcn.004be790();\n        if ((cVar2 == '\\0') && (piVar1 = *(piVar1 + iVar4 + 0x78),  piVar1 != NULL)) {\n            iVar4 = (**(*piVar1 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.004bccc0(*(var_ch + *(*var_ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 501
    },
    "004a1560": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.004a1560(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    \n    *in_ECX = 0x52c210;\n    fcn.0048d530(arg_8h);\n    return;\n}\n",
        "token_count": 79
    },
    "004a1820": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a1820(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.004bb510();\n    *in_ECX = 0x528010;\n    *(in_ECX + 0x3a) = 0;\n    iVar3 = arg_8h[1];\n    in_ECX[0x39] = 0;\n    in_ECX[1] = iVar3;\n    iVar3 = *arg_8h;\n    in_ECX[0x3b] = 0;\n    iVar3 = *(iVar3 + -0xc);\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    iVar3 = iVar3 + arg_8h;\n    in_ECX[0x1d] = 0x528024;\n    in_ECX[0x3e] = 0;\n    fcn.004bab00(iVar3);\n    fcn.004bc220(in_ECX + 0x38);\n    uVar2 = *(iVar3 + 0x70);\n    *(iVar3 + 0x70) = 0;\n    in_ECX[0x39] = uVar2;\n    *(in_ECX + 0x3a) = *(iVar3 + 0x74);\n    uVar1 = *(iVar3 + 0x75);\n    in_ECX[0x3b] = 0;\n    *(in_ECX + 0xe9) = uVar1;\n    arg_8h[1] = 0;\n    *in_ECX = 0x52c228;\n    in_ECX[0x1d] = 0x52c23c;\n    fcn.004981e0(arg_8h + 2);\n    in_ECX[0x3b] = in_ECX + 2;\n    return;\n}\n",
        "token_count": 469
    },
    "004a1950": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a1950(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bb510();\n    *in_ECX = 0x528010;\n    in_ECX[0x39] = 0;\n    *(in_ECX + 0x3a) = 0;\n    in_ECX[0x3b] = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x1d] = 0x528024;\n    in_ECX[1] = 0;\n    fcn.004bc340(0);\n    *in_ECX = 0x52c228;\n    in_ECX[0x1d] = 0x52c23c;\n    fcn.00498320();\n    fcn.004bc340(in_ECX + 2);\n    iVar1 = fcn.00496d10(arg_8h, arg_ch | 8);\n    if (iVar1 != 0) {\n        fcn.004bc4a0(0);\n        return;\n    }\n    fcn.004bc4a0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 343
    },
    "004a1a90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a1a90(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bb510();\n    *in_ECX = 0x528010;\n    in_ECX[0x39] = 0;\n    *(in_ECX + 0x3a) = 0;\n    in_ECX[0x3b] = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x1d] = 0x528024;\n    in_ECX[1] = 0;\n    fcn.004bc340(0);\n    *in_ECX = 0x52c228;\n    in_ECX[0x1d] = 0x52c23c;\n    fcn.00498320();\n    fcn.004bc340(in_ECX + 2);\n    iVar1 = fcn.00496d10(*arg_8h, arg_ch | 8);\n    if (iVar1 != 0) {\n        fcn.004bc4a0(0);\n        return;\n    }\n    fcn.004bc4a0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 346
    },
    "004a1bd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.004a1bd0(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bb510();\n    *param_1 = 0x528010;\n    param_1[0x39] = 0;\n    *(param_1 + 0x3a) = 0;\n    param_1[0x3b] = 0;\n    param_1[0x3c] = 0;\n    param_1[0x3d] = 0;\n    param_1[0x3e] = 0;\n    param_1[0x1d] = 0x528024;\n    param_1[1] = 0;\n    fcn.004bc340(0);\n    *param_1 = 0x52c228;\n    param_1[0x1d] = 0x52c23c;\n    fcn.00498320();\n    fcn.004bc340(param_1 + 2);\n    return;\n}\n",
        "token_count": 240
    },
    "004a1cb0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a1cb0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar2 = arg_8h[1];\n    *in_ECX = iVar2;\n    *(in_ECX + *(iVar2 + -0xc)) = arg_8h[2];\n    in_ECX[1] = arg_ch[1];\n    iVar2 = *(iVar2 + -0xc);\n    iVar4 = *(*arg_ch + -0xc) + arg_ch;\n    fcn.004bab00(iVar4);\n    fcn.004bc220(in_ECX + iVar2 + 0x6c);\n    uVar3 = *(iVar4 + 0x70);\n    *(iVar4 + 0x70) = 0;\n    *(in_ECX + iVar2 + 0x70) = uVar3;\n    *(in_ECX + iVar2 + 0x74) = *(iVar4 + 0x74);\n    uVar1 = *(iVar4 + 0x75);\n    *(in_ECX + iVar2 + 0x78) = 0;\n    *(in_ECX + iVar2 + 0x75) = uVar1;\n    iVar2 = *arg_8h;\n    arg_ch[1] = 0;\n    *in_ECX = iVar2;\n    *(in_ECX + *(iVar2 + -0xc)) = arg_8h[3];\n    fcn.004981e0(arg_ch + 2);\n    *(in_ECX + *(*in_ECX + -0xc) + 0x78) = in_ECX + 2;\n    return;\n}\n",
        "token_count": 432
    },
    "004a1d90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a1d90(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.004bc340(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00498320();\n    fcn.004bc340(in_ECX + 2);\n    iVar1 = fcn.00496d10(arg_ch, arg_10h | 8);\n    if (iVar1 != 0) {\n        fcn.004bc4a0(0);\n        return;\n    }\n    fcn.004bc4a0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 282
    },
    "004a1e80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a1e80(int32_t *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.004bc340(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00498320();\n    fcn.004bc340(in_ECX + 2);\n    iVar1 = fcn.00496d10(*arg_ch, arg_10h | 8);\n    if (iVar1 != 0) {\n        fcn.004bc4a0(0);\n        return;\n    }\n    fcn.004bc4a0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 284
    },
    "004a1f70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a1f70(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.004bc340(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00498320();\n    fcn.004bc340(in_ECX + 2);\n    return;\n}\n",
        "token_count": 188
    },
    "004a23b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a23b0(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.004bb510();\n    *in_ECX = 0x528038;\n    *(in_ECX + 0x3b) = 0;\n    iVar3 = arg_8h[1];\n    in_ECX[0x3a] = 0;\n    in_ECX[1] = iVar3;\n    iVar3 = *arg_8h;\n    *(in_ECX + 0xee) = 0;\n    iVar3 = *(iVar3 + -0xc);\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    iVar3 = iVar3 + arg_8h;\n    in_ECX[0x1e] = 0x52804c;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x3f] = 0;\n    fcn.004bab00(iVar3);\n    fcn.004bca50(in_ECX + 0x39);\n    uVar2 = *(iVar3 + 0x70);\n    *(iVar3 + 0x70) = 0;\n    in_ECX[0x3a] = uVar2;\n    *(in_ECX + 0x3b) = *(iVar3 + 0x74);\n    uVar1 = *(iVar3 + 0x76);\n    in_ECX[0x3c] = 0;\n    *(in_ECX + 0xee) = uVar1;\n    arg_8h[1] = 0;\n    *in_ECX = 0x52c250;\n    in_ECX[0x1e] = 0x52c264;\n    fcn.0049a1b0(arg_8h + 2);\n    in_ECX[0x3c] = in_ECX + 2;\n    return;\n}\n",
        "token_count": 488
    },
    "004a24e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a24e0(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bb510();\n    *(in_ECX + 0xee) = 0;\n    in_ECX[0x3a] = 0;\n    *(in_ECX + 0x3b) = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x3f] = 0;\n    *in_ECX = 0x528038;\n    in_ECX[0x1e] = 0x52804c;\n    in_ECX[1] = 0;\n    fcn.004bcb40(0);\n    *in_ECX = 0x52c250;\n    in_ECX[0x1e] = 0x52c264;\n    fcn.0049a2f0();\n    fcn.004bcb40(in_ECX + 2);\n    iVar1 = fcn.00498cc0(arg_8h, arg_ch | 8);\n    if (iVar1 != 0) {\n        fcn.004bccc0(0);\n        return;\n    }\n    fcn.004bccc0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 362
    },
    "004a2620": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a2620(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bb510();\n    *(in_ECX + 0xee) = 0;\n    in_ECX[0x3a] = 0;\n    *(in_ECX + 0x3b) = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x3f] = 0;\n    *in_ECX = 0x528038;\n    in_ECX[0x1e] = 0x52804c;\n    in_ECX[1] = 0;\n    fcn.004bcb40(0);\n    *in_ECX = 0x52c250;\n    in_ECX[0x1e] = 0x52c264;\n    fcn.0049a2f0();\n    fcn.004bcb40(in_ECX + 2);\n    iVar1 = fcn.00498cc0(*arg_8h, arg_ch | 8);\n    if (iVar1 != 0) {\n        fcn.004bccc0(0);\n        return;\n    }\n    fcn.004bccc0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 363
    },
    "004a2760": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.004a2760(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bb510();\n    *(param_1 + 0xee) = 0;\n    param_1[0x3a] = 0;\n    *(param_1 + 0x3b) = 0;\n    param_1[0x3c] = 0;\n    param_1[0x3d] = 0;\n    param_1[0x3e] = 0;\n    param_1[0x3f] = 0;\n    *param_1 = 0x528038;\n    param_1[0x1e] = 0x52804c;\n    param_1[1] = 0;\n    fcn.004bcb40(0);\n    *param_1 = 0x52c250;\n    param_1[0x1e] = 0x52c264;\n    fcn.0049a2f0();\n    fcn.004bcb40(param_1 + 2);\n    return;\n}\n",
        "token_count": 259
    },
    "004a2850": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a2850(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uchar uVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = arg_8h[1];\n    *in_ECX = iVar3;\n    *(in_ECX + *(iVar3 + -0xc)) = arg_8h[2];\n    in_ECX[1] = arg_ch[1];\n    iVar3 = *(iVar3 + -0xc);\n    iVar5 = *(*arg_ch + -0xc) + arg_ch;\n    fcn.004bab00(iVar5);\n    fcn.004bca50(in_ECX + iVar3 + 0x6c);\n    uVar4 = *(iVar5 + 0x70);\n    *(iVar5 + 0x70) = 0;\n    *(in_ECX + iVar3 + 0x70) = uVar4;\n    uVar2 = *(iVar5 + 0x74);\n    uVar1 = *(iVar5 + 0x76);\n    *(in_ECX + iVar3 + 0x78) = 0;\n    *(in_ECX + iVar3 + 0x74) = uVar2;\n    *(in_ECX + iVar3 + 0x76) = uVar1;\n    iVar3 = *arg_8h;\n    arg_ch[1] = 0;\n    *in_ECX = iVar3;\n    *(in_ECX + *(iVar3 + -0xc)) = arg_8h[3];\n    fcn.0049a1b0(arg_ch + 2);\n    *(in_ECX + *(*in_ECX + -0xc) + 0x78) = in_ECX + 2;\n    return;\n}\n",
        "token_count": 449
    },
    "004a2930": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a2930(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.004bcb40(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.0049a2f0();\n    fcn.004bcb40(in_ECX + 2);\n    iVar1 = fcn.00498cc0(arg_ch, arg_10h | 8);\n    if (iVar1 != 0) {\n        fcn.004bccc0(0);\n        return;\n    }\n    fcn.004bccc0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 284
    },
    "004a2a20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a2a20(int32_t *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.004bcb40(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.0049a2f0();\n    fcn.004bcb40(in_ECX + 2);\n    iVar1 = fcn.00498cc0(*arg_ch, arg_10h | 8);\n    if (iVar1 != 0) {\n        fcn.004bccc0(0);\n        return;\n    }\n    fcn.004bccc0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 287
    },
    "004a2b10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a2b10(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.004bcb40(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.0049a2f0();\n    fcn.004bcb40(in_ECX + 2);\n    return;\n}\n",
        "token_count": 193
    },
    "004a2f10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a2f10(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.004bb510();\n    in_ECX[0x1f] = 0;\n    *(in_ECX + 0x20) = 0;\n    *(in_ECX + 0x82) = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    in_ECX[0x23] = 0;\n    in_ECX[0x24] = 0;\n    *in_ECX = 0x528060;\n    in_ECX[3] = 0x528074;\n    in_ECX[1] = 0;\n    fcn.004bcb40(arg_8h);\n    in_ECX[2] = 0x528088;\n    in_ECX[3] = 0x52809c;\n    fcn.004bcb40(arg_8h);\n    *in_ECX = 0x52c278;\n    in_ECX[3] = 0x52c2a0;\n    in_ECX[2] = 0x52c28c;\n    return;\n}\n",
        "token_count": 292
    },
    "004a2ff0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.004a2ff0(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bb510();\n    param_1[0x1f] = 0;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x82) = 0;\n    param_1[0x21] = 0;\n    param_1[0x22] = 0;\n    param_1[0x23] = 0;\n    param_1[0x24] = 0;\n    *param_1 = 0x528060;\n    param_1[3] = 0x528074;\n    param_1[1] = 0;\n    fcn.004bcb40(0);\n    param_1[2] = 0x528088;\n    param_1[3] = 0x52809c;\n    fcn.004bcb40(0);\n    *param_1 = 0x52c278;\n    param_1[3] = 0x52c2a0;\n    param_1[2] = 0x52c28c;\n    return;\n}\n",
        "token_count": 281
    },
    "004a3180": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a3180(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.004bcb40(arg_ch);\n    iVar1 = arg_8h[3];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[4];\n    fcn.004bcb40(arg_ch);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[5];\n    in_ECX[2] = arg_8h[6];\n    return;\n}\n",
        "token_count": 244
    },
    "004a3210": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.004a3210(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_8h;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.004bcb40(0);\n    iVar1 = arg_8h[3];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[4];\n    fcn.004bcb40(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[5];\n    in_ECX[2] = arg_8h[6];\n    return;\n}\n",
        "token_count": 244
    },
    "004a35b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a35b0(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    int32_t iVar2;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.004bb510();\n    *in_ECX = 0x5280b0;\n    *(in_ECX + 0x39) = 0;\n    iVar2 = *arg_8h;\n    in_ECX[0x38] = 0;\n    iVar2 = *(iVar2 + -0xc);\n    in_ECX[0x3a] = 0;\n    in_ECX[0x3b] = 0;\n    iVar2 = iVar2 + arg_8h;\n    in_ECX[0x1c] = 0x5280c4;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    fcn.004bab00(iVar2);\n    fcn.004bc220(in_ECX + 0x37);\n    uVar1 = *(iVar2 + 0x70);\n    *(iVar2 + 0x70) = 0;\n    in_ECX[0x38] = uVar1;\n    *(in_ECX + 0x39) = *(iVar2 + 0x74);\n    *(in_ECX + 0xe5) = *(iVar2 + 0x75);\n    in_ECX[0x3a] = 0;\n    *in_ECX = 0x52c2b4;\n    in_ECX[0x1c] = 0x52c2c8;\n    fcn.004981e0(arg_8h + 1);\n    in_ECX[0x3a] = in_ECX + 1;\n    return;\n}\n",
        "token_count": 426
    },
    "004a36c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a36c0(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bb510();\n    *in_ECX = 0x5280b0;\n    in_ECX[0x38] = 0;\n    *(in_ECX + 0x39) = 0;\n    in_ECX[0x3a] = 0;\n    in_ECX[0x3b] = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x1c] = 0x5280c4;\n    fcn.004bc340(0);\n    *in_ECX = 0x52c2b4;\n    in_ECX[0x1c] = 0x52c2c8;\n    fcn.00498320();\n    fcn.004bc340(in_ECX + 1);\n    iVar1 = fcn.00496d10(arg_8h, arg_ch | 0x10);\n    if (iVar1 != 0) {\n        fcn.004bc4a0(0);\n        return;\n    }\n    fcn.004bc4a0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 341
    },
    "004a37e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a37e0(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bb510();\n    *in_ECX = 0x5280b0;\n    in_ECX[0x38] = 0;\n    *(in_ECX + 0x39) = 0;\n    in_ECX[0x3a] = 0;\n    in_ECX[0x3b] = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x1c] = 0x5280c4;\n    fcn.004bc340(0);\n    *in_ECX = 0x52c2b4;\n    in_ECX[0x1c] = 0x52c2c8;\n    fcn.00498320();\n    fcn.004bc340(in_ECX + 1);\n    iVar1 = fcn.00496d10(*arg_8h, arg_ch | 0x10);\n    if (iVar1 != 0) {\n        fcn.004bc4a0(0);\n        return;\n    }\n    fcn.004bc4a0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 343
    },
    "004a3900": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.004a3900(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bb510();\n    *param_1 = 0x5280b0;\n    param_1[0x38] = 0;\n    *(param_1 + 0x39) = 0;\n    param_1[0x3a] = 0;\n    param_1[0x3b] = 0;\n    param_1[0x3c] = 0;\n    param_1[0x3d] = 0;\n    param_1[0x1c] = 0x5280c4;\n    fcn.004bc340(0);\n    *param_1 = 0x52c2b4;\n    param_1[0x1c] = 0x52c2c8;\n    fcn.00498320();\n    fcn.004bc340(param_1 + 1);\n    return;\n}\n",
        "token_count": 234
    },
    "004a39d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a39d0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar2 = arg_8h[1];\n    *in_ECX = iVar2;\n    piVar4 = *(iVar2 + -0xc) + in_ECX;\n    *piVar4 = arg_8h[2];\n    iVar3 = *(*arg_ch + -0xc) + arg_ch;\n    fcn.004bab00(iVar3);\n    fcn.004bc220(piVar4 + 0x1b);\n    iVar2 = *(iVar3 + 0x70);\n    *(iVar3 + 0x70) = 0;\n    piVar4[0x1c] = iVar2;\n    *(piVar4 + 0x1d) = *(iVar3 + 0x74);\n    uVar1 = *(iVar3 + 0x75);\n    piVar4[0x1e] = 0;\n    *(piVar4 + 0x75) = uVar1;\n    iVar2 = *arg_8h;\n    *in_ECX = iVar2;\n    *(in_ECX + *(iVar2 + -0xc)) = arg_8h[3];\n    fcn.004981e0(arg_ch + 1);\n    *(in_ECX + *(*in_ECX + -0xc) + 0x78) = in_ECX + 1;\n    return;\n}\n",
        "token_count": 384
    },
    "004a3aa0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a3aa0(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(*(iVar1 + -0xc) + in_ECX) = arg_8h[2];\n    fcn.004bc340(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00498320();\n    fcn.004bc340(in_ECX + 1);\n    iVar1 = fcn.00496d10(arg_ch, arg_10h | 0x10);\n    if (iVar1 != 0) {\n        fcn.004bc4a0(0);\n        return;\n    }\n    fcn.004bc4a0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 274
    },
    "004a3b80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a3b80(int32_t *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(*(iVar1 + -0xc) + in_ECX) = arg_8h[2];\n    fcn.004bc340(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00498320();\n    fcn.004bc340(in_ECX + 1);\n    iVar1 = fcn.00496d10(*arg_ch, arg_10h | 0x10);\n    if (iVar1 != 0) {\n        fcn.004bc4a0(0);\n        return;\n    }\n    fcn.004bc4a0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 276
    },
    "004a3c60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a3c60(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(*(iVar1 + -0xc) + in_ECX) = arg_8h[2];\n    fcn.004bc340(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00498320();\n    fcn.004bc340(in_ECX + 1);\n    return;\n}\n",
        "token_count": 178
    },
    "004a4060": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a4060(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    int32_t iVar2;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.004bb510();\n    *in_ECX = 0x5280d8;\n    *(in_ECX + 0x3a) = 0;\n    iVar2 = *arg_8h;\n    in_ECX[0x39] = 0;\n    iVar2 = *(iVar2 + -0xc);\n    *(in_ECX + 0xea) = 0;\n    in_ECX[0x3b] = 0;\n    iVar2 = iVar2 + arg_8h;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x1d] = 0x5280ec;\n    fcn.004bab00(iVar2);\n    fcn.004bca50(in_ECX + 0x38);\n    uVar1 = *(iVar2 + 0x70);\n    *(iVar2 + 0x70) = 0;\n    in_ECX[0x39] = uVar1;\n    *(in_ECX + 0x3a) = *(iVar2 + 0x74);\n    *(in_ECX + 0xea) = *(iVar2 + 0x76);\n    in_ECX[0x3b] = 0;\n    *in_ECX = 0x52c2dc;\n    in_ECX[0x1d] = 0x52c2f0;\n    fcn.0049a1b0(arg_8h + 1);\n    in_ECX[0x3b] = in_ECX + 1;\n    return;\n}\n",
        "token_count": 441
    },
    "004a4180": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a4180(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bb510();\n    *(in_ECX + 0xea) = 0;\n    in_ECX[0x39] = 0;\n    *(in_ECX + 0x3a) = 0;\n    in_ECX[0x3b] = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    *in_ECX = 0x5280d8;\n    in_ECX[0x1d] = 0x5280ec;\n    fcn.004bcb40(0);\n    *in_ECX = 0x52c2dc;\n    in_ECX[0x1d] = 0x52c2f0;\n    fcn.0049a2f0();\n    fcn.004bcb40(in_ECX + 1);\n    iVar1 = fcn.00498cc0(arg_8h, arg_ch | 0x10);\n    if (iVar1 != 0) {\n        fcn.004bccc0(0);\n        return;\n    }\n    fcn.004bccc0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 356
    },
    "004a42b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a42b0(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bb510();\n    *(in_ECX + 0xea) = 0;\n    in_ECX[0x39] = 0;\n    *(in_ECX + 0x3a) = 0;\n    in_ECX[0x3b] = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    *in_ECX = 0x5280d8;\n    in_ECX[0x1d] = 0x5280ec;\n    fcn.004bcb40(0);\n    *in_ECX = 0x52c2dc;\n    in_ECX[0x1d] = 0x52c2f0;\n    fcn.0049a2f0();\n    fcn.004bcb40(in_ECX + 1);\n    iVar1 = fcn.00498cc0(*arg_8h, arg_ch | 0x10);\n    if (iVar1 != 0) {\n        fcn.004bccc0(0);\n        return;\n    }\n    fcn.004bccc0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 359
    },
    "004a43e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.004a43e0(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bb510();\n    *(param_1 + 0xea) = 0;\n    param_1[0x39] = 0;\n    *(param_1 + 0x3a) = 0;\n    param_1[0x3b] = 0;\n    param_1[0x3c] = 0;\n    param_1[0x3d] = 0;\n    param_1[0x3e] = 0;\n    *param_1 = 0x5280d8;\n    param_1[0x1d] = 0x5280ec;\n    fcn.004bcb40(0);\n    *param_1 = 0x52c2dc;\n    param_1[0x1d] = 0x52c2f0;\n    fcn.0049a2f0();\n    fcn.004bcb40(param_1 + 1);\n    return;\n}\n",
        "token_count": 253
    },
    "004a44c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a44c0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uchar uVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = arg_8h[1];\n    *in_ECX = iVar3;\n    piVar5 = *(iVar3 + -0xc) + in_ECX;\n    *piVar5 = arg_8h[2];\n    iVar4 = *(*arg_ch + -0xc) + arg_ch;\n    fcn.004bab00(iVar4);\n    fcn.004bca50(piVar5 + 0x1b);\n    iVar3 = *(iVar4 + 0x70);\n    *(iVar4 + 0x70) = 0;\n    piVar5[0x1c] = iVar3;\n    uVar2 = *(iVar4 + 0x74);\n    uVar1 = *(iVar4 + 0x76);\n    piVar5[0x1e] = 0;\n    *(piVar5 + 0x1d) = uVar2;\n    *(piVar5 + 0x76) = uVar1;\n    iVar3 = *arg_8h;\n    *in_ECX = iVar3;\n    *(in_ECX + *(iVar3 + -0xc)) = arg_8h[3];\n    fcn.0049a1b0(arg_ch + 1);\n    *(in_ECX + *(*in_ECX + -0xc) + 0x78) = in_ECX + 1;\n    return;\n}\n",
        "token_count": 402
    },
    "004a4590": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a4590(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(*(iVar1 + -0xc) + in_ECX) = arg_8h[2];\n    fcn.004bcb40(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.0049a2f0();\n    fcn.004bcb40(in_ECX + 1);\n    iVar1 = fcn.00498cc0(arg_ch, arg_10h | 0x10);\n    if (iVar1 != 0) {\n        fcn.004bccc0(0);\n        return;\n    }\n    fcn.004bccc0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 276
    },
    "004a4670": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a4670(int32_t *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(*(iVar1 + -0xc) + in_ECX) = arg_8h[2];\n    fcn.004bcb40(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.0049a2f0();\n    fcn.004bcb40(in_ECX + 1);\n    iVar1 = fcn.00498cc0(*arg_ch, arg_10h | 0x10);\n    if (iVar1 != 0) {\n        fcn.004bccc0(0);\n        return;\n    }\n    fcn.004bccc0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 278
    },
    "004a4750": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a4750(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(*(iVar1 + -0xc) + in_ECX) = arg_8h[2];\n    fcn.004bcb40(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.0049a2f0();\n    fcn.004bcb40(in_ECX + 1);\n    return;\n}\n",
        "token_count": 182
    },
    "004a5930": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004a5930(uint *param_1, uint param_2)\n\n{\n    fcn.004a14c0(param_2);\n    *param_1 = 0x52c390;\n    return;\n}\n",
        "token_count": 54
    },
    "004a60c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a60c0(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint var_ch;\n    \n    fcn.004af3a0(arg_8h + 7);\n    if (*(*arg_8h + 8) != method.c_streambufIwSt11char_traitsIwEE.virtual_8) {\n        (**(*arg_8h + 8))(arg_ch);\n    }\n    fcn.004af510(arg_ch);\n    return;\n}\n",
        "token_count": 124
    },
    "004a6a60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a6a60(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint var_ch;\n    \n    fcn.004af3a0(arg_8h + 7);\n    if (*(*arg_8h + 8) != method.ages_bynameIcE.virtual_8) {\n        (**(*arg_8h + 8))(arg_ch);\n    }\n    fcn.004af510(arg_ch);\n    return;\n}\n",
        "token_count": 119
    },
    "004a7200": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a7200(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x52cc1c;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.004bb920();\n    *in_ECX = 0x52c45c;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x524348;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = 0x52434a;\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.004af180();\n            fcn.004bb920();\n            fcn.004af1f0(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 580
    },
    "004a73d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a73d0(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x52cc1c;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.004bb920();\n    *in_ECX = 0x52c45c;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x524348;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = 0x52434a;\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.004af180();\n            fcn.004bb920();\n            fcn.004af1f0(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 581
    },
    "004a75e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a75e0(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x52cc40;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.004bbc70();\n    *in_ECX = 0x52c480;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x52472c;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = \"POSIX\";\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.004af180();\n            fcn.004bbc70();\n            fcn.004af1f0(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 577
    },
    "004a77b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a77b0(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x52cc40;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.004bbc70();\n    *in_ECX = 0x52c480;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x52472c;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = \"POSIX\";\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.004af180();\n            fcn.004bbc70();\n            fcn.004af1f0(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 577
    },
    "004a7c60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004a7c60(uint *param_1, uint param_2)\n\n{\n    fcn.004a14c0(param_2);\n    *param_1 = 0x52c51c;\n    return;\n}\n",
        "token_count": 56
    },
    "004a7d20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a7d20(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar uVar3;\n    int32_t *piVar4;\n    char *pcVar5;\n    uint uVar6;\n    uint uVar7;\n    code *pcVar8;\n    int32_t in_ECX;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    piVar4 = fcn.004c0da0(arg_8h);\n    if (*(*piVar4 + 0x10) == 0x478560) {\n        fcn.0048d470(*(piVar4[2] + 8), &var_27h);\n    }\n    else {\n        (**(*piVar4 + 0x10))(piVar4);\n    }\n    uVar6 = *(var_24h + -0xc);\n    *(in_ECX + 0xc) = uVar6;\n    pcVar5 = fcn.004c3410(uVar6);\n    fcn.0044c7b0(pcVar5, *(in_ECX + 0xc), 0);\n    if (*(in_ECX + 0xc) == 0) {\n        *(in_ECX + 0x10) = 0;\n        pcVar8 = *(*piVar4 + 0x14);\n        if (pcVar8 == 0x478590) goto code_r0x004a7db9;\ncode_r0x004a8007:\n        (*pcVar8)(piVar4);\n    }\n    else {\n        *(in_ECX + 0x10) = *pcVar5 - 1U < 0x7e;\n        pcVar8 = *(*piVar4 + 0x14);\n        if (pcVar8 != 0x478590) goto code_r0x004a8007;\ncode_r0x004a7db9:\n        fcn.0048d470(*(piVar4[2] + 0x14), &var_26h);\n    }\n    uVar6 = *(var_20h + -0xc);\n    *(in_ECX + 0x18) = uVar6;\n    uVar6 = fcn.004c3410(uVar6);\n    fcn.0044c7b0(uVar6, *(in_ECX + 0x18), 0);\n    if (*(*piVar4 + 0x18) == 0x4785c0) {\n        fcn.0048d470(*(piVar4[2] + 0x1c), &var_25h);\n    }\n    else {\n        (**(*piVar4 + 0x18))(piVar4);\n    }\n    uVar7 = *(var_1ch + -0xc);\n    *(in_ECX + 0x20) = uVar7;\n    uVar7 = fcn.004c3410(uVar7);\n    fcn.0044c7b0(uVar7, *(in_ECX + 0x20), 0);\n    if (*(*piVar4 + 8) == 0x478630) {\n        uVar3 = *(piVar4[2] + 0x24);\n    }\n    else {\n        uVar3 = (**(*piVar4 + 8))();\n    }\n    *(in_ECX + 0x24) = uVar3;\n    if (*(*piVar4 + 0xc) == 0x478640) {\n        uVar3 = *(piVar4[2] + 0x25);\n    }\n    else {\n        uVar3 = (**(*piVar4 + 0xc))();\n    }\n    *(in_ECX + 0x25) = uVar3;\n    piVar4 = fcn.004c0920(arg_8h);\n    puVar2 = *0x516da4;\n    if (*(piVar4 + 7) == '\\x01') {\ncode_r0x004a7ed6:\n        *(in_ECX + 0x26) = *puVar2;\n        *(in_ECX + 0x2a) = puVar2[1];\n        *(in_ECX + 0x2e) = puVar2[2];\n        *(in_ECX + 0x32) = puVar2[3];\n        *(in_ECX + 0x36) = puVar2[4];\n        *(in_ECX + 0x3a) = puVar2[5];\n        *(in_ECX + 0x3e) = puVar2[6];\n        *(in_ECX + 0x42) = puVar2[7];\n        *(in_ECX + 0x46) = puVar2[8];\n    }\n    else {\n        if (*(piVar4 + 7) == '\\0') {\n            fcn.00451a70();\n            pcVar8 = *(*piVar4 + 0x1c);\n        }\n        else {\n            pcVar8 = *(*piVar4 + 0x1c);\n        }\n        if (pcVar8 == 0x451cf0) goto code_r0x004a7ed6;\n        (*pcVar8)(puVar2, puVar2 + 9, in_ECX + 0x26);\n    }\n    puVar2 = *0x516da0;\n    if (*(piVar4 + 7) != '\\x01') {\n        if (*(piVar4 + 7) == '\\0') {\n            fcn.00451a70();\n            pcVar8 = *(*piVar4 + 0x1c);\n        }\n        else {\n            pcVar8 = *(*piVar4 + 0x1c);\n        }\n        if (pcVar8 != 0x451cf0) {\n            (*pcVar8)(puVar2, puVar2 + 0x1a, in_ECX + 0x4a);\n            goto code_r0x004a7f65;\n        }\n    }\n    *(in_ECX + 0x4a) = *puVar2;\n    *(in_ECX + 0x4e) = puVar2[1];\n    *(in_ECX + 0x52) = puVar2[2];\n    *(in_ECX + 0x56) = puVar2[3];\n    *(in_ECX + 0x5a) = puVar2[4];\n    *(in_ECX + 0x5e) = puVar2[5];\n    *(in_ECX + 0x62) = *(puVar2 + 6);\ncode_r0x004a7f65:\n    iVar1 = *0x515a34;\n    *(in_ECX + 100) = 1;\n    *(in_ECX + 8) = pcVar5;\n    *(in_ECX + 0x14) = uVar6;\n    *(in_ECX + 0x1c) = uVar7;\n    if (iVar1 == 0) {\n        iVar1 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_1ch + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.0048bdd0(&var_25h);\n    }\n    if (*0x515a34 == 0) {\n        iVar1 = *(var_20h + -4);\n        *(var_20h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_20h + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.0048bdd0(&var_25h);\n    }\n    if (*0x515a34 == 0) {\n        iVar1 = *(var_24h + -4);\n        *(var_24h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_24h + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.0048bdd0(&var_25h);\n        return;\n    }\n    return;\n}\n",
        "token_count": 1963
    },
    "004a83f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a83f0(uint arg_8h)\n\n{\n    ushort uVar1;\n    int32_t *piVar2;\n    char *pcVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    code *pcVar6;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    int32_t iVar7;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    piVar2 = fcn.004c0e00(arg_8h);\n    if (*(*piVar2 + 0x10) == 0x478770) {\n        fcn.0048d470(*(piVar2[2] + 8), &var_27h);\n    }\n    else {\n        (**(*piVar2 + 0x10))(piVar2);\n    }\n    uVar4 = *(var_24h + -0xc);\n    *(in_ECX + 0xc) = uVar4;\n    pcVar3 = fcn.004c3410(uVar4);\n    fcn.0044c7b0(pcVar3, *(in_ECX + 0xc), 0);\n    if (*(in_ECX + 0xc) == 0) {\n        *(in_ECX + 0x10) = 0;\n        pcVar6 = *(*piVar2 + 0x14);\n        if (pcVar6 != 0x4787a0) goto code_r0x004a866f;\ncode_r0x004a8486:\n        fcn.004856e0(*(piVar2[2] + 0x14), &var_26h);\n        uVar5 = *(var_20h + -0xc);\n        *(in_ECX + 0x18) = uVar5;\n        if (0x3ffffffe < uVar5) goto code_r0x004a8693;\ncode_r0x004a84b8:\n        var_2ch = &var_20h;\n        uVar4 = fcn.004c3410(uVar5 * 2);\n        fcn.0044b8d0(uVar4, *(in_ECX + 0x18), 0);\n        if (*(*piVar2 + 0x18) == 0x4787d0) {\n            fcn.004856e0(*(piVar2[2] + 0x1c), &var_25h);\n            uVar5 = *(var_1ch + -0xc);\n            *(in_ECX + 0x20) = uVar5;\n            if (0x3ffffffe < uVar5) goto code_r0x004a8769;\ncode_r0x004a8526:\n            var_2ch = fcn.004c3410(uVar5 * 2);\n            fcn.0044b8d0(var_2ch, *(in_ECX + 0x20), 0);\n            iVar7 = *piVar2;\n            if (*(iVar7 + 8) == 0x478840) {\n                uVar1 = *(piVar2[2] + 0x24);\n            }\n            else {\n                uVar1 = (**(iVar7 + 8))();\n                iVar7 = *piVar2;\n            }\n            *(in_ECX + 0x24) = uVar1;\n            pcVar6 = *(iVar7 + 0xc);\n            if (pcVar6 != 0x478850) goto code_r0x004a8770;\n            uVar1 = *(piVar2[2] + 0x26);\n        }\n        else {\n            (**(*piVar2 + 0x18))(piVar2);\n            uVar5 = *(var_1ch + -0xc);\n            *(in_ECX + 0x20) = uVar5;\n            if (uVar5 < 0x3fffffff) goto code_r0x004a8526;\ncode_r0x004a8769:\n            pcVar6 = fcn.004c3b60();\ncode_r0x004a8770:\n            uVar1 = (*pcVar6)();\n        }\n        *(in_ECX + 0x26) = uVar1;\n        piVar2 = fcn.004c0980(arg_8h);\n        (**(*piVar2 + 0x2c))(*0x516da4, *0x516da4 + 0x24, in_ECX + 0x28);\n        (**(*piVar2 + 0x2c))(*0x516da0, *0x516da0 + 0x1a, in_ECX + 0x70);\n        *(in_ECX + 8) = pcVar3;\n        iVar7 = *0x515a34;\n        *(in_ECX + 0xa4) = 1;\n        *(in_ECX + 0x14) = uVar4;\n        *(in_ECX + 0x1c) = var_2ch;\n        if (iVar7 == 0) {\n            iVar7 = *(var_1ch + -4);\n            *(var_1ch + -4) = iVar7 + -1;\n        }\n        else {\n            LOCK();\n            piVar2 = var_1ch + -4;\n            iVar7 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n        }\n        if (iVar7 < 1) {\n            fcn.00483f10();\n        }\n        if (*0x515a34 == 0) {\n            iVar7 = *(var_20h + -4);\n            *(var_20h + -4) = iVar7 + -1;\n        }\n        else {\n            LOCK();\n            piVar2 = var_20h + -4;\n            iVar7 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n        }\n        if (iVar7 < 1) {\n            fcn.00483f10(&var_25h);\n        }\n        if (*0x515a34 == 0) {\n            iVar7 = *(var_24h + -4);\n            *(var_24h + -4) = iVar7 + -1;\n            goto joined_r0x004a8645;\n        }\n    }\n    else {\n        *(in_ECX + 0x10) = *pcVar3 - 1U < 0x7e;\n        pcVar6 = *(*piVar2 + 0x14);\n        if (pcVar6 == 0x4787a0) goto code_r0x004a8486;\ncode_r0x004a866f:\n        (*pcVar6)(piVar2);\n        uVar5 = *(var_20h + -0xc);\n        *(in_ECX + 0x18) = uVar5;\n        if (uVar5 < 0x3fffffff) goto code_r0x004a84b8;\ncode_r0x004a8693:\n        fcn.004c3b60();\n        var_24h = extraout_ECX;\n    }\n    LOCK();\n    piVar2 = var_24h + -4;\n    iVar7 = *piVar2;\n    *piVar2 = *piVar2 + -1;\njoined_r0x004a8645:\n    if (0 < iVar7) {\n        return;\n    }\n    fcn.0048bdd0(&var_25h);\n    return;\n}\n",
        "token_count": 1715
    },
    "004a8a30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004a8a30(uint *param_1, uint param_2)\n\n{\n    fcn.0048fdb0(param_2);\n    *param_1 = 0x52c550;\n    return;\n}\n",
        "token_count": 54
    },
    "004aa1f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004aa1f0(uint arg_8h)\n\n{\n    bool bVar1;\n    uchar uVar2;\n    int32_t *piVar3;\n    char *pcVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t in_ECX;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    piVar3 = fcn.004c06e0(arg_8h);\n    if (*(*piVar3 + 8) == 0x44d200) {\n        uVar2 = *(piVar3[2] + 0x11);\n    }\n    else {\n        uVar2 = (**(*piVar3 + 8))();\n    }\n    *(in_ECX + 0x11) = uVar2;\n    if (*(*piVar3 + 0xc) == 0x44d270) {\n        uVar2 = *(piVar3[2] + 0x12);\n    }\n    else {\n        uVar2 = (**(*piVar3 + 0xc))();\n    }\n    *(in_ECX + 0x12) = uVar2;\n    if (*(*piVar3 + 0x20) == 0x44d1f0) {\n        uVar5 = *(piVar3[2] + 0x2c);\n    }\n    else {\n        uVar5 = (**(*piVar3 + 0x20))();\n    }\n    *(in_ECX + 0x2c) = uVar5;\n    if (*(*piVar3 + 0x10) == 0x44d050) {\n        fcn.0048d470(*(piVar3[2] + 8), &var_2ch);\n    }\n    else {\n        (**(*piVar3 + 0x10))(piVar3);\n    }\n    uVar5 = *(var_28h + -0xc);\n    *(in_ECX + 0xc) = uVar5;\n    pcVar4 = fcn.004c3410(uVar5);\n    fcn.0044c7b0(pcVar4, *(in_ECX + 0xc), 0);\n    bVar1 = false;\n    if (*(in_ECX + 0xc) != 0) {\n        bVar1 = *pcVar4 - 1U < 0x7e;\n    }\n    *(in_ECX + 0x10) = bVar1;\n    if (*(*piVar3 + 0x14) == 0x44d1c0) {\n        fcn.0048d470(*(piVar3[2] + 0x14), &var_2bh);\n    }\n    else {\n        (**(*piVar3 + 0x14))(piVar3);\n    }\n    uVar5 = *(var_24h + -0xc);\n    *(in_ECX + 0x18) = uVar5;\n    uVar5 = fcn.004c3410(uVar5);\n    fcn.0044c7b0(uVar5, *(in_ECX + 0x18), 0);\n    if (*(*piVar3 + 0x18) == 0x44d240) {\n        fcn.0048d470(*(piVar3[2] + 0x1c), &var_2ah);\n    }\n    else {\n        (**(*piVar3 + 0x18))(piVar3);\n    }\n    uVar6 = *(var_20h + -0xc);\n    *(in_ECX + 0x20) = uVar6;\n    uVar6 = fcn.004c3410(uVar6);\n    fcn.0044c7b0(uVar6, *(in_ECX + 0x20), 0);\n    if (*(*piVar3 + 0x1c) == 0x44d210) {\n        fcn.0048d470(*(piVar3[2] + 0x24), &var_29h);\n    }\n    else {\n        (**(*piVar3 + 0x1c))(piVar3);\n    }\n    uVar7 = *(var_1ch + -0xc);\n    *(in_ECX + 0x28) = uVar7;\n    uVar7 = fcn.004c3410(uVar7);\n    fcn.0044c7b0(uVar7, *(in_ECX + 0x28), 0);\n    if (*(*piVar3 + 0x24) == 0x44d0d0) {\n        uVar8 = *(piVar3[2] + 0x30);\n    }\n    else {\n        uVar8 = (**(*piVar3 + 0x24))();\n    }\n    *(in_ECX + 0x30) = uVar8;\n    if (*(*piVar3 + 0x28) == 0x44d0c0) {\n        uVar8 = *(piVar3[2] + 0x34);\n    }\n    else {\n        uVar8 = (**(*piVar3 + 0x28))();\n    }\n    *(in_ECX + 0x34) = uVar8;\n    fcn.004c0920(arg_8h);\n    fcn.00451c20(*0x516da8, *0x516da8 + 0xb, in_ECX + 0x38);\n    *(in_ECX + 0x43) = 1;\n    *(in_ECX + 8) = pcVar4;\n    *(in_ECX + 0x14) = uVar5;\n    *(in_ECX + 0x1c) = uVar6;\n    *(in_ECX + 0x24) = uVar7;\n    fcn.0048bdf0(&var_29h);\n    fcn.0048bdf0(&var_29h);\n    fcn.0048bdf0(&var_29h);\n    fcn.0048bdf0(&var_29h);\n    return;\n}\n",
        "token_count": 1454
    },
    "004aa8d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004aa8d0(uint arg_8h)\n\n{\n    bool bVar1;\n    uchar uVar2;\n    int32_t *piVar3;\n    char *pcVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t in_ECX;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    piVar3 = fcn.004c0740(arg_8h);\n    if (*(*piVar3 + 8) == 0x44d530) {\n        uVar2 = *(piVar3[2] + 0x11);\n    }\n    else {\n        uVar2 = (**(*piVar3 + 8))();\n    }\n    *(in_ECX + 0x11) = uVar2;\n    if (*(*piVar3 + 0xc) == 0x44d5a0) {\n        uVar2 = *(piVar3[2] + 0x12);\n    }\n    else {\n        uVar2 = (**(*piVar3 + 0xc))();\n    }\n    *(in_ECX + 0x12) = uVar2;\n    if (*(*piVar3 + 0x20) == 0x44d520) {\n        uVar5 = *(piVar3[2] + 0x2c);\n    }\n    else {\n        uVar5 = (**(*piVar3 + 0x20))();\n    }\n    *(in_ECX + 0x2c) = uVar5;\n    if (*(*piVar3 + 0x10) == 0x44d380) {\n        fcn.0048d470(*(piVar3[2] + 8), &var_2ch);\n    }\n    else {\n        (**(*piVar3 + 0x10))(piVar3);\n    }\n    uVar5 = *(var_28h + -0xc);\n    *(in_ECX + 0xc) = uVar5;\n    pcVar4 = fcn.004c3410(uVar5);\n    fcn.0044c7b0(pcVar4, *(in_ECX + 0xc), 0);\n    bVar1 = false;\n    if (*(in_ECX + 0xc) != 0) {\n        bVar1 = *pcVar4 - 1U < 0x7e;\n    }\n    *(in_ECX + 0x10) = bVar1;\n    if (*(*piVar3 + 0x14) == 0x44d4f0) {\n        fcn.0048d470(*(piVar3[2] + 0x14), &var_2bh);\n    }\n    else {\n        (**(*piVar3 + 0x14))(piVar3);\n    }\n    uVar5 = *(var_24h + -0xc);\n    *(in_ECX + 0x18) = uVar5;\n    uVar5 = fcn.004c3410(uVar5);\n    fcn.0044c7b0(uVar5, *(in_ECX + 0x18), 0);\n    if (*(*piVar3 + 0x18) == 0x44d570) {\n        fcn.0048d470(*(piVar3[2] + 0x1c), &var_2ah);\n    }\n    else {\n        (**(*piVar3 + 0x18))(piVar3);\n    }\n    uVar6 = *(var_20h + -0xc);\n    *(in_ECX + 0x20) = uVar6;\n    uVar6 = fcn.004c3410(uVar6);\n    fcn.0044c7b0(uVar6, *(in_ECX + 0x20), 0);\n    if (*(*piVar3 + 0x1c) == 0x44d540) {\n        fcn.0048d470(*(piVar3[2] + 0x24), &var_29h);\n    }\n    else {\n        (**(*piVar3 + 0x1c))(piVar3);\n    }\n    uVar7 = *(var_1ch + -0xc);\n    *(in_ECX + 0x28) = uVar7;\n    uVar7 = fcn.004c3410(uVar7);\n    fcn.0044c7b0(uVar7, *(in_ECX + 0x28), 0);\n    if (*(*piVar3 + 0x24) == 0x44d400) {\n        uVar8 = *(piVar3[2] + 0x30);\n    }\n    else {\n        uVar8 = (**(*piVar3 + 0x24))();\n    }\n    *(in_ECX + 0x30) = uVar8;\n    if (*(*piVar3 + 0x28) == 0x44d3f0) {\n        uVar8 = *(piVar3[2] + 0x34);\n    }\n    else {\n        uVar8 = (**(*piVar3 + 0x28))();\n    }\n    *(in_ECX + 0x34) = uVar8;\n    fcn.004c0920(arg_8h);\n    fcn.00451c20(*0x516da8, *0x516da8 + 0xb, in_ECX + 0x38);\n    *(in_ECX + 0x43) = 1;\n    *(in_ECX + 8) = pcVar4;\n    *(in_ECX + 0x14) = uVar5;\n    *(in_ECX + 0x1c) = uVar6;\n    *(in_ECX + 0x24) = uVar7;\n    fcn.0048bdf0(&var_29h);\n    fcn.0048bdf0(&var_29h);\n    fcn.0048bdf0(&var_29h);\n    fcn.0048bdf0(&var_29h);\n    return;\n}\n",
        "token_count": 1451
    },
    "004aafb0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004aafb0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    ushort uVar3;\n    int32_t *piVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    code *pcVar8;\n    int32_t in_ECX;\n    uint *puVar9;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uchar var_2ch;\n    uchar var_2bh [2];\n    uchar var_29h;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    piVar4 = fcn.004c07a0(arg_8h);\n    if (*(*piVar4 + 8) == 0x44d860) {\n        *(in_ECX + 0x12) = *(piVar4[2] + 0x12);\n        pcVar8 = *(*piVar4 + 0xc);\n        if (pcVar8 != 0x44d8d0) goto code_r0x004ab368;\ncode_r0x004aaff3:\n        *(in_ECX + 0x14) = *(piVar4[2] + 0x14);\n        pcVar8 = *(*piVar4 + 0x20);\n        if (pcVar8 != 0x44d850) goto code_r0x004ab380;\ncode_r0x004ab00e:\n        uVar7 = *(piVar4[2] + 0x30);\n    }\n    else {\n        uVar3 = (**(*piVar4 + 8))();\n        *(in_ECX + 0x12) = uVar3;\n        pcVar8 = *(*piVar4 + 0xc);\n        if (pcVar8 == 0x44d8d0) goto code_r0x004aaff3;\ncode_r0x004ab368:\n        uVar3 = (*pcVar8)();\n        *(in_ECX + 0x14) = uVar3;\n        pcVar8 = *(*piVar4 + 0x20);\n        if (pcVar8 == 0x44d850) goto code_r0x004ab00e;\ncode_r0x004ab380:\n        uVar7 = (*pcVar8)();\n    }\n    *(in_ECX + 0x30) = uVar7;\n    if (*(*piVar4 + 0x10) == 0x44d6b0) {\n        fcn.0048d470(*(piVar4[2] + 8), &var_2ch);\n    }\n    else {\n        (**(*piVar4 + 0x10))(piVar4);\n    }\n    uVar7 = *(var_28h + -0xc);\n    *(in_ECX + 0xc) = uVar7;\n    puVar5 = fcn.004c3410(uVar7);\n    fcn.0044c7b0(puVar5, *(in_ECX + 0xc), 0);\n    bVar2 = false;\n    if (*(in_ECX + 0xc) != 0) {\n        var_40h = var_40h & 0xffffff00 | *puVar5;\n        bVar2 = *puVar5 - 1 < 0x7e;\n    }\n    *(in_ECX + 0x10) = bVar2;\n    if (*(*piVar4 + 0x14) == 0x44d820) {\n        fcn.004856e0(*(piVar4[2] + 0x18), var_2bh);\n        uVar6 = *(var_24h + -0xc);\n        *(in_ECX + 0x1c) = uVar6;\n        if (0x3ffffffe < uVar6) goto code_r0x004ab3be;\ncode_r0x004ab0c7:\n        var_48h = fcn.004c3410(uVar6 * 2);\n        fcn.0044b8d0(var_48h, *(in_ECX + 0x1c), 0);\n        pcVar8 = *(*piVar4 + 0x18);\n        if (pcVar8 != 0x44d8a0) goto code_r0x004ab3c3;\n        fcn.004856e0();\n        uVar6 = *(var_20h + -0xc);\n        *(in_ECX + 0x24) = uVar6;\n        if (uVar6 < 0x3fffffff) goto code_r0x004ab133;\ncode_r0x004ab3e4:\n        puVar9 = &var_20h;\n        pcVar8 = fcn.004c3b60();\n    }\n    else {\n        (**(*piVar4 + 0x14))(piVar4);\n        uVar6 = *(var_24h + -0xc);\n        *(in_ECX + 0x1c) = uVar6;\n        if (uVar6 < 0x3fffffff) goto code_r0x004ab0c7;\ncode_r0x004ab3be:\n        pcVar8 = fcn.004c3b60();\ncode_r0x004ab3c3:\n        (*pcVar8)(piVar4);\n        uVar6 = *(var_20h + -0xc);\n        *(in_ECX + 0x24) = uVar6;\n        if (0x3ffffffe < uVar6) goto code_r0x004ab3e4;\ncode_r0x004ab133:\n        var_44h = fcn.004c3410(uVar6 * 2);\n        fcn.0044b8d0(var_44h, *(in_ECX + 0x24), 0);\n        if (*(*piVar4 + 0x1c) == 0x44d870) {\n            fcn.004856e0(*(piVar4[2] + 0x28), &var_29h);\n            uVar6 = *(var_1ch + -0xc);\n            *(in_ECX + 0x2c) = uVar6;\n            if (0x3ffffffe < uVar6) goto code_r0x004ab427;\ncode_r0x004ab1a0:\n            var_40h = fcn.004c3410(uVar6 * 2);\n            fcn.0044b8d0(var_40h, *(in_ECX + 0x2c), 0);\n            pcVar8 = *(*piVar4 + 0x24);\n            if (pcVar8 != 0x44d730) goto code_r0x004ab430;\n            uVar7 = *(piVar4[2] + 0x34);\n        }\n        else {\n            (**(*piVar4 + 0x1c))(piVar4);\n            uVar6 = *(var_1ch + -0xc);\n            *(in_ECX + 0x2c) = uVar6;\n            if (uVar6 < 0x3fffffff) goto code_r0x004ab1a0;\ncode_r0x004ab427:\n            pcVar8 = fcn.004c3b60();\ncode_r0x004ab430:\n            uVar7 = (*pcVar8)();\n        }\n        puVar9 = &var_29h;\n        *(in_ECX + 0x34) = uVar7;\n        pcVar8 = *(*piVar4 + 0x28);\n        if (pcVar8 == 0x44d720) {\n            uVar7 = *(piVar4[2] + 0x38);\n            goto code_r0x004ab1fb;\n        }\n    }\n    uVar7 = (*pcVar8)();\ncode_r0x004ab1fb:\n    *(in_ECX + 0x38) = uVar7;\n    piVar4 = fcn.004c0980(arg_8h);\n    (**(*piVar4 + 0x2c))(*0x516da8, *0x516da8 + 0xb, in_ECX + 0x3c);\n    *(in_ECX + 0x52) = 1;\n    *(in_ECX + 8) = puVar5;\n    *(in_ECX + 0x18) = var_48h;\n    *(in_ECX + 0x20) = var_44h;\n    *(in_ECX + 0x28) = var_40h;\n    if (*0x515a34 == 0) {\n        iVar1 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_1ch + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.00483f10(puVar9);\n    }\n    if (*0x515a34 == 0) {\n        iVar1 = *(var_20h + -4);\n        *(var_20h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_20h + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.00483f10(puVar9);\n    }\n    if (*0x515a34 == 0) {\n        iVar1 = *(var_24h + -4);\n        *(var_24h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_24h + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.00483f10(puVar9);\n    }\n    fcn.0048bdf0(puVar9);\n    return;\n}\n",
        "token_count": 2313
    },
    "004ab7d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004ab7d0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    ushort uVar3;\n    int32_t *piVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    code *pcVar8;\n    int32_t in_ECX;\n    uint *puVar9;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uchar var_2ch;\n    uchar var_2bh [2];\n    uchar var_29h;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    piVar4 = fcn.004c0800(arg_8h);\n    if (*(*piVar4 + 8) == 0x44db90) {\n        *(in_ECX + 0x12) = *(piVar4[2] + 0x12);\n        pcVar8 = *(*piVar4 + 0xc);\n        if (pcVar8 != 0x44dc00) goto code_r0x004abb88;\ncode_r0x004ab813:\n        *(in_ECX + 0x14) = *(piVar4[2] + 0x14);\n        pcVar8 = *(*piVar4 + 0x20);\n        if (pcVar8 != 0x44db80) goto code_r0x004abba0;\ncode_r0x004ab82e:\n        uVar7 = *(piVar4[2] + 0x30);\n    }\n    else {\n        uVar3 = (**(*piVar4 + 8))();\n        *(in_ECX + 0x12) = uVar3;\n        pcVar8 = *(*piVar4 + 0xc);\n        if (pcVar8 == 0x44dc00) goto code_r0x004ab813;\ncode_r0x004abb88:\n        uVar3 = (*pcVar8)();\n        *(in_ECX + 0x14) = uVar3;\n        pcVar8 = *(*piVar4 + 0x20);\n        if (pcVar8 == 0x44db80) goto code_r0x004ab82e;\ncode_r0x004abba0:\n        uVar7 = (*pcVar8)();\n    }\n    *(in_ECX + 0x30) = uVar7;\n    if (*(*piVar4 + 0x10) == 0x44d9e0) {\n        fcn.0048d470(*(piVar4[2] + 8), &var_2ch);\n    }\n    else {\n        (**(*piVar4 + 0x10))(piVar4);\n    }\n    uVar7 = *(var_28h + -0xc);\n    *(in_ECX + 0xc) = uVar7;\n    puVar5 = fcn.004c3410(uVar7);\n    fcn.0044c7b0(puVar5, *(in_ECX + 0xc), 0);\n    bVar2 = false;\n    if (*(in_ECX + 0xc) != 0) {\n        var_40h = var_40h & 0xffffff00 | *puVar5;\n        bVar2 = *puVar5 - 1 < 0x7e;\n    }\n    *(in_ECX + 0x10) = bVar2;\n    if (*(*piVar4 + 0x14) == 0x44db50) {\n        fcn.004856e0(*(piVar4[2] + 0x18), var_2bh);\n        uVar6 = *(var_24h + -0xc);\n        *(in_ECX + 0x1c) = uVar6;\n        if (0x3ffffffe < uVar6) goto code_r0x004abbde;\ncode_r0x004ab8e7:\n        var_48h = fcn.004c3410(uVar6 * 2);\n        fcn.0044b8d0(var_48h, *(in_ECX + 0x1c), 0);\n        pcVar8 = *(*piVar4 + 0x18);\n        if (pcVar8 != 0x44dbd0) goto code_r0x004abbe3;\n        fcn.004856e0();\n        uVar6 = *(var_20h + -0xc);\n        *(in_ECX + 0x24) = uVar6;\n        if (uVar6 < 0x3fffffff) goto code_r0x004ab953;\ncode_r0x004abc04:\n        puVar9 = &var_20h;\n        pcVar8 = fcn.004c3b60();\n    }\n    else {\n        (**(*piVar4 + 0x14))(piVar4);\n        uVar6 = *(var_24h + -0xc);\n        *(in_ECX + 0x1c) = uVar6;\n        if (uVar6 < 0x3fffffff) goto code_r0x004ab8e7;\ncode_r0x004abbde:\n        pcVar8 = fcn.004c3b60();\ncode_r0x004abbe3:\n        (*pcVar8)(piVar4);\n        uVar6 = *(var_20h + -0xc);\n        *(in_ECX + 0x24) = uVar6;\n        if (0x3ffffffe < uVar6) goto code_r0x004abc04;\ncode_r0x004ab953:\n        var_44h = fcn.004c3410(uVar6 * 2);\n        fcn.0044b8d0(var_44h, *(in_ECX + 0x24), 0);\n        if (*(*piVar4 + 0x1c) == 0x44dba0) {\n            fcn.004856e0(*(piVar4[2] + 0x28), &var_29h);\n            uVar6 = *(var_1ch + -0xc);\n            *(in_ECX + 0x2c) = uVar6;\n            if (0x3ffffffe < uVar6) goto code_r0x004abc47;\ncode_r0x004ab9c0:\n            var_40h = fcn.004c3410(uVar6 * 2);\n            fcn.0044b8d0(var_40h, *(in_ECX + 0x2c), 0);\n            pcVar8 = *(*piVar4 + 0x24);\n            if (pcVar8 != 0x44da60) goto code_r0x004abc50;\n            uVar7 = *(piVar4[2] + 0x34);\n        }\n        else {\n            (**(*piVar4 + 0x1c))(piVar4);\n            uVar6 = *(var_1ch + -0xc);\n            *(in_ECX + 0x2c) = uVar6;\n            if (uVar6 < 0x3fffffff) goto code_r0x004ab9c0;\ncode_r0x004abc47:\n            pcVar8 = fcn.004c3b60();\ncode_r0x004abc50:\n            uVar7 = (*pcVar8)();\n        }\n        puVar9 = &var_29h;\n        *(in_ECX + 0x34) = uVar7;\n        pcVar8 = *(*piVar4 + 0x28);\n        if (pcVar8 == 0x44da50) {\n            uVar7 = *(piVar4[2] + 0x38);\n            goto code_r0x004aba1b;\n        }\n    }\n    uVar7 = (*pcVar8)();\ncode_r0x004aba1b:\n    *(in_ECX + 0x38) = uVar7;\n    piVar4 = fcn.004c0980(arg_8h);\n    (**(*piVar4 + 0x2c))(*0x516da8, *0x516da8 + 0xb, in_ECX + 0x3c);\n    *(in_ECX + 0x52) = 1;\n    *(in_ECX + 8) = puVar5;\n    *(in_ECX + 0x18) = var_48h;\n    *(in_ECX + 0x20) = var_44h;\n    *(in_ECX + 0x28) = var_40h;\n    if (*0x515a34 == 0) {\n        iVar1 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_1ch + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.00483f10(puVar9);\n    }\n    if (*0x515a34 == 0) {\n        iVar1 = *(var_20h + -4);\n        *(var_20h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_20h + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.00483f10(puVar9);\n    }\n    if (*0x515a34 == 0) {\n        iVar1 = *(var_24h + -4);\n        *(var_24h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_24h + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.00483f10(puVar9);\n    }\n    fcn.0048bdf0(puVar9);\n    return;\n}\n",
        "token_count": 2300
    },
    "004ac250": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004ac250(int32_t param_1, char param_2, char *param_3, char *param_4, int32_t param_5, int32_t param_6)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    char *pcVar6;\n    char *in_stack_ffffffcc;\n    int32_t iStack48;\n    \n    piVar5 = param_2;\n    param_5 = param_5 - param_6;\n    uVar3 = *(param_1 + 0xc) & 0xb0;\n    if (uVar3 == 0x20) {\n        if (param_6 != 0) {\n            sub.msvcrt.dll_memcpy(param_3, param_4, param_6);\n        }\n        if (param_5 == 0) {\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x004475f0. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_memset)();\n        return;\n    }\n    if (uVar3 == 0x10) {\n        piVar4 = fcn.004c0920(param_1 + 0x6c);\n        if (*(piVar4 + 7) == '\\0') {\n            fcn.00451a70();\n            cVar2 = '-';\n            if (*(*piVar4 + 0x18) != 0x451d20) {\n                cVar2 = (**(*piVar4 + 0x18))(0x2d);\n            }\n            cVar1 = *param_4;\n            if (cVar1 != cVar2) {\n                if (*(piVar4 + 7) != '\\0') goto code_r0x004ac37f;\n                fcn.00451a70();\n                cVar2 = '+';\n                if (*(*piVar4 + 0x18) != 0x451d20) {\n                    cVar2 = (**(*piVar4 + 0x18))(0x2b);\n                }\n                cVar1 = *param_4;\n                if (cVar1 != cVar2) {\n                    if (*(piVar4 + 7) != '\\0') goto code_r0x004ac2b0;\n                    fcn.00451a70();\n                    cVar2 = '0';\n                    if (*(*piVar4 + 0x18) != 0x451d20) {\n                        cVar2 = (**(*piVar4 + 0x18))(0x30);\n                    }\n                    if ((*param_4 != cVar2) || (param_6 < 2)) goto code_r0x004ac296;\n                    if (*(piVar4 + 7) != '\\0') goto code_r0x004ac2ba;\n                    cVar1 = fcn.00451ca0(0x78);\n                    cVar2 = *(iStack48 + 1);\n                    if (cVar2 != cVar1) {\n                        if (*(piVar5 + 7) != '\\0') goto code_r0x004ac2ce;\n                        cVar1 = fcn.00451ca0(0x58);\n                        cVar2 = in_stack_ffffffcc[1];\n                        goto code_r0x004ac2d2;\n                    }\n                    goto code_r0x004ac4ff;\n                }\n            }\ncode_r0x004ac388:\n            *param_3 = cVar2;\n            param_6 = param_6 + -1;\n            param_3 = param_3 + 1;\n            goto code_r0x004ac296;\n        }\n        cVar1 = *param_4;\n        cVar2 = cVar1;\n        if (*(piVar4 + 0x4a) == cVar1) goto code_r0x004ac388;\ncode_r0x004ac37f:\n        cVar2 = cVar1;\n        if (*(piVar4 + 0x12) == cVar1) goto code_r0x004ac388;\ncode_r0x004ac2b0:\n        if ((*(piVar4 + 0x4d) != cVar1) || (param_6 < 2)) goto code_r0x004ac296;\ncode_r0x004ac2ba:\n        cVar2 = param_4[1];\n        piVar5 = piVar4;\n        if (cVar2 == *(piVar4 + 0x95)) {\ncode_r0x004ac4ff:\n            param_6 = param_6 + -2;\n            *param_3 = *in_stack_ffffffcc;\n            param_3[1] = in_stack_ffffffcc[1];\n            param_3 = param_3 + 2;\n            goto code_r0x004ac296;\n        }\ncode_r0x004ac2ce:\n        cVar1 = *(piVar5 + 0x75);\ncode_r0x004ac2d2:\n        if (cVar1 == cVar2) goto code_r0x004ac4ff;\n        pcVar6 = param_3 + param_5;\n        if (param_5 == 0) goto code_r0x00447600;\ncode_r0x004ac2e1:\n        sub.msvcrt.dll_memset(param_3, iStack48, param_5);\n    }\n    else {\ncode_r0x004ac296:\n        pcVar6 = param_3 + param_5;\n        if (param_5 != 0) goto code_r0x004ac2e1;\n    }\n    if (param_6 == 0) {\n        return;\n    }\ncode_r0x00447600:\n    // WARNING: Could not recover jumptable at 0x00447600. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_memcpy)(pcVar6);\n    return;\n}\n",
        "token_count": 1321
    },
    "004ac550": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.004ac550(int32_t param_1, int16_t param_2, int16_t *param_3, int16_t *param_4, int32_t param_5, int32_t param_6\n                 )\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint var_1h;\n    \n    param_5 = param_5 - param_6;\n    uVar2 = *(param_1 + 0xc) & 0xb0;\n    if (uVar2 == 0x20) {\n        if (param_6 != 0) {\n            sub.msvcrt.dll_memcpy(param_3, param_4, param_6 * 2);\n        }\n        if (param_5 != 0) {\n            param_3 = param_3 + param_6;\n            do {\n                *param_3 = param_2;\n                param_3 = param_3 + 1;\n                param_5 = param_5 + -1;\n            } while (param_5 != 0);\n            return;\n        }\n    }\n    else {\n        if (uVar2 == 0x10) {\n            piVar3 = fcn.004c0980(param_1 + 0x6c);\n            iVar1 = (**(*piVar3 + 0x28))(0x2d);\n            if ((*param_4 == iVar1) || (iVar1 = (**(*piVar3 + 0x28))(0x2b),  *param_4 == iVar1)) {\n                *param_3 = iVar1;\n                param_6 = param_6 + -1;\n                param_3 = param_3 + 1;\n            }\n            else {\n                iVar1 = (**(*piVar3 + 0x28))(0x30);\n                if ((*param_4 == iVar1) && (1 < param_6)) {\n                    iVar1 = (**(*piVar3 + 0x28))(0x78);\n                    if ((param_4[1] != iVar1) && (iVar1 = (**(*piVar3 + 0x28))(0x58),  param_4[1] != iVar1)) {\n                        if (param_5 != 0) goto code_r0x004ac5b0;\n                        goto code_r0x00447600;\n                    }\n                    param_6 = param_6 + -2;\n                    *param_3 = *param_4;\n                    param_3[1] = param_4[1];\n                    param_3 = param_3 + 2;\n                }\n            }\n        }\n        for (; param_5 != 0; param_5 = param_5 + -1) {\ncode_r0x004ac5b0:\n            *param_3 = param_2;\n            param_3 = param_3 + 1;\n        }\n        if (param_6 != 0) {\ncode_r0x00447600:\n    // WARNING: Could not recover jumptable at 0x00447600. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_memcpy)();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 720
    },
    "004ac930": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004ac930(int32_t param_1)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    do {\n        iVar2 = fcn.0043e010(iVar3);\n        if (iVar2 == -1) {\n            *(param_1 + 0xc) = 0;\n            goto code_r0x004ac960;\n        }\n        *(param_1 + 0xd + iVar3) = iVar2;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x80);\n    *(param_1 + 0xc) = 1;\ncode_r0x004ac960:\n    iVar3 = 0;\n    do {\n        uVar1 = fcn.0043d050(iVar3);\n        *(param_1 + 0x8e + iVar3 * 2) = uVar1;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x100);\n    iVar3 = 0;\n    do {\n        iVar2 = 1 << (iVar3 & 0x1f);\n        *(param_1 + 0x28e + iVar3 * 2) = iVar2;\n        uVar1 = fcn.00451ef0(iVar2);\n        *(param_1 + 0x2ae + iVar3 * 2) = uVar1;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x10);\n    return;\n}\n",
        "token_count": 346
    },
    "004acab0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004acab0(void)\n\n{\n    if (*0x515a34 == 0) {\n        if (*0x516f08 == 0) {\ncode_r0x004acaed:\n            fcn.004ae0a0(2);\n            *0x516f08 = 0x515cd4;\n            *0x516f24 = 0x515cd4;\n            return;\n        }\n    }\n    else {\n        fcn.004388f0(0x516f1c, 0x4acb20);\n        if (*0x516f08 == 0) goto code_r0x004acaed;\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "004acb90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004acb90(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t in_ECX;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    uVar1 = *arg_8h;\n    uVar2 = arg_8h[2];\n    *0x516de4 = 0x52cc1c;\n    uVar3 = arg_8h[1];\n    *0x516de8 = 1;\n    *0x516dec = uVar1;\n    fcn.004bb920(0);\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516de8 = *0x516de8 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.004522b0();\n    *(iVar9 + iVar7 * 4) = 0x516de4;\n    *0x516e60 = 1;\n    *0x516e5c = 0x52cab0;\n    *0x516e64 = fcn.004af100();\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516e60 = *0x516e60 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.004522b0();\n    *(iVar9 + iVar7 * 4) = 0x516e5c;\n    *0x516e30 = 1;\n    *0x516e2c = 0x52bec8;\n    *0x516e34 = uVar3;\n    fcn.0048df60(0, 0);\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516e30 = *0x516e30 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.004522b0();\n    *(iVar9 + iVar7 * 4) = 0x516e2c;\n    *0x516e3c = 1;\n    *0x516e38 = 0x52befc;\n    *0x516e40 = uVar2;\n    fcn.0048e340(0, 0);\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516e3c = *0x516e3c + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.004522b0();\n    *(iVar9 + iVar7 * 4) = 0x516e38;\n    *0x516e0c = 0x52cd24;\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516e10 = 2;\n    iVar9 = *(in_ECX + 4);\n    iVar8 = fcn.004522b0();\n    iVar7 = *0x515a34;\n    *(iVar9 + iVar8 * 4) = 0x516e0c;\n    *0x516e1c = 0x52cd54;\n    if (iVar7 != 0) {\n        LOCK();\n    }\n    *0x516e20 = 2;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.004522b0();\n    *(iVar9 + iVar7 * 4) = 0x516e1c;\n    *0x516dfc = 0x52cc64;\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516e00 = 2;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.004522b0();\n    *(iVar9 + iVar7 * 4) = 0x516dfc;\n    fcn.004bb640(1);\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516dc8 = *0x516dc8 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.004522b0();\n    *(iVar9 + iVar7 * 4) = 0x516dc4;\n    uVar4 = arg_8h[3];\n    *0x516df4 = 1;\n    uVar5 = arg_8h[4];\n    uVar6 = arg_8h[5];\n    *0x516df0 = 0x52cc40;\n    *0x516df8 = uVar4;\n    fcn.004bbc70(0);\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516df4 = *0x516df4 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.004522b0();\n    *(iVar9 + iVar7 * 4) = 0x516df0;\n    *0x516e6c = 1;\n    *0x516e68 = 0x52cacc;\n    *0x516e70 = fcn.004af100();\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516e6c = *0x516e6c + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.004522b0();\n    *(iVar9 + iVar7 * 4) = 0x516e68;\n    *0x516e48 = 1;\n    *0x516e44 = 0x52bf30;\n    *0x516e4c = uVar5;\n    fcn.0048e720(0, 0);\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516e48 = *0x516e48 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.004522b0();\n    *(iVar9 + iVar7 * 4) = 0x516e44;\n    *0x516e54 = 1;\n    *0x516e50 = 0x52bf64;\n    *0x516e58 = uVar6;\n    fcn.0048eb10(0, 0);\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516e54 = *0x516e54 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.004522b0();\n    *(iVar9 + iVar7 * 4) = 0x516e50;\n    *0x516e14 = 0x52cd3c;\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516e18 = 2;\n    iVar9 = *(in_ECX + 4);\n    iVar8 = fcn.004522b0();\n    iVar7 = *0x515a34;\n    *(iVar9 + iVar8 * 4) = 0x516e14;\n    *0x516e24 = 0x52cd6c;\n    if (iVar7 != 0) {\n        LOCK();\n    }\n    *0x516e28 = 2;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.004522b0();\n    *(iVar9 + iVar7 * 4) = 0x516e24;\n    *0x516e04 = 0x52cc8c;\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516e08 = 2;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.004522b0();\n    *(iVar9 + iVar7 * 4) = 0x516e04;\n    fcn.004bb7d0(1);\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516dd8 = *0x516dd8 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.004522b0();\n    *(iVar9 + iVar7 * 4) = 0x516dd4;\n    iVar9 = *(in_ECX + 0xc);\n    iVar7 = fcn.004522b0();\n    *(iVar9 + iVar7 * 4) = uVar1;\n    iVar9 = *(in_ECX + 0xc);\n    iVar7 = fcn.004522b0();\n    *(iVar9 + iVar7 * 4) = uVar3;\n    iVar9 = *(in_ECX + 0xc);\n    iVar7 = fcn.004522b0();\n    *(iVar9 + iVar7 * 4) = uVar2;\n    iVar9 = *(in_ECX + 0xc);\n    iVar7 = fcn.004522b0();\n    *(iVar9 + iVar7 * 4) = uVar4;\n    iVar9 = *(in_ECX + 0xc);\n    iVar8 = fcn.004522b0();\n    iVar7 = *(in_ECX + 0xc);\n    *(iVar9 + iVar8 * 4) = uVar5;\n    iVar9 = fcn.004522b0();\n    *(iVar7 + iVar9 * 4) = uVar6;\n    return;\n}\n",
        "token_count": 2213
    },
    "004ad280": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004ad280(uint *arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar1 = fcn.004c3430(0xc);\n    uVar3 = *arg_8h;\n    puVar1[1] = 0;\n    *puVar1 = 0x52cc1c;\n    puVar1[2] = 0;\n    fcn.004bb920(uVar3);\n    if (*0x515a34 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.004522b0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c3430(0xc);\n    var_1ch = *arg_8h;\n    puVar1[1] = 0;\n    *puVar1 = 0x52cab0;\n    uVar3 = fcn.004af170(&var_1ch);\n    puVar1[2] = uVar3;\n    if (*0x515a34 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.004522b0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c3430(0xc);\n    uVar3 = *arg_8h;\n    puVar1[1] = 0;\n    *puVar1 = 0x52bec8;\n    puVar1[2] = 0;\n    fcn.0048df60(uVar3, 0);\n    if (*0x515a34 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.004522b0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c3430(0xc);\n    uVar3 = *arg_8h;\n    puVar1[1] = 0;\n    *puVar1 = 0x52befc;\n    puVar1[2] = 0;\n    fcn.0048e340(uVar3, 0);\n    if (*0x515a34 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.004522b0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c3430(8);\n    puVar1[1] = 0;\n    *puVar1 = 0x52cd24;\n    if (*0x515a34 == 0) {\n        puVar1[1] = 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.004522b0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c3430(8);\n    iVar4 = *0x515a34;\n    puVar1[1] = 0;\n    *puVar1 = 0x52cd54;\n    if (iVar4 == 0) {\n        puVar1[1] = 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.004522b0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c3430(8);\n    iVar4 = *0x515a34;\n    puVar1[1] = 0;\n    *puVar1 = 0x52cc64;\n    if (iVar4 == 0) {\n        puVar1[1] = 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.004522b0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    iVar4 = fcn.004c3430(0x10);\n    fcn.004bb600(*arg_8h, arg_10h, 0);\n    if (*0x515a34 == 0) {\n        *(iVar4 + 4) = *(iVar4 + 4) + 1;\n    }\n    else {\n        LOCK();\n        *(iVar4 + 4) = *(iVar4 + 4) + 1;\n    }\n    iVar2 = *(in_ECX + 4);\n    iVar5 = fcn.004522b0();\n    *(iVar2 + iVar5 * 4) = iVar4;\n    puVar1 = fcn.004c3430(0xc);\n    uVar3 = *arg_8h;\n    puVar1[1] = 0;\n    *puVar1 = 0x52cc40;\n    puVar1[2] = 0;\n    fcn.004bbc70(uVar3);\n    if (*0x515a34 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.004522b0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c3430(0xc);\n    var_1ch = *arg_8h;\n    puVar1[1] = 0;\n    *puVar1 = 0x52cacc;\n    uVar3 = fcn.004af170(&var_1ch);\n    puVar1[2] = uVar3;\n    if (*0x515a34 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.004522b0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c3430(0xc);\n    puVar1[1] = 0;\n    uVar3 = *arg_ch;\n    *puVar1 = 0x52bf30;\n    puVar1[2] = 0;\n    fcn.0048e720(uVar3, arg_14h);\n    if (*0x515a34 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.004522b0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c3430(0xc);\n    puVar1[1] = 0;\n    uVar3 = *arg_ch;\n    *puVar1 = 0x52bf64;\n    puVar1[2] = 0;\n    fcn.0048eb10(uVar3, arg_14h);\n    if (*0x515a34 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.004522b0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c3430(8);\n    puVar1[1] = 0;\n    *puVar1 = 0x52cd3c;\n    if (*0x515a34 == 0) {\n        puVar1[1] = 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.004522b0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c3430(8);\n    iVar4 = *0x515a34;\n    puVar1[1] = 0;\n    *puVar1 = 0x52cd6c;\n    if (iVar4 == 0) {\n        puVar1[1] = 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.004522b0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c3430(8);\n    iVar4 = *0x515a34;\n    puVar1[1] = 0;\n    *puVar1 = 0x52cc8c;\n    if (iVar4 == 0) {\n        puVar1[1] = 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.004522b0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    iVar4 = fcn.004c3430(0x10);\n    fcn.004bb790(*arg_8h, arg_10h, 0);\n    if (*0x515a34 == 0) {\n        *(iVar4 + 4) = *(iVar4 + 4) + 1;\n    }\n    else {\n        LOCK();\n        *(iVar4 + 4) = *(iVar4 + 4) + 1;\n    }\n    iVar2 = *(in_ECX + 4);\n    iVar5 = fcn.004522b0();\n    *(iVar2 + iVar5 * 4) = iVar4;\n    return;\n}\n",
        "token_count": 2623
    },
    "004adb10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004adb10(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    int32_t *piVar12;\n    int32_t *piVar13;\n    int32_t iVar14;\n    int32_t **ppiVar15;\n    ulong uVar16;\n    \n    if (param_3 == 0) {\n        return;\n    }\n    uVar7 = fcn.004522b0();\n    if (*(param_1 + 8) - 1U < uVar7) {\n        uVar11 = uVar7 + 4;\n        iVar3 = *(param_1 + 4);\n        iVar14 = uVar11 * 4;\n        if (0x1fffffff < uVar11) {\n            iVar14 = -1;\n        }\n        iVar8 = fcn.004c3410(iVar14);\n        uVar4 = *(param_1 + 8);\n        if (uVar4 != 0) {\n            iVar5 = *(param_1 + 4);\n            uVar9 = 0;\n            do {\n                *(iVar8 + uVar9 * 4) = *(iVar5 + uVar9 * 4);\n                uVar9 = uVar9 + 1;\n            } while (uVar9 != uVar4);\n        }\n        if (uVar4 < uVar11) {\n            puVar10 = iVar8 + uVar4 * 4;\n            do {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            } while (iVar8 + 0x10 + uVar7 * 4 != puVar10);\n        }\n        iVar5 = *(param_1 + 0xc);\n        iVar14 = fcn.004c3410(iVar14);\n        uVar4 = *(param_1 + 8);\n        if (uVar4 != 0) {\n            iVar6 = *(param_1 + 0xc);\n            uVar9 = 0;\n            do {\n                *(iVar14 + uVar9 * 4) = *(iVar6 + uVar9 * 4);\n                uVar9 = uVar9 + 1;\n            } while (uVar9 != uVar4);\n        }\n        if (uVar4 < uVar11) {\n            puVar10 = iVar14 + uVar4 * 4;\n            do {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            } while (puVar10 != iVar14 + 0x10 + uVar7 * 4);\n        }\n        *(param_1 + 4) = iVar8;\n        *(param_1 + 0xc) = iVar14;\n        *(param_1 + 8) = uVar11;\n        if (iVar3 != 0) {\n            fcn.004c33e0(iVar3);\n        }\n        if (iVar5 != 0) {\n            fcn.004c33e0(iVar5);\n        }\n    }\n    if (*0x515a34 == 0) {\n        *(param_3 + 4) = *(param_3 + 4) + 1;\n    }\n    else {\n        LOCK();\n        *(param_3 + 4) = *(param_3 + 4) + 1;\n    }\n    ppiVar2 = *(param_1 + 4) + uVar7 * 4;\n    piVar12 = *ppiVar2;\n    if (piVar12 == NULL) goto code_r0x004add0b;\n    if (*0x527c60 == 0) {\ncode_r0x004adceb:\n        if (*0x515a34 == 0) goto code_r0x004adcf9;\ncode_r0x004add90:\n        LOCK();\n        piVar1 = piVar12 + 1;\n        iVar14 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    else {\n        do {\n            uVar11 = fcn.004522b0();\n            if (uVar11 == uVar7) {\n                iVar14 = *(param_1 + 4);\n                uVar16 = fcn.004522b0();\n                ppiVar15 = iVar14 + uVar16 * 4;\n                if (*ppiVar15 != NULL) {\n                    piVar12 = fcn.00453280(*((uVar16 >> 0x20) + 4));\n                    if (*0x515a34 == 0) {\n                        piVar12[1] = piVar12[1] + 1;\n                        piVar13 = *ppiVar15;\ncode_r0x004adcd5:\n                        iVar14 = piVar13[1];\n                        piVar13[1] = iVar14 + -1;\n                    }\n                    else {\n                        LOCK();\n                        piVar12[1] = piVar12[1] + 1;\n                        piVar13 = *ppiVar15;\n                        piVar1 = piVar13 + 1;\n                        if (*0x515a34 == 0) goto code_r0x004adcd5;\n                        LOCK();\n                        iVar14 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                    }\n                    if (iVar14 == 1) {\n                        (**(*piVar13 + 4))();\n                    }\ncode_r0x004adce7:\n                    *ppiVar15 = piVar12;\n                    piVar12 = *ppiVar2;\n                    goto code_r0x004adceb;\n                }\n                break;\n            }\n            uVar16 = fcn.004522b0();\n            if (uVar16 == uVar7) {\n                iVar14 = *(param_1 + 4);\n                uVar16 = fcn.004522b0();\n                ppiVar15 = iVar14 + uVar16 * 4;\n                if (*ppiVar15 != NULL) {\n                    piVar12 = fcn.004528f0(*(uVar16 >> 0x20));\n                    if (*0x515a34 == 0) {\n                        piVar12[1] = piVar12[1] + 1;\n                        piVar13 = *ppiVar15;\ncode_r0x004addf5:\n                        iVar14 = piVar13[1];\n                        piVar13[1] = iVar14 + -1;\n                    }\n                    else {\n                        LOCK();\n                        piVar12[1] = piVar12[1] + 1;\n                        piVar13 = *ppiVar15;\n                        piVar1 = piVar13 + 1;\n                        if (*0x515a34 == 0) goto code_r0x004addf5;\n                        LOCK();\n                        iVar14 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                    }\n                    if (iVar14 == 1) {\n                        (**(*piVar13 + 4))();\n                    }\n                    goto code_r0x004adce7;\n                }\n                break;\n            }\n        } while (*((uVar16 >> 0x20) + 8) != 0);\n        piVar12 = *ppiVar2;\n        if (*0x515a34 != 0) goto code_r0x004add90;\ncode_r0x004adcf9:\n        iVar14 = piVar12[1];\n        piVar12[1] = iVar14 + -1;\n    }\n    if (iVar14 == 1) {\n        (**(*piVar12 + 4))();\n    }\ncode_r0x004add0b:\n    iVar14 = *(param_1 + 8);\n    *ppiVar2 = param_2;\n    if (iVar14 != 0) {\n        uVar7 = 0;\n        iVar14 = *(param_1 + 0xc);\n        do {\n            piVar12 = *(iVar14 + uVar7 * 4);\n            if (piVar12 != NULL) {\n                if (*0x515a34 == 0) {\n                    iVar14 = piVar12[1];\n                    piVar12[1] = iVar14 + -1;\n                }\n                else {\n                    LOCK();\n                    piVar1 = piVar12 + 1;\n                    iVar14 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                }\n                if (iVar14 == 1) {\n                    (**(*piVar12 + 4))();\n                }\n                iVar14 = *(param_1 + 0xc);\n                *(iVar14 + uVar7 * 4) = 0;\n            }\n            uVar7 = uVar7 + 1;\n        } while (uVar7 <= *(param_1 + 8) && *(param_1 + 8) != uVar7);\n    }\n    return;\n}\n",
        "token_count": 2003
    },
    "004ae0a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.004ae0a0(uint arg_8h)\n\n{\n    uint *puVar1;\n    ushort *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_ECX;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_bp_8h;\n    \n    in_ECX[2] = 0x2e;\n    *in_ECX = arg_8h;\n    puVar1 = 0x516800;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 1;\n    } while (puVar1 != 0x5168b8);\n    in_ECX[1] = 0x516800;\n    puVar1 = 0x516700;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 1;\n    } while (puVar1 != 0x5167b8);\n    in_ECX[3] = 0x516700;\n    puVar1 = 0x5166e4;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 1;\n    } while (puVar1 != 0x5166fc);\n    in_ECX[4] = 0x5166e4;\n    *0x5166e4 = 0x5161c0;\n    puVar2 = fcn.004af0f0();\n    *0x5161c0 = *puVar2;\n    fcn.004ac770(0, 0, 1);\n    fcn.004adb10(0x516f00, 0x5161e0);\n    fcn.004b96f0(1);\n    fcn.004adb10(0x516f70, 0x5167c0);\n    *0x515d44 = 1;\n    *0x515d64 = 0;\n    *0x515d40 = 0x52c530;\n    *0x515d48 = 0;\n    *0x515d4c = 0;\n    *0x515d50 = 0;\n    *0x515d54 = 0;\n    *0x515d58 = 0;\n    *0x515d5c = 0;\n    *0x515d60 = 0;\n    *0x515da4 = 0;\n    *0x515c44 = 1;\n    *0x515c40 = 0x52bd00;\n    *0x515c48 = 0x515d40;\n    fcn.004b8ce0(0);\n    fcn.004adb10(0x516f48, 0x515c40);\n    *0x5168c4 = 1;\n    *0x5168c0 = 0x52cae8;\n    fcn.004adb10(0x516f80, 0x5168c0);\n    *0x5168d4 = 1;\n    *0x5168d0 = 0x52cb60;\n    fcn.004adb10(0x516f88, 0x5168d0);\n    *0x5167dc = 1;\n    *0x5167d8 = 0x52bc90;\n    *0x5167e0 = fcn.004af100();\n    fcn.004adb10(0x516f38, 0x5167d8);\n    *0x516040 = 0x52c654;\n    *0x516044 = 1;\n    *0x516048 = 0;\n    *0x51604c = 0;\n    *0x516050 = 0;\n    *0x516052 = 0;\n    *0x516054 = 0;\n    *0x516058 = 0;\n    *0x51605c = 0;\n    *0x516060 = 0;\n    *0x516064 = 0;\n    *0x516068 = 0;\n    *0x51606c = 0;\n    *0x516070 = 0;\n    *0x516074 = 0;\n    *0x516083 = 0;\n    *0x515cec = 1;\n    *0x515ce8 = 0x52b9e0;\n    *0x515cf0 = 0x516040;\n    fcn.004af5a0(0, 0);\n    fcn.004adb10(0x516f28, 0x515ce8);\n    *0x5160a0 = 0x52c664;\n    *0x5160a4 = 1;\n    *0x5160a8 = 0;\n    *0x5160ac = 0;\n    *0x5160b0 = 0;\n    *0x5160b2 = 0;\n    *0x5160b4 = 0;\n    *0x5160b8 = 0;\n    *0x5160bc = 0;\n    *0x5160c0 = 0;\n    *0x5160c4 = 0;\n    *0x5160c8 = 0;\n    *0x5160cc = 0;\n    *0x5160d0 = 0;\n    *0x5160d4 = 0;\n    *0x5160e3 = 0;\n    *0x515cf8 = 1;\n    *0x515cf4 = 0x52ba14;\n    *0x515cfc = 0x5160a0;\n    fcn.004af980(0, 0);\n    fcn.004adb10(0x516f2c, 0x515cf4);\n    *0x515c8c = 1;\n    *0x515c88 = 0x52bda0;\n    fcn.004adb10(0x516f58, 0x515c88);\n    *0x515c9c = 1;\n    *0x515c98 = 0x52bdd0;\n    fcn.004adb10(0x516f60, 0x515c98);\n    *0x515e84 = 1;\n    *0x515e80 = 0x52c564;\n    *0x515e88 = 0;\n    *0x515e8c = 0;\n    *0x515e90 = 0;\n    *0x515e94 = 0;\n    *0x515e98 = 0;\n    *0x515e9c = 0;\n    *0x515ea0 = 0;\n    *0x515ea4 = 0;\n    *0x515ea8 = 0;\n    *0x515eac = 0;\n    *0x515eb0 = 0;\n    *0x515eb4 = 0;\n    *0x515eb8 = 0;\n    *0x515ebc = 0;\n    *0x515ec0 = 0;\n    *0x515ec4 = 0;\n    *0x515ec8 = 0;\n    *0x515ecc = 0;\n    *0x515ed0 = 0;\n    *0x515ed4 = 0;\n    *0x515ed8 = 0;\n    *0x515edc = 0;\n    *0x515ee0 = 0;\n    *0x515ee4 = 0;\n    *0x515ee8 = 0;\n    *0x515eec = 0;\n    *0x515ef0 = 0;\n    *0x515ef4 = 0;\n    *0x515ef8 = 0;\n    *0x515efc = 0;\n    *0x515f00 = 0;\n    *0x515f04 = 0;\n    *0x515f08 = 0;\n    *0x515f0c = 0;\n    *0x515f10 = 0;\n    *0x515f14 = 0;\n    *0x515f18 = 0;\n    *0x515f1c = 0;\n    *0x515f20 = 0;\n    *0x515f24 = 0;\n    *0x515f28 = 0;\n    *0x515f2c = 0;\n    *0x515f30 = 0;\n    *0x515f34 = 0;\n    *0x515f38 = 0;\n    *0x515f3c = 0;\n    *0x515f40 = 0;\n    *0x515f44 = 0;\n    fcn.0048f240(0x515e80, 1);\n    fcn.004adb10(0x516dbc, 0x515ca8);\n    *0x515c5c = 1;\n    *0x515c58 = 0x52bd48;\n    fcn.004adb10(0x516f50, 0x515c58);\n    *0x515c6c = 1;\n    *0x515c68 = 0x52ccb4;\n    fcn.004adb10(0x516fb0, 0x515c68);\n    fcn.004b8a00(1);\n    fcn.004adb10(0x516f40, 0x515c20);\n    fcn.004aca00(1);\n    fcn.004adb10(0x516f04, 0x516400);\n    fcn.004b97d0(1);\n    fcn.004adb10(0x516f74, 0x5167cc);\n    *0x515dc4 = 1;\n    *0x515dc0 = 0x52c540;\n    *0x515dc8 = 0;\n    *0x515dcc = 0;\n    *0x515dd0 = 0;\n    *0x515dd4 = 0;\n    *0x515dd8 = 0;\n    *0x515ddc = 0;\n    *0x515de0 = 0;\n    *0x515de4 = 0;\n    *0x515e64 = 0;\n    *0x515c50 = 1;\n    *0x515c4c = 0x52bd24;\n    *0x515c54 = 0x515dc0;\n    fcn.004b9030(0);\n    fcn.004adb10(0x516f4c, 0x515c4c);\n    *0x5168cc = 1;\n    *0x5168c8 = 0x52cb24;\n    fcn.004adb10(0x516f84, 0x5168c8);\n    *0x5168dc = 1;\n    *0x5168d8 = 0x52cb90;\n    fcn.004adb10(0x516f8c, 0x5168d8);\n    *0x5167e8 = 1;\n    *0x5167e4 = 0x52bcac;\n    *0x5167ec = fcn.004af100();\n    fcn.004adb10(0x516f3c, 0x5167e4);\n    *0x516104 = 1;\n    *0x516100 = 0x52c674;\n    *0x516108 = 0;\n    *0x51610c = 0;\n    *0x516110 = 0;\n    *0x516112 = 0;\n    *0x516118 = 0;\n    *0x51611c = 0;\n    *0x516120 = 0;\n    *0x516124 = 0;\n    *0x516128 = 0;\n    *0x51612c = 0;\n    *0x516130 = 0;\n    *0x516134 = 0;\n    *0x516138 = 0;\n    *0x516152 = 0;\n    *0x515d04 = 1;\n    *0x515d00 = 0x52ba48;\n    *0x515d08 = 0x516100;\n    fcn.004afd60(0, 0);\n    fcn.004adb10(0x516f30, 0x515d00);\n    *0x516164 = 1;\n    *0x516160 = 0x52c684;\n    *0x516168 = 0;\n    *0x51616c = 0;\n    *0x516170 = 0;\n    *0x516172 = 0;\n    *0x516178 = 0;\n    *0x51617c = 0;\n    *0x516180 = 0;\n    *0x516184 = 0;\n    *0x516188 = 0;\n    *0x51618c = 0;\n    *0x516190 = 0;\n    *0x516194 = 0;\n    *0x516198 = 0;\n    *0x5161b2 = 0;\n    *0x515d10 = 1;\n    *0x515d0c = 0x52ba7c;\n    *0x515d14 = 0x516160;\n    fcn.004b0150(0, 0);\n    fcn.004adb10(0x516f34, 0x515d0c);\n    *0x515c94 = 1;\n    *0x515c90 = 0x52bdb8;\n    fcn.004adb10(0x516f5c, 0x515c90);\n    *0x515ca4 = 1;\n    *0x515ca0 = 0x52bde8;\n    fcn.004adb10(0x516f64, 0x515ca0);\n    *0x515f64 = 1;\n    *0x515f60 = 0x52c574;\n    *0x515f68 = 0;\n    *0x515f6c = 0;\n    *0x515f70 = 0;\n    *0x515f74 = 0;\n    *0x515f78 = 0;\n    *0x515f7c = 0;\n    *0x515f80 = 0;\n    *0x515f84 = 0;\n    *0x515f88 = 0;\n    *0x515f8c = 0;\n    *0x515f90 = 0;\n    *0x515f94 = 0;\n    *0x515f98 = 0;\n    *0x515f9c = 0;\n    *0x515fa0 = 0;\n    *0x515fa4 = 0;\n    *0x515fa8 = 0;\n    *0x515fac = 0;\n    *0x515fb0 = 0;\n    *0x515fb4 = 0;\n    *0x515fb8 = 0;\n    *0x515fbc = 0;\n    *0x515fc0 = 0;\n    *0x515fc4 = 0;\n    *0x515fc8 = 0;\n    *0x515fcc = 0;\n    *0x515fd0 = 0;\n    *0x515fd4 = 0;\n    *0x515fd8 = 0;\n    *0x515fdc = 0;\n    *0x515fe0 = 0;\n    *0x515fe4 = 0;\n    *0x515fe8 = 0;\n    *0x515fec = 0;\n    *0x515ff0 = 0;\n    *0x515ff4 = 0;\n    *0x515ff8 = 0;\n    *0x515ffc = 0;\n    *0x516000 = 0;\n    *0x516004 = 0;\n    *0x516008 = 0;\n    *0x51600c = 0;\n    *0x516010 = 0;\n    *0x516014 = 0;\n    *0x516018 = 0;\n    *0x51601c = 0;\n    *0x516020 = 0;\n    *0x516024 = 0;\n    fcn.0048f980(0x515f60, 1);\n    fcn.004adb10(0x516dc0, 0x515cbc);\n    *0x515c64 = 1;\n    *0x515c60 = 0x52bd74;\n    fcn.004adb10(0x516f54, 0x515c60);\n    *0x515c74 = 1;\n    *0x515c70 = 0x52ccc8;\n    fcn.004adb10(0x516fb4, 0x515c70);\n    fcn.004b8b90(1);\n    fcn.004adb10(0x516f44, 0x515c30);\n    *0x515c7c = 1;\n    *0x515c78 = vtable.p8H.0;\n    fcn.004adb10(0x516f6c, 0x515c78);\n    *0x515c84 = 1;\n    *0x515c80 = 0x52ca00;\n    fcn.004adb10(0x516f68, 0x515c80);\n    var_20h = 0x515d40;\n    var_1ch = 0x516040;\n    var_18h = 0x5160a0;\n    var_14h = 0x515dc0;\n    var_10h = 0x516100;\n    var_ch = 0x516160;\n    fcn.004acb90(&var_20h);\n    iVar5 = in_ECX[3];\n    iVar3 = fcn.004522b0();\n    *(iVar5 + iVar3 * 4) = 0x515d40;\n    iVar5 = in_ECX[3];\n    iVar3 = fcn.004522b0();\n    *(iVar5 + iVar3 * 4) = 0x516040;\n    iVar5 = in_ECX[3];\n    iVar3 = fcn.004522b0();\n    *(iVar5 + iVar3 * 4) = 0x5160a0;\n    iVar5 = in_ECX[3];\n    iVar3 = fcn.004522b0();\n    *(iVar5 + iVar3 * 4) = 0x515e80;\n    iVar5 = in_ECX[3];\n    iVar3 = fcn.004522b0();\n    *(iVar5 + iVar3 * 4) = 0x515dc0;\n    iVar5 = in_ECX[3];\n    iVar3 = fcn.004522b0();\n    *(iVar5 + iVar3 * 4) = 0x516100;\n    iVar5 = in_ECX[3];\n    iVar4 = fcn.004522b0();\n    iVar3 = in_ECX[3];\n    *(iVar5 + iVar4 * 4) = 0x516160;\n    iVar5 = fcn.004522b0();\n    *(iVar3 + iVar5 * 4) = 0x515f60;\n    return;\n}\n",
        "token_count": 4405
    },
    "004af230": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004af230(uint arg_8h, int32_t **arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    code *unaff_EBX;\n    uint uVar5;\n    ulong uVar6;\n    uchar auStack65 [9];\n    uint var_34h;\n    uint *var_30h;\n    uint var_28h;\n    uint uStack32;\n    code *var_ch;\n    \n    var_ch = unaff_EBX;\n    fcn.004acab0();\n    var_34h = fcn.00448900();\n    if (*0x515a34 == 0) {\n        piVar1 = *arg_ch;\n    }\n    else {\n        iVar2 = fcn.00438ab0(var_34h);\n        if (iVar2 != 0) {\n            uVar4 = fcn.0044a4d0();\n            fcn.00448db0();\n            uVar5 = uVar4;\n            do {\n                uVar6 = fcn.0043b0b0(uVar5);\n                uVar5 = uVar6;\n            } while (uVar6 >> 0x20 != -1);\n            fcn.004c36d0();\n            fcn.004af220();\n            fcn.0043b0b0(arg_8h);\n            fcn.004c33f0(uVar4);\n            fcn.0043b0b0(arg_8h);\n            fcn.004af220();\n            fcn.0043b0b0(arg_8h);\n            fcn.004c33f0(uVar4);\n            fcn.0043b0b0(arg_8h);\n            fcn.004af220();\n            fcn.0043b0b0(arg_8h);\n            fcn.004c33f0(uVar4);\n            fcn.0043b0b0(arg_8h);\n            fcn.004af220();\n            fcn.0043b0b0(arg_8h);\n            fcn.004c33f0(uVar4);\n            fcn.0043b0b0(arg_8h);\n            fcn.004af220();\n            fcn.0043b0b0(arg_8h);\n            fcn.004c33f0(uVar4);\n            fcn.0043b0b0(arg_8h);\n            fcn.004af220();\n            fcn.0043b0b0(arg_8h);\n            fcn.004c33f0(uVar4);\n            fcn.0043b0b0(arg_8h);\n            fcn.004af220();\n            fcn.0043b0b0(arg_8h);\n            fcn.004c33f0(uVar4);\n            fcn.0043b0b0(arg_8h);\n            fcn.004af220();\n            fcn.0043b0b0(arg_8h);\n            fcn.004c33f0(uVar4);\n            fcn.0043b0b0(arg_8h);\n            fcn.004af220();\n            fcn.0043b0b0(arg_8h);\n            fcn.004c33f0(uVar4);\n            fcn.0043b0b0(arg_8h);\n            fcn.004af220();\n            fcn.0043b0b0(arg_8h);\n            fcn.004c33f0(uVar4);\n            fcn.0043b0b0(arg_8h);\n            fcn.004af220();\n            fcn.0043b0b0(arg_8h);\n            fcn.004c33f0(uVar4);\n            fcn.0043b0b0(arg_8h);\n            fcn.004af220();\n            fcn.0043b0b0(arg_8h);\n            fcn.004c33f0(uVar4);\n            fcn.0043b0b0(arg_8h);\n            fcn.004af220();\n            fcn.0043b0b0(uVar4);\n            fcn.004af220();\n            fcn.0043b0b0(uVar4);\n            fcn.004af220();\n            fcn.0043b0b0(uVar4);\n            fcn.004af220();\n            fcn.0043b0b0(uVar4);\n            fcn.004af220();\n            fcn.0043b0b0(uVar4);\n            fcn.004af220();\n            fcn.0043b0b0(uVar4);\n            fcn.004af220();\n            fcn.0043b0b0(uVar4);\n            fcn.004af220();\n            fcn.0043b0b0(uVar4);\n            fcn.004af220();\n            fcn.004c33f0();\n            fcn.0043b0b0(uVar4);\n            fcn.004af220();\n            fcn.004c33f0();\n            fcn.0043b0b0(uVar4);\n            fcn.004af220();\n            fcn.004c33f0();\n            fcn.0043b0b0(uVar4);\n            fcn.004c33f0();\n            fcn.0043b0b0(uVar4);\n            fcn.004af220();\n            fcn.004c33f0();\n            fcn.0043b0b0(uVar4);\n            fcn.004af220();\n            fcn.004c33f0();\n            fcn.0043b0b0(uVar4);\n            fcn.004af220();\n            fcn.004c33f0();\n            fcn.0043b0b0(uVar4);\n            fcn.004c33f0();\n            fcn.0043b0b0(uVar4);\n            fcn.0048bdf0(&uStack32 + 3);\n            fcn.0043b0b0(arg_8h);\n            if (uStack32 != NULL) {\n                (*uStack32)(arg_8h);\n            }\n            fcn.0043b0b0(uVar4);\n            if (uStack32 != NULL) {\n                (*uStack32)(arg_8h);\n            }\n            fcn.0043b0b0(uVar4);\n            if (var_ch != NULL) {\n                (*var_ch)(arg_8h);\n            }\n            fcn.0043b0b0(uVar4);\n            if (var_ch != NULL) {\n                (*var_ch)(arg_8h);\n            }\n            fcn.0043b0b0(uVar4);\n            if (var_ch != NULL) {\n                (*var_ch)(arg_8h);\n            }\n            fcn.0043b0b0(uVar4);\n            if (var_ch != NULL) {\n                (*var_ch)(arg_8h);\n            }\n            fcn.0043b0b0(uVar4);\n            fcn.0048bdf0(auStack65);\n            if (uStack32 != NULL) {\n                (*uStack32)(uVar4);\n            }\n            fcn.0043b0b0(arg_8h);\n            fcn.00483f30(auStack65);\n            if (uStack32 != NULL) {\n                (*uStack32)();\n            }\n            fcn.0043b0b0(uVar4);\n            fcn.004af220();\n            fcn.004c33f0(uVar4);\n            fcn.0043b0b0(arg_8h);\n            fcn.004af220();\n            fcn.004c33f0(uVar4);\n            fcn.0043b0b0(arg_8h);\n            fcn.004af220();\n            do {\n                fcn.004c33f0(uVar4);\n                fcn.0043b0b0(arg_8h);\n                fcn.004c33f0(uVar4);\n                fcn.0043b0b0(arg_8h);\n                fcn.00453c10();\n                fcn.0048e6f0();\n            } while( true );\n        }\n        piVar1 = *arg_ch;\n        if (*0x515a34 != 0) {\n            LOCK();\n            *piVar1 = *piVar1 + 1;\n            piVar1 = *arg_ch;\n            uVar5 = *0x516f24;\n            goto code_r0x004af261;\n        }\n    }\n    *piVar1 = *piVar1 + 1;\n    uVar5 = *0x516f24;\ncode_r0x004af261:\n    *0x516f24 = piVar1;\n    fcn.004522f0(arg_ch);\n    iVar2 = fcn.004557a0(0x5237b2);\n    if (iVar2 != 0) goto code_r0x004af330;\n    while( true ) {\n        if (var_30h != &var_28h) {\n            fcn.004c33f0(var_30h);\n        }\n        if (*0x515a34 == 0) break;\n        iVar2 = fcn.00438b10(var_34h);\n        if (iVar2 == 0) break;\n        puVar3 = fcn.004c3540(4);\n        *puVar3 = 0x52b51c;\n        fcn.004c3af0(puVar3, 0x528194, 0x44a2d0);\ncode_r0x004af330:\n        sub.msvcrt.dll_setlocale(0, var_30h);\n    }\n    fcn.004af390(uVar5);\n    return arg_8h;\n}\n",
        "token_count": 2189
    },
    "004b0d60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004b0d60(void)\n\n{\n    fcn.004b2380(0);\n    return;\n}\n",
        "token_count": 28
    },
    "004b3ad0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004b3ad0(void)\n\n{\n    fcn.004b51f0(0);\n    return;\n}\n",
        "token_count": 29
    },
    "004b6e80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004b6e80(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x52bd00;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.004b8ce0();\n    *in_ECX = 0x52bb20;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x523d35;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = 0x523d37;\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.004af180();\n            fcn.004b8ce0();\n            fcn.004af1f0(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 584
    },
    "004b7050": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004b7050(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x52bd00;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.004b8ce0();\n    *in_ECX = 0x52bb20;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x523d35;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = 0x523d37;\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.004af180();\n            fcn.004b8ce0();\n            fcn.004af1f0(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 583
    },
    "004b7260": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004b7260(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x52bd24;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.004b9030();\n    *in_ECX = 0x52bb44;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x523ff1;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = 0x523ff3;\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.004af180();\n            fcn.004b9030();\n            fcn.004af1f0(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 581
    },
    "004b7430": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004b7430(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x52bd24;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.004b9030();\n    *in_ECX = 0x52bb44;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x523ff1;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = 0x523ff3;\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.004af180();\n            fcn.004b9030();\n            fcn.004af1f0(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 581
    },
    "004b9f20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nchar __cdecl fcn.004b9f20(uint arg_8h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    uint var_8h;\n    \n    cVar2 = *0x516f94;\n    if ((arg_8h != '\\x01') && (*0x516f94 != '\\0')) {\n        fcn.004ba260();\n        *0x516f94 = 0;\n        *0x516980 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n        fcn.004af4c0();\n        *0x516900 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n        fcn.004af4c0();\n        *0x516940 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n        fcn.004af4c0();\n        *0x516a40 = vtable.ages_bynameIcE.0;\n        fcn.004af4c0();\n        *0x5169c0 = vtable.ages_bynameIcE.0;\n        fcn.004af4c0();\n        *0x516a00 = vtable.ages_bynameIcE.0;\n        fcn.004af4c0();\n        pcVar1 = *0x515aa0;\n        uVar3 = (**0x515aa0)(1);\n        fcn.00448e50(uVar3, 0x10, 0x200);\n        uVar3 = (*pcVar1)(0);\n        fcn.00448e50(uVar3, 8, 0x200);\n        uVar3 = (*pcVar1)(2);\n        fcn.00448e50(uVar3, 0x10, 0x200);\n        fcn.004bc590(0x516b80);\n        fcn.004bc590(0x516a80);\n        fcn.004bc590(0x516b00);\n        fcn.004bc590(0x516b00);\n        uVar3 = (*pcVar1)(1);\n        fcn.004491e0(uVar3, 0x10, 0x200);\n        uVar3 = (*pcVar1)(0);\n        fcn.004491e0(uVar3, 8, 0x200);\n        uVar3 = (*pcVar1)(2);\n        fcn.004491e0(uVar3, 0x10, 0x200);\n        fcn.004bcdb0(0x516d00);\n        fcn.004bcdb0(0x516c00);\n        fcn.004bcdb0(0x516c80);\n        fcn.004bcdb0(0x516c80);\n        fcn.004ba9a0();\n        return cVar2;\n    }\n    return *0x516f94;\n}\n",
        "token_count": 668
    },
    "004ba260": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid fcn.004ba260(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_8h;\n    \n    pcVar1 = *0x515aa0;\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    if (*0x516f90 == 0) {\n        *0x516f90 = 1;\n        *0x516f94 = 1;\n        uVar2 = (**0x515aa0)(1);\n        *0x516980 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n        *0x516984 = 0;\n        *0x516988 = 0;\n        *0x51698c = 0;\n        *0x516990 = 0;\n        *0x516994 = 0;\n        *0x516998 = 0;\n        fcn.004af3d0();\n        *0x516980 = 0x52b474;\n        *0x5169a4 = 0xffffffff;\n        *0x5169a0 = uVar2;\n        uVar2 = (*pcVar1)(0);\n        *0x516900 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n        *0x516904 = 0;\n        *0x516908 = 0;\n        *0x51690c = 0;\n        *0x516910 = 0;\n        *0x516914 = 0;\n        *0x516918 = 0;\n        fcn.004af3d0();\n        *0x516900 = 0x52b474;\n        *0x516924 = 0xffffffff;\n        *0x516920 = uVar2;\n        uVar2 = (*pcVar1)(2);\n        *0x516940 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n        *0x516944 = 0;\n        *0x516948 = 0;\n        *0x51694c = 0;\n        *0x516950 = 0;\n        *0x516954 = 0;\n        *0x516958 = 0;\n        fcn.004af3d0();\n        *0x516940 = 0x52b474;\n        *0x516964 = 0xffffffff;\n        *0x516960 = uVar2;\n        fcn.004bb510();\n        *0x517234 = 0;\n        *0x517238 = 0;\n        *0x51723c = 0;\n        *0x517240 = 0;\n        *0x517244 = 0;\n        *0x517248 = 0;\n        *0x5171c0 = 0x52be90;\n        *0x5171c4 = 0x52bea4;\n        fcn.004bc340(0x516980);\n        fcn.004bb510();\n        *0x517058 = 0;\n        *0x51705c = 0;\n        *0x517060 = 0;\n        *0x517064 = 0;\n        *0x517068 = 0;\n        *0x51706c = 0;\n        *0x516fe0 = 0x52be68;\n        *0x516fe8 = 0x52be7c;\n        *0x516fe4 = 0;\n        fcn.004bc340(0x516900);\n        fcn.004bb510();\n        *0x5170f4 = 0;\n        *0x5170f8 = 0;\n        *0x5170fc = 0;\n        *0x517100 = 0;\n        *0x517104 = 0;\n        *0x517108 = 0;\n        *0x517080 = 0x52be90;\n        *0x517084 = 0x52bea4;\n        fcn.004bc340(0x516940);\n        fcn.004bb510();\n        *0x517194 = 0;\n        *0x517198 = 0;\n        *0x51719c = 0;\n        *0x5171a0 = 0;\n        *0x5171a4 = 0;\n        *0x5171a8 = 0;\n        *0x517120 = 0x52be90;\n        *0x517124 = 0x52bea4;\n        fcn.004bc340(0x516940);\n        *0x517058 = 0x5171c0;\n        *0x517090 = *0x517090 | 0x2000;\n        *0x5170f4 = 0x5171c0;\n        uVar2 = (*pcVar1)(1);\n        *0x516a40 = vtable.ages_bynameIcE.0;\n        *0x516a44 = 0;\n        *0x516a48 = 0;\n        *0x516a4c = 0;\n        *0x516a50 = 0;\n        *0x516a54 = 0;\n        *0x516a58 = 0;\n        fcn.004af3d0();\n        *0x516a64 = 0xffff;\n        *0x516a40 = 0x52b4b4;\n        *0x516a60 = uVar2;\n        uVar2 = (*pcVar1)(0);\n        *0x5169c0 = vtable.ages_bynameIcE.0;\n        *0x5169c4 = 0;\n        *0x5169c8 = 0;\n        *0x5169cc = 0;\n        *0x5169d0 = 0;\n        *0x5169d4 = 0;\n        *0x5169d8 = 0;\n        fcn.004af3d0();\n        *0x5169c0 = 0x52b4b4;\n        *0x5169e4 = 0xffff;\n        *0x5169e0 = uVar2;\n        uVar2 = (*pcVar1)(2);\n        *0x516a00 = vtable.ages_bynameIcE.0;\n        *0x516a04 = 0;\n        *0x516a08 = 0;\n        *0x516a0c = 0;\n        *0x516a10 = 0;\n        *0x516a14 = 0;\n        *0x516a18 = 0;\n        fcn.004af3d0();\n        *0x516a00 = 0x52b4b4;\n        *0x516a24 = 0xffff;\n        *0x516a20 = uVar2;\n        fcn.004bb510();\n        *0x5174b4 = 0;\n        *0x5174b8 = 0;\n        *0x5174ba = 0;\n        *0x5174bc = 0;\n        *0x5174c0 = 0;\n        *0x5174c4 = 0;\n        *0x5174c8 = 0;\n        *0x517440 = 0x52c1ec;\n        *0x517444 = 0x52c200;\n        fcn.004bcb40(0x516a40);\n        fcn.004bb510();\n        *0x5172d8 = 0;\n        *0x5172dc = 0;\n        *0x5172de = 0;\n        *0x5172e0 = 0;\n        *0x5172e4 = 0;\n        *0x5172e8 = 0;\n        *0x5172ec = 0;\n        *0x517260 = 0x52c1c4;\n        *0x517268 = 0x52c1d8;\n        *0x517264 = 0;\n        fcn.004bcb40(0x5169c0);\n        fcn.004bb510();\n        *0x517378 = 0;\n        *0x517374 = 0;\n        *0x51737a = 0;\n        *0x51737c = 0;\n        *0x517380 = 0;\n        *0x517384 = 0;\n        *0x517388 = 0;\n        *0x517300 = 0x52c1ec;\n        *0x517304 = 0x52c200;\n        fcn.004bcb40(0x516a00);\n        fcn.004bb510();\n        *0x517414 = 0;\n        *0x517418 = 0;\n        *0x51741a = 0;\n        *0x51741c = 0;\n        *0x517420 = 0;\n        *0x517424 = 0;\n        *0x517428 = 0;\n        *0x5173a0 = 0x52c1ec;\n        *0x5173a4 = 0x52c200;\n        fcn.004bcb40(0x516a00);\n        *0x517310 = *0x517310 | 0x2000;\n        if (*0x515a34 == 0) {\n            *0x516f90 = *0x516f90 + 1;\n            *0x5172d8 = 0x517440;\n            *0x517374 = 0x517440;\n            return;\n        }\n        LOCK();\n        *0x516f90 = *0x516f90 + 1;\n        *0x5172d8 = 0x517440;\n        *0x517374 = 0x517440;\n        return;\n    }\n    *0x516f90 = *0x516f90 + 1;\n    return;\n}\n",
        "token_count": 2221
    },
    "004baa20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004baa20(uint param_1, int32_t param_2)\n\n{\n    fcn.004af3a0(param_2 + 0x6c);\n    fcn.004af510(param_2);\n    fcn.004ba180(1);\n    return param_1;\n}\n",
        "token_count": 72
    },
    "004baab0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004baab0(int32_t param_1)\n\n{\n    uchar auStack16 [8];\n    \n    *(param_1 + 4) = 6;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0x1002;\n    fcn.004af3d0();\n    fcn.004af510(auStack16);\n    fcn.004af4c0();\n    return;\n}\n",
        "token_count": 107
    },
    "004bad10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004bad10(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint *in_ECX;\n    uint *var_70h;\n    uint var_6ch;\n    uint *var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint *var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint *var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_bp_ch;\n    \n    piVar1 = arg_ch[1];\n    iVar2 = *arg_ch;\n    if (*(*piVar1 + 0x10) == fcn.0044b2d0) {\n        var_60h = &var_58h;\n        var_58h._0_1_ = 0;\n        if (iVar2 == 1) {\n            fcn.004b0590(0, 0, \"iostream error\", 0xe);\n        }\n        else {\n            fcn.004b0590(0, 0, 0x526a18, 0xd);\n        }\n    }\n    else {\n        (**(*piVar1 + 0x10))(piVar1, iVar2);\n    }\n    var_70h = &var_58h;\n    piVar3 = fcn.004b0590(0, 0, 0x526a3b, 2);\n    var_48h = &var_40h;\n    if (*piVar3 == piVar3 + 2) {\n        var_40h = piVar3[2];\n        var_3ch = piVar3[3];\n        var_38h = piVar3[4];\n        var_34h = piVar3[5];\n    }\n    else {\n        var_40h = piVar3[2];\n        var_48h = *piVar3;\n    }\n    var_44h = piVar3[1];\n    *(piVar3 + 2) = 0;\n    *piVar3 = piVar3 + 2;\n    piVar3[1] = 0;\n    uVar4 = sub.msvcrt.dll_strlen(arg_8h);\n    piVar3 = fcn.004b0590(0, 0, arg_8h, uVar4);\n    if (*piVar3 == piVar3 + 2) {\n        var_28h = piVar3[2];\n        var_24h = piVar3[3];\n        var_20h = piVar3[4];\n        var_1ch = piVar3[5];\n        var_30h = &var_28h;\n    }\n    else {\n        var_28h = piVar3[2];\n        var_30h = *piVar3;\n    }\n    var_2ch = piVar3[1];\n    *(piVar3 + 2) = 0;\n    *piVar3 = piVar3 + 2;\n    piVar3[1] = 0;\n    fcn.004a1500(&var_30h);\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    if (var_48h != &var_40h) {\n        fcn.004c33f0(var_48h);\n    }\n    if (var_60h != var_70h) {\n        fcn.004c33f0(var_60h);\n    }\n    in_ECX[3] = piVar1;\n    *in_ECX = 0x52be00;\n    in_ECX[2] = iVar2;\n    return;\n}\n",
        "token_count": 934
    },
    "004baf40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x004c5ae9)\n// WARNING: Removing unreachable block (ram,0x004bb013)\n// WARNING: Removing unreachable block (ram,0x004bb09e)\n// WARNING: Removing unreachable block (ram,0x004c5b2b)\n\nvoid __cdecl fcn.004baf40(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t **ppiVar3;\n    uint uVar4;\n    uint *in_ECX;\n    int32_t **ppiVar5;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint *var_6ch;\n    uint var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    uint *var_48h;\n    int32_t var_44h;\n    uint32_t var_40h;\n    int32_t **var_30h;\n    int32_t *var_2ch;\n    int32_t *var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    piVar1 = fcn.004489c0();\n    if (*(*piVar1 + 0x10) == fcn.0044b2d0) {\n        var_48h = &var_40h;\n        var_44h = 0;\n        var_40h = var_40h & 0xffffff00;\n        fcn.004b0590(0, 0, \"iostream error\", 0xe);\n    }\n    else {\n        (**(*piVar1 + 0x10))(piVar1, 1);\n    }\n    var_6ch = &var_40h;\n    fcn.004b0b70(*arg_8h, arg_8h[1] + *arg_8h, 0);\n    if (0x7fffffffU - var_5ch < 2) {\n        uVar4 = fcn.004bead0(\"basic_string::append\");\n        if (var_30h != arg_8h) {\n            fcn.004c33f0(var_30h);\n        }\n        do {\n            if (var_48h != var_6ch) {\n                fcn.004c33f0(var_48h);\n            }\n            fcn.0043b0b0(uVar4);\n            if (var_48h != var_6ch) {\n                fcn.004c33f0(var_48h);\n            }\n            fcn.0043b0b0(uVar4);\n        } while( true );\n    }\n    fcn.004b2500(0x526a3b, 2);\n    if (var_5ch + var_44h < 0x10) {\ncode_r0x004bb034:\n        ppiVar3 = fcn.004b2500(var_48h, var_44h);\n        ppiVar5 = ppiVar3 + 2;\n        var_30h = *ppiVar3;\n        if (var_30h == ppiVar5) {\ncode_r0x004bb10b:\n            var_30h = &var_28h;\n            var_28h = ppiVar3[2];\n            var_24h = ppiVar3[3];\n            var_20h = ppiVar3[4];\n            var_1ch = ppiVar3[5];\n            goto code_r0x004bb062;\n        }\n    }\n    else {\n        uVar2 = 0xf;\n        if (var_48h != var_6ch) {\n            uVar2 = var_40h;\n        }\n        if (uVar2 < var_5ch + var_44h) goto code_r0x004bb034;\n        ppiVar3 = fcn.004b0590(0, 0, &var_58h, var_5ch);\n        ppiVar5 = ppiVar3 + 2;\n        var_30h = *ppiVar3;\n        if (var_30h == ppiVar5) goto code_r0x004bb10b;\n    }\n    var_28h = ppiVar3[2];\ncode_r0x004bb062:\n    var_2ch = ppiVar3[1];\n    *(ppiVar3 + 2) = 0;\n    *ppiVar3 = ppiVar5;\n    ppiVar3[1] = NULL;\n    fcn.004a1500(&var_30h);\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    if (var_48h != var_6ch) {\n        fcn.004c33f0(var_48h);\n    }\n    in_ECX[2] = 1;\n    in_ECX[3] = piVar1;\n    *in_ECX = 0x52be00;\n    return;\n}\n",
        "token_count": 1148
    },
    "004bb190": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x004c5b50)\n// WARNING: Removing unreachable block (ram,0x004bb27b)\n// WARNING: Removing unreachable block (ram,0x004bb300)\n// WARNING: Removing unreachable block (ram,0x004c5b77)\n\nvoid __cdecl fcn.004bb190(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t **ppiVar4;\n    uint uVar5;\n    uint *in_ECX;\n    int32_t **ppiVar6;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint *var_6ch;\n    uint var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    uint *var_48h;\n    int32_t var_44h;\n    uint32_t var_40h;\n    int32_t **var_30h;\n    int32_t *var_2ch;\n    int32_t *var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    iVar1 = *arg_ch;\n    piVar2 = arg_ch[1];\n    if (*(*piVar2 + 0x10) == fcn.0044b2d0) {\n        var_44h = 0;\n        var_48h = &var_40h;\n        var_40h = var_40h & 0xffffff00;\n        if (iVar1 == 1) {\n            fcn.004b0590(0, 0, \"iostream error\", 0xe);\n        }\n        else {\n            fcn.004b0590(0, 0, 0x526a18, 0xd);\n        }\n    }\n    else {\n        (**(*piVar2 + 0x10))(piVar2, iVar1);\n    }\n    var_6ch = &var_40h;\n    fcn.004b0b70(*arg_8h, arg_8h[1] + *arg_8h, 0);\n    if (0x7fffffffU - var_5ch < 2) {\n        uVar5 = fcn.004bead0(\"basic_string::append\");\n        if (var_30h != arg_8h) {\n            fcn.004c33f0(var_30h);\n        }\n        do {\n            if (var_48h != var_6ch) {\n                fcn.004c33f0(var_48h);\n            }\n            fcn.0043b0b0(uVar5);\n        } while( true );\n    }\n    fcn.004b2500(0x526a3b, 2);\n    if (var_5ch + var_44h < 0x10) {\ncode_r0x004bb299:\n        ppiVar4 = fcn.004b2500(var_48h, var_44h);\n        ppiVar6 = ppiVar4 + 2;\n        var_30h = *ppiVar4;\n        if (var_30h == ppiVar6) {\ncode_r0x004bb372:\n            var_30h = &var_28h;\n            var_28h = ppiVar4[2];\n            var_24h = ppiVar4[3];\n            var_20h = ppiVar4[4];\n            var_1ch = ppiVar4[5];\n            goto code_r0x004bb2c7;\n        }\n    }\n    else {\n        uVar3 = 0xf;\n        if (var_48h != var_6ch) {\n            uVar3 = var_40h;\n        }\n        if (uVar3 < var_5ch + var_44h) goto code_r0x004bb299;\n        ppiVar4 = fcn.004b0590(0, 0, &var_58h, var_5ch);\n        ppiVar6 = ppiVar4 + 2;\n        var_30h = *ppiVar4;\n        if (var_30h == ppiVar6) goto code_r0x004bb372;\n    }\n    var_28h = ppiVar4[2];\ncode_r0x004bb2c7:\n    var_2ch = ppiVar4[1];\n    *(ppiVar4 + 2) = 0;\n    *ppiVar4 = ppiVar6;\n    ppiVar4[1] = NULL;\n    fcn.004a1500(&var_30h);\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    if (var_48h != var_6ch) {\n        fcn.004c33f0(var_48h);\n    }\n    *in_ECX = 0x52be00;\n    in_ECX[2] = iVar1;\n    in_ECX[3] = piVar2;\n    return;\n}\n",
        "token_count": 1186
    },
    "004bb450": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004bb450(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_ch;\n    \n    *in_ECX = 0x52be14;\n    fcn.0048d530(arg_8h);\n    return;\n}\n",
        "token_count": 74
    },
    "004bc340": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004bc340(int32_t param_1, int32_t param_2)\n\n{\n    fcn.004baab0();\n    fcn.004bc220(param_1 + 0x6c);\n    *(param_1 + 0x78) = param_2;\n    *(param_1 + 0x74) = 0;\n    *(param_1 + 0x70) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = param_2 == 0;\n    return;\n}\n",
        "token_count": 136
    },
    "004bc4a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint32_t __thiscall fcn.004bc4a0(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t extraout_ECX;\n    uint32_t var_8h;\n    uint var_ch;\n    uint var_2ch;\n    uint var_1ch;\n    int32_t iStack24;\n    uint uStack20;\n    uint var_ch_2;\n    \n    if (*(param_1 + 0x78) == 0) {\n        var_8h = var_8h | 1;\n    }\n    *(param_1 + 0x14) = var_8h;\n    if ((*(param_1 + 0x10) & var_8h) == 0) {\n        return var_8h;\n    }\n    fcn.004be7b0(\"basic_ios::clear\");\n    fcn.004af3a0(iStack24 + 0x6c);\n    fcn.004baa20(iStack24, uStack20);\n    fcn.004af4c0();\n    fcn.004bc220(uStack20);\n    piVar1 = *(iStack24 + 0x78);\n    if (piVar1 != NULL) {\n        fcn.004af3a0(piVar1 + 7);\n        (**(*piVar1 + 8))(uStack20);\n        fcn.004af510(uStack20);\n        fcn.004af4c0();\n    }\n    return extraout_ECX;\n}\n",
        "token_count": 354
    },
    "004bc850": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.004bc850(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    \n    fcn.004bb510();\n    *in_ECX = 0x52ccf0;\n    *(in_ECX + 0x1d) = 0;\n    in_ECX[0x1c] = 0;\n    in_ECX[0x1e] = 0;\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    fcn.004bc340(arg_8h);\n    return;\n}\n",
        "token_count": 170
    },
    "004bc910": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.004bc910(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    \n    fcn.004bb510();\n    *in_ECX = 0x52ccf0;\n    *(in_ECX + 0x1d) = 0;\n    in_ECX[0x1c] = 0;\n    in_ECX[0x1e] = 0;\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    fcn.004bc340(arg_8h);\n    return;\n}\n",
        "token_count": 170
    },
    "004bcb40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004bcb40(int32_t param_1, int32_t param_2)\n\n{\n    fcn.004baab0();\n    fcn.004bca50(param_1 + 0x6c);\n    *(param_1 + 0x78) = param_2;\n    *(param_1 + 0x74) = 0;\n    *(param_1 + 0x76) = 0;\n    *(param_1 + 0x70) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = param_2 == 0;\n    return;\n}\n",
        "token_count": 153
    },
    "004bccc0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint32_t __thiscall fcn.004bccc0(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t extraout_ECX;\n    uint32_t var_8h;\n    uint var_ch;\n    uint var_2ch;\n    uint var_1ch;\n    int32_t iStack24;\n    uint uStack20;\n    uint var_ch_2;\n    \n    if (*(param_1 + 0x78) == 0) {\n        var_8h = var_8h | 1;\n    }\n    *(param_1 + 0x14) = var_8h;\n    if ((*(param_1 + 0x10) & var_8h) == 0) {\n        return var_8h;\n    }\n    fcn.004be7b0(\"basic_ios::clear\");\n    fcn.004af3a0(iStack24 + 0x6c);\n    fcn.004baa20(iStack24, uStack20);\n    fcn.004af4c0();\n    fcn.004bca50(uStack20);\n    piVar1 = *(iStack24 + 0x78);\n    if (piVar1 != NULL) {\n        fcn.004af3a0(piVar1 + 7);\n        (**(*piVar1 + 8))(uStack20);\n        fcn.004af510(uStack20);\n        fcn.004af4c0();\n    }\n    return extraout_ECX;\n}\n",
        "token_count": 354
    },
    "004bd020": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.004bd020(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    \n    fcn.004bb510();\n    *in_ECX = 0x52cd00;\n    *(in_ECX + 0x1d) = 0;\n    in_ECX[0x1c] = 0;\n    *(in_ECX + 0x76) = 0;\n    in_ECX[0x1e] = 0;\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    fcn.004bcb40(arg_8h);\n    return;\n}\n",
        "token_count": 185
    },
    "004bd0f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.004bd0f0(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    \n    fcn.004bb510();\n    *in_ECX = 0x52cd00;\n    *(in_ECX + 0x1d) = 0;\n    in_ECX[0x1c] = 0;\n    *(in_ECX + 0x76) = 0;\n    in_ECX[0x1e] = 0;\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    fcn.004bcb40(arg_8h);\n    return;\n}\n",
        "token_count": 187
    },
    "004bdf20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.004bdf20(int32_t *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    ulong uVar10;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_29h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0048a0a0(arg_8h);\n    if (var_20h == '\\0') goto code_r0x004bdff7;\n    iVar4 = *(*arg_8h + -0xc);\n    iVar5 = arg_8h + iVar4;\n    iVar9 = *(iVar5 + 8);\n    if (arg_10h < iVar9) {\n        uVar7 = *(iVar5 + 0xc) & 0xb0;\n        if (uVar7 != 0x20) {\n            iVar8 = iVar9 - arg_10h;\n            if (*(iVar5 + 0x75) != '\\0') {\n                var_29h._0_1_ = *(iVar5 + 0x74);\ncode_r0x004bdfa8:\n                do {\n                    piVar2 = *(arg_8h + iVar4 + 0x78);\n                    if (piVar2[5] < piVar2[6]) {\n                        *piVar2[5] = var_29h;\n                        piVar2[5] = piVar2[5] + 1;\n                    }\n                    else {\n                        iVar5 = (**(*piVar2 + 0x34))(var_29h);\n                        if (iVar5 == -1) {\n                            fcn.004bc4a0(*(arg_8h + *(*arg_8h + -0xc) + 0x14) | 1);\n                            iVar5 = *(*arg_8h + -0xc) + arg_8h;\n                            iVar4 = *(iVar5 + 0x14);\n                            goto joined_r0x004bdfe8;\n                        }\n                    }\n                    iVar4 = *(*arg_8h + -0xc);\n                    iVar8 = iVar8 + -1;\n                } while (iVar8 != 0);\n                iVar5 = arg_8h + iVar4;\n                goto code_r0x004be083;\n            }\n            piVar2 = *(iVar5 + 0x7c);\n            if (piVar2 != NULL) {\n                if (*(piVar2 + 7) == '\\0') {\n                    fcn.00451a70();\n                    var_29h._0_1_ = 0x20;\n                    if (*(*piVar2 + 0x18) != 0x451d20) {\n                        var_29h._0_1_ = (**(*piVar2 + 0x18))(0x20);\n                    }\n                }\n                else {\n                    var_29h._0_1_ = *(piVar2 + 0x3d);\n                }\n                *(iVar5 + 0x75) = 1;\n                *(iVar5 + 0x74) = var_29h;\n                iVar4 = *(*arg_8h + -0xc);\n                goto code_r0x004bdfa8;\n            }\ncode_r0x004be23c:\n            uVar10 = fcn.004be620();\n            uVar6 = uVar10;\n            if (uVar10 >> 0x20 == 1) {\n                fcn.004c3600(uVar6);\n                arg_8h = arg_8h + *(*arg_8h + -0xc);\n                arg_8h[5] = arg_8h[5] | 1;\n                if ((*(arg_8h + 4) & 1) == 0) goto code_r0x004be27d;\n                fcn.004c3a90();\n            }\n            fcn.004c3600(uVar6);\n            iVar5 = *(*arg_8h + -0xc);\n            puVar1 = arg_8h + iVar5 + 0x14;\n            *puVar1 = *puVar1 | 1;\n            if ((*(arg_8h + iVar5 + 0x10) & 1) != 0) {\n                fcn.004c3a90();\ncode_r0x004be27d:\n                uVar6 = fcn.004c3a90();\n                fcn.004c3770();\n                do {\n                    fcn.0048a160();\n                    uVar6 = fcn.0043b0b0(uVar6);\n                } while( true );\n            }\n            fcn.004c3770();\n            goto code_r0x004bdff7;\n        }\ncode_r0x004be083:\n        iVar4 = *(iVar5 + 0x14);\njoined_r0x004bdfe8:\n        if (iVar4 == 0) {\n            iVar5 = (**(**(iVar5 + 0x78) + 0x30))(arg_ch, arg_10h);\n            iVar4 = *(*arg_8h + -0xc);\n            if (arg_10h != iVar5) {\n                fcn.004bc4a0();\n                iVar4 = *(*arg_8h + -0xc);\n            }\n            iVar5 = arg_8h + iVar4;\n            if ((uVar7 == 0x20) && (*(iVar5 + 0x14) == 0)) {\n                iVar9 = iVar9 - arg_10h;\n                if (*(iVar5 + 0x75) == '\\0') {\n                    piVar2 = *(iVar5 + 0x7c);\n                    if (piVar2 == NULL) {\n                        fcn.004be620();\n                        goto code_r0x004be23c;\n                    }\n                    if (*(piVar2 + 7) == '\\0') {\n                        fcn.00451a70();\n                        var_29h._0_1_ = 0x20;\n                        if (*(*piVar2 + 0x18) != 0x451d20) {\n                            var_29h._0_1_ = (**(*piVar2 + 0x18))(0x20);\n                        }\n                    }\n                    else {\n                        var_29h._0_1_ = *(piVar2 + 0x3d);\n                    }\n                    *(iVar5 + 0x75) = 1;\n                    *(iVar5 + 0x74) = var_29h;\n                    iVar4 = *(*arg_8h + -0xc);\n                }\n                else {\n                    var_29h._0_1_ = *(iVar5 + 0x74);\n                }\n                do {\n                    piVar2 = *(arg_8h + iVar4 + 0x78);\n                    if (piVar2[5] < piVar2[6]) {\n                        *piVar2[5] = var_29h;\n                        piVar2[5] = piVar2[5] + 1;\n                    }\n                    else {\n                        iVar5 = (**(*piVar2 + 0x34))(var_29h);\n                        if (iVar5 == -1) {\n                            fcn.004bc4a0(*(arg_8h + *(*arg_8h + -0xc) + 0x14) | 1);\n                            goto code_r0x004be064;\n                        }\n                    }\n                    iVar4 = *(*arg_8h + -0xc);\n                    iVar9 = iVar9 + -1;\n                } while (iVar9 != 0);\n                iVar5 = arg_8h + iVar4;\n            }\n        }\n    }\n    else {\n        iVar9 = (**(**(iVar5 + 0x78) + 0x30))(arg_ch, arg_10h);\n        iVar5 = *(*arg_8h + -0xc) + arg_8h;\n        if (arg_10h != iVar9) {\n            fcn.004bc4a0(*(iVar5 + 0x14) | 1);\ncode_r0x004be064:\n            *(arg_8h + *(*arg_8h + -0xc) + 8) = 0;\n            goto code_r0x004bdff7;\n        }\n    }\n    *(iVar5 + 8) = 0;\ncode_r0x004bdff7:\n    iVar5 = *(*var_1ch + -0xc);\n    if (((((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) && (cVar3 = fcn.004be790(),  cVar3 == '\\0')) &&\n        (piVar2 = *(var_1ch + iVar5 + 0x78),  piVar2 != NULL)) && (iVar5 = (**(*piVar2 + 0x18))(),  iVar5 == -1)) {\n        fcn.004bc4a0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n    }\n    return arg_8h;\n}\n",
        "token_count": 2078
    },
    "004be2c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.004be2c0(int32_t *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int16_t *piVar3;\n    char cVar4;\n    int16_t iVar5;\n    int16_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    ulong uVar12;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0049fd60(arg_8h);\n    if (var_20h == '\\0') goto code_r0x004be3a7;\n    iVar10 = *(*arg_8h + -0xc) + arg_8h;\n    iVar7 = *(iVar10 + 8);\n    if (arg_10h < iVar7) {\n        uVar11 = *(iVar10 + 0xc) & 0xb0;\n        if (uVar11 != 0x20) {\n            var_2ch = iVar7 - arg_10h;\n            if (*(iVar10 + 0x76) != '\\0') {\n                iVar6 = *(iVar10 + 0x74);\ncode_r0x004be34b:\n                do {\n                    piVar2 = *(iVar10 + 0x78);\n                    piVar3 = piVar2[5];\n                    if (piVar3 < piVar2[6]) {\n                        *piVar3 = iVar6;\n                        piVar2[5] = piVar3 + 1;\n                        iVar5 = iVar6;\n                    }\n                    else {\n                        iVar5 = (**(*piVar2 + 0x34))(iVar6);\n                        iVar10 = *(*arg_8h + -0xc) + arg_8h;\n                    }\n                    if (iVar5 == -1) {\n                        fcn.004bccc0(*(iVar10 + 0x14) | 1);\n                        iVar10 = *(*arg_8h + -0xc) + arg_8h;\n                        iVar8 = *(iVar10 + 0x14);\n                        goto joined_r0x004be394;\n                    }\n                    var_2ch = var_2ch + -1;\n                } while (var_2ch != 0);\n                iVar8 = *(iVar10 + 0x14);\n                goto joined_r0x004be394;\n            }\n            if (*(iVar10 + 0x7c) != NULL) {\n                iVar6 = (**(**(iVar10 + 0x7c) + 0x28))(0x20);\n                *(iVar10 + 0x74) = iVar6;\n                iVar8 = *arg_8h;\n                *(iVar10 + 0x76) = 1;\n                iVar10 = *(iVar8 + -0xc) + arg_8h;\n                goto code_r0x004be34b;\n            }\n            fcn.004be620();\ncode_r0x004be5aa:\n            uVar12 = fcn.004be620();\n            uVar9 = uVar12;\n            if (uVar12 >> 0x20 == 1) {\n                fcn.004c3600(uVar9);\n                arg_8h = arg_8h + *(*arg_8h + -0xc);\n                arg_8h[5] = arg_8h[5] | 1;\n                if ((*(arg_8h + 4) & 1) == 0) goto code_r0x004be5eb;\n                fcn.004c3a90();\n            }\n            fcn.004c3600(uVar9);\n            iVar7 = *(*arg_8h + -0xc);\n            puVar1 = arg_8h + iVar7 + 0x14;\n            *puVar1 = *puVar1 | 1;\n            if ((*(arg_8h + iVar7 + 0x10) & 1) != 0) {\n                fcn.004c3a90();\ncode_r0x004be5eb:\n                uVar9 = fcn.004c3a90();\n                fcn.004c3770();\n                do {\n                    fcn.0049fe20();\n                    uVar9 = fcn.0043b0b0(uVar9);\n                } while( true );\n            }\n            fcn.004c3770();\n            goto code_r0x004be3a7;\n        }\n        iVar8 = *(iVar10 + 0x14);\njoined_r0x004be394:\n        if (iVar8 == 0) {\n            iVar8 = (**(**(iVar10 + 0x78) + 0x30))(arg_ch, arg_10h);\n            iVar10 = *(*arg_8h + -0xc);\n            if (arg_10h != iVar8) {\n                fcn.004bccc0();\n                iVar10 = *(*arg_8h + -0xc);\n            }\n            iVar10 = iVar10 + arg_8h;\n            if ((uVar11 == 0x20) && (*(iVar10 + 0x14) == 0)) {\n                var_2ch = iVar7 - arg_10h;\n                if (*(iVar10 + 0x76) == '\\0') {\n                    if (*(iVar10 + 0x7c) == NULL) goto code_r0x004be5aa;\n                    iVar6 = (**(**(iVar10 + 0x7c) + 0x28))(0x20);\n                    *(iVar10 + 0x74) = iVar6;\n                    iVar7 = *arg_8h;\n                    *(iVar10 + 0x76) = 1;\n                    iVar10 = *(iVar7 + -0xc) + arg_8h;\n                }\n                else {\n                    iVar6 = *(iVar10 + 0x74);\n                }\n                do {\n                    piVar2 = *(iVar10 + 0x78);\n                    piVar3 = piVar2[5];\n                    if (piVar3 < piVar2[6]) {\n                        *piVar3 = iVar6;\n                        piVar2[5] = piVar3 + 1;\n                        iVar5 = iVar6;\n                    }\n                    else {\n                        iVar5 = (**(*piVar2 + 0x34))(iVar6);\n                        iVar10 = *(*arg_8h + -0xc) + arg_8h;\n                    }\n                    if (iVar5 == -1) {\n                        fcn.004bccc0(*(iVar10 + 0x14) | 1);\n                        goto code_r0x004be416;\n                    }\n                    var_2ch = var_2ch + -1;\n                } while (var_2ch != 0);\n            }\n        }\n    }\n    else {\n        iVar7 = (**(**(iVar10 + 0x78) + 0x30))(arg_ch, arg_10h);\n        iVar10 = *(*arg_8h + -0xc) + arg_8h;\n        if (arg_10h != iVar7) {\n            fcn.004bccc0(*(iVar10 + 0x14) | 1);\ncode_r0x004be416:\n            *(arg_8h + *(*arg_8h + -0xc) + 8) = 0;\n            goto code_r0x004be3a7;\n        }\n    }\n    *(iVar10 + 8) = 0;\ncode_r0x004be3a7:\n    iVar7 = *(*var_1ch + -0xc);\n    if (((((*(var_1ch + iVar7 + 0xd) & 0x20) != 0) && (cVar4 = fcn.004be790(),  cVar4 == '\\0')) &&\n        (piVar2 = *(var_1ch + iVar7 + 0x78),  piVar2 != NULL)) && (iVar7 = (**(*piVar2 + 0x18))(),  iVar7 == -1)) {\n        fcn.004bccc0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n    }\n    return arg_8h;\n}\n",
        "token_count": 1880
    },
    "004be7b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004be7b0(uint s)\n\n{\n    int32_t **ppiVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    int32_t **ppiVar6;\n    code *pcVar7;\n    int32_t iVar8;\n    int32_t **ppiVar9;\n    int32_t *piVar10;\n    int32_t *piVar11;\n    int32_t *piVar12;\n    uint *var_70h;\n    uint var_6ch;\n    uint *var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint *var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t *var_30h;\n    int32_t *var_2ch;\n    int32_t *var_28h;\n    \n    puVar2 = fcn.004c3540(0x18);\n    piVar3 = fcn.004489c0();\n    pcVar7 = *(*piVar3 + 0x10);\n    if (pcVar7 != fcn.0044b2d0) goto code_r0x004be95b;\n    var_60h = &var_58h;\n    var_58h._0_1_ = 0;\n    fcn.004b0590(0, 0, \"iostream error\", 0xe);\n    do {\n        var_70h = &var_58h;\n        piVar4 = fcn.004b0590(0, 0, 0x526a3b, 2);\n        var_48h = &var_40h;\n        piVar11 = piVar4 + 2;\n        if (*piVar4 == piVar11) {\n            piVar10 = piVar11;\n            piVar12 = &var_40h;\n            for (iVar8 = 4; iVar8 != 0; iVar8 = iVar8 + -1) {\n                *piVar12 = *piVar10;\n                piVar10 = piVar10 + 1;\n                piVar12 = piVar12 + 1;\n            }\n        }\n        else {\n            var_40h = piVar4[2];\n            var_48h = *piVar4;\n        }\n        var_44h = piVar4[1];\n        *(piVar4 + 2) = 0;\n        *piVar4 = piVar11;\n        piVar4[1] = 0;\n        uVar5 = sub.msvcrt.dll_strlen(s);\n        ppiVar6 = fcn.004b0590(0, 0, s, uVar5);\n        var_30h = &var_28h;\n        ppiVar1 = ppiVar6 + 2;\n        if (*ppiVar6 == ppiVar1) {\n            ppiVar9 = ppiVar1;\n            piVar11 = var_30h;\n            for (iVar8 = 4; iVar8 != 0; iVar8 = iVar8 + -1) {\n                *piVar11 = *ppiVar9;\n                ppiVar9 = ppiVar9 + 1;\n                piVar11 = piVar11 + 1;\n            }\n        }\n        else {\n            var_28h = ppiVar6[2];\n            var_30h = *ppiVar6;\n        }\n        var_2ch = ppiVar6[1];\n        *(ppiVar6 + 2) = 0;\n        *ppiVar6 = ppiVar1;\n        ppiVar6[1] = NULL;\n        fcn.004a1500(&var_30h);\n        if (var_30h != &var_28h) {\n            fcn.004c33f0(var_30h);\n        }\n        if (var_48h != &var_40h) {\n            fcn.004c33f0(var_48h);\n        }\n        if (var_60h != var_70h) {\n            fcn.004c33f0(var_60h);\n        }\n        puVar2[2] = 1;\n        *puVar2 = 0x52c0a0;\n        puVar2[3] = piVar3;\n        uVar5 = fcn.004504a0();\n        fcn.004bef80(puVar2 + 4, uVar5);\n        pcVar7 = fcn.004c3af0(puVar2, 0x52892c, 0x496870);\ncode_r0x004be95b:\n        (*pcVar7)(piVar3, 1);\n    } while( true );\n}\n",
        "token_count": 1054
    },
    "004be9d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004be9d0(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004c3540(8);\n    fcn.0048fdb0(arg_8h);\n    uVar5 = fcn.004c3af0(iVar4, 0x5288c4, fcn.0048feb0);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    uVar6 = fcn.004c3b60();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0043b0b0(uVar6);\n    }\n    fcn.004c3600();\n    fcn.004c3770();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.004be7b0(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004c33e0(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 714
    },
    "004bea20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004bea20(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004c3540(8);\n    fcn.0048ff40(arg_8h);\n    uVar5 = fcn.004c3af0(iVar4, 0x5288d0, fcn.0048fff0);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    uVar6 = fcn.004c3b60();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0043b0b0(uVar6);\n    }\n    fcn.004c3600();\n    fcn.004c3770();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.004be7b0(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004c33e0(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 531
    },
    "004bea80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004bea80(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004c3540(8);\n    fcn.00491350(arg_8h);\n    uVar5 = fcn.004c3af0(iVar4, 0x5288fc, fcn.00491400);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    uVar6 = fcn.004c3b60();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0043b0b0(uVar6);\n    }\n    fcn.004c3600();\n    fcn.004c3770();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.004be7b0(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004c33e0(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 684
    },
    "004bead0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004bead0(uint param_1)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004c3540(8);\n    fcn.00491410(param_1);\n    uVar5 = fcn.004c3af0(iVar4, 0x528908, fcn.004914c0);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    uVar6 = fcn.004c3b60();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0043b0b0(uVar6);\n    }\n    fcn.004c3600();\n    fcn.004c3770();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.004be7b0(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004c33e0(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 628
    },
    "004beb20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004beb20(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004c3540(8);\n    fcn.004914d0(arg_8h);\n    uVar5 = fcn.004c3af0(iVar4, 0x528914, fcn.00491580);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    uVar6 = fcn.004c3b60();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0043b0b0(uVar6);\n    }\n    fcn.004c3600();\n    fcn.004c3770();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.004be7b0(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004c33e0(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 605
    },
    "004beb70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004beb70(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *var_30h;\n    uint var_28h;\n    \n    puVar1 = fcn.004c3540(0x10);\n    fcn.0044b380(0x5168e8, arg_8h);\n    fcn.004a1500(&var_30h);\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    *puVar1 = 0x52c08c;\n    puVar1[2] = arg_8h;\n    puVar1[3] = 0x5168e8;\n    fcn.004c3af0(puVar1, 0x528920, fcn.004915b0);\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    fcn.004c3840(puVar1);\n    fcn.0043b0b0(&var_30h);\n    fcn.004014c0(0x4c4370);\n    fcn.004014c0(0x4c4380);\n    return;\n}\n",
        "token_count": 290
    },
    "004bebe0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004bebe0(int32_t *param_1, int32_t *param_2, uchar *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint var_14h;\n    uint var_18h;\n    \n    puVar3 = param_1[2];\n    puVar5 = param_1[3];\n    *param_3 = 1;\n    if (puVar3 < puVar5) {\n        uVar1 = *puVar3;\n    }\n    else {\n        uVar1 = (**(*param_1 + 0x24))();\n        if (uVar1 == 0xffffffff) {\n            return 0;\n        }\n        puVar5 = param_1[3];\n        puVar3 = param_1[2];\n    }\n    iVar6 = 0;\ncode_r0x004bec10:\n    iVar4 = puVar5 - puVar3;\n    if (iVar4 < 2) goto code_r0x004bec4b;\n    do {\n        iVar2 = (**(*param_2 + 0x30))(puVar3, iVar4);\n        param_1[2] = param_1[2] + iVar2;\n        iVar6 = iVar6 + iVar2;\n        if (iVar2 < iVar4) {\ncode_r0x004beca6:\n            *param_3 = 0;\n            return iVar6;\n        }\n        while( true ) {\n            uVar1 = (**(*param_1 + 0x24))();\n            if (uVar1 == 0xffffffff) {\n                return iVar6;\n            }\n            puVar3 = param_1[2];\n            iVar4 = param_1[3] - puVar3;\n            if (1 < iVar4) break;\ncode_r0x004bec4b:\n            if (param_2[5] < param_2[6]) {\n                *param_2[5] = uVar1;\n                param_2[5] = param_2[5] + 1;\n            }\n            else {\n                iVar4 = (**(*param_2 + 0x34))(uVar1 & 0xff);\n                if (iVar4 == -1) goto code_r0x004beca6;\n            }\n            puVar5 = param_1[3];\n            iVar6 = iVar6 + 1;\n            if (param_1[2] < puVar5) {\n                puVar3 = param_1[2] + 1;\n                param_1[2] = puVar3;\n            }\n            else {\n                iVar4 = (**(*param_1 + 0x28))();\n                if (iVar4 == -1) {\n                    return iVar6;\n                }\n                puVar3 = param_1[2];\n                puVar5 = param_1[3];\n            }\n            if (puVar3 < puVar5) {\n                uVar1 = *puVar3;\n                goto code_r0x004bec10;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 700
    },
    "004bece0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004bece0(int32_t *param_1, int32_t *param_2, uchar *param_3)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_14h;\n    uint var_18h;\n    \n    *param_3 = 1;\n    piVar1 = param_1[2];\n    if (param_1[3] < piVar1 || param_1[3] == piVar1) {\n        iVar2 = (**(*param_1 + 0x24))();\n    }\n    else {\n        iVar2 = *piVar1;\n    }\n    iVar5 = 0;\n    do {\n        while( true ) {\n            if (iVar2 == -1) {\n                return iVar5;\n            }\n            iVar4 = param_1[3] - param_1[2];\n            if (iVar4 < 3) break;\n            iVar4 = iVar4 >> 1;\n            iVar3 = (**(*param_2 + 0x30))(param_1[2], iVar4);\n            param_1[2] = param_1[2] + iVar3 * 2;\n            iVar5 = iVar5 + iVar3;\n            if (iVar3 < iVar4) {\ncode_r0x004beda7:\n                *param_3 = 0;\n                return iVar5;\n            }\ncode_r0x004bed30:\n            iVar2 = (**(*param_1 + 0x24))();\n        }\n        piVar1 = param_2[5];\n        if (piVar1 < param_2[6]) {\n            *piVar1 = iVar2;\n            param_2[5] = piVar1 + 1;\n        }\n        else {\n            iVar2 = (**(*param_2 + 0x34))(iVar2);\n            if (iVar2 == -1) goto code_r0x004beda7;\n        }\n        iVar5 = iVar5 + 1;\n        piVar1 = param_1[2];\n        if (piVar1 < param_1[3]) {\n            iVar2 = *piVar1;\n            param_1[2] = piVar1 + 1;\n        }\n        else {\n            iVar2 = (**(*param_1 + 0x28))();\n        }\n        if (iVar2 == -1) {\n            return iVar5;\n        }\n        if (param_1[3] <= param_1[2]) goto code_r0x004bed30;\n        iVar2 = *param_1[2];\n    } while( true );\n}\n",
        "token_count": 586
    },
    "004bee20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004bee20(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004c3540(8);\n    fcn.004a14c0(arg_8h);\n    uVar5 = fcn.004c3af0(iVar4, 0x5289ac, fcn.004a15c0);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    uVar6 = fcn.004c3b60();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0043b0b0(uVar6);\n    }\n    fcn.004c3600();\n    fcn.004c3770();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.004be7b0(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004c33e0(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 557
    },
    "004bee70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004bee70(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004c3540(8);\n    fcn.004a5930(arg_8h);\n    uVar5 = fcn.004c3af0(iVar4, 0x528a38, fcn.004a59e0);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    uVar6 = fcn.004c3b60();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0043b0b0(uVar6);\n    }\n    fcn.004c3600();\n    fcn.004c3770();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.004be7b0(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004c33e0(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 504
    },
    "004beec0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nbool fcn.004beec0(int32_t param_1, int32_t param_2, char *param_3, int32_t param_4)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    bool bVar8;\n    \n    uVar5 = param_4 - 1;\n    uVar6 = param_2 - 1U;\n    if (uVar5 < param_2 - 1U) {\n        uVar6 = uVar5;\n    }\n    if (uVar6 == 0) {\n        bVar7 = false;\n        bVar8 = true;\n    }\n    else {\n        uVar4 = 0;\n        do {\n            pcVar2 = param_3 + uVar5;\n            uVar5 = uVar5 - 1;\n            pcVar1 = param_1 + uVar4;\n            uVar4 = uVar4 + 1;\n            bVar7 = *pcVar2 != *pcVar1;\n            if (uVar6 <= uVar4) break;\n        } while (!bVar7);\n        bVar8 = *pcVar2 == *pcVar1;\n    }\n    cVar3 = *(param_1 + uVar6);\n    if ((uVar5 != 0) && (!bVar7)) {\n        do {\n            pcVar1 = param_3 + uVar5;\n            uVar5 = uVar5 - 1;\n            if (uVar5 == 0) break;\n        } while (*pcVar1 == cVar3);\n        bVar8 = *pcVar1 == cVar3;\n    }\n    if (cVar3 - 1U < 0x7e) {\n        bVar8 = (*param_3 == cVar3 || *param_3 < cVar3) & bVar8;\n    }\n    return bVar8;\n}\n",
        "token_count": 444
    },
    "004bef80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004bef80(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar uStack29;\n    int32_t iStack28;\n    uchar auStack18 [2];\n    uchar auStack16 [12];\n    \n    fcn.0048d470(param_2, auStack18);\n    fcn.004bb450(auStack16);\n    if (*0x515a34 == 0) {\n        iVar2 = *(iStack28 + -4);\n        *(iStack28 + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack28 + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return;\n    }\n    fcn.0048bdd0(&uStack29);\n    return;\n}\n",
        "token_count": 211
    },
    "004bf000": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004bf000(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004c3540(8);\n    fcn.004a7c60(arg_8h);\n    uVar5 = fcn.004c3af0(iVar4, 0x528ab4, fcn.004a7d10);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    uVar6 = fcn.004c3b60();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0043b0b0(uVar6);\n    }\n    fcn.004c3600();\n    fcn.004c3770();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.004be7b0(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004c33e0(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 479
    },
    "004bf070": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004bf070(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004c3540(8);\n    fcn.004a8a30(arg_8h);\n    uVar5 = fcn.004c3af0(iVar4, 0x528ad8, fcn.004a8ae0);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    fcn.004c3840(iVar4);\n    fcn.0043b0b0(uVar5);\n    uVar6 = fcn.004c3b60();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0043b0b0(uVar6);\n    }\n    fcn.004c3600();\n    fcn.004c3770();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.004be7b0(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004c33e0(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 661
    },
    "004bf0c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nint32_t __cdecl fcn.004bf0c0(uint s, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar7;\n    char *apcStack36 [2];\n    uint32_t uStack28;\n    code *apcStack24 [2];\n    int32_t iStack16;\n    \n    uStack28 = s;\n    apcStack36[1] = 0x4bf0d3;\n    sub.msvcrt.dll_strlen();\n    apcStack36[1] = 0x4bf0e9;\n    uVar7 = fcn.004386a0();\n    iVar1 = -uVar7;\n    *(&stack0xffffffec + iVar1) = s;\n    *(&stack0xffffffe8 + iVar1) = uVar7 >> 0x20;\n    *(&stack0xfffffff0 + iVar1) = &fcn.004bf0c0::arg_ch;\n    *(&stack0xffffffe4 + iVar1) = &stack0x00000003 + iVar1 & 0xfffffff0;\n    *(&stack0xffffffe0 + iVar1) = 0x4bf109;\n    fcn.004495d0();\n    *(&stack0xffffffe4 + iVar1) = 8;\n    *(&stack0xffffffe0 + iVar1) = 0x4bf115;\n    iVar5 = fcn.004c3540();\n    *(&stack0xffffffe4 + iVar1) = &stack0x00000003 + iVar1 & 0xfffffff0;\n    *(&stack0xffffffe0 + iVar1) = 0x4bf121;\n    fcn.004914d0();\n    *(&stack0xffffffe8 + iVar1) = fcn.00491580;\n    *(&stack0xffffffe4 + iVar1) = 0x528914;\n    *(&stack0xffffffe0 + iVar1) = iVar5;\n    *(&stack0xffffffdc + iVar1) = 0x4bf13c;\n    uVar6 = fcn.004c3af0();\n    *(&stack0xffffffe0 + iVar1) = iVar5;\n    *(&stack0xffffffdc + iVar1) = 0x4c5130;\n    fcn.004c3840();\n    *(&stack0xffffffe0 + iVar1) = uVar6;\n    *(&stack0xffffffdc + iVar1) = 0x4c5138;\n    fcn.0043b0b0();\n    *(&stack0xffffffe0 + iVar1) = iVar5;\n    *(&stack0xffffffdc + iVar1) = 0x4c5140;\n    fcn.004c3840();\n    *(&stack0xffffffe0 + iVar1) = uVar6;\n    *(&stack0xffffffdc + iVar1) = 0x4c5148;\n    fcn.0043b0b0();\n    *(&stack0xffffffe0 + iVar1) = iVar5;\n    *(&stack0xffffffdc + iVar1) = 0x4c5150;\n    fcn.004c3840();\n    *(&stack0xffffffe0 + iVar1) = uVar6;\n    *(&stack0xffffffdc + iVar1) = 0x4c5158;\n    fcn.0043b0b0();\n    *(&stack0xffffffe0 + iVar1) = iVar5;\n    *(&stack0xffffffdc + iVar1) = 0x4c5160;\n    fcn.004c3840();\n    *(&stack0xffffffe0 + iVar1) = uVar6;\n    *(&stack0xffffffdc + iVar1) = 0x4c5168;\n    fcn.0043b0b0();\n    *(&stack0xffffffe0 + iVar1) = iVar5;\n    *(&stack0xffffffdc + iVar1) = 0x4c5170;\n    fcn.004c3840();\n    *(&stack0xffffffe0 + iVar1) = uVar6;\n    *(&stack0xffffffdc + iVar1) = 0x4c5178;\n    fcn.0043b0b0();\n    *(&stack0xffffffdc + iVar1) = 0x4c517d;\n    uVar7 = fcn.004c3b60();\n    *(&stack0xffffffe0 + iVar1) = uVar7;\n    if (uVar7 >> 0x20 != 1) {\n        *(&stack0xffffffdc + iVar1) = 0x4c518a;\n        fcn.0043b0b0();\n    }\n    *(&stack0xffffffdc + iVar1) = 0x4c518f;\n    fcn.004c3600();\n    *(&stack0xffffffdc + iVar1) = 0x4c5194;\n    fcn.004c3770();\n    uVar3 = *(iVar5 + 0x14) | 1;\n    *(iVar5 + 0x14) = uVar3;\n    if ((*(iVar5 + 0x10) & uVar3) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar5 + 0x1c) = 0;\n        }\n        else {\n            *(iVar5 + 0x20) = 0;\n        }\n        return iVar5 + 0x1c;\n    }\n    *(&stack0xffffffe0 + iVar1) = \"ios_base::_M_grow_words allocation failed\";\n    *(&stack0xffffffdc + iVar1) = 0x4b9efa;\n    iVar4 = fcn.004be7b0(*(&stack0xffffffe0 + iVar1));\n    puVar2 = *(iVar5 + 0x68);\n    uVar6 = extraout_ECX;\n    if ((puVar2 != &stack0xfffffffc) && (puVar2 != NULL)) {\n        *(&stack0xffffffe0 + iVar1) = puVar2;\n        *(&stack0xfffffffc + iVar1) = iVar4;\n        *(&stack0xfffffff8 + iVar1) = extraout_ECX;\n        *(&stack0xffffffdc + iVar1) = 0x4b9e75;\n        fcn.004c33e0();\n        iVar4 = *(&stack0xfffffffc + iVar1);\n        uVar6 = *(&stack0xfffffff8 + iVar1);\n    }\n    iVar1 = *(&stack0x00000020 + iVar1);\n    *(iVar5 + 0x68) = iVar4;\n    *(iVar5 + 100) = uVar6;\n    return iVar4 + iVar1 * 8;\n}\n",
        "token_count": 1540
    },
    "004c1230": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * fcn.004c1230(int32_t *param_1, int32_t param_2)\n\n{\n    uint arg_10h;\n    \n    if (param_2 != 0) {\n        arg_10h = sub.msvcrt.dll_strlen(param_2);\n        fcn.004bdf20(param_1, param_2, arg_10h);\n        return param_1;\n    }\n    fcn.004bc4a0(*(param_1 + *(*param_1 + -0xc) + 0x14) | 1);\n    return param_1;\n}\n",
        "token_count": 132
    },
    "004c1510": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.004c1510(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    ushort uVar2;\n    uint32_t arg_10h;\n    ushort *arg_ch_00;\n    int32_t *piVar3;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t iVar4;\n    ushort *puVar5;\n    ushort uStack76;\n    uint uStack64;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_bp_1ch;\n    uint var_ch;\n    \n    if (arg_ch == 0) {\n        uStack64 = 0x4c15f5;\n        fcn.004bccc0();\n        return arg_8h;\n    }\n    uStack64 = 0x4c152f;\n    arg_10h = sub.msvcrt.dll_strlen();\n    uStack76 = in_stack_ffffffcc;\n    if (arg_10h < 0x3fffffff) {\n        uStack64 = 0x4c154d;\n        arg_ch_00 = fcn.004c3410();\n        uStack76 = in_stack_ffffffcc;\n        if (arg_10h == 0) {\ncode_r0x004c15ac:\n            uStack64 = 0x4c15c2;\n            fcn.004be2c0(arg_8h, arg_ch_00, arg_10h);\n            uStack64 = 0x4c15cd;\n            fcn.004c33e0();\n            return arg_8h;\n        }\n        piVar3 = *(arg_8h + *(*arg_8h + -0xc) + 0x7c);\n        if (piVar3 != NULL) {\n            puVar5 = arg_ch_00;\n            do {\n                uStack64 = 0x4c15a2;\n                uVar2 = (**(*piVar3 + 0x28))();\n                uStack76 = in_stack_ffffffcc;\n                *puVar5 = uVar2;\n                if (puVar5 == arg_ch_00 + (arg_10h - 1)) goto code_r0x004c15ac;\n                puVar5 = puVar5 + 1;\n                piVar3 = *(arg_8h + *(*arg_8h + -0xc) + 0x7c);\n            } while (piVar3 != NULL);\n        }\n        uStack64 = 0x4c1607;\n        fcn.004be620();\n        iVar4 = extraout_EDX;\n    }\n    else {\n        uStack64 = 0x4c160e;\n        fcn.004c3b60();\n        uStack64 = 0x4c161d;\n        fcn.004c33e0();\n        iVar4 = extraout_EDX_00;\n    }\n    if (iVar4 == 1) {\n        uStack64 = 0x4c162e;\n        fcn.004c3600();\n        arg_8h = arg_8h + *(*arg_8h + -0xc);\n        arg_8h[5] = arg_8h[5] | 1;\n        if ((*(arg_8h + 4) & 1) == 0) {\n            uStack64 = 0x4c166c;\n            fcn.004c3a90();\n            uStack64 = 0x4c1679;\n            fcn.004c3770();\n            uStack64 = 0x4c1681;\n            fcn.0043b0b0();\n            uStack64 = 0x4c1686;\n            fcn.004c3770();\n            uStack64 = 0x4c168e;\n            fcn.0043b0b0();\n            piVar3 = fcn.004be2c0(in_stack_ffffffc8, &stack0xffffffb4, 1);\n            return piVar3;\n        }\n        uStack64 = 0x4c1642;\n        fcn.004c3a90();\n    }\n    uStack64 = 0x4c1647;\n    fcn.004c3600();\n    iVar4 = *(*arg_8h + -0xc);\n    puVar1 = arg_8h + iVar4 + 0x14;\n    *puVar1 = *puVar1 | 1;\n    if ((*(arg_8h + iVar4 + 0x10) & 1) != 0) {\n        uStack64 = 0x4c165d;\n        fcn.004c3a90();\n    }\n    uStack64 = 0x4c1662;\n    fcn.004c3770();\n    return arg_8h;\n}\n",
        "token_count": 1107
    },
    "004c1850": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nint32_t ** __cdecl\nfcn.004c1850(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t **ppiVar2;\n    uint uVar3;\n    int32_t **var_8h;\n    uint var_ch;\n    uint *var_10h;\n    uint var_1ch;\n    int32_t *piStack56;\n    uint *puStack52;\n    uint var_ch_2;\n    \n    uVar1 = sub.msvcrt.dll_strlen(var_ch);\n    var_8h[1] = NULL;\n    *(var_8h + 2) = 0;\n    *var_8h = var_8h + 2;\n    ppiVar2 = var_10h[1] + uVar1;\n    fcn.004b2380();\n    if (uVar1 <= 0x7fffffffU - var_8h[1]) {\n        fcn.004b2500(var_ch, uVar1);\n        fcn.004b2500(*var_10h, var_10h[1]);\n        return var_8h;\n    }\n    uVar3 = fcn.004bead0(0x524682);\n    if (var_8h + 2 != *var_8h) {\n        fcn.004c33f0(*var_8h);\n    }\n    fcn.0043b0b0(uVar3);\n    *ppiVar2 = ppiVar2 + 2;\n    fcn.004b0b70(*piStack56, piStack56[1] + *piStack56, 0);\n    fcn.004b2500(*puStack52, puStack52[1]);\n    return ppiVar2;\n}\n",
        "token_count": 509
    },
    "004c1970": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t * __cdecl fcn.004c1970(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    arg_8h[1] = 0;\n    *arg_8h = arg_8h + 2;\n    *(arg_8h + 2) = 0;\n    fcn.004b2380(arg_10h[1] + 1);\n    fcn.004b0da0(arg_8h[1], 0, 1, arg_ch);\n    fcn.004b2500(*arg_10h, arg_10h[1]);\n    return arg_8h;\n}\n",
        "token_count": 178
    },
    "004c1a10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.004c1a10(uint *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_19h;\n    uint var_ch;\n    \n    iVar1 = sub.msvcrt.dll_strlen(arg_ch);\n    uVar2 = fcn.0048b900(0, 0, &var_19h);\n    *arg_8h = uVar2;\n    fcn.0048d0f0(*(*arg_10h + -0xc) + iVar1);\n    fcn.0048c220(arg_ch, iVar1);\n    fcn.0048c2e0(arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 184
    },
    "004c1ab0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n\nint32_t * __cdecl fcn.004c1ab0(int32_t *arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_9h;\n    \n    iVar1 = *arg_ch;\n    if (*(iVar1 + -4) < 0) {\n        iVar1 = fcn.0048bef0(&var_9h, 0);\n    }\n    else if (*0x515a34 == 0) {\n        *(iVar1 + -4) = *(iVar1 + -4) + 1;\n    }\n    else {\n        LOCK();\n        *(iVar1 + -4) = *(iVar1 + -4) + 1;\n    }\n    *arg_8h = iVar1;\n    fcn.0048c2e0(arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 210
    },
    "004c1b40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.004c1b40(uint *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    uint uVar1;\n    uint var_19h;\n    uint var_ch;\n    \n    uVar1 = fcn.0048b900(0, 0, &var_19h);\n    *arg_8h = uVar1;\n    fcn.0048d0f0(*(*arg_10h + -0xc) + 1);\n    fcn.0048c470(1, arg_ch);\n    fcn.0048c2e0(arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 164
    },
    "004c1bd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nint32_t ** __cdecl\nfcn.004c1bd0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t **ppiVar2;\n    uint uVar3;\n    int32_t **var_8h;\n    uint var_ch;\n    uint *var_10h;\n    uint var_1ch;\n    int32_t *piStack56;\n    uint *puStack52;\n    uint var_ch_2;\n    \n    uVar1 = sub.msvcrt.dll_wcslen(var_ch);\n    var_8h[1] = NULL;\n    *var_8h = var_8h + 2;\n    *(var_8h + 2) = 0;\n    ppiVar2 = var_10h[1] + uVar1;\n    fcn.004b51f0();\n    if (uVar1 <= 0x3fffffffU - var_8h[1]) {\n        fcn.004b5380(var_ch, uVar1);\n        fcn.004b5380(*var_10h, var_10h[1]);\n        return var_8h;\n    }\n    uVar3 = fcn.004bead0(0x5249f2);\n    if (var_8h + 2 != *var_8h) {\n        fcn.004c33f0(*var_8h);\n    }\n    fcn.0043b0b0(uVar3);\n    *ppiVar2 = ppiVar2 + 2;\n    fcn.004b38e0(*piStack56, *piStack56 + piStack56[1] * 2, 0);\n    fcn.004b5380(*puStack52, puStack52[1]);\n    return ppiVar2;\n}\n",
        "token_count": 518
    },
    "004c1cf0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t * __cdecl fcn.004c1cf0(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    arg_8h[1] = 0;\n    *arg_8h = arg_8h + 2;\n    *(arg_8h + 2) = 0;\n    fcn.004b51f0(arg_10h[1] + 1);\n    fcn.004b3b10(arg_8h[1], 0, 1, arg_ch);\n    fcn.004b5380(*arg_10h, arg_10h[1]);\n    return arg_8h;\n}\n",
        "token_count": 180
    },
    "004c1d90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.004c1d90(uint *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_19h;\n    uint var_ch;\n    \n    iVar1 = sub.msvcrt.dll_wcslen(arg_ch);\n    puVar2 = fcn.004840b0(0, 0, &var_19h);\n    *(puVar2 + 3) = 0;\n    puVar2[2] = 0;\n    *puVar2 = 0;\n    *arg_8h = puVar2 + 3;\n    fcn.00485370(*(*arg_10h + -0xc) + iVar1);\n    fcn.00484390(arg_ch, iVar1);\n    fcn.00484470(arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 216
    },
    "004c1e40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n\nint32_t * __cdecl fcn.004c1e40(int32_t *arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_9h;\n    \n    iVar1 = *arg_ch;\n    if (*(iVar1 + -4) < 0) {\n        iVar1 = fcn.00484030(&var_9h, 0);\n    }\n    else if (*0x515a34 == 0) {\n        *(iVar1 + -4) = *(iVar1 + -4) + 1;\n    }\n    else {\n        LOCK();\n        *(iVar1 + -4) = *(iVar1 + -4) + 1;\n    }\n    *arg_8h = iVar1;\n    fcn.00484470(arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 206
    },
    "004c1ed0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.004c1ed0(uint *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    uint *puVar1;\n    uint var_19h;\n    uint var_ch;\n    \n    puVar1 = fcn.004840b0(0, 0, &var_19h);\n    puVar1[2] = 0;\n    *puVar1 = 0;\n    *(puVar1 + 3) = 0;\n    *arg_8h = puVar1 + 3;\n    fcn.00485370(*(*arg_10h + -0xc) + 1);\n    fcn.00484610(1, arg_ch);\n    fcn.00484470(arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 194
    },
    "004c2490": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.004c2490(int32_t *arg_8h, int16_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    char cVar4;\n    int16_t iVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint var_34h;\n    int32_t var_30h;\n    int16_t *var_2ch;\n    uint var_1dh;\n    uint var_ch;\n    \n    fcn.0049e450(arg_8h, 0);\n    if (var_1dh == '\\0') {\n        iVar9 = *arg_8h;\n        uVar7 = 4;\n    }\n    else {\n        iVar9 = *(arg_8h + *(*arg_8h + -0xc) + 8);\n        iVar8 = 0x7fffffff;\n        if (0 < iVar9) {\n            iVar8 = iVar9;\n        }\n        fcn.004af3a0(arg_8h + *(*arg_8h + -0xc) + 0x6c);\n        piVar6 = fcn.004c0980(&var_1dh + 1);\n        fcn.004af4c0();\n        piVar1 = *(arg_8h + *(*arg_8h + -0xc) + 0x78);\n        piVar2 = piVar1[2];\n        if (piVar1[3] < piVar2 || piVar1[3] == piVar2) {\n            iVar5 = (**(*piVar1 + 0x24))();\n        }\n        else {\n            iVar5 = *piVar2;\n        }\n        var_30h = 0;\n        piVar2 = arg_ch + iVar8 + -1;\n        while (var_2ch = arg_ch,  arg_ch != piVar2) {\n            while( true ) {\n                arg_ch = var_2ch;\n                if (iVar5 == -1) goto code_r0x004c26a8;\n                cVar4 = (**(*piVar6 + 8))(0x20, iVar5);\n                if (cVar4 != '\\0') goto code_r0x004c25a8;\n                arg_ch = var_2ch + 1;\n                *var_2ch = iVar5;\n                piVar3 = piVar1[2];\n                var_30h = var_30h + 1;\n                if (piVar3 < piVar1[3]) {\n                    iVar5 = *piVar3;\n                    piVar1[2] = piVar3 + 1;\n                }\n                else {\n                    iVar5 = (**(*piVar1 + 0x28))();\n                }\n                if (iVar5 == -1) {\n                    *arg_ch = 0;\n                    iVar9 = *arg_8h;\n                    *(arg_8h + *(iVar9 + -0xc) + 8) = 0;\n                    uVar7 = 2;\n                    goto code_r0x004c2627;\n                }\n                if (piVar1[3] <= piVar1[2]) break;\n                iVar5 = *piVar1[2];\n                var_2ch = arg_ch;\n                if (arg_ch == piVar2) goto code_r0x004c259e;\n            }\n            iVar5 = (**(*piVar1 + 0x24))();\n        }\ncode_r0x004c259e:\n        var_2ch = piVar2;\n        if (iVar5 == -1) {\ncode_r0x004c26a8:\n            *arg_ch = 0;\n            iVar9 = *arg_8h;\n            *(arg_8h + *(iVar9 + -0xc) + 8) = 0;\n            uVar7 = (-(var_30h == 0) & 4) + 2;\n        }\n        else {\ncode_r0x004c25a8:\n            *var_2ch = 0;\n            iVar9 = *arg_8h;\n            *(arg_8h + *(iVar9 + -0xc) + 8) = 0;\n            if (var_30h != 0) {\n                return arg_8h;\n            }\n            uVar7 = 4;\n        }\n    }\ncode_r0x004c2627:\n    fcn.004bccc0(uVar7 | *(arg_8h + *(iVar9 + -0xc) + 0x14));\n    return arg_8h;\n}\n",
        "token_count": 1047
    },
    "004015ef": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040160a)\n// WARNING: Removing unreachable block (ram,0x00401669)\n// WARNING: Removing unreachable block (ram,0x0040169a)\n\nvoid __cdecl fcn.004015ef(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    bool bVar1;\n    uint32_t var_10h;\n    uint var_9h;\n    \n    bVar1 = true;\n    while (bVar1) {\n        bVar1 = false;\n    }\n    bVar1 = true;\n    while (bVar1) {\n        bVar1 = false;\n    }\n    bVar1 = true;\n    while (bVar1) {\n        bVar1 = false;\n    }\n    for (var_10h = 0; var_10h < arg_10h; var_10h = var_10h + 1) {\n        (*_sym.imp.KERNEL32.dll_GetCurrentProcessorNumber)();\n        *(arg_ch + var_10h) = *(arg_ch + var_10h) ^ ((*(arg_8h + (var_10h % arg_14h >> 2)) * 0xac0) / 0x3f4) * '\\v';\n    }\n    return;\n}\n",
        "token_count": 298
    },
    "00401b72": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401ba0)\n\nuint fcn.00401b72(void)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    return 0x181;\n}\n",
        "token_count": 56
    },
    "00401d4c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00401d4c(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h, uint noname_5, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_3ch;\n    uint var_34h;\n    uchar var_1ah;\n    uint var_19h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffe4 = *0x518d70;\n    var_19h._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"shmhphenjzahbztqkdccrmywgyxsbjkcypeyivwzswmfunqtvkjeskwifagbfcghxdylpvljmj\", &var_1ah);\n    fcn.00483900();\n    for (var_ch = 0x47; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x17; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2fc0();\n    return 0x79b7;\n}\n",
        "token_count": 362
    },
    "00401e02": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.00401e02(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint noname_9, uint arg_30h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_94h;\n    uint var_7ch;\n    uint var_62h;\n    uint var_45h;\n    uint var_2ah;\n    uchar var_1dh;\n    uint var_1ch;\n    uchar var_15h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"bxcuorkbtbbympd\", &var_62h);\n    fcn.00483900();\n    var_14h = 0x1347;\n    var_15h = 1;\n    var_1ch = 0xb62;\n    var_1dh = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"cwmuiwcjecizzicoqtdhramupvnoqowkaycuxmtqvfolhfsmnrrsjtxoujhrjybcokwkabqlhqzafrzqyjywtj\", &var_62h + 1)\n    ;\n    fcn.00483900();\n    stack0xffffffd4 = *0x518d78;\n    fcn.004838d0();\n    fcn.004b29a0(\"cwmuiwcjecizzicoqtdhramupvnoqowkaycuxmtqvfolhfsmnrrsjtxoujhrjybcokwkabqlhqzafrzqyjywtj\", &var_45h);\n    fcn.004838d0();\n    fcn.004b29a0(\"cwmuiwcjecizzicoqtdhramupvnoqowkaycuxmtqvfolhfsmnrrsjtxoujhrjybcokwkabqlhqzafrzqyjywtj\", &var_2ah);\n    cVar1 = fcn.004c1830(&var_45h + 1, &var_62h + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x20; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x5f; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"ubapbs\", &var_2ah + 1);\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 812
    },
    "00402068": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00402068(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h, uint arg_34h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_a0h;\n    uint var_88h;\n    uint var_6fh;\n    uint var_51h;\n    uchar var_36h;\n    uchar var_35h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_21h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"nebgxscprcbnuhieycmovxzveuwkqqgsiowjjdlapclapsxpwbrnksvejmzelotqweghkovgowxkgtvzjo\", &var_6fh);\n    fcn.00483900();\n    stack0xffffffdc = *0x518d80;\n    fcn.004838d0();\n    fcn.004b29a0(\"xsneqyqpa\", &var_6fh + 1);\n    fcn.00483900();\n    var_21h._0_1_ = 0;\n    var_28h = 0xe4a;\n    fcn.004838d0();\n    fcn.004b29a0(\"rcabudorltzkemescmig\", &var_6fh + 2);\n    fcn.00483900();\n    var_2ch = 0x52c;\n    var_30h = 0xc3;\n    var_34h = 0x50d;\n    for (var_ch = 0x5c; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"xsneqyqpa\", &var_51h);\n    fcn.004838d0();\n    fcn.004b29a0(\"xsneqyqpa\", &var_36h);\n    cVar1 = fcn.004c1830(&var_51h + 1, &var_6fh + 3);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x5a; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (var_14h = 5; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"pzsnacwvcvicjpkrk\", &var_35h);\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 882
    },
    "004028e6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl\nfcn.004028e6(uint noname_0, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a4h;\n    uint var_8ch;\n    uint var_72h;\n    uint var_55h;\n    uint var_39h;\n    uchar var_29h;\n    uint var_28h;\n    uchar var_22h;\n    uint var_21h;\n    ulong uStack28;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x518da0;\n    fcn.004838d0();\n    fcn.004b29a0(\"ddcuqatmoadongxrzpzygdtqorulxbvjcdbwuayuqsvfgakvavmik\", &var_72h);\n    fcn.00483900();\n    stack0xffffffdc = *0x518da8;\n    var_21h._0_1_ = 1;\n    var_22h = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"mtniuxibclkaitbc\", &var_72h + 1);\n    fcn.00483900();\n    var_28h = 0x1fed;\n    var_29h = 1;\n    stack0xffffffc4 = *0x518db0;\n    fcn.004838d0();\n    fcn.004b29a0(\"mtniuxibclkaitbc\", &var_55h);\n    fcn.004838d0();\n    fcn.004b29a0(\"mtniuxibclkaitbc\", &var_39h);\n    cVar2 = fcn.004c1160(&var_55h + 1, &var_72h + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    dVar1 = *0x518db8;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x59; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x15; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 670
    },
    "00402b30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00402b30(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_24h;\n    uint size;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    \n    for (var_ch = 0; var_ch < 0x5fbf; var_ch = var_ch + 1) {\n        (*_sym.imp.KERNEL32.dll_GetCurrentProcessorNumber)();\n        sub.msvcrt.dll_malloc(0x1618);\n        (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.004015cc, 0, 0, 0);\n    }\n    for (var_10h = 0xe; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x1c; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    return 0xc3a7;\n}\n",
        "token_count": 367
    },
    "00402c16": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00402c16(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    char cVar1;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_9ch;\n    uint var_94h;\n    uint var_7ch;\n    uint var_62h;\n    uint var_45h;\n    uchar var_29h;\n    uint var_28h;\n    uchar var_22h;\n    uint var_21h;\n    uchar var_11h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0xfc;\n    fcn.004838d0();\n    fcn.004b29a0(\"ibzdswhcuchaeckmitpaiehydymvolyrservpgsvgicttkxycdt\", &var_62h);\n    fcn.00483900();\n    var_11h = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"gtxntjjrvjtfhosc\", &var_62h + 1);\n    fcn.00483900();\n    stack0xffffffdc = *0x518dc8;\n    var_21h._0_1_ = 1;\n    var_22h = 0;\n    var_28h = 0x1cb;\n    fcn.004838d0();\n    fcn.004b29a0(\"ibzdswhcuchaeckmitpaiehydymvolyrservpgsvgicttkxycdt\", &var_45h);\n    fcn.004838d0();\n    fcn.004b29a0(\"ibzdswhcuchaeckmitpaiehydymvolyrservpgsvgicttkxycdt\", &var_29h);\n    cVar1 = fcn.004c1830(&var_45h + 1, &var_62h + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x52; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 641
    },
    "00402e08": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.00402e08(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a0h;\n    uint var_88h;\n    uint var_6eh;\n    uint var_51h;\n    uchar var_35h;\n    uint var_34h;\n    ulong uStack52;\n    uchar var_21h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0x711;\n    var_14h = 0x1337;\n    fcn.004838d0();\n    fcn.004b29a0(\"auhazoqvynmhtxmyzolrebaztttmjbkgyppbiyjhutpozckbekbwxdqeshbwoxloeaqcgxvdhhxwmlpvfusrfalqocwbpxzm\", \n                 &var_6eh);\n    fcn.00483900();\n    var_18h = 0xa8f;\n    var_1ch = 0x3bf;\n    var_20h = 0x14b;\n    fcn.004838d0();\n    fcn.004b29a0(\"vqjtupnrpjtfzuksgujvjotifkqawjuomtbaaheocmtwvutsdnodcqxnbakbedrxcmcalascny\", &var_6eh + 1);\n    fcn.00483900();\n    var_21h = 1;\n    uStack52 = *0x518dd0;\n    var_34h = 0xaec;\n    fcn.004838d0();\n    fcn.004b29a0(\"vqjtupnrpjtfzuksgujvjotifkqawjuomtbaaheocmtwvutsdnodcqxnbakbedrxcmcalascny\", &var_51h);\n    fcn.004838d0();\n    fcn.004b29a0(\"vqjtupnrpjtfzuksgujvjotifkqawjuomtbaaheocmtwvutsdnodcqxnbakbedrxcmcalascny\", &var_35h);\n    cVar1 = fcn.004c1160(&var_51h + 1, &var_6eh + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x54; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 0xdbc0;\n}\n",
        "token_count": 710
    },
    "00403920": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.00403920(uint noname_0, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint noname_9, uint arg_30h, uint arg_34h)\n\n{\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x56; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x5f; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    for (var_ch = 100; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    return *0x518ee8;\n}\n",
        "token_count": 292
    },
    "004039b2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.004039b2(uint arg_8h, uint arg_ch)\n\n{\n    uint var_58h;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uchar var_2fh;\n    uchar var_2eh;\n    uchar var_2dh;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    ulong uStack36;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack36 = *0x518ef0;\n    var_24h = 0x4b8;\n    var_28h = 0xb5f;\n    var_2ch = 0x982;\n    fcn.004838d0();\n    fcn.004b29a0(\"trfkakqdivypngumhw\", &var_2fh);\n    fcn.00483900();\n    var_2dh = 0;\n    var_2eh = 1;\n    for (var_ch = 99; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x57; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x3d; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004b2fc0();\n    return 0x95be;\n}\n",
        "token_count": 379
    },
    "00403a8a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00403a8a(void)\n\n{\n    char cVar1;\n    uint var_dch;\n    uint var_d4h;\n    uint var_bch;\n    uint var_a4h;\n    uint var_8bh;\n    uint var_6dh;\n    uint var_51h;\n    ulong uStack76;\n    ulong uStack68;\n    uchar var_31h;\n    uint var_30h;\n    uint var_29h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffd4 = *0x518ef8;\n    var_29h._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"fjebtiifwifiirttqwdwlqooipkfvkdbhvmtnohrnbvcxldplgxuslolncbzpvzyrytpc\", &var_8bh);\n    fcn.00483900();\n    var_30h = 0xfba;\n    fcn.004838d0();\n    fcn.004b29a0(\"zvsoalpvmzmlibccbpjmtrtlijmrnrbprpxlyazyvllkgkmagepswaeimjdbtbstxzjzsxmmtbwbkjfd\", &var_8bh + 1);\n    fcn.00483900();\n    var_31h = 1;\n    uStack68 = *0x518f00;\n    uStack76 = *0x518f08;\n    fcn.004838d0();\n    fcn.004b29a0(\"lybebcscomurstsndjmajgtfwoguncwuivkreyqgtllobmeugh\", &var_8bh + 2);\n    fcn.00483900();\n    stack0xffffffac = *0x518f10;\n    fcn.004838d0();\n    fcn.004b29a0(\"zvsoalpvmzmlibccbpjmtrtlijmrnrbprpxlyazyvllkgkmagepswaeimjdbtbstxzjzsxmmtbwbkjfd\", &var_6dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"zvsoalpvmzmlibccbpjmtrtlijmrnrbprpxlyazyvllkgkmagepswaeimjdbtbstxzjzsxmmtbwbkjfd\", &var_51h);\n    cVar1 = fcn.004c1830(&var_6dh + 1, &var_8bh + 3);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x19; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x5e; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x15; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    for (var_18h = 2; 0 < var_18h; var_18h = var_18h + -1) {\n    }\n    for (var_1ch = 0x31; 0 < var_1ch; var_1ch = var_1ch + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 0;\n}\n",
        "token_count": 905
    },
    "00403e42": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.00403e42(void)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_ech;\n    uint var_dch;\n    uint var_c4h;\n    uint var_ach;\n    uint var_94h;\n    uint var_7ch;\n    uint var_61h;\n    uchar var_5dh;\n    uchar var_5ch [27];\n    uint var_41h;\n    uchar var_25h;\n    uint var_24h;\n    ulong uStack36;\n    uint var_18h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"mklpab\", &var_61h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"fbmnughmseqyjtybzabrnmr\", &var_61h + 1);\n    fcn.00483900();\n    var_18h = 0xe44;\n    fcn.004838d0();\n    fcn.004b29a0(0x5187de, &var_61h + 2);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"crpotwblnztruatrzzxshadztpfomxhfpqbegpwdikqlwmkcdekriwfmrfrfuidosibmhyxijbquqxgsqborjqpisema\", \n                 &var_61h + 3);\n    fcn.00483900();\n    uStack36 = *0x518f30;\n    fcn.004838d0();\n    fcn.004b29a0(\"vhtzdkhdlvesqviulaubtewjkkcjmkvykteikbkbtpvouzsdzuoqtjfmeeqveyblfpprywvjagant\", &var_5dh);\n    fcn.00483900();\n    var_24h = 0x12b2;\n    for (var_ch = 0x5c; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"crpotwblnztruatrzzxshadztpfomxhfpqbegpwdikqlwmkcdekriwfmrfrfuidosibmhyxijbquqxgsqborjqpisema\", \n                 &var_41h);\n    fcn.004838d0();\n    fcn.004b29a0(\"crpotwblnztruatrzzxshadztpfomxhfpqbegpwdikqlwmkcdekriwfmrfrfuidosibmhyxijbquqxgsqborjqpisema\", \n                 &var_25h);\n    cVar2 = fcn.004c1830(&var_41h + 1, var_5ch);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    dVar1 = *0x518f38;\n    if (cVar2 != '\\0') {\n        for (stack0xffffffec = 0x55; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 884
    },
    "0040412e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 __cdecl\nfcn.0040412e(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b4h;\n    uint var_9ch;\n    uint var_82h;\n    uint var_65h;\n    uint var_49h;\n    uint var_2dh;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"lufopujfoygikdljtuboflksmrvoozbailznbwzcqmyvygtemuewodxwpnnqpsyqiihid\", &var_82h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"gzeoafzcvqldrnplewxvccgzwlrhaf\", &var_82h + 1);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"gzeoafzcvqldrnplewxvccgzwlrhaf\", &var_65h);\n    fcn.004838d0();\n    fcn.004b29a0(\"gzeoafzcvqldrnplewxvccgzwlrhaf\", &var_49h);\n    cVar2 = fcn.004c1160(&var_65h + 1, &var_82h + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x26; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"lufopujfoygikdljtuboflksmrvoozbailznbwzcqmyvygtemuewodxwpnnqpsyqiihid\", &var_2dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"lufopujfoygikdljtuboflksmrvoozbailznbwzcqmyvygtemuewodxwpnnqpsyqiihid\", &var_11h);\n    cVar2 = fcn.004c1830(&var_2dh + 1, &var_49h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    dVar1 = *0x518f40;\n    if (cVar2 != '\\0') {\n        for (stack0xffffffec = 0x21; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 822
    },
    "00404400": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 fcn.00404400(void)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_8ch;\n    uint var_88h;\n    uint var_70h;\n    uint var_56h;\n    uint var_39h;\n    uchar var_1dh;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"sczrayursqmqvuczadimwkddzguahpsdugznbhzkwd\", &var_56h);\n    fcn.00483900();\n    uStack28 = *0x518f48;\n    fcn.004838d0();\n    fcn.004b29a0(\"uaoovvquqhairoqkobwnwurgnrffsinoqzwujknlwiklqmuyryeiuodjjvzzwbrdeconanamd\", &var_56h + 1);\n    fcn.00483900();\n    var_1ch = 0x3a2;\n    fcn.004838d0();\n    fcn.004b29a0(\"uaoovvquqhairoqkobwnwurgnrffsinoqzwujknlwiklqmuyryeiuodjjvzzwbrdeconanamd\", &var_39h);\n    fcn.004838d0();\n    fcn.004b29a0(\"uaoovvquqhairoqkobwnwurgnrffsinoqzwujknlwiklqmuyryeiuodjjvzzwbrdeconanamd\", &var_1dh);\n    cVar2 = fcn.004c1830(&var_39h + 1, &var_56h + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    dVar1 = *0x518f50;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x21; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x1a; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 600
    },
    "004045cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint fcn.004045cc(void)\n\n{\n    char cVar1;\n    uint var_18ch;\n    uint var_180h;\n    uint var_168h;\n    uint var_150h;\n    uint var_138h;\n    uint var_120h;\n    uchar var_11ch [27];\n    uint var_101h;\n    uint var_e5h;\n    uint var_c9h;\n    uint var_adh;\n    uint var_91h;\n    uint var_75h;\n    uint var_59h;\n    uchar var_3dh;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    ulong uStack52;\n    ulong uStack44;\n    ulong uStack36;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"vjonxwpmpqsbdebwvuwupdc\", &var_120h);\n    fcn.00483900();\n    uStack36 = *0x518f58;\n    fcn.004838d0();\n    fcn.004b29a0(\"azjbsvtzuzlpxiddqhiwlfphdfdfablewwcfvpitjmebnisnjeizbzrznjfjndpynupmspkkhhpx\", &var_120h + 1);\n    fcn.00483900();\n    uStack44 = *0x518f60;\n    uStack52 = *0x518f68;\n    var_34h = 0x300;\n    fcn.004838d0();\n    fcn.004b29a0(\"kcpnttuioeicehqvmzetderjlijbxkwhquzgpuzbamtvuhegzkqb\", &var_120h + 2);\n    fcn.00483900();\n    var_38h = 0xc66;\n    var_3ch = 0x47c;\n    fcn.004838d0();\n    fcn.004b29a0(\"nirtfwjustqquiamrvdncsilvjjqvttdiqnbkqzzrvswpjfpk\", &var_120h + 3);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"azjbsvtzuzlpxiddqhiwlfphdfdfablewwcfvpitjmebnisnjeizbzrznjfjndpynupmspkkhhpx\", &var_101h);\n    fcn.004838d0();\n    fcn.004b29a0(\"azjbsvtzuzlpxiddqhiwlfphdfdfablewwcfvpitjmebnisnjeizbzrznjfjndpynupmspkkhhpx\", &var_e5h);\n    cVar1 = fcn.004c1830(&var_101h + 1, var_11ch);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0xd; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"kcpnttuioeicehqvmzetderjlijbxkwhquzgpuzbamtvuhegzkqb\", &var_c9h);\n    fcn.004838d0();\n    fcn.004b29a0(\"kcpnttuioeicehqvmzetderjlijbxkwhquzgpuzbamtvuhegzkqb\", &var_adh);\n    cVar1 = fcn.004c1830(&var_c9h + 1, &var_e5h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x41; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"kcpnttuioeicehqvmzetderjlijbxkwhquzgpuzbamtvuhegzkqb\", &var_91h);\n    fcn.004838d0();\n    fcn.004b29a0(\"kcpnttuioeicehqvmzetderjlijbxkwhquzgpuzbamtvuhegzkqb\", &var_75h);\n    cVar1 = fcn.004c1160(&var_91h + 1, &var_adh + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x40; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"kcpnttuioeicehqvmzetderjlijbxkwhquzgpuzbamtvuhegzkqb\", &var_59h);\n    fcn.004838d0();\n    fcn.004b29a0(\"kcpnttuioeicehqvmzetderjlijbxkwhquzgpuzbamtvuhegzkqb\", &var_3dh);\n    cVar1 = fcn.004c1160(&var_59h + 1, &var_75h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_18h = 0x1c; 0 < var_18h; var_18h = var_18h + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 0;\n}\n",
        "token_count": 1485
    },
    "00404b5a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00404b5a(uint noname_0, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint noname_6, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    int32_t var_5h;\n    \n    for (stack0xfffffff8 = 0x3d; 0 < stack0xfffffff8; unique0x00007a80 = stack0xfffffff8 + -1) {\n    }\n    return 1;\n}\n",
        "token_count": 176
    },
    "00404ba8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00404ba8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_14ch;\n    uint var_144h;\n    uint var_12ch;\n    uint var_112h;\n    uint var_f5h;\n    uint var_d9h;\n    uint var_bdh;\n    uint var_a1h;\n    uint var_85h;\n    uint var_69h;\n    uint var_4dh;\n    uint var_31h;\n    ulong uStack44;\n    uint var_20h;\n    int32_t var_19h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_19h._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"rrqbzihiorhbtbbnsrqgzcitgxwniunlehfnrkxaumcheibxpvbdonnrgzlpqecrnrjrkxkp\", &var_112h);\n    fcn.00483900();\n    var_20h = 0x9d4;\n    fcn.004838d0();\n    fcn.004b29a0(\"ylpoajvbkvirrurwetmyfzxubyuibryqlwamlwtlhrelbbkyrjf\", &var_112h + 1);\n    fcn.00483900();\n    uStack44 = *0x518f70;\n    stack0xffffffcc = *0x518f78;\n    fcn.004838d0();\n    fcn.004b29a0(\"rrqbzihiorhbtbbnsrqgzcitgxwniunlehfnrkxaumcheibxpvbdonnrgzlpqecrnrjrkxkp\", &var_f5h);\n    fcn.004838d0();\n    fcn.004b29a0(\"rrqbzihiorhbtbbnsrqgzcitgxwniunlehfnrkxaumcheibxpvbdonnrgzlpqecrnrjrkxkp\", &var_d9h);\n    cVar1 = fcn.004c1160(&var_f5h + 1, &var_112h + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x12; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"ylpoajvbkvirrurwetmyfzxubyuibryqlwamlwtlhrelbbkyrjf\", &var_bdh);\n    fcn.004838d0();\n    fcn.004b29a0(\"ylpoajvbkvirrurwetmyfzxubyuibryqlwamlwtlhrelbbkyrjf\", &var_a1h);\n    cVar1 = fcn.004c1160(&var_bdh + 1, &var_d9h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 7; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"rrqbzihiorhbtbbnsrqgzcitgxwniunlehfnrkxaumcheibxpvbdonnrgzlpqecrnrjrkxkp\", &var_85h);\n    fcn.004838d0();\n    fcn.004b29a0(\"rrqbzihiorhbtbbnsrqgzcitgxwniunlehfnrkxaumcheibxpvbdonnrgzlpqecrnrjrkxkp\", &var_69h);\n    cVar1 = fcn.004c1160(&var_85h + 1, &var_a1h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x45; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"rrqbzihiorhbtbbnsrqgzcitgxwniunlehfnrkxaumcheibxpvbdonnrgzlpqecrnrjrkxkp\", &var_4dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"rrqbzihiorhbtbbnsrqgzcitgxwniunlehfnrkxaumcheibxpvbdonnrgzlpqecrnrjrkxkp\", &var_31h);\n    cVar1 = fcn.004c1830(&var_4dh + 1, &var_69h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffe4 = 0x22; 0 < stack0xffffffe4; unique0x00007a80 = stack0xffffffe4 + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 1;\n}\n",
        "token_count": 1400
    },
    "00405076": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 fcn.00405076(void)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_ech;\n    uint var_e0h;\n    uint var_c5h;\n    uint var_a9h;\n    uint var_8dh;\n    uint var_71h;\n    uint var_55h;\n    uint var_39h;\n    uchar var_1eh;\n    uchar var_1dh;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_1ch = 0x8a4;\n    var_1dh = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"hslkdthcdiohuvibsjanaputrwerdregyzlhspvqtnkxeamrwhpefjxfhtfdcmwktmcuq\", &var_c5h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"hslkdthcdiohuvibsjanaputrwerdregyzlhspvqtnkxeamrwhpefjxfhtfdcmwktmcuq\", &var_a9h);\n    fcn.004838d0();\n    fcn.004b29a0(\"hslkdthcdiohuvibsjanaputrwerdregyzlhspvqtnkxeamrwhpefjxfhtfdcmwktmcuq\", &var_8dh);\n    cVar2 = fcn.004c1830(&var_a9h + 1, &var_c5h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar2 != '\\0') {\n        for (var_ch = 9; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"hslkdthcdiohuvibsjanaputrwerdregyzlhspvqtnkxeamrwhpefjxfhtfdcmwktmcuq\", &var_71h);\n    fcn.004838d0();\n    fcn.004b29a0(\"hslkdthcdiohuvibsjanaputrwerdregyzlhspvqtnkxeamrwhpefjxfhtfdcmwktmcuq\", &var_55h);\n    cVar2 = fcn.004c1160(&var_71h + 1, &var_8dh + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar2 != '\\0') {\n        for (var_10h = 0x32; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"hslkdthcdiohuvibsjanaputrwerdregyzlhspvqtnkxeamrwhpefjxfhtfdcmwktmcuq\", &var_39h);\n    fcn.004838d0();\n    fcn.004b29a0(\"hslkdthcdiohuvibsjanaputrwerdregyzlhspvqtnkxeamrwhpefjxfhtfdcmwktmcuq\", &var_1eh);\n    cVar2 = fcn.004c1830(&var_39h + 1, &var_55h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    dVar1 = *0x518f80;\n    if (cVar2 != '\\0') {\n        for (var_14h = 0x29; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    for (var_18h = 0x60; 0 < var_18h; var_18h = var_18h + -1) {\n    }\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 1042
    },
    "00405430": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.00405430(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint noname_10, uint noname_11, uint noname_12, uint arg_3ch, \n            uint arg_40h)\n\n{\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x44; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x40; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    return *0x518f90;\n}\n",
        "token_count": 298
    },
    "00409385": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409385(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if ((arg_8h == 1) && (arg_ch == 0xffff)) {\n        fcn.004ba260();\n        fcn.004014c0(fcn.00409373);\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "00409438": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.00409438(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint noname_6, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h, uint arg_34h)\n\n{\n    char cVar1;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_70h;\n    uint var_55h;\n    uint var_39h;\n    uchar var_1dh;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0x130;\n    var_14h = 0xea0;\n    var_18h = 0x508;\n    var_1ch = 0x1772;\n    fcn.004838d0();\n    fcn.004b29a0(\"eobbstpqyusrykwbdcsbdortzufddymgcoududqvygsiltkntxitveeeaedqxbqoexmfb\", &var_55h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"eobbstpqyusrykwbdcsbdortzufddymgcoududqvygsiltkntxitveeeaedqxbqoexmfb\", &var_39h);\n    fcn.004838d0();\n    fcn.004b29a0(\"eobbstpqyusrykwbdcsbdortzufddymgcoududqvygsiltkntxitveeeaedqxbqoexmfb\", &var_1dh);\n    cVar1 = fcn.004c1830(&var_39h + 1, &var_55h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x1a; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    return 0x15af1;\n}\n",
        "token_count": 616
    },
    "004095ea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.004095ea(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_b0h;\n    uint var_98h;\n    uint var_80h;\n    uint var_68h;\n    uchar var_64h [27];\n    uint var_49h;\n    uchar var_2dh;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    ulong uStack36;\n    ulong uStack28;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"dzwzbrqktxyicsipfgqixsvsbvnzjcefcecedrwqhbdllqplcyppxhuustsarorfvr\", &var_68h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"udzaaogxsgwwyx\", &var_68h + 1);\n    fcn.00483900();\n    uStack28 = *0x521de8;\n    fcn.004838d0();\n    fcn.004b29a0(\"bqkvhntamvgbnmgzafaauuwbkdhizgwebfzfkblkjyynmlnxmsvsbjolltawcvopkzoz\", &var_68h + 2);\n    fcn.00483900();\n    uStack36 = *0x521df0;\n    fcn.004838d0();\n    fcn.004b29a0(\"ecivgxhryxfxshjlcqagjhklcqfbzbobirrvnwmgfcgmnedksiaxxkhgasibbcqmjiowahsdcyrqsnwcl\", &var_68h + 3);\n    fcn.00483900();\n    var_24h = 0xdf0;\n    var_28h = 0x15fe;\n    var_2ch = 0xa81;\n    for (var_ch = 0x62; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"ecivgxhryxfxshjlcqagjhklcqfbzbobirrvnwmgfcgmnedksiaxxkhgasibbcqmjiowahsdcyrqsnwcl\", &var_49h);\n    fcn.004838d0();\n    fcn.004b29a0(\"ecivgxhryxfxshjlcqagjhklcqfbzbobirrvnwmgfcgmnedksiaxxkhgasibbcqmjiowahsdcyrqsnwcl\", &var_2dh);\n    cVar1 = fcn.004c1830(&var_49h + 1, var_64h);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0xf; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 0x14e11;\n}\n",
        "token_count": 836
    },
    "004099d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint fcn.004099d8(void)\n\n{\n    uint var_5ch;\n    uint var_50h;\n    uint var_35h;\n    uint var_30h;\n    uint var_2ch;\n    ulong uStack44;\n    ulong uStack36;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0x1e1b;\n    fcn.004838d0();\n    fcn.004b29a0(\"xhncxbcpnkdoakpgcueqpiahtowijwyjuecqbjahgeuzouakadkzvhwocjwmnlm\", &var_35h);\n    fcn.00483900();\n    var_14h = 0x168;\n    var_18h = 0x286;\n    uStack36 = *0x521e00;\n    uStack44 = *0x521e08;\n    var_2ch = 0xd30;\n    var_30h = 0x81;\n    stack0xffffffc8 = 0x1d7c;\n    for (var_ch = 0x2b; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2fc0();\n    return 0;\n}\n",
        "token_count": 325
    },
    "00409cd2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __fastcall fcn.00409cd2(uint param_1)\n\n{\n    char cVar1;\n    uint var_fch;\n    uint var_f4h;\n    uint var_d9h;\n    uint var_bdh;\n    uint var_a1h;\n    uint var_85h;\n    uint var_69h;\n    uint var_4dh;\n    uchar var_32h;\n    uchar var_31h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_25h;\n    uint var_24h;\n    uchar var_1dh;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_18h = 0x1187;\n    fcn.004838d0();\n    fcn.004b29a0(\"uattuk\", &var_d9h);\n    fcn.00483900();\n    var_1ch = 0x95a;\n    var_1dh = 1;\n    var_24h = 0xa5a;\n    var_25h = 1;\n    var_2ch = 0x101;\n    var_30h = 0x11a2;\n    fcn.004838d0();\n    fcn.004b29a0(\"uattuk\", &var_bdh);\n    fcn.004838d0();\n    fcn.004b29a0(\"uattuk\", &var_a1h);\n    cVar1 = fcn.004c1160(&var_bdh + 1, &var_d9h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x57; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"uattuk\", &var_85h);\n    fcn.004838d0();\n    fcn.004b29a0(\"uattuk\", &var_69h);\n    cVar1 = fcn.004c1160(&var_85h + 1, &var_a1h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x51; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"uattuk\", &var_4dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"uattuk\", &var_32h);\n    cVar1 = fcn.004c1160(&var_4dh + 1, &var_69h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0xe; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"hfmwgnze\", &var_31h);\n    fcn.00483900();\n    fcn.004b2fc0();\n    return param_1;\n}\n",
        "token_count": 873
    },
    "0040a19a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.0040a19a(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint in_ECX;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_3ch;\n    uint var_2ch;\n    uchar var_12h;\n    uchar var_11h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0x106;\n    fcn.004838d0();\n    fcn.004b29a0(\"cczobgeaseophvujvpatxclulzknazuomwwrompaujszgxjnqusxeukldkkxirmpcscpdnpmcbhzqxwrlm\", &var_12h);\n    fcn.00483900();\n    for (var_ch = 0x42; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(0x5193db, &var_11h);\n    fcn.00483900();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 316
    },
    "0040a282": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040a282(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint noname_4, uint noname_5, uint noname_6, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_29h;\n    ulong uStack36;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"kmdwrfjexcztyeaqoyfuv\", &var_29h);\n    fcn.00483900();\n    uStack36 = *0x521e38;\n    stack0xffffffd4 = *0x521e40;\n    for (var_ch = 0x4e; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (stack0xffffffec = 0x13; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n    }\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 339
    },
    "0040a334": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl\nfcn.0040a334(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h)\n\n{\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_44h;\n    uint var_2ah;\n    uint var_24h;\n    uchar var_1eh;\n    uchar var_1dh;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"ajbvybvsnkhziusyjqzpjqdtcjoohppkncqqpbrmyywrbygmlgxgehvwmtkflnclcldabfxqgmr\", &var_2ah);\n    fcn.00483900();\n    uStack28 = *0x521e48;\n    var_1ch = 0x9b8;\n    var_1dh = 0;\n    var_1eh = 0;\n    var_24h = 0x1756;\n    stack0xffffffd4 = 0x460;\n    fcn.004838d0();\n    fcn.004b29a0(\"wxghorlkjvuxnjbjfeowmmnqjgeuvcglnzbzdisdhxlarrsipfnmvojxijeqqukdlruyyiwokdaacccvo\", &var_2ah + 1);\n    fcn.00483900();\n    for (var_ch = 0x5d; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 468
    },
    "0040a456": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a456(uint arg_8h, uint arg_ch)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_11h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x32; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return 0xf190;\n}\n",
        "token_count": 105
    },
    "0040a496": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.0040a496(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint arg_28h, uint arg_2ch)\n\n{\n    uint in_ECX;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_70h;\n    uint var_58h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    ulong uStack44;\n    ulong uStack36;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack36 = *0x521e58;\n    uStack44 = *0x521e60;\n    fcn.004838d0();\n    fcn.004b29a0(\"hopndfbfehnjbqobsharqohgxuqsvpkqjaqazqfooxxxqbquxrpnvlvidhfbmcfckuwdccpirzcjowj\", &var_40h);\n    fcn.00483900();\n    var_2ch = 0x73;\n    var_30h = 0x1a4b;\n    var_34h = 0x331;\n    fcn.004838d0();\n    fcn.004b29a0(\"hanyloumnhnheugidgeisngxlnmgh\", &var_40h + 1);\n    fcn.00483900();\n    var_38h = 0x296;\n    fcn.004838d0();\n    fcn.004b29a0(\"yezlhasynqlmbuhehec\", &var_40h + 2);\n    fcn.00483900();\n    var_3ch = 0x7af;\n    for (var_ch = 0x1d; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x1d; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x21; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"vaylieszrbhhynelz\", &var_40h + 3);\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 690
    },
    "0040a87a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.0040a87a(void)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_8ch;\n    uint var_7ch;\n    uint var_61h;\n    uint var_45h;\n    uint var_29h;\n    ulong uStack36;\n    uchar var_13h;\n    uchar var_12h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 1;\n    var_12h = 0;\n    var_13h = 0;\n    uStack36 = *0x521e98;\n    stack0xffffffd4 = *0x521ea0;\n    fcn.004838d0();\n    fcn.004b29a0(0x5195c6, &var_61h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(0x5195c6, &var_45h);\n    fcn.004838d0();\n    fcn.004b29a0(0x5195c6, &var_29h);\n    cVar2 = fcn.004c1160(&var_45h + 1, &var_61h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    dVar1 = *0x521ea8;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x43; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (stack0xffffffec = 0x5d; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n    }\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 473
    },
    "0040a9fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040a9fc(uint noname_0, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_12ch;\n    uint var_120h;\n    uint var_108h;\n    uint var_f0h;\n    uint var_d8h;\n    uint var_c0h;\n    uint var_a5h;\n    uchar var_a1h;\n    uchar var_a0h [27];\n    uint var_85h;\n    uint var_69h;\n    uint var_4dh;\n    uint var_32h;\n    uchar var_21h;\n    uint var_20h;\n    int32_t var_19h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_19h._0_1_ = 1;\n    var_20h = 0x1ab4;\n    var_21h = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"onyinlojjdoyqh\", &var_a5h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"asdr\", &var_a5h + 1);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"mekbrqyxoasxmbgkeqhwipppqsqyakokzccfjpnybmsptzqutzwgzzkzhhahndtfjwpfuexcmzscevspqequ\", &var_a5h + 2);\n    fcn.00483900();\n    stack0xffffffcc = *0x521eb0;\n    fcn.004838d0();\n    fcn.004b29a0(\"qiumiboinqufbihcatfvgtgnpepyztuvsklyzkuvhvqaelofpzbmrcqadjuqddrebayfxpyypsgbtmciv\", &var_a5h + 3);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"cjytmovymokipnnsqypmohbblcrefebsnwvxaqerfzqwzpumhqxavfiiluem\", &var_a1h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"cjytmovymokipnnsqypmohbblcrefebsnwvxaqerfzqwzpumhqxavfiiluem\", &var_85h);\n    fcn.004838d0();\n    fcn.004b29a0(\"cjytmovymokipnnsqypmohbblcrefebsnwvxaqerfzqwzpumhqxavfiiluem\", &var_69h);\n    cVar1 = fcn.004c1830(&var_85h + 1, var_a0h);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 99; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x4f; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"onyinlojjdoyqh\", &var_4dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"onyinlojjdoyqh\", &var_32h);\n    cVar1 = fcn.004c1160(&var_4dh + 1, &var_69h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x2d; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    for (stack0xffffffe4 = 0x17; 0 < stack0xffffffe4; unique0x00007a80 = stack0xffffffe4 + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"tbmrwtrysrs\", &var_32h + 1);\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 1210
    },
    "0040ae82": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.0040ae82(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_2ch;\n    uchar var_13h;\n    uchar var_12h;\n    uchar var_11h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0xddf;\n    fcn.004838d0();\n    fcn.004b29a0(\"edwdtzwwpgovqrhzhqegouzweoayznqoioywgnjcpvtcbhmvivjenbhxyklfztjvhnqfqqzutefprizxym\", &var_13h);\n    fcn.00483900();\n    var_11h = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"riwwmkbpctgkwwagswvxbanomzwehmtgslmvhbuhopgckirkateypkhvzpvmxyepl\", &var_12h);\n    fcn.00483900();\n    for (var_ch = 0x1c; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 370
    },
    "0040c15e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0040c15e(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint noname_9, uint arg_30h, uint arg_34h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_8ch;\n    uint var_74h;\n    uint var_5ah;\n    uint var_3dh;\n    uchar var_23h;\n    uchar var_22h;\n    uint var_21h;\n    ulong uStack28;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0x4a7;\n    uStack28 = *0x521f70;\n    stack0xffffffdc = *0x521f78;\n    fcn.004838d0();\n    fcn.004b29a0(\"dpzpwtjrannbucmvjsjbpqikjmzjzxitxjqgwtgfojzvifdhxxss\", &var_5ah);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"ilbknyaorywhgnnlyjyfbylzxcqphofvlkpqhkxycbjpgfgwrlyegxv\", &var_5ah + 1);\n    fcn.00483900();\n    var_21h._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"dpzpwtjrannbucmvjsjbpqikjmzjzxitxjqgwtgfojzvifdhxxss\", &var_3dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"dpzpwtjrannbucmvjsjbpqikjmzjzxitxjqgwtgfojzvifdhxxss\", &var_23h);\n    cVar1 = fcn.004c1830(&var_3dh + 1, &var_5ah + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x28; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"seuymxytoyhvdthw\", &var_22h);\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 749
    },
    "0040c528": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0040c528(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    char cVar1;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_84h;\n    uint var_69h;\n    uint var_4dh;\n    uchar var_32h;\n    uint var_31h;\n    ulong uStack44;\n    ulong uStack36;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack36 = *0x521f90;\n    uStack44 = *0x521f98;\n    fcn.004838d0();\n    fcn.004b29a0(\"gqgddjgyebfnyefbhqdexsehdjtardbwizopbtmkpx\", &var_69h);\n    fcn.00483900();\n    stack0xffffffcc = *0x521fa0;\n    var_31h._0_1_ = 1;\n    for (var_ch = 6; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"gqgddjgyebfnyefbhqdexsehdjtardbwizopbtmkpx\", &var_4dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"gqgddjgyebfnyefbhqdexsehdjtardbwizopbtmkpx\", &var_32h);\n    cVar1 = fcn.004c1160(&var_4dh + 1, &var_69h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x27; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (var_14h = 0x10; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004b2fc0();\n    return 0x1785b;\n}\n",
        "token_count": 635
    },
    "0040c726": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040c726(uint arg_8h, uint arg_ch)\n\n{\n    uint var_78h;\n    uint var_74h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_41h;\n    ulong uStack60;\n    uint var_29h;\n    ulong uStack36;\n    uchar var_15h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"auppvn\", &var_41h);\n    fcn.00483900();\n    var_14h = 0x1a53;\n    var_15h = 1;\n    uStack36 = *0x521fa8;\n    stack0xffffffd4 = *0x521fb0;\n    var_29h._0_1_ = 1;\n    uStack60 = *0x521fb8;\n    stack0xffffffbc = *0x521fc0;\n    for (var_ch = 0x11; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x4f; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2fc0();\n    return 0x145a9;\n}\n",
        "token_count": 353
    },
    "0040c8de": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0040c8de(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint noname_5, uint noname_6, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h, uint arg_34h, uint noname_12, uint arg_3ch, \n            uint arg_40h)\n\n{\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_2dh;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_24h;\n    uint var_20h;\n    uchar var_1ah;\n    uint var_19h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"qttvvnkrdhuvzjcntvssmlhcjgohunyqwqdhzxkkvymxja\", &var_2dh);\n    fcn.00483900();\n    stack0xffffffe4 = *0x521fd8;\n    var_19h._0_1_ = 1;\n    var_1ah = 0;\n    var_20h = 0x208;\n    var_24h = 0x356;\n    var_25h = 1;\n    var_26h = 0;\n    stack0xffffffd0 = 0x59a;\n    for (var_ch = 0x36; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2fc0();\n    return 0xb3b4;\n}\n",
        "token_count": 489
    },
    "0040c9d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 fcn.0040c9d0(void)\n\n{\n    uint var_24h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0xc; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x58; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    for (var_ch = 0x2e; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    return *0x521fe0;\n}\n",
        "token_count": 168
    },
    "0040ca2e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040ca2e(void)\n\n{\n    uint var_9ch;\n    uint var_90h;\n    uint var_78h;\n    uint var_60h;\n    uint var_48h;\n    uint var_44h;\n    ulong uStack68;\n    uint var_31h;\n    uint var_24h;\n    ulong uStack36;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack36 = *0x521fe8;\n    var_24h = 0xa08;\n    stack0xffffffcc = *0x521ff0;\n    fcn.004838d0();\n    fcn.004b29a0(0x519f53, &var_48h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"xmaufuwwzrotuoawrpmdhuipqrsjzfmyyrratmjrfputwftrucuqmdohlnduymsbuaxtagyuramrfvkpolsfrdbvwdiegu\", \n                 &var_48h + 1);\n    fcn.00483900();\n    var_31h._0_1_ = 1;\n    uStack68 = *0x521ff8;\n    var_44h = 0x6a6;\n    fcn.004838d0();\n    fcn.004b29a0(\"jcmsojgxykbicgncn\", &var_48h + 2);\n    fcn.00483900();\n    var_48h._3_1_ = 1;\n    for (var_ch = 0x14; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x1f; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x12; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 1;\n}\n",
        "token_count": 547
    },
    "0040cbba": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.0040cbba(void)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_bch;\n    uint var_ach;\n    uint var_91h;\n    uint var_75h;\n    uint var_59h;\n    uint var_3dh;\n    uchar var_22h;\n    uint var_21h;\n    ulong uStack28;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x522000;\n    stack0xffffffdc = *0x522008;\n    fcn.004838d0();\n    fcn.004b29a0(\"wumnvdwjxxurkgbtzynsswycbrmsvotllgpkacddutnwwqngodtzgkluakyaiembxzosbrutrre\", &var_91h);\n    fcn.00483900();\n    var_21h._0_1_ = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"wumnvdwjxxurkgbtzynsswycbrmsvotllgpkacddutnwwqngodtzgkluakyaiembxzosbrutrre\", &var_75h);\n    fcn.004838d0();\n    fcn.004b29a0(\"wumnvdwjxxurkgbtzynsswycbrmsvotllgpkacddutnwwqngodtzgkluakyaiembxzosbrutrre\", &var_59h);\n    cVar2 = fcn.004c1160(&var_75h + 1, &var_91h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x5e; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"wumnvdwjxxurkgbtzynsswycbrmsvotllgpkacddutnwwqngodtzgkluakyaiembxzosbrutrre\", &var_3dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"wumnvdwjxxurkgbtzynsswycbrmsvotllgpkacddutnwwqngodtzgkluakyaiembxzosbrutrre\", &var_22h);\n    cVar2 = fcn.004c1160(&var_3dh + 1, &var_59h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    dVar1 = *0x522010;\n    if (cVar2 != '\\0') {\n        for (var_10h = 0x60; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 765
    },
    "0040ce04": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040ce04(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    char cVar1;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_64h;\n    uint var_49h;\n    uint var_2dh;\n    uchar var_12h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"wdegunoblakmynwmodbomswigzjjnsadarvdqzwzojenopcwkntjmxqudkaerbxdaccbsaqjstiiptjsnwjm\", &var_49h);\n    fcn.00483900();\n    for (var_ch = 0x1d; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"wdegunoblakmynwmodbomswigzjjnsadarvdqzwzojenopcwkntjmxqudkaerbxdaccbsaqjstiiptjsnwjm\", &var_2dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"wdegunoblakmynwmodbomswigzjjnsadarvdqzwzojenopcwkntjmxqudkaerbxdaccbsaqjstiiptjsnwjm\", &var_12h);\n    cVar1 = fcn.004c1160(&var_2dh + 1, &var_49h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffec = 0x4b; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 599
    },
    "0040da90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0040da90(uint noname_0, uint arg_ch, uint noname_2, uint arg_14h, uint noname_4, uint noname_5, uint arg_20h)\n\n{\n    uint in_ECX;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar var_eh;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    var_dh._0_1_ = 0;\n    for (stack0xfffffff0 = 0x5d; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"zcwgbqmoyetuhfpvwhyr\", &var_eh);\n    fcn.00483900();\n    return in_ECX;\n}\n",
        "token_count": 244
    },
    "0040db58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040db58(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_11h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x3e; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return 0x13d72;\n}\n",
        "token_count": 139
    },
    "0040dba8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __fastcall fcn.0040dba8(uint param_1)\n\n{\n    char cVar1;\n    uint var_17ch;\n    uint var_16ch;\n    uint var_154h;\n    uint var_13ah;\n    uint var_11dh;\n    uint var_101h;\n    uint var_e5h;\n    uint var_c9h;\n    uint var_adh;\n    uint var_91h;\n    uint var_75h;\n    uint var_59h;\n    uint var_3dh;\n    uchar var_22h;\n    uchar var_21h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_20h = 0x6db;\n    fcn.004838d0();\n    fcn.004b29a0(\"swptnmuwxrzbikigtjsmpbahxzhqnfndmbjmwfkjrwhgnletlfqcdjgwjvlhswjxtenrvihyfhvqssxxpe\", &var_13ah);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"yzyfni\", &var_13ah + 1);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"swptnmuwxrzbikigtjsmpbahxzhqnfndmbjmwfkjrwhgnletlfqcdjgwjvlhswjxtenrvihyfhvqssxxpe\", &var_11dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"swptnmuwxrzbikigtjsmpbahxzhqnfndmbjmwfkjrwhgnletlfqcdjgwjvlhswjxtenrvihyfhvqssxxpe\", &var_101h);\n    cVar1 = fcn.004c1160(&var_11dh + 1, &var_13ah + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x18; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"swptnmuwxrzbikigtjsmpbahxzhqnfndmbjmwfkjrwhgnletlfqcdjgwjvlhswjxtenrvihyfhvqssxxpe\", &var_e5h);\n    fcn.004838d0();\n    fcn.004b29a0(\"swptnmuwxrzbikigtjsmpbahxzhqnfndmbjmwfkjrwhgnletlfqcdjgwjvlhswjxtenrvihyfhvqssxxpe\", &var_c9h);\n    cVar1 = fcn.004c1830(&var_e5h + 1, &var_101h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x62; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"yzyfni\", &var_adh);\n    fcn.004838d0();\n    fcn.004b29a0(\"yzyfni\", &var_91h);\n    cVar1 = fcn.004c1160(&var_adh + 1, &var_c9h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x57; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"swptnmuwxrzbikigtjsmpbahxzhqnfndmbjmwfkjrwhgnletlfqcdjgwjvlhswjxtenrvihyfhvqssxxpe\", &var_75h);\n    fcn.004838d0();\n    fcn.004b29a0(\"swptnmuwxrzbikigtjsmpbahxzhqnfndmbjmwfkjrwhgnletlfqcdjgwjvlhswjxtenrvihyfhvqssxxpe\", &var_59h);\n    cVar1 = fcn.004c1830(&var_75h + 1, &var_91h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_18h = 0x15; 0 < var_18h; var_18h = var_18h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"swptnmuwxrzbikigtjsmpbahxzhqnfndmbjmwfkjrwhgnletlfqcdjgwjvlhswjxtenrvihyfhvqssxxpe\", &var_3dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"swptnmuwxrzbikigtjsmpbahxzhqnfndmbjmwfkjrwhgnletlfqcdjgwjvlhswjxtenrvihyfhvqssxxpe\", &var_22h);\n    cVar1 = fcn.004c1830(&var_3dh + 1, &var_59h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_1ch = 100; 0 < var_1ch; var_1ch = var_1ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"jqzmlchouzbolzf\", &var_21h);\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return param_1;\n}\n",
        "token_count": 1609
    },
    "0040e514": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0040e514(uint noname_0, uint arg_ch, uint arg_10h, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint arg_28h, uint arg_2ch, uint arg_30h, uint arg_34h)\n\n{\n    uint in_ECX;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uchar var_13h;\n    uchar var_12h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 1;\n    var_12h = 0;\n    for (var_ch = 0x21; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (stack0xffffffec = 0x28; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(0x519dbd, &var_13h);\n    fcn.00483900();\n    return in_ECX;\n}\n",
        "token_count": 343
    },
    "0040e6d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid fcn.0040e6d4(void)\n\n{\n    uint var_5ch;\n    uint var_58h;\n    uint var_40h;\n    uint var_26h;\n    ulong uStack36;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x522148;\n    fcn.004838d0();\n    fcn.004b29a0(\"ovvvfusbwhqyakiqfwpsdkhdpnnstcczamucjyfvofdokupmhijobmtkkcixuebqbqeqlewukmleheuuimadahtauzjn\", \n                 &var_26h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"kzdypqxcypuwjsbwsqokqunbwabneuytdeagmuggeadmfylmcqthlupbkydgtxjqehpzyfmthtxnnwejgvwuiujhumvmzxittogd\"\n                 , &var_26h + 1);\n    fcn.00483900();\n    uStack36 = *0x522150;\n    stack0xffffffd8 = 0x32d;\n    for (var_ch = 0x13; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 357
    },
    "0040e7bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.0040e7bc(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_ach;\n    uint var_91h;\n    uint var_75h;\n    uint var_5ah;\n    ulong uStack84;\n    uint var_44h;\n    ulong uStack68;\n    ulong uStack60;\n    ulong uStack52;\n    uint var_24h;\n    ulong uStack36;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_14h = 0x18c;\n    uStack36 = *0x522158;\n    var_24h = 0x35c;\n    uStack52 = *0x522160;\n    uStack60 = *0x522168;\n    uStack68 = *0x522170;\n    fcn.004838d0();\n    fcn.004b29a0(\"ktmatauiulickztcxddgiijasharinxfxytrhytbauwjp\", &var_91h);\n    fcn.00483900();\n    var_44h = 0x7e0;\n    uStack84 = *0x522178;\n    stack0xffffffa4 = *0x522180;\n    for (var_ch = 0x61; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"ktmatauiulickztcxddgiijasharinxfxytrhytbauwjp\", &var_75h);\n    fcn.004838d0();\n    fcn.004b29a0(\"ktmatauiulickztcxddgiijasharinxfxytrhytbauwjp\", &var_5ah);\n    cVar1 = fcn.004c1830(&var_75h + 1, &var_91h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0xd; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"vinlf\", &var_5ah + 1);\n    fcn.00483900();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 648
    },
    "0040e9de": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040e9de(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint in_ECX;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_34h;\n    uint var_1ah;\n    uchar var_16h;\n    uchar var_15h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(0x519dbd, &var_1ah);\n    fcn.00483900();\n    var_dh._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"cgqkgsmdmpyefnoqeolcltlgrqkcxhkhneroxnkljbcvgwwzotycusmymdupwvryaihbizbehizjhhccunffydstbpbuuhhmawfo\"\n                 , &var_1ah + 1);\n    fcn.00483900();\n    var_14h = 0x1149;\n    var_15h = 1;\n    var_16h = 0;\n    var_1ah._3_1_ = 1;\n    for (stack0xfffffff0 = 0x4a; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"sonpn\", &var_1ah + 2);\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 477
    },
    "0040eb2a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 fcn.0040eb2a(void)\n\n{\n    double dVar1;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_31h;\n    uint var_24h;\n    ulong uStack36;\n    ulong uStack28;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x522188;\n    uStack36 = *0x522190;\n    var_24h = 0x12b9;\n    stack0xffffffcc = *0x522198;\n    fcn.004838d0();\n    fcn.004b29a0(\"wisixscjdmdfkjtvebrzvohzloojnrwtelujvrokzodmxwklqwngcivxi\", &var_31h);\n    fcn.00483900();\n    dVar1 = *0x5221a0;\n    for (var_ch = 0xe; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x34; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 309
    },
    "0040ed34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl\nfcn.0040ed34(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint arg_28h, uint arg_2ch)\n\n{\n    char cVar1;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_150h;\n    uint var_138h;\n    uint var_120h;\n    uint var_108h;\n    uint var_f0h;\n    uint var_d5h;\n    uchar var_d1h;\n    uchar var_d0h [27];\n    uint var_b5h;\n    uint var_99h;\n    uint var_7dh;\n    uint var_61h;\n    uint var_45h;\n    uint var_29h;\n    ulong uStack36;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"wxmzvwaeszbodgiqxuuqwzmcprzwmjffovpxghmipuacohzuqigsiwauwfjptpekhrgagbbhdkodxlychpyzuwuhnff\", &var_d5h\n                );\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"kifqirghdfmwaejmpteffjpscfggzaxfqfsnnvhvnodkwbpltrk\", &var_d5h + 1);\n    fcn.00483900();\n    uStack36 = *0x5221c8;\n    stack0xffffffd4 = *0x5221d0;\n    fcn.004838d0();\n    fcn.004b29a0(\"mgowewiwhhlchjlafzozfgkivfpthoooqmhkfkjecsdnaksjvikxlkiclcbd\", &var_d5h + 2);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"hcbgjrbzmthcebshrznkkmnaojjl\", &var_d5h + 3);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"qqsdfjenkjmteaqsnrdtxgqewxkpoamwvejqmnvdshrw\", &var_d1h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"kifqirghdfmwaejmpteffjpscfggzaxfqfsnnvhvnodkwbpltrk\", &var_b5h);\n    fcn.004838d0();\n    fcn.004b29a0(\"kifqirghdfmwaejmpteffjpscfggzaxfqfsnnvhvnodkwbpltrk\", &var_99h);\n    cVar1 = fcn.004c1160(&var_b5h + 1, var_d0h);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 8; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"kifqirghdfmwaejmpteffjpscfggzaxfqfsnnvhvnodkwbpltrk\", &var_7dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"kifqirghdfmwaejmpteffjpscfggzaxfqfsnnvhvnodkwbpltrk\", &var_61h);\n    cVar1 = fcn.004c1830(&var_7dh + 1, &var_99h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x1d; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"qqsdfjenkjmteaqsnrdtxgqewxkpoamwvejqmnvdshrw\", &var_45h);\n    fcn.004838d0();\n    fcn.004b29a0(\"qqsdfjenkjmteaqsnrdtxgqewxkpoamwvejqmnvdshrw\", &var_29h);\n    cVar1 = fcn.004c1160(&var_45h + 1, &var_61h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x1a; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 1342
    },
    "0040f22e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.0040f22e(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_fh;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"xrfbmawdsoxlvcisyhfetdrefwsuzrhdoaizfkgsjcfor\", &var_fh);\n    fcn.00483900();\n    var_fh._2_1_ = 1;\n    var_fh._1_1_ = 1;\n    for (stack0xfffffff0 = 0x54; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 252
    },
    "0040f2c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.0040f2c4(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b4h;\n    uint var_9ch;\n    uint var_82h;\n    uint var_65h;\n    uint var_49h;\n    uint var_2dh;\n    int32_t var_12h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"mobb\", &var_82h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"uakswkupkoggzokunudtwhlukwnfxdjkrzepnfoyjdczrizmkumnveysopjojoc\", &var_82h + 1);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"uakswkupkoggzokunudtwhlukwnfxdjkrzepnfoyjdczrizmkumnveysopjojoc\", &var_65h);\n    fcn.004838d0();\n    fcn.004b29a0(\"uakswkupkoggzokunudtwhlukwnfxdjkrzepnfoyjdczrizmkumnveysopjojoc\", &var_49h);\n    cVar1 = fcn.004c1830(&var_65h + 1, &var_82h + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x24; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"mobb\", &var_2dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"mobb\", &var_12h);\n    cVar1 = fcn.004c1830(&var_2dh + 1, &var_49h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffec = 0x18; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(0x519dbd, &var_12h + 1);\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 758
    },
    "0040f5a6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0040f5a6(uint noname_0, uint arg_ch)\n\n{\n    uint var_38h;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_9h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x35; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (stack0xfffffff4 = 0x36; 0 < stack0xfffffff4; unique0x00007a80 = stack0xfffffff4 + -1) {\n    }\n    return *0x5221e0;\n}\n",
        "token_count": 177
    },
    "0040f614": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 fcn.0040f614(void)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_bch;\n    uint var_b4h;\n    uint var_9ch;\n    uint var_82h;\n    uint var_65h;\n    uint var_49h;\n    uint var_3ch;\n    ulong uStack60;\n    uint var_30h;\n    uint var_2ch;\n    ulong uStack44;\n    ulong uStack36;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x5221e8;\n    fcn.004838d0();\n    fcn.004b29a0(\"shwkewxxumgmxdkxvuyyehmnhxddcmvkrpgghkzoycefgsaolhai\", &var_82h);\n    fcn.00483900();\n    uStack36 = *0x5221f0;\n    uStack44 = *0x5221f8;\n    var_2ch = 0x128;\n    fcn.004838d0();\n    fcn.004b29a0(\"jrlninklwyuidahkobyaqdeijbgtmaxwzikcjtuvogsttpnwqyzpcslfmyfmeoinfrptsahyjfsvwuhhzjbqpw\", &var_82h + 1)\n    ;\n    fcn.00483900();\n    var_30h = 0x80a;\n    uStack60 = *0x522200;\n    var_3ch = 0x169;\n    stack0xffffffb4 = *0x522208;\n    fcn.004838d0();\n    fcn.004b29a0(\"shwkewxxumgmxdkxvuyyehmnhxddcmvkrpgghkzoycefgsaolhai\", &var_65h);\n    fcn.004838d0();\n    fcn.004b29a0(\"shwkewxxumgmxdkxvuyyehmnhxddcmvkrpgghkzoycefgsaolhai\", &var_49h);\n    cVar2 = fcn.004c1830(&var_65h + 1, &var_82h + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    dVar1 = *0x522210;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x4e; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 646
    },
    "0040f822": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040f822(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint noname_6, \n            uint arg_24h)\n\n{\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x1c; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x5f; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "0040f89c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.0040f89c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint noname_5, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x1d; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return *0x522230;\n}\n",
        "token_count": 182
    },
    "0040fb58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint fcn.0040fb58(void)\n\n{\n    char cVar1;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_51h;\n    uint var_35h;\n    uchar var_1ah;\n    uchar var_19h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0xb9f;\n    fcn.004838d0();\n    fcn.004b29a0(\"pysraqjpqzrzftcavukozhslwjnhgtilxxphgvxhvouukmoyijqfuzspmr\", &var_51h);\n    fcn.00483900();\n    var_14h = 0xeef;\n    var_18h = 0x11dd;\n    var_19h = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"pysraqjpqzrzftcavukozhslwjnhgtilxxphgvxhvouukmoyijqfuzspmr\", &var_35h);\n    fcn.004838d0();\n    fcn.004b29a0(\"pysraqjpqzrzftcavukozhslwjnhgtilxxphgvxhvouukmoyijqfuzspmr\", &var_1ah);\n    cVar1 = fcn.004c1830(&var_35h + 1, &var_51h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x5b; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    return 0x2dce;\n}\n",
        "token_count": 472
    },
    "004106be": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.004106be(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch, uint arg_20h)\n\n{\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_50h;\n    uint var_35h;\n    ulong uStack52;\n    ulong uStack44;\n    ulong uStack36;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"jjwuvzesnfxfilxqjjfebgpikpqluheqijjvopqejdofrsxhexlgjp\", &var_35h);\n    fcn.00483900();\n    var_11h._0_1_ = 0;\n    uStack36 = *0x5222f8;\n    uStack44 = *0x522300;\n    uStack52 = *0x522308;\n    stack0xffffffc8 = 0xf7;\n    for (var_ch = 0x14; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (stack0xffffffec = 0x54; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n    }\n    fcn.004b2fc0();\n    return 0xccbc;\n}\n",
        "token_count": 383
    },
    "00410794": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00410794(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch)\n\n{\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_44h;\n    uint var_2ah;\n    uchar var_21h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_15h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_15h._0_1_ = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"ktyhfvgjpcoenjjxsbywkwvjowapbopyihfdgedmjthlshvhkbiiofbmrowhjexsywvrg\", &var_2ah);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(0x519dbd, &var_2ah + 1);\n    fcn.00483900();\n    var_1ch = 0xa2b;\n    var_20h = 0x16bb;\n    var_21h = 0;\n    stack0xffffffd4 = 0x5ff;\n    for (var_ch = 0x36; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x62; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (stack0xffffffe8 = 0x1e; 0 < stack0xffffffe8; unique0x00007a80 = stack0xffffffe8 + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 0x9c4b;\n}\n",
        "token_count": 498
    },
    "004108ce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.004108ce(uint noname_0, uint noname_1, uint arg_10h, uint noname_3, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    uint var_78h;\n    uint var_74h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_34h;\n    uint var_1ah;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffe4 = *0x522310;\n    fcn.004838d0();\n    fcn.004b29a0(\"sanqfjecpwnkrfrvirpmxjsnqsohbmnsprzjadzhip\", &var_1ah);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"xrksxtnlakjgwfofyyunzrnevkaunppcvuxbhgakusajfhpepnfuuqtfuxrsunauofqsgvpkbhqevacqyzrftxrxidqgwcgu\", \n                 &var_1ah + 1);\n    fcn.00483900();\n    for (var_ch = 0x50; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 0;\n}\n",
        "token_count": 401
    },
    "004109d6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __fastcall fcn.004109d6(uint param_1)\n\n{\n    uint var_6ch;\n    uint var_60h;\n    uint var_48h;\n    uint var_30h;\n    uint var_2ch;\n    ulong uStack44;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x522318;\n    var_1ch = 0x59c;\n    fcn.004838d0();\n    fcn.004b29a0(\"hzpqhagbkkkksnhszujlnkygmzlstgxaunrptbwxxgexdqyajdrrxugqosgtwgxxwxeudasczvzfqgfvlieclsn\", &var_30h);\n    fcn.00483900();\n    uStack44 = *0x522320;\n    var_2ch = 0x718;\n    var_30h._3_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"wfgzparzseshanyxhyddmpqqaxvowfdzv\", &var_30h + 1);\n    fcn.00483900();\n    for (var_ch = 0x52; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"jvuffqyznxi\", &var_30h + 2);\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return param_1;\n}\n",
        "token_count": 403
    },
    "00410b16": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00410b16(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_2dh;\n    uint var_28h;\n    uchar var_21h;\n    uint var_20h;\n    uint var_19h;\n    uchar var_eh;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"megbxrjrflbqgpvhiyvkrnejogqvqdaskhogfmcaxzmnsxlxrwokuugomjkjokthrzeclryhribggestlzjkmlbjgxh\", &var_2dh\n                );\n    fcn.00483900();\n    var_dh._0_1_ = 0;\n    var_eh = 0;\n    stack0xffffffe4 = *0x522328;\n    var_19h._0_1_ = 1;\n    var_20h = 0x11cb;\n    var_21h = 1;\n    var_28h = 0x15d0;\n    stack0xffffffd0 = 0x130d;\n    for (stack0xfffffff0 = 0xf; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    fcn.004b2fc0();\n    return 0;\n}\n",
        "token_count": 390
    },
    "00410bea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00410bea(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    char cVar1;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b4h;\n    uint var_9ch;\n    uint var_84h;\n    uint var_6ch;\n    uint var_54h;\n    uchar var_50h [27];\n    uint var_35h;\n    uchar var_1ah;\n    uint var_19h;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    var_dh._0_1_ = 1;\n    stack0xffffffe4 = *0x522338;\n    fcn.004838d0();\n    fcn.004b29a0(\"crhgzvrxxhmnsljnlmqgeycxunwbkwihrofwp\", &var_54h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(0x51af72, &var_54h + 1);\n    fcn.00483900();\n    var_19h._0_1_ = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"qhfvjkgzlmpzbdfnphgdzqgoqvxcsqcammnyifmrodkwlkzuz\", &var_54h + 2);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"jthlbyoiotuqlsjsaukrtzedzlnaischlaxmnzwgohfebbqedleblnxfevxvxofgcydifflorzkzqsm\", &var_54h + 3);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"jthlbyoiotuqlsjsaukrtzedzlnaischlaxmnzwgohfebbqedleblnxfevxvxofgcydifflorzkzqsm\", &var_35h);\n    fcn.004838d0();\n    fcn.004b29a0(\"jthlbyoiotuqlsjsaukrtzedzlnaischlaxmnzwgohfebbqedleblnxfevxvxofgcydifflorzkzqsm\", &var_1ah);\n    cVar1 = fcn.004c1160(&var_35h + 1, var_50h);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (stack0xfffffff0 = 9; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 0x62e0;\n}\n",
        "token_count": 850
    },
    "00410eac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.00410eac(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a0h;\n    uint var_85h;\n    uint var_69h;\n    uint var_4dh;\n    uint var_31h;\n    uchar var_16h;\n    uchar var_15h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_14h = 0x701;\n    var_15h = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"dzrimpklwavsaxbofemvdeeoujyehmjibiyudhzhhwolymvzdbnlarbboqmoyfnkmtdennaeyyckbvlmrhzelpmkqwt\", &var_85h\n                );\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"dzrimpklwavsaxbofemvdeeoujyehmjibiyudhzhhwolymvzdbnlarbboqmoyfnkmtdennaeyyckbvlmrhzelpmkqwt\", &var_69h\n                );\n    fcn.004838d0();\n    fcn.004b29a0(\"dzrimpklwavsaxbofemvdeeoujyehmjibiyudhzhhwolymvzdbnlarbboqmoyfnkmtdennaeyyckbvlmrhzelpmkqwt\", &var_4dh\n                );\n    cVar1 = fcn.004c1830(&var_69h + 1, &var_85h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x53; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"dzrimpklwavsaxbofemvdeeoujyehmjibiyudhzhhwolymvzdbnlarbboqmoyfnkmtdennaeyyckbvlmrhzelpmkqwt\", &var_31h\n                );\n    fcn.004838d0();\n    fcn.004b29a0(\"dzrimpklwavsaxbofemvdeeoujyehmjibiyudhzhhwolymvzdbnlarbboqmoyfnkmtdennaeyyckbvlmrhzelpmkqwt\", &var_16h\n                );\n    cVar1 = fcn.004c1160(&var_31h + 1, &var_4dh + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x40; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    return 0;\n}\n",
        "token_count": 854
    },
    "00411110": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl\nfcn.00411110(uint noname_0, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    double dVar1;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uchar var_1ah;\n    uchar var_19h;\n    uint var_18h;\n    uchar var_12h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 0;\n    var_12h = 0;\n    var_18h = 0x561;\n    var_19h = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"kofeydplwneczcrbmphwdmdowzsoqativnnhaswijifckxbgxzjoclapqzec\", &var_1ah);\n    fcn.00483900();\n    dVar1 = *0x522340;\n    for (var_ch = 0x23; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (stack0xffffffec = 8; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n    }\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 418
    },
    "004112d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.004112d4(uint noname_0, uint noname_1, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_ach;\n    uint var_94h;\n    uint var_7ah;\n    uint var_5dh;\n    uint var_42h;\n    ulong uStack60;\n    uint var_2ch;\n    ulong uStack44;\n    uchar var_19h;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_18h = 0xdd6;\n    fcn.004838d0();\n    fcn.004b29a0(\"figbnwlrsxhqqgkhchnkipc\", &var_7ah);\n    fcn.00483900();\n    var_19h = 1;\n    uStack44 = *0x522350;\n    var_2ch = 0x1a2b;\n    fcn.004838d0();\n    fcn.004b29a0(\"njrsdmsflyongbiz\", &var_7ah + 1);\n    fcn.00483900();\n    uStack60 = *0x522358;\n    stack0xffffffbc = *0x522360;\n    for (var_ch = 0x4a; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x33; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"njrsdmsflyongbiz\", &var_5dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"njrsdmsflyongbiz\", &var_42h);\n    cVar1 = fcn.004c1160(&var_5dh + 1, &var_7ah + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_14h = 5; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(0x51b0d6, &var_42h + 1);\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 693
    },
    "00411534": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __fastcall fcn.00411534(uint param_1)\n\n{\n    char cVar1;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_51h;\n    uint var_35h;\n    uint var_1ah;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffe4 = *0x522368;\n    fcn.004838d0();\n    fcn.004b29a0(\"atsebeysskmkflevjfseeakbgyvmsftbsvpiegdmnvkptjqpryjwiphc\", &var_51h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"atsebeysskmkflevjfseeakbgyvmsftbsvpiegdmnvkptjqpryjwiphc\", &var_35h);\n    fcn.004838d0();\n    fcn.004b29a0(\"atsebeysskmkflevjfseeakbgyvmsftbsvpiegdmnvkptjqpryjwiphc\", &var_1ah);\n    cVar1 = fcn.004c1160(&var_35h + 1, &var_51h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x48; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"pswlilrmnalu\", &var_1ah + 1);\n    fcn.00483900();\n    fcn.004b2fc0();\n    return param_1;\n}\n",
        "token_count": 447
    },
    "004116b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.004116b8(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    uint in_ECX;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_24h;\n    ulong uStack36;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack36 = *0x522370;\n    var_24h = 0x1f7c;\n    var_25h = 1;\n    for (var_ch = 0x46; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x44; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x36; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(0x519dbd, &var_26h);\n    fcn.00483900();\n    return in_ECX;\n}\n",
        "token_count": 311
    },
    "0041176a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0041176a(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint noname_6, \n            uint noname_7, uint noname_8, uint arg_2ch, uint arg_30h, uint arg_34h, uint arg_38h)\n\n{\n    uint in_ECX;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_44h;\n    uint var_2ch;\n    uint var_28h;\n    uchar var_22h;\n    uchar var_21h;\n    uint var_20h;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    var_dh._0_1_ = 0;\n    uStack28 = *0x522378;\n    var_1ch = 0x13b2;\n    fcn.004838d0();\n    fcn.004b29a0(\"wgjppmnyeoqemghjdwenljozeabaywelydnlhmctionwmlvgpmtvdwtthumtamdrjnoeddbsu\", &var_2ch);\n    fcn.00483900();\n    var_20h = 0x148;\n    var_21h = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"ewfwtdqqwdlfmlajnfikfvnwssqiewvykztlspglwdhqghp\", &var_2ch + 1);\n    fcn.00483900();\n    var_22h = 1;\n    var_28h = 0xa17;\n    var_2ch._3_1_ = 0;\n    for (stack0xfffffff0 = 0x5c; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"khokklirwzikajyuaye\", &var_2ch + 2);\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 608
    },
    "00411920": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00411920(uint noname_0, uint arg_ch)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_4dh;\n    uint var_31h;\n    uchar var_17h;\n    uchar var_16h;\n    int32_t var_15h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"boiykosiafielffnkifvtjduewvyskygmdwmeobevhadhexbrlzezjpbwvdnqwfrlnirar\", &var_4dh);\n    fcn.00483900();\n    var_15h._0_1_ = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"boiykosiafielffnkifvtjduewvyskygmdwmeobevhadhexbrlzezjpbwvdnqwfrlnirar\", &var_31h);\n    fcn.004838d0();\n    fcn.004b29a0(\"boiykosiafielffnkifvtjduewvyskygmdwmeobevhadhexbrlzezjpbwvdnqwfrlnirar\", &var_17h);\n    cVar1 = fcn.004c1160(&var_31h + 1, &var_4dh + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x38; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0xf; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (stack0xffffffe8 = 0x33; 0 < stack0xffffffe8; unique0x00007a80 = stack0xffffffe8 + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(0x5195c4, &var_16h);\n    fcn.00483900();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 601
    },
    "0041297e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl\nfcn.0041297e(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c0h;\n    uint var_a8h;\n    uint var_90h;\n    uint var_78h;\n    uint var_60h;\n    uchar var_5ch [27];\n    uint var_41h;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_24h;\n    ulong uStack36;\n    uchar var_12h;\n    uchar var_11h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0x1841;\n    var_11h = 1;\n    var_12h = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"axselketoxqsaazxrcsqdgzeqbyqtltsp\", &var_60h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"vvrotqxdujnh\", &var_60h + 1);\n    fcn.00483900();\n    uStack36 = *0x522458;\n    var_24h = 0xf74;\n    var_25h = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"otetbxjmtesrrklludoqrtffid\", &var_60h + 2);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"ggngcxeyyiuaqztmzseyeagmnkhtxleslpiuofngsjiyoctveiidke\", &var_60h + 3);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"otetbxjmtesrrklludoqrtffid\", &var_41h);\n    fcn.004838d0();\n    fcn.004b29a0(\"otetbxjmtesrrklludoqrtffid\", &var_26h);\n    cVar1 = fcn.004c1830(&var_41h + 1, var_5ch);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x42; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 742
    },
    "00412c28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.00412c28(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint noname_5, uint noname_6, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a0h;\n    uint var_88h;\n    uint var_6eh;\n    uint var_51h;\n    uchar var_36h;\n    uchar var_35h;\n    uint var_34h;\n    ulong uStack52;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x522460;\n    var_1ch = 0x2e;\n    var_20h = 0x1f8;\n    var_24h = 0x495;\n    uStack52 = *0x522468;\n    fcn.004838d0();\n    fcn.004b29a0(\"cbumnvgyztyqminvhlhfqxi\", &var_6eh);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"axopfwzpxmpmputbervlggkfurrqnhimqoggvohyno\", &var_6eh + 1);\n    fcn.00483900();\n    var_34h = 0x1efa;\n    fcn.004838d0();\n    fcn.004b29a0(\"axopfwzpxmpmputbervlggkfurrqnhimqoggvohyno\", &var_51h);\n    fcn.004838d0();\n    fcn.004b29a0(\"axopfwzpxmpmputbervlggkfurrqnhimqoggvohyno\", &var_36h);\n    cVar1 = fcn.004c1830(&var_51h + 1, &var_6eh + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x13; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x27; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(0x51b83f, &var_35h);\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 749
    },
    "00412e92": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00412e92(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    uint in_ECX;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_29h;\n    uchar var_1ah;\n    uint var_19h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffe4 = *0x522470;\n    var_19h._0_1_ = 0;\n    var_1ah = 0;\n    stack0xffffffd4 = *0x522478;\n    for (var_ch = 0x56; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x29; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"zwqshinuj\", &var_29h);\n    fcn.00483900();\n    return in_ECX;\n}\n",
        "token_count": 297
    },
    "0041303e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl\nfcn.0041303e(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint noname_8, uint arg_2ch, uint arg_30h, uint noname_11, uint arg_38h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_5dh;\n    uint var_41h;\n    uchar var_25h;\n    uint var_24h;\n    ulong uStack36;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"tlksbtmdurvsqjgbtutpjx\", &var_5dh);\n    fcn.00483900();\n    uStack36 = *0x522488;\n    var_24h = 0x9b1;\n    fcn.004838d0();\n    fcn.004b29a0(\"tlksbtmdurvsqjgbtutpjx\", &var_41h);\n    fcn.004838d0();\n    fcn.004b29a0(\"tlksbtmdurvsqjgbtutpjx\", &var_25h);\n    cVar2 = fcn.004c1830(&var_41h + 1, &var_5dh + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    dVar1 = *0x522490;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x5b; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (stack0xffffffec = 0x46; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n    }\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 601
    },
    "004131fa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 __cdecl\nfcn.004131fa(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint noname_5, uint arg_20h, \n            uint arg_24h, uint noname_8, uint arg_2ch, uint arg_30h, uint arg_34h)\n\n{\n    double dVar1;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"lntckkqxqcnrttpjnfibycjd\", &var_11h);\n    fcn.00483900();\n    dVar1 = *0x522498;\n    stack0xffffffec = 0x302;\n    for (var_ch = 0x41; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 330
    },
    "00413428": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00413428(uint noname_0, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint noname_10, uint arg_34h)\n\n{\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_9h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x10; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (stack0xfffffff4 = 0x15; 0 < stack0xfffffff4; unique0x00007a80 = stack0xfffffff4 + -1) {\n    }\n    return 0;\n}\n",
        "token_count": 258
    },
    "004134a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004134a8(uint arg_8h, uint arg_ch)\n\n{\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    int32_t var_9h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x54; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (stack0xfffffff4 = 0x2f; 0 < stack0xfffffff4; unique0x00007a80 = stack0xfffffff4 + -1) {\n    }\n    return 0xd822;\n}\n",
        "token_count": 151
    },
    "004134f6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.004134f6(uint noname_0, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h, uint noname_5, uint arg_20h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x3f; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x23; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    return *0x5224d0;\n}\n",
        "token_count": 198
    },
    "00413556": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00413556(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_7ch;\n    uint var_64h;\n    uint var_4ch;\n    uint var_33h;\n    uchar var_23h;\n    uchar var_22h;\n    uint var_21h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"ozjwjsmwkuqscyhzvdnbfajwgxugvfasxhcjsxgreleegvwrwyyevujmwvgxcfsyxzvsowntllvtsyckrgxifrehmklkcyce\", \n                 &var_33h);\n    fcn.00483900();\n    var_14h = 0x16b9;\n    fcn.004838d0();\n    fcn.004b29a0(\"pngewgxtbfpigmuqgtjgmrdbpfbwkpovglknvbjrpafhddxxrgttfoubibdlbxdfyzhbgnoyinp\", &var_33h + 1);\n    fcn.00483900();\n    stack0xffffffdc = *0x5224d8;\n    var_21h._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"zdxrvbyyllakwgftmulbtlvpkmqpybmirgmrjgqtagkyltrddnvmutmwjqhtrpjyldhdhbqhb\", &var_33h + 2);\n    fcn.00483900();\n    var_22h = 1;\n    var_23h = 0;\n    stack0xffffffcc = *0x5224e0;\n    for (var_ch = 0x53; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x31; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 0x173c9;\n}\n",
        "token_count": 586
    },
    "0041372e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0041372e(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint arg_18h, uint arg_1ch, uint noname_6, \n            uint arg_24h, uint noname_8, uint arg_2ch, uint arg_30h)\n\n{\n    uint in_ECX;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_54h;\n    uint var_3ch;\n    uint var_24h;\n    ulong uStack36;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"qtnvzskdnxsujgmephcywwpvjfdndbblsx\", &var_24h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"gqudxndwgqqaqpfyyqlblvncogclgwyxjpmtfznwlnellsbifawglysihzjnrysobfyftakcdxypaqpzdopbabgssz\", \n                 &var_24h + 1);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"xwotojsstgxcjrnajjefjzfanifnvymuovvomavivusfqiyyjlscpzdosfzboxdwdizvlualgpjlcqakkatvntwpqcvmqran\", \n                 &var_24h + 2);\n    fcn.00483900();\n    uStack36 = *0x522508;\n    for (var_ch = 100; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (stack0xffffffec = 0x5c; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"vnbtwxubbestttffgn\", &var_24h + 3);\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 622
    },
    "004138e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.004138e8(uint noname_0, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_18h;\n    int32_t var_11h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x33; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x5e; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    for (var_ch = 1; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (stack0xffffffec = 0x3f; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n    }\n    return *0x522518;\n}\n",
        "token_count": 276
    },
    "00413980": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00413980(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_94h;\n    uint var_7ch;\n    uint var_62h;\n    uint var_45h;\n    uchar var_2ah;\n    uint var_29h;\n    uchar var_19h;\n    uint var_18h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 1;\n    var_18h = 0x239;\n    var_19h = 1;\n    stack0xffffffd4 = *0x522520;\n    var_29h._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"jxwblvqxrehuivvvkxuzblzshophzkicgtoxmbnlhtqbkqwhcauvqflbvjtadqkowohhlvakdbaoxvdkmcno\", &var_62h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"fazpvfdbcmpvvksxfqleejlrgykcgraqjqqppfrfjdzflaxlth\", &var_62h + 1);\n    fcn.00483900();\n    for (var_ch = 0x5e; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"fazpvfdbcmpvvksxfqleejlrgykcgraqjqqppfrfjdzflaxlth\", &var_45h);\n    fcn.004838d0();\n    fcn.004b29a0(\"fazpvfdbcmpvvksxfqleejlrgykcgraqjqqppfrfjdzflaxlth\", &var_2ah);\n    cVar1 = fcn.004c1830(&var_45h + 1, &var_62h + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffec = 0x57; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 643
    },
    "00413b86": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.00413b86(uint arg_8h, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h, uint noname_5, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_60h;\n    uint var_46h;\n    uint var_29h;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"hthjunk\", &var_46h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"uhjshdykooxmviadsxgrstfapohweziscwmjdezvhnniuohtqcyfaufnfnamncwyaktigblxrjxaqcasxultij\", &var_46h + 1)\n    ;\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"hthjunk\", &var_29h);\n    fcn.004838d0();\n    fcn.004b29a0(\"hthjunk\", &var_dh);\n    cVar1 = fcn.004c1830(&var_29h + 1, &var_46h + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (stack0xfffffff0 = 0x13; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 0x1788c;\n}\n",
        "token_count": 506
    },
    "00414d2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 __cdecl\nfcn.00414d2c(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_b0h;\n    uint var_98h;\n    uint var_80h;\n    uint var_68h;\n    uint var_4dh;\n    uchar var_49h;\n    uchar var_48h [27];\n    uint var_2dh;\n    uchar var_12h;\n    uchar var_11h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"unpdgdbnzfscrlzlkgryuyimxkfuggbrdubtzisnbp\", &var_4dh);\n    fcn.00483900();\n    var_10h = 0x11c8;\n    fcn.004838d0();\n    fcn.004b29a0(\"qajbeclkkflmosvnsayhwjfdbkltnhrquiwtxzwaokuxbwqzrzkdknnrrgji\", &var_4dh + 1);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"yeltounpgnxwogjkgheblmumfntbymlonobohssmuoo\", &var_4dh + 2);\n    fcn.00483900();\n    var_11h = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"vhaptzdenvnzvilgjefmmxelfektbgqwuuluchguawshfdbrlhgukacmlwv\", &var_4dh + 3);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"nfaabfbezwqrgluhcclbkjshbpammaqdxxwmmtpdtheeuepxrvt\", &var_49h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"unpdgdbnzfscrlzlkgryuyimxkfuggbrdubtzisnbp\", &var_2dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"unpdgdbnzfscrlzlkgryuyimxkfuggbrdubtzisnbp\", &var_12h);\n    cVar2 = fcn.004c1160(&var_2dh + 1, var_48h);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    dVar1 = *0x522638;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x3a; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 848
    },
    "00415024": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 fcn.00415024(void)\n\n{\n    double dVar1;\n    uint var_5ch;\n    uint var_50h;\n    uint var_38h;\n    uint var_1eh;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"vedihrptccdsz\", &var_1eh);\n    fcn.00483900();\n    var_10h = 0x7e6;\n    fcn.004838d0();\n    fcn.004b29a0(\"smtivwmmwngsxpnmvkyjxbfmwsgmjzidaxjhikuxynaxykjnwxvf\", &var_1eh + 1);\n    fcn.00483900();\n    dVar1 = *0x522640;\n    var_14h = 4;\n    var_18h = 0x535;\n    stack0xffffffe0 = 0x4fb;\n    for (var_ch = 5; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 319
    },
    "004151be": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.004151be(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a0h;\n    uint var_85h;\n    uint var_69h;\n    uint var_4dh;\n    uint var_31h;\n    uchar var_15h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_14h = 0x29a;\n    fcn.004838d0();\n    fcn.004b29a0(\"tgnemnmzeoknxybwgagmuiigcepjrkcncquocwawfkaameipafdkidnii\", &var_85h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"tgnemnmzeoknxybwgagmuiigcepjrkcncquocwawfkaameipafdkidnii\", &var_69h);\n    fcn.004838d0();\n    fcn.004b29a0(\"tgnemnmzeoknxybwgagmuiigcepjrkcncquocwawfkaameipafdkidnii\", &var_4dh);\n    cVar1 = fcn.004c1830(&var_69h + 1, &var_85h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x39; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"tgnemnmzeoknxybwgagmuiigcepjrkcncquocwawfkaameipafdkidnii\", &var_31h);\n    fcn.004838d0();\n    fcn.004b29a0(\"tgnemnmzeoknxybwgagmuiigcepjrkcncquocwawfkaameipafdkidnii\", &var_15h);\n    cVar1 = fcn.004c1160(&var_31h + 1, &var_4dh + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 5; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 693
    },
    "00415474": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00415474(void)\n\n{\n    uint var_44h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x21; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x40; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    for (var_ch = 0x3b; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "00415500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.00415500(void)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_9ch;\n    uint var_8ch;\n    uint var_74h;\n    uint var_5ah;\n    uint var_3dh;\n    uint var_21h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    var_dh._0_1_ = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"sfvxdxwjosfgogjrncscfadmpdf\", &var_5ah);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"tbyhanlbjrofuwkusnmnbjfncdiicvamsimgoefmfpdudbylsccjlpxmdmuvjgcgiuyadoptqmzpekrenpummykgsxcmypwrmgc\", \n                 &var_5ah + 1);\n    fcn.00483900();\n    var_14h = 0x442;\n    stack0xffffffdc = *0x522678;\n    fcn.004838d0();\n    fcn.004b29a0(\"tbyhanlbjrofuwkusnmnbjfncdiicvamsimgoefmfpdudbylsccjlpxmdmuvjgcgiuyadoptqmzpekrenpummykgsxcmypwrmgc\", \n                 &var_3dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"tbyhanlbjrofuwkusnmnbjfncdiicvamsimgoefmfpdudbylsccjlpxmdmuvjgcgiuyadoptqmzpekrenpummykgsxcmypwrmgc\", \n                 &var_21h);\n    cVar2 = fcn.004c1160(&var_3dh + 1, &var_5ah + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    dVar1 = *0x522680;\n    if (cVar2 != '\\0') {\n        for (stack0xfffffff0 = 0x27; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 609
    },
    "004156bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.004156bc(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_bch;\n    uint var_b4h;\n    uint var_99h;\n    uint var_7dh;\n    uint var_61h;\n    uint var_45h;\n    uint var_29h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"wxwbosufkhfceufhizodevbgtash\", &var_99h);\n    fcn.00483900();\n    var_1ch = 0x1cd2;\n    stack0xffffffd4 = *0x522688;\n    fcn.004838d0();\n    fcn.004b29a0(\"wxwbosufkhfceufhizodevbgtash\", &var_7dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"wxwbosufkhfceufhizodevbgtash\", &var_61h);\n    cVar1 = fcn.004c1160(&var_7dh + 1, &var_99h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x21; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x20; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"wxwbosufkhfceufhizodevbgtash\", &var_45h);\n    fcn.004838d0();\n    fcn.004b29a0(\"wxwbosufkhfceufhizodevbgtash\", &var_29h);\n    cVar1 = fcn.004c1830(&var_45h + 1, &var_61h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x12; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    for (var_18h = 0x30; 0 < var_18h; var_18h = var_18h + -1) {\n    }\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 703
    },
    "00415958": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415958(uint arg_8h, uint arg_ch)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 4; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return 1;\n}\n",
        "token_count": 100
    },
    "004159a6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004159a6(uint arg_8h)\n\n{\n    uint var_18h;\n    uint var_14h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x40; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x5a; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    return 1;\n}\n",
        "token_count": 132
    },
    "00415bda": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.00415bda(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_80h;\n    uint var_68h;\n    uint var_50h;\n    uint var_38h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar var_12h;\n    uchar var_11h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0xf3;\n    var_11h = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"omeuqtkxkriyzhubqbmifwk\", &var_20h);\n    fcn.00483900();\n    var_12h = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"qnsulsdubdstoazxynaivhwvjikdqfin\", &var_20h + 1);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"mxkdw\", &var_20h + 2);\n    fcn.00483900();\n    var_18h = 0x671;\n    var_1ch = 0x15bc;\n    fcn.004838d0();\n    fcn.004b29a0(\"sghgnaftsdvphvkyblbhpllbbtcnbgmtogfabocgpleeubmixnsodpoqfurttpeshqjwoxvucxsexwy\", &var_20h + 3);\n    fcn.00483900();\n    for (var_ch = 0x27; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 0x7bc9;\n}\n",
        "token_count": 509
    },
    "00415eb2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.00415eb2(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint noname_6, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h, uint noname_11, uint arg_38h, uint arg_3ch, \n            uint arg_40h)\n\n{\n    uint in_ECX;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_29h;\n    uint var_1ch;\n    ulong uStack28;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 400;\n    uStack28 = *0x5226b8;\n    var_1ch = 0x54c;\n    stack0xffffffd4 = *0x5226c0;\n    for (var_ch = 0x52; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"ufdajrexsezo\", &var_29h);\n    fcn.00483900();\n    return in_ECX;\n}\n",
        "token_count": 381
    },
    "00415f86": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 fcn.00415f86(void)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_12ch;\n    uint var_128h;\n    uint var_110h;\n    uint var_f8h;\n    uint var_dfh;\n    uint var_c1h;\n    uint var_a5h;\n    uint var_89h;\n    uint var_6dh;\n    uint var_51h;\n    uchar var_35h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    ulong uStack44;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"gfyskwbkpilbvufwnaqpfmesyxuxjkejyactzqhprvtkfeluuymsmwcov\", &var_dfh);\n    fcn.00483900();\n    var_1ch = 0x1c48;\n    fcn.004838d0();\n    fcn.004b29a0(\"nfoldrptzkl\", &var_dfh + 1);\n    fcn.00483900();\n    uStack44 = *0x5226c8;\n    fcn.004838d0();\n    fcn.004b29a0(\"gchgfzgiarwyadjsivaguhhkvl\", &var_dfh + 2);\n    fcn.00483900();\n    var_2ch = 0x960;\n    var_30h = 0x96b;\n    var_34h = 0x21f;\n    fcn.004838d0();\n    fcn.004b29a0(\"nfoldrptzkl\", &var_c1h);\n    fcn.004838d0();\n    fcn.004b29a0(\"nfoldrptzkl\", &var_a5h);\n    cVar2 = fcn.004c1160(&var_c1h + 1, &var_dfh + 3);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x22; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x11; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"nfoldrptzkl\", &var_89h);\n    fcn.004838d0();\n    fcn.004b29a0(\"nfoldrptzkl\", &var_6dh);\n    cVar2 = fcn.004c1830(&var_89h + 1, &var_a5h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar2 != '\\0') {\n        for (var_14h = 6; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"nfoldrptzkl\", &var_51h);\n    fcn.004838d0();\n    fcn.004b29a0(\"nfoldrptzkl\", &var_35h);\n    cVar2 = fcn.004c1830(&var_51h + 1, &var_6dh + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    dVar1 = *0x5226d0;\n    if (cVar2 != '\\0') {\n        for (var_18h = 0x40; 0 < var_18h; var_18h = var_18h + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 1027
    },
    "004163d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.004163d0(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint arg_28h)\n\n{\n    char cVar1;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c4h;\n    uint var_ach;\n    uint var_92h;\n    uint var_75h;\n    uint var_59h;\n    uint var_3dh;\n    uchar var_22h;\n    uchar var_21h;\n    uchar var_20h;\n    uchar var_1fh;\n    uchar var_1eh;\n    uchar var_1dh;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"eovhouavbtdyactuanaxsgptmwtktgtfrgnpuar\", &var_92h);\n    fcn.00483900();\n    var_18h = 0x1393;\n    var_1ch = 0x727;\n    var_1dh = 1;\n    var_1eh = 1;\n    var_1fh = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"ktrbjgmwwyddkdtblrhjmqtnzvvqcbyvcvvayqxofmpxwkbjmfwfepasrebeastqjalmwhhywmnvbucmntpqnvpmlrxcrybukbps\"\n                 , &var_92h + 1);\n    fcn.00483900();\n    var_20h = 1;\n    var_21h = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"eovhouavbtdyactuanaxsgptmwtktgtfrgnpuar\", &var_75h);\n    fcn.004838d0();\n    fcn.004b29a0(\"eovhouavbtdyactuanaxsgptmwtktgtfrgnpuar\", &var_59h);\n    cVar1 = fcn.004c1160(&var_75h + 1, &var_92h + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0xe; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"ktrbjgmwwyddkdtblrhjmqtnzvvqcbyvcvvayqxofmpxwkbjmfwfepasrebeastqjalmwhhywmnvbucmntpqnvpmlrxcrybukbps\"\n                 , &var_3dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"ktrbjgmwwyddkdtblrhjmqtnzvvqcbyvcvvayqxofmpxwkbjmfwfepasrebeastqjalmwhhywmnvbucmntpqnvpmlrxcrybukbps\"\n                 , &var_22h);\n    cVar1 = fcn.004c1160(&var_3dh + 1, &var_59h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 3; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (var_14h = 0x15; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 0xcac0;\n}\n",
        "token_count": 1028
    },
    "00416858": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.00416858(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h, uint noname_5, uint arg_20h, \n            uint noname_7, uint arg_28h)\n\n{\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_60h;\n    uint var_48h;\n    uint var_30h;\n    uint var_2ch;\n    ulong uStack44;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x5226f8;\n    fcn.004838d0();\n    fcn.004b29a0(\"mwycyguahsosxqmxnyokgqpmgpzsvuywacglzbgkspjpcfwuvztqywxrinyvxgiisbnraenotasgdjpdsfypwftldbfjzaqgw\", \n                 &var_30h);\n    fcn.00483900();\n    var_1ch = 0x189;\n    uStack44 = *0x522700;\n    fcn.004838d0();\n    fcn.004b29a0(\"wapfbehckzdroacutenxiobfgdeelrvhzntasahdxageatxechxrjagkimxpjkmgjbwforeagxuiilxnc\", &var_30h + 1);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"jroembqqllknrhmzzbgf\", &var_30h + 2);\n    fcn.00483900();\n    var_2ch = 0x71f;\n    var_30h._3_1_ = 1;\n    for (var_ch = 0x24; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 1;\n}\n",
        "token_count": 530
    },
    "004169cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004169cc(uint arg_8h)\n\n{\n    char cVar1;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b4h;\n    uint var_99h;\n    uint var_7dh;\n    uint var_61h;\n    uint var_45h;\n    uint var_29h;\n    uchar var_1ah;\n    int32_t var_19h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_19h._0_1_ = 1;\n    var_1ah = 0;\n    stack0xffffffd4 = *0x522708;\n    fcn.004838d0();\n    fcn.004b29a0(\"ffzzgcqs\", &var_99h);\n    fcn.00483900();\n    for (var_ch = 0x5b; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"ffzzgcqs\", &var_7dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"ffzzgcqs\", &var_61h);\n    cVar1 = fcn.004c1830(&var_7dh + 1, &var_99h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (var_14h = 0x5d; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"ffzzgcqs\", &var_45h);\n    fcn.004838d0();\n    fcn.004b29a0(\"ffzzgcqs\", &var_29h);\n    cVar1 = fcn.004c1160(&var_45h + 1, &var_61h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffe4 = 0x2a; 0 < stack0xffffffe4; unique0x00007a80 = stack0xffffffe4 + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 668
    },
    "00416c32": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.00416c32(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint arg_18h, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint arg_2ch, uint arg_30h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_60h;\n    uint var_45h;\n    uint var_29h;\n    int32_t var_eh;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"homenqwukummrudiewilozaixbbukwdjalvejxxotdvxwgpijeeintsmymtofrxsxblurwckyhelmiczuaagsjyne\", &var_45h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"homenqwukummrudiewilozaixbbukwdjalvejxxotdvxwgpijeeintsmymtofrxsxblurwckyhelmiczuaagsjyne\", &var_29h);\n    fcn.004838d0();\n    fcn.004b29a0(\"homenqwukummrudiewilozaixbbukwdjalvejxxotdvxwgpijeeintsmymtofrxsxblurwckyhelmiczuaagsjyne\", &var_eh);\n    cVar1 = fcn.004c1830(&var_29h + 1, &var_45h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (stack0xfffffff0 = 0xf; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"mwkojzuvfypmxqhpsyfw\", &var_eh + 1);\n    fcn.00483900();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 571
    },
    "00416eac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00416eac(void)\n\n{\n    uint var_5ch;\n    uint var_4ch;\n    uchar var_33h;\n    uchar var_32h;\n    uint var_31h;\n    uint var_28h;\n    uint var_21h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffdc = *0x522728;\n    var_21h._0_1_ = 1;\n    var_28h = 0x6d9;\n    stack0xffffffcc = *0x522730;\n    var_31h._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"cuyjslkvwwtxknflopaxhkysdvxhfoyuunvfghaqmlenbciqetyvdewnmllnxpjreldhwmxabetfre\", &var_33h);\n    fcn.00483900();\n    var_32h = 0;\n    for (var_ch = 0x1a; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x21; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x3a; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004b2fc0();\n    return 0;\n}\n",
        "token_count": 391
    },
    "0041846c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.0041846c(uint arg_8h)\n\n{\n    char cVar1;\n    uint var_100h;\n    uint var_fch;\n    uint var_f0h;\n    uint var_d8h;\n    uint var_beh;\n    uint var_a1h;\n    uint var_85h;\n    uint var_69h;\n    uint var_4dh;\n    uint var_31h;\n    int32_t var_15h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"hamrufuswtjpbtt\", &var_beh);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"ukadyzostttjzikzonyvsfrgyswbwgzwnttozxlaevcdstvtycjcejooxdxswyqc\", &var_beh + 1);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"hamrufuswtjpbtt\", &var_a1h);\n    fcn.004838d0();\n    fcn.004b29a0(\"hamrufuswtjpbtt\", &var_85h);\n    cVar1 = fcn.004c1160(&var_a1h + 1, &var_beh + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x34; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"ukadyzostttjzikzonyvsfrgyswbwgzwnttozxlaevcdstvtycjcejooxdxswyqc\", &var_69h);\n    fcn.004838d0();\n    fcn.004b29a0(\"ukadyzostttjzikzonyvsfrgyswbwgzwnttozxlaevcdstvtycjcejooxdxswyqc\", &var_4dh);\n    cVar1 = fcn.004c1160(&var_69h + 1, &var_85h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x17; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"ukadyzostttjzikzonyvsfrgyswbwgzwnttozxlaevcdstvtycjcejooxdxswyqc\", &var_31h);\n    fcn.004838d0();\n    fcn.004b29a0(\"ukadyzostttjzikzonyvsfrgyswbwgzwnttozxlaevcdstvtycjcejooxdxswyqc\", &var_15h);\n    cVar1 = fcn.004c1160(&var_31h + 1, &var_4dh + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffe8 = 0xb; 0 < stack0xffffffe8; unique0x00007a80 = stack0xffffffe8 + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 0;\n}\n",
        "token_count": 923
    },
    "004187fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004187fc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint noname_10, uint noname_11, uint arg_38h, uint arg_3ch)\n\n{\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    int32_t var_ch;\n    \n    for (var_ch = 0x3f; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "0041888a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041888a(uint noname_0, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch)\n\n{\n    char cVar1;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_8ch;\n    uint var_71h;\n    uint var_55h;\n    uchar var_3ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uchar var_39h;\n    uint var_38h;\n    uint var_31h;\n    ulong uStack44;\n    ulong uStack36;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_18h = 0xd8d;\n    uStack36 = *0x522838;\n    uStack44 = *0x522840;\n    stack0xffffffcc = *0x522848;\n    var_31h._0_1_ = 0;\n    var_38h = 0x752;\n    var_39h = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"gihozlivxorlotiiuiuiyuoxuphkbuswshahfurjvnhmpjbzuuqr\", &var_71h);\n    fcn.00483900();\n    var_3ah = 1;\n    var_3bh = 1;\n    for (var_ch = 0x5d; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 6; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"gihozlivxorlotiiuiuiyuoxuphkbuswshahfurjvnhmpjbzuuqr\", &var_55h);\n    fcn.004838d0();\n    fcn.004b29a0(\"gihozlivxorlotiiuiuiyuoxuphkbuswshahfurjvnhmpjbzuuqr\", &var_3ch);\n    cVar1 = fcn.004c1830(&var_55h + 1, &var_71h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_14h = 4; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 671
    },
    "00418a44": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.00418a44(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_54h;\n    uint var_3ah;\n    uint var_2ch;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_24h;\n    ulong uStack36;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_14h = 0x308;\n    fcn.004838d0();\n    fcn.004b29a0(\"fixhsbeehnrytucsejrvyndzynbtldgesqadnjjvcvhxraqt\", &var_3ah);\n    fcn.00483900();\n    uStack36 = *0x522850;\n    var_24h = 0xaf6;\n    var_25h = 1;\n    var_26h = 0;\n    var_2ch = 0x70e;\n    fcn.004838d0();\n    fcn.004b29a0(\"yviqgqstnjvakdvakbxwbfmoklrlmryc\", &var_3ah + 1);\n    fcn.00483900();\n    stack0xffffffc4 = *0x522858;\n    for (var_ch = 0x47; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x5a; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 0x43e5;\n}\n",
        "token_count": 457
    },
    "00418b7a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00418b7a(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint noname_5, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_50h;\n    uint var_35h;\n    ulong uStack52;\n    uint var_28h;\n    uchar var_21h;\n    uint var_20h;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    var_dh._0_1_ = 1;\n    uStack28 = *0x522860;\n    var_1ch = 0x23e9;\n    var_20h = 0x2262;\n    var_21h = 0;\n    var_28h = 0x1f8;\n    fcn.004838d0();\n    fcn.004b29a0(\"thftzsajeyeprnktqcciubyylanjykztnifnbdiatiubkipicfxbqslinnylfnbdwjswinjt\", &var_35h);\n    fcn.00483900();\n    uStack52 = *0x522868;\n    stack0xffffffc8 = 0x1383;\n    for (stack0xfffffff0 = 100; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    fcn.004b2fc0();\n    return 0x14ff1;\n}\n",
        "token_count": 429
    },
    "00418c54": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00418c54(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_74h;\n    uint var_5ch;\n    uint var_43h;\n    uint var_34h;\n    ulong uStack52;\n    uint var_21h;\n    ulong uStack28;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    var_dh._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"gipvxzvanxwarhnuukzwjxlksrjtlhqipzaokwjawkxw\", &var_43h);\n    fcn.00483900();\n    uStack28 = *0x522870;\n    stack0xffffffdc = *0x522878;\n    fcn.004838d0();\n    fcn.004b29a0(\"yecrxpn\", &var_43h + 1);\n    fcn.00483900();\n    var_21h._0_1_ = 1;\n    uStack52 = *0x522880;\n    var_34h = 0x617;\n    stack0xffffffbc = *0x522888;\n    var_43h._2_1_ = 1;\n    for (stack0xfffffff0 = 0x2c; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 498
    },
    "00418dc6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.00418dc6(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_51h;\n    uint var_35h;\n    uint var_19h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"bktwyddjwxutgzopgclsixkdwqq\", &var_51h);\n    fcn.00483900();\n    stack0xffffffe4 = *0x522890;\n    fcn.004838d0();\n    fcn.004b29a0(\"bktwyddjwxutgzopgclsixkdwqq\", &var_35h);\n    fcn.004838d0();\n    fcn.004b29a0(\"bktwyddjwxutgzopgclsixkdwqq\", &var_19h);\n    cVar1 = fcn.004c1160(&var_35h + 1, &var_51h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x41; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 421
    },
    "00418f36": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00418f36(void)\n\n{\n    char cVar1;\n    uint var_ach;\n    uint var_9ch;\n    uint var_81h;\n    uint var_65h;\n    uint var_49h;\n    uint var_2dh;\n    uchar var_12h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"aydrflmyfdsuuwdxhzjymzzr\", &var_81h);\n    fcn.00483900();\n    var_11h._0_1_ = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"aydrflmyfdsuuwdxhzjymzzr\", &var_65h);\n    fcn.004838d0();\n    fcn.004b29a0(\"aydrflmyfdsuuwdxhzjymzzr\", &var_49h);\n    cVar1 = fcn.004c1830(&var_65h + 1, &var_81h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x24; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"aydrflmyfdsuuwdxhzjymzzr\", &var_2dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"aydrflmyfdsuuwdxhzjymzzr\", &var_12h);\n    cVar1 = fcn.004c1160(&var_2dh + 1, &var_49h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffec = 0x1c; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    return 0x12e5b;\n}\n",
        "token_count": 579
    },
    "00419156": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl\nfcn.00419156(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_7ch;\n    uint var_61h;\n    uint var_45h;\n    uint var_29h;\n    ulong uStack36;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"igrayqvcfyaatmqzbdwemdunlskbykiymcwwvzzceubmcugxkvxcpqeetfmxdtjtskgflzlosypoqfxvxcvcbrmahprskiehacs\", \n                 &var_61h);\n    fcn.00483900();\n    uStack36 = *0x522898;\n    stack0xffffffd4 = *0x5228a0;\n    for (var_ch = 0x20; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x22; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x19; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"igrayqvcfyaatmqzbdwemdunlskbykiymcwwvzzceubmcugxkvxcpqeetfmxdtjtskgflzlosypoqfxvxcvcbrmahprskiehacs\", \n                 &var_45h);\n    fcn.004838d0();\n    fcn.004b29a0(\"igrayqvcfyaatmqzbdwemdunlskbykiymcwwvzzceubmcugxkvxcpqeetfmxdtjtskgflzlosypoqfxvxcvcbrmahprskiehacs\", \n                 &var_29h);\n    cVar1 = fcn.004c1830(&var_45h + 1, &var_61h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_18h = 0x1f; 0 < var_18h; var_18h = var_18h + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 703
    },
    "00419586": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00419586(void)\n\n{\n    uint var_14h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0xd; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "00419e5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.00419e5c(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_bch;\n    uint var_a4h;\n    uint var_8ah;\n    uint var_6dh;\n    uint var_51h;\n    uint var_35h;\n    uint var_19h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"oaavdorustzihceosdmh\", &var_8ah);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"ztunlckgtjutyfoxpppfd\", &var_8ah + 1);\n    fcn.00483900();\n    stack0xffffffe4 = *0x522948;\n    fcn.004838d0();\n    fcn.004b29a0(\"ztunlckgtjutyfoxpppfd\", &var_6dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"ztunlckgtjutyfoxpppfd\", &var_51h);\n    cVar1 = fcn.004c1830(&var_6dh + 1, &var_8ah + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x52; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"oaavdorustzihceosdmh\", &var_35h);\n    fcn.004838d0();\n    fcn.004b29a0(\"oaavdorustzihceosdmh\", &var_19h);\n    cVar1 = fcn.004c1160(&var_35h + 1, &var_51h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x17; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 660
    },
    "0041a1ee": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041a1ee(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint noname_5, uint noname_6, \n            uint arg_24h)\n\n{\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x5d; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x12; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    for (var_ch = 0x46; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x4c; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    return 1;\n}\n",
        "token_count": 286
    },
    "0041a338": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0041a338(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint arg_20h)\n\n{\n    char cVar1;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_74h;\n    uint var_59h;\n    uint var_3dh;\n    uchar var_21h;\n    uint var_20h;\n    uint var_19h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffe4 = *0x522968;\n    var_19h._0_1_ = 0;\n    var_20h = 0x1343;\n    fcn.004838d0();\n    fcn.004b29a0(\"xmbcwqpeoasdbwouoyjzgrjihikypttlmlodeihwycskpxnpxaeglrxqwriohrulllxpftplvyevyjuaflpxapyi\", &var_59h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"xmbcwqpeoasdbwouoyjzgrjihikypttlmlodeihwycskpxnpxaeglrxqwriohrulllxpftplvyevyjuaflpxapyi\", &var_3dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"xmbcwqpeoasdbwouoyjzgrjihikypttlmlodeihwycskpxnpxaeglrxqwriohrulllxpftplvyevyjuaflpxapyi\", &var_21h);\n    cVar1 = fcn.004c1160(&var_3dh + 1, &var_59h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 99; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x3d; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 615
    },
    "0041a4b6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.0041a4b6(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint noname_10, uint noname_11, uint arg_38h, uint arg_3ch, \n            uint arg_40h)\n\n{\n    uint in_ECX;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_3ch;\n    uint var_22h;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_18h = 0xe4;\n    fcn.004838d0();\n    fcn.004b29a0(\"gouabupgktkelihnlwuaczpreqgyvvpnifxaisnozdyaxfybiuntriuzwsdbxqhhljrllvnquxzubz\", &var_22h);\n    fcn.00483900();\n    stack0xffffffdc = *0x522970;\n    for (var_ch = 10; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 10; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x1b; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"szzbdrbrt\", &var_22h + 1);\n    fcn.00483900();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 527
    },
    "0041a600": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0041a600(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    char cVar1;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_13ch;\n    uint var_124h;\n    uint var_10ch;\n    uint var_f4h;\n    uint var_dch;\n    uchar var_d8h [27];\n    uint var_bdh;\n    uint var_a1h;\n    uint var_85h;\n    uint var_69h;\n    uint var_4dh;\n    uchar var_31h;\n    uint var_30h;\n    uint var_29h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_15h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"obgl\", &var_dch);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"glggvdrcxhvkznrfyrojzdnrwrqbsqjyztuaxmjiljvwjbpqrkkvtwnjsdy\", &var_dch + 1);\n    fcn.00483900();\n    var_15h._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"lbswhotkbrevdsknocmiebxmhafnbcsqrdocufufustlhgksinaeifolyzgtl\", &var_dch + 2);\n    fcn.00483900();\n    var_1ch = 0x15ab;\n    var_20h = 0x510;\n    stack0xffffffd4 = *0x522978;\n    var_29h._0_1_ = 1;\n    var_30h = 0xcf;\n    fcn.004838d0();\n    fcn.004b29a0(\"orwlieismswizxwxfflzscsivmbtyvtn\", &var_dch + 3);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"obgl\", &var_bdh);\n    fcn.004838d0();\n    fcn.004b29a0(\"obgl\", &var_a1h);\n    cVar1 = fcn.004c1160(&var_bdh + 1, var_d8h);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 9; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"obgl\", &var_85h);\n    fcn.004838d0();\n    fcn.004b29a0(\"obgl\", &var_69h);\n    cVar1 = fcn.004c1830(&var_85h + 1, &var_a1h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x5f; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"lbswhotkbrevdsknocmiebxmhafnbcsqrdocufufustlhgksinaeifolyzgtl\", &var_4dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"lbswhotkbrevdsknocmiebxmhafnbcsqrdocufufustlhgksinaeifolyzgtl\", &var_31h);\n    cVar1 = fcn.004c1160(&var_4dh + 1, &var_69h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffe8 = 0x35; 0 < stack0xffffffe8; unique0x00007a80 = stack0xffffffe8 + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 1232
    },
    "0041aae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0041aae0(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint noname_5, uint noname_6, \n            uint noname_7, uint arg_28h, uint arg_2ch, uint arg_30h, uint arg_34h, uint arg_38h)\n\n{\n    char cVar1;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_8ch;\n    uint var_71h;\n    uint var_55h;\n    uchar var_39h;\n    uint var_38h;\n    uint var_31h;\n    uint var_24h;\n    ulong uStack36;\n    uchar var_12h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 0;\n    var_12h = 0;\n    uStack36 = *0x522980;\n    var_24h = 0x12b8;\n    stack0xffffffcc = *0x522988;\n    var_31h._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"uter\", &var_71h);\n    fcn.00483900();\n    var_38h = 0x253;\n    fcn.004838d0();\n    fcn.004b29a0(\"uter\", &var_55h);\n    fcn.004838d0();\n    fcn.004b29a0(\"uter\", &var_39h);\n    cVar1 = fcn.004c1830(&var_55h + 1, &var_71h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x37; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (stack0xffffffec = 0x35; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n    }\n    fcn.004b2fc0();\n    return 0x16f45;\n}\n",
        "token_count": 615
    },
    "0041acba": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl\nfcn.0041acba(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint arg_28h)\n\n{\n    char cVar1;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a0h;\n    uint var_88h;\n    uint var_6eh;\n    uint var_51h;\n    uchar var_35h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    ulong uStack44;\n    uchar var_19h;\n    uint var_18h;\n    uchar var_11h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0x7f6;\n    var_11h = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"kwlpkpdwdjpdbofpfpnorticklbxzlctuwp\", &var_6eh);\n    fcn.00483900();\n    var_18h = 0x109;\n    var_19h = 0;\n    uStack44 = *0x522990;\n    var_2ch = 0x4c3;\n    fcn.004838d0();\n    fcn.004b29a0(\"ficmmxiyqxfeccjlgpfznjvsrietjvqt\", &var_6eh + 1);\n    fcn.00483900();\n    var_30h = 0x991;\n    var_34h = 0x58e;\n    fcn.004838d0();\n    fcn.004b29a0(\"ficmmxiyqxfeccjlgpfznjvsrietjvqt\", &var_51h);\n    fcn.004838d0();\n    fcn.004b29a0(\"ficmmxiyqxfeccjlgpfznjvsrietjvqt\", &var_35h);\n    cVar1 = fcn.004c1160(&var_51h + 1, &var_6eh + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x30; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 644
    },
    "0041aeb6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041aeb6(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h)\n\n{\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x16; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x2e; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "0041af16": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0041af16(uint param_1)\n\n{\n    uint var_4ch;\n    uint var_44h;\n    uint var_2ah;\n    uchar var_21h;\n    uint var_20h;\n    uint var_19h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffe4 = *0x522998;\n    fcn.004838d0();\n    fcn.004b29a0(\"xkhhugqcieuuokqdwcuquoizzqyknsxoibyqicbvvdlkrumtkkpkiynzghviivzozaktzbnvuh\", &var_2ah);\n    fcn.00483900();\n    var_19h._0_1_ = 0;\n    var_20h = 0x88c;\n    var_21h = 0;\n    stack0xffffffd4 = 0x1062;\n    for (var_ch = 0x49; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x45; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"wilqcyhkjykmtnfkpbwf\", &var_2ah + 1);\n    fcn.00483900();\n    fcn.004b2fc0();\n    return param_1;\n}\n",
        "token_count": 378
    },
    "0041b106": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041b106(uint noname_0, uint arg_ch)\n\n{\n    uint var_50h;\n    uint var_4ch;\n    uint var_3ch;\n    uint var_21h;\n    uint var_19h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffe4 = *0x5229a8;\n    fcn.004838d0();\n    fcn.004b29a0(\"jzrfhhsjgzmifcnqsmmi\", &var_21h);\n    fcn.00483900();\n    var_19h._0_1_ = 0;\n    stack0xffffffdc = 0x1de;\n    for (var_ch = 0x3a; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2fc0();\n    return 1;\n}\n",
        "token_count": 234
    },
    "0041b19e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041b19e(uint noname_0, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f0h;\n    uint var_d8h;\n    uint var_beh;\n    uint var_a1h;\n    uint var_85h;\n    uint var_69h;\n    uint var_4dh;\n    uint var_31h;\n    uchar var_17h;\n    uchar var_16h;\n    int32_t var_15h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"etobbwglfbvkxy\", &var_beh);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"sqzojhlyviimvyvysaxvomsalhbropycuizthrwnzuooqfztssyczyywwsxucxlrntnrjawrnz\", &var_beh + 1);\n    fcn.00483900();\n    var_15h._0_1_ = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"sqzojhlyviimvyvysaxvomsalhbropycuizthrwnzuooqfztssyczyywwsxucxlrntnrjawrnz\", &var_a1h);\n    fcn.004838d0();\n    fcn.004b29a0(\"sqzojhlyviimvyvysaxvomsalhbropycuizthrwnzuooqfztssyczyywwsxucxlrntnrjawrnz\", &var_85h);\n    cVar1 = fcn.004c1830(&var_a1h + 1, &var_beh + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 100; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"etobbwglfbvkxy\", &var_69h);\n    fcn.004838d0();\n    fcn.004b29a0(\"etobbwglfbvkxy\", &var_4dh);\n    cVar1 = fcn.004c1160(&var_69h + 1, &var_85h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x3d; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"sqzojhlyviimvyvysaxvomsalhbropycuizthrwnzuooqfztssyczyywwsxucxlrntnrjawrnz\", &var_31h);\n    fcn.004838d0();\n    fcn.004b29a0(\"sqzojhlyviimvyvysaxvomsalhbropycuizthrwnzuooqfztssyczyywwsxucxlrntnrjawrnz\", &var_17h);\n    cVar1 = fcn.004c1160(&var_31h + 1, &var_4dh + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffe8 = 0x5b; 0 < stack0xffffffe8; unique0x00007a80 = stack0xffffffe8 + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"rzzpsis\", &var_16h);\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 1071
    },
    "0041b584": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041b584(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x5b; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "0041c52a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041c52a(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_1cch;\n    uint var_1c0h;\n    uint var_1a8h;\n    uint var_190h;\n    uint var_178h;\n    uint var_160h;\n    uint var_145h;\n    uchar var_141h;\n    uchar var_140h [27];\n    uint var_125h;\n    uint var_109h;\n    uint var_edh;\n    uint var_d1h;\n    uint var_b5h;\n    uint var_99h;\n    uint var_7dh;\n    uint var_61h;\n    uint var_45h;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uint var_29h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffd4 = *0x522a88;\n    fcn.004838d0();\n    fcn.004b29a0(\"pinrqkurdbzqzlxqvonyezheaotoadpgfyplijkxjmgfjexstdxyqjyij\", &var_145h);\n    fcn.00483900();\n    var_29h._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"rifvslcqreglxkzhwkqyptatqvuvealpobphoblqrlnwbxmcrtjvv\", &var_145h + 1);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"oxtgwzadinuusgdojnwfyldndvdjensyfaiyeyzwrknnhkqvlzjiiiriwmygsitvzgyyabuyndqzbbaokiznghtjizgsygbasqi\", \n                 &var_145h + 2);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(0x51df2c, &var_145h + 3);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"vxzqgelricochcmftjoudcahvfhqwrgqmzfkyrnzgafqg\", &var_141h);\n    fcn.00483900();\n    var_2ah = 0;\n    fcn.004838d0();\n    fcn.004b29a0(0x51df2c, &var_125h);\n    fcn.004838d0();\n    fcn.004b29a0(0x51df2c, &var_109h);\n    cVar1 = fcn.004c1160(&var_125h + 1, var_140h);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x62; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"vxzqgelricochcmftjoudcahvfhqwrgqmzfkyrnzgafqg\", &var_edh);\n    fcn.004838d0();\n    fcn.004b29a0(\"vxzqgelricochcmftjoudcahvfhqwrgqmzfkyrnzgafqg\", &var_d1h);\n    cVar1 = fcn.004c1160(&var_edh + 1, &var_109h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x43; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"vxzqgelricochcmftjoudcahvfhqwrgqmzfkyrnzgafqg\", &var_b5h);\n    fcn.004838d0();\n    fcn.004b29a0(\"vxzqgelricochcmftjoudcahvfhqwrgqmzfkyrnzgafqg\", &var_99h);\n    cVar1 = fcn.004c1830(&var_b5h + 1, &var_d1h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x44; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"oxtgwzadinuusgdojnwfyldndvdjensyfaiyeyzwrknnhkqvlzjiiiriwmygsitvzgyyabuyndqzbbaokiznghtjizgsygbasqi\", \n                 &var_7dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"oxtgwzadinuusgdojnwfyldndvdjensyfaiyeyzwrknnhkqvlzjiiiriwmygsitvzgyyabuyndqzbbaokiznghtjizgsygbasqi\", \n                 &var_61h);\n    cVar1 = fcn.004c1830(&var_7dh + 1, &var_99h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_18h = 0x5c; 0 < var_18h; var_18h = var_18h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"pinrqkurdbzqzlxqvonyezheaotoadpgfyplijkxjmgfjexstdxyqjyij\", &var_45h);\n    fcn.004838d0();\n    fcn.004b29a0(\"pinrqkurdbzqzlxqvonyezheaotoadpgfyplijkxjmgfjexstdxyqjyij\", &var_2ch);\n    cVar1 = fcn.004c1830(&var_45h + 1, &var_61h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_1ch = 0x2b; 0 < var_1ch; var_1ch = var_1ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"oiukhcfhnwlenne\", &var_2bh);\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 1877
    },
    "0041cf32": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0041cf32(uint noname_0, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_9h;\n    int32_t var_4h;\n    \n    for (var_4h = 2; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (stack0xfffffff4 = 5; 0 < stack0xfffffff4; unique0x00007a80 = stack0xfffffff4 + -1) {\n    }\n    return *0x522aa8;\n}\n",
        "token_count": 187
    },
    "0041d124": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0041d124(uint noname_0, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    uint var_90h;\n    uint var_8ch;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_64h;\n    uint var_4ch;\n    uint var_32h;\n    uint var_28h;\n    uint var_24h;\n    ulong uStack36;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    var_dh._0_1_ = 1;\n    var_14h = 0xb93;\n    var_18h = 0xf0f;\n    uStack36 = *0x522ab8;\n    var_24h = 0x53d;\n    var_28h = 0x474;\n    fcn.004838d0();\n    fcn.004b29a0(\"nlfrnxlfmlnriqwffbgpamrlsyquridblcapusedvdidteipoejbsahvpsxyrwgtpoudanuldmwzitbvfpkovapjueisvtmtxy\", \n                 &var_32h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"crgxxgtugqfjyiyhpaqlyoqwtlmjoyal\", &var_32h + 1);\n    fcn.00483900();\n    stack0xffffffcc = *0x522ac0;\n    for (stack0xfffffff0 = 0x14; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 0x139fb;\n}\n",
        "token_count": 534
    },
    "0041d26a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.0041d26a(void)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_8ch;\n    uint var_7ch;\n    uint var_61h;\n    uint var_45h;\n    uchar var_29h;\n    uint var_28h;\n    uint var_21h;\n    uchar var_17h;\n    uchar var_16h;\n    uchar var_15h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_14h = 0xba;\n    var_15h = 1;\n    var_16h = 0;\n    var_17h = 0;\n    stack0xffffffdc = *0x522ac8;\n    var_21h._0_1_ = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"foxlqiouzqqqdsikoqpyfjcidtnoljduzucaujuzjyjsecoerjfvqtvijwrpyfzwduvuikuuqiwvzcren\", &var_61h);\n    fcn.00483900();\n    var_28h = 0xcc5;\n    fcn.004838d0();\n    fcn.004b29a0(\"foxlqiouzqqqdsikoqpyfjcidtnoljduzucaujuzjyjsecoerjfvqtvijwrpyfzwduvuikuuqiwvzcren\", &var_45h);\n    fcn.004838d0();\n    fcn.004b29a0(\"foxlqiouzqqqdsikoqpyfjcidtnoljduzucaujuzjyjsecoerjfvqtvijwrpyfzwduvuikuuqiwvzcren\", &var_29h);\n    cVar2 = fcn.004c1160(&var_45h + 1, &var_61h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    dVar1 = *0x522ad0;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0xf; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x5c; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 631
    },
    "0041d3f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041d3f4(void)\n\n{\n    char cVar1;\n    uint var_dch;\n    uint var_d4h;\n    uint var_bch;\n    uint var_a2h;\n    uint var_85h;\n    uint var_69h;\n    uint var_4dh;\n    uchar var_32h;\n    uint var_31h;\n    ulong uStack44;\n    uchar var_19h;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_18h = 0x189;\n    var_19h = 1;\n    uStack44 = *0x522ad8;\n    fcn.004838d0();\n    fcn.004b29a0(\"ymugaohmauzfbzuqhaufn\", &var_a2h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"ddekkuzzltjdgrnbwispwmwdyaidieoc\", &var_a2h + 1);\n    fcn.00483900();\n    stack0xffffffcc = *0x522ae0;\n    var_31h._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"ddekkuzzltjdgrnbwispwmwdyaidieoc\", &var_85h);\n    fcn.004838d0();\n    fcn.004b29a0(\"ddekkuzzltjdgrnbwispwmwdyaidieoc\", &var_69h);\n    cVar1 = fcn.004c1830(&var_85h + 1, &var_a2h + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x48; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"ddekkuzzltjdgrnbwispwmwdyaidieoc\", &var_4dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"ddekkuzzltjdgrnbwispwmwdyaidieoc\", &var_32h);\n    cVar1 = fcn.004c1830(&var_4dh + 1, &var_69h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x53; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (var_14h = 0x32; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 767
    },
    "0041d72e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0041d72e(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    char cVar1;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_110h;\n    uint var_f8h;\n    uint var_e0h;\n    uint var_c8h;\n    uchar var_c4h [27];\n    uint var_a9h;\n    uint var_8dh;\n    uint var_71h;\n    uint var_55h;\n    uint var_39h;\n    uchar var_1dh;\n    uchar var_1ch;\n    uchar var_1bh;\n    uchar var_1ah;\n    int32_t var_19h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_19h._0_1_ = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"lfstxcjldgydamevecjfjaecfgydna\", &var_c8h);\n    fcn.00483900();\n    var_1ah = 1;\n    var_1bh = 1;\n    var_1ch = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"fdrryeqzghymrxplfojkmdeetyylr\", &var_c8h + 1);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"ateogm\", &var_c8h + 2);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"xhumlkmjfpfjgrzphpmbddupatllmthsjsrboigelnkwpcxbkjfrfaowhihokydhoybawjoiostacvrcevreqqiuzdia\", \n                 &var_c8h + 3);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"xhumlkmjfpfjgrzphpmbddupatllmthsjsrboigelnkwpcxbkjfrfaowhihokydhoybawjoiostacvrcevreqqiuzdia\", \n                 &var_a9h);\n    fcn.004838d0();\n    fcn.004b29a0(\"xhumlkmjfpfjgrzphpmbddupatllmthsjsrboigelnkwpcxbkjfrfaowhihokydhoybawjoiostacvrcevreqqiuzdia\", \n                 &var_8dh);\n    cVar1 = fcn.004c1830(&var_a9h + 1, var_c4h);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x62; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"ateogm\", &var_71h);\n    fcn.004838d0();\n    fcn.004b29a0(\"ateogm\", &var_55h);\n    cVar1 = fcn.004c1160(&var_71h + 1, &var_8dh + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x18; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"lfstxcjldgydamevecjfjaecfgydna\", &var_39h);\n    fcn.004838d0();\n    fcn.004b29a0(\"lfstxcjldgydamevecjfjaecfgydna\", &var_1dh);\n    cVar1 = fcn.004c1160(&var_39h + 1, &var_55h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    for (stack0xffffffe4 = 0x21; 0 < stack0xffffffe4; unique0x00007a80 = stack0xffffffe4 + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 1309
    },
    "0041dbf6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.0041dbf6(uint arg_8h)\n\n{\n    char cVar1;\n    uint var_190h;\n    uint var_18ch;\n    uint var_184h;\n    uint var_16ch;\n    uint var_154h;\n    uint var_13bh;\n    uint var_11dh;\n    uint var_101h;\n    uint var_e5h;\n    uint var_c9h;\n    uint var_adh;\n    uint var_91h;\n    uint var_75h;\n    uint var_59h;\n    uint var_3dh;\n    uchar var_21h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_20h = 0x91e;\n    fcn.004838d0();\n    fcn.004b29a0(\"nmppzkhxvfv\", &var_13bh);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"inrzpra\", &var_13bh + 1);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"ooqwlhuthuhzyxujknuuuatbnmvqxgdixwyjgvmospfriabxlchdjfsurkdeu\", &var_13bh + 2);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"inrzpra\", &var_11dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"inrzpra\", &var_101h);\n    cVar1 = fcn.004c1830(&var_11dh + 1, &var_13bh + 3);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x14; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"nmppzkhxvfv\", &var_e5h);\n    fcn.004838d0();\n    fcn.004b29a0(\"nmppzkhxvfv\", &var_c9h);\n    cVar1 = fcn.004c1830(&var_e5h + 1, &var_101h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x4a; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"ooqwlhuthuhzyxujknuuuatbnmvqxgdixwyjgvmospfriabxlchdjfsurkdeu\", &var_adh);\n    fcn.004838d0();\n    fcn.004b29a0(\"ooqwlhuthuhzyxujknuuuatbnmvqxgdixwyjgvmospfriabxlchdjfsurkdeu\", &var_91h);\n    cVar1 = fcn.004c1160(&var_adh + 1, &var_c9h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x5f; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"nmppzkhxvfv\", &var_75h);\n    fcn.004838d0();\n    fcn.004b29a0(\"nmppzkhxvfv\", &var_59h);\n    cVar1 = fcn.004c1830(&var_75h + 1, &var_91h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_18h = 0x1d; 0 < var_18h; var_18h = var_18h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"inrzpra\", &var_3dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"inrzpra\", &var_21h);\n    cVar1 = fcn.004c1830(&var_3dh + 1, &var_59h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_1ch = 0x2a; 0 < var_1ch; var_1ch = var_1ch + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 1352
    },
    "0041e1d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041e1d4(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_88h;\n    uint var_84h;\n    uint var_7ch;\n    uint var_74h;\n    uint var_59h;\n    uint var_3dh;\n    uchar var_24h;\n    uchar var_23h;\n    uchar var_22h;\n    uint var_21h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_14h = 0x168;\n    fcn.004838d0();\n    fcn.004b29a0(\"qxrzqamimrhbopztztjlmiytylt\", &var_59h);\n    fcn.00483900();\n    stack0xffffffdc = *0x522af8;\n    var_21h._0_1_ = 0;\n    var_22h = 0;\n    for (var_ch = 0x11; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"qxrzqamimrhbopztztjlmiytylt\", &var_3dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"qxrzqamimrhbopztztjlmiytylt\", &var_24h);\n    cVar1 = fcn.004c1160(&var_3dh + 1, &var_59h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x46; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"tdhsufazmno\", &var_23h);\n    fcn.00483900();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 554
    },
    "0041e3a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041e3a8(uint noname_0, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a4h;\n    uint var_89h;\n    uint var_6dh;\n    uint var_51h;\n    uint var_35h;\n    uchar var_19h;\n    uchar var_18h;\n    uchar var_17h;\n    uchar var_16h;\n    int32_t var_15h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_15h._0_1_ = 0;\n    var_16h = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"kgjyunppsxkumjctxeyweblduywffporgcjzmlxfyymitxuoutbsghcpttxkeatmpbeknxljiffwvrvtwyrjihqwlpjndhngmr\", \n                 &var_89h);\n    fcn.00483900();\n    var_17h = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"kgjyunppsxkumjctxeyweblduywffporgcjzmlxfyymitxuoutbsghcpttxkeatmpbeknxljiffwvrvtwyrjihqwlpjndhngmr\", \n                 &var_6dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"kgjyunppsxkumjctxeyweblduywffporgcjzmlxfyymitxuoutbsghcpttxkeatmpbeknxljiffwvrvtwyrjihqwlpjndhngmr\", \n                 &var_51h);\n    cVar1 = fcn.004c1160(&var_6dh + 1, &var_89h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x54; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x49; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"kgjyunppsxkumjctxeyweblduywffporgcjzmlxfyymitxuoutbsghcpttxkeatmpbeknxljiffwvrvtwyrjihqwlpjndhngmr\", \n                 &var_35h);\n    fcn.004838d0();\n    fcn.004b29a0(\"kgjyunppsxkumjctxeyweblduywffporgcjzmlxfyymitxuoutbsghcpttxkeatmpbeknxljiffwvrvtwyrjihqwlpjndhngmr\", \n                 &var_19h);\n    cVar1 = fcn.004c1160(&var_35h + 1, &var_51h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffe8 = 0x21; 0 < stack0xffffffe8; unique0x00007a80 = stack0xffffffe8 + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"sjyflmv\", &var_18h);\n    fcn.00483900();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 979
    },
    "0041e65c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl\nfcn.0041e65c(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_9ch;\n    uint var_84h;\n    uint var_6ah;\n    uint var_4dh;\n    uchar var_31h;\n    uint var_30h;\n    uint var_2ch;\n    ulong uStack44;\n    ulong uStack36;\n    uint var_14h;\n    uchar var_fh;\n    uchar var_eh;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    var_dh._0_1_ = 1;\n    var_eh = 0;\n    var_fh = 0;\n    fcn.004838d0();\n    fcn.004b29a0(0x519dbd, &var_6ah);\n    fcn.00483900();\n    var_14h = 0x463;\n    uStack36 = *0x522b08;\n    fcn.004838d0();\n    fcn.004b29a0(\"qhayizfiuekpuidmtrcnewmemfxpzfjimzwewsjlxjyuueaixloqhawnyszdcfpxgqjlqlwpzhklvpqqogwzktbiopdqcsrk\", \n                 &var_6ah + 1);\n    fcn.00483900();\n    uStack44 = *0x522b10;\n    var_2ch = 0x185;\n    var_30h = 0xa6b;\n    fcn.004838d0();\n    fcn.004b29a0(0x519dbd, &var_4dh);\n    fcn.004838d0();\n    fcn.004b29a0(0x519dbd, &var_31h);\n    cVar2 = fcn.004c1830(&var_4dh + 1, &var_6ah + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    dVar1 = *0x522b18;\n    if (cVar2 != '\\0') {\n        for (stack0xfffffff0 = 0x39; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 667
    },
    "0041f374": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0041f374(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint arg_28h)\n\n{\n    char cVar1;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_80h;\n    uint var_65h;\n    uint var_49h;\n    uchar var_2dh;\n    uint var_2ch;\n    uint var_28h;\n    uint var_21h;\n    int32_t var_15h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_15h._0_1_ = 0;\n    stack0xffffffdc = *0x522bd0;\n    var_21h._0_1_ = 1;\n    var_28h = 0x956;\n    fcn.004838d0();\n    fcn.004b29a0(\"wdwwjymiyhwqaydxgpphkytzbtgmvbfzgjwzwpihruwctkbneysskihvphvaekrtwcufzxjectbbndpusdreobtycvyuqmad\", \n                 &var_65h);\n    fcn.00483900();\n    var_2ch = 0xda1;\n    for (var_ch = 10; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"wdwwjymiyhwqaydxgpphkytzbtgmvbfzgjwzwpihruwctkbneysskihvphvaekrtwcufzxjectbbndpusdreobtycvyuqmad\", \n                 &var_49h);\n    fcn.004838d0();\n    fcn.004b29a0(\"wdwwjymiyhwqaydxgpphkytzbtgmvbfzgjwzwpihruwctkbneysskihvphvaekrtwcufzxjectbbndpusdreobtycvyuqmad\", \n                 &var_2dh);\n    cVar1 = fcn.004c1160(&var_49h + 1, &var_65h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x3c; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (stack0xffffffe8 = 0x5f; 0 < stack0xffffffe8; unique0x00007a80 = stack0xffffffe8 + -1) {\n    }\n    fcn.004b2fc0();\n    return 0x3f;\n}\n",
        "token_count": 725
    },
    "0041f51e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.0041f51e(uint noname_0, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint noname_6, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint noname_10, uint arg_34h, uint arg_38h)\n\n{\n    uint in_ECX;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_19h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffe4 = *0x522bd8;\n    for (var_ch = 0x1a; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"usustihcvony\", &var_19h);\n    fcn.00483900();\n    return in_ECX;\n}\n",
        "token_count": 297
    },
    "0041f5d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.0041f5d0(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h, uint arg_1ch, uint noname_6, \n            uint arg_24h, uint arg_28h, uint noname_9, uint noname_10, uint arg_34h, uint arg_38h, uint arg_3ch)\n\n{\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x1a; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x53; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    return *0x522c00;\n}\n",
        "token_count": 308
    },
    "0041f72e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl\nfcn.0041f72e(uint noname_0, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint noname_6, \n            uint arg_24h, uint arg_28h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_ach;\n    uint var_9ch;\n    uint var_81h;\n    uint var_65h;\n    uchar var_49h;\n    uint var_48h;\n    uint var_41h;\n    ulong uStack60;\n    ulong uStack52;\n    uint var_21h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffdc = *0x522c10;\n    var_21h._0_1_ = 1;\n    uStack52 = *0x522c18;\n    uStack60 = *0x522c20;\n    stack0xffffffbc = *0x522c28;\n    var_41h._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"cgnsjydkdgwzdfybofrbpjivokqjarmtfuvkcruiuktsyddyxefojtwrteydatspmwrwjnryaiaybytfqcpnfnizdykmohg\", \n                 &var_81h);\n    fcn.00483900();\n    var_48h = 0xf79;\n    fcn.004838d0();\n    fcn.004b29a0(\"cgnsjydkdgwzdfybofrbpjivokqjarmtfuvkcruiuktsyddyxefojtwrteydatspmwrwjnryaiaybytfqcpnfnizdykmohg\", \n                 &var_65h);\n    fcn.004838d0();\n    fcn.004b29a0(\"cgnsjydkdgwzdfybofrbpjivokqjarmtfuvkcruiuktsyddyxefojtwrteydatspmwrwjnryaiaybytfqcpnfnizdykmohg\", \n                 &var_49h);\n    cVar2 = fcn.004c1830(&var_65h + 1, &var_81h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    dVar1 = *0x522c30;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x4a; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x17; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x5d; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 799
    },
    "0041f924": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.0041f924(uint noname_0, uint noname_1, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint noname_6, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_7ch;\n    uint var_61h;\n    uint var_45h;\n    uint var_2ah;\n    ulong uStack36;\n    ulong uStack28;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"nzfhsxucgzsravkarnsnxtccqkqygosmaqeiukizaatziuprqkotsrhtehfzgbos\", &var_61h);\n    fcn.00483900();\n    var_10h = 0x350;\n    uStack28 = *0x522c38;\n    uStack36 = *0x522c40;\n    stack0xffffffd4 = *0x522c48;\n    fcn.004838d0();\n    fcn.004b29a0(\"nzfhsxucgzsravkarnsnxtccqkqygosmaqeiukizaatziuprqkotsrhtehfzgbos\", &var_45h);\n    fcn.004838d0();\n    fcn.004b29a0(\"nzfhsxucgzsravkarnsnxtccqkqygosmaqeiukizaatziuprqkotsrhtehfzgbos\", &var_2ah);\n    cVar1 = fcn.004c1830(&var_45h + 1, &var_61h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x16; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"hresrzftsdaomoeol\", &var_2ah + 1);\n    fcn.00483900();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 628
    },
    "0041fb02": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.0041fb02(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_dch;\n    uint var_c1h;\n    uint var_a5h;\n    uint var_89h;\n    uint var_6dh;\n    uint var_51h;\n    uint var_35h;\n    uchar var_1ah;\n    uchar var_19h;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_18h = 0x4f7;\n    fcn.004838d0();\n    fcn.004b29a0(\"tgqdwwrvvwdvnlbmkavszujhtnbjtkjrzgojsuqhnfmfsxymxbbtdubjbuqhjxjuautatqociawuqvdbbrlaan\", &var_c1h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"tgqdwwrvvwdvnlbmkavszujhtnbjtkjrzgojsuqhnfmfsxymxbbtdubjbuqhjxjuautatqociawuqvdbbrlaan\", &var_a5h);\n    fcn.004838d0();\n    fcn.004b29a0(\"tgqdwwrvvwdvnlbmkavszujhtnbjtkjrzgojsuqhnfmfsxymxbbtdubjbuqhjxjuautatqociawuqvdbbrlaan\", &var_89h);\n    cVar1 = fcn.004c1160(&var_a5h + 1, &var_c1h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x5d; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"tgqdwwrvvwdvnlbmkavszujhtnbjtkjrzgojsuqhnfmfsxymxbbtdubjbuqhjxjuautatqociawuqvdbbrlaan\", &var_6dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"tgqdwwrvvwdvnlbmkavszujhtnbjtkjrzgojsuqhnfmfsxymxbbtdubjbuqhjxjuautatqociawuqvdbbrlaan\", &var_51h);\n    cVar1 = fcn.004c1830(&var_6dh + 1, &var_89h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x1b; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"tgqdwwrvvwdvnlbmkavszujhtnbjtkjrzgojsuqhnfmfsxymxbbtdubjbuqhjxjuautatqociawuqvdbbrlaan\", &var_35h);\n    fcn.004838d0();\n    fcn.004b29a0(\"tgqdwwrvvwdvnlbmkavszujhtnbjtkjrzgojsuqhnfmfsxymxbbtdubjbuqhjxjuautatqociawuqvdbbrlaan\", &var_1ah);\n    cVar1 = fcn.004c1160(&var_35h + 1, &var_51h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x41; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"uvdavuixs\", &var_19h);\n    fcn.00483900();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 1204
    },
    "0041fea6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.0041fea6(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    char cVar1;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_ach;\n    uint var_a0h;\n    uint var_88h;\n    uint var_70h;\n    uint var_57h;\n    uint var_39h;\n    uchar var_1dh;\n    uint var_1ch;\n    ulong uStack28;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"tpznbkbyliylvonfomcexohnrrdtpuuvgjtylljxiiytmehaocybnzbjxdqriqqiejjnnzqicyizcqwyubixecipomhhgq\", \n                 &var_57h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"bovzxlhvghqozgaxdlbbtdnwtjnqrdtenupnenlyrjgibodozfialwpcjkuvefikqecudkchcynqnnzfdikwtuamtrzot\", \n                 &var_57h + 1);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"meqhyslgynpkkcidhofnejjvaxdwffnkcbbyprjhdovsssoerewxatlxvwfclxbrgf\", &var_57h + 2);\n    fcn.00483900();\n    var_10h = 0xcb2;\n    uStack28 = *0x522c50;\n    var_1ch = 0x65;\n    fcn.004838d0();\n    fcn.004b29a0(\"meqhyslgynpkkcidhofnejjvaxdwffnkcbbyprjhdovsssoerewxatlxvwfclxbrgf\", &var_39h);\n    fcn.004838d0();\n    fcn.004b29a0(\"meqhyslgynpkkcidhofnejjvaxdwffnkcbbyprjhdovsssoerewxatlxvwfclxbrgf\", &var_1dh);\n    cVar1 = fcn.004c1830(&var_39h + 1, &var_57h + 3);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 100; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 0x12a67;\n}\n",
        "token_count": 783
    },
    "00420102": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00420102(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_130h;\n    uint var_118h;\n    uint var_ffh;\n    uint var_e1h;\n    uint var_c5h;\n    uint var_a9h;\n    uint var_8dh;\n    uint var_71h;\n    uint var_55h;\n    uint var_39h;\n    uchar var_20h;\n    uchar var_1fh;\n    uchar var_1eh;\n    int32_t var_1dh;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_1dh._0_1_ = 0;\n    var_1eh = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"sahblgdkipyyqctcxghtvnjogftmmbfxhyrjzddodbqcopnefdjzebgtjmtriepifmky\", &var_ffh);\n    fcn.00483900();\n    var_1fh = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"sujjskqgvyvgmpwgibsdxgrrwkimmxhditpmbmujrraslxnjyodr\", &var_ffh + 1);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"qjaknydwkozskidymriqxltuxapsjnbdqirwhfyyvgurnvjeuvizlwgdwqmzvhpy\", &var_ffh + 2);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"qjaknydwkozskidymriqxltuxapsjnbdqirwhfyyvgurnvjeuvizlwgdwqmzvhpy\", &var_e1h);\n    fcn.004838d0();\n    fcn.004b29a0(\"qjaknydwkozskidymriqxltuxapsjnbdqirwhfyyvgurnvjeuvizlwgdwqmzvhpy\", &var_c5h);\n    cVar1 = fcn.004c1830(&var_e1h + 1, &var_ffh + 3);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x2d; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"qjaknydwkozskidymriqxltuxapsjnbdqirwhfyyvgurnvjeuvizlwgdwqmzvhpy\", &var_a9h);\n    fcn.004838d0();\n    fcn.004b29a0(\"qjaknydwkozskidymriqxltuxapsjnbdqirwhfyyvgurnvjeuvizlwgdwqmzvhpy\", &var_8dh);\n    cVar1 = fcn.004c1830(&var_a9h + 1, &var_c5h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x4f; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (var_14h = 0x40; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"qjaknydwkozskidymriqxltuxapsjnbdqirwhfyyvgurnvjeuvizlwgdwqmzvhpy\", &var_71h);\n    fcn.004838d0();\n    fcn.004b29a0(\"qjaknydwkozskidymriqxltuxapsjnbdqirwhfyyvgurnvjeuvizlwgdwqmzvhpy\", &var_55h);\n    cVar1 = fcn.004c1830(&var_71h + 1, &var_8dh + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_18h = 0x33; 0 < var_18h; var_18h = var_18h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"sujjskqgvyvgmpwgibsdxgrrwkimmxhditpmbmujrraslxnjyodr\", &var_39h);\n    fcn.004838d0();\n    fcn.004b29a0(\"sujjskqgvyvgmpwgibsdxgrrwkimmxhditpmbmujrraslxnjyodr\", &var_20h);\n    cVar1 = fcn.004c1830(&var_39h + 1, &var_55h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffe0 = 0x46; 0 < stack0xffffffe0; unique0x00007a80 = stack0xffffffe0 + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 1515
    },
    "00420620": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420620(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x58; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x4a; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    return 0xabbd;\n}\n",
        "token_count": 175
    },
    "0042067a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.0042067a(uint noname_0, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_51h;\n    uint var_35h;\n    uint var_1ah;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffe4 = *0x522c58;\n    fcn.004838d0();\n    fcn.004b29a0(\"lmhtqugvxeacbedlckvmyyxseerdsgeexogbfg\", &var_51h);\n    fcn.00483900();\n    for (var_ch = 0x12; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"lmhtqugvxeacbedlckvmyyxseerdsgeexogbfg\", &var_35h);\n    fcn.004838d0();\n    fcn.004b29a0(\"lmhtqugvxeacbedlckvmyyxseerdsgeexogbfg\", &var_1ah);\n    cVar1 = fcn.004c1160(&var_35h + 1, &var_51h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x3b; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"rtceilpjbbjgbdohkz\", &var_1ah + 1);\n    fcn.00483900();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 533
    },
    "00420836": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00420836(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint noname_5, uint arg_20h)\n\n{\n    uint in_ECX;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_50h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uint var_34h;\n    ulong uStack52;\n    ulong uStack44;\n    uchar var_19h;\n    uint var_18h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 1;\n    var_18h = 0x111;\n    var_19h = 1;\n    uStack44 = *0x522c60;\n    uStack52 = *0x522c68;\n    var_34h = 0x15c4;\n    var_35h = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"drdnteejcugfhvvsvcjzbljyoclfussrcikrdmhmcvzsrceiyvpzaxnsircanunzrycygjunbtxadjnsalsblmbnw\", &var_37h);\n    fcn.00483900();\n    for (var_ch = 0x31; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (stack0xffffffec = 0x22; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(0x519dbd, &var_36h);\n    fcn.00483900();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 493
    },
    "0042095e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0042095e(uint param_1)\n\n{\n    char cVar1;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_51h;\n    uint var_35h;\n    uchar var_1ah;\n    uchar var_19h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    var_dh._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"dmnxqqygvzbcpkbblkddahgmsaxatiiftgtijjhiklelferxnnkdvheoazwomsul\", &var_51h);\n    fcn.00483900();\n    var_14h = 0xa6d;\n    var_18h = 0x1656;\n    fcn.004838d0();\n    fcn.004b29a0(\"dmnxqqygvzbcpkbblkddahgmsaxatiiftgtijjhiklelferxnnkdvheoazwomsul\", &var_35h);\n    fcn.004838d0();\n    fcn.004b29a0(\"dmnxqqygvzbcpkbblkddahgmsaxatiiftgtijjhiklelferxnnkdvheoazwomsul\", &var_1ah);\n    cVar1 = fcn.004c1160(&var_35h + 1, &var_51h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (stack0xfffffff0 = 0x58; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"uwltvtyavwne\", &var_19h);\n    fcn.00483900();\n    fcn.004b2fc0();\n    return param_1;\n}\n",
        "token_count": 525
    },
    "00420b10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.00420b10(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint noname_6, \n            uint arg_24h, uint arg_28h)\n\n{\n    char cVar1;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_70h;\n    uint var_55h;\n    uint var_39h;\n    uchar var_1eh;\n    uchar var_1dh;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_18h = 0x107c;\n    var_1ch = 0x660;\n    var_1dh = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"wpkbxfwd\", &var_55h);\n    fcn.00483900();\n    for (var_ch = 0x30; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"wpkbxfwd\", &var_39h);\n    fcn.004838d0();\n    fcn.004b29a0(\"wpkbxfwd\", &var_1eh);\n    cVar1 = fcn.004c1160(&var_39h + 1, &var_55h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x39; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (var_14h = 0x4b; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004b2fc0();\n    return 0x89ba;\n}\n",
        "token_count": 548
    },
    "00420cbc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.00420cbc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint noname_6, \n            uint arg_24h, uint arg_28h, uint noname_9, uint arg_30h, uint arg_34h)\n\n{\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_7ch;\n    uint var_64h;\n    uint var_4ch;\n    uint var_33h;\n    ulong uStack44;\n    uint var_20h;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"ofldiddeplqofokkuzikrvrrkvmfzdnngvywogyrnxtjwsxzuekxorwtdwfblrtiekppdsulzmprjztleylkznqpzd\", &var_33h)\n    ;\n    fcn.00483900();\n    uStack28 = *0x522c70;\n    fcn.004838d0();\n    fcn.004b29a0(\"zdrcgjitiwjxnearxflespswvxlmzrbpkabqygpgzpwfnsbgdgyestnsfxh\", &var_33h + 1);\n    fcn.00483900();\n    var_1ch = 0x2ac;\n    fcn.004838d0();\n    fcn.004b29a0(0x51ed30, &var_33h + 2);\n    fcn.00483900();\n    var_20h = 0x49c;\n    uStack44 = *0x522c78;\n    stack0xffffffcc = *0x522c80;\n    for (var_ch = 0x2f; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 1;\n}\n",
        "token_count": 562
    },
    "00420e9a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00420e9a(uint noname_0, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint noname_9, uint arg_30h, uint noname_11, uint arg_38h)\n\n{\n    uint in_ECX;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uchar var_2ah;\n    uint var_29h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    stack0xffffffd4 = *0x522c88;\n    var_29h._0_1_ = 0;\n    for (var_1ch = 0x45; 0 < var_1ch; var_1ch = var_1ch + -1) {\n    }\n    for (var_20h = 8; 0 < var_20h; var_20h = var_20h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"kmglhlvztfvokjt\", &var_2ah);\n    fcn.00483900();\n    return in_ECX;\n}\n",
        "token_count": 379
    },
    "0042223a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 __cdecl fcn.0042223a(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_88h;\n    uint var_84h;\n    uint var_7ch;\n    uint var_74h;\n    uint var_59h;\n    uint var_3dh;\n    uchar var_21h;\n    uint var_20h;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x522da0;\n    var_1ch = 0xf3;\n    fcn.004838d0();\n    fcn.004b29a0(\"rjrfyfypotexgzofvfabbcoxuekbphaayawisfmceigxbislgjpmbqlvxktsjdycookarphvexblcbpihjjrzerjunfmhrxkl\", \n                 &var_59h);\n    fcn.00483900();\n    var_20h = 0x465;\n    fcn.004838d0();\n    fcn.004b29a0(\"rjrfyfypotexgzofvfabbcoxuekbphaayawisfmceigxbislgjpmbqlvxktsjdycookarphvexblcbpihjjrzerjunfmhrxkl\", \n                 &var_3dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"rjrfyfypotexgzofvfabbcoxuekbphaayawisfmceigxbislgjpmbqlvxktsjdycookarphvexblcbpihjjrzerjunfmhrxkl\", \n                 &var_21h);\n    cVar2 = fcn.004c1830(&var_3dh + 1, &var_59h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    dVar1 = *0x522da8;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x1f; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 557
    },
    "004223b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004223b0(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    char cVar1;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_80h;\n    uint var_66h;\n    uint var_49h;\n    uchar var_2dh;\n    uint var_2ch;\n    uchar var_25h;\n    uint var_24h;\n    ulong uStack36;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(0x51d8a6, &var_66h);\n    fcn.00483900();\n    var_dh._0_1_ = 0;\n    var_14h = 0x2101;\n    uStack36 = *0x522db0;\n    var_24h = 0xb1;\n    fcn.004838d0();\n    fcn.004b29a0(\"mihaejttxdbzwfraxqgzxzsbnqrrnbeznfhllqytvnomrdnka\", &var_66h + 1);\n    fcn.00483900();\n    var_25h = 1;\n    var_2ch = 0x23d;\n    fcn.004838d0();\n    fcn.004b29a0(\"mihaejttxdbzwfraxqgzxzsbnqrrnbeznfhllqytvnomrdnka\", &var_49h);\n    fcn.004838d0();\n    fcn.004b29a0(\"mihaejttxdbzwfraxqgzxzsbnqrrnbeznfhllqytvnomrdnka\", &var_2dh);\n    cVar1 = fcn.004c1830(&var_49h + 1, &var_66h + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (stack0xfffffff0 = 0x61; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 0x14da4;\n}\n",
        "token_count": 622
    },
    "004227bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.004227bc(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_21h;\n    int32_t var_10h;\n    int32_t var_ch;\n    \n    for (var_ch = 0x1a; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x2c; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    return *0x522dd8;\n}\n",
        "token_count": 231
    },
    "00422846": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.00422846(uint arg_8h, uint arg_ch)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_cch;\n    uint var_c4h;\n    uint var_ach;\n    uint var_94h;\n    uint var_7bh;\n    uint var_5dh;\n    uint var_41h;\n    uchar var_32h;\n    uint var_31h;\n    ulong uStack44;\n    ulong uStack36;\n    int32_t var_15h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_15h._0_1_ = 0;\n    uStack36 = *0x522de0;\n    uStack44 = *0x522de8;\n    fcn.004838d0();\n    fcn.004b29a0(\"dfpstxocrgstisxhzaovrxicsgr\", &var_7bh);\n    fcn.00483900();\n    stack0xffffffcc = *0x522df0;\n    var_31h._0_1_ = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"piigwtztymmykvikezugfgvccxtnwfdujitvqfojnovaxrubpsnzexotxpfjqkuvgllnakzfaogasa\", &var_7bh + 1);\n    fcn.00483900();\n    var_32h = 0;\n    stack0xffffffbc = *0x522df8;\n    fcn.004838d0();\n    fcn.004b29a0(\"hbhjyveabzpwytmzbie\", &var_7bh + 2);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"piigwtztymmykvikezugfgvccxtnwfdujitvqfojnovaxrubpsnzexotxpfjqkuvgllnakzfaogasa\", &var_5dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"piigwtztymmykvikezugfgvccxtnwfdujitvqfojnovaxrubpsnzexotxpfjqkuvgllnakzfaogasa\", &var_41h);\n    cVar2 = fcn.004c1160(&var_5dh + 1, &var_7bh + 3);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    dVar1 = *0x522e00;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x3c; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x48; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (stack0xffffffe8 = 0x25; 0 < stack0xffffffe8; unique0x00007a80 = stack0xffffffe8 + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 809
    },
    "00422ac0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.00422ac0(uint noname_0, uint arg_ch, uint arg_10h, uint noname_3, uint noname_4, uint arg_1ch)\n\n{\n    char cVar1;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a4h;\n    uint var_8ch;\n    uint var_72h;\n    uint var_55h;\n    uint var_39h;\n    ulong uStack52;\n    uint var_24h;\n    ulong uStack36;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x522e08;\n    uStack36 = *0x522e10;\n    var_24h = 0xfeb;\n    fcn.004838d0();\n    fcn.004b29a0(\"taavcbcphzexztphhqrdoihbymzyjhtppjibacsdudwnjweqpqrtzvqmgrtpq\", &var_72h);\n    fcn.00483900();\n    uStack52 = *0x522e18;\n    fcn.004838d0();\n    fcn.004b29a0(\"kfddaobuauojyvdfxdujremcwvwswcodgrjtwtahvwjqlt\", &var_72h + 1);\n    fcn.00483900();\n    stack0xffffffc4 = *0x522e20;\n    fcn.004838d0();\n    fcn.004b29a0(\"taavcbcphzexztphhqrdoihbymzyjhtppjibacsdudwnjweqpqrtzvqmgrtpq\", &var_55h);\n    fcn.004838d0();\n    fcn.004b29a0(\"taavcbcphzexztphhqrdoihbymzyjhtppjibacsdudwnjweqpqrtzvqmgrtpq\", &var_39h);\n    cVar1 = fcn.004c1830(&var_55h + 1, &var_72h + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x10; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 0;\n}\n",
        "token_count": 617
    },
    "00422cb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00422cb0(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint var_148h;\n    uint var_144h;\n    uint var_13ch;\n    uint var_12ch;\n    uint var_114h;\n    uint var_fah;\n    uint var_ddh;\n    uint var_c1h;\n    uint var_a5h;\n    uint var_89h;\n    uint var_6dh;\n    uint var_51h;\n    uint var_35h;\n    uchar var_1ch;\n    uchar var_1bh;\n    uchar var_1ah;\n    int32_t var_19h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"bujxksonfgabezkxmctsuezrjzvppffh\", &var_fah);\n    fcn.00483900();\n    var_19h._0_1_ = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"tysalzvbvmahqmqewxbubgd\", &var_fah + 1);\n    fcn.00483900();\n    var_1ah = 0;\n    var_1bh = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"bujxksonfgabezkxmctsuezrjzvppffh\", &var_ddh);\n    fcn.004838d0();\n    fcn.004b29a0(\"bujxksonfgabezkxmctsuezrjzvppffh\", &var_c1h);\n    cVar1 = fcn.004c1160(&var_ddh + 1, &var_fah + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x1c; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"bujxksonfgabezkxmctsuezrjzvppffh\", &var_a5h);\n    fcn.004838d0();\n    fcn.004b29a0(\"bujxksonfgabezkxmctsuezrjzvppffh\", &var_89h);\n    cVar1 = fcn.004c1830(&var_a5h + 1, &var_c1h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x36; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"tysalzvbvmahqmqewxbubgd\", &var_6dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"tysalzvbvmahqmqewxbubgd\", &var_51h);\n    cVar1 = fcn.004c1830(&var_6dh + 1, &var_89h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x29; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"tysalzvbvmahqmqewxbubgd\", &var_35h);\n    fcn.004838d0();\n    fcn.004b29a0(\"tysalzvbvmahqmqewxbubgd\", &var_1ch);\n    cVar1 = fcn.004c1830(&var_35h + 1, &var_51h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffe4 = 0x5c; 0 < stack0xffffffe4; unique0x00007a80 = stack0xffffffe4 + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 0x6856;\n}\n",
        "token_count": 1168
    },
    "00423146": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00423146(uint noname_0, uint arg_ch)\n\n{\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_11h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x15; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x20; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    return 0x2a10;\n}\n",
        "token_count": 152
    },
    "0042319a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid fcn.0042319a(void)\n\n{\n    char cVar1;\n    uint var_13ch;\n    uint var_138h;\n    uint var_120h;\n    uint var_108h;\n    uint var_efh;\n    uint var_d1h;\n    uint var_b5h;\n    uint var_99h;\n    uint var_7dh;\n    uint var_61h;\n    uchar var_45h;\n    uint var_44h;\n    ulong uStack68;\n    uint var_34h;\n    uchar var_2eh;\n    uchar var_2dh;\n    uint var_2ch;\n    ulong uStack44;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"xzahdbcxaenheypdmxkicxcrjxfa\", &var_efh);\n    fcn.00483900();\n    uStack44 = *0x522e30;\n    var_2ch = 0x2093;\n    var_2dh = 1;\n    var_2eh = 0;\n    var_34h = 0x53a;\n    fcn.004838d0();\n    fcn.004b29a0(\"mkcsrgidcvsnqp\", &var_efh + 1);\n    fcn.00483900();\n    uStack68 = *0x522e38;\n    fcn.004838d0();\n    fcn.004b29a0(\"wjwsrkxkgehwbxgclheswcdppirnfivrjldpbisz\", &var_efh + 2);\n    fcn.00483900();\n    var_44h = 0x27;\n    fcn.004838d0();\n    fcn.004b29a0(\"mkcsrgidcvsnqp\", &var_d1h);\n    fcn.004838d0();\n    fcn.004b29a0(\"mkcsrgidcvsnqp\", &var_b5h);\n    cVar1 = fcn.004c1830(&var_d1h + 1, &var_efh + 3);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x43; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"mkcsrgidcvsnqp\", &var_99h);\n    fcn.004838d0();\n    fcn.004b29a0(\"mkcsrgidcvsnqp\", &var_7dh);\n    cVar1 = fcn.004c1830(&var_99h + 1, &var_b5h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 4; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (var_14h = 0x19; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    for (var_18h = 0x24; 0 < var_18h; var_18h = var_18h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"xzahdbcxaenheypdmxkicxcrjxfa\", &var_61h);\n    fcn.004838d0();\n    fcn.004b29a0(\"xzahdbcxaenheypdmxkicxcrjxfa\", &var_45h);\n    cVar1 = fcn.004c1160(&var_61h + 1, &var_7dh + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_1ch = 100; 0 < var_1ch; var_1ch = var_1ch + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 1092
    },
    "0042428e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0042428e(uint arg_8h, uint arg_ch)\n\n{\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_1ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x57; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return *0x522eb8;\n}\n",
        "token_count": 115
    },
    "004242e6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004242e6(uint arg_8h, uint arg_ch)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x12; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x4a; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    for (var_ch = 1; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x2c; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "00424364": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00424364(void)\n\n{\n    uint var_ach;\n    uint var_9ch;\n    uint var_84h;\n    uint var_6ch;\n    uint var_54h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_31h;\n    uint var_24h;\n    ulong uStack36;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x522ec8;\n    uStack36 = *0x522ed0;\n    fcn.004838d0();\n    fcn.004b29a0(\"iserbttamzvhhjtkqymdfyfmhpmtfu\", &var_3ch);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"tbnmpclzzzahxbjhljqpufxrnsmzlwldzdprjsgrrntfmzeswtvvuvgxuurdwida\", &var_3ch + 1);\n    fcn.00483900();\n    var_24h = 0x12a3;\n    stack0xffffffcc = *0x522ed8;\n    fcn.004838d0();\n    fcn.004b29a0(\"livmuirkiphsfqqcfyyzqlgmcuhmmonfevcknujcaqxpoceeagwemyprusbwurbxqzrcxityoecvd\", &var_3ch + 2);\n    fcn.00483900();\n    var_31h._0_1_ = 0;\n    var_38h = 0x468;\n    fcn.004838d0();\n    fcn.004b29a0(\"pfhcdgyuulrcfodfhhinwnmnxnnqswiswbqihfscsxvdsdkqfxsrfptrpfwqnurkhzcvbjxtrdcfhctnagg\", &var_3ch + 3);\n    fcn.00483900();\n    for (var_ch = 0x2c; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 1;\n}\n",
        "token_count": 566
    },
    "0042451e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 __cdecl\nfcn.0042451e(uint noname_0, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_80h;\n    uint var_66h;\n    uint var_49h;\n    uchar var_2dh;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uchar var_1dh;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"wrttnhycoeywptaaubexxqpfoasmjqjt\", &var_66h);\n    fcn.00483900();\n    var_18h = 0x3d4;\n    var_1ch = 0xca7;\n    var_1dh = 1;\n    var_24h = 0x1bbe;\n    fcn.004838d0();\n    fcn.004b29a0(\"xpeymbpjbdzvfphehojlugvtymcsrypqwovuaszmvthkklxiinjhenv\", &var_66h + 1);\n    fcn.00483900();\n    var_28h = 0x1402;\n    var_2ch = 0x120f;\n    fcn.004838d0();\n    fcn.004b29a0(\"xpeymbpjbdzvfphehojlugvtymcsrypqwovuaszmvthkklxiinjhenv\", &var_49h);\n    fcn.004838d0();\n    fcn.004b29a0(\"xpeymbpjbdzvfphehojlugvtymcsrypqwovuaszmvthkklxiinjhenv\", &var_2dh);\n    cVar2 = fcn.004c1160(&var_49h + 1, &var_66h + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    dVar1 = *0x522ee0;\n    if (cVar2 != '\\0') {\n        for (var_ch = 1; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 1; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x5c; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 788
    },
    "00424764": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.00424764(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint noname_8, uint arg_2ch, uint arg_30h)\n\n{\n    char cVar1;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_5dh;\n    uint var_41h;\n    uchar var_25h;\n    uint var_24h;\n    ulong uStack36;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_14h = 0x12bf;\n    fcn.004838d0();\n    fcn.004b29a0(\"kplkqdllsqktuchojqinhmugvpujotmsurafukysbwkowzsiukfwnacwdqeexdklyjozikbthvsjekusiy\", &var_5dh);\n    fcn.00483900();\n    uStack36 = *0x522ee8;\n    var_24h = 0xb18;\n    for (var_ch = 0x5b; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"kplkqdllsqktuchojqinhmugvpujotmsurafukysbwkowzsiukfwnacwdqeexdklyjozikbthvsjekusiy\", &var_41h);\n    fcn.004838d0();\n    fcn.004b29a0(\"kplkqdllsqktuchojqinhmugvpujotmsurafukysbwkowzsiukfwnacwdqeexdklyjozikbthvsjekusiy\", &var_25h);\n    cVar1 = fcn.004c1830(&var_41h + 1, &var_5dh + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x39; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    return 0x101d8;\n}\n",
        "token_count": 672
    },
    "0042492e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0042492e(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint arg_28h)\n\n{\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_2dh;\n    ulong uStack44;\n    uint var_19h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffe4 = *0x522ef0;\n    var_19h._0_1_ = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"lswinwbjskbtjcqnzomrexfcqilvffdoitletgczqdnasuyvxeljsipnntiol\", &var_2dh);\n    fcn.00483900();\n    uStack44 = *0x522ef8;\n    stack0xffffffd0 = 0x28a;\n    for (var_ch = 0x23; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 349
    },
    "004249e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004249e8(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x30; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x1f; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    return 1;\n}\n",
        "token_count": 161
    },
    "00424cf8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint fcn.00424cf8(void)\n\n{\n    char cVar1;\n    uint var_10ch;\n    uint var_100h;\n    uint var_e8h;\n    uint var_ceh;\n    uint var_b1h;\n    uint var_95h;\n    uint var_79h;\n    uint var_5dh;\n    uint var_41h;\n    uchar var_25h;\n    uint var_24h;\n    ulong uStack36;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack36 = *0x522f20;\n    fcn.004838d0();\n    fcn.004b29a0(\"ukktjyyclnignztybseugtttnsxlfnetneagbexnghvohsrxgunevqnphakxsgeqszvzhsrnvxmuqvepaortohxjilqbltyqjb\", \n                 &var_ceh);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"qhidfchovprcxotjfjrmkavefvsojgkpmxmcwpzlxapjhtlsayslunnqwhqzulwvgwr\", &var_ceh + 1);\n    fcn.00483900();\n    var_24h = 0x3ac;\n    fcn.004838d0();\n    fcn.004b29a0(\"ukktjyyclnignztybseugtttnsxlfnetneagbexnghvohsrxgunevqnphakxsgeqszvzhsrnvxmuqvepaortohxjilqbltyqjb\", \n                 &var_b1h);\n    fcn.004838d0();\n    fcn.004b29a0(\"ukktjyyclnignztybseugtttnsxlfnetneagbexnghvohsrxgunevqnphakxsgeqszvzhsrnvxmuqvepaortohxjilqbltyqjb\", \n                 &var_95h);\n    cVar1 = fcn.004c1160(&var_b1h + 1, &var_ceh + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x3d; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"qhidfchovprcxotjfjrmkavefvsojgkpmxmcwpzlxapjhtlsayslunnqwhqzulwvgwr\", &var_79h);\n    fcn.004838d0();\n    fcn.004b29a0(\"qhidfchovprcxotjfjrmkavefvsojgkpmxmcwpzlxapjhtlsayslunnqwhqzulwvgwr\", &var_5dh);\n    cVar1 = fcn.004c1830(&var_79h + 1, &var_95h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x1a; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"ukktjyyclnignztybseugtttnsxlfnetneagbexnghvohsrxgunevqnphakxsgeqszvzhsrnvxmuqvepaortohxjilqbltyqjb\", \n                 &var_41h);\n    fcn.004838d0();\n    fcn.004b29a0(\"ukktjyyclnignztybseugtttnsxlfnetneagbexnghvohsrxgunevqnphakxsgeqszvzhsrnvxmuqvepaortohxjilqbltyqjb\", \n                 &var_25h);\n    cVar1 = fcn.004c1830(&var_41h + 1, &var_5dh + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x3b; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 1;\n}\n",
        "token_count": 1175
    },
    "0042509e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0042509e(uint param_1)\n\n{\n    uint var_7ch;\n    uint var_70h;\n    uint var_58h;\n    uint var_3fh;\n    ulong uStack60;\n    ulong uStack52;\n    uint var_21h;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_18h = 0x655;\n    fcn.004838d0();\n    fcn.004b29a0(\"evlascoezrmjksvoahkfqagulcnqphlndzafirp\", &var_3fh);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"xitrhkihqlcmvaxwpli\", &var_3fh + 1);\n    fcn.00483900();\n    stack0xffffffdc = *0x522f28;\n    var_21h._0_1_ = 0;\n    uStack52 = *0x522f30;\n    uStack60 = *0x522f38;\n    stack0xffffffc0 = 0x1405;\n    for (var_ch = 0x16; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x3b; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x43; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"sptdiinxnmelokgmsq\", &var_3fh + 2);\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return param_1;\n}\n",
        "token_count": 489
    },
    "00425d62": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00425d62(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h, uint arg_34h)\n\n{\n    char cVar1;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a4h;\n    uint var_8ch;\n    uint var_72h;\n    uint var_55h;\n    uint var_39h;\n    uint var_30h;\n    uint var_29h;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"elxobrgoejmpipkopeniievyjnzifdrfuqpfrdzzry\", &var_72h);\n    fcn.00483900();\n    uStack28 = *0x523018;\n    var_1ch = 0x13c0;\n    stack0xffffffd4 = *0x523020;\n    var_29h._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"uadtpmiyajuzayjimraulhjxzmmngndbrdfoqzehzsyrdfubwwxqcumdussrdqasfyg\", &var_72h + 1);\n    fcn.00483900();\n    var_30h = 0x1d4;\n    stack0xffffffc4 = *0x523028;\n    fcn.004838d0();\n    fcn.004b29a0(\"elxobrgoejmpipkopeniievyjnzifdrfuqpfrdzzry\", &var_55h);\n    fcn.004838d0();\n    fcn.004b29a0(\"elxobrgoejmpipkopeniievyjnzifdrfuqpfrdzzry\", &var_39h);\n    cVar1 = fcn.004c1160(&var_55h + 1, &var_72h + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x38; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 688
    },
    "00425f70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00425f70(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint noname_5, uint arg_20h, \n            uint arg_24h, uint noname_8, uint arg_2ch, uint arg_30h)\n\n{\n    char cVar1;\n    uint var_110h;\n    uint var_10ch;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e4h;\n    uint var_cch;\n    uint var_b2h;\n    uint var_95h;\n    uint var_79h;\n    uint var_5dh;\n    uchar var_41h;\n    uint var_40h;\n    uint var_39h;\n    ulong uStack52;\n    ulong uStack44;\n    ulong uStack36;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack36 = *0x523030;\n    fcn.004838d0();\n    fcn.004b29a0(\"rihgadutmsvetauydoselcbjuesmlbjivivsqttdclanpdxtuxixggyqs\", &var_b2h);\n    fcn.00483900();\n    uStack44 = *0x523038;\n    uStack52 = *0x523040;\n    stack0xffffffc4 = *0x523048;\n    var_39h._0_1_ = 1;\n    var_40h = 0x14d7;\n    fcn.004838d0();\n    fcn.004b29a0(\"qrygekbpctgdenpnzslmnadecyas\", &var_b2h + 1);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"rihgadutmsvetauydoselcbjuesmlbjivivsqttdclanpdxtuxixggyqs\", &var_95h);\n    fcn.004838d0();\n    fcn.004b29a0(\"rihgadutmsvetauydoselcbjuesmlbjivivsqttdclanpdxtuxixggyqs\", &var_79h);\n    cVar1 = fcn.004c1830(&var_95h + 1, &var_b2h + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x16; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"qrygekbpctgdenpnzslmnadecyas\", &var_5dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"qrygekbpctgdenpnzslmnadecyas\", &var_41h);\n    cVar1 = fcn.004c1830(&var_5dh + 1, &var_79h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 99; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (var_14h = 0x36; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 946
    },
    "004262a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.004262a0(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint noname_4, uint noname_5, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h, uint arg_34h, uint arg_38h)\n\n{\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_4h;\n    \n    for (var_4h = 100; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return *0x523058;\n}\n",
        "token_count": 222
    },
    "00426386": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00426386(void)\n\n{\n    uint var_5ch;\n    uint var_54h;\n    uint var_39h;\n    ulong uStack52;\n    ulong uStack44;\n    uchar var_1ah;\n    uint var_19h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffe4 = *0x523060;\n    var_19h._0_1_ = 0;\n    var_1ah = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"lmpyscihelxkvobltonjwbhidrpqkquezdfnxbfultuhieatpngqlwfvs\", &var_39h);\n    fcn.00483900();\n    uStack44 = *0x523068;\n    uStack52 = *0x523070;\n    stack0xffffffc4 = *0x523078;\n    for (var_ch = 0x5d; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 277
    },
    "00426428": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00426428(uint arg_8h)\n\n{\n    char cVar1;\n    uint var_b0h;\n    uint var_ach;\n    uint var_9ch;\n    uint var_84h;\n    uint var_6ah;\n    uint var_4dh;\n    uchar var_31h;\n    uint var_30h;\n    uchar var_29h;\n    uint var_28h;\n    uchar var_21h;\n    uint var_20h;\n    uint var_19h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"fljykrvqubvipasxdukmgrlhgrvbhirlpwjboejznrocamieiqyrpxwpqdznuaxaumtlslm\", &var_6ah);\n    fcn.00483900();\n    stack0xffffffe4 = *0x523080;\n    var_19h._0_1_ = 0;\n    var_20h = 0x4d4;\n    fcn.004838d0();\n    fcn.004b29a0(\"slgiahyiqwlicctjeagwhtqryiiaidyjeiwnrcqsuhrkteydyllzkovntjabj\", &var_6ah + 1);\n    fcn.00483900();\n    var_21h = 0;\n    var_28h = 0x701;\n    var_29h = 0;\n    var_30h = 0x900;\n    for (var_ch = 0x44; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"slgiahyiqwlicctjeagwhtqryiiaidyjeiwnrcqsuhrkteydyllzkovntjabj\", &var_4dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"slgiahyiqwlicctjeagwhtqryiiaidyjeiwnrcqsuhrkteydyllzkovntjabj\", &var_31h);\n    cVar1 = fcn.004c1160(&var_4dh + 1, &var_6ah + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x15; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 669
    },
    "004266fa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004266fa(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_34h;\n    uint var_21h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x15; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 10; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    for (var_ch = 0x31; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "00426788": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.00426788(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_10ch;\n    uint var_100h;\n    uint var_e8h;\n    uint var_ceh;\n    uint var_b1h;\n    uint var_95h;\n    uint var_79h;\n    uint var_5dh;\n    uint var_41h;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_24h;\n    uchar var_1eh;\n    uchar var_1dh;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_1ch = 0xac9;\n    var_1dh = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"bwxmumcjnqkndutpbvdwnvmbtiknphyvkwfppvmdymgcdzaqktrnwsdmmusgbgymckmprdmnbrmcnrbcdd\", &var_ceh);\n    fcn.00483900();\n    var_1eh = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"mtvlheduxjxubemm\", &var_ceh + 1);\n    fcn.00483900();\n    var_24h = 0x1367;\n    for (var_ch = 0x5e; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"bwxmumcjnqkndutpbvdwnvmbtiknphyvkwfppvmdymgcdzaqktrnwsdmmusgbgymckmprdmnbrmcnrbcdd\", &var_b1h);\n    fcn.004838d0();\n    fcn.004b29a0(\"bwxmumcjnqkndutpbvdwnvmbtiknphyvkwfppvmdymgcdzaqktrnwsdmmusgbgymckmprdmnbrmcnrbcdd\", &var_95h);\n    cVar1 = fcn.004c1160(&var_b1h + 1, &var_ceh + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 100; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"bwxmumcjnqkndutpbvdwnvmbtiknphyvkwfppvmdymgcdzaqktrnwsdmmusgbgymckmprdmnbrmcnrbcdd\", &var_79h);\n    fcn.004838d0();\n    fcn.004b29a0(\"bwxmumcjnqkndutpbvdwnvmbtiknphyvkwfppvmdymgcdzaqktrnwsdmmusgbgymckmprdmnbrmcnrbcdd\", &var_5dh);\n    cVar1 = fcn.004c1160(&var_79h + 1, &var_95h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x29; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"mtvlheduxjxubemm\", &var_41h);\n    fcn.004838d0();\n    fcn.004b29a0(\"mtvlheduxjxubemm\", &var_26h);\n    cVar1 = fcn.004c1830(&var_41h + 1, &var_5dh + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_18h = 0x49; 0 < var_18h; var_18h = var_18h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(0x5203d0, &var_25h);\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 1247
    },
    "00426bae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00426bae(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x48; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x57; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    return *0x5230b8;\n}\n",
        "token_count": 161
    },
    "00426c96": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00426c96(uint arg_8h, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint noname_8, uint arg_2ch, uint arg_30h)\n\n{\n    char cVar1;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_7ch;\n    uint var_61h;\n    uint var_45h;\n    uchar var_29h;\n    uint var_28h;\n    uchar var_22h;\n    int32_t var_21h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    var_21h._0_1_ = 1;\n    var_22h = 1;\n    var_28h = 0x90;\n    fcn.004838d0();\n    fcn.004b29a0(\"bpgmawldcpi\", &var_61h);\n    fcn.00483900();\n    for (var_1ch = 0x10; 0 < var_1ch; var_1ch = var_1ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"bpgmawldcpi\", &var_45h);\n    fcn.004838d0();\n    fcn.004b29a0(\"bpgmawldcpi\", &var_29h);\n    cVar1 = fcn.004c1160(&var_45h + 1, &var_61h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffdc = 0x2b; 0 < stack0xffffffdc; unique0x00007a80 = stack0xffffffdc + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 544
    },
    "00426e44": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00426e44(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    uint var_78h;\n    uint var_74h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_50h;\n    uchar var_37h;\n    uchar var_36h;\n    uchar var_35h;\n    uint var_34h;\n    ulong uStack52;\n    ulong uStack44;\n    ulong uStack36;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    var_dh._0_1_ = 1;\n    var_14h = 0x1fa0;\n    var_18h = 0x369;\n    uStack36 = *0x5230d0;\n    uStack44 = *0x5230d8;\n    uStack52 = *0x5230e0;\n    var_34h = 0x1254;\n    fcn.004838d0();\n    fcn.004b29a0(\"ooqsqbdklsqkpdhxdabpfefjllyjuatcfftjmfldyhzwtvzn\", &var_37h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(0x520461, &var_36h);\n    fcn.00483900();\n    var_35h = 0;\n    for (stack0xfffffff0 = 0x4e; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 1;\n}\n",
        "token_count": 447
    },
    "00426f62": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00426f62(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint noname_4, uint arg_1ch, uint arg_20h)\n\n{\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_19h;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    var_dh._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"rjxinzfqomwoiopjevtronjojoqwmorvzoozlhppkdozhgkrbstnmhosxtvtvokqfmbhtdotobkkczrhswxk\", &var_19h);\n    fcn.00483900();\n    stack0xffffffe4 = *0x5230e8;\n    for (stack0xfffffff0 = 0x49; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 318
    },
    "004270e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.004270e4(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint noname_4, uint arg_1ch, uint arg_20h)\n\n{\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_34h;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"ruagmvknczjekumoslqtyqlrvjvzjcjdzfqsmmdkucdwtqkyuzxvyrkcrszxjlymqigwa\", &var_1ch);\n    fcn.00483900();\n    var_dh._0_1_ = 0;\n    uStack28 = *0x5230f8;\n    fcn.004838d0();\n    fcn.004b29a0(\"bchpccbxuaezimjzlxnuufjwikndwncbgebfepbvrofflljilmje\", &var_1ch + 1);\n    fcn.00483900();\n    var_1ch._3_1_ = 1;\n    var_1ch._2_1_ = 1;\n    for (stack0xfffffff0 = 0x50; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 427
    },
    "004271f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.004271f0(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    uint in_ECX;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_9ch;\n    uint var_84h;\n    uint var_6ch;\n    uint var_54h;\n    uint var_3ch;\n    uint var_21h;\n    uchar var_1dh;\n    uchar var_1ch;\n    uchar var_1bh;\n    uchar var_1ah;\n    uint var_19h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"aadioivalwzehftboeildshdckyoxftiwjhbpguswdfkbpdiaboioruyyuloqfdlemrjwebjqkpjdubrg\", &var_21h);\n    fcn.00483900();\n    stack0xffffffe4 = *0x523100;\n    var_19h._0_1_ = 1;\n    var_1ah = 1;\n    fcn.004838d0();\n    fcn.004b29a0(0x5205ee, &var_21h + 1);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"eimqioljwubstgvqbev\", &var_21h + 2);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"qyrcprpfwsfd\", &var_21h + 3);\n    fcn.00483900();\n    var_1bh = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"hbnfsxanpevptwstqsxnzxqqsdbju\", &var_1dh);\n    fcn.00483900();\n    for (var_ch = 0x44; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"xazimrpbhd\", &var_1ch);\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 687
    },
    "00427478": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00427478(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint noname_6, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    char cVar1;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_94h;\n    uint var_7ch;\n    uint var_62h;\n    uint var_45h;\n    uint var_29h;\n    uint var_19h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffe4 = *0x523108;\n    fcn.004838d0();\n    fcn.004b29a0(\"qluqjcbgmhhqqogjcboickinasloldxiynjazirguofcwqkcgqwjjuluo\", &var_62h);\n    fcn.00483900();\n    var_19h._0_1_ = 0;\n    stack0xffffffd4 = *0x523110;\n    fcn.004838d0();\n    fcn.004b29a0(\"hzgnn\", &var_62h + 1);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"qluqjcbgmhhqqogjcboickinasloldxiynjazirguofcwqkcgqwjjuluo\", &var_45h);\n    fcn.004838d0();\n    fcn.004b29a0(\"qluqjcbgmhhqqogjcboickinasloldxiynjazirguofcwqkcgqwjjuluo\", &var_29h);\n    cVar1 = fcn.004c1160(&var_45h + 1, &var_62h + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x26; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 605
    },
    "0042766a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.0042766a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch)\n\n{\n    char cVar1;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_90h;\n    uint var_78h;\n    uint var_5eh;\n    uint var_41h;\n    uchar var_25h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x523118;\n    fcn.004838d0();\n    fcn.004b29a0(\"lspmlkbmxwysrdehwdkbythzgmrkghngrlyfrzwnijfxkutgfphszcqfocunvhlmqat\", &var_5eh);\n    fcn.00483900();\n    var_1ch = 0xe97;\n    var_20h = 0x517;\n    var_24h = 0x18ed;\n    fcn.004838d0();\n    fcn.004b29a0(\"gmxxcpkwtrlqafdyarkbfedkzwnyjsludpbiapjehpcmkshgtfyuxyoztbowzktrvcfvrpidtgoj\", &var_5eh + 1);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"lspmlkbmxwysrdehwdkbythzgmrkghngrlyfrzwnijfxkutgfphszcqfocunvhlmqat\", &var_41h);\n    fcn.004838d0();\n    fcn.004b29a0(\"lspmlkbmxwysrdehwdkbythzgmrkghngrlyfrzwnijfxkutgfphszcqfocunvhlmqat\", &var_25h);\n    cVar1 = fcn.004c1160(&var_41h + 1, &var_5eh + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x44; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 1;\n}\n",
        "token_count": 648
    },
    "00427856": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00427856(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint noname_6, \n            uint noname_7, uint arg_28h, uint arg_2ch)\n\n{\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x4f; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "00428b50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00428b50(uint arg_8h, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_41h;\n    uint var_38h;\n    uint var_34h;\n    ulong uStack52;\n    ulong uStack44;\n    ulong uStack36;\n    uchar var_12h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 1;\n    var_12h = 0;\n    uStack36 = *0x523230;\n    uStack44 = *0x523238;\n    uStack52 = *0x523240;\n    var_34h = 0x7cb;\n    var_38h = 0x4de;\n    stack0xffffffbc = *0x523248;\n    fcn.004838d0();\n    fcn.004b29a0(\"fmgmkpakuzxsgggncukodbirgeyhwahdofqzpxfrcaiwudyogynpttxpcttttdpt\", &var_41h);\n    fcn.00483900();\n    for (var_ch = 7; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (stack0xffffffec = 2; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n    }\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 440
    },
    "00428c36": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00428c36(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint arg_28h, uint noname_9, uint arg_30h, uint arg_34h, uint arg_38h)\n\n{\n    uint var_80h;\n    uint var_7ch;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_31h;\n    uint var_29h;\n    uchar var_1dh;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"ufpljfzkhjodnegyfdhbfkstlokfcrhyynanepacrjjvfidukecj\", &var_31h);\n    fcn.00483900();\n    var_18h = 0xe75;\n    var_1ch = 0x1c89;\n    var_1dh = 0;\n    stack0xffffffd4 = *0x523250;\n    var_29h._0_1_ = 1;\n    stack0xffffffcc = 0x603;\n    for (var_ch = 4; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x48; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x53; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004b2fc0();\n    return 1;\n}\n",
        "token_count": 505
    },
    "00428d38": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.00428d38(uint noname_0, uint arg_ch)\n\n{\n    double dVar1;\n    uint var_70h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_44h;\n    uint var_2ah;\n    uchar var_22h;\n    uint var_21h;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x523258;\n    stack0xffffffdc = *0x523260;\n    var_21h._0_1_ = 1;\n    var_22h = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"lbpvnnxxdcecbtwojbiujkichxswiuptaylvzqkxf\", &var_2ah);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"etavbruyaxqroqxevr\", &var_2ah + 1);\n    fcn.00483900();\n    dVar1 = *0x523268;\n    stack0xffffffd4 = 0x17f2;\n    for (var_ch = 1; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 356
    },
    "00428e3e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00428e3e(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint noname_5, uint noname_6, \n            uint arg_24h, uint arg_28h)\n\n{\n    char cVar1;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_ach;\n    uint var_94h;\n    uint var_7ch;\n    uint var_63h;\n    uint var_45h;\n    uchar var_2ah;\n    uchar var_29h;\n    uint var_28h;\n    uint var_24h;\n    ulong uStack36;\n    int32_t var_15h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_15h._0_1_ = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"eklneqberkseyapenlzivqmnjmtaosoihoxfrtlsaedozdjkssxmgwkguhthcxfjbeyfpgdp\", &var_63h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"rtfvifnsfxkfymndfvipxwalmfgyzktoiflijmssdquvpcbfpebxejyupjicfihoaszzgvvuokykogbvudquhktzzoskki\", \n                 &var_63h + 1);\n    fcn.00483900();\n    uStack36 = *0x523270;\n    var_24h = 0x136;\n    fcn.004838d0();\n    fcn.004b29a0(\"khludqieyqrtytbvffvjjiyyxgpvixkdevaeyzzydtqfhxoheglsqwmrdtjmmye\", &var_63h + 2);\n    fcn.00483900();\n    var_28h = 0x307;\n    var_29h = 0;\n    for (var_ch = 0x3f; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x5a; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"rtfvifnsfxkfymndfvipxwalmfgyzktoiflijmssdquvpcbfpebxejyupjicfihoaszzgvvuokykogbvudquhktzzoskki\", \n                 &var_45h);\n    fcn.004838d0();\n    fcn.004b29a0(\"rtfvifnsfxkfymndfvipxwalmfgyzktoiflijmssdquvpcbfpebxejyupjicfihoaszzgvvuokykogbvudquhktzzoskki\", \n                 &var_2ah);\n    cVar1 = fcn.004c1160(&var_45h + 1, &var_63h + 3);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffe8 = 0x1f; 0 < stack0xffffffe8; unique0x00007a80 = stack0xffffffe8 + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 0xbbd0;\n}\n",
        "token_count": 934
    },
    "004290be": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.004290be(uint arg_8h, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h, uint noname_5, uint arg_20h, \n            uint arg_24h, uint noname_8, uint noname_9, uint arg_30h, uint arg_34h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x4a; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x5e; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    for (var_ch = 0x34; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    return *0x523278;\n}\n",
        "token_count": 289
    },
    "00429238": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.00429238(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_54h;\n    uint var_3ah;\n    ulong uStack52;\n    ulong uStack44;\n    uint var_1ch;\n    ulong uStack28;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0xae;\n    fcn.004838d0();\n    fcn.004b29a0(\"kxeozbormsumjfrvskgintamnferiwehbhkllruldwlyipqlhaicjcmb\", &var_3ah);\n    fcn.00483900();\n    uStack28 = *0x523290;\n    var_1ch = 0x85e;\n    uStack44 = *0x523298;\n    uStack52 = *0x5232a0;\n    stack0xffffffc4 = *0x5232a8;\n    var_3ah._1_1_ = 0;\n    for (var_ch = 8; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 325
    },
    "0042930c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nfloat10 __cdecl\nfcn.0042930c(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    double dVar1;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_34h;\n    uint var_19h;\n    uchar var_15h;\n    uchar var_14h;\n    uchar var_13h;\n    uchar var_12h;\n    uchar var_11h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    \n    var_10h = 0x2132;\n    var_11h = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"hkyihkgt\", &var_19h);\n    fcn.00483900();\n    var_12h = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"nypjb\", &var_19h + 1);\n    fcn.00483900();\n    dVar1 = *0x5232b8;\n    var_13h = 0;\n    var_14h = 1;\n    var_15h = 1;\n    var_19h._3_1_ = 1;\n    var_19h._2_1_ = 1;\n    for (var_ch = 0x31; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 463
    },
    "0042951c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042951c(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_ach;\n    uint var_a0h;\n    uint var_88h;\n    uint var_6eh;\n    uint var_51h;\n    uchar var_36h;\n    uchar var_35h;\n    uint var_34h;\n    uchar var_2dh;\n    uint var_2ch;\n    ulong uStack44;\n    ulong uStack36;\n    ulong uStack28;\n    uchar var_eh;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"pnhiepvrtfhlxfwqzpcufaulrvgueuayafxxhyndmbvfzrecudcjuvltpwdlqohqagzpzfpdryoexapbbbbdkisye\", &var_6eh);\n    fcn.00483900();\n    var_dh._0_1_ = 1;\n    var_eh = 0;\n    uStack28 = *0x5232c0;\n    uStack36 = *0x5232c8;\n    uStack44 = *0x5232d0;\n    var_2ch = 0x70;\n    fcn.004838d0();\n    fcn.004b29a0(\"yutctxqnihjasowpaqcgoegbayessoawkcqaxewkgd\", &var_6eh + 1);\n    fcn.00483900();\n    var_2dh = 1;\n    var_34h = 0x3bc;\n    fcn.004838d0();\n    fcn.004b29a0(\"pnhiepvrtfhlxfwqzpcufaulrvgueuayafxxhyndmbvfzrecudcjuvltpwdlqohqagzpzfpdryoexapbbbbdkisye\", &var_51h);\n    fcn.004838d0();\n    fcn.004b29a0(\"pnhiepvrtfhlxfwqzpcufaulrvgueuayafxxhyndmbvfzrecudcjuvltpwdlqohqagzpzfpdryoexapbbbbdkisye\", &var_36h);\n    cVar1 = fcn.004c1160(&var_51h + 1, &var_6eh + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (stack0xfffffff0 = 4; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(0x5210e7, &var_35h);\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 767
    },
    "0042a200": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.0042a200(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_74h;\n    uint var_59h;\n    uint var_3dh;\n    uchar var_22h;\n    uint var_21h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    var_dh._0_1_ = 1;\n    var_14h = 0xf;\n    fcn.004838d0();\n    fcn.004b29a0(\"kifirwwzubdaqzjgrnuevfstzzdai\", &var_59h);\n    fcn.00483900();\n    stack0xffffffdc = *0x523370;\n    var_21h._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"kifirwwzubdaqzjgrnuevfstzzdai\", &var_3dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"kifirwwzubdaqzjgrnuevfstzzdai\", &var_22h);\n    cVar2 = fcn.004c1830(&var_3dh + 1, &var_59h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    dVar1 = *0x523378;\n    if (cVar2 != '\\0') {\n        for (stack0xfffffff0 = 8; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 508
    },
    "0042a3ca": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 __cdecl\nfcn.0042a3ca(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_84h;\n    uint var_69h;\n    uint var_4dh;\n    uchar var_31h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x523380;\n    var_1ch = 0x6da;\n    var_20h = 0x802;\n    var_24h = 0x1a9;\n    var_28h = 0x1ef;\n    var_2ch = 0x1196;\n    fcn.004838d0();\n    fcn.004b29a0(\"iwdyiqkhdviiyahbbzqmthssziijeynzbpymnhdehfhwqngjgatbxtsykquyjxbu\", &var_69h);\n    fcn.00483900();\n    var_30h = 0x16f;\n    fcn.004838d0();\n    fcn.004b29a0(\"iwdyiqkhdviiyahbbzqmthssziijeynzbpymnhdehfhwqngjgatbxtsykquyjxbu\", &var_4dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"iwdyiqkhdviiyahbbzqmthssziijeynzbpymnhdehfhwqngjgatbxtsykquyjxbu\", &var_31h);\n    cVar2 = fcn.004c1160(&var_4dh + 1, &var_69h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    dVar1 = *0x523388;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x18; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x39; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 704
    },
    "0042a5ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0042a5ac(uint param_1)\n\n{\n    uint var_4ch;\n    uchar var_43h;\n    uchar var_42h;\n    uint var_41h;\n    ulong uStack60;\n    uint var_30h;\n    uchar var_29h;\n    uint var_28h;\n    uchar var_22h;\n    uint var_21h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffdc = *0x523390;\n    var_21h._0_1_ = 1;\n    var_22h = 0;\n    var_28h = 0x87;\n    var_29h = 0;\n    var_30h = 0x1ce5;\n    uStack60 = *0x523398;\n    stack0xffffffbc = *0x5233a0;\n    var_41h._0_1_ = 0;\n    var_42h = 1;\n    for (var_ch = 0x12; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x20; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x4d; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"qragccxfwnygsajncm\", &var_43h);\n    fcn.00483900();\n    return param_1;\n}\n",
        "token_count": 419
    },
    "0042a680": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042a680(uint noname_0, uint arg_ch)\n\n{\n    char cVar1;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d0h;\n    uint var_b5h;\n    uint var_99h;\n    uint var_7dh;\n    uint var_61h;\n    uchar var_45h;\n    uint var_44h;\n    ulong uStack68;\n    uint var_38h;\n    uint var_31h;\n    uint var_24h;\n    uchar var_1eh;\n    int32_t var_1dh;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_1dh._0_1_ = 1;\n    var_1eh = 1;\n    var_24h = 0xd47;\n    stack0xffffffcc = *0x5233a8;\n    var_31h._0_1_ = 0;\n    var_38h = 0x6b3;\n    uStack68 = *0x5233b0;\n    var_44h = 0xfcf;\n    fcn.004838d0();\n    fcn.004b29a0(\"dwgkrdxndlxiszixlgsmjksavwuixjfmbjyecvlqudtwdg\", &var_b5h);\n    fcn.00483900();\n    for (var_ch = 0x17; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x35; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"dwgkrdxndlxiszixlgsmjksavwuixjfmbjyecvlqudtwdg\", &var_99h);\n    fcn.004838d0();\n    fcn.004b29a0(\"dwgkrdxndlxiszixlgsmjksavwuixjfmbjyecvlqudtwdg\", &var_7dh);\n    cVar1 = fcn.004c1830(&var_99h + 1, &var_b5h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x5b; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"dwgkrdxndlxiszixlgsmjksavwuixjfmbjyecvlqudtwdg\", &var_61h);\n    fcn.004838d0();\n    fcn.004b29a0(\"dwgkrdxndlxiszixlgsmjksavwuixjfmbjyecvlqudtwdg\", &var_45h);\n    cVar1 = fcn.004c1160(&var_61h + 1, &var_7dh + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_18h = 100; 0 < var_18h; var_18h = var_18h + -1) {\n        }\n    }\n    for (stack0xffffffe0 = 0x3a; 0 < stack0xffffffe0; unique0x00007a80 = stack0xffffffe0 + -1) {\n    }\n    fcn.004b2fc0();\n    return 1;\n}\n",
        "token_count": 927
    },
    "0042a93a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __fastcall fcn.0042a93a(uint param_1)\n\n{\n    char cVar1;\n    uint var_12ch;\n    uint var_11ch;\n    uint var_104h;\n    uint var_ech;\n    uint var_d3h;\n    uint var_b5h;\n    uint var_99h;\n    uint var_7dh;\n    uint var_61h;\n    uint var_45h;\n    uint var_2ah;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"gbawmazizzzqi\", &var_d3h);\n    fcn.00483900();\n    stack0xffffffd4 = *0x5233b8;\n    fcn.004838d0();\n    fcn.004b29a0(\"zjmbjxwxqcgchau\", &var_d3h + 1);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"ozhhoiqmthebczewwkhyrgmnhodidvfkacawxqdiuzzxxvxwxpyywvytohxtpnftsjepjdhxgsxxupilulrkbffuqbzsl\", \n                 &var_d3h + 2);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"gbawmazizzzqi\", &var_b5h);\n    fcn.004838d0();\n    fcn.004b29a0(\"gbawmazizzzqi\", &var_99h);\n    cVar1 = fcn.004c1160(&var_b5h + 1, &var_d3h + 3);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x57; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"gbawmazizzzqi\", &var_7dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"gbawmazizzzqi\", &var_61h);\n    cVar1 = fcn.004c1160(&var_7dh + 1, &var_99h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x12; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (var_14h = 0x62; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"zjmbjxwxqcgchau\", &var_45h);\n    fcn.004838d0();\n    fcn.004b29a0(\"zjmbjxwxqcgchau\", &var_2ah);\n    cVar1 = fcn.004c1160(&var_45h + 1, &var_61h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_18h = 10; 0 < var_18h; var_18h = var_18h + -1) {\n        }\n    }\n    for (var_1ch = 0x21; 0 < var_1ch; var_1ch = var_1ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"hvqzzwnjrjsehcqw\", &var_2ah + 1);\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return param_1;\n}\n",
        "token_count": 1060
    },
    "0042ad9a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0042ad9a(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    char cVar1;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f4h;\n    uint var_dch;\n    uint var_c4h;\n    uint var_abh;\n    uint var_8dh;\n    uint var_71h;\n    uint var_55h;\n    uchar var_39h;\n    uint var_38h;\n    uint var_31h;\n    ulong uStack44;\n    ulong uStack36;\n    ulong uStack28;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"bfgnlzxazrcopmfe\", &var_abh);\n    fcn.00483900();\n    uStack28 = *0x5233c0;\n    uStack36 = *0x5233c8;\n    uStack44 = *0x5233d0;\n    stack0xffffffcc = *0x5233d8;\n    var_31h._0_1_ = 0;\n    var_38h = 0x1a;\n    fcn.004838d0();\n    fcn.004b29a0(\"rgnmcag\", &var_abh + 1);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"nnidjckoauymeqrcwptekpfguxbip\", &var_abh + 2);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"nnidjckoauymeqrcwptekpfguxbip\", &var_8dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"nnidjckoauymeqrcwptekpfguxbip\", &var_71h);\n    cVar1 = fcn.004c1160(&var_8dh + 1, &var_abh + 3);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x1a; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"bfgnlzxazrcopmfe\", &var_55h);\n    fcn.004838d0();\n    fcn.004b29a0(\"bfgnlzxazrcopmfe\", &var_39h);\n    cVar1 = fcn.004c1160(&var_55h + 1, &var_71h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x5b; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 1;\n}\n",
        "token_count": 914
    },
    "0042b12e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.0042b12e(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    uint in_ECX;\n    uint var_20h;\n    uint var_1ch;\n    uchar var_11h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0x329;\n    for (var_ch = 0x23; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(0x521606, &var_11h);\n    fcn.00483900();\n    return in_ECX;\n}\n",
        "token_count": 183
    },
    "0042b1aa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0042b1aa(void)\n\n{\n    char cVar1;\n    uint var_12ch;\n    uint var_124h;\n    uint var_10ch;\n    uint var_f4h;\n    uint var_dbh;\n    uint var_bdh;\n    uint var_a1h;\n    uint var_85h;\n    uint var_69h;\n    uint var_4dh;\n    uint var_31h;\n    ulong uStack44;\n    uchar var_1ah;\n    int32_t var_19h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_19h._0_1_ = 1;\n    var_1ah = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"wcrekykuwaekkfimugfnekkpteddeynqidnwqyhxxhbmsel\", &var_dbh);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"xkjzdnxqywqqqlguankiiuwpsfqcllwwgzbtu\", &var_dbh + 1);\n    fcn.00483900();\n    uStack44 = *0x5233e0;\n    fcn.004838d0();\n    fcn.004b29a0(\"wpxujnprddmgevosu\", &var_dbh + 2);\n    fcn.00483900();\n    stack0xffffffcc = *0x5233e8;\n    for (var_ch = 0x12; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"wcrekykuwaekkfimugfnekkpteddeynqidnwqyhxxhbmsel\", &var_bdh);\n    fcn.004838d0();\n    fcn.004b29a0(\"wcrekykuwaekkfimugfnekkpteddeynqidnwqyhxxhbmsel\", &var_a1h);\n    cVar1 = fcn.004c1830(&var_bdh + 1, &var_dbh + 3);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 100; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"wcrekykuwaekkfimugfnekkpteddeynqidnwqyhxxhbmsel\", &var_85h);\n    fcn.004838d0();\n    fcn.004b29a0(\"wcrekykuwaekkfimugfnekkpteddeynqidnwqyhxxhbmsel\", &var_69h);\n    cVar1 = fcn.004c1160(&var_85h + 1, &var_a1h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x39; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"xkjzdnxqywqqqlguankiiuwpsfqcllwwgzbtu\", &var_4dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"xkjzdnxqywqqqlguankiiuwpsfqcllwwgzbtu\", &var_31h);\n    cVar1 = fcn.004c1830(&var_4dh + 1, &var_69h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffe4 = 0xd; 0 < stack0xffffffe4; unique0x00007a80 = stack0xffffffe4 + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 0x5944;\n}\n",
        "token_count": 1097
    },
    "0042b68e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0042b68e(uint noname_0, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint in_ECX;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_1ah;\n    int32_t var_19h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_19h._0_1_ = 0;\n    for (var_ch = 0x46; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x3b; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x5c; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    for (stack0xffffffe4 = 0x40; 0 < stack0xffffffe4; unique0x00007a80 = stack0xffffffe4 + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"osdisjesljerwku\", &var_1ah);\n    fcn.00483900();\n    return in_ECX;\n}\n",
        "token_count": 416
    },
    "0042b76e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b76e(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x5f; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x35; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "0042b7b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.0042b7b8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint noname_6, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    \n    for (var_ch = 0x5c; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    return *0x523408;\n}\n",
        "token_count": 206
    },
    "0042b82e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.0042b82e(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint noname_8, uint arg_2ch, uint arg_30h)\n\n{\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    int32_t var_ch;\n    \n    for (var_ch = 0x10; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    return *0x523418;\n}\n",
        "token_count": 203
    },
    "0042c15e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.0042c15e(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_ach;\n    uint var_9ch;\n    uint var_81h;\n    uint var_65h;\n    uint var_49h;\n    uint var_2dh;\n    int32_t var_12h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"znayl\", &var_81h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"znayl\", &var_65h);\n    fcn.004838d0();\n    fcn.004b29a0(\"znayl\", &var_49h);\n    cVar1 = fcn.004c1160(&var_65h + 1, &var_81h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x4d; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"znayl\", &var_2dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"znayl\", &var_12h);\n    cVar1 = fcn.004c1830(&var_2dh + 1, &var_49h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffec = 0x34; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(0x521944, &var_12h + 1);\n    fcn.00483900();\n    fcn.004b2fc0();\n    return in_ECX;\n}\n",
        "token_count": 577
    },
    "0042c3d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.0042c3d0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_7ch;\n    uint var_74h;\n    uint var_59h;\n    uint var_3dh;\n    uchar var_21h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_15h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_15h._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"jhbvinmtusufvmmmojehpgqdmfgxubkuiwxqwobpbclwjbywhztfltpaqtvrgvgmvio\", &var_59h);\n    fcn.00483900();\n    var_1ch = 0xa8;\n    var_20h = 0x1133;\n    fcn.004838d0();\n    fcn.004b29a0(\"jhbvinmtusufvmmmojehpgqdmfgxubkuiwxqwobpbclwjbywhztfltpaqtvrgvgmvio\", &var_3dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"jhbvinmtusufvmmmojehpgqdmfgxubkuiwxqwobpbclwjbywhztfltpaqtvrgvgmvio\", &var_21h);\n    cVar2 = fcn.004c1160(&var_3dh + 1, &var_59h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    dVar1 = *0x5234b8;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0xd; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x23; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (stack0xffffffe8 = 0x2a; 0 < stack0xffffffe8; unique0x00007a80 = stack0xffffffe8 + -1) {\n    }\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 636
    },
    "0042c57c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0042c57c(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint noname_5, uint noname_6, \n            uint noname_7, uint arg_28h, uint arg_2ch, uint arg_30h, uint arg_34h)\n\n{\n    char cVar1;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_bch;\n    uint var_b4h;\n    uint var_9ch;\n    uint var_84h;\n    uint var_6bh;\n    uint var_4dh;\n    uchar var_32h;\n    uchar var_31h;\n    uint var_30h;\n    uint var_29h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_1ch = 0x13bf;\n    fcn.004838d0();\n    fcn.004b29a0(\"ynrsj\", &var_6bh);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"pufademcepupygfthrtigbebynwphqfippudgdazyxvtroerjyqydbpjkhyctkvkmnoswefmsme\", &var_6bh + 1);\n    fcn.00483900();\n    var_20h = 0xbe1;\n    fcn.004838d0();\n    fcn.004b29a0(0x519dbd, &var_6bh + 2);\n    fcn.00483900();\n    stack0xffffffd4 = *0x5234c0;\n    var_29h._0_1_ = 1;\n    var_30h = 0x17e4;\n    var_31h = 0;\n    fcn.004838d0();\n    fcn.004b29a0(\"pufademcepupygfthrtigbebynwphqfippudgdazyxvtroerjyqydbpjkhyctkvkmnoswefmsme\", &var_4dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"pufademcepupygfthrtigbebynwphqfippudgdazyxvtroerjyqydbpjkhyctkvkmnoswefmsme\", &var_32h);\n    cVar1 = fcn.004c1160(&var_4dh + 1, &var_6bh + 3);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x5e; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x56; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x2c; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    for (var_18h = 0x53; 0 < var_18h; var_18h = var_18h + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 0x3c3;\n}\n",
        "token_count": 918
    },
    "0042c8ae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.0042c8ae(void)\n\n{\n    double dVar1;\n    uint var_5ch;\n    uint var_58h;\n    uint var_3dh;\n    ulong uStack60;\n    uint var_2ch;\n    ulong uStack44;\n    uint var_1ch;\n    int32_t var_15h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_15h._0_1_ = 1;\n    var_1ch = 0xb94;\n    uStack44 = *0x5234e8;\n    var_2ch = 0x58b;\n    fcn.004838d0();\n    fcn.004b29a0(\"uqfwonoxdzbigbjfmukuilrogzon\", &var_3dh);\n    fcn.00483900();\n    dVar1 = *0x5234f8;\n    uStack60 = *0x5234f0;\n    stack0xffffffc0 = 0xdb9;\n    for (var_ch = 0x41; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x28; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (stack0xffffffe8 = 0x48; 0 < stack0xffffffe8; unique0x00007a80 = stack0xffffffe8 + -1) {\n    }\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 389
    },
    "0042c982": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 fcn.0042c982(void)\n\n{\n    double dVar1;\n    uint var_7ch;\n    uint var_70h;\n    uint var_58h;\n    uint var_40h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_24h;\n    ulong uStack36;\n    uchar var_15h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0x1e9d;\n    var_14h = 0x898;\n    var_15h = 0;\n    uStack36 = *0x523500;\n    var_24h = 0x17aa;\n    fcn.004838d0();\n    fcn.004b29a0(\"lvxkooaurxxxxummcp\", &var_27h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"xwwrjybxrvkjksurugmumhmpqyuwkfgebyxnrhhgvos\", &var_26h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"lngtmxqdctfxqnwsereqkcqfspumgrsnlmvsofg\", &var_25h);\n    fcn.00483900();\n    dVar1 = *0x523508;\n    for (var_ch = 0x2a; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 426
    },
    "0042cad8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0042cad8(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint noname_6, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_9h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x35; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (stack0xfffffff4 = 0x27; 0 < stack0xfffffff4; unique0x00007a80 = stack0xfffffff4 + -1) {\n    }\n    return 0x531d;\n}\n",
        "token_count": 251
    },
    "0042cb54": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0042cb54(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint arg_28h)\n\n{\n    char cVar1;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_11ch;\n    uint var_104h;\n    uint var_ech;\n    uint var_d3h;\n    uint var_b5h;\n    uint var_99h;\n    uint var_7dh;\n    uint var_61h;\n    uint var_45h;\n    uchar var_2ah;\n    uint var_29h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_1ch = 0x197f;\n    fcn.004838d0();\n    fcn.004b29a0(\"ujincchcpsqslzagznhprwx\", &var_d3h);\n    fcn.00483900();\n    stack0xffffffd4 = *0x523518;\n    fcn.004838d0();\n    fcn.004b29a0(\"ghadudwlnseciyyaaxcfrereaesvmdiqthdttrga\", &var_d3h + 1);\n    fcn.00483900();\n    var_29h._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"jtyexizqdwrrpeo\", &var_d3h + 2);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"jtyexizqdwrrpeo\", &var_b5h);\n    fcn.004838d0();\n    fcn.004b29a0(\"jtyexizqdwrrpeo\", &var_99h);\n    cVar1 = fcn.004c1830(&var_b5h + 1, &var_d3h + 3);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x1c; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"ghadudwlnseciyyaaxcfrereaesvmdiqthdttrga\", &var_7dh);\n    fcn.004838d0();\n    fcn.004b29a0(\"ghadudwlnseciyyaaxcfrereaesvmdiqthdttrga\", &var_61h);\n    cVar1 = fcn.004c1830(&var_7dh + 1, &var_99h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_10h = 2; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (var_14h = 0x43; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"ujincchcpsqslzagznhprwx\", &var_45h);\n    fcn.004838d0();\n    fcn.004b29a0(\"ujincchcpsqslzagznhprwx\", &var_2ah);\n    cVar1 = fcn.004c1160(&var_45h + 1, &var_61h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar1 != '\\0') {\n        for (var_18h = 0x42; 0 < var_18h; var_18h = var_18h + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return 0;\n}\n",
        "token_count": 1100
    },
    "0042d064": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl\nfcn.0042d064(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_bch;\n    uint var_b4h;\n    uint var_9ch;\n    uint var_82h;\n    uint var_65h;\n    uint var_49h;\n    uint var_2dh;\n    uchar var_12h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.004838d0();\n    fcn.004b29a0(\"rmqixrrxzdtdxyzahyzgykduljjbxayzvjdftbjqmujluybhtkpqwvcawlmtoovwhbeqlfbvu\", &var_82h);\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"lragxsejhglksukyzbizckygnctnaryylgmlznzzenxghcdtrsrljjeoghjbcssllefcqqdqvwuehtcrubefuzvdoq\", \n                 &var_82h + 1);\n    fcn.00483900();\n    var_11h._0_1_ = 1;\n    fcn.004838d0();\n    fcn.004b29a0(\"lragxsejhglksukyzbizckygnctnaryylgmlznzzenxghcdtrsrljjeoghjbcssllefcqqdqvwuehtcrubefuzvdoq\", &var_65h)\n    ;\n    fcn.004838d0();\n    fcn.004b29a0(\"lragxsejhglksukyzbizckygnctnaryylgmlznzzenxghcdtrsrljjeoghjbcssllefcqqdqvwuehtcrubefuzvdoq\", &var_49h)\n    ;\n    cVar2 = fcn.004c1830(&var_65h + 1, &var_82h + 2);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x1f; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004838d0();\n    fcn.004b29a0(\"lragxsejhglksukyzbizckygnctnaryylgmlznzzenxghcdtrsrljjeoghjbcssllefcqqdqvwuehtcrubefuzvdoq\", &var_2dh)\n    ;\n    fcn.004838d0();\n    fcn.004b29a0(\"lragxsejhglksukyzbizckygnctnaryylgmlznzzenxghcdtrsrljjeoghjbcssllefcqqdqvwuehtcrubefuzvdoq\", &var_12h)\n    ;\n    cVar2 = fcn.004c1160(&var_2dh + 1, &var_49h + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    dVar1 = *0x523530;\n    if (cVar2 != '\\0') {\n        for (stack0xffffffec = 5; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n        }\n    }\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    return dVar1;\n}\n",
        "token_count": 992
    },
    "0042dc04": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042dc04(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if ((arg_8h == 1) && (arg_ch == 0xffff)) {\n        fcn.004ba260();\n        fcn.004014c0(fcn.0042dbf2);\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "0042e370": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042e370(uint param_1, int32_t param_2)\n\n{\n    char *pcVar1;\n    int32_t in_EAX;\n    \n    if (param_2 == 0) {\n        pcVar1 = *(in_EAX + 0xc);\n        if (*pcVar1 == '\\0') {\n            return 0;\n        }\n        *(in_EAX + 0xc) = pcVar1 + 1;\n        param_2 = *pcVar1;\n    }\n    if (param_2 == 0x68) {\n        fcn.0042de20();\n    }\n    else {\n        if (param_2 != 0x76) {\n            return 0;\n        }\n        fcn.0042de20();\n        if (**(in_EAX + 0xc) != '_') {\n            return 0;\n        }\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n        fcn.0042de20();\n    }\n    if (**(in_EAX + 0xc) != '_') {\n        return 0;\n    }\n    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n    return 1;\n}\n",
        "token_count": 280
    },
    "0042e3e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0042e3e0(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    \n    cVar1 = *in_EAX;\n    if ((cVar1 != 'r' && cVar1 != 'V') && (cVar1 != 'K')) {\n        if (cVar1 != 'D') {\n            return false;\n        }\n        return in_EAX[1] + 0x89U < 2 || (in_EAX[1] & 0xdfU) == 0x4f;\n    }\n    return true;\n}\n",
        "token_count": 128
    },
    "0042e7c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint * fcn.0042e7c0(void)\n\n{\n    uint8_t **ppuVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint8_t **ppuVar5;\n    uint8_t uVar6;\n    int32_t in_EAX;\n    uint *puVar7;\n    int32_t *piVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    int32_t iVar11;\n    uint8_t *puVar12;\n    char *pcVar13;\n    char *pcVar14;\n    uint8_t *puVar15;\n    uint8_t *puVar16;\n    bool bVar17;\n    uchar uVar18;\n    bool bVar19;\n    bool bVar20;\n    uchar uVar21;\n    \n    pcVar14 = *(in_EAX + 0xc);\n    cVar2 = *pcVar14;\n    if (cVar2 == 'L') {\n        pcVar14 = *(in_EAX + 0xc);\n        if (*pcVar14 != 'L') {\n            return NULL;\n        }\n        pcVar13 = pcVar14 + 1;\n        *(in_EAX + 0xc) = pcVar13;\n        cVar2 = pcVar14[1];\n        if ((cVar2 == '_') || (cVar2 == 'Z')) {\n            if (cVar2 == '_') {\n                pcVar13 = pcVar14 + 2;\n                *(in_EAX + 0xc) = pcVar13;\n                cVar2 = pcVar14[2];\n                if (cVar2 != 'Z') {\n                    puVar7 = NULL;\n                    goto joined_r0x0042e75d;\n                }\n            }\n            *(in_EAX + 0xc) = pcVar13 + 1;\n            puVar7 = fcn.004307a0();\n            pcVar13 = *(in_EAX + 0xc);\n            cVar2 = *pcVar13;\n            goto joined_r0x0042e75d;\n        }\n        piVar8 = fcn.0042f510();\n        if (piVar8 == NULL) {\n            return 0;\n        }\n        if ((*piVar8 == 0x27) && (*(piVar8[2] + 0x10) != 0)) {\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) - *(piVar8[2] + 4);\n        }\n        pcVar13 = *(in_EAX + 0xc);\n        cVar2 = *pcVar13;\n        pcVar14 = pcVar13;\n        if (cVar2 == 'n') {\n            pcVar14 = pcVar13 + 1;\n            *(in_EAX + 0xc) = pcVar14;\n            cVar2 = pcVar13[1];\n        }\n        pcVar13 = pcVar14;\n        if (cVar2 == 'E') {\n            iVar11 = 0;\n        }\n        else {\n            do {\n                if (cVar2 == '\\0') {\n                    return 0;\n                }\n                pcVar13 = pcVar13 + 1;\n                *(in_EAX + 0xc) = pcVar13;\n                cVar2 = *pcVar13;\n            } while (cVar2 != 'E');\n            iVar11 = pcVar13 - pcVar14;\n        }\n        iVar4 = *(in_EAX + 0x14);\n        if (iVar4 < *(in_EAX + 0x18)) {\n            puVar7 = iVar4 * 0x10 + *(in_EAX + 0x10);\n            puVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar4 + 1;\n            if ((pcVar14 == NULL) || (iVar11 == 0)) goto code_r0x0042e7b0;\n            puVar7[1] = 0;\n            *puVar7 = 0;\n            puVar7[2] = pcVar14;\n            puVar7[3] = iVar11;\n        }\n        else {\ncode_r0x0042e7b0:\n            puVar7 = NULL;\n        }\n        puVar7 = fcn.0042dc50(puVar7);\n        pcVar13 = *(in_EAX + 0xc);\n        cVar2 = *pcVar13;\njoined_r0x0042e75d:\n        if (cVar2 != 'E') {\n            return NULL;\n        }\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        return puVar7;\n    }\n    if (cVar2 == 'T') {\n        if (**(in_EAX + 0xc) != 'T') {\n            return NULL;\n        }\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n        iVar11 = fcn.0042df20();\n        if ((-1 < iVar11) && (iVar4 = *(in_EAX + 0x14),  iVar4 < *(in_EAX + 0x18))) {\n            puVar7 = *(in_EAX + 0x10) + iVar4 * 0x10;\n            puVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar4 + 1;\n            *puVar7 = 5;\n            puVar7[2] = iVar11;\n            return puVar7;\n        }\n        return NULL;\n    }\n    if (cVar2 == 's') {\n        if (pcVar14[1] == 'r') {\n            *(in_EAX + 0xc) = pcVar14 + 2;\n            fcn.0042f510();\n            uVar10 = fcn.004303a0();\n            if (**(in_EAX + 0xc) == 'I') {\n                *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n                uVar10 = fcn.0042eef0();\n                uVar10 = fcn.0042dc50(uVar10);\n            }\n            puVar7 = fcn.0042dc50(uVar10);\n            return puVar7;\n        }\n        if (pcVar14[1] == 'p') {\n            *(in_EAX + 0xc) = pcVar14 + 2;\n            fcn.0042e7c0();\n            puVar7 = fcn.0042dc50(0);\n            return puVar7;\n        }\n    }\n    else if (cVar2 == 'f') {\n        if (pcVar14[1] == 'p') {\n            *(in_EAX + 0xc) = pcVar14 + 2;\n            if (pcVar14[2] == 'T') {\n                iVar11 = 0;\n                *(in_EAX + 0xc) = pcVar14 + 3;\n            }\n            else {\n                uVar9 = fcn.0042df20();\n                iVar11 = uVar9 + 1;\n                if ((uVar9 & 0x7fffffff) == 0x7fffffff) {\n                    return 0;\n                }\n            }\n            iVar4 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar4) {\n                return 0;\n            }\n            puVar7 = iVar4 * 0x10 + *(in_EAX + 0x10);\n            puVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar4 + 1;\n            *puVar7 = 6;\n            puVar7[2] = iVar11;\n            return puVar7;\n        }\n    }\n    else {\n        if (cVar2 - 0x30U < 10) {\ncode_r0x0042e7fa:\n            puVar7 = fcn.004303a0();\n            if (puVar7 == NULL) {\n                return 0;\n            }\n            if (**(in_EAX + 0xc) != 'I') {\n                return puVar7;\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n            uVar10 = fcn.0042eef0();\n            puVar7 = fcn.0042dc50(uVar10);\n            return puVar7;\n        }\n        if (cVar2 == 'o') {\n            if (pcVar14[1] == 'n') {\n                *(in_EAX + 0xc) = pcVar14 + 2;\n                goto code_r0x0042e7fa;\n            }\n        }\n        else if (((cVar2 == 'i') || (cVar2 == 't')) && (pcVar14[1] == 'l')) {\n            if (cVar2 == 't') {\n                fcn.0042f510();\n                pcVar14 = *(in_EAX + 0xc);\n                if (pcVar14[1] == '\\0') {\n                    return 0;\n                }\n            }\n            *(in_EAX + 0xc) = pcVar14 + 2;\n            uVar10 = fcn.0042ee40();\n            puVar7 = fcn.0042dc50(uVar10);\n            return puVar7;\n        }\n    }\n    piVar8 = fcn.0042fe10();\n    if (piVar8 == NULL) {\n        return 0;\n    }\n    iVar11 = *piVar8;\n    if (iVar11 == 0x31) {\n        ppuVar5 = piVar8[2];\n        iVar11 = 3;\n        puVar15 = *ppuVar5;\n        ppuVar1 = in_EAX + 0x2c;\n        bVar17 = CARRY4(*ppuVar1, ppuVar5[2] + -2);\n        *ppuVar1 = *ppuVar1 + ppuVar5[2] + -2;\n        bVar20 = *ppuVar1 == NULL;\n        puVar12 = puVar15;\n        puVar16 = 0x524eb0;\n        do {\n            if (iVar11 == 0) break;\n            iVar11 = iVar11 + -1;\n            bVar17 = *puVar12 < *puVar16;\n            bVar20 = *puVar12 == *puVar16;\n            puVar12 = puVar12 + 1;\n            puVar16 = puVar16 + 1;\n        } while (bVar20);\n        if ((!bVar17 && !bVar20) == bVar17) {\n            uVar10 = fcn.0042f510();\n            goto code_r0x0042ebc5;\n        }\n        puVar12 = ppuVar5[3];\n        if (puVar12 != 0x1) {\n            if (puVar12 < 2) goto joined_r0x0042ec12;\n            if (puVar12 != 0x2) {\n                if (puVar12 != 0x3) {\n                    return 0;\n                }\n                bVar17 = false;\n                bVar20 = puVar15 == NULL;\n                if (bVar20) {\n                    return 0;\n                }\n                iVar11 = 3;\n                puVar12 = puVar15;\n                puVar16 = 0x524ebf;\n                do {\n                    if (iVar11 == 0) break;\n                    iVar11 = iVar11 + -1;\n                    bVar17 = *puVar12 < *puVar16;\n                    bVar20 = *puVar12 == *puVar16;\n                    puVar12 = puVar12 + 1;\n                    puVar16 = puVar16 + 1;\n                } while (bVar20);\n                if ((!bVar17 && !bVar20) == bVar17) {\n                    fcn.0042e7c0();\n                }\n                else {\n                    if (*puVar15 != 0x66) {\n                        if (*puVar15 != 0x6e) {\n                            return 0;\n                        }\n                        if ((puVar15[1] != 0x77) && (puVar15[1] != 0x61)) {\n                            return 0;\n                        }\n                        fcn.0042ee40();\n                        fcn.0042f510();\n                        pcVar14 = *(in_EAX + 0xc);\n                        cVar2 = *pcVar14;\n                        if (cVar2 == 'E') {\n                            *(in_EAX + 0xc) = pcVar14 + 1;\n                            iVar11 = 0;\n                        }\n                        else if (cVar2 == 'p') {\n                            if (pcVar14[1] != 'i') {\n                                return 0;\n                            }\n                            *(in_EAX + 0xc) = pcVar14 + 2;\n                            iVar11 = fcn.0042ee40();\n                        }\n                        else {\n                            if (cVar2 != 'i') {\n                                return 0;\n                            }\n                            if (pcVar14[1] != 'l') {\n                                return 0;\n                            }\n                            iVar11 = fcn.0042e7c0();\n                        }\n                        goto code_r0x0042ea79;\n                    }\n                    fcn.0042fe10();\n                }\n                fcn.0042e7c0();\n                iVar11 = fcn.0042e7c0();\n                if (iVar11 == 0) {\n                    return NULL;\n                }\ncode_r0x0042ea79:\n                uVar10 = fcn.0042dc50(iVar11);\n                uVar10 = fcn.0042dc50(uVar10);\n                puVar7 = fcn.0042dc50(uVar10);\n                return puVar7;\n            }\n            if (puVar15 == NULL) {\n                return 0;\n            }\n            if ((*ppuVar5)[1] == 99) {\n                uVar3 = **ppuVar5;\n                uVar6 = uVar3 + 0x9d;\n                if ((1 < uVar6) && (uVar6 = uVar3 + 0x8e,  1 < uVar6)) goto code_r0x0042eca8;\n                uVar21 = uVar6 == 1;\n                uVar18 = uVar6 == 0;\n                fcn.0042f510();\n            }\n            else {\ncode_r0x0042eca8:\n                uVar18 = *puVar15 < 0x66;\n                uVar21 = *puVar15 == 0x66;\n                if (uVar21) {\n                    fcn.0042fe10();\n                }\n                else {\n                    fcn.0042e7c0();\n                }\n            }\n            iVar11 = 3;\n            puVar12 = puVar15;\n            puVar16 = 0x524eb6;\n            do {\n                if (iVar11 == 0) break;\n                iVar11 = iVar11 + -1;\n                uVar18 = *puVar12 < *puVar16;\n                uVar21 = *puVar12 == *puVar16;\n                puVar12 = puVar12 + 1;\n                puVar16 = puVar16 + 1;\n            } while (uVar21);\n            bVar17 = false;\n            bVar20 = (!uVar18 && !uVar21) == uVar18;\n            if (bVar20) {\n                uVar10 = fcn.0042ee40();\n            }\n            else {\n                iVar11 = 3;\n                puVar12 = puVar15;\n                puVar16 = 0x524eb9;\n                do {\n                    if (iVar11 == 0) break;\n                    iVar11 = iVar11 + -1;\n                    bVar17 = *puVar12 < *puVar16;\n                    bVar20 = *puVar12 == *puVar16;\n                    puVar12 = puVar12 + 1;\n                    puVar16 = puVar16 + 1;\n                } while (bVar20);\n                bVar19 = false;\n                bVar17 = (!bVar17 && !bVar20) == bVar17;\n                if (!bVar17) {\n                    iVar11 = 3;\n                    puVar12 = 0x524ebc;\n                    do {\n                        if (iVar11 == 0) break;\n                        iVar11 = iVar11 + -1;\n                        bVar19 = *puVar15 < *puVar12;\n                        bVar17 = *puVar15 == *puVar12;\n                        puVar15 = puVar15 + 1;\n                        puVar12 = puVar12 + 1;\n                    } while (bVar17);\n                    if ((!bVar19 && !bVar17) != bVar19) {\n                        uVar10 = fcn.0042e7c0();\n                        goto code_r0x0042ed28;\n                    }\n                }\n                uVar10 = fcn.004303a0();\n                if (**(in_EAX + 0xc) == 'I') {\n                    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n                    uVar10 = fcn.0042eef0();\n                    uVar10 = fcn.0042dc50(uVar10);\n                }\n            }\ncode_r0x0042ed28:\n            uVar10 = fcn.0042dc50(uVar10);\n            puVar7 = fcn.0042dc50(uVar10);\n            return puVar7;\n        }\n        uVar6 = *puVar15;\n        if (((uVar6 == 0x70) || (uVar6 == 0x6d)) && (uVar6 == puVar15[1])) {\n            puVar16 = *(in_EAX + 0xc);\n            bVar17 = *puVar16 < 0x5f;\n            bVar20 = *puVar16 == 0x5f;\n            if (bVar20) {\n                *(in_EAX + 0xc) = puVar16 + 1;\n                goto code_r0x0042eb82;\n            }\n        }\n        else {\ncode_r0x0042eb82:\n            bVar17 = false;\n            puVar12 = NULL;\n            bVar20 = true;\n        }\n        iVar11 = 3;\n        puVar16 = 0x524eb3;\n        do {\n            if (iVar11 == 0) break;\n            iVar11 = iVar11 + -1;\n            bVar17 = *puVar15 < *puVar16;\n            bVar20 = *puVar15 == *puVar16;\n            puVar15 = puVar15 + 1;\n            puVar16 = puVar16 + 1;\n        } while (bVar20);\n        if ((!bVar17 && !bVar20) != bVar17) goto code_r0x0042eba1;\n        uVar10 = fcn.0042eef0();\n    }\n    else {\n        if (iVar11 == 0x32) {\n            puVar12 = piVar8[2];\n            if (puVar12 != 0x1) {\n                if (1 < puVar12) {\n                    return 0;\n                }\njoined_r0x0042ec12:\n                if (puVar12 == NULL) {\n                    puVar7 = fcn.0042dc50(0);\n                    return puVar7;\n                }\n                return 0;\n            }\n            uVar10 = fcn.0042e7c0();\n            goto code_r0x0042ebc5;\n        }\n        if (iVar11 != 0x33) {\n            return 0;\n        }\n        if (**(in_EAX + 0xc) == '_') {\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n            uVar10 = fcn.0042ee40();\n            goto code_r0x0042ebc5;\n        }\n        puVar12 = NULL;\ncode_r0x0042eba1:\n        uVar10 = fcn.0042e7c0();\n    }\n    if (puVar12 != NULL) {\n        uVar10 = fcn.0042dc50(uVar10);\n    }\ncode_r0x0042ebc5:\n    puVar7 = fcn.0042dc50(uVar10);\n    return puVar7;\n}\n",
        "token_count": 4503
    },
    "0042eef0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0042eef0(void)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    char *pcVar5;\n    int32_t *piVar6;\n    int32_t aiStack32 [4];\n    \n    pcVar5 = *(in_EAX + 0xc);\n    uVar4 = *(in_EAX + 0x28);\n    cVar2 = *pcVar5;\n    if (cVar2 == 'E') {\n        *(in_EAX + 0xc) = pcVar5 + 1;\n        uVar4 = fcn.0042dc50(0);\n        return uVar4;\n    }\n    aiStack32[0] = 0;\n    piVar6 = aiStack32;\n    do {\n        if (cVar2 == 'L') {\n            iVar3 = fcn.0042e640();\n        }\n        else if (cVar2 < 'M') {\n            if (1 < cVar2 + 0xb7U) goto code_r0x0042efa0;\n            iVar3 = fcn.0042f000();\n        }\n        else if (cVar2 == 'X') {\n            uVar1 = *(in_EAX + 0x30);\n            *(in_EAX + 0x30) = 1;\n            *(in_EAX + 0xc) = pcVar5 + 1;\n            iVar3 = fcn.0042e7c0();\n            *(in_EAX + 0x30) = uVar1;\n            if (**(in_EAX + 0xc) != 'E') {\n                return 0;\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n        }\n        else {\ncode_r0x0042efa0:\n            iVar3 = fcn.0042f510();\n        }\n        if (iVar3 == 0) {\n            return 0;\n        }\n        iVar3 = fcn.0042dc50(0);\n        *piVar6 = iVar3;\n        if (iVar3 == 0) {\n            return 0;\n        }\n        pcVar5 = *(in_EAX + 0xc);\n        piVar6 = iVar3 + 0xc;\n        cVar2 = *pcVar5;\n        if (cVar2 == 'E') {\n            *(in_EAX + 0x28) = uVar4;\n            *(in_EAX + 0xc) = pcVar5 + 1;\n            return aiStack32[0];\n        }\n    } while( true );\n}\n",
        "token_count": 586
    },
    "0042f510": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.0042f510(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t in_EAX;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    int32_t *piVar7;\n    uint uVar8;\n    uint uVar9;\n    char cVar10;\n    char *pcVar11;\n    uint *puVar12;\n    char *pcVar13;\n    char *pcVar14;\n    int32_t *piStack32;\n    \n    pcVar13 = *(in_EAX + 0xc);\n    iVar5 = fcn.0042e3e0();\n    if (iVar5 != 0) {\n        ppiVar6 = fcn.004300a0();\n        if (ppiVar6 == NULL) {\n            return NULL;\n        }\n        if (**(in_EAX + 0xc) == 'F') {\n            piVar7 = fcn.00430330();\n            *ppiVar6 = piVar7;\n        }\n        else {\n            piVar7 = fcn.0042f510();\n            *ppiVar6 = piVar7;\n        }\n        if (piVar7 == NULL) {\n            return NULL;\n        }\n        if (*piVar7 - 0x1fU < 2) {\n            piVar1 = piVar7[2];\n            piVar7[2] = piStack32;\n            piStack32 = *ppiVar6;\n            *ppiVar6 = piVar1;\n        }\n        if (piStack32 == NULL) {\n            return NULL;\n        }\n        iVar5 = *(in_EAX + 0x20);\n        if (*(in_EAX + 0x24) <= iVar5) {\n            return NULL;\n        }\n        *(*(in_EAX + 0x1c) + iVar5 * 4) = piStack32;\n        *(in_EAX + 0x20) = iVar5 + 1;\n        return piStack32;\n    }\n    // switch table (75 cases) at 0x524eec\n    switch(*pcVar13 - 0x30U & 0xff) {\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n    case 0x1e:\n    case 0x2a:\n        piStack32 = fcn.0042f030();\n        break;\n    default:\n        goto code_r0x0042f583;\n    case 0x11:\n        pcVar14 = pcVar13 + 1;\n        *(in_EAX + 0xc) = pcVar14;\n        if (pcVar13[1] != '_') {\n            pcVar11 = pcVar14;\n            if (pcVar13[1] - 0x30U < 10) {\n                do {\n                    pcVar13 = pcVar11;\n                    pcVar11 = pcVar13 + 1;\n                    *(in_EAX + 0xc) = pcVar11;\n                } while (pcVar13[1] - 0x30U < 10);\n                iVar5 = *(in_EAX + 0x14);\n                if (*(in_EAX + 0x18) <= iVar5) {\n                    return NULL;\n                }\n                puVar12 = iVar5 * 0x10 + *(in_EAX + 0x10);\n                puVar12[1] = 0;\n                *(in_EAX + 0x14) = iVar5 + 1;\n                if (pcVar11 - pcVar14 == 0) {\n                    return NULL;\n                }\n                puVar12[1] = 0;\n                *puVar12 = 0;\n                puVar12[2] = pcVar14;\n                puVar12[3] = pcVar11 - pcVar14;\n                cVar10 = pcVar13[1];\n            }\n            else {\n                uVar8 = *(in_EAX + 0x30);\n                *(in_EAX + 0x30) = 1;\n                iVar5 = fcn.0042e7c0();\n                *(in_EAX + 0x30) = uVar8;\n                if (iVar5 == 0) {\n                    return NULL;\n                }\n                pcVar11 = *(in_EAX + 0xc);\n                cVar10 = *pcVar11;\n            }\n            pcVar14 = pcVar11;\n            if (cVar10 != '_') {\n                return NULL;\n            }\n        }\n        *(in_EAX + 0xc) = pcVar14 + 1;\n        uVar8 = fcn.0042f510();\n        piStack32 = fcn.0042dc50(uVar8);\n        break;\n    case 0x13:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        fcn.0042f510();\n        piStack32 = fcn.0042dc50(0);\n        break;\n    case 0x14:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        if (pcVar13[1] == '\\0') {\n            return NULL;\n        }\n        *(in_EAX + 0xc) = pcVar13 + 2;\n    // switch table (49 cases) at 0x525018\n        switch(pcVar13[1]) {\n        case 'F':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x2c;\n            cVar10 = pcVar13[2];\n            *(piVar7 + 3) = cVar10 - 0x30U < 10;\n            if (cVar10 - 0x30U < 10) {\n                fcn.0042de20();\n            }\n            iVar5 = fcn.0042f510();\n            piVar7[2] = iVar5;\n            if (piVar7[2] == 0) {\n                return NULL;\n            }\n            fcn.0042de20();\n            pcVar13 = *(in_EAX + 0xc);\n            cVar10 = '\\0';\n            if (*pcVar13 != '\\0') {\n                *(in_EAX + 0xc) = pcVar13 + 1;\n                cVar10 = *pcVar13;\n            }\n            *(piVar7 + 0xe) = cVar10 == 's';\n            return piVar7;\n        default:\n            return NULL;\n        case 'T':\n        case 't':\n            uVar8 = *(in_EAX + 0x30);\n            *(in_EAX + 0x30) = 1;\n            fcn.0042e7c0();\n            *(in_EAX + 0x30) = uVar8;\n            piStack32 = fcn.0042dc50(0);\n            if (piStack32 == NULL) {\n                return NULL;\n            }\n            pcVar13 = *(in_EAX + 0xc);\n            if (*pcVar13 == '\\0') {\n                return NULL;\n            }\n            *(in_EAX + 0xc) = pcVar13 + 1;\n            if (*pcVar13 != 'E') {\n                return NULL;\n            }\n            goto code_r0x0042f628;\n        case 'a':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                return NULL;\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            *(in_EAX + 0x14) = iVar5 + 1;\n            piVar7[1] = 0;\n            *piVar7 = 0;\n            piVar7[2] = \"auto\";\n            piVar7[3] = 4;\n            return piVar7;\n        case 'c':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                return NULL;\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            *(in_EAX + 0x14) = iVar5 + 1;\n            piVar7[1] = 0;\n            *piVar7 = 0;\n            piVar7[2] = \"decltype(auto)\";\n            piVar7[3] = 0xe;\n            return piVar7;\n        case 'd':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x27;\n            piVar7[2] = 0x52639c;\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 9;\n            return piVar7;\n        case 'e':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x27;\n            piVar7[2] = 0x5263b0;\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 10;\n            return piVar7;\n        case 'f':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x27;\n            piVar7[2] = 0x526388;\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 9;\n            return piVar7;\n        case 'h':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x27;\n            piVar7[2] = 0x5263c4;\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 4;\n            return piVar7;\n        case 'i':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x27;\n            piVar7[2] = 0x5263ec;\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 8;\n            return piVar7;\n        case 'n':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x27;\n            piVar7[2] = 0x526400;\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 0x11;\n            return piVar7;\n        case 'p':\n            fcn.0042f510();\n            piStack32 = fcn.0042dc50(0);\n            break;\n        case 's':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x27;\n            piVar7[2] = 0x5263d8;\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 8;\n            return piVar7;\n        case 'v':\n            if (pcVar13[2] == '_') {\n                uVar8 = *(in_EAX + 0x30);\n                *(in_EAX + 0x30) = 1;\n                *(in_EAX + 0xc) = pcVar13 + 3;\n                iVar5 = fcn.0042e7c0();\n                *(in_EAX + 0x30) = uVar8;\n            }\n            else {\n                iVar5 = fcn.0042dee0();\n            }\n            if (iVar5 == 0) {\n                return NULL;\n            }\n            if (**(in_EAX + 0xc) != '_') {\n                return NULL;\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n            uVar8 = fcn.0042f510();\n            piStack32 = fcn.0042dc50(uVar8);\n        }\n        break;\n    case 0x16:\n        piStack32 = fcn.00430330();\n        break;\n    case 0x17:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        fcn.0042f510();\n        piStack32 = fcn.0042dc50(0);\n        break;\n    case 0x1d:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        iVar5 = fcn.0042f510();\n        if (iVar5 == 0) {\n            return NULL;\n        }\n        iVar5 = fcn.0042f510();\n        if (iVar5 == 0) {\n            return NULL;\n        }\n        piStack32 = fcn.0042dc50(iVar5);\n        break;\n    case 0x1f:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        fcn.0042f510();\n        piStack32 = fcn.0042dc50(0);\n        break;\n    case 0x20:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        fcn.0042f510();\n        piStack32 = fcn.0042dc50(0);\n        break;\n    case 0x22:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        fcn.0042f510();\n        piStack32 = fcn.0042dc50(0);\n        break;\n    case 0x23:\n        cVar10 = pcVar13[1];\n        if (((9 < cVar10 - 0x30U) && (cVar10 != '_')) && (0x19 < cVar10 + 0xbfU)) {\n            piStack32 = fcn.0042f030();\n            if (piStack32 == NULL) {\n                return NULL;\n            }\n            if (*piStack32 == 0x18) {\n                return piStack32;\n            }\n            goto code_r0x0042f628;\n        }\n        piVar7 = fcn.0042e190();\n        pcVar13 = *(in_EAX + 0xc);\n        if (*pcVar13 != 'I') {\n            return piVar7;\n        }\ncode_r0x0042f762:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        uVar8 = fcn.0042eef0();\ncode_r0x0042f76c:\n        piStack32 = fcn.0042dc50(uVar8);\n        break;\n    case 0x24:\n        piStack32 = fcn.0042df60();\n        pcVar13 = *(in_EAX + 0xc);\n        if (*pcVar13 == 'I') {\n            if (*(in_EAX + 0x34) == 0) {\n                if (piStack32 == NULL) {\n                    return NULL;\n                }\n                iVar5 = *(in_EAX + 0x20);\n                if (*(in_EAX + 0x24) <= iVar5) {\n                    return NULL;\n                }\n                *(*(in_EAX + 0x1c) + iVar5 * 4) = piStack32;\n                *(in_EAX + 0x20) = iVar5 + 1;\n                uVar8 = 0;\n                if (*pcVar13 + 0xb7U < 2) goto code_r0x0042f762;\n                goto code_r0x0042f76c;\n            }\n            uVar8 = *(in_EAX + 0x2c);\n            uVar3 = *(in_EAX + 0x14);\n            uVar4 = *(in_EAX + 0x20);\n            *(in_EAX + 0xc) = pcVar13 + 1;\n            uVar9 = fcn.0042eef0();\n            if (**(in_EAX + 0xc) == 'I') {\n                if (piStack32 == NULL) {\n                    return NULL;\n                }\n                iVar5 = *(in_EAX + 0x20);\n                if (*(in_EAX + 0x24) <= iVar5) {\n                    return NULL;\n                }\n                *(*(in_EAX + 0x1c) + iVar5 * 4) = piStack32;\n                *(in_EAX + 0x20) = iVar5 + 1;\n                piStack32 = fcn.0042dc50(uVar9);\n            }\n            else {\n                *(in_EAX + 0xc) = pcVar13;\n                *(in_EAX + 0x14) = uVar3;\n                *(in_EAX + 0x2c) = uVar8;\n                *(in_EAX + 0x20) = uVar4;\n            }\n        }\n        break;\n    case 0x25:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        uVar8 = fcn.0042dfc0();\n        if (**(in_EAX + 0xc) == 'I') {\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n            uVar8 = fcn.0042eef0();\n            uVar8 = fcn.0042dc50(uVar8);\n        }\n        fcn.0042f510();\n        piStack32 = fcn.0042dc50(uVar8);\n        break;\n    case 0x31:\n    case 0x32:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n    case 0x43:\n    case 0x44:\n    case 0x46:\n    case 0x47:\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n        iVar2 = *(in_EAX + 0x14);\n        iVar5 = (*pcVar13 * 5 + -0x1e5) * 4;\n        if (*(in_EAX + 0x18) <= iVar2) {\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        piVar7 = iVar2 * 0x10 + *(in_EAX + 0x10);\n        piVar7[1] = 0;\n        *(in_EAX + 0x14) = iVar2 + 1;\n        iVar2 = *(iVar5 + 0x526184);\n        *piVar7 = 0x27;\n        piVar7[2] = iVar5 + 0x526180;\n        *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + iVar2;\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        return piVar7;\n    case 0x45:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        fcn.0042dfc0();\n        piStack32 = fcn.0042dc50(0);\n    }\n    if (piStack32 != NULL) {\ncode_r0x0042f628:\n        iVar5 = *(in_EAX + 0x20);\n        if (iVar5 < *(in_EAX + 0x24)) {\n            *(*(in_EAX + 0x1c) + iVar5 * 4) = piStack32;\n            *(in_EAX + 0x20) = iVar5 + 1;\n            return piStack32;\n        }\n    }\ncode_r0x0042f583:\n    return NULL;\n}\n",
        "token_count": 5100
    },
    "0042fe10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * fcn.0042fe10(void)\n\n{\n    char *pcVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint *puVar5;\n    char cVar6;\n    int32_t iVar7;\n    char cVar8;\n    bool bVar9;\n    bool bVar10;\n    int32_t iStack36;\n    \n    pcVar1 = *(in_EAX + 0xc);\n    if (*pcVar1 == '\\0') {\n        cVar8 = '\\0';\n    }\n    else {\n        *(in_EAX + 0xc) = pcVar1 + 1;\n        cVar8 = *pcVar1;\n        if (pcVar1[1] != '\\0') {\n            *(in_EAX + 0xc) = pcVar1 + 2;\n            cVar6 = pcVar1[1];\n            if (cVar8 == 'v') {\n                if (cVar6 - 0x30U < 10) {\n                    iVar4 = fcn.0042dfc0();\n                    iVar7 = *(in_EAX + 0x14);\n                    if (*(in_EAX + 0x18) <= iVar7) {\n                        return NULL;\n                    }\n                    puVar5 = iVar7 * 0x10 + *(in_EAX + 0x10);\n                    puVar5[1] = 0;\n                    *(in_EAX + 0x14) = iVar7 + 1;\n                    if (iVar4 == 0) {\n                        return NULL;\n                    }\n                    puVar5[1] = 0;\n                    *puVar5 = 0x32;\n                    puVar5[3] = iVar4;\n                    puVar5[2] = cVar6 + -0x30;\n                    return puVar5;\n                }\n            }\n            else if ((cVar8 == 'c') && (cVar6 == 'v')) {\n                uVar2 = *(in_EAX + 0x34);\n                *(in_EAX + 0x34) = *(in_EAX + 0x30) == 0;\n                fcn.0042f510();\n                if (*(in_EAX + 0x34) == 0) {\n                    puVar5 = fcn.0042dc50(0);\n                }\n                else {\n                    puVar5 = fcn.0042dc50(0);\n                }\n                *(in_EAX + 0x34) = uVar2;\n                return puVar5;\n            }\n            goto code_r0x0042fe3a;\n        }\n    }\n    cVar6 = '\\0';\ncode_r0x0042fe3a:\n    iVar7 = 0;\n    iStack36 = 0x43;\n    do {\n        iVar4 = (iStack36 - iVar7) / 2 + iVar7;\n        pcVar1 = *(iVar4 * 0x10 + 0x525c00);\n        bVar10 = SBORROW1(*pcVar1, cVar8);\n        cVar3 = *pcVar1 - cVar8;\n        bVar9 = *pcVar1 == cVar8;\n        if (bVar9) {\n            bVar10 = SBORROW1(pcVar1[1], cVar6);\n            cVar3 = pcVar1[1] - cVar6;\n            bVar9 = cVar3 == '\\0';\n            if (bVar9) {\n                iVar7 = *(in_EAX + 0x14);\n                if (*(in_EAX + 0x18) <= iVar7) {\n                    return NULL;\n                }\n                puVar5 = iVar7 * 0x10 + *(in_EAX + 0x10);\n                puVar5[1] = 0;\n                *(in_EAX + 0x14) = iVar7 + 1;\n                *puVar5 = 0x31;\n                puVar5[2] = iVar4 * 0x10 + 0x525c00;\n                return puVar5;\n            }\n        }\n        if (bVar9 || bVar10 != cVar3 < '\\0') {\n            iVar7 = iVar4 + 1;\n            iVar4 = iStack36;\n        }\n        iStack36 = iVar4;\n    } while (iVar7 != iStack36);\n    return NULL;\n}\n",
        "token_count": 957
    },
    "004300a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t ** __fastcall fcn.004300a0(uint32_t param_1, int32_t **param_2)\n\n{\n    int32_t **ppiVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *pcVar4;\n    uint uVar5;\n    int32_t in_EAX;\n    int32_t iVar6;\n    int32_t *piVar7;\n    \n    pcVar4 = *(in_EAX + 0xc);\n    cVar2 = *pcVar4;\n    iVar6 = fcn.0042e3e0();\n    ppiVar1 = param_2;\n    do {\n        if (iVar6 == 0) {\n            if ((((param_1 & 1) == 0) && (cVar2 == 'F')) && (ppiVar1 != param_2)) {\n                piVar7 = *param_2;\n                iVar6 = *piVar7;\n                if (iVar6 != 0x1a) goto code_r0x0043029d;\n                do {\n                    *piVar7 = 0x1d;\n                    while( true ) {\n                        if (ppiVar1 == piVar7 + 2) {\n                            return ppiVar1;\n                        }\n                        piVar7 = piVar7[2];\n                        iVar6 = *piVar7;\n                        if (iVar6 == 0x1a) break;\ncode_r0x0043029d:\n                        if (iVar6 == 0x1b) {\n                            *piVar7 = 0x1e;\n                        }\n                        else if (iVar6 == 0x19) {\n                            *piVar7 = 0x1c;\n                        }\n                    }\n                } while( true );\n            }\n            return ppiVar1;\n        }\n        *(in_EAX + 0xc) = pcVar4 + 1;\n        if (cVar2 == 'r') {\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 9;\n            iVar6 = 0;\n        }\n        else if (cVar2 == 'V') {\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 9;\n            iVar6 = 0;\n        }\n        else if (cVar2 == 'K') {\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 6;\n            iVar6 = 0;\n        }\n        else {\n            if (pcVar4[1] == '\\0') {\n                return NULL;\n            }\n            *(in_EAX + 0xc) = pcVar4 + 2;\n            uVar3 = pcVar4[1];\n            if (uVar3 == 0x78) {\n                *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 0x11;\n                iVar6 = 0;\n            }\n            else if ((uVar3 & 0xdf) == 0x4f) {\n                *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 9;\n                if (uVar3 == 0x4f) {\n                    uVar5 = *(in_EAX + 0x30);\n                    *(in_EAX + 0x30) = 1;\n                    iVar6 = fcn.0042e7c0();\n                    *(in_EAX + 0x30) = uVar5;\n                    if (iVar6 == 0) {\n                        return NULL;\n                    }\n                    if (**(in_EAX + 0xc) != 'E') {\n                        return NULL;\n                    }\n                    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n                }\n                else {\n                    iVar6 = 0;\n                }\n            }\n            else {\n                if (uVar3 != 0x77) {\n                    return NULL;\n                }\n                *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 6;\n                iVar6 = fcn.0042ffc0();\n                if (iVar6 == 0) {\n                    return NULL;\n                }\n                if (**(in_EAX + 0xc) != 'E') {\n                    return NULL;\n                }\n                *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n            }\n        }\n        piVar7 = fcn.0042dc50(iVar6);\n        *ppiVar1 = piVar7;\n        if (piVar7 == NULL) {\n            return NULL;\n        }\n        pcVar4 = *(in_EAX + 0xc);\n        ppiVar1 = piVar7 + 2;\n        cVar2 = *pcVar4;\n        iVar6 = fcn.0042e3e0();\n    } while( true );\n}\n",
        "token_count": 1086
    },
    "004303a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t * fcn.004303a0(void)\n\n{\n    char *pcVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t in_EAX;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t *piVar10;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint8_t *puVar11;\n    uint unaff_EDI;\n    uint8_t *puVar12;\n    bool bVar13;\n    bool bVar14;\n    \n    pcVar1 = *(in_EAX + 0xc);\n    cVar3 = *pcVar1;\n    if (cVar3 - 0x30U < 10) {\n        puVar5 = fcn.0042dfc0();\n        cVar3 = **(in_EAX + 0xc);\n        goto joined_r0x004304b1;\n    }\n    if (cVar3 + 0x9fU < 0x1a) {\n        if ((cVar3 == 'o') && (pcVar1[1] == 'n')) {\n            *(in_EAX + 0xc) = pcVar1 + 2;\n        }\n        puVar5 = fcn.0042fe10();\n        if (puVar5 != NULL) {\n            bVar13 = *puVar5 < 0x31;\n            bVar14 = *puVar5 == 0x31;\n            if (bVar14) {\n                puVar11 = *puVar5[2];\n                iVar9 = 3;\n                *(in_EAX + 0x2c) = puVar5[2][2] + *(in_EAX + 0x2c) + 7;\n                puVar12 = 0x5250dc;\n                do {\n                    if (iVar9 == 0) break;\n                    iVar9 = iVar9 + -1;\n                    bVar13 = *puVar11 < *puVar12;\n                    bVar14 = *puVar11 == *puVar12;\n                    puVar11 = puVar11 + 1;\n                    puVar12 = puVar12 + 1;\n                } while (bVar14);\n                if ((!bVar13 && !bVar14) == bVar13) {\n                    uVar7 = fcn.0042dfc0();\n                    puVar5 = fcn.0042dc50(uVar7);\n                }\n            }\n        }\n    }\n    else {\n        if (cVar3 + 0xbdU < 2) {\n            piVar10 = *(in_EAX + 0x28);\n            if ((piVar10 == NULL) || ((*piVar10 != 0 && (*piVar10 != 0x18)))) {\n                if (cVar3 == 'D') {\ncode_r0x00430609:\n    // switch table (6 cases) at 0x5250e0\n                    switch(pcVar1[1]) {\n                    case '0':\n                        uVar6 = 1;\n                        break;\n                    case '1':\n                        uVar6 = 2;\n                        break;\n                    case '2':\n                        uVar6 = 3;\n                        break;\n                    default:\n                        goto code_r0x00430542;\n                    case '4':\n                        uVar6 = 4;\n                        break;\n                    case '5':\n                        uVar6 = 5;\n                    }\n                    *(in_EAX + 0xc) = pcVar1 + 2;\n                    iVar9 = *(in_EAX + 0x14);\n                    if (iVar9 < *(in_EAX + 0x18)) {\n                        puVar5 = iVar9 * 0x10 + *(in_EAX + 0x10);\n                        puVar5[1] = 0;\n                        *(in_EAX + 0x14) = iVar9 + 1;\n                        if (piVar10 != NULL) {\n                            puVar5[1] = 0;\n                            *puVar5 = 8;\n                            puVar5[2] = uVar6;\n                            puVar5[3] = piVar10;\n                            cVar3 = pcVar1[2];\n                            goto joined_r0x004304b1;\n                        }\n                    }\n                    cVar3 = pcVar1[2];\n                    goto code_r0x00430694;\n                }\n            }\n            else {\n                *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + piVar10[3];\n                cVar3 = *pcVar1;\n                if (cVar3 != 'C') {\n                    if (cVar3 == 'D') goto code_r0x00430609;\ncode_r0x00430694:\n                    puVar5 = NULL;\n                    goto joined_r0x004304b1;\n                }\n            }\n            if (pcVar1[1] == 'I') {\n                *(in_EAX + 0xc) = pcVar1 + 1;\n                cVar3 = pcVar1[2];\n                if (4 < cVar3 - 0x31U) {\n                    cVar3 = pcVar1[1];\n                    puVar5 = NULL;\n                    goto joined_r0x004304b1;\n                }\n                *(in_EAX + 0xc) = pcVar1 + 3;\n                uVar6 = *((cVar3 - 0x31U) * 4 + 0x5257f8);\n                fcn.0042f510();\n                piVar10 = *(in_EAX + 0x28);\n            }\n            else {\n                uVar2 = pcVar1[1] - 0x31;\n                if (4 < uVar2) {\ncode_r0x00430542:\n                    return NULL;\n                }\n                *(in_EAX + 0xc) = pcVar1 + 2;\n                uVar6 = *(uVar2 * 4 + 0x5257f8);\n            }\n            iVar9 = *(in_EAX + 0x14);\n            if (iVar9 < *(in_EAX + 0x18)) {\n                puVar5 = iVar9 * 0x10 + *(in_EAX + 0x10);\n                puVar5[1] = 0;\n                *(in_EAX + 0x14) = iVar9 + 1;\n                if ((piVar10 != NULL) && (uVar6 - 1 < 5)) {\n                    puVar5[1] = 0;\n                    *puVar5 = 7;\n                    puVar5[2] = uVar6;\n                    puVar5[3] = piVar10;\n                    goto code_r0x004303e1;\n                }\n            }\ncode_r0x00430740:\n            puVar5 = NULL;\n            cVar3 = **(in_EAX + 0xc);\n            goto joined_r0x004304b1;\n        }\n        if (cVar3 == 'L') {\n            *(in_EAX + 0xc) = pcVar1 + 1;\n            puVar5 = fcn.0042dfc0();\n            if (puVar5 == NULL) {\n                return NULL;\n            }\n            iVar9 = fcn.0042e430();\n            if (iVar9 == 0) {\n                return NULL;\n            }\n        }\n        else {\n            if (cVar3 != 'U') {\n                return NULL;\n            }\n            if (pcVar1[1] == 'l') {\n                puVar5 = NULL;\n                *(in_EAX + 0xc) = pcVar1 + 1;\n                cVar3 = pcVar1[1];\n                if (cVar3 != 'l') goto joined_r0x004304b1;\n                *(in_EAX + 0xc) = pcVar1 + 2;\n                uVar6 = fcn.0042ffc0();\n                if (uVar6 == 0) goto code_r0x004303e1;\n                cVar3 = **(in_EAX + 0xc);\n                if (cVar3 != 'E') goto joined_r0x004304b1;\n                *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n                uVar8 = fcn.0042df20();\n                if (-1 < uVar8) {\n                    iVar9 = *(in_EAX + 0x14);\n                    pcVar1 = *(in_EAX + 0xc);\n                    if (iVar9 < *(in_EAX + 0x18)) {\n                        puVar5 = iVar9 * 0x10 + *(in_EAX + 0x10);\n                        puVar5[1] = 0;\n                        *(in_EAX + 0x14) = iVar9 + 1;\n                        puVar5[3] = uVar8;\n                        iVar9 = *(in_EAX + 0x20);\n                        *puVar5 = 0x45;\n                        puVar5[2] = uVar6;\n                        if (iVar9 < *(in_EAX + 0x24)) {\n                            *(*(in_EAX + 0x1c) + iVar9 * 4) = puVar5;\n                            *(in_EAX + 0x20) = iVar9 + 1;\n                            cVar3 = *pcVar1;\n                            goto joined_r0x004304b1;\n                        }\n                    }\n                    cVar3 = *pcVar1;\n                    puVar5 = NULL;\n                    goto joined_r0x004304b1;\n                }\n                goto code_r0x00430740;\n            }\n            if (pcVar1[1] != 't') {\n                return NULL;\n            }\n            puVar5 = NULL;\n            *(in_EAX + 0xc) = pcVar1 + 1;\n            cVar3 = pcVar1[1];\n            if (cVar3 != 't') goto joined_r0x004304b1;\n            *(in_EAX + 0xc) = pcVar1 + 2;\n            uVar6 = fcn.0042df20();\n            if (-1 < uVar6) {\n                iVar9 = *(in_EAX + 0x14);\n                if (iVar9 < *(in_EAX + 0x18)) {\n                    puVar5 = iVar9 * 0x10 + *(in_EAX + 0x10);\n                    puVar5[1] = 0;\n                    *(in_EAX + 0x14) = iVar9 + 1;\n                    pcVar1 = *(in_EAX + 0xc);\n                    puVar5[2] = uVar6;\n                    iVar9 = *(in_EAX + 0x20);\n                    *puVar5 = 0x47;\n                    if (iVar9 < *(in_EAX + 0x24)) {\n                        *(*(in_EAX + 0x1c) + iVar9 * 4) = puVar5;\n                        *(in_EAX + 0x20) = iVar9 + 1;\n                        cVar3 = *pcVar1;\n                    }\n                    else {\n                        cVar3 = *pcVar1;\n                        puVar5 = NULL;\n                    }\n                    goto joined_r0x004304b1;\n                }\n                goto code_r0x00430740;\n            }\n        }\n    }\ncode_r0x004303e1:\n    cVar3 = **(in_EAX + 0xc);\njoined_r0x004304b1:\n    if (cVar3 == 'B') {\n        uVar7 = *(in_EAX + 0x28);\n        pcVar1 = *(in_EAX + 0xc);\n        cVar3 = *pcVar1;\n        while (cVar3 == 'B') {\n            *(in_EAX + 0xc) = pcVar1 + 1;\n            uVar4 = fcn.0042dfc0();\n            puVar5 = fcn.0042dc50(uVar4, unaff_EBX, unaff_ESI, unaff_EDI);\n            pcVar1 = *(in_EAX + 0xc);\n            cVar3 = *pcVar1;\n        }\n        *(in_EAX + 0x28) = uVar7;\n        return puVar5;\n    }\n    return puVar5;\n}\n",
        "token_count": 2704
    },
    "004307a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint32_t * __fastcall fcn.004307a0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint32_t uVar3;\n    int32_t in_EAX;\n    uint32_t *puVar4;\n    int32_t *piVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    uint32_t *puVar10;\n    int32_t iVar11;\n    uint *puVar12;\n    char *pcVar13;\n    \n    pcVar2 = *(in_EAX + 0xc);\n    if ((*pcVar2 == 'G') || (*pcVar2 == 'T')) {\n        iVar7 = *(in_EAX + 0x2c);\n        *(in_EAX + 0x2c) = iVar7 + 0x14;\n        if (*pcVar2 == 'T') {\n            *(in_EAX + 0xc) = pcVar2 + 1;\n            if (pcVar2[1] == '\\0') {\n                return NULL;\n            }\n            *(in_EAX + 0xc) = pcVar2 + 2;\n    // switch table (52 cases) at 0x5251c0\n            switch(pcVar2[1]) {\n            case 'C':\n                uVar6 = fcn.0042f510();\n                iVar7 = fcn.0042de20();\n                if (iVar7 < 0) {\n                    return NULL;\n                }\n                if (**(in_EAX + 0xc) == '_') {\n                    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n                    fcn.0042f510();\n                    *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 5;\n                    puVar4 = fcn.0042dc50(uVar6);\n                    return puVar4;\n                }\n                return NULL;\n            default:\n                return NULL;\n            case 'F':\n                fcn.0042f510();\n                puVar4 = fcn.0042dc50(0);\n                break;\n            case 'H':\n                fcn.0042f030();\n                puVar4 = fcn.0042dc50(0);\n                break;\n            case 'I':\n                fcn.0042f510();\n                puVar4 = fcn.0042dc50(0);\n                break;\n            case 'J':\n                fcn.0042f510();\n                puVar4 = fcn.0042dc50(0);\n                break;\n            case 'S':\n                fcn.0042f510();\n                puVar4 = fcn.0042dc50(0);\n                break;\n            case 'T':\n                *(in_EAX + 0x2c) = iVar7 + 10;\n                fcn.0042f510();\n                puVar4 = fcn.0042dc50(0);\n                break;\n            case 'V':\n                *(in_EAX + 0x2c) = iVar7 + 0xf;\n                fcn.0042f510();\n                puVar4 = fcn.0042dc50(0);\n                break;\n            case 'W':\n                fcn.0042f030();\n                puVar4 = fcn.0042dc50(0);\n                break;\n            case 'c':\n                iVar7 = fcn.0042e370();\n                if (iVar7 == 0) {\n                    return NULL;\n                }\n                iVar7 = fcn.0042e370();\n                if (iVar7 != 0) {\n                    fcn.004307a0();\n                    puVar4 = fcn.0042dc50(0);\n                    return puVar4;\n                }\n                return NULL;\n            case 'h':\n                iVar7 = fcn.0042e370();\n                if (iVar7 != 0) {\n                    fcn.004307a0();\n                    puVar4 = fcn.0042dc50(0);\n                    return puVar4;\n                }\n                return NULL;\n            case 'v':\n                iVar7 = fcn.0042e370();\n                if (iVar7 == 0) {\n                    return 0;\n                }\n                fcn.004307a0();\n                puVar4 = fcn.0042dc50(0);\n                return puVar4;\n            }\n            return puVar4;\n        }\n        if (*pcVar2 != 'G') {\n            return NULL;\n        }\n        *(in_EAX + 0xc) = pcVar2 + 1;\n        if (pcVar2[1] != '\\0') {\n            *(in_EAX + 0xc) = pcVar2 + 2;\n    // switch table (50 cases) at 0x5250f8\n            switch(pcVar2[1]) {\n            case 'A':\n                fcn.004307a0();\n                puVar4 = fcn.0042dc50(0);\n                return puVar4;\n            default:\n                return 0;\n            case 'R':\n                fcn.0042f030();\n                uVar6 = fcn.0042dee0();\n                puVar4 = fcn.0042dc50(uVar6);\n                return puVar4;\n            case 'T':\n                if ((pcVar2[2] != '\\0') && (*(in_EAX + 0xc) = pcVar2 + 3,  pcVar2[2] == 'n')) {\n                    fcn.004307a0();\n                    puVar4 = fcn.0042dc50(0);\n                    return puVar4;\n                }\n                fcn.004307a0();\n                puVar4 = fcn.0042dc50(0);\n                return puVar4;\n            case 'V':\n                fcn.0042f030();\n                puVar4 = fcn.0042dc50(0);\n                return puVar4;\n            case 'r':\n                goto code_r0x004309a0;\n            }\n        }\n        return NULL;\n    }\n    puVar4 = fcn.0042f030();\n    if (puVar4 == NULL) {\n        return NULL;\n    }\n    if ((param_2 != 0) && ((*(in_EAX + 8) & 1) == 0)) {\n        do {\n            uVar3 = *puVar4;\n            if (uVar3 != 0x4c) {\n                if (uVar3 < 0x4d) {\n                    if (4 < uVar3 - 0x1c) goto code_r0x004307fb;\n                }\n                else if (1 < uVar3 - 0x4e) {\ncode_r0x004307fb:\n                    if (uVar3 != 2) {\n                        return puVar4;\n                    }\n                    puVar10 = puVar4[3];\n                    uVar3 = *puVar10;\n                    do {\n                        if (uVar3 != 0x4c) {\n                            if (uVar3 < 0x4d) {\n                                if (4 < uVar3 - 0x1c) {\n                                    return puVar4;\n                                }\n                            }\n                            else if (1 < uVar3 - 0x4e) {\n                                return puVar4;\n                            }\n                        }\n                        puVar10 = puVar10[2];\n                        uVar3 = *puVar10;\n                        puVar4[3] = puVar10;\n                    } while( true );\n                }\n            }\n            puVar4 = puVar4[2];\n        } while( true );\n    }\n    if (**(in_EAX + 0xc) == '\\0') {\n        return puVar4;\n    }\n    puVar10 = puVar4;\n    if (**(in_EAX + 0xc) == 'E') {\n        return puVar4;\n    }\n    do {\n        uVar3 = *puVar10;\n        if (uVar3 < 0x21) {\n            if (0x1b < uVar3) goto code_r0x0043093f;\n            if (uVar3 != 2) {\n                if ((uVar3 == 4) && (puVar10 = puVar10[2],  puVar10 != NULL)) goto code_r0x0043089d;\n                break;\n            }\n            puVar10 = puVar10[3];\n        }\n        else {\n            if ((uVar3 != 0x4c) && ((uVar3 < 0x4c || (1 < uVar3 - 0x4e)))) break;\ncode_r0x0043093f:\n            puVar10 = puVar10[2];\n        }\n    } while (puVar10 != NULL);\ncode_r0x004308e8:\n    piVar5 = fcn.004302c0();\n    if (piVar5 == NULL) {\n        return NULL;\n    }\n    if (((param_2 == 0) && (*puVar4 == 2)) && (*piVar5 == 0x29)) {\n        piVar5[2] = 0;\n    }\n    puVar4 = fcn.0042dc50(piVar5);\n    return puVar4;\ncode_r0x0043089d:\n    uVar3 = *puVar10;\n    if (8 < uVar3) goto code_r0x004308e8;\n    if (((6 < uVar3) || (1 < uVar3 - 1)) || (puVar10 = puVar10[3],  puVar10 == NULL)) goto code_r0x004308e8;\n    goto code_r0x0043089d;\ncode_r0x004309a0:\n    iVar7 = fcn.0042de20();\n    if (iVar7 < 2) {\n        return 0;\n    }\n    pcVar2 = *(in_EAX + 0xc);\n    if (*pcVar2 == '\\0') {\n        return 0;\n    }\n    pcVar13 = pcVar2 + 1;\n    *(in_EAX + 0xc) = pcVar13;\n    if (*pcVar2 != '_') {\n        return 0;\n    }\n    iVar7 = iVar7 + -1;\n    puVar9 = NULL;\n    do {\n        if (*pcVar13 == '\\0') {\n            return NULL;\n        }\n        if (*pcVar13 == '$') {\n            cVar1 = pcVar13[1];\n            if (cVar1 == 'S') {\n                uVar6 = 0x2f;\n            }\n            else if (cVar1 == '_') {\n                uVar6 = 0x2e;\n            }\n            else {\n                if (cVar1 != '$') {\n                    return NULL;\n                }\n                uVar6 = 0x24;\n            }\n            iVar11 = *(in_EAX + 0x14);\n            pcVar13 = *(in_EAX + 0xc) + 2;\n            if (*(in_EAX + 0x18) <= iVar11) {\n                *(in_EAX + 0xc) = pcVar13;\n                return NULL;\n            }\n            iVar7 = iVar7 + -2;\n            puVar12 = iVar11 * 0x10 + *(in_EAX + 0x10);\n            puVar12[1] = 0;\n            *(in_EAX + 0x14) = iVar11 + 1;\n            *puVar12 = 0x40;\n            puVar12[2] = uVar6;\n            *(in_EAX + 0xc) = pcVar13;\n        }\n        else {\n            iVar11 = 0;\n            do {\n                iVar11 = iVar11 + 1;\n                if (iVar7 <= iVar11) {\n                    iVar8 = *(in_EAX + 0x14);\n                    if (*(in_EAX + 0x18) == iVar8 || *(in_EAX + 0x18) < iVar8) goto code_r0x00430e68;\n                    goto code_r0x00430e0f;\n                }\n            } while ((pcVar13[iVar11] != '$') && (pcVar13[iVar11] != '\\0'));\n            iVar8 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar8) {\ncode_r0x00430e68:\n                *(in_EAX + 0xc) = *(in_EAX + 0xc) + iVar11;\n                return NULL;\n            }\ncode_r0x00430e0f:\n            iVar7 = iVar7 - iVar11;\n            puVar12 = iVar8 * 0x10 + *(in_EAX + 0x10);\n            puVar12[1] = 0;\n            *(in_EAX + 0x14) = iVar8 + 1;\n            puVar12[2] = pcVar13;\n            iVar8 = *(in_EAX + 0xc);\n            puVar12[1] = 0;\n            pcVar13 = iVar8 + iVar11;\n            *puVar12 = 0;\n            puVar12[3] = iVar11;\n            *(in_EAX + 0xc) = pcVar13;\n        }\n        if ((puVar9 != NULL) && (puVar12 = fcn.0042dc50(puVar12),  puVar12 == NULL)) {\n            return NULL;\n        }\n        puVar9 = puVar12;\n        if (iVar7 < 1) {\n            puVar4 = fcn.0042dc50(0);\n            return puVar4;\n        }\n    } while( true );\n}\n",
        "token_count": 2994
    },
    "00430eb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00430eb0(uint32_t *param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    uchar *in_EAX;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    int32_t iVar8;\n    uint32_t **ppuVar9;\n    uchar *puVar10;\n    uint *puVar11;\n    char cVar12;\n    uint32_t ***pppuVar13;\n    char *pcVar14;\n    uchar *puVar15;\n    char *pcVar16;\n    uint32_t uVar17;\n    uint8_t *puVar18;\n    uint8_t *puVar19;\n    int32_t iVar20;\n    uint32_t **ppuVar21;\n    uint32_t ***pppuVar22;\n    char *pcVar23;\n    uint8_t *puVar24;\n    uint32_t ***pppuVar25;\n    uchar uVar26;\n    bool bVar27;\n    bool bVar28;\n    uchar uVar29;\n    uint32_t uStack132;\n    uint32_t **ppuStack128;\n    uint32_t **ppuStack124;\n    int32_t iStack120;\n    uint32_t *puStack108;\n    uint uStack104;\n    uint32_t **ppuStack100;\n    uchar auStack96 [4];\n    uint32_t **appuStack92 [19];\n    \n    if (param_1 == NULL) {\n        *(in_EAX + 0x118) = 1;\n        return;\n    }\n    uVar17 = param_1[1];\n    if ((1 < uVar17) || (iVar20 = *(in_EAX + 0x11c),  0x400 < iVar20)) {\n        *(in_EAX + 0x118) = 1;\n        return;\n    }\n    puStack108 = param_1;\n    param_1[1] = uVar17 + 1;\n    ppuStack128 = *(in_EAX + 0x118);\n    *(in_EAX + 0x11c) = iVar20 + 1;\n    uStack104 = *(in_EAX + 300);\n    *(in_EAX + 300) = &puStack108;\n    if (ppuStack128 != NULL) goto code_r0x004310b1;\n    uVar6 = *param_1;\n    // switch table (80 cases) at 0x5254fc\n    switch(uVar6) {\n    case 0:\n        pcVar16 = param_1[2];\n        if ((param_2 & 4) == 0) {\n            if (param_1[3] != 0) {\n                pcVar23 = pcVar16 + param_1[3];\n                iVar20 = *(in_EAX + 0x100);\n                do {\n                    cVar12 = *pcVar16;\n                    if (iVar20 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar4 = 1;\n                        iVar20 = 0;\n                    }\n                    else {\n                        iVar4 = iVar20 + 1;\n                    }\n                    pcVar16 = pcVar16 + 1;\n                    *(in_EAX + 0x100) = iVar4;\n                    in_EAX[iVar20] = cVar12;\n                    in_EAX[0x104] = cVar12;\n                    iVar20 = iVar4;\n                } while (pcVar23 != pcVar16);\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        else {\n            pcVar23 = pcVar16 + param_1[3];\n            if (pcVar16 < pcVar23) {\n                do {\n                    cVar12 = *pcVar16;\n                    if ((((3 < pcVar23 - pcVar16) && (cVar12 == '_')) && (pcVar16[1] == '_')) &&\n                       ((pcVar16[2] == 'U' && (pcVar14 = pcVar16 + 3,  pcVar14 < pcVar23)))) {\n                        uStack132 = 0;\n                        do {\n                            cVar1 = *pcVar14;\n                            iVar20 = cVar1;\n                            if (cVar1 - 0x30U < 10) {\n                                iVar20 = iVar20 + -0x30;\n                            }\n                            else if (cVar1 + 0xbfU < 6) {\n                                iVar20 = iVar20 + -0x37;\n                            }\n                            else {\n                                if (5 < cVar1 + 0x9fU) {\n                                    if (((pcVar14 < pcVar23) && (uStack132 < 0x100)) && (cVar1 == '_')) {\n                                        if (*(in_EAX + 0x100) == 0xff) {\n                                            in_EAX[0xff] = 0;\n                                            (**(in_EAX + 0x108))();\n                                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                                            *(in_EAX + 0x100) = 0;\n                                        }\n                                        iVar20 = *(in_EAX + 0x100);\n                                        *(in_EAX + 0x100) = iVar20 + 1;\n                                        in_EAX[iVar20] = uStack132;\n                                        in_EAX[0x104] = uStack132;\n                                        goto code_r0x00433db6;\n                                    }\n                                    break;\n                                }\n                                iVar20 = iVar20 + -0x57;\n                            }\n                            pcVar14 = pcVar14 + 1;\n                            uStack132 = iVar20 + uStack132 * 0x10;\n                        } while (pcVar23 != pcVar14);\n                    }\n                    iVar4 = *(in_EAX + 0x100);\n                    iVar20 = iVar4 + 1;\n                    if (iVar4 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar4 = 0;\n                        iVar20 = 1;\n                    }\n                    *(in_EAX + 0x100) = iVar20;\n                    in_EAX[iVar4] = cVar12;\n                    in_EAX[0x104] = cVar12;\n                    pcVar14 = pcVar16;\ncode_r0x00433db6:\n                    pcVar16 = pcVar14 + 1;\n                } while (pcVar16 < pcVar23);\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        break;\n    case 1:\n    case 2:\n        fcn.00430eb0();\n        if ((param_2 & 4) == 0) {\n            puVar15 = 0x525296;\n            iVar20 = *(in_EAX + 0x100);\n            do {\n                uVar26 = *puVar15;\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                puVar15 = puVar15 + 1;\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = uVar26;\n                in_EAX[0x104] = uVar26;\n                iVar20 = iVar4;\n            } while (puVar15 != 0x525298);\n        }\n        else {\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x2e;\n            in_EAX[0x104] = 0x2e;\n        }\n        piVar5 = param_1[3];\n        if (*piVar5 == 0x46) {\n            pcVar16 = \"{default arg#\";\n            iVar20 = *(in_EAX + 0x100);\n            do {\n                cVar12 = *pcVar16;\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                *(in_EAX + 0x100) = iVar4;\n                pcVar16 = pcVar16 + 1;\n                in_EAX[iVar20] = cVar12;\n                in_EAX[0x104] = cVar12;\n                iVar20 = iVar4;\n            } while (pcVar16 != \"\");\n            sub.msvcrt.dll_sprintf(appuStack92, 0x5252a7, piVar5[3] + 1);\n            uVar17 = 0xffffffff;\n            pppuVar22 = appuStack92;\n            do {\n                if (uVar17 == 0) break;\n                uVar17 = uVar17 - 1;\n                cVar12 = *pppuVar22;\n                pppuVar22 = pppuVar22 + 1;\n            } while (cVar12 != '\\0');\n            if (~uVar17 - 1 != 0) {\n                pppuVar22 = appuStack92;\n                pppuVar13 = (~uVar17 - 1) + pppuVar22;\n                iVar20 = *(in_EAX + 0x100);\n                do {\n                    uVar26 = *pppuVar22;\n                    if (iVar20 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar4 = 1;\n                        iVar20 = 0;\n                    }\n                    else {\n                        iVar4 = iVar20 + 1;\n                    }\n                    *(in_EAX + 0x100) = iVar4;\n                    pppuVar22 = pppuVar22 + 1;\n                    in_EAX[iVar20] = uVar26;\n                    in_EAX[0x104] = uVar26;\n                    iVar20 = iVar4;\n                } while (pppuVar13 != pppuVar22);\n            }\n            puVar15 = 0x5252aa;\n            iVar20 = *(in_EAX + 0x100);\n            do {\n                uVar26 = *puVar15;\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                *(in_EAX + 0x100) = iVar4;\n                puVar15 = puVar15 + 1;\n                in_EAX[iVar20] = uVar26;\n                in_EAX[0x104] = uVar26;\n                iVar20 = iVar4;\n            } while (puVar15 != 0x5252ad);\n        }\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 3:\n        uVar2 = *(in_EAX + 0x114);\n        *(in_EAX + 0x114) = 0;\n        ppuStack124 = param_1[2];\n        if (ppuStack124 == NULL) {\ncode_r0x00434e5b:\n            *(in_EAX + 0x118) = 1;\n        }\n        else {\n            iStack120 = 0;\n            ppuVar21 = *(in_EAX + 0x110);\n            pppuVar22 = appuStack92;\n            pppuVar13 = NULL;\n            do {\n                pppuVar25 = pppuVar22;\n                *pppuVar25 = pppuVar13;\n                pppuVar25[2] = NULL;\n                puVar7 = *ppuStack124;\n                pppuVar25[1] = ppuStack124;\n                pppuVar25[3] = ppuVar21;\n                iStack120 = iStack120 + 1;\n                if (puVar7 != 0x4c) {\n                    if (puVar7 < 0x4d) {\n                        if (0x4 < puVar7 + -7) {\ncode_r0x004328ee:\n                            *(in_EAX + 0x114) = pppuVar25;\n                            if (puVar7 != 0x2) goto code_r0x004328fd;\n                            ppuStack124 = ppuStack124[3];\n                            if ((*ppuStack124 == 0x46) && (ppuStack124 = ppuStack124[2],  ppuStack124 == NULL))\n                            goto code_r0x00434e5b;\n                            pppuVar22 = appuStack92 + iStack120 * 4;\n                            goto code_r0x00434888;\n                        }\n                    }\n                    else if (1 < puVar7 - 0x4eU) goto code_r0x004328ee;\n                }\n                ppuStack124 = ppuStack124[2];\n                if (ppuStack124 == NULL) {\n                    *(in_EAX + 0x114) = pppuVar25;\n                    goto code_r0x00434e5b;\n                }\n                pppuVar22 = pppuVar25 + 4;\n                pppuVar13 = pppuVar25;\n            } while (iStack120 != 4);\n            *(in_EAX + 0x114) = pppuVar25;\n            *(in_EAX + 0x118) = 1;\n        }\n        goto code_r0x004329bc;\n    case 4:\n        uVar2 = *(in_EAX + 0x148);\n        uVar3 = *(in_EAX + 0x114);\n        *(in_EAX + 0x148) = param_1;\n        *(in_EAX + 0x114) = 0;\n        piVar5 = param_1[2];\n        if ((((param_2 & 4) == 0) || (*piVar5 != 0)) ||\n           ((piVar5[3] != 6 || (iVar20 = sub.msvcrt.dll_strncmp(piVar5[2], \"JArray\", 6),  iVar20 != 0)))) {\n            fcn.00430eb0();\n            if (in_EAX[0x104] == '<') {\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x20;\n                in_EAX[0x104] = 0x20;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar20 = 0;\n            }\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x3c;\n            in_EAX[0x104] = 0x3c;\n            fcn.00430eb0();\n            if (in_EAX[0x104] == '>') {\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x20;\n                in_EAX[0x104] = 0x20;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar20 = 0;\n            }\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x3e;\n            in_EAX[0x104] = 0x3e;\n        }\n        else {\n            fcn.00430eb0();\n            fcn.0042dd80();\n        }\n        *(in_EAX + 0x114) = uVar3;\n        uVar17 = param_1[1];\n        *(in_EAX + 0x148) = uVar2;\n        uVar17 = uVar17 - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 5:\n        if (*(in_EAX + 0x120) == 0) {\n            piVar5 = fcn.0042e4e0();\n            if ((piVar5 == NULL) ||\n               (((*piVar5 == 0x2f && (-1 < *(in_EAX + 0x124))) && (iVar20 = fcn.0042e4a0(),  iVar20 == 0)))) {\n                *(in_EAX + 0x118) = 1;\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n            else {\n                puVar11 = *(in_EAX + 0x110);\n                *(in_EAX + 0x110) = *puVar11;\n                fcn.00430eb0();\n                uVar17 = param_1[1];\n                *(in_EAX + 0x110) = puVar11;\n                uVar17 = uVar17 - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        else {\n            pcVar16 = \"auto:\";\n            cVar12 = 'a';\n            iVar20 = *(in_EAX + 0x100);\n            while( true ) {\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                pcVar16 = pcVar16 + 1;\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = cVar12;\n                in_EAX[0x104] = cVar12;\n                if (pcVar16 == \"\") break;\n                cVar12 = *pcVar16;\n                iVar20 = iVar4;\n            }\n            pppuVar22 = appuStack92;\n            sub.msvcrt.dll_sprintf(pppuVar22, 0x5252a7, param_1[2] + 1);\n            pppuVar13 = pppuVar22;\n            do {\n                pppuVar25 = pppuVar13;\n                uVar6 = *pppuVar25 + 0xfefefeffU & ~*pppuVar25;\n                uVar17 = uVar6 & 0x80808080;\n                pppuVar13 = pppuVar25 + 1;\n            } while (uVar17 == 0);\n            bVar27 = (uVar6 & 0x8080) == 0;\n            if (bVar27) {\n                uVar17 = uVar17 >> 0x10;\n            }\n            if (bVar27) {\n                pppuVar13 = pppuVar25 + 6;\n            }\n            puVar15 = pppuVar13 + ((-3 - CARRY1(uVar17, uVar17)) - pppuVar22);\n            if (puVar15 != NULL) {\n                pppuVar13 = pppuVar22 + puVar15;\n                iVar20 = *(in_EAX + 0x100);\n                do {\n                    uVar26 = *pppuVar22;\n                    if (iVar20 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar4 = 1;\n                        iVar20 = 0;\n                    }\n                    else {\n                        iVar4 = iVar20 + 1;\n                    }\n                    pppuVar22 = pppuVar22 + 1;\n                    *(in_EAX + 0x100) = iVar4;\n                    in_EAX[iVar20] = uVar26;\n                    in_EAX[0x104] = uVar26;\n                    iVar20 = iVar4;\n                } while (pppuVar13 != pppuVar22);\n            }\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        break;\n    case 6:\n        uVar17 = param_1[2];\n        if (uVar17 == 0) {\n            pcVar16 = \"this\";\n            cVar12 = 't';\n            iVar20 = *(in_EAX + 0x100);\n            while( true ) {\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                pcVar16 = pcVar16 + 1;\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = cVar12;\n                in_EAX[0x104] = cVar12;\n                if (pcVar16 == \"\") break;\n                cVar12 = *pcVar16;\n                iVar20 = iVar4;\n            }\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        else {\n            puVar15 = 0x525491;\n            uVar26 = 0x7b;\n            iVar20 = *(in_EAX + 0x100);\n            while( true ) {\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = uVar26;\n                in_EAX[0x104] = uVar26;\n                if (puVar15 == 0x525496) break;\n                uVar26 = *puVar15;\n                puVar15 = puVar15 + 1;\n                iVar20 = iVar4;\n            }\n            pppuVar22 = appuStack92;\n            sub.msvcrt.dll_sprintf(pppuVar22, 0x5252a7, uVar17);\n            pppuVar13 = pppuVar22;\n            do {\n                pppuVar25 = pppuVar13;\n                uVar6 = *pppuVar25 + 0xfefefeffU & ~*pppuVar25;\n                uVar17 = uVar6 & 0x80808080;\n                pppuVar13 = pppuVar25 + 1;\n            } while (uVar17 == 0);\n            bVar27 = (uVar6 & 0x8080) == 0;\n            if (bVar27) {\n                uVar17 = uVar17 >> 0x10;\n            }\n            if (bVar27) {\n                pppuVar13 = pppuVar25 + 6;\n            }\n            puVar15 = pppuVar13 + ((-3 - CARRY1(uVar17, uVar17)) - pppuVar22);\n            if (puVar15 != NULL) {\n                pppuVar13 = pppuVar22 + puVar15;\n                iVar20 = *(in_EAX + 0x100);\n                do {\n                    uVar26 = *pppuVar22;\n                    if (iVar20 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar4 = 1;\n                        iVar20 = 0;\n                    }\n                    else {\n                        iVar4 = iVar20 + 1;\n                    }\n                    pppuVar22 = pppuVar22 + 1;\n                    *(in_EAX + 0x100) = iVar4;\n                    in_EAX[iVar20] = uVar26;\n                    in_EAX[0x104] = uVar26;\n                    iVar20 = iVar4;\n                } while (pppuVar13 != pppuVar22);\n            }\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x7d;\n            in_EAX[0x104] = 0x7d;\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        break;\n    case 7:\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 8:\n        if (*(in_EAX + 0x100) == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            *(in_EAX + 0x100) = 0;\n        }\n        iVar20 = *(in_EAX + 0x100);\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x7e;\n        in_EAX[0x104] = 0x7e;\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 9:\n        puVar15 = 0x5252bf;\n        uVar26 = 0x76;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5252c9) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 10:\n        puVar15 = 0x5252cb;\n        uVar26 = 0x56;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5252d2) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0xb:\n        puVar15 = 0x5252d4;\n        uVar26 = 99;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5252eb) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        pcVar16 = \"-in-\";\n        fcn.00430eb0();\n        cVar12 = '-';\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            pcVar16 = pcVar16 + 1;\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = cVar12;\n            in_EAX[0x104] = cVar12;\n            if (pcVar16 == \"\") break;\n            cVar12 = *pcVar16;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0xc:\n        puVar15 = 0x5252f2;\n        uVar26 = 0x74;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5252fe) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0xd:\n        puVar15 = 0x525300;\n        uVar26 = 0x74;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x525311) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0xe:\n        puVar15 = 0x525313;\n        uVar26 = 0x74;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x525322) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0xf:\n        puVar15 = 0x525324;\n        uVar26 = 0x6e;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x525338) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x10:\n        puVar15 = 0x52533a;\n        uVar26 = 0x76;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x52534a) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x11:\n        puVar15 = 0x52534c;\n        uVar26 = 99;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x525365) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x12:\n        puVar15 = 0x525367;\n        uVar26 = 0x6a;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x525375) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x13:\n        puVar15 = 0x525377;\n        uVar26 = 0x67;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x525389) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x14:\n        puVar15 = 0x52538b;\n        uVar26 = 0x54;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5253a0) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x15:\n        puVar15 = 0x5253a2;\n        uVar26 = 0x54;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5253ba) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x16:\n        puVar15 = 0x5253bc;\n        uVar26 = 0x72;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5253d0) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        pcVar16 = \" for \";\n        fcn.00430eb0();\n        cVar12 = ' ';\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            pcVar16 = pcVar16 + 1;\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = cVar12;\n            in_EAX[0x104] = cVar12;\n            if (pcVar16 == \"\") break;\n            cVar12 = *pcVar16;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x17:\n        puVar15 = 0x5253d8;\n        uVar26 = 0x68;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5253e8) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x18:\n        puVar15 = param_1[2];\n        if (param_1[3] != 0) {\n            puVar10 = puVar15 + param_1[3];\n            iVar20 = *(in_EAX + 0x100);\n            do {\n                uVar26 = *puVar15;\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    iVar20 = 0;\n                    (**(in_EAX + 0x108))();\n                    iVar4 = 1;\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                puVar15 = puVar15 + 1;\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = uVar26;\n                in_EAX[0x104] = uVar26;\n                iVar20 = iVar4;\n            } while (puVar10 != puVar15);\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        break;\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n        appuStack92[0] = *(in_EAX + 0x114);\n        for (ppuVar21 = appuStack92[0]; appuStack92[1] = param_1,  ppuVar21 != NULL; ppuVar21 = *ppuVar21) {\n            if (ppuVar21[2] == NULL) {\n                if (2 < *ppuVar21[1] - 0x19) {\n                    ppuStack128 = NULL;\n                    break;\n                }\n                if (uVar6 == *ppuVar21[1]) {\n                    fcn.00430eb0();\n                    uVar17 = param_1[1] - 1;\n                    iVar20 = *(in_EAX + 0x11c) + -1;\n                    goto code_r0x004310b1;\n                }\n            }\n        }\ncode_r0x00432618:\n        *(in_EAX + 0x114) = appuStack92;\n        appuStack92[3] = *(in_EAX + 0x110);\n        goto code_r0x00432599;\n    case 0x1c:\n    case 0x1d:\n    case 0x1e:\n    case 0x1f:\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x25:\n    case 0x26:\n    case 0x4c:\n    case 0x4e:\n    case 0x4f:\ncode_r0x00432565:\n        appuStack92[0] = *(in_EAX + 0x114);\n        *(in_EAX + 0x114) = appuStack92;\n        appuStack92[3] = *(in_EAX + 0x110);\n        appuStack92[1] = param_1;\ncode_r0x00432599:\n        appuStack92[2] = NULL;\n        fcn.00430eb0();\n        if (appuStack92[2] == NULL) {\n            fcn.00435840();\n        }\n        *(in_EAX + 0x114) = appuStack92[0];\n        if (ppuStack128 != NULL) {\n            *(in_EAX + 0x110) = iStack120;\n        }\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x23:\n    case 0x24:\n        puVar7 = param_1[2];\n        uVar17 = *puVar7;\n        if ((*(in_EAX + 0x120) != 0) || (ppuStack128 = NULL,  uVar17 != 5)) goto code_r0x00432543;\n        ppuVar21 = *(in_EAX + 0x130);\n        iVar4 = *(in_EAX + 0x134);\n        if (iVar4 < 1) {\ncode_r0x004347ad:\n            if (*(in_EAX + 0x138) <= iVar4) {\ncode_r0x00435649:\n                *(in_EAX + 0x118) = 1;\n                uVar17 = param_1[1] - 1;\n                break;\n            }\n            *(in_EAX + 0x134) = iVar4 + 1;\n            puVar11 = *(in_EAX + 0x110);\n            ppuVar21[iVar4 * 2] = puVar7;\n            ppuStack128 = ppuVar21 + iVar4 * 2 + 1;\n            for (; puVar11 != NULL; puVar11 = *puVar11) {\n                iVar4 = *(in_EAX + 0x140);\n                if (*(in_EAX + 0x144) <= iVar4) goto code_r0x00435649;\n                ppuVar21 = *(in_EAX + 0x13c) + iVar4 * 8;\n                *(in_EAX + 0x140) = iVar4 + 1;\n                ppuVar21[1] = puVar11[1];\n                *ppuStack128 = ppuVar21;\n                ppuStack128 = ppuVar21;\n            }\n            *ppuStack128 = NULL;\ncode_r0x0043482b:\n            puVar7 = fcn.0042e4e0();\n            ppuStack128 = NULL;\n            if (puVar7 != NULL) goto code_r0x004350e3;\n        }\n        else {\n            ppuVar9 = &puStack108;\n            ppuStack128 = ppuVar21;\n            if (puVar7 != *ppuVar21) {\n                iVar8 = 0;\n                do {\n                    ppuStack128 = ppuStack128 + 2;\n                    iVar8 = iVar8 + 1;\n                    if (iVar4 == iVar8) goto code_r0x004347ad;\n                } while (puVar7 != *ppuStack128);\n            }\n            do {\n                if ((puVar7 == *ppuVar9) || ((param_1 == *ppuVar9 && (ppuVar9 != &puStack108)))) goto code_r0x0043482b;\n                ppuVar21 = ppuVar9 + 1;\n                ppuVar9 = *ppuVar21;\n            } while (*ppuVar21 != NULL);\n            iStack120 = *(in_EAX + 0x110);\n            *(in_EAX + 0x110) = ppuStack128[1];\n            puVar7 = fcn.0042e4e0();\n            ppuStack128 = 0x1;\n            if (puVar7 != NULL) {\ncode_r0x004350e3:\n                uVar17 = *puVar7;\n                if (uVar17 == 0x2f) {\n                    if (-1 < *(in_EAX + 0x124)) {\n                        puVar7 = fcn.0042e4a0();\n                        if (puVar7 == NULL) {\n                            if (ppuStack128 == NULL) goto code_r0x00434847;\n                            goto code_r0x00435573;\n                        }\n                        uVar17 = *puVar7;\n                        goto code_r0x00432543;\n                    }\n                    appuStack92[1] = param_1;\n                    if (*param_1 == 0x2f) {\n                        appuStack92[1] = puVar7;\n                    }\n                }\n                else {\ncode_r0x00432543:\n                    appuStack92[1] = puVar7;\n                    if (((uVar17 != 0x23) && (*param_1 != uVar17)) && (appuStack92[1] = param_1,  uVar17 == 0x24))\n                    goto code_r0x00432565;\n                }\n                appuStack92[0] = *(in_EAX + 0x114);\n                goto code_r0x00432618;\n            }\ncode_r0x00435573:\n            *(in_EAX + 0x110) = iStack120;\n        }\ncode_r0x00434847:\n        *(in_EAX + 0x118) = 1;\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x27:\n        puVar11 = param_1[2];\n        if ((param_2 & 4) == 0) {\n            puVar15 = *puVar11;\n            if (puVar11[1] != 0) {\n                puVar10 = puVar15 + puVar11[1];\n                iVar20 = *(in_EAX + 0x100);\n                do {\n                    uVar26 = *puVar15;\n                    if (iVar20 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar4 = 1;\n                        iVar20 = 0;\n                    }\n                    else {\n                        iVar4 = iVar20 + 1;\n                    }\n                    puVar15 = puVar15 + 1;\n                    *(in_EAX + 0x100) = iVar4;\n                    in_EAX[iVar20] = uVar26;\n                    in_EAX[0x104] = uVar26;\n                    iVar20 = iVar4;\n                } while (puVar10 != puVar15);\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        else {\n            puVar15 = puVar11[2];\n            if (puVar11[3] != 0) {\n                puVar10 = puVar15 + puVar11[3];\n                iVar20 = *(in_EAX + 0x100);\n                do {\n                    uVar26 = *puVar15;\n                    if (iVar20 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar4 = 1;\n                        iVar20 = 0;\n                    }\n                    else {\n                        iVar4 = iVar20 + 1;\n                    }\n                    puVar15 = puVar15 + 1;\n                    *(in_EAX + 0x100) = iVar4;\n                    in_EAX[iVar20] = uVar26;\n                    in_EAX[0x104] = uVar26;\n                    iVar20 = iVar4;\n                } while (puVar10 != puVar15);\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        break;\n    case 0x28:\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x29:\n        ppuVar21 = *(in_EAX + 0x114);\n        if ((param_2 & 0x20) == 0) {\n            if ((param_1[2] != 0) && ((param_2 & 0x40) == 0)) {\n                *(in_EAX + 0x114) = appuStack92;\n                appuStack92[3] = *(in_EAX + 0x110);\n                appuStack92[2] = NULL;\n                appuStack92[0] = ppuVar21;\n                appuStack92[1] = param_1;\n                fcn.00430eb0();\n                *(in_EAX + 0x114) = appuStack92[0];\n                if (appuStack92[2] != NULL) {\n                    uVar17 = param_1[1] - 1;\n                    iVar20 = *(in_EAX + 0x11c) + -1;\n                    break;\n                }\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x20;\n                ppuVar21 = *(in_EAX + 0x114);\n                in_EAX[0x104] = 0x20;\n            }\n            fcn.00436160(ppuVar21);\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        else {\n            fcn.00436160(ppuVar21);\n            if (param_1[2] == 0) {\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n            else {\n                fcn.00430eb0();\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        break;\n    case 0x2a:\n        ppuVar21 = *(in_EAX + 0x114);\n        appuStack92[3] = *(in_EAX + 0x110);\n        *(in_EAX + 0x114) = appuStack92;\n        appuStack92[2] = NULL;\n        appuStack92[0] = ppuVar21;\n        if ((ppuVar21 == NULL) || (2 < *ppuVar21[1] - 0x19)) {\n            appuStack92[1] = param_1;\n            fcn.00430eb0();\n            *(in_EAX + 0x114) = ppuVar21;\n            if (appuStack92[2] == NULL) goto code_r0x00432079;\n        }\n        else {\n            ppuVar9 = ppuVar21;\n            uVar17 = 1;\n            pppuVar22 = appuStack92;\n            do {\n                uVar6 = uVar17;\n                if (ppuVar9[2] == NULL) {\n                    if (3 < uVar17) {\n                        *(in_EAX + 0x118) = 1;\n                        goto code_r0x00432090;\n                    }\n                    uVar6 = uVar17 + 1;\n                    appuStack92[uVar17 * 4] = *ppuVar9;\n                    appuStack92[uVar17 * 4 + 1] = ppuVar9[1];\n                    appuStack92[uVar17 * 4 + 2] = ppuVar9[2];\n                    appuStack92[uVar17 * 4 + 3] = ppuVar9[3];\n                    appuStack92[uVar17 * 4] = pppuVar22;\n                    pppuVar22 = appuStack92 + uVar17 * 4;\n                    *(in_EAX + 0x114) = pppuVar22;\n                    ppuVar9[2] = 0x1;\n                }\n                ppuVar9 = *ppuVar9;\n            } while ((ppuVar9 != NULL) && (uVar17 = uVar6,  *ppuVar9[1] - 0x19 < 3));\n            appuStack92[1] = param_1;\n            fcn.00430eb0();\n            *(in_EAX + 0x114) = ppuVar21;\n            if (appuStack92[2] == NULL) {\n                if (uVar6 != 1) {\n                    pppuVar22 = appuStack92 + uVar6 * 4;\n                    do {\n                        pppuVar22 = pppuVar22 + -4;\n                        fcn.00435840();\n                    } while (appuStack92 + 4 != pppuVar22);\n                }\ncode_r0x00432079:\n                fcn.00436850(*(in_EAX + 0x114));\n            }\n        }\ncode_r0x00432090:\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x2b:\n    case 0x2d:\n        appuStack92[0] = *(in_EAX + 0x114);\n        appuStack92[2] = NULL;\n        *(in_EAX + 0x114) = appuStack92;\n        appuStack92[3] = *(in_EAX + 0x110);\n        appuStack92[1] = param_1;\n        fcn.00430eb0();\n        if (appuStack92[2] == NULL) {\n            fcn.00435840();\n        }\n        uVar17 = param_1[1] - 1;\n        *(in_EAX + 0x114) = appuStack92[0];\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x2c:\n        if (*(param_1 + 0xe) != 0) {\n            pcVar16 = \"_Sat \";\n            iVar20 = *(in_EAX + 0x100);\n            do {\n                cVar12 = *pcVar16;\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                pcVar16 = pcVar16 + 1;\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = cVar12;\n                in_EAX[0x104] = cVar12;\n                iVar20 = iVar4;\n            } while (pcVar16 != \"\");\n        }\n        if (*(param_1[2] + 8) == 0x526220) {\n            iVar20 = *(in_EAX + 0x100);\n        }\n        else {\n            fcn.00430eb0();\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar4 = *(in_EAX + 0x100);\n            iVar20 = iVar4 + 1;\n            *(in_EAX + 0x100) = iVar20;\n            in_EAX[iVar4] = 0x20;\n            in_EAX[0x104] = 0x20;\n        }\n        if (*(param_1 + 3) == 0) {\n            puVar15 = 0x525422;\n            uVar26 = 0x5f;\n            while( true ) {\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = uVar26;\n                in_EAX[0x104] = uVar26;\n                if (puVar15 == 0x525427) break;\n                uVar26 = *puVar15;\n                puVar15 = puVar15 + 1;\n                iVar20 = iVar4;\n            }\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        else {\n            puVar15 = 0x525429;\n            uVar26 = 0x5f;\n            while( true ) {\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = uVar26;\n                in_EAX[0x104] = uVar26;\n                if (puVar15 == 0x52542e) break;\n                uVar26 = *puVar15;\n                puVar15 = puVar15 + 1;\n                iVar20 = iVar4;\n            }\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        break;\n    case 0x2e:\n    case 0x2f:\n        if (param_1[2] != 0) {\n            fcn.00430eb0();\n        }\n        if (param_1[3] == 0) {\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        else {\n            uVar17 = *(in_EAX + 0x100);\n            if (0xfd < uVar17) {\n                in_EAX[uVar17] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                uVar17 = 0;\n                *(in_EAX + 0x100) = 0;\n            }\n            puVar15 = 0x52542f;\n            uVar26 = 0x2c;\n            while( true ) {\n                if (uVar17 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    uVar6 = 1;\n                    uVar17 = 0;\n                }\n                else {\n                    uVar6 = uVar17 + 1;\n                }\n                puVar15 = puVar15 + 1;\n                *(in_EAX + 0x100) = uVar6;\n                in_EAX[uVar17] = uVar26;\n                in_EAX[0x104] = uVar26;\n                if (puVar15 == 0x525431) break;\n                uVar26 = *puVar15;\n                uVar17 = uVar6;\n            }\n            iVar20 = *(in_EAX + 0x128);\n            fcn.00430eb0();\n            uVar17 = param_1[1] - 1;\n            if (iVar20 == *(in_EAX + 0x128)) {\n                iVar20 = *(in_EAX + 0x11c) + -1;\n                if (*(in_EAX + 0x100) == uVar6) {\n                    *(in_EAX + 0x100) = uVar6 - 2;\n                }\n            }\n            else {\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        break;\n    case 0x30:\n        if (param_1[2] != 0) {\n            fcn.00430eb0();\n        }\n        iVar20 = *(in_EAX + 0x100);\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar20 = 0;\n        }\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x7b;\n        in_EAX[0x104] = 0x7b;\n        fcn.00430eb0();\n        iVar20 = *(in_EAX + 0x100);\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar20 = 0;\n        }\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x7d;\n        in_EAX[0x104] = 0x7d;\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x31:\n        uVar17 = param_1[2];\n        puVar15 = 0x525433;\n        uVar26 = 0x6f;\n        iVar20 = *(uVar17 + 8);\n        iVar4 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar4 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar8 = 1;\n                iVar4 = 0;\n            }\n            else {\n                iVar8 = iVar4 + 1;\n            }\n            *(in_EAX + 0x100) = iVar8;\n            in_EAX[iVar4] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x52543a) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar4 = iVar8;\n        }\n        pcVar16 = *(uVar17 + 4);\n        if (*pcVar16 + 0x9fU < 0x1a) {\n            if (iVar8 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar4 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar4 + 1;\n            in_EAX[iVar4] = 0x20;\n            in_EAX[0x104] = 0x20;\n            pcVar16 = *(uVar17 + 4);\n        }\n        if (pcVar16[iVar20 + -1] == ' ') {\n            iVar20 = iVar20 + -1;\n        }\n        if (iVar20 == 0) {\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        else {\n            pcVar23 = pcVar16 + iVar20;\n            iVar20 = *(in_EAX + 0x100);\n            do {\n                cVar12 = *pcVar16;\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                pcVar16 = pcVar16 + 1;\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = cVar12;\n                in_EAX[0x104] = cVar12;\n                iVar20 = iVar4;\n            } while (pcVar23 != pcVar16);\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        break;\n    case 0x32:\n        puVar15 = 0x52543c;\n        uVar26 = 0x6f;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x525444) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    default:\n        *(in_EAX + 0x118) = 1;\n        uVar17 = param_1[1] - 1;\n        break;\n    case 0x34:\n        puVar15 = 0x52543c;\n        uVar26 = 0x6f;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x525444) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        if (*(in_EAX + 0x148) != NULL) {\n            appuStack92[0] = *(in_EAX + 0x110);\n            *(in_EAX + 0x110) = appuStack92;\n            appuStack92[1] = *(in_EAX + 0x148);\n        }\n        if (*param_1[2] == 4) {\n            fcn.00430eb0();\n            if (*(in_EAX + 0x148) != 0) {\n                *(in_EAX + 0x110) = appuStack92[0];\n            }\n            if (in_EAX[0x104] == '<') {\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x20;\n                in_EAX[0x104] = 0x20;\n            }\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x3c;\n            in_EAX[0x104] = 0x3c;\n            fcn.00430eb0();\n            if (in_EAX[0x104] == '>') {\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x20;\n                in_EAX[0x104] = 0x20;\n            }\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x3e;\n            in_EAX[0x104] = 0x3e;\n        }\n        else {\n            fcn.00430eb0();\n            if (*(in_EAX + 0x148) != 0) {\n                *(in_EAX + 0x110) = appuStack92[0];\n            }\n        }\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x35:\n        fcn.00436af0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x36:\n        piVar5 = param_1[3];\n        iVar20 = *param_1[2];\n        if (iVar20 == 0x31) {\n            puVar19 = *param_1[2][2];\n            iVar20 = sub.msvcrt.dll_strcmp(puVar19, 0x525445);\n            ppuStack128 = piVar5;\n            if ((iVar20 == 0) && (*piVar5 == 3)) {\n                if ((*piVar5[2] == 1) && (ppuStack128 = piVar5[2],  *piVar5[3] != 0x29)) {\n                    ppuStack128 = piVar5;\n                }\n            }\n            else if (*piVar5 == 0x38) {\n                fcn.00436b90();\n                fcn.00436af0();\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n                break;\n            }\n            iVar20 = sub.msvcrt.dll_strcmp(puVar19, 0x525448);\n            bVar27 = false;\n            bVar28 = iVar20 == 0;\n            if (bVar28) {\n                for (piVar5 = fcn.0042e510(); ((piVar5 != NULL && (*piVar5 == 0x2f)) && (piVar5[2] != 0));\n                    piVar5 = piVar5[3]) {\n                    iVar20 = iVar20 + 1;\n                }\n                pppuVar22 = appuStack92;\n                sub.msvcrt.dll_sprintf(pppuVar22, 0x5252a7, iVar20);\n                uVar17 = 0xffffffff;\n                pppuVar13 = pppuVar22;\n                do {\n                    if (uVar17 == 0) break;\n                    uVar17 = uVar17 - 1;\n                    cVar12 = *pppuVar13;\n                    pppuVar13 = pppuVar13 + 1;\n                } while (cVar12 != '\\0');\n                pppuVar13 = pppuVar22 + (~uVar17 - 1);\n                if (~uVar17 - 1 != 0) {\n                    do {\n                        cVar12 = *pppuVar22;\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        pppuVar22 = pppuVar22 + 1;\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = cVar12;\n                        in_EAX[0x104] = cVar12;\n                    } while (pppuVar13 != pppuVar22);\n                }\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n                break;\n            }\n            iVar20 = 3;\n            puVar18 = puVar19;\n            puVar24 = 0x524eb3;\n            do {\n                if (iVar20 == 0) break;\n                iVar20 = iVar20 + -1;\n                bVar27 = *puVar18 < *puVar24;\n                bVar28 = *puVar18 == *puVar24;\n                puVar18 = puVar18 + 1;\n                puVar24 = puVar24 + 1;\n            } while (bVar28);\n            uVar26 = 0;\n            uVar29 = (!bVar27 && !bVar28) == bVar27;\n            if (uVar29) {\n                iVar20 = 0;\n                do {\n                    if ((*ppuStack128 != 0x2f) || (ppuStack128[2] == NULL)) break;\n                    if (*ppuStack128[2] == 0x4a) {\n                        piVar5 = fcn.0042e510();\n                        iVar4 = 0;\n                        for (; ((piVar5 != NULL && (*piVar5 == 0x2f)) && (piVar5[2] != 0)); piVar5 = piVar5[3]) {\n                            iVar4 = iVar4 + 1;\n                        }\n                        iVar20 = iVar20 + iVar4;\n                    }\n                    else {\n                        iVar20 = iVar20 + 1;\n                    }\n                    ppuStack128 = ppuStack128[3];\n                } while (ppuStack128 != NULL);\n                pppuVar22 = appuStack92;\n                sub.msvcrt.dll_sprintf(pppuVar22, 0x5252a7, iVar20);\n                uVar17 = 0xffffffff;\n                pppuVar13 = pppuVar22;\n                do {\n                    if (uVar17 == 0) break;\n                    uVar17 = uVar17 - 1;\n                    cVar12 = *pppuVar13;\n                    pppuVar13 = pppuVar13 + 1;\n                } while (cVar12 != '\\0');\n                if (~uVar17 - 1 != 0) {\n                    pppuVar13 = pppuVar22 + (~uVar17 - 1);\n                    iVar20 = *(in_EAX + 0x100);\n                    do {\n                        cVar12 = *pppuVar22;\n                        if (iVar20 == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            iVar20 = 0;\n                        }\n                        pppuVar22 = pppuVar22 + 1;\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = cVar12;\n                        in_EAX[0x104] = cVar12;\n                        iVar20 = iVar20 + 1;\n                    } while (pppuVar13 != pppuVar22);\n                }\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n                break;\n            }\n            fcn.00436af0();\n            iVar20 = 3;\n            puVar18 = puVar19;\n            puVar24 = 0x52544b;\n            do {\n                if (iVar20 == 0) break;\n                iVar20 = iVar20 + -1;\n                uVar26 = *puVar18 < *puVar24;\n                uVar29 = *puVar18 == *puVar24;\n                puVar18 = puVar18 + 1;\n                puVar24 = puVar24 + 1;\n            } while (uVar29);\n            bVar27 = false;\n            bVar28 = (!uVar26 && !uVar29) == uVar26;\n            if (bVar28) {\n                fcn.00430eb0();\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n                break;\n            }\n            iVar20 = 3;\n            puVar18 = 0x524eb0;\n            do {\n                if (iVar20 == 0) break;\n                iVar20 = iVar20 + -1;\n                bVar27 = *puVar19 < *puVar18;\n                bVar28 = *puVar19 == *puVar18;\n                puVar19 = puVar19 + 1;\n                puVar18 = puVar18 + 1;\n            } while (bVar28);\n            if ((!bVar27 && !bVar28) == bVar27) {\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x28;\n                in_EAX[0x104] = 0x28;\n                fcn.00430eb0();\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x29;\n                in_EAX[0x104] = 0x29;\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n                break;\n            }\n        }\n        else if (iVar20 == 0x33) {\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x28;\n            in_EAX[0x104] = 0x28;\n            fcn.00430eb0();\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x29;\n            in_EAX[0x104] = 0x29;\n        }\n        else {\n            fcn.00436af0();\n        }\n        fcn.00436b90();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x37:\n        if (*param_1[3] == 0x38) {\n            if (((**(param_1[2] + 8))[1] == 'c') &&\n               ((cVar12 = ***(param_1[2] + 8),  cVar12 + 0x9dU < 2 || (cVar12 + 0x8eU < 2)))) {\n                fcn.00436af0();\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                puVar15 = 0x52544e;\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x3c;\n                in_EAX[0x104] = 0x3c;\n                fcn.00430eb0();\n                iVar20 = *(in_EAX + 0x100);\n                do {\n                    uVar26 = *puVar15;\n                    if (iVar20 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar20 = 0;\n                    }\n                    puVar15 = puVar15 + 1;\n                    *(in_EAX + 0x100) = iVar20 + 1;\n                    in_EAX[iVar20] = uVar26;\n                    in_EAX[0x104] = uVar26;\n                    iVar20 = iVar20 + 1;\n                } while (puVar15 != 0x525450);\n                fcn.00430eb0();\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x29;\n                in_EAX[0x104] = 0x29;\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n            else {\n                iVar20 = fcn.00436c80(param_1 + 3);\n                if (iVar20 == 0) {\n                    piVar5 = param_1[2];\n                    if (((*piVar5 == 0x31) && (*(piVar5[2] + 8) == 1)) && (**(piVar5[2] + 4) == '>')) {\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x28;\n                        in_EAX[0x104] = 0x28;\n                        piVar5 = param_1[2];\n                    }\n                    iVar20 = sub.msvcrt.dll_strcmp(*piVar5[2], 0x524eb6);\n                    if ((iVar20 == 0) && (**(param_1[3] + 8) == 3)) {\n                        if (*(*(param_1[3] + 8))[3] != 0x29) {\n                            *(in_EAX + 0x118) = 1;\n                        }\n                        fcn.00436b90();\n                    }\n                    else {\n                        fcn.00436b90();\n                    }\n                    uVar2 = **(param_1[2] + 8);\n                    iVar20 = sub.msvcrt.dll_strcmp(uVar2, 0x525451);\n                    if (iVar20 == 0) {\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x5b;\n                        in_EAX[0x104] = 0x5b;\n                        fcn.00430eb0();\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x5d;\n                        in_EAX[0x104] = 0x5d;\n                    }\n                    else {\n                        iVar20 = sub.msvcrt.dll_strcmp(uVar2, 0x524eb6);\n                        if (iVar20 != 0) {\n                            fcn.00436af0();\n                        }\n                        fcn.00436b90();\n                    }\n                    if (((*param_1[2] == 0x31) && (iVar20 = param_1[2][2],  *(iVar20 + 8) == 1)) &&\n                       (**(iVar20 + 4) == '>')) {\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x29;\n                        in_EAX[0x104] = 0x29;\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                    }\n                    else {\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                    }\n                }\n                else {\n                    uVar17 = param_1[1] - 1;\n                    iVar20 = *(in_EAX + 0x11c) + -1;\n                }\n            }\n        }\n        else {\n            *(in_EAX + 0x118) = 1;\n            uVar17 = param_1[1] - 1;\n        }\n        break;\n    case 0x38:\n        *(in_EAX + 0x118) = 1;\n        uVar17 = param_1[1] - 1;\n        break;\n    case 0x39:\n        if ((*param_1[3] == 0x3a) && (*param_1[3][3] == 0x3b)) {\n            iVar20 = fcn.00436c80(param_1 + 3);\n            if (iVar20 == 0) {\n                iVar20 = *(param_1[3] + 8);\n                iVar4 = *(*(param_1[3] + 0xc) + 0xc);\n                iVar8 = sub.msvcrt.dll_strcmp(**(param_1[2] + 8), 0x524ebf);\n                if (iVar8 == 0) {\n                    fcn.00436b90();\n                    fcn.00436af0();\n                    fcn.00436b90();\n                    fcn.0042dd80();\n                    fcn.00436b90();\n                    uVar17 = param_1[1] - 1;\n                    iVar20 = *(in_EAX + 0x11c) + -1;\n                }\n                else {\n                    fcn.0042dd80();\n                    if (*(iVar20 + 8) != 0) {\n                        fcn.00436b90();\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x20;\n                        in_EAX[0x104] = 0x20;\n                    }\n                    fcn.00430eb0();\n                    if (iVar4 == 0) {\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                    }\n                    else {\n                        fcn.00436b90();\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                    }\n                }\n            }\n            else {\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        else {\n            *(in_EAX + 0x118) = 1;\n            uVar17 = param_1[1] - 1;\n        }\n        break;\n    case 0x3a:\n    case 0x3b:\n        *(in_EAX + 0x118) = 1;\n        uVar17 = param_1[1] - 1;\n        break;\n    case 0x3c:\n    case 0x3d:\n        uVar17 = 0;\n        if ((*param_1[2] == 0x27) && (uVar17 = *(param_1[2][2] + 0x10),  uVar17 != 0)) {\n            if (uVar17 < 7) {\n                if (*param_1[3] == 0) {\n                    if (uVar6 == 0x3d) {\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x2d;\n                        in_EAX[0x104] = 0x2d;\n                    }\n                    fcn.00430eb0();\n    // switch table (5 cases) at 0x52563c\n                    switch(uVar17) {\n                    case 2:\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x75;\n                        in_EAX[0x104] = 0x75;\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                        break;\n                    case 3:\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x6c;\n                        in_EAX[0x104] = 0x6c;\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                        break;\n                    case 4:\n                        fcn.0042dd80();\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                        break;\n                    case 5:\n                        fcn.0042dd80();\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                        break;\n                    case 6:\n                        fcn.0042dd80();\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                        break;\n                    default:\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                    }\n                    break;\n                }\n            }\n            else if ((((uVar17 == 7) && (piVar5 = param_1[3],  *piVar5 == 0)) && (piVar5[3] == 1)) && (uVar6 == 0x3c)) {\n                if (*piVar5[2] == '0') {\n                    fcn.0042dd80();\n                    uVar17 = param_1[1] - 1;\n                    iVar20 = *(in_EAX + 0x11c) + -1;\n                    break;\n                }\n                if (*piVar5[2] == '1') {\n                    fcn.0042dd80();\n                    uVar17 = param_1[1] - 1;\n                    iVar20 = *(in_EAX + 0x11c) + -1;\n                    break;\n                }\n            }\n        }\n        if (*(in_EAX + 0x100) == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            *(in_EAX + 0x100) = 0;\n        }\n        iVar20 = *(in_EAX + 0x100);\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x28;\n        in_EAX[0x104] = 0x28;\n        fcn.00430eb0();\n        iVar20 = *(in_EAX + 0x100);\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            *in_EAX = 0x29;\n            in_EAX[0x104] = 0x29;\n            uVar6 = *param_1;\n            *(in_EAX + 0x100) = 1;\n            if (uVar6 == 0x3d) goto code_r0x0043461a;\n        }\n        else {\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x29;\n            in_EAX[0x104] = 0x29;\n            if (*param_1 == 0x3d) {\n                if (iVar20 + 1 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\ncode_r0x0043461a:\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x2d;\n                in_EAX[0x104] = 0x2d;\n            }\n        }\n        if (uVar17 == 8) {\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x5b;\n            in_EAX[0x104] = 0x5b;\n            fcn.00430eb0();\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x5d;\n            in_EAX[0x104] = 0x5d;\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        else {\n            fcn.00430eb0();\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        break;\n    case 0x3e:\n        puVar15 = 0x525473;\n        uVar26 = 0x6a;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x525480) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x3f:\n        fcn.00430eb0();\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x40:\n        uVar6 = param_1[2];\n        iVar4 = *(in_EAX + 0x100);\n        if (iVar4 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            uVar17 = param_1[1];\n            iVar4 = 0;\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            uVar17 = uVar17 - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        *(in_EAX + 0x100) = iVar4 + 1;\n        uStack132._0_1_ = uVar6;\n        in_EAX[iVar4] = uStack132;\n        in_EAX[0x104] = uStack132;\n        break;\n    case 0x41:\n        pppuVar22 = appuStack92;\n        sub.msvcrt.dll_sprintf(pppuVar22, 0x5252a7, param_1[2]);\n        pppuVar13 = pppuVar22;\n        do {\n            pppuVar25 = pppuVar13;\n            uVar6 = *pppuVar25 + 0xfefefeffU & ~*pppuVar25;\n            uVar17 = uVar6 & 0x80808080;\n            pppuVar13 = pppuVar25 + 1;\n        } while (uVar17 == 0);\n        bVar27 = (uVar6 & 0x8080) == 0;\n        if (bVar27) {\n            uVar17 = uVar17 >> 0x10;\n        }\n        if (bVar27) {\n            pppuVar13 = pppuVar25 + 6;\n        }\n        puVar15 = pppuVar13 + ((-3 - CARRY1(uVar17, uVar17)) - pppuVar22);\n        if (puVar15 != NULL) {\n            pppuVar13 = pppuVar22 + puVar15;\n            iVar20 = *(in_EAX + 0x100);\n            do {\n                uVar26 = *pppuVar22;\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                pppuVar22 = pppuVar22 + 1;\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = uVar26;\n                in_EAX[0x104] = uVar26;\n                iVar20 = iVar4;\n            } while (pppuVar13 != pppuVar22);\n        }\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x42:\n        puVar15 = 0x525482;\n        uVar26 = 100;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x52548b) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        iVar20 = *(in_EAX + 0x100);\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar20 = 0;\n        }\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x29;\n        in_EAX[0x104] = 0x29;\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x43:\n        puVar15 = 0x52549d;\n        uVar26 = 0x67;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5254b9) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x44:\n        puVar15 = 0x5254bb;\n        uVar26 = 0x67;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5254d6) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x45:\n        puVar15 = 0x5254d8;\n        uVar26 = 0x7b;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5254df) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        puVar15 = 0x5254e0;\n        *(in_EAX + 0x120) = *(in_EAX + 0x120) + 1;\n        fcn.00430eb0();\n        uVar26 = 0x29;\n        *(in_EAX + 0x120) = *(in_EAX + 0x120) + -1;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            puVar15 = puVar15 + 1;\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5254e2) break;\n            uVar26 = *puVar15;\n            iVar20 = iVar4;\n        }\n        pppuVar22 = appuStack92;\n        sub.msvcrt.dll_sprintf(pppuVar22, 0x5252a7, param_1[3] + 1);\n        pppuVar13 = pppuVar22;\n        do {\n            pppuVar25 = pppuVar13;\n            uVar6 = *pppuVar25 + 0xfefefeffU & ~*pppuVar25;\n            uVar17 = uVar6 & 0x80808080;\n            pppuVar13 = pppuVar25 + 1;\n        } while (uVar17 == 0);\n        bVar27 = (uVar6 & 0x8080) == 0;\n        if (bVar27) {\n            uVar17 = uVar17 >> 0x10;\n        }\n        if (bVar27) {\n            pppuVar13 = pppuVar25 + 6;\n        }\n        iVar20 = *(in_EAX + 0x100);\n        puVar15 = pppuVar13 + ((-3 - CARRY1(uVar17, uVar17)) - pppuVar22);\n        if (puVar15 != NULL) {\n            pppuVar13 = pppuVar22 + puVar15;\n            iVar4 = iVar20;\n            do {\n                uVar26 = *pppuVar22;\n                if (iVar4 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar20 = 1;\n                    iVar4 = 0;\n                }\n                else {\n                    iVar20 = iVar4 + 1;\n                }\n                pppuVar22 = pppuVar22 + 1;\n                *(in_EAX + 0x100) = iVar20;\n                in_EAX[iVar4] = uVar26;\n                in_EAX[0x104] = uVar26;\n                iVar4 = iVar20;\n            } while (pppuVar13 != pppuVar22);\n        }\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar20 = 0;\n        }\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x7d;\n        in_EAX[0x104] = 0x7d;\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x47:\n        puVar15 = 0x5254e4;\n        uVar26 = 0x7b;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5254f1) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        pppuVar22 = appuStack92;\n        sub.msvcrt.dll_sprintf(pppuVar22, 0x5252a7, param_1[2] + 1);\n        pppuVar13 = pppuVar22;\n        do {\n            pppuVar25 = pppuVar13;\n            uVar6 = *pppuVar25 + 0xfefefeffU & ~*pppuVar25;\n            uVar17 = uVar6 & 0x80808080;\n            pppuVar13 = pppuVar25 + 1;\n        } while (uVar17 == 0);\n        bVar27 = (uVar6 & 0x8080) == 0;\n        if (bVar27) {\n            uVar17 = uVar17 >> 0x10;\n        }\n        if (bVar27) {\n            pppuVar13 = pppuVar25 + 6;\n        }\n        iVar20 = *(in_EAX + 0x100);\n        puVar15 = pppuVar13 + ((-3 - CARRY1(uVar17, uVar17)) - pppuVar22);\n        if (puVar15 != NULL) {\n            pppuVar13 = pppuVar22 + puVar15;\n            iVar4 = iVar20;\n            do {\n                uVar26 = *pppuVar22;\n                if (iVar4 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar20 = 1;\n                    iVar4 = 0;\n                }\n                else {\n                    iVar20 = iVar4 + 1;\n                }\n                pppuVar22 = pppuVar22 + 1;\n                *(in_EAX + 0x100) = iVar20;\n                in_EAX[iVar4] = uVar26;\n                in_EAX[0x104] = uVar26;\n                iVar4 = iVar20;\n            } while (pppuVar13 != pppuVar22);\n        }\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar20 = 0;\n        }\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x7d;\n        in_EAX[0x104] = 0x7d;\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x48:\n        puVar15 = 0x5253ea;\n        uVar26 = 0x74;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5253ff) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x49:\n        puVar15 = 0x525401;\n        uVar26 = 0x6e;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x52541a) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x4a:\n        piVar5 = fcn.0042e510();\n        ppuStack124 = NULL;\n        if (piVar5 == NULL) {\n            fcn.00436b90();\n            fcn.0042dd80();\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        else {\n            do {\n                if ((*piVar5 != 0x2f) || (piVar5[2] == 0)) {\n                    if (ppuStack124 == NULL) {\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                        goto code_r0x004310b1;\n                    }\n                    break;\n                }\n                piVar5 = piVar5[3];\n                ppuStack124 = ppuStack124 + 1;\n            } while (piVar5 != NULL);\n            do {\n                *(in_EAX + 0x124) = ppuStack128;\n                fcn.00430eb0();\n                if (ppuStack128 < ppuStack124 + -1) {\n                    puVar15 = 0x52542f;\n                    uVar26 = 0x2c;\n                    iVar20 = *(in_EAX + 0x100);\n                    while( true ) {\n                        if (iVar20 == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            iVar4 = 1;\n                            iVar20 = 0;\n                        }\n                        else {\n                            iVar4 = iVar20 + 1;\n                        }\n                        puVar15 = puVar15 + 1;\n                        *(in_EAX + 0x100) = iVar4;\n                        in_EAX[iVar20] = uVar26;\n                        in_EAX[0x104] = uVar26;\n                        if (puVar15 == 0x525431) break;\n                        uVar26 = *puVar15;\n                        iVar20 = iVar4;\n                    }\n                }\n                ppuStack128 = ppuStack128 + 1;\n            } while (ppuStack128 < ppuStack124);\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        break;\n    case 0x4b:\n        pcVar16 = \"[abi:\";\n        fcn.00430eb0();\n        cVar12 = '[';\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            pcVar16 = pcVar16 + 1;\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = cVar12;\n            in_EAX[0x104] = cVar12;\n            if (pcVar16 == \"\") break;\n            cVar12 = *pcVar16;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        iVar20 = *(in_EAX + 0x100);\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar20 = 0;\n        }\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x5d;\n        in_EAX[0x104] = 0x5d;\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x4d:\n        puVar15 = 0x5254f3;\n        fcn.00430eb0();\n        uVar26 = 0x20;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5254fa) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00430eb0();\n        iVar20 = *(in_EAX + 0x100);\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar20 = 0;\n        }\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x5d;\n        in_EAX[0x104] = 0x5d;\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n    }\ncode_r0x004310b1:\n    *(in_EAX + 300) = uStack104;\n    param_1[1] = uVar17;\n    *(in_EAX + 0x11c) = iVar20;\n    return;\ncode_r0x00434888:\n    puVar7 = *ppuStack124;\n    if (puVar7 != 0x4c) {\n        if (puVar7 < 0x4d) {\n            if (0x4 < puVar7 + -7) goto code_r0x004328fd;\n        }\n        else if (1 < puVar7 - 0x4eU) goto code_r0x004328fd;\n    }\n    if (iStack120 == 4) goto code_r0x00434e5b;\n    *(in_EAX + 0x114) = pppuVar22;\n    pppuVar13 = pppuVar22 + -4;\n    pppuVar25 = pppuVar22;\n    for (iVar20 = 4; iVar20 != 0; iVar20 = iVar20 + -1) {\n        *pppuVar25 = *pppuVar13;\n        pppuVar13 = pppuVar13 + 1;\n        pppuVar25 = pppuVar25 + 1;\n    }\n    pppuVar22[-2] = NULL;\n    *pppuVar22 = pppuVar22 + -4;\n    pppuVar22[-3] = ppuStack124;\n    pppuVar22[-1] = ppuVar21;\n    iStack120 = iStack120 + 1;\n    ppuStack124 = ppuStack124[2];\n    pppuVar22 = pppuVar22 + 4;\n    goto code_r0x00434888;\ncode_r0x004328fd:\n    if (*ppuStack124 == 0x4) {\n        *(in_EAX + 0x110) = &ppuStack100;\n        auStack96 = ppuStack124;\n        ppuStack100 = ppuVar21;\n    }\n    fcn.00430eb0();\n    if (*ppuStack124 == 0x4) {\n        *(in_EAX + 0x110) = ppuStack100;\n    }\n    pppuVar22 = appuStack92 + iStack120 * 4;\n    do {\n        if (pppuVar22[-2] == NULL) {\n            iVar20 = *(in_EAX + 0x100);\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar20 = 0;\n            }\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x20;\n            in_EAX[0x104] = 0x20;\n            fcn.00435840();\n        }\n        pppuVar22 = pppuVar22 + -4;\n    } while (appuStack92 != pppuVar22);\n    *(in_EAX + 0x114) = uVar2;\ncode_r0x004329bc:\n    uVar17 = param_1[1] - 1;\n    iVar20 = *(in_EAX + 0x11c) + -1;\n    goto code_r0x004310b1;\n}\n",
        "token_count": 32952
    },
    "00436490": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436490(int32_t *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    int32_t iVar6;\n    uchar uVar7;\n    uchar *puVar8;\n    uint32_t *puVar9;\n    uchar auStack53 [37];\n    \n    if (param_1 != NULL) {\n        iVar3 = *(in_EAX + 0x118);\n        while (iVar3 == 0) {\n            if (param_1[2] == 0) {\n                uVar4 = *param_1[1];\n                if (param_3 != 0) goto code_r0x004364c8;\n                if (uVar4 != 0x4c) {\n                    if (uVar4 < 0x4d) {\n                        if (4 < uVar4 - 0x1c) goto code_r0x004364c8;\n                    }\n                    else if (1 < uVar4 - 0x4e) {\ncode_r0x004364c8:\n                        uVar1 = *(in_EAX + 0x110);\n                        param_1[2] = 1;\n                        *(in_EAX + 0x110) = param_1[3];\n                        if (uVar4 == 0x29) {\n                            fcn.00436160(*param_1);\n                            *(in_EAX + 0x110) = uVar1;\n                            return;\n                        }\n                        if (uVar4 == 0x2a) {\n                            fcn.00436850(*param_1);\n                            *(in_EAX + 0x110) = uVar1;\n                            return;\n                        }\n                        if (uVar4 == 2) {\n                            uVar2 = *(in_EAX + 0x114);\n                            *(in_EAX + 0x114) = 0;\n                            fcn.00430eb0();\n                            *(in_EAX + 0x114) = uVar2;\n                            iVar3 = *(in_EAX + 0x100);\n                            if ((param_2 & 4) == 0) {\n                                puVar8 = 0x525296;\n                                uVar7 = 0x3a;\n                                while( true ) {\n                                    if (iVar3 == 0xff) {\n                                        *(in_EAX + 0xff) = 0;\n                                        (**(in_EAX + 0x108))();\n                                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                                        iVar6 = 1;\n                                        iVar3 = 0;\n                                    }\n                                    else {\n                                        iVar6 = iVar3 + 1;\n                                    }\n                                    puVar8 = puVar8 + 1;\n                                    *(in_EAX + 0x100) = iVar6;\n                                    *(in_EAX + iVar3) = uVar7;\n                                    *(in_EAX + 0x104) = uVar7;\n                                    if (puVar8 == 0x525298) break;\n                                    uVar7 = *puVar8;\n                                    iVar3 = iVar6;\n                                }\n                            }\n                            else {\n                                iVar6 = iVar3 + 1;\n                                if (iVar3 == 0xff) {\n                                    *(in_EAX + 0xff) = 0;\n                                    (**(in_EAX + 0x108))();\n                                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                                    iVar6 = 1;\n                                    iVar3 = 0;\n                                }\n                                *(in_EAX + 0x100) = iVar6;\n                                *(in_EAX + iVar3) = 0x2e;\n                                *(in_EAX + 0x104) = 0x2e;\n                            }\n                            puVar9 = *(param_1[1] + 0xc);\n                            uVar4 = *puVar9;\n                            if (uVar4 == 0x46) {\n                                puVar8 = 0x52529a;\n                                uVar7 = 0x7b;\n                                iVar3 = *(in_EAX + 0x100);\n                                while( true ) {\n                                    if (iVar3 == 0xff) {\n                                        *(in_EAX + 0xff) = 0;\n                                        (**(in_EAX + 0x108))();\n                                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                                        iVar6 = 1;\n                                        iVar3 = 0;\n                                    }\n                                    else {\n                                        iVar6 = iVar3 + 1;\n                                    }\n                                    *(in_EAX + 0x100) = iVar6;\n                                    *(in_EAX + iVar3) = uVar7;\n                                    *(in_EAX + 0x104) = uVar7;\n                                    if (puVar8 == 0x5252a6) break;\n                                    uVar7 = *puVar8;\n                                    puVar8 = puVar8 + 1;\n                                    iVar3 = iVar6;\n                                }\n                                puVar8 = auStack53;\n                                sub.msvcrt.dll_sprintf(puVar8, 0x5252a7, puVar9[3] + 1);\n                                iVar6 = sub.msvcrt.dll_strlen(puVar8);\n                                iVar3 = *(in_EAX + 0x100);\n                                if (iVar6 != 0) {\n                                    puVar5 = puVar8 + iVar6;\n                                    iVar6 = iVar3;\n                                    do {\n                                        uVar7 = *puVar8;\n                                        if (iVar6 == 0xff) {\n                                            *(in_EAX + 0xff) = 0;\n                                            (**(in_EAX + 0x108))();\n                                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                                            iVar3 = 1;\n                                            iVar6 = 0;\n                                        }\n                                        else {\n                                            iVar3 = iVar6 + 1;\n                                        }\n                                        puVar8 = puVar8 + 1;\n                                        *(in_EAX + 0x100) = iVar3;\n                                        *(in_EAX + iVar6) = uVar7;\n                                        *(in_EAX + 0x104) = uVar7;\n                                        iVar6 = iVar3;\n                                    } while (puVar5 != puVar8);\n                                }\n                                puVar8 = 0x5252aa;\n                                uVar7 = 0x7d;\n                                do {\n                                    if (iVar3 == 0xff) {\n                                        *(in_EAX + 0xff) = 0;\n                                        (**(in_EAX + 0x108))();\n                                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                                        iVar6 = 1;\n                                        iVar3 = 0;\n                                    }\n                                    else {\n                                        iVar6 = iVar3 + 1;\n                                    }\n                                    *(in_EAX + 0x100) = iVar6;\n                                    puVar8 = puVar8 + 1;\n                                    *(in_EAX + iVar3) = uVar7;\n                                    *(in_EAX + 0x104) = uVar7;\n                                    if (puVar8 == 0x5252ad) goto code_r0x00436645;\n                                    uVar7 = *puVar8;\n                                    iVar3 = iVar6;\n                                } while( true );\n                            }\n                            do {\n                                if (uVar4 != 0x4c) {\n                                    if (uVar4 < 0x4d) {\n                                        if (4 < uVar4 - 0x1c) {\ncode_r0x004365e0:\n                                            fcn.00430eb0();\n                                            *(in_EAX + 0x110) = uVar1;\n                                            return;\n                                        }\n                                    }\n                                    else if (1 < uVar4 - 0x4e) goto code_r0x004365e0;\n                                }\ncode_r0x00436645:\n                                puVar9 = puVar9[2];\n                                uVar4 = *puVar9;\n                            } while( true );\n                        }\n                        fcn.00435840();\n                        *(in_EAX + 0x110) = uVar1;\n                    }\n                }\n            }\n            param_1 = *param_1;\n            if (param_1 == NULL) {\n                return;\n            }\n            iVar3 = *(in_EAX + 0x118);\n        }\n    }\n    return;\n}\n",
        "token_count": 1877
    },
    "00437020": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Could not reconcile some variable overlaps\n\nbool __fastcall fcn.00437020(uint param_1, code *param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    code *pcVar4;\n    uint8_t *in_EAX;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t extraout_ECX;\n    uint *puVar9;\n    uint8_t *puVar10;\n    uint8_t uVar11;\n    uint8_t *puVar12;\n    bool bVar13;\n    bool bVar14;\n    ulong uVar15;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    uint8_t *apuStack480 [4];\n    uchar auStack464 [16];\n    int32_t var_1bch;\n    int32_t var_1b8h_2;\n    uint32_t var_1b4h_2;\n    int32_t iStack436;\n    int32_t *var_1ach_2;\n    uint var_19ch_2;\n    uint8_t *puStack412;\n    uint32_t uStack408;\n    uint8_t *s;\n    uint32_t var_18ch_2;\n    int32_t var_188h_2;\n    int32_t var_184h_2;\n    uchar *puStack388;\n    uint uStack384;\n    int32_t iStack380;\n    uint uStack376;\n    uint uStack372;\n    uint uStack368;\n    uint uStack364;\n    uchar auStack360 [256];\n    int32_t var_64h_2;\n    uchar uStack100;\n    code *var_5ch_2;\n    int32_t var_58h_2;\n    uint uStack88;\n    uint uStack84;\n    int32_t var_4ch_2;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *var_34h_2;\n    uint uStack52;\n    int32_t iStack48;\n    uchar *var_28h_2;\n    uint uStack40;\n    int32_t var_20h_2;\n    uint uStack32;\n    \n    uVar11 = *in_EAX;\n    var_1b4h_2 = var_1b4h_2 & 0xffffff00 | uVar11;\n    bVar13 = uVar11 < 0x5f;\n    bVar14 = uVar11 == 0x5f;\n    if (bVar14) {\n        bVar13 = in_EAX[1] < 0x5a;\n        bVar14 = in_EAX[1] == 0x5a;\n        uVar11 = 1;\n        if (bVar14) goto code_r0x00437090;\n    }\n    iVar8 = 8;\n    puVar10 = in_EAX;\n    puVar12 = \"_GLOBAL_\";\n    do {\n        if (iVar8 == 0) break;\n        iVar8 = iVar8 + -1;\n        bVar13 = *puVar10 < *puVar12;\n        bVar14 = *puVar10 == *puVar12;\n        puVar10 = puVar10 + 1;\n        puVar12 = puVar12 + 1;\n    } while (bVar14);\n    uVar11 = 0;\n    if (((((!bVar13 && !bVar14) == bVar13) && ((uVar1 = in_EAX[8],  uVar1 == 0x2e || uVar1 == 0x5f || (uVar1 == 0x24))))\n        && ((uVar1 = in_EAX[9],  uVar1 == 0x44 || (uVar11 = 0,  uVar1 == 0x49)))) && (uVar11 = 0,  in_EAX[10] == 0x5f))\n    {\n        uVar11 = (uVar1 != 0x49) + 2;\n    }\ncode_r0x00437090:\n    apuStack480[0] = 0x437098;\n    var_1ach_2 = param_2;\n    iStack380 = sub.msvcrt.dll_strlen();\n    puStack412 = in_EAX + iStack380;\n    uStack408 = 0x11;\n    var_1b8h_2 = iStack380 * 2;\n    var_188h_2 = 0;\n    uStack384 = 0;\n    uStack376 = 0;\n    uStack372 = 0;\n    uStack368 = 0;\n    uStack364 = 0;\n    apuStack480[0] = 0x437114;\n    s = in_EAX;\n    var_184h_2 = var_1b8h_2;\n    iVar8 = fcn.004386a0();\n    iVar8 = -iVar8;\n    *(&stack0xfffffe20 + iVar8) = 0x437138;\n    uVar15 = fcn.004386a0();\n    iVar2 = -uVar15;\n    var_18ch_2 = extraout_ECX;\n    puStack388 = &stack0xfffffe30 + iVar2 + iVar8;\n    if (uVar11 == 1) {\n        if (var_1b4h_2 != '_') {\n            return false;\n        }\n        if (in_EAX[1] != 0x5a) {\n            return false;\n        }\n        s = in_EAX + 2;\n        *(&stack0xfffffe20 + iVar2 + iVar8) = 0x4373a5;\n        uVar6 = fcn.004307a0();\n        if ((uStack408 & 1) == 0) {\n            uVar11 = *s;\n        }\n        else {\n            uVar11 = *s;\n            puVar10 = s;\n            while (s = puVar10,  uVar11 == 0x2e) {\n                uVar11 = puVar10[1];\n                if ((uVar11 + 0x9f < 0x1a) || (uVar11 == 0x5f)) {\n                    uVar11 = puVar10[2];\n                    s = puVar10 + 2;\n                    var_1b4h_2 = var_1b4h_2 & 0xffffff00 | uVar11;\n                    if ((uVar11 + 0x9f < 0x1a) || (uVar11 == 0x5f)) {\n                        var_1b4h_2 = uVar6;\n                        do {\n                            do {\n                                s = s + 1;\n                                uVar11 = *s;\n                            } while (uVar11 + 0x9f < 0x1a);\n                        } while (uVar11 == 0x5f);\n                    }\n                }\n                else {\n                    if (9 < uVar11 - 0x30) {\n                        uVar11 = *puVar10;\n                        break;\n                    }\n                    uVar11 = *puVar10;\n                }\n                while ((uVar11 == 0x2e && (s[1] - 0x30 < 10))) {\n                    puVar12 = s + 2;\n                    s = s + 2;\n                    uVar11 = *puVar12;\n                    while (uVar11 - 0x30 < 10) {\n                        s = s + 1;\n                        uVar11 = *s;\n                    }\n                }\n                if (var_188h_2 < var_184h_2) {\n                    puVar9 = var_188h_2 * 0x10 + var_18ch_2;\n                    puVar9[1] = 0;\n                    var_188h_2 = var_188h_2 + 1;\n                    if (s - puVar10 == 0) goto code_r0x00437540;\n                    puVar9[1] = 0;\n                    *puVar9 = 0;\n                    puVar9[2] = puVar10;\n                    puVar9[3] = s - puVar10;\n                }\n                else {\ncode_r0x00437540:\n                    puVar9 = NULL;\n                }\n                *(&stack0xfffffe24 + iVar2 + iVar8) = puVar9;\n                *(&stack0xfffffe20 + iVar2 + iVar8) = 0x437520;\n                uVar6 = fcn.0042dc50();\n                puVar10 = s;\n                uVar11 = *s;\n            }\n        }\n    }\n    else if ((uVar11 == 0) || (3 < uVar11)) {\n        *(&stack0xfffffe20 + iVar2 + iVar8) = 0x43722e;\n        uVar6 = fcn.0042f510();\n        uVar11 = *s;\n    }\n    else {\n        puVar10 = in_EAX + 0xb;\n        s = puVar10;\n        if ((in_EAX[0xb] == 0x5f) && (in_EAX[0xc] == 0x5a)) {\n            s = in_EAX + 0xd;\n            *(&stack0xfffffe20 + iVar2 + iVar8) = 0x437402;\n            fcn.004307a0();\n        }\n        else {\n            var_1bch = uVar15 >> 0x20;\n            var_1b4h_2 = extraout_ECX;\n            *(&stack0xfffffe24 + iVar2 + iVar8) = puVar10;\n            *(&stack0xfffffe20 + iVar2 + iVar8) = 0x43718b;\n            iVar5 = sub.msvcrt.dll_strlen();\n            if (0 < var_1b8h_2) {\n                *(var_1bch * 4 + 4) = 0;\n                var_188h_2 = 1;\n                if (iVar5 != 0) {\n                    *(var_1bch * 4 + 8) = puVar10;\n                    *(var_1bch * 4) = 0;\n                    *(var_1bch * 4 + 0xc) = iVar5;\n                }\n            }\n        }\n        *(&stack0xfffffe24 + iVar2 + iVar8) = 0;\n        *(&stack0xfffffe20 + iVar2 + iVar8) = 0x4371fa;\n        uVar6 = fcn.0042dc50();\n        puVar10 = s;\n        *(&stack0xfffffe24 + iVar2 + iVar8) = s;\n        *(&stack0xfffffe20 + iVar2 + iVar8) = 0x43720a;\n        iVar5 = sub.msvcrt.dll_strlen();\n        s = puVar10 + iVar5;\n        uVar11 = puVar10[iVar5];\n    }\n    if ((uVar6 != 0) && (uVar11 == 0)) {\n        uStack100 = 0;\n        var_64h_2 = 0;\n        var_5ch_2 = var_1ach_2;\n        uStack88 = 0;\n        var_58h_2 = iStack436;\n        uStack84 = 0;\n        uStack68 = 0;\n        uStack64 = 0;\n        var_4ch_2 = 0;\n        uStack76 = 0;\n        uStack72 = 0;\n        uStack60 = 0;\n        var_34h_2 = NULL;\n        uStack52 = 0;\n        iStack48 = 0;\n        var_28h_2 = NULL;\n        uStack40 = 0;\n        var_20h_2 = 0;\n        *(&stack0xfffffe20 + iVar2 + iVar8) = 0x4372d3;\n        fcn.0042dd10();\n        uStack32 = 0;\n        var_1ach_2 = &stack0xfffffe24 + iVar2 + iVar8;\n        var_20h_2 = var_20h_2 * iStack48;\n        *(&stack0xfffffe20 + iVar2 + iVar8) = 0x437308;\n        iVar5 = fcn.004386a0();\n        iVar5 = -iVar5;\n        *(&stack0xfffffe20 + iVar5 + iVar2 + iVar8) = 0x437325;\n        iVar7 = fcn.004386a0();\n        var_34h_2 = &stack0xfffffe30 + iVar5 + iVar2 + iVar8;\n        var_28h_2 = &stack0xfffffe30 + -iVar7 + iVar5 + iVar2 + iVar8;\n        *(&stack0xfffffe20 + -iVar7 + iVar5 + iVar2 + iVar8) = 0x43733f;\n        fcn.00430eb0();\n        iVar2 = var_58h_2;\n        iVar8 = var_64h_2;\n        piVar3 = var_1ach_2;\n        (&stack0xfffffe98)[var_64h_2] = 0;\n        var_1ach_2[2] = iVar2;\n        piVar3[1] = iVar8;\n        *piVar3 = &stack0xfffffe98;\n        pcVar4 = var_5ch_2;\n        piVar3[-1] = 0x437361;\n        (*pcVar4)();\n        return var_4ch_2 == 0;\n    }\n    return false;\n}\n",
        "token_count": 3293
    },
    "004375b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043761d)\n// WARNING: Removing unreachable block (ram,0x004376ed)\n// WARNING: Removing unreachable block (ram,0x004376f1)\n// WARNING: Removing unreachable block (ram,0x00437684)\n// WARNING: Removing unreachable block (ram,0x0043762a)\n// WARNING: Removing unreachable block (ram,0x004376c0)\n// WARNING: Removing unreachable block (ram,0x004376c8)\n// WARNING: Removing unreachable block (ram,0x00437632)\n// WARNING: Removing unreachable block (ram,0x004376b0)\n// WARNING: Removing unreachable block (ram,0x004376b8)\n// WARNING: Removing unreachable block (ram,0x00437642)\n// WARNING: Removing unreachable block (ram,0x0043765f)\n// WARNING: Removing unreachable block (ram,0x00437663)\n\nuint fcn.004375b0(int32_t param_1, int32_t param_2, int32_t param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    \n    if ((param_1 == 0) || ((param_2 != 0 && (param_3 == 0)))) {\n        if (param_4 != NULL) {\n            *param_4 = 0xfffffffd;\n        }\n    }\n    else {\n        iVar1 = fcn.00437020();\n        if (iVar1 == 0) {\n            fcn.00447658(0);\n        }\n        if (param_4 != NULL) {\n            *param_4 = 0xfffffffe;\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 373
    },
    "00437ca0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00437d08)\n// WARNING: Removing unreachable block (ram,0x00437dd1)\n// WARNING: Removing unreachable block (ram,0x00437d17)\n// WARNING: Removing unreachable block (ram,0x00437e55)\n// WARNING: Removing unreachable block (ram,0x00437e63)\n// WARNING: Removing unreachable block (ram,0x00437f06)\n// WARNING: Removing unreachable block (ram,0x00437e71)\n// WARNING: Removing unreachable block (ram,0x00437dd6)\n// WARNING: Removing unreachable block (ram,0x00437dde)\n// WARNING: Removing unreachable block (ram,0x00437de9)\n// WARNING: Removing unreachable block (ram,0x00437f10)\n// WARNING: Removing unreachable block (ram,0x00437f80)\n// WARNING: Removing unreachable block (ram,0x00437fd1)\n// WARNING: Removing unreachable block (ram,0x00437fea)\n// WARNING: Removing unreachable block (ram,0x00437f87)\n// WARNING: Removing unreachable block (ram,0x00437f8e)\n// WARNING: Removing unreachable block (ram,0x00437f33)\n// WARNING: Removing unreachable block (ram,0x00437f95)\n// WARNING: Removing unreachable block (ram,0x00438055)\n// WARNING: Removing unreachable block (ram,0x00437fb2)\n// WARNING: Removing unreachable block (ram,0x00438040)\n// WARNING: Removing unreachable block (ram,0x00437f3a)\n// WARNING: Removing unreachable block (ram,0x00438005)\n// WARNING: Removing unreachable block (ram,0x0043800c)\n// WARNING: Removing unreachable block (ram,0x00438075)\n// WARNING: Removing unreachable block (ram,0x00438025)\n// WARNING: Removing unreachable block (ram,0x00438029)\n// WARNING: Removing unreachable block (ram,0x00437f45)\n// WARNING: Removing unreachable block (ram,0x0043808e)\n// WARNING: Removing unreachable block (ram,0x00437f62)\n// WARNING: Removing unreachable block (ram,0x00437f66)\n// WARNING: Removing unreachable block (ram,0x00437fba)\n// WARNING: Removing unreachable block (ram,0x00437fc7)\n// WARNING: Removing unreachable block (ram,0x004380b0)\n// WARNING: Removing unreachable block (ram,0x0043804e)\n// WARNING: Removing unreachable block (ram,0x00437df5)\n// WARNING: Removing unreachable block (ram,0x00437e04)\n// WARNING: Removing unreachable block (ram,0x00437e10)\n// WARNING: Removing unreachable block (ram,0x00437e81)\n// WARNING: Removing unreachable block (ram,0x00437e9a)\n// WARNING: Removing unreachable block (ram,0x00437e9d)\n// WARNING: Removing unreachable block (ram,0x00437e33)\n// WARNING: Removing unreachable block (ram,0x00437ef2)\n// WARNING: Removing unreachable block (ram,0x00437e3c)\n// WARNING: Removing unreachable block (ram,0x00437e45)\n// WARNING: Removing unreachable block (ram,0x00437ed0)\n// WARNING: Removing unreachable block (ram,0x00437ede)\n// WARNING: Removing unreachable block (ram,0x00437ee1)\n// WARNING: Removing unreachable block (ram,0x00437eb3)\n// WARNING: Removing unreachable block (ram,0x00437ec2)\n// WARNING: Removing unreachable block (ram,0x00437d1f)\n// WARNING: Removing unreachable block (ram,0x00437d24)\n// WARNING: Removing unreachable block (ram,0x00437d2c)\n// WARNING: Removing unreachable block (ram,0x00437d53)\n// WARNING: Removing unreachable block (ram,0x00437d78)\n// WARNING: Removing unreachable block (ram,0x00437d7b)\n// WARNING: Removing unreachable block (ram,0x00437d89)\n// WARNING: Removing unreachable block (ram,0x00437d92)\n// WARNING: Removing unreachable block (ram,0x00437da4)\n// WARNING: Removing unreachable block (ram,0x00437dbe)\n// WARNING: Removing unreachable block (ram,0x00437dc9)\n// WARNING: Removing unreachable block (ram,0x00437d50)\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint fcn.00437ca0(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    if (*0x56b3bc == 0) {\n        *0x56b3bc = 1;\n        fcn.004384b0();\n        iVar1 = fcn.004386a0();\n        *0x56b3c0 = 0;\n        *0x56b3c4 = &var_2ch + (3 - iVar1) & 0xfffffff0;\n        in_EAX = 0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 1197
    },
    "004396e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004396e0(uint param_1, int32_t **param_2)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    code *pcVar4;\n    char cVar5;\n    code *pcVar6;\n    int32_t in_EAX;\n    int32_t iVar7;\n    int32_t **ppiVar8;\n    uint8_t *puVar9;\n    uint *puVar10;\n    uint8_t uVar11;\n    uint8_t uVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    int32_t extraout_ECX;\n    uint32_t uVar15;\n    uint8_t extraout_DL;\n    uint8_t *puVar16;\n    int32_t **ppiVar17;\n    char *pcVar18;\n    uint8_t *puVar19;\n    int32_t **ppiVar20;\n    int32_t *piVar21;\n    uint32_t uVar22;\n    ulong uVar23;\n    int32_t **ppiStack404;\n    uint uStack384;\n    int32_t **ppiStack380;\n    int32_t *apiStack376 [67];\n    int32_t **ppiStack108;\n    int32_t iStack104;\n    int32_t **ppiStack100;\n    int32_t **ppiStack96;\n    int32_t **ppiStack92;\n    int32_t iStack88;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t **ppiStack56;\n    int32_t iStack52;\n    uint8_t uStack45;\n    int32_t *piStack32;\n    \n    ppiVar8 = param_2;\n    for (iVar13 = 0x30; iVar13 != 0; iVar13 = iVar13 + -1) {\n        *ppiVar8 = NULL;\n        ppiVar8 = ppiVar8 + 1;\n    }\n    *(in_EAX + 0x68) = 0;\n    *(in_EAX + 0x50) = 0;\n    if (*(in_EAX + 0x4c) == 0) {\n        return 5;\n    }\n    iStack88 = in_EAX + 0x54;\n    iStack60 = *(in_EAX + 0x60);\n    ppiStack92 = (*(in_EAX + 0x4c) + -1) - (iStack60 >> 0x1f);\n    ppiStack96 = 0x439730;\n    iStack64 = in_EAX;\n    iStack60 = fcn.0043c820();\n    if (iStack60 != 0) {\n        param_2[0x29] = *(iStack64 + 0x5c);\n        iVar13 = (iStack60 + 4) - *(iStack60 + 4);\n        ppiStack92 = iVar13 + 9;\n        ppiStack96 = 0x439768;\n        ppiStack56 = ppiStack92;\n        iStack52 = iVar13;\n        iVar7 = sub.msvcrt.dll_strlen();\n        ppiVar8 = iVar13 + 10 + iVar7;\n        if ((*(iVar13 + 9) == 'e') && (*(iStack52 + 10) == 'h')) {\n            piVar21 = *ppiVar8;\n            ppiStack56 = iStack52 + 0xb;\n            ppiVar8 = ppiVar8 + 1;\n            param_2[0x2f] = piVar21;\n        }\n        uVar12 = *ppiVar8;\n        uStack45 = *(iStack52 + 8);\n        if (3 < uStack45) {\n            if (uVar12 != 4) {\n                return 3;\n            }\n            if (*(ppiVar8 + 1) != '\\0') {\n                return 3;\n            }\n            uVar12 = *(ppiVar8 + 2);\n            ppiVar8 = ppiVar8 + 2;\n        }\n        piVar21 = NULL;\n        uVar11 = 0;\n        while( true ) {\n            ppiVar8 = ppiVar8 + 1;\n            uVar3 = uVar11 & 0x1f;\n            uVar11 = uVar11 + 7;\n            piVar21 = piVar21 | (uVar12 & 0x7f) << uVar3;\n            if (-1 < uVar12) break;\n            uVar12 = *ppiVar8;\n        }\n        param_2[0x2c] = piVar21;\n        piVar21 = NULL;\n        uVar14 = 0;\n        do {\n            ppiVar17 = ppiVar8;\n            ppiVar8 = ppiVar17 + 1;\n            uVar12 = *ppiVar17;\n            uVar11 = uVar14;\n            uVar14 = uVar14 + 7;\n            piVar21 = piVar21 | (uVar12 & 0x7f) << (uVar11 & 0x1f);\n        } while (uVar12 < '\\0');\n        if ((uVar14 < 0x20) && ((uVar12 & 0x40) != 0)) {\n            piVar21 = piVar21 | -1 << (uVar14 & 0x1f);\n        }\n        uVar12 = 0;\n        param_2[0x2b] = piVar21;\n        if (uStack45 == 1) {\n            ppiVar17 = ppiVar17 + 2;\n            param_2[0x2d] = *ppiVar8;\n        }\n        else {\n            piVar21 = NULL;\n            do {\n                ppiVar17 = ppiVar8 + 1;\n                uVar11 = *ppiVar8;\n                uVar3 = uVar12 & 0x1f;\n                uVar12 = uVar12 + 7;\n                piVar21 = piVar21 | (uVar11 & 0x7f) << uVar3;\n                ppiVar8 = ppiVar17;\n            } while (uVar11 < '\\0');\n            param_2[0x2d] = piVar21;\n        }\n        *(param_2 + 0xb9) = 0xff;\n        cVar5 = *ppiStack56;\n        ppiStack108 = ppiVar17;\n        pcVar18 = ppiStack56;\n        ppiVar8 = NULL;\n        if (cVar5 == 'z') {\n            uVar14 = 0;\n            uVar12 = 0;\n            ppiVar8 = ppiVar17;\n            do {\n                ppiVar17 = ppiVar8 + 1;\n                uVar11 = *ppiVar8;\n                uVar3 = uVar12 & 0x1f;\n                uVar12 = uVar12 + 7;\n                uVar14 = uVar14 | (uVar11 & 0x7f) << uVar3;\n                ppiVar8 = ppiVar17;\n            } while (uVar11 < '\\0');\n            *(param_2 + 0xba) = 1;\n            pcVar18 = ppiStack56 + 1;\n            cVar5 = *(ppiStack56 + 1);\n            ppiStack108 = ppiVar17;\n            ppiVar8 = ppiVar17 + uVar14;\n        }\n        while (ppiStack56 = ppiVar8,  iStack104 = iStack52,  cVar5 != '\\0') {\n            if (cVar5 == 'L') {\n                uVar1 = *ppiStack108;\n                ppiStack108 = ppiStack108 + 1;\n                *(param_2 + 0xb9) = uVar1;\n            }\n            else if (cVar5 == 'R') {\n                uVar1 = *ppiStack108;\n                ppiStack108 = ppiStack108 + 1;\n                *(param_2 + 0x2e) = uVar1;\n            }\n            else if (cVar5 == 'P') {\n                ppiVar17 = *ppiStack108;\n                ppiStack96 = 0x4398ef;\n                fcn.00438e40();\n                ppiStack92 = &stack0xffffffe0;\n                ppiStack96 = 0x439902;\n                ppiStack108 = fcn.00438d00();\n                param_2[0x2a] = piStack32;\n            }\n            else {\n                ppiVar8 = ppiStack56;\n                if (cVar5 != 'S') goto code_r0x00439ac4;\n                *(param_2 + 0xbb) = 1;\n            }\n            cVar5 = pcVar18[1];\n            pcVar18 = pcVar18 + 1;\n            ppiVar8 = ppiStack56;\n        }\n        ppiVar17 = ppiStack108;\n        ppiVar8 = ppiStack108;\n        ppiVar20 = ppiStack56;\n        if (ppiStack56 == NULL) {\ncode_r0x00439ac4:\n            ppiStack108 = ppiVar17;\n            ppiVar20 = ppiVar8;\n            if (ppiVar8 == NULL) {\n                return 3;\n            }\n        }\n        ppiStack96 = 0x439939;\n        ppiStack92 = param_2;\n        fcn.00438e80();\n        if (*(param_2 + 0x2e) == 0xff) {\n            iVar13 = 8;\n        }\n        else {\n            uVar12 = *(param_2 + 0x2e) & 7;\n            if (uVar12 == 2) {\n                iVar13 = 0xc;\n            }\n            else {\n                if (uVar12 < 3) {\n                    if (uVar12 != 0) {\ncode_r0x00439cf8:\n                        ppiStack96 = 0x439cfd;\n                        uVar23 = sub.msvcrt.dll_abort();\n                        puVar16 = uVar23 >> 0x20;\n                        ppiStack96 = ppiVar20;\n                        ppiStack100 = param_2;\n                        apiStack376[0] = iStack88;\n                        if (uVar23 < puVar16) {\n                            ppiStack404 = 0x1;\n                            puVar19 = uVar23;\n                            do {\n                                uVar12 = *puVar19;\n                                uVar14 = uVar12;\n                                puVar9 = puVar19 + 1;\n                                switch(uVar14 - 3 & 0xff) {\n                                case 0:\n                                case 9:\n                                case 10:\n                                    param_2 = *(puVar19 + 1);\n                                    puVar9 = puVar19 + 5;\n                                    break;\n                                default:\ncode_r0x0043a1f9:\n                                    do {\n                                        sub.msvcrt.dll_abort();\n                                        uVar12 = extraout_DL;\ncode_r0x0043a200:\n                                        ppiStack404 = ppiVar20;\n                                        if (uVar12 == 6) {\n                                            param_2 = *param_2;\n                                            goto code_r0x00439d60;\n                                        }\n                                    } while (uVar12 != 0x19);\n                                    param_2 = (param_2 ^ param_2 >> 0x1f) - (param_2 >> 0x1f);\n                                    break;\n                                case 3:\n                                case 0x16:\n                                case 0x1c:\n                                case 0x1d:\n                                case 0x20:\n                                case 0x91:\n                                    if (ppiStack404 == NULL) goto code_r0x004014e0;\n                                    ppiVar20 = ppiStack404 + -1;\n                                    param_2 = *(&stack0xfffffe88 + ppiVar20 * 4);\n                                    ppiStack404 = ppiVar20;\n                                    if (uVar12 == 0x1f) {\n                                        param_2 = -param_2;\n                                    }\n                                    else {\n                                        if (uVar12 < 0x20) goto code_r0x0043a200;\n                                        if (uVar12 == 0x23) {\n                                            uVar14 = 0;\n                                            uVar12 = 0;\n                                            puVar19 = puVar9;\n                                            do {\n                                                puVar9 = puVar19 + 1;\n                                                uVar11 = *puVar19;\n                                                uVar3 = uVar12 & 0x1f;\n                                                uVar12 = uVar12 + 7;\n                                                uVar14 = uVar14 | (uVar11 & 0x7f) << uVar3;\n                                                puVar19 = puVar9;\n                                            } while (uVar11 < '\\0');\n                                            param_2 = param_2 + uVar14;\n                                        }\n                                        else if (uVar12 == 0x94) {\n                                            uVar12 = puVar19[1];\n                                            puVar19 = puVar19 + 2;\n                                            if (uVar12 == 2) {\n                                                param_2 = *param_2;\n                                                puVar9 = puVar19;\n                                            }\n                                            else if (uVar12 < 3) {\n                                                if (uVar12 != 1) goto code_r0x0043a1f9;\n                                                param_2 = *param_2;\n                                                puVar9 = puVar19;\n                                            }\n                                            else {\n                                                if ((uVar12 != 4) && (uVar12 != 8)) goto code_r0x0043a1f9;\n                                                param_2 = *param_2;\n                                                puVar9 = puVar19;\n                                            }\n                                        }\n                                        else {\n                                            if (uVar12 != 0x20) goto code_r0x0043a1f9;\n                                            param_2 = ~param_2;\n                                        }\n                                    }\n                                    break;\n                                case 5:\n                                    param_2 = puVar19[1];\n                                    puVar9 = puVar19 + 2;\n                                    break;\n                                case 6:\n                                    param_2 = puVar19[1];\n                                    puVar9 = puVar19 + 2;\n                                    break;\n                                case 7:\n                                    param_2 = *(puVar19 + 1);\n                                    puVar9 = puVar19 + 3;\n                                    break;\n                                case 8:\n                                    param_2 = *(puVar19 + 1);\n                                    puVar9 = puVar19 + 3;\n                                    break;\n                                case 0xb:\n                                case 0xc:\n                                    param_2 = *(puVar19 + 1);\n                                    puVar9 = puVar19 + 9;\n                                    break;\n                                case 0xd:\n                                    param_2 = NULL;\n                                    uVar12 = 0;\n                                    puVar19 = puVar9;\n                                    do {\n                                        puVar9 = puVar19 + 1;\n                                        uVar11 = *puVar19;\n                                        uVar3 = uVar12 & 0x1f;\n                                        uVar12 = uVar12 + 7;\n                                        param_2 = param_2 | (uVar11 & 0x7f) << uVar3;\n                                        puVar19 = puVar9;\n                                    } while (uVar11 < '\\0');\n                                    break;\n                                case 0xe:\n                                    param_2 = NULL;\n                                    uVar14 = 0;\n                                    puVar19 = puVar9;\n                                    do {\n                                        puVar9 = puVar19 + 1;\n                                        uVar12 = *puVar19;\n                                        uVar11 = uVar14;\n                                        uVar14 = uVar14 + 7;\n                                        param_2 = param_2 | (uVar12 & 0x7f) << (uVar11 & 0x1f);\n                                        puVar19 = puVar9;\n                                    } while (uVar12 < '\\0');\n                                    if ((uVar14 < 0x20) && ((uVar12 & 0x40) != 0)) {\n                                        param_2 = param_2 | -(1 << (uVar14 & 0x1f));\n                                    }\n                                    break;\n                                case 0xf:\n                                    if (ppiStack404 == NULL) goto code_r0x004014e0;\n                                    param_2 = *(&stack0xfffffe84 + ppiStack404 * 4);\n                                    break;\n                                case 0x10:\n                                    if (ppiStack404 != NULL) {\n                                        ppiStack404 = ppiStack404 + -1;\n                                        goto code_r0x00439d74;\n                                    }\n                                    goto code_r0x004014e0;\n                                case 0x11:\n                                    if (ppiStack404 < 2) goto code_r0x004014e0;\n                                    param_2 = *(&stack0xfffffe80 + ppiStack404 * 4);\n                                    break;\n                                case 0x12:\n                                    puVar9 = puVar19 + 2;\n                                    if (ppiStack404 + -1 <= puVar19[1]) goto code_r0x004014e0;\n                                    param_2 = *(&stack0xfffffe88 + ((ppiStack404 + -1) - puVar19[1]) * 4);\n                                    break;\n                                case 0x13:\n                                    if (1 < ppiStack404) {\n                                        uVar2 = *(&stack0xfffffe88 + (ppiStack404 + -1) * 4);\n                                        *(&stack0xfffffe88 + (ppiStack404 + -1) * 4) =\n                                             *(&stack0xfffffe88 + (ppiStack404 + -2) * 4);\n                                        *(&stack0xfffffe88 + (ppiStack404 + -2) * 4) = uVar2;\n                                        goto code_r0x00439d74;\n                                    }\n                                    goto code_r0x004014e0;\n                                case 0x14:\n                                    if (2 < ppiStack404) {\n                                        uVar2 = *(&stack0xfffffe88 + (ppiStack404 + -1) * 4);\n                                        ppiVar20 = *(&stack0xfffffe88 + (ppiStack404 + -2) * 4);\n                                        param_2 = *(&stack0xfffffe88 + (ppiStack404 + -3) * 4);\n                                        *(&stack0xfffffe88 + (ppiStack404 + -1) * 4) = ppiVar20;\n                                        *(&stack0xfffffe88 + (ppiStack404 + -2) * 4) = param_2;\n                                        *(&stack0xfffffe88 + (ppiStack404 + -3) * 4) = uVar2;\n                                        goto code_r0x00439d74;\n                                    }\n                                    goto code_r0x004014e0;\n                                case 0x17:\n                                case 0x18:\n                                case 0x19:\n                                case 0x1a:\n                                case 0x1b:\n                                case 0x1e:\n                                case 0x1f:\n                                case 0x21:\n                                case 0x22:\n                                case 0x23:\n                                case 0x24:\n                                case 0x26:\n                                case 0x27:\n                                case 0x28:\n                                case 0x29:\n                                case 0x2a:\n                                case 0x2b:\n                                    if (ppiStack404 < 2) goto code_r0x004014e0;\n                                    ppiVar20 = ppiStack404 + -2;\n                                    ppiVar8 = *(&stack0xfffffe84 + ppiStack404 * 4);\n                                    param_2 = *(&stack0xfffffe88 + ppiVar20 * 4);\n                                    uVar12 = ppiVar8;\n                                    ppiStack404 = ppiVar20;\n                                    switch(uVar14 - 0x1a & 0xff) {\n                                    case 0:\n                                        param_2 = param_2 & ppiVar8;\n                                        break;\n                                    case 1:\n                                        param_2 = param_2 / ppiVar8;\n                                        break;\n                                    case 2:\n                                        param_2 = param_2 - ppiVar8;\n                                        break;\n                                    case 3:\n                                        param_2 = param_2 % ppiVar8;\n                                        break;\n                                    case 4:\n                                        param_2 = param_2 * ppiVar8;\n                                        break;\n                                    default:\n                                        goto code_r0x0043a1f9;\n                                    case 7:\n                                        param_2 = param_2 | ppiVar8;\n                                        break;\n                                    case 8:\n                                        param_2 = param_2 + ppiVar8;\n                                        break;\n                                    case 10:\n                                        param_2 = param_2 << (uVar12 & 0x1f);\n                                        break;\n                                    case 0xb:\n                                        param_2 = param_2 >> (uVar12 & 0x1f);\n                                        break;\n                                    case 0xc:\n                                        param_2 = param_2 >> (uVar12 & 0x1f);\n                                        break;\n                                    case 0xd:\n                                        param_2 = param_2 ^ ppiVar8;\n                                        break;\n                                    case 0xf:\n                                        param_2 = param_2 == ppiVar8;\n                                        break;\n                                    case 0x10:\n                                        param_2 = ppiVar8 <= param_2;\n                                        break;\n                                    case 0x11:\n                                        param_2 = ppiVar8 < param_2;\n                                        break;\n                                    case 0x12:\n                                        param_2 = param_2 <= ppiVar8;\n                                        break;\n                                    case 0x13:\n                                        param_2 = param_2 < ppiVar8;\n                                        break;\n                                    case 0x14:\n                                        param_2 = param_2 != ppiVar8;\n                                    }\n                                    break;\n                                case 0x25:\n                                    if (ppiStack404 != NULL) {\n                                        param_2 = ppiStack404 + -1;\n                                        puVar9 = puVar19 + 3;\n                                        ppiStack404 = param_2;\n                                        if (*(&stack0xfffffe88 + param_2 * 4) != 0) {\n                                            puVar9 = puVar9 + *(puVar19 + 1);\n                                        }\n                                        goto code_r0x00439d74;\n                                    }\n                                    goto code_r0x004014e0;\n                                case 0x2c:\n                                    puVar9 = puVar19 + *(puVar19 + 1) + 3;\n                                    goto code_r0x00439d74;\n                                case 0x2d:\n                                case 0x2e:\n                                case 0x2f:\n                                case 0x30:\n                                case 0x31:\n                                case 0x32:\n                                case 0x33:\n                                case 0x34:\n                                case 0x35:\n                                case 0x36:\n                                case 0x37:\n                                case 0x38:\n                                case 0x39:\n                                case 0x3a:\n                                case 0x3b:\n                                case 0x3c:\n                                case 0x3d:\n                                case 0x3e:\n                                case 0x3f:\n                                case 0x40:\n                                case 0x41:\n                                case 0x42:\n                                case 0x43:\n                                case 0x44:\n                                case 0x45:\n                                case 0x46:\n                                case 0x47:\n                                case 0x48:\n                                case 0x49:\n                                case 0x4a:\n                                case 0x4b:\n                                case 0x4c:\n                                    param_2 = uVar14 - 0x30;\n                                    break;\n                                case 0x4d:\n                                case 0x4e:\n                                case 0x4f:\n                                case 0x50:\n                                case 0x51:\n                                case 0x52:\n                                case 0x53:\n                                case 0x54:\n                                case 0x55:\n                                case 0x56:\n                                case 0x57:\n                                case 0x58:\n                                case 0x59:\n                                case 0x5a:\n                                case 0x5b:\n                                case 0x5c:\n                                case 0x5d:\n                                case 0x5e:\n                                case 0x5f:\n                                case 0x60:\n                                case 0x61:\n                                case 0x62:\n                                case 99:\n                                case 100:\n                                case 0x65:\n                                case 0x66:\n                                case 0x67:\n                                case 0x68:\n                                case 0x69:\n                                case 0x6a:\n                                case 0x6b:\n                                case 0x6c:\n                                    iVar13 = uVar14 - 0x50;\n                                    if (0x11 < iVar13) goto code_r0x004014e0;\n                                    param_2 = *(extraout_ECX + iVar13 * 4);\n                                    if (((*(extraout_ECX + 99) & 0x40) == 0) ||\n                                       (*(extraout_ECX + 0x6c + iVar13) == '\\0')) {\n                                        if (*(uVar14 + 0x56b3a4) != '\\x04') goto code_r0x004014e0;\ncode_r0x00439ebc:\n                                        param_2 = *param_2;\n                                    }\n                                    break;\n                                case 0x6d:\n                                case 0x6e:\n                                case 0x6f:\n                                case 0x70:\n                                case 0x71:\n                                case 0x72:\n                                case 0x73:\n                                case 0x74:\n                                case 0x75:\n                                case 0x76:\n                                case 0x77:\n                                case 0x78:\n                                case 0x79:\n                                case 0x7a:\n                                case 0x7b:\n                                case 0x7c:\n                                case 0x7d:\n                                case 0x7e:\n                                case 0x7f:\n                                case 0x80:\n                                case 0x81:\n                                case 0x82:\n                                case 0x83:\n                                case 0x84:\n                                case 0x85:\n                                case 0x86:\n                                case 0x87:\n                                case 0x88:\n                                case 0x89:\n                                case 0x8a:\n                                case 0x8b:\n                                case 0x8c:\n                                    uVar22 = 0;\n                                    uVar15 = 0;\n                                    puVar19 = puVar9;\n                                    do {\n                                        puVar9 = puVar19 + 1;\n                                        uVar12 = *puVar19;\n                                        uVar11 = uVar15;\n                                        uVar15 = uVar15 + 7;\n                                        uVar22 = uVar22 | (uVar12 & 0x7f) << (uVar11 & 0x1f);\n                                        puVar19 = puVar9;\n                                    } while (uVar12 < '\\0');\n                                    if ((uVar15 < 0x20) && ((uVar12 & 0x40) != 0)) {\n                                        uVar22 = uVar22 | -(1 << (uVar15 & 0x1f));\n                                    }\n                                    iVar13 = uVar14 - 0x70;\n                                    if (0x11 < iVar13) goto code_r0x004014e0;\n                                    puVar10 = *(extraout_ECX + iVar13 * 4);\n                                    if (((*(extraout_ECX + 99) & 0x40) == 0) ||\n                                       (*(extraout_ECX + 0x6c + iVar13) == '\\0')) {\n                                        if (*(uVar14 + 0x56b384) != '\\x04') goto code_r0x004014e0;\n                                        puVar10 = *puVar10;\n                                    }\n                                    param_2 = puVar10 + uVar22;\n                                    break;\n                                case 0x8d:\n                                    uVar14 = 0;\n                                    uVar12 = 0;\n                                    puVar19 = puVar9;\n                                    do {\n                                        puVar9 = puVar19 + 1;\n                                        uVar11 = *puVar19;\n                                        uVar3 = uVar12 & 0x1f;\n                                        uVar12 = uVar12 + 7;\n                                        uVar14 = uVar14 | (uVar11 & 0x7f) << uVar3;\n                                        puVar19 = puVar9;\n                                    } while (uVar11 < '\\0');\n                                    if (0x11 < uVar14) goto code_r0x004014e0;\n                                    param_2 = *(extraout_ECX + uVar14 * 4);\n                                    if (((*(extraout_ECX + 99) & 0x40) == 0) ||\n                                       (*(extraout_ECX + 0x6c + uVar14) == '\\0')) {\n                                        if (*(uVar14 + 0x56b3f4) == '\\x04') goto code_r0x00439ebc;\n                                        goto code_r0x004014e0;\n                                    }\n                                    break;\n                                case 0x8f:\n                                    uVar14 = 0;\n                                    uVar12 = 0;\n                                    do {\n                                        puVar19 = puVar9 + 1;\n                                        uVar11 = *puVar9;\n                                        uVar3 = uVar12 & 0x1f;\n                                        uVar12 = uVar12 + 7;\n                                        uVar14 = uVar14 | (uVar11 & 0x7f) << uVar3;\n                                        puVar9 = puVar19;\n                                    } while (uVar11 < '\\0');\n                                    uVar22 = 0;\n                                    uVar15 = 0;\n                                    do {\n                                        puVar9 = puVar19 + 1;\n                                        uVar12 = *puVar19;\n                                        uVar11 = uVar15;\n                                        uVar15 = uVar15 + 7;\n                                        uVar22 = uVar22 | (uVar12 & 0x7f) << (uVar11 & 0x1f);\n                                        puVar19 = puVar9;\n                                    } while (uVar12 < '\\0');\n                                    if ((uVar15 < 0x20) && ((uVar12 & 0x40) != 0)) {\n                                        uVar22 = uVar22 | -(1 << (uVar15 & 0x1f));\n                                    }\n                                    if (0x11 < uVar14) goto code_r0x004014e0;\n                                    puVar10 = *(extraout_ECX + uVar14 * 4);\n                                    if (((*(extraout_ECX + 99) & 0x40) == 0) ||\n                                       (*(extraout_ECX + 0x6c + uVar14) == '\\0')) {\n                                        if (*(uVar14 + 0x56b3f4) != '\\x04') goto code_r0x004014e0;\n                                        puVar10 = *puVar10;\n                                    }\n                                    param_2 = uVar22 + puVar10;\n                                    break;\n                                case 0x93:\n                                    goto code_r0x00439d74;\n                                case 0xee:\n                                    fcn.00438e40();\n                                    puVar9 = fcn.00438d00(&stack0xfffffe84);\n                                    param_2 = ppiStack380;\n                                }\ncode_r0x00439d60:\n                                if (0x3f < ppiStack404) goto code_r0x004014e0;\n                                *(&stack0xfffffe88 + ppiStack404 * 4) = param_2;\n                                ppiVar20 = ppiStack404;\n                                ppiStack404 = ppiStack404 + 1;\ncode_r0x00439d74:\n                                puVar19 = puVar9;\n                            } while (puVar9 < puVar16);\n                            if (ppiStack404 == NULL) {\ncode_r0x004014e0:\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                iVar13 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n                                if (iVar13 == 0) {\n                                    *0x4ce004 = 0x43c7d0;\n                                    pcVar6 = 0x43c580;\n                                }\n                                else {\n                                    *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n                                    pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n                                    pcVar6 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar13, \"__register_frame_info\");\n                                    *0x4ce004 = (*pcVar4)(iVar13, \"__deregister_frame_info\");\n                                }\n                                if (pcVar6 != NULL) {\n                                    (*pcVar6)(0x52e0f8, 0x56b01c);\n                                }\n                                iVar13 = fcn.004014c0(fcn.00401590);\n                                return iVar13;\n                            }\n                            iStack88 = *(&stack0xfffffe84 + ppiStack404 * 4);\n                        }\n                        return iStack88;\n                    }\n                }\n                else if (uVar12 != 3) {\n                    if (uVar12 != 4) goto code_r0x00439cf8;\n                    iVar13 = 0x18;\n                    goto code_r0x0043996e;\n                }\n                iVar13 = 0x10;\n            }\n        }\ncode_r0x0043996e:\n        pcVar18 = iVar13 + iStack60;\n        if (*(param_2 + 0xba) != '\\0') {\n            do {\n                cVar5 = *pcVar18;\n                pcVar18 = pcVar18 + 1;\n            } while (cVar5 < '\\0');\n        }\n        if (*(param_2 + 0xb9) != -1) {\n            ppiStack96 = 0x4399f8;\n            fcn.00438e40();\n            ppiStack92 = &stack0xffffffe0;\n            ppiStack96 = 0x439a0a;\n            fcn.00438d00();\n            *(iStack64 + 0x50) = piStack32;\n        }\n        ppiStack96 = 0x4399d1;\n        ppiStack92 = param_2;\n        fcn.00438e80();\n        return 0;\n    }\n    pcVar18 = *(iStack64 + 0x4c);\n    piVar21 = *(iStack64 + 0x48);\n    if ((((pcVar18[-2] != -1) || (pcVar18[-1] != -0x30)) || (*pcVar18 != -0x7d)) || (pcVar18[1] != -8)) {\n        if (pcVar18[-5] != -0x18) {\n            if (((pcVar18[-5] != -0x75) || (pcVar18[-4] != 'M')) || (*pcVar18 != 'd')) {\ncode_r0x00439a56:\n                if (((((pcVar18[-1] == -0x7d) && (*pcVar18 == '\\t')) && (pcVar18[1] == '\\0')) &&\n                    ((pcVar18[2] == '-' && (pcVar18[3] == '\\0')))) && ((pcVar18[4] == '\\x10' && (pcVar18[5] == '\\0'))))\n                {\n                    param_2[0x28] = 0x1;\n                    param_2[0x26] = 0x4;\n                    param_2[0x25] = 0x4;\n                    param_2[3] = 0x1;\n                    param_2[2] = 0xfffffffc;\n                    param_2[0x2d] = 0x8;\n                    param_2[0x11] = 0x1;\n                    param_2[0x10] = NULL;\n                    *(param_2 + 0xbb) = 1;\n                    return 0;\n                }\n                return 5;\n            }\n            if (pcVar18[1] != -0x75) {\n                return 5;\n            }\n            iVar13 = piVar21[2];\n            goto code_r0x00439b40;\n        }\n        if ((pcVar18[-4] != 'h') || (*pcVar18 != -0x3d)) {\n            if (*pcVar18 != -0x7d) goto code_r0x00439a56;\n            if (pcVar18[1] != -0x3c) {\n                return 5;\n            }\n            if (pcVar18[3] != -0x48) {\n                return 5;\n            }\n            iVar13 = piVar21[0xe];\n            goto code_r0x00439b40;\n        }\n    }\n    iVar13 = *(*piVar21 + 4);\ncode_r0x00439b40:\n    iVar7 = *(iVar13 + 0xc4);\n    param_2[1] = 0x1;\n    param_2[0x28] = 0x1;\n    param_2[7] = 0x1;\n    param_2[0x26] = 0x4;\n    param_2[0x25] = iVar7 - piVar21;\n    *param_2 = (iVar13 + 0xb0) - iVar7;\n    param_2[3] = 0x1;\n    param_2[6] = (iVar13 + 0xa4) - iVar7;\n    param_2[5] = 0x1;\n    param_2[2] = (iVar13 + 0xac) - iVar7;\n    param_2[0xd] = 0x1;\n    param_2[4] = (iVar13 + 0xa8) - iVar7;\n    param_2[0xf] = 0x1;\n    param_2[0xc] = (iVar13 + 0xa0) - iVar7;\n    param_2[0xb] = 0x1;\n    param_2[0xe] = (iVar13 + 0x9c) - iVar7;\n    param_2[0x11] = 0x1;\n    param_2[0x10] = (iVar13 + 0xb8) - iVar7;\n    param_2[10] = (iVar13 + 0xb4) - iVar7;\n    param_2[0x2d] = 0x8;\n    *(param_2 + 0xbb) = 1;\n    return 0;\n}\n",
        "token_count": 8626
    },
    "0043a380": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a380(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint *in_EAX;\n    char *pcVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint extraout_ECX;\n    uint *puVar8;\n    ulong uVar9;\n    uint auStack428 [38];\n    uint uStack276;\n    uint uStack272;\n    uint uStack264;\n    uint uStack204;\n    int32_t iStack176;\n    uint uStack160;\n    uint auStack156 [4];\n    uint *puStack140;\n    uint32_t uStack60;\n    char acStack48 [4];\n    char cStack44;\n    \n    puVar7 = in_EAX;\n    puVar8 = auStack156;\n    for (iVar6 = 0x20; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar8 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    if ((((uStack60 & 0x40000000) == 0) || (cStack44 == '\\0')) && (puStack140 == NULL)) {\n        if (*0x56b3f8 == '\\x04') {\n            if ((uStack60 & 0x40000000) != 0) {\n                cStack44 = '\\0';\n            }\n            puStack140 = &uStack160;\n            uStack160 = in_EAX[0x12];\n            goto code_r0x0043a3c2;\n        }\n    }\n    else {\ncode_r0x0043a3c2:\n        if ((*(in_EAX + 99) & 0x40) != 0) {\n            *(in_EAX + 0x1c) = 0;\n        }\n        in_EAX[4] = 0;\n        if (*(param_2 + 0xa0) != 1) {\n            if (*(param_2 + 0xa0) == 2) {\n                pcVar4 = *(param_2 + 0x9c);\n                do {\n                    cVar1 = *pcVar4;\n                    pcVar4 = pcVar4 + 1;\n                } while (cVar1 < '\\0');\n                iStack176 = fcn.00439d00();\n                goto code_r0x0043a471;\n            }\n            uVar9 = sub.msvcrt.dll_abort();\n            auStack428[0] = uVar9 >> 0x20;\n            puVar8 = uVar9;\n            puVar7 = puVar8;\n            for (iVar6 = 0x20; iVar6 != 0; iVar6 = iVar6 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            puVar8[0x18] = 0x40000000;\n            puVar8[0x13] = uStack204;\n            iVar6 = fcn.004396e0();\n            pcVar3 = _sym.imp.KERNEL32.dll_Sleep;\n            if (iVar6 == 0) {\n                if (*0x515a34 == 0) {\n                    if (*0x56b3f4 == '\\0') {\n                        *0x56b3f4 = '\\x04';\n                        *0x56b3f6 = 4;\n                        *0x56b3f5 = 4;\n                        *0x56b3f7 = 4;\n                        *0x56b3fa = 4;\n                        *0x56b3fb = 4;\n                        *0x56b3f9 = 4;\n                        *0x56b3f8 = '\\x04';\n                        *0x56b3ff = 0xc;\n                        *0x56b400 = 0xc;\n                        *0x56b401 = 0xc;\n                        *0x56b402 = 0xc;\n                        *0x56b403 = 0xc;\n                        *0x56b404 = 0xc;\n                        *0x56b3fd = 4;\n                        *0x56b3fc = 4;\n                    }\n                }\n                else if (*0x515a38 == 0) {\n                    LOCK();\n                    *0x515a3c = *0x515a3c + 1;\n                    if (*0x515a3c == 0) {\n                        *0x56b3f4 = '\\x04';\n                        *0x56b3f6 = 4;\n                        *0x56b3f5 = 4;\n                        *0x56b3f7 = 4;\n                        *0x56b3fa = 4;\n                        *0x56b3fb = 4;\n                        *0x56b3f9 = 4;\n                        *0x56b3f8 = '\\x04';\n                        *0x56b3ff = 0xc;\n                        *0x56b400 = 0xc;\n                        *0x56b401 = 0xc;\n                        *0x56b402 = 0xc;\n                        *0x56b403 = 0xc;\n                        *0x56b404 = 0xc;\n                        *0x56b3fd = 4;\n                        *0x56b3fc = 4;\n                        *0x515a38 = 1;\n                    }\n                    else {\n                        do {\n                            (*pcVar3)(0);\n                        } while (*0x515a38 == 0);\n                    }\n                }\n                if (*0x56b3f8 == '\\x04') {\n                    if ((*(puVar8 + 99) & 0x40) != 0) {\n                        *(puVar8 + 0x1c) = 0;\n                    }\n                    uStack264 = 1;\n                    puVar8[4] = auStack428;\n                    uStack272 = 4;\n                    uStack276 = 0;\n                    fcn.0043a380();\n                    puVar8[0x13] = extraout_ECX;\n                    return;\n                }\n            }\n            goto code_r0x004014e0;\n        }\n        iVar6 = *(param_2 + 0x98);\n        if (iVar6 < 0x12) {\n            puVar7 = auStack156[iVar6];\n            if (((uStack60 & 0x40000000) == 0) || (acStack48[iVar6] == '\\0')) {\n                if (*(iVar6 + 0x56b3f4) != '\\x04') goto code_r0x004c5e6b;\n                puVar7 = *puVar7;\n            }\n            iStack176 = puVar7 + *(param_2 + 0x94);\ncode_r0x0043a471:\n            iVar6 = 0;\n            in_EAX[0x12] = iStack176;\n            do {\n                if (*(param_2 + 4 + iVar6 * 8) < 6) {\n    // WARNING: Could not recover jumptable at 0x0043a48b. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (6 cases) at 0x5271c0\n                    (**(*(param_2 + 4 + iVar6 * 8) * 4 + 0x5271c0))();\n                    return;\n                }\n                iVar6 = iVar6 + 1;\n            } while (iVar6 != 0x12);\n            uVar5 = in_EAX[0x18] & 0x7fffffff;\n            if (*(param_2 + 0xbb) != '\\0') {\n                uVar5 = in_EAX[0x18] | 0x80000000;\n            }\n            in_EAX[0x18] = uVar5;\n            return;\n        }\n    }\ncode_r0x004c5e6b:\n    sub.msvcrt.dll_abort();\ncode_r0x004014e0:\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar6 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar6 == 0) {\n        *0x4ce004 = 0x43c7d0;\n        pcVar3 = 0x43c580;\n    }\n    else {\n        *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar6, \"__register_frame_info\");\n        *0x4ce004 = (*pcVar2)(iVar6, \"__deregister_frame_info\");\n    }\n    if (pcVar3 != NULL) {\n        (*pcVar3)(0x52e0f8, 0x56b01c);\n    }\n    fcn.004014c0(fcn.00401590);\n    return;\n}\n",
        "token_count": 2108
    },
    "0043aac0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043aac0(uint param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t in_EAX;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    uint auStack32 [4];\n    \n    if ((((*(param_2 + 0x60) & 0x40000000) == 0) || (*(param_2 + 0x70) == '\\0')) && (*(param_2 + 0x10) == 0)) {\n        if (*0x56b3f8 != '\\x04') goto code_r0x004014e0;\n        if ((*(param_2 + 0x60) & 0x40000000) != 0) {\n            *(param_2 + 0x70) = 0;\n        }\n        *(param_2 + 0x10) = auStack32;\n        auStack32[0] = *(param_2 + 0x48);\n    }\n    iVar7 = 0;\n    do {\n        while( true ) {\n            puVar5 = *(in_EAX + iVar7 * 4);\n            puVar8 = *(param_2 + iVar7 * 4);\n            if (*(in_EAX + 0x6c + iVar7) != '\\0') goto code_r0x004014e0;\n            if (*(param_2 + 0x6c + iVar7) == '\\0') break;\n            if (puVar5 != NULL) {\n                if (*(iVar7 + 0x56b3f4) != '\\x04') goto code_r0x004014e0;\n                *puVar5 = puVar8;\n            }\ncode_r0x0043ab03:\n            iVar7 = iVar7 + 1;\n            if (iVar7 == 0x11) goto code_r0x0043aba0;\n        }\n        if ((puVar5 == NULL || puVar8 == NULL) || (puVar5 == puVar8)) goto code_r0x0043ab03;\n        uVar1 = *(iVar7 + 0x56b3f4);\n        uVar4 = uVar1;\n        if (uVar4 < 4) {\n            if ((uVar4 != 0) && (*puVar5 = *puVar8,  (uVar1 & 2) != 0)) {\n                *(puVar5 + (uVar4 - 2)) = *(puVar8 + (uVar4 - 2));\n            }\n            goto code_r0x0043ab03;\n        }\n        iVar7 = iVar7 + 1;\n        *puVar5 = *puVar8;\n        *(puVar5 + (uVar4 - 4)) = *(puVar8 + (uVar4 - 4));\n        iVar6 = puVar5 - (puVar5 + 1 & 0xfffffffc);\n        puVar8 = puVar8 - iVar6;\n        puVar5 = puVar5 + 1 & 0xfffffffc;\n        for (uVar4 = iVar6 + uVar4 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puVar8;\n            puVar8 = puVar8 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    } while (iVar7 != 0x11);\ncode_r0x0043aba0:\n    iVar7 = 0;\n    if (((*(in_EAX + 99) & 0x40) != 0) && (*(in_EAX + 0x70) != '\\0')) {\n        return iVar7;\n    }\n    if (*(in_EAX + 0x10) == 0) {\n        puVar5 = *(param_2 + 0x10);\n        if (((*(param_2 + 99) & 0x40) == 0) || (*(param_2 + 0x70) == '\\0')) {\n            if (*0x56b3f8 != '\\x04') {\ncode_r0x004014e0:\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                iVar7 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n                if (iVar7 == 0) {\n                    *0x4ce004 = 0x43c7d0;\n                    pcVar3 = 0x43c580;\n                }\n                else {\n                    *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n                    pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n                    pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar7, \"__register_frame_info\");\n                    *0x4ce004 = (*pcVar2)(iVar7, \"__deregister_frame_info\");\n                }\n                if (pcVar3 != NULL) {\n                    (*pcVar3)(0x52e0f8, 0x56b01c);\n                }\n                iVar7 = fcn.004014c0(fcn.00401590);\n                return iVar7;\n            }\n            puVar5 = *puVar5;\n        }\n        iVar7 = puVar5 + (*(param_2 + 0x68) - *(in_EAX + 0x48));\n    }\n    return iVar7;\n}\n",
        "token_count": 1288
    },
    "0043b6a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar fcn.0043b6a0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char cVar4;\n    char *pcVar5;\n    uchar auStack16 [8];\n    \n    iVar1 = sub.msvcrt.dll_strlen(in_EAX + 9);\n    pcVar2 = in_EAX + 10 + iVar1;\n    if (3 < *(in_EAX + 8)) {\n        if (*pcVar2 != '\\x04') {\n            return -1;\n        }\n        if (pcVar2[1] != '\\0') {\n            return -1;\n        }\n        pcVar2 = pcVar2 + 2;\n    }\n    if (*(in_EAX + 9) != 'z') {\n        return '\\0';\n    }\n    do {\n        pcVar5 = pcVar2 + 1;\n        if (-1 < *pcVar2) break;\n        pcVar3 = pcVar2 + 1;\n        pcVar5 = pcVar2 + 2;\n        pcVar2 = pcVar2 + 2;\n    } while (*pcVar3 < '\\0');\n    do {\n        pcVar2 = pcVar5;\n        pcVar5 = pcVar2 + 1;\n    } while (*pcVar2 < '\\0');\n    if (*(in_EAX + 8) == 1) {\n        pcVar2 = pcVar2 + 2;\n    }\n    else {\n        do {\n            pcVar2 = pcVar5 + 1;\n            cVar4 = *pcVar5;\n            pcVar5 = pcVar2;\n        } while (cVar4 < '\\0');\n    }\n    pcVar5 = in_EAX + 10;\n    do {\n        pcVar3 = pcVar2 + 1;\n        cVar4 = *pcVar2;\n        pcVar2 = pcVar3;\n    } while (cVar4 < '\\0');\n    cVar4 = *(in_EAX + 10);\n    while (cVar4 != 'R') {\n        while (cVar4 != 'P') {\n            if (cVar4 != 'L') {\n                return '\\0';\n            }\n            pcVar5 = pcVar5 + 1;\n            cVar4 = *pcVar5;\n            pcVar3 = pcVar3 + 1;\n            if (cVar4 == 'R') goto code_r0x0043b756;\n        }\n        pcVar5 = pcVar5 + 1;\n        pcVar3 = fcn.0043b4f0(auStack16);\n        cVar4 = *pcVar5;\n    }\ncode_r0x0043b756:\n    return *pcVar3;\n}\n",
        "token_count": 601
    },
    "0043d0c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0043d0c0(uint16_t *param_1, uint32_t *param_2, uint32_t param_3, uint32_t *param_4, int32_t param_5, \n                 uint32_t param_6)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t auStack16 [2];\n    \n    if (param_2 == NULL) {\n        return 0;\n    }\n    if (param_3 == 0) {\n        return 0xfffffffe;\n    }\n    uVar1 = *param_2;\n    auStack16[0] = *param_4;\n    *param_4 = 0;\n    if (uVar1 == 0) {\n        *param_1 = 0;\n        return 0;\n    }\n    if (param_6 < 2) {\ncode_r0x0043d182:\n        if (param_5 == 0) {\n            *param_1 = *param_2;\n            return 1;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(param_5, 8, param_2, 1, param_1, 1);\n        if (iVar2 != 0) {\n            return 1;\n        }\n    }\n    else {\n        if (auStack16[0] == '\\0') {\n            iVar2 = (*_sym.imp.KERNEL32.dll_IsDBCSLeadByteEx)(param_5, uVar1);\n            if (iVar2 == 0) goto code_r0x0043d182;\n            if (param_3 < 2) {\n                *param_4 = *param_2;\n                return 0xfffffffe;\n            }\n        }\n        else {\n            auStack16[0]._0_2_ = CONCAT11(uVar1, auStack16[0]);\n            auStack16[0] = auStack16[0] & 0xffff0000 | auStack16[0];\n            param_2 = auStack16;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(param_5, 8, param_2, 2, param_1, 1);\n        if (iVar2 != 0) {\n            return 2;\n        }\n    }\n    puVar3 = sub.msvcrt.dll__errno();\n    *puVar3 = 0x2a;\n    return 0xffffffff;\n}\n",
        "token_count": 558
    },
    "0043d410": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint8_t * __cdecl fcn.0043d410(uint8_t *arg_8h, float10 *arg_ch)\n\n{\n    float10 fVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint8_t **ppuVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    uint32_t uVar10;\n    uint8_t *puVar11;\n    uint8_t *puVar12;\n    uint *puVar13;\n    uint16_t uVar14;\n    uint32_t uVar15;\n    uint16_t *apuStack192 [2];\n    float10 *pfStack184;\n    uint16_t *puStack180;\n    uint32_t auStack176 [6];\n    uint32_t var_94h;\n    uint *var_90h;\n    int32_t var_8ch;\n    uint32_t var_88h;\n    int32_t var_84h;\n    uint32_t var_80h;\n    uint32_t var_7ch;\n    uint32_t var_78h;\n    ushort var_72h;\n    uint32_t var_70h;\n    uint32_t var_6ch;\n    uint8_t *var_68h;\n    uint *var_64h;\n    int32_t var_60h;\n    uint8_t *var_5ch;\n    uint var_4eh;\n    uint var_4ah;\n    uint var_46h;\n    uint var_42h;\n    uint var_3eh;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint16_t var_28h;\n    uint var_ch;\n    \n    apuStack192[0] = 0x43d424;\n    ppuVar5 = sub.msvcrt.dll_localeconv();\n    apuStack192[1] = arg_8h;\n    var_70h = var_70h & 0xffffff00 | **ppuVar5;\n    apuStack192[0] = 0x43d434;\n    iVar6 = sub.msvcrt.dll_strlen();\n    var_5ch = iVar6 + 2;\n    apuStack192[0] = 0x43d445;\n    iVar6 = fcn.004386a0();\n    iVar6 = -iVar6;\n    var_68h = &fcn.0043d410::var_94h + iVar6 + 3 & 0xfffffff0;\n    puVar7 = arg_8h;\n    while( true ) {\n        var_60h = puVar7 - arg_8h;\n        uVar3 = *puVar7;\n        *(&stack0xffffff44 + iVar6) = uVar3;\n        *(&stack0xffffff40 + iVar6) = 0x43d46c;\n        var_84h = sub.msvcrt.dll_isspace();\n        if (var_84h == 0) break;\n        puVar7 = puVar7 + 1;\n    }\n    puVar12 = var_68h;\n    if (0 < var_5ch) {\n        *var_68h = uVar3;\n        puVar12 = var_68h + 1;\n        if (uVar3 != 0) {\n            var_5ch = puVar7 + var_5ch;\n            puVar11 = var_68h + 1;\n            do {\n                puVar7 = puVar7 + 1;\n                puVar12 = puVar11;\n                if (puVar7 == var_5ch) break;\n                uVar3 = *puVar7;\n                *puVar11 = uVar3;\n                puVar12 = puVar11 + 1;\n                puVar11 = puVar11 + 1;\n            } while (uVar3 != 0);\n        }\n    }\n    *puVar12 = 0;\n    if (*var_68h == 0x2d) {\n        var_72h = 0xffff;\n        var_5ch = var_68h + 1;\n    }\n    else {\n        var_72h = 0;\n        var_5ch = var_68h;\n        if (*var_68h == 0x2b) {\n            var_5ch = var_68h + 1;\n        }\n    }\n    puVar12 = var_5ch;\n    *(&stack0xffffff4c + iVar6) = 3;\n    *(&stack0xffffff44 + iVar6) = 0x527260;\n    *(&stack0xffffff48 + iVar6) = puVar12;\n    *(&stack0xffffff40 + iVar6) = 0x43d4eb;\n    iVar8 = sub.msvcrt.dll__strnicmp();\n    puVar7 = var_5ch;\n    if (iVar8 == 0) {\n        *(&stack0xffffff4c + iVar6) = 5;\n        *(&stack0xffffff44 + iVar6) = \"INITY\";\n        *(&stack0xffffff48 + iVar6) = puVar12 + 3;\n        *(&stack0xffffff40 + iVar6) = 0x43d50f;\n        iVar8 = sub.msvcrt.dll__strnicmp();\n        var_4ah._0_2_ = 0;\n        var_4ah._2_2_ = 0;\n        var_46h._0_2_ = 0;\n        var_46h._2_2_ = 0;\n        puVar7 = puVar12 + 3;\n        if (iVar8 == 0) {\n            puVar7 = puVar12 + 8;\n        }\n        *(&stack0xffffff44 + iVar6) = &fcn.0043d410::var_4eh;\n        var_3eh._0_2_ = 0;\n        var_42h._0_2_ = 0;\n        var_42h._2_2_ = 0;\n        var_4eh._2_2_ = 0x7fff;\n        var_4eh._0_2_ = var_72h;\n        *(&stack0xffffff48 + iVar6) = arg_ch;\n        *(&stack0xffffff40 + iVar6) = 0x43d550;\n        fcn.004410b0();\n        var_5ch = puVar7;\n        goto code_r0x0043d550;\n    }\n    *(&stack0xffffff4c + iVar6) = 3;\n    *(&stack0xffffff44 + iVar6) = 0x52726a;\n    *(&stack0xffffff48 + iVar6) = puVar7;\n    *(&stack0xffffff40 + iVar6) = 0x43d57f;\n    iVar8 = sub.msvcrt.dll__strnicmp();\n    if (iVar8 == 0) {\n        puVar7 = puVar7 + 3;\n        var_4eh._2_2_ = 0x7fff;\n        var_4ah._0_2_ = 0;\n        var_4ah._2_2_ = 0xc000;\n        var_46h._0_2_ = 0;\n        var_46h._2_2_ = 0;\n        var_42h._0_2_ = 0;\n        var_42h._2_2_ = 0;\n        var_3eh._0_2_ = 0;\ncode_r0x0043d5a2:\n        var_42h._2_2_ = 0;\n        var_42h._0_2_ = 0;\n        var_46h._2_2_ = 0;\n        var_46h._0_2_ = 0;\n        var_4ah._0_2_ = 0;\n        var_3eh._0_2_ = 0;\n        var_4eh._0_2_ = var_72h;\n        *(&stack0xffffff48 + iVar6) = arg_ch;\n        *(&stack0xffffff44 + iVar6) = &fcn.0043d410::var_4eh;\n        *(&stack0xffffff40 + iVar6) = 0x43d5bc;\n        fcn.004410b0();\n        var_5ch = puVar7;\n        goto code_r0x0043d550;\n    }\n    var_4eh._0_2_ = 0;\n    var_4eh._2_2_ = 0;\n    var_4ah._0_2_ = 0;\n    var_4ah._2_2_ = 0;\n    var_46h._0_2_ = 0;\n    var_46h._2_2_ = 0;\n    var_42h._0_2_ = 0;\n    var_42h._2_2_ = 0;\n    var_3eh._0_2_ = 0;\n    uVar3 = *var_5ch;\n    if (uVar3 == 0x30) {\n        do {\n            var_5ch = var_5ch + 1;\n            uVar3 = *var_5ch;\n        } while (uVar3 == 0x30);\n        var_94h = 1;\n    }\n    else {\n        var_94h = 0;\n    }\n    var_80h = 0;\n    var_78h = 0;\n    var_88h = 0;\n    var_7ch = 0;\n    var_6ch = 0;\ncode_r0x0043d67e:\n    var_64h = uVar3 - 0x30;\n    if (var_64h < 0xa) {\n        if (var_4ah == 0) {\n            var_7ch = (var_7ch + 1) - (var_6ch == 0);\n            uVar15 = 0;\n            puVar9 = &fcn.0043d410::var_3eh;\n            do {\n                if (*puVar9 < 0) {\n                    uVar15 = uVar15 | 1;\n                }\n                uVar14 = *puVar9 * 2;\n                if ((uVar15 & 2) != 0) {\n                    uVar14 = uVar14 | 1;\n                }\n                puVar13 = puVar9 + -2;\n                uVar15 = uVar15 * 2;\n                *puVar9 = uVar14;\n                puVar9 = puVar13;\n            } while (puVar13 != &fcn.0043d410::var_4eh + 2);\n            iVar8 = &fcn.0043d410::var_3eh + 2;\n            var_2ch._0_2_ = 0;\n            uVar15 = 0;\n            var_8ch = iVar8;\n            var_90h = &fcn.0043d410::var_2ch;\n            stack0xffffffc0 = CONCAT22(var_4eh._2_2_, var_4eh);\n            var_38h = var_4ah._2_2_ << 0x10;\n            var_34h = CONCAT22(var_46h._2_2_, var_46h);\n            var_30h = CONCAT22(var_42h._2_2_, var_42h);\n            uVar14 = 0;\n            puVar9 = &fcn.0043d410::var_2ch;\n            while( true ) {\n                if (uVar14 < 0) {\n                    uVar15 = uVar15 | 1;\n                }\n                uVar4 = uVar14 * 2;\n                if ((uVar15 & 2) != 0) {\n                    uVar4 = uVar14 * 2 | 1;\n                }\n                puVar13 = puVar9 + -2;\n                uVar15 = uVar15 * 2;\n                *puVar9 = uVar4;\n                puVar9 = var_90h;\n                uVar14 = var_4ah;\n                if (puVar13 == &stack0xffffffc2) break;\n                uVar14 = *puVar13;\n                puVar9 = puVar13;\n            }\n            do {\n                if (*puVar9 < 0) {\n                    uVar14 = uVar14 | 1;\n                }\n                uVar4 = *puVar9 * 2;\n                if ((uVar14 & 2) != 0) {\n                    uVar4 = uVar4 | 1;\n                }\n                puVar13 = puVar9 + -2;\n                *puVar9 = uVar4;\n                puVar9 = puVar13;\n                uVar14 = uVar14 * 2;\n            } while (puVar13 != &stack0xffffffc2);\n            *(&stack0xffffff48 + iVar6) = &fcn.0043d410::var_4eh;\n            *(&stack0xffffff44 + iVar6) = iVar8;\n            *(&stack0xffffff40 + iVar6) = 0x43d79d;\n            fcn.00440cc0();\n            stack0xffffffc0 = 0;\n            var_38h = 0;\n            var_34h = 0;\n    // WARNING: Ignoring partial resolution of indirect\n            var_30h = 0;\n            var_2ch._0_2_ = 0;\n            *(&stack0xffffff44 + iVar6) = iVar8;\n            var_30h = CONCAT22(var_64h._0_2_, var_30h);\n            *(&stack0xffffff48 + iVar6) = &fcn.0043d410::var_4eh;\n            *(&stack0xffffff40 + iVar6) = 0x43d7d5;\n            fcn.00440cc0();\n        }\n        else {\n            var_88h = var_88h | var_64h;\n            var_7ch = var_7ch - (var_6ch == 0);\n        }\n        var_80h = var_80h + 1;\n        var_78h = var_78h | var_64h;\ncode_r0x0043d674:\n        var_5ch = var_5ch + 1;\n        uVar3 = *var_5ch;\n        goto code_r0x0043d67e;\n    }\n    if (var_70h == uVar3) {\n        if (var_6ch != 0) goto code_r0x0043d9b4;\n        var_6ch = 1;\n        goto code_r0x0043d674;\n    }\n    var_6ch = var_94h | var_80h;\n    if ((uVar3 & 0xdf) != 0x45) goto code_r0x0043d7f7;\n    if ((var_94h | var_80h) == 0) {\n        var_84h = 0;\n        goto code_r0x0043d7f7;\n    }\n    uVar3 = var_5ch[1];\n    if (uVar3 == 0x2d) {\n        iVar8 = -1;\n        puVar7 = var_5ch + 2;\n        uVar3 = var_5ch[2];\n    }\n    else {\n        puVar7 = var_5ch + 1;\n        iVar8 = 1;\n    }\n    if (uVar3 == 0x2b) {\n        uVar3 = puVar7[1];\n        puVar7 = puVar7 + 1;\n    }\n    if (9 < uVar3 - 0x30) goto code_r0x0043d7f7;\n    do {\n        if (var_84h < 0x1372) {\n            var_84h = uVar3 + -0x30 + var_84h * 10;\n        }\n        puVar7 = puVar7 + 1;\n        uVar3 = *puVar7;\n    } while (uVar3 - 0x30 < 10);\n    if (iVar8 == -1) {\n        if (0x1371 < var_84h) {\n            var_4eh._2_2_ = 0;\n            var_4ah._0_2_ = 0;\n            var_4ah._2_2_ = 0;\n            var_46h._0_2_ = 0;\n            var_46h._2_2_ = 0;\n            var_42h._0_2_ = 0;\n            var_42h._2_2_ = 0;\n            var_3eh._0_2_ = 0;\n            var_4eh._0_2_ = var_72h;\n            *(&stack0xffffff48 + iVar6) = arg_ch;\n            *(&stack0xffffff44 + iVar6) = &fcn.0043d410::var_4eh;\n            *(&stack0xffffff40 + iVar6) = 0x43dd87;\n            fcn.004410b0();\n            var_5ch = puVar7;\n            if (var_78h == 0) goto code_r0x0043d550;\n            goto code_r0x0043d972;\n        }\n        var_5ch = puVar7;\n        var_84h = -var_84h;\ncode_r0x0043d7f7:\n        var_70h = var_84h - var_7ch;\n        if (var_84h - var_7ch < 1) {\n            *(&stack0xffffff44 + iVar6) = &fcn.0043d410::var_4eh;\n            *(&stack0xffffff40 + iVar6) = 0x43dc6f;\n            iVar8 = fcn.00441320();\n            if (iVar8 < 0x51) {\n                *(&stack0xffffff58 + iVar6) = 0x50;\n                *(&stack0xffffff54 + iVar6) = 0x40;\n                *(&stack0xffffff4c + iVar6) = 0;\n                *(&stack0xffffff50 + iVar6) = 0x404e - iVar8;\n                *(&stack0xffffff48 + iVar6) = var_88h;\n                *(&stack0xffffff44 + iVar6) = &fcn.0043d410::var_4eh;\n                *(&stack0xffffff40 + iVar6) = 0x43dcb2;\n                fcn.004414d0();\n                var_7ch = var_4eh._2_2_;\n                if (var_70h != 0) {\n                    if (var_70h < -0x1000) {\n                        uVar15 = &fcn.0043d410::var_2ch + 2;\n                        *(&stack0xffffff44 + iVar6) = 0x527280;\n                        *(&stack0xffffff48 + iVar6) = uVar15;\n                        var_80h = uVar15;\n                        *(&stack0xffffff40 + iVar6) = 0x43dd0f;\n                        fcn.00440c00();\n                        uVar2 = var_7ch;\n                        uVar10 = var_28h;\n                        *(&stack0xffffff44 + iVar6) = uVar15;\n                        *(&stack0xffffff48 + iVar6) = &fcn.0043d410::var_4eh;\n                        *(&stack0xffffff40 + iVar6) = 0x43dd27;\n                        fcn.00440d40();\n                        var_84h = -1;\n                        var_7ch = (uVar2 - uVar10) + 0x3fff;\n                        var_70h = -var_70h - 0x1000;\n                    }\n                    else {\n                        var_70h = -var_70h;\n                        var_84h = -1;\n                        var_80h = &fcn.0043d410::var_2ch + 2;\n                    }\n                    goto code_r0x0043dabc;\n                }\n                goto code_r0x0043da37;\n            }\ncode_r0x0043d935:\n            var_4eh._2_2_ = 0;\n            var_4ah._0_2_ = 0;\n            var_4ah._2_2_ = 0;\n            var_46h._0_2_ = 0;\n            var_46h._2_2_ = 0;\n            var_42h._0_2_ = 0;\n            var_42h._2_2_ = 0;\n            var_3eh._0_2_ = 0;\n        }\n        else {\n            if (var_4ah == 0) {\n                var_64h = &fcn.0043d410::var_2ch;\n                do {\n                    uVar15 = 0;\n                    stack0xffffffc0 = CONCAT22(var_4eh._2_2_, var_4eh);\n                    var_38h = CONCAT22(var_4ah._2_2_, var_4ah);\n                    var_34h = CONCAT22(var_46h._2_2_, var_46h);\n                    var_30h = CONCAT22(var_42h._2_2_, var_42h);\n                    var_2ch._0_2_ = 0;\n                    uVar14 = 0;\n                    puVar9 = var_64h;\n                    while( true ) {\n                        if (uVar14 < 0) {\n                            uVar15 = uVar15 | 1;\n                        }\n                        uVar4 = uVar14 * 2;\n                        if ((uVar15 & 2) != 0) {\n                            uVar4 = uVar14 * 2 | 1;\n                        }\n                        puVar13 = puVar9 - 2;\n                        uVar15 = uVar15 * 2;\n                        *puVar9 = uVar4;\n                        if (puVar13 == &stack0xffffffc2) break;\n                        uVar14 = *puVar13;\n                        puVar9 = puVar13;\n                    }\n                    uVar15 = 0;\n                    puVar9 = var_64h;\n                    do {\n                        if (*puVar9 < 0) {\n                            uVar15 = uVar15 | 1;\n                        }\n                        uVar14 = *puVar9 * 2;\n                        if ((uVar15 & 2) != 0) {\n                            uVar14 = uVar14 | 1;\n                        }\n                        puVar13 = puVar9 - 2;\n                        uVar15 = uVar15 * 2;\n                        *puVar9 = uVar14;\n                        puVar9 = puVar13;\n                    } while (puVar13 != &stack0xffffffc2);\n                    *(&stack0xffffff48 + iVar6) = &fcn.0043d410::var_3eh + 2;\n                    *(&stack0xffffff44 + iVar6) = &fcn.0043d410::var_4eh;\n                    *(&stack0xffffff40 + iVar6) = 0x43d8b7;\n                    fcn.00440cc0();\n                    uVar15 = 0;\n                    puVar9 = var_64h;\n                    do {\n                        if (*puVar9 < 0) {\n                            uVar15 = uVar15 | 1;\n                        }\n                        uVar14 = *puVar9 * 2;\n                        if ((uVar15 & 2) != 0) {\n                            uVar14 = uVar14 | 1;\n                        }\n                        puVar13 = puVar9 - 2;\n                        uVar15 = uVar15 * 2;\n                        *puVar9 = uVar14;\n                        puVar9 = puVar13;\n                    } while (puVar13 != &stack0xffffffc2);\n                    if (var_38h != 0) goto code_r0x0043d921;\n                    var_70h = var_70h - 1;\n                    var_3eh._0_2_ = 0;\n                    var_4eh._0_2_ = stack0xffffffc0;\n                    var_4eh._2_2_ = stack0xffffffc0 >> 0x10;\n                    var_4ah._2_2_ = var_38h >> 0x10;\n                    var_46h._0_2_ = var_34h;\n                    var_46h._2_2_ = var_34h >> 0x10;\n                    var_42h._0_2_ = var_30h;\n                    var_42h._2_2_ = var_30h >> 0x10;\n                    var_4ah._0_2_ = var_38h;\n                } while (var_70h != 0);\n                *(&stack0xffffff44 + iVar6) = &fcn.0043d410::var_4eh;\n                *(&stack0xffffff40 + iVar6) = 0x43d9ef;\n                iVar8 = fcn.00441320();\n                if (iVar8 < 0x51) {\n                    *(&stack0xffffff58 + iVar6) = 0x50;\n                    *(&stack0xffffff54 + iVar6) = 0x40;\n                    uVar15 = var_88h;\n                    *(&stack0xffffff4c + iVar6) = 0;\n                    *(&stack0xffffff50 + iVar6) = 0x404e - iVar8;\n                    *(&stack0xffffff48 + iVar6) = uVar15;\n                    *(&stack0xffffff44 + iVar6) = &fcn.0043d410::var_4eh;\n                    *(&stack0xffffff40 + iVar6) = 0x43da30;\n                    fcn.004414d0();\n                    var_7ch = var_4eh._2_2_;\n                    goto code_r0x0043da37;\n                }\n                goto code_r0x0043d935;\n            }\ncode_r0x0043d921:\n            *(&stack0xffffff44 + iVar6) = &fcn.0043d410::var_4eh;\n            *(&stack0xffffff40 + iVar6) = 0x43d92c;\n            iVar8 = fcn.00441320();\n            if (0x50 < iVar8) goto code_r0x0043d935;\n            *(&stack0xffffff58 + iVar6) = 0x50;\n            *(&stack0xffffff54 + iVar6) = 0x40;\n            uVar15 = var_88h;\n            *(&stack0xffffff4c + iVar6) = 0;\n            *(&stack0xffffff50 + iVar6) = 0x404e - iVar8;\n            *(&stack0xffffff48 + iVar6) = uVar15;\n            *(&stack0xffffff44 + iVar6) = &fcn.0043d410::var_4eh;\n            *(&stack0xffffff40 + iVar6) = 0x43daa5;\n            fcn.004414d0();\n            var_84h = 1;\n            var_7ch = var_4eh._2_2_;\n            var_80h = &fcn.0043d410::var_2ch + 2;\ncode_r0x0043dabc:\n            uVar2 = var_70h;\n            puVar9 = &fcn.0043d410::var_3eh + 2;\n            iVar8 = 0x527310;\n            uVar15 = 1;\n            stack0xffffffc0 = *0x52731c;\n            var_38h = *0x527320;\n            var_34h = *0x527324;\n            do {\n                if ((uVar2 & uVar15) != 0) {\n                    *(&stack0xffffff4c + iVar6) = puVar9;\n                    *(&stack0xffffff48 + iVar6) = puVar9;\n                    *(&stack0xffffff44 + iVar6) = iVar8;\n                    var_64h = puVar9;\n                    *(&stack0xffffff40 + iVar6) = 0x43db14;\n                    fcn.00441860();\n                    puVar9 = var_64h;\n                }\n                uVar10 = var_80h;\n                iVar8 = iVar8 + -0xc;\n                uVar15 = uVar15 * 2;\n            } while (iVar8 != 0x527274);\n            *(&stack0xffffff44 + iVar6) = puVar9;\n            *(&stack0xffffff48 + iVar6) = uVar10;\n            *(&stack0xffffff40 + iVar6) = 0x43db2a;\n            fcn.00440c00();\n            if (var_84h == -1) {\n                iVar8 = var_7ch - var_28h;\n                *(&stack0xffffff48 + iVar6) = &fcn.0043d410::var_4eh;\n                *(&stack0xffffff44 + iVar6) = var_80h;\n                *(&stack0xffffff40 + iVar6) = 0x43dc53;\n                var_70h = fcn.00440d40();\n                var_7ch = iVar8 + 0x3fff;\n            }\n            else {\n                iVar8 = var_28h + var_7ch;\n                *(&stack0xffffff48 + iVar6) = &fcn.0043d410::var_4eh;\n                *(&stack0xffffff44 + iVar6) = var_80h;\n                *(&stack0xffffff40 + iVar6) = 0x43db50;\n                var_70h = fcn.00440fa0();\n                var_7ch = iVar8 - 0x3ffe;\n            }\ncode_r0x0043da37:\n            uVar15 = var_7ch;\n            *(&stack0xffffff58 + iVar6) = 0x40;\n            *(&stack0xffffff54 + iVar6) = 0x40;\n            *(&stack0xffffff4c + iVar6) = 0;\n            *(&stack0xffffff50 + iVar6) = uVar15;\n            *(&stack0xffffff48 + iVar6) = var_70h;\n            *(&stack0xffffff44 + iVar6) = &fcn.0043d410::var_4eh;\n            *(&stack0xffffff40 + iVar6) = 0x43da68;\n            fcn.004414d0();\n        }\n        var_4eh._0_2_ = var_72h;\n        *(&stack0xffffff48 + iVar6) = arg_ch;\n        *(&stack0xffffff44 + iVar6) = &fcn.0043d410::var_4eh;\n        *(&stack0xffffff40 + iVar6) = 0x43d96b;\n        fcn.004410b0();\n        if (var_78h != 0) goto code_r0x0043d972;\n    }\n    else {\n        if (var_84h < 0x1372) {\n            var_5ch = puVar7;\n            goto code_r0x0043d7f7;\n        }\n        var_4eh._2_2_ = 0;\n        var_4ah._0_2_ = 0;\n        var_4ah._2_2_ = 0;\n        var_3eh._0_2_ = 0;\n        var_46h._0_2_ = 0;\n        var_46h._2_2_ = 0;\n        var_42h._0_2_ = 0;\n        var_42h._2_2_ = 0;\n        if (var_78h == 0) goto code_r0x0043d5a2;\n        var_4eh._2_2_ = 0x7fff;\n        var_4eh._0_2_ = var_72h;\n        *(&stack0xffffff48 + iVar6) = arg_ch;\n        *(&stack0xffffff44 + iVar6) = &fcn.0043d410::var_4eh;\n        *(&stack0xffffff40 + iVar6) = 0x43dc30;\n        fcn.004410b0();\n        var_5ch = puVar7;\ncode_r0x0043d972:\n        fVar1 = *arg_ch;\n        if ((fVar1 == 0) || (((fVar1 != 0) << 10 | (fVar1 == 0) << 0xe) == 0x500)) {\n            *(&stack0xffffff40 + iVar6) = 0x43d9ac;\n            puVar9 = sub.msvcrt.dll__errno();\n            *puVar9 = 0x22;\n        }\n    }\n    if (var_6ch == 0) {\n        return NULL;\n    }\ncode_r0x0043d550:\n    return var_5ch + (var_60h - var_68h);\ncode_r0x0043d9b4:\n    var_6ch = var_94h | var_80h;\n    goto code_r0x0043d7f7;\n}\n",
        "token_count": 7343
    },
    "0043e820": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall\nfcn.0043e820(uint32_t *param_1, uint32_t *param_2, uint param_3, uint32_t param_4, int32_t param_5, uint32_t *param_6)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    ulong *in_EAX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    ulong uVar9;\n    uint32_t uStack56;\n    uint32_t uStack52;\n    uint32_t uStack36;\n    uint32_t auStack32 [4];\n    \n    uVar9 = *in_EAX;\n    iVar4 = fcn.004470a0(uVar9, auStack32, &uStack36);\n    uVar7 = uVar9 >> 0x20;\n    uVar2 = *param_2;\n    uStack36 = uStack36 - uVar2;\n    auStack32[0] = auStack32[0] + uStack36;\n    if (uStack36 < 1) {\n        if (param_4 == 0) {\n            uVar5 = 0;\n            goto code_r0x0043e924;\n        }\n        uStack52 = 0;\n        uStack56 = 0;\n        if (uStack36 != 0) {\n            uVar7 = -uStack36;\n            iVar4 = fcn.00446c50(iVar4, uVar7);\n        }\n    }\n    else if (uVar2 == 0x35) {\n        uVar5 = 0;\n        if ((param_4 == 0) || (param_2[3] != 1)) goto code_r0x0043e924;\ncode_r0x0043eaaf:\n        uStack52 = fcn.00447420(iVar4, uStack36);\n        uVar9 = CONCAT44(uStack36, iVar4);\n        if (uStack52 == 0) {\n            fcn.00446080(iVar4);\n            uVar7 = uVar9 >> 0x20;\n            uStack56 = 0;\n        }\n        else {\ncode_r0x0043eb80:\n            fcn.00446080(uVar9);\n            uVar7 = uVar9 >> 0x20;\n            uStack56 = 0x10;\n        }\n    }\n    else if (param_5 == 1) {\n        uStack52 = fcn.00447420(iVar4, uStack36);\n        uVar9 = CONCAT44(uStack36, iVar4);\n        if (uStack52 != 0) goto code_r0x0043eb80;\ncode_r0x0043ebdd:\n        fcn.00446080(uVar9);\n        uVar7 = uVar9 >> 0x20;\n        uStack56 = 0;\n    }\n    else {\n        if (param_5 != 2) {\n            uVar5 = uStack36 - 1;\n            if (uVar5 == 0) {\n                uVar5 = 0;\n                if (param_4 == 0) goto code_r0x0043e924;\n                if ((*(iVar4 + 0x14) & 2) == 0) goto code_r0x0043eaaf;\n            }\n            else if ((*(iVar4 + 0x14 + (uVar5 >> 5) * 4) >> (uVar5 & 0x1f) & 1) == 0) {\n                uStack52 = fcn.00447420(iVar4, uStack36);\n                if (uStack52 != 0) {\n                    uVar7 = uStack36;\n                    fcn.00446080(iVar4, uStack36);\n                    uStack56 = 0x10;\n                    goto code_r0x0043e964;\n                }\n                uVar9 = CONCAT44(uStack36, iVar4);\n                goto code_r0x0043ebdd;\n            }\n        }\n        uStack52 = fcn.00447420(iVar4, uStack36);\n        uVar7 = uStack36;\n        fcn.00446080(iVar4, uStack36);\n        iVar4 = fcn.0043e780(iVar4, uVar7);\n        uVar5 = uVar2 & 0x1f;\n        if (uVar5 != 0) {\n            uVar5 = 0x20 - uVar5;\n        }\n        puVar1 = iVar4 + 0x10 + *(iVar4 + 0x10) * 4;\n        uVar3 = 0x1f;\n        if (*puVar1 != 0) {\n            for (; *puVar1 >> uVar3 == 0; uVar3 = uVar3 - 1) {\n            }\n        }\n        if (uVar5 == (uVar3 ^ 0x1f)) {\n            uStack56 = 0x20;\n        }\n        else {\n            if (uStack52 == 0) {\n                uStack52 = *(iVar4 + 0x14) & 1;\n            }\n            uVar7 = 1;\n            fcn.00446080(iVar4, 1);\n            uStack56 = 0x20;\n            auStack32[0] = auStack32[0] + 1;\n        }\n    }\ncode_r0x0043e964:\n    uVar5 = param_2[1];\n    if (auStack32[0] < uVar5) {\n        iVar8 = uVar5 - auStack32[0];\n        auStack32[0] = uVar5;\n        if ((uVar2 < iVar8) || (uVar5 = param_2[4],  uVar5 != 0)) {\n            *(iVar4 + 0x10) = 0;\n            uStack56 = 0;\n            *param_6 = 0x50;\n            uVar7 = uStack56;\n        }\n        else {\n            uVar3 = iVar8 - 1;\n            if ((0 < uVar3) && (uStack52 == 0)) {\n                uVar7 = uVar3;\n                uStack52 = fcn.00447420(iVar4, uVar3);\n            }\n            if ((uStack52 | param_4) == 0) goto code_r0x0043e924;\n            uVar7 = *(iVar4 + 0x14 + (uVar3 >> 5) * 4);\n            fcn.00446080(iVar4, iVar8);\n            *param_6 = 2;\n            if ((1 << (uVar3 & 0x1f) & uVar7) == 0) {\n                uVar7 = 0x50;\n                if (uStack52 == 0) {\n                    uVar7 = uStack56;\n                }\n            }\n            else {\n                iVar4 = fcn.0043e780(iVar4, iVar8);\n                uStack56 = 0x60;\n                uVar7 = uStack56;\n            }\n        }\n    }\n    else {\n        uVar7 = uStack56;\n        if (param_2[2] < auStack32[0]) {\n            auStack32[0] = param_2[2] + 1;\n            *param_6 = 0xa3;\n            puVar6 = sub.msvcrt.dll__errno();\n            uStack56 = 0;\n            *puVar6 = 0x22;\n            *(iVar4 + 0x10) = 0;\n            uVar7 = uStack56;\n        }\n    }\n    uStack56 = uVar7;\n    uVar5 = 1;\n    *param_1 = auStack32[0];\n    uVar7 = uVar2;\n    fcn.004473c0(param_3, uVar2, iVar4);\n    *param_6 = *param_6 | uStack56;\ncode_r0x0043e924:\n    fcn.004467d0(iVar4, uVar7);\n    return uVar5;\n}\n",
        "token_count": 1813
    },
    "0043ecc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0043ecc0(uint8_t *param_1, uint8_t **param_2, uint32_t *param_3, uint32_t *param_4, uint *param_5)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    double dVar3;\n    bool bVar4;\n    uint8_t **ppuVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint8_t *puVar8;\n    uint *puVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint *puVar17;\n    uint32_t uVar19;\n    uint8_t uVar20;\n    int32_t iVar21;\n    uint32_t uVar22;\n    uint32_t *puVar23;\n    int32_t *piVar24;\n    int32_t *piVar25;\n    uint32_t uVar26;\n    int32_t iVar27;\n    uint8_t *puVar28;\n    uint32_t uVar29;\n    int32_t iVar30;\n    uint32_t uVar31;\n    float10 fVar32;\n    bool bVar33;\n    uint32_t uVar34;\n    int32_t iVar35;\n    uint32_t uStack204;\n    uint8_t *puStack188;\n    uint32_t uStack184;\n    uint32_t uStack180;\n    double dStack172;\n    uint32_t uStack164;\n    uint32_t uStack160;\n    int32_t iStack156;\n    double dStack148;\n    int32_t iStack140;\n    uint32_t uStack128;\n    uint32_t uStack116;\n    uint32_t uStack104;\n    uint32_t uStack100;\n    int32_t iStack64;\n    uchar auStack60 [4];\n    uint32_t uStack56;\n    uint32_t uStack52;\n    uint32_t uStack48;\n    uint8_t *puStack44;\n    int32_t iStack40;\n    ulong uStack36;\n    uint *puVar18;\n    \n    ppuVar5 = sub.msvcrt.dll_localeconv();\n    puVar28 = *ppuVar5;\n    uVar6 = sub.msvcrt.dll_strlen(puVar28);\n    uStack56 = 0;\n    iStack40 = 0;\n    uStack36 = 0.0;\n    uVar34 = *param_3;\n    puStack44 = param_1;\n    uVar20 = *param_1;\n    if (uVar20 < 0x2e) {\ncode_r0x0043ed23:\n    // switch table (46 cases) at 0x52758c\n        switch(*(uVar20 * 4 + 0x52758c)) {\n        case 0x43ed30:\n            goto code_r0x0043ed30;\n        case 0x43ed70:\n            iStack140 = 0;\n            break;\n        case 0x43ee20:\n            goto code_r0x0043ee20;\n        case 0x43ee40:\n            goto code_r0x0043ee40;\n        case 0x43eeb0:\n            iStack140 = 1;\n        }\n        uVar20 = puStack44[1];\n        puStack44 = puStack44 + 1;\n        if (uVar20 == 0) {\ncode_r0x0043ed30:\n            if (param_2 == NULL) {\n                return 6;\n            }\n            *param_2 = param_1;\n            return 6;\n        }\n        goto joined_r0x0043ed99;\n    }\ncode_r0x0043ee40:\n    iStack140 = 0;\njoined_r0x0043ed99:\n    uStack180 = 0;\n    if (uVar20 != 0x30) {\ncode_r0x0043ed9f:\n        puStack188 = puStack44;\n        uVar19 = uVar20;\n        uVar16 = param_3[4];\n        if (uVar19 - 0x30 < 10) {\n            uStack204 = 0;\n            uStack164 = 0;\n            uVar26 = 0;\n            do {\n                puStack44 = puStack44 + 1;\n                if (uVar26 < 9) {\n                    uStack164 = (uVar19 - 0x30) + uStack164 * 10;\n                }\n                else if (uVar26 < 0x10) {\n                    uStack204 = (uVar19 - 0x30) + uStack204 * 10;\n                }\n                uVar20 = *puStack44;\n                uVar19 = uVar20;\n                uVar26 = uVar26 + 1;\n            } while (uVar19 - 0x30 < 10);\n        }\n        else {\n            uStack204 = 0;\n            uStack164 = 0;\n            uVar26 = 0;\n        }\n        uVar29 = uVar26;\n        if (*puVar28 == uVar20) {\n            if (puVar28[1] != 0) {\n                if (puVar28[1] == puStack44[1]) {\n                    puVar28 = puVar28 + 2;\n                    puVar8 = puStack44 + 2;\n                    do {\n                        uVar20 = *puVar28;\n                        if (uVar20 == 0) goto code_r0x0043f379;\n                        puVar28 = puVar28 + 1;\n                        uVar2 = *puVar8;\n                        puVar8 = puVar8 + 1;\n                    } while (uVar2 == uVar20);\n                }\n                goto code_r0x0043eed0;\n            }\n            puVar8 = puStack44 + 1;\ncode_r0x0043f379:\n            uVar19 = *puVar8;\n            puStack44 = puVar8;\n            if (uVar26 == 0) {\n                if (uVar19 == 0x30) {\n                    do {\n                        puStack44 = puStack44 + 1;\n                        uVar19 = *puStack44;\n                        uVar31 = puStack44 - puVar8;\n                    } while (uVar19 == 0x30);\n                }\n                else {\n                    uVar31 = 0;\n                }\n                if (uVar19 - 0x31 < 9) {\n                    uStack160 = uVar19 - 0x30;\n                    dStack172._0_4_ = uVar31 + 1;\n                    uVar29 = 1;\n                    puStack188 = puStack44;\n                    goto code_r0x00440670;\n                }\n                dStack172._0_4_ = 0;\n                uVar29 = 0;\n            }\n            else {\n                dStack172._0_4_ = 0;\n                uVar31 = 0;\n                while (uStack160 = uVar19 - 0x30,  uStack160 < 10) {\n                    uVar15 = uVar31 + 1;\n                    if (uStack160 != 0) {\n                        dStack172._0_4_ = dStack172._0_4_ + uVar15;\n                        uVar19 = uVar29;\n                        if (uVar15 != 1) {\n                            uVar19 = uVar31 + uVar29;\n                            do {\n                                if (uVar29 < 9) {\n                                    uStack164 = uStack164 * 10;\n                                }\n                                else if (uVar29 + 1 < 0x11) {\n                                    uStack204 = uStack204 * 10;\n                                }\n                                uVar29 = uVar29 + 1;\n                            } while (uVar19 != uVar29);\n                        }\n                        uVar29 = uVar19 + 1;\n                        if (uVar19 < 9) {\ncode_r0x00440670:\n                            uStack164 = uStack160 + uStack164 * 10;\n                            uVar15 = 0;\n                        }\n                        else {\n                            uVar15 = 0;\n                            if (uVar29 < 0x11) {\n                                uStack204 = uStack160 + uStack204 * 10;\n                            }\n                        }\n                    }\n                    uVar19 = puStack44[1];\n                    uVar31 = uVar15;\n                    puStack44 = puStack44 + 1;\n                }\n            }\n            bVar33 = true;\n        }\n        else {\ncode_r0x0043eed0:\n            uVar31 = 0;\n            dStack172._0_4_ = 0;\n            bVar33 = false;\n        }\n        puVar28 = puStack44;\n        if ((uVar19 & 0xffffffdf) == 0x45) {\n            if ((uVar29 | uVar31 | uStack180) != 0) {\n                param_1 = puStack44;\n                uVar20 = puStack44[1];\n                if (uVar20 == 0x2b) {\n                    bVar4 = false;\ncode_r0x0043f728:\n                    uVar20 = puStack44[2];\n                    puStack44 = puStack44 + 2;\n                }\n                else {\n                    if (uVar20 == 0x2d) {\n                        bVar4 = true;\n                        goto code_r0x0043f728;\n                    }\n                    bVar4 = false;\n                    puStack44 = puStack44 + 1;\n                }\n                uVar19 = uVar20;\n                puVar8 = puStack44;\n                if (uVar19 - 0x30 < 10) {\n                    while (uVar19 == 0x30) {\n                        uVar19 = puVar8[1];\n                        puVar8 = puVar8 + 1;\n                    }\n                    iVar7 = 0;\n                    puStack44 = puVar8;\n                    if (uVar19 - 0x31 < 9) {\n                        iVar7 = uVar19 - 0x30;\n                        puStack44 = puVar8 + 1;\n                        uVar19 = puVar8[1];\n                        if (uVar19 - 0x30 < 10) {\n                            puVar28 = puVar8 + 2;\n                            do {\n                                puStack44 = puVar28;\n                                iVar7 = (uVar19 - 0x30) + iVar7 * 10;\n                                uVar19 = *puStack44;\n                                puVar28 = puStack44 + 1;\n                            } while (uVar19 - 0x30 < 10);\n                        }\n                        if ((8 < puStack44 - puVar8) || (19999 < iVar7)) {\n                            iVar7 = 19999;\n                        }\n                        if (bVar4) {\n                            iVar7 = -iVar7;\n                        }\n                    }\n                }\n                else {\n                    iVar7 = 0;\n                    puStack44 = puVar28;\n                }\n                goto code_r0x0043eeee;\n            }\n            goto code_r0x0043f101;\n        }\n        iVar7 = 0;\n        puStack44 = puVar28;\ncode_r0x0043eeee:\n        if (uVar29 == 0) {\n            if ((uStack180 | uVar31) != 0) goto code_r0x0043f121;\n            if (!bVar33) {\n                if (uVar19 == 0x4e) {\ncode_r0x0043ef27:\n                    iVar7 = fcn.00447370(&puStack44, 0x527589);\n                    if (iVar7 != 0) {\n                        uStack56 = 4;\n                        *param_4 = param_3[2] + 1;\n                        if (*puStack44 != 0x28) goto code_r0x0043f121;\n                        uStack56 = fcn.00446250(&puStack44, param_3, param_5);\ncode_r0x0043efa7:\n                        *param_4 = param_3[2] + 1;\n                        goto code_r0x0043f121;\n                    }\n                }\n                else if (uVar19 < 0x4f) {\n                    if (uVar19 == 0x49) goto code_r0x004403a0;\n                }\n                else if (uVar19 == 0x69) {\ncode_r0x004403a0:\n                    iVar7 = fcn.00447370(&puStack44, 0x527580);\n                    if (iVar7 != 0) {\n                        puStack44 = puStack44 + -1;\n                        iVar7 = fcn.00447370(&puStack44, \"inity\");\n                        if (iVar7 == 0) {\n                            puStack44 = puStack44 + 1;\n                        }\n                        uStack56 = 3;\n                        goto code_r0x0043efa7;\n                    }\n                }\n                else if (uVar19 == 0x6e) goto code_r0x0043ef27;\n            }\ncode_r0x0043f101:\n            uStack56 = 6;\n            puStack44 = param_1;\n            goto code_r0x0043f121;\n        }\n        iVar7 = iVar7 - dStack172._0_4_;\n        uStack56 = 1;\n        uVar19 = param_3[3] & 3;\n        uStack128 = uVar19 - iStack140;\n        if ((uVar19 != 2) && (uStack128 = iStack140 + 1,  uVar19 != 3)) {\n            uStack128 = uVar19 == 0;\n        }\n        if (uVar26 == 0) {\n            uVar26 = uVar29;\n        }\n        uVar19 = 0x10;\n        if (uVar29 < 0x11) {\n            uVar19 = uVar29;\n        }\n        uStack36 = uStack164;\n        if (9 < uVar29) {\n            uStack36 = uStack204 + uStack36 * *(uVar19 * 8 + 0x5278d8);\n        }\n        iVar21 = iVar7;\n        if ((0x35 < uVar34) || (0xf < uVar29)) goto code_r0x0043f3e4;\n        if (iVar7 == 0) {\n            bVar33 = true;\ncode_r0x0043f306:\n            iVar21 = fcn.0043e820(param_5, bVar33, uStack128, &uStack56);\n            if (iVar21 != 0) goto code_r0x0043f121;\n            iVar21 = 0;\n        }\n        else if (iVar7 < 1) {\n            if (-0x17 < iVar7) {\n                uStack36 = uStack36 / *(iVar7 * -8 + 0x527920);\ncode_r0x00440344:\n                bVar33 = false;\n                goto code_r0x0043f306;\n            }\n        }\n        else {\n            if (iVar7 < 0x17) {\n                if (uStack36 == 0) {\n                    iVar21 = 0;\n                    for (uStack36._4_4_ = uStack36._4_4_ | 0x100000; (uStack36._4_4_ & 1) == 0;\n                        uStack36._4_4_ = uStack36._4_4_ >> 1 | 0x80000000) {\n                        iVar21 = iVar21 + 1;\n                    }\n                    iVar21 = 0x15 - iVar21;\n                }\n                else {\n                    iVar21 = 0;\n                    for (; (uStack36 & 1) == 0; uStack36._0_4_ = uStack36 >> 1 | 0x80000000) {\n                        iVar21 = iVar21 + 1;\n                    }\n                    iVar21 = 0x35 - iVar21;\n                }\n                bVar33 = *(iVar7 * 4 + 0x527660) + iVar21 < 0x36;\n                uStack36 = uStack36 * *(iVar7 * 8 + 0x527920);\n                goto code_r0x0043f306;\n            }\n            if (iVar7 <= 0x25 - uVar29) {\n                uStack36 = uStack36 * *((0xf - uVar29) * 8 + 0x527920) * *((iVar7 - (0xf - uVar29)) * 8 + 0x527920);\n                goto code_r0x00440344;\n            }\n        }\ncode_r0x0043f3e4:\n        uVar19 = (uVar29 - uVar19) + iVar21;\n        if (uVar19 < 1) {\n            uVar31 = uVar19;\n            if (uVar19 != 0) {\n                uVar19 = -uVar19;\n                if ((uVar19 & 0xf) != 0) {\n                    uStack36 = uStack36 / *((uVar19 & 0xf) * 8 + 0x527920);\n                }\n                uVar31 = uVar19 & 0xfffffff0;\n                if (uVar31 != 0) {\n                    uVar19 = uVar19 >> 4;\n                    if (uVar19 < 0x10) {\n                        iVar21 = 0;\n                    }\n                    else {\n                        uVar31 = uVar19 - 0x10;\n                        iVar21 = 0;\n                        do {\n                            uVar19 = uVar19 - 0x10;\n                            uStack36 = uStack36 & 0x800fffffffffffff | 0x3ff0000000000000;\n                            iVar21 = iVar21 + -0x3ff + (uStack36._4_4_ >> 0x14 & 0x7ff);\n                            uStack36 = uStack36 * *0x527a00;\n                        } while ((uVar31 & 0xf) != uVar19);\n                        uVar19 = uVar31 & 0xf;\n                    }\n                    uStack36 = uStack36 & 0x800fffffffffffff | 0x3ff0000000000000;\n                    uVar31 = iVar21 + -0x3ff + (uStack36._4_4_ >> 0x14 & 0x7ff);\n                    if (0 < uVar19) {\n                        bVar33 = false;\n                        iVar21 = 0;\n                        dVar3 = uStack36;\n                        do {\n                            if ((uVar19 & 1) != 0) {\n                                dVar3 = dVar3 * *(iVar21 * 8 + 0x5279e0);\n                                bVar33 = true;\n                            }\n                            iVar21 = iVar21 + 1;\n                            uVar19 = uVar19 >> 1;\n                        } while (uVar19 != 0);\n                        goto code_r0x0043f6b7;\n                    }\n                }\n            }\n        }\n        else {\n            if ((uVar19 & 0xf) != 0) {\n                uStack36 = uStack36 * *((uVar19 & 0xf) * 8 + 0x527920);\n            }\n            uVar31 = uVar19 & 0xfffffff0;\n            if ((uVar19 & 0xfffffff0) != 0) {\n                uVar19 = uVar19 >> 4;\n                if (uVar19 < 0x10) {\n                    iVar21 = 0;\n                }\n                else {\n                    uVar31 = uVar19 - 0x10;\n                    iVar21 = 0;\n                    do {\n                        uVar19 = uVar19 - 0x10;\n                        uStack36 = uStack36 & 0x800fffffffffffff | 0x3ff0000000000000;\n                        iVar21 = iVar21 + -0x3ff + (uStack36._4_4_ >> 0x14 & 0x7ff);\n                        uStack36 = uStack36 * *0x527a40;\n                    } while ((uVar31 & 0xf) != uVar19);\n                    uVar19 = uVar31 & 0xf;\n                }\n                uStack36 = uStack36 & 0x800fffffffffffff | 0x3ff0000000000000;\n                uVar31 = iVar21 + -0x3ff + (uStack36._4_4_ >> 0x14 & 0x7ff);\n                if (uVar19 != 0) {\n                    bVar33 = false;\n                    iVar21 = 0;\n                    dVar3 = uStack36;\n                    do {\n                        if ((uVar19 & 1) != 0) {\n                            dVar3 = dVar3 * *(iVar21 * 8 + 0x527a20);\n                            bVar33 = true;\n                        }\n                        iVar21 = iVar21 + 1;\n                        uVar19 = uVar19 >> 1;\n                    } while (uVar19 != 0);\ncode_r0x0043f6b7:\n                    if (bVar33) {\n                        uStack36 = dVar3;\n                    }\n                }\n            }\n        }\n        iStack40 = fcn.004470a0(uStack36, &uStack48, &uStack52);\n        uStack48 = uVar31 + uStack48;\n        iVar21 = uStack52 - uVar34;\n        if (0 < iVar21) {\n            fcn.00446080(iStack40, iVar21);\n            uStack48 = iVar21 + uStack48;\n            uStack52 = uVar34;\n        }\n        uStack100 = (uStack52 + uStack48) - uVar34;\n        uStack116 = uVar16;\n        if (param_3[2] + 1 < uStack100) {\n            uStack180 = 0;\n            goto code_r0x0043f8b8;\n        }\n        uVar19 = param_3[1];\n        if (uVar19 <= uStack100) {\n            uStack180 = 0;\n            goto code_r0x0043f953;\n        }\n        iVar21 = uStack48 - uVar19;\n        if (iVar21 < 1) {\n            if (iVar21 == 0) goto code_r0x0043f4de;\n            uStack52 = uStack52 + iVar21;\n            if (0 < uStack52) {\n                fcn.00446080(iStack40, -iVar21);\n                goto code_r0x0043f4de;\n            }\n            if (-2 < uStack52) {\n                uStack52 = 1;\n                *(iStack40 + 0x10) = 1;\n                *(iStack40 + 0x14) = 1;\n                goto code_r0x0043f4de;\n            }\n            *(iStack40 + 0x10) = 0;\n            *(iStack40 + 0x14) = 0;\n            *param_4 = uVar19;\n            if (uVar16 != 0) goto code_r0x0043f525;\n            uStack56 = 0x50;\n            goto code_r0x0043f1b0;\n        }\n        iStack40 = fcn.00446c50(iStack40, iVar21);\n        uStack52 = uStack52 + iVar21;\ncode_r0x0043f4de:\n        if ((uVar16 == 0) || (uVar19 <= uStack100 + 1)) {\n            uStack180 = 1;\n            uStack100 = uVar19;\n            uStack48 = uVar19;\ncode_r0x0043f953:\n            iVar10 = fcn.004471d0(puStack188, uVar26, uVar29, uStack164, uVar6);\n            uStack184 = 0;\n            iVar21 = -iVar7;\n            iVar11 = 0;\n            if (-1 < iVar7) {\n                iVar21 = 0;\n                iVar11 = iVar7;\n            }\n            do {\n                puStack188 = fcn.00446700(*(iVar10 + 4), uVar26);\n                iVar12 = iVar10 + 0xc;\n                sub.msvcrt.dll_memcpy(puStack188 + 0xc, iVar10 + 0xc, *(iVar10 + 0x10) * 4 + 8);\n                iVar12 = fcn.00446700(*(iStack40 + 4), iVar12);\n                iVar13 = iStack40 + 0xc;\n                sub.msvcrt.dll_memcpy(iVar12 + 0xc, iVar13, *(iStack40 + 0x10) * 4 + 8);\n                uVar29 = uStack52 - uStack184;\n                iVar14 = uStack184 + uStack48;\n                uStack204 = fcn.00446930(1, iVar13);\n                if (iVar14 < 0) {\n                    iVar13 = iVar11 - iVar14;\n                    iVar30 = iVar21;\n                }\n                else {\n                    iVar13 = iVar11;\n                    iVar30 = iVar21 + iVar14;\n                }\n                iVar27 = (iVar14 + uVar29) - uVar34;\n                iVar14 = (uVar34 + 1) - uVar29;\n                if (iVar27 < uVar19) {\n                    iVar14 = (iVar27 - uVar19) + iVar14;\n                }\n                iVar27 = iVar30 + iVar14;\n                iVar13 = iVar13 + iVar14;\n                iVar14 = iVar13;\n                if (iVar27 <= iVar13) {\n                    iVar14 = iVar27;\n                }\n                if (iVar30 <= iVar14) {\n                    iVar14 = iVar30;\n                }\n                if (0 < iVar14) {\n                    iVar27 = iVar27 - iVar14;\n                    iVar13 = iVar13 - iVar14;\n                    iVar30 = iVar30 - iVar14;\n                }\n                iVar14 = iVar12;\n                if (iVar21 != 0) {\n                    uStack204 = fcn.00446ad0(uStack204, iVar21);\n                    iVar35 = iVar12;\n                    iVar14 = fcn.00446960(uStack204, iVar12);\n                    fcn.004467d0(iVar12, iVar35);\n                }\n                iVar27 = iVar27 - uStack184;\n                if (iVar27 < 1) {\n                    if (iVar27 != 0) {\n                        fcn.00446080(iVar14, -iVar27);\n                    }\n                }\n                else {\n                    iVar14 = fcn.00446c50(iVar14, iVar27);\n                }\n                if (0 < iVar7) {\n                    puStack188 = fcn.00446ad0(puStack188, iVar11);\n                }\n                if (0 < iVar13) {\n                    puStack188 = fcn.00446c50(puStack188, iVar13);\n                }\n                if (0 < iVar30) {\n                    uStack204 = fcn.00446c50(uStack204, iVar30);\n                }\n                uVar26 = puStack188;\n                iVar12 = fcn.00446dc0(iVar14, puStack188);\n                if ((*(iVar12 + 0x10) < 2) && (*(iVar12 + 0x14) == 0)) goto code_r0x0043ff84;\n                uVar31 = *(iVar12 + 0xc);\n                *(iVar12 + 0xc) = 0;\n                uVar26 = uStack204;\n                iVar13 = fcn.00446d70(iVar12, uStack204);\n                if ((uStack128 == 0) || (0 < iVar13)) {\n                    if (iVar13 < 0) {\n                        if (uVar31 != 0) goto code_r0x00440778;\n                        uStack56 = 0x21;\n                        if (((1 < uVar29) || (uStack100 == uVar19)) || (uStack180 != 0)) goto code_r0x0043ff84;\n                        iVar12 = fcn.00446c50(iVar12, 1);\n                        uVar26 = uStack204;\n                        iVar7 = fcn.00446d70(iVar12, uStack204);\n                        if (iVar7 < 1) goto code_r0x004402a0;\n                        uStack56 = 0x11;\n                        uStack180 = 0;\n                    }\n                    else {\n                        if (iVar13 != 0) {\n                            uVar26 = uStack204;\n                            fVar32 = fcn.004472b0(iVar12, uStack204);\n                            if (fVar32 <= *0x5276c0) {\n                                if (uVar31 == 0) {\n                                    uStack184 = 0;\n                                    goto code_r0x0043fe0e;\n                                }\n                                iStack156 = 0;\n                                uStack104 = 0x20;\n                                uStack184 = 0;\n                                uStack160 = 0;\n                                dStack172 = 1.0;\n                                dStack148 = 1.0;\n                                goto code_r0x0043fceb;\n                            }\n                            uStack104 = (-(uVar31 == 0) & 0x10) + 0x10;\n                            fVar32 = fVar32 * *0x5276c4;\n                            uStack160 = uVar31 == 0;\n                            dStack172 = fVar32;\n                            if (*0x5276c8 <= fVar32) {\n                                iStack156 = 0;\n                                dStack148 = dStack172;\n                            }\n                            else {\n                                iStack156 = ROUND(fVar32);\n                                dStack172 = iStack156;\n                                dStack148 = fVar32 - iStack156;\n                                if (uStack128 == 1) {\n                                    if (uStack160 != 0) {\ncode_r0x00440135:\n                                        if (0.0 < dStack148) {\ncode_r0x00440141:\n                                            iStack156 = iStack156 + 1;\n                                            uStack104 = 0x30 - uStack104;\n                                            dStack172 = iStack156;\n                                        }\n                                    }\n                                }\n                                else if (uStack128 == 2) {\n                                    if (uStack160 == 0) goto code_r0x00440135;\n                                }\n                                else if (*0x5276c4 <= fVar32 - iStack156) goto code_r0x00440141;\n                            }\n                            uStack184 = 0;\n                            goto code_r0x0043fceb;\n                        }\n                        if (uVar31 != 0) {\n                            if (uStack180 == 0) goto code_r0x00440788;\n                            puVar23 = iStack40 + 0x14;\n                            puVar1 = puVar23 + (uStack52 >> 5);\n                            if (puVar1 <= puVar23) goto code_r0x00440551;\n                            uVar16 = *(iStack40 + 0x14);\n                            puVar23 = iStack40 + 0x18;\n                            goto joined_r0x00440531;\n                        }\n                        if (uVar29 != 1) {\n                            uStack56 = 0x21;\n                            goto code_r0x0044071b;\n                        }\n                        uStack56 = 1;\n                        if (uStack100 == uVar19) {\n                            uStack56 = 0x21;\n                            if ((*(iStack40 + 0x10) == 1) && (uStack116 = uVar29,  *(iStack40 + 0x14) != 1)) {\n                                uStack116 = uVar16;\n                            }\n                            goto code_r0x0043ff84;\n                        }\n                    }\n                    uStack48 = uStack48 - uVar34;\n                    uStack52 = uVar34;\n                    uVar26 = uVar34;\n                    iStack40 = fcn.0043ec40(iStack40, uVar34);\n                    goto code_r0x0043ff84;\n                }\n                uVar15 = uStack128 & 1;\n                uStack184 = uVar15 ^ uVar31;\n                if (uVar15 == uVar31) {\n                    uStack56 = (-(uVar15 == 0) & 0x10) + 0x11;\n                    goto code_r0x0043ff84;\n                }\n                if (uVar31 == 0) {\n                    uStack56 = 0x11;\n                    if (uStack100 != uVar19) {\n                        uVar15 = uVar34;\n                        if (uVar34 < 0x20) {\ncode_r0x0043ff35:\n                            if (1 < uVar15) {\n                                puVar23 = iStack40 + 0x14 + uVar31 * 4;\n                                iVar13 = 0;\n                                uVar31 = *puVar23;\n                                for (uVar22 = uVar31; (uVar22 & 1) == 0; uVar22 = uVar22 >> 1 | 0x80000000) {\n                                    iVar13 = iVar13 + 1;\n                                }\n                                *puVar23 = uVar31 >> (iVar13 & 0x1f);\n                                if (iVar13 < uVar15 - 1) goto code_r0x0043fe0e;\n                            }\n                            uStack48 = uStack100 - 1;\n                            uStack52 = uVar34;\n                            uVar26 = uVar34;\n                            iStack40 = fcn.0043ec40(iStack40, uVar34);\n                            goto code_r0x0043ff84;\n                        }\n                        iVar13 = *(iStack40 + 0x14);\n                        uVar22 = uVar34;\n                        while (iVar13 == 0) {\n                            uVar22 = uVar22 - 0x20;\n                            uVar31 = uVar31 + 1;\n                            uVar15 = uVar34 & 0x1f;\n                            if ((uVar34 & 0x1f) == uVar22) goto code_r0x0043ff35;\n                            iVar13 = *(iStack40 + 0x14 + uVar31 * 4);\n                        }\n                    }\ncode_r0x0043fe0e:\n                    if ((uVar29 < 2) && (uStack180 != 0)) {\n                        uStack180 = 1;\n                        goto code_r0x004406a1;\n                    }\n                    iStack156 = 0;\n                    uStack104 = 0x10;\n                    uStack160 = 1;\n                    dStack172 = 1.0;\n                    dStack148 = 1.0;\n                }\n                else {\n                    uStack56 = 0x21;\n                    iStack156 = 0;\n                    uStack104 = 0x20;\n                    uStack160 = 0;\n                    dStack172 = 1.0;\n                    dStack148 = 1.0;\n                }\ncode_r0x0043fceb:\n                iVar13 = uStack48 + uStack52;\n                if ((uStack52 < uVar34) && (uStack180 == 0)) {\n                    iVar30 = uVar34 - uStack52;\n                    iStack40 = fcn.00446c50(iStack40, iVar30);\n                    uStack48 = uStack48 - iVar30;\n                    uStack52 = uVar34;\n                }\n                uVar26 = fcn.004470a0(dStack172, &iStack64, auStack60);\n                if (iStack64 < 0) {\n                    fcn.00446080();\n                }\n                else if (iStack64 != 0) {\n                    uVar26 = fcn.00446c50();\n                }\n                iVar30 = iStack40;\n                if (uStack160 == 0) {\n                    iStack40 = fcn.00440840();\n                    iVar27 = *(iStack40 + 0x10) + -1;\n                    if (*(iVar30 + 0x10) != iVar27 && iVar27 <= *(iVar30 + 0x10)) {\n                        iVar27 = *(iStack40 + 0x10) + 3;\n                        puVar23 = iStack40 + 4 + iVar27 * 4;\n                        uVar29 = 0x1f;\n                        if (*puVar23 != 0) {\n                            for (; *puVar23 >> uVar29 == 0; uVar29 = uVar29 - 1) {\n                            }\n                        }\n                        puVar23 = iVar30 + 4 + iVar27 * 4;\n                        uVar31 = 0x1f;\n                        if (*puVar23 != 0) {\n                            for (; *puVar23 >> uVar31 == 0; uVar31 = uVar31 - 1) {\n                            }\n                        }\n                        if ((uVar31 ^ 0x1f) <= (uVar29 ^ 0x1f)) goto code_r0x0043fa20;\n                    }\n                    if (uStack180 == 0) {\n                        uVar26 = 1;\n                        fcn.00446080();\n                        uStack48 = uStack48 + 1;\n                        uStack100 = uStack100 + 1;\n                        iStack156 = 0;\n                    }\n                    else {\n                        uStack52 = uStack52 + 1;\n                        uStack180 = uStack52 != uVar34;\n                    }\ncode_r0x0043fa20:\n                    fcn.004467d0();\n                    fcn.004467d0();\n                    if (uStack184 != 0) goto code_r0x0043ff84;\n                    if ((uStack52 + uStack48 == iVar13) && (iStack156 != 0)) {\n                        dStack172 = dStack172 * *0x5276d0;\n                        if (-dStack172 <= dStack148 - *0x5276c4) {\n                            if ((dStack172 < dStack148 - *0x5276c4) && (dStack148 < *0x5276bc - dStack172))\n                            goto code_r0x00440190;\n                        }\n                        else if (dStack172 < dStack148) goto code_r0x00440190;\n                    }\n                    if (uStack180 == 0) goto code_r0x0043fea9;\n                }\n                else {\n                    iStack40 = fcn.00446dc0();\n                    if (uStack180 != 0) goto code_r0x0043fa20;\n                    iVar27 = *(iVar30 + 0x10) + -1;\n                    if (*(iStack40 + 0x10) != iVar27 && iVar27 <= *(iStack40 + 0x10)) {\n                        iVar27 = *(iVar30 + 0x10) + 3;\n                        puVar23 = iStack40 + 4 + iVar27 * 4;\n                        uVar29 = 0x1f;\n                        if (*puVar23 != 0) {\n                            for (; *puVar23 >> uVar29 == 0; uVar29 = uVar29 - 1) {\n                            }\n                        }\n                        puVar23 = iVar30 + 4 + iVar27 * 4;\n                        uVar31 = 0x1f;\n                        if (*puVar23 != 0) {\n                            for (; *puVar23 >> uVar31 == 0; uVar31 = uVar31 - 1) {\n                            }\n                        }\n                        if ((uVar29 ^ 0x1f) <= (uVar31 ^ 0x1f)) goto code_r0x0043fa20;\n                    }\n                    if (uStack100 == uVar19) {\n                        uStack52 = uStack52 - 1;\n                        uStack180 = uStack160;\n                        goto code_r0x0043fa20;\n                    }\n                    uVar26 = 1;\n                    iStack40 = fcn.00446c50();\n                    uStack48 = uStack48 - 1;\n                    uStack100 = uStack100 - 1;\n                    fcn.004467d0();\n                    fcn.004467d0();\ncode_r0x0043fea9:\n                    uStack184 = fcn.00446190();\n                    uStack180 = 0;\n                }\n                fcn.004467d0();\n                fcn.004467d0();\n                fcn.004467d0();\n                fcn.004467d0();\n            } while( true );\n        }\n        *(iStack40 + 0x10) = 0;\n        *(iStack40 + 0x14) = 0;\n        *param_4 = uVar19;\n        uStack48 = uVar19;\n        goto code_r0x0043f525;\n    }\n    if ((puStack44[1] == 0x58) || (puStack44[1] == 0x78)) {\n        uStack56 = fcn.00445670(&puStack44, param_3, param_4, &iStack40, iStack140);\n        if (uStack56 == 6) {\n            puStack44 = param_1;\n            if (param_2 != NULL) {\n                *param_2 = param_1;\n            }\n            goto code_r0x0043f14c;\n        }\n    }\n    else {\n        do {\n            puStack44 = puStack44 + 1;\n            uVar20 = *puStack44;\n        } while (uVar20 == 0x30);\n        if (uVar20 != 0) {\n            uStack180 = 1;\n            goto code_r0x0043ed9f;\n        }\n    }\n    goto code_r0x0043f121;\ncode_r0x0043ee20:\n    puStack44 = puStack44 + 1;\n    uVar20 = *puStack44;\n    if (0x2d < uVar20) goto code_r0x0043ee40;\n    goto code_r0x0043ed23;\njoined_r0x00440531:\n    if (uVar16 != 0xffffffff) goto code_r0x00440788;\n    if (puVar1 <= puVar23) goto code_r0x00440551;\n    uVar16 = *puVar23;\n    puVar23 = puVar23 + 1;\n    goto joined_r0x00440531;\ncode_r0x00440190:\n    uStack56 = uStack56 | uStack104;\ncode_r0x0043ff84:\n    if (uStack180 == 0) {\ncode_r0x004402a0:\n        uStack180 = uStack52;\n        goto code_r0x004402ab;\n    }\n    goto code_r0x0043ff97;\ncode_r0x00440551:\n    if (((uStack52 & 0x1f) != 0) && ((-1 << (uStack52 & 0x1f) | *puVar23) != 0xffffffff)) {\ncode_r0x00440788:\n        uStack56 = 0x11;\ncode_r0x0044071b:\n        if ((uVar34 <= uVar29) || (uStack180 != 0)) {\n            if ((*(iStack40 + 0x14) & 1) != 0) {\n                if (uVar31 == 0) {\n                    if (uVar29 == 1) {\ncode_r0x004406a1:\n                        *(iStack40 + 0x10) = 0;\n                        uStack56 = 0x50;\n                        uStack48 = uVar19;\n                    }\n                    else {\n                        iVar7 = *(iStack40 + 0x10);\n                        piVar25 = iStack40 + 0x14;\n                        do {\n                            if (*piVar25 != 0) {\n                                *piVar25 = *piVar25 + -1;\n                                break;\n                            }\n                            piVar24 = piVar25 + 1;\n                            *piVar25 = -1;\n                            piVar25 = piVar24;\n                        } while (piVar24 < iStack40 + 0x14 + iVar7);\ncode_r0x00440778:\n                        uStack56 = 0x11;\n                    }\n                }\n                else {\n                    iStack40 = fcn.0043e780(iStack40, uVar26);\n                    puVar23 = iStack40 + 0x10 + *(iStack40 + 0x10) * 4;\n                    uVar16 = 0x1f;\n                    if (*puVar23 != 0) {\n                        for (; *puVar23 >> uVar16 == 0; uVar16 = uVar16 - 1) {\n                        }\n                    }\n                    if ((-uStack52 & 0x1f) != (uVar16 ^ 0x1f)) {\n                        uStack52 = uStack52 + 1;\n                    }\n                    uStack56 = 0x21;\n                }\n            }\n            goto code_r0x0043ff84;\n        }\n        goto code_r0x004402a0;\n    }\n    *(iStack40 + 0x10) = 1;\n    *(iStack40 + 0x14) = 1;\n    uStack52 = 1;\n    uStack56 = 0x21;\n    uStack48 = (uVar34 - 1) + uVar19;\ncode_r0x004402ab:\n    uStack180 = uVar34 - uStack180;\n    if (uStack180 != 0) {\n        if (uStack180 < 1) {\n            uVar26 = -uStack180;\n            fcn.00446080(iStack40, uVar26);\n        }\n        else {\n            uVar26 = uStack180;\n            iStack40 = fcn.00446c50(iStack40, uStack180);\n        }\n        uStack48 = uStack48 - uStack180;\n        uStack180 = 0;\n    }\ncode_r0x0043ff97:\n    *param_4 = uStack48;\n    fcn.004467d0(iVar14, uVar26);\n    fcn.004467d0(puStack188, uVar26);\n    fcn.004467d0(uStack204, uVar26);\n    fcn.004467d0(iVar10, uVar26);\n    fcn.004467d0(iVar12, uVar26);\n    if (param_3[2] < uStack48) {\n        uVar16 = param_3[3] & 3;\n        if (uVar16 == 2) {\n            if (iStack140 == 0) goto code_r0x0043f8b8;\n        }\n        else if (uVar16 == 3) {\n            if (iStack140 != 0) goto code_r0x0043f8b8;\n        }\n        else if (uVar16 == 1) {\ncode_r0x0043f8b8:\n            uStack56 = 0xa3;\n            *(iStack40 + 0x10) = 0;\n            puVar9 = sub.msvcrt.dll__errno();\n            *puVar9 = 0x22;\n            *param_4 = param_3[2] + 1;\n            goto code_r0x0043f8f2;\n        }\n        fcn.004467d0(iStack40, uVar26);\n        iStack40 = 0;\n        uStack56 = 0x11;\n        *param_4 = param_3[2];\n        uVar16 = *param_3;\n        puVar9 = param_5 + (uVar16 + 0x1f >> 5);\n        puVar17 = param_5;\n        if (param_5 < puVar9) {\n            do {\n                puVar18 = puVar17 + 1;\n                *puVar17 = 0xffffffff;\n                puVar17 = puVar18;\n            } while (puVar18 < puVar9);\n        }\n        uVar16 = uVar16 & 0x1f;\n        if (uVar16 != 0) {\n            puVar9[-1] = puVar9[-1] >> (0x20U - uVar16 & 0x1f);\n        }\n    }\ncode_r0x0043f8f2:\n    if (uStack180 != 0) {\n        if (uStack116 == 0) {\n            uVar16 = uStack56 & 0x30;\n            uStack56 = uStack56 & 0xfffffff8;\n            if (0 < *(iStack40 + 0x10)) {\n                uStack56 = uStack56 | 2;\n            }\n            if (uVar16 != 0) {\ncode_r0x0043f1b0:\n                uStack56 = uStack56 | 0x40;\n                puVar9 = sub.msvcrt.dll__errno();\n                *puVar9 = 0x22;\n            }\n        }\n        else {\ncode_r0x0043f525:\n            *(iStack40 + 0x10) = 0;\n            uStack56 = 0x50;\n            puVar9 = sub.msvcrt.dll__errno();\n            *puVar9 = 0x22;\n        }\n    }\ncode_r0x0043f121:\n    if (param_2 != NULL) {\n        *param_2 = puStack44;\n    }\n    if (iStack140 != 0) {\n        uStack56 = uStack56 | 8;\n    }\ncode_r0x0043f14c:\n    if (iStack40 != 0) {\n        fcn.004473c0(param_5, uVar34, iStack40);\n        fcn.004467d0(iStack40, uVar34);\n    }\n    return uStack56;\n}\n",
        "token_count": 10940
    },
    "00440a30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00440a30(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    ushort *puVar1;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint16_t uVar5;\n    int32_t iVar6;\n    uint16_t uVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    ushort *puVar2;\n    \n    if (-1 < param_2) {\n        if (0xf < param_2) {\n            uVar3 = param_2 - 0x10;\n            puVar1 = in_EAX + 4;\n            do {\n                do {\n                    puVar2 = puVar1 + 1;\n                    *puVar1 = *puVar2;\n                    puVar1 = puVar2;\n                } while (puVar2 != in_EAX + 0x10);\n                param_2 = param_2 - 0x10;\n                *(in_EAX + 0x10) = 0;\n                puVar1 = in_EAX + 4;\n            } while (param_2 != (uVar3 & 0xf));\n            param_2 = uVar3 & 0xf;\n        }\n        if (7 < param_2) {\n            puVar8 = in_EAX + 0x10;\n            uVar7 = 0;\n            do {\n                uVar5 = *puVar8;\n                puVar9 = puVar8 + -1;\n                *puVar8 = uVar5 << 8 | uVar7;\n                puVar8 = puVar9;\n                uVar7 = uVar5 >> 8;\n            } while (in_EAX + 2 != puVar9);\n            param_2 = param_2 & 7;\n        }\n        for (; param_2 != 0; param_2 = param_2 - 1) {\n            uVar3 = 0;\n            puVar8 = in_EAX + 0x10;\n            do {\n                if (*puVar8 < 0) {\n                    uVar3 = uVar3 | 1;\n                }\n                uVar7 = *puVar8 * 2;\n                if ((uVar3 & 2) != 0) {\n                    uVar7 = uVar7 | 1;\n                }\n                puVar9 = puVar8 + -1;\n                uVar3 = uVar3 * 2;\n                *puVar8 = uVar7;\n                puVar8 = puVar9;\n            } while (puVar9 != in_EAX + 2);\n        }\n        return false;\n    }\n    uVar3 = -param_2;\n    if (param_2 < -0xf) {\n        uVar7 = 0;\n        do {\n            uVar7 = uVar7 | *(in_EAX + 0x10);\n            iVar6 = 6;\n            do {\n                *(in_EAX + 4 + iVar6 * 2) = *(in_EAX + 2 + iVar6 * 2);\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n            uVar3 = uVar3 - 0x10;\n            *(in_EAX + 4) = 0;\n        } while (0xf < uVar3);\n    }\n    else {\n        uVar7 = 0;\n    }\n    if (7 < uVar3) {\n        uVar7 = uVar7 | *(in_EAX + 0x10);\n        puVar8 = in_EAX + 4;\n        iVar6 = 0;\n        do {\n            uVar5 = *puVar8;\n            puVar9 = puVar8 + 1;\n            *puVar8 = uVar5 >> 8 | iVar6;\n            puVar8 = puVar9;\n            iVar6 = uVar5 << 8;\n        } while (puVar9 != in_EAX + 0x12);\n        uVar3 = uVar3 & 7;\n    }\n    if (uVar3 != 0) {\n        do {\n            uVar4 = 0;\n            uVar7 = uVar7 | *(in_EAX + 0x10) & 1;\n            puVar8 = in_EAX + 4;\n            do {\n                if ((*puVar8 & 1) != 0) {\n                    uVar4 = uVar4 | 1;\n                }\n                uVar5 = *puVar8 >> 1;\n                if ((uVar4 & 2) != 0) {\n                    uVar5 = uVar5 | 0x8000;\n                }\n                puVar9 = puVar8 + 1;\n                uVar4 = uVar4 * 2;\n                *puVar8 = uVar5;\n                puVar8 = puVar9;\n            } while (in_EAX + 0x12 != puVar9);\n            uVar3 = uVar3 - 1;\n        } while (uVar3 != 0);\n    }\n    return uVar7 != 0;\n}\n",
        "token_count": 1117
    },
    "004410b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004410b0(int16_t *param_1, uint *param_2)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    int16_t *piVar3;\n    uint16_t uVar5;\n    int16_t *piVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    int16_t *piVar4;\n    \n    uVar5 = param_1[1];\n    piVar3 = param_1 + 3;\n    if ((uVar5 & 0x7fff) == 0x7fff) {\n        iVar1 = *piVar3;\n        while( true ) {\n            if (iVar1 != 0) {\n                *param_2 = 0;\n                param_2[1] = 0xc0000000;\n                param_2[2] = 0x7fff;\n                return;\n            }\n            piVar3 = piVar3 + 1;\n            if (param_1 + 9 == piVar3) break;\n            iVar1 = *piVar3;\n        }\n    }\n    else if (uVar5 == 0) {\n        puVar7 = param_1 + 2;\n        do {\n            if ((*puVar7 & 1) != 0) {\n                uVar5 = uVar5 | 1;\n            }\n            uVar2 = *puVar7 >> 1;\n            if ((uVar5 & 2) != 0) {\n                uVar2 = uVar2 | 0x8000;\n            }\n            puVar8 = puVar7 + 1;\n            uVar5 = uVar5 * 2;\n            *puVar7 = uVar2;\n            puVar7 = puVar8;\n        } while (param_1 + 9 != puVar8);\n    }\n    *(param_2 + 10) = 0;\n    if (*param_1 == 0) {\n        *(param_2 + 2) = param_1[1];\n        uVar5 = param_1[1];\n    }\n    else {\n        *(param_2 + 2) = param_1[1] | 0x8000;\n        uVar5 = param_1[1];\n    }\n    if ((uVar5 & 0x7fff) == 0x7fff) {\n        piVar3 = param_1 + 3;\n        while (*piVar3 == 0) {\n            piVar3 = piVar3 + 1;\n            if (piVar3 == param_1 + 9) {\n                *param_2 = 0;\n                param_2[1] = 0x80000000;\n                return;\n            }\n        }\n    }\n    piVar3 = param_1 + 3;\n    piVar6 = param_2 + 6;\n    do {\n        piVar4 = piVar3 + 1;\n        *piVar6 = *piVar3;\n        piVar3 = piVar4;\n        piVar6 = piVar6 + -1;\n    } while (param_1 + 7 != piVar4);\n    return;\n}\n",
        "token_count": 693
    },
    "004414d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044173a)\n\nvoid fcn.004414d0(int32_t param_1, uint32_t param_2, int32_t param_3, int32_t param_4, int32_t param_5, int32_t param_6)\n\n{\n    bool bVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    ushort *puVar5;\n    ushort *puVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    uint uStack34;\n    uint uStack30;\n    uint uStack26;\n    uint uStack22;\n    ushort uStack18;\n    \n    uStack18 = 0;\n    uStack34 = 0;\n    uStack30 = 0;\n    uStack26 = 0;\n    uStack22 = 0x10000;\n    iVar4 = fcn.00441320(param_1);\n    param_4 = param_4 - iVar4;\n    if ((0x50 < iVar4) && (param_4 < 0x7fff)) {\ncode_r0x0044156e:\n        *(param_1 + 2) = 0;\n        *(param_1 + 6) = 0;\n        *(param_1 + 10) = 0;\n        *(param_1 + 0xe) = 0;\n        return;\n    }\n    uVar10 = param_2;\n    if (param_4 < 0) {\n        if (param_4 < -0x50) goto code_r0x0044156e;\n        iVar4 = fcn.00440a30();\n        uVar10 = 1;\n        if (iVar4 == 0) {\n            uVar10 = param_2;\n        }\n    }\n    param_2 = uVar10;\n    if (param_5 == 0) goto code_r0x00441533;\n    if (param_6 == 0x40) {\n        uStack22 = 1;\n        iStack60 = 0xe;\n        iStack52 = 6;\n        iStack56 = 7;\n    }\n    else {\n        iStack60 = 0x10;\n        iStack52 = 7;\n        iStack56 = 8;\n    }\n    bVar1 = param_4 < 1 && param_6 != 0x50;\n    if (bVar1) {\n        param_2 = param_2 | *(param_1 + 0x10) & 1;\n        puVar7 = param_1 + 4;\n        do {\n            puVar8 = puVar7 + 1;\n            *puVar7 = *puVar7 >> 1;\n            puVar7 = puVar8;\n        } while (param_1 + 0x12 != puVar8);\n    }\n    uVar2 = *(iStack60 + param_1);\n    if ((param_6 < 0x50) && (iStack56 == 7)) {\n        if (*(param_1 + 0x10) != 0) {\n            uVar2 = uVar2 | 1;\n        }\n        *(param_1 + 0x10) = 0;\n    }\n    *(iStack60 + param_1) = 0;\n    if (-1 < uVar2) goto code_r0x00441621;\n    if (uVar2 == 0x8000) {\n        if (param_2 == 0) {\n            if ((*(param_1 + iStack52 * 2) & 1) != 0) goto code_r0x004416d0;\n        }\n        else if (param_3 == 0) goto code_r0x004416d0;\n    }\n    else {\ncode_r0x004416d0:\n        iVar4 = 7;\n        uVar10 = 0;\n        uVar9 = 0;\n        while( true ) {\n            uVar9 = uVar10 + *(param_1 + 2 + iVar4 * 2) + uVar9;\n            *(param_1 + 2 + iVar4 * 2) = uVar9;\n            uVar9 = uVar9 >> 0x10 & 1;\n            iVar4 = iVar4 + -1;\n            if (iVar4 == 0) break;\n            uVar10 = *(&uStack34 + iVar4 * 2 + 2);\n        }\n    }\ncode_r0x00441621:\n    if (bVar1) {\n        uVar10 = 0;\n        puVar7 = param_1 + 0x10;\n        do {\n            if (*puVar7 < 0) {\n                uVar10 = uVar10 | 1;\n            }\n            uVar2 = *puVar7 * 2;\n            if ((uVar10 & 2) != 0) {\n                uVar2 = uVar2 | 1;\n            }\n            puVar8 = puVar7 + -1;\n            uVar10 = uVar10 * 2;\n            *puVar7 = uVar2;\n            puVar7 = puVar8;\n        } while (param_1 + 2 != puVar8);\n    }\n    uVar2 = *(param_1 + 4);\n    if (uVar2 != 0) {\n        uVar10 = 0;\n        puVar7 = param_1 + 4;\n        while( true ) {\n            if ((uVar2 & 1) != 0) {\n                uVar10 = uVar10 | 1;\n            }\n            uVar3 = uVar2 >> 1;\n            if ((uVar10 & 2) != 0) {\n                uVar3 = uVar2 >> 1 | 0x8000;\n            }\n            puVar8 = puVar7 + 1;\n            uVar10 = uVar10 * 2;\n            *puVar7 = uVar3;\n            if (param_1 + 0x12 == puVar8) break;\n            uVar2 = *puVar8;\n            puVar7 = puVar8;\n        }\n        param_4 = param_4 + 1;\n    }\ncode_r0x00441533:\n    *(param_1 + 0x10) = 0;\n    if (0x7ffe < param_4) {\n        *(param_1 + 2) = 0x7fff;\n        puVar5 = param_1 + 4;\n        do {\n            puVar6 = puVar5 + 1;\n            *puVar5 = 0;\n            puVar5 = puVar6;\n        } while (param_1 + 0x10 != puVar6);\n        return;\n    }\n    if (param_4 < 0) {\n        param_4 = 0;\n    }\n    *(param_1 + 2) = param_4;\n    return;\n}\n",
        "token_count": 1561
    },
    "004417d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004417d0(int16_t *param_1, uint *param_2)\n\n{\n    uint16_t uVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    uint *puVar4;\n    \n    uVar1 = param_1[1] | 0x8000;\n    if (*param_1 == 0) {\n        uVar1 = param_1[1];\n    }\n    *(param_2 + 10) = uVar1;\n    piVar3 = param_1 + 3;\n    if (param_1[1] != 0x7fff) {\n        puVar4 = param_2 + 2;\n        do {\n            piVar2 = piVar3 + 1;\n            *puVar4 = *piVar3;\n            piVar3 = piVar2;\n            puVar4 = puVar4 + -2;\n        } while (piVar2 != param_1 + 8);\n        return;\n    }\n    do {\n        if (*piVar3 != 0) {\n            *param_2 = 0;\n            param_2[1] = 0;\n            param_2[2] = 0x7fffc000;\n            return;\n        }\n        piVar3 = piVar3 + 1;\n    } while (param_1 + 9 != piVar3);\n    *(param_2 + 10) = *(param_2 + 10) | 0x7fff;\n    *param_2 = 0;\n    param_2[1] = 0;\n    *(param_2 + 2) = 0;\n    return;\n}\n",
        "token_count": 366
    },
    "00441860": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00441860(uint *param_1, uint *param_2, uint *param_3)\n\n{\n    int16_t iVar1;\n    ushort uVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint16_t uVar8;\n    uint16_t uVar9;\n    uint32_t uVar10;\n    uint *puVar11;\n    uint *puVar12;\n    int16_t iStack52;\n    uint16_t uStack50;\n    int16_t aiStack48 [6];\n    int16_t iStack36;\n    int16_t iStack34;\n    uint16_t uStack32;\n    int16_t aiStack30 [6];\n    int16_t iStack18;\n    \n    uVar8 = *(param_1 + 10) & 0x7fff;\n    if (uVar8 == 0x7fff) {\n        puVar7 = param_1;\n        do {\n            puVar12 = puVar7 + 2;\n            if (*puVar7 != 0) {\n                *param_3 = *param_1;\n                param_3[1] = param_1[1];\n                param_3[2] = param_1[2];\n                return;\n            }\n            puVar7 = puVar12;\n        } while (puVar12 != param_1 + 10);\n    }\n    uVar9 = *(param_2 + 10) & 0x7fff;\n    puVar7 = param_1;\n    if (uVar9 == 0x7fff) {\n        puVar12 = param_2;\n        do {\n            puVar11 = puVar12 + 2;\n            if (*puVar12 != 0) {\n                *param_3 = *param_2;\n                param_3[1] = param_2[1];\n                param_3[2] = param_2[2];\n                return;\n            }\n            puVar12 = puVar11;\n        } while (puVar11 != param_2 + 10);\n        if (uVar8 == 0x7fff) goto code_r0x004418ae;\ncode_r0x004419c2:\n        puVar12 = param_2;\n        do {\n            puVar11 = puVar12 + 2;\n            if (*puVar12 != 0) goto code_r0x00441ab2;\n            puVar12 = puVar11;\n        } while (puVar11 != param_2 + 10);\n        if (*(param_1 + 2) == 0) {\n            puVar12 = param_1 + 1;\n            do {\n                if (*puVar12 != 0) goto code_r0x00441ab2;\n                puVar12 = puVar12 + 2;\n            } while (puVar12 != param_1 + 4);\ncode_r0x004418ed:\n            *param_3 = 0;\n            param_3[1] = 0;\n            param_3[2] = 0x7fffc000;\n            return;\n        }\ncode_r0x00441ab2:\n        if (uVar8 == 0x7fff) goto code_r0x00441b3d;\ncode_r0x00441abd:\n        puVar12 = param_2;\n        do {\n            puVar11 = puVar12 + 2;\n            if (*puVar12 != 0) goto code_r0x00441910;\n            puVar12 = puVar11;\n        } while (param_2 + 10 != puVar11);\n        if (uVar8 != 0x7fff) goto code_r0x00441adc;\n    }\n    else {\n        if (uVar8 != 0x7fff) {\ncode_r0x00441910:\n            fcn.00440c00(param_1, &iStack52);\n            fcn.00440c00(param_2, &iStack34);\n            uVar10 = uStack50;\n            uVar6 = uStack32;\n            if (uStack50 == 0) {\n                piVar3 = aiStack48;\n                do {\n                    if (piVar3 == &iStack36) goto code_r0x00441a03;\n                    iVar1 = *piVar3;\n                    piVar3 = piVar3 + 1;\n                } while (iVar1 == 0);\n                iVar4 = fcn.00441320(&iStack52);\n                uVar10 = -iVar4;\n            }\n            piVar3 = aiStack30;\n            if (uStack32 == 0) {\n                do {\n                    if (&iStack18 == piVar3) {\ncode_r0x00441a03:\n                        *param_3 = 0;\n                        param_3[1] = 0;\n                        param_3[2] = 0;\n                        return;\n                    }\n                    iVar1 = *piVar3;\n                    piVar3 = piVar3 + 1;\n                } while (iVar1 == 0);\n                iVar4 = fcn.00441320(&iStack34);\n                uVar6 = uVar6 - iVar4;\n            }\n            uVar5 = fcn.00440fa0(&iStack52, &iStack34);\n            fcn.004414d0(&iStack34, uVar5, 0, (uVar10 - 0x3ffe) + uVar6, 0x40, 0x50);\n            iStack34 = (iStack52 == iStack34) - 1;\n            fcn.004417d0(&iStack34, param_3);\n            return;\n        }\ncode_r0x004418ae:\n        puVar12 = param_1;\n        do {\n            puVar11 = puVar12 + 2;\n            if (*puVar12 != 0) goto code_r0x00441b30;\n            puVar12 = puVar11;\n        } while (puVar11 != param_1 + 10);\n        if (*(param_2 + 2) == 0) {\n            puVar12 = param_2 + 1;\n            do {\n                if (*puVar12 != 0) goto code_r0x00441b30;\n                puVar12 = puVar12 + 2;\n            } while (puVar12 != param_2 + 4);\n            goto code_r0x004418ed;\n        }\ncode_r0x00441b30:\n        if (uVar9 == 0x7fff) goto code_r0x004419c2;\ncode_r0x00441b3d:\n        puVar12 = param_1;\n        do {\n            puVar11 = puVar12 + 2;\n            if (*puVar12 != 0) {\n                if (uVar9 != 0x7fff) goto code_r0x00441910;\n                goto code_r0x00441abd;\n            }\n            puVar12 = puVar11;\n        } while (param_1 + 10 != puVar11);\n    }\n    do {\n        puVar12 = puVar7 + 2;\n        if (*puVar7 != 0) {\n            uVar10 = 0;\n            goto code_r0x00441adf;\n        }\n        puVar7 = puVar12;\n    } while (puVar12 != param_1 + 10);\ncode_r0x00441adc:\n    uVar10 = *(param_1 + 10) >> 0x1f;\ncode_r0x00441adf:\n    if (uVar9 == 0x7fff) {\n        puVar7 = param_2;\n        do {\n            puVar12 = puVar7 + 2;\n            if (*puVar7 != 0) {\n                uVar6 = 0;\n                goto code_r0x00441af4;\n            }\n            puVar7 = puVar12;\n        } while (puVar12 != param_2 + 10);\n    }\n    uVar6 = *(param_2 + 10) >> 0x1f;\ncode_r0x00441af4:\n    uVar2 = 0;\n    if (uVar6 != uVar10) {\n        uVar2 = 0x8000;\n    }\n    *param_3 = 0;\n    param_3[1] = 0;\n    *(param_3 + 10) = uVar2;\n    *(param_3 + 10) = *(param_3 + 10) | 0x7fff;\n    *(param_3 + 2) = 0;\n    return;\n}\n",
        "token_count": 1895
    },
    "00442130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442130(uint32_t param_1, char *param_2, int32_t param_3)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = *(param_3 + 8);\n    if (param_1 < 1) {\n        if (iVar2 < 1) {\n            if (-1 < iVar2) goto code_r0x00442159;\n            *(param_3 + 8) = 0xffffffff;\n            goto joined_r0x004422bb;\n        }\n        iVar2 = iVar2 + -1;\n        *(param_3 + 8) = iVar2;\ncode_r0x00442159:\n        iVar1 = *(param_3 + 0xc);\n        if (iVar2 <= iVar1) {\n            *(param_3 + 8) = 0xffffffff;\n            if (0 < param_1) goto code_r0x00442217;\n            goto joined_r0x004422bb;\n        }\n        iVar2 = iVar2 - iVar1;\n        *(param_3 + 8) = iVar2;\n        if ((iVar1 < 1) && ((*(param_3 + 4) & 0x800) == 0)) {\n            if ((0 < param_1) && (((*(param_3 + 4) & 0x1000) != 0 && (*(param_3 + 0x1c) != 0)))) {\ncode_r0x00442231:\n                uVar3 = (param_1 + 2) / 3;\n                if (1 < uVar3) {\n                    if (0 < iVar2) {\n                        iVar1 = iVar2 - uVar3;\n                        do {\n                            iVar2 = iVar2 + -1;\n                            if (iVar1 + 1 == iVar2) {\n                                *(param_3 + 8) = iVar2;\n                                goto code_r0x00442265;\n                            }\n                        } while (iVar2 != 0);\n                        *(param_3 + 8) = 0;\n                    }\n                    goto joined_r0x004422bb;\n                }\n                goto code_r0x00442265;\n            }\n        }\n        else {\n            iVar2 = iVar2 + -1;\n            *(param_3 + 8) = iVar2;\n            if ((0 < param_1) && (((*(param_3 + 5) & 0x10) != 0 && (*(param_3 + 0x1c) != 0)))) goto code_r0x00442231;\ncode_r0x00442265:\n            if (iVar2 < 1) goto joined_r0x004422bb;\n        }\n        if (in_EAX == 0) {\n            uVar3 = *(param_3 + 4);\n            if ((uVar3 & 0x1c0) == 0) {\n                if (((uVar3 & 0x600) == 0) && (iVar2 = *(param_3 + 8),  *(param_3 + 8) = iVar2 + -1,  0 < iVar2))\n                goto code_r0x004422a0;\n            }\n            else {\n                *(param_3 + 8) = iVar2 + -1;\n                if (iVar2 + -1 != 0) goto code_r0x00442291;\n            }\n            goto code_r0x0044217e;\n        }\n        *(param_3 + 8) = iVar2 + -1;\n        if (iVar2 + -1 != 0) {\n            uVar3 = *(param_3 + 4);\ncode_r0x00442291:\n            if ((uVar3 & 0x600) == 0) {\n                *(param_3 + 8) = iVar2 + -2;\ncode_r0x004422a0:\n                do {\n                    fcn.00441d10();\n                    iVar2 = *(param_3 + 8);\n                    *(param_3 + 8) = iVar2 + -1;\n                } while (0 < iVar2);\n            }\n            goto joined_r0x004422bb;\n        }\ncode_r0x004422c1:\n        fcn.00441d10();\n    }\n    else {\n        if (param_1 <= iVar2) {\n            iVar2 = iVar2 - param_1;\n            *(param_3 + 8) = iVar2;\n            goto code_r0x00442159;\n        }\n        *(param_3 + 8) = 0xffffffff;\ncode_r0x00442217:\n        if (((*(param_3 + 5) & 0x10) != 0) && (iVar2 = -1,  *(param_3 + 0x1c) != 0)) goto code_r0x00442231;\njoined_r0x004422bb:\n        if (in_EAX != 0) goto code_r0x004422c1;\n        uVar3 = *(param_3 + 4);\ncode_r0x0044217e:\n        if ((uVar3 & 0x100) == 0) {\n            if ((uVar3 & 0x40) != 0) {\n                fcn.00441d10();\n            }\n        }\n        else {\n            fcn.00441d10();\n        }\n    }\n    if ((0 < *(param_3 + 8)) && ((*(param_3 + 4) & 0x600) == 0x200)) {\n        *(param_3 + 8) = *(param_3 + 8) + -1;\n        do {\n            fcn.00441d10();\n            iVar2 = *(param_3 + 8);\n            *(param_3 + 8) = iVar2 + -1;\n        } while (0 < iVar2);\n    }\n    if (param_1 < 1) {\n        fcn.00441d10();\n        iVar2 = *(param_3 + 0xc);\n        if ((iVar2 < 1) && ((*(param_3 + 5) & 8) == 0)) {\n            if (param_1 == 0) goto code_r0x004422ef;\n        }\n        else {\n            fcn.00442050();\n            if (param_1 == 0) goto code_r0x0044234a;\n            iVar2 = *(param_3 + 0xc);\n        }\n        *(param_3 + 0xc) = iVar2 + param_1;\n        do {\n            fcn.00441d10();\n            param_1 = param_1 + 1;\n        } while (param_1 != 0);\n        iVar2 = *(param_3 + 0xc);\n        *(param_3 + 0xc) = iVar2 + -1;\n        if (0 < iVar2) goto code_r0x00442331;\n    }\n    else {\n        while( true ) {\n            if (*param_2 != '\\0') {\n                param_2 = param_2 + 1;\n            }\n            fcn.00441d10();\n            param_1 = param_1 - 1;\n            if (param_1 == 0) break;\n            if ((((*(param_3 + 5) & 0x10) != 0) && (*(param_3 + 0x1c) != 0)) && (param_1 == (param_1 / 3) * 3)) {\n                fcn.00441d70();\n            }\n        }\n        iVar2 = *(param_3 + 0xc);\n        if ((0 < iVar2) || ((*(param_3 + 5) & 8) != 0)) {\n            fcn.00442050();\ncode_r0x0044234a:\n            while (iVar2 = *(param_3 + 0xc),  *(param_3 + 0xc) = iVar2 + -1,  0 < iVar2) {\ncode_r0x00442331:\n                if (*param_2 != '\\0') {\n                    param_2 = param_2 + 1;\n                }\n                fcn.00441d10();\n            }\n            return;\n        }\ncode_r0x004422ef:\n        *(param_3 + 0xc) = iVar2 + -1;\n    }\n    return;\n}\n",
        "token_count": 1828
    },
    "00442570": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.00442570(int32_t param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    bool bVar9;\n    int64_t iVar10;\n    int32_t aiStack80 [5];\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t uStack44;\n    char *pcStack40;\n    char *var_20h;\n    uint32_t uStack32;\n    uint var_ch;\n    \n    var_34h = *(param_1 + 0xc);\n    uStack44 = *(param_1 + 4);\n    var_38h = *(param_1 + 8);\n    aiStack80[0] = 0x4425c2;\n    var_20h = in_EAX;\n    uStack32 = param_2;\n    iVar2 = fcn.004386a0();\n    iVar2 = -iVar2;\n    pcStack40 = &fcn.00442570::var_2ch + iVar2 + 3 & 0xfffffff0;\n    if ((uStack44 & 0x80) != 0) {\n        if (uStack32 < 0) {\n            bVar9 = var_20h != NULL;\n            var_20h = -var_20h;\n            uStack32 = -(uStack32 + bVar9);\n        }\n        else {\n            uStack44 = uStack44 & 0xffffff7f;\n            *(param_1 + 4) = uStack44;\n        }\n    }\n    iVar10 = CONCAT44(uStack32, var_20h);\n    var_2ch = uStack44 & 0x1000;\n    pcVar4 = pcStack40;\n    if ((uStack32 | var_20h) != 0) {\n        var_30h = param_1;\n        var_20h = pcStack40;\n        while( true ) {\n            pcVar5 = var_20h;\n            uVar7 = iVar10 >> 0x20;\n            *(&stack0xffffffb4 + iVar2) = iVar10;\n            *(&stack0xffffffb8 + iVar2) = uVar7;\n            *(&stack0xffffffbc + iVar2) = 10;\n            *(&stack0xffffffc0 + iVar2) = 0;\n            var_20h = pcVar5 + 1;\n            *(&stack0xffffffb0 + iVar2) = 0x442637;\n            cVar1 = fcn.004387d0();\n            *pcVar5 = cVar1 + '0';\n            *(&stack0xffffffb4 + iVar2) = iVar10;\n            *(&stack0xffffffb8 + iVar2) = uVar7;\n            *(&stack0xffffffbc + iVar2) = 10;\n            *(&stack0xffffffc0 + iVar2) = 0;\n            *(&stack0xffffffb0 + iVar2) = 0x442658;\n            iVar10 = fcn.004386d0();\n            pcVar4 = var_20h;\n            param_1 = var_30h;\n            if (iVar10 == 0) break;\n            if ((((pcStack40 != var_20h) && (var_2ch != 0)) && (*(var_30h + 0x1c) != 0)) &&\n               (uVar6 = (var_20h - pcStack40 >> 0x1f) >> 0x1e,  ((var_20h - pcStack40) + uVar6 & 3) - uVar6 == 3)) {\n                pcVar5[1] = ',';\n                var_20h = pcVar5 + 2;\n            }\n        }\n    }\n    if ((0 < var_34h) && (iVar8 = var_34h - (pcVar4 - pcStack40),  0 < iVar8)) {\n        pcVar3 = pcVar4 + iVar8;\n        pcVar5 = pcVar4;\n        do {\n            pcVar4 = pcVar5 + 1;\n            *pcVar5 = '0';\n            pcVar5 = pcVar4;\n        } while (pcVar4 != pcVar3);\n    }\n    if ((pcStack40 == pcVar4) && (var_34h != 0)) {\n        *pcVar4 = '0';\n        pcVar4 = pcVar4 + 1;\n    }\n    if (0 < var_38h) {\n        iVar8 = var_38h - (pcVar4 - pcStack40);\n        *(param_1 + 8) = iVar8;\n        if (0 < iVar8) {\n            if ((uStack44 & 0x1c0) != 0) {\n                *(param_1 + 8) = iVar8 + -1;\n            }\n            if ((var_34h < 0) && ((uStack44 & 0x600) == 0x200)) {\n                iVar8 = *(param_1 + 8);\n                *(param_1 + 8) = iVar8 + -1;\n                if (0 < iVar8) {\n                    pcVar3 = pcVar4 + iVar8;\n                    pcVar5 = pcVar4;\n                    do {\n                        pcVar4 = pcVar5 + 1;\n                        *pcVar5 = '0';\n                        pcVar5 = pcVar4;\n                    } while (pcVar4 != pcVar3);\n                    *(param_1 + 8) = 0xffffffff;\n                }\n            }\n            else if (((uStack44 & 0x400) == 0) && (iVar8 = *(param_1 + 8),  *(param_1 + 8) = iVar8 + -1,  0 < iVar8)) {\n                do {\n                    *(&stack0xffffffb0 + iVar2) = 0x4427dc;\n                    fcn.00441d10();\n                    iVar8 = *(param_1 + 8);\n                    *(param_1 + 8) = iVar8 + -1;\n                } while (0 < iVar8);\n                uStack44 = *(param_1 + 4);\n            }\n        }\n    }\n    pcVar5 = pcStack40;\n    if ((uStack44 & 0x80) == 0) {\n        if ((uStack44 & 0x100) == 0) {\n            pcVar3 = pcVar4;\n            if ((uStack44 & 0x40) != 0) {\n                pcVar3 = pcVar4 + 1;\n                *pcVar4 = ' ';\n            }\n        }\n        else {\n            *pcVar4 = '+';\n            pcVar3 = pcVar4 + 1;\n        }\n    }\n    else {\n        *pcVar4 = '-';\n        pcVar3 = pcVar4 + 1;\n    }\n    if (pcVar3 <= pcStack40) goto code_r0x0044275e;\n    do {\n        pcVar3 = pcVar3 + -1;\n        *(&stack0xffffffb0 + iVar2) = 0x442741;\n        fcn.00441d10();\n    } while (pcVar5 != pcVar3);\n    iVar8 = *(param_1 + 8);\n    *(param_1 + 8) = iVar8 + -1;\n    while (0 < iVar8) {\n        *(&stack0xffffffb0 + iVar2) = 0x44275e;\n        fcn.00441d10();\ncode_r0x0044275e:\n        iVar8 = *(param_1 + 8);\n        *(param_1 + 8) = iVar8 + -1;\n    }\n    return;\n}\n",
        "token_count": 1778
    },
    "00442b90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00442b90(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    uint32_t in_ECX;\n    uint32_t in_EDX;\n    uint8_t *puVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint8_t *puVar11;\n    uint32_t uStack64;\n    uint32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint8_t *var_28h;\n    uint8_t var_21h;\n    uint8_t *var_20h;\n    uint8_t *var_1ch;\n    uint var_ch;\n    \n    var_1ch = (in_EAX != 0x6f) + 3;\n    var_30h = *(arg_8h + 0xc);\n    var_38h = *(arg_8h + 4);\n    var_34h = *(arg_8h + 8);\n    uStack64 = 0x442c08;\n    var_2ch = in_EAX;\n    iVar4 = fcn.004386a0();\n    iVar4 = -iVar4;\n    var_28h = &fcn.00442b90::var_2ch + iVar4 + 3 & 0xfffffff0;\n    uVar1 = (var_2ch != 0x6f) * '\\b' + 7;\n    puVar8 = var_28h;\n    if ((in_ECX | in_EDX) == 0) {\ncode_r0x00442e14:\n        *(arg_8h + 4) = var_38h & 0xfffff7ff;\n    }\n    else {\n        var_20h = var_20h & 0xffffff00 | uVar1;\n        var_21h = var_2ch & 0x20;\n        puVar11 = var_28h;\n        do {\n            puVar8 = puVar11 + 1;\n            uVar3 = uVar1 & in_EDX;\n            uVar7 = uVar3 + 0x30;\n            uVar3 = uVar3 + 0x37 | var_2ch & 0x20;\n            if (uVar7 < 0x3a) {\n                uVar3 = uVar7;\n            }\n            *puVar11 = uVar3;\n            uVar6 = in_ECX << 0x20 - (var_1ch & 0x1f);\n            uVar9 = in_ECX >> (var_1ch & 0x1f);\n            in_ECX = uVar9;\n            in_EDX = in_EDX >> (var_1ch & 0x1f) | uVar6;\n            if ((var_1ch & 0x20) != 0) {\n                in_ECX = 0;\n                in_EDX = uVar9;\n            }\n            puVar11 = puVar8;\n        } while ((in_ECX | in_EDX) != 0);\n        if (var_28h == puVar8) goto code_r0x00442e14;\n    }\n    if ((var_30h < 1) || (iVar10 = var_30h - (puVar8 - var_28h),  iVar10 < 1)) {\n        if ((var_2ch == 0x6f) && ((*(arg_8h + 5) & 8) != 0)) {\n            *puVar8 = 0x30;\n            puVar8 = puVar8 + 1;\n        }\n    }\n    else {\n        puVar5 = puVar8 + iVar10;\n        puVar11 = puVar8;\n        do {\n            puVar8 = puVar11 + 1;\n            *puVar11 = 0x30;\n            puVar11 = puVar8;\n        } while (puVar8 != puVar5);\n    }\n    if ((var_30h != 0) && (var_28h == puVar8)) {\n        *puVar8 = 0x30;\n        puVar8 = puVar8 + 1;\n    }\n    if (puVar8 - var_28h < var_34h) {\n        puVar11 = var_34h - (puVar8 - var_28h);\n        *(arg_8h + 8) = puVar11;\n        uVar6 = *(arg_8h + 4);\n        if (var_2ch == 0x6f) {\n            if ((var_30h < 0) && ((uVar6 & 0x600) == 0x200)) {\ncode_r0x00442ed0:\n                puVar11 = puVar11 + puVar8;\n                puVar5 = puVar8;\n                do {\n                    puVar8 = puVar5 + 1;\n                    *puVar5 = 0x30;\n                    puVar5 = puVar8;\n                } while (puVar8 != puVar11);\n                puVar11 = 0xffffffff;\n                if (var_2ch != 0x6f) goto joined_r0x00442eeb;\n                goto code_r0x00442ea4;\n            }\n            puVar5 = puVar11 + -1;\n            if ((uVar6 & 0x400) == 0) {\n                var_1ch = puVar8;\n                goto code_r0x00442e33;\n            }\n        }\n        else {\n            if ((uVar6 & 0x800) == 0) {\n                if (var_30h < 0) goto code_r0x00442eb4;\ncode_r0x00442e7a:\n                var_1ch = puVar8;\n            }\n            else {\n                puVar11 = puVar11 + -2;\n                if ((0 < puVar11) && (var_30h < 0)) {\ncode_r0x00442eb4:\n                    if ((uVar6 & 0x600) == 0x200) goto code_r0x00442ed0;\n                    if ((uVar6 & 0x800) == 0) goto code_r0x00442e7a;\n                }\ncode_r0x00442d91:\n                puVar8[1] = 0x30;\n                *puVar8 = var_2ch;\n                puVar8 = puVar8 + 2;\n                var_1ch = puVar8;\n                if (puVar11 < 1) goto code_r0x00442ea4;\n            }\n            puVar5 = puVar11 + -1;\n            puVar8 = var_1ch;\n            if ((uVar6 & 0x400) == 0) {\ncode_r0x00442e33:\n                do {\n                    *(&stack0xffffffc0 + iVar4) = 0x442e42;\n                    fcn.00441d10();\n                    bVar2 = 0 < puVar5;\n                    puVar5 = puVar5 + -1;\n                } while (bVar2);\n                if (var_1ch <= var_28h) {\n                    return;\n                }\n                var_20h = 0xfffffffe;\n                puVar11 = 0xffffffff;\n                puVar8 = var_1ch;\n                goto code_r0x00442e61;\n            }\n        }\n        if (puVar8 <= var_28h) goto code_r0x00442d20;\ncode_r0x00442cec:\n        var_1ch = puVar11;\n        var_20h = puVar5;\n        puVar11 = var_28h;\n    }\n    else {\n        *(arg_8h + 8) = 0xffffffff;\n        if (var_2ch == 0x6f) {\n            puVar5 = 0xfffffffe;\n            puVar11 = 0xffffffff;\n            if (puVar8 <= var_28h) {\n                return;\n            }\n            goto code_r0x00442cec;\n        }\n        uVar6 = *(arg_8h + 4);\njoined_r0x00442eeb:\n        puVar11 = 0xffffffff;\n        if ((uVar6 & 0x800) != 0) goto code_r0x00442d91;\ncode_r0x00442ea4:\n        if (puVar8 <= var_28h) {\n            return;\n        }\n        var_20h = puVar11 + -1;\ncode_r0x00442e61:\n        var_1ch = puVar11;\n        puVar11 = var_28h;\n    }\n    do {\n        puVar8 = puVar8 + -1;\n        *(&stack0xffffffc0 + iVar4) = 0x442d0d;\n        fcn.00441d10();\n    } while (puVar11 < puVar8);\n    puVar5 = var_20h;\n    if (var_1ch < 1) {\n        return;\n    }\ncode_r0x00442d20:\n    do {\n        *(&stack0xffffffc0 + iVar4) = 0x442d2f;\n        fcn.00441d10();\n        bVar2 = 0 < puVar5;\n        puVar5 = puVar5 + -1;\n    } while (bVar2);\n    return;\n}\n",
        "token_count": 2161
    },
    "00443500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffc0 : 0x00443be3\n\nint32_t fcn.00443500(uint32_t param_1, uint param_2, uint param_3, char *param_4, unkbyte10 *param_5)\n\n{\n    unkbyte10 Var1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    char cVar7;\n    char *pcVar8;\n    uint32_t uVar9;\n    char *pcVar10;\n    char16_t *pcVar11;\n    unkbyte10 *pVar12;\n    float10 fVar13;\n    int32_t iStack132;\n    int32_t *piStack124;\n    ushort uStack94;\n    uint32_t uStack92;\n    int32_t iStack88;\n    int32_t iStack84;\n    int32_t iStack80;\n    uint uStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint uStack56;\n    ushort uStack52;\n    int32_t iStack48;\n    ushort uStack44;\n    int32_t iStack40;\n    uint uStack36;\n    uint uStack32;\n    \n    puVar4 = sub.msvcrt.dll__errno();\n    uVar2 = *puVar4;\n    iStack64 = -1;\n    iStack60 = -1;\n    uStack56 = 0xfffffffd;\n    uStack52 = 0;\n    iStack48 = 0;\n    uStack44 = 0;\n    iStack40 = 0;\n    uStack32 = 0xffffffff;\n    param_1 = param_1 & 0x6000;\n    iVar5 = *param_4;\n    uStack72 = param_2;\n    uStack68 = param_1;\n    uStack36 = param_3;\njoined_r0x00443594:\n    while( true ) {\n        if (iVar5 == 0) {\n            return iStack40;\n        }\n        pcVar10 = param_4 + 1;\n        if (iVar5 == 0x25) break;\n        fcn.00441d10();\n        iVar5 = param_4[1];\n        param_4 = pcVar10;\n    }\n    cVar7 = param_4[1];\n    iStack60 = -1;\n    iStack64 = -1;\n    uVar9 = 0;\n    iStack132 = 0;\n    piStack124 = &iStack64;\n    param_4 = pcVar10;\n    uStack68 = param_1;\ncode_r0x004435f4:\n    iVar5 = cVar7;\n    pcVar8 = param_4;\n    if (cVar7 != '\\0') {\ncode_r0x00443604:\n        param_4 = pcVar8 + 1;\n    // switch table (91 cases) at 0x527700\n        switch(cVar7) {\n        case ' ':\n            goto code_r0x00443680;\n        default:\n            if ((9 < cVar7 - 0x30U) || (3 < uVar9)) goto code_r0x00443c8e;\n            if (uVar9 == 0) {\n                uVar9 = 1;\n            }\n            else {\ncode_r0x00443c0e:\n                if (uVar9 == 2) {\n                    uVar9 = 3;\n                }\n            }\n            if (piStack124 == NULL) goto code_r0x004436d0;\n            if (*piStack124 < 0) {\n                *piStack124 = iVar5 + -0x30;\n                goto code_r0x004436d0;\n            }\n            cVar7 = pcVar8[1];\n            *piStack124 = iVar5 + -0x30 + *piStack124 * 10;\n            goto code_r0x004435f4;\n        case '#':\n            if (uVar9 != 0) goto code_r0x004436d0;\n            cVar7 = pcVar8[1];\n            uStack68 = uStack68 | 0x800;\n            goto code_r0x004435f4;\n        case '%':\n            fcn.00441d10();\n            break;\n        case '\\'':\n            if (uVar9 != 0) goto code_r0x004436d0;\n            uStack68 = uStack68 | 0x1000;\n            uStack92 = 0;\n            iVar5 = sub.msvcrt.dll_localeconv();\n            iStack48 = fcn.0043d240(&uStack94, *(iVar5 + 4), 0x10, &uStack92);\n            if (0 < iStack48) {\n                uStack44 = uStack94;\n            }\n            cVar7 = pcVar8[1];\n            goto code_r0x004435f4;\n        case '*':\n            if (piStack124 == NULL) goto code_r0x004439f9;\n            if ((uVar9 & 0xfffffffd) != 0) {\n                cVar7 = pcVar8[1];\n                piStack124 = NULL;\n                uVar9 = 4;\n                goto code_r0x004435f4;\n            }\n            iVar5 = *param_5;\n            param_5 = param_5 + 4;\n            *piStack124 = iVar5;\n            if (iVar5 < 0) {\n                if (uVar9 == 0) {\n                    cVar7 = pcVar8[1];\n                    uStack68 = uStack68 | 0x400;\n                    iStack64 = -iStack64;\n                    piStack124 = NULL;\n                    goto code_r0x004435f4;\n                }\n                iStack60 = -1;\n            }\n            cVar7 = pcVar8[1];\n            piStack124 = NULL;\n            goto code_r0x004435f4;\n        case '+':\n            if (uVar9 != 0) goto code_r0x004436d0;\n            cVar7 = pcVar8[1];\n            uStack68 = uStack68 | 0x100;\n            goto code_r0x004435f4;\n        case '-':\n            if (uVar9 != 0) goto code_r0x004436d0;\n            cVar7 = pcVar8[1];\n            uStack68 = uStack68 | 0x400;\n            goto code_r0x004435f4;\n        case '.':\n            if (uVar9 < 2) {\n                piStack124 = &iStack60;\n                cVar7 = pcVar8[1];\n                iStack60 = 0;\n                uVar9 = 2;\n            }\n            else {\ncode_r0x004439f9:\n                cVar7 = pcVar8[1];\n                uVar9 = 4;\n            }\n            goto code_r0x004435f4;\n        case '0':\n            if (uVar9 == 0) {\n                cVar7 = pcVar8[1];\n                uStack68 = uStack68 | 0x200;\n                goto code_r0x004435f4;\n            }\n            if (uVar9 < 4) goto code_r0x00443c0e;\ncode_r0x00443c8e:\n            fcn.00441d10();\n            param_4 = pcVar10;\n            break;\n        case 'A':\n            if ((uStack68 & 4) != 0) goto code_r0x004438d3;\ncode_r0x00443a3c:\n            fVar13 = *param_5;\n            param_5 = param_5 + 8;\n            fcn.00442f00(SUB104(fVar13, 0), fVar13 >> 0x20, fVar13 >> 0x40);\n            break;\n        case 'C':\ncode_r0x00443a5f:\n            iStack60 = -1;\n            uStack92 = uStack92 & 0xffff0000 | *param_5 & 0xffff;\n            fcn.00441d70();\n            param_5 = param_5 + 4;\n            break;\n        case 'E':\n            if ((uStack68 & 4) == 0) goto code_r0x004436ef;\ncode_r0x0044369c:\n            Var1 = *param_5;\n            fcn.00442950(Var1, Var1 >> 0x20, Var1 >> 0x40);\n            param_5 = param_5 + 0xc;\n            break;\n        case 'F':\n            if ((uStack68 & 4) != 0) goto code_r0x00443717;\ncode_r0x00443920:\n            fVar13 = *param_5;\n            fcn.004424a0(SUB104(fVar13, 0), fVar13 >> 0x20, fVar13 >> 0x40);\n            param_5 = param_5 + 8;\n            break;\n        case 'G':\n            if ((uStack68 & 4) != 0) goto code_r0x00443743;\ncode_r0x004438fc:\n            fVar13 = *param_5;\n            fcn.00442a00(SUB104(fVar13, 0), fVar13 >> 0x20, fVar13 >> 0x40);\n            param_5 = param_5 + 8;\n            break;\n        case 'I':\n            cVar7 = pcVar8[1];\n            if (cVar7 == '6') {\n                if (pcVar8[2] != '4') goto code_r0x00443c8e;\n                param_4 = pcVar8 + 3;\n                cVar7 = pcVar8[3];\n                iStack132 = 3;\n                uVar9 = 4;\n            }\n            else if (cVar7 == '3') {\n                if (pcVar8[2] != '2') goto code_r0x00443c49;\n                param_4 = pcVar8 + 3;\n                cVar7 = pcVar8[3];\n                iStack132 = 2;\n                uVar9 = 4;\n            }\n            else {\n                iStack132 = 0;\n                uVar9 = 4;\n            }\n            goto code_r0x004435f4;\n        case 'L':\n            cVar7 = pcVar8[1];\n            uStack68 = uStack68 | 4;\n            uVar9 = 4;\n            goto code_r0x004435f4;\n        case 'S':\ncode_r0x00443b16:\n            pcVar11 = *param_5;\n            if (pcVar11 == NULL) {\n                pcVar11 = L\"(null)\";\n            }\n            if (iStack60 < 0) {\n                sub.msvcrt.dll_wcslen(pcVar11);\n            }\n            else {\n                fcn.004474f0(pcVar11, iStack60);\n            }\n            fcn.00441d70();\n            param_5 = param_5 + 4;\n            break;\n        case 'X':\n        case 'o':\n        case 'u':\n        case 'x':\n            if (iStack132 == 3) {\n                uStack92 = *param_5;\n                iStack88 = *(param_5 + 4);\n                pVar12 = param_5 + 8;\n            }\n            else {\n                pVar12 = param_5 + 4;\n                uStack92 = *param_5;\n                if (iStack132 != 2) {\n                    if (iStack132 == 1) {\n                        uStack92 = uStack92 & 0xffff;\n                        iStack88 = 0;\n                        goto code_r0x00443898;\n                    }\n                    if (iStack132 == 5) {\n                        uStack92 = uStack92 & 0xff;\n                    }\n                }\n                iStack88 = 0;\n            }\ncode_r0x00443898:\n            if (iVar5 == 0x75) goto code_r0x004439c3;\n            fcn.00442b90(&uStack72);\n            param_5 = pVar12;\n            break;\n        case 'a':\n            uVar6 = uStack68 | 0x20;\n            uVar9 = uStack68 & 4;\n            uStack68 = uVar6;\n            if (uVar9 == 0) goto code_r0x00443a3c;\ncode_r0x004438d3:\n            Var1 = *param_5;\n            param_5 = param_5 + 0xc;\n            fcn.00442f00(Var1, Var1 >> 0x20, Var1 >> 0x40);\n            break;\n        case 'c':\n            iStack60 = -1;\n            if (iStack132 - 2U < 2) goto code_r0x00443a5f;\n            uStack92 = uStack92 & 0xffffff00 | *param_5 & 0xff;\n            fcn.00441e90();\n            param_5 = param_5 + 4;\n            break;\n        case 'd':\n        case 'i':\n            uStack68 = uStack68 | 0x80;\n            if (iStack132 == 3) {\n                uStack92 = *param_5;\n                iStack88 = *(param_5 + 4);\n                pVar12 = param_5 + 8;\n            }\n            else {\n                pVar12 = param_5 + 4;\n                uStack92 = *param_5;\n                if (iStack132 != 2) {\n                    if (iStack132 == 1) {\n                        uStack92 = uStack92;\n                        iStack88 = uStack92 >> 0x1f;\n                        goto code_r0x004439af;\n                    }\n                    if (iStack132 == 5) {\n                        uStack92 = uStack92;\n                    }\n                }\n                iStack88 = uStack92 >> 0x1f;\n            }\ncode_r0x004439af:\n            iStack84 = iStack88 >> 0x1f;\n            iStack80 = iStack84;\ncode_r0x004439c3:\n            fcn.00442570();\n            param_5 = pVar12;\n            break;\n        case 'e':\n            uVar6 = uStack68 | 0x20;\n            uVar9 = uStack68 & 4;\n            uStack68 = uVar6;\n            if (uVar9 != 0) goto code_r0x0044369c;\ncode_r0x004436ef:\n            fVar13 = *param_5;\n            fcn.00442950(SUB104(fVar13, 0), fVar13 >> 0x20, fVar13 >> 0x40);\n            param_5 = param_5 + 8;\n            break;\n        case 'f':\n            uVar6 = uStack68 | 0x20;\n            uVar9 = uStack68 & 4;\n            uStack68 = uVar6;\n            if (uVar9 == 0) goto code_r0x00443920;\ncode_r0x00443717:\n            Var1 = *param_5;\n            fcn.004424a0(Var1, Var1 >> 0x20, Var1 >> 0x40);\n            param_5 = param_5 + 0xc;\n            break;\n        case 'g':\n            uVar6 = uStack68 | 0x20;\n            uVar9 = uStack68 & 4;\n            uStack68 = uVar6;\n            if (uVar9 == 0) goto code_r0x004438fc;\ncode_r0x00443743:\n            Var1 = *param_5;\n            fcn.00442a00(Var1, Var1 >> 0x20, Var1 >> 0x40);\n            param_5 = param_5 + 0xc;\n            break;\n        case 'h':\n            cVar7 = pcVar8[1];\n            iStack132 = 1;\n            uVar9 = 4;\n            if (cVar7 != 'h') goto code_r0x00443631;\n            param_4 = pcVar8 + 2;\n            cVar7 = pcVar8[2];\n            iStack132 = 5;\n            goto code_r0x004435f4;\n        case 'j':\n            cVar7 = pcVar8[1];\n            iStack132 = 3;\n            uVar9 = 4;\n            goto code_r0x004435f4;\n        case 'l':\n            cVar7 = pcVar8[1];\n            iStack132 = 2;\n            uVar9 = 4;\n            if (cVar7 != 'l') goto code_r0x00443631;\n            param_4 = pcVar8 + 2;\n            cVar7 = pcVar8[2];\n            iStack132 = 3;\n            goto code_r0x004435f4;\n        case 'm':\n            sub.msvcrt.dll_strerror(uVar2);\n            fcn.00441f50();\n            break;\n        case 'n':\n            piVar3 = *param_5;\n            param_5 = param_5 + 4;\n            if (iStack132 == 5) {\n                *piVar3 = iStack40;\n            }\n            else if (iStack132 == 1) {\n                *piVar3 = iStack40;\n            }\n            else if (iStack132 == 2) {\n                *piVar3 = iStack40;\n            }\n            else {\n                *piVar3 = iStack40;\n                if (iStack132 == 3) {\n                    piVar3[1] = iStack40 >> 0x1f;\n                }\n            }\n            break;\n        case 'p':\n            if ((uVar9 == 0) && (uStack68 == param_1)) {\n                uStack68 = param_1 | 0x200;\n                iStack60 = 8;\n            }\n            uStack92 = *param_5;\n            iStack88 = 0;\n            iStack84 = 0;\n            iStack80 = 0;\n            fcn.00442b90(&uStack72);\n            param_5 = param_5 + 4;\n            break;\n        case 's':\n            if (iStack132 - 2U < 2) goto code_r0x00443b16;\n            fcn.00441f50();\n            param_5 = param_5 + 4;\n            break;\n        case 't':\n        case 'z':\n            cVar7 = pcVar8[1];\n            iStack132 = 0;\ncode_r0x00443631:\n            uVar9 = 4;\n            goto code_r0x004435f4;\n        }\n        iVar5 = *param_4;\n    }\n    goto joined_r0x00443594;\ncode_r0x00443c49:\n    uVar9 = 4;\n    iStack132 = 0;\n    iVar5 = 0x33;\n    pcVar8 = param_4;\n    goto code_r0x00443604;\ncode_r0x00443680:\n    if (uVar9 == 0) {\n        cVar7 = pcVar8[1];\n        uStack68 = uStack68 | 0x40;\n    }\n    else {\ncode_r0x004436d0:\n        cVar7 = pcVar8[1];\n    }\n    goto code_r0x004435f4;\n}\n",
        "token_count": 4322
    },
    "00445670": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint8_t fcn.00445670(uint8_t **param_1, uint32_t *param_2, uint32_t *param_3, int32_t *param_4, uint32_t param_5)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    uint8_t **ppuVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint32_t *puVar10;\n    uint8_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    uint8_t uVar14;\n    uint8_t *puVar15;\n    uint32_t *puVar16;\n    uint32_t uVar17;\n    int32_t iVar18;\n    uint8_t uVar19;\n    uint32_t *puVar20;\n    int32_t iVar21;\n    uint32_t uVar22;\n    bool bVar23;\n    uint8_t *puStack56;\n    uint8_t *puStack52;\n    uint32_t uStack44;\n    int32_t iStack40;\n    uint32_t *puStack36;\n    int32_t iStack32;\n    \n    ppuVar5 = sub.msvcrt.dll_localeconv();\n    puVar3 = *ppuVar5;\n    if (*0x56be30 == '\\0') {\n        fcn.004461e0();\n    }\n    *param_4 = 0;\n    puStack52 = *param_1;\n    uVar14 = puStack52[2];\n    if (uVar14 == 0x30) {\n        iVar12 = 0;\n        puVar7 = puStack52 + 3;\n        do {\n            puStack52 = puVar7;\n            uVar14 = *puStack52;\n            iVar12 = iVar12 + 1;\n            puVar7 = puStack52 + 1;\n        } while (uVar14 == 0x30);\n    }\n    else {\n        puStack52 = puStack52 + 2;\n        iVar12 = 0;\n    }\n    puStack56 = puStack52;\n    uVar11 = *puVar3;\n    if (*(uVar14 + 0x56be00) == '\\0') {\n        puVar7 = puStack52;\n        if ((uVar11 != 0) && (puVar6 = puStack52,  puVar15 = puVar3,  uVar14 == uVar11)) {\ncode_r0x00445711:\n            puVar6 = puVar6 + 1;\n            uVar1 = puVar15[1];\n            uVar19 = *puVar6;\n            if (uVar1 != 0) goto code_r0x00445703;\n            cVar2 = *(uVar19 + 0x56be00);\n            puVar7 = puVar6;\n            uVar14 = uVar19;\n            if (cVar2 != '\\0') {\n                puVar15 = puVar6;\n                if (uVar19 == 0x30) {\n                    do {\n                        puVar15 = puVar15 + 1;\n                        uVar19 = *puVar15;\n                    } while (uVar19 == 0x30);\n                    cVar2 = *(uVar19 + 0x56be00);\n                }\n                bVar23 = cVar2 == '\\0';\n                puStack56 = puVar15;\n                if (!bVar23) {\n                    iVar12 = 1;\n                    goto code_r0x004458b2;\n                }\n                iVar12 = 1;\n                if (uVar11 != uVar19) goto code_r0x00445780;\n                goto code_r0x004458dc;\n            }\n        }\ncode_r0x004458fa:\n        puVar15 = puVar7;\n        if ((uVar14 == 0x50) || (uVar14 == 0x70)) {\n            uStack44 = 0;\n            bVar23 = true;\n            goto code_r0x00445922;\n        }\n        bVar23 = true;\n        uStack44 = 0;\n        puStack52 = NULL;\n        bVar4 = false;\ncode_r0x00445ad8:\n        if (iVar12 == 0) {\n            puVar7 = puStack56 + -1;\n        }\n        *param_1 = puVar7;\n        if (bVar23) {\n            return 0;\n        }\n        if (bVar4) {\n            uVar8 = param_2[3];\n            if (puStack52 != NULL) {\n                if (uVar8 == 2) {\n                    if (param_5 != 0) goto code_r0x00445a9a;\n                }\n                else if ((uVar8 != 3) || (param_5 == 0)) goto code_r0x00445a9a;\n                iStack40 = fcn.00446700(0);\n                *(iStack40 + 0x10) = 1;\n                *(iStack40 + 0x14) = 1;\n                uVar8 = param_2[1];\n                goto code_r0x00445b54;\n            }\n            if (uVar8 == 2) {\n                if (param_5 != 0) goto code_r0x00445c4b;\n            }\n            else if (uVar8 == 3) {\n                if (param_5 == 0) goto code_r0x00445c4b;\n            }\n            else if (uVar8 != 1) {\ncode_r0x00445c4b:\n                uVar8 = *param_2 & 0x1f;\n                iVar18 = *param_2 >> 5;\n                iVar21 = (iVar18 + 1) - (uVar8 == 0);\n                iVar12 = 0;\n                iVar13 = iVar21;\n                while (iVar13 = iVar13 >> 1,  iVar13 != 0) {\n                    iVar12 = iVar12 + 1;\n                }\n                iVar12 = fcn.00446700(iVar12);\n                *param_4 = iVar12;\n                *(iVar12 + 0x10) = iVar21;\n                if (0 < iVar18) {\n                    puVar9 = iVar12 + 0x14;\n                    do {\n                        *puVar9 = 0xffffffff;\n                        puVar9 = puVar9 + 1;\n                        puStack52 = iVar18;\n                    } while (puVar9 != iVar12 + 0x14 + iVar18 * 4);\n                }\n                if (iVar18 < iVar21) {\n                    *(iVar12 + 0x14 + puStack52 * 4) = 0x20 >> (0x20U - uVar8 & 0x1f);\n                }\n                *param_3 = param_2[1];\n                return 0x11;\n            }\n            goto code_r0x00445cde;\n        }\n    }\n    else {\n        iVar12 = iVar12 + 1;\n        bVar23 = false;\n        puVar6 = NULL;\n        puVar15 = puStack52;\ncode_r0x004458b2:\n        do {\n            puVar7 = puVar15;\n            puVar15 = puVar7 + 1;\n        } while (*(puVar7[1] + 0x56be00) != '\\0');\n        if (puVar7[1] == uVar11) {\n            if (puVar6 == NULL) {\n                if (puVar3[1] != 0) {\n                    if (puVar7[2] == puVar3[1]) {\n                        puVar6 = puVar7 + 3;\n                        puVar7 = puVar3 + 2;\n                        do {\n                            uVar14 = *puVar7;\n                            uVar11 = *puVar6;\n                            if (uVar14 == 0) goto code_r0x00445d9a;\n                            puVar6 = puVar6 + 1;\n                            puVar7 = puVar7 + 1;\n                        } while (uVar14 == uVar11);\n                        uVar11 = *puVar15;\n                        uStack44 = 0;\n                    }\n                    else {\n                        uStack44 = 0;\n                    }\n                    goto code_r0x00445798;\n                }\n                uVar11 = puVar7[2];\n                puVar6 = puVar7 + 2;\ncode_r0x00445d9a:\n                cVar2 = *(uVar11 + 0x56be00);\n                puVar15 = puVar6;\n                while (cVar2 != '\\0') {\n                    puVar15 = puVar15 + 1;\n                    uVar11 = *puVar15;\n                    cVar2 = *(uVar11 + 0x56be00);\n                }\n            }\n            else {\ncode_r0x004458dc:\n                uVar11 = *puVar15;\n            }\ncode_r0x0044578f:\n            uStack44 = (puVar6 - puVar15) * 4;\n        }\n        else {\ncode_r0x00445780:\n            uVar11 = *puVar15;\n            uStack44 = 0;\n            if (puVar6 != NULL) goto code_r0x0044578f;\n        }\ncode_r0x00445798:\n        if ((uVar11 == 0x50) || (uVar11 == 0x70)) {\ncode_r0x00445922:\n            uVar14 = puVar15[1];\n            if (uVar14 == 0x2b) {\n                puStack52 = NULL;\ncode_r0x00445b88:\n                puVar6 = puVar15 + 2;\n                uVar14 = puVar15[2];\n            }\n            else {\n                if (uVar14 == 0x2d) {\n                    puStack52 = 0x1;\n                    goto code_r0x00445b88;\n                }\n                puVar6 = puVar15 + 1;\n                puStack52 = NULL;\n            }\n            bVar4 = false;\n            puVar7 = puVar15;\n            if (*(uVar14 + 0x56be00) - 1 < 0x19) {\n                uVar8 = *(uVar14 + 0x56be00) - 0x10;\n                puVar7 = puVar6 + 1;\n                uVar14 = *(puVar6[1] + 0x56be00);\n                while (uVar14 - 1 < 0x19) {\n                    if ((uVar8 & 0xf8000000) != 0) {\n                        bVar4 = true;\n                    }\n                    puVar7 = puVar7 + 1;\n                    uVar8 = (uVar14 - 0x10) + uVar8 * 10;\n                    uVar14 = *(*puVar7 + 0x56be00);\n                }\n                uVar22 = -uVar8;\n                if (puStack52 == NULL) {\n                    uVar22 = uVar8;\n                }\n                uStack44 = uStack44 + uVar22;\n            }\n            goto code_r0x00445ad8;\n        }\n        *param_1 = puVar15;\n        if (bVar23) {\n            return 0;\n        }\n    }\n    iVar12 = 0;\n    for (puVar7 = puVar15 + (-1 - puStack56); 7 < puVar7; puVar7 = puVar7 >> 1) {\n        iVar12 = iVar12 + 1;\n    }\n    iStack40 = fcn.00446700(iVar12);\n    puStack36 = iStack40 + 0x14;\n    if (puVar3[1] == 0) {\n        iStack32 = 0;\n    }\n    else {\n        iVar12 = 0;\n        do {\n            iStack32 = iVar12 + 1;\n            iVar13 = iVar12 + 2;\n            iVar12 = iStack32;\n        } while (puVar3[iVar13] != 0);\n    }\n    puVar20 = puStack36;\n    if (puStack56 < puVar15) {\n        puStack52 = NULL;\n        iVar12 = 0;\n        do {\n            while( true ) {\n                uVar8 = puStack52;\n                uVar14 = puVar15[-1];\n                puVar7 = puVar15 + -1;\n                puVar10 = puVar20 + 1;\n                if (uVar14 == puVar3[iStack32]) break;\n                if (iVar12 == 0x20) {\n                    puStack52 = NULL;\n                    *puVar20 = uVar8;\n                    uVar14 = puVar15[-1];\n                    iVar12 = 0;\n                    iVar13 = 4;\n                    puVar16 = puVar20 + 2;\n                    puVar20 = puVar10;\n                }\n                else {\n                    iVar13 = iVar12 + 4;\n                    puVar16 = puVar10;\n                }\n                puStack52 = puStack52 | (*(uVar14 + 0x56be00) & 0xf) << (iVar12 & 0x1f);\n                puVar15 = puVar7;\n                iVar12 = iVar13;\n                puVar10 = puVar16;\n                if (puVar7 <= puStack56) goto code_r0x00445a00;\n            }\n            puVar15 = puVar7 + -iStack32;\n        } while (puStack56 < puVar15);\ncode_r0x00445a00:\n        uVar8 = 0x1f;\n        if (puStack52 != NULL) {\n            for (; puStack52 >> uVar8 == 0; uVar8 = uVar8 - 1) {\n            }\n        }\n        uVar8 = uVar8 ^ 0x1f;\n    }\n    else {\n        puStack52 = NULL;\n        puVar10 = iStack40 + 0x18;\n        uVar8 = 0x20;\n    }\n    *puVar20 = puStack52;\n    iVar12 = puVar10 - puStack36 >> 2;\n    *(iStack40 + 0x10) = iVar12;\n    iVar12 = iVar12 * 0x20 - uVar8;\n    uVar22 = *param_2;\n    if (uVar22 < iVar12) {\n        iVar12 = iVar12 - uVar22;\n        uVar17 = fcn.00447420(iStack40, iVar12);\n        if (uVar17 != 0) {\n            iVar13 = iVar12 + -1;\n            uVar17 = 1;\n            if ((puStack36[iVar13 >> 5] & 1 << (iVar13 & 0x1f)) != 0) {\n                if ((iVar13 == 0) || (iVar13 = fcn.00447420(iStack40, iVar13),  iVar13 == 0)) {\n                    uVar17 = 2;\n                }\n                else {\n                    uVar17 = 3;\n                }\n            }\n        }\n        fcn.00446080(iStack40, iVar12);\n        uStack44 = uStack44 + iVar12;\n    }\n    else {\n        uVar17 = 0;\n        if (iVar12 < uVar22) {\n            iStack40 = fcn.00446c50(iStack40, uVar22 - iVar12);\n            puStack36 = iStack40 + 0x14;\n            uStack44 = uStack44 - (uVar22 - iVar12);\n        }\n    }\n    if (param_2[2] < uStack44) {\ncode_r0x00445cd2:\n        fcn.004467d0(iStack40);\ncode_r0x00445cde:\n        puVar9 = sub.msvcrt.dll__errno();\n        *puVar9 = 0x22;\n        return 0xa3;\n    }\n    uVar8 = param_2[1];\n    if (uStack44 < uVar8) {\n        uStack44 = uVar8 - uStack44;\n        if (uVar22 <= uStack44) {\n            uVar17 = param_2[3];\n            if (uVar17 == 2) {\n                if (param_5 == 0) goto code_r0x00445f02;\n            }\n            else if (uVar17 == 3) {\n                if (param_5 != 0) goto code_r0x00445f02;\n            }\n            else if ((uVar17 == 1) && (uVar22 == uStack44)) {\n                if (1 < uVar22) {\n                    iVar12 = fcn.00447420(iStack40, uVar22 - 1);\n                    if (iVar12 == 0) goto code_r0x00445a8e;\n                    uVar8 = param_2[1];\n                }\ncode_r0x00445f02:\n                *(iStack40 + 0x10) = 1;\n                *puStack36 = 1;\ncode_r0x00445b54:\n                *param_4 = iStack40;\n                *param_3 = uVar8;\n                puVar9 = sub.msvcrt.dll__errno();\n                *puVar9 = 0x22;\n                return 0x62;\n            }\ncode_r0x00445a8e:\n            fcn.004467d0(iStack40);\ncode_r0x00445a9a:\n            puVar9 = sub.msvcrt.dll__errno();\n            *puVar9 = 0x22;\n            return 0x50;\n        }\n        iVar12 = uStack44 - 1;\n        if (uVar17 == 0) {\n            if (iVar12 != 0) {\n                uVar17 = fcn.00447420(iStack40, iVar12);\n            }\n        }\n        else {\n            uVar17 = 1;\n        }\n        if ((puStack36[iVar12 >> 5] & 1 << (iVar12 & 0x1f)) != 0) {\n            uVar17 = uVar17 | 2;\n        }\n        uVar22 = uVar22 - uStack44;\n        uVar14 = 2;\n        fcn.00446080(iStack40, uStack44);\n        uStack44 = param_2[1];\n    }\n    else {\n        uVar14 = 1;\n    }\n    if (uVar17 == 0) goto code_r0x00445d2e;\n    uVar8 = param_2[3];\n    if (uVar8 == 2) {\n        param_5 = 1 - param_5;\njoined_r0x00445e7c:\n        if (param_5 != 0) {\n            iVar12 = *(iStack40 + 0x10);\n            iStack40 = fcn.0043e780(iStack40);\n            if (uVar14 == 2) {\n                uVar14 = 0x22;\n                if (*param_2 - 1 == uVar22) {\n                    uVar14 = ((*(iStack40 + 0x14 + (uVar22 >> 5) * 4) & 1 << (uVar22 & 0x1f)) == 0) + 0x21;\n                }\n                goto code_r0x00445d2e;\n            }\n            if (*(iStack40 + 0x10) == iVar12 || *(iStack40 + 0x10) < iVar12) {\n                if ((uVar22 & 0x1f) != 0) {\n                    puVar20 = iStack40 + 0x10 + iVar12 * 4;\n                    uVar8 = 0x1f;\n                    if (*puVar20 != 0) {\n                        for (; *puVar20 >> uVar8 == 0; uVar8 = uVar8 - 1) {\n                        }\n                    }\n                    if ((uVar8 ^ 0x1f) < 0x20 - (uVar22 & 0x1f)) goto code_r0x00445ec2;\n                }\n            }\n            else {\ncode_r0x00445ec2:\n                fcn.00446080(iStack40, 1);\n                uStack44 = uStack44 + 1;\n                if (param_2[2] < uStack44) goto code_r0x00445cd2;\n            }\n            uVar14 = 0x21;\n            goto code_r0x00445d2e;\n        }\n    }\n    else {\n        if (uVar8 == 3) goto joined_r0x00445e7c;\n        if ((uVar8 == 1) && ((uVar17 & 2) != 0)) {\n            param_5 = (uVar17 | *puStack36) & 1;\n            goto joined_r0x00445e7c;\n        }\n    }\n    uVar14 = uVar14 | 0x10;\ncode_r0x00445d2e:\n    *param_4 = iStack40;\n    *param_3 = uStack44;\n    return uVar14;\ncode_r0x00445703:\n    puVar15 = puVar15 + 1;\n    if (uVar1 != uVar19) goto code_r0x004458fa;\n    goto code_r0x00445711;\n}\n",
        "token_count": 4708
    },
    "004471d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004471d0(int32_t param_1, int32_t param_2, int32_t param_3, uint param_4, int32_t param_5)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    \n    iVar4 = (param_3 + 8) / 9;\n    if (iVar4 < 2) {\n        iVar5 = 0;\n    }\n    else {\n        iVar5 = 0;\n        iVar3 = 1;\n        do {\n            iVar1 = iVar3 * 2;\n            iVar5 = iVar5 + 1;\n            iVar2 = iVar3 * -2;\n            iVar3 = iVar1;\n        } while (iVar4 != iVar1 && SBORROW4(iVar4, iVar1) == iVar4 + iVar2 < 0);\n    }\n    iVar4 = fcn.00446700(iVar5);\n    *(iVar4 + 0x10) = 1;\n    *(iVar4 + 0x14) = param_4;\n    if (param_2 < 10) {\n        pcVar6 = param_1 + 9 + param_5;\n        param_2 = 9;\n    }\n    else {\n        pcVar6 = param_1 + 9;\n        do {\n            pcVar8 = pcVar6 + 1;\n            iVar4 = fcn.00446840(iVar4, 10, *pcVar6 + -0x30);\n            pcVar6 = pcVar8;\n        } while (pcVar8 != param_2 + param_1);\n        pcVar6 = param_5 + param_2 + param_1;\n    }\n    if (param_2 < param_3) {\n        pcVar8 = pcVar6;\n        do {\n            pcVar7 = pcVar8 + 1;\n            iVar4 = fcn.00446840(iVar4, 10, *pcVar8 + -0x30);\n            pcVar8 = pcVar7;\n        } while (pcVar6 + (param_3 - param_2) != pcVar7);\n    }\n    return;\n}\n",
        "token_count": 506
    },
    "004474b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.004474b0(char *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    char *pcVar2;\n    \n    if ((param_2 != 0) && (pcVar2 = param_1,  *param_1 != '\\0')) {\n        do {\n            pcVar2 = pcVar2 + 1;\n            uVar1 = pcVar2 - param_1;\n            if (param_2 <= uVar1) {\n                return uVar1;\n            }\n        } while (*pcVar2 != '\\0');\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 144
    },
    "004474f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004474f0(int16_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (param_2 == 0) {\n        return;\n    }\n    if (*param_1 != 0) {\n        while (iVar1 = iVar1 + 1,  param_2 != iVar1) {\n            if (param_1[iVar1] == 0) {\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "00448590": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint8_t ** __fastcall fcn.00448590(uint param_1, uint param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t in_AL;\n    uint8_t uVar2;\n    char cVar3;\n    uint8_t **ppuVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    uint *puVar9;\n    int32_t *piVar10;\n    uint uVar11;\n    uint8_t uVar12;\n    uint8_t uVar13;\n    uint8_t **extraout_ECX;\n    int32_t *piVar14;\n    uint8_t **ppuVar15;\n    int32_t *piVar16;\n    int32_t *extraout_EDX;\n    uint8_t **ppuVar17;\n    int32_t **ppiVar18;\n    code *pcVar19;\n    int32_t *unaff_EDI;\n    ulong uVar20;\n    int32_t in_stack_ffffffc4;\n    uint8_t **ppuStack52;\n    uint32_t in_stack_ffffffe8;\n    int32_t iStack20;\n    \n    if (in_AL == 0xff) {\n        return NULL;\n    }\n    uVar2 = in_AL & 0x70;\n    if (uVar2 == 0x20) {\n        ppuVar4 = fcn.0043ada0(param_2);\n        return ppuVar4;\n    }\n    if (uVar2 < 0x21) {\n        if (((in_AL & 0x70) == 0) || (uVar2 == 0x10)) {\n            return NULL;\n        }\n    }\n    else {\n        if (uVar2 == 0x40) {\n            ppuVar4 = fcn.0043ad50(param_2);\n            return ppuVar4;\n        }\n        if (uVar2 == 0x50) {\n            return NULL;\n        }\n        if (uVar2 == 0x30) {\n            ppuVar4 = fcn.0043ad90(param_2);\n            return ppuVar4;\n        }\n    }\n    ppuVar4 = sub.msvcrt.dll_abort();\n    if (in_stack_ffffffe8 < 2) {\n        LOCK();\n        piVar10 = iStack20 + -0x40;\n        *piVar10 = *piVar10 + -1;\n        if (*piVar10 != 0) {\n            return ppuVar4;\n        }\n        if (*(iStack20 + -0x2c) != NULL) {\n            in_stack_ffffffc4 = 0x448614;\n            (**(iStack20 + -0x2c))();\n        }\n        uVar7 = iStack20 - 0x40;\n        if ((uVar7 <= *0x515d24) || (*0x515d24 + *0x515d28 <= uVar7)) {\n    // WARNING: Could not recover jumptable at 0x00447658. Too many branches\n    // WARNING: Treating indirect jump as call\n            ppuVar4 = (*_sym.imp.msvcrt.dll_free)(uVar7);\n            return ppuVar4;\n        }\n        if ((*0x515a34 == NULL) || (iVar5 = fcn.00438ab0(0x515d18),  iVar5 == 0)) {\n            unaff_EDI = iStack20 + -0x50;\n            if (*0x515d20 == NULL) goto code_r0x00448af0;\n            in_stack_ffffffc4 = *(iStack20 + -0x50);\n            piVar10 = unaff_EDI + in_stack_ffffffc4;\n            if (piVar10 < *0x515d20) goto code_r0x00448af0;\n            piVar6 = (*0x515d20)[1];\n            if (*0x515d20 == piVar10) {\n                iVar5 = **0x515d20;\n                *(iStack20 + -0x4c) = piVar6;\n                *(iStack20 + -0x50) = in_stack_ffffffc4 + iVar5;\n                ppuVar4 = *0x515a34;\n                *0x515d20 = unaff_EDI;\n                goto joined_r0x00448ad0;\n            }\n            piVar14 = *0x515d20;\n            if (piVar6 == NULL) {\n                piVar6 = NULL;\n                ppiVar18 = 0x515d20;\n            }\n            else {\n                piVar16 = *0x515d20;\n                if (piVar10 < piVar6) {\n                    do {\n                        piVar14 = piVar6;\n                        piVar6 = piVar14[1];\n                        ppiVar18 = piVar16 + 1;\n                        if (piVar6 == NULL) break;\n                        piVar16 = piVar14;\n                    } while (piVar10 < piVar6);\n                }\n                else {\n                    ppiVar18 = 0x515d20;\n                }\n            }\n            if (piVar6 == piVar10) {\n                in_stack_ffffffc4 = in_stack_ffffffc4 + *piVar6;\n                piVar14[1] = piVar6[1];\n            }\n            piVar10 = *ppiVar18;\n            uVar20 = CONCAT44(*piVar10, piVar10);\n            if (unaff_EDI != piVar10 + *piVar10) {\n                *(iStack20 + -0x4c) = piVar10[1];\n                piVar10 = *ppiVar18;\n                *(iStack20 + -0x50) = in_stack_ffffffc4;\n                piVar10[1] = unaff_EDI;\n                ppuVar4 = *0x515a34;\n                goto joined_r0x00448ad0;\n            }\n        }\n        else {\n            uVar20 = fcn.0044a4d0();\n        }\n        *uVar20 = (uVar20 >> 0x20) + in_stack_ffffffc4;\n        ppuVar4 = *0x515a34;\njoined_r0x00448ad0:\n        while ((*0x515a34 = ppuVar4,  ppuVar4 != NULL && (ppuVar4 = fcn.00438b10(0x515d18),  ppuVar4 != NULL))) {\n            fcn.0044a500();\n            *0x515d20 = extraout_EDX;\ncode_r0x00448af0:\n            *(iStack20 + -0x4c) = *0x515d20;\n            ppuVar4 = *0x515a34;\n            *0x515d20 = unaff_EDI;\n        }\n        return ppuVar4;\n    }\n    uVar20 = fcn.00448780(*(iStack20 + -0x24));\n    uVar2 = uVar20;\n    if (uVar2 == 0x50) {\n        ppuVar4 = extraout_ECX + 3 & 0xfffffffc;\n        *ppuStack52 = *ppuVar4;\n        return ppuVar4 + 1;\n    }\n    switch(uVar20 & 0xf) {\n    case 0:\n    case 3:\n    case 0xb:\n        ppuVar17 = *extraout_ECX;\n        ppuVar4 = extraout_ECX + 1;\n        break;\n    case 1:\n        ppuVar17 = NULL;\n        uVar13 = 0;\n        ppuVar15 = extraout_ECX;\n        do {\n            ppuVar4 = ppuVar15 + 1;\n            uVar12 = *ppuVar15;\n            uVar1 = uVar13 & 0x1f;\n            uVar13 = uVar13 + 7;\n            ppuVar17 = ppuVar17 | (uVar12 & 0x7f) << uVar1;\n            ppuVar15 = ppuVar4;\n        } while (uVar12 < '\\0');\n        break;\n    case 2:\n        ppuVar17 = *extraout_ECX;\n        ppuVar4 = extraout_ECX + 2;\n        break;\n    case 4:\n    case 0xc:\n        ppuVar17 = *extraout_ECX;\n        ppuVar4 = extraout_ECX + 2;\n        break;\n    default:\n        uVar8 = sub.msvcrt.dll_abort();\n        fcn.004c3600(uVar8);\n        uVar8 = fcn.004c00d0();\n        fcn.004c3600(uVar8);\n        fcn.004c38a0();\n        while( true ) {\n            fcn.00448440();\n            cVar3 = fcn.00448520(extraout_ECX);\n            if (cVar3 != '\\0') break;\n            cVar3 = fcn.00448520(extraout_ECX);\n            if (cVar3 != '\\0') goto code_r0x004c441e;\n            fcn.00448780();\n        }\n        fcn.004c3a90();\ncode_r0x004c441e:\n        puVar9 = fcn.004c3540(4);\n        *puVar9 = 0x52c0b4;\n        fcn.004c3af0(puVar9, 0x528938, 0x4968c0);\n        uVar8 = sub.msvcrt.dll_abort();\n        fcn.004c3600(uVar8);\n        uVar20 = sub.msvcrt.dll_abort();\n        fcn.004c3770();\n        pcVar19 = (uVar20 >> 0x20) + 1;\n        if (pcVar19 != NULL) {\n            fcn.0043b0b0(uVar20);\n        }\n        uVar20 = fcn.004c36d0();\n        if (uVar20 >> 0x20 != 1) goto code_r0x004c44fd;\n        piVar10 = fcn.004c3600(uVar20);\n        uVar8 = (**(*piVar10 + 8))();\n        uVar11 = (*pcVar19)(2);\n        sub.msvcrt.dll_fwrite(\"  what():  \", 1, 0xb, uVar11);\n        uVar11 = (*pcVar19)(2);\n        sub.msvcrt.dll_fputs(uVar8, uVar11);\n        uVar8 = (*pcVar19)(2);\n        sub.msvcrt.dll_fputc(10, uVar8);\n        fcn.004c3770();\n        do {\n            sub.msvcrt.dll_abort();\n            fcn.00447658();\n            fcn.004c3a90();\ncode_r0x004c44fd:\n            fcn.004c3600();\n            fcn.004c3770();\n        } while( true );\n    case 9:\n        ppuVar17 = NULL;\n        uVar7 = 0;\n        ppuVar15 = extraout_ECX;\n        do {\n            ppuVar4 = ppuVar15 + 1;\n            uVar13 = *ppuVar15;\n            uVar12 = uVar7;\n            uVar7 = uVar7 + 7;\n            ppuVar17 = ppuVar17 | (uVar13 & 0x7f) << (uVar12 & 0x1f);\n            ppuVar15 = ppuVar4;\n        } while (uVar13 < '\\0');\n        if ((0x1f < uVar7) || ((uVar13 & 0x40) == 0)) break;\n        ppuVar17 = ppuVar17 | -1 << (uVar7 & 0x1f);\n        goto code_r0x00448679;\n    case 10:\n        ppuVar17 = *extraout_ECX;\n        ppuVar4 = extraout_ECX + 2;\n    }\n    if (ppuVar17 != NULL) {\ncode_r0x00448679:\n        ppuVar15 = extraout_ECX;\n        if ((uVar2 & 0x70) != 0x10) {\n            ppuVar15 = uVar20 >> 0x20;\n        }\n        ppuVar17 = ppuVar17 + ppuVar15;\n        if (uVar2 < '\\0') {\n            *ppuStack52 = *ppuVar17;\n            return ppuVar4;\n        }\n    }\n    *ppuStack52 = ppuVar17;\n    return ppuVar4;\n}\n",
        "token_count": 2791
    },
    "0044a2e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid __cdecl fcn.0044a2e0(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint *puVar3;\n    char *pcVar4;\n    uint uVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    char *pcVar10;\n    char **ppcVar11;\n    char **ppcVar12;\n    char **ppcVar13;\n    char **ppcVar14;\n    ulong uVar15;\n    char *apcStack220 [4];\n    int32_t aiStack204 [4];\n    int32_t aiStack188 [10];\n    uchar uStack145;\n    int32_t var_8ch;\n    uchar var_81h;\n    uint var_80h;\n    uint var_1ch;\n    \n    _var_81h = str.not_enough_space_for_format_expansion__Please_submit_full_bug_report_at_https:__gcc.gnu.org_bugs__:_n____\n               ._0_4_;\n    var_1ch = str.not_enough_space_for_format_expansion__Please_submit_full_bug_report_at_https:__gcc.gnu.org_bugs__:_n____\n              ._101_4_;\n    puVar6 = 0x5244f1;\n    puVar3 = &fcn.0044a2e0::var_80h;\n    for (iVar7 = 0x1a; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar3 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    aiStack188[3] = 0x44a322;\n    uVar15 = fcn.004386a0();\n    var_8ch = uVar15 >> 0x20;\n    iVar7 = -uVar15;\n    puVar9 = &stack0xffffff6f + iVar7 & 0xfffffff0;\n    puVar6 = &stack0xffffff7b;\n    puVar3 = puVar9;\n    for (iVar8 = 0x1a; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar3 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *(&stack0xffffff5c + iVar7) = var_8ch;\n    *(&stack0xffffff54 + iVar7) = puVar9 + 0x1a;\n    *(&stack0xffffff58 + iVar7) = arg_8h;\n    *(&stack0xffffff50 + iVar7) = 0x44a356;\n    sub.msvcrt.dll_memcpy();\n    *(puVar9 + var_8ch + 0x68) = 0;\n    *(&stack0xffffff54 + iVar7) = puVar9;\n    *(&stack0xffffff50 + iVar7) = 0x44a369;\n    fcn.004be9d0(*(&stack0xffffff54 + iVar7));\n    *(&stack0xffffff50 + iVar7) = puVar3;\n    *(&stack0xffffff4c + iVar7) = puVar6;\n    *(&stack0xffffff48 + iVar7) = puVar9;\n    if (*0x5174fc != '\\0') {\n        *(&stack0xffffff28 + iVar7) = 2;\n        ppcVar14 = &stack0xffffff24 + iVar7;\n        *(&stack0xffffff24 + iVar7) = 0x44a4a3;\n        pcVar10 = (**0x515aa0)();\n        ppcVar14[2] = 0x1d;\n        ppcVar14[3] = pcVar10;\n        ppcVar14[1] = 0x1;\n        *ppcVar14 = \"terminate called recursively\\n\";\n        ppcVar14[-1] = 0x44a4c3;\n        sub.msvcrt.dll_fwrite();\n        ppcVar14[-1] = 0x44a4c8;\n        sub.msvcrt.dll_abort();\n        ppcVar14[-7] = 0x4;\n        ppcVar14[-8] = 0x44a4df;\n        puVar6 = fcn.004c3540();\n        *puVar6 = 0x52b508;\n        ppcVar14[-5] = 0x44a2a0;\n        ppcVar14[-6] = 0x528188;\n        ppcVar14[-7] = puVar6;\n        ppcVar14[-8] = 0x44a4fd;\n        fcn.004c3af0();\n        ppcVar14[-0xe] = 0x4;\n        ppcVar14[-0xf] = 0x44a50f;\n        puVar6 = fcn.004c3540();\n        *puVar6 = 0x52b51c;\n        ppcVar14[-0xc] = 0x44a2d0;\n        ppcVar14[-0xd] = 0x528194;\n        ppcVar14[-0xe] = puVar6;\n        ppcVar14[-0xf] = 0x44a52d;\n        fcn.004c3af0();\n        if (*0x515d24 == 0) {\n            return;\n        }\n        ppcVar14[-0x15] = *0x515d24;\n        ppcVar14[-0x16] = 0x44a544;\n        fcn.00447658();\n        *0x515d24 = 0;\n        return;\n    }\n    *0x5174fc = 1;\n    *(&stack0xffffff24 + iVar7) = 0x44a38f;\n    iVar8 = fcn.004c3710();\n    if (iVar8 == 0) {\n        *(&stack0xffffff28 + iVar7) = 2;\n        ppcVar13 = &stack0xffffff24 + iVar7;\n        *(&stack0xffffff24 + iVar7) = 0x44a471;\n        pcVar10 = (**0x515aa0)();\n        ppcVar13[2] = 0x2d;\n        ppcVar13[3] = pcVar10;\n        ppcVar13[1] = 0x1;\n        *ppcVar13 = \"terminate called without an active exception\\n\";\n        ppcVar13[-1] = 0x44a491;\n        sub.msvcrt.dll_fwrite();\n        do {\n            *(ppcVar13 + -4) = 0x4c44f0;\n            sub.msvcrt.dll_abort();\ncode_r0x004c44f0:\n            *ppcVar13 = puVar3;\n            ppcVar13[-1] = 0x4c44f8;\n            fcn.00447658();\ncode_r0x004c44f8:\n            *(ppcVar13 + -4) = 0x4c44fd;\n            fcn.004c3a90();\n            *(ppcVar13 + -4) = 0x4c4502;\n            fcn.004c3600();\n            *(ppcVar13 + -4) = 0x4c4507;\n            fcn.004c3770();\n        } while( true );\n    }\n    pcVar10 = *(iVar8 + 4);\n    cVar1 = *pcVar10;\n    *(&stack0xffffff30 + iVar7) = 0;\n    *(&stack0xffffff2c + iVar7) = 0;\n    pcVar10 = pcVar10 + (cVar1 == '*');\n    *(&stack0xffffff44 + iVar7) = 0xffffffff;\n    *(&stack0xffffff34 + iVar7) = &stack0xffffff44 + iVar7;\n    *(&stack0xffffff28 + iVar7) = pcVar10;\n    *(&stack0xffffff24 + iVar7) = 0x44a3cc;\n    puVar3 = fcn.004375b0();\n    pcVar2 = *0x515aa0;\n    *(&stack0xffffff28 + iVar7) = 2;\n    ppcVar11 = &stack0xffffff24 + iVar7;\n    *(&stack0xffffff24 + iVar7) = 0x44a3dd;\n    pcVar4 = (**0x515aa0)();\n    ppcVar11[2] = 0x30;\n    ppcVar11[3] = pcVar4;\n    ppcVar11[1] = 0x1;\n    *ppcVar11 = \"terminate called after throwing an instance of \\'\";\n    ppcVar11[-1] = 0x44a3fd;\n    sub.msvcrt.dll_fwrite();\n    *ppcVar11 = 0x2;\n    if (ppcVar11[7] == NULL) {\n        ppcVar12 = ppcVar11 + -1;\n        ppcVar11[-1] = 0x44a456;\n        uVar5 = (*pcVar2)();\n        *ppcVar12 = puVar3;\n        ppcVar12[1] = uVar5;\n        ppcVar12[-1] = 0x44a462;\n        sub.msvcrt.dll_fputs();\n    }\n    else {\n        ppcVar12 = ppcVar11 + -1;\n        ppcVar11[-1] = 0x44a40e;\n        pcVar4 = (*pcVar2)();\n        *ppcVar12 = pcVar10;\n        ppcVar12[1] = pcVar4;\n        ppcVar12[-1] = 0x44a41a;\n        sub.msvcrt.dll_fputs();\n    }\n    *ppcVar12 = 0x2;\n    ppcVar13 = ppcVar12 + -1;\n    ppcVar12[-1] = 0x44a423;\n    uVar5 = (*pcVar2)();\n    ppcVar13[2] = 0x2;\n    ppcVar13[3] = uVar5;\n    ppcVar13[1] = 0x1;\n    *ppcVar13 = 0x523675;\n    ppcVar13[-1] = 0x44a443;\n    sub.msvcrt.dll_fwrite();\n    if (ppcVar13[7] != NULL) goto code_r0x004c44f8;\n    goto code_r0x004c44f0;\n}\n",
        "token_count": 2357
    },
    "0044b2d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.0044b2d0(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    uint var_bp_ch;\n    \n    *in_ECX = in_ECX + 2;\n    in_ECX[1] = 0;\n    *(in_ECX + 2) = 0;\n    if (arg_ch != 1) {\n        fcn.004b0590(0, 0, 0x526a18, 0xd);\n        return;\n    }\n    fcn.004b0590(0, 0, \"iostream error\", 0xe);\n    return;\n}\n",
        "token_count": 160
    },
    "0044b8d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0044b8d0(int32_t *param_1, ushort *param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    ushort *puVar1;\n    uint32_t *extraout_ECX;\n    uint32_t uVar2;\n    \n    uVar2 = *(*param_1 + -0xc);\n    if (uVar2 < param_4) {\n        fcn.004bf0c0(0x523b10, 0x523b8c);\n        return *extraout_ECX;\n    }\n    uVar2 = uVar2 - param_4;\n    if (param_3 < uVar2) {\n        uVar2 = param_3;\n    }\n    if (uVar2 != 0) {\n        puVar1 = *param_1 + param_4 * 2;\n        if (uVar2 == 1) {\n            *param_2 = *puVar1;\n            return 1;\n        }\n        sub.msvcrt.dll_memcpy(param_2, puVar1, uVar2 * 2);\n    }\n    return uVar2;\n}\n",
        "token_count": 255
    },
    "0044c7b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0044c7b0(int32_t *param_1, uchar *param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uchar *puVar1;\n    uint32_t *extraout_ECX;\n    uint32_t uVar2;\n    \n    uVar2 = *(*param_1 + -0xc);\n    if (uVar2 < param_4) {\n        fcn.004bf0c0(0x523900, 0x52397c);\n        return *extraout_ECX;\n    }\n    uVar2 = uVar2 - param_4;\n    if (param_3 < uVar2) {\n        uVar2 = param_3;\n    }\n    if (uVar2 != 0) {\n        puVar1 = param_4 + *param_1;\n        if (uVar2 == 1) {\n            *param_2 = *puVar1;\n            return 1;\n        }\n        sub.msvcrt.dll_memcpy(param_2, puVar1, uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 247
    },
    "00451c20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00451c20(int32_t *param_1, int32_t param_2, int32_t param_3, uint param_4)\n\n{\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t iVar1;\n    \n    if (*(param_1 + 7) != '\\x01') {\n        if (*(param_1 + 7) == '\\0') {\n            fcn.00451a70();\n            UNRECOVERED_JUMPTABLE = *(*param_1 + 0x1c);\n        }\n        else {\n            UNRECOVERED_JUMPTABLE = *(*param_1 + 0x1c);\n        }\n        if (UNRECOVERED_JUMPTABLE != 0x451cf0) {\n    // WARNING: Could not recover jumptable at 0x00451c96. Too many branches\n    // WARNING: Treating indirect jump as call\n            iVar1 = (*UNRECOVERED_JUMPTABLE)();\n            return iVar1;\n        }\n    }\n    sub.msvcrt.dll_memcpy(param_4, param_2, param_3 - param_2);\n    return param_3;\n}\n",
        "token_count": 258
    },
    "00451ef0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00451ef0(uint16_t param_1)\n\n{\n    uint uVar1;\n    \n    if (param_1 == 0x10) {\n        uVar1 = fcn.0043e090(0x523d04);\n        return uVar1;\n    }\n    if (param_1 < 0x11) {\n        if (param_1 == 4) {\n            uVar1 = fcn.0043e090(0x523cf2);\n            return uVar1;\n        }\n        if (param_1 < 5) {\n            if (param_1 == 1) {\n                uVar1 = fcn.0043e090(0x523ce6);\n                return uVar1;\n            }\n            if (param_1 == 2) {\n                uVar1 = fcn.0043e090(0x523cec);\n                return uVar1;\n            }\n        }\n        else {\n            if (param_1 == 8) {\n                uVar1 = fcn.0043e090(0x523cf8);\n                return uVar1;\n            }\n            if (param_1 == 0xc) {\n                uVar1 = fcn.0043e090(0x523d0b);\n                return uVar1;\n            }\n        }\n    }\n    else {\n        if (param_1 == 0x100) {\n            uVar1 = fcn.0043e090(0x523ce0);\n            return uVar1;\n        }\n        if (param_1 < 0x101) {\n            if (param_1 == 0x20) {\n                uVar1 = fcn.0043e090(0x523cd4);\n                return uVar1;\n            }\n            if (param_1 == 0x40) {\n                uVar1 = fcn.0043e090(0x523cda);\n                return uVar1;\n            }\n        }\n        else {\n            if (param_1 == 0x200) {\n                uVar1 = fcn.0043e090(0x523cfe);\n                return uVar1;\n            }\n            if (param_1 == 0x20c) {\n                uVar1 = fcn.0043e090(0x523d11);\n                return uVar1;\n            }\n        }\n    }\n    uVar1 = 0;\n    if (param_1 == 0x400) {\n        uVar1 = fcn.0043e090(\"blank\");\n    }\n    return uVar1;\n}\n",
        "token_count": 559
    },
    "00455340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00455340(int32_t *param_1, uchar *param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint32_t *extraout_ECX;\n    uint32_t uVar1;\n    \n    if (param_1[1] < param_4) {\n        fcn.004bf0c0(0x52457c, 0x524697);\n        return *extraout_ECX;\n    }\n    uVar1 = param_1[1] - param_4;\n    if (param_3 < uVar1) {\n        uVar1 = param_3;\n    }\n    if (uVar1 != 0) {\n        if (uVar1 == 1) {\n            *param_2 = *(param_4 + *param_1);\n            return 1;\n        }\n        sub.msvcrt.dll_memcpy(param_2, param_4 + *param_1, uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 225
    },
    "004560f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.004560f0(int32_t *param_1, ushort *param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    ushort *puVar1;\n    uint32_t *extraout_ECX;\n    uint32_t uVar2;\n    \n    if (param_1[1] < param_4) {\n        fcn.004bf0c0(0x5248ec, \"basic_string::copy\");\n        return *extraout_ECX;\n    }\n    uVar2 = param_1[1] - param_4;\n    if (param_3 < uVar2) {\n        uVar2 = param_3;\n    }\n    if (uVar2 != 0) {\n        puVar1 = *param_1 + param_4 * 2;\n        if (uVar2 == 1) {\n            *param_2 = *puVar1;\n            return 1;\n        }\n        sub.msvcrt.dll_memcpy(param_2, puVar1, uVar2 * 2);\n    }\n    return uVar2;\n}\n",
        "token_count": 243
    },
    "0045fa60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0045fa60(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            uint *arg_24h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    ulong uVar5;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    piVar4 = fcn.004c0920(arg_1ch + 0x6c);\n    var_2ch = 0;\n    var_28h._0_1_ = 0;\n    var_30h = &var_28h;\n    if (arg_18h == '\\0') {\n        uVar5 = fcn.0045e020(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n        iVar2 = var_2ch;\n    }\n    else {\n        uVar5 = fcn.0045ed30(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n        iVar2 = var_2ch;\n    }\n    var_2ch = iVar2;\n    if (iVar2 != 0) {\n        fcn.004b19d0(iVar2, 0);\n        puVar3 = var_30h;\n        uVar1 = *arg_24h;\n        if (*(piVar4 + 7) != '\\x01') {\n            if (*(piVar4 + 7) == '\\0') {\n                fcn.00451a70();\n            }\n            if (*(*piVar4 + 0x1c) != 0x451cf0) {\n                (**(*piVar4 + 0x1c))(puVar3, iVar2 + puVar3, uVar1);\n                goto code_r0x0045fadf;\n            }\n        }\n        sub.msvcrt.dll_memcpy(uVar1, puVar3, iVar2);\n    }\ncode_r0x0045fadf:\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    return uVar5;\n}\n",
        "token_count": 586
    },
    "0045fbc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0045fbc0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    ulong uVar1;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_2ch = 0;\n    var_28h._0_1_ = 0;\n    var_30h = &var_28h;\n    if (arg_18h == '\\0') {\n        uVar1 = fcn.0045e020(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n    }\n    else {\n        uVar1 = fcn.0045ed30(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n    }\n    var_34h = fcn.004af100();\n    fcn.004bdbd0(var_30h, arg_24h, arg_20h, &var_34h);\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    return uVar1;\n}\n",
        "token_count": 354
    },
    "00461850": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.00461850(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint64_t uVar1;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_2ch = 0;\n    var_28h._0_1_ = 0;\n    var_30h = &var_28h;\n    if (arg_18h == '\\0') {\n        uVar1 = fcn.0045fc90(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n    }\n    else {\n        uVar1 = fcn.004609d0(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n    }\n    var_34h = fcn.004af100();\n    fcn.004bdbd0(var_30h, arg_24h, arg_20h, &var_34h);\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    return uVar1 & 0xffffffff | (arg_ch & 0xffff0000 | uVar1 >> 0x20 & 0xffff) << 0x20;\n}\n",
        "token_count": 405
    },
    "004839f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004839f0(int32_t param_1, ushort param_2, uint param_3)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    piVar1 = fcn.004840b0(param_1, 0, param_3);\n    piVar2 = piVar1 + 3;\n    if (param_1 != 0) {\n        iVar3 = param_1;\n        if (param_1 == 1) {\n            *(piVar1 + 3) = param_2;\n        }\n        else {\n            do {\n                *piVar2 = param_2;\n                piVar2 = piVar2 + 2;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    piVar1[2] = 0;\n    *piVar1 = param_1;\n    *(piVar1 + param_1 * 2 + 0xc) = 0;\n    return;\n}\n",
        "token_count": 232
    },
    "00483ae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.00483ae0(ushort *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ushort *in_stack_ffffffc8;\n    int32_t in_stack_ffffffcc;\n    uint uStack48;\n    \n    if ((param_2 == 0) || (param_1 != NULL)) {\n        param_2 = param_2 - param_1;\n        iVar2 = param_2 >> 1;\n        piVar1 = fcn.004840b0(iVar2, 0, param_3);\n        if (iVar2 == 1) {\n            *(piVar1 + 3) = *param_1;\n        }\n        else if (iVar2 != 0) {\n            sub.msvcrt.dll_memcpy(piVar1 + 3, param_1, param_2);\n        }\n        piVar1[2] = 0;\n        *piVar1 = iVar2;\n        *(piVar1 + param_2 + 0xc) = 0;\n        return piVar1 + 3;\n    }\n    fcn.004be9d0(\"basic_string::_S_construct null not valid\");\n    if ((in_stack_ffffffcc != 0) && (in_stack_ffffffc8 == NULL)) {\n        fcn.004be9d0(\"basic_string::_S_construct null not valid\");\n        return 0x516d80;\n    }\n    in_stack_ffffffcc = in_stack_ffffffcc - in_stack_ffffffc8;\n    iVar2 = in_stack_ffffffcc >> 1;\n    piVar1 = fcn.004840b0(iVar2, 0, uStack48);\n    if (iVar2 == 1) {\n        *(piVar1 + 3) = *in_stack_ffffffc8;\n    }\n    else if (iVar2 != 0) {\n        sub.msvcrt.dll_memcpy(piVar1 + 3, in_stack_ffffffc8, in_stack_ffffffcc);\n    }\n    piVar1[2] = 0;\n    *piVar1 = iVar2;\n    *(piVar1 + in_stack_ffffffcc + 0xc) = 0;\n    return piVar1 + 3;\n}\n",
        "token_count": 501
    },
    "00483d70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00483d70(int32_t *param_1, uint param_2, int32_t param_3, uint32_t param_4, ushort param_5)\n\n{\n    ushort *puVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EDI;\n    ushort *puVar2;\n    int32_t in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    int32_t iStack28;\n    \n    if ((param_3 + 0x1ffffffe) - *(*param_1 + -0xc) < param_4) {\n        puVar2 = 0x523be1;\n        fcn.004bead0();\n        fcn.004854a0(in_stack_ffffffd8, in_stack_ffffffdc, iStack28);\n        if (iStack28 != 0) {\n            puVar1 = *extraout_ECX + in_stack_ffffffd8 * 2;\n            if (iStack28 == 1) {\n                *puVar1 = *puVar2;\n                return extraout_ECX;\n            }\n            sub.msvcrt.dll_memcpy(puVar1, puVar2, iStack28 * 2);\n        }\n        return extraout_ECX;\n    }\n    fcn.004854a0(param_2, param_3, param_4);\n    if (param_4 != 0) {\n        puVar2 = *param_1 + unaff_EDI * 2;\n        if (param_4 == 1) {\n            *puVar2 = param_5;\n            return param_1;\n        }\n        do {\n            *puVar2 = param_5;\n            puVar2 = puVar2 + 1;\n            param_4 = param_4 - 1;\n        } while (param_4 != 0);\n    }\n    return param_1;\n}\n",
        "token_count": 417
    },
    "00483e00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00483e00(int32_t *param_1, int32_t param_2, uint param_3, uint param_4, int32_t param_5)\n\n{\n    ushort *puVar1;\n    ushort *unaff_retaddr;\n    \n    fcn.004854a0(param_2, param_3, param_5);\n    if (param_5 != 0) {\n        puVar1 = *param_1 + param_2 * 2;\n        if (param_5 == 1) {\n            *puVar1 = *unaff_retaddr;\n            return param_1;\n        }\n        sub.msvcrt.dll_memcpy(puVar1, unaff_retaddr, param_5 * 2);\n    }\n    return param_1;\n}\n",
        "token_count": 176
    },
    "00484030": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00484030(int32_t *param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    piVar1 = fcn.004840b0(*param_1 + param_3, param_1[1], param_2);\n    iVar3 = 0;\n    iVar2 = *param_1;\n    if (iVar2 != 0) {\n        if (iVar2 == 1) {\n            *(piVar1 + 3) = *(param_1 + 3);\n            iVar3 = 2;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(piVar1 + 3, param_1 + 3, iVar2 * 2);\n            iVar2 = *param_1;\n            iVar3 = iVar2 * 2;\n        }\n    }\n    *piVar1 = iVar2;\n    piVar1[2] = 0;\n    *(piVar1 + iVar3 + 0xc) = 0;\n    return piVar1 + 3;\n}\n",
        "token_count": 253
    },
    "00484700": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00484700(int32_t *param_1, ushort *param_2, uint32_t param_3)\n\n{\n    ushort *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uchar auStack57 [5];\n    uint32_t uStack52;\n    int32_t iStack48;\n    ushort *puStack44;\n    int32_t *piStack40;\n    ushort *puStack36;\n    uint32_t uStack32;\n    int32_t *piStack16;\n    \n    puVar1 = *param_1;\n    iVar5 = *(puVar1 + -6);\n    if (0x1ffffffe < param_3) {\n        puStack44 = 0x523c29;\n        iStack48 = 0x4847f4;\n        fcn.004bead0();\n        uStack52 = param_3;\n        iVar3 = *piStack40;\n        if (*extraout_ECX != iVar3) {\n            iStack48 = iVar5;\n            if (*(iVar3 + -4) < 0) {\n                iVar3 = fcn.00484030(&stack0xffffffc7, 0);\n                iVar5 = *extraout_ECX;\n            }\n            else {\n                if (*0x515a34 == 0) {\n                    *(iVar3 + -4) = *(iVar3 + -4) + 1;\n                }\n                else {\n                    LOCK();\n                    *(iVar3 + -4) = *(iVar3 + -4) + 1;\n                }\n                iVar5 = *extraout_ECX;\n            }\n            if (*0x515a34 == 0) {\n                iVar4 = *(iVar5 + -4);\n                *(iVar5 + -4) = iVar4 + -1;\n            }\n            else {\n                LOCK();\n                piVar2 = iVar5 + -4;\n                iVar4 = *piVar2;\n                *piVar2 = *piVar2 + -1;\n            }\n            if (iVar4 < 1) {\n                fcn.004c33f0(iVar5 + -0xc);\n                *extraout_ECX = iVar3;\n            }\n            else {\n                *extraout_ECX = iVar3;\n            }\n            return extraout_ECX;\n        }\n        return extraout_ECX;\n    }\n    if ((param_2 < puVar1) || (puVar1 + iVar5 < param_2)) {\ncode_r0x00484723:\n        uStack32 = param_3;\n        puStack36 = param_2;\n        puStack44 = NULL;\n        iStack48 = 0x48473b;\n        piStack40 = iVar5;\n        piVar2 = fcn.00483e00();\n        return piVar2;\n    }\n    puStack44 = *param_1;\n    if (0 < *(puVar1 + -2)) {\n        iVar5 = *(puStack44 + -6);\n        goto code_r0x00484723;\n    }\n    puStack36 = param_3 * 2;\n    uVar6 = param_2 - puStack44 >> 1;\n    piStack16 = param_1;\n    if (uVar6 < param_3) {\n        if (uVar6 == 0) goto code_r0x004847a0;\n        if (param_3 != 1) {\n            if (param_3 != 0) {\n                piStack40 = param_2;\n                iStack48 = 0x484793;\n                sub.msvcrt.dll_memmove();\n                puStack44 = *piStack16;\n                param_1 = piStack16;\n            }\n            goto code_r0x004847a0;\n        }\n    }\n    else if (param_3 != 1) {\n        if (param_3 != 0) {\n            piStack40 = param_2;\n            iStack48 = 0x4847d1;\n            sub.msvcrt.dll_memcpy();\n            puStack44 = *piStack16;\n            param_1 = piStack16;\n        }\n        goto code_r0x004847a0;\n    }\n    *puStack44 = *param_2;\ncode_r0x004847a0:\n    *(puStack44 + -2) = 0;\n    *(puStack44 + -6) = param_3;\n    puStack44[param_3] = 0;\n    return param_1;\n}\n",
        "token_count": 999
    },
    "00485070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint32_t * __cdecl fcn.00485070(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    ushort *puVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    ushort *puVar4;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t *in_ECX;\n    uint32_t uVar8;\n    int32_t *extraout_EDX;\n    int32_t iVar9;\n    uint *arg_8h_00;\n    uint arg_ch_00;\n    uint32_t in_stack_ffffffc0;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    uVar2 = *in_ECX;\n    piVar3 = *(uVar2 - 0xc);\n    if (arg_8h <= piVar3) {\n        if (piVar3 - arg_8h <= arg_ch) {\n            arg_ch = piVar3 - arg_8h;\n        }\n        if (arg_14h <= (arg_ch - piVar3) + 0x1ffffffe) {\n            if (((arg_10h < uVar2) || (uVar2 + piVar3 * 2 < arg_10h)) || (0 < *(uVar2 - 4))) {\n                in_ECX = fcn.00483e00(arg_8h, arg_ch, arg_10h, arg_14h);\n            }\n            else {\n                uVar8 = arg_10h + arg_14h * 2;\n                uVar2 = *in_ECX;\n                if (arg_8h * 2 + uVar2 < uVar8) {\n                    if (arg_10h < uVar2 + (arg_8h + arg_ch) * 2) {\n                        iVar9 = fcn.00483ae0(arg_10h, uVar8, &var_19h, in_stack_ffffffc0 & 0xffffff00);\n                        puVar5 = fcn.00483e00(arg_8h, arg_ch, iVar9, arg_14h);\n                        if (*0x515a34 == 0) {\n                            iVar6 = *(iVar9 + -4);\n                            *(iVar9 + -4) = iVar6 + -1;\n                        }\n                        else {\n                            LOCK();\n                            piVar3 = iVar9 + -4;\n                            iVar6 = *piVar3;\n                            *piVar3 = *piVar3 + -1;\n                        }\n                        if (0 < iVar6) {\n                            return puVar5;\n                        }\n                        fcn.004c33f0(iVar9 + -0xc);\n                        return puVar5;\n                    }\n                    iVar9 = (arg_14h + (arg_10h - uVar2 >> 1)) - arg_ch;\n                }\n                else {\n                    iVar9 = arg_10h - uVar2 >> 1;\n                }\n                fcn.004854a0(arg_8h, arg_ch, arg_14h);\n                puVar1 = *in_ECX + iVar9 * 2;\n                puVar4 = *in_ECX + arg_8h * 2;\n                if (arg_14h == 1) {\n                    *puVar4 = *puVar1;\n                }\n                else if (arg_14h != 0) {\n                    sub.msvcrt.dll_memcpy(puVar4, puVar1, arg_14h * 2);\n                }\n            }\n            return in_ECX;\n        }\n        fcn.004bead0(0x523c13);\n        arg_8h = extraout_EDX;\n    }\n    arg_ch_00 = 0x523c13;\n    uVar7 = fcn.004bf0c0(0x523b10, 0x523c13);\n    arg_8h_00 = &var_19h;\n    fcn.00483f30();\n    fcn.0043b0b0(uVar7);\n    puVar5 = fcn.00485070(arg_8h_00, arg_ch_00, *arg_8h, *(*arg_8h + -0xc));\n    return puVar5;\n}\n",
        "token_count": 976
    },
    "004854a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004854a0(int32_t *param_1, int32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    ushort *puVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uchar auStack29 [13];\n    \n    iVar9 = *param_1;\n    iVar5 = param_2 + param_3;\n    uVar6 = (param_4 - param_3) + *(iVar9 + -0xc);\n    iVar7 = *(iVar9 + -0xc) - iVar5;\n    uVar8 = *(iVar9 + -8);\n    if (uVar6 <= uVar8) {\n        if (*(iVar9 + -4) < 1) {\n            iVar9 = *param_1;\n            if ((iVar7 != 0) && (param_4 != param_3)) {\n                puVar4 = iVar9 + iVar5 * 2;\n                puVar2 = iVar9 + (param_4 + param_2) * 2;\n                if (iVar7 == 1) {\n                    *puVar2 = *puVar4;\n                }\n                else {\n                    sub.msvcrt.dll_memmove(puVar2, puVar4, iVar7 * 2);\n                    iVar9 = *param_1;\n                }\n            }\n            goto code_r0x00485565;\n        }\n        uVar8 = *(*param_1 + -8);\n    }\n    iVar3 = fcn.004840b0(uVar6, uVar8, auStack29);\n    if (param_2 == 0) {\n        puVar4 = *param_1;\n    }\n    else {\n        puVar4 = *param_1;\n        if (param_2 == 1) {\n            *(iVar3 + 0xc) = *puVar4;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(iVar3 + 0xc, puVar4, param_2 * 2);\n            puVar4 = *param_1;\n        }\n    }\n    iVar9 = iVar3 + 0xc;\n    if (iVar7 != 0) {\n        puVar2 = iVar3 + 0xc + (param_4 + param_2) * 2;\n        if (iVar7 == 1) {\n            *puVar2 = puVar4[iVar5];\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar2, puVar4 + iVar5, iVar7 * 2);\n            puVar4 = *param_1;\n        }\n    }\n    if (*0x515a34 == 0) {\n        iVar5 = *(puVar4 + -2);\n        *(puVar4 + -2) = iVar5 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = puVar4 + -2;\n        iVar5 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar5 < 1) {\n        fcn.004c33f0(puVar4 + -6);\n    }\n    *param_1 = iVar9;\ncode_r0x00485565:\n    *(iVar9 + -4) = 0;\n    *(iVar9 + -0xc) = uVar6;\n    *(iVar9 + uVar6 * 2) = 0;\n    return;\n}\n",
        "token_count": 789
    },
    "00488070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00488070(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    uint var_19h;\n    uint var_14h;\n    uint var_bp_10h;\n    uint var_8h;\n    \n    *in_ECX = 0xffffffff;\n    in_ECX[1] = 0xffffffff;\n    in_ECX[2] = 0;\n    fcn.00488790(arg_8h, 1);\n    if ((var_19h != '\\0') && ((*(arg_8h + *(*arg_8h + -0xc) + 0x14) & 5) == 0)) {\n        piVar1 = *(arg_8h + *(*arg_8h + -0xc) + 0x78);\n        (**(*piVar1 + 0x10))(piVar1, 0, 0, 1, 8);\n        *in_ECX = stack0xffffffe4;\n        in_ECX[1] = var_14h;\n        in_ECX[2] = var_bp_10h;\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "0048b900": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.0048b900(int32_t param_1, char param_2, uint param_3)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.0048bf60(param_1, 0, param_3);\n    if (param_1 != 0) {\n        if (param_1 == 1) {\n            *(piVar1 + 3) = param_2;\n        }\n        else {\n            sub.msvcrt.dll_memset(piVar1 + 3, param_2, param_1);\n        }\n    }\n    piVar1[2] = 0;\n    *piVar1 = param_1;\n    *(piVar1 + param_1 + 0xc) = 0;\n    return piVar1 + 3;\n}\n",
        "token_count": 180
    },
    "0048b9e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.0048b9e0(uchar *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t *piVar1;\n    uchar *in_stack_ffffffd8;\n    int32_t in_stack_ffffffdc;\n    uint uStack32;\n    \n    if ((param_2 == 0) || (param_1 != NULL)) {\n        param_2 = param_2 - param_1;\n        piVar1 = fcn.0048bf60(param_2, 0, param_3);\n        if (param_2 == 1) {\n            *(piVar1 + 3) = *param_1;\n        }\n        else if (param_2 != 0) {\n            sub.msvcrt.dll_memcpy(piVar1 + 3, param_1, param_2);\n        }\n        piVar1[2] = 0;\n        *piVar1 = param_2;\n        *(piVar1 + param_2 + 0xc) = 0;\n        return piVar1 + 3;\n    }\n    fcn.004be9d0(0x523a58);\n    if ((in_stack_ffffffdc != 0) && (in_stack_ffffffd8 == NULL)) {\n        fcn.004be9d0(0x523a58);\n        return 0x516d90;\n    }\n    in_stack_ffffffdc = in_stack_ffffffdc - in_stack_ffffffd8;\n    piVar1 = fcn.0048bf60(in_stack_ffffffdc, 0, uStack32);\n    if (in_stack_ffffffdc == 1) {\n        *(piVar1 + 3) = *in_stack_ffffffd8;\n    }\n    else if (in_stack_ffffffdc != 0) {\n        sub.msvcrt.dll_memcpy(piVar1 + 3, in_stack_ffffffd8, in_stack_ffffffdc);\n    }\n    piVar1[2] = 0;\n    *piVar1 = in_stack_ffffffdc;\n    *(piVar1 + in_stack_ffffffdc + 0xc) = 0;\n    return piVar1 + 3;\n}\n",
        "token_count": 480
    },
    "0048bc50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0048bc50(int32_t *param_1, int32_t param_2, int32_t param_3, uint32_t param_4, char param_5)\n\n{\n    int32_t *extraout_ECX;\n    uchar *puVar1;\n    int32_t in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    int32_t iStack28;\n    \n    if ((param_3 + 0x3ffffffc) - *(*param_1 + -0xc) < param_4) {\n        puVar1 = 0x5239d1;\n        fcn.004bead0();\n        fcn.0048d220(in_stack_ffffffd8, in_stack_ffffffdc, iStack28);\n        if (iStack28 != 0) {\n            if (iStack28 == 1) {\n                *(in_stack_ffffffd8 + *extraout_ECX) = *puVar1;\n                return extraout_ECX;\n            }\n            sub.msvcrt.dll_memcpy(in_stack_ffffffd8 + *extraout_ECX, puVar1, iStack28);\n        }\n        return extraout_ECX;\n    }\n    fcn.0048d220(param_2, param_3, param_4);\n    if (param_4 != 0) {\n        if (param_4 == 1) {\n            *(param_2 + *param_1) = param_5;\n            return param_1;\n        }\n        sub.msvcrt.dll_memset(param_2 + *param_1, param_5, param_4);\n    }\n    return param_1;\n}\n",
        "token_count": 363
    },
    "0048bce0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0048bce0(int32_t *param_1, int32_t param_2, uint param_3, uint param_4, int32_t param_5)\n\n{\n    uchar *unaff_retaddr;\n    \n    fcn.0048d220(param_2, param_3, param_5);\n    if (param_5 != 0) {\n        if (param_5 == 1) {\n            *(param_2 + *param_1) = *unaff_retaddr;\n            return param_1;\n        }\n        sub.msvcrt.dll_memcpy(param_2 + *param_1, unaff_retaddr, param_5);\n    }\n    return param_1;\n}\n",
        "token_count": 160
    },
    "0048bef0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0048bef0(int32_t *param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0048bf60(*param_1 + param_3, param_1[1], param_2);\n    iVar2 = *param_1;\n    if (iVar2 != 0) {\n        if (iVar2 == 1) {\n            *(piVar1 + 3) = *(param_1 + 3);\n            iVar2 = *param_1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(piVar1 + 3, param_1 + 3, iVar2);\n            iVar2 = *param_1;\n        }\n    }\n    *piVar1 = iVar2;\n    piVar1[2] = 0;\n    *(piVar1 + iVar2 + 0xc) = 0;\n    return piVar1 + 3;\n}\n",
        "token_count": 229
    },
    "0048c560": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0048c560(int32_t *param_1, uchar *param_2, uint32_t param_3)\n\n{\n    uchar *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar auStack57 [5];\n    uint32_t uStack52;\n    int32_t iStack48;\n    uchar *puStack44;\n    int32_t *piStack40;\n    uchar *puStack36;\n    uint32_t uStack32;\n    int32_t *piStack16;\n    \n    puVar1 = *param_1;\n    iVar5 = *(puVar1 + -0xc);\n    if (0x3ffffffc < param_3) {\n        puStack44 = 0x523a19;\n        iStack48 = 0x48c645;\n        fcn.004bead0();\n        uStack52 = param_3;\n        iVar3 = *piStack40;\n        if (*extraout_ECX != iVar3) {\n            iStack48 = iVar5;\n            if (*(iVar3 + -4) < 0) {\n                iVar3 = fcn.0048bef0(&stack0xffffffc7, 0);\n                iVar5 = *extraout_ECX;\n            }\n            else {\n                if (*0x515a34 == 0) {\n                    *(iVar3 + -4) = *(iVar3 + -4) + 1;\n                }\n                else {\n                    LOCK();\n                    *(iVar3 + -4) = *(iVar3 + -4) + 1;\n                }\n                iVar5 = *extraout_ECX;\n            }\n            if (*0x515a34 == 0) {\n                iVar4 = *(iVar5 + -4);\n                *(iVar5 + -4) = iVar4 + -1;\n            }\n            else {\n                LOCK();\n                piVar2 = iVar5 + -4;\n                iVar4 = *piVar2;\n                *piVar2 = *piVar2 + -1;\n            }\n            if (iVar4 < 1) {\n                fcn.004c33f0(iVar5 + -0xc);\n                *extraout_ECX = iVar3;\n            }\n            else {\n                *extraout_ECX = iVar3;\n            }\n            return extraout_ECX;\n        }\n        return extraout_ECX;\n    }\n    if ((param_2 < puVar1) || (puVar1 + iVar5 < param_2)) {\ncode_r0x0048c583:\n        uStack32 = param_3;\n        puStack36 = param_2;\n        puStack44 = NULL;\n        iStack48 = 0x48c59b;\n        piStack40 = iVar5;\n        piVar2 = fcn.0048bce0();\n        return piVar2;\n    }\n    puStack44 = *param_1;\n    if (0 < *(puVar1 + -4)) {\n        iVar5 = *(puStack44 + -0xc);\n        goto code_r0x0048c583;\n    }\n    piStack16 = param_1;\n    if (param_2 - puStack44 < param_3) {\n        if (param_2 == puStack44) goto code_r0x0048c5f0;\n        if (param_3 != 1) {\n            puStack36 = param_3;\n            piStack40 = param_2;\n            iStack48 = 0x48c5ea;\n            sub.msvcrt.dll_memmove();\n            puStack44 = *piStack16;\n            param_1 = piStack16;\n            goto code_r0x0048c5f0;\n        }\n    }\n    else if (param_3 != 1) {\n        if (param_3 != 0) {\n            puStack36 = param_3;\n            piStack40 = param_2;\n            iStack48 = 0x48c61f;\n            sub.msvcrt.dll_memcpy();\n            puStack44 = *piStack16;\n            param_1 = piStack16;\n        }\n        goto code_r0x0048c5f0;\n    }\n    *puStack44 = *param_2;\n    puStack44 = *param_1;\ncode_r0x0048c5f0:\n    *(puStack44 + -4) = 0;\n    *(puStack44 + -0xc) = param_3;\n    puStack44[param_3] = 0;\n    return param_1;\n}\n",
        "token_count": 1001
    },
    "0048ce00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint32_t * __cdecl fcn.0048ce00(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t *in_ECX;\n    uchar *puVar8;\n    uint *arg_8h_00;\n    uint arg_ch_00;\n    uint32_t in_stack_ffffffc0;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    uVar1 = *in_ECX;\n    piVar2 = *(uVar1 - 0xc);\n    if (arg_8h <= piVar2) {\n        if (piVar2 - arg_8h <= arg_ch) {\n            arg_ch = piVar2 - arg_8h;\n        }\n        if (arg_14h <= (arg_ch - piVar2) + 0x3ffffffc) {\n            if (((arg_10h < uVar1) || (piVar2 + uVar1 < arg_10h)) || (0 < *(uVar1 - 4))) {\n                in_ECX = fcn.0048bce0(arg_8h, arg_ch, arg_10h, arg_14h);\n            }\n            else {\n                uVar1 = *in_ECX;\n                if (uVar1 + arg_8h < arg_10h + arg_14h) {\n                    if (arg_10h < arg_8h + uVar1 + arg_ch) {\n                        iVar4 = fcn.0048b9e0(arg_10h, arg_10h + arg_14h, &var_19h, in_stack_ffffffc0 & 0xffffff00);\n                        puVar5 = fcn.0048bce0(arg_8h, arg_ch, iVar4, arg_14h);\n                        if (*0x515a34 == 0) {\n                            iVar6 = *(iVar4 + -4);\n                            *(iVar4 + -4) = iVar6 + -1;\n                        }\n                        else {\n                            LOCK();\n                            piVar2 = iVar4 + -4;\n                            iVar6 = *piVar2;\n                            *piVar2 = *piVar2 + -1;\n                        }\n                        if (0 < iVar6) {\n                            return puVar5;\n                        }\n                        fcn.004c33f0(iVar4 + -0xc);\n                        return puVar5;\n                    }\n                    var_2ch = ((arg_10h - uVar1) + arg_14h) - arg_ch;\n                }\n                else {\n                    var_2ch = arg_10h - uVar1;\n                }\n                fcn.0048d220(arg_8h, arg_ch, arg_14h);\n                puVar3 = var_2ch + *in_ECX;\n                puVar8 = arg_8h + *in_ECX;\n                if (arg_14h == 1) {\n                    *puVar8 = *puVar3;\n                }\n                else if (arg_14h != 0) {\n                    sub.msvcrt.dll_memcpy(puVar8, puVar3, arg_14h);\n                }\n            }\n            return in_ECX;\n        }\n        fcn.004bead0(0x523a03);\n    }\n    arg_ch_00 = 0x523a03;\n    uVar7 = fcn.004bf0c0(0x523900, 0x523a03);\n    arg_8h_00 = &var_19h;\n    fcn.0048bdf0();\n    fcn.0043b0b0(uVar7);\n    puVar5 = fcn.0048ce00(arg_8h_00, arg_ch_00, *arg_8h, *(*arg_8h + -0xc));\n    return puVar5;\n}\n",
        "token_count": 922
    },
    "0048d220": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0048d220(int32_t *param_1, int32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uchar auStack29 [13];\n    \n    iVar9 = *param_1;\n    uVar8 = *(iVar9 + -8);\n    uVar6 = (param_4 - param_3) + *(iVar9 + -0xc);\n    iVar5 = param_2 + param_3;\n    iVar7 = *(iVar9 + -0xc) - iVar5;\n    if (uVar6 <= uVar8) {\n        if (*(iVar9 + -4) < 1) {\n            iVar9 = *param_1;\n            if ((iVar7 != 0) && (param_4 != param_3)) {\n                puVar4 = iVar9 + param_4 + param_2;\n                if (iVar7 == 1) {\n                    *puVar4 = *(iVar5 + iVar9);\n                    iVar9 = *param_1;\n                }\n                else {\n                    sub.msvcrt.dll_memmove(puVar4, iVar5 + iVar9, iVar7);\n                    iVar9 = *param_1;\n                }\n            }\n            goto code_r0x0048d2e1;\n        }\n        uVar8 = *(*param_1 + -8);\n    }\n    iVar2 = fcn.0048bf60(uVar6, uVar8, auStack29);\n    if (param_2 != 0) {\n        if (param_2 == 1) {\n            *(iVar2 + 0xc) = **param_1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(iVar2 + 0xc, *param_1, param_2);\n        }\n    }\n    iVar9 = iVar2 + 0xc;\n    iVar3 = *param_1;\n    if (iVar7 != 0) {\n        puVar4 = iVar2 + param_2 + 0xc + param_4;\n        if (iVar7 == 1) {\n            *puVar4 = *(iVar3 + iVar5);\n            iVar3 = *param_1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar4, iVar3 + iVar5, iVar7);\n            iVar3 = *param_1;\n        }\n    }\n    if (*0x515a34 == 0) {\n        iVar5 = *(iVar3 + -4);\n        *(iVar3 + -4) = iVar5 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar3 + -4;\n        iVar5 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar5 < 1) {\n        fcn.004c33f0(iVar3 + -0xc);\n    }\n    *param_1 = iVar9;\ncode_r0x0048d2e1:\n    *(iVar9 + -4) = 0;\n    *(iVar9 + -0xc) = uVar6;\n    *(iVar9 + uVar6) = 0;\n    return;\n}\n",
        "token_count": 752
    },
    "0048de20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048de20(int32_t param_1, uchar *param_2, char param_3)\n\n{\n    ushort *puVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    ushort *puVar4;\n    uint32_t uVar5;\n    \n    uVar2 = *(param_1 + 0xc);\n    puVar4 = param_2 + 1;\n    *param_2 = 0x25;\n    if ((uVar2 & 0x800) != 0) {\n        param_2[1] = 0x2b;\n        puVar4 = param_2 + 2;\n    }\n    if ((uVar2 & 0x400) != 0) {\n        *puVar4 = 0x23;\n        puVar4 = puVar4 + 1;\n    }\n    uVar5 = uVar2 & 0x104;\n    if (uVar5 == 0x104) {\n        puVar3 = puVar4;\n        if (param_3 == '\\0') goto code_r0x0048dee8;\ncode_r0x0048deb8:\n        *puVar3 = param_3;\n        puVar1 = puVar3 + 1;\n        puVar4 = puVar3 + 1;\n    }\n    else {\n        *puVar4 = 0x2a2e;\n        puVar3 = puVar4 + 1;\n        if (param_3 != '\\0') goto code_r0x0048deb8;\n        puVar1 = puVar4 + 3;\n        puVar4 = puVar4 + 1;\n    }\n    if (uVar5 == 4) {\n        *puVar4 = 0x66;\n        *puVar1 = 0;\n        return;\n    }\n    if (uVar5 == 0x100) {\n        *puVar4 = (-((uVar2 & 0x4000) == 0) & 0x20U) + 0x45;\n        *puVar1 = 0;\n        return;\n    }\n    if (uVar5 != 0x104) {\n        *puVar4 = (-((uVar2 & 0x4000) == 0) & 0x20U) + 0x47;\n        *puVar1 = 0;\n        return;\n    }\ncode_r0x0048dee8:\n    *puVar4 = (-((uVar2 & 0x4000) == 0) & 0x20U) + 0x41;\n    *(puVar4 + 1) = 0;\n    return;\n}\n",
        "token_count": 587
    },
    "0048fd80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048fd80(uint s1, uint arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    if (arg_10h == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = sub.msvcrt.dll_memcmp(s1, arg_ch, arg_10h);\n    }\n    return uVar1;\n}\n",
        "token_count": 92
    },
    "00490ac0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00490ac0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 == 0) {\n        return NULL;\n    }\n    if (*(param_1 + 1) != '\\0') {\n        iVar1 = sub.msvcrt.dll_fclose(*param_1);\n        *param_1 = 0;\n        if (iVar1 != 0) {\n            param_1 = NULL;\n        }\n        return param_1;\n    }\n    *param_1 = 0;\n    return param_1;\n}\n",
        "token_count": 131
    },
    "00496b10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00496b10(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t extraout_EDX;\n    uint *puVar5;\n    int32_t iStack36;\n    uint auStack32 [4];\n    \n    if (*(param_1 + 0x58) == NULL) goto code_r0x00496c6f;\n    cVar1 = (**(**(param_1 + 0x58) + 0x18))();\n    if (cVar1 == '\\0') {\n        (**(**(param_1 + 0x58) + 0x20))();\n        fcn.004386a0();\n        puVar5 = auStack32;\n        uVar2 = (**(**(param_1 + 0x58) + 8))\n                          (param_1 + 0x38, param_2, param_2 + param_3, puVar5, auStack32, extraout_EDX + auStack32, \n                           &iStack36);\n        if (uVar2 < 2) {\n            param_3 = iStack36 - auStack32;\n            iVar4 = iStack36;\n            uVar3 = fcn.00490b60(auStack32, param_3);\n            if ((param_3 != uVar3) || ((uVar2 & 1) == 0)) goto code_r0x00496bbe;\n            iVar4 = (**(**(param_1 + 0x58) + 8))\n                              (puVar5, auStack32[0], *(param_1 + 0x14), auStack32, auStack32, iVar4, &iStack36);\n            if (iVar4 != 2) {\n                uVar3 = iStack36 - auStack32;\n                uVar2 = fcn.00490b60(auStack32, uVar3);\n                return uVar2 & 0xffffff00 | uVar2 == uVar3;\n            }\n        }\n        else if (uVar2 == 3) goto code_r0x00496ba9;\n        fcn.004be7b0(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x00496c6f:\n        fcn.004be620();\n        if (*(extraout_ECX + 0x48) != '\\0') {\n            if (*(extraout_ECX + 0x40) != 0) {\n                fcn.004c33e0(*(extraout_ECX + 0x40));\n            }\n            *(extraout_ECX + 0x40) = 0;\n            *(extraout_ECX + 0x48) = 0;\n        }\n        uVar2 = *(extraout_ECX + 0x5c);\n        if (uVar2 != 0) {\n            uVar2 = fcn.004c33e0(uVar2);\n        }\n        *(extraout_ECX + 0x5c) = 0;\n        *(extraout_ECX + 0x60) = 0;\n        *(extraout_ECX + 100) = 0;\n        *(extraout_ECX + 0x68) = 0;\n        return uVar2;\n    }\ncode_r0x00496ba9:\n    uVar3 = fcn.00490b60(param_2, param_3);\ncode_r0x00496bbe:\n    return uVar3 & 0xffffff00 | uVar3 == param_3;\n}\n",
        "token_count": 812
    },
    "00496c80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00496c80(int32_t param_1)\n\n{\n    if (*(param_1 + 0x48) != '\\0') {\n        if (*(param_1 + 0x40) != 0) {\n            fcn.004c33e0(*(param_1 + 0x40));\n        }\n        *(param_1 + 0x40) = 0;\n        *(param_1 + 0x48) = 0;\n    }\n    if (*(param_1 + 0x5c) != 0) {\n        fcn.004c33e0(*(param_1 + 0x5c));\n    }\n    *(param_1 + 0x5c) = 0;\n    *(param_1 + 0x60) = 0;\n    *(param_1 + 100) = 0;\n    *(param_1 + 0x68) = 0;\n    return;\n}\n",
        "token_count": 209
    },
    "00496ce0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00496ce0(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if ((*(param_1 + 0x48) == '\\0') && (*(param_1 + 0x40) == 0)) {\n        uVar1 = fcn.004c3410(*(param_1 + 0x44));\n        *(param_1 + 0x48) = 1;\n        *(param_1 + 0x40) = uVar1;\n        return;\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "00496d10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00496d10(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    cVar1 = fcn.0044e7f0();\n    if (cVar1 == '\\0') {\n        fcn.00490a40(param_2, param_3, 0x1b4);\n        cVar1 = fcn.0044e7f0();\n        if (cVar1 != '\\0') {\n            iVar2 = param_1[0x10];\n            if ((*(param_1 + 0x12) == '\\0') && (iVar2 == 0)) {\n                iVar2 = fcn.004c3410(param_1[0x11]);\n                *(param_1 + 0x12) = 1;\n                param_1[0x10] = iVar2;\n            }\n            param_1[1] = iVar2;\n            param_1[2] = iVar2;\n            param_1[3] = iVar2;\n            param_1[0xc] = param_3;\n            *(param_1 + 0x49) = 0;\n            param_1[5] = 0;\n            param_1[4] = 0;\n            param_1[6] = 0;\n            param_1[0xe] = param_1[0xd];\n            param_1[0xf] = param_1[0xd];\n            if ((param_3 & 2) != 0) {\n                uVar3 = 2;\n                (**(*param_1 + 0x10))(param_1, 0, 0);\n                if ((param_3 & uVar3) == 0xffffffff) {\n                    fcn.00497000();\n                    return NULL;\n                }\n            }\n            return param_1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 439
    },
    "00498aa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00498aa0(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t extraout_EDX;\n    uint *puVar5;\n    int32_t iStack36;\n    uint auStack32 [4];\n    \n    if (*(param_1 + 0x5c) == NULL) goto code_r0x00498bff;\n    cVar1 = (**(**(param_1 + 0x5c) + 0x18))();\n    if (cVar1 == '\\0') {\n        (**(**(param_1 + 0x5c) + 0x20))();\n        fcn.004386a0();\n        puVar5 = auStack32;\n        uVar2 = (**(**(param_1 + 0x5c) + 8))\n                          (param_1 + 0x38, param_2, param_2 + param_3 * 2, puVar5, auStack32, extraout_EDX + auStack32, \n                           &iStack36);\n        if (uVar2 < 2) {\n            param_3 = iStack36 - auStack32;\n            iVar4 = iStack36;\n            uVar3 = fcn.00490b60(auStack32, param_3);\n            if ((param_3 != uVar3) || ((uVar2 & 1) == 0)) goto code_r0x00498b4c;\n            iVar4 = (**(**(param_1 + 0x5c) + 8))\n                              (puVar5, auStack32[0], *(param_1 + 0x14), auStack32, auStack32, iVar4, &iStack36);\n            if (iVar4 != 2) {\n                uVar3 = iStack36 - auStack32;\n                uVar2 = fcn.00490b60(auStack32, uVar3);\n                return uVar2 & 0xffffff00 | uVar2 == uVar3;\n            }\n        }\n        else if (uVar2 == 3) goto code_r0x00498b37;\n        fcn.004be7b0(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x00498bff:\n        fcn.004be620();\n        if (*(extraout_ECX + 0x48) != '\\0') {\n            if (*(extraout_ECX + 0x40) != 0) {\n                fcn.004c33e0(*(extraout_ECX + 0x40));\n            }\n            *(extraout_ECX + 0x40) = 0;\n            *(extraout_ECX + 0x48) = 0;\n        }\n        uVar2 = *(extraout_ECX + 0x60);\n        if (uVar2 != 0) {\n            uVar2 = fcn.004c33e0(uVar2);\n        }\n        *(extraout_ECX + 0x60) = 0;\n        *(extraout_ECX + 100) = 0;\n        *(extraout_ECX + 0x68) = 0;\n        *(extraout_ECX + 0x6c) = 0;\n        return uVar2;\n    }\ncode_r0x00498b37:\n    uVar3 = fcn.00490b60(param_2, param_3);\ncode_r0x00498b4c:\n    return uVar3 & 0xffffff00 | uVar3 == param_3;\n}\n",
        "token_count": 819
    },
    "00498c10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00498c10(int32_t param_1)\n\n{\n    if (*(param_1 + 0x48) != '\\0') {\n        if (*(param_1 + 0x40) != 0) {\n            fcn.004c33e0(*(param_1 + 0x40));\n        }\n        *(param_1 + 0x40) = 0;\n        *(param_1 + 0x48) = 0;\n    }\n    if (*(param_1 + 0x60) != 0) {\n        fcn.004c33e0(*(param_1 + 0x60));\n    }\n    *(param_1 + 0x60) = 0;\n    *(param_1 + 100) = 0;\n    *(param_1 + 0x68) = 0;\n    *(param_1 + 0x6c) = 0;\n    return;\n}\n",
        "token_count": 207
    },
    "00498c70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00498c70(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint extraout_ECX;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    char unaff_DI;\n    ulong uVar5;\n    int32_t in_stack_00000024;\n    \n    if ((*(param_1 + 0x48) != '\\0') || (in_EAX = *(param_1 + 0x40),  in_EAX != 0)) {\n        return in_EAX;\n    }\n    if (*(param_1 + 0x44) < 0x3fffffff) {\n        iVar1 = fcn.004c3410(*(param_1 + 0x44) * 2);\n        *(param_1 + 0x48) = 1;\n        *(param_1 + 0x40) = iVar1;\n        return iVar1;\n    }\n    fcn.004c3b60();\n    fcn.004c3840();\n    fcn.0043b0b0();\n    fcn.004c3840();\n    fcn.0043b0b0();\n    fcn.004c3840();\n    fcn.0043b0b0();\n    fcn.004c3840();\n    fcn.0043b0b0();\n    fcn.004c3840();\n    fcn.0043b0b0();\n    fcn.004c3840();\n    fcn.0043b0b0();\n    fcn.004c3840();\n    fcn.0043b0b0();\n    fcn.004c3840();\n    fcn.0043b0b0();\n    fcn.004c3840();\n    fcn.0043b0b0();\n    fcn.004c3840();\n    fcn.0043b0b0();\n    uVar5 = fcn.004c3b60();\n    if (uVar5 >> 0x20 != 1) {\n        fcn.0043b0b0(uVar5);\n    }\n    fcn.004c3600();\n    fcn.004c3770();\n    uVar2 = *(unaff_EBX + 0x14) | 1;\n    *(unaff_EBX + 0x14) = uVar2;\n    if ((*(unaff_EBX + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(unaff_EBX + 0x1c) = 0;\n        }\n        else {\n            *(unaff_EBX + 0x20) = 0;\n        }\n        return unaff_EBX + 0x1c;\n    }\n    iVar3 = fcn.004be7b0(\"ios_base::_M_grow_words allocation failed\");\n    iVar1 = *(unaff_EBX + 0x68);\n    uVar4 = extraout_ECX;\n    if ((iVar1 != unaff_EBP) && (iVar1 != 0)) {\n        fcn.004c33e0(iVar1);\n    }\n    *(unaff_EBX + 0x68) = iVar3;\n    *(unaff_EBX + 100) = uVar4;\n    return iVar3 + in_stack_00000024 * 8;\n}\n",
        "token_count": 770
    },
    "00498cc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00498cc0(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    cVar1 = fcn.0044e7f0();\n    if (cVar1 == '\\0') {\n        fcn.00490a40(param_2, param_3, 0x1b4);\n        cVar1 = fcn.0044e7f0();\n        if (cVar1 != '\\0') {\n            iVar2 = param_1[0x10];\n            if ((*(param_1 + 0x12) == '\\0') && (iVar2 == 0)) {\n                fcn.00498c90();\n                iVar2 = param_1[0x10];\n            }\n            param_1[1] = iVar2;\n            param_1[2] = iVar2;\n            param_1[3] = iVar2;\n            param_1[0xc] = param_3;\n            *(param_1 + 0x49) = 0;\n            param_1[5] = 0;\n            param_1[4] = 0;\n            param_1[6] = 0;\n            param_1[0xe] = param_1[0xd];\n            param_1[0xf] = param_1[0xd];\n            if ((param_3 & 2) != 0) {\n                uVar3 = 2;\n                (**(*param_1 + 0x10))(param_1, 0, 0);\n                if ((param_3 & uVar3) == 0xffffffff) {\n                    fcn.00498fa0();\n                    return NULL;\n                }\n            }\n            return param_1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 414
    },
    "0049dcf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0049dcf0(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    uint var_19h;\n    uint var_14h;\n    uint var_bp_10h;\n    uint var_8h;\n    \n    *in_ECX = 0xffffffff;\n    in_ECX[1] = 0xffffffff;\n    in_ECX[2] = 0;\n    fcn.0049e450(arg_8h, 1);\n    if ((var_19h != '\\0') && ((*(arg_8h + *(*arg_8h + -0xc) + 0x14) & 5) == 0)) {\n        piVar1 = *(arg_8h + *(*arg_8h + -0xc) + 0x78);\n        (**(*piVar1 + 0x10))(piVar1, 0, 0, 1, 8);\n        *in_ECX = stack0xffffffe4;\n        in_ECX[1] = var_14h;\n        in_ECX[2] = var_bp_10h;\n    }\n    return;\n}\n",
        "token_count": 287
    },
    "004ad8f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004ad8f0(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    ulong uVar7;\n    \n    if ((*0x515c00 == '\\0') && (iVar2 = fcn.004c38f0(0x515c00),  iVar2 != 0)) {\n        if (*0x515a34 != 0) {\n            fcn.00438a50(0x5174f4);\n        }\n        fcn.004c39d0(0x515c00);\n        fcn.004014c0(0x4c42c0);\n    }\n    iVar2 = *0x527c60;\n    if ((*0x515a34 != 0) && (iVar6 = fcn.00438ab0(0x5174f4),  iVar2 = *0x527c60,  iVar6 != 0)) {\n        puVar3 = fcn.004c3540(4);\n        *puVar3 = 0x52b508;\n        fcn.004c3af0(puVar3, 0x528188, 0x44a2a0);\n        goto code_r0x004ada60;\n    }\n    while (iVar2 != 0) {\n        iVar2 = fcn.004522b0();\n        if (iVar2 == param_3) {\n            iVar6 = fcn.004522b0();\n            iVar2 = param_3;\n            goto code_r0x004ad969;\n        }\n        uVar7 = fcn.004522b0();\n        if (uVar7 == param_3) goto code_r0x004adaa0;\n        iVar2 = *((uVar7 >> 0x20) + 8);\n    }\n    iVar5 = *(param_1 + 0xc);\n    param_3 = param_3 * 4;\n    iVar6 = -1;\n    ppiVar4 = iVar5 + param_3;\n    if (*ppiVar4 != NULL) goto code_r0x004ad978;\n    while (piVar1 = param_2 + 1,  *0x515a34 != 0) {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n        iVar2 = *0x515a34;\n        iVar5 = *(param_1 + 0xc);\n        *(iVar5 + param_3) = param_2;\n        if (iVar6 != -1) {\n            if (iVar2 == 0) goto code_r0x004ad9cf;\n            LOCK();\n            *piVar1 = *piVar1 + 1;\n            iVar2 = *0x515a34;\n            *(*(param_1 + 0xc) + iVar6 * 4) = param_2;\n        }\n        while( true ) {\n            if (iVar2 == 0) {\n                return;\n            }\ncode_r0x004ada60:\n            iVar2 = fcn.00438b10(0x5174f4);\n            if (iVar2 == 0) {\n                return;\n            }\n            puVar3 = fcn.004c3540(4);\n            *puVar3 = 0x52b51c;\n            fcn.004c3af0(puVar3, 0x528194, 0x44a2d0);\ncode_r0x004adaa0:\n            iVar2 = fcn.004522b0();\n            iVar6 = param_3;\ncode_r0x004ad969:\n            iVar5 = *(param_1 + 0xc);\n            param_3 = iVar2 * 4;\n            ppiVar4 = iVar5 + param_3;\n            if (*ppiVar4 == NULL) break;\ncode_r0x004ad978:\n            iVar2 = *0x515a34;\n            if (param_2 != NULL) {\n                (**(*param_2 + 4))();\n                iVar2 = *0x515a34;\n            }\n        }\n    }\n    param_2[1] = param_2[1] + 1;\n    *ppiVar4 = param_2;\n    if (iVar6 == -1) {\n        return;\n    }\ncode_r0x004ad9cf:\n    param_2[1] = param_2[1] + 1;\n    *(iVar5 + iVar6 * 4) = param_2;\n    return;\n}\n",
        "token_count": 1024
    },
    "004af4c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004af4c0(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *param_1;\n    if (*0x515a34 == 0) {\n        iVar2 = *piVar1;\n        *piVar1 = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 != 1) {\n        return;\n    }\n    fcn.004aefd0();\n    fcn.004c33f0(piVar1);\n    return;\n}\n",
        "token_count": 156
    },
    "004af510": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004af510(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *param_2;\n    if (*0x515a34 == 0) {\n        *piVar1 = *piVar1 + 1;\n        piVar1 = *param_1;\n    }\n    else {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n        piVar1 = *param_1;\n    }\n    if (*0x515a34 == 0) {\n        iVar2 = *piVar1;\n        *piVar1 = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 != 1) {\n        *param_1 = *param_2;\n        return;\n    }\n    fcn.004aefd0();\n    fcn.004c33f0(piVar1);\n    *param_1 = *param_2;\n    return;\n}\n",
        "token_count": 256
    },
    "004b0590": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t ** __thiscall\nfcn.004b0590(int32_t **param_1, int32_t param_2, uint32_t param_3, int32_t **param_4, uint32_t param_5)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    bool bVar9;\n    bool bVar10;\n    int32_t in_stack_ffffffb8;\n    int32_t in_stack_ffffffbc;\n    \n    piVar1 = param_1[1];\n    if ((param_3 + 0x7fffffff) - piVar1 < param_5) {\n        fcn.004bead0(0x524654);\n        return in_stack_ffffffb8 - in_stack_ffffffbc;\n    }\n    ppiVar2 = *param_1;\n    piVar8 = (param_5 - param_3) + piVar1;\n    if (ppiVar2 == param_1 + 2) {\n        piVar5 = 0xf;\n    }\n    else {\n        piVar5 = param_1[2];\n    }\n    if (piVar5 < piVar8) {\n        fcn.004b26d0(param_2, param_3, param_4, param_5);\n        goto code_r0x004b0660;\n    }\n    puVar4 = ppiVar2 + param_2;\n    iVar6 = piVar1 - (param_2 + param_3);\n    bVar9 = iVar6 != 0;\n    bVar10 = param_3 != param_5;\n    if ((param_4 < ppiVar2) || (piVar1 + ppiVar2 < param_4)) {\n        if (bVar10 && bVar9) {\n            if (iVar6 == 1) {\n                puVar4[param_5] = puVar4[param_3];\n            }\n            else {\n                sub.msvcrt.dll_memmove(puVar4 + param_5, puVar4 + param_3, iVar6);\n            }\n        }\n        if (param_5 == 0) goto code_r0x004b0660;\n        if (param_5 != 1) {\n            sub.msvcrt.dll_memcpy(puVar4, param_4, param_5);\n            goto code_r0x004b0660;\n        }\n    }\n    else {\n        if ((param_5 == 0) || (param_3 < param_5)) {\ncode_r0x004b07ad:\n            if (bVar10 && bVar9) goto code_r0x004b06c0;\n        }\n        else {\n            if (param_5 == 1) {\n                *puVar4 = *param_4;\n                goto code_r0x004b07ad;\n            }\n            sub.msvcrt.dll_memmove(puVar4, param_4, param_5);\n            if (!bVar10 || !bVar9) goto code_r0x004b0660;\ncode_r0x004b06c0:\n            if (iVar6 == 1) {\n                puVar4[param_5] = puVar4[param_3];\n            }\n            else {\n                sub.msvcrt.dll_memmove(puVar4 + param_5, puVar4 + param_3, iVar6);\n            }\n        }\n        if (param_5 <= param_3) goto code_r0x004b0660;\n        ppiVar2 = puVar4 + param_3;\n        if (ppiVar2 < param_4 + param_5) {\n            if (param_4 < ppiVar2) {\n                iVar6 = ppiVar2 - param_4;\n                if (iVar6 == 1) {\n                    *puVar4 = *param_4;\n                }\n                else if (iVar6 != 0) {\n                    sub.msvcrt.dll_memmove(puVar4, param_4, iVar6);\n                }\n                iVar7 = param_5 - iVar6;\n                if (iVar7 == 1) {\n                    puVar4[iVar6] = puVar4[param_5];\n                }\n                else if (iVar7 != 0) {\n                    sub.msvcrt.dll_memcpy(puVar4 + iVar6, puVar4 + param_5, iVar7);\n                }\n            }\n            else {\n                puVar3 = (param_5 - param_3) + param_4;\n                if (param_5 == 1) {\n                    *puVar4 = *puVar3;\n                }\n                else {\n                    sub.msvcrt.dll_memcpy(puVar4, puVar3, param_5);\n                }\n            }\n            goto code_r0x004b0660;\n        }\n        if (param_5 != 1) {\n            sub.msvcrt.dll_memmove(puVar4, param_4, param_5);\n            goto code_r0x004b0660;\n        }\n    }\n    *puVar4 = *param_4;\ncode_r0x004b0660:\n    param_1[1] = piVar8;\n    *(*param_1 + piVar8) = 0;\n    return param_1;\n}\n",
        "token_count": 1171
    },
    "004b08e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b08e0(char **param_1, char *param_2, uint param_3)\n\n{\n    uint uVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *unaff_ESI;\n    \n    uVar1 = param_3;\n    if (param_2 < 0x10) {\n        pcVar2 = *param_1;\n        pcVar3 = param_2;\n    }\n    else {\n        pcVar3 = unaff_ESI;\n        pcVar2 = fcn.004b2650(&param_2, 0);\n        *param_1 = pcVar2;\n        param_1[2] = pcVar3;\n        unaff_ESI = pcVar3;\n    }\n    if (pcVar3 != NULL) {\n        if (pcVar3 == 0x1) {\n            *pcVar2 = uVar1;\n            param_1[1] = unaff_ESI;\n            (*param_1)[unaff_ESI] = '\\0';\n            return;\n        }\n        sub.msvcrt.dll_memset(pcVar2, uVar1, pcVar3);\n        pcVar3 = unaff_ESI;\n        pcVar2 = *param_1;\n    }\n    param_1[1] = pcVar3;\n    pcVar2[pcVar3] = '\\0';\n    return;\n}\n",
        "token_count": 307
    },
    "004b0ab0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __thiscall fcn.004b0ab0(int32_t *param_1, uchar *param_2, uchar *param_3)\n\n{\n    uchar *puVar1;\n    int32_t *extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint32_t uVar2;\n    int32_t iStack68;\n    uint32_t uStack60;\n    uchar *puStack56;\n    int32_t *piStack52;\n    uchar *puStack48;\n    uchar *puStack40;\n    int32_t iStack36;\n    int32_t iStack24;\n    \n    if ((param_2 == NULL) && (param_3 != NULL)) {\n        puStack48 = 0x4b0b68;\n        fcn.004be9d0(0x5246c0);\n        puStack48 = param_2;\n        puStack56 = param_3;\n        piStack52 = param_1;\n        if ((puStack40 == NULL) && (iStack36 != 0)) {\n            fcn.004be9d0(0x5246c0);\n            return extraout_ECX_00 + 8;\n        }\n        uVar2 = iStack36 - puStack40;\n        uStack60 = uVar2;\n        if (uVar2 < 0x10) {\n            puVar1 = *extraout_ECX;\n            if (uVar2 == 1) {\n                *puVar1 = *puStack40;\n                puVar1 = *extraout_ECX;\n                extraout_ECX[1] = 1;\n                puVar1[1] = 0;\n                return puVar1;\n            }\n            if (uVar2 == 0) {\n                extraout_ECX[1] = 0;\n                *puVar1 = 0;\n                return puVar1;\n            }\n        }\n        else {\n            puVar1 = fcn.004b2650(&stack0xffffffc4, 0);\n            *extraout_ECX = puVar1;\n            extraout_ECX[2] = iStack68;\n        }\n        sub.msvcrt.dll_memcpy(puVar1, puStack40, uVar2);\n        puVar1 = *extraout_ECX;\n        extraout_ECX[1] = iStack68;\n        puVar1[iStack68] = 0;\n        return puVar1;\n    }\n    if (param_3 - param_2 < 0x10) {\n        piStack52 = *param_1;\n        if (param_3 - param_2 == 1) {\n            *piStack52 = *param_2;\n            puVar1 = *param_1;\n            param_1[1] = 1;\n            puVar1[1] = 0;\n            return puVar1;\n        }\n        if (param_3 == param_2) {\n            param_1[1] = 0;\n            *piStack52 = 0;\n            return piStack52;\n        }\n    }\n    else {\n        puStack48 = 0x4b0b2a;\n        piStack52 = fcn.004b2650();\n        *param_1 = piStack52;\n        param_1[2] = iStack24;\n    }\n    puStack48 = param_2;\n    puStack56 = 0x4b0b46;\n    sub.msvcrt.dll_memcpy();\n    puVar1 = *param_1;\n    param_1[1] = iStack24;\n    puVar1[iStack24] = 0;\n    return puVar1;\n}\n",
        "token_count": 789
    },
    "004b0b70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __thiscall fcn.004b0b70(int32_t *param_1, uchar *param_2, int32_t param_3)\n\n{\n    uchar *puVar1;\n    int32_t extraout_ECX;\n    uint32_t uVar2;\n    int32_t iStack24;\n    uint32_t uStack16;\n    \n    if ((param_2 == NULL) && (param_3 != 0)) {\n        fcn.004be9d0(0x5246c0);\n        return extraout_ECX + 8;\n    }\n    uVar2 = param_3 - param_2;\n    uStack16 = uVar2;\n    if (uVar2 < 0x10) {\n        puVar1 = *param_1;\n        if (uVar2 == 1) {\n            *puVar1 = *param_2;\n            puVar1 = *param_1;\n            param_1[1] = 1;\n            puVar1[1] = 0;\n            return puVar1;\n        }\n        if (uVar2 == 0) {\n            param_1[1] = 0;\n            *puVar1 = 0;\n            return puVar1;\n        }\n    }\n    else {\n        puVar1 = fcn.004b2650(&uStack16, 0);\n        *param_1 = puVar1;\n        param_1[2] = iStack24;\n    }\n    sub.msvcrt.dll_memcpy(puVar1, param_2, uVar2);\n    puVar1 = *param_1;\n    param_1[1] = iStack24;\n    puVar1[iStack24] = 0;\n    return puVar1;\n}\n",
        "token_count": 381
    },
    "004b0da0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004b0da0(int32_t *param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uchar *puVar1;\n    int32_t *piVar2;\n    uchar *puVar3;\n    int32_t *extraout_ECX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t unaff_ESI;\n    uint32_t uVar6;\n    char cStack48;\n    \n    iVar4 = param_1[1];\n    if (param_4 <= (param_3 + 0x7fffffff) - iVar4) {\n        piVar2 = *param_1;\n        uVar6 = (param_4 - param_3) + iVar4;\n        if (piVar2 == param_1 + 2) {\n            uVar5 = 0xf;\n        }\n        else {\n            uVar5 = param_1[2];\n        }\n        if (uVar5 < uVar6) {\n            cStack48 = param_4;\n            fcn.004b26d0(param_2, param_3, 0);\n            piVar2 = *param_1;\n        }\n        else {\n            iVar4 = iVar4 - (param_2 + param_3);\n            if ((iVar4 != 0) && (param_3 != param_4)) {\n                puVar3 = piVar2 + param_3 + param_2;\n                puVar1 = piVar2 + param_4 + param_2;\n                if (iVar4 == 1) {\n                    *puVar1 = *puVar3;\n                    piVar2 = *param_1;\n                }\n                else {\n                    sub.msvcrt.dll_memmove(puVar1, puVar3, iVar4);\n                    piVar2 = *param_1;\n                }\n            }\n        }\n        if (param_4 != 0) {\n            if (param_4 == 1) {\n                *(piVar2 + unaff_ESI) = cStack48;\n                piVar2 = *param_1;\n            }\n            else {\n                sub.msvcrt.dll_memset(piVar2 + unaff_ESI, cStack48, param_4);\n                piVar2 = *param_1;\n            }\n        }\n        param_1[1] = uVar6;\n        *(piVar2 + uVar6) = 0;\n        return param_1;\n    }\n    fcn.004bead0(0x52460c);\n    return extraout_ECX;\n}\n",
        "token_count": 568
    },
    "004b2380": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b2380(int32_t *param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint32_t uVar6;\n    \n    uVar2 = param_1[1];\n    if (param_2 < uVar2) {\n        param_2 = uVar2;\n    }\n    puVar3 = *param_1;\n    piVar1 = param_1 + 2;\n    if (piVar1 == puVar3) {\n        uVar6 = 0xf;\n    }\n    else {\n        uVar6 = param_1[2];\n    }\n    if (uVar6 != param_2) {\n        if ((0xf < param_2) || (uVar6 < param_2)) {\n            puVar4 = fcn.004b2650(&param_2, uVar6);\n            puVar3 = *param_1;\n            iVar5 = param_1[1] + 1;\n            if (iVar5 == 1) {\n                *puVar4 = *puVar3;\n            }\n            else if (iVar5 != 0) {\n                sub.msvcrt.dll_memcpy(puVar4, puVar3, iVar5);\n            }\n            if (puVar3 != piVar1) {\n                fcn.004c33f0(puVar3);\n            }\n            *param_1 = puVar4;\n            param_1[2] = unaff_EBP;\n            return;\n        }\n        if (piVar1 != puVar3) {\n            iVar5 = uVar2 + 1;\n            if (iVar5 == 1) {\n                *(param_1 + 2) = *puVar3;\n            }\n            else if (iVar5 != 0) {\n                sub.msvcrt.dll_memcpy(piVar1, puVar3, iVar5);\n            }\n            fcn.004c33f0(puVar3);\n            *param_1 = piVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 481
    },
    "004b2480": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b2480(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    \n    iVar1 = param_1[1];\n    iVar2 = *param_1;\n    iVar4 = iVar1 - (param_2 + param_3);\n    if ((iVar4 != 0) && (param_3 != 0)) {\n        puVar3 = param_2 + param_3 + iVar2;\n        if (iVar4 == 1) {\n            *(iVar2 + param_2) = *puVar3;\n            iVar2 = *param_1;\n            iVar1 = param_1[1];\n        }\n        else {\n            sub.msvcrt.dll_memmove(iVar2 + param_2, puVar3, iVar4);\n            iVar2 = *param_1;\n            iVar1 = param_1[1];\n        }\n    }\n    param_1[1] = iVar1 - param_3;\n    *(iVar2 + (iVar1 - param_3)) = 0;\n    return;\n}\n",
        "token_count": 265
    },
    "004b2500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004b2500(int32_t *param_1, uchar *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    \n    iVar2 = param_1[1];\n    piVar3 = *param_1;\n    uVar1 = iVar2 + param_3;\n    if (piVar3 == param_1 + 2) {\n        uVar4 = 0xf;\n    }\n    else {\n        uVar4 = param_1[2];\n    }\n    if (uVar4 < uVar1) {\n        fcn.004b26d0(iVar2, 0, param_2, param_3);\n        piVar3 = *param_1;\n    }\n    else if (param_3 != 0) {\n        if (param_3 == 1) {\n            *(piVar3 + iVar2) = *param_2;\n            piVar3 = *param_1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(piVar3 + iVar2, param_2, param_3);\n            piVar3 = *param_1;\n        }\n    }\n    param_1[1] = uVar1;\n    *(piVar3 + uVar1) = 0;\n    return param_1;\n}\n",
        "token_count": 314
    },
    "004b25a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b25a0(uint *param_1, uint *param_2)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint uStack40;\n    uint32_t auStack32 [4];\n    \n    if (param_1 != param_2) {\n        puVar2 = *param_1;\n        uVar1 = param_2[1];\n        if (param_1 + 2 == puVar2) {\n            uVar3 = 0xf;\n        }\n        else {\n            uVar3 = param_1[2];\n        }\n        if (uVar3 < uVar1) {\n            auStack32[0] = uVar1;\n            puVar2 = fcn.004b2650(auStack32, uVar3);\n            if (param_1 + 2 != *param_1) {\n                fcn.004c33f0(*param_1);\n            }\n            *param_1 = puVar2;\n            param_1[2] = uStack40;\n        }\n        if (uVar1 != 0) {\n            if (uVar1 == 1) {\n                *puVar2 = **param_2;\n                puVar2 = *param_1;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(puVar2, *param_2, uVar1);\n                puVar2 = *param_1;\n            }\n        }\n        param_1[1] = uVar1;\n        *(puVar2 + uVar1) = 0;\n    }\n    return;\n}\n",
        "token_count": 357
    },
    "004b26d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b26d0(int32_t **param_1, uchar *param_2, int32_t param_3, uint param_4, int32_t param_5)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t *piStack40;\n    int32_t aiStack32 [4];\n    \n    aiStack32[0] = (param_5 - param_3) + param_1[1];\n    if (param_1 + 2 == *param_1) {\n        piVar2 = 0xf;\n    }\n    else {\n        piVar2 = param_1[2];\n    }\n    piVar2 = fcn.004b2650(aiStack32, piVar2);\n    ppiVar1 = *param_1;\n    if (param_2 != NULL) {\n        if (param_2 == 0x1) {\n            *piVar2 = *ppiVar1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(piVar2, ppiVar1, param_2);\n        }\n    }\n    if ((param_2 != NULL) && (param_3 != 0)) {\n        if (param_3 == 1) {\n            *(piVar2 + param_2) = *param_2;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(piVar2 + param_2, param_2, param_3);\n        }\n    }\n    if (iStack64 != 0) {\n        if (iStack64 == 1) {\n            (param_2 + param_3)[piVar2] = *(iStack60 + ppiVar1);\n        }\n        else {\n            sub.msvcrt.dll_memcpy(param_2 + param_3 + piVar2, iStack60 + ppiVar1, iStack64);\n        }\n    }\n    if (param_1 + 2 != ppiVar1) {\n        fcn.004c33f0(ppiVar1);\n    }\n    *param_1 = piVar2;\n    param_1[2] = piStack40;\n    return;\n}\n",
        "token_count": 485
    },
    "004b3310": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t ** __thiscall\nfcn.004b3310(int32_t **param_1, int32_t param_2, uint32_t param_3, int32_t **param_4, uint32_t param_5)\n\n{\n    ushort *puVar1;\n    ushort *puVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    bool bVar9;\n    bool bVar10;\n    int32_t in_stack_ffffffc8;\n    int32_t in_stack_ffffffcc;\n    \n    piVar3 = param_1[1];\n    if ((param_3 + 0x3fffffff) - piVar3 < param_5) {\n        fcn.004bead0(\"basic_string::_M_replace\");\n        return in_stack_ffffffc8 - in_stack_ffffffcc;\n    }\n    ppiVar4 = *param_1;\n    piVar8 = (param_5 - param_3) + piVar3;\n    if (ppiVar4 == param_1 + 2) {\n        piVar6 = 0x7;\n    }\n    else {\n        piVar6 = param_1[2];\n    }\n    if (piVar6 < piVar8) {\n        fcn.004b5560(param_2, param_3, param_4, param_5);\n        goto code_r0x004b33de;\n    }\n    puVar1 = ppiVar4 + param_2 * 2;\n    iVar5 = piVar3 - (param_2 + param_3);\n    bVar9 = iVar5 != 0;\n    bVar10 = param_3 != param_5;\n    if ((param_4 < ppiVar4) || (ppiVar4 + piVar3 * 2 < param_4)) {\n        if (bVar10 && bVar9) {\n            if (iVar5 == 1) {\n                puVar1[param_5] = puVar1[param_3];\n            }\n            else {\n                sub.msvcrt.dll_memmove(puVar1 + param_5, puVar1 + param_3, iVar5 * 2);\n            }\n        }\n        if (param_5 == 0) goto code_r0x004b33de;\n        if (param_5 != 1) {\n            sub.msvcrt.dll_memcpy(puVar1, param_4, param_5 * 2);\n            goto code_r0x004b33de;\n        }\n    }\n    else {\n        if ((param_5 == 0) || (param_3 < param_5)) {\ncode_r0x004b353e:\n            if (bVar10 && bVar9) goto code_r0x004b3441;\n        }\n        else {\n            if (param_5 == 1) {\n                *puVar1 = *param_4;\n                goto code_r0x004b353e;\n            }\n            sub.msvcrt.dll_memmove(puVar1, param_4, param_5 * 2);\n            if (!bVar10 || !bVar9) goto code_r0x004b33de;\ncode_r0x004b3441:\n            if (iVar5 == 1) {\n                puVar1[param_5] = puVar1[param_3];\n            }\n            else {\n                sub.msvcrt.dll_memmove(puVar1 + param_5, puVar1 + param_3, iVar5 * 2);\n            }\n        }\n        if (param_5 <= param_3) goto code_r0x004b33de;\n        iVar5 = param_5 * 2;\n        ppiVar4 = puVar1 + param_3;\n        if (ppiVar4 < param_4 + iVar5) {\n            if (param_4 < ppiVar4) {\n                iVar5 = ppiVar4 - param_4;\n                iVar7 = iVar5 >> 1;\n                if (iVar7 == 1) {\n                    *puVar1 = *param_4;\n                }\n                else if (iVar7 != 0) {\n                    sub.msvcrt.dll_memmove(puVar1, param_4, iVar5);\n                }\n                iVar7 = param_5 - iVar7;\n                if (iVar7 == 1) {\n                    *(puVar1 + iVar5) = puVar1[param_5];\n                }\n                else if (iVar7 != 0) {\n                    sub.msvcrt.dll_memcpy(puVar1 + iVar5, puVar1 + param_5, iVar7 * 2);\n                }\n            }\n            else {\n                puVar2 = param_4 + (param_5 - param_3) * 2;\n                if (param_5 == 1) {\n                    *puVar1 = *puVar2;\n                }\n                else {\n                    sub.msvcrt.dll_memcpy(puVar1, puVar2, iVar5);\n                }\n            }\n            goto code_r0x004b33de;\n        }\n        if (param_5 != 1) {\n            sub.msvcrt.dll_memmove(puVar1, param_4, iVar5);\n            goto code_r0x004b33de;\n        }\n    }\n    *puVar1 = *param_4;\ncode_r0x004b33de:\n    param_1[1] = piVar8;\n    *(*param_1 + piVar8 * 2) = 0;\n    return param_1;\n}\n",
        "token_count": 1216
    },
    "004b3690": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b3690(int32_t *param_1, uint32_t param_2, uint param_3)\n\n{\n    uint uVar1;\n    ushort *puVar2;\n    ushort *puVar3;\n    uint32_t uVar4;\n    uint32_t unaff_EBP;\n    \n    uVar1 = param_3;\n    if (param_2 < 8) {\n        puVar2 = *param_1;\n    }\n    else {\n        uVar4 = unaff_EBP;\n        puVar2 = fcn.004b54e0(&param_2, 0);\n        param_2 = uVar4;\n        *param_1 = puVar2;\n        param_1[2] = param_2;\n    }\n    if (param_2 != 0) {\n        puVar3 = puVar2;\n        uVar4 = param_2;\n        if (param_2 == 1) {\n            *puVar2 = uVar1;\n        }\n        else {\n            do {\n                *puVar3 = uVar1;\n                uVar4 = uVar4 - 1;\n                puVar3 = puVar3 + 1;\n            } while (uVar4 != 0);\n        }\n    }\n    param_1[1] = param_2;\n    puVar2[param_2] = 0;\n    return;\n}\n",
        "token_count": 305
    },
    "004b3830": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004b3830(uint *param_1, ushort *param_2, int32_t param_3)\n\n{\n    ushort *puVar1;\n    uint *extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint32_t uVar2;\n    uint32_t uStack68;\n    uint32_t uStack60;\n    int32_t iStack56;\n    uint *puStack52;\n    ushort *puStack48;\n    ushort *puStack40;\n    int32_t iStack36;\n    uint32_t uStack24;\n    \n    if ((param_2 == NULL) && (param_3 != 0)) {\n        puStack48 = 0x4b38d6;\n        fcn.004be9d0(\"basic_string::_M_construct null not valid\");\n        puStack48 = param_2;\n        iStack56 = param_3;\n        puStack52 = param_1;\n        if ((puStack40 == NULL) && (iStack36 != 0)) {\n            fcn.004be9d0(\"basic_string::_M_construct null not valid\");\n            return extraout_ECX_00 + 8;\n        }\n        uStack60 = iStack36 - puStack40 >> 1;\n        if (uStack60 < 8) {\n            puVar1 = *extraout_ECX;\n            if (uStack60 == 1) {\n                *puVar1 = *puStack40;\n                goto code_r0x004b3918;\n            }\n            if (uStack60 == 0) goto code_r0x004b3918;\n        }\n        else {\n            puVar1 = fcn.004b54e0(&stack0xffffffc4, 0);\n            *extraout_ECX = puVar1;\n            extraout_ECX[2] = uStack68;\n        }\n        sub.msvcrt.dll_memcpy(puVar1, puStack40, iStack36 - puStack40);\n        puVar1 = *extraout_ECX;\n        uStack60 = uStack68;\ncode_r0x004b3918:\n        extraout_ECX[1] = uStack60;\n        puVar1[uStack60] = 0;\n        return puVar1;\n    }\n    uVar2 = param_3 - param_2 >> 1;\n    if (uVar2 < 8) {\n        puStack52 = *param_1;\n        if (uVar2 == 1) {\n            *puStack52 = *param_2;\n            goto code_r0x004b3868;\n        }\n        if (uVar2 == 0) goto code_r0x004b3868;\n    }\n    else {\n        puStack48 = 0x4b38a6;\n        puStack52 = fcn.004b54e0();\n        *param_1 = puStack52;\n        param_1[2] = uStack24;\n    }\n    puStack48 = param_2;\n    iStack56 = 0x4b38c2;\n    sub.msvcrt.dll_memcpy();\n    puStack52 = *param_1;\n    uVar2 = uStack24;\ncode_r0x004b3868:\n    param_1[1] = uVar2;\n    *(puStack52 + uVar2 * 2) = 0;\n    return puStack52;\n}\n",
        "token_count": 737
    },
    "004b38e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nushort * __thiscall fcn.004b38e0(uint *param_1, ushort *param_2, int32_t param_3)\n\n{\n    ushort *puVar1;\n    int32_t extraout_ECX;\n    uint32_t uStack24;\n    uint32_t uStack16;\n    \n    if ((param_2 == NULL) && (param_3 != 0)) {\n        fcn.004be9d0(\"basic_string::_M_construct null not valid\");\n        return extraout_ECX + 8;\n    }\n    uStack16 = param_3 - param_2 >> 1;\n    if (uStack16 < 8) {\n        puVar1 = *param_1;\n        if (uStack16 == 1) {\n            *puVar1 = *param_2;\n            goto code_r0x004b3918;\n        }\n        if (uStack16 == 0) goto code_r0x004b3918;\n    }\n    else {\n        puVar1 = fcn.004b54e0(&uStack16, 0);\n        *param_1 = puVar1;\n        param_1[2] = uStack24;\n    }\n    sub.msvcrt.dll_memcpy(puVar1, param_2, param_3 - param_2);\n    puVar1 = *param_1;\n    uStack16 = uStack24;\ncode_r0x004b3918:\n    param_1[1] = uStack16;\n    puVar1[uStack16] = 0;\n    return puVar1;\n}\n",
        "token_count": 342
    },
    "004b3b10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004b3b10(int32_t *param_1, int32_t param_2, uint32_t param_3, uint32_t param_4, ushort param_5)\n\n{\n    ushort *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t *extraout_ECX;\n    int32_t iVar4;\n    ushort *puVar5;\n    int32_t unaff_ESI;\n    uint32_t uVar6;\n    ushort uStack48;\n    \n    iVar4 = param_1[1];\n    if (param_4 <= (param_3 + 0x3fffffff) - iVar4) {\n        piVar2 = *param_1;\n        uVar6 = (param_4 - param_3) + iVar4;\n        if (piVar2 == param_1 + 2) {\n            uVar3 = 7;\n        }\n        else {\n            uVar3 = param_1[2];\n        }\n        if (uVar3 < uVar6) {\n            uStack48 = param_4;\n            fcn.004b5560(param_2, param_3, 0);\n            piVar2 = *param_1;\n        }\n        else {\n            iVar4 = iVar4 - (param_3 + param_2);\n            if ((iVar4 != 0) && (param_3 != param_4)) {\n                puVar5 = piVar2 + param_3 * 2 + param_2 * 2;\n                puVar1 = piVar2 + param_4 * 2 + param_2 * 2;\n                if (iVar4 == 1) {\n                    *puVar1 = *puVar5;\n                }\n                else {\n                    sub.msvcrt.dll_memmove(puVar1, puVar5, iVar4 * 2);\n                    piVar2 = *param_1;\n                }\n            }\n        }\n        if (param_4 != 0) {\n            puVar5 = piVar2 + unaff_ESI * 2;\n            if (param_4 == 1) {\n                *puVar5 = uStack48;\n            }\n            else {\n                do {\n                    *puVar5 = param_5;\n                    puVar5 = puVar5 + 1;\n                    param_4 = param_4 - 1;\n                } while (param_4 != 0);\n            }\n        }\n        param_1[1] = uVar6;\n        *(piVar2 + uVar6 * 2) = 0;\n        return param_1;\n    }\n    fcn.004bead0(\"basic_string::_M_replace_aux\");\n    return extraout_ECX;\n}\n",
        "token_count": 594
    },
    "004b51f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b51f0(int32_t *param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    ushort *puVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint32_t uVar6;\n    \n    uVar2 = param_1[1];\n    if (param_2 < uVar2) {\n        param_2 = uVar2;\n    }\n    puVar3 = *param_1;\n    piVar1 = param_1 + 2;\n    if (piVar1 == puVar3) {\n        uVar6 = 7;\n    }\n    else {\n        uVar6 = param_1[2];\n    }\n    if (uVar6 != param_2) {\n        if ((7 < param_2) || (uVar6 < param_2)) {\n            puVar4 = fcn.004b54e0(&param_2, uVar6);\n            puVar3 = *param_1;\n            iVar5 = param_1[1] + 1;\n            if (iVar5 == 1) {\n                *puVar4 = *puVar3;\n            }\n            else if (iVar5 != 0) {\n                sub.msvcrt.dll_memcpy(puVar4, puVar3, iVar5 * 2);\n            }\n            if (piVar1 != puVar3) {\n                fcn.004c33f0(puVar3);\n            }\n            *param_1 = puVar4;\n            param_1[2] = unaff_EBP;\n            return;\n        }\n        if (piVar1 != puVar3) {\n            iVar5 = uVar2 + 1;\n            if (iVar5 == 1) {\n                *(param_1 + 2) = *puVar3;\n            }\n            else if (iVar5 != 0) {\n                sub.msvcrt.dll_memcpy(piVar1, puVar3, iVar5 * 2);\n            }\n            fcn.004c33f0(puVar3);\n            *param_1 = piVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 487
    },
    "004b5380": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004b5380(int32_t *param_1, ushort *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    ushort *puVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    \n    iVar3 = param_1[1];\n    piVar4 = *param_1;\n    uVar1 = iVar3 + param_3;\n    if (piVar4 == param_1 + 2) {\n        uVar5 = 7;\n    }\n    else {\n        uVar5 = param_1[2];\n    }\n    if (uVar5 < uVar1) {\n        fcn.004b5560(iVar3, 0, param_2, param_3);\n        piVar4 = *param_1;\n    }\n    else if (param_3 != 0) {\n        puVar2 = piVar4 + iVar3 * 2;\n        if (param_3 == 1) {\n            *puVar2 = *param_2;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar2, param_2, param_3 * 2);\n            piVar4 = *param_1;\n        }\n    }\n    param_1[1] = uVar1;\n    *(piVar4 + uVar1 * 2) = 0;\n    return param_1;\n}\n",
        "token_count": 324
    },
    "004b5420": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b5420(uint *param_1, uint *param_2)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint uStack40;\n    uint32_t auStack32 [4];\n    \n    if (param_1 != param_2) {\n        puVar2 = *param_1;\n        uVar1 = param_2[1];\n        if (param_1 + 2 == puVar2) {\n            uVar3 = 7;\n        }\n        else {\n            uVar3 = param_1[2];\n        }\n        if (uVar3 < uVar1) {\n            auStack32[0] = uVar1;\n            puVar2 = fcn.004b54e0(auStack32, uVar3);\n            if (param_1 + 2 != *param_1) {\n                fcn.004c33f0(*param_1);\n            }\n            *param_1 = puVar2;\n            param_1[2] = uStack40;\n        }\n        if (uVar1 != 0) {\n            if (uVar1 == 1) {\n                *puVar2 = **param_2;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(puVar2, *param_2, uVar1 * 2);\n                puVar2 = *param_1;\n            }\n        }\n        param_1[1] = uVar1;\n        *(puVar2 + uVar1 * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 352
    },
    "004b5560": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b5560(int32_t *param_1, ushort *param_2, int32_t param_3, uint param_4, int32_t param_5)\n\n{\n    int32_t iVar1;\n    ushort *puVar2;\n    ushort *puVar3;\n    int32_t iVar4;\n    int32_t iStack64;\n    ushort *puStack60;\n    int32_t iStack40;\n    int32_t aiStack32 [4];\n    \n    iVar1 = param_1[1];\n    aiStack32[0] = (param_5 - param_3) + iVar1;\n    if (param_1 + 2 == *param_1) {\n        iVar4 = 7;\n    }\n    else {\n        iVar4 = param_1[2];\n    }\n    puVar3 = fcn.004b54e0(aiStack32, iVar4);\n    puVar2 = *param_1;\n    if (param_2 != NULL) {\n        if (param_2 == 0x1) {\n            *puVar3 = *puVar2;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar3, puVar2, param_2 * 2);\n        }\n    }\n    if ((param_2 != NULL) && (param_3 != 0)) {\n        if (param_3 == 1) {\n            puVar3[param_2] = *param_2;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar3 + param_2, param_2, param_3 * 2);\n        }\n    }\n    if (iStack64 != 0) {\n        if (iStack64 == 1) {\n            puVar3[param_2 + param_3] = puVar2[iVar1 - (param_2 + param_3)];\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar3 + param_2 + param_3, puVar2 + (iVar1 - (param_2 + param_3)), iStack64 * 2);\n        }\n    }\n    if (puStack60 != puVar2) {\n        fcn.004c33f0(puVar2);\n    }\n    *param_1 = puVar3;\n    param_1[2] = iStack40;\n    return;\n}\n",
        "token_count": 512
    },
    "004bd470": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.004bd470(uchar *param_1, uint32_t param_2, int32_t param_3, uint32_t param_4, char param_5)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    \n    puVar3 = param_1;\n    if (param_5 == '\\0') {\n        if ((param_4 & 0x4a) == 0x40) {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = param_2 & 7;\n                param_2 = param_2 >> 3;\n                *puVar3 = *(param_3 + 4 + uVar2);\n            } while (param_2 != 0);\n        }\n        else {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = param_2 & 0xf;\n                param_2 = param_2 >> 4;\n                *puVar3 = *(param_3 + 0x14 + (-((param_4 & 0x4000) == 0) & 0xfffffff0) + uVar2);\n            } while (param_2 != 0);\n        }\n    }\n    else {\n        do {\n            puVar3 = puVar3 + -1;\n            *puVar3 = *(param_3 + 4 + param_2 % 10);\n            bVar1 = 9 < param_2;\n            param_2 = param_2 / 10;\n        } while (bVar1);\n    }\n    return param_1 - puVar3;\n}\n",
        "token_count": 362
    },
    "004bd520": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.004bd520(uchar *param_1, uint32_t param_2, uint32_t param_3, int32_t param_4, uint32_t param_5, char param_6\n                    )\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_4h;\n    int32_t var_14h;\n    \n    uVar5 = CONCAT44(param_3, param_2);\n    puVar2 = param_1;\n    if (param_6 == '\\0') {\n        if ((param_5 & 0x4a) == 0x40) {\n            do {\n                uVar3 = param_2 >> 3 | param_3 << 0x1d;\n                puVar2 = puVar2 + -1;\n                param_3 = param_3 >> 3;\n                *puVar2 = *(var_14h + 4 + (param_2 & 7));\n                param_2 = uVar3;\n            } while ((param_3 | uVar3) != 0);\n        }\n        else {\n            do {\n                uVar3 = param_2 >> 4 | param_3 << 0x1c;\n                puVar2 = puVar2 + -1;\n                param_3 = param_3 >> 4;\n                *puVar2 = *(var_14h + 0x14 + (-((param_5 & 0x4000) == 0) & 0xfffffff0) + (param_2 & 0xf));\n                param_2 = uVar3;\n            } while ((param_3 | uVar3) != 0);\n        }\n    }\n    else {\n        do {\n            iVar4 = uVar5 >> 0x20;\n            uVar3 = uVar5;\n            puVar2 = puVar2 + -1;\n            iVar1 = fcn.004387d0(uVar5, 10, 0);\n            *puVar2 = *(var_14h + 4 + iVar1);\n            uVar5 = fcn.004386d0(uVar5, 10, 0);\n        } while (iVar4 != 0 || -iVar4 < (9 < uVar3));\n    }\n    return param_1 - puVar2;\n}\n",
        "token_count": 525
    },
    "004bd610": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.004bd610(ushort *param_1, uint32_t param_2, int32_t param_3, uint32_t param_4, char param_5)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    \n    puVar3 = param_1;\n    if (param_5 == '\\0') {\n        if ((param_4 & 0x4a) == 0x40) {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = param_2 & 7;\n                param_2 = param_2 >> 3;\n                *puVar3 = *(param_3 + 8 + uVar2 * 2);\n            } while (param_2 != 0);\n        }\n        else {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = param_2 & 0xf;\n                param_2 = param_2 >> 4;\n                *puVar3 = *(param_3 + (uVar2 + (-((param_4 & 0x4000) == 0) & 0xfffffff0) + 0x14) * 2);\n            } while (param_2 != 0);\n        }\n    }\n    else {\n        do {\n            puVar3 = puVar3 + -1;\n            *puVar3 = *(param_3 + 8 + (param_2 % 10) * 2);\n            bVar1 = 9 < param_2;\n            param_2 = param_2 / 10;\n        } while (bVar1);\n    }\n    return param_1 - puVar3 >> 1;\n}\n",
        "token_count": 378
    },
    "004bd6c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.004bd6c0(ushort *param_1, uint32_t param_2, uint32_t param_3, int32_t param_4, uint32_t param_5, \n                    char param_6)\n\n{\n    int32_t iVar1;\n    ushort *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    ushort *var_8h;\n    \n    uVar5 = CONCAT44(param_3, param_2);\n    puVar2 = var_8h;\n    if (param_6 == '\\0') {\n        if ((param_5 & 0x4a) == 0x40) {\n            do {\n                uVar3 = param_2 >> 3 | param_3 << 0x1d;\n                puVar2 = puVar2 + -1;\n                param_3 = param_3 >> 3;\n                *puVar2 = *(param_4 + 8 + (param_2 & 7) * 2);\n                param_2 = uVar3;\n            } while ((param_3 | uVar3) != 0);\n        }\n        else {\n            do {\n                uVar3 = param_2 >> 4 | param_3 << 0x1c;\n                puVar2 = puVar2 + -1;\n                param_3 = param_3 >> 4;\n                *puVar2 = *(param_4 + ((param_2 & 0xf) + (-((param_5 & 0x4000) == 0) & 0xfffffff0) + 0x14) * 2);\n                param_2 = uVar3;\n            } while ((param_3 | uVar3) != 0);\n        }\n    }\n    else {\n        do {\n            iVar4 = uVar5 >> 0x20;\n            uVar3 = uVar5;\n            puVar2 = puVar2 + -1;\n            iVar1 = fcn.004387d0(uVar5, 10, 0);\n            *puVar2 = *(param_4 + 8 + iVar1 * 2);\n            uVar5 = fcn.004386d0(uVar5, 10, 0);\n        } while (iVar4 != 0 || -iVar4 < (9 < uVar3));\n    }\n    return var_8h - puVar2 >> 1;\n}\n",
        "token_count": 533
    },
    "004bdab0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004bdab0(char *param_1, double *param_2, uint *param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    float10 fVar4;\n    char *apcStack32 [4];\n    \n    uVar1 = sub.msvcrt.dll_setlocale(0, 0);\n    iVar2 = sub.msvcrt.dll_strlen(uVar1);\n    uVar3 = fcn.004c3410(iVar2 + 1);\n    sub.msvcrt.dll_memcpy(uVar3, uVar1, iVar2 + 1);\n    sub.msvcrt.dll_setlocale(0, 0x526540);\n    fVar4 = fcn.0043cea0(param_1, apcStack32);\n    *param_2 = fVar4;\n    if ((apcStack32[0] == param_1) || (*apcStack32[0] != '\\0')) {\n        *param_2 = 0.0;\n        *param_3 = 4;\n    }\n    else if ((fVar4 < *0x5265c8) || (*0x5265c0 < fVar4)) {\n        if (fVar4 <= 0) {\n            *param_2 = *0x5265c8;\n            *param_3 = 4;\n        }\n        else {\n            *param_2 = *0x5265c0;\n            *param_3 = 4;\n        }\n    }\n    sub.msvcrt.dll_setlocale(0, uVar3);\n    fcn.004c33e0(uVar3);\n    return;\n}\n",
        "token_count": 364
    },
    "004bdbd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004bdbd0(char *param_1, float10 *param_2, uint *param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    float10 fVar4;\n    float10 fVar5;\n    char *apcStack32 [4];\n    \n    uVar1 = sub.msvcrt.dll_setlocale(0, 0);\n    iVar2 = sub.msvcrt.dll_strlen(uVar1);\n    uVar3 = fcn.004c3410(iVar2 + 1);\n    sub.msvcrt.dll_memcpy(uVar3, uVar1, iVar2 + 1);\n    sub.msvcrt.dll_setlocale(0, 0x526540);\n    fVar4 = fcn.0043ddc0(param_1, apcStack32);\n    *param_2 = fVar4;\n    if ((apcStack32[0] == param_1) || (*apcStack32[0] != '\\0')) {\n        *param_2 = 0;\n        *param_3 = 4;\n    }\n    else if ((fVar4 < *0x5265e0) || (*0x5265d0 < fVar4)) {\n        fVar5 = *0x5265e0;\n        if (0 < fVar4) {\n            fVar5 = *0x5265d0;\n        }\n        *param_2 = fVar5;\n        *param_3 = 4;\n    }\n    sub.msvcrt.dll_setlocale(0, uVar3);\n    fcn.004c33e0(uVar3);\n    return;\n}\n",
        "token_count": 364
    },
    "004bdce0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004bdce0(char *param_1, float *param_2, uint *param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    float fVar4;\n    float10 fVar5;\n    char *apcStack32 [4];\n    \n    uVar1 = sub.msvcrt.dll_setlocale(0, 0);\n    iVar2 = sub.msvcrt.dll_strlen(uVar1);\n    uVar3 = fcn.004c3410(iVar2 + 1);\n    sub.msvcrt.dll_memcpy(uVar3, uVar1, iVar2 + 1);\n    sub.msvcrt.dll_setlocale(0, 0x526540);\n    fVar5 = fcn.0043cfa0(param_1, apcStack32);\n    *param_2 = fVar5;\n    if ((apcStack32[0] == param_1) || (*apcStack32[0] != '\\0')) {\n        *param_2 = 0.0;\n        *param_3 = 4;\n    }\n    else if ((fVar5 < *0x5265b8) || (*0x5265b4 < fVar5)) {\n        fVar4 = *0x5265b8;\n        if (0 < fVar5) {\n            fVar4 = *0x5265b4;\n        }\n        *param_2 = fVar4;\n        *param_3 = 4;\n    }\n    sub.msvcrt.dll_setlocale(0, uVar3);\n    fcn.004c33e0(uVar3);\n    return;\n}\n",
        "token_count": 364
    },
    "004c38f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.004c38f0(char *param_1)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *unaff_EBP;\n    ulong uVar5;\n    uchar *in_stack_00000034;\n    int32_t in_stack_00000038;\n    uint uVar6;\n    \n    if (*param_1 != '\\0') {\n        return NULL;\n    }\n    if (*0x515a34 != 0) {\n        fcn.004388f0(0x5174e8, 0x448cb0);\n        if (*0x515a34 == 0) {\n            if (*param_1 != '\\0') {\n                return NULL;\n            }\n        }\n        else {\n            iVar3 = fcn.00438bb0(*0x5168e0);\n            if (iVar3 != 0) goto code_r0x004c399a;\n            if (*param_1 != '\\0') {\n                if (*0x515a34 == 0) {\n                    return NULL;\n                }\n                iVar3 = fcn.00438c80(*0x5168e0);\n                if (iVar3 == 0) {\n                    return NULL;\n                }\n                fcn.0044a500();\n                goto code_r0x004c3995;\n            }\n        }\n        if (param_1[1] != '\\0') {\n            fcn.004488d0();\n            return NULL;\n        }\ncode_r0x004c3917:\n        param_1[1] = '\\x01';\n        return 0x1;\n    }\n    if (*param_1 != '\\0') {\n        return NULL;\n    }\n    if (param_1[1] == '\\0') goto code_r0x004c3917;\ncode_r0x004c3995:\n    fcn.004488d0();\ncode_r0x004c399a:\n    puVar2 = fcn.004c3540(4);\n    *puVar2 = 0x52b508;\n    puVar2 = fcn.004c3af0(puVar2, 0x528188, 0x44a2a0);\n    if ((*0x515a34 != 0) && (iVar3 = fcn.00438c80(*0x5168e0),  iVar3 != 0)) {\n        fcn.0044a500();\n    }\n    uVar5 = fcn.0043b0b0(puVar2);\n    if (uVar5 >> 0x20 == -1) {\n        fcn.004c36d0(uVar5);\n    }\n    uVar5 = fcn.0043b0b0();\n    if (uVar5 >> 0x20 == -1) {\n        fcn.004c36d0(uVar5);\n    }\n    uVar5 = fcn.0043b0b0();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0043b0b0(uVar5);\n    }\n    uVar5 = fcn.004c36d0();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0043b0b0(uVar5);\n    }\n    uVar5 = fcn.004c36d0();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0043b0b0(uVar5);\n    }\n    uVar5 = fcn.004c36d0();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0043b0b0(uVar5);\n    }\n    uVar5 = fcn.004c36d0();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0043b0b0(uVar5);\n    }\n    uVar5 = fcn.004c36d0();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0043b0b0(uVar5);\n    }\n    fcn.004c36d0();\n    *puVar2 = 0x52c8b4;\n    fcn.004af220();\n    fcn.0043b0b0();\n    *puVar2 = 0x52c8e0;\n    fcn.004af220();\n    fcn.0043b0b0();\n    fcn.004c33f0(puVar2);\n    fcn.0043b0b0();\n    fcn.004c33f0(puVar2);\n    fcn.0043b0b0();\n    *puVar2 = 0x52c8b4;\n    fcn.004af220();\n    fcn.0043b0b0();\n    *puVar2 = 0x52c8e0;\n    fcn.004af220();\n    uVar5 = fcn.0043b0b0();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0043b0b0(uVar5);\n    }\n    uVar5 = fcn.004c36d0();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0043b0b0(uVar5);\n    }\n    uVar5 = fcn.004c36d0();\n    uVar6 = uVar5;\n    if (uVar5 >> 0x20 != 1) {\ncode_r0x004c5626:\n        fcn.004c3600(uVar6);\n        iVar3 = *(*unaff_EBP + -0xc);\n        puVar1 = unaff_EBP + iVar3 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(unaff_EBP + iVar3 + 0x10) & 1) != 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3770();\n        if (in_stack_00000038 < 1) {\n            iVar3 = unaff_EBP[1];\n        }\n        else {\n            *in_stack_00000034 = 0;\n            iVar3 = unaff_EBP[1];\n        }\n        if (iVar3 == 0) {\n            fcn.004bc4a0(*(unaff_EBP + *(*unaff_EBP + -0xc) + 0x14) | 4);\n            return unaff_EBP;\n        }\n        return unaff_EBP;\n    }\n    fcn.004c3600(uVar6);\n    unaff_EBP = unaff_EBP + *(*unaff_EBP + -0xc);\n    unaff_EBP[5] = unaff_EBP[5] | 1;\n    if ((*(unaff_EBP + 4) & 1) != 0) {\n        fcn.004c3a90();\n        goto code_r0x004c5626;\n    }\n    piVar4 = fcn.004c3a90();\n    fcn.004c3770();\n    uVar5 = fcn.0043b0b0(piVar4);\n    uVar6 = uVar5;\n    if (uVar5 >> 0x20 == 1) {\n        fcn.004c3600(uVar6);\n        piVar4 = piVar4 + *(*piVar4 + -0xc);\n        piVar4[5] = piVar4[5] | 1;\n        if ((*(piVar4 + 4) & 1) != 0) {\n            fcn.004c3a90();\n            goto code_r0x004c56ad;\n        }\n    }\n    else {\ncode_r0x004c56ad:\n        fcn.004c3600(uVar6);\n        iVar3 = *(*piVar4 + -0xc);\n        puVar1 = piVar4 + iVar3 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(piVar4 + iVar3 + 0x10) & 1) == 0) goto code_r0x00488566;\n        fcn.004c3a90();\n    }\n    piVar4 = fcn.004c3a90();\n    fcn.004c3770();\n    fcn.0043b0b0(piVar4);\ncode_r0x00488566:\n    fcn.004c3770();\n    return piVar4;\n}\n",
        "token_count": 1901
    },
    "0043b460": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0043b460(void)\n\n{\n    uint8_t in_AL;\n    uint8_t uVar1;\n    int32_t extraout_EDX;\n    int32_t iVar2;\n    uint64_t uVar3;\n    \n    if (in_AL == 0xff) {\n        return 0;\n    }\n    uVar1 = in_AL & 7;\n    if (uVar1 == 2) {\n        return 2;\n    }\n    if (uVar1 < 3) {\n        if ((in_AL & 7) == 0) {\n            return 4;\n        }\n    }\n    else {\n        if (uVar1 == 3) {\n            return 4;\n        }\n        if (uVar1 == 4) {\n            return 8;\n        }\n    }\n    uVar3 = sub.msvcrt.dll_abort();\n    iVar2 = uVar3 >> 0x20;\n    if (uVar3 == 0xff) {\n        return 0;\n    }\n    uVar1 = uVar3 & 0x70;\n    if (uVar1 != 0x20) {\n        if (uVar1 < 0x21) {\n            if ((uVar3 & 0x70) == 0) {\n                return 0;\n            }\n            if (uVar1 == 0x10) {\n                return 0;\n            }\n        }\n        else {\n            if (uVar1 == 0x30) {\n                return *(iVar2 + 8);\n            }\n            if (uVar1 == 0x50) {\n                return 0;\n            }\n        }\n        sub.msvcrt.dll_abort();\n        iVar2 = extraout_EDX;\n    }\n    return *(iVar2 + 4);\n}\n",
        "token_count": 382
    },
    "004ba9a0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004ba9a0(void)\n\n{\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    if (*0x516f90 == 2) {\n        *0x516f90 = 1;\n        fcn.00489bc0();\n        fcn.00489bc0();\n        fcn.00489bc0();\n        fcn.0049f880();\n        fcn.0049f880();\n        fcn.0049f880();\n        return;\n    }\n    *0x516f90 = *0x516f90 + -1;\n    return;\n}\n",
        "token_count": 136
    },
    "0042f030": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t fcn.0042f030(void)\n\n{\n    char *pcVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    uint32_t *puVar9;\n    uint8_t uVar10;\n    uint *puVar11;\n    uint8_t *puVar12;\n    uint8_t *puVar13;\n    char cVar14;\n    int32_t iStack32;\n    \n    pcVar1 = *(in_EAX + 0xc);\n    cVar14 = *pcVar1;\n    if (cVar14 == 'S') {\n        if (pcVar1[1] == 't') {\n            *(in_EAX + 0xc) = pcVar1 + 2;\n            uVar7 = fcn.004303a0();\n            iVar4 = *(in_EAX + 0x14);\n            if (iVar4 < *(in_EAX + 0x18)) {\n                puVar11 = iVar4 * 0x10 + *(in_EAX + 0x10);\n                *(in_EAX + 0x14) = iVar4 + 1;\n                puVar11[1] = 0;\n                *puVar11 = 0;\n                puVar11[2] = 0x524ed1;\n                puVar11[3] = 3;\n            }\n            iVar4 = fcn.0042dc50(uVar7);\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 3;\n            cVar14 = **(in_EAX + 0xc);\njoined_r0x0042f28d:\n            if (cVar14 != 'I') {\n                return iVar4;\n            }\n            if ((iVar4 == 0) || (iVar5 = *(in_EAX + 0x20),  *(in_EAX + 0x24) <= iVar5)) goto code_r0x0042f1a6;\n            *(*(in_EAX + 0x1c) + iVar5 * 4) = iVar4;\n            *(in_EAX + 0x20) = iVar5 + 1;\n        }\n        else {\n            iVar4 = fcn.0042e190();\n            if (**(in_EAX + 0xc) != 'I') {\n                return iVar4;\n            }\n        }\n        uVar7 = fcn.0042f000();\n        iVar4 = fcn.0042dc50(uVar7);\n    }\n    else {\n        if (cVar14 < 'T') {\n            if (cVar14 != 'N') goto code_r0x0042f1d0;\n            *(in_EAX + 0xc) = pcVar1 + 1;\n            piVar2 = fcn.004300a0();\n            if (piVar2 != NULL) {\n                iVar5 = fcn.0042dcb0();\n                puVar12 = *(in_EAX + 0xc);\n                uVar8 = *puVar12;\n                iVar4 = 0;\ncode_r0x0042f123:\n                cVar14 = uVar8;\n                if (cVar14 != '\\0') {\n                    puVar13 = puVar12;\n                    if (cVar14 == 'D') {\n                        if ((puVar12[1] & 0xdf) != 0x54) {\n                            iVar6 = fcn.004303a0();\n                            goto code_r0x0042f2b2;\n                        }\n                        iVar6 = fcn.0042f510();\n                        goto code_r0x0042f2b2;\n                    }\ncode_r0x0042f130:\n                    cVar14 = uVar8;\n                    if (0x1c < uVar8 - 0x30) {\n                        if (cVar14 + 0x9fU < 0x1a) goto code_r0x0042f149;\n                        if (cVar14 != 'U') {\n                            if (cVar14 != 'S') goto code_r0x0042f390;\n                            iVar6 = fcn.0042e190();\n                            if (iVar4 != 0) goto code_r0x0042f15d;\n                            puVar12 = *(in_EAX + 0xc);\n                            uVar8 = *puVar12;\n                            iVar4 = iVar6;\n                            goto code_r0x0042f123;\n                        }\n                        iVar6 = fcn.004303a0();\n                        if (iVar4 != 0) goto code_r0x0042f15d;\ncode_r0x0042f2bf:\n                        puVar13 = *(in_EAX + 0xc);\n                        uVar10 = *puVar13;\n                        goto code_r0x0042f176;\n                    }\n                    if ((0x100803ffU >> (uVar8 - 0x30 & 0x1f) & 1) == 0) {\ncode_r0x0042f390:\n                        if (cVar14 != 'I') {\n                            if (cVar14 == 'T') {\n                                iVar6 = fcn.0042df60();\ncode_r0x0042f2b2:\n                                if (iVar4 == 0) goto code_r0x0042f2bf;\n                                goto code_r0x0042f15d;\n                            }\n                            if (cVar14 == 'E') {\n                                *piVar2 = iVar4;\n                                if (iVar4 != 0) {\n                                    if (iVar5 != 0) {\n                                        *(iVar5 + 8) = iStack32;\n                                        iStack32 = iVar5;\n                                    }\n                                    if (*puVar13 == 0x45) {\n                                        *(in_EAX + 0xc) = puVar13 + 1;\n                                        return iStack32;\n                                    }\n                                }\n                                goto code_r0x0042f1a6;\n                            }\n                            if ((iVar4 == 0) || (cVar14 != 'M')) goto code_r0x0042f1a0;\n                            puVar12 = puVar13 + 1;\n                            *(in_EAX + 0xc) = puVar12;\n                            uVar8 = puVar13[1];\n                            goto code_r0x0042f123;\n                        }\n                        if (iVar4 == 0) goto code_r0x0042f1a0;\n                        *(in_EAX + 0xc) = puVar13 + 1;\n                        iVar6 = fcn.0042eef0();\ncode_r0x0042f15d:\n                        iVar6 = fcn.0042dc50(iVar6);\n                    }\n                    else {\ncode_r0x0042f149:\n                        iVar6 = fcn.004303a0();\n                        if (iVar4 != 0) goto code_r0x0042f15d;\n                    }\n                    puVar13 = *(in_EAX + 0xc);\n                    uVar10 = *puVar13;\n                    puVar12 = puVar13;\n                    if (cVar14 == 'S') goto code_r0x0042f19a;\ncode_r0x0042f176:\n                    if (uVar10 != 0x45) goto code_r0x0042f17f;\n                    uVar8 = 0x45;\n                    iVar4 = iVar6;\n                    goto code_r0x0042f130;\n                }\ncode_r0x0042f1a0:\n                *piVar2 = 0;\n            }\n        }\n        else {\n            if (cVar14 == 'U') {\n                iVar4 = fcn.004303a0();\n                return iVar4;\n            }\n            if (cVar14 != 'Z') {\ncode_r0x0042f1d0:\n                iVar4 = fcn.004303a0();\n                cVar14 = **(in_EAX + 0xc);\n                goto joined_r0x0042f28d;\n            }\n            *(in_EAX + 0xc) = pcVar1 + 1;\n            piVar2 = fcn.004307a0();\n            if ((piVar2 != NULL) && (pcVar1 = *(in_EAX + 0xc),  *pcVar1 == 'E')) {\n                *(in_EAX + 0xc) = pcVar1 + 1;\n                if (pcVar1[1] == 's') {\n                    *(in_EAX + 0xc) = pcVar1 + 2;\n                    iVar4 = fcn.0042e430();\n                    if (iVar4 != 0) {\n                        iVar4 = *(in_EAX + 0x14);\n                        if (iVar4 < *(in_EAX + 0x18)) {\n                            puVar3 = iVar4 * 0x10 + *(in_EAX + 0x10);\n                            *(in_EAX + 0x14) = iVar4 + 1;\n                            puVar3[1] = 0;\n                            *puVar3 = 0;\n                            puVar3[2] = \"string literal\";\n                            puVar3[3] = 0xe;\n                            goto code_r0x0042f0b9;\n                        }\ncode_r0x0042f4db:\n                        puVar3 = NULL;\ncode_r0x0042f0b9:\n                        if ((*piVar2 == 3) && (*piVar2[3] == 0x29)) {\n                            piVar2[3][2] = 0;\n                        }\n                        iVar4 = fcn.0042dc50(puVar3);\n                        return iVar4;\n                    }\n                }\n                else if (pcVar1[1] == 'd') {\n                    *(in_EAX + 0xc) = pcVar1 + 2;\n                    uVar8 = fcn.0042df20();\n                    if ((-1 < uVar8) &&\n                       (((puVar9 = fcn.0042f030(),  puVar9 == NULL || ((*puVar9 & 0xfffffffd) == 0x45)) ||\n                        (iVar4 = fcn.0042e430(),  iVar4 != 0)))) {\n                        iVar4 = *(in_EAX + 0x14);\n                        if (iVar4 < *(in_EAX + 0x18)) {\n                            puVar3 = iVar4 * 0x10 + *(in_EAX + 0x10);\n                            puVar3[1] = 0;\n                            *(in_EAX + 0x14) = iVar4 + 1;\n                            *puVar3 = 0x46;\n                            puVar3[3] = uVar8;\n                            puVar3[2] = puVar9;\n                            goto code_r0x0042f0b9;\n                        }\n                        goto code_r0x0042f4db;\n                    }\n                }\n                else {\n                    puVar3 = fcn.0042f030();\n                    if (((puVar3 == NULL) || ((*puVar3 & 0xfffffffd) == 0x45)) || (iVar4 = fcn.0042e430(),  iVar4 != 0))\n                    goto code_r0x0042f0b9;\n                }\n            }\n        }\ncode_r0x0042f1a6:\n        iVar4 = 0;\n    }\n    return iVar4;\ncode_r0x0042f17f:\n    if ((iVar6 == 0) || (iVar4 = *(in_EAX + 0x20),  *(in_EAX + 0x24) <= iVar4)) goto code_r0x0042f1a0;\n    *(*(in_EAX + 0x1c) + iVar4 * 4) = iVar6;\n    *(in_EAX + 0x20) = iVar4 + 1;\n    uVar10 = *puVar13;\n    puVar12 = puVar13;\ncode_r0x0042f19a:\n    uVar8 = uVar10;\n    iVar4 = iVar6;\n    goto code_r0x0042f123;\n}\n",
        "token_count": 2664
    },
    "0043b790": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043b790(uint param_1, int32_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint32_t *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint8_t uStack56;\n    int32_t iStack48;\n    uint32_t auStack32 [4];\n    \n    if (*param_2 == 0) {\n        iStack48 = 0;\n    }\n    else {\n        iStack48 = 0;\n        iVar3 = 0;\n        do {\n            iVar5 = iVar3;\n            if (param_2[1] != 0) {\n                iVar5 = param_2 + (4 - param_2[1]);\n                if (iVar5 != iVar3) {\n                    uVar2 = fcn.0043b6a0();\n                    if (uVar2 == 0xff) {\n                        return -1;\n                    }\n                    fcn.0043b4b0();\n                    uVar1 = *(in_EAX + 4);\n                    if ((uVar1 & 0x7f8) == 0x7f8) {\n                        uStack56 = uVar2;\n                        *(in_EAX + 4) = uVar1 & 0xf807 | uStack56 << 3;\n                    }\n                    else if (uVar1 >> 3 != uVar2) {\n                        *(in_EAX + 4) = *(in_EAX + 4) | 4;\n                    }\n                }\n                fcn.0043b4f0(auStack32);\n                uVar2 = fcn.0043b460();\n                uVar4 = 0xffffffff;\n                if (uVar2 < 4) {\n                    uVar4 = (1 << (uVar2 * '\\b' & 0x1fU)) - 1;\n                }\n                if (((auStack32[0] & uVar4) != 0) &&\n                   (iStack48 = iStack48 + 1,  auStack32[0] <= *in_EAX && *in_EAX != auStack32[0])) {\n                    *in_EAX = auStack32[0];\n                }\n            }\n            param_2 = param_2 + *param_2 + 4;\n            iVar3 = iVar5;\n        } while (*param_2 != 0);\n    }\n    return iStack48;\n}\n",
        "token_count": 546
    },
    "0043b8e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b8e0(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iStack56;\n    uint32_t auStack32 [4];\n    \n    uVar5 = *(in_EAX + 0x10) >> 3;\n    fcn.0043b4b0();\n    if (*param_1 != 0) {\n        iStack56 = 0;\n        do {\n            while (param_1[1] != 0) {\n                if (((*(in_EAX + 0x10) & 4) != 0) && (iVar4 = param_1 + (4 - param_1[1]),  iVar4 != iStack56)) {\n                    uVar5 = fcn.0043b6a0();\n                    fcn.0043b4b0();\n                    iStack56 = iVar4;\n                }\n                if (uVar5 == 0) {\n                    if (param_1[2] != 0) goto code_r0x0043b927;\n                    break;\n                }\n                fcn.0043b4f0(auStack32);\n                uVar2 = fcn.0043b460();\n                uVar3 = 0xffffffff;\n                if (uVar2 < 4) {\n                    uVar3 = (1 << (uVar2 * '\\b' & 0x1fU)) - 1;\n                }\n                if ((auStack32[0] & uVar3) != 0) {\ncode_r0x0043b927:\n                    iVar4 = *param_2;\n                    if (iVar4 != 0) {\n                        iVar1 = *(iVar4 + 4);\n                        *(iVar4 + 4) = iVar1 + 1;\n                        *(iVar4 + 8 + iVar1 * 4) = param_1;\n                    }\n                    break;\n                }\n                param_1 = param_1 + *param_1 + 4;\n                if (*param_1 == 0) {\n                    return;\n                }\n            }\n            param_1 = param_1 + *param_1 + 4;\n        } while (*param_1 != 0);\n    }\n    return;\n}\n",
        "token_count": 530
    },
    "0043b9f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0043b9f0(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iStack56;\n    uint32_t uStack36;\n    uint32_t auStack32 [4];\n    \n    uVar3 = *(in_EAX + 0x10) >> 3;\n    fcn.0043b4b0();\n    iVar4 = *param_2;\n    iStack56 = 0;\n    do {\n        if (iVar4 == 0) {\n            return NULL;\n        }\n        if (param_2[1] != 0) {\n            if (((*(in_EAX + 0x10) & 4) != 0) && (iVar4 = param_2 + (4 - param_2[1]),  iVar4 != iStack56)) {\n                uVar3 = fcn.0043b6a0();\n                fcn.0043b4b0();\n                iStack56 = iVar4;\n            }\n            if (uVar3 == 0) {\n                uStack36 = param_2[2];\n                auStack32[0] = param_2[3];\n                if ((uStack36 != 0) && (param_1 - uStack36 < auStack32[0])) {\n                    return param_2;\n                }\n            }\n            else {\n                fcn.0043b4f0(&uStack36);\n                fcn.0043b4f0(auStack32);\n                uVar1 = fcn.0043b460();\n                uVar2 = 0xffffffff;\n                if (uVar1 < 4) {\n                    uVar2 = (1 << (uVar1 * '\\b' & 0x1fU)) - 1;\n                }\n                if (((uStack36 & uVar2) != 0) && (param_1 - uStack36 < auStack32[0])) {\n                    return param_2;\n                }\n            }\n        }\n        param_2 = param_2 + *param_2 + 4;\n        iVar4 = *param_2;\n    } while( true );\n}\n",
        "token_count": 508
    },
    "00441fb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441fb0(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint8_t auStack32 [16];\n    \n    *(param_1 + 0xc) = 0xffffffff;\n    uVar1 = *(param_1 + 4);\n    if (in_EAX == 0) {\n        if ((uVar1 & 0x100) == 0) {\n            if ((uVar1 & 0x40) == 0) {\n                puVar3 = auStack32;\n            }\n            else {\n                auStack32[0] = 0x20;\n                puVar3 = auStack32 + 1;\n            }\n        }\n        else {\n            auStack32[0] = 0x2b;\n            puVar3 = auStack32 + 1;\n        }\n    }\n    else {\n        puVar3 = auStack32 + 1;\n        auStack32[0] = 0x2d;\n    }\n    iVar2 = 0;\n    do {\n        puVar3[iVar2] = *(param_2 + iVar2) & 0xdf | uVar1 & 0x20;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != 3);\n    fcn.00441e90();\n    return;\n}\n",
        "token_count": 322
    },
    "00440cc0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00440cc0(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = 7;\n    uVar1 = 0;\n    do {\n        uVar1 = uVar1 + *(param_1 + 2 + iVar2 * 2) + *(param_2 + 2 + iVar2 * 2);\n        *(param_2 + 2 + iVar2 * 2) = uVar1;\n        uVar1 = uVar1 >> 0x10 & 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 157
    },
    "00440d40": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool fcn.00440d40(int32_t param_1, ushort *param_2)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint32_t uVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    bool bVar10;\n    uint *puStack92;\n    int16_t iStack86;\n    ushort auStack54 [2];\n    uint uStack50;\n    uint uStack46;\n    uint uStack42;\n    ushort uStack38;\n    uint uStack36;\n    uint16_t auStack32 [8];\n    uint16_t *puVar6;\n    \n    uVar7 = 0;\n    uStack38 = 0;\n    uStack50 = 0;\n    uStack46 = 0;\n    uStack42 = 0;\n    auStack54[0] = *param_2;\n    auStack54[1] = param_2[1];\n    puVar8 = param_2 + 2;\n    puVar5 = puVar8;\n    do {\n        if ((*puVar5 & 1) != 0) {\n            uVar7 = uVar7 | 1;\n        }\n        uVar3 = *puVar5 >> 1;\n        if ((uVar7 & 2) != 0) {\n            uVar3 = uVar3 | 0x8000;\n        }\n        puVar9 = puVar5 + 1;\n        uVar7 = uVar7 * 2;\n        *puVar5 = uVar3;\n        puVar5 = puVar9;\n    } while (puVar9 != param_2 + 9);\n    uVar3 = *(param_1 + 6);\n    puStack92 = &uStack50;\n    do {\n        if (uVar3 * 0xffff < CONCAT22(param_2[2], param_2[3])) {\n            iStack86 = -1;\n        }\n        else {\n            iStack86 = CONCAT22(param_2[2], param_2[3]) / uVar3;\n        }\n        fcn.004409a0();\n        iVar4 = 2;\n        while( true ) {\n            uVar1 = param_2[iVar4];\n            puVar5 = &uStack36 + iVar4 * 2;\n            bVar10 = *puVar5 == uVar1;\n            iVar2 = iStack86;\n            if (!bVar10) break;\n            iVar4 = iVar4 + 1;\n            if (iVar4 == 9) goto code_r0x00440e2f;\n        }\n        if (*puVar5 < uVar1 || bVar10) goto code_r0x00440e2f;\n        iVar4 = 7;\n        uVar7 = 0;\n        do {\n            uVar7 = (*(&uStack36 + iVar4 * 2 + 2) - *(param_1 + 2 + iVar4 * 2)) - uVar7;\n            *(&uStack36 + iVar4 * 2 + 2) = uVar7;\n            uVar7 = uVar7 >> 0x10 & 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        iVar4 = 2;\n        do {\n            uVar1 = param_2[iVar4];\n            puVar5 = &uStack36 + iVar4 * 2;\n            bVar10 = *puVar5 != uVar1;\n            iVar2 = iStack86 + -1;\n            if (bVar10) {\n                if (uVar1 <= *puVar5 && bVar10) {\n                    iVar4 = 7;\n                    uVar7 = 0;\n                    do {\n                        uVar7 = (*(&uStack36 + iVar4 * 2 + 2) - *(param_1 + 2 + iVar4 * 2)) - uVar7;\n                        *(&uStack36 + iVar4 * 2 + 2) = uVar7;\n                        uVar7 = uVar7 >> 0x10 & 1;\n                        iVar4 = iVar4 + -1;\n                        iVar2 = iStack86 + -2;\n                    } while (iVar4 != 0);\n                }\n                break;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 != 9);\ncode_r0x00440e2f:\n        iStack86 = iVar2;\n        iVar4 = 7;\n        uVar7 = 0;\n        do {\n            uVar7 = (param_2[iVar4 + 1] - *(&uStack36 + iVar4 * 2 + 2)) - uVar7;\n            param_2[iVar4 + 1] = uVar7;\n            uVar7 = uVar7 >> 0x10 & 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        *puStack92 = iStack86;\n        puVar5 = puVar8;\n        do {\n            puVar6 = puVar5 + 1;\n            *puVar5 = *puVar6;\n            puVar5 = puVar6;\n        } while (puVar6 != param_2 + 8);\n        puStack92 = puStack92 + 2;\n        param_2[8] = 0;\n        if (&uStack36 == puStack92) {\n            uVar3 = 0;\n            do {\n                puVar5 = puVar8 + 1;\n                uVar3 = uVar3 | *puVar8;\n                puVar8 = puVar5;\n            } while (puVar5 != puVar9);\n            iVar4 = 0;\n            do {\n                param_2[iVar4] = auStack54[iVar4];\n                iVar4 = iVar4 + 1;\n            } while (iVar4 != 9);\n            return uVar3 != 0;\n        }\n    } while( true );\n}\n",
        "token_count": 1324
    },
    "00440fa0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint16_t fcn.00440fa0(int32_t param_1, uint16_t *param_2)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint16_t uVar5;\n    uint16_t auStack50 [8];\n    uint16_t auStack34 [2];\n    uint uStack30;\n    uint uStack26;\n    uint uStack22;\n    uint16_t uStack18;\n    \n    uVar5 = 0;\n    uStack30 = 0;\n    uStack26 = 0;\n    uStack22 = 0;\n    piVar3 = param_1 + 0x10;\n    auStack34[0] = *param_2;\n    auStack34[1] = param_2[1];\n    uStack18 = 0;\n    do {\n        iVar1 = *piVar3;\n        piVar3 = piVar3 + -1;\n        if (iVar1 != 0) {\n            iVar4 = 7;\n            fcn.004409a0();\n            uVar2 = 0;\n            do {\n                uVar2 = uVar2 + auStack50[iVar4] + auStack34[iVar4 + 1];\n                auStack34[iVar4 + 1] = uVar2;\n                uVar2 = uVar2 >> 0x10 & 1;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        uVar5 = uVar5 | uStack18;\n        uStack18 = uStack22._2_2_;\n        uStack22 = CONCAT22(uStack22, uStack26._2_2_);\n        uStack26 = CONCAT22(uStack26, uStack30._2_2_);\n        uStack30 = uStack30 << 0x10;\n    } while (param_1 + 4 != piVar3);\n    iVar4 = 0;\n    do {\n        param_2[iVar4] = auStack34[iVar4];\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 9);\n    return uVar5;\n}\n",
        "token_count": 488
    },
    "00443ee0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00443ee0(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    int32_t iVar12;\n    uint32_t uStack84;\n    uint32_t uStack68;\n    uint32_t *puStack60;\n    int32_t iStack48;\n    uint32_t *puVar11;\n    \n    iVar5 = *(param_2 + 0x10);\n    uVar2 = 0;\n    if (iVar5 <= *(param_1 + 0x10)) {\n        puStack60 = param_2 + 0x14;\n        iStack48 = iVar5 + -1;\n        puVar7 = param_1 + 0x14;\n        puVar1 = puStack60 + iStack48;\n        puVar6 = puVar7 + iStack48;\n        uVar2 = *puVar6 / (*puVar1 + 1);\n        if (uVar2 != 0) {\n            uStack68 = 0;\n            uStack84 = 0;\n            puVar8 = puVar7;\n            puVar10 = puStack60;\n            do {\n                puVar11 = puVar10 + 1;\n                uVar9 = *puVar8;\n                uVar3 = uVar2 * *puVar10;\n                uVar4 = uVar3 + uStack68;\n                uStack68 = (uVar2 * *puVar10 >> 0x20) + CARRY4(uVar3, uStack68);\n                uVar3 = uVar9 - uVar4;\n                *puVar8 = uVar3 - uStack84;\n                uStack84 = -(uVar3 < uStack84) - (uVar9 < uVar4) & 1;\n                puVar8 = puVar8 + 1;\n                puVar10 = puVar11;\n            } while (puVar11 <= puVar1);\n            if (*puVar6 == 0) {\n                if ((puVar7 < puVar6 + -1) && (puVar6[-1] == 0)) {\n                    do {\n                        iStack48 = iStack48 + -1;\n                        if (iStack48 == (iVar5 + -2) - (puVar6 + (-5 - puVar7) >> 2)) break;\n                    } while (puVar6[iStack48 - iVar5] == 0);\n                }\n                *(param_1 + 0x10) = iStack48;\n            }\n        }\n        iVar5 = fcn.00446d70(param_1, param_2);\n        if (-1 < iVar5) {\n            uVar9 = 0;\n            uVar2 = uVar2 + 1;\n            puVar6 = puVar7;\n            do {\n                puVar8 = puStack60 + 1;\n                uVar3 = *puVar6 - *puStack60;\n                uVar4 = uVar3 - uVar9;\n                uVar9 = -(uVar3 < uVar9) - (*puVar6 < *puStack60) & 1;\n                *puVar6 = uVar4;\n                puVar6 = puVar6 + 1;\n                puStack60 = puVar8;\n            } while (puVar8 <= puVar1);\n            puVar1 = puVar7 + iStack48;\n            if (*puVar1 == 0) {\n                iVar5 = iStack48;\n                if ((puVar7 < puVar1 + -1) && (puVar1[-1] == 0)) {\n                    iVar5 = iStack48 + -1;\n                    iVar12 = iVar5 - (puVar1 + (-5 - puVar7) >> 2);\n                    while ((iVar5 != iVar12 && (puVar1[(iVar5 + -1) - iStack48] == 0))) {\n                        iVar5 = iVar5 + -1;\n                    }\n                }\n                iStack48 = iVar5;\n                *(param_1 + 0x10) = iStack48;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 971
    },
    "00441c10": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00441c46)\n// WARNING: Removing unreachable block (ram,0x00441ce0)\n// WARNING: Removing unreachable block (ram,0x00441c4f)\n\nvoid fcn.00441c10(uint param_1, uint param_2, uint32_t param_3, uint param_4, uint param_5, uint param_6, \n                 uint32_t *param_7)\n\n{\n    float10 fVar1;\n    int32_t iVar2;\n    uint uStack44;\n    uint uStack40;\n    ushort uStack36;\n    ushort uStack34;\n    uint uStack32;\n    uint auStack20 [4];\n    \n    uStack44 = param_1;\n    uStack40 = param_2;\n    uStack36 = param_3;\n    uStack34 = param_3 >> 0x10;\n    fVar1 = CONCAT28(uStack36, CONCAT44(param_2, param_1));\n    uStack32 = param_4;\n    if (fVar1 == 0) {\n        auStack20[0] = 0;\n        iVar2 = 0;\n    }\n    else if (fVar1 == 0) {\n        auStack20[0] = 2;\n        iVar2 = -0x403d;\n    }\n    else {\n        auStack20[0] = 1;\n        iVar2 = (param_3 & 0x7fff) - 0x403e;\n    }\n    *param_7 = param_3 & 0x8000;\n    fcn.004440f0(0x515a84, iVar2, &uStack44, auStack20);\n    return;\n}\n",
        "token_count": 376
    },
    "004c3710": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.004c3710(void)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    \n    ppiVar2 = fcn.004c3880();\n    piVar1 = *ppiVar2;\n    if (piVar1 != NULL) {\n        iVar3 = *piVar1;\n        if ((*(piVar1 + 0xc) & 1) != 0) {\n            iVar3 = *(iVar3 + -0x50);\n        }\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 132
    },
    "00446080": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid fcn.00446080(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    int8_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    uint32_t *puVar9;\n    uint var_10h;\n    uint var_14h;\n    uint8_t uStack28;\n    \n    puVar1 = param_1 + 0x14;\n    if (param_2 >> 5 < *(param_1 + 0x10)) {\n        puVar2 = puVar1 + (param_2 >> 5);\n        puVar3 = puVar1 + *(param_1 + 0x10);\n        if ((param_2 & 0x1f) == 0) {\n            puVar7 = puVar2;\n            puVar8 = puVar1;\n            if (puVar3 <= puVar2) goto code_r0x00446130;\n            do {\n                puVar9 = puVar7 + 1;\n                *puVar8 = *puVar7;\n                puVar7 = puVar9;\n                puVar8 = puVar8 + 1;\n            } while (puVar9 < puVar3);\n            iVar6 = (~puVar2 + puVar3 & 0xfffffffc) + 4;\n            puVar7 = puVar1 + iVar6;\n        }\n        else {\n            iVar4 = param_2 & 0x1f;\n            uStack28 = 0x20 - iVar4;\n            puVar8 = puVar2 + 1;\n            uVar5 = *puVar2 >> iVar4;\n            puVar7 = puVar1;\n            if (puVar8 < puVar3) {\n                do {\n                    puVar9 = puVar8 + 1;\n                    *puVar7 = uVar5 | *puVar8 << (uStack28 & 0x1f);\n                    uVar5 = *puVar8 >> iVar4;\n                    puVar8 = puVar9;\n                    puVar7 = puVar7 + 1;\n                } while (puVar9 < puVar3);\n                puVar7 = param_1 + 0x18 + (puVar3 + (-5 - puVar2) & 0xfffffffcU);\n            }\n            *puVar7 = uVar5;\n            if (uVar5 != 0) {\n                puVar7 = puVar7 + 1;\n            }\n            iVar6 = puVar7 - puVar1;\n        }\n        *(param_1 + 0x10) = iVar6 >> 2;\n        if (puVar7 != puVar1) {\n            return;\n        }\n    }\n    else {\ncode_r0x00446130:\n        *(param_1 + 0x10) = 0;\n    }\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 675
    },
    "004473c0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid fcn.004473c0(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    puVar4 = param_3 + 0x14;\n    puVar2 = param_1 + (param_2 + -1 >> 5) + 1;\n    puVar1 = puVar4 + *(param_3 + 0x10);\n    puVar5 = param_1;\n    if (puVar4 < puVar1) {\n        do {\n            puVar3 = puVar4 + 1;\n            *puVar5 = *puVar4;\n            puVar4 = puVar3;\n            puVar5 = puVar5 + 1;\n        } while (puVar3 < puVar1);\n        param_1 = param_1 + (puVar1 + (-0x15 - param_3) & 0xfffffffcU) + 4;\n    }\n    for (; param_1 < puVar2; param_1 = param_1 + 1) {\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "00451a70": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451a70(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint auStack284 [63];\n    uint uStack32;\n    uchar auStack28 [12];\n    \n    iVar1 = 0;\n    do {\n        *(auStack284 + iVar1) = iVar1;\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0x100);\n    iVar1 = param_1 + 0x1d;\n    if (*(*param_1 + 0x1c) == 0x451cf0) {\n        puVar5 = param_1 + 0x21U & 0xfffffffc;\n        *(param_1 + 0x1d) = auStack284[0];\n        *(param_1 + 0x119) = uStack32;\n        iVar2 = iVar1 - puVar5;\n        puVar4 = auStack284 - iVar2;\n        for (uVar3 = iVar2 + 0x100U >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    else {\n        (**(*param_1 + 0x1c))(auStack284, auStack28, iVar1);\n    }\n    *(param_1 + 7) = 1;\n    iVar1 = sub.msvcrt.dll_memcmp(auStack284, iVar1, 0x100);\n    if (iVar1 != 0) {\n        *(param_1 + 7) = 2;\n    }\n    return;\n}\n",
        "token_count": 411
    },
    "004ac770": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004ac770(uint *param_1, int32_t param_2, uint8_t param_3, int32_t param_4)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    \n    *param_1 = 0x52c990;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[1] = param_4 != 0;\n    *(param_1 + 3) = param_2 != 0 & param_3;\n    if (param_2 == 0) {\n        param_2 = 0x52cda0;\n    }\n    puVar2 = param_1 + 0x21U & 0xfffffffc;\n    *(param_1 + 0x1d) = 0;\n    *(param_1 + 0x119) = 0;\n    param_1[6] = param_2;\n    uVar1 = param_1 + (0x11d - puVar2) >> 2;\n    for (; uVar1 != 0; uVar1 = uVar1 - 1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *(param_1 + 7) = 0;\n    *(param_1 + 0x11d) = 0;\n    puVar2 = param_1 + 0x121U & 0xfffffffc;\n    *(param_1 + 0x219) = 0;\n    uVar1 = param_1 + (0x21d - puVar2) >> 2;\n    for (; uVar1 != 0; uVar1 = uVar1 - 1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *(param_1 + 0x21d) = 0;\n    return;\n}\n",
        "token_count": 435
    },
    "004c3540": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint * fcn.004c3540(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    char cVar5;\n    uint *puVar6;\n    uint32_t **ppuVar7;\n    uint uVar8;\n    uint uVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    code *pcVar13;\n    uint *puVar14;\n    ulong uVar15;\n    int32_t iStack152;\n    uint32_t *puStack124;\n    uint32_t *puVar16;\n    \n    puVar6 = sub.msvcrt.dll_malloc(param_1 + 0x60);\n    if ((puVar6 != NULL) || (puVar6 = fcn.00448b90(),  puVar6 != NULL)) {\n        *puVar6 = 0;\n        puVar6[0x17] = 0;\n        puVar14 = puVar6 + 1 & 0xfffffffc;\n        for (uVar11 = puVar6 + (0x60 - (puVar6 + 1 & 0xfffffffc)) >> 2; uVar11 != 0; uVar11 = uVar11 - 1) {\n            *puVar14 = 0;\n            puVar14 = puVar14 + 1;\n        }\n        return puVar6 + 0x18;\n    }\n    fcn.004c00d0();\n    puVar6 = fcn.004c3540(4);\n    *puVar6 = 0x52cbc0;\n    fcn.004c3af0(puVar6, 0x528d50, 0x4b9d90);\n    puVar6 = fcn.004c3540(4);\n    *puVar6 = 0x52beb4;\n    puVar16 = 0x528810;\n    fcn.004c3af0(puVar6, 0x528810, 0x48df40);\n    ppuVar7 = fcn.004c3880();\n    puVar2 = *ppuVar7;\n    puVar1 = puVar16 + -0xc;\n    iVar12 = puVar16[1] + 0xb8b1aabc + (0x432b2aff < *puVar16);\n    if (iVar12 == 0 && (1 < *puVar16 + 0xbcd4d500) <= -iVar12) {\n        uVar11 = puVar16[-7];\n        uVar4 = -uVar11;\n        if (-1 < uVar11) {\n            uVar4 = uVar11;\n        }\n        puVar16[-7] = uVar4 + 1;\n        ppuVar7[1] = ppuVar7[1] + -1;\n        if (puVar2 != puVar1) {\n            puVar16[-8] = puVar2;\n            *ppuVar7 = puVar1;\n        }\n        return puVar16[-2];\n    }\n    if (puVar2 == NULL) {\n        *ppuVar7 = puVar1;\n        return NULL;\n    }\n    fcn.004c00d0();\n    if ((puStack124 == NULL) ||\n       (fcn.004c3600(puStack124),  iVar12 = puStack124[1] + 0xb8b1aabc + (0x432b2aff < *puStack124), \n       iVar12 != 0 || -iVar12 < (1 < *puStack124 + 0xbcd4d500))) {\n        fcn.004c00d0();\n    }\n    fcn.00448780(puStack124[-9]);\n    fcn.004c3600(iStack152);\n    uVar9 = *(iStack152 + -0x18);\n    uVar3 = *(iStack152 + -0x24);\n    uVar8 = fcn.004487a0(*(iStack152 + -0x28));\n    fcn.004c3600(uVar8);\n    fcn.004c38a0();\n    while( true ) {\n        fcn.00448440();\n        cVar5 = fcn.00448520(uVar9);\n        if (cVar5 != '\\0') break;\n        cVar5 = fcn.00448520(uVar9);\n        if (cVar5 != '\\0') goto code_r0x004c441e;\n        fcn.00448780(uVar3);\n    }\n    fcn.004c3a90();\ncode_r0x004c441e:\n    puVar6 = fcn.004c3540(4);\n    *puVar6 = 0x52c0b4;\n    fcn.004c3af0(puVar6, 0x528938, 0x4968c0);\n    uVar9 = sub.msvcrt.dll_abort();\n    fcn.004c3600(uVar9);\n    uVar15 = sub.msvcrt.dll_abort();\n    fcn.004c3770();\n    pcVar13 = (uVar15 >> 0x20) + 1;\n    if (pcVar13 != NULL) {\n        fcn.0043b0b0(uVar15);\n    }\n    uVar15 = fcn.004c36d0();\n    uVar9 = uVar15;\n    if (uVar15 >> 0x20 != 1) goto code_r0x004c44fd;\n    piVar10 = fcn.004c3600(uVar9);\n    uVar9 = (**(*piVar10 + 8))();\n    uVar8 = (*pcVar13)(2);\n    sub.msvcrt.dll_fwrite(\"  what():  \", 1, 0xb, uVar8);\n    uVar8 = (*pcVar13)(2);\n    sub.msvcrt.dll_fputs(uVar9, uVar8);\n    uVar9 = (*pcVar13)(2);\n    sub.msvcrt.dll_fputc(10, uVar9);\n    fcn.004c3770();\n    do {\n        sub.msvcrt.dll_abort();\n        uVar9 = uVar3;\n        fcn.00447658(uVar3);\n        fcn.004c3a90();\ncode_r0x004c44fd:\n        fcn.004c3600(uVar9);\n        fcn.004c3770();\n    } while( true );\n}\n",
        "token_count": 1442
    },
    "004470a0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.004470a0(ulong param_1, int32_t *param_2, int32_t *param_3)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    \n    iVar4 = fcn.00446700(1);\n    if (iVar4 != 0) {\n        uStack32 = param_1 >> 0x20;\n        uVar8 = uStack32 >> 0x14 & 0x7ff;\n        uVar5 = uStack32 & 0xfffff;\n        if (uVar8 != 0) {\n            uVar5 = uStack32 & 0xfffff | 0x100000;\n        }\n        uStack36 = param_1;\n        if (uStack36 == 0) {\n            *(iVar4 + 0x10) = 1;\n            iVar6 = 0;\n            for (uVar7 = uVar5; (uVar7 & 1) == 0; uVar7 = uVar7 >> 1 | 0x80000000) {\n                iVar6 = iVar6 + 1;\n            }\n            iVar2 = iVar6 + 0x20;\n            *(iVar4 + 0x14) = uVar5 >> (iVar6 & 0x1f);\n            iVar6 = 1;\n        }\n        else {\n            iVar2 = 0;\n            for (uVar7 = uStack36; (uVar7 & 1) == 0; uVar7 = uVar7 >> 1 | 0x80000000) {\n                iVar2 = iVar2 + 1;\n            }\n            if (iVar2 == 0) {\n                *(iVar4 + 0x14) = uStack36;\n            }\n            else {\n                uVar3 = iVar2;\n                uVar7 = uVar5 << (0x20 - uVar3 & 0x1f);\n                uVar5 = uVar5 >> (uVar3 & 0x1f);\n                *(iVar4 + 0x14) = uVar7 | uStack36 >> (uVar3 & 0x1f);\n            }\n            *(iVar4 + 0x18) = uVar5;\n            iVar6 = (uVar5 != 0) + 1;\n            *(iVar4 + 0x10) = iVar6;\n        }\n        if (uVar8 == 0) {\n            puVar1 = iVar4 + 0x10 + iVar6 * 4;\n            uVar5 = 0x1f;\n            if (*puVar1 != 0) {\n                for (; *puVar1 >> uVar5 == 0; uVar5 = uVar5 - 1) {\n                }\n            }\n            *param_2 = iVar2 + -0x432;\n            *param_3 = iVar6 * 0x20 - (uVar5 ^ 0x1f);\n            return;\n        }\n        *param_2 = (uVar8 - 0x433) + iVar2;\n        *param_3 = 0x35 - iVar2;\n    }\n    return;\n}\n",
        "token_count": 748
    },
    "004472b0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nfloat10 fcn.004472b0(int32_t param_1, int32_t param_2)\n\n{\n    double dVar1;\n    double dVar2;\n    float10 fVar3;\n    int32_t iStack56;\n    int32_t iStack48;\n    int32_t iStack20;\n    int32_t aiStack16 [2];\n    \n    fVar3 = fcn.00446fa0(param_1, &iStack20);\n    dVar1 = fVar3;\n    iStack56 = dVar1 >> 0x20;\n    fVar3 = fcn.00446fa0(param_2, aiStack16);\n    dVar2 = fVar3;\n    aiStack16[0] = ((*(param_1 + 0x10) - *(param_2 + 0x10)) * 0x20 + iStack20) - aiStack16[0];\n    if (0 < aiStack16[0]) {\n        return (dVar1 & 0xffffffff | aiStack16[0] * 0x100000 + iStack56 << 0x20) / dVar2;\n    }\n    iStack48 = dVar2 >> 0x20;\n    return dVar1 / (dVar2 & 0xffffffff | iStack48 + aiStack16[0] * -0x100000 << 0x20);\n}\n",
        "token_count": 303
    },
    "00447760": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nint32_t fcn.00447760(int32_t param_1)\n\n{\n    return param_1 * 0x20 + _sym.imp.msvcrt.dll__iob;\n}\n",
        "token_count": 41
    },
    "004030c4": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.004030c4(uint param_1)\n\n{\n    uint in_stack_fffffcf8;\n    ulong uVar1;\n    char *pcVar2;\n    ulong in_stack_fffffdec;\n    uint uVar3;\n    uint var_18ch;\n    uint var_184h;\n    uint var_169h;\n    uint var_14dh;\n    uint var_131h;\n    uint var_115h;\n    uint var_fch;\n    uint var_e1h;\n    uint var_c5h;\n    uint var_a9h;\n    uint var_8dh;\n    uint var_74h;\n    uint var_59h;\n    uint var_3dh;\n    uint var_bp_24h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    uVar3 = in_stack_fffffdec >> 0x20;\n    fcn.004838d0();\n    fcn.004b29a0(\"uqzeohpoqbqhhxyupflgcdeskyiksmjczuqttycccwrtohpxw\", &var_169h);\n    fcn.004838d0();\n    fcn.004b29a0(\"smnnmawjhtlsyjmrhlekppuygrznnzgrulaeuudcyaruba\", &var_14dh);\n    fcn.00402b30(*0x518e08, *0x518e08 >> 0x20, &var_169h + 1, 0x4e9, &var_184h, *0x518e00, *0x518e00 >> 0x20, *0x518df8\n                 , *0x518df8 >> 0x20, *0x518df0, *0x518df0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    uVar1 = CONCAT44(uVar3, &var_131h);\n    pcVar2 = \"itgindapgzothsvvnjkfydyoencriwusnwnw\";\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0(\"gtbqdbjcjpyvkkg\", &var_115h, pcVar2, uVar1);\n    fcn.00402c16(&var_131h + 1, 0xad3, &var_14dh + 1, *0x518e20, *0x518e20 >> 0x20, *0x518e18, *0x518e18 >> 0x20, \n                 *0x518e10, *0x518e10 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.00402e08(0, *0x518e28, *0x518e28 >> 0x20);\n    fcn.004838d0();\n    fcn.004b29a0(\"qderqwlgjsrjfqvwivyysnbnxpqjkkbmambrkbuabprgcgxxrrnkedwokjal\", &var_e1h);\n    fcn.00403002(param_1, &var_fch, *0x518e38, *0x518e38 >> 0x20, 0, *0x518e30, *0x518e30 >> 0x20, 0x1f2f, 0);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"smhkiruwfvqbkhxmghgbfqixu\", &var_c5h);\n    fcn.00402b0a(*0x518e40, *0x518e40 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"yhrndeatywnpzadxzjazdtdvilyvbusgmsqrxwhrcedvi\", &var_a9h);\n    fcn.00401ca4(*0x518e58, *0x518e58 >> 0x20, 0x8a3, &var_c5h + 1, 0x9da, *0x518e50, *0x518e50 >> 0x20, *0x518e48, \n                 *0x518e48 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"ssvfmtxcxzyiyqepgpwmegmxwcexpsdmeiakgmcosfduscieavkobxfvc\", &var_8dh);\n    fcn.00401d4c(&var_a9h + 1, 0x766, 0x2f4, *0x518e68, *0x518e68 >> 0x20, 0x639, *0x518e60, *0x518e60 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    uVar1 = CONCAT44(0x403528, in_stack_fffffcf8);\n    fcn.004b29a0(\"txonvirzjmmzqebwnepcqebqyplbtchkvbmiutcluhtjobpndtrmapwhsebsohplfyorsazyhjghqlliofsauyrypsnmckxan\", \n                 &var_59h);\n    fcn.004838d0(uVar1);\n    fcn.004b29a0(\"evgehbckiamlfhvunftbwzckqoocyswqzepefbg\", &var_3dh);\n    fcn.00401e02(param_1, 0, *0x518e80, *0x518e80 >> 0x20, 0, *0x518e78, *0x518e78 >> 0x20, *0x518e70, *0x518e70 >> 0x20\n                 , 0x1bd, 0);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.00402068(param_1, *0x518ea0, *0x518ea0 >> 0x20, 1, 0x30c, *0x518e98, *0x518e98 >> 0x20, 1, *0x518e90, \n                 *0x518e90 >> 0x20, *0x518e88, *0x518e88 >> 0x20);\n    fcn.004b2fc0();\n    fcn.0040235c(0, *0x518eb0, *0x518eb0 >> 0x20, 1, 1, 0, *0x518ea8, *0x518ea8 >> 0x20);\n    fcn.004838d0();\n    fcn.004b29a0(\"saigfgihrfesbtznnadmbspeczwdlsschmqgjrvjlbdpivtikdkrwqnh\", &var_9h);\n    fcn.004028e6(&var_bp_24h, 0, 0xa34, 0, *0x518eb8, *0x518eb8 >> 0x20, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    return;\n}\n",
        "token_count": 1844
    },
    "00413d48": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.00413d48(uint param_1)\n\n{\n    char *pcVar1;\n    uint in_stack_fffffc7c;\n    ulong uVar2;\n    uint var_32ch;\n    uint var_324h;\n    uint var_30ch;\n    uint var_2f1h;\n    uint var_2d5h;\n    uint var_2b9h;\n    uint var_29dh;\n    uint var_281h;\n    uint var_265h;\n    uint var_249h;\n    uint var_22dh;\n    uint var_211h;\n    uint var_1f5h;\n    uint var_1d9h;\n    uint var_1bdh;\n    uint var_1a1h;\n    uint var_185h;\n    uint var_169h;\n    uint var_14dh;\n    uint var_131h;\n    uint var_115h;\n    uint var_f9h;\n    uint var_e0h;\n    uint var_c5h;\n    uint var_ach;\n    uint var_91h;\n    uint var_75h;\n    uint var_5ch;\n    uint var_41h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.004b2c00();\n    fcn.004b2c00();\n    fcn.004b2c00();\n    fcn.004838d0();\n    uVar2 = CONCAT44(0x413db0, in_stack_fffffc7c);\n    fcn.004b29a0(\"ldjyvqeptulibryydxx\", &var_2f1h);\n    fcn.004838d0(uVar2);\n    fcn.004b29a0(\"ulbvutg\", &var_2d5h);\n    fcn.004838d0();\n    fcn.004b29a0(\"mvidzhygxjwoacfhapnqmwjrbdyvn\", &var_2b9h);\n    fcn.0041372e(param_1, 0x7a1, &var_2d5h + 1, &var_2f1h + 1, *0x522538, *0x522538 >> 0x20, 0x65a, 1, &var_30ch, \n                 *0x522530, *0x522530 >> 0x20);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.004138e8(0x50b, *0x522548, *0x522548 >> 0x20, 0x4c4, *0x522540, *0x522540 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.00413980(1, 0);\n    fcn.004838d0();\n    fcn.004b29a0(\"wcshbirnmxmstperqyezmtz\", &var_281h);\n    fcn.00413b5a(1, 0x14eb, &var_29dh + 1, 0, *0x522550, *0x522550 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"dofddqrorkugtcgeucjjaukkjukzvexwrfqpbjxfafwnikdonbgvzlvyrktpcwkhybuslfc\", &var_265h);\n    fcn.004838d0();\n    fcn.004b29a0(\"epxgvufasntpaflqcaxzqlqsxzdyddxdvlnwudrrwpwwxrnkrgxgwhslhkaoxwptsayjah\", &var_249h);\n    fcn.004838d0();\n    pcVar1 = \"jjayzxcgrpfdieifchyuakkitgbpajioexvkrmizjipffkfjmgjqygolrelmistlbqrkwlflpjmzrlqxt\";\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0(\"buxxlcfriopgnndbymdjzwtcdqsmpukgftmtavcbtbjpvevguvlhqmbwdmtgztlugsoykyruyug\", &var_211h, pcVar1);\n    fcn.00413b86(0, &var_22dh + 1, &var_249h + 1, *0x522558, *0x522558 >> 0x20, &var_265h + 1, 0, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.00412fc2();\n    fcn.004838d0();\n    fcn.004b29a0(\"oegrfbdlfiwejobneeoeaqzutaisaiuskbujxqtlavxzxqvachqsjfb\", &var_1f5h);\n    fcn.0041303e(0, 0x4b3, *0x522570, *0x522570 >> 0x20, &var_211h + 1, *0x522568, *0x522568 >> 0x20, 0x1bf5, 0x10f, \n                 *0x522560, *0x522560 >> 0x20, 4999, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(0x51be1c, &var_1d9h);\n    fcn.004131fa(*0x522590, *0x522590 >> 0x20, 1, *0x522588, *0x522588 >> 0x20, &var_1f5h + 1, *0x522580, \n                 *0x522580 >> 0x20, 0xef, *0x522578, *0x522578 >> 0x20, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.004132c6(0x1329, *0x5225b0, *0x5225b0 >> 0x20, *0x5225a8, *0x5225a8 >> 0x20, 1, &var_1d9h + 1, *0x5225a0, \n                 *0x5225a0 >> 0x20, *0x522598, *0x522598 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"uazvlshgdoedxdshpzuvgp\", &var_1a1h);\n    fcn.004838d0();\n    fcn.004b29a0(\"xeiqhdeqaxqgazkckhvjyakrwjtfutrvmpxs\", &var_185h);\n    fcn.00413386(*0x5225c0, *0x5225c0 >> 0x20, &var_1a1h + 1, 0x1737, 0, &var_1bdh + 1, 0x9d1, *0x5225b8, \n                 *0x5225b8 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.00413428(0x34e, *0x5225e0, *0x5225e0 >> 0x20, &var_185h + 1, *0x5225d8, *0x5225d8 >> 0x20, *0x5225d0, \n                 *0x5225d0 >> 0x20, *0x5225c8, *0x5225c8 >> 0x20, 0x11c3, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004134a8(*0x5225e8, *0x5225e8 >> 0x20);\n    fcn.004838d0();\n    fcn.004b29a0(\"ahsnsfbnbezp\", &var_14dh);\n    fcn.004134f6(0x2a0, 1, &var_169h + 1, 0x96e, 1, 0x5de, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"xuitwszxczxsvvdttgswuguzbdxctcpvncftkskdllocquiopmypuzsgzbaksivhwv\", &var_131h);\n    fcn.004838d0();\n    fcn.004b29a0(\"nrenoggybxvjjvhaiadacbewtehxopcasntuktglfefowdxflwlbrdxvbbpi\", &var_115h);\n    fcn.00413556(*0x5225f0, *0x5225f0 >> 0x20, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"gepjaxxqtw\", &var_f9h);\n    fcn.004136da(0xd27, 0, *0x5225f8, *0x5225f8 >> 0x20, &var_115h + 1, 0xb4, 0x755, 0, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.0041297e(1, 0x23, *0x522608, *0x522608 >> 0x20, 0x7d4, 0, *0x522600, *0x522600 >> 0x20);\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.00412c28(param_1, *0x522620, *0x522620 >> 0x20, *0x522618, *0x522618 >> 0x20, 0x4d0, &var_e0h, *0x522610, \n                 *0x522610 >> 0x20, 0);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"ujmjgdbsnmlypwwuwazhzfpdjncnfhgykmnaruztxhogghstvnbty\", &var_91h);\n    fcn.004838d0();\n    fcn.004b29a0(\"fbhoulvakfyopemibdnrayjbpt\", &var_75h);\n    fcn.00412e92(param_1, &var_91h + 1, 1, 1);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"dmtlzosdvdmzzenovuykdqprqucwirabelkjlmkcfjwyqfrlx\", &var_41h);\n    fcn.004838d0();\n    fcn.004b29a0(\"wpixwoaeeiuherbkdixiddalwkumwnrrdzrulksszdnghnvqcsankqqgokplbzrdkxtoecwdgnmopfehofs\", &var_25h);\n    fcn.004838d0();\n    fcn.004b29a0(\"ttss\", &var_9h);\n    fcn.00412f3c(param_1, &var_25h + 1, 1, 1, 1, &var_41h + 1, &var_5ch, *0x522630, *0x522630 >> 0x20, *0x522628, \n                 *0x522628 >> 0x20);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    return;\n}\n",
        "token_count": 3152
    },
    "00416e5e": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00416e5e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint noname_6, \n            uint noname_7, uint noname_8, uint arg_2ch, uint arg_30h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    return 0xecf7;\n}\n",
        "token_count": 152
    },
    "004252ca": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.004252ca(uint param_1)\n\n{\n    uint in_stack_fffffc04;\n    ulong uVar1;\n    char *pcVar2;\n    uint *puVar3;\n    uint in_stack_fffffcdc;\n    uint in_stack_fffffd28;\n    uint in_stack_fffffd30;\n    uint in_stack_fffffd60;\n    uint var_1fch;\n    uint var_1f4h;\n    uint var_1d9h;\n    uint var_1bdh;\n    uint var_1a1h;\n    uint var_185h;\n    uint var_169h;\n    uint var_150h;\n    uint var_138h;\n    uint var_11dh;\n    uint var_101h;\n    uint var_e5h;\n    uint var_c9h;\n    uint var_adh;\n    uint var_91h;\n    uint var_75h;\n    uint var_59h;\n    uint var_40h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.004b2c00();\n    fcn.004b2c00();\n    fcn.004b2c00();\n    fcn.004838d0();\n    fcn.004b29a0(\"jrmiqgplbvthiiydvvcxnrnrorbimyeodk\", &var_1d9h);\n    fcn.004838d0();\n    fcn.004b29a0(\"xhqxtqexuqgilx\", &var_1bdh);\n    fcn.00425210(0, 0x1f9a, 0, &var_1d9h + 1, &var_1f4h, 0x6d6, *0x522f60, *0x522f60 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.00424c46(&var_1bdh + 1, *0x522f68, *0x522f68 >> 0x20, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    uVar1 = CONCAT44(0x42548d, in_stack_fffffd60);\n    fcn.004b29a0(\"uezsatnbengnuerlagikaqtqhvfovjixciqkdqeamuouxovgplw\", &var_185h);\n    fcn.004838d0(uVar1);\n    fcn.004b29a0(\"gtnhkrikhrlzf\", &var_169h);\n    fcn.00424c6c(0xf64, 1, *0x522f78, *0x522f78 >> 0x20, &var_185h + 1, &var_1a1h + 1, *0x522f70, *0x522f70 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.00424cf8();\n    fcn.0042508e();\n    uVar1 = CONCAT44(0x425573, in_stack_fffffd30);\n    fcn.0042509e(param_1, 0xbf5);\n    fcn.004b2fc0(uVar1);\n    fcn.004838d0();\n    uVar1 = CONCAT44(0x4255ae, in_stack_fffffd28);\n    fcn.004b29a0(\"prdnfugpwpxwqxjvghbqjgqwrzgnnhdhxhak\", &var_11dh);\n    fcn.004838d0(uVar1);\n    fcn.004b29a0(\"tcyykocbequxboyewpgbkigknyteyzbcdzfs\", &var_101h);\n    fcn.004838d0();\n    fcn.004b29a0(\"hwswmzwqtbjyhsavygqvcj\", &var_e5h);\n    fcn.00424206(param_1, &var_101h + 1, &var_11dh + 1, &var_138h, *0x522f90, *0x522f90 >> 0x20, *0x522f88, \n                 *0x522f88 >> 0x20, 0x9f4, *0x522f80, *0x522f80 >> 0x20);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.0042428e(0, 1);\n    uVar1 = CONCAT44(0x4256fc, in_stack_fffffcdc);\n    fcn.004242e6(*0x522f98, *0x522f98 >> 0x20);\n    fcn.004838d0(uVar1);\n    fcn.004b29a0(\"upanjkwhmfrostkwtanuygjwlqb\", &var_c9h);\n    fcn.00424364(&var_e5h + 1, 0x1c32);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.0042451e(0xc1f, *0x522fb0, *0x522fb0 >> 0x20, &var_c9h + 1, 1, 1, *0x522fa8, *0x522fa8 >> 0x20, *0x522fa0, \n                 *0x522fa0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.00424764(0, *0x522fc8, *0x522fc8 >> 0x20, 1, *0x522fc0, *0x522fc0 >> 0x20, *0x522fb8, *0x522fb8 >> 0x20, 0x2a5, \n                 1, 0);\n    fcn.004838d0();\n    puVar3 = &var_91h;\n    pcVar2 = \"aomqvpgnxgouffzhza\";\n    fcn.004b29a0();\n    fcn.004838d0();\n    uVar1 = CONCAT44(pcVar2, &var_75h);\n    pcVar2 = \"rbgnnyiemovplobelyybogfnaoiyhvkglhtojjxriclqlmulrukfwfzsquveeagutxcgue\";\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0(\"ssjulwxkrutmfznmtybqexronqhcamgefjgjexchuvdvtieogcsupkgmdyxywkpqoltgmueccysayxcylpqttsziw\", &var_59h, \n                 pcVar2, uVar1, puVar3);\n    fcn.0042492e(&var_75h + 1, &var_91h + 1, 1, *0x522fd8, *0x522fd8 >> 0x20, *0x522fd0, *0x522fd0 >> 0x20, &var_adh + 1\n                 , 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004249e8(0, 1, 1);\n    fcn.00424a3c(param_1, 0, 0x14c6, 0xf4, 0);\n    fcn.004b2fc0();\n    fcn.004838d0();\n    uVar1 = CONCAT44(0x4259fd, in_stack_fffffc04);\n    fcn.004b29a0(\"bvemasehfbkmfzlbghsko\", &var_25h);\n    fcn.004838d0(uVar1);\n    fcn.004b29a0(\"hnprwkfcxxghvdpjjnnbdwenleagvocfzazxqgtsgatq\", &var_9h);\n    fcn.00424b20(0x2a, &var_25h + 1, *0x523000, *0x523000 >> 0x20, *0x522ff8, *0x522ff8 >> 0x20, &var_40h, *0x522ff0, \n                 *0x522ff0 >> 0x20, 0xb6a, *0x522fe8, *0x522fe8 >> 0x20, *0x522fe0, *0x522fe0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    return;\n}\n",
        "token_count": 2204
    },
    "004266a4": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004266a4(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_ch;\n    uint var_4h;\n    \n    return 1;\n}\n",
        "token_count": 76
    },
    "0042974a": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.0042974a(uint param_1)\n\n{\n    char *pcVar1;\n    ulong in_stack_fffffc9c;\n    uint uVar3;\n    ulong uVar2;\n    uint var_23ch;\n    uint var_230h;\n    uint var_215h;\n    uint var_1fch;\n    uint var_1e1h;\n    uint var_1c8h;\n    uint var_1adh;\n    uint var_191h;\n    uint var_175h;\n    uint var_159h;\n    uint var_13dh;\n    uint var_121h;\n    uint var_105h;\n    uint var_e9h;\n    uint var_cdh;\n    uint var_b1h;\n    uint var_95h;\n    uint var_79h;\n    uint var_5dh;\n    uint var_41h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    uVar3 = in_stack_fffffc9c >> 0x20;\n    fcn.004b2c00();\n    fcn.004b2c00();\n    fcn.004292f8(0x4aa, 0x1f8b);\n    fcn.0042930c(*0x5232e0, *0x5232e0 >> 0x20, 0xa7a, 0, *0x5232d8, *0x5232d8 >> 0x20, 1, 1, 1);\n    fcn.0042944e(*0x5232e8, *0x5232e8 >> 0x20);\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.004294d6(0xb09, *0x523308, *0x523308 >> 0x20, *0x523300, *0x523300 >> 0x20, *0x5232f8, *0x5232f8 >> 0x20, 1, \n                 &var_230h, *0x5232f0, *0x5232f0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"oecsgjvugxlfyhptldjnyxawyuyt\", &var_1e1h);\n    fcn.0042951c(param_1, &var_1fch, *0x523310, *0x523310 >> 0x20);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.00429238(*0x523318, *0x523318 >> 0x20, 1);\n    fcn.004838d0();\n    fcn.004b29a0(\"dytunnddfgpplfgsuegdboliadknykshhbcddzippjfxtltpwmpvrpkcrwymipzafvyeoacbr\", &var_1adh);\n    fcn.004838d0();\n    fcn.004b29a0(\"hmrsgpklktshwtvvgliqnmecnvgzlkuvagxjaimrwcjbixwcwxwhxr\", &var_191h);\n    fcn.004838d0();\n    fcn.004b29a0(\"iotcjsqbufspulrkyytaeqsxvnxkrsrsmcrnizcstvlwcf\", &var_175h);\n    fcn.004838d0();\n    fcn.004b29a0(\"biomwoiiphnxvgbprxewzkp\", &var_159h);\n    fcn.00428aca(param_1, 1, 0xc12, &var_175h + 1, 1, 1, &var_191h + 1, &var_1adh + 1, &var_1c8h, 0);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    uVar2 = CONCAT44(uVar3, &var_13dh);\n    pcVar1 = \"vbmnkjpbscjbawprwqhbusvrjngbcszrqxfyikgxqjpmengeiuyjahikppwdiywvsmgiyuzolgguclwaareotomzlncar\";\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0(\"gmslzsqnxgdk\", &var_121h, pcVar1, uVar2);\n    fcn.00428b50(0, 0x1d01, &var_13dh + 1, *0x523328, *0x523328 >> 0x20, *0x523320, *0x523320 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"gphjapzqonlzcwdmlfpocuatsm\", &var_105h);\n    fcn.004838d0();\n    pcVar1 = \"tgflmjotabzosrnlomfaeuzeqoxmhpvhizsyekkrgdqqorqpxbucuiyqerw\";\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0(\"lbwrqhrfdmlrgyparkkacmywkshfsydnxklccdbtnpe\", &var_cdh, pcVar1);\n    fcn.004838d0();\n    fcn.004b29a0(\"peuqikijdzkzdyjkfglxofwwqeopsuhixbpzh\", &var_b1h);\n    fcn.00428c36(*0x523340, *0x523340 >> 0x20, &var_cdh + 1, &var_e9h + 1, &var_105h + 1, *0x523338, *0x523338 >> 0x20, \n                 0x784, 1, &var_121h + 1, 1, *0x523330, *0x523330 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"zxwjxgbpvwxqwboqqriz\", &var_95h);\n    fcn.00428d38(&var_b1h + 1, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"qscxblpsyhrntmrjmttziipmznzmrwqwvvnhihyzhpdhlmyfdmsoowgsmmmegjohqidmtjmqagtoisjsdmdzeenjkxafkk\", \n                 &var_79h);\n    fcn.00428e3e(0x180, 0, *0x523348, *0x523348 >> 0x20, 1, 0x2a6, &var_95h + 1, 0, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    pcVar1 = \"scpofvhypbzbdtgdhbwstpixlyhtoxzvqcmhfjzyucsfgsueijxuxfsbhqiesszzmwwnrcefdkcrr\";\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0(0x5213f6, &var_41h, pcVar1);\n    fcn.004290be(1, 0x8c0, 0x1b7c, *0x523360, *0x523360 >> 0x20, &var_5dh + 1, *0x523358, *0x523358 >> 0x20, 0x71, \n                 &var_79h + 1, *0x523350, *0x523350 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"mkyniwfgjooixidavvtlfpqnqylowheyxweerasduzcplsdfevjyidtoncnxgcjrmqqk\", &var_25h);\n    fcn.004838d0();\n    fcn.004b29a0(\"vhtpztrcfiwcexjygcfdsvwmwfnxwmmkqiiuwltpubwowlhfcukdwksupnviryxdhamamlzqxcvnuwtapzzxvceq\", &var_9h);\n    fcn.0042913e(400, &var_25h + 1, *0x523368, *0x523368 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    return;\n}\n",
        "token_count": 2315
    },
    "0042a388": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl\nfcn.0042a388(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint noname_6, \n            uint noname_7, uint arg_28h, uint arg_2ch)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_1h;\n    \n    return 1;\n}\n",
        "token_count": 158
    },
    "0042c82c": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nfloat10 __cdecl fcn.0042c82c(uint arg_8h, uint arg_ch)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_14h;\n    uint var_8h;\n    uint var_1h;\n    \n    return *0x5234d0;\n}\n",
        "token_count": 94
    },
    "0042d49e": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.0042d49e(uint param_1)\n\n{\n    uint in_stack_fffffd50;\n    ulong uVar1;\n    uint in_stack_fffffd98;\n    uint var_18ch;\n    uint var_188h;\n    uint var_16dh;\n    uint var_154h;\n    uint var_139h;\n    uint var_11dh;\n    uint var_101h;\n    uint var_e5h;\n    uint var_c9h;\n    uint var_adh;\n    uint var_91h;\n    uint var_75h;\n    uint var_59h;\n    uint var_3dh;\n    uint var_21h;\n    uint var_bp_4h;\n    \n    fcn.004b2c00();\n    fcn.004838d0();\n    fcn.004b29a0(\"zbkwyxqlqiobdgunmtxlrrtefgyv\", &var_16dh);\n    fcn.0042d064(*0x523580, *0x523580 >> 0x20, *0x523578, *0x523578 >> 0x20, *0x523570, *0x523570 >> 0x20, *0x523568, \n                 *0x523568 >> 0x20, *0x523560, *0x523560 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.0042d354(param_1, 0x2bf);\n    fcn.004b2fc0();\n    fcn.004838d0();\n    fcn.004b29a0(\"qihdrmbhsgvauwwsmkyepslyrsdfxqv\", &var_139h);\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.0042c57c(0x520, *0x5235a0, *0x5235a0 >> 0x20, *0x523598, *0x523598 >> 0x20, &var_11dh + 1, &var_139h + 1, \n                 &var_154h, *0x523590, *0x523590 >> 0x20, *0x523588, *0x523588 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.0042c82c(*0x5235a8, *0x5235a8 >> 0x20);\n    fcn.004838d0();\n    fcn.004b29a0(\"qggsolzxgz\", &var_e5h);\n    uVar1 = CONCAT44(0x42d71d, in_stack_fffffd98);\n    fcn.0042c86e(&var_101h + 1, 0);\n    fcn.004b2fc0(uVar1);\n    fcn.00483900();\n    fcn.0042c8ae();\n    fcn.0042c982();\n    fcn.004838d0();\n    fcn.004b29a0(\"xbdktpxftjlswkwscbxuugtvypxcypqjiksjdgykpwfcfcufwweyhajerijvfpedqyqojlfl\", &var_c9h);\n    fcn.0042cad8(&var_e5h + 1, 0x656, *0x5235c0, *0x5235c0 >> 0x20, *0x5235b8, *0x5235b8 >> 0x20, 0x227b, 1, *0x5235b0, \n                 *0x5235b0 >> 0x20, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"empieiqtrzkowkzqrtneumvnrsrqnxmljctyhvvqefiexlapvqnxcfueklzlqfkyffcqqw\", &var_adh);\n    fcn.004838d0();\n    uVar1 = CONCAT44(0x42d858, in_stack_fffffd50);\n    fcn.004b29a0(\"roghxrozwrjyycguurfjsiiluocshgficzuxoaqig\", &var_91h);\n    fcn.004838d0(uVar1);\n    fcn.004b29a0(\"oxorhrikhyentuuexocg\", &var_75h);\n    fcn.004838d0();\n    fcn.004b29a0(\"bbmiolthwdujrsyzlcrhwa\", &var_59h);\n    fcn.0042cb54(&var_75h + 1, 0x551, 0x3b9, 0xc2e, *0x5235c8, *0x5235c8 >> 0x20, 1, &var_91h + 1, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"mzmkymeywinazpiyomwrqdfasitpcwqgvzzljjddqjswktnvbvhjokxsashzm\", &var_3dh);\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.0042cf94(0, *0x5235d0, *0x5235d0 >> 0x20, 1, *0x5223d0, *0x5223d0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.0042c15e(param_1, *0x5235d8, *0x5235d8 >> 0x20);\n    fcn.004b2fc0();\n    fcn.0042c3d0(*0x5235e8, *0x5235e8 >> 0x20, *0x5235e0, *0x5235e0 >> 0x20);\n    return;\n}\n",
        "token_count": 1565
    },
    "0043d240": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0043d240(ushort *param_1, uint param_2, uint param_3, int32_t param_4)\n\n{\n    uint uVar1;\n    uint uVar2;\n    ushort uStack14;\n    \n    uStack14 = 0;\n    if (param_1 == NULL) {\n        param_1 = &uStack14;\n    }\n    uVar1 = sub.msvcrt.dll____mb_cur_max_func();\n    uVar2 = fcn.00447860();\n    if (param_4 == 0) {\n        param_4 = 0x56b434;\n    }\n    fcn.0043d0c0(param_1, param_2, param_3, param_4, uVar2, uVar1);\n    return;\n}\n",
        "token_count": 174
    },
    "00489e80": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.00489e80(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *in_ECX;\n    uint var_18h;\n    uint var_14h;\n    uint var_bp_10h;\n    uint var_8h;\n    \n    *in_ECX = 0xffffffff;\n    in_ECX[1] = 0xffffffff;\n    iVar1 = *arg_8h;\n    in_ECX[2] = 0;\n    if ((*(arg_8h + *(iVar1 + -0xc) + 0x14) & 5) == 0) {\n        piVar2 = *(arg_8h + *(iVar1 + -0xc) + 0x78);\n        (**(*piVar2 + 0x10))(piVar2, 0, 0, 1, 0x10);\n        *in_ECX = var_18h;\n        in_ECX[1] = var_14h;\n        in_ECX[2] = var_bp_10h;\n    }\n    return;\n}\n",
        "token_count": 264
    },
    "0049fb40": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0049fb40(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *in_ECX;\n    uint var_18h;\n    uint var_14h;\n    uint var_bp_10h;\n    uint var_8h;\n    \n    *in_ECX = 0xffffffff;\n    in_ECX[1] = 0xffffffff;\n    iVar1 = *arg_8h;\n    in_ECX[2] = 0;\n    if ((*(arg_8h + *(iVar1 + -0xc) + 0x14) & 5) == 0) {\n        piVar2 = *(arg_8h + *(iVar1 + -0xc) + 0x78);\n        (**(*piVar2 + 0x10))(piVar2, 0, 0, 1, 0x10);\n        *in_ECX = var_18h;\n        in_ECX[1] = var_14h;\n        in_ECX[2] = var_bp_10h;\n    }\n    return;\n}\n",
        "token_count": 264
    },
    "00438d00": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint8_t ** __fastcall fcn.00438d00(uint8_t **param_1, uint8_t **param_2, uint8_t **param_3)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint8_t in_AL;\n    int32_t iVar3;\n    code *pcVar4;\n    uint8_t **ppuVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    uint8_t **ppuVar9;\n    uint8_t **ppuVar10;\n    \n    if (in_AL == 0x50) {\n        ppuVar5 = param_1 + 3 & 0xfffffffc;\n        *param_3 = *ppuVar5;\n        return ppuVar5 + 1;\n    }\n    // switch table (13 cases) at 0x526cbc\n    switch(in_AL & 0xf) {\n    case 0:\n    case 3:\n    case 0xb:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 1;\n        break;\n    case 1:\n        ppuVar10 = NULL;\n        uVar7 = 0;\n        ppuVar9 = param_1;\n        do {\n            ppuVar5 = ppuVar9 + 1;\n            uVar6 = *ppuVar9;\n            uVar1 = uVar7 & 0x1f;\n            uVar7 = uVar7 + 7;\n            ppuVar10 = ppuVar10 | (uVar6 & 0x7f) << uVar1;\n            ppuVar9 = ppuVar5;\n        } while (uVar6 < '\\0');\n        break;\n    case 2:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 2;\n        break;\n    case 4:\n    case 0xc:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 2;\n        break;\n    default:\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n        if (iVar3 == 0) {\n            *0x4ce004 = 0x43c7d0;\n            pcVar4 = 0x43c580;\n        }\n        else {\n            *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n            pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n            pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"__register_frame_info\");\n            *0x4ce004 = (*pcVar2)(iVar3, \"__deregister_frame_info\");\n        }\n        if (pcVar4 != NULL) {\n            (*pcVar4)(0x52e0f8, 0x56b01c);\n        }\n        ppuVar5 = fcn.004014c0(fcn.00401590);\n        return ppuVar5;\n    case 9:\n        ppuVar10 = NULL;\n        uVar8 = 0;\n        ppuVar9 = param_1;\n        do {\n            ppuVar5 = ppuVar9 + 1;\n            uVar7 = *ppuVar9;\n            uVar6 = uVar8;\n            uVar8 = uVar8 + 7;\n            ppuVar10 = ppuVar10 | (uVar7 & 0x7f) << (uVar6 & 0x1f);\n            ppuVar9 = ppuVar5;\n        } while (uVar7 < '\\0');\n        if ((0x1f < uVar8) || ((uVar7 & 0x40) == 0)) break;\n        ppuVar10 = ppuVar10 | -1 << (uVar8 & 0x1f);\n        goto code_r0x00438d39;\n    case 10:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 2;\n    }\n    if (ppuVar10 != NULL) {\ncode_r0x00438d39:\n        if ((in_AL & 0x70) != 0x10) {\n            param_1 = param_2;\n        }\n        ppuVar10 = ppuVar10 + param_1;\n        if (in_AL < '\\0') {\n            *param_3 = *ppuVar10;\n            return ppuVar5;\n        }\n    }\n    *param_3 = ppuVar10;\n    return ppuVar5;\n}\n",
        "token_count": 1164
    },
    "0043b4f0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint8_t ** __fastcall fcn.0043b4f0(uint8_t **param_1, uint8_t **param_2, uint8_t **param_3)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint8_t in_AL;\n    int32_t iVar3;\n    code *pcVar4;\n    uint8_t **ppuVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    uint8_t **ppuVar9;\n    uint8_t **ppuVar10;\n    \n    if (in_AL == 0x50) {\n        ppuVar5 = param_1 + 3 & 0xfffffffc;\n        *param_3 = *ppuVar5;\n        return ppuVar5 + 1;\n    }\n    // switch table (13 cases) at 0x5271d8\n    switch(in_AL & 0xf) {\n    case 0:\n    case 3:\n    case 0xb:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 1;\n        break;\n    case 1:\n        ppuVar10 = NULL;\n        uVar7 = 0;\n        ppuVar9 = param_1;\n        do {\n            ppuVar5 = ppuVar9 + 1;\n            uVar6 = *ppuVar9;\n            uVar1 = uVar7 & 0x1f;\n            uVar7 = uVar7 + 7;\n            ppuVar10 = ppuVar10 | (uVar6 & 0x7f) << uVar1;\n            ppuVar9 = ppuVar5;\n        } while (uVar6 < '\\0');\n        break;\n    case 2:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 2;\n        break;\n    case 4:\n    case 0xc:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 2;\n        break;\n    default:\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n        if (iVar3 == 0) {\n            *0x4ce004 = 0x43c7d0;\n            pcVar4 = 0x43c580;\n        }\n        else {\n            *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n            pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n            pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"__register_frame_info\");\n            *0x4ce004 = (*pcVar2)(iVar3, \"__deregister_frame_info\");\n        }\n        if (pcVar4 != NULL) {\n            (*pcVar4)(0x52e0f8, 0x56b01c);\n        }\n        ppuVar5 = fcn.004014c0(fcn.00401590);\n        return ppuVar5;\n    case 9:\n        ppuVar10 = NULL;\n        uVar8 = 0;\n        ppuVar9 = param_1;\n        do {\n            ppuVar5 = ppuVar9 + 1;\n            uVar7 = *ppuVar9;\n            uVar6 = uVar8;\n            uVar8 = uVar8 + 7;\n            ppuVar10 = ppuVar10 | (uVar7 & 0x7f) << (uVar6 & 0x1f);\n            ppuVar9 = ppuVar5;\n        } while (uVar7 < '\\0');\n        if ((0x1f < uVar8) || ((uVar7 & 0x40) == 0)) break;\n        ppuVar10 = ppuVar10 | -1 << (uVar8 & 0x1f);\n        goto code_r0x0043b529;\n    case 10:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 2;\n    }\n    if (ppuVar10 != NULL) {\ncode_r0x0043b529:\n        if ((in_AL & 0x70) != 0x10) {\n            param_1 = param_2;\n        }\n        ppuVar10 = ppuVar10 + param_1;\n        if (in_AL < '\\0') {\n            *param_3 = *ppuVar10;\n            return ppuVar5;\n        }\n    }\n    *param_3 = ppuVar10;\n    return ppuVar5;\n}\n",
        "token_count": 1072
    },
    "0043b380": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b380(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    uVar1 = *(param_1 + 4);\n    uVar4 = uVar1 >> 1;\n    while (uVar4 = uVar4 - 1,  uVar4 != 0xffffffff) {\n        fcn.0043b2c0(uVar4, uVar1);\n    }\n    iVar3 = uVar1 - 1;\n    if (0 < iVar3) {\n        do {\n            uVar2 = *(param_1 + 8);\n            *(param_1 + 8) = *(param_1 + 8 + iVar3 * 4);\n            *(param_1 + 8 + iVar3 * 4) = uVar2;\n            fcn.0043b2c0(0, iVar3);\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00442f00": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00442f00(float10 param_1)\n\n{\n    int32_t iVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint8_t *puVar10;\n    int16_t iVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    int32_t iVar14;\n    uint32_t uStack136;\n    uint8_t *puStack124;\n    uint32_t uStack120;\n    uint16_t uStack116;\n    uint32_t uStack108;\n    uint32_t uStack104;\n    uint16_t uStack84;\n    uint8_t uStack52;\n    uint8_t auStack51 [35];\n    \n    if (((param_1 != 0) << 10 | (param_1 == 0) << 0xe) == 0x100) {\n        fcn.00441fb0();\n        return;\n    }\n    uStack84 = param_1 >> 0x40;\n    if (param_1 < 0) {\n        *(in_EAX + 4) = *(in_EAX + 4) | 0x80;\n    }\n    if (((param_1 != 0) << 10 | (param_1 == 0) << 0xe) == 0x500) {\n        fcn.00441fb0();\n        return;\n    }\n    uStack116 = uStack84 & 0x7fff;\n    uStack108 = SUB104(param_1, 0);\n    uStack104 = param_1 >> 0x20;\n    if ((param_1 & 0x7fff) == 0) {\n        uStack136 = uStack104;\n        if ((uStack104 | uStack108) == 0) {\n            uVar9 = *(in_EAX + 0xc);\n            if (0xe < uVar9) {\n                uStack120 = *(in_EAX + 4);\n                goto code_r0x00443150;\n            }\n            do {\n                uStack104 = uStack104 << 1 | uStack108 >> 0x1f;\n                uStack108 = uStack108 * 2;\njoined_r0x00442fe6:\n                uStack136 = uStack104;\n            } while (-1 < uStack104);\ncode_r0x00443001:\n            uVar8 = (0xe - uVar9) * 4;\n            uVar6 = uVar8;\n            uVar7 = uVar6 & 0x1f;\n            uVar3 = 4 << (uVar6 & 0x1f);\n            uVar4 = uVar3;\n            uVar13 = 0 << uVar7 | 4U >> 0x20 - uVar7;\n            if ((uVar8 & 0x20) != 0) {\n                uVar4 = 0;\n                uVar13 = uVar3;\n            }\n            uVar8 = uStack108 >> 1 | uStack136 << 0x1f;\n            uVar3 = uVar8 + uVar4;\n            uVar13 = (uStack136 >> 1) + uVar13 + CARRY4(uVar8, uVar4);\n            if (uVar13 < 0) {\n                uStack116 = uStack116 + 1;\n            }\n            else {\n                uVar13 = uVar13 * 2 | uVar3 >> 0x1f;\n                uVar3 = uVar3 * 2;\n            }\n            uVar9 = (0xf - uVar9) * 4;\n            uVar6 = uVar9;\n            uVar7 = uVar6 & 0x1f;\n            uVar4 = uVar13 >> (uVar6 & 0x1f);\n            uStack108 = uVar3 >> uVar7 | uVar13 << 0x20 - uVar7;\n            uStack136 = uVar4;\n            if ((uVar9 & 0x20) != 0) {\n                uStack136 = 0;\n                uStack108 = uVar4;\n            }\n        }\n        else {\n            if (uStack104 < 0) {\n                uStack116 = 0xc002;\n            }\n            else {\n                uVar2 = 0xc001;\n                do {\n                    uStack116 = uVar2;\n                    uStack104 = uStack104 << 1 | uStack108 >> 0x1f;\n                    uStack108 = uStack108 * 2;\n                    uStack136 = uStack104;\n                    uVar2 = uStack116 - 1;\n                } while (-1 < uStack104);\n            }\n            uVar9 = *(in_EAX + 0xc);\n            if (uVar9 < 0xf) goto code_r0x00443001;\n        }\n        uStack120 = *(in_EAX + 4);\ncode_r0x00443069:\n        puVar10 = &uStack52;\n        do {\n            uVar9 = uStack108 & 0xf;\n            if ((uVar9 ^ uStack108 | uStack136) == 0) {\n                if (((&uStack52 < puVar10) || ((uStack120 & 0x800) != 0)) || (0 < *(in_EAX + 0xc))) {\n                    *puVar10 = 0x2e;\n                    puVar10 = puVar10 + 1;\n                }\n                uVar13 = uVar9;\n                if ((uStack108 ^ 1 | uStack136) == 0) {\n                    uStack108 = 0;\n                    uStack136 = 0;\n                }\n                else {\n                    do {\n                        uStack116 = uStack116 - 1;\n                        uVar13 = uVar13 >> 1;\n                    } while (uVar13 != 1);\n                    uStack108 = 0;\n                    uStack136 = 0;\n                }\n            }\n            else {\n                uStack108 = uStack108 >> 4 | uStack136 << 0x1c;\n                uStack136 = uStack136 >> 4;\n                if (0 < *(in_EAX + 0xc)) {\n                    *(in_EAX + 0xc) = *(in_EAX + 0xc) + -1;\n                }\n            }\n            if (uVar9 == 0) {\n                uVar9 = 0;\n                if ((&uStack52 < puVar10) || (-1 < *(in_EAX + 0xc))) goto code_r0x004430b2;\n            }\n            else {\n                if (uVar9 < 10) {\ncode_r0x004430b2:\n                    uVar7 = uVar9 + 0x30;\n                }\n                else {\n                    uVar7 = uVar9 + 0x37U | uStack120 & 0x20;\n                }\n                *puVar10 = uVar7;\n                puVar10 = puVar10 + 1;\n            }\n        } while ((uStack136 | uStack108) != 0);\n        if (puVar10 != &uStack52) {\n            iVar1 = *(in_EAX + 8);\n            goto joined_r0x004433b6;\n        }\n    }\n    else {\n        uVar9 = *(in_EAX + 0xc);\n        uStack116 = uStack116 + 0xc001;\n        uStack136 = uStack104;\n        if (uVar9 < 0xf) goto joined_r0x00442fe6;\n        uStack120 = *(in_EAX + 4);\n        if ((uStack104 | uStack108) != 0) goto code_r0x00443069;\n    }\ncode_r0x00443150:\n    puStack124 = &uStack52;\n    if ((0 < *(in_EAX + 0xc)) || ((uStack120 & 0x800) != 0)) {\n        puStack124 = auStack51;\n        uStack52 = 0x2e;\n    }\n    puVar10 = puStack124 + 1;\n    *puStack124 = 0x30;\n    iVar1 = *(in_EAX + 8);\njoined_r0x004433b6:\n    if (iVar1 < 1) {\n        iVar5 = uStack116;\n        iVar12 = 2;\n    }\n    else {\n        puStack124 = &uStack52;\n        iVar5 = uStack116;\n        iVar14 = puVar10 - puStack124;\n        if (0 < *(in_EAX + 0xc)) {\n            iVar14 = (puVar10 - puStack124) + *(in_EAX + 0xc);\n        }\n        iVar14 = iVar14 + 5 + ((uStack120 & 0x1c0) != 0);\n        iVar12 = iVar5 / 10;\n        if (iVar12 == 0) {\n            iVar12 = 2;\n        }\n        else {\n            iVar11 = 2;\n            do {\n                iVar14 = iVar14 + 1;\n                iVar11 = iVar11 + 1;\n                iVar12 = iVar12 / 10;\n            } while (iVar12 != 0);\n            iVar12 = iVar11;\n        }\n        if (iVar14 < iVar1) {\n            if ((uStack120 & 0x600) == 0) {\n                *(in_EAX + 8) = (iVar1 - iVar14) + -1;\n                do {\n                    fcn.00441d10(iVar5);\n                    iVar1 = *(in_EAX + 8);\n                    *(in_EAX + 8) = iVar1 + -1;\n                } while (0 < iVar1);\n                uStack120 = *(in_EAX + 4);\n            }\n            else {\n                *(in_EAX + 8) = iVar1 - iVar14;\n            }\n        }\n        else {\n            *(in_EAX + 8) = 0xffffffff;\n        }\n    }\n    if ((uStack120 & 0x80) == 0) {\n        if ((uStack120 & 0x100) == 0) {\n            if ((uStack120 & 0x40) != 0) {\n                fcn.00441d10(iVar5);\n            }\n        }\n        else {\n            fcn.00441d10(iVar5);\n        }\n    }\n    else {\n        fcn.00441d10(iVar5);\n    }\n    puStack124 = &uStack52;\n    fcn.00441d10(iVar5);\n    fcn.00441d10();\n    if ((0 < *(in_EAX + 8)) && ((*(in_EAX + 5) & 2) != 0)) {\n        *(in_EAX + 8) = *(in_EAX + 8) + -1;\n        do {\n            fcn.00441d10();\n            iVar1 = *(in_EAX + 8);\n            *(in_EAX + 8) = iVar1 + -1;\n        } while (0 < iVar1);\n    }\n    if (puStack124 < puVar10) {\n        do {\n            puVar10 = puVar10 + -1;\n            if (*puVar10 == 0x2e) {\n                fcn.00442050();\n            }\n            else if (*puVar10 == 0x2c) {\n                if (*(in_EAX + 0x1c) != 0) {\n                    fcn.00441d70();\n                }\n            }\n            else {\n                fcn.00441d10();\n            }\n        } while (puVar10 != puStack124);\n    }\n    while (iVar1 = *(in_EAX + 0xc),  *(in_EAX + 0xc) = iVar1 + -1,  0 < iVar1) {\n        fcn.00441d10();\n    }\n    fcn.00441d10();\n    *(in_EAX + 8) = *(in_EAX + 8) + iVar12;\n    *(in_EAX + 4) = *(in_EAX + 4) | 0x1c0;\n    fcn.00442570();\n    return;\n}\n",
        "token_count": 2709
    },
    "004840b0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint32_t fcn.004840b0(uint32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    \n    if (param_1 < 0x1fffffff) {\n        if (param_2 < param_1) {\n            if (param_1 < param_2 * 2) {\n                param_1 = param_2 * 2;\n            }\n            iVar3 = param_1 * 2 + 0xe;\n            uVar1 = param_1 * 2 + 0x1e;\n            if ((0x1000 < uVar1) && (param_2 < param_1)) {\n                param_1 = param_1 + (0x1000 - (uVar1 & 0xfff) >> 1);\n                if (0x1ffffffe < param_1) {\n                    param_1 = 0x1ffffffe;\n                }\n                iVar3 = param_1 * 2 + 0xe;\n            }\n        }\n        else {\n            iVar3 = param_1 * 2 + 0xe;\n        }\n        iVar3 = fcn.004c3430(iVar3);\n        *(iVar3 + 4) = param_1;\n        *(iVar3 + 8) = 0;\n        return iVar3;\n    }\n    fcn.004bead0(\"basic_string::_S_create\");\n    iVar3 = *extraout_ECX;\n    iVar2 = *(iVar3 + -0xc);\n    if (-1 < *(iVar3 + -4)) {\n        fcn.004839b0();\n        iVar3 = *extraout_ECX;\n    }\n    return iVar3 + (iVar2 + -1) * 2;\n}\n",
        "token_count": 400
    },
    "004bd950": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.004bd950(ushort *param_1, ushort param_2, char *param_3, int32_t param_4, ushort *param_5, ushort *param_6)\n\n{\n    ushort *puVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    char cVar5;\n    ushort *puVar6;\n    ushort *puVar7;\n    ushort *puVar8;\n    int32_t iStack24;\n    \n    iStack24 = 0;\n    cVar5 = *param_3;\n    uVar3 = 0;\n    iVar4 = cVar5;\n    while (iVar4 < param_6 - param_5 >> 1) {\n        while( true ) {\n            if (0x7d < cVar5 - 1U) goto code_r0x004bd9bf;\n            param_6 = param_6 + -iVar4;\n            if (param_4 - 1U <= uVar3) break;\n            uVar3 = uVar3 + 1;\n            cVar5 = param_3[uVar3];\n            iVar4 = cVar5;\n            if (param_6 - param_5 >> 1 <= iVar4) goto code_r0x004bd9bf;\n        }\n        iStack24 = iStack24 + 1;\n    }\ncode_r0x004bd9bf:\n    puVar6 = param_5;\n    puVar7 = param_1;\n    if (param_6 != param_5) {\n        do {\n            puVar8 = puVar6 + 1;\n            *puVar7 = *puVar6;\n            puVar6 = puVar8;\n            puVar7 = puVar7 + 1;\n        } while (param_6 != puVar8);\n        iVar4 = (param_6 + (-2 - param_5) & 0xfffffffeU) + 2;\n        param_5 = param_5 + iVar4;\n        param_1 = iVar4 + param_1;\n    }\n    while (iStack24 = iStack24 + -1,  iStack24 != -1) {\n        while( true ) {\n            puVar6 = param_1 + 1;\n            *param_1 = param_2;\n            uVar2 = param_3[uVar3];\n            param_1 = puVar6;\n            if (uVar2 < '\\x01') break;\n            puVar7 = param_5;\n            puVar8 = puVar6;\n            do {\n                puVar1 = puVar7 + 1;\n                *puVar8 = *puVar7;\n                puVar7 = puVar1;\n                puVar8 = puVar8 + 1;\n            } while (puVar1 != param_5 + (uVar2 - 1 & 0xff) + 1);\n            iStack24 = iStack24 + -1;\n            param_5 = param_5 + (uVar2 - 1) + 1;\n            param_1 = puVar6 + (uVar2 - 1) + 1;\n            if (iStack24 == -1) goto joined_r0x004bda46;\n        }\n    }\njoined_r0x004bda46:\n    while (uVar3 = uVar3 - 1,  uVar3 != 0xffffffff) {\n        puVar6 = param_1 + 1;\n        *param_1 = param_2;\n        uVar2 = param_3[uVar3];\n        param_1 = puVar6;\n        if ('\\0' < uVar2) {\n            puVar7 = param_5;\n            puVar8 = puVar6;\n            do {\n                puVar1 = puVar7 + 1;\n                *puVar8 = *puVar7;\n                puVar7 = puVar1;\n                puVar8 = puVar8 + 1;\n            } while (puVar1 != param_5 + (uVar2 - 1 & 0xff) + 1);\n            param_5 = param_5 + (uVar2 - 1) + 1;\n            param_1 = puVar6 + (uVar2 - 1) + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 938
    },
    "0040e15e": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.0040e15e(uint param_1)\n\n{\n    uint var_cch;\n    uint var_c0h;\n    uint var_a5h;\n    uint var_8ch;\n    uint var_74h;\n    uint var_59h;\n    uint var_3dh;\n    uint var_21h;\n    uint var_bp_4h;\n    \n    fcn.004b2c00();\n    fcn.004b2c00();\n    fcn.004b2c00();\n    fcn.004b2c00();\n    fcn.004b2c00();\n    fcn.004b2c00();\n    fcn.004838d0();\n    fcn.004b29a0(\"vvinoucbryubidwrjspqdmibequmuiaoqdepansdtgnrmwmejobyfmytguix\", &var_a5h);\n    fcn.0040db58(*0x5220e8, *0x5220e8 >> 0x20, 0xf6b, &var_c0h, 0x3ea, 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.0040dba8(param_1, 0x181a, 0x571);\n    fcn.004b2fc0();\n    fcn.004838d0();\n    fcn.004b29a0(\"wfeovmflkgzqraiprhnctqtnruhbuphdshqqmylmzkffvdgqyoirmbzgvjfpzt\", &var_59h);\n    fcn.004838d0();\n    fcn.004b29a0(\"fcapcqeempiubkwdylwcsrslsfpfeidunfxvqjazujnup\", &var_3dh);\n    fcn.0040da90(param_1, 0, 0x95c, 1, &var_59h + 1, &var_74h, 0);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.0040db16(0x351, *0x5220f8, *0x5220f8 >> 0x20, &var_3dh + 1, 0, *0x5220f0, *0x5220f0 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.0040d96c(0, 0x17be, *0x522108, *0x522108 >> 0x20, *0x522100, *0x522100 >> 0x20);\n    fcn.0040da14(param_1, *0x522118, *0x522118 >> 0x20, *0x522110, *0x522110 >> 0x20, 1);\n    fcn.004b2fc0();\n    return;\n}\n",
        "token_count": 736
    },
    "0042dd10": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042dd10(uint *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (param_1 == NULL) {\n        return;\n    }\n    do {\n    // switch table (80 cases) at 0x524c20\n        switch(*param_1) {\n        default:\n            goto code_r0x0042dd37;\n        case 1:\n        case 2:\n        case 3:\n        case 9:\n        case 10:\n        case 0xb:\n        case 0xc:\n        case 0xd:\n        case 0xe:\n        case 0xf:\n        case 0x10:\n        case 0x11:\n        case 0x12:\n        case 0x13:\n        case 0x14:\n        case 0x15:\n        case 0x16:\n        case 0x17:\n        case 0x19:\n        case 0x1a:\n        case 0x1b:\n        case 0x1c:\n        case 0x1d:\n        case 0x1e:\n        case 0x1f:\n        case 0x20:\n        case 0x21:\n        case 0x22:\n        case 0x25:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x2b:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x3f:\n        case 0x42:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n            break;\n        case 4:\n            *in_EAX = *in_EAX + 1;\n            break;\n        case 7:\n        case 8:\n        case 0x32:\n            param_1 = param_1[3];\n            goto code_r0x0042dd33;\n        case 0x23:\n        case 0x24:\n            if (*param_1[2] == 5) {\n                *param_2 = *param_2 + 1;\n            }\n            break;\n        case 0x2c:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n            param_1 = param_1[2];\n            goto code_r0x0042dd33;\n        }\n        fcn.0042dd10();\n        param_1 = param_1[3];\ncode_r0x0042dd33:\n    } while (param_1 != NULL);\ncode_r0x0042dd37:\n    return;\n}\n",
        "token_count": 743
    },
    "0043a990": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043a990(int32_t *param_1)\n\n{\n    code *pcVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    code *pcStack52;\n    \n    iVar4 = 1;\n    pcVar1 = in_EAX[3];\n    while( true ) {\n        iVar2 = fcn.004396e0();\n        if ((iVar2 != 0) && (iVar2 != 5)) {\n            return 2;\n        }\n        if (iVar2 == 5) break;\n        iVar2 = (*pcVar1)(1, 10, *in_EAX, in_EAX[1]);\n        if (iVar2 != 0) {\n            return 2;\n        }\n        if (pcStack52 != NULL) {\n            iVar2 = (*pcStack52)(1, 10, *in_EAX, in_EAX[1]);\n            if (iVar2 == 7) goto code_r0x0043aaa5;\n            if (iVar2 != 8) {\n                return 2;\n            }\n        }\n        iVar4 = iVar4 + 1;\n        fcn.0043a850();\n    }\n    iVar3 = (*pcVar1)(1, 0x1a, *in_EAX, in_EAX[1]);\n    if (iVar3 != 0) {\n        return 2;\n    }\ncode_r0x0043aaa5:\n    *param_1 = iVar4;\n    return iVar2;\n}\n",
        "token_count": 342
    },
    "0043aeb0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043aeb0(uint param_1, uint param_2, uint *param_3)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t extraout_EDX;\n    uint *puVar2;\n    uint *puVar3;\n    uint auStack476 [32];\n    uint auStack348 [18];\n    int32_t iStack276;\n    uint uStack272;\n    int32_t iStack252;\n    code *pcStack52;\n    int32_t iStack24;\n    uint uStack20;\n    \n    iStack24 = in_EAX;\n    uStack20 = param_2;\n    fcn.0043a660();\n    puVar2 = auStack476;\n    puVar3 = auStack348;\n    for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    while( true ) {\n        iVar1 = fcn.004396e0();\n        if (iVar1 == 5) {\n            return 5;\n        }\n        if (iVar1 != 0) break;\n        if (pcStack52 != NULL) {\n            iVar1 = (*pcStack52)(1, 1, *param_3, param_3[1], param_3, auStack348);\n            if (iVar1 == 6) {\n                param_3[3] = 0;\n                param_3[4] = iStack276 + (iStack252 >> 0x1f);\n                puVar2 = auStack476;\n                puVar3 = auStack348;\n                for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *puVar3 = *puVar2;\n                    puVar2 = puVar2 + 1;\n                    puVar3 = puVar3 + 1;\n                }\n                iVar1 = fcn.0043a8c0();\n                if (iVar1 != 7) {\n                    return iVar1;\n                }\n                fcn.0043aac0();\n                fcn.0043aea0(iStack276, uStack272);\n                *(&stack0x00000000 + extraout_EDX) = uStack272;\n                return iStack24;\n            }\n            if (iVar1 != 8) {\n                return 3;\n            }\n        }\n        fcn.0043a850();\n    }\n    return 3;\n}\n",
        "token_count": 573
    },
    "0043b230": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043b230(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_158h;\n    uint var_d8h;\n    \n    fcn.0043a660();\n    while (((iVar2 = fcn.004396e0(),  iVar2 == 0 || (iVar2 == 5)) && (iVar1 = (*arg_8h)(&var_158h, arg_ch),  iVar1 == 0)\n           )) {\n        if (iVar2 == 5) {\n            return 5;\n        }\n        fcn.0043a850();\n    }\n    return 3;\n}\n",
        "token_count": 153
    },
    "0043cfa0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nfloat10 fcn.0043cfa0(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    float fStack20;\n    int32_t aiStack16 [4];\n    \n    uVar1 = fcn.0043ecc0(param_1, param_2, 0x515a68, aiStack16, &fStack20);\n    // switch table (6 cases) at 0x527230\n    switch(uVar1 & 7) {\n    default:\n        fStack20 = 0.0;\n        break;\n    case 1:\n    case 5:\n        fStack20 = (aiStack16[0] + 0x96) * 0x800000 | fStack20 & 0x7fffff;\n        break;\n    case 2:\n        break;\n    case 3:\n        fStack20 = INFINITY;\n        break;\n    case 4:\n        fStack20 = NAN;\n    }\n    if ((uVar1 & 8) != 0) {\n        fStack20 = fStack20 | 0x80000000;\n    }\n    return fStack20;\n}\n",
        "token_count": 251
    },
    "0042df20": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\nint32_t fcn.0042df20(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char *pcVar2;\n    \n    pcVar2 = *(in_EAX + 0xc);\n    if (*pcVar2 != '_') {\n        if (*pcVar2 != 'n') {\n            iVar1 = fcn.0042de20();\n            iVar1 = iVar1 + 1;\n            if ((-1 < iVar1) && (pcVar2 = *(in_EAX + 0xc),  *pcVar2 == '_')) goto code_r0x0042df46;\n        }\n        return -1;\n    }\n    iVar1 = 0;\ncode_r0x0042df46:\n    *(in_EAX + 0xc) = pcVar2 + 1;\n    return iVar1;\n}\n",
        "token_count": 185
    },
    "0042e640": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\nuint fcn.0042e640(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t *piVar3;\n    uint uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    \n    pcVar8 = *(in_EAX + 0xc);\n    if (*pcVar8 != 'L') {\n        return 0;\n    }\n    pcVar6 = pcVar8 + 1;\n    *(in_EAX + 0xc) = pcVar6;\n    cVar1 = pcVar8[1];\n    if ((cVar1 == '_') || (cVar1 == 'Z')) {\n        if (cVar1 == '_') {\n            pcVar6 = pcVar8 + 2;\n            *(in_EAX + 0xc) = pcVar6;\n            cVar1 = pcVar8[2];\n            if (cVar1 != 'Z') {\n                uVar4 = 0;\n                goto joined_r0x0042e75d;\n            }\n        }\n        *(in_EAX + 0xc) = pcVar6 + 1;\n        uVar4 = fcn.004307a0();\n        pcVar6 = *(in_EAX + 0xc);\n        cVar1 = *pcVar6;\n        goto joined_r0x0042e75d;\n    }\n    piVar3 = fcn.0042f510();\n    if (piVar3 == NULL) {\n        return 0;\n    }\n    if ((*piVar3 == 0x27) && (*(piVar3[2] + 0x10) != 0)) {\n        *(in_EAX + 0x2c) = *(in_EAX + 0x2c) - *(piVar3[2] + 4);\n    }\n    pcVar6 = *(in_EAX + 0xc);\n    cVar1 = *pcVar6;\n    pcVar8 = pcVar6;\n    if (cVar1 == 'n') {\n        pcVar8 = pcVar6 + 1;\n        *(in_EAX + 0xc) = pcVar8;\n        cVar1 = pcVar6[1];\n    }\n    pcVar6 = pcVar8;\n    if (cVar1 == 'E') {\n        iVar7 = 0;\n    }\n    else {\n        do {\n            if (cVar1 == '\\0') {\n                return 0;\n            }\n            pcVar6 = pcVar6 + 1;\n            *(in_EAX + 0xc) = pcVar6;\n            cVar1 = *pcVar6;\n        } while (cVar1 != 'E');\n        iVar7 = pcVar6 - pcVar8;\n    }\n    iVar2 = *(in_EAX + 0x14);\n    if (iVar2 < *(in_EAX + 0x18)) {\n        puVar5 = iVar2 * 0x10 + *(in_EAX + 0x10);\n        puVar5[1] = 0;\n        *(in_EAX + 0x14) = iVar2 + 1;\n        if ((pcVar8 == NULL) || (iVar7 == 0)) goto code_r0x0042e7b0;\n        puVar5[1] = 0;\n        *puVar5 = 0;\n        puVar5[2] = pcVar8;\n        puVar5[3] = iVar7;\n    }\n    else {\ncode_r0x0042e7b0:\n        puVar5 = NULL;\n    }\n    uVar4 = fcn.0042dc50(puVar5);\n    pcVar6 = *(in_EAX + 0xc);\n    cVar1 = *pcVar6;\njoined_r0x0042e75d:\n    if (cVar1 != 'E') {\n        return 0;\n    }\n    *(in_EAX + 0xc) = pcVar6 + 1;\n    return uVar4;\n}\n",
        "token_count": 890
    },
    "004c3600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nuint32_t fcn.004c3600(uint32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    char cVar6;\n    uint32_t **ppuVar7;\n    uint uVar8;\n    uint *puVar9;\n    uint uVar10;\n    int32_t *piVar11;\n    int32_t iVar12;\n    code *pcVar13;\n    ulong uVar14;\n    int32_t iStack68;\n    uint32_t *puStack40;\n    \n    ppuVar7 = fcn.004c3880();\n    puVar2 = *ppuVar7;\n    puVar1 = param_1 + -0xc;\n    iVar12 = param_1[1] + 0xb8b1aabc + (0x432b2aff < *param_1);\n    if (iVar12 == 0 && (1 < *param_1 + 0xbcd4d500) <= -iVar12) {\n        uVar3 = param_1[-7];\n        uVar5 = -uVar3;\n        if (-1 < uVar3) {\n            uVar5 = uVar3;\n        }\n        param_1[-7] = uVar5 + 1;\n        ppuVar7[1] = ppuVar7[1] + -1;\n        if (puVar2 != puVar1) {\n            param_1[-8] = puVar2;\n            *ppuVar7 = puVar1;\n        }\n        return param_1[-2];\n    }\n    if (puVar2 == NULL) {\n        *ppuVar7 = puVar1;\n        return 0;\n    }\n    fcn.004c00d0();\n    if ((puStack40 == NULL) ||\n       (fcn.004c3600(puStack40),  iVar12 = puStack40[1] + 0xb8b1aabc + (0x432b2aff < *puStack40), \n       iVar12 != 0 || -iVar12 < (1 < *puStack40 + 0xbcd4d500))) {\n        fcn.004c00d0();\n    }\n    fcn.00448780(puStack40[-9]);\n    fcn.004c3600(iStack68);\n    uVar10 = *(iStack68 + -0x18);\n    uVar4 = *(iStack68 + -0x24);\n    uVar8 = fcn.004487a0(*(iStack68 + -0x28));\n    fcn.004c3600(uVar8);\n    fcn.004c38a0();\n    while( true ) {\n        fcn.00448440();\n        cVar6 = fcn.00448520(uVar10);\n        if (cVar6 != '\\0') break;\n        cVar6 = fcn.00448520(uVar10);\n        if (cVar6 != '\\0') goto code_r0x004c441e;\n        fcn.00448780(uVar4);\n    }\n    fcn.004c3a90();\ncode_r0x004c441e:\n    puVar9 = fcn.004c3540(4);\n    *puVar9 = 0x52c0b4;\n    fcn.004c3af0(puVar9, 0x528938, 0x4968c0);\n    uVar10 = sub.msvcrt.dll_abort();\n    fcn.004c3600(uVar10);\n    uVar14 = sub.msvcrt.dll_abort();\n    fcn.004c3770();\n    pcVar13 = (uVar14 >> 0x20) + 1;\n    if (pcVar13 != NULL) {\n        fcn.0043b0b0(uVar14);\n    }\n    uVar14 = fcn.004c36d0();\n    uVar10 = uVar14;\n    if (uVar14 >> 0x20 != 1) goto code_r0x004c44fd;\n    piVar11 = fcn.004c3600(uVar10);\n    uVar10 = (**(*piVar11 + 8))();\n    uVar8 = (*pcVar13)(2);\n    sub.msvcrt.dll_fwrite(\"  what():  \", 1, 0xb, uVar8);\n    uVar8 = (*pcVar13)(2);\n    sub.msvcrt.dll_fputs(uVar10, uVar8);\n    uVar10 = (*pcVar13)(2);\n    sub.msvcrt.dll_fputc(10, uVar10);\n    fcn.004c3770();\n    do {\n        sub.msvcrt.dll_abort();\n        uVar10 = uVar4;\n        fcn.00447658(uVar4);\n        fcn.004c3a90();\ncode_r0x004c44fd:\n        fcn.004c3600(uVar10);\n        fcn.004c3770();\n    } while( true );\n}\n",
        "token_count": 1117
    },
    "0042dfc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint * fcn.0042dfc0(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_EAX;\n    int32_t iVar6;\n    uint *puVar7;\n    \n    iVar6 = fcn.0042de20();\n    if (iVar6 < 1) {\n        return NULL;\n    }\n    piVar3 = *(in_EAX + 0xc);\n    if (iVar6 <= *(in_EAX + 4) - piVar3) {\n        pcVar1 = piVar3 + iVar6;\n        *(in_EAX + 0xc) = pcVar1;\n        if (((*(in_EAX + 8) & 4) != 0) && (*pcVar1 == '$')) {\n            *(in_EAX + 0xc) = pcVar1 + 1;\n        }\n        iVar4 = *(in_EAX + 0x14);\n        iVar5 = *(in_EAX + 0x18);\n        if (iVar6 < 10) {\n            if (iVar4 < iVar5) {\n                puVar7 = iVar4 * 0x10 + *(in_EAX + 0x10);\n                puVar7[1] = 0;\n                *(in_EAX + 0x14) = iVar4 + 1;\n                if (piVar3 != NULL) goto code_r0x0042e03f;\n            }\n        }\n        else {\n            if ((*piVar3 == 0x4f4c475f) && (piVar3[1] == 0x5f4c4142)) {\n                cVar2 = *(piVar3 + 2);\n                if (((cVar2 == '.' || cVar2 == '_') || (cVar2 == '$')) && (*(piVar3 + 9) == 'N')) {\n                    *(in_EAX + 0x2c) = (*(in_EAX + 0x2c) + 0x16) - iVar6;\n                    if (iVar4 < iVar5) {\n                        puVar7 = iVar4 * 0x10 + *(in_EAX + 0x10);\n                        *(in_EAX + 0x14) = iVar4 + 1;\n                        puVar7[1] = 0;\n                        *puVar7 = 0;\n                        puVar7[2] = \"(anonymous namespace)\";\n                        puVar7[3] = 0x15;\n                        goto code_r0x0042e052;\n                    }\n                    goto code_r0x0042e086;\n                }\n            }\n            if (iVar4 < iVar5) {\n                puVar7 = iVar4 * 0x10 + *(in_EAX + 0x10);\n                puVar7[1] = 0;\n                *(in_EAX + 0x14) = iVar4 + 1;\ncode_r0x0042e03f:\n                puVar7[1] = 0;\n                *puVar7 = 0;\n                puVar7[2] = piVar3;\n                puVar7[3] = iVar6;\n                goto code_r0x0042e052;\n            }\n        }\n    }\ncode_r0x0042e086:\n    puVar7 = NULL;\ncode_r0x0042e052:\n    *(in_EAX + 0x28) = puVar7;\n    return puVar7;\n}\n",
        "token_count": 762
    },
    "0042e430": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint fcn.0042e430(void)\n\n{\n    char *pcVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    pcVar1 = *(in_EAX + 0xc);\n    if (*pcVar1 != '_') {\n        return 1;\n    }\n    *(in_EAX + 0xc) = pcVar1 + 1;\n    if (pcVar1[1] == '_') {\n        *(in_EAX + 0xc) = pcVar1 + 2;\n        iVar2 = fcn.0042de20();\n        if (iVar2 < 0) {\n            return 0;\n        }\n        if (9 < iVar2) {\n            if (**(in_EAX + 0xc) != '_') {\n                return 0;\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n        }\n    }\n    else {\n        iVar2 = fcn.0042de20();\n        if (iVar2 < 0) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 244
    },
    "0042ffc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nint32_t fcn.0042ffc0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char cVar2;\n    char *pcVar3;\n    int32_t *piVar4;\n    int32_t aiStack32 [4];\n    \n    pcVar3 = *(in_EAX + 0xc);\n    aiStack32[0] = 0;\n    cVar2 = *pcVar3;\n    if ((cVar2 != 'E' && cVar2 != '\\0') && (piVar4 = aiStack32,  cVar2 != '.')) {\n        while (((cVar2 != 'R' && (cVar2 != 'O')) || (pcVar3[1] != 'E'))) {\n            iVar1 = fcn.0042f510();\n            if (iVar1 == 0) {\n                return 0;\n            }\n            iVar1 = fcn.0042dc50(0);\n            *piVar4 = iVar1;\n            if (iVar1 == 0) {\n                return 0;\n            }\n            pcVar3 = *(in_EAX + 0xc);\n            piVar4 = iVar1 + 0xc;\n            cVar2 = *pcVar3;\n            if ((cVar2 == '\\0' || cVar2 == 'E') || (cVar2 == '.')) break;\n        }\n        if (aiStack32[0] != 0) {\n            if (*(aiStack32[0] + 0xc) != 0) {\n                return aiStack32[0];\n            }\n            if (**(aiStack32[0] + 8) == 0x27) {\n                iVar1 = (*(aiStack32[0] + 8))[2];\n                if (*(iVar1 + 0x10) == 9) {\n                    *(in_EAX + 0x2c) = *(in_EAX + 0x2c) - *(iVar1 + 4);\n                    *(aiStack32[0] + 8) = 0;\n                    return aiStack32[0];\n                }\n                return aiStack32[0];\n            }\n            return aiStack32[0];\n        }\n    }\n    return 0;\n}\n",
        "token_count": 483
    },
    "004409a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004409a0(int32_t param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint16_t auStack34 [7];\n    uint uStack20;\n    \n    iVar4 = 6;\n    uStack20 = 0;\n    do {\n        while (uVar1 = *(param_2 + 4 + iVar4 * 2),  uVar1 != 0) {\n            uVar2 = uVar1 * (in_EAX & 0xffff);\n            uVar5 = (uVar2 & 0xffff) + auStack34[iVar4 + 2];\n            auStack34[iVar4 + 2] = uVar5;\n            iVar3 = (uVar2 >> 0x10) + auStack34[iVar4 + 1] + (uVar5 >> 0x10);\n            auStack34[iVar4 + 1] = iVar3;\n            auStack34[iVar4] = iVar3 >> 0x10;\n            iVar4 = iVar4 + -1;\n            if (iVar4 == 0) goto code_r0x00440a09;\n        }\n        auStack34[iVar4] = 0;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\ncode_r0x00440a09:\n    iVar4 = 2;\n    do {\n        *(param_1 + iVar4 * 2) = auStack34[iVar4];\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 9);\n    return;\n}\n",
        "token_count": 383
    },
    "00449540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint32_t __cdecl fcn.00449540(uint s1, uint32_t arg_ch, uint arg_10h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t extraout_ECX;\n    uchar *puVar4;\n    uint32_t uVar5;\n    int32_t aiStack64 [7];\n    uint32_t var_20h;\n    uchar *var_1ch;\n    uint var_ch;\n    \n    aiStack64[0] = 0x449556;\n    iVar2 = fcn.004386a0();\n    iVar2 = -iVar2;\n    uVar3 = &fcn.00449540::var_20h + iVar2 + 3 & 0xfffffff0;\n    var_20h = uVar3;\n    var_1ch = uVar3 + 0xc;\n    uVar5 = extraout_ECX;\n    puVar4 = var_1ch;\n    do {\n        puVar4 = puVar4 + -1;\n        *puVar4 = *(uVar5 % 10 + 0x524559);\n        bVar1 = 9 < uVar5;\n        uVar5 = uVar5 / 10;\n    } while (bVar1);\n    uVar5 = var_1ch - puVar4;\n    if (arg_ch < uVar5) {\n        uVar5 = 0xffffffff;\n    }\n    else {\n        *(&stack0xffffffcc + iVar2) = uVar5;\n        *(&stack0xffffffc8 + iVar2) = (uVar3 - uVar5) + 0xc;\n        *(&stack0xffffffc4 + iVar2) = s1;\n        *(&stack0xffffffc0 + iVar2) = 0x4495b9;\n        sub.msvcrt.dll_memcpy();\n    }\n    return uVar5;\n}\n",
        "token_count": 443
    },
    "0043a8c0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043a8c0(int32_t *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint *in_EAX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    code *pcStack52;\n    \n    iVar6 = 1;\n    do {\n        iVar4 = fcn.004396e0();\n        uVar5 = in_EAX[4] == *(param_2 + 0x48) + (*(param_2 + 0x60) >> 0x1f);\n        if (iVar4 != 0) {\n            return 2;\n        }\n        if (pcStack52 != NULL) {\n            iVar4 = (*pcStack52)(1, uVar5 << 2 | 2, *in_EAX, in_EAX[1]);\n            if (iVar4 == 7) {\n                *param_1 = iVar6;\n                return 7;\n            }\n            if (iVar4 != 8) {\n                return 2;\n            }\n        }\n        if (uVar5 != 0) {\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            iVar6 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n            if (iVar6 == 0) {\n                *0x4ce004 = 0x43c7d0;\n                pcVar2 = 0x43c580;\n            }\n            else {\n                *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n                pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n                pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar6, \"__register_frame_info\");\n                *0x4ce004 = (*pcVar1)(iVar6, \"__deregister_frame_info\");\n            }\n            if (pcVar2 != NULL) {\n                (*pcVar2)(0x52e0f8, 0x56b01c);\n            }\n            uVar3 = fcn.004014c0(fcn.00401590);\n            return uVar3;\n        }\n        iVar6 = iVar6 + 1;\n        fcn.0043a850();\n    } while( true );\n}\n",
        "token_count": 594
    },
    "0043b000": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043b000(uint param_1, uint param_2, int32_t param_3, uint param_4, uint param_5)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t extraout_EDX;\n    uint *puVar2;\n    uint *puVar3;\n    uint auStack284 [32];\n    uint auStack156 [18];\n    uint uStack84;\n    uint uStack80;\n    int32_t iStack24;\n    uint uStack20;\n    \n    iStack24 = in_EAX;\n    uStack20 = param_2;\n    fcn.0043a660();\n    puVar2 = auStack284;\n    puVar3 = auStack156;\n    for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *(param_3 + 0xc) = param_4;\n    *(param_3 + 0x10) = param_5;\n    iVar1 = fcn.0043a990();\n    if (iVar1 != 7) {\n        return iVar1;\n    }\n    fcn.0043aac0();\n    fcn.0043aea0(uStack84, uStack80);\n    *(&stack0x00000000 + extraout_EDX) = uStack80;\n    return iStack24;\n}\n",
        "token_count": 343
    },
    "0043b0b0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0043b0b0(uint param_1, uint param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    ulong uVar6;\n    uint auStack284 [32];\n    uint auStack156 [18];\n    uint uStack84;\n    uint uStack80;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack24 = in_EAX;\n    uStack20 = param_2;\n    fcn.0043a660();\n    puVar4 = auStack284;\n    puVar5 = auStack156;\n    for (iVar3 = 0x20; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    if (*(param_3 + 0xc) == 0) {\n        iVar3 = fcn.0043a8c0();\n    }\n    else {\n        iVar3 = fcn.0043a990();\n    }\n    if (iVar3 == 7) {\n        fcn.0043aac0();\n        uVar6 = fcn.0043aea0(uStack84, uStack80);\n        *(&stack0x00000000 + uVar6) = uVar6 >> 0x20;\n        return CONCAT44(uStack20, uStack24);\n    }\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar3 == 0) {\n        *0x4ce004 = 0x43c7d0;\n        pcVar2 = 0x43c580;\n    }\n    else {\n        *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"__register_frame_info\");\n        *0x4ce004 = (*pcVar1)(iVar3, \"__deregister_frame_info\");\n    }\n    if (pcVar2 != NULL) {\n        (*pcVar2)(0x52e0f8, 0x56b01c);\n    }\n    uVar6 = fcn.004014c0(fcn.00401590);\n    return uVar6;\n}\n",
        "token_count": 626
    },
    "0043b150": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0043b150(uint param_1, uint param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint in_EAX;\n    int32_t iVar3;\n    int32_t extraout_EDX;\n    uint *puVar4;\n    uint *puVar5;\n    ulong uVar6;\n    uint auStack284 [32];\n    uint auStack156 [18];\n    uint uStack84;\n    uint uStack80;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack20 = param_2;\n    if (*(param_3 + 0xc) == 0) {\n        uVar6 = fcn.0043aeb0(param_3);\n        return uVar6;\n    }\n    uStack24 = in_EAX;\n    fcn.0043a660();\n    puVar4 = auStack284;\n    puVar5 = auStack156;\n    for (iVar3 = 0x20; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    iVar3 = fcn.0043a990();\n    if (iVar3 == 7) {\n        fcn.0043aac0();\n        fcn.0043aea0(uStack84, uStack80);\n        *(&stack0x00000000 + extraout_EDX) = uStack80;\n        return CONCAT44(uStack20, uStack24);\n    }\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar3 == 0) {\n        *0x4ce004 = 0x43c7d0;\n        pcVar2 = 0x43c580;\n    }\n    else {\n        *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"__register_frame_info\");\n        *0x4ce004 = (*pcVar1)(iVar3, \"__deregister_frame_info\");\n    }\n    if (pcVar2 != NULL) {\n        (*pcVar2)(0x52e0f8, 0x56b01c);\n    }\n    uVar6 = fcn.004014c0(fcn.00401590);\n    return uVar6;\n}\n",
        "token_count": 621
    },
    "00448b90": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint32_t ** fcn.00448b90(void)\n\n{\n    uint32_t *puVar1;\n    int32_t in_EAX;\n    uint32_t **ppuVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t **ppuVar5;\n    uint32_t **ppuVar6;\n    uint32_t uVar7;\n    uint32_t **ppuVar8;\n    uint32_t *unaff_EDI;\n    ulong uVar9;\n    \n    if (*0x515a34 == 0) {\n        uVar7 = in_EAX + 0x10;\n        if (uVar7 < 8) {\n            uVar7 = 8;\n        }\n        if (*0x515d20 != NULL) {\ncode_r0x00448bc8:\n            ppuVar5 = uVar7 + 0xf & 0xfffffff0;\n            ppuVar8 = **0x515d20;\n            ppuVar2 = *0x515d20;\n            if (ppuVar8 < ppuVar5) {\n                do {\n                    ppuVar6 = ppuVar2;\n                    ppuVar2 = ppuVar6[1];\n                    if (ppuVar2 == NULL) goto code_r0x00448be2;\n                    ppuVar8 = *ppuVar2;\n                } while (ppuVar8 < ppuVar5);\n                ppuVar6 = ppuVar6 + 1;\n            }\n            else {\n                ppuVar6 = 0x515d20;\n            }\n            uVar9 = CONCAT44(ppuVar6, ppuVar2);\n            unaff_EDI = ppuVar2[1];\n            if (ppuVar8 - ppuVar5 < 8) goto code_r0x00448c40;\n            puVar1 = ppuVar2 + ppuVar5;\n            puVar1[1] = unaff_EDI;\n            ppuVar2 = *ppuVar6;\n            *puVar1 = ppuVar8 - ppuVar5;\n            *ppuVar2 = ppuVar5;\n            *ppuVar6 = puVar1;\n            goto code_r0x00448c1d;\n        }\n        ppuVar8 = NULL;\n    }\n    else {\n        iVar3 = fcn.00438ab0(0x515d18);\n        if (iVar3 != 0) {\n            uVar9 = fcn.0044a4d0();\n            if (uVar9 >> 0x20 == -1) {\n                fcn.004c36d0(uVar9);\n            }\n            fcn.0043b0b0();\n            if (*0x515a34 != 0) {\n                fcn.00438a50(0x515d18);\n            }\n            *0x515d28 = 0x4a00;\n            puVar4 = sub.msvcrt.dll_malloc(0x4a00);\n            *0x515d24 = puVar4;\n            if (puVar4 == NULL) {\n                *0x515d28 = 0;\n                *0x515d20 = NULL;\n            }\n            else {\n                *0x515d20 = puVar4;\n                *puVar4 = 0x4a00;\n                puVar4[1] = 0;\n            }\n            ppuVar8 = fcn.004014c0(0x4c4320);\n            return ppuVar8;\n        }\n        uVar7 = in_EAX + 0x10;\n        if (uVar7 < 8) {\n            uVar7 = 8;\n        }\n        if (*0x515d20 != NULL) goto code_r0x00448bc8;\ncode_r0x00448be2:\n        ppuVar8 = NULL;\n        while ((*0x515a34 != 0 && (iVar3 = fcn.00438b10(0x515d18),  iVar3 != 0))) {\n            uVar9 = fcn.0044a500();\ncode_r0x00448c40:\n            ppuVar2 = uVar9;\n            *ppuVar2 = ppuVar8;\n            *(uVar9 >> 0x20) = unaff_EDI;\ncode_r0x00448c1d:\n            ppuVar8 = ppuVar2 + 4;\n        }\n    }\n    return ppuVar8;\n}\n",
        "token_count": 981
    },
    "00438e80": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.00438e80(int32_t param_1, uint8_t *param_2, uint *param_3)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint8_t *in_EAX;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint8_t uVar7;\n    uint8_t uVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    uint *puVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint *puVar14;\n    uint *var_8h;\n    uint uStack64;\n    uint *var_38h;\n    int32_t var_34h;\n    uint8_t *var_30h;\n    int32_t var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    var_8h[0x24] = 0;\n    if (in_EAX < param_2) {\n        var_2ch = *(param_1 + 0x60);\n        uVar13 = var_8h[0x29];\n        if (uVar13 < *(param_1 + 0x4c) - (var_2ch >> 0x1f)) {\n            var_38h = NULL;\n            var_34h = param_1;\n            var_30h = param_2;\n            do {\n                uVar5 = *in_EAX;\n                puVar10 = in_EAX + 1;\n                uVar7 = *in_EAX & 0xc0;\n                if (uVar7 == 0x40) {\n                    var_8h[0x29] = (uVar5 & 0x3f) * var_8h[0x2c] + uVar13;\n                    goto code_r0x00438ef2;\n                }\n                if (uVar7 == 0x80) {\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    iVar3 = var_8h[0x2b];\n                    if ((uVar5 & 0x3f) < 0x12) {\n                        (var_8h + (uVar5 & 0x3f) * 2)[1] = 1;\n                        var_8h[(uVar5 & 0x3f) * 2] = uVar13 * iVar3;\n                    }\n                    goto code_r0x00438ef2;\n                }\n                if (uVar7 == 0xc0) {\n                    if ((uVar5 & 0x3f) < 0x12) {\n                        var_8h[(uVar5 & 0x3f) * 2 + 1] = 0;\n                    }\n                    goto code_r0x00438ef2;\n                }\n    // switch table (48 cases) at 0x526cf0\n                switch(uVar5) {\n                case 0:\n                case 0x2d:\n                    break;\n                case 1:\n                    fcn.00438e40();\n                    puVar10 = fcn.00438d00(&var_1ch);\n                    var_8h[0x29] = var_1ch;\n                    break;\n                case 2:\n                    puVar10 = in_EAX + 2;\n                    var_8h[0x29] = in_EAX[1] * var_8h[0x2c] + uVar13;\n                    break;\n                case 3:\n                    puVar10 = in_EAX + 3;\n                    var_8h[0x29] = *(in_EAX + 1) * var_8h[0x2c] + uVar13;\n                    break;\n                case 4:\n                    puVar10 = in_EAX + 5;\n                    var_8h[0x29] = var_8h[0x2c] * *(in_EAX + 1) + uVar13;\n                    break;\n                case 5:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar12 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar12 = uVar12 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    goto code_r0x004390b7;\n                case 6:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    goto code_r0x004390fb;\n                case 7:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    if (uVar13 < 0x12) {\n                        var_8h[uVar13 * 2 + 1] = 6;\n                    }\n                    break;\n                case 8:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\ncode_r0x004390fb:\n                    if (uVar13 < 0x12) {\n                        var_8h[uVar13 * 2 + 1] = 0;\n                    }\n                    break;\n                case 9:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar5 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar5 = uVar5 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    if (uVar13 < 0x12) {\n                        (var_8h + uVar13 * 2)[1] = 2;\n                        var_8h[uVar13 * 2] = uVar5;\n                    }\n                    break;\n                case 10:\n                    if (var_38h == NULL) {\n                        fcn.004386a0();\n                        puVar6 = &uStack64;\n                    }\n                    else {\n                        puVar6 = var_38h;\n                        var_38h = var_38h[0x24];\n                    }\n                    puVar11 = var_8h;\n                    puVar14 = puVar6;\n                    for (iVar3 = 0x29; iVar3 != 0; iVar3 = iVar3 + -1) {\n                        *puVar14 = *puVar11;\n                        puVar11 = puVar11 + 1;\n                        puVar14 = puVar14 + 1;\n                    }\n                    var_8h[0x24] = puVar6;\n                    break;\n                case 0xb:\n                    puVar6 = var_8h[0x24];\n                    puVar11 = puVar6;\n                    puVar14 = var_8h;\n                    for (iVar3 = 0x29; iVar3 != 0; iVar3 = iVar3 + -1) {\n                        *puVar14 = *puVar11;\n                        puVar11 = puVar11 + 1;\n                        puVar14 = puVar14 + 1;\n                    }\n                    puVar6[0x24] = var_38h;\n                    var_38h = puVar6;\n                    break;\n                case 0xc:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar7 = 0;\n                    var_8h[0x26] = uVar13;\n                    uVar13 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    var_8h[0x25] = uVar13;\n                    var_8h[0x28] = 1;\n                    break;\n                case 0xd:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    var_8h[0x26] = uVar13;\n                    var_8h[0x28] = 1;\n                    break;\n                case 0xe:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    var_8h[0x25] = uVar13;\n                    break;\n                case 0xf:\n                    uVar7 = 0;\n                    var_8h[0x27] = puVar10;\n                    var_8h[0x28] = 2;\n                    uVar13 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    puVar10 = puVar9 + uVar13;\n                    break;\n                case 0x10:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    if (uVar13 < 0x12) {\n                        (var_8h + uVar13 * 2)[1] = 0x3;\n                        var_8h[uVar13 * 2] = puVar9;\n                    }\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    puVar10 = puVar10 + uVar13;\n                    break;\n                case 0x11:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar12 = 0;\n                    uVar5 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar7 = *puVar9;\n                        uVar8 = uVar5;\n                        uVar5 = uVar5 + 7;\n                        uVar12 = uVar12 | (uVar7 & 0x7f) << (uVar8 & 0x1f);\n                        puVar9 = puVar10;\n                    } while (uVar7 < '\\0');\n                    if ((uVar5 < 0x20) && ((uVar7 & 0x40) != 0)) {\n                        uVar12 = uVar12 | -(1 << (uVar5 & 0x1f));\n                    }\ncode_r0x004390b7:\n                    if (uVar13 < 0x12) {\n                        var_8h[uVar13 * 2] = uVar12 * var_8h[0x2b];\n                        (var_8h + uVar13 * 2)[1] = 1;\n                    }\n                    break;\n                case 0x12:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar5 = 0;\n                    var_8h[0x26] = uVar13;\n                    uVar13 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar7 = *puVar9;\n                        uVar8 = uVar5;\n                        uVar5 = uVar5 + 7;\n                        uVar13 = uVar13 | (uVar7 & 0x7f) << (uVar8 & 0x1f);\n                        puVar9 = puVar10;\n                    } while (uVar7 < '\\0');\n                    if ((uVar5 < 0x20) && ((uVar7 & 0x40) != 0)) {\n                        uVar13 = uVar13 | -(1 << (uVar5 & 0x1f));\n                    }\n                    var_8h[0x28] = 1;\n                    var_8h[0x25] = uVar13 * var_8h[0x2b];\n                    break;\n                case 0x13:\n                    uVar5 = 0;\n                    uVar13 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar7 = *puVar9;\n                        uVar8 = uVar13;\n                        uVar13 = uVar13 + 7;\n                        uVar5 = uVar5 | (uVar7 & 0x7f) << (uVar8 & 0x1f);\n                        puVar9 = puVar10;\n                    } while (uVar7 < '\\0');\n                    if ((uVar13 < 0x20) && ((uVar7 & 0x40) != 0)) {\n                        uVar5 = uVar5 | -(1 << (uVar13 & 0x1f));\n                    }\n                    var_8h[0x25] = uVar5 * var_8h[0x2b];\n                    break;\n                case 0x14:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar12 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar12 = uVar12 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    goto code_r0x00439507;\n                case 0x15:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar12 = 0;\n                    uVar5 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar7 = *puVar9;\n                        uVar8 = uVar5;\n                        uVar5 = uVar5 + 7;\n                        uVar12 = uVar12 | (uVar7 & 0x7f) << (uVar8 & 0x1f);\n                        puVar9 = puVar10;\n                    } while (uVar7 < '\\0');\n                    if ((uVar5 < 0x20) && ((uVar7 & 0x40) != 0)) {\n                        uVar12 = uVar12 | -(1 << (uVar5 & 0x1f));\n                    }\ncode_r0x00439507:\n                    if (uVar13 < 0x12) {\n                        var_8h[uVar13 * 2] = uVar12 * var_8h[0x2b];\n                        (var_8h + uVar13 * 2)[1] = 4;\n                    }\n                    break;\n                case 0x16:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    if (uVar13 < 0x12) {\n                        (var_8h + uVar13 * 2)[1] = 0x5;\n                        var_8h[uVar13 * 2] = puVar9;\n                    }\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    puVar10 = puVar10 + uVar13;\n                    break;\n                default:\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n                    if (iVar3 == 0) {\n                        *0x4ce004 = 0x43c7d0;\n                        pcVar4 = 0x43c580;\n                    }\n                    else {\n                        *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n                        pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n                        pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"__register_frame_info\");\n                        *0x4ce004 = (*pcVar2)(iVar3, \"__deregister_frame_info\");\n                    }\n                    if (pcVar4 != NULL) {\n                        (*pcVar4)(0x52e0f8, 0x56b01c);\n                    }\n                    fcn.004014c0(fcn.00401590);\n                    return;\n                case 0x2e:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    *(var_34h + 0x68) = uVar13;\n                    break;\n                case 0x2f:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar5 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar5 = uVar5 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    if (uVar13 < 0x12) {\n                        var_8h[uVar13 * 2] = -(uVar5 * var_8h[0x2b]);\n                        (var_8h + uVar13 * 2)[1] = 1;\n                    }\n                }\ncode_r0x00438ef2:\n                if (var_30h <= puVar10) {\n                    return;\n                }\n                uVar13 = var_8h[0x29];\n                var_2ch = *(var_34h + 0x60);\n                in_EAX = puVar10;\n            } while (uVar13 < *(var_34h + 0x4c) - (var_2ch >> 0x1f));\n        }\n    }\n    return;\n}\n",
        "token_count": 6085
    },
    "00439d00": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00439d00(int32_t param_1, uint8_t *param_2, int32_t *param_3)\n\n{\n    int32_t **ppiVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t *piVar6;\n    uint8_t *in_EAX;\n    uint32_t uVar7;\n    uint8_t *puVar8;\n    uint *puVar9;\n    uint8_t uVar10;\n    uint8_t uVar11;\n    uint32_t uVar12;\n    uint8_t extraout_DL;\n    uint8_t *puVar13;\n    int32_t **unaff_EBP;\n    int32_t **unaff_EDI;\n    uint32_t uVar14;\n    int32_t **ppiStack312;\n    int32_t *piStack292;\n    int32_t **ppiStack288;\n    int32_t *apiStack284 [67];\n    \n    apiStack284[0] = param_3;\n    if (in_EAX < param_2) {\n        ppiStack312 = 0x1;\n        do {\n            uVar10 = *in_EAX;\n            uVar7 = uVar10;\n            puVar8 = in_EAX + 1;\n    // switch table (239 cases) at 0x526db0\n            switch(uVar7 - 3 & 0xff) {\n            case 0:\n            case 9:\n            case 10:\n                unaff_EDI = *(in_EAX + 1);\n                puVar8 = in_EAX + 5;\n                break;\n            default:\ncode_r0x0043a1f9:\n                do {\n                    sub.msvcrt.dll_abort();\n                    uVar10 = extraout_DL;\ncode_r0x0043a200:\n                    ppiStack312 = unaff_EBP;\n                    if (uVar10 == 6) {\n                        unaff_EDI = *unaff_EDI;\n                        goto code_r0x00439d60;\n                    }\n                } while (uVar10 != 0x19);\n                unaff_EDI = (unaff_EDI ^ unaff_EDI >> 0x1f) - (unaff_EDI >> 0x1f);\n                break;\n            case 3:\n            case 0x16:\n            case 0x1c:\n            case 0x1d:\n            case 0x20:\n            case 0x91:\n                if (ppiStack312 == NULL) goto code_r0x004014e0;\n                unaff_EBP = ppiStack312 + -1;\n                unaff_EDI = apiStack284[unaff_EBP];\n                ppiStack312 = unaff_EBP;\n                if (uVar10 == 0x1f) {\n                    unaff_EDI = -unaff_EDI;\n                }\n                else {\n                    if (uVar10 < 0x20) goto code_r0x0043a200;\n                    if (uVar10 == 0x23) {\n                        uVar7 = 0;\n                        uVar10 = 0;\n                        puVar13 = puVar8;\n                        do {\n                            puVar8 = puVar13 + 1;\n                            uVar11 = *puVar13;\n                            uVar2 = uVar10 & 0x1f;\n                            uVar10 = uVar10 + 7;\n                            uVar7 = uVar7 | (uVar11 & 0x7f) << uVar2;\n                            puVar13 = puVar8;\n                        } while (uVar11 < '\\0');\n                        unaff_EDI = unaff_EDI + uVar7;\n                    }\n                    else if (uVar10 == 0x94) {\n                        uVar10 = in_EAX[1];\n                        puVar13 = in_EAX + 2;\n                        if (uVar10 == 2) {\n                            unaff_EDI = *unaff_EDI;\n                            puVar8 = puVar13;\n                        }\n                        else if (uVar10 < 3) {\n                            if (uVar10 != 1) goto code_r0x0043a1f9;\n                            unaff_EDI = *unaff_EDI;\n                            puVar8 = puVar13;\n                        }\n                        else {\n                            if ((uVar10 != 4) && (uVar10 != 8)) goto code_r0x0043a1f9;\n                            unaff_EDI = *unaff_EDI;\n                            puVar8 = puVar13;\n                        }\n                    }\n                    else {\n                        if (uVar10 != 0x20) goto code_r0x0043a1f9;\n                        unaff_EDI = ~unaff_EDI;\n                    }\n                }\n                break;\n            case 5:\n                unaff_EDI = in_EAX[1];\n                puVar8 = in_EAX + 2;\n                break;\n            case 6:\n                unaff_EDI = in_EAX[1];\n                puVar8 = in_EAX + 2;\n                break;\n            case 7:\n                unaff_EDI = *(in_EAX + 1);\n                puVar8 = in_EAX + 3;\n                break;\n            case 8:\n                unaff_EDI = *(in_EAX + 1);\n                puVar8 = in_EAX + 3;\n                break;\n            case 0xb:\n            case 0xc:\n                unaff_EDI = *(in_EAX + 1);\n                puVar8 = in_EAX + 9;\n                break;\n            case 0xd:\n                unaff_EDI = NULL;\n                uVar10 = 0;\n                puVar13 = puVar8;\n                do {\n                    puVar8 = puVar13 + 1;\n                    uVar11 = *puVar13;\n                    uVar2 = uVar10 & 0x1f;\n                    uVar10 = uVar10 + 7;\n                    unaff_EDI = unaff_EDI | (uVar11 & 0x7f) << uVar2;\n                    puVar13 = puVar8;\n                } while (uVar11 < '\\0');\n                break;\n            case 0xe:\n                unaff_EDI = NULL;\n                uVar7 = 0;\n                puVar13 = puVar8;\n                do {\n                    puVar8 = puVar13 + 1;\n                    uVar10 = *puVar13;\n                    uVar11 = uVar7;\n                    uVar7 = uVar7 + 7;\n                    unaff_EDI = unaff_EDI | (uVar10 & 0x7f) << (uVar11 & 0x1f);\n                    puVar13 = puVar8;\n                } while (uVar10 < '\\0');\n                if ((uVar7 < 0x20) && ((uVar10 & 0x40) != 0)) {\n                    unaff_EDI = unaff_EDI | -(1 << (uVar7 & 0x1f));\n                }\n                break;\n            case 0xf:\n                if (ppiStack312 == NULL) goto code_r0x004014e0;\n                unaff_EDI = (&piStack292)[ppiStack312 + 1];\n                break;\n            case 0x10:\n                if (ppiStack312 != NULL) {\n                    ppiStack312 = ppiStack312 + -1;\n                    goto code_r0x00439d74;\n                }\n                goto code_r0x004014e0;\n            case 0x11:\n                if (ppiStack312 < 2) goto code_r0x004014e0;\n                unaff_EDI = (&piStack292)[ppiStack312];\n                break;\n            case 0x12:\n                puVar8 = in_EAX + 2;\n                if (ppiStack312 + -1 <= in_EAX[1]) goto code_r0x004014e0;\n                unaff_EDI = apiStack284[(ppiStack312 + -1) - in_EAX[1]];\n                break;\n            case 0x13:\n                if (1 < ppiStack312) {\n                    piVar6 = apiStack284[ppiStack312 + -1];\n                    apiStack284[ppiStack312 + -1] = apiStack284[ppiStack312 + -2];\n                    apiStack284[ppiStack312 + -2] = piVar6;\n                    goto code_r0x00439d74;\n                }\n                goto code_r0x004014e0;\n            case 0x14:\n                if (2 < ppiStack312) {\n                    piVar6 = apiStack284[ppiStack312 + -1];\n                    unaff_EBP = apiStack284[ppiStack312 + -2];\n                    unaff_EDI = apiStack284[ppiStack312 + -3];\n                    apiStack284[ppiStack312 + -1] = unaff_EBP;\n                    apiStack284[ppiStack312 + -2] = unaff_EDI;\n                    apiStack284[ppiStack312 + -3] = piVar6;\n                    goto code_r0x00439d74;\n                }\n                goto code_r0x004014e0;\n            case 0x17:\n            case 0x18:\n            case 0x19:\n            case 0x1a:\n            case 0x1b:\n            case 0x1e:\n            case 0x1f:\n            case 0x21:\n            case 0x22:\n            case 0x23:\n            case 0x24:\n            case 0x26:\n            case 0x27:\n            case 0x28:\n            case 0x29:\n            case 0x2a:\n            case 0x2b:\n                if (ppiStack312 < 2) goto code_r0x004014e0;\n                unaff_EBP = ppiStack312 + -2;\n                ppiVar1 = (&piStack292)[ppiStack312 + 1];\n                unaff_EDI = apiStack284[unaff_EBP];\n                uVar10 = ppiVar1;\n                ppiStack312 = unaff_EBP;\n    // switch table (21 cases) at 0x52716c\n                switch(uVar7 - 0x1a & 0xff) {\n                case 0:\n                    unaff_EDI = unaff_EDI & ppiVar1;\n                    break;\n                case 1:\n                    unaff_EDI = unaff_EDI / ppiVar1;\n                    break;\n                case 2:\n                    unaff_EDI = unaff_EDI - ppiVar1;\n                    break;\n                case 3:\n                    unaff_EDI = unaff_EDI % ppiVar1;\n                    break;\n                case 4:\n                    unaff_EDI = unaff_EDI * ppiVar1;\n                    break;\n                default:\n                    goto code_r0x0043a1f9;\n                case 7:\n                    unaff_EDI = unaff_EDI | ppiVar1;\n                    break;\n                case 8:\n                    unaff_EDI = unaff_EDI + ppiVar1;\n                    break;\n                case 10:\n                    unaff_EDI = unaff_EDI << (uVar10 & 0x1f);\n                    break;\n                case 0xb:\n                    unaff_EDI = unaff_EDI >> (uVar10 & 0x1f);\n                    break;\n                case 0xc:\n                    unaff_EDI = unaff_EDI >> (uVar10 & 0x1f);\n                    break;\n                case 0xd:\n                    unaff_EDI = unaff_EDI ^ ppiVar1;\n                    break;\n                case 0xf:\n                    unaff_EDI = unaff_EDI == ppiVar1;\n                    break;\n                case 0x10:\n                    unaff_EDI = ppiVar1 <= unaff_EDI;\n                    break;\n                case 0x11:\n                    unaff_EDI = ppiVar1 < unaff_EDI;\n                    break;\n                case 0x12:\n                    unaff_EDI = unaff_EDI <= ppiVar1;\n                    break;\n                case 0x13:\n                    unaff_EDI = unaff_EDI < ppiVar1;\n                    break;\n                case 0x14:\n                    unaff_EDI = unaff_EDI != ppiVar1;\n                }\n                break;\n            case 0x25:\n                if (ppiStack312 != NULL) {\n                    unaff_EDI = ppiStack312 + -1;\n                    puVar8 = in_EAX + 3;\n                    ppiStack312 = unaff_EDI;\n                    if (apiStack284[unaff_EDI] != NULL) {\n                        puVar8 = puVar8 + *(in_EAX + 1);\n                    }\n                    goto code_r0x00439d74;\n                }\n                goto code_r0x004014e0;\n            case 0x2c:\n                puVar8 = in_EAX + *(in_EAX + 1) + 3;\n                goto code_r0x00439d74;\n            case 0x2d:\n            case 0x2e:\n            case 0x2f:\n            case 0x30:\n            case 0x31:\n            case 0x32:\n            case 0x33:\n            case 0x34:\n            case 0x35:\n            case 0x36:\n            case 0x37:\n            case 0x38:\n            case 0x39:\n            case 0x3a:\n            case 0x3b:\n            case 0x3c:\n            case 0x3d:\n            case 0x3e:\n            case 0x3f:\n            case 0x40:\n            case 0x41:\n            case 0x42:\n            case 0x43:\n            case 0x44:\n            case 0x45:\n            case 0x46:\n            case 0x47:\n            case 0x48:\n            case 0x49:\n            case 0x4a:\n            case 0x4b:\n            case 0x4c:\n                unaff_EDI = uVar7 - 0x30;\n                break;\n            case 0x4d:\n            case 0x4e:\n            case 0x4f:\n            case 0x50:\n            case 0x51:\n            case 0x52:\n            case 0x53:\n            case 0x54:\n            case 0x55:\n            case 0x56:\n            case 0x57:\n            case 0x58:\n            case 0x59:\n            case 0x5a:\n            case 0x5b:\n            case 0x5c:\n            case 0x5d:\n            case 0x5e:\n            case 0x5f:\n            case 0x60:\n            case 0x61:\n            case 0x62:\n            case 99:\n            case 100:\n            case 0x65:\n            case 0x66:\n            case 0x67:\n            case 0x68:\n            case 0x69:\n            case 0x6a:\n            case 0x6b:\n            case 0x6c:\n                iVar4 = uVar7 - 0x50;\n                if (0x11 < iVar4) goto code_r0x004014e0;\n                unaff_EDI = *(param_1 + iVar4 * 4);\n                if (((*(param_1 + 99) & 0x40) == 0) || (*(param_1 + 0x6c + iVar4) == '\\0')) {\n                    if (*(uVar7 + 0x56b3a4) != '\\x04') goto code_r0x004014e0;\ncode_r0x00439ebc:\n                    unaff_EDI = *unaff_EDI;\n                }\n                break;\n            case 0x6d:\n            case 0x6e:\n            case 0x6f:\n            case 0x70:\n            case 0x71:\n            case 0x72:\n            case 0x73:\n            case 0x74:\n            case 0x75:\n            case 0x76:\n            case 0x77:\n            case 0x78:\n            case 0x79:\n            case 0x7a:\n            case 0x7b:\n            case 0x7c:\n            case 0x7d:\n            case 0x7e:\n            case 0x7f:\n            case 0x80:\n            case 0x81:\n            case 0x82:\n            case 0x83:\n            case 0x84:\n            case 0x85:\n            case 0x86:\n            case 0x87:\n            case 0x88:\n            case 0x89:\n            case 0x8a:\n            case 0x8b:\n            case 0x8c:\n                uVar14 = 0;\n                uVar12 = 0;\n                puVar13 = puVar8;\n                do {\n                    puVar8 = puVar13 + 1;\n                    uVar10 = *puVar13;\n                    uVar11 = uVar12;\n                    uVar12 = uVar12 + 7;\n                    uVar14 = uVar14 | (uVar10 & 0x7f) << (uVar11 & 0x1f);\n                    puVar13 = puVar8;\n                } while (uVar10 < '\\0');\n                if ((uVar12 < 0x20) && ((uVar10 & 0x40) != 0)) {\n                    uVar14 = uVar14 | -(1 << (uVar12 & 0x1f));\n                }\n                iVar4 = uVar7 - 0x70;\n                if (0x11 < iVar4) goto code_r0x004014e0;\n                puVar9 = *(param_1 + iVar4 * 4);\n                if (((*(param_1 + 99) & 0x40) == 0) || (*(param_1 + 0x6c + iVar4) == '\\0')) {\n                    if (*(uVar7 + 0x56b384) != '\\x04') goto code_r0x004014e0;\n                    puVar9 = *puVar9;\n                }\n                unaff_EDI = puVar9 + uVar14;\n                break;\n            case 0x8d:\n                uVar7 = 0;\n                uVar10 = 0;\n                puVar13 = puVar8;\n                do {\n                    puVar8 = puVar13 + 1;\n                    uVar11 = *puVar13;\n                    uVar2 = uVar10 & 0x1f;\n                    uVar10 = uVar10 + 7;\n                    uVar7 = uVar7 | (uVar11 & 0x7f) << uVar2;\n                    puVar13 = puVar8;\n                } while (uVar11 < '\\0');\n                if (0x11 < uVar7) goto code_r0x004014e0;\n                unaff_EDI = *(param_1 + uVar7 * 4);\n                if (((*(param_1 + 99) & 0x40) == 0) || (*(param_1 + 0x6c + uVar7) == '\\0')) {\n                    if (*(uVar7 + 0x56b3f4) == '\\x04') goto code_r0x00439ebc;\n                    goto code_r0x004014e0;\n                }\n                break;\n            case 0x8f:\n                uVar7 = 0;\n                uVar10 = 0;\n                do {\n                    puVar13 = puVar8 + 1;\n                    uVar11 = *puVar8;\n                    uVar2 = uVar10 & 0x1f;\n                    uVar10 = uVar10 + 7;\n                    uVar7 = uVar7 | (uVar11 & 0x7f) << uVar2;\n                    puVar8 = puVar13;\n                } while (uVar11 < '\\0');\n                uVar14 = 0;\n                uVar12 = 0;\n                do {\n                    puVar8 = puVar13 + 1;\n                    uVar10 = *puVar13;\n                    uVar11 = uVar12;\n                    uVar12 = uVar12 + 7;\n                    uVar14 = uVar14 | (uVar10 & 0x7f) << (uVar11 & 0x1f);\n                    puVar13 = puVar8;\n                } while (uVar10 < '\\0');\n                if ((uVar12 < 0x20) && ((uVar10 & 0x40) != 0)) {\n                    uVar14 = uVar14 | -(1 << (uVar12 & 0x1f));\n                }\n                if (0x11 < uVar7) goto code_r0x004014e0;\n                puVar9 = *(param_1 + uVar7 * 4);\n                if (((*(param_1 + 99) & 0x40) == 0) || (*(param_1 + 0x6c + uVar7) == '\\0')) {\n                    if (*(uVar7 + 0x56b3f4) != '\\x04') goto code_r0x004014e0;\n                    puVar9 = *puVar9;\n                }\n                unaff_EDI = uVar14 + puVar9;\n                break;\n            case 0x93:\n                goto code_r0x00439d74;\n            case 0xee:\n                fcn.00438e40();\n                puVar8 = fcn.00438d00(&piStack292 + 1);\n                unaff_EDI = ppiStack288;\n            }\ncode_r0x00439d60:\n            if (0x3f < ppiStack312) goto code_r0x004014e0;\n            apiStack284[ppiStack312] = unaff_EDI;\n            unaff_EBP = ppiStack312;\n            ppiStack312 = ppiStack312 + 1;\ncode_r0x00439d74:\n            in_EAX = puVar8;\n        } while (puVar8 < param_2);\n        if (ppiStack312 == NULL) {\ncode_r0x004014e0:\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n            if (iVar4 == 0) {\n                *0x4ce004 = 0x43c7d0;\n                pcVar5 = 0x43c580;\n            }\n            else {\n                *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n                pcVar3 = _sym.imp.KERNEL32.dll_GetProcAddress;\n                pcVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, \"__register_frame_info\");\n                *0x4ce004 = (*pcVar3)(iVar4, \"__deregister_frame_info\");\n            }\n            if (pcVar5 != NULL) {\n                (*pcVar5)(0x52e0f8, 0x56b01c);\n            }\n            piVar6 = fcn.004014c0(fcn.00401590);\n            return piVar6;\n        }\n        param_3 = (&piStack292)[ppiStack312 + 1];\n    }\n    return param_3;\n}\n",
        "token_count": 5320
    },
    "00440840": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.00440840(int32_t param_1, int32_t param_2)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    ushort *puVar7;\n    ushort *puVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    uint32_t *puVar11;\n    int32_t iStack40;\n    int32_t iStack36;\n    \n    iVar2 = param_2;\n    if (*(param_2 + 0x10) <= *(param_1 + 0x10)) {\n        param_2 = param_1;\n        param_1 = iVar2;\n    }\n    puVar10 = param_1 + 0x14;\n    uVar9 = 0;\n    iVar6 = fcn.00446700(*(param_2 + 4));\n    iStack36 = *(param_2 + 0x10);\n    *(iVar6 + 0x10) = iStack36;\n    iVar2 = *(param_1 + 0x10);\n    puVar1 = iVar6 + 0x14 + iVar2 * 2;\n    puVar11 = param_2 + 0x14;\n    puVar7 = iVar6 + 0x14;\n    do {\n        uVar3 = *puVar11;\n        uVar4 = *puVar10;\n        puVar11 = puVar11 + 1;\n        puVar10 = puVar10 + 1;\n        puVar8 = puVar7 + 2;\n        uVar9 = (uVar4 & 0xffff) + (uVar3 & 0xffff) + uVar9;\n        *puVar7 = uVar9;\n        uVar9 = (uVar3 >> 0x10) + (uVar4 >> 0x10) + (uVar9 >> 0x10);\n        puVar7[1] = uVar9;\n        uVar9 = uVar9 >> 0x10;\n        puVar7 = puVar8;\n    } while (puVar8 < puVar1);\n    iVar5 = *(param_2 + 0x10);\n    for (; puVar8 < puVar1 + (iVar5 - iVar2) * 2; puVar8 = puVar8 + 2) {\n        uVar3 = *puVar11;\n        puVar11 = puVar11 + 1;\n        uVar9 = (uVar3 & 0xffff) + uVar9;\n        *puVar8 = uVar9;\n        uVar9 = (uVar3 >> 0x10) + (uVar9 >> 0x10);\n        puVar8[1] = uVar9;\n        uVar9 = uVar9 >> 0x10;\n    }\n    iStack40 = iVar6;\n    if (uVar9 != 0) {\n        if (iStack36 == *(iVar6 + 8)) {\n            iStack40 = fcn.00446700(*(iVar6 + 4) + 1);\n            sub.msvcrt.dll_memcpy(iStack40 + 0xc, iVar6 + 0xc, *(iVar6 + 0x10) * 4 + 8);\n            fcn.004467d0(iVar6);\n            iStack36 = *(iStack40 + 0x10);\n        }\n        *(iStack40 + 0x10) = iStack36 + 1;\n        *(iStack40 + 0x14 + iStack36 * 4) = 1;\n    }\n    return iStack40;\n}\n",
        "token_count": 815
    },
    "00436c80": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00436c80(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    uchar uVar5;\n    char *pcVar6;\n    uchar *puVar7;\n    \n    pcVar6 = **(param_1 + 8);\n    if (*pcVar6 != 'f') {\n        return 0;\n    }\n    uVar1 = *(in_EAX + 0x124);\n    *(in_EAX + 0x124) = 0xffffffff;\n    cVar4 = pcVar6[1];\n    if (cVar4 == 'R') {\ncode_r0x00436e44:\n        if (*(in_EAX + 0x100) == 0xff) {\n            *(in_EAX + 0xff) = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            *(in_EAX + 0x100) = 0;\n        }\n        iVar3 = *(in_EAX + 0x100);\n        *(in_EAX + 0x100) = iVar3 + 1;\n        *(in_EAX + iVar3) = 0x28;\n        *(in_EAX + 0x104) = 0x28;\n        fcn.00436b90();\n        puVar7 = 0x52548c;\n        fcn.00436af0();\n        uVar5 = 0x2e;\n        iVar3 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar3 == 0xff) {\n                *(in_EAX + 0xff) = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar2 = 1;\n                iVar3 = 0;\n            }\n            else {\n                iVar2 = iVar3 + 1;\n            }\n            puVar7 = puVar7 + 1;\n            *(in_EAX + 0x100) = iVar2;\n            *(in_EAX + iVar3) = uVar5;\n            *(in_EAX + 0x104) = uVar5;\n            if (puVar7 == 0x52548f) break;\n            uVar5 = *puVar7;\n            iVar3 = iVar2;\n        }\n        fcn.00436af0();\n    }\n    else {\n        if (cVar4 < 'S') {\n            if (cVar4 != 'L') goto code_r0x00436e20;\n            goto code_r0x00436e44;\n        }\n        if (cVar4 != 'l') {\n            if (cVar4 == 'r') {\n                iVar2 = *(in_EAX + 0x100);\n                iVar3 = iVar2 + 1;\n                if (iVar2 == 0xff) {\n                    *(in_EAX + 0xff) = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar3 = 1;\n                    iVar2 = 0;\n                }\n                *(in_EAX + 0x100) = iVar3;\n                pcVar6 = \"...)\";\n                *(in_EAX + iVar2) = 0x28;\n                *(in_EAX + 0x104) = 0x28;\n                fcn.00436b90();\n                fcn.00436af0();\n                cVar4 = '.';\n                iVar3 = *(in_EAX + 0x100);\n                while( true ) {\n                    if (iVar3 == 0xff) {\n                        *(in_EAX + 0xff) = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar2 = 1;\n                        iVar3 = 0;\n                    }\n                    else {\n                        iVar2 = iVar3 + 1;\n                    }\n                    pcVar6 = pcVar6 + 1;\n                    *(in_EAX + 0x100) = iVar2;\n                    *(in_EAX + iVar3) = cVar4;\n                    *(in_EAX + 0x104) = cVar4;\n                    if (pcVar6 == \"\") break;\n                    cVar4 = *pcVar6;\n                    iVar3 = iVar2;\n                }\n            }\n            goto code_r0x00436e20;\n        }\n        pcVar6 = \"(...\";\n        cVar4 = '(';\n        iVar3 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar3 == 0xff) {\n                *(in_EAX + 0xff) = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar2 = 1;\n                iVar3 = 0;\n            }\n            else {\n                iVar2 = iVar3 + 1;\n            }\n            pcVar6 = pcVar6 + 1;\n            *(in_EAX + 0x100) = iVar2;\n            *(in_EAX + iVar3) = cVar4;\n            *(in_EAX + 0x104) = cVar4;\n            if (pcVar6 == \"\") break;\n            cVar4 = *pcVar6;\n            iVar3 = iVar2;\n        }\n        fcn.00436af0();\n    }\n    fcn.00436b90();\n    iVar2 = *(in_EAX + 0x100);\n    iVar3 = iVar2 + 1;\n    if (iVar2 == 0xff) {\n        *(in_EAX + 0xff) = 0;\n        (**(in_EAX + 0x108))();\n        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n        iVar3 = 1;\n        iVar2 = 0;\n    }\n    *(in_EAX + 0x100) = iVar3;\n    *(in_EAX + iVar2) = 0x29;\n    *(in_EAX + 0x104) = 0x29;\ncode_r0x00436e20:\n    *(in_EAX + 0x124) = uVar1;\n    return 1;\n}\n",
        "token_count": 1463
    },
    "00490a40": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00490a40(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = (param_3 & 0x3d) - 1;\n    if (((uVar2 < 0x3c) && (iVar1 = *(uVar2 * 4 + 0x527aa0),  iVar1 != 0)) && (*param_1 == 0)) {\n        iVar1 = fcn.0043e0e0(param_2, iVar1);\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            *(param_1 + 1) = 1;\n            return param_1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 189
    },
    "0043cea0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nfloat10 fcn.0043cea0(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uStack36;\n    uint32_t uStack32;\n    int32_t iStack24;\n    uint uStack20;\n    uint32_t uStack16;\n    \n    uVar1 = fcn.0043ecc0(param_1, param_2, 0x515a50, &iStack24, &uStack20);\n    // switch table (7 cases) at 0x527214\n    switch(uVar1 & 7) {\n    case 0:\n    case 6:\n        uStack36 = 0;\n        uStack32 = 0;\n        break;\n    case 1:\n        uStack36 = uStack20;\n        uStack32 = (iStack24 + 0x433) * 0x100000 | uStack16 & 0xffefffff;\n        break;\n    case 2:\n        uStack36 = uStack20;\n        uStack32 = uStack16;\n        break;\n    case 3:\n        uStack36 = 0;\n        uStack32 = 0x7ff00000;\n        break;\n    case 4:\n        uStack36 = 0;\n        uStack32 = 0x7ff80000;\n        break;\n    case 5:\n        uStack32 = uStack16 | 0x7ff00000;\n        uStack36 = uStack20;\n    }\n    if ((uVar1 & 8) != 0) {\n        uStack32 = uStack32 | 0x80000000;\n    }\n    return CONCAT44(uStack32, uStack36);\n}\n",
        "token_count": 369
    },
    "004c3b90": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nint32_t fcn.004c3b90(int32_t *param_1, int32_t param_2, uint param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t *unaff_EBX;\n    int32_t iVar4;\n    uint32_t uStack64;\n    uint uStack20;\n    \n    piVar1 = *(*param_1 + -4);\n    piVar3 = *(*param_1 + -8) + param_1;\n    if ((*(*piVar3 + -4) == piVar1) &&\n       (iVar4 = param_4,  (**(*piVar1 + 0x1c))(param_4, 6, param_3, piVar3),  param_2 != 0)) {\n        if ((uStack64 & 6) == 6) {\n            return param_2;\n        }\n        if (uStack64 == 0) {\n            if (param_4 < 0) {\n                if ((param_4 != -2) &&\n                   (uVar2 = (**(*unaff_EBX + 0x20))(param_4, param_2, uStack20, param_1),  (uVar2 & 6) == 6)) {\n                    return iVar4;\n                }\n            }\n            else if (param_1 == param_4 + param_2) {\n                return param_2;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 340
    },
    "004377d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004377d0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*0x56b048 != 0) {\n        return;\n    }\n    *0x56b048 = 1;\n    iVar2 = *0x4c5ec0;\n    if (*0x4c5ec0 == -1) {\n        iVar1 = 0;\n        do {\n            iVar2 = iVar1;\n            iVar1 = iVar2 + 1;\n        } while (*((iVar2 + 1) * 4 + 0x4c5ec0) != 0);\n    }\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        (**(iVar2 * 4 + 0x4c5ec0))();\n    }\n    fcn.004014c0(0x437740);\n    return;\n}\n",
        "token_count": 198
    },
    "0043cb70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0043cb70(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    *0x56b424 = 0xffffffff;\n    *0x56b428 = (*_sym.imp.KERNEL32.dll_CreateSemaphoreW)(0, 0, 0xffff, 0);\n    iVar3 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    if (iVar3 == -1) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        *0x56b420 = iVar3;\n        iVar3 = fcn.00447890(iVar3, 0x43ca90);\n    }\n    if (iVar3 == 0) {\n        return;\n    }\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar3 == 0) {\n        *0x4ce004 = 0x43c7d0;\n        pcVar2 = 0x43c580;\n    }\n    else {\n        *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"__register_frame_info\");\n        *0x4ce004 = (*pcVar1)(iVar3, \"__deregister_frame_info\");\n    }\n    if (pcVar2 != NULL) {\n        (*pcVar2)(0x52e0f8, 0x56b01c);\n    }\n    fcn.004014c0(fcn.00401590);\n    return;\n}\n",
        "token_count": 406
    },
    "0043d050": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0043d050(int32_t param_1)\n\n{\n    uint uVar1;\n    uchar uStack15;\n    ushort auStack14 [7];\n    \n    uVar1 = 0xffffffff;\n    if (param_1 != -1) {\n        uStack15 = param_1;\n        auStack14[0] = 0xffff;\n        uVar1 = fcn.00447860();\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(uVar1, 8, &uStack15, 1, auStack14);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 143
    },
    "0043e780": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0043e780(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = *(param_1 + 0x10);\n    piVar2 = param_1 + 0x14;\n    do {\n        if (*piVar2 != -1) {\n            *piVar2 = *piVar2 + 1;\n            return param_1;\n        }\n        piVar1 = piVar2 + 1;\n        *piVar2 = 0;\n        piVar2 = piVar1;\n    } while (piVar1 < param_1 + 0x14 + iVar4);\n    iVar3 = param_1;\n    if (*(param_1 + 8) <= iVar4) {\n        iVar3 = fcn.00446700(*(param_1 + 4) + 1);\n        sub.msvcrt.dll_memcpy(iVar3 + 0xc, param_1 + 0xc, *(param_1 + 0x10) * 4 + 8);\n        fcn.004467d0(param_1);\n        iVar4 = *(iVar3 + 0x10);\n    }\n    *(iVar3 + 0x10) = iVar4 + 1;\n    *(iVar3 + 0x14 + iVar4 * 4) = 1;\n    return iVar3;\n}\n",
        "token_count": 321
    },
    "00442870": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid __thiscall fcn.00442870(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    bool bVar9;\n    int64_t iVar10;\n    int32_t aiStack80 [8];\n    uint uStack48;\n    char *pcStack44;\n    char *pcStack40;\n    char *pcStack36;\n    uint32_t uStack32;\n    \n    pcStack44 = param_1 + -1;\n    pcStack40 = pcStack44 >> 0x1f;\n    iVar7 = 1;\n    pcVar4 = pcStack44;\n    while (pcVar4 = pcVar4 / 10,  pcVar4 != NULL) {\n        iVar7 = iVar7 + 1;\n    }\n    iVar3 = *(param_2 + 0x28);\n    if (iVar3 == -1) {\n        *(param_2 + 0x28) = 2;\n        iVar3 = 2;\n    }\n    if (iVar7 <= iVar3) {\n        iVar7 = iVar3;\n    }\n    iVar3 = *(param_2 + 8) - (iVar7 + 2);\n    if (*(param_2 + 8) <= iVar7 + 2) {\n        iVar3 = -1;\n    }\n    *(param_2 + 8) = iVar3;\n    aiStack80[5] = param_2;\n    aiStack80[4] = 0x442909;\n    fcn.00442130();\n    *(param_2 + 0xc) = *(param_2 + 0x28);\n    *(param_2 + 4) = *(param_2 + 4) | 0x1c0;\n    aiStack80[4] = 0x44292a;\n    fcn.00441d10();\n    *(param_2 + 8) = *(param_2 + 8) + iVar7 + 1;\n    pcStack36 = pcStack44;\n    aiStack80[6] = *(param_2 + 0xc);\n    uStack32 = pcStack40;\n    pcStack44 = *(param_2 + 4);\n    aiStack80[5] = *(param_2 + 8);\n    aiStack80[0] = 0x4425c2;\n    iVar7 = fcn.004386a0();\n    iVar7 = -iVar7;\n    pcStack40 = &stack0xffffffd3 + iVar7 & 0xfffffff0;\n    if ((pcStack44 & 0x80) != 0) {\n        if (uStack32 < 0) {\n            bVar9 = pcStack36 != NULL;\n            pcStack36 = -pcStack36;\n            uStack32 = -(uStack32 + bVar9);\n        }\n        else {\n            pcStack44 = pcStack44 & 0xffffff7f;\n            *(param_2 + 4) = pcStack44;\n        }\n    }\n    iVar10 = CONCAT44(uStack32, pcStack36);\n    uStack48 = pcStack44 & 0x1000;\n    pcVar4 = pcStack40;\n    if ((uStack32 | pcStack36) != 0) {\n        aiStack80[7] = param_2;\n        pcStack36 = pcStack40;\n        while( true ) {\n            pcVar5 = pcStack36;\n            uVar8 = iVar10 >> 0x20;\n            *(&stack0xffffffb4 + iVar7) = iVar10;\n            *(&stack0xffffffb8 + iVar7) = uVar8;\n            *(&stack0xffffffbc + iVar7) = 10;\n            *(&stack0xffffffc0 + iVar7) = 0;\n            pcStack36 = pcVar5 + 1;\n            *(&stack0xffffffb0 + iVar7) = 0x442637;\n            cVar1 = fcn.004387d0();\n            *pcVar5 = cVar1 + '0';\n            *(&stack0xffffffb4 + iVar7) = iVar10;\n            *(&stack0xffffffb8 + iVar7) = uVar8;\n            *(&stack0xffffffbc + iVar7) = 10;\n            *(&stack0xffffffc0 + iVar7) = 0;\n            *(&stack0xffffffb0 + iVar7) = 0x442658;\n            iVar10 = fcn.004386d0();\n            pcVar4 = pcStack36;\n            param_2 = aiStack80[7];\n            if (iVar10 == 0) break;\n            if ((((pcStack40 != pcStack36) && (uStack48 != 0)) && (*(aiStack80[7] + 0x1c) != 0)) &&\n               (uVar6 = (pcStack36 - pcStack40 >> 0x1f) >> 0x1e,  ((pcStack36 - pcStack40) + uVar6 & 3) - uVar6 == 3)) {\n                pcVar5[1] = ',';\n                pcStack36 = pcVar5 + 2;\n            }\n        }\n    }\n    if ((0 < aiStack80[6]) && (iVar3 = aiStack80[6] - (pcVar4 - pcStack40),  0 < iVar3)) {\n        pcVar2 = pcVar4 + iVar3;\n        pcVar5 = pcVar4;\n        do {\n            pcVar4 = pcVar5 + 1;\n            *pcVar5 = '0';\n            pcVar5 = pcVar4;\n        } while (pcVar4 != pcVar2);\n    }\n    if ((pcStack40 == pcVar4) && (aiStack80[6] != 0)) {\n        *pcVar4 = '0';\n        pcVar4 = pcVar4 + 1;\n    }\n    if (0 < aiStack80[5]) {\n        iVar3 = aiStack80[5] - (pcVar4 - pcStack40);\n        *(param_2 + 8) = iVar3;\n        if (0 < iVar3) {\n            if ((pcStack44 & 0x1c0) != 0) {\n                *(param_2 + 8) = iVar3 + -1;\n            }\n            if ((aiStack80[6] < 0) && ((pcStack44 & 0x600) == 0x200)) {\n                iVar3 = *(param_2 + 8);\n                *(param_2 + 8) = iVar3 + -1;\n                if (0 < iVar3) {\n                    pcVar2 = pcVar4 + iVar3;\n                    pcVar5 = pcVar4;\n                    do {\n                        pcVar4 = pcVar5 + 1;\n                        *pcVar5 = '0';\n                        pcVar5 = pcVar4;\n                    } while (pcVar4 != pcVar2);\n                    *(param_2 + 8) = 0xffffffff;\n                }\n            }\n            else if (((pcStack44 & 0x400) == 0) && (iVar3 = *(param_2 + 8),  *(param_2 + 8) = iVar3 + -1,  0 < iVar3)) {\n                do {\n                    *(&stack0xffffffb0 + iVar7) = 0x4427dc;\n                    fcn.00441d10();\n                    iVar3 = *(param_2 + 8);\n                    *(param_2 + 8) = iVar3 + -1;\n                } while (0 < iVar3);\n                pcStack44 = *(param_2 + 4);\n            }\n        }\n    }\n    pcVar5 = pcStack40;\n    if ((pcStack44 & 0x80) == 0) {\n        if ((pcStack44 & 0x100) == 0) {\n            pcVar2 = pcVar4;\n            if ((pcStack44 & 0x40) != 0) {\n                pcVar2 = pcVar4 + 1;\n                *pcVar4 = ' ';\n            }\n        }\n        else {\n            *pcVar4 = '+';\n            pcVar2 = pcVar4 + 1;\n        }\n    }\n    else {\n        *pcVar4 = '-';\n        pcVar2 = pcVar4 + 1;\n    }\n    if (pcVar2 <= pcStack40) goto code_r0x0044275e;\n    do {\n        pcVar2 = pcVar2 + -1;\n        *(&stack0xffffffb0 + iVar7) = 0x442741;\n        fcn.00441d10();\n    } while (pcVar5 != pcVar2);\n    iVar3 = *(param_2 + 8);\n    *(param_2 + 8) = iVar3 + -1;\n    while (0 < iVar3) {\n        *(&stack0xffffffb0 + iVar7) = 0x44275e;\n        fcn.00441d10();\ncode_r0x0044275e:\n        iVar3 = *(param_2 + 8);\n        *(param_2 + 8) = iVar3 + -1;\n    }\n    return;\n}\n",
        "token_count": 2050
    },
    "00448cf0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00448cf0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    iVar3 = param_1;\n    do {\n        while (iVar1 = sub.msvcrt.dll__write(),  iVar1 != -1) {\n            iVar3 = iVar3 - iVar1;\n            if (iVar3 == 0) {\n                return param_1;\n            }\n        }\n        piVar2 = (*_sym.imp.msvcrt.dll__errno)();\n    } while (*piVar2 == 4);\n    return param_1 - iVar3;\n}\n",
        "token_count": 145
    },
    "00450a90": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00450a90(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bStack13;\n    \n    piVar1 = *param_1;\n    bVar4 = piVar1 != NULL && param_1[1] == 0xffffffff;\n    bStack13 = param_1[1] == 0xffffffff;\n    if (bVar4) {\n        in_EAX = piVar1[3];\n        bStack13 = false;\n        if (in_EAX <= piVar1[2]) {\n            bStack13 = false;\n            in_EAX = (**(*piVar1 + 0x24))();\n            if (in_EAX == 0xffffffff) {\n                *param_1 = NULL;\n                bStack13 = bVar4;\n            }\n        }\n    }\n    piVar1 = *param_2;\n    uVar3 = in_EAX & 0xffffff00;\n    bVar2 = piVar1 != NULL && param_2[1] == 0xffffffff;\n    bVar4 = param_2[1] == 0xffffffff;\n    if (bVar2) {\n        uVar3 = piVar1[3];\n        bVar4 = false;\n        if (uVar3 <= piVar1[2]) {\n            uVar3 = (**(*piVar1 + 0x24))();\n            if (uVar3 == 0xffffffff) {\n                *param_2 = NULL;\n                bVar4 = bVar2;\n            }\n        }\n    }\n    return uVar3 & 0xffffff00 | bStack13 == bVar4;\n}\n",
        "token_count": 396
    },
    "00450b30": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00450b30(uint param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    \n    piVar1 = *in_EAX;\n    if ((param_2 == 0xffffffff) && (piVar1 != NULL)) {\n        if (piVar1[2] < piVar1[3]) {\n            return *piVar1[2];\n        }\n        param_2 = (**(*piVar1 + 0x24))();\n        if (param_2 == 0xffffffff) {\n            *in_EAX = NULL;\n        }\n    }\n    return param_2;\n}\n",
        "token_count": 151
    },
    "00450b80": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00450b80(uint param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    \n    piVar1 = *in_EAX;\n    if ((param_2 == 0xffffffff) && (piVar1 != NULL)) {\n        if (piVar1[2] < piVar1[3]) {\n            return *piVar1[2];\n        }\n        param_2 = (**(*piVar1 + 0x24))();\n        if (param_2 == 0xffffffff) {\n            *in_EAX = NULL;\n        }\n    }\n    return param_2;\n}\n",
        "token_count": 151
    },
    "004a5d20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004a5d20(int32_t *param_1)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    puVar2 = param_1[2];\n    if (puVar2 < param_1[3]) {\n        uVar1 = *puVar2;\n        param_1[2] = puVar2 + 1;\n        return uVar1;\n    }\n    UNRECOVERED_JUMPTABLE = *(*param_1 + 0x28);\n    if (UNRECOVERED_JUMPTABLE == method.c_streambufIwSt11char_traitsIwEE.virtual_40) {\n        UNRECOVERED_JUMPTABLE = *(*param_1 + 0x24);\n        if (UNRECOVERED_JUMPTABLE == method.c_streambufIwSt11char_traitsIwEE.virtual_36) {\n            return 0xffffffff;\n        }\n        iVar3 = (*UNRECOVERED_JUMPTABLE)();\n        if (iVar3 == -1) {\n            uVar4 = 0xffffffff;\n        }\n        else {\n            uVar4 = *param_1[2];\n            param_1[2] = param_1[2] + 1;\n        }\n        return uVar4;\n    }\n    // WARNING: Could not recover jumptable at 0x004a5d50. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar4 = (*UNRECOVERED_JUMPTABLE)();\n    return uVar4;\n}\n",
        "token_count": 369
    },
    "004bd7f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004bd7f0(uchar *param_1, uchar param_2, char *param_3, int32_t param_4, uchar *param_5, uchar *param_6)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uchar *puVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    int32_t iStack24;\n    \n    uVar5 = 0;\n    iStack24 = 0;\n    uVar3 = *param_3;\n    uVar6 = uVar3;\n    while (uVar3 < param_6 - param_5) {\n        while( true ) {\n            if (0x7d < uVar6 - 1U) goto code_r0x004bd858;\n            param_6 = param_6 + -uVar3;\n            if (param_4 - 1U <= uVar5) break;\n            uVar5 = uVar5 + 1;\n            uVar6 = param_3[uVar5];\n            uVar3 = param_3[uVar5];\n            if (param_6 - param_5 <= uVar3) goto code_r0x004bd858;\n        }\n        iStack24 = iStack24 + 1;\n    }\ncode_r0x004bd858:\n    puVar7 = param_5;\n    puVar8 = param_1;\n    if (param_6 != param_5) {\n        do {\n            puVar9 = puVar7 + 1;\n            *puVar8 = *puVar7;\n            puVar7 = puVar9;\n            puVar8 = puVar8 + 1;\n        } while (param_6 != puVar9);\n        param_1 = param_1 + (param_6 - param_5);\n    }\n    while (iStack24 = iStack24 + -1,  iStack24 != -1) {\n        while( true ) {\n            puVar7 = param_1 + 1;\n            *param_1 = param_2;\n            uVar2 = param_3[uVar5];\n            param_1 = puVar7;\n            if (uVar2 < '\\x01') break;\n            puVar8 = param_6;\n            puVar9 = puVar7;\n            do {\n                puVar1 = puVar8 + 1;\n                *puVar9 = *puVar8;\n                puVar8 = puVar1;\n                puVar9 = puVar9 + 1;\n            } while (puVar1 != param_6 + (uVar2 - 1 & 0xff) + 1);\n            iStack24 = iStack24 + -1;\n            iVar4 = (uVar2 - 1) + 1;\n            param_6 = param_6 + iVar4;\n            param_1 = puVar7 + iVar4;\n            if (iStack24 == -1) goto joined_r0x004bd8d7;\n        }\n    }\njoined_r0x004bd8d7:\n    while (uVar5 = uVar5 - 1,  uVar5 != 0xffffffff) {\n        puVar7 = param_1 + 1;\n        *param_1 = param_2;\n        uVar2 = param_3[uVar5];\n        param_1 = puVar7;\n        if ('\\0' < uVar2) {\n            puVar8 = param_6;\n            puVar9 = puVar7;\n            do {\n                puVar1 = puVar8 + 1;\n                *puVar9 = *puVar8;\n                puVar8 = puVar1;\n                puVar9 = puVar9 + 1;\n            } while (puVar1 != param_6 + (uVar2 - 1 & 0xff) + 1);\n            iVar4 = (uVar2 - 1) + 1;\n            param_6 = param_6 + iVar4;\n            param_1 = puVar7 + iVar4;\n        }\n    }\n    return;\n}\n",
        "token_count": 914
    },
    "0043ec40": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.0043ec40(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    iVar4 = param_2 + 0x1f >> 5;\n    if (*(param_1 + 4) < iVar4) {\n        fcn.004467d0(param_1);\n        param_1 = fcn.00446700(iVar4);\n    }\n    puVar2 = param_1 + 0x14;\n    iVar4 = param_2 >> 5;\n    param_2 = param_2 & 0x1f;\n    if (param_2 == 0) {\n        *(param_1 + 0x10) = iVar4;\n        puVar1 = puVar2 + iVar4;\n        if (puVar1 <= puVar2) {\n            return;\n        }\n    }\n    else {\n        *(param_1 + 0x10) = iVar4 + 1;\n        puVar1 = puVar2 + iVar4 + 1;\n        puVar3 = puVar2;\n        if (puVar1 <= puVar2) goto code_r0x0043ec84;\n    }\n    do {\n        puVar3 = puVar2 + 1;\n        *puVar2 = 0xffffffff;\n        puVar2 = puVar3;\n    } while (puVar3 < puVar1);\n    if (param_2 == 0) {\n        return;\n    }\ncode_r0x0043ec84:\n    puVar3[-1] = puVar3[-1] >> (0x20U - param_2 & 0x1f);\n    return;\n}\n",
        "token_count": 385
    },
    "00446c50": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint32_t fcn.00446c50(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int8_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint32_t *puVar13;\n    uint32_t *puVar14;\n    uint8_t uStack44;\n    uint32_t *puVar8;\n    \n    iVar10 = *(param_1 + 4);\n    iVar12 = param_2 >> 5;\n    iVar4 = *(param_1 + 0x10) + iVar12;\n    iVar11 = iVar4 + 1;\n    iVar5 = *(param_1 + 8);\n    if (iVar5 < iVar11) {\n        do {\n            iVar1 = iVar5 * 2;\n            iVar10 = iVar10 + 1;\n            iVar2 = iVar5 * -2;\n            iVar5 = iVar1;\n        } while (iVar11 != iVar1 && SBORROW4(iVar11, iVar1) == iVar11 + iVar2 < 0);\n    }\n    iVar10 = fcn.00446700(iVar10);\n    if (iVar10 != 0) {\n        puVar6 = iVar10 + 0x14;\n        if (0 < iVar12) {\n            puVar13 = puVar6 + iVar12;\n            puVar7 = puVar6;\n            do {\n                puVar8 = puVar7 + 1;\n                *puVar7 = 0;\n                puVar7 = puVar8;\n                puVar6 = puVar13;\n            } while (puVar8 != puVar13);\n        }\n        puVar13 = param_1 + 0x14;\n        puVar7 = puVar13 + *(param_1 + 0x10);\n        if ((param_2 & 0x1f) == 0) {\n            do {\n                puVar14 = puVar6 + 1;\n                puVar8 = puVar13 + 1;\n                *puVar6 = *puVar13;\n                if (puVar7 <= puVar8) break;\n                puVar6 = puVar6 + 2;\n                puVar13 = puVar13 + 2;\n                *puVar14 = *puVar8;\n            } while (puVar13 < puVar7);\n        }\n        else {\n            iVar3 = param_2 & 0x1f;\n            uStack44 = 0x20 - iVar3;\n            uVar9 = 0;\n            do {\n                puVar14 = puVar6;\n                puVar8 = puVar13 + 1;\n                *puVar14 = uVar9 | *puVar13 << iVar3;\n                uVar9 = *puVar13 >> (uStack44 & 0x1f);\n                puVar13 = puVar8;\n                puVar6 = puVar14 + 1;\n            } while (puVar8 < puVar7);\n            puVar14[1] = uVar9;\n            if (uVar9 != 0) {\n                iVar11 = iVar4 + 2;\n            }\n        }\n        *(iVar10 + 0x10) = iVar11 + -1;\n        fcn.004467d0(param_1);\n    }\n    return iVar10;\n}\n",
        "token_count": 772
    },
    "004495d0": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\nint32_t fcn.004495d0(char *param_1, int32_t param_2, char *param_3, char **param_4)\n\n{\n    char *pcVar1;\n    char cVar2;\n    char **ppcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t extraout_ECX;\n    char cVar6;\n    char *s1;\n    char *pcVar7;\n    char *pcVar8;\n    \n    pcVar1 = param_1 + param_2 + -1;\n    s1 = param_1;\ncode_r0x004495f9:\n    do {\n        cVar6 = *param_3;\n        ppcVar3 = param_4;\n        while( true ) {\n            if (cVar6 == '\\0') {\n                *s1 = '\\0';\n                return s1 - param_1;\n            }\n            if (pcVar1 <= s1) goto code_r0x004496b0;\n            if (cVar6 != '%') goto code_r0x004495f1;\n            cVar2 = param_3[1];\n            if (cVar2 != 's') break;\n            pcVar4 = *ppcVar3;\n            cVar6 = *pcVar4;\n            if (cVar6 != '\\0') {\n                pcVar8 = pcVar4 + (pcVar1 - s1);\n                pcVar7 = s1;\n                while( true ) {\n                    pcVar4 = pcVar4 + 1;\n                    s1 = pcVar7 + 1;\n                    *pcVar7 = cVar6;\n                    cVar6 = *pcVar4;\n                    if (cVar6 == '\\0') break;\n                    pcVar7 = s1;\n                    if (pcVar8 == pcVar4) goto code_r0x004496b0;\n                }\n            }\n            param_3 = param_3 + 2;\n            cVar6 = *param_3;\n            ppcVar3 = ppcVar3 + 1;\n        }\n        if (cVar2 == 'z') {\n            if (param_3[2] == 'u') {\n                param_4 = ppcVar3 + 1;\n                iVar5 = fcn.00449540(s1, pcVar1 - s1, *ppcVar3);\n                if (iVar5 < 1) {\ncode_r0x004496b0:\n                    fcn.0044a2e0(param_1, s1);\n                    return *(extraout_ECX + 0x20);\n                }\n                s1 = s1 + iVar5;\n                param_3 = param_3 + 3;\n                goto code_r0x004495f9;\n            }\n        }\n        else {\n            param_3 = param_3 + (cVar2 == '%');\n        }\ncode_r0x004495f1:\n        *s1 = cVar6;\n        param_3 = param_3 + 1;\n        s1 = s1 + 1;\n        param_4 = ppcVar3;\n    } while( true );\n}\n",
        "token_count": 681
    },
    "00446fa0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nfloat10 fcn.00446fa0(int32_t param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint32_t uStack32;\n    \n    uVar1 = param_1 + 0x14;\n    iVar2 = uVar1 + *(param_1 + 0x10) * 4;\n    uStack32 = *(iVar2 + -4);\n    uVar3 = 0x1f;\n    if (uStack32 != 0) {\n        for (; uStack32 >> uVar3 == 0; uVar3 = uVar3 - 1) {\n        }\n    }\n    uVar3 = uVar3 ^ 0x1f;\n    *param_2 = 0x20 - uVar3;\n    if (uVar3 < 0xb) {\n        uVar5 = 0xb - uVar3;\n        uVar6 = 0;\n        if (uVar1 < iVar2 - 4U) {\n            uVar6 = *(iVar2 + -8) >> (uVar5 & 0x1f);\n        }\n        return CONCAT44(uStack32 >> (uVar5 & 0x1f), uStack32 << (uVar3 + 0x15U & 0x1f) | uVar6) | 0x3ff0000000000000;\n    }\n    iVar4 = uVar3 - 0xb;\n    uVar5 = iVar4;\n    if (uVar1 < iVar2 - 4U) {\n        uVar3 = *(iVar2 + -8);\n        if (iVar4 != 0) {\n            uStack32 = uStack32 << (uVar5 & 0x1f) | 0x3ff00000 | uVar3 >> (0x20 - uVar5 & 0x1f);\n            uVar3 = uVar3 << (uVar5 & 0x1f);\n            if (uVar1 < iVar2 - 8U) {\n                uVar3 = uVar3 | *(iVar2 + -0xc) >> (0x20 - uVar5 & 0x1f);\n            }\n            goto code_r0x00447074;\n        }\n    }\n    else {\n        uVar3 = 0;\n        if (iVar4 != 0) {\n            uVar3 = 0;\n            uStack32 = uStack32 << (uVar5 & 0x1f) | 0x3ff00000;\n            goto code_r0x00447074;\n        }\n    }\n    uStack32 = uStack32 | 0x3ff00000;\ncode_r0x00447074:\n    return CONCAT44(uStack32, uVar3);\n}\n",
        "token_count": 643
    },
    "00438ab0": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint fcn.00438ab0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    LOCK();\n    *param_1 = *param_1 + 1;\n    if (*param_1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(param_1[1], 0xffffffff);\n        if (iVar1 != 0) {\n            LOCK();\n            *param_1 = *param_1 + -1;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 124
    },
    "00438bb0": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint fcn.00438bb0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    LOCK();\n    *param_1 = *param_1 + 1;\n    if (*param_1 == 0) {\n        param_1[1] = 1;\n        param_1[2] = iVar1;\n        uVar2 = 0;\n    }\n    else {\n        if (param_1[2] == iVar1) {\n            LOCK();\n            *param_1 = *param_1 + -1;\n            param_1[1] = param_1[1] + 1;\n            return 0;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(param_1[3], 0xffffffff);\n        if (iVar3 == 0) {\n            param_1[1] = 1;\n            param_1[2] = iVar1;\n            return 0;\n        }\n        LOCK();\n        *param_1 = *param_1 + -1;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 275
    },
    "004014c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004014c0(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll__onexit(param_1);\n    return -(iVar1 == 0);\n}\n",
        "token_count": 51
    },
    "004038a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004038a2(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint noname_8, uint arg_2ch)\n\n{\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_39h;\n    uint var_24h;\n    uint var_14h;\n    \n    return 1;\n}\n",
        "token_count": 158
    },
    "0041b0c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041b0c4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    return 0x7f2b;\n}\n",
        "token_count": 107
    },
    "004237cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.004237cc(uint param_1)\n\n{\n    uint in_stack_fffffc70;\n    ulong uVar1;\n    uint in_stack_fffffd7c;\n    uint var_23ch;\n    uint var_234h;\n    uint var_219h;\n    uint var_1fdh;\n    uint var_1e1h;\n    uint var_1c5h;\n    uint var_1a9h;\n    uint var_18dh;\n    uint var_171h;\n    uint var_155h;\n    uint var_139h;\n    uint var_11dh;\n    uint var_101h;\n    uint var_e5h;\n    uint var_c9h;\n    uint var_adh;\n    uint var_94h;\n    uint var_79h;\n    uint var_5dh;\n    uint var_41h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.004b2c00();\n    fcn.004b2c00();\n    fcn.004838d0();\n    uVar1 = CONCAT44(0x423827, in_stack_fffffd7c);\n    fcn.004b29a0(\"sapfhauacgkzphfqyifmponmkxgaxhfsyyehsrsdoafwrhlzzyzefpirxt\", &var_219h);\n    fcn.004838d0(uVar1);\n    fcn.004b29a0(\"pypudehbwsohpqclvoarbfyirzgdbjhccowqcsbfhgsbvwtflpjtnvlxxlwunmbhelhejsapbldanipgmovxq\", &var_1fdh);\n    fcn.004235f0(0x3f2, 1, *0x522e58, *0x522e58 >> 0x20, &var_219h + 1, 1, 0, *0x522e50, *0x522e50 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"prbwtyveoivkbugpeygfnkumhxuivlilzqrpscplmsjunwchdxgtggoqgqihurwcioxbetjmxdfrljtpyyywn\", &var_1e1h);\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.00422ac0(&var_1e1h + 1, *0x522e60, *0x522e60 >> 0x20, 0x151, &var_1fdh + 1, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"btmycmpuirhrmdwkbeyp\", &var_1a9h);\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.00422cb0(&var_1a9h + 1, *0x522e68, *0x522e68 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.00423146(0x1cab, 1);\n    fcn.004838d0();\n    fcn.004b29a0(\"vyawhzkdelfjwjcemwwxvbdubtbuqqriuyjxmncooizpnijdajcpekrngnfvrtzz\", &var_171h);\n    fcn.004838d0();\n    fcn.004b29a0(\"trvjddchvucuiyjerurzjmcaqgzcitdjrsdvdociwqihhwkmhipiypunkqzyfhwhmoyxevwrcoxsjjtratv\", &var_155h);\n    fcn.004838d0();\n    fcn.004b29a0(\"vijdbuisnveiwnphvrprwjlffwayfeaubzfinmrqpzgpgwavexxvkbkctrixk\", &var_139h);\n    fcn.004838d0();\n    fcn.004b29a0(\"ajdzgyocnugzmoiuuwcohdlqcxxbsvwpkucoxlybpr\", &var_11dh);\n    fcn.0042319a(&var_139h + 1, &var_155h + 1, &var_171h + 1, &var_18dh + 1);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"rmbyjvoxkgpedzigbhtjuehpzfzysl\", &var_101h);\n    fcn.004838d0();\n    fcn.004b29a0();\n    fcn.0042223a(&var_101h + 1, *0x522e70, *0x522e70 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"jzpogrhmfuntlddfpeuyjmscisucyxpcyavyaktmmtyxrcshbdggaratllmfhmxmwlfxoyprgurpounpvgtdpp\", &var_c9h);\n    fcn.004838d0();\n    fcn.004b29a0(\"wyzrfnjuyeufrcrlkfirdipnubxjqindxuurmuzrbdpjcqoefgnwssuegtkhohhgksbmhksqvfnqyelfwjyoxukcgrrscx\", \n                 &var_adh);\n    fcn.004223b0(1, 0, 0x1286, &var_c9h + 1, 0);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    uVar1 = CONCAT44(0x423db2, in_stack_fffffc70);\n    fcn.004b29a0(\"ifeldnhqgny\", &var_79h);\n    fcn.004838d0(uVar1);\n    fcn.004b29a0(\"bdxetibseqqpyoyjpckwaswlhtzwmwojlvwipe\", &var_5dh);\n    fcn.00422590(param_1, &var_79h + 1, *0x522e80, *0x522e80 >> 0x20, 0, *0x522e78, *0x522e78 >> 0x20, &var_94h, 1, \n                 0x3ec, 1);\n    fcn.004b2fc0();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"pjdiewzzfmfgsajcodhmqavgfbbplfsankmznpjlylytjgavsvynlircyfazmippkqwduivvgpun\", &var_41h);\n    fcn.004227bc(0, 0, &var_5dh + 1, 1, 0, *0x522e90, *0x522e90 >> 0x20, *0x522e88, *0x522e88 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004838d0();\n    fcn.004b29a0(\"wcwtqwzkpnkftllrwudiozctrhdlkxpsjpdncqfjbhpvhvwouhohhzkvrmyqzyoaewy\", &var_25h);\n    fcn.004838d0();\n    fcn.004b29a0(\"noulgezbcccsjgsawqpzdrorymg\", &var_9h);\n    fcn.00422846(*0x522e98, *0x522e98 >> 0x20);\n    fcn.004b2fc0();\n    fcn.00483900();\n    fcn.004b2fc0();\n    fcn.00483900();\n    return;\n}\n",
        "token_count": 2095
    },
    "0042dc50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0042dc50(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    \n    // switch table (80 cases) at 0x524ae0\n    switch(param_2) {\n    default:\n        goto code_r0x0042dc9e;\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 0xb:\n    case 0x21:\n    case 0x2b:\n    case 0x2d:\n    case 0x36:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3c:\n    case 0x3d:\n    case 0x3f:\n    case 0x4b:\n    case 0x4d:\n        if (param_1 == 0) {\n            return NULL;\n        }\n    case 0x2a:\n    case 0x30:\n        if (param_3 == 0) {\n            return NULL;\n        }\n        break;\n    case 9:\n    case 10:\n    case 0xc:\n    case 0xd:\n    case 0xe:\n    case 0xf:\n    case 0x10:\n    case 0x11:\n    case 0x12:\n    case 0x13:\n    case 0x14:\n    case 0x15:\n    case 0x16:\n    case 0x17:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x28:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x3b:\n    case 0x3e:\n    case 0x42:\n    case 0x43:\n    case 0x44:\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n        if (param_1 == 0) {\n            return NULL;\n        }\n        break;\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x1d:\n    case 0x1e:\n    case 0x1f:\n    case 0x20:\n    case 0x29:\n    case 0x2e:\n    case 0x2f:\n    case 0x4c:\n    case 0x4e:\n    case 0x4f:\n        break;\n    }\n    iVar1 = *(in_EAX + 0x14);\n    if (iVar1 < *(in_EAX + 0x18)) {\n        puVar2 = iVar1 * 0x10 + *(in_EAX + 0x10);\n        puVar2[1] = 0;\n        *(in_EAX + 0x14) = iVar1 + 1;\n        *puVar2 = param_2;\n        puVar2[3] = param_3;\n        puVar2[2] = param_1;\n        return puVar2;\n    }\ncode_r0x0042dc9e:\n    return NULL;\n}\n",
        "token_count": 756
    },
    "0042dd80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042dd80(int32_t param_1, uchar *param_2)\n\n{\n    uchar *puVar1;\n    uchar uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (param_1 != 0) {\n        puVar1 = param_2 + param_1;\n        iVar4 = *(in_EAX + 0x100);\n        do {\n            uVar2 = *param_2;\n            if (iVar4 == 0xff) {\n                *(in_EAX + 0xff) = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar3 = 1;\n                iVar4 = 0;\n            }\n            else {\n                iVar3 = iVar4 + 1;\n            }\n            param_2 = param_2 + 1;\n            *(in_EAX + 0x100) = iVar3;\n            *(in_EAX + iVar4) = uVar2;\n            *(in_EAX + 0x104) = uVar2;\n            iVar4 = iVar3;\n        } while (param_2 != puVar1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 292
    },
    "0042dee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0042dee0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint *puVar3;\n    \n    iVar1 = *(in_EAX + 0x14);\n    if (iVar1 < *(in_EAX + 0x18)) {\n        puVar3 = iVar1 * 0x10 + *(in_EAX + 0x10);\n        puVar3[1] = 0;\n        *(in_EAX + 0x14) = iVar1 + 1;\n        *puVar3 = 0x41;\n        uVar2 = fcn.0042de20();\n        puVar3[2] = uVar2;\n        return puVar3;\n    }\n    return NULL;\n}\n",
        "token_count": 174
    },
    "0042df60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0042df60(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    if (**(in_EAX + 0xc) != 'T') {\n        return NULL;\n    }\n    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n    iVar2 = fcn.0042df20();\n    if ((-1 < iVar2) && (iVar1 = *(in_EAX + 0x14),  iVar1 < *(in_EAX + 0x18))) {\n        puVar3 = *(in_EAX + 0x10) + iVar1 * 0x10;\n        puVar3[1] = 0;\n        *(in_EAX + 0x14) = iVar1 + 1;\n        *puVar3 = 5;\n        puVar3[2] = iVar2;\n        return puVar3;\n    }\n    return NULL;\n}\n",
        "token_count": 227
    },
    "0042ee40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042ee40(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t aiStack32 [4];\n    \n    aiStack32[0] = 0;\n    piVar3 = aiStack32;\n    if (**(in_EAX + 0xc) == param_2) {\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n        uVar2 = fcn.0042dc50(0);\n        return uVar2;\n    }\n    while( true ) {\n        uVar2 = *(in_EAX + 0x30);\n        *(in_EAX + 0x30) = 1;\n        iVar1 = fcn.0042e7c0();\n        *(in_EAX + 0x30) = uVar2;\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar1 = fcn.0042dc50(0);\n        *piVar3 = iVar1;\n        if (iVar1 == 0) break;\n        piVar3 = iVar1 + 0xc;\n        if (**(in_EAX + 0xc) == param_2) {\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n            return aiStack32[0];\n        }\n    }\n    return 0;\n}\n",
        "token_count": 337
    },
    "004302c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004302c0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (**(in_EAX + 0xc) == 'J') {\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n    }\n    else if (param_2 == 0) {\n        iVar1 = fcn.0042ffc0();\n        if (iVar1 == 0) {\n            return 0;\n        }\n        goto code_r0x004302eb;\n    }\n    iVar1 = fcn.0042f510();\n    if ((iVar1 == 0) || (iVar1 = fcn.0042ffc0(),  iVar1 == 0)) {\n        return 0;\n    }\ncode_r0x004302eb:\n    uVar2 = fcn.0042dc50(iVar1);\n    return uVar2;\n}\n",
        "token_count": 222
    },
    "00430330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00430330(void)\n\n{\n    char *pcVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    pcVar1 = *(in_EAX + 0xc);\n    if (*pcVar1 != 'F') {\n        return 0;\n    }\n    *(in_EAX + 0xc) = pcVar1 + 1;\n    if (pcVar1[1] == 'Y') {\n        *(in_EAX + 0xc) = pcVar1 + 2;\n    }\n    fcn.004302c0();\n    uVar2 = fcn.0042dcb0();\n    if (**(in_EAX + 0xc) == 'E') {\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 195
    },
    "00436160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00436160(int32_t *param_1, int32_t *param_2)\n\n{\n    uchar *in_EAX;\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uStack32;\n    \n    if (param_2 != NULL) {\n        iVar1 = param_2[2];\n        while (iVar1 == 0) {\n            if (*param_2[1] - 0x19U < 0x13) {\n                uVar4 = 1 << (*param_2[1] - 0x19U & 0x1f);\n                if ((uVar4 & 0x43107) != 0) {\n                    uVar2 = in_EAX[0x104];\n                    iVar1 = *(in_EAX + 0x100);\ncode_r0x004363b1:\n                    iVar3 = iVar1;\n                    if (uVar2 == 0x20) {\ncode_r0x0043631f:\n                        if (iVar3 != 0xff) goto code_r0x0043632a;\ncode_r0x004363e2:\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))(in_EAX, 0xff, *(in_EAX + 0x10c));\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar1 = 1;\n                        iVar3 = 0;\n                    }\n                    else {\n                        if (iVar1 == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))(in_EAX, 0xff, *(in_EAX + 0x10c));\n                            *in_EAX = 0x20;\n                            iVar3 = 1;\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        }\n                        else {\n                            iVar3 = iVar1 + 1;\n                            *(in_EAX + 0x100) = iVar3;\n                            in_EAX[iVar1] = 0x20;\n                            in_EAX[0x104] = 0x20;\n                            if (iVar3 == 0xff) goto code_r0x004363e2;\n                        }\ncode_r0x0043632a:\n                        iVar1 = iVar3 + 1;\n                    }\n                    *(in_EAX + 0x100) = iVar1;\n                    in_EAX[iVar3] = 0x28;\n                    uStack32 = *(in_EAX + 0x114);\n                    in_EAX[0x104] = 0x28;\n                    *(in_EAX + 0x114) = 0;\n                    fcn.00436490(0);\n                    iVar1 = *(in_EAX + 0x100);\n                    if (iVar1 != 0xff) {\n                        iVar3 = iVar1 + 1;\n                        *(in_EAX + 0x100) = iVar3;\n                        in_EAX[iVar1] = 0x29;\n                        in_EAX[0x104] = 0x29;\n                        if (iVar3 != 0xff) goto code_r0x004361fd;\n                        goto code_r0x00436270;\n                    }\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))(in_EAX, 0xff, *(in_EAX + 0x10c));\n                    *in_EAX = 0x29;\n                    iVar3 = 1;\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    goto code_r0x004361fd;\n                }\n                if ((uVar4 & 0xe00) != 0) {\n                    uVar2 = in_EAX[0x104];\n                    iVar1 = *(in_EAX + 0x100);\n                    iVar3 = iVar1;\n                    if ((uVar2 & 0xfd) != 0x28) goto code_r0x004363b1;\n                    goto code_r0x0043631f;\n                }\n            }\n            param_2 = *param_2;\n            if (param_2 == NULL) break;\n            iVar1 = param_2[2];\n        }\n    }\n    uStack32 = *(in_EAX + 0x114);\n    *(in_EAX + 0x114) = 0;\n    fcn.00436490(0);\n    iVar3 = *(in_EAX + 0x100);\n    if (iVar3 == 0xff) {\ncode_r0x00436270:\n        in_EAX[0xff] = 0;\n        (**(in_EAX + 0x108))(in_EAX, 0xff, *(in_EAX + 0x10c));\n        *in_EAX = 0x28;\n        in_EAX[0x104] = 0x28;\n        iVar1 = *param_1;\n        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n        *(in_EAX + 0x100) = 1;\n        if (iVar1 != 0) goto code_r0x00436218;\n        iVar1 = 1;\n    }\n    else {\ncode_r0x004361fd:\n        iVar1 = iVar3 + 1;\n        *(in_EAX + 0x100) = iVar1;\n        in_EAX[iVar3] = 0x28;\n        in_EAX[0x104] = 0x28;\n        if (*param_1 != 0) {\ncode_r0x00436218:\n            fcn.00430eb0();\n            iVar1 = *(in_EAX + 0x100);\n        }\n        if (iVar1 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))(in_EAX, 0xff, *(in_EAX + 0x10c));\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar3 = 1;\n            iVar1 = 0;\n            goto code_r0x00436235;\n        }\n    }\n    iVar3 = iVar1 + 1;\ncode_r0x00436235:\n    *(in_EAX + 0x100) = iVar3;\n    in_EAX[iVar1] = 0x29;\n    in_EAX[0x104] = 0x29;\n    fcn.00436490(1);\n    *(in_EAX + 0x114) = uStack32;\n    return;\n}\n",
        "token_count": 1496
    },
    "00436850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00436850(int32_t *param_1, int32_t *param_2)\n\n{\n    uchar *in_EAX;\n    int32_t iVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    \n    if (param_2 != NULL) {\ncode_r0x00436865:\n        if (param_2[2] != 0) goto code_r0x00436870;\n        if (*param_2[1] != 0x2a) {\n            puVar4 = 0x5257e8;\n            uVar2 = 0x20;\n            iVar3 = *(in_EAX + 0x100);\n            while( true ) {\n                if (iVar3 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar1 = 1;\n                    iVar3 = 0;\n                }\n                else {\n                    iVar1 = iVar3 + 1;\n                }\n                *(in_EAX + 0x100) = iVar1;\n                puVar4 = puVar4 + 1;\n                in_EAX[iVar3] = uVar2;\n                in_EAX[0x104] = uVar2;\n                if (puVar4 == 0x5257ea) break;\n                uVar2 = *puVar4;\n                iVar3 = iVar1;\n            }\n            fcn.00436490(0);\n            iVar3 = *(in_EAX + 0x100);\n            if (iVar3 != 0xff) {\n                iVar1 = iVar3 + 1;\n                *(in_EAX + 0x100) = iVar1;\n                in_EAX[iVar3] = 0x29;\n                in_EAX[0x104] = 0x29;\n                goto code_r0x00436890;\n            }\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *in_EAX = 0x29;\n            iVar1 = 1;\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            goto code_r0x0043689b;\n        }\n        fcn.00436490(0);\n        iVar3 = *(in_EAX + 0x100);\n        goto code_r0x004368af;\n    }\ncode_r0x0043688a:\n    iVar1 = *(in_EAX + 0x100);\ncode_r0x00436890:\n    if (iVar1 == 0xff) {\n        in_EAX[0xff] = 0;\n        (**(in_EAX + 0x108))();\n        *in_EAX = 0x20;\n        iVar3 = 1;\n        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\ncode_r0x004368b7:\n        iVar1 = iVar3 + 1;\n        *(in_EAX + 0x100) = iVar1;\n        in_EAX[iVar3] = 0x5b;\n        in_EAX[0x104] = 0x5b;\n        if (*param_1 != 0) {\ncode_r0x004368d1:\n            fcn.00430eb0();\n            iVar1 = *(in_EAX + 0x100);\n        }\n        if (iVar1 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar3 = 1;\n            iVar1 = 0;\n            goto code_r0x004368ea;\n        }\n    }\n    else {\ncode_r0x0043689b:\n        iVar3 = iVar1 + 1;\n        *(in_EAX + 0x100) = iVar3;\n        in_EAX[iVar1] = 0x20;\n        in_EAX[0x104] = 0x20;\ncode_r0x004368af:\n        if (iVar3 != 0xff) goto code_r0x004368b7;\n        in_EAX[0xff] = 0;\n        (**(in_EAX + 0x108))();\n        *in_EAX = 0x5b;\n        in_EAX[0x104] = 0x5b;\n        iVar3 = *param_1;\n        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n        *(in_EAX + 0x100) = 1;\n        if (iVar3 != 0) goto code_r0x004368d1;\n        iVar1 = 1;\n    }\n    iVar3 = iVar1 + 1;\ncode_r0x004368ea:\n    *(in_EAX + 0x100) = iVar3;\n    in_EAX[iVar1] = 0x5d;\n    in_EAX[0x104] = 0x5d;\n    return;\ncode_r0x00436870:\n    param_2 = *param_2;\n    if (param_2 == NULL) goto code_r0x00436876;\n    goto code_r0x00436865;\ncode_r0x00436876:\n    fcn.00436490(0);\n    goto code_r0x0043688a;\n}\n",
        "token_count": 1238
    },
    "00438330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00438330(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    piVar1 = in_EAX + *(in_EAX + 0x3c);\n    if (*piVar1 != 0x4550) {\n        return false;\n    }\n    return *(piVar1 + 6) == 0x10b;\n}\n",
        "token_count": 87
    },
    "00438440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00438440(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (*0x400000 != 0x5a4d) {\n        return 0;\n    }\n    iVar1 = fcn.00438330();\n    if (iVar1 != 0) {\n        iVar1 = *0x40003c + 0x400018 + *(*0x40003c + 0x400014);\n        if (*(*0x40003c + 0x400006) != 0) {\n            uVar2 = 0;\n            do {\n                if ((*(iVar1 + 0xc) <= param_1 - 0x400000U) && (param_1 - 0x400000U < *(iVar1 + 0xc) + *(iVar1 + 8))) {\n                    return iVar1;\n                }\n                uVar2 = uVar2 + 1;\n                iVar1 = iVar1 + 0x28;\n            } while (uVar2 != *(*0x40003c + 0x400006));\n        }\n    }\n    return 0;\n}\n",
        "token_count": 256
    },
    "004386d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004386d0(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint8_t uVar5;\n    int32_t iVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    \n    if (param_4 == 0) {\n        if (param_3 <= param_2) {\n            if (param_3 == 0) {\n                param_3 = 1 / 0;\n            }\n            return (param_2 % param_3 << 0x20 | param_1) / param_3 & 0xffffffff | param_2 / param_3 << 0x20;\n        }\n        uVar9 = 0;\n        iVar6 = CONCAT44(param_2, param_1) / param_3;\n    }\n    else {\n        if (param_2 < param_4) {\n            return 0;\n        }\n        uVar9 = 0x1f;\n        if (param_4 != 0) {\n            for (; param_4 >> uVar9 == 0; uVar9 = uVar9 - 1) {\n            }\n        }\n        uVar9 = uVar9 ^ 0x1f;\n        if (uVar9 == 0) {\n            if ((param_4 < param_2) || (iVar6 = 0,  param_3 <= param_1)) {\n                iVar6 = 1;\n            }\n        }\n        else {\n            uVar5 = uVar9;\n            uVar7 = 0x20 - uVar5;\n            uVar1 = param_4 << (uVar5 & 0x1f) | param_3 >> (uVar7 & 0x1f);\n            uVar2 = CONCAT44(param_2 >> (uVar7 & 0x1f), param_2 << (uVar5 & 0x1f) | param_1 >> (uVar7 & 0x1f));\n            uVar3 = uVar2 / uVar1;\n            iVar6 = uVar3;\n            uVar9 = uVar2 % uVar1;\n            iVar4 = (uVar3 & 0xffffffff) * (param_3 << (uVar5 & 0x1f));\n            uVar8 = iVar4 >> 0x20;\n            if ((uVar9 < uVar8) || ((param_1 << (uVar5 & 0x1f) < iVar4 && (uVar9 == uVar8)))) {\n                iVar6 = iVar6 + -1;\n                uVar9 = 0;\n            }\n            else {\n                uVar9 = 0;\n            }\n        }\n    }\n    return CONCAT44(uVar9, iVar6);\n}\n",
        "token_count": 654
    },
    "004387d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004387d0(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    \n    if (param_4 == 0) {\n        if (param_2 < param_3) {\n            uVar6 = CONCAT44(param_2, param_1) % param_3;\n        }\n        else {\n            if (param_3 == 0) {\n                param_3 = 1 / 0;\n            }\n            uVar6 = (param_2 % param_3 << 0x20 | param_1) % param_3;\n        }\n        return uVar6;\n    }\n    if (param_4 <= param_2) {\n        uVar6 = 0x1f;\n        if (param_4 != 0) {\n            for (; param_4 >> uVar6 == 0; uVar6 = uVar6 - 1) {\n            }\n        }\n        if ((uVar6 ^ 0x1f) != 0) {\n            uVar3 = uVar6 ^ 0x1f;\n            uVar4 = 0x20 - uVar3;\n            uVar5 = param_4 << (uVar3 & 0x1f) | param_3 >> (uVar4 & 0x1f);\n            param_3 = param_3 << (uVar3 & 0x1f);\n            uVar9 = param_1 << (uVar3 & 0x1f);\n            uVar1 = CONCAT44(param_2 >> (uVar4 & 0x1f), param_1 >> (uVar4 & 0x1f) | param_2 << (uVar3 & 0x1f));\n            uVar7 = uVar1 % uVar5;\n            iVar2 = (uVar1 / uVar5 & 0xffffffff) * param_3;\n            uVar8 = iVar2 >> 0x20;\n            uVar6 = iVar2;\n            if ((uVar7 < uVar8) || ((uVar7 == uVar8 && (uVar9 < uVar6)))) {\n                bVar10 = uVar6 < param_3;\n                uVar6 = uVar6 - param_3;\n                uVar8 = (uVar8 - uVar5) - bVar10;\n            }\n            uVar5 = (uVar7 - uVar8) - (uVar9 < uVar6);\n            return CONCAT44(uVar5 >> (uVar3 & 0x1f), uVar5 << (uVar4 & 0x1f) | uVar9 - uVar6 >> (uVar3 & 0x1f));\n        }\n        if ((param_4 < param_2) || (param_3 <= param_1)) {\n            bVar10 = param_1 < param_3;\n            param_1 = param_1 - param_3;\n            param_2 = (param_2 - param_4) - bVar10;\n        }\n        return CONCAT44(param_2, param_1);\n    }\n    return CONCAT44(param_2, param_1);\n}\n",
        "token_count": 778
    },
    "00438a50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438a50(uint *param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0xffffffff;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateSemaphoreW)(0, 0, 0xffff, 0);\n    param_1[1] = uVar1;\n    return;\n}\n",
        "token_count": 78
    },
    "00438b10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00438b10(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    LOCK();\n    iVar1 = *param_1;\n    *param_1 = *param_1 + -1;\n    if (iVar1 + -1 < 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(param_1[1], 1, 0);\n    return iVar1 == 0;\n}\n",
        "token_count": 107
    },
    "00438b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438b60(uint *param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0xffffffff;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateSemaphoreW)(0, 0, 0xffff, 0);\n    param_1[3] = uVar1;\n    return;\n}\n",
        "token_count": 100
    },
    "00438c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00438c80(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = param_1[1];\n    param_1[1] = iVar1 + -1;\n    if (iVar1 + -1 == 0) {\n        param_1[2] = 0;\n        LOCK();\n        iVar1 = *param_1;\n        *param_1 = *param_1 + -1;\n        if (-1 < iVar1 + -1) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(param_1[3], 1, 0);\n            return iVar1 == 0;\n        }\n    }\n    return false;\n}\n",
        "token_count": 156
    },
    "0043b2c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b2c0(int32_t param_1, code *param_2, int32_t param_3, int32_t param_4)\n\n{\n    uint *puVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    \n    iVar4 = param_3 * 2;\n    while( true ) {\n        iVar5 = iVar4 + 1;\n        if (param_4 <= iVar5) {\n            return;\n        }\n        puVar6 = param_1 + iVar5 * 4;\n        uVar3 = *puVar6;\n        if (iVar4 + 2 < param_4) {\n            puVar1 = param_1 + 4 + iVar5 * 4;\n            iVar2 = (*param_2)(in_EAX, uVar3, *puVar1);\n            if (iVar2 < 0) {\n                uVar3 = *puVar1;\n                iVar5 = iVar4 + 2;\n                puVar6 = puVar1;\n            }\n            else {\n                uVar3 = *puVar6;\n            }\n        }\n        puVar1 = param_1 + param_3 * 4;\n        iVar4 = (*param_2)(in_EAX, *puVar1, uVar3);\n        if (-1 < iVar4) break;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar6;\n        iVar4 = iVar5 * 2;\n        *puVar6 = uVar3;\n        param_3 = iVar5;\n    }\n    return;\n}\n",
        "token_count": 372
    },
    "0043b420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043b420(void)\n\n{\n    *0x56b40c = 0xffffffff;\n    *0x56b410 = (*_sym.imp.KERNEL32.dll_CreateSemaphoreW)(0, 0, 0xffff, 0);\n    return;\n}\n",
        "token_count": 61
    },
    "0043bb20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043bb20(void)\n\n{\n    int32_t iVar1;\n    uint32_t uStack36;\n    uint32_t auStack32 [4];\n    \n    fcn.0043b6a0();\n    fcn.0043b4b0();\n    fcn.0043b4f0(&uStack36);\n    fcn.0043b6a0();\n    fcn.0043b4b0();\n    fcn.0043b4f0(auStack32);\n    iVar1 = 1;\n    if (uStack36 <= auStack32[0]) {\n        iVar1 = -(uStack36 < auStack32[0]);\n    }\n    return iVar1;\n}\n",
        "token_count": 158
    },
    "0043cad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0043cad0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t *in_EAX;\n    int32_t iVar5;\n    \n    uVar4 = in_EAX[1];\n    iVar2 = *in_EAX;\n    if (uVar4 < 5) {\n        iVar5 = sub.msvcrt.dll_malloc(iVar2 + 4);\n        if (iVar5 == 0) {\ncode_r0x004014e0:\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n            if (iVar2 == 0) {\n                *0x4ce004 = 0x43c7d0;\n                pcVar3 = 0x43c580;\n            }\n            else {\n                *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n                pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n                pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"__register_frame_info\");\n                *0x4ce004 = (*pcVar1)(iVar2, \"__deregister_frame_info\");\n            }\n            if (pcVar3 != NULL) {\n                (*pcVar3)(0x52e0f8, 0x56b01c);\n            }\n            uVar4 = fcn.004014c0(fcn.00401590);\n            return uVar4;\n        }\n        *iVar5 = iVar5;\n        uVar4 = iVar5 + 4;\n        iVar5 = in_EAX[3];\n    }\n    else {\n        iVar5 = sub.msvcrt.dll_malloc(uVar4 + 3 + iVar2);\n        if (iVar5 == 0) goto code_r0x004014e0;\n        uVar4 = iVar5 + 3 + uVar4 & -uVar4;\n        *(uVar4 - 4) = iVar5;\n        iVar5 = in_EAX[3];\n    }\n    if (iVar5 != 0) {\n        sub.msvcrt.dll_memcpy(uVar4, iVar5);\n        return uVar4;\n    }\n    sub.msvcrt.dll_memset(uVar4, 0, iVar2);\n    return uVar4;\n}\n",
        "token_count": 551
    },
    "0043ddc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nunkbyte10 fcn.0043ddc0(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint uStack24;\n    uint uStack20;\n    ushort uStack16;\n    ushort uStack14;\n    \n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack14 = 0;\n    iVar1 = fcn.0043d410(param_1, &uStack24);\n    if (param_2 != NULL) {\n        *param_2 = param_1 + iVar1;\n    }\n    return CONCAT28(uStack16, CONCAT44(uStack20, uStack24));\n}\n",
        "token_count": 156
    },
    "0043de10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043de10(uchar *param_1, uint16_t param_2, int32_t param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint16_t auStack32 [8];\n    int32_t aiStack16 [4];\n    \n    auStack32[0] = param_2;\n    if (param_3 == 0) {\n        if (0xff < param_2) {\ncode_r0x0043de98:\n            puVar2 = sub.msvcrt.dll__errno();\n            *puVar2 = 0x2a;\n            return -1;\n        }\n        *param_1 = param_2;\n        iVar1 = 1;\n    }\n    else {\n        aiStack16[0] = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(param_3, 0, auStack32, 1, param_1, param_4, 0, aiStack16);\n        if ((iVar1 == 0) || (aiStack16[0] != 0)) goto code_r0x0043de98;\n    }\n    return iVar1;\n}\n",
        "token_count": 268
    },
    "0043deb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043deb0(uchar *param_1, ushort param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uchar auStack17 [5];\n    \n    if (param_1 == NULL) {\n        param_1 = auStack17;\n    }\n    uVar1 = sub.msvcrt.dll____mb_cur_max_func();\n    uVar2 = fcn.00447860();\n    fcn.0043de10(param_1, param_2, uVar2, uVar1);\n    return;\n}\n",
        "token_count": 120
    },
    "0043e010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043e010(ushort param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    int32_t iVar4;\n    uchar uStack19;\n    ushort uStack18;\n    uint auStack16 [4];\n    \n    auStack16[0] = 0;\n    uStack18 = param_1;\n    uVar1 = fcn.00447860();\n    iVar4 = 1;\n    puVar3 = &uStack18;\n    iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar1, 0, puVar3, 1, &uStack19, 1, 0, auStack16);\n    if ((iVar2 == 0) || (iVar4 != 0)) {\n        iVar2 = -1;\n    }\n    else {\n        iVar2 = puVar3 >> 8;\n    }\n    return iVar2;\n}\n",
        "token_count": 212
    },
    "0043e090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort fcn.0043e090(uint param_1)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    pcVar1 = \"alnum\";\n    iVar3 = 0;\n    while( true ) {\n        iVar2 = sub.msvcrt.dll_strcmp(param_1, pcVar1);\n        if (iVar2 == 0) {\n            return *(iVar3 * 8 + 0x5273a4);\n        }\n        iVar3 = iVar3 + 1;\n        if (iVar3 == 0xb) break;\n        pcVar1 = *(iVar3 * 8 + 0x5273a0);\n    }\n    return 0;\n}\n",
        "token_count": 155
    },
    "0043e700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043e700(int32_t param_1, int32_t param_2, uint param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        param_2 = param_2 + -1;\n        iVar1 = fcn.00443500(0, param_1, param_2, param_3, param_4);\n        if (iVar1 < param_2) {\n            param_2 = iVar1;\n        }\n        *(param_1 + param_2) = 0;\n        return;\n    }\n    fcn.00443500(0, param_1, 0, param_3, param_4);\n    return;\n}\n",
        "token_count": 163
    },
    "00441d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441d10(uint param_1, int32_t *param_2)\n\n{\n    uchar in_AL;\n    int32_t iVar1;\n    \n    if (((param_2[1] & 0x4000U) != 0) || (iVar1 = param_2[8],  param_2[9] != iVar1 && iVar1 <= param_2[9])) {\n        if ((param_2[1] & 0x2000U) != 0) {\n            sub.msvcrt.dll_fputc();\n            param_2[8] = param_2[8] + 1;\n            return;\n        }\n        *(*param_2 + param_2[8]) = in_AL;\n        iVar1 = param_2[8];\n    }\n    param_2[8] = iVar1 + 1;\n    return;\n}\n",
        "token_count": 191
    },
    "00441d70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441d70(int32_t param_1, int32_t param_2)\n\n{\n    ushort *in_EAX;\n    int32_t iVar1;\n    uchar *puVar2;\n    ushort *puStack68;\n    int32_t iStack64;\n    uchar auStack48 [4];\n    uchar auStack44 [28];\n    \n    fcn.0043deb0(auStack44, 0, auStack48);\n    iStack64 = *(param_1 + 0xc);\n    if ((param_2 <= iStack64) || (iStack64 < 0)) {\n        iStack64 = param_2;\n    }\n    puStack68 = in_EAX;\n    if (iStack64 < *(param_1 + 8)) {\n        iVar1 = *(param_1 + 8) - iStack64;\n        *(param_1 + 8) = iVar1;\n        if ((*(param_1 + 5) & 4) == 0) {\n            *(param_1 + 8) = iVar1 + -1;\n            do {\n                fcn.00441d10();\n                iVar1 = *(param_1 + 8);\n                *(param_1 + 8) = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    else {\n        *(param_1 + 8) = 0xffffffff;\n    }\n    for (; 0 < iStack64; iStack64 = iStack64 + -1) {\n        iVar1 = fcn.0043deb0(auStack44, *puStack68, auStack48);\n        if (iVar1 < 1) break;\n        puVar2 = auStack44;\n        do {\n            puVar2 = puVar2 + 1;\n            fcn.00441d10();\n        } while (puVar2 != auStack44 + iVar1);\n        puStack68 = puStack68 + 1;\n    }\n    while (iVar1 = *(param_1 + 8),  *(param_1 + 8) = iVar1 + -1,  0 < iVar1) {\n        fcn.00441d10();\n    }\n    return;\n}\n",
        "token_count": 482
    },
    "00441e90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441e90(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + 0xc);\n    if ((param_2 <= iVar2) || (iVar2 < 0)) {\n        iVar2 = param_2;\n    }\n    if (iVar2 < *(param_1 + 8)) {\n        iVar1 = *(param_1 + 8) - iVar2;\n        *(param_1 + 8) = iVar1;\n        if ((*(param_1 + 5) & 4) == 0) {\n            *(param_1 + 8) = iVar1 + -1;\n            do {\n                fcn.00441d10();\n                iVar1 = *(param_1 + 8);\n                *(param_1 + 8) = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        if (iVar2 == 0) goto code_r0x00441eed;\n    }\n    else {\n        *(param_1 + 8) = 0xffffffff;\n        if (iVar2 == 0) {\n            *(param_1 + 8) = 0xfffffffe;\n            return;\n        }\n    }\n    iVar2 = iVar2 + in_EAX;\n    do {\n        in_EAX = in_EAX + 1;\n        fcn.00441d10();\n    } while (in_EAX != iVar2);\n    iVar2 = *(param_1 + 8);\n    *(param_1 + 8) = iVar2 + -1;\n    while (0 < iVar2) {\n        fcn.00441d10();\ncode_r0x00441eed:\n        iVar2 = *(param_1 + 8);\n        *(param_1 + 8) = iVar2 + -1;\n    }\n    return;\n}\n",
        "token_count": 426
    },
    "00441f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441f50(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    int32_t iVar2;\n    \n    if (in_EAX == 0) {\n        in_EAX = 0x5276e0;\n    }\n    if (*(param_2 + 0xc) < 0) {\n        iVar1 = sub.msvcrt.dll_strlen(in_EAX);\n    }\n    else {\n        iVar1 = fcn.004474b0(in_EAX, *(param_2 + 0xc));\n    }\n    iVar2 = *(param_2 + 0xc);\n    if ((iVar1 <= iVar2) || (iVar2 < 0)) {\n        iVar2 = iVar1;\n    }\n    if (iVar2 < *(param_2 + 8)) {\n        iVar1 = *(param_2 + 8) - iVar2;\n        *(param_2 + 8) = iVar1;\n        if ((*(param_2 + 5) & 4) == 0) {\n            *(param_2 + 8) = iVar1 + -1;\n            do {\n                fcn.00441d10(unaff_EBX, unaff_ESI);\n                iVar1 = *(param_2 + 8);\n                *(param_2 + 8) = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        if (iVar2 == 0) goto code_r0x00441eed;\n    }\n    else {\n        *(param_2 + 8) = 0xffffffff;\n        if (iVar2 == 0) {\n            *(param_2 + 8) = 0xfffffffe;\n            return;\n        }\n    }\n    iVar2 = iVar2 + in_EAX;\n    do {\n        in_EAX = in_EAX + 1;\n        fcn.00441d10(unaff_EBX, unaff_ESI);\n    } while (in_EAX != iVar2);\n    iVar1 = *(param_2 + 8);\n    *(param_2 + 8) = iVar1 + -1;\n    while (0 < iVar1) {\n        fcn.00441d10(unaff_EBX, unaff_ESI);\ncode_r0x00441eed:\n        iVar1 = *(param_2 + 8);\n        *(param_2 + 8) = iVar1 + -1;\n    }\n    return;\n}\n",
        "token_count": 550
    },
    "00442050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00442050(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    ulong uVar6;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_bp_ch;\n    uint uStack80;\n    uchar *apuStack76 [2];\n    int32_t iStack68;\n    uint *puStack64;\n    uchar auStack60 [12];\n    uchar *var_2ch_2;\n    int16_t var_1eh_2;\n    uint var_1ch_2;\n    \n    var_2ch_2 = &stack0xffffffb4;\n    if (*(in_EAX + 0x10) == -3) {\n        var_1ch_2 = 0;\n        uStack80 = 0x4420e0;\n        puVar3 = sub.msvcrt.dll_localeconv();\n        puStack64 = &fcn.00442050::var_1ch_2;\n        iStack68 = 0x10;\n        apuStack76[1] = *puVar3;\n        apuStack76[0] = &stack0xffffffde;\n        uStack80 = 0x442100;\n        iVar4 = fcn.0043d240();\n        if (iVar4 < 1) {\n            var_1eh_2 = *(in_EAX + 0x14);\n        }\n        else {\n            *(in_EAX + 0x14) = var_1eh_2;\n        }\n        *(in_EAX + 0x10) = iVar4;\n    }\n    else {\n        var_1eh_2 = *(in_EAX + 0x14);\n    }\n    if (var_1eh_2 == 0) {\n        uStack80 = 0x4420cc;\n        fcn.00441d10();\n        return;\n    }\n    uStack80 = 0x44207b;\n    uVar6 = fcn.004386a0();\n    iVar4 = -uVar6;\n    var_1ch_2 = 0;\n    puVar5 = &stack0xffffffc4 + iVar4;\n    *(&stack0xffffffb8 + iVar4) = uVar6 >> 0x20;\n    *(&stack0xffffffbc + iVar4) = &fcn.00442050::var_1ch_2;\n    *(&stack0xffffffb4 + iVar4) = puVar5;\n    *(&stack0xffffffb0 + iVar4) = 0x44209b;\n    iVar2 = fcn.0043deb0();\n    if (iVar2 < 1) {\n        *(&stack0xffffffb0 + iVar4) = 0x442120;\n        fcn.00441d10();\n    }\n    else {\n        puVar1 = puVar5 + iVar2;\n        do {\n            puVar5 = puVar5 + 1;\n            *(&stack0xffffffb0 + iVar4) = 0x4420b0;\n            fcn.00441d10();\n        } while (puVar5 != puVar1);\n    }\n    return;\n}\n",
        "token_count": 721
    },
    "004424a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004424a0(unkbyte10 param_1)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iStack32;\n    uint uStack28;\n    uint uStack24;\n    ushort uStack20;\n    ushort uStack18;\n    \n    if (*(in_EAX + 0xc) < 0) {\n        *(in_EAX + 0xc) = 6;\n    }\n    uStack28 = param_1;\n    uStack24 = param_1 >> 0x20;\n    uStack20 = param_1 >> 0x40;\n    uVar2 = fcn.00441c10(uStack28, uStack24, CONCAT22(uStack18, uStack20));\n    if (iStack32 != -0x8000) {\n        fcn.00442130();\n        while (iVar1 = *(in_EAX + 8),  *(in_EAX + 8) = iVar1 + -1,  0 < iVar1) {\n            fcn.00441d10();\n        }\n        fcn.00443ec0(uVar2);\n        return;\n    }\n    fcn.00441fb0();\n    fcn.00443ec0(uVar2);\n    return;\n}\n",
        "token_count": 284
    },
    "00442950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00442950(unkbyte10 param_1)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iStack32;\n    uint uStack28;\n    uint uStack24;\n    ushort uStack20;\n    ushort uStack18;\n    \n    if (*(in_EAX + 0xc) < 0) {\n        *(in_EAX + 0xc) = 6;\n    }\n    uStack28 = param_1;\n    uStack24 = param_1 >> 0x20;\n    uStack20 = param_1 >> 0x40;\n    uVar1 = fcn.00441c10(uStack28, uStack24, CONCAT22(uStack18, uStack20));\n    if (iStack32 == -0x8000) {\n        fcn.00441fb0();\n        fcn.00443ec0(uVar1);\n        return;\n    }\n    fcn.00442870();\n    fcn.00443ec0(uVar1);\n    return;\n}\n",
        "token_count": 227
    },
    "00442a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00442a00(unkbyte10 param_1)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iStack32;\n    uint uStack28;\n    uint uStack24;\n    ushort uStack20;\n    ushort uStack18;\n    \n    if (*(in_EAX + 0xc) < 0) {\n        *(in_EAX + 0xc) = 6;\n    }\n    else if (*(in_EAX + 0xc) == 0) {\n        *(in_EAX + 0xc) = 1;\n    }\n    uStack28 = param_1;\n    uStack24 = param_1 >> 0x20;\n    uStack20 = param_1 >> 0x40;\n    uVar1 = fcn.00441c10(uStack28, uStack24, CONCAT22(uStack18, uStack20));\n    if (iStack32 != -0x8000) {\n        uVar2 = *(in_EAX + 4) & 0x800;\n        if ((-4 < iStack32) && (iStack32 <= *(in_EAX + 0xc))) {\n            if (uVar2 == 0) {\n                iVar3 = sub.msvcrt.dll_strlen(uVar1);\n                iVar3 = iVar3 - iStack32;\n                *(in_EAX + 0xc) = iVar3;\n                if ((iVar3 < 0) && (0 < *(in_EAX + 8))) {\n                    *(in_EAX + 8) = iVar3 + *(in_EAX + 8);\n                }\n            }\n            else {\n                *(in_EAX + 0xc) = *(in_EAX + 0xc) - iStack32;\n            }\n            fcn.00442130();\n            while (iVar3 = *(in_EAX + 8),  *(in_EAX + 8) = iVar3 + -1,  0 < iVar3) {\n                fcn.00441d10();\n            }\n            fcn.00443ec0(uVar1);\n            return;\n        }\n        if (uVar2 == 0) {\n            iVar3 = sub.msvcrt.dll_strlen(uVar1);\n            *(in_EAX + 0xc) = iVar3 + -1;\n        }\n        else {\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + -1;\n        }\n        fcn.00442870();\n        fcn.00443ec0(uVar1);\n        return;\n    }\n    fcn.00441fb0();\n    fcn.00443ec0(uVar1);\n    return;\n}\n",
        "token_count": 595
    },
    "00443e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00443e00(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (0x13 < param_1) {\n        iVar1 = 4;\n        do {\n            iVar1 = iVar1 * 2;\n            iVar3 = iVar3 + 1;\n        } while (iVar1 + 0xf < param_1);\n    }\n    piVar2 = fcn.00446700(iVar3);\n    *piVar2 = iVar3;\n    return piVar2 + 1;\n}\n",
        "token_count": 144
    },
    "00443e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00443e40(char *param_1, int32_t **param_2, int32_t param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    \n    if (param_3 < 0x14) {\n        iVar5 = 0;\n    }\n    else {\n        iVar2 = 4;\n        iVar5 = 0;\n        do {\n            iVar2 = iVar2 * 2;\n            iVar5 = iVar5 + 1;\n        } while (iVar2 + 0xf < param_3);\n    }\n    piVar3 = fcn.00446700(iVar5);\n    *piVar3 = iVar5;\n    cVar1 = *param_1;\n    *(piVar3 + 1) = cVar1;\n    piVar4 = piVar3 + 1;\n    while (cVar1 != '\\0') {\n        param_1 = param_1 + 1;\n        cVar1 = *param_1;\n        piVar4 = piVar4 + 1;\n        *piVar4 = cVar1;\n    }\n    if (param_2 != NULL) {\n        *param_2 = piVar4;\n    }\n    return piVar3 + 1;\n}\n",
        "token_count": 301
    },
    "00446190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00446190(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    \n    puVar5 = param_1 + 0x14;\n    puVar1 = puVar5 + *(param_1 + 0x10);\n    if (puVar1 <= puVar5) {\n        return 0;\n    }\n    uVar2 = *(param_1 + 0x14);\n    iVar4 = 0;\n    while( true ) {\n        if (uVar2 != 0) {\n            iVar3 = 0;\n            for (; (uVar2 & 1) == 0; uVar2 = uVar2 >> 1 | 0x80000000) {\n                iVar3 = iVar3 + 1;\n            }\n            return iVar4 + iVar3;\n        }\n        puVar5 = puVar5 + 1;\n        iVar4 = iVar4 + 0x20;\n        if (puVar1 <= puVar5) break;\n        uVar2 = *puVar5;\n    }\n    return iVar4;\n}\n",
        "token_count": 268
    },
    "004461e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004461e0(void)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar2 = 0x30;\n    iVar3 = 0;\n    do {\n        *(uVar2 + 0x56be00) = iVar3 + '\\x10';\n        puVar1 = iVar3 + 0x5278e7;\n        uVar2 = *puVar1;\n        iVar3 = iVar3 + 1;\n    } while (*puVar1 != 0);\n    uVar2 = 0x61;\n    iVar3 = 0;\n    do {\n        *(uVar2 + 0x56be00) = iVar3 + '\\x1a';\n        puVar1 = iVar3 + 0x5278e0;\n        uVar2 = *puVar1;\n        iVar3 = iVar3 + 1;\n    } while (*puVar1 != 0);\n    uVar2 = 0x41;\n    iVar3 = 0;\n    do {\n        *(uVar2 + 0x56be00) = iVar3 + '\\x1a';\n        puVar1 = iVar3 + 0x5278d9;\n        uVar2 = *puVar1;\n        iVar3 = iVar3 + 1;\n    } while (*puVar1 != 0);\n    return;\n}\n",
        "token_count": 307
    },
    "00446840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00446840(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    \n    iVar6 = 0;\n    iVar1 = *(param_1 + 0x10);\n    iVar7 = param_3 >> 0x1f;\n    do {\n        uVar2 = *(param_1 + 0x14 + iVar6 * 4);\n        iVar3 = uVar2 * param_2;\n        uVar4 = iVar3;\n        iVar5 = uVar4 + param_3;\n        param_3 = (iVar3 >> 0x20) + (param_2 >> 0x1f) * uVar2 + iVar7 + CARRY4(uVar4, param_3);\n        *(param_1 + 0x14 + iVar6 * 4) = iVar5;\n        iVar7 = 0;\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < iVar1);\n    if (param_3 != 0) {\n        if (*(param_1 + 8) == iVar1 || *(param_1 + 8) < iVar1) {\n            iVar6 = fcn.00446700(*(param_1 + 4) + 1);\n            if (iVar6 == 0) {\n                return 0;\n            }\n            sub.msvcrt.dll_memcpy(iVar6 + 0xc, param_1 + 0xc, *(param_1 + 0x10) * 4 + 8);\n            fcn.004467d0(param_1);\n            param_1 = iVar6;\n        }\n        *(param_1 + 0x14 + iVar1 * 4) = param_3;\n        *(param_1 + 0x10) = iVar1 + 1;\n    }\n    return param_1;\n}\n",
        "token_count": 456
    },
    "00446930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00446930(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00446700(1);\n    if (iVar1 != 0) {\n        *(iVar1 + 0x10) = 1;\n        *(iVar1 + 0x14) = param_1;\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "00446960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00446960(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    uint32_t *puVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t *puVar13;\n    int32_t iVar15;\n    uint32_t *puVar16;\n    int32_t iVar17;\n    uint32_t uStack76;\n    uint32_t *puStack64;\n    uint32_t *puStack52;\n    int32_t iStack44;\n    uint32_t *puVar14;\n    \n    iVar17 = *(param_1 + 0x10);\n    iVar3 = *(param_2 + 0x10);\n    iVar12 = iVar3;\n    iVar15 = param_2;\n    if (iVar17 < iVar3) {\n        iVar12 = iVar17;\n        iVar15 = param_1;\n        param_1 = param_2;\n        iVar17 = iVar3;\n    }\n    iVar3 = iVar17 + iVar12;\n    iVar7 = fcn.00446700((*(param_1 + 8) < iVar3) + *(param_1 + 4));\n    if (iVar7 != 0) {\n        puStack52 = iVar7 + 0x14;\n        puVar1 = puStack52 + iVar3;\n        for (puVar8 = puStack52; puVar8 < puVar1; puVar8 = puVar8 + 1) {\n            *puVar8 = 0;\n        }\n        puVar8 = iVar15 + 0x14;\n        puVar2 = puVar8 + iVar12;\n        while (puStack64 = puVar8,  puVar8 < puVar2) {\n            while( true ) {\n                puVar8 = puStack64 + 1;\n                uVar4 = *puStack64;\n                if (uVar4 == 0) break;\n                uStack76 = 0;\n                puVar13 = param_1 + 0x14;\n                puVar6 = puStack52;\n                do {\n                    puVar16 = puVar6;\n                    puVar14 = puVar13 + 1;\n                    iVar5 = uVar4 * *puVar13;\n                    uVar9 = iVar5;\n                    uVar10 = uVar9 + *puVar16;\n                    uVar11 = uVar10 + uStack76;\n                    uStack76 = (iVar5 >> 0x20) + CARRY4(uVar9, *puVar16) + CARRY4(uVar10, uStack76);\n                    *puVar16 = uVar11;\n                    puVar13 = puVar14;\n                    puVar6 = puVar16 + 1;\n                } while (puVar14 < param_1 + 0x14 + iVar17);\n                puStack52 = puStack52 + 1;\n                puVar16[1] = uStack76;\n                puStack64 = puVar8;\n                if (puVar2 <= puVar8) goto code_r0x00446a7f;\n            }\n            puStack52 = puStack52 + 1;\n        }\ncode_r0x00446a7f:\n        iStack44 = iVar3;\n        if (0 < iVar3) {\n            uVar4 = puVar1[-1];\n            iVar17 = iVar3;\n            while ((iStack44 = iVar17,  uVar4 == 0 && (iStack44 = iVar17 + -1,  iStack44 != 0))) {\n                uVar4 = puVar1[(iVar17 + -2) - iVar3];\n                iVar17 = iStack44;\n            }\n        }\n        *(iVar7 + 0x10) = iStack44;\n    }\n    return iVar7;\n}\n",
        "token_count": 889
    },
    "00447370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00447370(char **param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    \n    pcVar3 = *param_1;\n    do {\n        cVar1 = *param_2;\n        pcVar3 = pcVar3 + 1;\n        if (cVar1 == 0) {\n            *param_1 = pcVar3;\n            return 1;\n        }\n        iVar2 = *pcVar3;\n        if (iVar2 - 0x41U < 0x1a) {\n            iVar2 = iVar2 + 0x20;\n        }\n        param_2 = param_2 + 1;\n    } while (iVar2 == cVar1);\n    return 0;\n}\n",
        "token_count": 176
    },
    "004c3840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c3840(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int32_t *extraout_EDX;\n    int32_t **ppiVar6;\n    int32_t *unaff_EDI;\n    ulong uVar7;\n    int32_t iStack32;\n    \n    if ((param_1 - 0x60U <= *0x515d24) || (*0x515d24 + *0x515d28 <= param_1 - 0x60U)) {\n    // WARNING: Could not recover jumptable at 0x00447658. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_free)();\n        return;\n    }\n    if ((*0x515a34 == 0) || (iVar2 = fcn.00438ab0(0x515d18),  iVar2 == 0)) {\n        unaff_EDI = param_1 + -0x70;\n        if (*0x515d20 == NULL) goto code_r0x00448af0;\n        iStack32 = *(param_1 + -0x70);\n        piVar1 = unaff_EDI + iStack32;\n        if (piVar1 < *0x515d20) goto code_r0x00448af0;\n        piVar3 = (*0x515d20)[1];\n        if (*0x515d20 == piVar1) {\n            iVar2 = **0x515d20;\n            *(param_1 + -0x6c) = piVar3;\n            *(param_1 + -0x70) = iStack32 + iVar2;\n            *0x515d20 = unaff_EDI;\n            goto joined_r0x00448ad0;\n        }\n        piVar4 = *0x515d20;\n        if (piVar3 == NULL) {\n            piVar3 = NULL;\n            ppiVar6 = 0x515d20;\n        }\n        else {\n            piVar5 = *0x515d20;\n            if (piVar1 < piVar3) {\n                do {\n                    piVar4 = piVar3;\n                    piVar3 = piVar4[1];\n                    ppiVar6 = piVar5 + 1;\n                    if (piVar3 == NULL) break;\n                    piVar5 = piVar4;\n                } while (piVar1 < piVar3);\n            }\n            else {\n                ppiVar6 = 0x515d20;\n            }\n        }\n        if (piVar3 == piVar1) {\n            iStack32 = iStack32 + *piVar3;\n            piVar4[1] = piVar3[1];\n        }\n        piVar1 = *ppiVar6;\n        uVar7 = CONCAT44(*piVar1, piVar1);\n        if (unaff_EDI != piVar1 + *piVar1) {\n            *(param_1 + -0x6c) = piVar1[1];\n            piVar1 = *ppiVar6;\n            *(param_1 + -0x70) = iStack32;\n            piVar1[1] = unaff_EDI;\n            goto joined_r0x00448ad0;\n        }\n    }\n    else {\n        uVar7 = fcn.0044a4d0();\n    }\n    *uVar7 = (uVar7 >> 0x20) + iStack32;\njoined_r0x00448ad0:\n    while ((*0x515a34 != 0 && (iVar2 = fcn.00438b10(0x515d18),  iVar2 != 0))) {\n        fcn.0044a500();\n        *0x515d20 = extraout_EDX;\ncode_r0x00448af0:\n        *(param_1 + -0x6c) = *0x515d20;\n        *0x515d20 = unaff_EDI;\n    }\n    return;\n}\n",
        "token_count": 906
    },
    "00448900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00448900(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x515bf0 != '\\0') {\n        return 0x5174e0;\n    }\n    iVar1 = fcn.004c38f0(0x515bf0);\n    if (iVar1 != 0) {\n        if (*0x515a34 != 0) {\n            fcn.00438a50(0x5174e0);\n        }\n        fcn.004c39d0(0x515bf0);\n        fcn.004014c0(0x4c42f0);\n    }\n    return 0x5174e0;\n}\n",
        "token_count": 150
    },
    "004489c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004489c0(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x515bf8 != '\\0') {\n        return 0x5174f0;\n    }\n    iVar1 = fcn.004c38f0(0x515bf8);\n    if (iVar1 == 0) {\n        return 0x5174f0;\n    }\n    fcn.004c39d0(0x515bf8);\n    fcn.004014c0(0x4c4350);\n    return 0x5174f0;\n}\n",
        "token_count": 129
    },
    "00448d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00448d60(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    uint var_3ch;\n    uint var_30h;\n    \n    (*_sym.imp.KERNEL32.dll_FreeConsole)();\n    fcn.004030c4();\n    *in_ECX = *in_ECX + arg_8h;\n    in_ECX[1] = in_ECX[1] + arg_ch;\n    return in_ECX;\n}\n",
        "token_count": 115
    },
    "0044b380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0044b380(int32_t *param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = sub.msvcrt.dll_strerror(param_3);\n    *param_1 = param_1 + 2;\n    iVar2 = -1;\n    if (iVar1 != 0) {\n        iVar2 = sub.msvcrt.dll_strlen(iVar1);\n        iVar2 = iVar2 + iVar1;\n    }\n    fcn.004b0ab0(iVar1, iVar2, 0);\n    return param_1;\n}\n",
        "token_count": 145
    },
    "0044c6f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0044c6f0(int32_t *param_1, char param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_1;\n    if (param_3 < *(iVar2 + -0xc)) {\n        cVar1 = *(iVar2 + param_3);\n        while (param_2 == cVar1) {\n            param_3 = param_3 + 1;\n            if (param_3 == *(iVar2 + -0xc)) goto code_r0x0044c71e;\n            cVar1 = *(iVar2 + param_3);\n        }\n    }\n    else {\ncode_r0x0044c71e:\n        param_3 = 0xffffffff;\n    }\n    return param_3;\n}\n",
        "token_count": 187
    },
    "0044e910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.0044e910(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    uint32_t in_stack_ffffffb4;\n    uint *puVar2;\n    int32_t var_24h;\n    int32_t var_20h;\n    code *pcStack32;\n    code *var_ch;\n    uint var_bp_8h;\n    \n    var_ch = NULL;\n    puVar2 = &var_24h;\n    fcn.004947d0(in_stack_ffffffb4 & 0xffffff00, *(arg_8h + 0xc), &var_24h, arg_ch, arg_10h);\n    if (var_ch != NULL) {\n        *in_ECX = in_ECX + 2;\n        fcn.004b0ab0(var_24h, var_20h + var_24h, puVar2 & 0xffffff00);\n        if (var_ch != NULL) {\n            (*var_ch)(&var_24h);\n        }\n        return;\n    }\n    uVar1 = fcn.004be9d0(\"uninitialized __any_string\");\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0043b0b0(uVar1);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0043b0b0(uVar1);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0043b0b0(uVar1);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0043b0b0(uVar1);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(&var_24h);\n    }\n    fcn.0043b0b0(uVar1);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(&var_24h);\n    }\n    fcn.0043b0b0(uVar1);\n    fcn.004af220();\n    fcn.004c33f0(uVar1);\n    fcn.0043b0b0(&var_24h);\n    fcn.004af220();\n    fcn.004c33f0(uVar1);\n    fcn.0043b0b0(&var_24h);\n    fcn.004af220();\n    do {\n        fcn.004c33f0(uVar1);\n        fcn.0043b0b0(&var_24h);\n        fcn.004c33f0(uVar1);\n        fcn.0043b0b0(&var_24h);\n        fcn.00453c10();\n        fcn.004afd30();\n    } while( true );\n}\n",
        "token_count": 670
    },
    "0044eb40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.0044eb40(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    uint32_t in_stack_ffffffb4;\n    uint *puVar2;\n    int32_t var_24h;\n    int32_t var_20h;\n    code *pcStack32;\n    code *var_ch;\n    uint var_bp_8h;\n    \n    var_ch = NULL;\n    puVar2 = &var_24h;\n    fcn.00493f70(in_stack_ffffffb4 & 0xffffff00, *(arg_8h + 0x10), &var_24h, arg_ch, arg_10h, arg_14h, *arg_18h, \n                 arg_18h[1]);\n    if (var_ch != NULL) {\n        *in_ECX = in_ECX + 2;\n        fcn.004b0ab0(var_24h, var_20h + var_24h, puVar2 & 0xffffff00);\n        if (var_ch != NULL) {\n            (*var_ch)(&var_24h);\n        }\n        return;\n    }\n    uVar1 = fcn.004be9d0(\"uninitialized __any_string\");\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0043b0b0(uVar1);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0043b0b0(uVar1);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0043b0b0(uVar1);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(&var_24h);\n    }\n    fcn.0043b0b0(uVar1);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(&var_24h);\n    }\n    fcn.0043b0b0(uVar1);\n    fcn.004af220();\n    fcn.004c33f0(uVar1);\n    fcn.0043b0b0(&var_24h);\n    fcn.004af220();\n    fcn.004c33f0(uVar1);\n    fcn.0043b0b0(&var_24h);\n    fcn.004af220();\n    do {\n        fcn.004c33f0(uVar1);\n        fcn.0043b0b0(&var_24h);\n        fcn.004c33f0(uVar1);\n        fcn.0043b0b0(&var_24h);\n        fcn.00453c10();\n        fcn.004afd30();\n    } while( true );\n}\n",
        "token_count": 668
    },
    "0044ffa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0044ffa0(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch)\n\n{\n    float10 fVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    uint in_stack_00000054;\n    uint in_stack_00000058;\n    uint in_stack_0000005c;\n    uint in_stack_00000060;\n    uint in_stack_00000064;\n    uint in_stack_00000068;\n    uint in_stack_0000006c;\n    uint32_t in_stack_ffffff78;\n    uint32_t in_stack_ffffff8c;\n    ushort in_stack_ffffff9e;\n    uint in_stack_ffffffa4;\n    uint in_stack_ffffffa8;\n    uint in_stack_ffffffac;\n    uint in_stack_ffffffb0;\n    uint in_stack_ffffffb4;\n    uint in_stack_ffffffb8;\n    uint var_40h;\n    uint var_3ch;\n    uint in_stack_ffffffc4;\n    uint *var_34h;\n    uint in_stack_ffffffcc;\n    uint var_2ch;\n    uint in_stack_ffffffd4;\n    uint in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    uint var_1ch;\n    uint in_stack_ffffffe4;\n    uint in_stack_ffffffe8;\n    uint in_stack_ffffffec;\n    uint var_bp_ch;\n    \n    var_34h = &var_2ch;\n    fcn.004b0b70(*arg_1ch, arg_1ch[1] + *arg_1ch, in_stack_ffffff8c & 0xffffff00);\n    var_40h._0_1_ = arg_18h;\n    fVar1 = 0;\n    uVar2 = fcn.004921b0(in_stack_ffffff78 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h & 0xff, arg_14h, var_40h\n                         , SUB104(fVar1, 0), fVar1 >> 0x20, CONCAT22(in_stack_ffffff9e, fVar1 >> 0x40), &var_34h, \n                         in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, in_stack_ffffffb0, in_stack_ffffffb4, \n                         in_stack_ffffffb8, arg_18h, var_3ch, in_stack_ffffffc4, var_34h, in_stack_ffffffcc, var_2ch, \n                         in_stack_ffffffd4, in_stack_ffffffd8, in_stack_ffffffdc, 0x493ec0, in_stack_ffffffe4, \n                         in_stack_ffffffe8, in_stack_ffffffec, unaff_EBX, unaff_ESI, unaff_EDI, unaff_EBP, unaff_retaddr\n                         , arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, in_stack_0000001c, in_stack_00000020, \n                         in_stack_00000024, in_stack_00000028, in_stack_0000002c, in_stack_00000030, in_stack_00000034, \n                         in_stack_00000038, in_stack_0000003c, in_stack_00000040, in_stack_00000044, in_stack_00000048, \n                         in_stack_0000004c, in_stack_00000050, in_stack_00000054, in_stack_00000058, in_stack_0000005c, \n                         in_stack_00000060, in_stack_00000064, in_stack_00000068, in_stack_0000006c);\n    (*0x493ec0)(&var_34h);\n    return uVar2;\n}\n",
        "token_count": 1147
    },
    "00450bd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00450bd0(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    \n    piVar1 = *param_1;\n    bVar4 = piVar1 != NULL && *(param_1 + 1) == -1;\n    bVar5 = *(param_1 + 1) == -1;\n    if (bVar4) {\n        if (piVar1[2] < piVar1[3]) {\n            in_EAX = *piVar1[2];\n        }\n        else {\n            in_EAX = (**(*piVar1 + 0x24))();\n        }\n        bVar5 = false;\n        if (in_EAX == -1) {\n            *param_1 = NULL;\n            bVar5 = bVar4;\n        }\n    }\n    piVar1 = *param_2;\n    uVar3 = in_EAX & 0xffffff00;\n    bVar2 = piVar1 != NULL && *(param_2 + 1) == -1;\n    bVar4 = *(param_2 + 1) == -1;\n    if (bVar2) {\n        if (piVar1[2] < piVar1[3]) {\n            uVar3 = *piVar1[2];\n        }\n        else {\n            uVar3 = (**(*piVar1 + 0x24))();\n        }\n        bVar4 = false;\n        if (uVar3 == -1) {\n            *param_2 = NULL;\n            bVar4 = bVar2;\n        }\n    }\n    return uVar3 & 0xffffff00 | bVar5 == bVar4;\n}\n",
        "token_count": 409
    },
    "00450c70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00450c70(uint param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    \n    piVar1 = *in_EAX;\n    if ((param_2 == -1) && (piVar1 != NULL)) {\n        if (piVar1[2] < piVar1[3]) {\n            param_2 = *piVar1[2];\n        }\n        else {\n            param_2 = (**(*piVar1 + 0x24))();\n        }\n        if (param_2 == -1) {\n            *in_EAX = NULL;\n        }\n    }\n    return param_2;\n}\n",
        "token_count": 157
    },
    "00450cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00450cc0(uint param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    \n    piVar1 = *in_EAX;\n    if ((param_2 == -1) && (piVar1 != NULL)) {\n        if (piVar1[2] < piVar1[3]) {\n            param_2 = *piVar1[2];\n        }\n        else {\n            param_2 = (**(*piVar1 + 0x24))();\n        }\n        if (param_2 == -1) {\n            *in_EAX = NULL;\n        }\n    }\n    return param_2;\n}\n",
        "token_count": 157
    },
    "004522b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004522b0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (iVar1 == 0) {\n        if (*0x515a34 == 0) {\n            iVar1 = *0x516f0c + 1;\n            *0x516f0c = iVar1;\n            *param_1 = iVar1;\n        }\n        else {\n            LOCK();\n            iVar1 = *0x516f0c + 1;\n            *0x516f0c = *0x516f0c + 1;\n            *param_1 = iVar1;\n        }\n    }\n    return iVar1 + -1;\n}\n",
        "token_count": 163
    },
    "004552a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.004552a0(int32_t *param_1, char param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    \n    if (param_3 < param_1[1]) {\n        cVar1 = *(*param_1 + param_3);\n        while (param_2 == cVar1) {\n            param_3 = param_3 + 1;\n            if (param_3 == param_1[1]) goto code_r0x004552ce;\n            cVar1 = *(*param_1 + param_3);\n        }\n    }\n    else {\ncode_r0x004552ce:\n        param_3 = 0xffffffff;\n    }\n    return param_3;\n}\n",
        "token_count": 163
    },
    "004557a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004557a0(uint *param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar1 = param_1[1];\n    uVar2 = sub.msvcrt.dll_strlen(param_2);\n    uVar3 = uVar1;\n    if (uVar2 <= uVar1) {\n        uVar3 = uVar2;\n    }\n    if ((uVar3 != 0) && (iVar4 = sub.msvcrt.dll_memcmp(*param_1, param_2, uVar3),  iVar4 != 0)) {\n        return iVar4;\n    }\n    return uVar1 - uVar2;\n}\n",
        "token_count": 177
    },
    "00456af0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00456af0(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll_strcoll(param_1, param_2);\n    return iVar1 != 0 | iVar1 >> 0x1e;\n}\n",
        "token_count": 67
    },
    "00456b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00456bf2)\n\nint32_t __cdecl fcn.00456b20(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    puVar5 = &fcn.00456b20::var_40h;\n    uVar7 = 0x456b4c;\n    fcn.004b0ab0(arg_8h, arg_ch, 0);\n    var_30h = &fcn.00456b20::var_28h;\n    fcn.004b0ab0(arg_10h, arg_14h, uVar7 & 0xffffff00);\n    iVar1 = var_44h + puVar5;\n    var_2ch = var_2ch + var_30h;\n    puVar6 = var_30h;\n    do {\n        iVar4 = fcn.00456af0(puVar5, puVar6);\n        if (iVar4 != 0) {\ncode_r0x00456bd6:\n            if (var_30h != &fcn.00456b20::var_28h) {\n                fcn.004c33f0();\n            }\n            return iVar4;\n        }\n        iVar2 = sub.msvcrt.dll_strlen();\n        iVar2 = puVar5 + iVar2;\n        iVar3 = sub.msvcrt.dll_strlen();\n        iVar3 = puVar6 + iVar3;\n        if ((iVar1 == iVar2) && (var_2ch == iVar3)) goto code_r0x00456bd6;\n        if (iVar1 == iVar2) {\n            iVar4 = -1;\n            goto code_r0x00456bd6;\n        }\n        if (var_2ch == iVar3) {\n            iVar4 = 1;\n            goto code_r0x00456bd6;\n        }\n        puVar5 = iVar2 + 1;\n        puVar6 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 574
    },
    "00456f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00456f00(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll_wcscoll(param_1, param_2);\n    return iVar1 != 0 | iVar1 >> 0x1e;\n}\n",
        "token_count": 68
    },
    "00456f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00457004)\n\nint32_t __cdecl fcn.00456f30(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    puVar6 = &fcn.00456f30::var_40h;\n    uVar8 = 0x456f5c;\n    fcn.004b3830(arg_8h, arg_ch, 0);\n    var_30h = &fcn.00456f30::var_28h;\n    fcn.004b3830(arg_10h, arg_14h, uVar8 & 0xffffff00);\n    iVar1 = puVar6 + var_44h * 2;\n    iVar2 = var_30h + var_2ch * 2;\n    puVar7 = var_30h;\n    do {\n        iVar5 = fcn.00456f00(puVar6, puVar7);\n        if (iVar5 != 0) {\ncode_r0x00456fe8:\n            if (var_30h != &fcn.00456f30::var_28h) {\n                fcn.004c33f0();\n            }\n            return iVar5;\n        }\n        iVar3 = sub.msvcrt.dll_wcslen();\n        iVar3 = puVar6 + iVar3 * 2;\n        iVar4 = sub.msvcrt.dll_wcslen();\n        iVar4 = puVar7 + iVar4 * 2;\n        if ((iVar1 == iVar3) && (iVar2 == iVar4)) goto code_r0x00456fe8;\n        if (iVar1 == iVar3) {\n            iVar5 = -1;\n            goto code_r0x00456fe8;\n        }\n        if (iVar2 == iVar4) {\n            iVar5 = 1;\n            goto code_r0x00456fe8;\n        }\n        puVar6 = iVar3 + 2;\n        puVar7 = iVar4 + 2;\n    } while( true );\n}\n",
        "token_count": 588
    },
    "00461730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.00461730(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            uint *arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint64_t uVar3;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    piVar2 = fcn.004c0980(arg_1ch + 0x6c);\n    var_30h = &var_28h;\n    var_28h._0_1_ = 0;\n    var_2ch = 0;\n    if (arg_18h == '\\0') {\n        uVar3 = fcn.0045fc90(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n    }\n    else {\n        uVar3 = fcn.004609d0(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n    }\n    iVar1 = var_2ch;\n    if (var_2ch != 0) {\n        fcn.004b47d0(var_2ch, 0);\n        (**(*piVar2 + 0x2c))(var_30h, iVar1 + var_30h, *arg_24h);\n    }\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    return uVar3 & 0xffffffff | (arg_ch & 0xffff0000 | uVar3 >> 0x20 & 0xffff) << 0x20;\n}\n",
        "token_count": 486
    },
    "00464470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00464470(uint param_1, uint param_2, uint param_3)\n\n{\n    sub.msvcrt.dll_strxfrm(param_1, param_2, param_3);\n    return;\n}\n",
        "token_count": 49
    },
    "00464850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00464850(uint param_1, uint param_2, uint param_3)\n\n{\n    sub.msvcrt.dll_wcsxfrm(param_1, param_2, param_3);\n    return;\n}\n",
        "token_count": 50
    },
    "00475e70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00475e70(uint param_1, uint param_2, char param_3, int32_t param_4, int32_t param_5, int32_t param_6, \n                 int32_t *param_7)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (param_4 != 0) {\n        iVar1 = fcn.004bd7f0(param_5, param_3, param_1, param_2, param_6, param_4);\n        iVar3 = 0;\n        iVar2 = *param_7 - (param_4 - param_6);\n        if (iVar2 != 0) {\n            sub.msvcrt.dll_memcpy(iVar1, param_4, iVar2);\n            iVar3 = *param_7 - (param_4 - param_6);\n        }\n        *param_7 = iVar3 + (iVar1 - param_5);\n        return;\n    }\n    iVar1 = fcn.004bd7f0(param_5, param_3, param_1, param_2, param_6, *param_7 + param_6);\n    *param_7 = iVar1 - param_5;\n    return;\n}\n",
        "token_count": 278
    },
    "004775c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004775c0(uint param_1, uint param_2, ushort param_3, int32_t param_4, int32_t param_5, int32_t param_6, \n                 int32_t *param_7)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (param_4 != 0) {\n        iVar4 = param_4 - param_6 >> 1;\n        iVar1 = fcn.004bd950(param_5, param_3, param_1, param_2, param_6, param_4);\n        iVar3 = 0;\n        iVar2 = *param_7 - iVar4;\n        if (iVar2 != 0) {\n            sub.msvcrt.dll_memcpy(iVar1, param_4, iVar2 * 2);\n            iVar3 = *param_7 - iVar4;\n        }\n        *param_7 = iVar3 + (iVar1 - param_5 >> 1);\n        return;\n    }\n    iVar1 = fcn.004bd950(param_5, param_3, param_1, param_2, param_6, param_6 + *param_7 * 2);\n    *param_7 = iVar1 - param_5 >> 1;\n    return;\n}\n",
        "token_count": 296
    },
    "004839b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004839b0(int32_t *param_1)\n\n{\n    if (0 < *(*param_1 + -4)) {\n        fcn.004854a0(0, 0, 0);\n    }\n    *(*param_1 + -4) = 0xffffffff;\n    return;\n}\n",
        "token_count": 71
    },
    "00483f10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00483f10(uint param_1)\n\n{\n    fcn.004c33f0(param_1);\n    return;\n}\n",
        "token_count": 34
    },
    "00483f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00483f30(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (*0x515a34 == 0) {\n        iVar2 = *(param_1 + 8);\n        *(param_1 + 8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = param_1 + 8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return;\n    }\n    fcn.004c33f0(param_1);\n    return;\n}\n",
        "token_count": 153
    },
    "004845e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004845e0(uint param_1, int32_t param_2, ushort param_3)\n\n{\n    if (param_2 != 0) {\n        fcn.00484610(param_2, param_3);\n    }\n    return param_1;\n}\n",
        "token_count": 65
    },
    "00484d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00484d40(int32_t *param_1, uint32_t param_2, ushort param_3)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    uint32_t uVar4;\n    uint32_t extraout_ECX;\n    uint uStack56;\n    int32_t *piStack36;\n    uint16_t *in_stack_ffffffe8;\n    uint16_t *in_stack_ffffffec;\n    uint32_t uStack16;\n    \n    uVar4 = *(*param_1 + -0xc);\n    if (0x1ffffffe < param_2) {\n        fcn.004bead0(\"basic_string::resize\");\n        if (uStack16 == 1) {\n            uVar1 = *in_stack_ffffffec;\n            *in_stack_ffffffe8 = uVar1;\n            return uVar1;\n        }\n        if (uStack16 == 0) {\n            return uStack16;\n        }\n    // WARNING: Could not recover jumptable at 0x00447600. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar4 = (*_sym.imp.msvcrt.dll_memcpy)();\n        return uVar4;\n    }\n    if (param_2 <= uVar4) {\n        if (uVar4 <= param_2) {\n            return param_2;\n        }\n        uVar4 = fcn.004854a0(param_2, uVar4 - param_2, 0);\n        return uVar4;\n    }\n    param_2 = param_2 - uVar4;\n    iVar2 = *param_1;\n    if (0x1ffffffeU - *(iVar2 + -0xc) < param_2) {\n        fcn.004bead0(0x523c3e);\n        fcn.004841a0(uStack56, param_2);\n        return extraout_ECX;\n    }\n    uVar4 = *(iVar2 + -0xc) + param_2;\n    if ((uVar4 < *(iVar2 + -8) || uVar4 == *(iVar2 + -8)) && (*(iVar2 + -4) < 1)) {\n        iVar2 = *param_1;\n        puVar3 = iVar2 + *(iVar2 + -0xc) * 2;\n    }\n    else {\n        fcn.00485370(uVar4);\n        iVar2 = *piStack36;\n        puVar3 = iVar2 + *(iVar2 + -0xc) * 2;\n    }\n    if (param_2 == 1) {\n        *puVar3 = param_3;\n    }\n    else {\n        for (; param_2 != 0; param_2 = param_2 - 1) {\n            *puVar3 = param_3;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    *(iVar2 + -4) = 0;\n    *(iVar2 + -0xc) = uVar4;\n    *(iVar2 + uVar4 * 2) = 0;\n    return 0;\n}\n",
        "token_count": 691
    },
    "00485370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00485370(int32_t *param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar auStack13 [5];\n    \n    iVar5 = *param_1;\n    if (param_2 == *(iVar5 + -8)) {\n        if (*(iVar5 + -4) < 1) {\n            return;\n        }\n        iVar5 = *param_1;\n    }\n    uVar2 = *(iVar5 + -0xc);\n    if (param_2 < uVar2) {\n        param_2 = uVar2;\n    }\n    iVar3 = fcn.00484030(auStack13, param_2 - uVar2);\n    iVar5 = *param_1;\n    if (*0x515a34 == 0) {\n        iVar4 = *(iVar5 + -4);\n        *(iVar5 + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar5 + -4;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar4 < 1) {\n        fcn.004c33f0(iVar5 + -0xc);\n    }\n    *param_1 = iVar3;\n    return;\n}\n",
        "token_count": 321
    },
    "004856e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004856e0(uint *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = -2;\n    if (param_2 != 0) {\n        iVar1 = sub.msvcrt.dll_wcslen(param_2);\n        iVar1 = param_2 + iVar1 * 2;\n    }\n    uVar2 = fcn.00483ae0(param_2, iVar1, param_3, 0);\n    *param_1 = uVar2;\n    return;\n}\n",
        "token_count": 135
    },
    "00485730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00485730(uint *param_1, int32_t param_2, int32_t param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00483ae0(param_2, param_2 + param_3 * 2, param_4, 0);\n    *param_1 = uVar1;\n    return;\n}\n",
        "token_count": 92
    },
    "004857c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004857c0(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uchar auStack13 [5];\n    \n    iVar1 = *param_2;\n    if (*(iVar1 + -4) < 0) {\n        iVar1 = fcn.00484030(auStack13, 0);\n        *param_1 = iVar1;\n        return;\n    }\n    if (*0x515a34 == 0) {\n        *(iVar1 + -4) = *(iVar1 + -4) + 1;\n        *param_1 = iVar1;\n        return;\n    }\n    LOCK();\n    *(iVar1 + -4) = *(iVar1 + -4) + 1;\n    *param_1 = iVar1;\n    return;\n}\n",
        "token_count": 183
    },
    "004859b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004859b0(uint *param_1, uint param_2, ushort param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.004839f0(param_2, param_3, param_4);\n    *param_1 = uVar1;\n    return;\n}\n",
        "token_count": 79
    },
    "0048b8c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048b8c0(int32_t *param_1)\n\n{\n    if (0 < *(*param_1 + -4)) {\n        fcn.0048d220(0, 0, 0);\n    }\n    *(*param_1 + -4) = 0xffffffff;\n    return;\n}\n",
        "token_count": 73
    },
    "0048bdd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048bdd0(uint param_1)\n\n{\n    fcn.004c33f0(param_1);\n    return;\n}\n",
        "token_count": 34
    },
    "0048bdf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048bdf0(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (*0x515a34 == 0) {\n        iVar2 = *(param_1 + 8);\n        *(param_1 + 8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = param_1 + 8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return;\n    }\n    fcn.004c33f0(param_1);\n    return;\n}\n",
        "token_count": 154
    },
    "0048c160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0048c160(int32_t *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    int32_t **extraout_ECX;\n    uint32_t uVar1;\n    \n    uVar1 = *(*param_1 + -0xc) - param_2;\n    if (param_3 < uVar1) {\n        uVar1 = param_3;\n    }\n    if (param_2 <= *(*param_1 + -0xc)) {\n        fcn.0048d220(param_2, uVar1, 0);\n        return param_1;\n    }\n    fcn.004bf0c0(0x523900, 0x5239bd);\n    if ((*extraout_ECX)[-1] < 0) {\n        return *extraout_ECX;\n    }\n    fcn.0048b8c0();\n    return *extraout_ECX;\n}\n",
        "token_count": 210
    },
    "0048c440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0048c440(uint param_1, int32_t param_2, char param_3)\n\n{\n    if (param_2 != 0) {\n        fcn.0048c470(param_2, param_3);\n    }\n    return param_1;\n}\n",
        "token_count": 66
    },
    "0048cb50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0048cb50(uint32_t *param_1, uint32_t param_2, char param_3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    uint32_t extraout_ECX;\n    uint32_t uVar5;\n    uint in_stack_ffffffd8;\n    uint8_t *in_stack_ffffffe8;\n    uint8_t *in_stack_ffffffec;\n    uint32_t uStack16;\n    \n    uVar4 = *(*param_1 - 0xc);\n    if (0x3ffffffc < param_2) {\n        fcn.004bead0(0x523a43);\n        if (uStack16 == 1) {\n            uVar1 = *in_stack_ffffffec;\n            *in_stack_ffffffe8 = uVar1;\n            return uVar1;\n        }\n        if (uStack16 != 0) {\n    // WARNING: Could not recover jumptable at 0x00447600. Too many branches\n    // WARNING: Treating indirect jump as call\n            uVar4 = (*_sym.imp.msvcrt.dll_memcpy)();\n            return uVar4;\n        }\n        return uStack16;\n    }\n    if (param_2 <= uVar4) {\n        if (param_2 < uVar4) {\n            uVar4 = fcn.0048d220(param_2, uVar4 - param_2, 0);\n            return uVar4;\n        }\n        return param_2;\n    }\n    param_2 = param_2 - uVar4;\n    uVar4 = *param_1;\n    iVar2 = *(uVar4 - 0xc);\n    if (param_2 <= 0x3ffffffcU - iVar2) {\n        uVar5 = iVar2 + param_2;\n        if ((uVar5 < *(uVar4 - 8) || uVar5 == *(uVar4 - 8)) && (*(uVar4 - 4) < 1)) {\n            pcVar3 = *param_1 + *(*param_1 - 0xc);\n        }\n        else {\n            fcn.0048d0f0(uVar5);\n            pcVar3 = *param_1 + *(*param_1 - 0xc);\n        }\n        if (param_2 == 1) {\n            *pcVar3 = param_3;\n        }\n        else {\n            sub.msvcrt.dll_memset(pcVar3, param_3, param_2);\n        }\n        uVar4 = *param_1;\n        *(uVar4 - 4) = 0;\n        *(uVar4 - 0xc) = uVar5;\n        *(uVar4 + uVar5) = 0;\n        return uVar4;\n    }\n    fcn.004bead0(0x523a2e);\n    fcn.0048c040(in_stack_ffffffd8, iVar2);\n    return extraout_ECX;\n}\n",
        "token_count": 670
    },
    "0048d0f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0048d0f0(int32_t *param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar auStack13 [5];\n    \n    iVar5 = *param_1;\n    if (param_2 == *(iVar5 + -8)) {\n        if (*(iVar5 + -4) < 1) {\n            return;\n        }\n        iVar5 = *param_1;\n    }\n    uVar2 = *(iVar5 + -0xc);\n    if (param_2 < uVar2) {\n        param_2 = uVar2;\n    }\n    iVar3 = fcn.0048bef0(auStack13, param_2 - uVar2);\n    iVar5 = *param_1;\n    if (*0x515a34 == 0) {\n        iVar4 = *(iVar5 + -4);\n        *(iVar5 + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar5 + -4;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar4 < 1) {\n        fcn.004c33f0(iVar5 + -0xc);\n    }\n    *param_1 = iVar3;\n    return;\n}\n",
        "token_count": 325
    },
    "0048d470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0048d470(uint *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = -1;\n    if (param_2 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(param_2);\n        iVar1 = iVar1 + param_2;\n    }\n    uVar2 = fcn.0048b9e0(param_2, iVar1, param_3, 0);\n    *param_1 = uVar2;\n    return;\n}\n",
        "token_count": 132
    },
    "0048d4c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0048d4c0(uint *param_1, int32_t param_2, int32_t param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0048b9e0(param_2, param_3 + param_2, param_4, 0);\n    *param_1 = uVar1;\n    return;\n}\n",
        "token_count": 94
    },
    "0048d530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0048d530(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uchar auStack13 [5];\n    \n    iVar1 = *param_2;\n    if (*(iVar1 + -4) < 0) {\n        iVar1 = fcn.0048bef0(auStack13, 0);\n        *param_1 = iVar1;\n        return;\n    }\n    if (*0x515a34 == 0) {\n        *(iVar1 + -4) = *(iVar1 + -4) + 1;\n        *param_1 = iVar1;\n        return;\n    }\n    LOCK();\n    *(iVar1 + -4) = *(iVar1 + -4) + 1;\n    *param_1 = iVar1;\n    return;\n}\n",
        "token_count": 184
    },
    "0048d720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0048d720(uint *param_1, uint param_2, char param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0048b900(param_2, param_3, param_4);\n    *param_1 = uVar1;\n    return;\n}\n",
        "token_count": 79
    },
    "0048df60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048df60(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004c3430(0x44);\n        *puVar4 = 0x52c654;\n        puVar4[1] = 0;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        *(puVar4 + 0x43) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    *(puVar4 + 0x11) = 0x2e;\n    iVar1 = *0x516da8;\n    *(*(param_1 + 8) + 0x12) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x5237b8;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x14) = 0x5237b8;\n    *(*(param_1 + 8) + 0x18) = 0;\n    *(*(param_1 + 8) + 0x1c) = 0x5237b8;\n    *(*(param_1 + 8) + 0x20) = 0;\n    *(*(param_1 + 8) + 0x24) = 0x5237b8;\n    *(*(param_1 + 8) + 0x28) = 0;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    uVar2 = *0x527c18;\n    *(*(param_1 + 8) + 0x30) = *0x527c18;\n    *(*(param_1 + 8) + 0x34) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x38 + iVar3) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 664
    },
    "0048e340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048e340(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004c3430(0x44);\n        *puVar4 = 0x52c664;\n        puVar4[1] = 0;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        *(puVar4 + 0x43) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    *(puVar4 + 0x11) = 0x2e;\n    iVar1 = *0x516da8;\n    *(*(param_1 + 8) + 0x12) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x5237b8;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x14) = 0x5237b8;\n    *(*(param_1 + 8) + 0x18) = 0;\n    *(*(param_1 + 8) + 0x1c) = 0x5237b8;\n    *(*(param_1 + 8) + 0x20) = 0;\n    *(*(param_1 + 8) + 0x24) = 0x5237b8;\n    *(*(param_1 + 8) + 0x28) = 0;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    uVar2 = *0x527c18;\n    *(*(param_1 + 8) + 0x30) = *0x527c18;\n    *(*(param_1 + 8) + 0x34) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x38 + iVar3) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 664
    },
    "0048e720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048e720(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004c3430(0x54);\n        puVar4[1] = 0;\n        *puVar4 = 0x52c674;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        puVar4[0xe] = 0;\n        *(puVar4 + 0x52) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    iVar1 = *0x516da8;\n    *(puVar4 + 0x12) = 0x2e;\n    *(*(param_1 + 8) + 0x14) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x5237b8;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x18) = 0x5237ba;\n    *(*(param_1 + 8) + 0x1c) = 0;\n    *(*(param_1 + 8) + 0x20) = 0x5237ba;\n    *(*(param_1 + 8) + 0x24) = 0;\n    *(*(param_1 + 8) + 0x28) = 0x5237ba;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    *(*(param_1 + 8) + 0x30) = 0;\n    uVar2 = *0x527c18;\n    *(*(param_1 + 8) + 0x34) = *0x527c18;\n    *(*(param_1 + 8) + 0x38) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x3c + iVar3 * 2) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 666
    },
    "0048eb10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048eb10(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004c3430(0x54);\n        puVar4[1] = 0;\n        *puVar4 = 0x52c684;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        puVar4[0xe] = 0;\n        *(puVar4 + 0x52) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    iVar1 = *0x516da8;\n    *(puVar4 + 0x12) = 0x2e;\n    *(*(param_1 + 8) + 0x14) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x5237b8;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x18) = 0x5237ba;\n    *(*(param_1 + 8) + 0x1c) = 0;\n    *(*(param_1 + 8) + 0x20) = 0x5237ba;\n    *(*(param_1 + 8) + 0x24) = 0;\n    *(*(param_1 + 8) + 0x28) = 0x5237ba;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    *(*(param_1 + 8) + 0x30) = 0;\n    uVar2 = *0x527c18;\n    *(*(param_1 + 8) + 0x34) = *0x527c18;\n    *(*(param_1 + 8) + 0x38) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x3c + iVar3 * 2) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 666
    },
    "0048ef00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048ef00(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *(param_1 + 8);\n    if (puVar1 == NULL) {\n        puVar1 = fcn.004c3430(200);\n        puVar1[1] = 0;\n        *puVar1 = 0x52c564;\n        puVar1[2] = 0;\n        puVar1[3] = 0;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        puVar1[7] = 0;\n        puVar1[8] = 0;\n        puVar1[9] = 0;\n        puVar1[10] = 0;\n        puVar1[0xb] = 0;\n        puVar1[0xc] = 0;\n        puVar1[0xd] = 0;\n        puVar1[0xe] = 0;\n        puVar1[0xf] = 0;\n        puVar1[0x10] = 0;\n        puVar1[0x11] = 0;\n        puVar1[0x12] = 0;\n        puVar1[0x13] = 0;\n        puVar1[0x14] = 0;\n        puVar1[0x15] = 0;\n        puVar1[0x16] = 0;\n        puVar1[0x17] = 0;\n        puVar1[0x18] = 0;\n        puVar1[0x19] = 0;\n        puVar1[0x1a] = 0;\n        puVar1[0x1b] = 0;\n        puVar1[0x1c] = 0;\n        puVar1[0x1d] = 0;\n        puVar1[0x1e] = 0;\n        puVar1[0x1f] = 0;\n        puVar1[0x20] = 0;\n        puVar1[0x21] = 0;\n        puVar1[0x22] = 0;\n        puVar1[0x23] = 0;\n        puVar1[0x24] = 0;\n        puVar1[0x25] = 0;\n        puVar1[0x26] = 0;\n        puVar1[0x27] = 0;\n        puVar1[0x28] = 0;\n        puVar1[0x29] = 0;\n        puVar1[0x2a] = 0;\n        puVar1[0x2b] = 0;\n        puVar1[0x2c] = 0;\n        puVar1[0x2d] = 0;\n        puVar1[0x2e] = 0;\n        puVar1[0x2f] = 0;\n        puVar1[0x30] = 0;\n        *(puVar1 + 0x31) = 0;\n        *(param_1 + 8) = puVar1;\n    }\n    puVar1[2] = \"%m/%d/%y\";\n    puVar1[3] = \"%m/%d/%y\";\n    puVar1[4] = 0x526735;\n    puVar1[5] = 0x526735;\n    puVar1[6] = 0x52673e;\n    puVar1[7] = 0x52673e;\n    puVar1[8] = 0x52673f;\n    puVar1[9] = 0x526742;\n    puVar1[10] = 0x52673e;\n    puVar1[0xb] = 0x526745;\n    puVar1[0xc] = 0x52674c;\n    puVar1[0xd] = 0x526753;\n    puVar1[0xe] = 0x52675b;\n    puVar1[0xf] = 0x526765;\n    puVar1[0x10] = 0x52676e;\n    puVar1[0x11] = 0x526775;\n    puVar1[0x12] = 0x52677e;\n    puVar1[0x13] = 0x526782;\n    puVar1[0x14] = 0x526786;\n    puVar1[0x15] = 0x52678a;\n    puVar1[0x16] = 0x52678e;\n    puVar1[0x17] = 0x526792;\n    puVar1[0x18] = 0x526796;\n    puVar1[0x19] = 0x52679a;\n    puVar1[0x1a] = 0x5267a2;\n    puVar1[0x1b] = 0x5267ab;\n    puVar1[0x1c] = 0x5267b1;\n    puVar1[0x1d] = 0x5267b7;\n    puVar1[0x1e] = 0x5267bb;\n    puVar1[0x1f] = 0x5267c0;\n    puVar1[0x20] = 0x5267c5;\n    puVar1[0x21] = 0x5267cc;\n    puVar1[0x22] = 0x5267d6;\n    puVar1[0x23] = 0x5267de;\n    puVar1[0x24] = 0x5267e7;\n    puVar1[0x25] = 0x5267f0;\n    puVar1[0x26] = 0x5267f4;\n    puVar1[0x27] = 0x5267f8;\n    puVar1[0x28] = 0x5267fc;\n    puVar1[0x29] = 0x5267b7;\n    puVar1[0x2a] = 0x526800;\n    puVar1[0x2b] = 0x526804;\n    puVar1[0x2c] = 0x526808;\n    puVar1[0x2d] = 0x52680c;\n    puVar1[0x2e] = 0x526810;\n    puVar1[0x2f] = 0x526814;\n    puVar1[0x30] = 0x526818;\n    return;\n}\n",
        "token_count": 1506
    },
    "0048f640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048f640(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *(param_1 + 8);\n    if (puVar1 == NULL) {\n        puVar1 = fcn.004c3430(200);\n        puVar1[1] = 0;\n        *puVar1 = 0x52c574;\n        puVar1[2] = 0;\n        puVar1[3] = 0;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        puVar1[7] = 0;\n        puVar1[8] = 0;\n        puVar1[9] = 0;\n        puVar1[10] = 0;\n        puVar1[0xb] = 0;\n        puVar1[0xc] = 0;\n        puVar1[0xd] = 0;\n        puVar1[0xe] = 0;\n        puVar1[0xf] = 0;\n        puVar1[0x10] = 0;\n        puVar1[0x11] = 0;\n        puVar1[0x12] = 0;\n        puVar1[0x13] = 0;\n        puVar1[0x14] = 0;\n        puVar1[0x15] = 0;\n        puVar1[0x16] = 0;\n        puVar1[0x17] = 0;\n        puVar1[0x18] = 0;\n        puVar1[0x19] = 0;\n        puVar1[0x1a] = 0;\n        puVar1[0x1b] = 0;\n        puVar1[0x1c] = 0;\n        puVar1[0x1d] = 0;\n        puVar1[0x1e] = 0;\n        puVar1[0x1f] = 0;\n        puVar1[0x20] = 0;\n        puVar1[0x21] = 0;\n        puVar1[0x22] = 0;\n        puVar1[0x23] = 0;\n        puVar1[0x24] = 0;\n        puVar1[0x25] = 0;\n        puVar1[0x26] = 0;\n        puVar1[0x27] = 0;\n        puVar1[0x28] = 0;\n        puVar1[0x29] = 0;\n        puVar1[0x2a] = 0;\n        puVar1[0x2b] = 0;\n        puVar1[0x2c] = 0;\n        puVar1[0x2d] = 0;\n        puVar1[0x2e] = 0;\n        puVar1[0x2f] = 0;\n        puVar1[0x30] = 0;\n        *(puVar1 + 0x31) = 0;\n        *(param_1 + 8) = puVar1;\n    }\n    puVar1[2] = 0x52681c;\n    puVar1[3] = 0x52681c;\n    puVar1[4] = L\"%H:%M:%S\";\n    puVar1[5] = L\"%H:%M:%S\";\n    puVar1[6] = 0x526840;\n    puVar1[7] = 0x526840;\n    puVar1[8] = 0x526842;\n    puVar1[9] = 0x526848;\n    puVar1[10] = 0x526840;\n    puVar1[0xb] = L\"Sunday\";\n    puVar1[0xc] = L\"Monday\";\n    puVar1[0xd] = L\"Tuesday\";\n    puVar1[0xe] = L\"Wednesday\";\n    puVar1[0xf] = L\"Thursday\";\n    puVar1[0x10] = L\"Friday\";\n    puVar1[0x11] = L\"Saturday\";\n    puVar1[0x12] = 0x5268c0;\n    puVar1[0x13] = 0x5268c8;\n    puVar1[0x14] = 0x5268d0;\n    puVar1[0x15] = 0x5268d8;\n    puVar1[0x16] = 0x5268e0;\n    puVar1[0x17] = 0x5268e8;\n    puVar1[0x18] = 0x5268f0;\n    puVar1[0x19] = L\"January\";\n    puVar1[0x1a] = L\"February\";\n    puVar1[0x1b] = L\"March\";\n    puVar1[0x1c] = L\"April\";\n    puVar1[0x1d] = 0x526932;\n    puVar1[0x1e] = L\"June\";\n    puVar1[0x1f] = L\"July\";\n    puVar1[0x20] = L\"August\";\n    puVar1[0x21] = L\"September\";\n    puVar1[0x22] = L\"October\";\n    puVar1[0x23] = L\"November\";\n    puVar1[0x24] = L\"December\";\n    puVar1[0x25] = 0x5269a4;\n    puVar1[0x26] = 0x5269ac;\n    puVar1[0x27] = 0x5269b4;\n    puVar1[0x28] = 0x5269bc;\n    puVar1[0x29] = 0x526932;\n    puVar1[0x2a] = 0x5269c4;\n    puVar1[0x2b] = 0x5269cc;\n    puVar1[0x2c] = 0x5269d4;\n    puVar1[0x2d] = 0x5269dc;\n    puVar1[0x2e] = 0x5269e4;\n    puVar1[0x2f] = 0x5269ec;\n    puVar1[0x30] = 0x5269f4;\n    return;\n}\n",
        "token_count": 1466
    },
    "00490a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00490a10(uint *param_1)\n\n{\n    sub.msvcrt.dll__fileno_1(*param_1);\n    return;\n}\n",
        "token_count": 38
    },
    "00490b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00490b60(void)\n\n{\n    fcn.00490a10();\n    fcn.00448cf0();\n    return;\n}\n",
        "token_count": 34
    },
    "00490bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00490bc0(int32_t *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    \n    pcVar2 = _sym.imp.msvcrt.dll__errno;\n    if ((*param_1 == 0) && (param_2 != 0)) {\n        puVar3 = (*_sym.imp.msvcrt.dll__errno)();\n        uVar1 = *puVar3;\n        puVar3 = (*pcVar2)();\n        *puVar3 = 0;\n        do {\n            iVar5 = sub.msvcrt.dll_fflush(param_2);\n            if (iVar5 == 0) {\n                puVar3 = (*pcVar2)();\n                *puVar3 = uVar1;\n                *param_1 = param_2;\n                *(param_1 + 1) = 0;\n                return param_1;\n            }\n            piVar4 = (*pcVar2)();\n        } while (*piVar4 == 4);\n        puVar3 = (*pcVar2)();\n        *puVar3 = uVar1;\n    }\n    return NULL;\n}\n",
        "token_count": 275
    },
    "00490df0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00490df0(uint param_1, uint param_2)\n\n{\n    uchar auStack13 [13];\n    \n    fcn.0048d4c0(param_1, param_2, auStack13);\n    return;\n}\n",
        "token_count": 55
    },
    "00490f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00490f80(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    *param_1 = param_1 + 2;\n    fcn.004b0ab0(param_2, param_3 + param_2, 0);\n    return;\n}\n",
        "token_count": 76
    },
    "00491d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00491d80(uint noname_0, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t *arg_28h, int32_t arg_2ch, int32_t *arg_30h)\n\n{\n    uint uVar1;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    if (arg_2ch == 0) {\n        var_2ch = 0;\n        var_28h._0_1_ = 0;\n        var_30h = &var_28h;\n        uVar1 = (**(*arg_ch + 0xc))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, &var_30h);\n        if (*arg_28h == 0) {\n            if (arg_30h[6] != NULL) {\n                (*arg_30h[6])(arg_30h);\n            }\n            *arg_30h = arg_30h + 2;\n            fcn.004b0b70(var_30h, var_2ch + var_30h, 0);\n            arg_30h[6] = 0x493ec0;\n        }\n        if (var_30h != &var_28h) {\n            fcn.004c33f0(var_30h);\n            return uVar1;\n        }\n    }\n    else {\n        uVar1 = (**(*arg_ch + 8))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 473
    },
    "00492050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00492050(uint noname_0, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t *arg_28h, int32_t arg_2ch, int32_t *arg_30h)\n\n{\n    uint uVar1;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    if (arg_2ch == 0) {\n        var_30h = &var_28h;\n        var_28h._0_2_ = 0;\n        var_2ch = 0;\n        uVar1 = (**(*arg_ch + 0xc))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, &var_30h);\n        if (*arg_28h == 0) {\n            if (arg_30h[6] != NULL) {\n                (*arg_30h[6])(arg_30h);\n            }\n            *arg_30h = arg_30h + 2;\n            fcn.004b38e0(var_30h, var_30h + var_2ch * 2, 0);\n            arg_30h[6] = 0x493f40;\n        }\n        if (var_30h != &var_28h) {\n            fcn.004c33f0(var_30h);\n            return uVar1;\n        }\n    }\n    else {\n        uVar1 = (**(*arg_ch + 8))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 489
    },
    "004922f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0049237b)\n\nuint fcn.004922f0(uint param_1, int32_t *param_2, uint param_3, uint param_4, uint32_t param_5, uint param_6, \n                 uint param_7)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    uint var_1ch_3;\n    int32_t in_stack_0000002c;\n    uint var_30h_2;\n    uint var_28h;\n    uint var_1ch_2;\n    uint var_20h;\n    uint var_30h;\n    uint32_t in_stack_fffffed0;\n    uchar *puStack256;\n    uchar auStack248 [8];\n    uint uStack240;\n    uchar *puStack236;\n    uint uStack220;\n    uint uStack216;\n    int32_t iStack212;\n    uchar *puStack208;\n    uint32_t uStack204;\n    int32_t *piStack196;\n    uint uStack192;\n    uint uStack188;\n    uchar uStack184;\n    uint uStack180;\n    ushort uStack176;\n    ushort uStack172;\n    ulong uStack170;\n    int32_t *piStack160;\n    uchar uStack141;\n    int32_t iStack140;\n    uint uStack124;\n    uint uStack120;\n    uchar *puStack112;\n    int32_t *piStack100;\n    uint32_t uStack88;\n    uint var_20h_3;\n    int32_t var_3ch_2;\n    uint *var_30h_4;\n    uint var_28h_3;\n    \n    if (in_stack_0000002c == 0) {\n        puStack112 = 0x4923d6;\n        uVar3 = (**(*param_2 + 8))();\n        return uVar3;\n    }\n    if (*(in_stack_0000002c + 0x18) != 0) {\n        puStack112 = 0x49233b;\n        fcn.004b0ab0();\n        uStack120 = param_3;\n        uStack124 = 0x49236e;\n        puStack112 = param_5 & 0xff;\n        uVar3 = (**(*param_2 + 0xc))();\n        return uVar3;\n    }\n    puStack112 = 0x4923ed;\n    uStack124 = fcn.004be9d0(\"uninitialized __any_string\");\n    if (var_30h_4 != &fcn.004922f0::var_28h_3) {\n        puStack112 = 0x492401;\n        fcn.004c33f0();\n    }\n    puStack112 = 0x492409;\n    fcn.0043b0b0();\n    uStack120 = param_7;\n    if (var_3ch_2 == 0) {\n        uStack204 = 0x4924e4;\n        puStack112 = &stack0xfffffffc;\n        uVar3 = (**(*piStack100 + 8))();\n        return uVar3;\n    }\n    iStack212 = *(var_3ch_2 + 0x18);\n    if (iStack212 == 0) {\n        uStack204 = 0x49252f;\n        puStack112 = &stack0xfffffffc;\n        uStack220 = fcn.004be9d0(0x523804);\n        uStack204 = 0x492542;\n        fcn.00483f30();\n        puStack208 = 0x49254b;\n        uStack204 = uStack220;\n        fcn.0043b0b0();\n        if (piStack160 == NULL) {\n            puStack208 = &stack0xffffff90;\n            uVar3 = (**(*piStack196 + 8))\n                              (uStack192, uStack188, uStack184, uStack180, uStack176, CONCAT82(uStack170, uStack172));\n            return uVar3;\n        }\n        if (piStack160[6] != 0) {\n            puStack256 = &stack0xffffff08;\n            puStack208 = &stack0xffffff90;\n            fcn.004b3830(*piStack160, *piStack160 + piStack160[1] * 2, in_stack_fffffed0 & 0xffffff00);\n            uVar3 = (**(*piStack196 + 0xc))(uStack192, uStack188, uStack184, uStack180, uStack176, &stack0xffffff00);\n            if (puStack256 != &stack0xffffff08) {\n                fcn.004c33f0(puStack256);\n            }\n            return uVar3;\n        }\n        puStack208 = &stack0xffffff90;\n        uVar3 = fcn.004be9d0(\"uninitialized __any_string\");\n        if (puStack256 != &stack0xffffff08) {\n            fcn.004c33f0(puStack256);\n        }\n        fcn.0043b0b0(uVar3);\n        iVar4 = *0x515a34;\n        *extraout_ECX = 0x52b530;\n        piVar1 = extraout_ECX[3];\n        if (iVar4 == 0) {\n            iVar4 = piVar1[1];\n            piVar1[1] = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar2 = piVar1 + 1;\n            iVar4 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n        }\n        if (iVar4 == 1) {\n            (**(*piVar1 + 4))();\n        }\n        *extraout_ECX = 0x52cab0;\n        fcn.004af1f0(extraout_ECX + 2);\n        fcn.004af220();\n        uVar3 = fcn.004c33f0(extraout_ECX);\n        return uVar3;\n    }\n    uStack204 = 0x492458;\n    puStack112 = &stack0xfffffffc;\n    fcn.00485730();\n    uStack216 = 0x492486;\n    uStack204 = uStack88 & 0xff;\n    uVar3 = (**(*piStack100 + 0xc))();\n    if (*0x515a34 == 0) {\n        iVar4 = *(iStack140 + -4);\n        *(iStack140 + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack140 + -4;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar4 < 1) {\n        puStack236 = &stack0xffffff73;\n        uStack240 = 0x492512;\n        fcn.00483f10();\n        return uVar3;\n    }\n    return uVar3;\n}\n",
        "token_count": 1560
    },
    "004940c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl\nfcn.004940c0(uint noname_0, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h\n            , int32_t arg_24h)\n\n{\n    uint *var_48h;\n    uint var_40h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_48h = &var_40h;\n    fcn.004b0ab0(arg_20h, arg_24h + arg_20h, 0);\n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h, arg_1ch, &var_48h);\n    if (arg_10h[6] != NULL) {\n        (*arg_10h[6])(arg_10h);\n    }\n    *arg_10h = arg_10h + 2;\n    fcn.004b0b70(var_30h, var_2ch + var_30h, 0);\n    arg_10h[6] = 0x493ec0;\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    if (var_48h != &var_40h) {\n        fcn.004c33f0(var_48h);\n    }\n    return;\n}\n",
        "token_count": 358
    },
    "004944a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004944a0(uint noname_0, int32_t *arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint *var_30h;\n    uint var_28h;\n    uint var_ch;\n    \n    var_30h = &var_28h;\n    fcn.004b0ab0(arg_10h, arg_14h + arg_10h, 0);\n    uVar1 = (**(*arg_ch + 8))(&var_30h, arg_18h);\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    return uVar1;\n}\n",
        "token_count": 189
    },
    "004945d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004945d0(uint noname_0, int32_t *arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint *var_30h;\n    uint var_28h;\n    uint var_ch;\n    \n    var_30h = &var_28h;\n    fcn.004b0ab0(arg_10h, arg_14h + arg_10h, 0);\n    uVar1 = (**(*arg_ch + 8))(&var_30h, arg_18h);\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    return uVar1;\n}\n",
        "token_count": 189
    },
    "00494890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.00494890(uint noname_0, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_bp_4h;\n    \n    uVar1 = 0x4948b6;\n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h);\n    if (arg_10h[6] != NULL) {\n        (*arg_10h[6])(arg_10h);\n    }\n    *arg_10h = arg_10h + 2;\n    fcn.004b0b70(var_20h, var_1ch + var_20h, uVar1 & 0xffffff00);\n    arg_10h[6] = 0x493ec0;\n    if (var_20h != &fcn.00494890::var_18h) {\n        fcn.004c33f0(var_20h);\n    }\n    return;\n}\n",
        "token_count": 274
    },
    "00497000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00497000(int32_t param_1)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    \n    cVar2 = fcn.0044e7f0();\n    if (cVar2 != '\\0') {\n        cVar2 = fcn.00496a10();\n        *(param_1 + 0x30) = 0;\n        *(param_1 + 0x54) = 0;\n        fcn.00496c80();\n        *(param_1 + 0x49) = 0;\n        uVar1 = *(param_1 + 0x40);\n        *(param_1 + 0x14) = 0;\n        *(param_1 + 4) = uVar1;\n        *(param_1 + 8) = uVar1;\n        *(param_1 + 0xc) = uVar1;\n        *(param_1 + 0x10) = 0;\n        *(param_1 + 0x18) = 0;\n        *(param_1 + 0x38) = *(param_1 + 0x34);\n        *(param_1 + 0x3c) = *(param_1 + 0x34);\n        iVar3 = fcn.00490ac0();\n        if ((iVar3 != 0) && (cVar2 == '\\x01')) {\n            return param_1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 329
    },
    "00498c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00498c90(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint extraout_ECX;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    char unaff_DI;\n    ulong uVar5;\n    int32_t in_stack_00000024;\n    \n    if (*(param_1 + 0x44) < 0x3fffffff) {\n        iVar1 = fcn.004c3410(*(param_1 + 0x44) * 2);\n        *(param_1 + 0x48) = 1;\n        *(param_1 + 0x40) = iVar1;\n        return iVar1;\n    }\n    fcn.004c3b60();\n    fcn.004c3840();\n    fcn.0043b0b0();\n    fcn.004c3840();\n    fcn.0043b0b0();\n    fcn.004c3840();\n    fcn.0043b0b0();\n    fcn.004c3840();\n    fcn.0043b0b0();\n    fcn.004c3840();\n    fcn.0043b0b0();\n    fcn.004c3840();\n    fcn.0043b0b0();\n    fcn.004c3840();\n    fcn.0043b0b0();\n    fcn.004c3840();\n    fcn.0043b0b0();\n    fcn.004c3840();\n    fcn.0043b0b0();\n    fcn.004c3840();\n    fcn.0043b0b0();\n    uVar5 = fcn.004c3b60();\n    if (uVar5 >> 0x20 != 1) {\n        fcn.0043b0b0(uVar5);\n    }\n    fcn.004c3600();\n    fcn.004c3770();\n    uVar2 = *(unaff_EBX + 0x14) | 1;\n    *(unaff_EBX + 0x14) = uVar2;\n    if ((*(unaff_EBX + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(unaff_EBX + 0x1c) = 0;\n        }\n        else {\n            *(unaff_EBX + 0x20) = 0;\n        }\n        return unaff_EBX + 0x1c;\n    }\n    iVar3 = fcn.004be7b0(\"ios_base::_M_grow_words allocation failed\");\n    iVar1 = *(unaff_EBX + 0x68);\n    uVar4 = extraout_ECX;\n    if ((iVar1 != unaff_EBP) && (iVar1 != 0)) {\n        fcn.004c33e0(iVar1);\n    }\n    *(unaff_EBX + 0x68) = iVar3;\n    *(unaff_EBX + 100) = uVar4;\n    return iVar3 + in_stack_00000024 * 8;\n}\n",
        "token_count": 712
    },
    "00498fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00498fa0(int32_t param_1)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    \n    cVar2 = fcn.0044e7f0();\n    if (cVar2 != '\\0') {\n        cVar2 = fcn.004989a0();\n        *(param_1 + 0x30) = 0;\n        *(param_1 + 0x58) = 0;\n        fcn.00498c10();\n        *(param_1 + 0x49) = 0;\n        uVar1 = *(param_1 + 0x40);\n        *(param_1 + 0x14) = 0;\n        *(param_1 + 4) = uVar1;\n        *(param_1 + 8) = uVar1;\n        *(param_1 + 0xc) = uVar1;\n        *(param_1 + 0x10) = 0;\n        *(param_1 + 0x18) = 0;\n        *(param_1 + 0x38) = *(param_1 + 0x34);\n        *(param_1 + 0x3c) = *(param_1 + 0x34);\n        iVar3 = fcn.00490ac0();\n        if ((iVar3 != 0) && (cVar2 == '\\x01')) {\n            return param_1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 330
    },
    "004a6240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004a6240(code **param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    *param_1 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n    param_1[1] = *(param_2 + 4);\n    param_1[2] = *(param_2 + 8);\n    param_1[3] = *(param_2 + 0xc);\n    param_1[4] = *(param_2 + 0x10);\n    param_1[5] = *(param_2 + 0x14);\n    param_1[6] = *(param_2 + 0x18);\n    iVar2 = *0x515a34;\n    piVar1 = *(param_2 + 0x1c);\n    param_1[7] = piVar1;\n    if (iVar2 == 0) {\n        *piVar1 = *piVar1 + 1;\n        return;\n    }\n    LOCK();\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 258
    },
    "004af3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004af3a0(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = *0x515a34;\n    piVar1 = *param_2;\n    *param_1 = piVar1;\n    if (iVar2 == 0) {\n        *piVar1 = *piVar1 + 1;\n        return;\n    }\n    LOCK();\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 128
    },
    "004a6690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004a6690(int32_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    code *UNRECOVERED_JUMPTABLE;\n    int16_t iVar3;\n    uint32_t uVar4;\n    \n    puVar2 = param_1[2];\n    if (puVar2 < param_1[3]) {\n        uVar1 = *puVar2;\n        param_1[2] = puVar2 + 1;\n        return uVar1;\n    }\n    UNRECOVERED_JUMPTABLE = *(*param_1 + 0x28);\n    if (UNRECOVERED_JUMPTABLE == method.ages_bynameIcE.virtual_40) {\n        UNRECOVERED_JUMPTABLE = *(*param_1 + 0x24);\n        if (UNRECOVERED_JUMPTABLE == method.ages_bynameIcE.virtual_36) {\n            return 0xffffffff;\n        }\n        iVar3 = (*UNRECOVERED_JUMPTABLE)();\n        if (iVar3 == -1) {\n            uVar4 = 0xffffffff;\n        }\n        else {\n            uVar4 = *param_1[2];\n            param_1[2] = param_1[2] + 1;\n        }\n        return uVar4;\n    }\n    // WARNING: Could not recover jumptable at 0x004a66c0. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar4 = (*UNRECOVERED_JUMPTABLE)();\n    return uVar4;\n}\n",
        "token_count": 358
    },
    "004a6be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004a6be0(code **param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    *param_1 = vtable.ages_bynameIcE.0;\n    param_1[1] = *(param_2 + 4);\n    param_1[2] = *(param_2 + 8);\n    param_1[3] = *(param_2 + 0xc);\n    param_1[4] = *(param_2 + 0x10);\n    param_1[5] = *(param_2 + 0x14);\n    param_1[6] = *(param_2 + 0x18);\n    iVar2 = *0x515a34;\n    piVar1 = *(param_2 + 0x1c);\n    param_1[7] = piVar1;\n    if (iVar2 == 0) {\n        *piVar1 = *piVar1 + 1;\n        return;\n    }\n    LOCK();\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 254
    },
    "004aca00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004aca00(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52c9c0;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.004af100();\n    param_1[2] = uVar1;\n    *(param_1 + 3) = 0;\n    fcn.004ac930();\n    return;\n}\n",
        "token_count": 111
    },
    "004af100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004af100(void)\n\n{\n    if (*0x515a34 != 0) {\n        fcn.004388f0(0x516f14, 0x4af1c0);\n        return *0x516f10;\n    }\n    if (*0x516f10 != 0) {\n        return *0x516f10;\n    }\n    fcn.004af180(0x516f10, 0x527de0, 0);\n    return *0x516f10;\n}\n",
        "token_count": 119
    },
    "004af180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004af180(uint *param_1, uint8_t *param_2)\n\n{\n    int32_t iVar1;\n    uint8_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    \n    iVar1 = 2;\n    bVar3 = &stack0xfffffff8 < 0x14;\n    bVar4 = *0x10 == 0x1c;\n    *param_1 = 0;\n    puVar2 = 0x526540;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar3 = *param_2 < *puVar2;\n        bVar4 = *param_2 == *puVar2;\n        param_2 = param_2 + 1;\n        puVar2 = puVar2 + 1;\n    } while (bVar4);\n    if ((!bVar3 && !bVar4) == bVar3) {\n        return;\n    }\n    fcn.004bee20(\"locale::facet::_S_create_c_locale name not valid\");\n    fcn.004af180(0x516f10, 0x527de0, 0);\n    return;\n}\n",
        "token_count": 269
    },
    "004af3d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_19h\n\nvoid __fastcall fcn.004af3d0(int32_t **param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    ulong uVar5;\n    uint var_34h;\n    int32_t **var_19h;\n    \n    *param_1 = NULL;\n    fcn.004acab0();\n    piVar4 = *0x516f24;\n    *param_1 = *0x516f24;\n    if (piVar4 == *0x516f08) {\n        if (*0x515a34 == 0) {\n            *piVar4 = *piVar4 + 1;\n            return;\n        }\n        goto code_r0x004af4a0;\n    }\n    uVar1 = fcn.00448900();\n    if (*0x515a34 == 0) {\ncode_r0x004af407:\n        piVar4 = *0x516f24;\n        **0x516f24 = **0x516f24 + 1;\n        *param_1 = piVar4;\n    }\n    else {\n        iVar2 = fcn.00438ab0(uVar1);\n        if (iVar2 != 0) {\n            uVar5 = fcn.0044a4d0();\n            if (uVar5 >> 0x20 == -1) {\n                uVar5 = fcn.004c36d0(uVar5);\n                if (uVar5 >> 0x20 != -1) goto code_r0x004c485b;\n                fcn.004c36d0(uVar5);\n            }\n            fcn.0043b0b0();\ncode_r0x004c485b:\n            fcn.0043b0b0();\n            fcn.00448db0();\n            unique0x10000503 = param_1;\n            do {\n                uVar5 = fcn.0043b0b0(stack0xffffffe4);\n                *NULL = uVar5;\n            } while (uVar5 >> 0x20 != -1);\n            fcn.004c36d0();\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(param_1);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(param_1);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(param_1);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(param_1);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(param_1);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(param_1);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(param_1);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(param_1);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(param_1);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(param_1);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(param_1);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(param_1);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(param_1);\n            fcn.004af220();\n            fcn.0043b0b0(param_1);\n            fcn.004af220();\n            fcn.0043b0b0(param_1);\n            fcn.004af220();\n            fcn.0043b0b0(param_1);\n            fcn.004af220();\n            fcn.0043b0b0(param_1);\n            fcn.004af220();\n            fcn.0043b0b0(param_1);\n            fcn.004af220();\n            fcn.0043b0b0(param_1);\n            fcn.004af220();\n            fcn.0043b0b0(param_1);\n            fcn.004af220();\n            fcn.004c33f0();\n            fcn.0043b0b0(param_1);\n            fcn.004af220();\n            fcn.004c33f0();\n            fcn.0043b0b0(param_1);\n            fcn.004af220();\n            fcn.004c33f0();\n            fcn.0043b0b0(param_1);\n            fcn.004c33f0();\n            fcn.0043b0b0(param_1);\n            fcn.004af220();\n            fcn.004c33f0();\n            fcn.0043b0b0(param_1);\n            fcn.004af220();\n            fcn.004c33f0();\n            fcn.0043b0b0(param_1);\n            fcn.004af220();\n            fcn.004c33f0();\n            fcn.0043b0b0(param_1);\n            fcn.004c33f0();\n            fcn.0043b0b0(param_1);\n            fcn.0048bdf0(unaff_EBP + -0x19);\n            fcn.0043b0b0(uVar1);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))(uVar1);\n            }\n            fcn.0043b0b0(param_1);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))(uVar1);\n            }\n            fcn.0043b0b0(param_1);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0043b0b0(param_1);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0043b0b0(param_1);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0043b0b0(param_1);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0043b0b0(param_1);\n            fcn.0048bdf0(unaff_EBP + -0x3d);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))(param_1);\n            }\n            fcn.0043b0b0(uVar1);\n            fcn.00483f30(unaff_EBP + -0x3d);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))();\n            }\n            fcn.0043b0b0(param_1);\n            fcn.004af220();\n            fcn.004c33f0(param_1);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.004c33f0(param_1);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            do {\n                fcn.004c33f0(param_1);\n                fcn.0043b0b0(uVar1);\n                fcn.004c33f0(param_1);\n                fcn.0043b0b0(uVar1);\n                fcn.00453c10();\n                fcn.0048e6f0();\n            } while( true );\n        }\n        if (*0x515a34 == 0) goto code_r0x004af407;\n        LOCK();\n        **0x516f24 = **0x516f24 + 1;\n        *param_1 = *0x516f24;\n    }\n    if ((*0x515a34 == 0) || (iVar2 = fcn.00438b10(uVar1),  iVar2 == 0)) {\n        return;\n    }\n    puVar3 = fcn.004c3540(4);\n    *puVar3 = 0x52b51c;\n    piVar4 = fcn.004c3af0(puVar3, 0x528194, 0x44a2d0);\ncode_r0x004af4a0:\n    LOCK();\n    *piVar4 = *piVar4 + 1;\n    return;\n}\n",
        "token_count": 2329
    },
    "004af5a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004af5a0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004c3430(0x44);\n        *puVar4 = 0x52c654;\n        puVar4[1] = 0;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        *(puVar4 + 0x43) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    *(puVar4 + 0x11) = 0x2e;\n    iVar1 = *0x516da8;\n    *(*(param_1 + 8) + 0x12) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x5237b4;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x14) = 0x5237b4;\n    *(*(param_1 + 8) + 0x18) = 0;\n    *(*(param_1 + 8) + 0x1c) = 0x5237b4;\n    *(*(param_1 + 8) + 0x20) = 0;\n    *(*(param_1 + 8) + 0x24) = 0x5237b4;\n    *(*(param_1 + 8) + 0x28) = 0;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    uVar2 = *0x527c18;\n    *(*(param_1 + 8) + 0x30) = *0x527c18;\n    *(*(param_1 + 8) + 0x34) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x38 + iVar3) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 665
    },
    "004af980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004af980(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004c3430(0x44);\n        *puVar4 = 0x52c664;\n        puVar4[1] = 0;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        *(puVar4 + 0x43) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    *(puVar4 + 0x11) = 0x2e;\n    iVar1 = *0x516da8;\n    *(*(param_1 + 8) + 0x12) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x5237b4;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x14) = 0x5237b4;\n    *(*(param_1 + 8) + 0x18) = 0;\n    *(*(param_1 + 8) + 0x1c) = 0x5237b4;\n    *(*(param_1 + 8) + 0x20) = 0;\n    *(*(param_1 + 8) + 0x24) = 0x5237b4;\n    *(*(param_1 + 8) + 0x28) = 0;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    uVar2 = *0x527c18;\n    *(*(param_1 + 8) + 0x30) = *0x527c18;\n    *(*(param_1 + 8) + 0x34) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x38 + iVar3) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 663
    },
    "004afd60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004afd60(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004c3430(0x54);\n        puVar4[1] = 0;\n        *puVar4 = 0x52c674;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        puVar4[0xe] = 0;\n        *(puVar4 + 0x52) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    iVar1 = *0x516da8;\n    *(puVar4 + 0x12) = 0x2e;\n    *(*(param_1 + 8) + 0x14) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x5237b4;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x18) = 0x5237b6;\n    *(*(param_1 + 8) + 0x1c) = 0;\n    *(*(param_1 + 8) + 0x20) = 0x5237b6;\n    *(*(param_1 + 8) + 0x24) = 0;\n    *(*(param_1 + 8) + 0x28) = 0x5237b6;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    *(*(param_1 + 8) + 0x30) = 0;\n    uVar2 = *0x527c18;\n    *(*(param_1 + 8) + 0x34) = *0x527c18;\n    *(*(param_1 + 8) + 0x38) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x3c + iVar3 * 2) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 668
    },
    "004b0150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004b0150(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004c3430(0x54);\n        puVar4[1] = 0;\n        *puVar4 = 0x52c684;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        puVar4[0xe] = 0;\n        *(puVar4 + 0x52) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    iVar1 = *0x516da8;\n    *(puVar4 + 0x12) = 0x2e;\n    *(*(param_1 + 8) + 0x14) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x5237b4;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x18) = 0x5237b6;\n    *(*(param_1 + 8) + 0x1c) = 0;\n    *(*(param_1 + 8) + 0x20) = 0x5237b6;\n    *(*(param_1 + 8) + 0x24) = 0;\n    *(*(param_1 + 8) + 0x28) = 0x5237b6;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    *(*(param_1 + 8) + 0x30) = 0;\n    uVar2 = *0x527c18;\n    *(*(param_1 + 8) + 0x34) = *0x527c18;\n    *(*(param_1 + 8) + 0x38) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x3c + iVar3 * 2) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 669
    },
    "004b0f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b0f40(uint *param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t iVar9;\n    \n    if (param_1 == param_2) {\n        return;\n    }\n    puVar2 = *param_1;\n    puVar3 = *param_2;\n    puVar1 = param_2 + 2;\n    if (param_1 + 2 == puVar2) {\n        if (puVar1 == puVar3) {\n            iVar9 = param_2[1];\n            if (param_1[1] == 0) {\n                if (iVar9 != 0) {\n                    param_1[2] = param_2[2];\n                    param_1[3] = param_2[3];\n                    param_1[4] = param_2[4];\n                    param_1[5] = param_2[5];\n                    param_1[1] = param_2[1];\n                    param_2[1] = 0;\n                    **param_2 = 0;\n                    return;\n                }\n                uVar8 = 0;\n            }\n            else {\n                if (iVar9 == 0) {\n                    param_2[2] = param_1[2];\n                    param_2[3] = param_1[3];\n                    param_2[4] = param_1[4];\n                    param_2[5] = param_1[5];\n                    param_2[1] = param_1[1];\n                    param_1[1] = 0;\n                    **param_1 = 0;\n                    return;\n                }\n                uVar4 = param_2[4];\n                uVar5 = param_2[2];\n                uVar6 = param_2[3];\n                uVar7 = param_2[5];\n                param_2[2] = param_1[2];\n                param_2[3] = param_1[3];\n                param_2[4] = param_1[4];\n                param_2[5] = param_1[5];\n                uVar8 = param_1[1];\n                param_1[3] = uVar6;\n                param_1[2] = uVar5;\n                param_1[4] = uVar4;\n                param_1[5] = uVar7;\n                iVar9 = param_2[1];\n            }\n        }\n        else {\n            uVar4 = param_2[2];\n            param_2[2] = param_1[2];\n            param_2[3] = param_1[3];\n            param_2[4] = param_1[4];\n            param_2[5] = param_1[5];\n            *param_1 = puVar3;\n            *param_2 = puVar1;\n            uVar8 = param_1[1];\n            param_1[2] = uVar4;\n            iVar9 = param_2[1];\n        }\n    }\n    else {\n        uVar8 = param_1[2];\n        if (puVar1 == puVar3) {\n            param_1[2] = param_2[2];\n            param_1[3] = param_2[3];\n            param_1[4] = param_2[4];\n            param_1[5] = param_2[5];\n            *param_2 = puVar2;\n            *param_1 = param_1 + 2;\n        }\n        else {\n            *param_1 = puVar3;\n            *param_2 = puVar2;\n            param_1[2] = param_2[2];\n        }\n        param_2[2] = uVar8;\n        iVar9 = param_2[1];\n        uVar8 = param_1[1];\n    }\n    param_1[1] = iVar9;\n    param_2[1] = uVar8;\n    return;\n}\n",
        "token_count": 916
    },
    "004b19d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b19d0(int32_t *param_1, uint32_t param_2, char param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_1[1];\n    if (param_2 <= uVar1) {\n        if (param_2 < uVar1) {\n            param_1[1] = param_2;\n            *(*param_1 + param_2) = 0;\n        }\n        return;\n    }\n    fcn.004b0da0(uVar1, 0, param_2 - uVar1, param_3);\n    return;\n}\n",
        "token_count": 143
    },
    "004b2650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004b2650(uint32_t *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t extraout_ECX;\n    uint uStack24;\n    \n    uVar1 = *param_1;\n    if (uVar1 < 0) {\n        fcn.004bead0(0x524564);\n        *(extraout_ECX + 4) = uStack24;\n        return;\n    }\n    if ((param_2 < uVar1) && (param_2 = param_2 * 2,  uVar1 < param_2)) {\n        if (-1 < param_2) {\n            *param_1 = param_2;\n            fcn.004c3430(param_2 + 1);\n            return;\n        }\n        *param_1 = 0x7fffffff;\n        fcn.004c3430(0x80000000);\n        return;\n    }\n    fcn.004c3430(uVar1 + 1);\n    return;\n}\n",
        "token_count": 229
    },
    "004b2860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b2860(int32_t *param_1, uchar param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    \n    iVar1 = param_1[1];\n    piVar2 = *param_1;\n    if (piVar2 == param_1 + 2) {\n        uVar3 = 0xf;\n    }\n    else {\n        uVar3 = param_1[2];\n    }\n    if (uVar3 < iVar1 + 1U) {\n        fcn.004b26d0(iVar1, 0, 0, 1);\n        piVar2 = *param_1;\n    }\n    *(piVar2 + iVar1) = param_2;\n    param_1[1] = iVar1 + 1U;\n    *(*param_1 + 1 + iVar1) = 0;\n    return;\n}\n",
        "token_count": 211
    },
    "004b29a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b29a0(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = param_1 + 2;\n    iVar1 = -1;\n    if (param_2 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(param_2);\n        iVar1 = iVar1 + param_2;\n    }\n    fcn.004b0ab0(param_2, iVar1, 0);\n    return;\n}\n",
        "token_count": 118
    },
    "004b2fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004b2fc0(int32_t *param_1)\n\n{\n    if (*param_1 != param_1 + 2) {\n        fcn.004c33f0(*param_1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "004b3190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b3190(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint *in_stack_ffffffe8;\n    \n    uVar1 = sub.msvcrt.dll_strlen(param_2);\n    if (uVar1 <= 0x7fffffffU - *(param_1 + 4)) {\n        fcn.004b2500(param_2, uVar1);\n        return;\n    }\n    fcn.004bead0(0x524682);\n    fcn.004b2500(*in_stack_ffffffe8, in_stack_ffffffe8[1]);\n    return;\n}\n",
        "token_count": 146
    },
    "004b47b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004b47b0(uint param_1)\n\n{\n    fcn.004b47d0(param_1, 0);\n    return;\n}\n",
        "token_count": 36
    },
    "004b47d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b47d0(int32_t *param_1, uint32_t param_2, ushort param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_1[1];\n    if (param_2 <= uVar1) {\n        if (param_2 < uVar1) {\n            param_1[1] = param_2;\n            *(*param_1 + param_2 * 2) = 0;\n        }\n        return;\n    }\n    fcn.004b3b10(uVar1, 0, param_2 - uVar1, param_3);\n    return;\n}\n",
        "token_count": 146
    },
    "004b54e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004b54e0(uint32_t *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t extraout_ECX;\n    uint uStack24;\n    \n    uVar1 = *param_1;\n    if (0x3fffffff < uVar1) {\n        fcn.004bead0(\"basic_string::_M_create\");\n        *(extraout_ECX + 4) = uStack24;\n        return;\n    }\n    if ((param_2 < uVar1) && (param_2 = param_2 * 2,  uVar1 < param_2)) {\n        if (0x3fffffff < param_2) {\n            *param_1 = 0x3fffffff;\n            fcn.004c3430(0x80000000);\n            return;\n        }\n        *param_1 = param_2;\n        uVar1 = param_2;\n    }\n    fcn.004c3430(uVar1 * 2 + 2);\n    return;\n}\n",
        "token_count": 230
    },
    "004b5ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004b5ed0(int32_t *param_1)\n\n{\n    if (*param_1 != param_1 + 2) {\n        fcn.004c33f0(*param_1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "004b8a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b8a00(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52bcc8;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.004af100();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 90
    },
    "004b8a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b8a80(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52bcc8;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.004af100();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 90
    },
    "004b8b90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b8b90(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52bce4;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.004af100();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 91
    },
    "004b8c10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b8c10(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52bce4;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.004af100();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 91
    },
    "004b8ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004b8ce0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004c3430(0x68);\n        puVar4[1] = 0;\n        *puVar4 = 0x52c530;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        *(puVar4 + 9) = 0;\n        *(puVar4 + 0x19) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    puVar4[2] = 0x5237bc;\n    iVar3 = *0x516da4;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x10) = 0;\n    *(*(param_1 + 8) + 0x24) = 0x2e;\n    *(*(param_1 + 8) + 0x25) = 0x2c;\n    iVar2 = 0;\n    do {\n        *(*(param_1 + 8) + 0x26 + iVar2) = *(iVar3 + iVar2);\n        iVar1 = *0x516da0;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != 0x24);\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x4a + iVar3) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x1a);\n    *(*(param_1 + 8) + 0x14) = 0x5237bd;\n    *(*(param_1 + 8) + 0x18) = 4;\n    *(*(param_1 + 8) + 0x1c) = 0x5237c2;\n    *(*(param_1 + 8) + 0x20) = 5;\n    return;\n}\n",
        "token_count": 572
    },
    "004b9030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004b9030(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    puVar2 = *(param_1 + 8);\n    if (puVar2 == NULL) {\n        puVar2 = fcn.004c3430(0xa8);\n        puVar2[1] = 0;\n        *puVar2 = 0x52c540;\n        puVar2[2] = 0;\n        puVar2[3] = 0;\n        *(puVar2 + 4) = 0;\n        puVar2[5] = 0;\n        puVar2[6] = 0;\n        puVar2[7] = 0;\n        puVar2[8] = 0;\n        puVar2[9] = 0;\n        *(puVar2 + 0x29) = 0;\n        *(param_1 + 8) = puVar2;\n    }\n    puVar2[2] = 0x5237bc;\n    iVar4 = *0x516da4;\n    iVar3 = 0;\n    puVar2[3] = 0;\n    *(puVar2 + 4) = 0;\n    puVar2[9] = 0x2c002e;\n    do {\n        *(puVar2 + iVar3 * 2 + 0x28) = *(iVar4 + iVar3);\n        iVar1 = *0x516da0;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x24);\n    iVar4 = 0;\n    do {\n        *(puVar2 + iVar4 * 2 + 0x70) = *(iVar1 + iVar4);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 0x1a);\n    puVar2[5] = 0x5237c8;\n    puVar2[6] = 4;\n    puVar2[7] = 0x5237d2;\n    puVar2[8] = 5;\n    return;\n}\n",
        "token_count": 483
    },
    "004b96f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b96f0(code **param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    \n    *param_1 = vtable.p8H.1.0;\n    param_1[1] = param_2 != 0;\n    pcVar1 = fcn.004af100();\n    param_1[2] = pcVar1;\n    return;\n}\n",
        "token_count": 94
    },
    "004b97d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b97d0(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52ca84;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.004af100();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 90
    },
    "004ba180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004ba180(int32_t param_1, uint param_2)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *(param_1 + 0x18); puVar1 != NULL; puVar1 = *puVar1) {\n        (*puVar1[1])(param_2, param_1, puVar1[2]);\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "004bab00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004bab00(int32_t param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t **ppiVar7;\n    int32_t iVar8;\n    int32_t **ppiVar9;\n    \n    iVar8 = param_1 + 0x24;\n    *(param_1 + 4) = *(param_2 + 4);\n    *(param_1 + 8) = *(param_2 + 8);\n    *(param_1 + 0xc) = *(param_2 + 0xc);\n    *(param_1 + 0x10) = *(param_2 + 0x10);\n    *(param_1 + 0x14) = *(param_2 + 0x14);\n    uVar3 = *(param_2 + 0x18);\n    *(param_2 + 0x18) = 0;\n    *(param_1 + 0x18) = uVar3;\n    iVar6 = *(param_1 + 0x68);\n    if ((iVar6 != 0) && (iVar6 != iVar8)) {\n        fcn.004c33e0(iVar6);\n    }\n    iVar6 = *(param_2 + 0x68);\n    if (iVar6 == param_2 + 0x24) {\n        *(param_1 + 0x68) = iVar8;\n        iVar6 = 0;\n        *(param_1 + 100) = 8;\n        while( true ) {\n            puVar1 = iVar8 + iVar6;\n            puVar5 = *(param_2 + 0x68) + iVar6;\n            iVar6 = iVar6 + 8;\n            uVar3 = *puVar5;\n            uVar4 = puVar5[1];\n            *puVar5 = 0;\n            puVar5[1] = 0;\n            *puVar1 = uVar3;\n            puVar1[1] = uVar4;\n            if (iVar6 == 0x40) break;\n            iVar8 = *(param_1 + 0x68);\n        }\n    }\n    else {\n        *(param_2 + 0x68) = param_2 + 0x24;\n        *(param_1 + 0x68) = iVar6;\n        uVar3 = *(param_2 + 100);\n        *(param_2 + 100) = 8;\n        *(param_1 + 100) = uVar3;\n    }\n    ppiVar7 = param_2 + 0x6c;\n    ppiVar9 = param_1 + 0x6c;\n    piVar2 = *ppiVar7;\n    if (*0x515a34 == 0) {\n        *piVar2 = *piVar2 + 1;\n        piVar2 = *ppiVar9;\n    }\n    else {\n        LOCK();\n        *piVar2 = *piVar2 + 1;\n        piVar2 = *ppiVar9;\n    }\n    if (*0x515a34 == 0) {\n        iVar8 = *piVar2;\n        *piVar2 = iVar8 + -1;\n    }\n    else {\n        LOCK();\n        iVar8 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar8 == 1) {\n        fcn.004aefd0();\n        fcn.004c33f0(piVar2);\n        *ppiVar9 = *ppiVar7;\n        return;\n    }\n    *ppiVar9 = *ppiVar7;\n    return;\n}\n",
        "token_count": 829
    },
    "004bb510": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004bb510(uint *param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    int32_t **ppiVar6;\n    int32_t unaff_EBP;\n    ulong uVar7;\n    int32_t **ppiVar8;\n    \n    *param_1 = 0x52cbd4;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    puVar3 = param_1 + 9;\n    do {\n        *puVar3 = 0;\n        puVar5 = puVar3 + 2;\n        puVar3[1] = 0;\n        puVar3 = puVar5;\n    } while (param_1 + 0x19 != puVar5);\n    param_1[0x19] = 8;\n    ppiVar6 = param_1 + 0x1b;\n    param_1[0x1a] = param_1 + 9;\n    *ppiVar6 = NULL;\n    fcn.004acab0();\n    piVar4 = *0x516f24;\n    *ppiVar6 = *0x516f24;\n    if (piVar4 == *0x516f08) {\n        if (*0x515a34 == 0) {\n            *piVar4 = *piVar4 + 1;\n            return;\n        }\n        goto code_r0x004af4a0;\n    }\n    uVar1 = fcn.00448900();\n    if (*0x515a34 == 0) {\ncode_r0x004af407:\n        piVar4 = *0x516f24;\n        **0x516f24 = **0x516f24 + 1;\n        *ppiVar6 = piVar4;\n    }\n    else {\n        iVar2 = fcn.00438ab0(uVar1);\n        if (iVar2 != 0) {\n            uVar7 = fcn.0044a4d0();\n            if (uVar7 >> 0x20 == -1) {\n                uVar7 = fcn.004c36d0(uVar7);\n                if (uVar7 >> 0x20 != -1) goto code_r0x004c485b;\n                fcn.004c36d0(uVar7);\n            }\n            fcn.0043b0b0();\ncode_r0x004c485b:\n            fcn.0043b0b0();\n            fcn.00448db0();\n            ppiVar8 = ppiVar6;\n            do {\n                uVar7 = fcn.0043b0b0(ppiVar8);\n                ppiVar8 = uVar7;\n            } while (uVar7 >> 0x20 != -1);\n            fcn.004c36d0();\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(ppiVar6);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(ppiVar6);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(ppiVar6);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(ppiVar6);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(ppiVar6);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(ppiVar6);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(ppiVar6);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(ppiVar6);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(ppiVar6);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(ppiVar6);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(ppiVar6);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(uVar1);\n            fcn.004c33f0(ppiVar6);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.0043b0b0(ppiVar6);\n            fcn.004af220();\n            fcn.0043b0b0(ppiVar6);\n            fcn.004af220();\n            fcn.0043b0b0(ppiVar6);\n            fcn.004af220();\n            fcn.0043b0b0(ppiVar6);\n            fcn.004af220();\n            fcn.0043b0b0(ppiVar6);\n            fcn.004af220();\n            fcn.0043b0b0(ppiVar6);\n            fcn.004af220();\n            fcn.0043b0b0(ppiVar6);\n            fcn.004af220();\n            fcn.0043b0b0(ppiVar6);\n            fcn.004af220();\n            fcn.004c33f0();\n            fcn.0043b0b0(ppiVar6);\n            fcn.004af220();\n            fcn.004c33f0();\n            fcn.0043b0b0(ppiVar6);\n            fcn.004af220();\n            fcn.004c33f0();\n            fcn.0043b0b0(ppiVar6);\n            fcn.004c33f0();\n            fcn.0043b0b0(ppiVar6);\n            fcn.004af220();\n            fcn.004c33f0();\n            fcn.0043b0b0(ppiVar6);\n            fcn.004af220();\n            fcn.004c33f0();\n            fcn.0043b0b0(ppiVar6);\n            fcn.004af220();\n            fcn.004c33f0();\n            fcn.0043b0b0(ppiVar6);\n            fcn.004c33f0();\n            fcn.0043b0b0(ppiVar6);\n            fcn.0048bdf0(unaff_EBP + -0x19);\n            fcn.0043b0b0(uVar1);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))(uVar1);\n            }\n            fcn.0043b0b0(ppiVar6);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))(uVar1);\n            }\n            fcn.0043b0b0(ppiVar6);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0043b0b0(ppiVar6);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0043b0b0(ppiVar6);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0043b0b0(ppiVar6);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0043b0b0(ppiVar6);\n            fcn.0048bdf0(unaff_EBP + -0x3d);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))(ppiVar6);\n            }\n            fcn.0043b0b0(uVar1);\n            fcn.00483f30(unaff_EBP + -0x3d);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))();\n            }\n            fcn.0043b0b0(ppiVar6);\n            fcn.004af220();\n            fcn.004c33f0(ppiVar6);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            fcn.004c33f0(ppiVar6);\n            fcn.0043b0b0(uVar1);\n            fcn.004af220();\n            do {\n                fcn.004c33f0(ppiVar6);\n                fcn.0043b0b0(uVar1);\n                fcn.004c33f0(ppiVar6);\n                fcn.0043b0b0(uVar1);\n                fcn.00453c10();\n                fcn.0048e6f0();\n            } while( true );\n        }\n        if (*0x515a34 == 0) goto code_r0x004af407;\n        LOCK();\n        **0x516f24 = **0x516f24 + 1;\n        *ppiVar6 = *0x516f24;\n    }\n    if ((*0x515a34 == 0) || (iVar2 = fcn.00438b10(uVar1),  iVar2 == 0)) {\n        return;\n    }\n    puVar3 = fcn.004c3540(4);\n    *puVar3 = 0x52b51c;\n    piVar4 = fcn.004c3af0(puVar3, 0x528194, 0x44a2d0);\ncode_r0x004af4a0:\n    LOCK();\n    *piVar4 = *piVar4 + 1;\n    return;\n}\n",
        "token_count": 2537
    },
    "004bb600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004bb600(uint *param_1, uint param_2, uint param_3, int32_t param_4)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52cbe4;\n    param_1[1] = param_4 != 0;\n    uVar1 = fcn.004af100();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 99
    },
    "004bb640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004bb640(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52cbe4;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.004af100();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 89
    },
    "004bb6c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004bb6c0(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52cbe4;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.004af100();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 91
    },
    "004bb790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004bb790(uint *param_1, uint param_2, uint param_3, int32_t param_4)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52cc00;\n    param_1[1] = param_4 != 0;\n    uVar1 = fcn.004af100();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 98
    },
    "004bb7d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004bb7d0(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52cc00;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.004af100();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 90
    },
    "004bb850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004bb850(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52cc00;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.004af100();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 88
    },
    "004bb920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004bb920(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004c3430(0x68);\n        puVar4[1] = 0;\n        *puVar4 = 0x52c530;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        *(puVar4 + 9) = 0;\n        *(puVar4 + 0x19) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    puVar4[2] = 0x5237e0;\n    iVar3 = *0x516da4;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x10) = 0;\n    *(*(param_1 + 8) + 0x24) = 0x2e;\n    *(*(param_1 + 8) + 0x25) = 0x2c;\n    iVar2 = 0;\n    do {\n        *(*(param_1 + 8) + 0x26 + iVar2) = *(iVar3 + iVar2);\n        iVar1 = *0x516da0;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != 0x24);\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x4a + iVar3) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x1a);\n    *(*(param_1 + 8) + 0x14) = 0x5237e1;\n    *(*(param_1 + 8) + 0x18) = 4;\n    *(*(param_1 + 8) + 0x1c) = 0x5237e6;\n    *(*(param_1 + 8) + 0x20) = 5;\n    return;\n}\n",
        "token_count": 572
    },
    "004bbc70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004bbc70(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    puVar2 = *(param_1 + 8);\n    if (puVar2 == NULL) {\n        puVar2 = fcn.004c3430(0xa8);\n        puVar2[1] = 0;\n        *puVar2 = 0x52c540;\n        puVar2[2] = 0;\n        puVar2[3] = 0;\n        *(puVar2 + 4) = 0;\n        puVar2[5] = 0;\n        puVar2[6] = 0;\n        puVar2[7] = 0;\n        puVar2[8] = 0;\n        puVar2[9] = 0;\n        *(puVar2 + 0x29) = 0;\n        *(param_1 + 8) = puVar2;\n    }\n    puVar2[2] = 0x5237e0;\n    iVar4 = *0x516da4;\n    iVar3 = 0;\n    puVar2[3] = 0;\n    *(puVar2 + 4) = 0;\n    puVar2[9] = 0x2c002e;\n    do {\n        *(puVar2 + iVar3 * 2 + 0x28) = *(iVar4 + iVar3);\n        iVar1 = *0x516da0;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x24);\n    iVar4 = 0;\n    do {\n        *(puVar2 + iVar4 * 2 + 0x70) = *(iVar1 + iVar4);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 0x1a);\n    puVar2[5] = 0x5237ec;\n    puVar2[6] = 4;\n    puVar2[7] = 0x5237f6;\n    puVar2[8] = 5;\n    return;\n}\n",
        "token_count": 482
    },
    "004bc220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004bc220(int32_t param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    cVar1 = fcn.004bf9f0(param_2);\n    if (cVar1 == '\\0') {\n        *(param_1 + 0x7c) = 0;\n    }\n    else {\n        uVar2 = fcn.004c0920(param_2);\n        *(param_1 + 0x7c) = uVar2;\n    }\n    cVar1 = fcn.004bfc70(param_2);\n    if (cVar1 == '\\0') {\n        *(param_1 + 0x80) = 0;\n    }\n    else {\n        uVar2 = fcn.004c0c20(param_2);\n        *(param_1 + 0x80) = uVar2;\n    }\n    cVar1 = fcn.004bfbd0(param_2);\n    if (cVar1 == '\\0') {\n        *(param_1 + 0x84) = 0;\n    }\n    else {\n        uVar2 = fcn.004c0b60(param_2);\n        *(param_1 + 0x84) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 289
    },
    "004bc590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.004bc590(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    uchar uVar6;\n    uint *puVar7;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    int32_t iVar8;\n    int32_t extraout_ECX_01;\n    int32_t iVar9;\n    int32_t iStack132;\n    uint uStack128;\n    uint32_t in_stack_ffffff98;\n    int32_t iStack80;\n    uchar auStack64 [20];\n    uint32_t uStack24;\n    \n    uVar2 = *(param_1 + 0x78);\n    *(param_1 + 0x78) = param_2;\n    *(param_1 + 0x14) = param_2 == 0;\n    if ((*(param_1 + 0x10) & param_2 == 0) == 0) {\n        return uVar2;\n    }\n    fcn.004be7b0(\"basic_ios::clear\");\n    if (extraout_ECX_00 == uStack24) {\n        return extraout_ECX_00;\n    }\n    iVar8 = *(uStack24 + 100);\n    if (8 < iVar8) {\n        if (0xfffffff < iVar8) goto code_r0x004bc4a0;\n        puVar7 = fcn.004c3410(iVar8 << 3);\n        iVar8 = *(uStack24 + 100) + -1;\n        if (-1 < iVar8) {\n            do {\n                iVar8 = iVar8 + -1;\n                *puVar7 = 0;\n                puVar7[1] = 0;\n                puVar7 = puVar7 + 2;\n            } while (iVar8 != -1);\n        }\n    }\n    iVar8 = *(uStack24 + 0x18);\n    if (iVar8 != 0) {\n        if (*0x515a34 == 0) {\n            *(iVar8 + 0xc) = *(iVar8 + 0xc) + 1;\n        }\n        else {\n            LOCK();\n            *(iVar8 + 0xc) = *(iVar8 + 0xc) + 1;\n        }\n    }\n    in_stack_ffffff98 = 0;\n    fcn.004ba180();\n    iVar3 = *(extraout_ECX_00 + 0x68);\n    if (iVar3 != extraout_ECX_00 + 0x24) {\n        if (iVar3 != 0) {\n            fcn.004c33e0(iVar3);\n        }\n        *(extraout_ECX_00 + 0x68) = 0;\n    }\n    fcn.004ba200();\n    iVar3 = *(uStack24 + 100);\n    *(extraout_ECX_00 + 0x18) = iVar8;\n    if (0 < iVar3) {\n        iVar8 = *(uStack24 + 0x68);\n        iVar9 = 0;\n        do {\n            uVar4 = *(iVar8 + 4 + iVar9);\n            *(iStack80 + iVar9) = *(iVar8 + iVar9);\n            *(iStack80 + 4 + iVar9) = uVar4;\n            iVar9 = iVar9 + 8;\n        } while (iVar9 != iVar3 * 8);\n    }\n    *(extraout_ECX_00 + 0x68) = iStack80;\n    uVar4 = *(uStack24 + 0xc);\n    *(extraout_ECX_00 + 100) = iVar3;\n    cVar1 = *(uStack24 + 0x75);\n    *(extraout_ECX_00 + 0xc) = uVar4;\n    *(extraout_ECX_00 + 8) = *(uStack24 + 8);\n    *(extraout_ECX_00 + 4) = *(uStack24 + 4);\n    *(extraout_ECX_00 + 0x70) = *(uStack24 + 0x70);\n    if (cVar1 == '\\0') {\n        piVar5 = *(uStack24 + 0x7c);\n        if (piVar5 != NULL) {\n            if (*(piVar5 + 7) == '\\0') {\n                fcn.00451a70();\n                uVar6 = 0x20;\n                if (*(*piVar5 + 0x18) != 0x451d20) {\n                    uVar6 = (**(*piVar5 + 0x18))(0x20);\n                }\n            }\n            else {\n                uVar6 = *(piVar5 + 0x3d);\n            }\n            *(uStack24 + 0x74) = uVar6;\n            *(uStack24 + 0x75) = 1;\n            cVar1 = *(extraout_ECX_00 + 0x75);\n            goto joined_r0x004bc790;\n        }\n    }\n    else {\n        cVar1 = *(extraout_ECX_00 + 0x75);\n        uVar6 = *(uStack24 + 0x74);\njoined_r0x004bc790:\n        if (cVar1 != '\\0') {\ncode_r0x004bc6b6:\n            *(extraout_ECX_00 + 0x74) = uVar6;\n            fcn.004af3a0(uStack24 + 0x6c);\n            fcn.004af510(auStack64);\n            fcn.004af4c0();\n            fcn.004bc220(extraout_ECX_00 + 0x6c);\n            fcn.004ba180(2);\n            *(extraout_ECX_00 + 0x10) = *(uStack24 + 0x10);\n            fcn.004bc4a0(*(extraout_ECX_00 + 0x14));\n            return extraout_ECX_00;\n        }\n        piVar5 = *(extraout_ECX_00 + 0x7c);\n        if (piVar5 != NULL) {\n            if (*(piVar5 + 7) == '\\0') {\n                fcn.00451a70();\n                if (*(*piVar5 + 0x18) != 0x451d20) {\n                    (**(*piVar5 + 0x18))(0x20);\n                }\n            }\n            *(extraout_ECX_00 + 0x75) = 1;\n            goto code_r0x004bc6b6;\n        }\n    }\n    fcn.004be620();\ncode_r0x004bc4a0:\n    fcn.004c3b60();\n    in_stack_ffffff98 = in_stack_ffffff98 | *(extraout_ECX_01 + 0x14);\n    if (*(extraout_ECX_01 + 0x78) == 0) {\n        in_stack_ffffff98 = in_stack_ffffff98 | 1;\n    }\n    *(extraout_ECX_01 + 0x14) = in_stack_ffffff98;\n    if ((*(extraout_ECX_01 + 0x10) & in_stack_ffffff98) != 0) {\n        fcn.004be7b0(\"basic_ios::clear\");\n        fcn.004af3a0(iStack132 + 0x6c);\n        fcn.004baa20(iStack132, uStack128);\n        fcn.004af4c0();\n        fcn.004bc220(uStack128);\n        piVar5 = *(iStack132 + 0x78);\n        if (piVar5 != NULL) {\n            fcn.004af3a0(piVar5 + 7);\n            (**(*piVar5 + 8))(uStack128);\n            fcn.004af510(uStack128);\n            fcn.004af4c0();\n        }\n        return extraout_ECX;\n    }\n    return in_stack_ffffff98;\n}\n",
        "token_count": 1778
    },
    "004bca50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004bca50(int32_t param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    cVar1 = fcn.004bfa40(param_2);\n    if (cVar1 == '\\0') {\n        *(param_1 + 0x7c) = 0;\n    }\n    else {\n        uVar2 = fcn.004c0980(param_2);\n        *(param_1 + 0x7c) = uVar2;\n    }\n    cVar1 = fcn.004bfcc0(param_2);\n    if (cVar1 == '\\0') {\n        *(param_1 + 0x80) = 0;\n    }\n    else {\n        uVar2 = fcn.004c0c80(param_2);\n        *(param_1 + 0x80) = uVar2;\n    }\n    cVar1 = fcn.004bfc20(param_2);\n    if (cVar1 == '\\0') {\n        *(param_1 + 0x84) = 0;\n    }\n    else {\n        uVar2 = fcn.004c0bc0(param_2);\n        *(param_1 + 0x84) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 289
    },
    "004bcdb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.004bcdb0(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    ushort uVar6;\n    uint *puVar7;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    int32_t iVar8;\n    int32_t extraout_ECX_01;\n    int32_t iVar9;\n    int32_t iStack132;\n    uint uStack128;\n    uint32_t in_stack_ffffff98;\n    int32_t iStack80;\n    uchar auStack64 [20];\n    uint32_t uStack24;\n    \n    uVar3 = *(param_1 + 0x78);\n    *(param_1 + 0x78) = param_2;\n    *(param_1 + 0x14) = param_2 == 0;\n    if ((*(param_1 + 0x10) & param_2 == 0) == 0) {\n        return uVar3;\n    }\n    fcn.004be7b0(\"basic_ios::clear\");\n    if (extraout_ECX_00 == uStack24) {\n        return extraout_ECX_00;\n    }\n    iVar8 = *(uStack24 + 100);\n    if (8 < iVar8) {\n        if (0xfffffff < iVar8) goto code_r0x004bccc0;\n        puVar7 = fcn.004c3410(iVar8 << 3);\n        iVar8 = *(uStack24 + 100) + -1;\n        if (-1 < iVar8) {\n            do {\n                iVar8 = iVar8 + -1;\n                *puVar7 = 0;\n                puVar7[1] = 0;\n                puVar7 = puVar7 + 2;\n            } while (iVar8 != -1);\n        }\n    }\n    iVar8 = *(uStack24 + 0x18);\n    if (iVar8 != 0) {\n        if (*0x515a34 == 0) {\n            *(iVar8 + 0xc) = *(iVar8 + 0xc) + 1;\n        }\n        else {\n            LOCK();\n            *(iVar8 + 0xc) = *(iVar8 + 0xc) + 1;\n        }\n    }\n    in_stack_ffffff98 = 0;\n    fcn.004ba180();\n    iVar4 = *(extraout_ECX_00 + 0x68);\n    if (iVar4 != extraout_ECX_00 + 0x24) {\n        if (iVar4 != 0) {\n            fcn.004c33e0(iVar4);\n        }\n        *(extraout_ECX_00 + 0x68) = 0;\n    }\n    fcn.004ba200();\n    iVar4 = *(uStack24 + 100);\n    *(extraout_ECX_00 + 0x18) = iVar8;\n    if (0 < iVar4) {\n        iVar8 = *(uStack24 + 0x68);\n        iVar9 = 0;\n        do {\n            uVar5 = *(iVar8 + 4 + iVar9);\n            *(iStack80 + iVar9) = *(iVar8 + iVar9);\n            *(iStack80 + 4 + iVar9) = uVar5;\n            iVar9 = iVar9 + 8;\n        } while (iVar9 != iVar4 * 8);\n    }\n    *(extraout_ECX_00 + 0x68) = iStack80;\n    uVar5 = *(uStack24 + 0xc);\n    *(extraout_ECX_00 + 100) = iVar4;\n    cVar1 = *(uStack24 + 0x76);\n    *(extraout_ECX_00 + 0xc) = uVar5;\n    *(extraout_ECX_00 + 8) = *(uStack24 + 8);\n    *(extraout_ECX_00 + 4) = *(uStack24 + 4);\n    *(extraout_ECX_00 + 0x70) = *(uStack24 + 0x70);\n    if (cVar1 == '\\0') {\n        if (*(uStack24 + 0x7c) != NULL) {\n            uVar6 = (**(**(uStack24 + 0x7c) + 0x28))(0x20);\n            *(uStack24 + 0x76) = 1;\n            cVar1 = *(extraout_ECX_00 + 0x76);\n            *(uStack24 + 0x74) = uVar6;\n            goto joined_r0x004bcfb4;\n        }\n    }\n    else {\n        cVar1 = *(extraout_ECX_00 + 0x76);\n        uVar6 = *(uStack24 + 0x74);\njoined_r0x004bcfb4:\n        if (cVar1 != '\\0') {\ncode_r0x004bced6:\n            *(extraout_ECX_00 + 0x74) = uVar6;\n            fcn.004af3a0(uStack24 + 0x6c);\n            fcn.004af510(auStack64);\n            fcn.004af4c0();\n            fcn.004bca50(extraout_ECX_00 + 0x6c);\n            fcn.004ba180(2);\n            *(extraout_ECX_00 + 0x10) = *(uStack24 + 0x10);\n            fcn.004bccc0(*(extraout_ECX_00 + 0x14));\n            return extraout_ECX_00;\n        }\n        if (*(extraout_ECX_00 + 0x7c) != NULL) {\n            (**(**(extraout_ECX_00 + 0x7c) + 0x28))(0x20);\n            *(extraout_ECX_00 + 0x76) = 1;\n            goto code_r0x004bced6;\n        }\n    }\n    fcn.004be620();\ncode_r0x004bccc0:\n    fcn.004c3b60();\n    in_stack_ffffff98 = in_stack_ffffff98 | *(extraout_ECX_01 + 0x14);\n    if (*(extraout_ECX_01 + 0x78) == 0) {\n        in_stack_ffffff98 = in_stack_ffffff98 | 1;\n    }\n    *(extraout_ECX_01 + 0x14) = in_stack_ffffff98;\n    if ((*(extraout_ECX_01 + 0x10) & in_stack_ffffff98) != 0) {\n        fcn.004be7b0(\"basic_ios::clear\");\n        fcn.004af3a0(iStack132 + 0x6c);\n        fcn.004baa20(iStack132, uStack128);\n        fcn.004af4c0();\n        fcn.004bca50(uStack128);\n        piVar2 = *(iStack132 + 0x78);\n        if (piVar2 != NULL) {\n            fcn.004af3a0(piVar2 + 7);\n            (**(*piVar2 + 8))(uStack128);\n            fcn.004af510(uStack128);\n            fcn.004af4c0();\n        }\n        return extraout_ECX;\n    }\n    return in_stack_ffffff98;\n}\n",
        "token_count": 1648
    },
    "004bde30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004bde30(void)\n\n{\n    uint8_t *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uchar uVar5;\n    uchar uVar6;\n    \n    uVar5 = &stack0xfffffff4 < 0x10;\n    uVar6 = *0x10 == 0x1c;\n    puVar1 = sub.msvcrt.dll_setlocale();\n    iVar3 = 2;\n    puVar4 = 0x523d35;\n    do {\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        uVar5 = *puVar1 < *puVar4;\n        uVar6 = *puVar1 == *puVar4;\n        puVar1 = puVar1 + 1;\n        puVar4 = puVar4 + 1;\n    } while (uVar6);\n    if ((!uVar5 && !uVar6) == uVar5) {\n        uVar2 = fcn.0043e700();\n        return uVar2;\n    }\n    sub.msvcrt.dll_strlen();\n    fcn.004c3410();\n    sub.msvcrt.dll_memcpy();\n    sub.msvcrt.dll_setlocale();\n    uVar2 = fcn.0043e700();\n    sub.msvcrt.dll_setlocale();\n    fcn.004c33e0();\n    return uVar2;\n}\n",
        "token_count": 319
    },
    "004be6e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004be6e0(uint param_1, uint param_2, uint *param_3)\n\n{\n    fcn.004beec0(param_1, param_2, *param_3, param_3[1]);\n    return;\n}\n",
        "token_count": 58
    },
    "004be720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.004be720(uint param_1, uint param_2, int32_t *param_3)\n\n{\n    fcn.004beec0(param_1, param_2, *param_3, *(*param_3 + -0xc));\n    return;\n}\n",
        "token_count": 61
    },
    "004be790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004be790(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004c3880();\n    return *(iVar1 + 4) & 0xffffff00 | *(iVar1 + 4) != 0;\n}\n",
        "token_count": 60
    },
    "004bf9f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004bf9f0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.004522b0();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004c3b90(iVar2, 0x5285b0, 0x528cac, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 203
    },
    "004bfa40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004bfa40(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.004522b0();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004c3b90(iVar2, 0x5285b0, 0x528ccc, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 202
    },
    "004bfa90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004bfa90(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.004522b0();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004c3b90(iVar2, 0x5285b0, 0x528cf0, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 203
    },
    "004bfae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004bfae0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.004522b0();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004c3b90(iVar2, 0x5285b0, 0x528cfc, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 204
    },
    "004bfbd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004bfbd0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.004522b0();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004c3b90(iVar2, 0x5285b0, 0x528d20, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 203
    },
    "004bfc20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004bfc20(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.004522b0();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004c3b90(iVar2, 0x5285b0, 0x528d2c, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 204
    },
    "004bfc70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004bfc70(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.004522b0();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004c3b90(iVar2, 0x5285b0, 0x528d38, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 203
    },
    "004bfcc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004bfcc0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.004522b0();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004c3b90(iVar2, 0x5285b0, 0x528d44, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 203
    },
    "004c06e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c06e0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffd10;\n    int32_t *in_stack_fffffd2c;\n    int32_t *in_stack_fffffd48;\n    int32_t *in_stack_fffffd64;\n    int32_t *in_stack_fffffd80;\n    int32_t *in_stack_fffffd9c;\n    int32_t *in_stack_fffffdb8;\n    int32_t *in_stack_fffffdd4;\n    int32_t *in_stack_fffffdf0;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.004522b0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x52882c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x52884c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x52886c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x52888c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x5288ac, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x5288b8, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528cac, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528ccc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528cf0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528cfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d14, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe98 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d20, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe98 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe7c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d2c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe7c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe60 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d38, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe60 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe44 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe44 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe28 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe28 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe0c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe0c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffdf0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffdf0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdf0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffdd4 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffdd4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdd4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffdb8 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffdb8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdb8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffd9c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffd9c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd9c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffd80 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffd80 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd80 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffd64 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffd64 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd64 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffd48 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffd48 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd48 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffd2c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffd2c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd2c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffd10 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffd10 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd10 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    iVar3 = fcn.00455550();\n    iVar4 = fcn.00455550();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00455550();\n        arg_ch = fcn.004553b0();\n        s1 = fcn.004553b0();\n        iVar3 = fcn.0048fd80(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 5356
    },
    "004c0740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c0740(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffd2c;\n    int32_t *in_stack_fffffd48;\n    int32_t *in_stack_fffffd64;\n    int32_t *in_stack_fffffd80;\n    int32_t *in_stack_fffffd9c;\n    int32_t *in_stack_fffffdb8;\n    int32_t *in_stack_fffffdd4;\n    int32_t *in_stack_fffffdf0;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.004522b0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x52884c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x52886c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x52888c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x5288ac, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x5288b8, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528cac, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528ccc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528cf0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528cfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d14, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d20, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe98 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d2c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe98 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe7c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d38, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe7c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe60 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe60 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe44 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe44 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe28 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe28 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe0c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe0c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffdf0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffdf0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdf0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffdd4 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffdd4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdd4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffdb8 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffdb8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdb8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffd9c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffd9c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd9c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffd80 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffd80 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd80 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffd64 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffd64 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd64 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffd48 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffd48 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd48 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffd2c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffd2c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd2c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    iVar3 = fcn.00455550();\n    iVar4 = fcn.00455550();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00455550();\n        arg_ch = fcn.004553b0();\n        s1 = fcn.004553b0();\n        iVar3 = fcn.0048fd80(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 5169
    },
    "004c07a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c07a0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffd48;\n    int32_t *in_stack_fffffd64;\n    int32_t *in_stack_fffffd80;\n    int32_t *in_stack_fffffd9c;\n    int32_t *in_stack_fffffdb8;\n    int32_t *in_stack_fffffdd4;\n    int32_t *in_stack_fffffdf0;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.004522b0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x52886c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x52888c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x5288ac, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x5288b8, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528cac, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528ccc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528cf0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528cfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d14, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d20, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d2c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe98 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d38, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe98 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe7c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe7c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe60 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe60 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe44 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe44 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe28 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe28 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe0c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe0c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffdf0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffdf0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdf0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffdd4 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffdd4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdd4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffdb8 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffdb8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdb8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffd9c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffd9c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd9c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffd80 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffd80 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd80 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffd64 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffd64 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd64 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffd48 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffd48 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd48 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    iVar3 = fcn.00455550();\n    iVar4 = fcn.00455550();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00455550();\n        arg_ch = fcn.004553b0();\n        s1 = fcn.004553b0();\n        iVar3 = fcn.0048fd80(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 4980
    },
    "004c0800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c0800(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffd64;\n    int32_t *in_stack_fffffd80;\n    int32_t *in_stack_fffffd9c;\n    int32_t *in_stack_fffffdb8;\n    int32_t *in_stack_fffffdd4;\n    int32_t *in_stack_fffffdf0;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.004522b0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x52888c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x5288ac, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x5288b8, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528cac, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528ccc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528cf0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528cfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d14, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d20, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d2c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d38, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe98 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe98 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe7c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe7c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe60 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe60 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe44 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe44 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe28 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe28 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe0c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe0c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffdf0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffdf0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdf0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffdd4 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffdd4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdd4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffdb8 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffdb8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdb8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffd9c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffd9c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd9c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffd80 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffd80 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd80 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffd64 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffd64 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd64 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    iVar3 = fcn.00455550();\n    iVar4 = fcn.00455550();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00455550();\n        arg_ch = fcn.004553b0();\n        s1 = fcn.004553b0();\n        iVar3 = fcn.0048fd80(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 4793
    },
    "004c0920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c0920(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffdb8;\n    int32_t *in_stack_fffffdd4;\n    int32_t *in_stack_fffffdf0;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.004522b0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528cac, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528ccc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528cf0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528cfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d14, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d20, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d2c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d38, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe98 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe98 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe7c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe7c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe60 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe60 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe44 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe44 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe28 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe28 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe0c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe0c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffdf0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffdf0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdf0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffdd4 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffdd4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdd4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffdb8 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffdb8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdb8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    iVar3 = fcn.00455550();\n    iVar4 = fcn.00455550();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00455550();\n        arg_ch = fcn.004553b0();\n        s1 = fcn.004553b0();\n        iVar3 = fcn.0048fd80(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 4230
    },
    "004c0980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c0980(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffdd4;\n    int32_t *in_stack_fffffdf0;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.004522b0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528ccc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528cf0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528cfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d14, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d20, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d2c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d38, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe98 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe98 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe7c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe7c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe60 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe60 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe44 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe44 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe28 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe28 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe0c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe0c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffdf0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffdf0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdf0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffdd4 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffdd4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdd4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    iVar3 = fcn.00455550();\n    iVar4 = fcn.00455550();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00455550();\n        arg_ch = fcn.004553b0();\n        s1 = fcn.004553b0();\n        iVar3 = fcn.0048fd80(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 4045
    },
    "004c09e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c09e0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffdf0;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.004522b0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528cf0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528cfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d14, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d20, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d2c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d38, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe98 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe98 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe7c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe7c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe60 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe60 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe44 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe44 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe28 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe28 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe0c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe0c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffdf0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffdf0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdf0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    iVar3 = fcn.00455550();\n    iVar4 = fcn.00455550();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00455550();\n        arg_ch = fcn.004553b0();\n        s1 = fcn.004553b0();\n        iVar3 = fcn.0048fd80(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 3857
    },
    "004c0a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c0a40(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.004522b0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528cfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d14, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d20, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d2c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d38, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe98 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe98 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe7c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe7c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe60 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe60 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe44 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe44 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe28 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe28 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe0c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe0c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    iVar3 = fcn.00455550();\n    iVar4 = fcn.00455550();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00455550();\n        arg_ch = fcn.004553b0();\n        s1 = fcn.004553b0();\n        iVar3 = fcn.0048fd80(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 3671
    },
    "004c0b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c0b60(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.004522b0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d20, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d2c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d38, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe98 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe98 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe7c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe7c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe60 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe60 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    iVar3 = fcn.00455550();\n    iVar4 = fcn.00455550();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00455550();\n        arg_ch = fcn.004553b0();\n        s1 = fcn.004553b0();\n        iVar3 = fcn.0048fd80(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 3109
    },
    "004c0bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c0bc0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.004522b0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d2c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d38, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe98 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe98 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe7c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe7c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    iVar3 = fcn.00455550();\n    iVar4 = fcn.00455550();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00455550();\n        arg_ch = fcn.004553b0();\n        s1 = fcn.004553b0();\n        iVar3 = fcn.0048fd80(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 2923
    },
    "004c0c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c0c20(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.004522b0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d38, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffe98 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe98 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    iVar3 = fcn.00455550();\n    iVar4 = fcn.00455550();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00455550();\n        arg_ch = fcn.004553b0();\n        s1 = fcn.004553b0();\n        iVar3 = fcn.0048fd80(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 2732
    },
    "004c0c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c0c80(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.004522b0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    iVar3 = fcn.00455550();\n    iVar4 = fcn.00455550();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00455550();\n        arg_ch = fcn.004553b0();\n        s1 = fcn.004553b0();\n        iVar3 = fcn.0048fd80(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 2546
    },
    "004c0da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c0da0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.004522b0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    iVar3 = fcn.00455550();\n    iVar4 = fcn.00455550();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00455550();\n        arg_ch = fcn.004553b0();\n        s1 = fcn.004553b0();\n        iVar3 = fcn.0048fd80(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1988
    },
    "004c0e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c0e00(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *var_8h;\n    uint var_ch;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.004522b0();\n    puVar1 = *var_8h + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*var_8h + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    uVar2 = fcn.004522b0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004be620();\n    }\n    else {\n        iVar3 = fcn.004c3b90(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c35a0();\n    iVar3 = fcn.00455550();\n    iVar4 = fcn.00455550();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00455550();\n        arg_ch = fcn.004553b0();\n        s1 = fcn.004553b0();\n        iVar3 = fcn.0048fd80(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1823
    },
    "004c1160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004c1160(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    uint var_8h;\n    uint var_ch;\n    \n    iVar1 = fcn.00455550();\n    iVar2 = fcn.00455550();\n    if (iVar1 == iVar2) {\n        arg_10h = fcn.00455550();\n        arg_ch = fcn.004553b0();\n        s1 = fcn.004553b0();\n        iVar1 = fcn.0048fd80(s1, arg_ch, arg_10h);\n        if (iVar1 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 172
    },
    "004c3430": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c3430(int32_t param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    if (param_1 == 0) {\n        param_1 = 1;\n    }\n    while( true ) {\n        iVar1 = sub.msvcrt.dll_malloc(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        pcVar2 = fcn.004bde10();\n        if (pcVar2 == NULL) break;\n        (*pcVar2)();\n    }\n    puVar3 = fcn.004c3540(4);\n    *puVar3 = 0x52ccdc;\n    iVar1 = 0x528e14;\n    fcn.004c3af0(puVar3, 0x528e14, fcn.004bc1d0);\n    if (iVar1 == 0) {\n        iVar1 = 1;\n    }\n    while( true ) {\n        iVar4 = sub.msvcrt.dll_malloc(iVar1);\n        if (iVar4 != 0) {\n            return iVar4;\n        }\n        pcVar2 = fcn.004bde10();\n        if (pcVar2 == NULL) break;\n        (*pcVar2)();\n    }\n    return 0;\n}\n",
        "token_count": 301
    },
    "004c3680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c3680(uint32_t *param_1)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    code *pcVar8;\n    ulong uVar9;\n    int32_t iStack24;\n    \n    if ((param_1 == NULL) ||\n       (fcn.004c3600(param_1),  iVar7 = param_1[1] + 0xb8b1aabc + (0x432b2aff < *param_1), \n       iVar7 != 0 || -iVar7 < (1 < *param_1 + 0xbcd4d500))) {\n        fcn.004c00d0();\n    }\n    fcn.00448780(param_1[-9]);\n    fcn.004c3600(iStack24);\n    uVar5 = *(iStack24 + -0x18);\n    uVar1 = *(iStack24 + -0x24);\n    uVar3 = fcn.004487a0(*(iStack24 + -0x28));\n    fcn.004c3600(uVar3);\n    fcn.004c38a0();\n    while( true ) {\n        fcn.00448440();\n        cVar2 = fcn.00448520(uVar5);\n        if (cVar2 != '\\0') break;\n        cVar2 = fcn.00448520(uVar5);\n        if (cVar2 != '\\0') goto code_r0x004c441e;\n        fcn.00448780(uVar1);\n    }\n    fcn.004c3a90();\ncode_r0x004c441e:\n    puVar4 = fcn.004c3540(4);\n    *puVar4 = 0x52c0b4;\n    fcn.004c3af0(puVar4, 0x528938, 0x4968c0);\n    uVar5 = sub.msvcrt.dll_abort();\n    fcn.004c3600(uVar5);\n    uVar9 = sub.msvcrt.dll_abort();\n    fcn.004c3770();\n    pcVar8 = (uVar9 >> 0x20) + 1;\n    if (pcVar8 != NULL) {\n        fcn.0043b0b0(uVar9);\n    }\n    uVar9 = fcn.004c36d0();\n    uVar5 = uVar9;\n    if (uVar9 >> 0x20 != 1) goto code_r0x004c44fd;\n    piVar6 = fcn.004c3600(uVar5);\n    uVar5 = (**(*piVar6 + 8))();\n    uVar3 = (*pcVar8)(2);\n    sub.msvcrt.dll_fwrite(\"  what():  \", 1, 0xb, uVar3);\n    uVar3 = (*pcVar8)(2);\n    sub.msvcrt.dll_fputs(uVar5, uVar3);\n    uVar5 = (*pcVar8)(2);\n    sub.msvcrt.dll_fputc(10, uVar5);\n    fcn.004c3770();\n    do {\n        sub.msvcrt.dll_abort();\n        uVar5 = uVar1;\n        fcn.00447658(uVar1);\n        fcn.004c3a90();\ncode_r0x004c44fd:\n        fcn.004c3600(uVar5);\n        fcn.004c3770();\n    } while( true );\n}\n",
        "token_count": 796
    },
    "004c3880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c3880(void)\n\n{\n    fcn.0043cbf0(0x517504);\n    return;\n}\n",
        "token_count": 31
    },
    "004c39d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004c39d0(uchar *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *unaff_EBX;\n    int32_t *unaff_EBP;\n    ulong uVar4;\n    uchar *in_stack_00000034;\n    int32_t in_stack_00000038;\n    uint uVar5;\n    \n    param_1[1] = 0;\n    *param_1 = 1;\n    piVar3 = *0x515a34;\n    if ((*0x515a34 == NULL) || (piVar3 = fcn.00438c80(*0x5168e0),  piVar3 == NULL)) {\n        return piVar3;\n    }\n    uVar4 = fcn.0044a500();\n    if (uVar4 >> 0x20 == -1) {\n        fcn.004c36d0(uVar4);\n    }\n    uVar4 = fcn.0043b0b0();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0043b0b0(uVar4);\n    }\n    uVar4 = fcn.004c36d0();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0043b0b0(uVar4);\n    }\n    uVar4 = fcn.004c36d0();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0043b0b0(uVar4);\n    }\n    uVar4 = fcn.004c36d0();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0043b0b0(uVar4);\n    }\n    uVar4 = fcn.004c36d0();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0043b0b0(uVar4);\n    }\n    uVar4 = fcn.004c36d0();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0043b0b0(uVar4);\n    }\n    fcn.004c36d0();\n    *unaff_EBX = 0x52c8b4;\n    fcn.004af220();\n    fcn.0043b0b0();\n    *unaff_EBX = 0x52c8e0;\n    fcn.004af220();\n    fcn.0043b0b0();\n    fcn.004c33f0();\n    fcn.0043b0b0();\n    fcn.004c33f0();\n    fcn.0043b0b0();\n    *unaff_EBX = 0x52c8b4;\n    fcn.004af220();\n    fcn.0043b0b0();\n    *unaff_EBX = 0x52c8e0;\n    fcn.004af220();\n    uVar4 = fcn.0043b0b0();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0043b0b0(uVar4);\n    }\n    uVar4 = fcn.004c36d0();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0043b0b0(uVar4);\n    }\n    uVar4 = fcn.004c36d0();\n    uVar5 = uVar4;\n    if (uVar4 >> 0x20 != 1) {\ncode_r0x004c5626:\n        fcn.004c3600(uVar5);\n        iVar2 = *(*unaff_EBP + -0xc);\n        puVar1 = unaff_EBP + iVar2 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(unaff_EBP + iVar2 + 0x10) & 1) != 0) {\n            fcn.004c3a90();\n        }\n        fcn.004c3770();\n        if (in_stack_00000038 < 1) {\n            iVar2 = unaff_EBP[1];\n        }\n        else {\n            *in_stack_00000034 = 0;\n            iVar2 = unaff_EBP[1];\n        }\n        if (iVar2 != 0) {\n            return unaff_EBP;\n        }\n        fcn.004bc4a0(*(unaff_EBP + *(*unaff_EBP + -0xc) + 0x14) | 4);\n        return unaff_EBP;\n    }\n    fcn.004c3600(uVar5);\n    unaff_EBP = unaff_EBP + *(*unaff_EBP + -0xc);\n    unaff_EBP[5] = unaff_EBP[5] | 1;\n    if ((*(unaff_EBP + 4) & 1) != 0) {\n        fcn.004c3a90();\n        goto code_r0x004c5626;\n    }\n    piVar3 = fcn.004c3a90();\n    fcn.004c3770();\n    uVar4 = fcn.0043b0b0(piVar3);\n    uVar5 = uVar4;\n    if (uVar4 >> 0x20 == 1) {\n        fcn.004c3600(uVar5);\n        piVar3 = piVar3 + *(*piVar3 + -0xc);\n        piVar3[5] = piVar3[5] | 1;\n        if ((*(piVar3 + 4) & 1) != 0) {\n            fcn.004c3a90();\n            goto code_r0x004c56ad;\n        }\n    }\n    else {\ncode_r0x004c56ad:\n        fcn.004c3600(uVar5);\n        iVar2 = *(*piVar3 + -0xc);\n        puVar1 = piVar3 + iVar2 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(piVar3 + iVar2 + 0x10) & 1) == 0) goto code_r0x00488566;\n        fcn.004c3a90();\n    }\n    piVar3 = fcn.004c3a90();\n    fcn.004c3770();\n    fcn.0043b0b0(piVar3);\ncode_r0x00488566:\n    fcn.004c3770();\n    return piVar3;\n}\n",
        "token_count": 1474
    },
    "004c3a90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004c3a90(void)\n\n{\n    int32_t *piVar1;\n    int32_t extraout_EDX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    piVar1 = fcn.004c3880();\n    iVar2 = *piVar1;\n    piVar1[1] = piVar1[1] + 1;\n    if (iVar2 == 0) goto code_r0x004c3ae1;\n    iVar3 = *(iVar2 + 0x34) + -0x474e5544 + (0x432b2aff < *(iVar2 + 0x30));\n    if (iVar3 == 0 && (1 < *(iVar2 + 0x30) + 0xbcd4d500) <= -iVar3) goto code_r0x004c3ae6;\n    *piVar1 = 0;\n    do {\n        fcn.0043b150(iVar2 + 0x30);\n        fcn.004c3600(iVar2 + 0x30);\ncode_r0x004c3ae1:\n        fcn.004c00d0();\n        iVar2 = extraout_EDX;\ncode_r0x004c3ae6:\n        *(iVar2 + 0x14) = -*(iVar2 + 0x14);\n    } while( true );\n}\n",
        "token_count": 304
    },
    "004c3af0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c3af0(int32_t param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    uint32_t uStack120;\n    uint uStack76;\n    uint uStack44;\n    int32_t iStack40;\n    \n    iVar1 = fcn.004c3880();\n    *(iVar1 + 4) = *(iVar1 + 4) + 1;\n    *(param_1 + -0x60) = 0;\n    *(param_1 + -0x50) = param_2;\n    *(param_1 + -0x4c) = param_3;\n    uVar2 = fcn.004bddf0();\n    *(param_1 + -0x48) = uVar2;\n    uVar2 = fcn.004bd7d0();\n    *(param_1 + -0x20) = 0x432b2b00;\n    *(param_1 + -0x44) = uVar2;\n    *(param_1 + -0x1c) = 0x474e5543;\n    *(param_1 + -0x18) = 0x4485f0;\n    *(param_1 + -0x60) = 1;\n    fcn.0043aeb0();\n    fcn.004c3600();\n    fcn.004c00d0();\n    puVar3 = fcn.004c3540();\n    *puVar3 = 0x52c7c8;\n    fcn.004c3af0();\n    piVar5 = *(*0x528bbc + -8) + 0x528bbc;\n    if (*(*piVar5 + -4) == *(*0x528bbc + -4)) {\n        iVar1 = iStack40;\n        (**(**(*0x528bbc + -4) + 0x1c))(iStack40, 6, uStack44, piVar5);\n        if ((uStack120 & 6) == 6) {\n            return 0x4ac170;\n        }\n        if (uStack120 == 0) {\n            if (iStack40 < 0) {\n                if ((iStack40 != -2) &&\n                   (uVar4 = (**(*(param_1 + -0x20) + 0x20))(iStack40, 0x4ac170, uStack76, 0x528bbc),  (uVar4 & 6) == 6))\n                {\n                    return iVar1;\n                }\n            }\n            else if (iStack40 == 0x7ca4c) {\n                return 0x4ac170;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 629
    },
    "004386a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.004386a0(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint *puVar2;\n    uint32_t uStack8;\n    \n    puVar2 = &stack0x00000004;\n    uVar1 = in_EAX;\n    if (0xfff < in_EAX) {\n        do {\n            puVar2 = puVar2 + -0x400;\n            *puVar2 = *puVar2;\n            uVar1 = uVar1 - 0x1000;\n        } while (0x1000 < uVar1);\n    }\n    uStack8 = in_EAX;\n    *(puVar2 - uVar1) = *(puVar2 - uVar1);\n    return uStack8;\n}\n",
        "token_count": 173
    },
    "00451800": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.00451800(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_bp_4h;\n    \n    (**(*arg_8h + 0x10))(arg_8h, arg_ch);\n    fcn.00490df0(var_20h, var_1ch);\n    if (var_20h != &var_18h) {\n        fcn.004c33f0(var_20h);\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "00492550": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint fcn.00492550(uint param_1, int32_t *param_2, uint param_3, uint param_4, uchar param_5, uint param_6, \n                 ushort param_7, unkbyte10 param_8, int32_t *param_9)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    uint var_40h;\n    uint var_3ch;\n    uint var_30h_5;\n    uint var_28h_2;\n    uint32_t in_stack_ffffff9c;\n    uint var_1ch_5;\n    uint var_20h_3;\n    uchar *var_30h_4;\n    uchar auStack44 [28];\n    \n    if (param_9 == NULL) {\n        uVar3 = (**(*param_2 + 8))(param_3, param_4, param_5, param_6, param_7, param_8);\n        return uVar3;\n    }\n    if (param_9[6] != 0) {\n        var_30h_4 = auStack44;\n        fcn.004b3830(*param_9, *param_9 + param_9[1] * 2, in_stack_ffffff9c & 0xffffff00);\n        uVar3 = (**(*param_2 + 0xc))(param_3, param_4, param_5, param_6, param_7, &var_30h_4);\n        if (var_30h_4 != auStack44) {\n            fcn.004c33f0(var_30h_4);\n        }\n        return uVar3;\n    }\n    uVar3 = fcn.004be9d0(\"uninitialized __any_string\");\n    if (var_30h_4 != auStack44) {\n        fcn.004c33f0(var_30h_4);\n    }\n    fcn.0043b0b0(uVar3);\n    iVar4 = *0x515a34;\n    *extraout_ECX = 0x52b530;\n    piVar2 = extraout_ECX[3];\n    if (iVar4 == 0) {\n        iVar4 = piVar2[1];\n        piVar2[1] = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = piVar2 + 1;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar4 == 1) {\n        (**(*piVar2 + 4))();\n    }\n    *extraout_ECX = 0x52cab0;\n    fcn.004af1f0(extraout_ECX + 2);\n    fcn.004af220();\n    uVar3 = fcn.004c33f0(extraout_ECX);\n    return uVar3;\n}\n",
        "token_count": 659
    },
    "00494300": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl\nfcn.00494300(uint noname_0, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h\n            , int32_t arg_24h)\n\n{\n    uint *var_48h;\n    uint var_40h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_48h = &var_40h;\n    fcn.004b3830(arg_20h, arg_20h + arg_24h * 2, 0);\n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h, arg_1ch, &var_48h);\n    if (arg_10h[6] != NULL) {\n        (*arg_10h[6])(arg_10h);\n    }\n    *arg_10h = arg_10h + 2;\n    fcn.004b38e0(var_30h, var_30h + var_2ch * 2, 0);\n    arg_10h[6] = 0x493f40;\n    if (var_30h != &var_28h) {\n        fcn.004c33f0(var_30h);\n    }\n    if (var_48h != &var_40h) {\n        fcn.004c33f0(var_48h);\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "004949f0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.004949f0(uint noname_0, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_bp_4h;\n    \n    uVar1 = 0x494a16;\n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h);\n    if (arg_10h[6] != NULL) {\n        (*arg_10h[6])(arg_10h);\n    }\n    *arg_10h = arg_10h + 2;\n    fcn.004b38e0(var_20h, var_20h + var_1ch * 2, uVar1 & 0xffffff00);\n    arg_10h[6] = 0x493f40;\n    if (var_20h != &fcn.004949f0::var_18h) {\n        fcn.004c33f0(var_20h);\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "00448e50": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00448e50(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.00498580();\n    *in_ECX = 0x52b3f4;\n    fcn.00490bc0(arg_8h, arg_ch);\n    cVar2 = fcn.0044e7f0();\n    if (cVar2 == '\\0') {\n        return;\n    }\n    in_ECX[0xc] = arg_ch;\n    in_ECX[0x11] = arg_10h;\n    fcn.00496ce0();\n    in_ECX[5] = 0;\n    *(in_ECX + 0x49) = 0;\n    uVar1 = in_ECX[0x10];\n    in_ECX[4] = 0;\n    in_ECX[1] = uVar1;\n    in_ECX[2] = uVar1;\n    in_ECX[3] = uVar1;\n    in_ECX[6] = 0;\n    return;\n}\n",
        "token_count": 274
    },
    "00448fb0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00448fb0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.00498580();\n    *in_ECX = 0x52b3f4;\n    fcn.00490bc0(arg_8h, arg_ch);\n    cVar2 = fcn.0044e7f0();\n    if (cVar2 == '\\0') {\n        return;\n    }\n    in_ECX[0xc] = arg_ch;\n    in_ECX[0x11] = arg_10h;\n    fcn.00496ce0();\n    in_ECX[5] = 0;\n    *(in_ECX + 0x49) = 0;\n    uVar1 = in_ECX[0x10];\n    in_ECX[4] = 0;\n    in_ECX[1] = uVar1;\n    in_ECX[2] = uVar1;\n    in_ECX[3] = uVar1;\n    in_ECX[6] = 0;\n    return;\n}\n",
        "token_count": 274
    },
    "004491e0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004491e0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.0049a560();\n    *in_ECX = 0x52b434;\n    fcn.00490bc0(arg_8h, arg_ch);\n    cVar2 = fcn.0044e7f0();\n    if (cVar2 == '\\0') {\n        return;\n    }\n    in_ECX[0xc] = arg_ch;\n    in_ECX[0x11] = arg_10h;\n    fcn.00498c70();\n    in_ECX[5] = 0;\n    *(in_ECX + 0x49) = 0;\n    uVar1 = in_ECX[0x10];\n    in_ECX[4] = 0;\n    in_ECX[1] = uVar1;\n    in_ECX[2] = uVar1;\n    in_ECX[3] = uVar1;\n    in_ECX[6] = 0;\n    return;\n}\n",
        "token_count": 273
    },
    "00449340": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00449340(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.0049a560();\n    *in_ECX = 0x52b434;\n    fcn.00490bc0(arg_8h, arg_ch);\n    cVar2 = fcn.0044e7f0();\n    if (cVar2 == '\\0') {\n        return;\n    }\n    in_ECX[0xc] = arg_ch;\n    in_ECX[0x11] = arg_10h;\n    fcn.00498c70();\n    in_ECX[5] = 0;\n    *(in_ECX + 0x49) = 0;\n    uVar1 = in_ECX[0x10];\n    in_ECX[4] = 0;\n    in_ECX[1] = uVar1;\n    in_ECX[2] = uVar1;\n    in_ECX[3] = uVar1;\n    in_ECX[6] = 0;\n    return;\n}\n",
        "token_count": 272
    },
    "0044ebf0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.0044ebf0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    uint uVar1;\n    uint32_t in_stack_ffffffb4;\n    uchar var_25h;\n    uint var_24h;\n    uint var_20h;\n    code *pcStack32;\n    code *var_ch;\n    uint var_bp_8h;\n    \n    var_ch = NULL;\n    fcn.004940c0(in_stack_ffffffb4 & 0xffffff00, *(arg_8h + 0x10), &var_24h, arg_ch, arg_10h, arg_14h, *arg_18h, \n                 *(*arg_18h + -0xc));\n    if (var_ch != NULL) {\n        fcn.0048d4c0(var_24h, var_20h, &var_25h);\n        if (var_ch != NULL) {\n            (*var_ch)(&var_24h);\n        }\n        return;\n    }\n    uVar1 = fcn.004be9d0(0x523804);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0043b0b0(uVar1);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0043b0b0(uVar1);\n    fcn.0048bdf0(&stack0xffffffbf);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(uVar1);\n    }\n    fcn.0043b0b0(&var_24h);\n    fcn.00483f30(&stack0xffffffbf);\n    if (pcStack32 != NULL) {\n        (*pcStack32)();\n    }\n    fcn.0043b0b0(uVar1);\n    fcn.004af220();\n    fcn.004c33f0(uVar1);\n    fcn.0043b0b0(&var_24h);\n    fcn.004af220();\n    fcn.004c33f0(uVar1);\n    fcn.0043b0b0(&var_24h);\n    fcn.004af220();\n    do {\n        fcn.004c33f0(uVar1);\n        fcn.0043b0b0(&var_24h);\n        fcn.004c33f0(uVar1);\n        fcn.0043b0b0(&var_24h);\n        fcn.00453c10();\n        fcn.0048e6f0();\n    } while( true );\n}\n",
        "token_count": 619
    },
    "0044ed70": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.0044ed70(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    uint32_t in_stack_ffffffb4;\n    uint *puVar2;\n    int32_t var_24h;\n    int32_t var_20h;\n    code *pcStack32;\n    code *var_ch;\n    uint var_bp_8h;\n    \n    var_ch = NULL;\n    puVar2 = &var_24h;\n    fcn.004941b0(in_stack_ffffffb4 & 0xffffff00, *(arg_8h + 0x10), &var_24h, arg_ch, arg_10h, arg_14h, *arg_18h, \n                 arg_18h[1]);\n    if (var_ch != NULL) {\n        *in_ECX = in_ECX + 2;\n        fcn.004b3830(var_24h, var_24h + var_20h * 2, puVar2 & 0xffffff00);\n        if (var_ch != NULL) {\n            (*var_ch)(&var_24h);\n        }\n        return;\n    }\n    uVar1 = fcn.004be9d0(\"uninitialized __any_string\");\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0043b0b0(uVar1);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(&var_24h);\n    }\n    fcn.0043b0b0(uVar1);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(&var_24h);\n    }\n    fcn.0043b0b0(uVar1);\n    fcn.004af220();\n    fcn.004c33f0(uVar1);\n    fcn.0043b0b0(&var_24h);\n    fcn.004af220();\n    fcn.004c33f0(uVar1);\n    fcn.0043b0b0(&var_24h);\n    fcn.004af220();\n    do {\n        fcn.004c33f0(uVar1);\n        fcn.0043b0b0(&var_24h);\n        fcn.004c33f0(uVar1);\n        fcn.0043b0b0(&var_24h);\n        fcn.00453c10();\n        fcn.004afd30();\n    } while( true );\n}\n",
        "token_count": 598
    },
    "0044ee20": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.0044ee20(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    uint uVar1;\n    uint32_t in_stack_ffffffb4;\n    uchar var_25h;\n    uint var_24h;\n    uint var_20h;\n    code *pcStack32;\n    code *var_ch;\n    uint var_bp_8h;\n    \n    var_ch = NULL;\n    fcn.00494300(in_stack_ffffffb4 & 0xffffff00, *(arg_8h + 0x10), &var_24h, arg_ch, arg_10h, arg_14h, *arg_18h, \n                 *(*arg_18h + -0xc));\n    if (var_ch != NULL) {\n        fcn.00485730(var_24h, var_20h, &var_25h);\n        if (var_ch != NULL) {\n            (*var_ch)(&var_24h);\n        }\n        return;\n    }\n    uVar1 = fcn.004be9d0(0x523804);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0043b0b0(uVar1);\n    fcn.0048bdf0(&stack0xffffffbf);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(uVar1);\n    }\n    fcn.0043b0b0(&var_24h);\n    fcn.00483f30(&stack0xffffffbf);\n    if (pcStack32 != NULL) {\n        (*pcStack32)();\n    }\n    fcn.0043b0b0(uVar1);\n    fcn.004af220();\n    fcn.004c33f0(uVar1);\n    fcn.0043b0b0(&var_24h);\n    fcn.004af220();\n    fcn.004c33f0(uVar1);\n    fcn.0043b0b0(&var_24h);\n    fcn.004af220();\n    do {\n        fcn.004c33f0(uVar1);\n        fcn.0043b0b0(&var_24h);\n        fcn.004c33f0(uVar1);\n        fcn.0043b0b0(&var_24h);\n        fcn.00453c10();\n        fcn.0048e6f0();\n    } while( true );\n}\n",
        "token_count": 578
    },
    "004501d0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl fcn.004501d0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint32_t in_stack_ffffff78;\n    uint32_t in_stack_ffffff8c;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_34h;\n    uint var_2ch;\n    code *var_1ch;\n    uint var_bp_ch;\n    \n    var_1ch = NULL;\n    var_34h = &var_2ch;\n    fcn.004b38e0(*arg_1ch, *arg_1ch + arg_1ch[1] * 2, in_stack_ffffff8c & 0xffffff00);\n    var_1ch = 0x493f40;\n    uVar1 = fcn.00492410(in_stack_ffffff78 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0, \n                         &var_34h);\n    if (var_1ch != NULL) {\n        (*var_1ch)(&var_34h);\n    }\n    return uVar1;\n}\n",
        "token_count": 317
    },
    "0043e0e0": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0043e0e0(void)\n\n{\n    // WARNING: Could not recover jumptable at 0x00447680. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_fopen)();\n    return;\n}\n",
        "token_count": 63
    },
    "00447680": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00447680(void)\n\n{\n    // WARNING: Could not recover jumptable at 0x00447680. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_fopen)();\n    return;\n}\n",
        "token_count": 60
    },
    "0042e4a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0042e4a0(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((in_EAX == NULL) || (*in_EAX != 0x2f)) {\n        return NULL;\n    }\n    if (param_2 < 1) {\n        if (param_2 != 0) {\n            return NULL;\n        }\n    }\n    else {\n        do {\n            in_EAX = in_EAX[3];\n            param_2 = param_2 + -1;\n            if (in_EAX == NULL) {\n                return in_EAX;\n            }\n            if (*in_EAX != 0x2f) {\n                return NULL;\n            }\n        } while (param_2 != 0);\n    }\n    return in_EAX[2];\n}\n",
        "token_count": 186
    },
    "0042e4e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0042e4e0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x110) == 0) {\n        *(in_EAX + 0x118) = 1;\n        return NULL;\n    }\n    iVar2 = *param_2;\n    piVar1 = *(*(*(in_EAX + 0x110) + 4) + 0xc);\n    if (iVar2 < 0) {\n        return piVar1;\n    }\n    if ((piVar1 == NULL) || (*piVar1 != 0x2f)) {\n        return NULL;\n    }\n    if (iVar2 < 1) {\n        if (iVar2 != 0) {\n            return NULL;\n        }\n    }\n    else {\n        do {\n            piVar1 = piVar1[3];\n            iVar2 = iVar2 + -1;\n            if (piVar1 == NULL) {\n                return piVar1;\n            }\n            if (*piVar1 != 0x2f) {\n                return NULL;\n            }\n        } while (iVar2 != 0);\n    }\n    return piVar1[2];\n}\n",
        "token_count": 287
    },
    "0042f000": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0042f000(void)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_EAX;\n    char *pcVar5;\n    int32_t *piVar6;\n    int32_t aiStack32 [4];\n    \n    if (1 < **(in_EAX + 0xc) + 0xb7U) {\n        return 0;\n    }\n    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n    pcVar5 = *(in_EAX + 0xc);\n    uVar4 = *(in_EAX + 0x28);\n    cVar2 = *pcVar5;\n    if (cVar2 == 'E') {\n        *(in_EAX + 0xc) = pcVar5 + 1;\n        uVar4 = fcn.0042dc50(0);\n        return uVar4;\n    }\n    aiStack32[0] = 0;\n    piVar6 = aiStack32;\n    do {\n        if (cVar2 == 'L') {\n            iVar3 = fcn.0042e640();\n        }\n        else if (cVar2 < 'M') {\n            if (1 < cVar2 + 0xb7U) goto code_r0x0042efa0;\n            iVar3 = fcn.0042f000();\n        }\n        else if (cVar2 == 'X') {\n            uVar1 = *(in_EAX + 0x30);\n            *(in_EAX + 0x30) = 1;\n            *(in_EAX + 0xc) = pcVar5 + 1;\n            iVar3 = fcn.0042e7c0();\n            *(in_EAX + 0x30) = uVar1;\n            if (**(in_EAX + 0xc) != 'E') {\n                return 0;\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n        }\n        else {\ncode_r0x0042efa0:\n            iVar3 = fcn.0042f510();\n        }\n        if (iVar3 == 0) {\n            return 0;\n        }\n        iVar3 = fcn.0042dc50(0);\n        *piVar6 = iVar3;\n        if (iVar3 == 0) {\n            return 0;\n        }\n        pcVar5 = *(in_EAX + 0xc);\n        piVar6 = iVar3 + 0xc;\n        cVar2 = *pcVar5;\n        if (cVar2 == 'E') {\n            *(in_EAX + 0x28) = uVar4;\n            *(in_EAX + 0xc) = pcVar5 + 1;\n            return aiStack32[0];\n        }\n    } while( true );\n}\n",
        "token_count": 639
    },
    "004aefd0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004aefd0(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    iVar3 = *(param_1 + 4);\n    if (iVar3 != 0) {\n        if (*(param_1 + 8) != 0) {\n            uVar4 = 0;\n            do {\n                piVar2 = *(iVar3 + uVar4 * 4);\n                if (piVar2 != NULL) {\n                    if (*0x515a34 == 0) {\n                        iVar3 = piVar2[1];\n                        piVar2[1] = iVar3 + -1;\n                    }\n                    else {\n                        LOCK();\n                        piVar1 = piVar2 + 1;\n                        iVar3 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                    }\n                    if (iVar3 == 1) {\n                        (**(*piVar2 + 4))();\n                    }\n                    iVar3 = *(param_1 + 4);\n                }\n                uVar4 = uVar4 + 1;\n            } while (uVar4 <= *(param_1 + 8) && *(param_1 + 8) != uVar4);\n            if (iVar3 == 0) goto code_r0x004af030;\n        }\n        fcn.004c33e0(iVar3);\n    }\ncode_r0x004af030:\n    iVar3 = *(param_1 + 0xc);\n    if (iVar3 != 0) {\n        if (*(param_1 + 8) != 0) {\n            uVar4 = 0;\n            do {\n                piVar2 = *(iVar3 + uVar4 * 4);\n                if (piVar2 != NULL) {\n                    if (*0x515a34 == 0) {\n                        iVar3 = piVar2[1];\n                        piVar2[1] = iVar3 + -1;\n                    }\n                    else {\n                        LOCK();\n                        piVar1 = piVar2 + 1;\n                        iVar3 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                    }\n                    if (iVar3 == 1) {\n                        (**(*piVar2 + 4))();\n                    }\n                    iVar3 = *(param_1 + 0xc);\n                }\n                uVar4 = uVar4 + 1;\n            } while (uVar4 <= *(param_1 + 8) && *(param_1 + 8) != uVar4);\n            if (iVar3 == 0) goto code_r0x004af07e;\n        }\n        fcn.004c33e0(iVar3);\n    }\ncode_r0x004af07e:\n    iVar3 = *(param_1 + 0x10);\n    if (iVar3 != 0) {\n        iVar5 = 0;\n        do {\n            if (*(iVar3 + iVar5) != 0) {\n                fcn.004c33e0(*(iVar3 + iVar5));\n                iVar3 = *(param_1 + 0x10);\n            }\n            iVar5 = iVar5 + 4;\n        } while (iVar5 != 0x18);\n        if (iVar3 != 0) {\n            fcn.004c33e0(iVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 753
    },
    "004c3410": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004c3410(int32_t param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    if (param_1 == 0) {\n        param_1 = 1;\n    }\n    while( true ) {\n        iVar1 = sub.msvcrt.dll_malloc(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        pcVar2 = fcn.004bde10();\n        if (pcVar2 == NULL) break;\n        (*pcVar2)();\n    }\n    puVar3 = fcn.004c3540(4);\n    *puVar3 = 0x52ccdc;\n    iVar1 = 0x528e14;\n    fcn.004c3af0(puVar3, 0x528e14, fcn.004bc1d0);\n    if (iVar1 == 0) {\n        iVar1 = 1;\n    }\n    while( true ) {\n        iVar4 = sub.msvcrt.dll_malloc(iVar1);\n        if (iVar4 != 0) {\n            return iVar4;\n        }\n        pcVar2 = fcn.004bde10();\n        if (pcVar2 == NULL) break;\n        (*pcVar2)();\n    }\n    return 0;\n}\n",
        "token_count": 301
    },
    "004c5e00": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004c5e00(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    \n    uVar4 = fcn.00447760(2);\n    sub.msvcrt.dll_fwrite(\"Mingw-w64 runtime failure:\\n\", 1, 0x1b, uVar4);\n    uVar4 = fcn.00447760(2);\n    sub.msvcrt.dll_vfprintf(uVar4, param_1, &stack0x00000008);\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar2 == 0) {\n        *0x4ce004 = 0x43c7d0;\n        pcVar3 = 0x43c580;\n    }\n    else {\n        *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"__register_frame_info\");\n        *0x4ce004 = (*pcVar1)(iVar2, \"__deregister_frame_info\");\n    }\n    if (pcVar3 != NULL) {\n        (*pcVar3)(0x52e0f8, 0x56b01c);\n    }\n    fcn.004014c0(fcn.00401590);\n    return;\n}\n",
        "token_count": 481
    }
}