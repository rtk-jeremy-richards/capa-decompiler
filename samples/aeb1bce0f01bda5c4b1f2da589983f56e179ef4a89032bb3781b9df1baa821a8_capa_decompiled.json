{
    "004010f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.004010f0(char *arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    char *var_8h;\n    uint var_1h;\n    \n    *(in_ECX + 0x10) = 0;\n    *(in_ECX + 0x14) = 0;\n    fcn.004016d0(0, 0);\n    if (*arg_8h == '\\0') {\n        var_10h = 0;\n    }\n    else {\n        var_8h = arg_8h;\n        do {\n            cVar1 = *var_8h;\n            var_8h = var_8h + 1;\n        } while (cVar1 != '\\0');\n        var_10h = var_8h - (arg_8h + 1);\n    }\n    fcn.004018b0(arg_8h, var_10h);\n    return in_ECX;\n}\n",
        "token_count": 262
    },
    "004012b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401341)\n// WARNING: Removing unreachable block (ram,0x004012f5)\n// WARNING: Removing unreachable block (ram,0x00401388)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __thiscall fcn.004012b0(int32_t **param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t *var_8h;\n    int32_t var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t **var_2ch;\n    int32_t *var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x410fa0;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    var_18h = var_8h | 0xf;\n    if (var_18h == 0xffffffff) {\n        var_18h = var_8h;\n    }\n    else if (var_18h / 3 < param_1[5] >> 1) {\n        piVar1 = -2 - (param_1[5] >> 1);\n        if (param_1[5] < piVar1 || param_1[5] == piVar1) {\n            var_18h = (param_1[5] >> 1) + param_1[5];\n        }\n        else {\n            var_18h = 0xfffffffe;\n        }\n    }\n    var_4h = 0;\n    var_20h = NULL;\n    if ((var_18h + 1U != 0) && (var_20h = fcn.00402837(var_18h + 1U),  var_20h == NULL)) {\n        fcn.00402734();\n    }\n    var_4h = 0xffffffff;\n    if (var_ch_2 != 0) {\n        var_2ch = param_1;\n        if (0xf < param_1[5]) {\n            var_2ch = *param_1;\n        }\n        if (var_ch_2 != 0) {\n            fcn.00403e70(var_20h, var_2ch, var_ch_2);\n        }\n    }\n    fcn.004016d0(1, 0);\n    if (param_1 != NULL) {\n        *param_1 = var_20h;\n    }\n    param_1[5] = var_18h;\n    fcn.00401530(var_ch_2);\n    *in_FS_OFFSET = var_ch_3;\n    return;\n}\n",
        "token_count": 739
    },
    "00401580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401596)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t __cdecl fcn.00401580(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (0xfffffffe < arg_8h) {\n        fcn.00402765(\"string too long\");\n    }\n    uVar1 = *(in_ECX + 0x14);\n    if (uVar1 < arg_8h) {\n        uVar1 = fcn.004012b0(arg_8h, *(in_ECX + 0x10));\n    }\n    else if ((arg_ch == '\\0') || (0xf < arg_8h)) {\n        if (arg_8h == 0) {\n            uVar1 = fcn.00401530(0);\n        }\n    }\n    else {\n        if (arg_8h < *(in_ECX + 0x10)) {\n            var_10h = arg_8h;\n        }\n        else {\n            var_10h = *(in_ECX + 0x10);\n        }\n        uVar1 = fcn.004016d0(1, var_10h);\n    }\n    var_14h = arg_8h != 0;\n    return uVar1 & 0xffffff00 | var_14h;\n}\n",
        "token_count": 353
    },
    "00401650": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t __cdecl fcn.00401650(uint *arg_8h)\n\n{\n    uint *in_EAX;\n    uint *in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    if (arg_8h != NULL) {\n        var_8h = in_ECX;\n        if (0xf < in_ECX[5]) {\n            var_8h = *in_ECX;\n        }\n        in_EAX = var_8h;\n        if (var_8h <= arg_8h) {\n            var_ch = in_ECX;\n            if (0xf < in_ECX[5]) {\n                var_ch = *in_ECX;\n            }\n            in_EAX = var_ch + in_ECX[4];\n            if (arg_8h < in_EAX) {\n                return CONCAT31(in_EAX >> 8, 1);\n            }\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 247
    },
    "004016d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.004016d0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_8h != '\\0') && (0xf < in_ECX[5])) {\n        uVar1 = *in_ECX;\n        if ((arg_ch != 0) && (arg_ch != 0)) {\n            fcn.00403e70();\n        }\n        fcn.00402888(uVar1, in_ECX[5] + 1);\n    }\n    in_ECX[5] = 0xf;\n    fcn.00401530(arg_ch);\n    return;\n}\n",
        "token_count": 198
    },
    "00401790": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00401790(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint *in_ECX;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if (arg_8h[4] < arg_ch) {\n        fcn.00402793(\"invalid string position\");\n    }\n    var_8h = arg_8h[4] - arg_ch;\n    if (arg_10h < var_8h) {\n        var_8h = arg_10h;\n    }\n    if (in_ECX == arg_8h) {\n        if (in_ECX[4] < arg_ch + var_8h) {\n            fcn.00402793(\"invalid string position\");\n        }\n        fcn.00401530(arg_ch + var_8h);\n        fcn.00401aa0(0, arg_ch);\n    }\n    else {\n        cVar1 = fcn.00401580(var_8h, 0);\n        if (cVar1 != '\\0') {\n            if (arg_8h[5] < 0x10) {\n                var_10h = arg_8h;\n            }\n            else {\n                var_10h = *arg_8h;\n            }\n            var_ch = in_ECX;\n            if (0xf < in_ECX[5]) {\n                var_ch = *in_ECX;\n            }\n            if (var_8h != 0) {\n                fcn.00403e70(var_ch, var_10h + arg_ch, var_8h);\n            }\n            fcn.00401530(var_8h);\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 442
    },
    "004018b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint * __cdecl fcn.004018b0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint *in_ECX;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    cVar1 = fcn.00401650(arg_8h);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.00401580(arg_ch, 0);\n        if (cVar1 != '\\0') {\n            var_8h = in_ECX;\n            if (0xf < in_ECX[5]) {\n                var_8h = *in_ECX;\n            }\n            if (arg_ch != 0) {\n                fcn.00403e70(var_8h, arg_8h, arg_ch);\n            }\n            fcn.00401530(arg_ch);\n        }\n    }\n    else {\n        var_ch = in_ECX;\n        if (0xf < in_ECX[5]) {\n            var_ch = *in_ECX;\n        }\n        in_ECX = fcn.00401790(in_ECX, arg_8h - var_ch, arg_ch);\n    }\n    return in_ECX;\n}\n",
        "token_count": 306
    },
    "00401aa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint * __cdecl fcn.00401aa0(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    int32_t iVar2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    if (in_ECX[4] < arg_8h) {\n        fcn.00402793(\"invalid string position\");\n    }\n    if (arg_ch < in_ECX[4] - arg_8h) {\n        if (arg_ch != 0) {\n            var_8h = in_ECX;\n            if (0xf < in_ECX[5]) {\n                var_8h = *in_ECX;\n            }\n            iVar1 = in_ECX[4];\n            iVar2 = (iVar1 - arg_ch) - arg_8h;\n            if (iVar2 != 0) {\n                fcn.00402bf0(var_8h + arg_8h, var_8h + arg_8h + arg_ch, iVar2);\n            }\n            fcn.00401530(iVar1 - arg_ch);\n        }\n    }\n    else {\n        fcn.00401530(arg_8h);\n    }\n    return in_ECX;\n}\n",
        "token_count": 322
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl method.std::_Generic_error_category.virtual_8(uint arg_8h, uint arg_ch)\n\n{\n    uint var_ch;\n    char *var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.004027c1(arg_ch);\n    if (var_8h == NULL) {\n        var_8h = \"unknown error\";\n    }\n    fcn.004010f0(var_8h);\n    return arg_8h;\n}\n",
        "token_count": 105
    },
    "004027c1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.004027c1(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = 0x412590;\n    if (*0x412594 != 0) {\n        do {\n            if (*piVar2 == arg_8h) {\n                return piVar2[1];\n            }\n            piVar1 = piVar2 + 3;\n            piVar2 = piVar2 + 2;\n        } while (*piVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 148
    },
    "004027eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004027eb(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = 0x412338;\n    if (*0x41233c != 0) {\n        do {\n            if (*piVar2 == arg_8h) {\n                return piVar2[1];\n            }\n            piVar1 = piVar2 + 3;\n            piVar2 = piVar2 + 2;\n        } while (*piVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 133
    },
    "00404ad2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00404ad2(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x5dd4dc, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00405af7();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.00405b0a(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "004029cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.004029cd(uint arg_8h)\n\n{\n    *0x5dd364 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00405114(1);\n    fcn.004054e7(arg_8h);\n    if (*0x5dd364 == 0) {\n        fcn.00405114(1);\n    }\n    fcn.004054d2(0xc0000409);\n    return;\n}\n",
        "token_count": 119
    },
    "0040332d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.0040332d(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint unaff_EBP;\n    uint32_t uVar12;\n    ulong uVar13;\n    uint var_1028h;\n    uint var_1024h;\n    uint var_1020h;\n    uint lpNumberOfBytesRead;\n    uint var_1018h;\n    uint var_1014h;\n    uint var_1010h;\n    uint var_100ch;\n    uint var_1005h;\n    uint uStackY40;\n    int32_t iStackY36;\n    uint var_4h;\n    \n    fcn.00406110();\n    if (arg_8h == NULL) {\n        puVar3 = fcn.00405af7();\n        *puVar3 = 0x16;\n        fcn.004057d3();\n    }\n    else {\n        uVar4 = fcn.0040592f(arg_8h);\n        if (arg_8h[1] < 0) {\n            arg_8h[1] = 0;\n        }\n        iVar5 = fcn.00405dff(uVar4, 0, 1);\n        if (-1 < iVar5) {\n            iVar6 = uVar4 >> 5;\n            iVar7 = (uVar4 & 0x1f) * 0x40;\n            uVar12 = arg_8h[3];\n            var_1005h._0_1_ = *(iVar7 + 0x24 + *(iVar6 * 4 + 0x5dd3c8)) * '\\x02' >> 1;\n            if ((uVar12 & 0x108) != 0) {\n                uVar1 = *arg_8h;\n                uVar10 = arg_8h[2];\n                if ((uVar12 & 3) == 0) {\n                    if ((uVar12 & 0x80) == 0) {\n                        puVar3 = fcn.00405af7();\n                        *puVar3 = 0x16;\n                        goto code_r0x004036ae;\n                    }\n                }\n                else {\n                    if ((var_1005h == '\\x01') && (*(iVar7 + 0x30 + *(iVar6 * 4 + 0x5dd3c8)) != 0)) {\n                        uVar12 = uVar1 - uVar10 >> 1;\n                        if (arg_8h[1] != 0) {\n                            iVar2 = *(iVar6 * 4 + 0x5dd3c8);\n                            iStackY36 = 0x403470;\n                            uVar13 = fcn.00405f95(uVar4, *(iVar7 + 0x28 + iVar2), *(iVar7 + 0x2c + iVar2), 0);\n                            iStackY36 = uVar13;\n                            iVar6 = *(iVar6 * 4 + 0x5dd3c8);\n                            if ((iStackY36 == *(iVar7 + 0x28 + iVar6)) && (uVar13 >> 0x20 == *(iVar7 + 0x2c + iVar6))) {\n                                iStackY36 = *(iVar7 + iVar6);\n                                uStackY40 = 0x4034b9;\n                                iVar6 = (*_sym.imp.KERNEL32.dll_ReadFile)();\n                                if ((iVar6 != 0) &&\n                                   (((iVar5 = fcn.00405dff(uVar4, iVar5, 0),  -1 < iVar5 && (uVar12 <= uVar10)) &&\n                                    (puVar8 = &fcn.0040332d::var_1005h + 1,  uVar12 != 0)))) {\n                                    puVar9 = puVar8 + uVar10;\n                                    do {\n                                        uVar12 = uVar12 - 1;\n                                        if (puVar9 <= puVar8) break;\n                                        if (*puVar8 == 0xd) {\n                                            if ((puVar8 < &fcn.0040332d::var_1005h + uVar10) && (puVar8[1] == 10)) {\n                                                puVar8 = puVar8 + 1;\n                                            }\n                                        }\n                                        else {\n                                            puVar8 = puVar8 + *(*puVar8 + 0x41e320);\n                                        }\n                                        puVar8 = puVar8 + 1;\n                                    } while (uVar12 != 0);\n                                }\n                            }\n                        }\n                        goto code_r0x004036ae;\n                    }\n                    if ((*(iVar7 + 4 + *(iVar6 * 4 + 0x5dd3c8)) & 0x80) != 0) {\n                        for (; uVar10 < uVar1; uVar10 = uVar10 + 1) {\n                        }\n                    }\n                }\n                if (((iVar5 != 0) && ((uVar12 & 1) != 0)) && (arg_8h[1] != 0)) {\n                    uVar12 = arg_8h[2];\n                    uVar10 = arg_8h[1];\n                    uVar11 = 0;\n                    if ((*(iVar7 + 4 + *(iVar6 * 4 + 0x5dd3c8)) & 0x80) != 0) {\n                        iVar6 = fcn.00405dff(uVar4, 0, 2);\n                        if (iVar6 == iVar5) {\n                            uVar4 = arg_8h[2] + uVar10 + (uVar1 - uVar12);\n                            uVar4 = ~-(uVar4 < arg_8h[2]) & uVar4 - arg_8h[2];\n                            if (uVar4 != 0) {\n                                do {\n                                    uVar11 = uVar11 + 1;\n                                } while (uVar11 < uVar4);\n                            }\n                        }\n                        else {\n                            fcn.00405dff(uVar4, iVar5, 0);\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x004036ae:\n    fcn.00403a01(unaff_EBP);\n    return;\n}\n",
        "token_count": 1465
    },
    "00403bb8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl\nfcn.00403bb8(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint arg_8h, uint arg_ch, uint noname_18, uint noname_19, uint arg_18h, \n            uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_38h_2;\n    code *pcStack56;\n    uint32_t uStack52;\n    uint uStack48;\n    uint *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar *var_18h_2;\n    int32_t var_14h_2;\n    uint *var_10h;\n    uint var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    var_18h_2 = &stack0xfffffffc;\n    puStack32 = &stack0xffffffc0;\n    if (var_38h == 0x123) {\n        *var_34h = 0x403c61;\n        uVar1 = 1;\n    }\n    else {\n        pcStack56 = fcn.00403aa4;\n        uStack52 = *0x41dec0 ^ &fcn.00403bb8::var_38h_2;\n        uStack48 = var_28h;\n        puStack44 = var_34h;\n        uStack40 = var_24h;\n        uStack36 = var_20h;\n        var_14h_2 = 0;\n        var_38h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00403bb8::var_38h_2;\n        var_4h = 1;\n        var_10h = var_38h;\n        var_ch = var_30h;\n        iVar2 = fcn.00408120();\n        var_8h = *(iVar2 + 0x80);\n        (*var_8h)(*var_38h, &fcn.00403bb8::var_10h);\n        if (var_14h_2 == 0) {\n            *in_FS_OFFSET = var_38h_2;\n        }\n        else {\n            *var_38h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_38h_2;\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 720
    },
    "0040477a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.0040477a(uint arg_8h)\n\n{\n    if (*0x5ddc18 == 1) {\n        fcn.0040a398();\n    }\n    fcn.0040a3f5(arg_8h);\n    fcn.00404b3e(0xff);\n    return;\n}\n",
        "token_count": 90
    },
    "0040493f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040493f(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.00404ad2(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 82
    },
    "004048a9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004048a9(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if (in_ECX != arg_8h) {\n        fcn.0040493f();\n        if (*(arg_8h + 8) == '\\0') {\n            *(in_ECX + 4) = *(arg_8h + 4);\n        }\n        else {\n            fcn.00404901(*(arg_8h + 4));\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 120
    },
    "00404901": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00404901(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    \n    if (arg_8h != 0) {\n        iVar1 = fcn.004047b0(arg_8h);\n        arg_8h_00 = fcn.00404a0d(iVar1 + 1);\n        *(in_ECX + 4) = arg_8h_00;\n        if (arg_8h_00 != 0) {\n            fcn.0040a7c7(arg_8h_00, iVar1 + 1, arg_8h);\n            *(in_ECX + 8) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "00404b8e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404b8e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*0x413168 != NULL) {\n        iVar1 = fcn.0040ad60(0x413168);\n        if (iVar1 != 0) {\n            (**0x413168)(arg_8h);\n        }\n    }\n    fcn.00409eaa();\n    iVar1 = fcn.00404c94(0x4121a4, 0x4121c0);\n    if (iVar1 == 0) {\n        fcn.004029b8(0x40a6bb);\n        fcn.00404c5e(0x412178, 0x4121a0);\n        if (*0x5deec8 != NULL) {\n            iVar1 = fcn.0040ad60(0x5deec8);\n            if (iVar1 != 0) {\n                (**0x5deec8)(0, 2, 0);\n            }\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 246
    },
    "00404cc8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00404dbd: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00404dc2)\n// WARNING: Removing unreachable block (ram,0x00404df1)\n// WARNING: Removing unreachable block (ram,0x00404dc8)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00404cc8(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t unaff_EBP;\n    int32_t *piVar7;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00404f20(0x4181a8, 0x1c);\n    fcn.0040ab8a(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar5 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x5dd380 != 1) {\n        *0x5dd3a8 = 1;\n        *0x5dd3a4 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x5deed0);\n            *(unaff_EBP + -0x2c) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar5)(*0x5deecc);\n                *(unaff_EBP + -0x1c) = piVar2;\n                *(unaff_EBP + -0x20) = piVar3;\n                do {\n                    *(unaff_EBP + -0x24) = piVar3;\n                    piVar7 = piVar3;\n                    do {\n                        do {\n                            piVar7 = piVar7 + -1;\n                            *(unaff_EBP + -0x24) = piVar7;\n                            if (piVar7 < piVar2) goto code_r0x00404d94;\n                            iVar4 = (*_sym.imp.KERNEL32.dll_EncodePointer)(0);\n                        } while (*piVar7 == iVar4);\n                        if (piVar7 < piVar2) goto code_r0x00404d94;\n                        pcVar5 = (*pcVar5)(*piVar7);\n                        iVar4 = (*_sym.imp.KERNEL32.dll_EncodePointer)(0);\n                        *piVar7 = iVar4;\n                        (*pcVar5)();\n                        pcVar5 = _sym.imp.KERNEL32.dll_DecodePointer;\n                        uVar6 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x5deed0);\n                        *(unaff_EBP + -0x28) = uVar6;\n                        piVar3 = (*pcVar5)(*0x5deecc);\n                        piVar1 = *(unaff_EBP + -0x28);\n                    } while ((*(unaff_EBP + -0x1c) == piVar1) && (*(unaff_EBP + -0x20) == piVar3));\n                    *(unaff_EBP + -0x1c) = piVar1;\n                    *(unaff_EBP + -0x2c) = piVar1;\n                    *(unaff_EBP + -0x20) = piVar3;\n                    piVar2 = piVar1;\n                } while( true );\n            }\ncode_r0x00404d94:\n            fcn.00404c5e(0x4121cc, 0x4121dc);\n        }\n        fcn.00404c5e(0x4121e0, 0x4121e4);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040acf4(8);\n    }\n    return;\n}\n",
        "token_count": 942
    },
    "00405eee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00405eee(uint32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint8_t *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint arg_8h_00;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uchar *var_4h;\n    \n    var_4h = &stack0xfffffffc;\n    iVar3 = fcn.0040bb60(arg_8h);\n    pcVar2 = _sym.imp.KERNEL32.dll_SetFilePointerEx;\n    if (iVar3 == -1) {\n        puVar4 = fcn.00405af7();\n        *puVar4 = 9;\n    }\n    else {\n        iVar5 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(iVar3, 0, 0, &var_8h, 1);\n        if ((iVar5 == 0) || (iVar5 = (*pcVar2)(iVar3, arg_ch, arg_ch >> 0x1f, &var_10h, arg_10h),  iVar5 == 0)) {\n            arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.00405ad6(arg_8h_00);\n        }\n        else {\n            if (var_ch == 0) {\n                puVar1 = *((arg_8h >> 5) * 4 + 0x5dd3c8) + 4 + (arg_8h & 0x1f) * 0x40;\n                *puVar1 = *puVar1 & 0xfd;\n                return var_10h;\n            }\n            (*pcVar2)(iVar3, var_8h, var_4h, 0, 0);\n            puVar4 = fcn.00405af7();\n            *puVar4 = 0x16;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 474
    },
    "0040624f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t __cdecl fcn.0040624f(uint32_t arg_8h, int16_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    uchar uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    int16_t iVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int16_t *piVar13;\n    int16_t *piVar14;\n    uint32_t uVar15;\n    int16_t *piVar16;\n    bool bVar17;\n    ulong uVar18;\n    uint var_28h;\n    uint var_24h;\n    int16_t *lpMode;\n    int16_t *lpBuffer;\n    uint32_t var_18h;\n    uint32_t lpNumberOfBytesRead;\n    int16_t *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    uVar5 = arg_10h;\n    _auStack8 = &var_1h + 1;\n    uVar15 = 0;\n    var_18h = 0xfffffffe;\n    lpMode = NULL;\n    if (arg_8h == 0xfffffffe) {\n        _auStack8 = &var_1h + 1;\n        puVar8 = fcn.00405ac3();\n        *puVar8 = 0;\n        puVar8 = fcn.00405af7();\n        *puVar8 = 9;\n        return 0xffffffff;\n    }\n    if ((-1 < arg_8h) && (arg_8h < *0x5dde18)) {\n        var_ch = arg_8h >> 5;\n        iVar10 = (arg_8h & 0x1f) * 0x40;\n        iVar9 = *(var_ch * 4 + 0x5dd3c8);\n        uVar6 = *(iVar9 + 4 + iVar10);\n        if ((uVar6 & 1) != 0) {\n            if (arg_10h < 0x80000000) {\n                if ((arg_10h == 0) || ((uVar6 & 2) != 0)) {\n                    return 0;\n                }\n                if (arg_ch != NULL) {\n                    arg_10h._3_1_ = *(iVar9 + 0x24 + iVar10) * '\\x02' >> 1;\n    // WARNING: Ignoring partial resolution of indirect\n                    if (arg_10h._3_1_ == '\\x01') {\n                        if ((~uVar5 & 1) == 0) goto code_r0x004062f5;\n                        uVar11 = uVar5 >> 1;\n                        if (uVar11 < 4) {\n                            uVar11 = 4;\n                        }\n                        _auStack8 = &var_1h + 1;\n                        var_10h = fcn.00404e84(uVar11);\n                        if (var_10h == NULL) {\n                            puVar8 = fcn.00405af7();\n                            *puVar8 = 0xc;\n                            puVar8 = fcn.00405ac3();\n                            *puVar8 = 8;\n                            return 0xffffffff;\n                        }\n                        uVar18 = fcn.00406091(arg_8h, 0, 0, 1);\n                        iVar9 = *(var_ch * 4 + 0x5dd3c8);\n                        *(iVar9 + 0x28 + iVar10) = uVar18;\n                        *(iVar9 + 0x2c + iVar10) = uVar18 >> 0x20;\n                    }\n                    else {\n                        uVar11 = uVar5;\n                        if (arg_10h._3_1_ == '\\x02') {\n                            if ((~uVar5 & 1) == 0) goto code_r0x004062f5;\n                            uVar11 = uVar5 & 0xfffffffe;\n                        }\n                        var_10h = arg_ch;\n                        _auStack8 = &var_1h + 1;\n                    }\n                    iVar9 = *(var_ch * 4 + 0x5dd3c8);\n                    uVar12 = uVar11;\n                    lpBuffer = var_10h;\n                    if ((((*(iVar9 + 4 + iVar10) & 0x48) != 0) && (cVar2 = *(iVar9 + 5 + iVar10),  cVar2 != '\\n')) &&\n                       (uVar11 != 0)) {\n                        *var_10h = cVar2;\n                        lpBuffer = var_10h + 1;\n                        uVar15 = 1;\n                        uVar12 = uVar11 - 1;\n                        *(*(var_ch * 4 + 0x5dd3c8) + 5 + iVar10) = 10;\n                        if (((arg_10h._3_1_ != '\\0') &&\n                            (cVar2 = *(*(var_ch * 4 + 0x5dd3c8) + 0x25 + iVar10),  cVar2 != '\\n')) && (uVar12 != 0)) {\n                            *lpBuffer = cVar2;\n                            lpBuffer = var_10h + 1;\n                            uVar12 = uVar11 - 2;\n                            uVar15 = 2;\n                            *(*(var_ch * 4 + 0x5dd3c8) + 0x25 + iVar10) = 10;\n                            if (((arg_10h._3_1_ == '\\x01') &&\n                                (cVar2 = *(*(var_ch * 4 + 0x5dd3c8) + 0x26 + iVar10),  cVar2 != '\\n')) && (uVar12 != 0))\n                            {\n                                *lpBuffer = cVar2;\n                                lpBuffer = var_10h + 3;\n                                uVar12 = uVar11 - 3;\n                                uVar15 = 3;\n                                *(*(var_ch * 4 + 0x5dd3c8) + 0x26 + iVar10) = 10;\n                            }\n                        }\n                    }\n                    iVar9 = fcn.0040bbed(arg_8h);\n                    if ((((iVar9 == 0) || (iVar9 = *(var_ch * 4 + 0x5dd3c8),  (*(iVar9 + 4 + iVar10) & 0x80) == 0)) ||\n                        (lpMode = (*_sym.imp.KERNEL32.dll_GetConsoleMode)(*(iVar9 + iVar10), &lpMode),  lpMode == NULL))\n                       || (arg_10h._3_1_ != '\\x02')) {\n                        iVar9 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                          (*(*(var_ch * 4 + 0x5dd3c8) + iVar10), lpBuffer, uVar12, &lpNumberOfBytesRead\n                                           , 0);\n                        if (((iVar9 != 0) && (-1 < lpNumberOfBytesRead)) && (lpNumberOfBytesRead <= uVar12))\n                        goto code_r0x004064dc;\n                        iVar9 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        if (iVar9 != 5) {\n                            if (iVar9 == 0x6d) {\n                                uVar11 = 0;\n                                goto code_r0x00406751;\n                            }\n                            goto code_r0x00406487;\n                        }\n                        puVar8 = fcn.00405af7();\n                        *puVar8 = 9;\n                        puVar8 = fcn.00405ac3();\n                        *puVar8 = 5;\n                    }\n                    else {\n                        iVar9 = (*_sym.imp.KERNEL32.dll_ReadConsoleW)\n                                          (*(*(var_ch * 4 + 0x5dd3c8) + iVar10), lpBuffer, uVar12 >> 1, \n                                           &lpNumberOfBytesRead, 0);\n                        if (iVar9 != 0) {\n                            lpNumberOfBytesRead = lpNumberOfBytesRead * 2;\ncode_r0x004064dc:\n                            uVar15 = uVar15 + lpNumberOfBytesRead;\n                            iVar9 = *(var_ch * 4 + 0x5dd3c8);\n                            uVar6 = *(iVar9 + 4 + iVar10);\n                            uVar11 = var_18h;\n                            if (-1 < uVar6) goto code_r0x00406751;\n                            if (arg_10h._3_1_ == '\\x02') {\n                                if (lpMode == NULL) {\n                                    if ((lpNumberOfBytesRead == 0) || (*var_10h != 10)) {\n                                        uVar6 = uVar6 & 0xfb;\n                                    }\n                                    else {\n                                        uVar6 = uVar6 | 4;\n                                    }\n                                    *(iVar9 + 4 + iVar10) = uVar6;\n                                    lpMode = var_10h + uVar15;\n                                    iVar9 = var_ch;\n                                    piVar13 = var_10h;\n                                    piVar14 = var_10h;\n                                    if (var_10h < lpMode) {\n                                        do {\n                                            iVar7 = *piVar14;\n                                            if (iVar7 == 0x1a) {\n                                                iVar9 = *(iVar9 * 4 + 0x5dd3c8);\n                                                uVar6 = *(iVar9 + 4 + iVar10);\n                                                if ((uVar6 & 0x40) == 0) {\n                                                    *(iVar9 + 4 + iVar10) = uVar6 | 2;\n                                                }\n                                                else {\n                                                    *piVar13 = *piVar14;\n                                                    piVar13 = piVar13 + 1;\n                                                }\n                                                break;\n                                            }\n                                            if (iVar7 == 0xd) {\n                                                if (piVar14 < lpMode + -1) {\n                                                    if (piVar14[1] != 10) {\n                                                        *piVar13 = 0xd;\n                                                        iVar9 = var_ch;\n                                                        goto code_r0x00406866;\n                                                    }\n                                                    piVar14 = piVar14 + 2;\n                                                    *piVar13 = 10;\ncode_r0x00406948:\n                                                    piVar13 = piVar13 + 1;\n                                                    iVar9 = var_ch;\n                                                }\n                                                else {\n                                                    piVar14 = piVar14 + 1;\n                                                    iVar9 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                                                      (*(*(iVar9 * 4 + 0x5dd3c8) + iVar10), &var_8h, 2, \n                                                                       &lpNumberOfBytesRead, 0);\n                                                    if (((iVar9 == 0) &&\n                                                        (iVar9 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar9 != 0))\n                                                       || (lpNumberOfBytesRead == 0)) {\n                                                        *piVar13 = 0xd;\n                                                        piVar13 = piVar13 + 1;\n                                                        iVar9 = var_ch;\n                                                    }\n                                                    else {\n                                                        iVar9 = var_ch;\n                                                        if ((*(*(var_ch * 4 + 0x5dd3c8) + 4 + iVar10) & 0x48) == 0) {\n                                                            if ((piVar13 == var_10h) && (var_8h == 10)) {\n                                                                *piVar13 = 10;\n                                                                piVar13 = piVar13 + 1;\n                                                            }\n                                                            else {\n                                                                fcn.00406091(arg_8h, 0xfffffffe, 0xffffffff, 1);\n                                                                iVar9 = var_ch;\n                                                                if (var_8h != 10) {\n                                                                    *piVar13 = 0xd;\n                                                                    goto code_r0x00406948;\n                                                                }\n                                                            }\n                                                        }\n                                                        else if (var_8h == 10) {\n                                                            *piVar13 = 10;\n                                                            piVar13 = piVar13 + 1;\n                                                        }\n                                                        else {\n                                                            *piVar13 = 0xd;\n                                                            piVar13 = piVar13 + 1;\n                                                            *(*(var_ch * 4 + 0x5dd3c8) + 5 + iVar10) = var_8h;\n                                                            *(*(var_ch * 4 + 0x5dd3c8) + 0x25 + iVar10) = var_8h._1_1_;\n                                                            *(*(var_ch * 4 + 0x5dd3c8) + 0x26 + iVar10) = 10;\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                            else {\n                                                *piVar13 = iVar7;\ncode_r0x00406866:\n                                                piVar13 = piVar13 + 1;\n                                                piVar14 = piVar14 + 1;\n                                            }\n                                        } while (piVar14 < lpMode);\n                                    }\n                                    uVar15 = piVar13 - var_10h;\n                                    uVar11 = var_18h;\n                                }\n                                else {\n                                    piVar13 = var_10h;\n                                    piVar14 = var_10h;\n                                    while (piVar13 < var_10h + uVar15 / 2) {\n                                        iVar7 = *piVar13;\n                                        if (iVar7 == 0x1a) {\n                                            puVar1 = *(var_ch * 4 + 0x5dd3c8) + 4 + iVar10;\n                                            *puVar1 = *puVar1 | 2;\n                                            break;\n                                        }\n                                        if (iVar7 == 0xd) {\n                                            if (piVar13 < var_10h + uVar15 / 2 + -1) {\n                                                piVar13 = piVar13 + 1;\n                                                iVar7 = 10;\n                                                if (*piVar13 != 10) {\n                                                    iVar7 = 0xd;\n                                                }\n                                                *piVar14 = iVar7;\n                                                piVar14 = piVar14 + 1;\n                                            }\n                                        }\n                                        else {\n                                            *piVar14 = iVar7;\n                                            piVar14 = piVar14 + 1;\n                                            piVar13 = piVar13 + 1;\n                                        }\n                                    }\n                                    uVar15 = piVar14 - var_10h & 0xfffffffe;\n                                }\n                                goto code_r0x00406751;\n                            }\n                            if ((lpNumberOfBytesRead == 0) || (*var_10h != '\\n')) {\n                                uVar6 = uVar6 & 0xfb;\n                            }\n                            else {\n                                uVar6 = uVar6 | 4;\n                            }\n                            *(iVar9 + 4 + iVar10) = uVar6;\n                            lpMode = var_10h;\n                            lpBuffer = var_10h + uVar15;\n                            iVar9 = var_ch;\n                            piVar13 = var_10h;\n                            piVar14 = var_10h;\n                            if (var_10h < lpBuffer) {\n                                do {\n                                    cVar2 = *piVar14;\n                                    if (cVar2 == '\\x1a') {\n                                        iVar9 = *(iVar9 * 4 + 0x5dd3c8);\n                                        uVar6 = *(iVar9 + 4 + iVar10);\n                                        if ((uVar6 & 0x40) == 0) {\n                                            *(iVar9 + 4 + iVar10) = uVar6 | 2;\n                                        }\n                                        else {\n                                            *piVar13 = *piVar14;\n                                            piVar13 = piVar13 + 1;\n                                        }\n                                        break;\n                                    }\n                                    if (cVar2 == '\\r') {\n                                        if (piVar14 < lpBuffer + -1) {\n                                            piVar16 = piVar14 + 1;\n                                            if (*piVar16 == '\\n') {\n                                                piVar16 = piVar14 + 1;\n                                                *piVar13 = 10;\ncode_r0x0040660e:\n                                                piVar13 = piVar13 + 1;\n                                            }\n                                            else {\n                                                *piVar13 = 0xd;\n                                                piVar13 = piVar13 + 1;\n                                            }\n                                        }\n                                        else {\n                                            piVar16 = piVar14 + 1;\n                                            iVar9 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                                              (*(*(iVar9 * 4 + 0x5dd3c8) + iVar10), &var_1h, 1, \n                                                               &lpNumberOfBytesRead, 0);\n                                            if (((iVar9 == 0) &&\n                                                (iVar9 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar9 != 0)) ||\n                                               (lpNumberOfBytesRead == 0)) {\n                                                *piVar13 = 0xd;\n                                                piVar13 = piVar13 + 1;\n                                                iVar9 = var_ch;\n                                            }\n                                            else {\n                                                iVar9 = var_ch;\n                                                if ((*(*(var_ch * 4 + 0x5dd3c8) + 4 + iVar10) & 0x48) == 0) {\n                                                    if ((piVar13 == var_10h) && (var_1h == '\\n')) {\n                                                        *piVar13 = 10;\n                                                        piVar13 = piVar13 + 1;\n                                                    }\n                                                    else {\n                                                        fcn.00406091(arg_8h, 0xffffffff, 0xffffffff, 1);\n                                                        iVar9 = var_ch;\n                                                        if (var_1h != '\\n') {\n                                                            *piVar13 = 0xd;\n                                                            goto code_r0x0040660e;\n                                                        }\n                                                    }\n                                                }\n                                                else if (var_1h == '\\n') {\n                                                    *piVar13 = 10;\n                                                    piVar13 = piVar13 + 1;\n                                                }\n                                                else {\n                                                    *piVar13 = 0xd;\n                                                    piVar13 = piVar13 + 1;\n                                                    *(*(var_ch * 4 + 0x5dd3c8) + 5 + iVar10) = var_1h;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        *piVar13 = cVar2;\n                                        piVar13 = piVar13 + 1;\n                                        piVar16 = piVar14 + 1;\n                                    }\n                                    piVar14 = piVar16;\n                                } while (piVar16 < lpBuffer);\n                            }\n                            uVar15 = piVar13 - var_10h;\n                            uVar11 = var_18h;\n                            if ((arg_10h._3_1_ != '\\x01') || (uVar15 == 0)) goto code_r0x00406751;\n                            uVar6 = *(piVar13 + -1);\n                            if (uVar6 < '\\0') {\n                                iVar9 = 1;\n                                cVar2 = *(uVar6 + 0x41e320);\n                                piVar13 = piVar13 + -1;\n                                while (((cVar2 == '\\0' && (iVar9 < 5)) && (var_10h <= piVar13))) {\n                                    piVar13 = piVar13 + -1;\n                                    iVar9 = iVar9 + 1;\n                                    cVar2 = *(*piVar13 + 0x41e320);\n                                }\n                                if (*(*piVar13 + 0x41e320) == 0) {\n                                    puVar8 = fcn.00405af7();\n                                    *puVar8 = 0x2a;\n                                    goto code_r0x0040648e;\n                                }\n                                if (*(*piVar13 + 0x41e320) + 1 == iVar9) {\n                                    piVar13 = piVar13 + iVar9;\n                                }\n                                else {\n                                    iVar4 = *(var_ch * 4 + 0x5dd3c8);\n                                    if ((*(iVar4 + 4 + iVar10) & 0x48) == 0) {\n                                        fcn.00406091(arg_8h, -iVar9, -iVar9 >> 0x1f, 1);\n                                    }\n                                    else {\n                                        piVar14 = piVar13 + 1;\n                                        *(iVar4 + 5 + iVar10) = *piVar13;\n                                        if (1 < iVar9) {\n                                            uVar3 = *piVar14;\n                                            piVar14 = piVar13 + 1;\n                                            *(*(var_ch * 4 + 0x5dd3c8) + 0x25 + iVar10) = uVar3;\n                                        }\n                                        if (iVar9 == 3) {\n                                            uVar3 = *piVar14;\n                                            piVar14 = piVar14 + 1;\n                                            *(*(var_ch * 4 + 0x5dd3c8) + 0x26 + iVar10) = uVar3;\n                                        }\n                                        piVar13 = piVar14 - iVar9;\n                                    }\n                                }\n                            }\n                            uVar11 = piVar13 - var_10h;\n                            uVar15 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                               (0xfde9, 0, var_10h, uVar11, arg_ch, uVar5 >> 1);\n                            if (uVar15 != 0) {\n                                bVar17 = uVar15 != uVar11;\n                                uVar15 = uVar15 * 2;\n                                *(*(var_ch * 4 + 0x5dd3c8) + 0x30 + iVar10) = bVar17;\n                                uVar11 = var_18h;\n                                goto code_r0x00406751;\n                            }\n                        }\n                        iVar9 = (*_sym.imp.KERNEL32.dll_GetLastError)();\ncode_r0x00406487:\n                        fcn.00405ad6(iVar9);\n                    }\ncode_r0x0040648e:\n                    uVar11 = 0xffffffff;\ncode_r0x00406751:\n                    if (var_10h != arg_ch) {\n                        fcn.00404ad2(var_10h);\n                    }\n                    if (uVar11 != 0xfffffffe) {\n                        return uVar11;\n                    }\n                    return uVar15;\n                }\ncode_r0x004062f5:\n                _auStack8 = &var_1h + 1;\n                puVar8 = fcn.00405ac3();\n                *puVar8 = 0;\n            }\n            else {\n                _auStack8 = &var_1h + 1;\n                puVar8 = fcn.00405ac3();\n                *puVar8 = 0;\n            }\n            puVar8 = fcn.00405af7();\n            *puVar8 = 0x16;\n            goto code_r0x004069d1;\n        }\n    }\n    puVar8 = fcn.00405ac3();\n    *puVar8 = 0;\n    puVar8 = fcn.00405af7();\n    *puVar8 = 9;\ncode_r0x004069d1:\n    fcn.004057d3();\n    return 0xffffffff;\n}\n",
        "token_count": 5079
    },
    "00406eee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406eee(void)\n\n{\n    uint unaff_EBX;\n    uint in_stack_fffffd2c;\n    uint in_stack_fffffd30;\n    uint var_2c8h;\n    \n    fcn.0040bc50();\n    fcn.00406f73(unaff_EBX, in_stack_fffffd2c, in_stack_fffffd30);\n    return;\n}\n",
        "token_count": 88
    },
    "00407808": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00407808(uint param_1, uint param_2, ulong param_3, ulong param_4, uint param_5)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    uint in_stack_ffffff64;\n    uchar auStack144 [64];\n    uint32_t uStack80;\n    uint32_t uStack20;\n    \n    arg_8h = param_5;\n    uStack20 = *0x41dec0 ^ &stack0xfffffff0;\n    iVar1 = fcn.004078d0(param_1, &param_4, param_5);\n    if (iVar1 == 0) {\n        uStack80 = uStack80 & 0xfffffffe;\n        fcn.00407b1f(auStack144, &param_5, param_1, param_2, &param_3, &param_4, 0);\n        arg_8h = param_5;\n    }\n    iVar1 = fcn.004077d6(param_1);\n    if ((*0x41ebe0 == 0) && (iVar1 != 0)) {\n        fcn.00407e31(iVar1, param_2, param_3, param_3 >> 0x20, 0, 0, param_4, param_4 >> 0x20, arg_8h);\n    }\n    else {\n        fcn.00407e04(iVar1);\n        fcn.00407f58(arg_8h, 0xffff);\n    }\n    fcn.00403a01(in_stack_ffffff64);\n    return;\n}\n",
        "token_count": 354
    },
    "00407b1f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00407b1f(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t arg_10h, int32_t arg_14h, ulong *arg_18h, ulong *arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint32_t *puVar1;\n    ulong *puVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    puVar1 = arg_ch;\n    arg_8h[1] = 0;\n    uVar4 = 0xc000000d;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    if ((arg_10h & 0x10) != 0) {\n        uVar4 = 0xc000008f;\n        arg_8h[1] = arg_8h[1] | 1;\n    }\n    if ((arg_10h & 2) != 0) {\n        uVar4 = 0xc0000093;\n        arg_8h[1] = arg_8h[1] | 2;\n    }\n    if ((arg_10h & 1) != 0) {\n        uVar4 = 0xc0000091;\n        arg_8h[1] = arg_8h[1] | 4;\n    }\n    if ((arg_10h & 4) != 0) {\n        uVar4 = 0xc000008e;\n        arg_8h[1] = arg_8h[1] | 8;\n    }\n    if ((arg_10h & 8) != 0) {\n        uVar4 = 0xc0000090;\n        arg_8h[1] = arg_8h[1] | 0x10;\n    }\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch << 4) ^ arg_8h[2]) & 0x10;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch * 2) ^ arg_8h[2]) & 8;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 1) ^ arg_8h[2]) & 4;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 3) ^ arg_8h[2]) & 2;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 5) ^ arg_8h[2]) & 1;\n    uVar3 = fcn.00407fdb();\n    puVar2 = arg_1ch;\n    if ((uVar3 & 1) != 0) {\n        arg_8h[3] = arg_8h[3] | 0x10;\n    }\n    if ((uVar3 & 4) != 0) {\n        arg_8h[3] = arg_8h[3] | 8;\n    }\n    if ((uVar3 & 8) != 0) {\n        arg_8h[3] = arg_8h[3] | 4;\n    }\n    if ((uVar3 & 0x10) != 0) {\n        arg_8h[3] = arg_8h[3] | 2;\n    }\n    if ((uVar3 & 0x20) != 0) {\n        arg_8h[3] = arg_8h[3] | 1;\n    }\n    uVar3 = *puVar1 & 0xc00;\n    if (uVar3 == 0) {\n        *arg_8h = *arg_8h & 0xfffffffc;\n    }\n    else {\n        if (uVar3 == 0x400) {\n            uVar3 = *arg_8h & 0xfffffffd | 1;\n        }\n        else {\n            if (uVar3 != 0x800) {\n                if (uVar3 == 0xc00) {\n                    *arg_8h = *arg_8h | 3;\n                }\n                goto code_r0x00407c7f;\n            }\n            uVar3 = *arg_8h & 0xfffffffe | 2;\n        }\n        *arg_8h = uVar3;\n    }\ncode_r0x00407c7f:\n    uVar3 = *puVar1 & 0x300;\n    if (uVar3 == 0) {\n        uVar3 = *arg_8h & 0xffffffeb | 8;\ncode_r0x00407cb5:\n        *arg_8h = uVar3;\n    }\n    else {\n        if (uVar3 == 0x200) {\n            uVar3 = *arg_8h & 0xffffffe7 | 4;\n            goto code_r0x00407cb5;\n        }\n        if (uVar3 == 0x300) {\n            *arg_8h = *arg_8h & 0xffffffe3;\n        }\n    }\n    *arg_8h = *arg_8h ^ (arg_14h << 5 ^ *arg_8h) & 0x1ffe0;\n    arg_8h[8] = arg_8h[8] | 1;\n    if (arg_20h == 0) {\n        arg_8h[8] = arg_8h[8] & 0xffffffe3 | 2;\n        *(arg_8h + 4) = *arg_18h;\n        arg_8h[0x18] = arg_8h[0x18] | 1;\n        arg_8h[0x18] = arg_8h[0x18] & 0xffffffe3 | 2;\n        *(arg_8h + 0x14) = *arg_1ch;\n    }\n    else {\n        arg_8h[8] = arg_8h[8] & 0xffffffe1;\n        arg_8h[4] = *arg_18h;\n        arg_8h[0x18] = arg_8h[0x18] | 1;\n        arg_8h[0x18] = arg_8h[0x18] & 0xffffffe1;\n        arg_8h[0x14] = *arg_1ch;\n    }\n    fcn.00407f47();\n    (*_sym.imp.KERNEL32.dll_RaiseException)(uVar4, 0, 1, &arg_8h);\n    if ((*(arg_8h + 2) & 0x10) != 0) {\n        *puVar1 = *puVar1 & 0xfffffffe;\n    }\n    if ((*(arg_8h + 2) & 8) != 0) {\n        *puVar1 = *puVar1 & 0xfffffffb;\n    }\n    if ((*(arg_8h + 2) & 4) != 0) {\n        *puVar1 = *puVar1 & 0xfffffff7;\n    }\n    if ((*(arg_8h + 2) & 2) != 0) {\n        *puVar1 = *puVar1 & 0xffffffef;\n    }\n    if ((*(arg_8h + 2) & 1) != 0) {\n        *puVar1 = *puVar1 & 0xffffffdf;\n    }\n    uVar3 = *arg_8h & 3;\n    if (uVar3 == 0) {\n        *puVar1 = *puVar1 & 0xfffff3ff;\n    }\n    else {\n        if (uVar3 == 1) {\n            uVar3 = *puVar1 & 0xfffff7ff | 0x400;\n        }\n        else {\n            if (uVar3 != 2) {\n                if (uVar3 == 3) {\n                    *puVar1 = *puVar1 | 0xc00;\n                }\n                goto code_r0x00407dc0;\n            }\n            uVar3 = *puVar1 & 0xfffffbff | 0x800;\n        }\n        *puVar1 = uVar3;\n    }\ncode_r0x00407dc0:\n    uVar3 = *arg_8h >> 2 & 7;\n    if (uVar3 == 0) {\n        uVar3 = *puVar1 & 0xfffff3ff | 0x300;\n    }\n    else {\n        if (uVar3 != 1) {\n            if (uVar3 == 2) {\n                *puVar1 = *puVar1 & 0xfffff3ff;\n            }\n            goto code_r0x00407ded;\n        }\n        uVar3 = *puVar1 & 0xfffff3ff | 0x200;\n    }\n    *puVar1 = uVar3;\ncode_r0x00407ded:\n    if (arg_20h == 0) {\n        *puVar2 = *(arg_8h + 0x14);\n    }\n    else {\n        *puVar2 = arg_8h[0x14];\n    }\n    return;\n}\n",
        "token_count": 2072
    },
    "004083cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004083cc(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00404f20(0x418368, 8);\n    piVar1 = *(unaff_EBP + 8);\n    if ((((piVar1 != NULL) && (*piVar1 == -0x1f928c9d)) && (piVar1[4] == 3)) &&\n       ((((piVar1[5] == 0x19930520 || (piVar1[5] == 0x19930521)) || (piVar1[5] == 0x19930522)) &&\n        (puVar2 = piVar1[7],  puVar2 != NULL)))) {\n        iVar3 = *(puVar2 + 4);\n        if (iVar3 == 0) {\n            if (((*puVar2 & 0x10) != 0) && (piVar1 = *piVar1[6],  piVar1 != NULL)) {\n                (**(*piVar1 + 8))(piVar1);\n            }\n        }\n        else {\n            *(unaff_EBP + -4) = 0;\n            fcn.00403ba3(piVar1[6], iVar3);\n            *(unaff_EBP + -4) = 0xfffffffe;\n        }\n    }\n    fcn.00404f65();\n    return;\n}\n",
        "token_count": 357
    },
    "004085e9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004085e9(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x28);\n    fcn.00403dbe(*(unaff_EBP + -0x2c));\n    iVar1 = fcn.00408120();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x30);\n    iVar1 = fcn.00408120();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x34);\n    if (((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n         ((unaff_ESI[5] == 0x19930520 || ((unaff_ESI[5] == 0x19930521 || (unaff_ESI[5] == 0x19930522)))))) &&\n        (*(unaff_EBP + -0x38) == 0)) &&\n       ((*(unaff_EBP + -0x1c) != 0 && (iVar1 = fcn.00403e0e(unaff_ESI[6]),  iVar1 != 0)))) {\n        fcn.004083cc(unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 380
    },
    "004086a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl\nfcn.004086a8(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, int32_t arg_20h, \n            uint *arg_24h, uint arg_28h, int32_t arg_2ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_20h != 0) {\n        fcn.00408cd6(arg_8h, arg_ch, arg_1ch, arg_20h);\n    }\n    if (arg_2ch == 0) {\n        arg_2ch = arg_ch;\n    }\n    fcn.00403d3f(arg_2ch, arg_8h);\n    fcn.00408f74(arg_ch, arg_14h, arg_18h, *arg_24h);\n    *(arg_ch + 8) = arg_24h[1] + 1;\n    iVar1 = fcn.004084a2(arg_8h, arg_ch, arg_10h, arg_18h, *(arg_1ch + 0xc), arg_28h, 0x100);\n    if (iVar1 != 0) {\n        fcn.00403d0d(iVar1, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 314
    },
    "00408d64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00408d64(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t unaff_EBP;\n    int32_t *arg_8h_00;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00404f20(0x4183e0, 0xc);\n    puVar1 = *(unaff_EBP + 0x10);\n    if (((puVar1[1] == 0) || (*(puVar1[1] + 8) == '\\0')) || ((puVar1[2] == 0 && ((*puVar1 & 0x80000000) == 0))))\n    goto code_r0x00408f20;\n    uVar2 = *puVar1;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    if (-1 < uVar2) {\n        arg_8h_00 = arg_8h_00 + puVar1[2] + 0xc;\n    }\n    *(unaff_EBP + -4) = 0;\n    puVar3 = *(unaff_EBP + 0x14);\n    if (((uVar2 < '\\0') && ((*puVar3 & 0x10) != 0)) && (*0x5dd4d0 != NULL)) {\n        uVar4 = (**0x5dd4d0)();\n        *(unaff_EBP + 0x10) = uVar4;\n        iVar5 = fcn.0040c776(uVar4);\n        if ((iVar5 == 0) || (iVar5 = fcn.0040c785(arg_8h_00),  iVar5 == 0)) goto code_r0x00408f02;\n        iVar5 = *(unaff_EBP + 0x10);\ncode_r0x00408dee:\n        *arg_8h_00 = iVar5;\ncode_r0x00408df5:\n        iVar5 = fcn.00408cb1(iVar5, puVar3 + 8);\n        *arg_8h_00 = iVar5;\n    }\n    else {\n        uVar4 = *(*(unaff_EBP + 8) + 0x18);\n        if ((uVar2 & 8) != 0) {\n            iVar5 = fcn.0040c776(uVar4);\n            if ((iVar5 == 0) || (iVar5 = fcn.0040c785(arg_8h_00),  iVar5 == 0)) goto code_r0x00408f02;\n            iVar5 = *(*(unaff_EBP + 8) + 0x18);\n            goto code_r0x00408dee;\n        }\n        if ((*puVar3 & 1) != 0) {\n            iVar5 = fcn.0040c776(uVar4);\n            if ((iVar5 == 0) || (iVar5 = fcn.0040c785(arg_8h_00),  iVar5 == 0)) goto code_r0x00408f02;\n            fcn.00402bf0(arg_8h_00, *(*(unaff_EBP + 8) + 0x18), *(puVar3 + 0x14));\n            if ((*(puVar3 + 0x14) != 4) || (*arg_8h_00 == 0)) goto code_r0x00408f07;\n            iVar5 = *arg_8h_00;\n            goto code_r0x00408df5;\n        }\n        if (*(puVar3 + 0x18) == 0) {\n            iVar5 = fcn.0040c776(uVar4);\n            if ((iVar5 == 0) || (iVar5 = fcn.0040c785(arg_8h_00),  iVar5 == 0)) {\ncode_r0x00408f02:\n                fcn.0040833c();\n            }\n            else {\n                uVar4 = *(puVar3 + 0x14);\n                uVar6 = fcn.00408cb1(*(*(unaff_EBP + 8) + 0x18), puVar3 + 8);\n                fcn.00402bf0(arg_8h_00, uVar6, uVar4);\n            }\n        }\n        else {\n            iVar5 = fcn.0040c776(uVar4);\n            if (((iVar5 == 0) || (iVar5 = fcn.0040c785(arg_8h_00),  iVar5 == 0)) ||\n               (iVar5 = fcn.0040c767(*(puVar3 + 0x18)),  iVar5 == 0)) goto code_r0x00408f02;\n            *(unaff_EBP + -0x1c) = ((*puVar3 & 4) != 0) + 1;\n        }\n    }\ncode_r0x00408f07:\n    *(unaff_EBP + -4) = 0xfffffffe;\ncode_r0x00408f20:\n    fcn.00404f65();\n    return;\n}\n",
        "token_count": 1193
    },
    "00409033": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00409033(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00408120();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00408120();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "0040912e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040912e(uint8_t *arg_8h, uint8_t *arg_ch, uint8_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = *(arg_8h + 4);\n    if (((iVar1 == 0) || (*(iVar1 + 8) == '\\0')) || (((*arg_8h & 0x80) != 0 && ((*arg_ch & 0x10) != 0)))) {\ncode_r0x0040918e:\n        uVar2 = 1;\n    }\n    else {\n        if (iVar1 == *(arg_ch + 4)) {\ncode_r0x0040916d:\n            if ((((*arg_ch & 2) == 0) || ((*arg_8h & 8) != 0)) &&\n               ((((*arg_10h & 1) == 0 || ((*arg_8h & 1) != 0)) && (((*arg_10h & 2) == 0 || ((*arg_8h & 2) != 0))))))\n            goto code_r0x0040918e;\n        }\n        else {\n            iVar1 = fcn.00409260(iVar1 + 8, *(arg_ch + 4) + 8);\n            if (iVar1 == 0) goto code_r0x0040916d;\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 329
    },
    "0040948c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.0040948c(uint32_t *arg_8h, uchar *arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    int16_t iVar4;\n    int32_t *piVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint32_t extraout_ECX_01;\n    int16_t iVar10;\n    char *pcVar11;\n    char *pcVar12;\n    bool bVar13;\n    int32_t iVar14;\n    int32_t var_2ch;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0x3ff;\n    iVar4 = 0x30;\n    fcn.0040935d(arg_1ch);\n    if (arg_14h < 0) {\n        arg_14h = 0;\n    }\n    if ((arg_ch == NULL) || (arg_10h == 0)) {\n        piVar5 = fcn.00405af7();\n        iVar14 = 0x16;\n    }\n    else {\n        *arg_ch = 0;\n        if (arg_14h + 0xbU < arg_10h) {\n            if ((arg_8h[1] >> 0x14 & 0x7ff) == 0x7ff) {\n                iVar14 = -1;\n                if (arg_10h != 0xffffffff) {\n                    iVar14 = arg_10h - 2;\n                }\n                iVar14 = fcn.004097e8(arg_8h, arg_ch + 2, iVar14, arg_14h, 0);\n                if (iVar14 == 0) {\n                    if (arg_ch[2] == '-') {\n                        *arg_ch = 0x2d;\n                        arg_ch = arg_ch + 1;\n                    }\n                    *arg_ch = 0x30;\n                    arg_ch[1] = ((arg_18h == 0) - 1U & 0xe0) + 0x78;\n                    pcVar6 = fcn.0040c980(arg_ch + 2, 0x65);\n                    if (pcVar6 != NULL) {\n                        *pcVar6 = ((arg_18h == 0) - 1U & 0xe0) + 0x70;\n                        pcVar6[3] = '\\0';\n                    }\n                    iVar14 = 0;\n                }\n                else {\n                    *arg_ch = 0;\n                }\n                goto code_r0x004097d2;\n            }\n            if ((arg_8h[1] & 0x80000000) != 0) {\n                *arg_ch = 0x2d;\n                arg_ch = arg_ch + 1;\n            }\n            *arg_ch = 0x30;\n            arg_ch[1] = ((arg_18h == 0) - 1U & 0xe0) + 0x78;\n            iVar10 = (-(arg_18h != 0) & 0xffe0) + 0x27;\n            if ((arg_8h[1] & 0x7ff00000) == 0) {\n                arg_ch[2] = 0x30;\n                if ((*arg_8h | arg_8h[1] & 0xfffff) == 0) {\n                    var_8h = 0;\n                }\n                else {\n                    var_8h = 0x3fe;\n                }\n            }\n            else {\n                arg_ch[2] = 0x31;\n            }\n            pcVar12 = arg_ch + 3;\n            pcVar6 = arg_ch + 4;\n            if (arg_14h == 0) {\n                *pcVar12 = '\\0';\n            }\n            else {\n                *pcVar12 = ***(var_2ch + 0x84);\n            }\n            if (((arg_8h[1] & 0xfffff) != 0) || (*arg_8h != 0)) {\n                do {\n                    if (arg_14h < 1) break;\n                    iVar2 = fcn.0040cef0();\n                    uVar3 = iVar2 + 0x30;\n                    if (0x39 < uVar3) {\n                        uVar3 = uVar3 + iVar10;\n                    }\n                    *pcVar6 = uVar3;\n                    pcVar6 = pcVar6 + 1;\n                    iVar4 = iVar4 + -4;\n                    arg_14h = arg_14h + -1;\n                } while (-1 < iVar4);\n                if ((-1 < iVar4) && (uVar3 = fcn.0040cef0(),  pcVar11 = pcVar6,  8 < uVar3)) {\n                    while( true ) {\n                        pcVar7 = pcVar11 + -1;\n                        if ((*pcVar7 != 'f') && (*pcVar7 != 'F')) break;\n                        *pcVar7 = '0';\n                        pcVar11 = pcVar7;\n                    }\n                    if (pcVar7 == pcVar12) {\n                        pcVar11[-2] = pcVar11[-2] + '\\x01';\n                    }\n                    else if (*pcVar7 == '9') {\n                        *pcVar7 = iVar10 + ':';\n                    }\n                    else {\n                        *pcVar7 = *pcVar7 + '\\x01';\n                    }\n                }\n            }\n            if (0 < arg_14h) {\n                fcn.004044c0(pcVar6, 0x30, arg_14h);\n                pcVar6 = pcVar6 + arg_14h;\n            }\n            if (*pcVar12 == '\\0') {\n                pcVar6 = pcVar12;\n            }\n            *pcVar6 = ((arg_18h == 0) - 1U & 0xe0) + 0x70;\n            uVar8 = fcn.0040cef0();\n            uVar9 = (uVar8 & 0x7ff) - var_8h;\n            uVar8 = (uVar8 & 0x7ff) < var_8h;\n            iVar14 = -uVar8;\n            if (uVar8 == 0) {\n                pcVar6[1] = '+';\n            }\n            else {\n                pcVar6[1] = '-';\n                bVar13 = uVar9 != 0;\n                uVar9 = -uVar9;\n                iVar14 = -(iVar14 + bVar13);\n            }\n            pcVar11 = pcVar6 + 2;\n            *pcVar11 = '0';\n            pcVar12 = pcVar11;\n            if (-1 < iVar14) {\n                if ((iVar14 < 1) && (uVar9 < 1000)) {\ncode_r0x00409783:\n                    if ((iVar14 < 0) || ((iVar14 < 1 && (uVar9 < 100)))) goto code_r0x004097a2;\n                }\n                else {\n                    cVar1 = fcn.0040ce10(uVar9, iVar14, 1000, 0);\n                    *pcVar11 = cVar1 + '0';\n                    pcVar12 = pcVar6 + 3;\n                    uVar9 = extraout_ECX;\n                    if (pcVar12 == pcVar11) goto code_r0x00409783;\n                }\n                cVar1 = fcn.0040ce10(uVar9, iVar14, 100, 0);\n                *pcVar12 = cVar1 + '0';\n                pcVar12 = pcVar12 + 1;\n                uVar9 = extraout_ECX_00;\n            }\ncode_r0x004097a2:\n            if ((pcVar12 != pcVar11) || ((-1 < iVar14 && ((0 < iVar14 || (9 < uVar9)))))) {\n                cVar1 = fcn.0040ce10(uVar9, iVar14, 10, 0);\n                *pcVar12 = cVar1 + '0';\n                pcVar12 = pcVar12 + 1;\n                uVar9 = extraout_ECX_01;\n            }\n            iVar14 = 0;\n            *pcVar12 = uVar9 + '0';\n            pcVar12[1] = '\\0';\n            goto code_r0x004097d2;\n        }\n        piVar5 = fcn.00405af7();\n        iVar14 = 0x22;\n    }\n    *piVar5 = iVar14;\n    fcn.004057d3();\ncode_r0x004097d2:\n    if (var_20h != '\\0') {\n        *(var_24h + 0x70) = *(var_24h + 0x70) & 0xfffffffd;\n    }\n    return iVar14;\n}\n",
        "token_count": 2065
    },
    "00409806": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl\nfcn.00409806(uchar *arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t *arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uchar *arg_ch_00;\n    int32_t iVar4;\n    uchar *puVar5;\n    uint uVar6;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.0040935d(arg_20h);\n    if ((arg_8h == NULL) || (arg_ch == 0)) {\n        puVar2 = fcn.00405af7();\n        uVar6 = 0x16;\n    }\n    else {\n        uVar6 = 0;\n        iVar3 = arg_10h;\n        if (arg_10h < 1) {\n            iVar3 = 0;\n        }\n        if (iVar3 + 9U < arg_ch) {\n            if (arg_1ch != '\\0') {\n                fcn.00409e5b(arg_8h + (*arg_18h == 0x2d), 0 < arg_10h);\n            }\n            puVar5 = arg_8h;\n            if (*arg_18h == 0x2d) {\n                *arg_8h = 0x2d;\n                puVar5 = arg_8h + 1;\n            }\n            if (0 < arg_10h) {\n                *puVar5 = puVar5[1];\n                puVar5 = puVar5 + 1;\n                *puVar5 = ***(var_10h + 0x84);\n            }\n            puVar5 = puVar5 + (arg_1ch == '\\0') + arg_10h;\n            arg_ch_00 = 0xffffffff;\n            if (arg_ch != 0xffffffff) {\n                arg_ch_00 = arg_8h + (arg_ch - puVar5);\n            }\n            iVar3 = fcn.0040a7c7(puVar5, arg_ch_00, \"e+000\");\n            if (iVar3 != 0) {\n                fcn.004057e3(0, 0, 0, 0, 0);\n                pcVar1 = swi(3);\n                uVar6 = (*pcVar1)();\n                return uVar6;\n            }\n            if (arg_14h != 0) {\n                *puVar5 = 0x45;\n            }\n            if (*arg_18h[3] != '0') {\n                iVar3 = arg_18h[1] + -1;\n                if (iVar3 < 0) {\n                    iVar3 = -iVar3;\n                    puVar5[1] = 0x2d;\n                }\n                if (99 < iVar3) {\n                    iVar4 = iVar3 / 100;\n                    iVar3 = iVar3 % 100;\n                    puVar5[2] = puVar5[2] + iVar4;\n                }\n                if (9 < iVar3) {\n                    iVar4 = iVar3 / 10;\n                    iVar3 = iVar3 % 10;\n                    puVar5[3] = puVar5[3] + iVar4;\n                }\n                puVar5[4] = puVar5[4] + iVar3;\n            }\n            if (((*0x5dddec & 1) != 0) && (puVar5[2] == '0')) {\n                fcn.00402bf0(puVar5 + 2, puVar5 + 3, 3);\n            }\n            goto code_r0x00409937;\n        }\n        puVar2 = fcn.00405af7();\n        uVar6 = 0x22;\n    }\n    *puVar2 = uVar6;\n    fcn.004057d3();\ncode_r0x00409937:\n    *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n    return uVar6;\n}\n",
        "token_count": 943
    },
    "00409a25": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00409a25(uchar *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t var_14h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = arg_14h[1];\n    fcn.0040935d(arg_1ch);\n    if ((arg_8h == NULL) || (arg_ch == 0)) {\n        puVar2 = fcn.00405af7();\n        uVar3 = 0x16;\n        *puVar2 = 0x16;\n        fcn.004057d3();\n    }\n    else {\n        uVar3 = 0;\n        if ((arg_18h != '\\0') && (iVar1 + -1 == arg_10h)) {\n            *(arg_8h + (*arg_14h == 0x2d) + iVar1 + -1) = 0x30;\n        }\n        if (*arg_14h == 0x2d) {\n            *arg_8h = 0x2d;\n            arg_8h = arg_8h + 1;\n        }\n        if (arg_14h[1] < 1) {\n            fcn.00409e5b(arg_8h, 1);\n            *arg_8h = 0x30;\n            arg_8h = arg_8h + 1;\n        }\n        else {\n            arg_8h = arg_8h + arg_14h[1];\n        }\n        if (0 < arg_10h) {\n            fcn.00409e5b(arg_8h, 1);\n            *arg_8h = ***(var_14h + 0x84);\n            iVar1 = arg_14h[1];\n            if (iVar1 < 0) {\n                if (arg_18h == '\\0') {\n                    if (SBORROW4(arg_10h, -iVar1) == arg_10h + iVar1 < 0) {\n                        arg_10h = -iVar1;\n                    }\n                }\n                else {\n                    arg_10h = -iVar1;\n                }\n                fcn.00409e5b(arg_8h + 1, arg_10h);\n                fcn.004044c0(arg_8h + 1, 0x30, arg_10h);\n            }\n        }\n    }\n    if (var_8h != '\\0') {\n        *(var_ch + 0x70) = *(var_ch + 0x70) & 0xfffffffd;\n    }\n    return uVar3;\n}\n",
        "token_count": 655
    },
    "00409ce2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00409ce2(char *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    char *pcVar3;\n    \n    fcn.0040935d(arg_ch);\n    cVar1 = *arg_8h;\n    if (cVar1 != '\\0') {\n        do {\n            if (cVar1 == ***(var_10h + 0x84)) break;\n            arg_8h = arg_8h + 1;\n            cVar1 = *arg_8h;\n        } while (cVar1 != '\\0');\n    }\n    if (*arg_8h != '\\0') {\n        do {\n            arg_8h = arg_8h + 1;\n            cVar1 = *arg_8h;\n            pcVar2 = arg_8h;\n            if ((cVar1 == '\\0') || (cVar1 == 'e')) break;\n        } while (cVar1 != 'E');\n        do {\n            pcVar3 = pcVar2;\n            pcVar2 = pcVar3 + -1;\n        } while (*pcVar2 == '0');\n        if (*pcVar2 == ***(var_10h + 0x84)) {\n            pcVar2 = pcVar3 + -2;\n        }\n        do {\n            cVar1 = *arg_8h;\n            pcVar2 = pcVar2 + 1;\n            arg_8h = arg_8h + 1;\n            *pcVar2 = cVar1;\n        } while (cVar1 != '\\0');\n    }\n    *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n    return;\n}\n",
        "token_count": 427
    },
    "00409ec9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409ec9(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    \n    piVar1 = *arg_8h;\n    if (((*piVar1 == -0x1f928c9d) && (piVar1[4] == 3)) &&\n       ((iVar2 = piVar1[5],  iVar2 == 0x19930520 ||\n        (((iVar2 == 0x19930521 || (iVar2 == 0x19930522)) || (iVar2 == 0x1994000)))))) {\n        fcn.00408374();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 194
    },
    "0040a13b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.0040a13b(uint8_t *arg_8h, uint8_t **arg_ch, uint8_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    \n    *arg_18h = 0;\n    *arg_14h = 1;\n    if (arg_ch != NULL) {\n        *arg_ch = arg_10h;\n        arg_ch = arg_ch + 1;\n    }\n    bVar2 = false;\n    do {\n        if (*arg_8h == 0x22) {\n            bVar2 = !bVar2;\n            puVar6 = arg_8h + 1;\n            uVar3 = 0x22;\n        }\n        else {\n            *arg_18h = *arg_18h + 1;\n            if (arg_10h != NULL) {\n                *arg_10h = *arg_8h;\n                arg_10h = arg_10h + 1;\n            }\n            uVar3 = *arg_8h;\n            puVar6 = arg_8h + 1;\n    // WARNING: Ignoring partial resolution of indirect\n            iVar4 = fcn.0040cfcf(uVar3);\n            if (iVar4 != 0) {\n                *arg_18h = *arg_18h + 1;\n                if (arg_10h != NULL) {\n                    *arg_10h = *puVar6;\n                    arg_10h = arg_10h + 1;\n                }\n                puVar6 = arg_8h + 2;\n            }\n            if (uVar3 == 0) {\n                puVar6 = puVar6 + -1;\n                goto code_r0x0040a1cc;\n            }\n        }\n        arg_8h = puVar6;\n    } while ((bVar2) || ((uVar3 != 0x20 && (uVar3 != 9))));\n    if (arg_10h != NULL) {\n        arg_10h[-1] = 0;\n    }\ncode_r0x0040a1cc:\n    bVar2 = false;\n    while (puVar7 = puVar6,  *puVar6 != 0) {\n        for (; (*puVar7 == 0x20 || (*puVar7 == 9)); puVar7 = puVar7 + 1) {\n        }\n        if (*puVar7 == 0) break;\n        if (arg_ch != NULL) {\n            *arg_ch = arg_10h;\n            arg_ch = arg_ch + 1;\n        }\n        *arg_14h = *arg_14h + 1;\n        while( true ) {\n            bVar1 = true;\n            uVar5 = 0;\n            for (; *puVar7 == 0x5c; puVar7 = puVar7 + 1) {\n                uVar5 = uVar5 + 1;\n            }\n            puVar6 = puVar7;\n            if (*puVar7 == 0x22) {\n                if (((uVar5 & 1) == 0) && ((!bVar2 || (puVar6 = puVar7 + 1,  *puVar6 != 0x22)))) {\n                    bVar1 = false;\n                    bVar2 = !bVar2;\n                    puVar6 = puVar7;\n                }\n                uVar5 = uVar5 >> 1;\n            }\n            while (uVar5 != 0) {\n                uVar5 = uVar5 - 1;\n                if (arg_10h != NULL) {\n                    *arg_10h = 0x5c;\n                    arg_10h = arg_10h + 1;\n                }\n                *arg_18h = *arg_18h + 1;\n            }\n            uVar3 = *puVar6;\n            if ((uVar3 == 0) || ((!bVar2 && ((uVar3 == 0x20 || (uVar3 == 9)))))) break;\n            if (bVar1) {\n                iVar4 = fcn.0040cfcf(uVar3);\n                if (arg_10h == NULL) {\n                    if (iVar4 != 0) {\n                        puVar6 = puVar6 + 1;\n                        *arg_18h = *arg_18h + 1;\n                    }\n                }\n                else {\n                    if (iVar4 != 0) {\n                        *arg_10h = *puVar6;\n                        arg_10h = arg_10h + 1;\n                        puVar6 = puVar6 + 1;\n                        *arg_18h = *arg_18h + 1;\n                    }\n                    *arg_10h = *puVar6;\n                    arg_10h = arg_10h + 1;\n                }\n                *arg_18h = *arg_18h + 1;\n            }\n            puVar7 = puVar6 + 1;\n        }\n        if (arg_10h != NULL) {\n            *arg_10h = 0;\n            arg_10h = arg_10h + 1;\n        }\n        *arg_18h = *arg_18h + 1;\n    }\n    if (arg_ch != NULL) {\n        *arg_ch = NULL;\n    }\n    *arg_14h = *arg_14h + 1;\n    return;\n}\n",
        "token_count": 1254
    },
    "0040a2b7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040a2b7(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    \n    if (*0x5deed4 == 0) {\n        fcn.0040ae5e();\n    }\n    iVar6 = 0;\n    pcVar5 = *0x5dd370;\n    if (*0x5dd370 != NULL) {\n        for (; *pcVar5 != '\\0'; pcVar5 = pcVar5 + iVar3 + 1) {\n            if (*pcVar5 != '=') {\n                iVar6 = iVar6 + 1;\n            }\n            iVar3 = fcn.004047b0(pcVar5);\n        }\n        *0x5dd390 = fcn.00404e3c(iVar6 + 1, 4);\n        if (*0x5dd390 != NULL) {\n            cVar1 = **0x5dd370;\n            piVar7 = *0x5dd390;\n            pcVar5 = *0x5dd370;\n            do {\n                if (cVar1 == '\\0') {\n                    fcn.00404ad2(*0x5dd370);\n                    *0x5dd370 = NULL;\n                    *piVar7 = 0;\n                    *0x5deed8 = 1;\n                    return 0;\n                }\n                iVar6 = fcn.004047b0(pcVar5);\n                iVar6 = iVar6 + 1;\n                if (*pcVar5 != '=') {\n                    iVar3 = fcn.00404e3c(iVar6, 1);\n                    *piVar7 = iVar3;\n                    if (iVar3 == 0) {\n                        fcn.00404ad2(*0x5dd390);\n                        *0x5dd390 = NULL;\n                        return 0xffffffff;\n                    }\n                    iVar3 = fcn.0040a7c7(iVar3, iVar6, pcVar5);\n                    if (iVar3 != 0) {\n                        fcn.004057e3(0, 0, 0, 0, 0);\n                        pcVar2 = swi(3);\n                        uVar4 = (*pcVar2)();\n                        return uVar4;\n                    }\n                    piVar7 = piVar7 + 1;\n                }\n                pcVar5 = pcVar5 + iVar6;\n                cVar1 = *pcVar5;\n            } while( true );\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 571
    },
    "0040a3f5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1fch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.0040a3f5(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint var_1fch;\n    uint lpBuffer;\n    uchar var_5h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41dec0 ^ &stack0xfffffffc;\n    iVar2 = fcn.0040a3d1(arg_8h);\n    if (iVar2 != 0) {\n        iVar3 = fcn.0040a5bf(3);\n        if ((iVar3 == 1) || ((iVar3 = fcn.0040a5bf(3),  iVar3 == 0 && (*0x5dd5e8 == 1)))) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff4);\n            if ((iVar3 != 0) && (iVar3 != -1)) {\n                uVar5 = 0;\n                do {\n                    *(&lpBuffer + uVar5) = *(iVar2 + uVar5 * 2);\n                    if (*(iVar2 + uVar5 * 2) == 0) break;\n                    uVar5 = uVar5 + 1;\n                } while (uVar5 < 500);\n                var_5h = 0;\n                uVar4 = fcn.004047b0(&lpBuffer, &var_1fch, 0);\n                (*_sym.imp.KERNEL32.dll_WriteFile)(iVar3, &lpBuffer, uVar4);\n            }\n        }\n        else if (arg_8h != 0xfc) {\n            iVar3 = fcn.0040d051(0x5dd5f0, 0x314, L\"Runtime Error!\\n\\nProgram: \");\n            if (iVar3 == 0) {\n                *0x5dd82a = 0;\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, 0x5dd622, 0x104);\n                if ((iVar3 != 0) || (iVar3 = fcn.0040d051(0x5dd622, 0x2fb, L\"<program name unknown>\"),  iVar3 == 0)) {\n                    iVar3 = fcn.0040d0ad(0x5dd622);\n                    if (0x3c < iVar3 + 1U) {\n                        iVar3 = fcn.0040d0ad(0x5dd622);\n                        iVar3 = fcn.0040d0c6(iVar3 * 2 + 0x5dd5ac, 0x2fb - (iVar3 * 2 + -0x76 >> 1), 0x41463c, 3);\n                        if (iVar3 != 0) goto code_r0x0040a5a7;\n                    }\n                    iVar3 = fcn.0040cfe5(0x5dd5f0, 0x314, 0x414644);\n                    if ((iVar3 == 0) && (iVar2 = fcn.0040cfe5(0x5dd5f0, 0x314, iVar2),  iVar2 == 0)) {\n                        fcn.0040d184(0x5dd5f0, L\"Microsoft Visual C++ Runtime Library\", 0x12010);\n                        goto code_r0x0040a597;\n                    }\n                }\n            }\ncode_r0x0040a5a7:\n            fcn.004057e3(0, 0, 0, 0, 0);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\ncode_r0x0040a597:\n    fcn.00403a01(var_1fch);\n    return;\n}\n",
        "token_count": 901
    },
    "0040a5bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.0040a5bf(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    iVar1 = *0x5ddc18;\n    if ((-1 < arg_8h) && ((iVar2 = arg_8h,  arg_8h < 3 || (iVar2 = *0x5ddc18,  arg_8h == 3)))) {\n        *0x5ddc18 = iVar2;\n        return iVar1;\n    }\n    puVar3 = fcn.00405af7();\n    *puVar3 = 0x16;\n    fcn.004057d3();\n    return -1;\n}\n",
        "token_count": 182
    },
    "0040a845": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040a845(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    bool bVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    int32_t iVar6;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00404f20(0x418458, 0x24);\n    *(unaff_EBP + -0x2c) = 0;\n    *(unaff_EBP + -0x30) = 0;\n    bVar1 = false;\n    *(unaff_EBP + -0x20) = 0;\n    iVar6 = 0;\n    *(unaff_EBP + -0x28) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < 0xc) {\n        if (arg_8h_00 != 0xb) {\n            if (arg_8h_00 == 2) {\n                *(unaff_EBP + -0x1c) = 0x5ddc1c;\n                uVar4 = *0x5ddc1c;\n                goto code_r0x0040a904;\n            }\n            if (arg_8h_00 != 4) {\n                if (arg_8h_00 == 6) goto code_r0x0040a8dc;\n                if (arg_8h_00 != 8) goto code_r0x0040a8ca;\n            }\n        }\n        iVar6 = fcn.00408138();\n        *(unaff_EBP + -0x28) = iVar6;\n        if (iVar6 == 0) goto code_r0x0040a9fa;\n        iVar2 = fcn.0040aa00(arg_8h_00, *(iVar6 + 0x5c));\n        *(unaff_EBP + -0x1c) = iVar2 + 8;\n        iVar2 = *(iVar2 + 8);\n    }\n    else {\n        if (arg_8h_00 == 0xf) {\n            *(unaff_EBP + -0x1c) = 0x5ddc28;\n            uVar4 = *0x5ddc28;\n        }\n        else if (arg_8h_00 == 0x15) {\n            *(unaff_EBP + -0x1c) = 0x5ddc20;\n            uVar4 = *0x5ddc20;\n        }\n        else {\n            if (arg_8h_00 != 0x16) {\ncode_r0x0040a8ca:\n                puVar3 = fcn.00405af7();\n                *puVar3 = 0x16;\n                fcn.004057d3();\n                goto code_r0x0040a9fa;\n            }\ncode_r0x0040a8dc:\n            *(unaff_EBP + -0x1c) = 0x5ddc24;\n            uVar4 = *0x5ddc24;\n        }\ncode_r0x0040a904:\n        bVar1 = true;\n        *(unaff_EBP + -0x20) = 1;\n        iVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(uVar4);\n    }\n    *(unaff_EBP + -0x24) = iVar2;\n    if (iVar2 == 1) goto code_r0x0040a9fa;\n    if (iVar2 == 0) {\n        fcn.00404c12(3);\n    }\n    if (bVar1) {\n        fcn.0040ab8a(0);\n    }\n    *(unaff_EBP + -4) = 0;\n    if (((arg_8h_00 == 8) || (arg_8h_00 == 0xb)) || (arg_8h_00 == 4)) {\n        *(unaff_EBP + -0x2c) = *(iVar6 + 0x60);\n        *(iVar6 + 0x60) = 0;\n        if (arg_8h_00 == 8) {\n            *(unaff_EBP + -0x30) = *(iVar6 + 100);\n            *(iVar6 + 100) = 0x8c;\n            goto code_r0x0040a963;\n        }\ncode_r0x0040a995:\n        uVar4 = (*_sym.imp.KERNEL32.dll_EncodePointer)(0);\n        **(unaff_EBP + -0x1c) = uVar4;\n    }\n    else {\ncode_r0x0040a963:\n        iVar2 = *0x413c30;\n        if (arg_8h_00 != 8) goto code_r0x0040a995;\n        *(unaff_EBP + -0x34) = *0x413c30;\n        iVar5 = iVar2;\n        while (iVar2 < *0x413c34 + iVar5) {\n            *(*(iVar6 + 0x5c) + 8 + iVar2 * 0xc) = 0;\n            iVar2 = iVar2 + 1;\n            *(unaff_EBP + -0x34) = iVar2;\n            iVar5 = *0x413c30;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040a9c6();\n    if (arg_8h_00 == 8) {\n        (**(unaff_EBP + -0x24))(8, *(iVar6 + 100));\n    }\n    else {\n        (**(unaff_EBP + -0x24))(arg_8h_00);\n        if ((arg_8h_00 != 0xb) && (arg_8h_00 != 4)) goto code_r0x0040a9fa;\n    }\n    *(iVar6 + 0x60) = *(unaff_EBP + -0x2c);\n    if (arg_8h_00 == 8) {\n        *(iVar6 + 100) = *(unaff_EBP + -0x30);\n    }\ncode_r0x0040a9fa:\n    fcn.00404f65();\n    return;\n}\n",
        "token_count": 1469
    },
    "0040aaa6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.0040aaa6(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    if (arg_8h != 0) {\n        uVar1 = fcn.0040aa58(arg_8h);\n        if ((-1 < uVar1) && (uVar1 < 0xe4)) {\n            return *(uVar1 * 8 + 0x4146a0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 123
    },
    "0040ab8a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.0040ab8a(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*(arg_8h * 8 + 0x41e598) == 0) {\n        iVar1 = fcn.0040ac12(arg_8h);\n        if (iVar1 == 0) {\n            fcn.00404b54(0x11);\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(*(arg_8h * 8 + 0x41e598));\n    return;\n}\n",
        "token_count": 142
    },
    "0040ac12": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040ac12(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    uint *puVar2;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00404f20(0x418478, 8);\n    if (*0x5dd4dc == 0) {\n        fcn.0040a398();\n        fcn.0040a3f5(0x1e);\n        fcn.00404b3e(0xff);\n    }\n    iVar1 = *(unaff_EBP + 8);\n    if (*(iVar1 * 8 + 0x41e598) == 0) {\n        arg_8h_00 = fcn.00404e84(0x18);\n        if (arg_8h_00 == 0) {\n            puVar2 = fcn.00405af7();\n            *puVar2 = 0xc;\n        }\n        else {\n            fcn.0040ab8a(10);\n            *(unaff_EBP + -4) = 0;\n            if (*(iVar1 * 8 + 0x41e598) == 0) {\n                fcn.004051bd(arg_8h_00, 4000, 0);\n                *(iVar1 * 8 + 0x41e598) = arg_8h_00;\n            }\n            else {\n                fcn.00404ad2(arg_8h_00);\n            }\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.0040acb2();\n        }\n    }\n    fcn.00404f65();\n    return;\n}\n",
        "token_count": 398
    },
    "0040ae5e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040ae5e(void)\n\n{\n    if (*0x5deed4 == 0) {\n        fcn.0040b1bb(0xfffffffd);\n        *0x5deed4 = 1;\n    }\n    return 0;\n}\n",
        "token_count": 61
    },
    "0040aeb6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.0040aeb6(int32_t arg_8h)\n\n{\n    int32_t var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.0040935d(0);\n    *0x5ddda4 = 0;\n    if (arg_8h == -2) {\n        *0x5ddda4 = 1;\n        arg_8h = (*_sym.imp.KERNEL32.dll_GetOEMCP)();\n    }\n    else if (arg_8h == -3) {\n        *0x5ddda4 = 1;\n        arg_8h = (*_sym.imp.KERNEL32.dll_GetACP)();\n    }\n    else if (arg_8h == -4) {\n        *0x5ddda4 = 1;\n        arg_8h = *(var_10h + 4);\n    }\n    *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n    return arg_8h;\n}\n",
        "token_count": 256
    },
    "0040b363": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: lpCPInfo\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.0040b363(uint arg_8h, int32_t arg_ch)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    ushort uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint8_t *puVar8;\n    uint uVar9;\n    ushort *puVar10;\n    ushort *puVar11;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t uVar12;\n    int32_t var_20h;\n    uint8_t *var_1ch;\n    uint32_t lpCPInfo;\n    uint var_12h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41dec0 ^ &stack0xfffffffc;\n    uVar4 = fcn.0040aeb6(arg_8h);\n    if (uVar4 != 0) {\n        uVar12 = 0;\n        uVar5 = 0;\n        var_1ch = NULL;\ncode_r0x0040b39f:\n        if (*(uVar5 + 0x41eae8) != uVar4) goto code_r0x0040b3ab;\n        fcn.004044c0(arg_ch + 0x18, 0, 0x101);\n        var_20h = var_1ch * 0x30;\n        var_1ch = var_20h + 0x41eaf8;\n        do {\n            uVar2 = *var_1ch;\n            puVar8 = var_1ch;\n            while ((uVar2 != 0 && (uVar2 = puVar8[1],  uVar2 != 0))) {\n                for (uVar5 = *puVar8; (uVar5 <= uVar2 && (uVar5 < 0x100)); uVar5 = uVar5 + 1) {\n                    puVar1 = arg_ch + 0x19 + uVar5;\n                    *puVar1 = *puVar1 | *(uVar12 + 0x41eae0);\n                    uVar2 = puVar8[1];\n                }\n                puVar8 = puVar8 + 2;\n                uVar2 = *puVar8;\n            }\n            uVar12 = uVar12 + 1;\n            var_1ch = var_1ch + 8;\n        } while (uVar12 < 4);\n        *(arg_ch + 4) = uVar4;\n        *(arg_ch + 8) = 1;\n        uVar9 = fcn.0040ae7c(uVar4);\n        *(arg_ch + 0x21c) = uVar9;\n        puVar10 = arg_ch + 0xc;\n        puVar11 = var_20h + 0x41eaec;\n        iVar6 = 6;\n        do {\n            uVar3 = *puVar11;\n            puVar11 = puVar11 + 1;\n            *puVar10 = uVar3;\n            puVar10 = puVar10 + 1;\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n        goto code_r0x0040b534;\n    }\n    fcn.0040af24(arg_ch);\ncode_r0x0040b53e:\n    fcn.00403a01(var_20h);\n    return;\ncode_r0x0040b3ab:\n    var_1ch = var_1ch + 1;\n    uVar5 = uVar5 + 0x30;\n    if (0xef < uVar5) goto code_r0x0040b3b9;\n    goto code_r0x0040b39f;\ncode_r0x0040b3b9:\n    if (((uVar4 != 65000) && (uVar4 != 0xfde9)) &&\n       (iVar6 = (*_sym.imp.KERNEL32.dll_IsValidCodePage)(uVar4 & 0xffff),  iVar6 != 0)) {\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(uVar4, &lpCPInfo);\n        if (iVar6 == 0) {\n            if (*0x5ddda4 != 0) {\n                fcn.0040af24(arg_ch);\n            }\n        }\n        else {\n            fcn.004044c0(arg_ch + 0x18, 0, 0x101);\n            *(arg_ch + 4) = uVar4;\n            *(arg_ch + 0x21c) = 0;\n            if (lpCPInfo < 2) {\n                *(arg_ch + 8) = 0;\n            }\n            else {\n                puVar7 = &var_12h;\n                while ((var_12h != 0 && (uVar2 = *(puVar7 + 1),  uVar2 != 0))) {\n                    for (uVar4 = *puVar7; uVar4 <= uVar2; uVar4 = uVar4 + 1) {\n                        puVar8 = arg_ch + 0x19 + uVar4;\n                        *puVar8 = *puVar8 | 4;\n                    }\n                    puVar7 = puVar7 + 2;\n                    var_12h._0_1_ = *puVar7;\n                }\n                puVar8 = arg_ch + 0x1a;\n                iVar6 = 0xfe;\n                do {\n                    *puVar8 = *puVar8 | 8;\n                    puVar8 = puVar8 + 1;\n                    iVar6 = iVar6 + -1;\n                } while (iVar6 != 0);\n                uVar9 = fcn.0040ae7c(*(arg_ch + 4));\n                *(arg_ch + 0x21c) = uVar9;\n                *(arg_ch + 8) = 1;\n            }\n            *(arg_ch + 0xc) = 0;\n            *(arg_ch + 0x10) = 0;\n            *(arg_ch + 0x14) = 0;\ncode_r0x0040b534:\n            fcn.0040af83(arg_ch, unaff_EDI, unaff_ESI, unaff_EBX, var_20h, var_1ch, lpCPInfo);\n        }\n    }\n    goto code_r0x0040b53e;\n}\n",
        "token_count": 1491
    },
    "0040b54e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.0040b54e(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h == 0) {\n        iVar1 = fcn.00404a0d(arg_ch);\n        return iVar1;\n    }\n    if (arg_ch == 0) {\n        fcn.00404ad2(arg_8h);\n    }\n    else {\n        do {\n            if (0xffffffe0 < arg_ch) {\n                fcn.00404a9f(arg_ch);\n                puVar2 = fcn.00405af7();\n                *puVar2 = 0xc;\n                return 0;\n            }\n            if (arg_ch == 0) {\n                arg_ch = 1;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x5dd4dc, 0, arg_8h, arg_ch);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            if (*0x5ddc34 == 0) {\n                puVar2 = fcn.00405af7();\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                uVar3 = fcn.00405b0a(uVar3);\n                *puVar2 = uVar3;\n                return 0;\n            }\n            iVar1 = fcn.00404a9f(arg_ch);\n        } while (iVar1 != 0);\n        puVar2 = fcn.00405af7();\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar3 = fcn.00405b0a(uVar3);\n        *puVar2 = uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 421
    },
    "0040b5f9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040b5f9(uint32_t arg_8h, uint32_t arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    \n    if ((arg_8h == 0) || (arg_ch <= 0xffffffe0 / arg_8h)) {\n        arg_8h = arg_8h * arg_ch;\n        if (arg_8h == 0) {\n            arg_8h = 1;\n        }\n        do {\n            iVar1 = 0;\n            if ((arg_8h < 0xffffffe1) && (iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x5dd4dc, 8, arg_8h),  iVar1 != 0)\n               ) {\n                return iVar1;\n            }\n            if (*0x5ddc34 == 0) {\n                if (arg_10h != NULL) {\n                    *arg_10h = 0xc;\n                    return iVar1;\n                }\n                return iVar1;\n            }\n            iVar1 = fcn.00404a9f(arg_8h);\n        } while (iVar1 != 0);\n        if (arg_10h == NULL) {\n            return 0;\n        }\n    }\n    else {\n        arg_10h = fcn.00405af7();\n    }\n    *arg_10h = 0xc;\n    return 0;\n}\n",
        "token_count": 316
    },
    "0040b8fb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.0040b8fb(int32_t *arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t arg_10h;\n    \n    uVar2 = 0;\n    if ((((arg_8h[3] & 3) == 2) && ((arg_8h[3] & 0x108U) != 0)) && (iVar3 = *arg_8h - arg_8h[2],  0 < iVar3)) {\n        iVar1 = arg_8h[2];\n        arg_10h = iVar3;\n        arg_8h_00 = fcn.0040592f(arg_8h);\n        iVar1 = fcn.0040d8ea(arg_8h_00, iVar1, arg_10h);\n        if (iVar1 == iVar3) {\n            if (arg_8h[3] < '\\0') {\n                arg_8h[3] = arg_8h[3] & 0xfffffffd;\n            }\n        }\n        else {\n            arg_8h[3] = arg_8h[3] | 0x20;\n            uVar2 = 0xffffffff;\n        }\n    }\n    arg_8h[1] = 0;\n    *arg_8h = arg_8h[2];\n    return uVar2;\n}\n",
        "token_count": 337
    },
    "0040bada": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040bada(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if ((-1 < arg_8h) && (arg_8h < *0x5dde18)) {\n        iVar3 = (arg_8h & 0x1f) * 0x40;\n        iVar1 = *((arg_8h >> 5) * 4 + 0x5dd3c8);\n        if (((*(iVar3 + 4 + iVar1) & 1) != 0) && (*(iVar3 + iVar1) != -1)) {\n            if (*0x5dd5e8 == 1) {\n                if (arg_8h == 0) {\n                    uVar4 = 0xfffffff6;\n                }\n                else if (arg_8h == 1) {\n                    uVar4 = 0xfffffff5;\n                }\n                else {\n                    if (arg_8h != 2) goto code_r0x0040bb37;\n                    uVar4 = 0xfffffff4;\n                }\n                (*_sym.imp.KERNEL32.dll_SetStdHandle)(uVar4, 0);\n            }\ncode_r0x0040bb37:\n            *(iVar3 + *((arg_8h >> 5) * 4 + 0x5dd3c8)) = 0xffffffff;\n            return 0;\n        }\n    }\n    puVar2 = fcn.00405af7();\n    *puVar2 = 9;\n    puVar2 = fcn.00405ac3();\n    *puVar2 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 382
    },
    "0040bfb8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040bfb8(int32_t param_1, int32_t *param_2, uint16_t *param_3)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    uint in_stack_ffffff68;\n    uint32_t uStack148;\n    uchar auStack144 [48];\n    ulong uStack96;\n    uint32_t uStack80;\n    uint32_t uStack20;\n    \n    uStack20 = *0x41dec0 ^ &stack0xfffffff0;\n    uStack148 = *param_3;\n    iVar1 = *param_2;\n    if (iVar1 == 1) {\ncode_r0x0040c01e:\n        arg_8h = 8;\n    }\n    else if (iVar1 == 2) {\n        arg_8h = 4;\n    }\n    else if (iVar1 == 3) {\n        arg_8h = 0x11;\n    }\n    else if (iVar1 == 4) {\n        arg_8h = 0x12;\n    }\n    else {\n        if (iVar1 == 5) goto code_r0x0040c01e;\n        if (iVar1 == 7) {\n            *param_2 = 1;\n            goto code_r0x0040c080;\n        }\n        if (iVar1 != 8) goto code_r0x0040c080;\n        arg_8h = 0x10;\n    }\n    iVar1 = fcn.004078d0(arg_8h, param_2 + 6, uStack148);\n    if (iVar1 == 0) {\n        if (((param_1 == 0x10) || (param_1 == 0x16)) || (param_1 == 0x1d)) {\n            uStack96 = *(param_2 + 4);\n            uStack80 = uStack80 & 0xffffffe3 | 3;\n        }\n        else {\n            uStack80 = uStack80 & 0xfffffffe;\n        }\n        fcn.00407afe(auStack144, &uStack148, arg_8h, param_1, param_2 + 2, param_2 + 6);\n    }\ncode_r0x0040c080:\n    fcn.00407f58(uStack148, 0xffff);\n    if (((*param_2 == 8) || (*0x41ebe0 != 0)) || (iVar1 = fcn.0040c0c1(param_2),  iVar1 == 0)) {\n        fcn.00407e04(*param_2);\n    }\n    fcn.00403a01(in_stack_ffffff68);\n    return;\n}\n",
        "token_count": 595
    },
    "0040c2cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.0040c2cc(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    LOCK();\n    *arg_8h = *arg_8h + 1;\n    piVar1 = arg_8h[0x1e];\n    if (piVar1 != NULL) {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n    }\n    piVar1 = arg_8h[0x20];\n    if (piVar1 != NULL) {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n    }\n    piVar1 = arg_8h[0x1f];\n    if (piVar1 != NULL) {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n    }\n    piVar1 = arg_8h[0x22];\n    if (piVar1 != NULL) {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n    }\n    ppiVar3 = arg_8h + 7;\n    iVar2 = 6;\n    do {\n        if ((ppiVar3[-2] != 0x41ebf4) && (piVar1 = *ppiVar3,  piVar1 != NULL)) {\n            LOCK();\n            *piVar1 = *piVar1 + 1;\n        }\n        if ((ppiVar3[-3] != NULL) && (piVar1 = ppiVar3[-1],  piVar1 != NULL)) {\n            LOCK();\n            *piVar1 = *piVar1 + 1;\n        }\n        ppiVar3 = ppiVar3 + 4;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    LOCK();\n    *(arg_8h[0x27] + 0xb0) = *(arg_8h[0x27] + 0xb0) + 1;\n    return;\n}\n",
        "token_count": 467
    },
    "0040c361": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.0040c361(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t arg_8h_00;\n    int32_t arg_8h_01;\n    uint *puVar2;\n    int32_t **ppiVar3;\n    \n    arg_8h_01 = arg_8h;\n    if ((((*(arg_8h + 0x84) != 0) && (*(arg_8h + 0x84) != 0x41ee48)) && (*(arg_8h + 0x78) != NULL)) &&\n       (**(arg_8h + 0x78) == 0)) {\n        piVar1 = *(arg_8h + 0x80);\n        if ((piVar1 != NULL) && (*piVar1 == 0)) {\n            fcn.00404ad2(piVar1);\n            fcn.0040e2da(*(arg_8h + 0x84));\n        }\n        piVar1 = *(arg_8h + 0x7c);\n        if ((piVar1 != NULL) && (*piVar1 == 0)) {\n            fcn.00404ad2(piVar1);\n            fcn.0040e3d6(*(arg_8h + 0x84));\n        }\n        fcn.00404ad2(*(arg_8h + 0x78));\n        fcn.00404ad2(*(arg_8h + 0x84));\n    }\n    if ((*(arg_8h + 0x88) != NULL) && (**(arg_8h + 0x88) == 0)) {\n        fcn.00404ad2(*(arg_8h + 0x8c) + -0xfe);\n        fcn.00404ad2(*(arg_8h + 0x94) + -0x80);\n        fcn.00404ad2(*(arg_8h + 0x98) + -0x80);\n        fcn.00404ad2(*(arg_8h + 0x88));\n    }\n    arg_8h_00 = *(arg_8h + 0x9c);\n    if ((arg_8h_00 != 0x41ebf8) && (*(arg_8h_00 + 0xb0) == 0)) {\n        fcn.0040e43d(arg_8h_00);\n        fcn.00404ad2(*(arg_8h + 0x9c));\n    }\n    puVar2 = arg_8h + 0xa0;\n    arg_8h = 6;\n    ppiVar3 = arg_8h_01 + 0x1c;\n    do {\n        if (((ppiVar3[-2] != 0x41ebf4) && (piVar1 = *ppiVar3,  piVar1 != NULL)) && (*piVar1 == 0)) {\n            fcn.00404ad2(piVar1);\n            fcn.00404ad2(*puVar2);\n        }\n        if (((ppiVar3[-3] != NULL) && (piVar1 = ppiVar3[-1],  piVar1 != NULL)) && (*piVar1 == 0)) {\n            fcn.00404ad2(piVar1);\n        }\n        puVar2 = puVar2 + 1;\n        ppiVar3 = ppiVar3 + 4;\n        arg_8h = arg_8h + -1;\n    } while (arg_8h != 0);\n    fcn.00404ad2(arg_8h_01);\n    return;\n}\n",
        "token_count": 820
    },
    "0040c4bb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t * __cdecl fcn.0040c4bb(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    \n    if (arg_8h != NULL) {\n        LOCK();\n        *arg_8h = *arg_8h + -1;\n        piVar1 = arg_8h[0x1e];\n        if (piVar1 != NULL) {\n            LOCK();\n            *piVar1 = *piVar1 + -1;\n        }\n        piVar1 = arg_8h[0x20];\n        if (piVar1 != NULL) {\n            LOCK();\n            *piVar1 = *piVar1 + -1;\n        }\n        piVar1 = arg_8h[0x1f];\n        if (piVar1 != NULL) {\n            LOCK();\n            *piVar1 = *piVar1 + -1;\n        }\n        piVar1 = arg_8h[0x22];\n        if (piVar1 != NULL) {\n            LOCK();\n            *piVar1 = *piVar1 + -1;\n        }\n        ppiVar2 = arg_8h + 7;\n        iVar3 = 6;\n        do {\n            if ((ppiVar2[-2] != 0x41ebf4) && (piVar1 = *ppiVar2,  piVar1 != NULL)) {\n                LOCK();\n                *piVar1 = *piVar1 + -1;\n            }\n            if ((ppiVar2[-3] != NULL) && (piVar1 = ppiVar2[-1],  piVar1 != NULL)) {\n                LOCK();\n                *piVar1 = *piVar1 + -1;\n            }\n            ppiVar2 = ppiVar2 + 4;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        LOCK();\n        *(arg_8h[0x27] + 0xb0) = *(arg_8h[0x27] + 0xb0) + -1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 487
    },
    "0040c5db": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0040c5db(int32_t **arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    \n    if ((arg_ch == NULL) || (arg_8h == NULL)) {\n        arg_ch = NULL;\n    }\n    else {\n        arg_8h_00 = *arg_8h;\n        if (arg_8h_00 != arg_ch) {\n            *arg_8h = arg_ch;\n            fcn.0040c2cc(arg_ch);\n            if (((arg_8h_00 != NULL) && (fcn.0040c4bb(arg_8h_00),  *arg_8h_00 == 0)) && (arg_8h_00 != 0x41ed60)) {\n                fcn.0040c361(arg_8h_00);\n            }\n        }\n    }\n    return arg_ch;\n}\n",
        "token_count": 208
    },
    "0040c794": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t __cdecl fcn.0040c794(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t var_10h;\n    int32_t var_8h;\n    uchar *var_4h;\n    \n    var_4h = &stack0xfffffffc;\n    fcn.0040935d(arg_ch);\n    if (*(var_10h + 0x74) < 2) {\n        uVar1 = *(*(var_10h + 0x90) + arg_8h * 2) & 4;\n    }\n    else {\n        uVar1 = fcn.0040e855(arg_8h, 4, &var_10h);\n    }\n    if (var_4h != '\\0') {\n        *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n    }\n    return uVar1;\n}\n",
        "token_count": 241
    },
    "0040c7e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t __cdecl fcn.0040c7e6(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x5dde0c == 0) {\n        return *(*0x41edf0 + arg_8h * 2) & 4;\n    }\n    uVar1 = fcn.0040c794(arg_8h, 0);\n    return uVar1;\n}\n",
        "token_count": 113
    },
    "0040c811": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t __cdecl fcn.0040c811(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint arg_18h;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uchar *var_4h;\n    \n    var_4h = &stack0xfffffffc;\n    fcn.0040935d(arg_ch);\n    if (arg_8h < 0x100) {\n        if (*(var_18h + 0x74) < 2) {\n            uVar1 = *(*(var_18h + 0x90) + arg_8h * 2) & 1;\n        }\n        else {\n            uVar1 = fcn.0040e855(arg_8h, 1, &var_18h);\n        }\n        if (uVar1 == 0) {\n            if (var_ch != '\\0') {\n                *(var_10h + 0x70) = *(var_10h + 0x70) & 0xfffffffd;\n            }\n        }\n        else {\n            arg_8h = *(*(var_18h + 0x94) + arg_8h);\n            if (var_ch != '\\0') {\n                *(var_10h + 0x70) = *(var_10h + 0x70) & 0xfffffffd;\n            }\n        }\n    }\n    else {\n        if ((*(var_18h + 0x74) < 2) || (iVar2 = fcn.0040e958(arg_8h >> 8 & 0xff, &var_18h),  iVar2 == 0)) {\n            puVar3 = fcn.00405af7();\n            arg_18h = 1;\n            *puVar3 = 0x2a;\n    // WARNING: Ignoring partial resolution of indirect\n            var_4h._0_1_ = arg_8h;\n    // WARNING: Ignoring partial resolution of indirect\n            var_4h._1_1_ = 0;\n        }\n        else {\n            arg_18h = 2;\n    // WARNING: Ignoring partial resolution of indirect\n            var_4h._0_1_ = arg_8h >> 8;\n    // WARNING: Ignoring partial resolution of indirect\n            var_4h._1_1_ = arg_8h;\n    // WARNING: Ignoring partial resolution of indirect\n            var_4h._2_1_ = 0;\n        }\n        iVar2 = fcn.0040d5a0(&var_18h, *(var_18h + 0xa8), 0x100, &var_4h, arg_18h, &var_8h, 3, *(var_18h + 4), 1);\n        if (iVar2 == 0) {\n            if (var_ch != '\\0') {\n                *(var_10h + 0x70) = *(var_10h + 0x70) & 0xfffffffd;\n            }\n        }\n        else if (iVar2 == 1) {\n            arg_8h = var_8h;\n            if (var_ch != '\\0') {\n                *(var_10h + 0x70) = *(var_10h + 0x70) & 0xfffffffd;\n            }\n        }\n        else {\n            arg_8h = CONCAT11(var_8h, var_8h._1_1_);\n            if (var_ch != '\\0') {\n                *(var_10h + 0x70) = *(var_10h + 0x70) & 0xfffffffd;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 874
    },
    "0040c954": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.0040c954(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*0x5dde0c == 0) {\n        if (arg_8h - 0x41U < 0x1a) {\n            arg_8h = arg_8h + 0x20;\n        }\n        return arg_8h;\n    }\n    iVar1 = fcn.0040c811(arg_8h, 0);\n    return iVar1;\n}\n",
        "token_count": 132
    },
    "0040c980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuchar (*) [16] __cdecl fcn.0040c980(uchar (*arg_8h) [16], uint arg_ch)\n\n{\n    char *pcVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    uchar (*pauVar4) [16];\n    uint32_t uVar5;\n    int32_t iVar6;\n    uchar (*pauVar7) [16];\n    char *pcVar8;\n    uint8_t *puVar9;\n    uchar auVar11 [16];\n    uchar auVar13 [16];\n    char cVar16;\n    char cVar17;\n    char cVar18;\n    char cVar19;\n    char cVar20;\n    char cVar21;\n    char cVar22;\n    uchar auVar15 [16];\n    uint8_t *puVar10;\n    uint8_t uVar12;\n    uint8_t uVar14;\n    \n    if (*0x5dd3b8 != 0) {\n        if (*0x5dd3b8 < 2) {\n            auVar15 = pshuflw(ZEXT216(CONCAT11(arg_ch, arg_ch)), ZEXT216(CONCAT11(arg_ch, arg_ch)), 0);\n            uVar3 = -1 << (arg_8h & 0xf);\n            pcVar8 = arg_8h - (arg_8h & 0xf);\n            pauVar7 = NULL;\n            while( true ) {\n                uVar14 = -(pcVar8[0xf] == '\\0');\n                auVar13 = CONCAT115(uVar14, CONCAT114(-(pcVar8[0xe] == '\\0'), \n                                                      CONCAT113(-(pcVar8[0xd] == '\\0'), \n                                                                CONCAT112(-(pcVar8[0xc] == '\\0'), \n                                                                          CONCAT111(-(pcVar8[0xb] == '\\0'), \n                                                                                    CONCAT110(-(pcVar8[10] == '\\0'), \n                                                                                              CONCAT19(-(pcVar8[9] ==\n                                                                                                        '\\0'), CONCAT18(\n                                                            -(pcVar8[8] == '\\0'), \n                                                            CONCAT17(-(pcVar8[7] == '\\0'), \n                                                                     CONCAT16(-(pcVar8[6] == '\\0'), \n                                                                              CONCAT15(-(pcVar8[5] == '\\0'), \n                                                                                       CONCAT14(-(pcVar8[4] == '\\0'), \n                                                                                                CONCAT13(-(pcVar8[3] ==\n                                                                                                          '\\0'), \n                                                            CONCAT12(-(pcVar8[2] == '\\0'), \n                                                                     CONCAT11(-(pcVar8[1] == '\\0'), -(*pcVar8 == '\\0')))\n                                                            )))))))))))));\n                cVar16 = SUB161(auVar15 >> 8, 0);\n                cVar17 = SUB161(auVar15 >> 0x10, 0);\n                cVar18 = SUB161(auVar15 >> 0x18, 0);\n                cVar19 = SUB161(auVar15 >> 0x20, 0);\n                cVar20 = SUB161(auVar15 >> 0x28, 0);\n                cVar21 = SUB161(auVar15 >> 0x30, 0);\n                cVar22 = SUB161(auVar15 >> 0x38, 0);\n                uVar12 = -(pcVar8[0xf] == cVar22);\n                auVar11 = CONCAT115(uVar12, CONCAT114(-(pcVar8[0xe] == cVar21), \n                                                      CONCAT113(-(pcVar8[0xd] == cVar20), \n                                                                CONCAT112(-(pcVar8[0xc] == cVar19), \n                                                                          CONCAT111(-(pcVar8[0xb] == cVar18), \n                                                                                    CONCAT110(-(pcVar8[10] == cVar17), \n                                                                                              CONCAT19(-(pcVar8[9] ==\n                                                                                                        cVar16), \n                                                                                                       CONCAT18(-(pcVar8\n                                                            [8] == SUB161(auVar15, 0)), \n                                                            CONCAT17(-(pcVar8[7] == cVar22), \n                                                                     CONCAT16(-(pcVar8[6] == cVar21), \n                                                                              CONCAT15(-(pcVar8[5] == cVar20), \n                                                                                       CONCAT14(-(pcVar8[4] == cVar19), \n                                                                                                CONCAT13(-(pcVar8[3] ==\n                                                                                                          cVar18), \n                                                                                                         CONCAT12(-(\n                                                            pcVar8[2] == cVar17), \n                                                            CONCAT11(-(pcVar8[1] == cVar16), \n                                                                     -(*pcVar8 == SUB161(auVar15, 0)))))))))))))))));\n                uVar5 = (SUB161(auVar13 >> 7, 0) & 1 | (SUB161(auVar13 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar13 >> 0x17, 0) & 1) << 2 | (SUB161(auVar13 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar13 >> 0x27, 0) & 1) << 4 | (SUB161(auVar13 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar13 >> 0x37, 0) & 1) << 6 | (SUB161(auVar13 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar13 >> 0x47, 0) & 1) << 8 | (SUB161(auVar13 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar13 >> 0x57, 0) & 1) << 10 | (SUB161(auVar13 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar13 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar13 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar13 >> 0x77, 0) & 1) << 0xe | (uVar14 >> 7) << 0xf) & uVar3;\n                if (uVar5 != 0) break;\n                uVar3 = (SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (uVar12 >> 7) << 0xf) & uVar3;\n                iVar6 = 0x1f;\n                if (uVar3 != 0) {\n                    for (; uVar3 >> iVar6 == 0; iVar6 = iVar6 + -1) {\n                    }\n                }\n                if (uVar3 != 0) {\n                    pauVar7 = pcVar8 + iVar6;\n                }\n                uVar3 = 0xffffffff;\n                pcVar8 = pcVar8 + 0x10;\n            }\n            uVar3 = (uVar5 * 2 & uVar5 * -2) - 1 &\n                    (SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (uVar12 >> 7) << 0xf) & uVar3;\n            iVar6 = 0x1f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar6 == 0; iVar6 = iVar6 + -1) {\n                }\n            }\n            pauVar4 = pcVar8 + iVar6;\n            if (uVar3 == 0) {\n                pauVar4 = pauVar7;\n            }\n            return pauVar4;\n        }\n        uVar3 = arg_ch;\n        if (uVar3 == 0) {\n            pcVar8 = arg_8h & 0xfffffff0;\n            auVar15 = CONCAT115(-(pcVar8[0xf] == '\\0'), \n                                CONCAT114(-(pcVar8[0xe] == '\\0'), \n                                          CONCAT113(-(pcVar8[0xd] == '\\0'), \n                                                    CONCAT112(-(pcVar8[0xc] == '\\0'), \n                                                              CONCAT111(-(pcVar8[0xb] == '\\0'), \n                                                                        CONCAT110(-(pcVar8[10] == '\\0'), \n                                                                                  CONCAT19(-(pcVar8[9] == '\\0'), \n                                                                                           CONCAT18(-(pcVar8[8] == '\\0')\n                                                                                                    , CONCAT17(-(pcVar8[\n                                                            7] == '\\0'), \n                                                            CONCAT16(-(pcVar8[6] == '\\0'), \n                                                                     CONCAT15(-(pcVar8[5] == '\\0'), \n                                                                              CONCAT14(-(pcVar8[4] == '\\0'), \n                                                                                       CONCAT13(-(pcVar8[3] == '\\0'), \n                                                                                                CONCAT12(-(pcVar8[2] ==\n                                                                                                          '\\0'), \n                                                            CONCAT11(-(pcVar8[1] == '\\0'), -(*pcVar8 == '\\0'))))))))))))\n                                                            ))));\n            uVar3 = (SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar15 >> 0x17, 0) & 1) << 2 | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar15 >> 0x27, 0) & 1) << 4 | (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar15 >> 0x37, 0) & 1) << 6 | (SUB161(auVar15 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar15 >> 0x47, 0) & 1) << 8 | (SUB161(auVar15 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar15 >> 0x57, 0) & 1) << 10 | (SUB161(auVar15 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar15 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar15 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar15 >> 0x77, 0) & 1) << 0xe | (-(pcVar8[0xf] == '\\0') >> 7) << 0xf) &\n                    -1 << (arg_8h & 0xf);\n            while (uVar3 == 0) {\n                pcVar1 = pcVar8 + 0x1f;\n                auVar15 = CONCAT115(-(*pcVar1 == '\\0'), \n                                    CONCAT114(-(pcVar8[0x1e] == '\\0'), \n                                              CONCAT113(-(pcVar8[0x1d] == '\\0'), \n                                                        CONCAT112(-(pcVar8[0x1c] == '\\0'), \n                                                                  CONCAT111(-(pcVar8[0x1b] == '\\0'), \n                                                                            CONCAT110(-(pcVar8[0x1a] == '\\0'), \n                                                                                      CONCAT19(-(pcVar8[0x19] == '\\0'), \n                                                                                               CONCAT18(-(pcVar8[0x18]\n                                                                                                         == '\\0'), \n                                                                                                        CONCAT17(-(\n                                                            pcVar8[0x17] == '\\0'), \n                                                            CONCAT16(-(pcVar8[0x16] == '\\0'), \n                                                                     CONCAT15(-(pcVar8[0x15] == '\\0'), \n                                                                              CONCAT14(-(pcVar8[0x14] == '\\0'), \n                                                                                       CONCAT13(-(pcVar8[0x13] == '\\0')\n                                                                                                , CONCAT12(-(pcVar8[0x12\n                                                            ] == '\\0'), \n                                                            CONCAT11(-(pcVar8[0x11] == '\\0'), -(pcVar8[0x10] == '\\0'))))\n                                                            ))))))))))));\n                pcVar8 = pcVar8 + 0x10;\n                uVar3 = SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar15 >> 0x17, 0) & 1) << 2 | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar15 >> 0x27, 0) & 1) << 4 | (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar15 >> 0x37, 0) & 1) << 6 | (SUB161(auVar15 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar15 >> 0x47, 0) & 1) << 8 | (SUB161(auVar15 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar15 >> 0x57, 0) & 1) << 10 | (SUB161(auVar15 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar15 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar15 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar15 >> 0x77, 0) & 1) << 0xe | (-(*pcVar1 == '\\0') >> 7) << 0xf;\n            }\n            iVar6 = 0;\n            if (uVar3 != 0) {\n                for (; (uVar3 >> iVar6 & 1) == 0; iVar6 = iVar6 + 1) {\n                }\n            }\n            pauVar7 = pcVar8 + iVar6;\n        }\n        else {\n            pauVar7 = NULL;\n            uVar5 = arg_8h & 0xf;\n            while (uVar5 != 0) {\n                if ((*arg_8h)[0] == uVar3) {\n                    pauVar7 = arg_8h;\n                }\n                if ((*arg_8h)[0] == 0) {\n                    return pauVar7;\n                }\n                arg_8h = *arg_8h + 1;\n                uVar5 = arg_8h & 0xf;\n            }\n            do {\n                pauVar4 = arg_8h[1];\n                iVar6 = pcmpistri(ZEXT416(uVar3), *arg_8h, 0x40);\n                if (0xffffffef < arg_8h) {\n                    pauVar7 = *arg_8h + iVar6;\n                }\n                arg_8h = pauVar4;\n            } while (pauVar4 != NULL);\n        }\n        return pauVar7;\n    }\n    iVar6 = -1;\n    do {\n        pauVar7 = arg_8h;\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        pauVar7 = *arg_8h + 1;\n        puVar2 = *arg_8h;\n        arg_8h = pauVar7;\n    } while (*puVar2 != '\\0');\n    iVar6 = -(iVar6 + 1);\n    puVar10 = pauVar7[-1] + 0xf;\n    do {\n        puVar9 = puVar10;\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        puVar9 = puVar10 + -1;\n        uVar12 = *puVar10;\n        puVar10 = puVar9;\n    } while (arg_ch != uVar12);\n    pauVar7 = puVar9 + 1;\n    if ((*pauVar7)[0] != arg_ch) {\n        pauVar7 = NULL;\n    }\n    return pauVar7;\n}\n",
        "token_count": 4360
    },
    "0040cab7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.0040cab7(char *arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char *pcVar1;\n    uint *puVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    char cVar5;\n    char *pcVar6;\n    uint uVar7;\n    \n    pcVar6 = *(arg_14h + 0xc);\n    if ((arg_8h == NULL) || (arg_ch == 0)) {\n        puVar2 = fcn.00405af7();\n        uVar7 = 0x16;\n    }\n    else {\n        *arg_8h = '\\0';\n        iVar4 = arg_10h;\n        if (arg_10h < 1) {\n            iVar4 = 0;\n        }\n        if (iVar4 + 1U < arg_ch) {\n            *arg_8h = '0';\n            pcVar1 = arg_8h + 1;\n            pcVar3 = pcVar1;\n            if (0 < arg_10h) {\n                do {\n                    cVar5 = *pcVar6;\n                    if (cVar5 == '\\0') {\n                        cVar5 = '0';\n                    }\n                    else {\n                        pcVar6 = pcVar6 + 1;\n                    }\n                    *pcVar3 = cVar5;\n                    pcVar3 = pcVar3 + 1;\n                    arg_10h = arg_10h + -1;\n                } while (0 < arg_10h);\n            }\n            *pcVar3 = '\\0';\n            if ((-1 < arg_10h) && ('4' < *pcVar6)) {\n                while (pcVar3 = pcVar3 + -1,  *pcVar3 == '9') {\n                    *pcVar3 = '0';\n                }\n                *pcVar3 = *pcVar3 + '\\x01';\n            }\n            if (*arg_8h == '1') {\n                *(arg_14h + 4) = *(arg_14h + 4) + 1;\n            }\n            else {\n                iVar4 = fcn.004047b0(pcVar1);\n                fcn.00402bf0(arg_8h, pcVar1, iVar4 + 1);\n            }\n            return 0;\n        }\n        puVar2 = fcn.00405af7();\n        uVar7 = 0x22;\n    }\n    *puVar2 = uVar7;\n    fcn.004057d3();\n    return uVar7;\n}\n",
        "token_count": 585
    },
    "0040cf75": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.0040cf75(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.0040935d(arg_8h);\n    if ((*(var_ch + 0x19 + (arg_ch & 0xff)) & arg_14h) == 0) {\n        uVar1 = 0;\n        if (arg_10h == 0) {\n            arg_10h = 0;\n        }\n        else {\n            arg_10h = *(*(var_10h + 0x90) + (arg_ch & 0xff) * 2) & arg_10h;\n        }\n        if (arg_10h == 0) goto code_r0x0040cfbb;\n    }\n    uVar1 = 1;\ncode_r0x0040cfbb:\n    *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n    return uVar1;\n}\n",
        "token_count": 286
    },
    "0040d39c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.0040d39c(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h, char *lpMultiByteStr, int32_t arg_18h, uint arg_1ch, \n            int32_t arg_20h, int32_t CodePage, int32_t arg_28h)\n\n{\n    uint32_t arg_8h_00;\n    char *pcVar1;\n    int32_t iVar2;\n    uint32_t arg_14h;\n    uint *arg_10h_00;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t iStack72;\n    uint uStack68;\n    char *pcStack64;\n    int32_t iStack60;\n    uint *puStack56;\n    int32_t iStack48;\n    int32_t iStack44;\n    char *pcStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = lpMultiByteStr;\n    iVar5 = arg_18h;\n    if (0 < arg_18h) {\n        do {\n            iVar5 = iVar5 + -1;\n            if (*pcVar1 == '\\0') goto code_r0x0040d3c8;\n            pcVar1 = pcVar1 + 1;\n        } while (iVar5 != 0);\n        iVar5 = -1;\ncode_r0x0040d3c8:\n        iVar2 = (arg_18h - iVar5) + -1;\n        iVar5 = arg_18h - iVar5;\n        if (arg_18h <= iVar2) {\n            iVar5 = iVar2;\n        }\n    }\n    if (CodePage == 0) {\n        CodePage = *(*arg_8h + 4);\n    }\n    uStack28 = 0;\n    uStack32 = 0;\n    pcStack40 = lpMultiByteStr;\n    iStack44 = (arg_28h != 0) * 8 + 1;\n    arg_10h_00 = &stack0xffffffd0;\n    iStack48 = CodePage;\n    iStack36 = iVar5;\n    arg_14h = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n    if (arg_14h == 0) goto code_r0x0040d58c;\n    if (((arg_14h < 1) || (0xffffffe0 / arg_14h < 2)) || (arg_14h * 2 + 8 <= arg_14h * 2)) {\n        arg_10h_00 = NULL;\n    }\n    else {\n        uVar3 = arg_14h * 2 + 8;\n        if (uVar3 < 0x401) {\n            fcn.0040d370();\n            if (*0x10 != 0x30) {\n                iStack48 = 0xcccc;\n                arg_10h_00 = &stack0xffffffd0;\ncode_r0x0040d469:\n                arg_10h_00 = arg_10h_00 + 2;\n            }\n        }\n        else {\n            puStack56 = 0x40d45c;\n            arg_10h_00 = fcn.00404a0d(uVar3);\n            puStack56 = arg_10h_00;\n            if (arg_10h_00 != NULL) {\n                *arg_10h_00 = 0xdddd;\n                goto code_r0x0040d469;\n            }\n        }\n    }\n    if (arg_10h_00 == NULL) goto code_r0x0040d58c;\n    pcStack64 = lpMultiByteStr;\n    uStack68 = 1;\n    iStack72 = CodePage;\n    puVar4 = &stack0xffffffb8;\n    iStack60 = iVar5;\n    puStack56 = arg_10h_00;\n    iVar5 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n    if ((iVar5 != 0) && (uVar3 = fcn.0040aad0(arg_ch, arg_10h, arg_10h_00, arg_14h, 0, 0),  uVar3 != 0)) {\n        if ((arg_10h & 0x400) == 0) {\n            if (((uVar3 < 1) || (0xffffffe0 / uVar3 < 2)) || (uVar3 * 2 + 8 <= uVar3 * 2)) {\n                puVar4 = NULL;\ncode_r0x0040d53e:\n                if (puVar4 != NULL) {\n                    iVar5 = fcn.0040aad0(arg_ch, arg_10h, arg_10h_00, arg_14h, puVar4, uVar3);\n                    if (iVar5 != 0) {\n                        if (arg_20h == 0) {\n                            arg_20h = 0;\n                            arg_1ch = 0;\n                        }\n                        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(CodePage, 0, puVar4, uVar3, arg_1ch, arg_20h, 0, 0)\n                        ;\n                    }\n                    fcn.0040aa3a(puVar4);\n                }\n            }\n            else {\n                arg_8h_00 = uVar3 * 2 + 8;\n                if (arg_8h_00 < 0x401) {\n                    fcn.0040d370();\n                    if (*0x10 != 0x48) {\n                        iStack72 = 0xcccc;\ncode_r0x0040d537:\n                        puVar4 = puVar4 + 2;\n                        goto code_r0x0040d53e;\n                    }\n                }\n                else {\n                    puVar4 = fcn.00404a0d(arg_8h_00);\n                    if (puVar4 != NULL) {\n                        *puVar4 = 0xdddd;\n                        goto code_r0x0040d537;\n                    }\n                }\n            }\n        }\n        else if ((arg_20h != 0) && (uVar3 <= arg_20h)) {\n            fcn.0040aad0(arg_ch, arg_10h, arg_10h_00, arg_14h, arg_1ch, arg_20h);\n        }\n    }\n    fcn.0040aa3a(arg_10h_00);\ncode_r0x0040d58c:\n    fcn.00403a01(arg_14h);\n    return;\n}\n",
        "token_count": 1516
    },
    "0040d5a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl\nfcn.0040d5a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint var_10h;\n    int32_t var_8h;\n    uchar *var_4h;\n    \n    var_4h = &stack0xfffffffc;\n    fcn.0040935d(arg_8h);\n    fcn.0040d39c(&var_10h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h);\n    if (var_4h != '\\0') {\n        *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "0040d6de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl\nfcn.0040d6de(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint var_10h;\n    int32_t var_8h;\n    uchar *var_4h;\n    \n    var_4h = &stack0xfffffffc;\n    fcn.0040935d(arg_8h);\n    fcn.0040d5e6(&var_10h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    if (var_4h != '\\0') {\n        *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "0040d71e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.0040d71e(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0xffffffff;\n    if (arg_8h == 0) {\n        puVar1 = fcn.00405af7();\n        *puVar1 = 0x16;\n        fcn.004057d3();\n        uVar3 = 0xffffffff;\n    }\n    else {\n        if ((*(arg_8h + 0xc) & 0x83) != 0) {\n            uVar3 = fcn.0040b8fb(arg_8h);\n            fcn.00410bba(arg_8h);\n            arg_8h_00 = fcn.0040592f(arg_8h);\n            iVar2 = fcn.00410a45(arg_8h_00);\n            if (iVar2 < 0) {\n                uVar3 = 0xffffffff;\n            }\n            else if (*(arg_8h + 0x1c) != 0) {\n                fcn.00404ad2(*(arg_8h + 0x1c));\n                *(arg_8h + 0x1c) = 0;\n            }\n        }\n        *(arg_8h + 0xc) = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 333
    },
    "0040d9d9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpBuffer\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040d9d9(uint *arg_8h, uint *arg_ch, uint32_t nNumberOfBytesToWrite)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int16_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t lpBuffer_00;\n    int32_t iVar9;\n    uint32_t uVar10;\n    char cVar11;\n    uint32_t unaff_EBX;\n    uint *puVar12;\n    uint unaff_EBP;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint CodePage;\n    uint var_1aech;\n    uint lpMode;\n    uint32_t var_1ae0h;\n    uint var_1adch;\n    uint var_1ad8h;\n    uint *var_1ad4h;\n    uint var_1ad0h;\n    uint32_t lpWideCharStr;\n    uint *lpNumberOfBytesWritten;\n    uint *var_1ac4h;\n    uint32_t var_1ac0h;\n    int32_t var_1abch;\n    uint var_1ab8h;\n    uint var_140ch;\n    uint var_d64h;\n    uint uStackY52;\n    uint uStackY48;\n    uint uStackY44;\n    uint *puStackY40;\n    int32_t iStackY36;\n    uint arg_10h;\n    uint32_t lpBuffer;\n    uint var_4h;\n    \n    fcn.00406110();\n    var_1abch = 0;\n    uVar13 = 0;\n    lpNumberOfBytesWritten = arg_8h;\n    uVar15 = 0;\n    var_1ac0h = 0;\n    if (nNumberOfBytesToWrite == 0) goto code_r0x0040e22e;\n    if (arg_ch == NULL) {\n        lpBuffer = 0x40da2a;\n        puVar4 = fcn.00405ac3();\n        *puVar4 = 0;\n        lpBuffer = 0x40da31;\n        puVar4 = fcn.00405af7();\n        *puVar4 = 0x16;\n        lpBuffer = 0x40da3c;\n        fcn.004057d3();\n        goto code_r0x0040e22e;\n    }\n    iVar9 = arg_8h >> 5;\n    uVar7 = arg_8h & 0x1f;\n    iVar8 = uVar7 * 0x40;\n    iVar5 = *(iVar9 * 4 + 0x5dd3c8);\n    cVar11 = *(iVar8 + 0x24 + iVar5) * '\\x02' >> 1;\n    lpBuffer = unaff_EBX;\n    if (((cVar11 == '\\x02') || (cVar11 == '\\x01')) && ((~nNumberOfBytesToWrite & 1) == 0)) {\n        puVar4 = fcn.00405ac3();\n        *puVar4 = 0;\n        puVar4 = fcn.00405af7();\n        *puVar4 = 0x16;\n        fcn.004057d3();\n        goto code_r0x0040e22e;\n    }\n    if ((*(iVar8 + 4 + iVar5) & 0x20) != 0) {\n        iStackY36 = 0x40dab5;\n        fcn.00406091(arg_8h, 0, 0, 2);\n    }\n    iVar5 = fcn.0040bbed(lpNumberOfBytesWritten);\n    if ((iVar5 == 0) || ((*(iVar8 + 4 + *(iVar9 * 4 + 0x5dd3c8)) & 0x80) == 0)) {\ncode_r0x0040de1c:\n        iVar5 = *(iVar9 * 4 + 0x5dd3c8);\n        if ((*(iVar8 + 4 + iVar5) & 0x80) == 0) {\n            iStackY36 = *(iVar8 + iVar5);\n            puStackY40 = 0x40e1ca;\n            iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n            if (iVar5 == 0) {\ncode_r0x0040de0f:\n                uVar15 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            else {\n                uVar13 = var_1ae0h;\n                uVar15 = 0;\n            }\n            goto code_r0x0040df2c;\n        }\n        lpWideCharStr = 0;\n        if (cVar11 == '\\0') {\n            lpNumberOfBytesWritten = arg_ch;\n            if (nNumberOfBytesToWrite == 0) goto code_r0x0040e1ee;\n            do {\n                puVar4 = &fcn.0040d9d9::var_140ch;\n                var_1ac4h = NULL;\n                uVar15 = lpNumberOfBytesWritten - arg_ch;\n                do {\n                    if (nNumberOfBytesToWrite <= uVar15) break;\n                    cVar11 = *lpNumberOfBytesWritten;\n                    lpNumberOfBytesWritten = lpNumberOfBytesWritten + 1;\n                    uVar15 = uVar15 + 1;\n                    if (cVar11 == '\\n') {\n                        var_1abch = var_1abch + 1;\n                        *puVar4 = '\\r';\n                        puVar4 = puVar4 + 1;\n                        var_1ac4h = var_1ac4h + 1;\n                    }\n                    *puVar4 = cVar11;\n                    puVar4 = puVar4 + 1;\n                    var_1ac4h = var_1ac4h + 1;\n                } while (var_1ac4h < 0x13ff);\n                iStackY36 = *(iVar8 + *(iVar9 * 4 + 0x5dd3c8));\n                puStackY40 = 0x40def4;\n                iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n                if (iVar5 == 0) goto code_r0x0040de0f;\n                uVar13 = uVar13 + var_1ae0h;\n                uVar15 = lpWideCharStr;\n            } while ((puVar4 - &fcn.0040d9d9::var_140ch <= var_1ae0h) &&\n                    (lpNumberOfBytesWritten - arg_ch < nNumberOfBytesToWrite));\n            goto code_r0x0040df2c;\n        }\n        if (cVar11 == '\\x02') {\n            puVar4 = arg_ch;\n            if (nNumberOfBytesToWrite != 0) {\n                do {\n                    puVar12 = &fcn.0040d9d9::var_140ch;\n                    uVar13 = puVar4 - arg_ch;\n                    uVar15 = 0;\n                    do {\n                        if (nNumberOfBytesToWrite <= uVar13) break;\n                        uVar2 = *puVar4;\n                        uVar13 = uVar13 + 2;\n                        puVar4 = puVar4 + 2;\n                        if (uVar2 == 10) {\n                            var_1abch = var_1abch + 2;\n                            *puVar12 = 0xd;\n                            puVar12 = puVar12 + 2;\n                            uVar15 = uVar15 + 2;\n                        }\n                        *puVar12 = uVar2;\n                        uVar15 = uVar15 + 2;\n                        puVar12 = puVar12 + 2;\n                    } while (uVar15 < 0x13fe);\n                    iStackY36 = *(iVar8 + *(iVar9 * 4 + 0x5dd3c8));\n                    puStackY40 = 0x40e009;\n                    var_1ac4h = puVar4;\n                    iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n                    uVar13 = var_1ac0h;\n                    if (iVar5 == 0) goto code_r0x0040de0f;\n                    uVar13 = var_1ac0h + var_1ae0h;\n                    uVar15 = lpWideCharStr;\n                    var_1ac0h = uVar13;\n                } while ((puVar12 - &fcn.0040d9d9::var_140ch <= var_1ae0h) &&\n                        (puVar4 = var_1ac4h,  var_1ac4h - arg_ch < nNumberOfBytesToWrite));\n                goto code_r0x0040df2c;\n            }\n        }\n        else {\n            lpNumberOfBytesWritten = arg_ch;\n            if (nNumberOfBytesToWrite != 0) {\n                do {\n                    puVar4 = &fcn.0040d9d9::var_1ab8h;\n                    uVar13 = lpNumberOfBytesWritten - arg_ch;\n                    uVar15 = 0;\n                    do {\n                        if (nNumberOfBytesToWrite <= uVar13) break;\n                        uVar2 = *lpNumberOfBytesWritten;\n                        uVar13 = uVar13 + 2;\n                        lpNumberOfBytesWritten = lpNumberOfBytesWritten + 2;\n                        if (uVar2 == 10) {\n                            *puVar4 = 0xd;\n                            puVar4 = puVar4 + 2;\n                            uVar15 = uVar15 + 2;\n                        }\n                        *puVar4 = uVar2;\n                        uVar15 = uVar15 + 2;\n                        puVar4 = puVar4 + 2;\n                    } while (uVar15 < 0x6a8);\n                    puStackY40 = &fcn.0040d9d9::var_1ab8h;\n                    iStackY36 = (puVar4 - puStackY40) / 2;\n                    uStackY44 = 0;\n                    uStackY48 = 0xfde9;\n                    uStackY52 = 0x40e0f5;\n                    var_1ac4h = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n                    uVar13 = var_1ac0h;\n                    uVar15 = lpWideCharStr;\n                    if (var_1ac4h == NULL) goto code_r0x0040de0f;\n                    var_1ac0h = 0;\n                    do {\n                        iStackY36 = *(iVar8 + *(iVar9 * 4 + 0x5dd3c8));\n                        puStackY40 = 0x40e148;\n                        iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n                        if (iVar5 == 0) {\n                            uVar15 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                            lpWideCharStr = uVar15;\n                            break;\n                        }\n                        var_1ac0h = var_1ac0h + var_1ae0h;\n                    } while (var_1ac0h < var_1ac4h);\n                } while ((var_1ac4h <= var_1ac0h) &&\n                        (uVar13 = lpNumberOfBytesWritten - arg_ch,  var_1ac0h = uVar13,  uVar13 < nNumberOfBytesToWrite)\n                        );\n                goto code_r0x0040df2c;\n            }\n        }\n    }\n    else {\n        iVar5 = fcn.00408120();\n        var_1ac4h = *(*(iVar5 + 0x6c) + 0xa8) == 0;\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetConsoleMode)();\n        if ((iVar5 == 0) || ((var_1ac4h != NULL && (cVar11 == '\\0')))) goto code_r0x0040de1c;\n        uVar6 = (*_sym.imp.KERNEL32.dll_GetConsoleCP)();\n        lpBuffer_00 = 0;\n        lpNumberOfBytesWritten = NULL;\n        lpWideCharStr = 0;\n        var_1ad4h = arg_ch;\n        if (nNumberOfBytesToWrite == 0) goto code_r0x0040e1ee;\n        uVar10 = 0;\n        var_1ac0h = 0;\n        puVar4 = arg_ch;\n        uVar14 = uVar13;\n        do {\n            var_1ac4h = NULL;\n            uVar13 = uVar14;\n            if (cVar11 == '\\0') {\n                cVar1 = *puVar4;\n                var_1ac4h = *(iVar9 * 4 + 0x5dd3c8);\n                if (var_1ac4h[uVar7 * 0x10 + 0xe] == 0) {\n                    iVar5 = fcn.0040e992(cVar1);\n                    if (iVar5 == 0) {\n                        arg_10h = 1;\n                        puVar4 = var_1ad4h;\n                        goto code_r0x0040dc38;\n                    }\n                    if (arg_ch + (nNumberOfBytesToWrite - var_1ad4h) < 0x2) {\n                        *(iVar8 + 0x34 + *(iVar9 * 4 + 0x5dd3c8)) = *var_1ad4h;\n                        *(iVar8 + 0x38 + *(iVar9 * 4 + 0x5dd3c8)) = 1;\n                        uVar13 = uVar14 + 1;\n                        break;\n                    }\n                    iVar5 = fcn.00410cdf(&fcn.0040d9d9::lpWideCharStr, var_1ad4h, 2);\n                    if (iVar5 == -1) break;\n                    var_1ad4h = var_1ad4h + 1;\n                    var_1ac0h = var_1ac0h + 1;\n                }\n                else {\n                    lpBuffer._0_2_ = CONCAT11(cVar1, *(var_1ac4h + uVar7 * 0x10 + 0xd));\n                    lpBuffer = lpBuffer & 0xffff0000 | lpBuffer;\n                    arg_10h = 2;\n                    var_1ac4h[uVar7 * 0x10 + 0xe] = 0;\n                    puVar4 = &fcn.0040d9d9::lpBuffer;\ncode_r0x0040dc38:\n                    iVar5 = fcn.00410cdf(&fcn.0040d9d9::lpWideCharStr, puVar4, arg_10h);\n                    if (iVar5 == -1) break;\n                }\n                puVar4 = var_1ad4h + 1;\n                var_1ac0h = var_1ac0h + 1;\n                iStackY36 = 1;\n                puStackY40 = &fcn.0040d9d9::lpWideCharStr;\n                uStackY44 = 0;\n                uStackY52 = 0x40dc83;\n                uStackY48 = uVar6;\n                var_1ac4h = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n                if (var_1ac4h == NULL) break;\n                iStackY36 = *(iVar8 + *(iVar9 * 4 + 0x5dd3c8));\n                puStackY40 = 0x40dcbb;\n                iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n                if (iVar5 == 0) goto code_r0x0040de0f;\n                uVar13 = var_1ac0h + var_1abch;\n                if (lpNumberOfBytesWritten < var_1ac4h) break;\n                lpBuffer_00 = lpWideCharStr;\n                uVar10 = var_1ac0h;\n                var_1ad4h = puVar4;\n                if (cVar1 == '\\n') {\n                    lpBuffer = CONCAT31(lpBuffer._1_3_, 0xd);\n                    iStackY36 = *(iVar8 + *(iVar9 * 4 + 0x5dd3c8));\n                    puStackY40 = 0x40dd1a;\n                    iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n                    if (iVar5 == 0) goto code_r0x0040de0f;\n                    if (lpNumberOfBytesWritten < 1) break;\n                    var_1abch = var_1abch + 1;\n                    uVar13 = uVar13 + 1;\n                    lpBuffer_00 = lpWideCharStr;\n                    uVar10 = var_1ac0h;\n                }\n            }\n            else {\n                if ((cVar11 == '\\x01') || (cVar11 == '\\x02')) {\n                    lpBuffer_00 = *puVar4;\n                    var_1ac4h = *puVar4 == 10;\n                    puVar4 = puVar4 + 2;\n                    uVar10 = var_1ac0h + 2;\n                    var_1ad4h = puVar4;\n                    lpWideCharStr = lpBuffer_00;\n                    var_1ac0h = uVar10;\n                }\n                if ((cVar11 == '\\x01') || (cVar11 == '\\x02')) {\n                    iVar3 = fcn.00410cf7(lpBuffer_00);\n                    if (iVar3 != lpWideCharStr) goto code_r0x0040de0f;\n                    uVar13 = uVar14 + 2;\n                    puVar4 = var_1ad4h;\n                    lpBuffer_00 = lpWideCharStr;\n                    uVar10 = var_1ac0h;\n                    if (var_1ac4h != NULL) {\n                        lpWideCharStr = 0xd;\n                        iVar3 = fcn.00410cf7(0xd);\n                        if (iVar3 != lpWideCharStr) goto code_r0x0040de0f;\n                        uVar13 = uVar14 + 3;\n                        var_1abch = var_1abch + 1;\n                        lpBuffer_00 = lpWideCharStr;\n                        uVar10 = var_1ac0h;\n                    }\n                }\n            }\n            uVar14 = uVar13;\n        } while (uVar10 < nNumberOfBytesToWrite);\ncode_r0x0040df2c:\n        if (uVar13 != 0) goto code_r0x0040e22e;\n        if (uVar15 != 0) {\n            if (uVar15 == 5) {\n                puVar4 = fcn.00405af7();\n                *puVar4 = 9;\n                puVar4 = fcn.00405ac3();\n                *puVar4 = 5;\n            }\n            else {\n                fcn.00405ad6(uVar15);\n            }\n            goto code_r0x0040e22e;\n        }\n    }\ncode_r0x0040e1ee:\n    if (((*(iVar8 + 4 + *(iVar9 * 4 + 0x5dd3c8)) & 0x40) == 0) || (*arg_ch != '\\x1a')) {\n        puVar4 = fcn.00405af7();\n        *puVar4 = 0x1c;\n        puVar4 = fcn.00405ac3();\n        *puVar4 = 0;\n    }\ncode_r0x0040e22e:\n    fcn.00403a01(unaff_EBP);\n    return;\n}\n",
        "token_count": 4377
    },
    "0040e855": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint16_t __cdecl fcn.0040e855(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_14h;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uchar *var_4h;\n    \n    var_4h = &stack0xfffffffc;\n    fcn.0040935d(arg_10h);\n    if (arg_8h + 1U < 0x101) {\n        var_4h._0_2_ = *(*(var_18h + 0x90) + arg_8h * 2);\n    }\n    else {\n        iVar1 = fcn.0040e958(arg_8h >> 8 & 0xff, &var_18h);\n        if (iVar1 == 0) {\n            var_8h._1_1_ = 0;\n            arg_14h = 1;\n            var_8h._0_1_ = arg_8h;\n        }\n        else {\n            arg_14h = 2;\n            var_8h._2_1_ = 0;\n            var_8h._0_1_ = arg_8h >> 8;\n            var_8h._1_1_ = arg_8h;\n        }\n        iVar1 = fcn.0040d6de(&var_18h, 1, &var_8h, arg_14h, &var_4h, *(var_18h + 4), 1);\n        if (iVar1 == 0) {\n            if (var_ch != '\\0') {\n                *(var_10h + 0x70) = *(var_10h + 0x70) & 0xfffffffd;\n            }\n            return 0;\n        }\n    }\n    if (var_ch != '\\0') {\n        *(var_10h + 0x70) = *(var_10h + 0x70) & 0xfffffffd;\n    }\n    return var_4h & arg_ch;\n}\n",
        "token_count": 497
    },
    "0040e958": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint16_t __cdecl fcn.0040e958(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.0040935d(arg_ch);\n    uVar1 = *(*(var_10h + 0x90) + (arg_8h & 0xff) * 2);\n    if (var_4h != '\\0') {\n        *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n    }\n    return uVar1 & 0x8000;\n}\n",
        "token_count": 170
    },
    "0040e9a3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.0040e9a3(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    uint8_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41dec0 ^ &stack0xfffffffc;\n    uVar1 = arg_8h[5];\n    iVar14 = 0;\n    uVar10 = uVar1 & 0x7fff;\n    uVar16 = *(arg_8h + 3);\n    iVar11 = uVar10 - 0x3fff;\n    var_10h = uVar16;\n    uVar17 = *(arg_8h + 1);\n    var_ch = uVar17;\n    uVar2 = *arg_8h;\n    var_8h = uVar2 << 0x10;\n    uVar5 = str.5_v_[1];\n    if (iVar11 == -0x3fff) {\n        iVar15 = 0;\n        iVar11 = 0;\n        do {\n            if ((&var_10h)[iVar11] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                goto code_r0x0040ea18;\n            }\n            iVar11 = iVar11 + 1;\n        } while (iVar11 < 3);\n    }\n    else {\n        iVar6 = str.5_v_[0] + L'\\xffffffff';\n        bVar4 = false;\n        iVar15 = (str.5_v_[0] >> 0x1f & 0x1fU) + str.5_v_[0] >> 5;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if (((&var_10h)[iVar15] & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar7 = (&var_10h)[iVar15] & ~(-1 << (uVar8 & 0x1f));\n            iVar12 = iVar15;\n            while (uVar7 == 0) {\n                iVar12 = iVar12 + 1;\n                if (2 < iVar12) goto code_r0x0040eb18;\n                uVar7 = (&var_10h)[iVar12];\n            }\n            iVar12 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n            bVar4 = false;\n            uVar7 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n            uVar9 = uVar7 + (&var_10h)[iVar12];\n            bVar3 = false;\n            if ((uVar9 < (&var_10h)[iVar12]) || (uVar9 < uVar7)) {\n                bVar3 = true;\n                bVar4 = true;\n            }\n            (&var_10h)[iVar12] = uVar9;\n            while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar3))) {\n                bVar3 = false;\n                bVar4 = false;\n                uVar7 = (&var_10h)[iVar12] + 1;\n                if ((uVar7 < (&var_10h)[iVar12]) || (uVar7 == 0)) {\n                    bVar3 = true;\n                    bVar4 = true;\n                }\n                (&var_10h)[iVar12] = uVar7;\n            }\n        }\ncode_r0x0040eb18:\n        (&var_10h)[iVar15] = (&var_10h)[iVar15] & -1 << (uVar8 & 0x1f);\n        iVar15 = iVar15 + 1;\n        if (iVar15 < 3) {\n            puVar13 = &var_10h + iVar15;\n            for (iVar12 = 3 - iVar15; iVar12 != 0; iVar12 = iVar12 + -1) {\n                *puVar13 = 0;\n                puVar13 = puVar13 + 1;\n            }\n        }\n        iVar15 = iVar11;\n        if (bVar4) {\n            iVar15 = uVar10 - 0x3ffe;\n        }\n        if (iVar15 < *0x41eeb8 - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x41eeb8 < iVar15) {\n                if (iVar15 < *0x41eeb4) {\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar15 = str.5_v_[3] + iVar15;\n                    iVar11 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_20h = 0;\n                    iVar14 = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar11 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_20h = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar15 = str.5_v_[3] + *0x41eeb4;\n                }\n                goto code_r0x0040eec9;\n            }\n            iVar11 = *0x41eeb8 - iVar11;\n            var_10h = uVar16;\n            iVar15 = iVar11 + (iVar11 >> 0x1f & 0x1fU) >> 5;\n            var_ch = uVar17;\n            var_8h = uVar2 << 0x10;\n            uVar8 = iVar11 & 0x1f;\n            var_20h = 0;\n            do {\n                uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                (&var_10h)[iVar14] = uVar16;\n                iVar14 = iVar14 + 1;\n            } while (iVar14 < 3);\n            puVar13 = &var_8h + -iVar15;\n            iVar11 = 2;\n            do {\n                if (iVar11 < iVar15) {\n                    (&var_10h)[iVar11] = 0;\n                }\n                else {\n                    (&var_10h)[iVar11] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar11 = iVar11 + -1;\n            } while (-1 < iVar11);\n            iVar11 = (str.5_v_[0] >> 0x1f & 0x1fU) + str.5_v_[0] >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            if (((&var_10h)[iVar11] & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar16 = (&var_10h)[iVar11] & ~(-1 << (uVar8 & 0x1f));\n                iVar14 = iVar11;\n                while (uVar16 == 0) {\n                    iVar14 = iVar14 + 1;\n                    if (2 < iVar14) goto code_r0x0040ecd3;\n                    uVar16 = (&var_10h)[iVar14];\n                }\n                iVar14 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n                uVar16 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n                bVar4 = false;\n                uVar17 = uVar16 + (&var_10h)[iVar14];\n                if ((uVar17 < (&var_10h)[iVar14]) || (uVar17 < uVar16)) {\n                    bVar4 = true;\n                }\n                (&var_10h)[iVar14] = uVar17;\n                while ((iVar14 = iVar14 + -1,  -1 < iVar14 && (bVar4))) {\n                    bVar4 = false;\n                    uVar16 = (&var_10h)[iVar14] + 1;\n                    if ((uVar16 < (&var_10h)[iVar14]) || (uVar16 == 0)) {\n                        bVar4 = true;\n                    }\n                    (&var_10h)[iVar14] = uVar16;\n                }\n            }\ncode_r0x0040ecd3:\n            (&var_10h)[iVar11] = (&var_10h)[iVar11] & -1 << (uVar8 & 0x1f);\n            iVar11 = iVar11 + 1;\n            if (iVar11 < 3) {\n                puVar13 = &var_10h + iVar11;\n                for (iVar14 = 3 - iVar11; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            iVar14 = str.5_v_[1] + L'\\x01';\n            iVar11 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar14 & 0x1f;\n            var_20h = 0;\n            var_34h = 0;\n            do {\n                uVar16 = (&var_10h)[var_34h];\n                (&var_10h)[var_34h] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_34h = var_34h + 1;\n            } while (var_34h < 3);\n            puVar13 = &var_8h + -iVar11;\n            iVar14 = 2;\n            do {\n                if (iVar14 < iVar11) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\ncode_r0x0040ea18:\n        iVar15 = 0;\n    }\ncode_r0x0040eec9:\n    uVar16 = iVar15 << (0x1f - uVar5 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar16;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar16;\n    }\n    fcn.00403a01(uVar1 & 0x8000);\n    return;\n}\n",
        "token_count": 3232
    },
    "0040ef15": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.0040ef15(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    uint8_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41dec0 ^ &stack0xfffffffc;\n    uVar1 = arg_8h[5];\n    iVar14 = 0;\n    uVar10 = uVar1 & 0x7fff;\n    uVar16 = *(arg_8h + 3);\n    iVar11 = uVar10 - 0x3fff;\n    var_10h = uVar16;\n    uVar17 = *(arg_8h + 1);\n    var_ch = uVar17;\n    uVar2 = *arg_8h;\n    var_8h = uVar2 << 0x10;\n    uVar5 = *0x41eed8;\n    if (iVar11 == -0x3fff) {\n        iVar15 = 0;\n        iVar11 = 0;\n        do {\n            if ((&var_10h)[iVar11] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                goto code_r0x0040ef8a;\n            }\n            iVar11 = iVar11 + 1;\n        } while (iVar11 < 3);\n    }\n    else {\n        iVar6 = *0x41eed4 + -1;\n        bVar4 = false;\n        iVar15 = (*0x41eed4 >> 0x1f & 0x1fU) + *0x41eed4 >> 5;\n        uVar8 = 0x1f - (*0x41eed4 & 0x1f);\n        if (((&var_10h)[iVar15] & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar7 = (&var_10h)[iVar15] & ~(-1 << (uVar8 & 0x1f));\n            iVar12 = iVar15;\n            while (uVar7 == 0) {\n                iVar12 = iVar12 + 1;\n                if (2 < iVar12) goto code_r0x0040f08a;\n                uVar7 = (&var_10h)[iVar12];\n            }\n            iVar12 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n            bVar4 = false;\n            uVar7 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n            uVar9 = uVar7 + (&var_10h)[iVar12];\n            bVar3 = false;\n            if ((uVar9 < (&var_10h)[iVar12]) || (uVar9 < uVar7)) {\n                bVar3 = true;\n                bVar4 = true;\n            }\n            (&var_10h)[iVar12] = uVar9;\n            while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar3))) {\n                bVar3 = false;\n                bVar4 = false;\n                uVar7 = (&var_10h)[iVar12] + 1;\n                if ((uVar7 < (&var_10h)[iVar12]) || (uVar7 == 0)) {\n                    bVar3 = true;\n                    bVar4 = true;\n                }\n                (&var_10h)[iVar12] = uVar7;\n            }\n        }\ncode_r0x0040f08a:\n        (&var_10h)[iVar15] = (&var_10h)[iVar15] & -1 << (uVar8 & 0x1f);\n        iVar15 = iVar15 + 1;\n        if (iVar15 < 3) {\n            puVar13 = &var_10h + iVar15;\n            for (iVar12 = 3 - iVar15; iVar12 != 0; iVar12 = iVar12 + -1) {\n                *puVar13 = 0;\n                puVar13 = puVar13 + 1;\n            }\n        }\n        iVar15 = iVar11;\n        if (bVar4) {\n            iVar15 = uVar10 - 0x3ffe;\n        }\n        if (iVar15 < *0x41eed0 - *0x41eed4) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x41eed0 < iVar15) {\n                if (iVar15 < *0x41eecc) {\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar15 = *0x41eee0 + iVar15;\n                    iVar11 = *0x41eed8 + (*0x41eed8 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_20h = 0;\n                    iVar14 = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar11 = *0x41eed8 + (*0x41eed8 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_20h = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar15 = *0x41eee0 + *0x41eecc;\n                }\n                goto code_r0x0040f43b;\n            }\n            iVar11 = *0x41eed0 - iVar11;\n            var_10h = uVar16;\n            iVar15 = iVar11 + (iVar11 >> 0x1f & 0x1fU) >> 5;\n            var_ch = uVar17;\n            var_8h = uVar2 << 0x10;\n            uVar8 = iVar11 & 0x1f;\n            var_20h = 0;\n            do {\n                uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                (&var_10h)[iVar14] = uVar16;\n                iVar14 = iVar14 + 1;\n            } while (iVar14 < 3);\n            puVar13 = &var_8h + -iVar15;\n            iVar11 = 2;\n            do {\n                if (iVar11 < iVar15) {\n                    (&var_10h)[iVar11] = 0;\n                }\n                else {\n                    (&var_10h)[iVar11] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar11 = iVar11 + -1;\n            } while (-1 < iVar11);\n            iVar11 = (*0x41eed4 >> 0x1f & 0x1fU) + *0x41eed4 >> 5;\n            uVar8 = 0x1f - (*0x41eed4 & 0x1f);\n            if (((&var_10h)[iVar11] & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar16 = (&var_10h)[iVar11] & ~(-1 << (uVar8 & 0x1f));\n                iVar14 = iVar11;\n                while (uVar16 == 0) {\n                    iVar14 = iVar14 + 1;\n                    if (2 < iVar14) goto code_r0x0040f245;\n                    uVar16 = (&var_10h)[iVar14];\n                }\n                iVar14 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n                uVar16 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n                bVar4 = false;\n                uVar17 = uVar16 + (&var_10h)[iVar14];\n                if ((uVar17 < (&var_10h)[iVar14]) || (uVar17 < uVar16)) {\n                    bVar4 = true;\n                }\n                (&var_10h)[iVar14] = uVar17;\n                while ((iVar14 = iVar14 + -1,  -1 < iVar14 && (bVar4))) {\n                    bVar4 = false;\n                    uVar16 = (&var_10h)[iVar14] + 1;\n                    if ((uVar16 < (&var_10h)[iVar14]) || (uVar16 == 0)) {\n                        bVar4 = true;\n                    }\n                    (&var_10h)[iVar14] = uVar16;\n                }\n            }\ncode_r0x0040f245:\n            (&var_10h)[iVar11] = (&var_10h)[iVar11] & -1 << (uVar8 & 0x1f);\n            iVar11 = iVar11 + 1;\n            if (iVar11 < 3) {\n                puVar13 = &var_10h + iVar11;\n                for (iVar14 = 3 - iVar11; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            iVar14 = *0x41eed8 + 1;\n            iVar11 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar14 & 0x1f;\n            var_20h = 0;\n            var_34h = 0;\n            do {\n                uVar16 = (&var_10h)[var_34h];\n                (&var_10h)[var_34h] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_34h = var_34h + 1;\n            } while (var_34h < 3);\n            puVar13 = &var_8h + -iVar11;\n            iVar14 = 2;\n            do {\n                if (iVar14 < iVar11) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\ncode_r0x0040ef8a:\n        iVar15 = 0;\n    }\ncode_r0x0040f43b:\n    uVar16 = iVar15 << (0x1f - uVar5 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x41eedc == 0x40) {\n        arg_ch[1] = uVar16;\n        *arg_ch = var_ch;\n    }\n    else if (*0x41eedc == 0x20) {\n        *arg_ch = uVar16;\n    }\n    fcn.00403a01(uVar1 & 0x8000);\n    return;\n}\n",
        "token_count": 3207
    },
    "0040f487": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x0040f791)\n// WARNING: Removing unreachable block (ram,0x0040f79a)\n// WARNING: Removing unreachable block (ram,0x0040fbce)\n// WARNING: Removing unreachable block (ram,0x0040f7f7)\n// WARNING: Removing unreachable block (ram,0x0040f815)\n// WARNING: Removing unreachable block (ram,0x0040f7fc)\n// WARNING: Removing unreachable block (ram,0x0040f803)\n// WARNING: Removing unreachable block (ram,0x0040f808)\n// WARNING: Removing unreachable block (ram,0x0040f818)\n// WARNING: Removing unreachable block (ram,0x0040fbc4)\n// WARNING: Removing unreachable block (ram,0x0040f820)\n// WARNING: Removing unreachable block (ram,0x0040f825)\n// WARNING: Removing unreachable block (ram,0x0040f82c)\n// WARNING: Removing unreachable block (ram,0x0040f82f)\n// WARNING: Removing unreachable block (ram,0x0040f847)\n// WARNING: Removing unreachable block (ram,0x0040f849)\n// WARNING: Removing unreachable block (ram,0x0040f853)\n// WARNING: Removing unreachable block (ram,0x0040f856)\n// WARNING: Removing unreachable block (ram,0x0040f85d)\n// WARNING: Removing unreachable block (ram,0x0040f860)\n// WARNING: Removing unreachable block (ram,0x0040fbb6)\n// WARNING: Removing unreachable block (ram,0x0040fbd4)\n// WARNING: Removing unreachable block (ram,0x0040f86c)\n// WARNING: Removing unreachable block (ram,0x0040fba7)\n// WARNING: Removing unreachable block (ram,0x0040f878)\n// WARNING: Removing unreachable block (ram,0x0040f888)\n// WARNING: Removing unreachable block (ram,0x0040f88a)\n// WARNING: Removing unreachable block (ram,0x0040f894)\n// WARNING: Removing unreachable block (ram,0x0040f89d)\n// WARNING: Removing unreachable block (ram,0x0040fb8d)\n// WARNING: Removing unreachable block (ram,0x0040f8a8)\n// WARNING: Removing unreachable block (ram,0x0040f8bf)\n// WARNING: Removing unreachable block (ram,0x0040f8d1)\n// WARNING: Removing unreachable block (ram,0x0040f8e2)\n// WARNING: Removing unreachable block (ram,0x0040f921)\n// WARNING: Removing unreachable block (ram,0x0040f92a)\n// WARNING: Removing unreachable block (ram,0x0040fb6a)\n// WARNING: Removing unreachable block (ram,0x0040f938)\n// WARNING: Removing unreachable block (ram,0x0040f94a)\n// WARNING: Removing unreachable block (ram,0x0040f94f)\n// WARNING: Removing unreachable block (ram,0x0040f95c)\n// WARNING: Removing unreachable block (ram,0x0040f962)\n// WARNING: Removing unreachable block (ram,0x0040f968)\n// WARNING: Removing unreachable block (ram,0x0040f973)\n// WARNING: Removing unreachable block (ram,0x0040f978)\n// WARNING: Removing unreachable block (ram,0x0040f985)\n// WARNING: Removing unreachable block (ram,0x0040f98a)\n// WARNING: Removing unreachable block (ram,0x0040f942)\n// WARNING: Removing unreachable block (ram,0x0040fb81)\n// WARNING: Removing unreachable block (ram,0x0040fb87)\n// WARNING: Removing unreachable block (ram,0x0040f98e)\n// WARNING: Removing unreachable block (ram,0x0040f99c)\n// WARNING: Removing unreachable block (ram,0x0040f9a3)\n// WARNING: Removing unreachable block (ram,0x0040f9af)\n// WARNING: Removing unreachable block (ram,0x0040f9cf)\n// WARNING: Removing unreachable block (ram,0x0040f9d4)\n// WARNING: Removing unreachable block (ram,0x0040f9d9)\n// WARNING: Removing unreachable block (ram,0x0040f9dc)\n// WARNING: Removing unreachable block (ram,0x0040f9e3)\n// WARNING: Removing unreachable block (ram,0x0040f9e6)\n// WARNING: Removing unreachable block (ram,0x0040f9f2)\n// WARNING: Removing unreachable block (ram,0x0040f9fb)\n// WARNING: Removing unreachable block (ram,0x0040fa0a)\n// WARNING: Removing unreachable block (ram,0x0040fa21)\n// WARNING: Removing unreachable block (ram,0x0040fa25)\n// WARNING: Removing unreachable block (ram,0x0040fa57)\n// WARNING: Removing unreachable block (ram,0x0040fa5c)\n// WARNING: Removing unreachable block (ram,0x0040fa68)\n// WARNING: Removing unreachable block (ram,0x0040fa77)\n// WARNING: Removing unreachable block (ram,0x0040fa7d)\n// WARNING: Removing unreachable block (ram,0x0040fa7e)\n// WARNING: Removing unreachable block (ram,0x0040faa9)\n// WARNING: Removing unreachable block (ram,0x0040fab3)\n// WARNING: Removing unreachable block (ram,0x0040fac5)\n// WARNING: Removing unreachable block (ram,0x0040fac9)\n// WARNING: Removing unreachable block (ram,0x0040fad3)\n// WARNING: Removing unreachable block (ram,0x0040fae1)\n// WARNING: Removing unreachable block (ram,0x0040fb1d)\n// WARNING: Removing unreachable block (ram,0x0040fae9)\n// WARNING: Removing unreachable block (ram,0x0040fb14)\n// WARNING: Removing unreachable block (ram,0x0040faf4)\n// WARNING: Removing unreachable block (ram,0x0040fb0c)\n// WARNING: Removing unreachable block (ram,0x0040fb05)\n// WARNING: Removing unreachable block (ram,0x0040fb18)\n// WARNING: Removing unreachable block (ram,0x0040fb21)\n// WARNING: Removing unreachable block (ram,0x0040fb24)\n// WARNING: Removing unreachable block (ram,0x0040fb50)\n// WARNING: Removing unreachable block (ram,0x0040fb31)\n// WARNING: Removing unreachable block (ram,0x0040fb8a)\n// WARNING: Removing unreachable block (ram,0x0040fb95)\n// WARNING: Removing unreachable block (ram,0x0040fbd9)\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl\nfcn.0040f487(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.00405af7();\n        *puVar2 = 0x16;\n        fcn.004057d3();\n        fcn.00403a01(arg_8h);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x0040f516. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x40fbff\n    (**0x40fbff)();\n    return;\n}\n",
        "token_count": 1981
    },
    "0040fc2f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_88h\n// WARNING: Removing unreachable block (ram,0x004101ac)\n// WARNING: Removing unreachable block (ram,0x004101b9)\n// WARNING: Removing unreachable block (ram,0x004101bf)\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl\nfcn.0040fc2f(int32_t arg_8h, uint32_t arg_ch, uint arg_10h, int32_t arg_14h, uint32_t arg_18h, int16_t *arg_1ch)\n\n{\n    int16_t *piVar1;\n    code *pcVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    char cVar8;\n    uint16_t uVar9;\n    int32_t *piVar10;\n    int32_t *piVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint *puVar14;\n    int16_t *piVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    int32_t iVar19;\n    uint16_t uVar20;\n    uint16_t uVar21;\n    int32_t iVar22;\n    uint16_t *puVar23;\n    uint32_t uVar24;\n    bool bVar25;\n    char *pcVar26;\n    int32_t iVar27;\n    uint16_t *var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    int32_t var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int16_t *var_58h;\n    int32_t var_54h;\n    uint32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint16_t var_20h;\n    int32_t var_1eh;\n    uint32_t var_1ah;\n    uint var_16h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41dec0 ^ &stack0xfffffffc;\n    uVar16 = arg_10h & 0x8000;\n    var_30h = 0xcccccccc;\n    uVar21 = arg_10h & 0x7fff;\n    var_2ch = 0xcccccccc;\n    var_28h._0_2_ = 0xcccc;\n    var_28h._2_2_ = 0x3ffb;\n    if ((arg_10h & 0x8000) == 0) {\n        *(arg_1ch + 1) = 0x20;\n    }\n    else {\n        *(arg_1ch + 1) = 0x2d;\n    }\n    if ((arg_10h & 0x7fff) == 0) {\n        if ((arg_ch == 0) && (arg_8h == 0)) {\n            *(arg_1ch + 3) = 1;\n            *arg_1ch = 0;\n            *(arg_1ch + 1) = ((uVar16 != 0x8000) - 1U & 0xd) + 0x20;\n            arg_1ch[2] = 0x30;\n            arg_8h = CONCAT22(var_1eh._2_2_, var_1eh);\n            goto code_r0x004105ac;\n        }\n    }\n    else if (uVar21 == 0x7fff) {\n        *arg_1ch = 1;\n        if (((arg_ch == 0x80000000) && (arg_8h == 0)) || ((arg_ch & 0x40000000) != 0)) {\n            if (((arg_10h & 0x8000) == 0) || (arg_ch != 0xc0000000)) {\n                if ((arg_ch != 0x80000000) || (arg_8h != 0)) goto code_r0x0040fd3f;\n                pcVar26 = \"1#INF\";\n            }\n            else {\n                if (arg_8h != 0) {\ncode_r0x0040fd3f:\n                    pcVar26 = \"1#QNAN\";\n                    goto code_r0x0040fd44;\n                }\n                pcVar26 = \"1#IND\";\n            }\n            iVar22 = fcn.0040a7c7(arg_1ch + 2, 0x16, pcVar26);\n            if (iVar22 != 0) goto code_r0x004105f6;\n            *(arg_1ch + 3) = 5;\n        }\n        else {\n            pcVar26 = \"1#SNAN\";\ncode_r0x0040fd44:\n            iVar22 = fcn.0040a7c7(arg_1ch + 2, 0x16, pcVar26);\n            if (iVar22 != 0) {\ncode_r0x004105f6:\n                fcn.004057e3(0, 0, 0, 0, 0);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            *(arg_1ch + 3) = 6;\n        }\n        arg_8h = CONCAT22(var_1eh._2_2_, var_1eh);\n        goto code_r0x004105ac;\n    }\n    var_1ah._0_2_ = arg_ch;\n    var_1ah._2_2_ = arg_ch >> 0x10;\n    iVar22 = 0x41ee88;\n    var_16h._0_1_ = uVar21;\n    var_16h._1_1_ = uVar21 >> 8;\n    var_58h = 0x5;\n    var_48h._0_2_ = uVar21 * 0x4d10 + -0x134312f4 + ((uVar21 >> 8) + (arg_ch >> 0x18) * 2) * 0x4d >> 0x10;\n    var_1eh._0_2_ = arg_8h;\n    var_1eh._2_2_ = arg_8h >> 0x10;\n    var_20h = 0;\n    uVar4 = var_48h;\n    bVar25 = -uVar4 == 0;\n    if (bVar25) {\ncode_r0x004100ff:\n        uVar17 = CONCAT22(var_1ah, var_1eh._2_2_);\n        uVar4 = arg_8h << 0x10;\n    }\n    else {\n        var_44h = -uVar4;\n        if (0 < uVar4) {\n            iVar22 = 0x41efe8;\n            bVar25 = uVar4 == 0;\n            var_44h = uVar4;\n        }\n        if (bVar25) goto code_r0x004100ff;\n        uVar4 = arg_8h << 0x10;\n        uVar17 = CONCAT22(var_1ah, var_1eh._2_2_);\n        var_40h = uVar4;\n        do {\n            var_1ah._2_2_ = arg_ch >> 0x10;\n            iVar27 = 0;\n            uVar13 = var_44h >> 3;\n            iVar22 = iVar22 + 0x54;\n            if ((var_44h & 7) != 0) {\n                piVar10 = (var_44h & 7) * 0xc + iVar22;\n                piVar11 = piVar10;\n                if (0x7fff < *piVar10) {\n                    piVar11 = &var_3ch;\n                    var_3ch._0_2_ = *piVar10;\n                    var_3ch._2_2_ = *piVar10 >> 0x10;\n                    var_38h._0_2_ = piVar10[1];\n                    var_38h._2_2_ = piVar10[1] >> 0x10;\n                    var_34h = piVar10[2];\n                    iVar5 = CONCAT22(var_38h, var_3ch._2_2_) + -1;\n                    var_3ch._2_2_ = iVar5;\n                    var_38h._0_2_ = iVar5 >> 0x10;\n                }\n                uVar20 = *(piVar11 + 10) & 0x7fff;\n                uVar3 = CONCAT11(var_16h._1_1_, var_16h) & 0x7fff;\n                uVar21 = (*(piVar11 + 10) ^ CONCAT11(var_16h._1_1_, var_16h)) & 0x8000;\n                uVar9 = uVar3 + uVar20;\n                var_10h._0_1_ = 0;\n                var_10h._1_1_ = 0;\n                var_10h._2_2_ = 0;\n                var_ch._0_2_ = 0;\n                var_ch._2_2_ = var_10h._2_2_;\n                var_8h._0_2_ = var_ch;\n                var_8h._2_2_ = var_10h._2_2_;\n                if (((uVar3 < 0x7fff) && (uVar20 < 0x7fff)) && (uVar9 < 0xbffe)) {\n                    if (uVar9 < 0x3fc0) {\ncode_r0x0040fe92:\n                        var_16h._0_1_ = 0;\n                        var_16h._1_1_ = 0;\n                        var_1ah._2_2_ = var_ch;\n                        goto code_r0x004100df;\n                    }\n                    if (((uVar3 == 0) &&\n                        (uVar9 = uVar9 + 1, \n                        (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) & 0x7fffffff) == 0)) &&\n                       ((uVar17 == 0 && (var_40h == 0)))) {\n                        var_16h._0_1_ = 0;\n                        var_16h._1_1_ = 0;\n                        uVar4 = var_40h;\n                        goto code_r0x004100ef;\n                    }\n                    if (((uVar20 == 0) && (uVar9 = uVar9 + 1,  (piVar11[2] & 0x7fffffffU) == 0)) &&\n                       ((piVar11[1] == 0 && (*piVar11 == 0)))) goto code_r0x0040fe92;\n                    puVar14 = &var_ch;\n                    var_50h = 5;\n                    iVar5 = iVar27;\n                    do {\n                        if (0 < var_50h) {\n                            var_88h = &var_20h + iVar5;\n                            piVar10 = piVar11 + 2;\n                            iVar19 = var_50h;\n                            do {\n                                uVar4 = puVar14[-1] + *var_88h * *piVar10;\n                                if ((uVar4 < puVar14[-1]) || (iVar12 = iVar27,  uVar4 < *var_88h * *piVar10)) {\n                                    iVar12 = 1;\n                                }\n                                puVar14[-1] = uVar4;\n                                if (iVar12 != 0) {\n                                    *puVar14 = *puVar14 + 1;\n                                }\n                                var_88h = var_88h + 1;\n                                piVar10 = piVar10 + -2;\n                                iVar19 = iVar19 + -1;\n                            } while (0 < iVar19);\n                        }\n                        puVar14 = puVar14 + 2;\n                        iVar5 = iVar5 + 1;\n                        var_50h = var_50h + -1;\n                    } while (0 < var_50h);\n                    var_40h = CONCAT22(var_8h._2_2_, var_8h);\n                    uVar9 = uVar9 + 0xc002;\n                    uVar4 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h));\n                    if (uVar9 < 1) {\ncode_r0x0040ffce:\n                        uVar9 = uVar9 - 1;\n                        if (-1 < uVar9) goto code_r0x0041003f;\n                        var_50h = -uVar9;\n                        uVar9 = 0;\n                        uVar17 = var_40h;\n                        do {\n                            if ((var_10h & 1) != 0) {\n                                iVar27 = iVar27 + 1;\n                            }\n                            uVar24 = CONCAT22(var_ch._2_2_, var_ch);\n                            var_ch._2_2_ = var_ch._2_2_ >> 1 | (uVar17 << 0x1f) >> 0x10;\n                            uVar18 = uVar4 >> 1;\n                            var_40h = uVar17 >> 1;\n                            uVar4 = uVar18 | uVar24 << 0x1f;\n                            var_50h = var_50h - 1;\n                            var_8h._0_2_ = var_40h;\n                            var_8h._2_2_ = uVar17 >> 0x11;\n                            var_ch._0_2_ = uVar24 >> 1;\n                            var_10h._0_1_ = uVar18;\n                            var_10h._1_1_ = uVar18 >> 8;\n                            var_10h._2_2_ = uVar4 >> 0x10;\n                            uVar17 = var_40h;\n                        } while (var_50h != 0);\n                        if (iVar27 == 0) goto code_r0x0041003f;\n                        uVar3 = uVar18 | 1;\n                        var_10h._0_1_ = uVar3;\n                        uVar4 = uVar18 | 1;\n                    }\n                    else {\n                        do {\n                            if (var_40h < 0) break;\n                            iVar5 = CONCAT22(var_ch._2_2_, var_ch) * 2;\n                            uVar3 = var_ch._2_2_ >> 0xf;\n                            var_ch._0_2_ = iVar5 | uVar4 >> 0x1f;\n                            uVar4 = uVar4 * 2;\n                            var_ch._2_2_ = iVar5 >> 0x10;\n                            uVar17 = var_40h * 2;\n                            var_10h._0_1_ = uVar4;\n                            var_10h._1_1_ = uVar4 >> 8;\n                            var_10h._2_2_ = uVar4 >> 0x10;\n                            var_40h = uVar17 | uVar3;\n                            uVar9 = uVar9 - 1;\n                            var_8h._0_2_ = var_40h;\n                            var_8h._2_2_ = uVar17 >> 0x10;\n                        } while (0 < uVar9);\n                        if (uVar9 < 1) goto code_r0x0040ffce;\ncode_r0x0041003f:\n                        uVar3 = CONCAT11(var_10h._1_1_, var_10h);\n                    }\n                    if ((0x8000 < uVar3) || ((uVar4 & 0x1ffff) == 0x18000)) {\n                        if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                            var_10h._2_2_ = 0;\n                            var_ch._0_2_ = 0;\n                            if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                                var_ch._2_2_ = 0;\n                                var_8h._0_2_ = 0;\n                                if (var_8h._2_2_ == 0xffff) {\n                                    var_8h._2_2_ = 0x8000;\n                                    uVar9 = uVar9 + 1;\n                                }\n                                else {\n                                    var_8h._2_2_ = var_8h._2_2_ + 1;\n                                }\n                            }\n                            else {\n                                iVar27 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                                var_ch._2_2_ = iVar27;\n                                var_8h._0_2_ = iVar27 >> 0x10;\n                            }\n                            var_40h = CONCAT22(var_8h._2_2_, var_8h);\n                        }\n                        else {\n                            iVar27 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                            var_10h._2_2_ = iVar27;\n                            var_ch._0_2_ = iVar27 >> 0x10;\n                        }\n                    }\n                    if (0x7ffe < uVar9) goto code_r0x004100c8;\n                    var_16h._1_1_ = uVar9 >> 8 | uVar21 >> 8;\n                    var_20h = var_10h._2_2_;\n                    var_1eh._0_2_ = var_ch;\n                    var_1eh._2_2_ = var_ch._2_2_;\n                    uVar4 = CONCAT22(var_ch, var_10h._2_2_);\n                    var_1ah._0_2_ = var_40h;\n                    var_1ah._2_2_ = var_40h >> 0x10;\n                    uVar17 = CONCAT22(var_1ah, var_ch._2_2_);\n                    var_16h._0_1_ = uVar9;\n                }\n                else {\ncode_r0x004100c8:\n                    iVar27 = ((uVar21 == 0) - 1 & 0x80000000) + 0x7fff8000;\n                    var_1ah._2_2_ = iVar27;\n                    var_16h._0_1_ = iVar27 >> 0x10;\n                    var_16h._1_1_ = iVar27 >> 0x18;\ncode_r0x004100df:\n                    uVar17 = 0;\n                    var_20h = 0;\n                    var_1eh._0_2_ = 0;\n                    var_1eh._2_2_ = 0;\n                    var_1ah._0_2_ = 0;\n                    uVar4 = uVar17;\n                }\n                arg_ch = CONCAT22(var_1ah._2_2_, var_1ah);\n                arg_8h = CONCAT22(var_1eh._2_2_, var_1eh);\n                var_40h = uVar4;\n            }\ncode_r0x004100ef:\n            var_44h = uVar13;\n        } while (uVar13 != 0);\n    }\n    var_1ah._2_2_ = arg_ch >> 0x10;\n    uVar13 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n    var_1ah = arg_ch;\n    if (0x3ffe < uVar13 >> 0x10) {\n        var_48h._0_2_ = var_48h + 1;\n        var_78h = 0;\n        var_10h._0_1_ = 0;\n        var_10h._1_1_ = 0;\n        var_10h._2_2_ = 0;\n        var_ch._0_2_ = 0;\n        var_ch._2_2_ = 0;\n        var_8h._0_2_ = 0;\n        var_8h._2_2_ = 0;\n        uVar13 = uVar13 >> 0x10 & 0x7fff;\n        var_4ch = uVar13 + 0x3ffb;\n        if ((uVar13 < 0x7fff) && (var_4ch < 0xbffe)) {\n            if (0x3fbf < var_4ch) {\n                if ((((uVar13 == 0) &&\n                     (var_4ch = uVar13 + 0x3ffc, \n                     (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) & 0x7fffffff) == 0)) && (uVar17 == 0))\n                   && (uVar4 == 0)) {\n                    var_16h._0_1_ = 0;\n                    var_16h._1_1_ = 0;\n                    goto code_r0x004103b8;\n                }\n                puVar14 = &var_ch;\n                var_50h = 0;\n                do {\n                    if (0 < var_58h) {\n                        puVar6 = &var_28h;\n                        puVar23 = &var_20h + var_50h;\n                        iVar22 = var_58h;\n                        do {\n                            uVar4 = puVar14[-1] + *puVar6 * *puVar23;\n                            if ((uVar4 < puVar14[-1]) || (uVar4 < *puVar6 * *puVar23)) {\n                                bVar25 = true;\n                            }\n                            else {\n                                bVar25 = false;\n                            }\n                            puVar14[-1] = uVar4;\n                            if (bVar25) {\n                                *puVar14 = *puVar14 + 1;\n                            }\n                            puVar23 = puVar23 + 1;\n                            puVar6 = puVar6 + -2;\n                            iVar22 = iVar22 + -1;\n                        } while (0 < iVar22);\n                    }\n                    puVar14 = puVar14 + 2;\n                    var_50h = var_50h + 1;\n                    var_58h = var_58h + -1;\n                } while (0 < var_58h);\n                var_1ah = CONCAT22(var_8h._2_2_, var_8h);\n                var_4ch = var_4ch + 0xc002;\n                if (var_4ch < 1) {\n                    uVar4 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h));\ncode_r0x004102f1:\n                    uVar21 = var_4ch + 0xffff;\n                    if (-1 < uVar21) goto code_r0x00410296;\n                    var_58h = -(var_4ch + 0xffff) & 0xffff;\n                    uVar21 = uVar21 + var_58h;\n                    do {\n                        uVar17 = var_1ah;\n                        if ((var_10h & 1) != 0) {\n                            var_78h = var_78h + 1;\n                        }\n                        uVar13 = CONCAT22(var_ch._2_2_, var_ch);\n                        uVar24 = uVar4 >> 1;\n                        var_ch._2_2_ = var_ch._2_2_ >> 1 | (uVar17 << 0x1f) >> 0x10;\n                        uVar4 = uVar24 | uVar13 << 0x1f;\n                        var_1ah = uVar17 >> 1;\n                        var_58h = var_58h - 1;\n                        var_ch._0_2_ = uVar13 >> 1;\n                        var_10h._0_1_ = uVar24;\n                        var_10h._1_1_ = uVar24 >> 8;\n                        var_10h._2_2_ = uVar4 >> 0x10;\n                    } while (var_58h != NULL);\n                    var_8h._0_2_ = var_1ah;\n                    var_8h._2_2_ = uVar17 >> 0x11;\n                    if (var_78h == 0) goto code_r0x00410296;\n                    uVar9 = uVar24 | 1;\n                    var_10h._0_1_ = uVar9;\n                    uVar4 = uVar24 | 1;\n                }\n                else {\n                    uVar4 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h));\n                    do {\n                        if (var_1ah < 0) break;\n                        iVar22 = CONCAT22(var_ch._2_2_, var_ch) * 2;\n                        uVar21 = var_ch._2_2_ >> 0xf;\n                        var_ch._0_2_ = iVar22 | uVar4 >> 0x1f;\n                        uVar17 = var_1ah * 2;\n                        var_ch._2_2_ = iVar22 >> 0x10;\n                        uVar4 = uVar4 * 2;\n                        var_10h._0_1_ = uVar4;\n                        var_10h._1_1_ = uVar4 >> 8;\n                        var_10h._2_2_ = uVar4 >> 0x10;\n                        var_1ah = uVar17 | uVar21;\n                        var_4ch = var_4ch + 0xffff;\n                        var_8h._0_2_ = var_1ah;\n                        var_8h._2_2_ = uVar17 >> 0x10;\n                    } while (0 < var_4ch);\n                    uVar21 = var_4ch;\n                    if (uVar21 < 1) goto code_r0x004102f1;\ncode_r0x00410296:\n                    uVar9 = CONCAT11(var_10h._1_1_, var_10h);\n                }\n                if ((0x8000 < uVar9) || ((uVar4 & 0x1ffff) == 0x18000)) {\n                    if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                        var_10h._2_2_ = 0;\n                        var_ch._0_2_ = 0;\n                        if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                            var_ch._2_2_ = var_10h._2_2_;\n                            var_8h._0_2_ = var_ch;\n                            if (var_8h._2_2_ == 0xffff) {\n                                uVar21 = uVar21 + 1;\n                                var_8h._2_2_ = 0x8000;\n                            }\n                            else {\n                                var_8h._2_2_ = var_8h._2_2_ + 1;\n                            }\n                        }\n                        else {\n                            iVar22 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                            var_ch._2_2_ = iVar22;\n                            var_8h._0_2_ = iVar22 >> 0x10;\n                        }\n                        var_1ah = CONCAT22(var_8h._2_2_, var_8h);\n                    }\n                    else {\n                        iVar22 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                        var_10h._2_2_ = iVar22;\n                        var_ch._0_2_ = iVar22 >> 0x10;\n                    }\n                }\n                if (uVar21 < 0x7fff) {\n                    var_16h._1_1_ = uVar21 >> 8 | var_16h._1_1_ & 0x80;\n                    var_20h = var_10h._2_2_;\n                    arg_8h = CONCAT22(var_ch._2_2_, var_ch);\n                    uVar17 = CONCAT22(var_1ah, var_ch._2_2_);\n                    uVar4 = CONCAT22(var_ch, var_10h._2_2_);\n                    var_16h._0_1_ = uVar21;\n                    goto code_r0x004103b8;\n                }\n                goto code_r0x0041039d;\n            }\n            var_1ah._2_2_ = 0;\n            var_16h._0_1_ = 0;\n            var_16h._1_1_ = 0;\n        }\n        else {\ncode_r0x0041039d:\n            iVar22 = (((var_16h._1_1_ & 0x80) == 0) - 1 & 0x80000000) + 0x7fff8000;\n            var_1ah._2_2_ = iVar22;\n            var_16h._0_1_ = iVar22 >> 0x10;\n            var_16h._1_1_ = iVar22 >> 0x18;\n        }\n        uVar17 = 0;\n        uVar4 = uVar17;\n        var_1ah = arg_ch & 0xffff | var_1ah._2_2_ << 0x10;\n    }\ncode_r0x004103b8:\n    var_1ah._2_2_ = var_1ah >> 0x10;\n    *arg_1ch = var_48h;\n    if ((arg_18h & 1) == 0) {\n        var_48h = arg_14h;\ncode_r0x00410403:\n        if (0x15 < var_48h) {\n            var_48h = 0x15;\n        }\n        iVar22 = (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) >> 0x10) - 0x3ffe;\n        iVar27 = 8;\n        uVar13 = var_1ah._2_2_;\n        do {\n            uVar7 = uVar4 >> 0x1f;\n            uVar24 = uVar17 * 2;\n            uVar18 = uVar13 * 2;\n            uVar4 = uVar4 * 2;\n            uVar13 = uVar18 | uVar17 >> 0x1f;\n            uVar17 = uVar24 | uVar7;\n            var_20h = uVar4;\n            var_1eh._0_2_ = uVar4 >> 0x10;\n            var_1ah._2_2_ = uVar13;\n            var_16h._0_1_ = uVar18 >> 0x10;\n            var_16h._1_1_ = uVar18 >> 0x18;\n            iVar27 = iVar27 + -1;\n        } while (iVar27 != 0);\n        var_1eh._2_2_ = uVar17;\n        var_1ah._0_2_ = uVar24 >> 0x10;\n        var_44h = uVar13;\n        var_40h = uVar4;\n        if ((iVar22 < 0) && (uVar24 = -iVar22 & 0xff,  uVar24 != 0)) {\n            do {\n                uVar7 = uVar4 >> 1;\n                uVar4 = uVar7 | uVar17 << 0x1f;\n                uVar18 = uVar17 >> 1;\n                var_44h = uVar13 >> 1;\n                uVar17 = uVar18 | uVar13 << 0x1f;\n                uVar24 = uVar24 - 1;\n                var_1ah._2_2_ = var_44h;\n                var_16h._0_1_ = var_44h >> 0x10;\n                var_16h._1_1_ = uVar13 >> 0x19;\n                var_20h = uVar7;\n                var_1eh._0_2_ = uVar4 >> 0x10;\n                uVar13 = var_44h;\n            } while (0 < uVar24);\n            var_1eh._2_2_ = uVar18;\n            var_1ah._0_2_ = uVar17 >> 0x10;\n            var_40h = uVar4;\n        }\n        var_54h = var_48h + 1;\n        piVar1 = arg_1ch + 2;\n        var_58h = piVar1;\n        if (0 < var_54h) {\n            while( true ) {\n                var_3ch._0_2_ = var_20h;\n                var_3ch._2_2_ = var_1eh;\n                var_38h._0_2_ = var_1eh._2_2_;\n                var_38h._2_2_ = var_1ah;\n                var_34h = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n                uVar13 = (uVar17 * 2 | var_40h >> 0x1f) * 2 | var_40h * 2 >> 0x1f;\n                uVar24 = (var_44h * 2 | uVar17 >> 0x1f) * 2 | uVar17 * 2 >> 0x1f;\n                uVar4 = CONCAT22(var_1eh, var_20h) + var_40h * 4;\n                if ((uVar4 < var_40h * 4) || (uVar17 = uVar13,  uVar4 < CONCAT22(var_1eh, var_20h))) {\n                    uVar17 = uVar13 + 1;\n                    bVar25 = false;\n                    if ((uVar17 < uVar13) || (uVar17 == 0)) {\n                        bVar25 = true;\n                    }\n                    if (bVar25) {\n                        uVar24 = uVar24 + 1;\n                    }\n                }\n                uVar13 = CONCAT22(var_1ah, var_1eh._2_2_) + uVar17;\n                if ((uVar13 < uVar17) || (uVar13 < CONCAT22(var_1ah, var_1eh._2_2_))) {\n                    uVar24 = uVar24 + 1;\n                }\n                var_40h = uVar4 * 2;\n                var_20h = var_40h;\n                var_1eh._0_2_ = var_40h >> 0x10;\n                uVar17 = uVar13 * 2 | uVar4 >> 0x1f;\n                uVar4 = (uVar24 + var_34h) * 2;\n                var_1eh._2_2_ = uVar17;\n                var_1ah._0_2_ = uVar13 * 2 >> 0x10;\n                var_1ah._2_2_ = uVar4 | uVar13 >> 0x1f;\n                var_16h._0_1_ = uVar4 >> 0x10;\n                var_16h._1_1_ = 0;\n                *var_58h = (uVar4 >> 0x18) + '0';\n                var_58h = var_58h + 1;\n                var_54h = var_54h + -1;\n                if (var_54h < 1) break;\n                var_44h = uVar4 & 0xffffff | uVar13 >> 0x1f;\n            }\n        }\n        arg_8h = CONCAT22(var_1eh._2_2_, var_1eh);\n        piVar15 = var_58h + -1;\n        if (*(var_58h + -1) < '5') {\n            for (; (piVar1 <= piVar15 && (*piVar15 == '0')); piVar15 = piVar15 + -1) {\n            }\n            if (piVar15 < piVar1) {\n                *arg_1ch = 0;\n                *(arg_1ch + 1) = ((uVar16 != 0x8000) - 1U & 0xd) + 0x20;\n                *(arg_1ch + 3) = 1;\n                *piVar1 = 0x30;\n                goto code_r0x004103f8;\n            }\n        }\n        else {\n            for (; (piVar1 <= piVar15 && (*piVar15 == '9')); piVar15 = piVar15 + -1) {\n                *piVar15 = 0x30;\n            }\n            if (piVar15 < piVar1) {\n                piVar15 = piVar15 + 1;\n                *arg_1ch = *arg_1ch + 1;\n            }\n            *piVar15 = *piVar15 + '\\x01';\n        }\n        cVar8 = (piVar15 - arg_1ch) + -3;\n        *(arg_1ch + 3) = cVar8;\n        *(cVar8 + 4 + arg_1ch) = 0;\n    }\n    else {\n        var_48h = arg_14h + var_48h;\n        if (0 < var_48h) goto code_r0x00410403;\n        *arg_1ch = 0;\n        *(arg_1ch + 1) = ((uVar16 != 0x8000) - 1U & 0xd) + 0x20;\n        *(arg_1ch + 3) = 1;\n        *(arg_1ch + 2) = 0x30;\ncode_r0x004103f8:\n        *(arg_1ch + 5) = 0;\n    }\ncode_r0x004105ac:\n    var_1eh = arg_8h;\n    fcn.00403a01(var_88h);\n    return;\n}\n",
        "token_count": 8595
    },
    "004106ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004106ac(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint arg_8h_00;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint16_t uVar3;\n    uint32_t arg_8h_01;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0;\n    if ((in_FPUControlWord & 1) != 0) {\n        uVar1 = 0x10;\n    }\n    if ((in_FPUControlWord & 4) != 0) {\n        uVar1 = uVar1 | 8;\n    }\n    if ((in_FPUControlWord & 8) != 0) {\n        uVar1 = uVar1 | 4;\n    }\n    if ((in_FPUControlWord & 0x10) != 0) {\n        uVar1 = uVar1 | 2;\n    }\n    if ((in_FPUControlWord & 0x20) != 0) {\n        uVar1 = uVar1 | 1;\n    }\n    if ((in_FPUControlWord & 2) != 0) {\n        uVar1 = uVar1 | 0x80000;\n    }\n    uVar3 = in_FPUControlWord & 0xc00;\n    if ((in_FPUControlWord & 0xc00) != 0) {\n        if (uVar3 == 0x400) {\n            uVar1 = uVar1 | 0x100;\n        }\n        else if (uVar3 == 0x800) {\n            uVar1 = uVar1 | 0x200;\n        }\n        else if (uVar3 == 0xc00) {\n            uVar1 = uVar1 | 0x300;\n        }\n    }\n    if ((in_FPUControlWord & 0x300) == 0) {\n        uVar1 = uVar1 | 0x20000;\n    }\n    else if ((in_FPUControlWord & 0x300) == 0x200) {\n        uVar1 = uVar1 | 0x10000;\n    }\n    if ((in_FPUControlWord & 0x1000) != 0) {\n        uVar1 = uVar1 | 0x40000;\n    }\n    arg_8h_01 = ~arg_ch & uVar1 | arg_8h & arg_ch;\n    if (arg_8h_01 != uVar1) {\n        uVar1 = fcn.004109ae(arg_8h_01);\n        arg_8h_01 = 0;\n        if ((uVar1 & 1) != 0) {\n            arg_8h_01 = 0x10;\n        }\n        if ((uVar1 & 4) != 0) {\n            arg_8h_01 = arg_8h_01 | 8;\n        }\n        if ((uVar1 & 8) != 0) {\n            arg_8h_01 = arg_8h_01 | 4;\n        }\n        if ((uVar1 & 0x10) != 0) {\n            arg_8h_01 = arg_8h_01 | 2;\n        }\n        if ((uVar1 & 0x20) != 0) {\n            arg_8h_01 = arg_8h_01 | 1;\n        }\n        if ((uVar1 & 2) != 0) {\n            arg_8h_01 = arg_8h_01 | 0x80000;\n        }\n        uVar2 = uVar1 & 0xc00;\n        if (uVar2 != 0) {\n            if (uVar2 == 0x400) {\n                arg_8h_01 = arg_8h_01 | 0x100;\n            }\n            else if (uVar2 == 0x800) {\n                arg_8h_01 = arg_8h_01 | 0x200;\n            }\n            else if (uVar2 == 0xc00) {\n                arg_8h_01 = arg_8h_01 | 0x300;\n            }\n        }\n        if ((uVar1 & 0x300) == 0) {\n            arg_8h_01 = arg_8h_01 | 0x20000;\n        }\n        else if ((uVar1 & 0x300) == 0x200) {\n            arg_8h_01 = arg_8h_01 | 0x10000;\n        }\n        if ((uVar1 & 0x1000) != 0) {\n            arg_8h_01 = arg_8h_01 | 0x40000;\n        }\n    }\n    uVar1 = arg_8h_01;\n    if (0 < *0x5dd3b8) {\n        uVar2 = 0;\n        if (in_MXCSR < '\\0') {\n            uVar2 = 0x10;\n        }\n        if ((in_MXCSR & 0x200) != 0) {\n            uVar2 = uVar2 | 8;\n        }\n        if ((in_MXCSR & 0x400) != 0) {\n            uVar2 = uVar2 | 4;\n        }\n        if ((in_MXCSR & 0x800) != 0) {\n            uVar2 = uVar2 | 2;\n        }\n        if ((in_MXCSR & 0x1000) != 0) {\n            uVar2 = uVar2 | 1;\n        }\n        if ((in_MXCSR & 0x100) != 0) {\n            uVar2 = uVar2 | 0x80000;\n        }\n        uVar1 = in_MXCSR & 0x6000;\n        if (uVar1 != 0) {\n            if (uVar1 == 0x2000) {\n                uVar2 = uVar2 | 0x100;\n            }\n            else if (uVar1 == 0x4000) {\n                uVar2 = uVar2 | 0x200;\n            }\n            else if (uVar1 == 0x6000) {\n                uVar2 = uVar2 | 0x300;\n            }\n        }\n        uVar1 = in_MXCSR & 0x8040;\n        if (uVar1 == 0x40) {\n            uVar2 = uVar2 | 0x2000000;\n        }\n        else if (uVar1 == 0x8000) {\n            uVar2 = uVar2 | 0x3000000;\n        }\n        else if (uVar1 == 0x8040) {\n            uVar2 = uVar2 | 0x1000000;\n        }\n        uVar1 = ~(arg_ch & 0x308031f) & uVar2 | arg_ch & 0x308031f & arg_8h;\n        if (uVar1 != uVar2) {\n            arg_8h_00 = fcn.00410603(uVar1);\n            fcn.00407ed1(arg_8h_00);\n            uVar2 = 0;\n            if (in_MXCSR < '\\0') {\n                uVar2 = 0x10;\n            }\n            if ((in_MXCSR & 0x200) != 0) {\n                uVar2 = uVar2 | 8;\n            }\n            if ((in_MXCSR & 0x400) != 0) {\n                uVar2 = uVar2 | 4;\n            }\n            if ((in_MXCSR & 0x800) != 0) {\n                uVar2 = uVar2 | 2;\n            }\n            if ((in_MXCSR & 0x1000) != 0) {\n                uVar2 = uVar2 | 1;\n            }\n            if ((in_MXCSR & 0x100) != 0) {\n                uVar2 = uVar2 | 0x80000;\n            }\n            uVar1 = in_MXCSR & 0x6000;\n            if (uVar1 != 0) {\n                if (uVar1 == 0x2000) {\n                    uVar2 = uVar2 | 0x100;\n                }\n                else if (uVar1 == 0x4000) {\n                    uVar2 = uVar2 | 0x200;\n                }\n                else if (uVar1 == 0x6000) {\n                    uVar2 = uVar2 | 0x300;\n                }\n            }\n            uVar1 = in_MXCSR & 0x8040;\n            if (uVar1 == 0x40) {\n                uVar2 = uVar2 | 0x2000000;\n            }\n            else if (uVar1 == 0x8000) {\n                uVar2 = uVar2 | 0x3000000;\n            }\n            else if (uVar1 == 0x8040) {\n                uVar2 = uVar2 | 0x1000000;\n            }\n        }\n        uVar1 = uVar2 | arg_8h_01;\n        if (((uVar2 ^ arg_8h_01) & 0x8031f) != 0) {\n            uVar1 = uVar1 | 0x80000000;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 2127
    },
    "00410bea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00410bea(uint16_t *lpWideCharStr, uint8_t *arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t var_10h;\n    int32_t var_8h;\n    uchar *var_4h;\n    \n    var_4h = &stack0xfffffffc;\n    if ((arg_ch == NULL) || (arg_10h == 0)) {\n        return 0;\n    }\n    if (*arg_ch == 0) {\n        if (lpWideCharStr == NULL) {\n            return 0;\n        }\n        *lpWideCharStr = 0;\n        return 0;\n    }\n    fcn.0040935d(arg_14h);\n    if (*(var_10h + 0xa8) == 0) {\n        if (lpWideCharStr != NULL) {\n            *lpWideCharStr = *arg_ch;\n        }\n        uVar4 = 1;\n        goto code_r0x00410cca;\n    }\n    iVar2 = fcn.0040e958(*arg_ch, &var_10h);\n    if (iVar2 == 0) {\n        uVar4 = 1;\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                          (*(var_10h + 4), 9, arg_ch, 1, lpWideCharStr, lpWideCharStr != NULL);\n        if (iVar2 != 0) goto code_r0x00410cca;\ncode_r0x00410cbc:\n        puVar3 = fcn.00405af7();\n        uVar4 = 0xffffffff;\n        *puVar3 = 0x2a;\n    }\n    else {\n        if (*(var_10h + 0x74) < 2) {\ncode_r0x00410c89:\n            uVar1 = *(var_10h + 0x74);\ncode_r0x00410c8c:\n            if ((arg_10h < uVar1) || (arg_ch[1] == 0)) goto code_r0x00410cbc;\n        }\n        else {\n            uVar1 = *(var_10h + 0x74);\n            if (arg_10h < *(var_10h + 0x74)) goto code_r0x00410c8c;\n            iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                              (*(var_10h + 4), 9, arg_ch, *(var_10h + 0x74), lpWideCharStr, lpWideCharStr != NULL);\n            if (iVar2 == 0) goto code_r0x00410c89;\n        }\n        uVar4 = *(var_10h + 0x74);\n    }\ncode_r0x00410cca:\n    if (var_4h != '\\0') {\n        *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n        return uVar4;\n    }\n    return uVar4;\n}\n",
        "token_count": 732
    },
    "00410d3a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410d3a(char *arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    uint32_t *puVar3;\n    int16_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puVar3 = arg_10h;\n    *arg_10h = 0;\n    arg_10h[1] = 0;\n    arg_10h[2] = 0;\n    if (arg_ch != 0) {\n        arg_10h = NULL;\n        var_ch = 0;\n        var_8h = 0;\n        do {\n            uVar6 = *puVar3;\n            uVar8 = puVar3[1];\n            uVar9 = puVar3[2];\n            uVar1 = var_ch * 4;\n            uVar7 = (arg_10h * 2 | var_ch >> 0x1f) * 2 | var_ch * 2 >> 0x1f;\n            *puVar3 = uVar1;\n            uVar10 = (var_8h * 2 | arg_10h >> 0x1f) * 2 | arg_10h * 2 >> 0x1f;\n            puVar3[1] = uVar7;\n            uVar5 = uVar6 + uVar1;\n            puVar3[2] = uVar10;\n            bVar2 = false;\n            if ((uVar5 < uVar1) || (uVar5 < uVar6)) {\n                bVar2 = true;\n            }\n            *puVar3 = uVar5;\n            uVar6 = uVar7;\n            if (bVar2) {\n                bVar2 = false;\n                uVar6 = uVar7 + 1;\n                if ((uVar6 < uVar7) || (uVar6 == 0)) {\n                    bVar2 = true;\n                }\n                puVar3[1] = uVar6;\n                if (bVar2) {\n                    uVar10 = uVar10 + 1;\n                    puVar3[2] = uVar10;\n                }\n            }\n            bVar2 = false;\n            uVar1 = uVar6 + uVar8;\n            if ((uVar1 < uVar6) || (uVar1 < uVar8)) {\n                bVar2 = true;\n            }\n            puVar3[1] = uVar1;\n            if (bVar2) {\n                uVar10 = uVar10 + 1;\n                puVar3[2] = uVar10;\n            }\n            uVar6 = uVar5 * 2;\n            uVar8 = uVar1 * 2 | uVar5 >> 0x1f;\n            var_8h = (uVar10 + uVar9) * 2 | uVar1 >> 0x1f;\n            *puVar3 = uVar6;\n            puVar3[1] = uVar8;\n            puVar3[2] = var_8h;\n            var_ch = uVar6 + *arg_8h;\n            if ((var_ch < uVar6) || (var_ch < *arg_8h)) {\n                bVar2 = true;\n            }\n            else {\n                bVar2 = false;\n            }\n            *puVar3 = var_ch;\n            arg_10h = uVar8;\n            if (bVar2) {\n                bVar2 = false;\n                arg_10h = uVar8 + 1;\n                if ((arg_10h < uVar8) || (arg_10h == NULL)) {\n                    bVar2 = true;\n                }\n                puVar3[1] = arg_10h;\n                if (bVar2) {\n                    var_8h = var_8h + 1;\n                    puVar3[2] = var_8h;\n                }\n            }\n            arg_ch = arg_ch + -1;\n            puVar3[1] = arg_10h;\n            arg_8h = arg_8h + 1;\n            puVar3[2] = var_8h;\n        } while (arg_ch != 0);\n    }\n    iVar4 = 0x404e;\n    if (puVar3[2] == 0) {\n        uVar6 = puVar3[1];\n        iVar4 = 0x404e;\n        do {\n            uVar8 = uVar6 << 0x10 | *puVar3 >> 0x10;\n            uVar9 = uVar6 >> 0x10;\n            iVar4 = iVar4 + -0x10;\n            *puVar3 = *puVar3 << 0x10;\n            uVar6 = uVar8;\n        } while (uVar9 == 0);\n        puVar3[1] = uVar8;\n        puVar3[2] = uVar9;\n    }\n    uVar6 = puVar3[2];\n    if ((uVar6 & 0x8000) == 0) {\n        uVar8 = *puVar3;\n        uVar9 = puVar3[1];\n        do {\n            uVar5 = uVar9 * 2 | uVar8 >> 0x1f;\n            uVar1 = uVar6 * 2;\n            uVar6 = uVar1 | uVar9 >> 0x1f;\n            iVar4 = iVar4 + -1;\n            uVar8 = uVar8 * 2;\n            uVar9 = uVar5;\n        } while ((uVar1 & 0x8000) == 0);\n        *puVar3 = uVar8;\n        puVar3[1] = uVar5;\n        puVar3[2] = uVar6;\n    }\n    *(puVar3 + 10) = iVar4;\n    return;\n}\n",
        "token_count": 1392
    },
    "00405dff": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00405dff(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00404f20(0x4181e8, 0x10);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.00405ac3();\n        *puVar1 = 0;\n        puVar1 = fcn.00405af7();\n        *puVar1 = 9;\n    }\n    else {\n        if ((arg_8h_00 < 0) || (*0x5dde18 <= arg_8h_00)) {\n            puVar1 = fcn.00405ac3();\n            *puVar1 = 0;\n        }\n        else {\n            iVar3 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*((arg_8h_00 >> 5) * 4 + 0x5dd3c8) + 4 + iVar3) & 1) != 0) {\n                fcn.0040ba4c(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((arg_8h_00 >> 5) * 4 + 0x5dd3c8) + 4 + iVar3) & 1) == 0) {\n                    puVar1 = fcn.00405af7();\n                    *puVar1 = 9;\n                    puVar1 = fcn.00405ac3();\n                    *puVar1 = 0;\n                    uVar2 = 0xffffffff;\n                }\n                else {\n                    uVar2 = fcn.00405eee(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                }\n                *(unaff_EBP + -0x1c) = uVar2;\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00405ec6();\n                goto code_r0x00405ee8;\n            }\n            puVar1 = fcn.00405ac3();\n            *puVar1 = 0;\n        }\n        puVar1 = fcn.00405af7();\n        *puVar1 = 9;\n        fcn.004057d3();\n    }\ncode_r0x00405ee8:\n    fcn.00404f65();\n    return;\n}\n",
        "token_count": 650
    },
    "0040613b": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040613b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00404f20(0x418228, 0x10);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.00405ac3();\n        *puVar1 = 0;\n        puVar1 = fcn.00405af7();\n        *puVar1 = 9;\n        goto code_r0x00406249;\n    }\n    if ((arg_8h_00 < 0) || (*0x5dde18 <= arg_8h_00)) {\n        puVar1 = fcn.00405ac3();\n        *puVar1 = 0;\ncode_r0x00406236:\n        puVar1 = fcn.00405af7();\n        *puVar1 = 9;\n    }\n    else {\n        iVar3 = (arg_8h_00 & 0x1f) * 0x40;\n        if ((*(*((arg_8h_00 >> 5) * 4 + 0x5dd3c8) + 4 + iVar3) & 1) == 0) {\n            puVar1 = fcn.00405ac3();\n            *puVar1 = 0;\n            goto code_r0x00406236;\n        }\n        if (*(unaff_EBP + 0x10) < 0x80000000) {\n            fcn.0040ba4c(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*((arg_8h_00 >> 5) * 4 + 0x5dd3c8) + 4 + iVar3) & 1) == 0) {\n                puVar1 = fcn.00405af7();\n                *puVar1 = 9;\n                puVar1 = fcn.00405ac3();\n                *puVar1 = 0;\n                uVar2 = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.0040624f(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n            }\n            *(unaff_EBP + -0x1c) = uVar2;\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.00406227();\n            goto code_r0x00406249;\n        }\n        puVar1 = fcn.00405ac3();\n        *puVar1 = 0;\n        puVar1 = fcn.00405af7();\n        *puVar1 = 0x16;\n    }\n    fcn.004057d3();\ncode_r0x00406249:\n    fcn.00404f65();\n    return;\n}\n",
        "token_count": 740
    },
    "0040c767": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint8_t __cdecl fcn.0040c767(int32_t arg_8h)\n\n{\n    return -(arg_8h != 0) & 1;\n}\n",
        "token_count": 53
    },
    "0040d801": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040d801(uint arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00404f20(0x4185a0, 0x14);\n    iVar5 = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.00405af7();\n        *puVar1 = 9;\n        goto code_r0x0040d8e4;\n    }\n    if ((-1 < arg_8h_00) && (arg_8h_00 < *0x5dde18)) {\n        *(unaff_EBP + -0x20) = arg_8h_00 >> 5;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n        if ((*(iVar4 + 4 + *((arg_8h_00 >> 5) * 4 + 0x5dd3c8)) & 1) != 0) {\n            fcn.0040ba4c(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(iVar4 + 4 + *(*(unaff_EBP + -0x20) * 4 + 0x5dd3c8)) & 1) == 0) {\ncode_r0x0040d8a2:\n                puVar1 = fcn.00405af7();\n                *puVar1 = 9;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.0040bb60(arg_8h_00);\n                iVar4 = (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(uVar2);\n                if (iVar4 == 0) {\n                    iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                }\n                *(unaff_EBP + -0x1c) = iVar5;\n                if (iVar5 != 0) {\n                    piVar3 = fcn.00405ac3();\n                    *piVar3 = iVar5;\n                    goto code_r0x0040d8a2;\n                }\n            }\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.0040d8c9();\n            goto code_r0x0040d8e4;\n        }\n    }\n    puVar1 = fcn.00405af7();\n    *puVar1 = 9;\n    fcn.004057d3();\ncode_r0x0040d8e4:\n    fcn.00404f65();\n    return;\n}\n",
        "token_count": 709
    },
    "0040d8ea": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040d8ea(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00404f20(0x4185c0, 0x10);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.00405ac3();\n        *puVar1 = 0;\n        puVar1 = fcn.00405af7();\n        *puVar1 = 9;\n    }\n    else {\n        if ((arg_8h_00 < 0) || (*0x5dde18 <= arg_8h_00)) {\n            puVar1 = fcn.00405ac3();\n            *puVar1 = 0;\n        }\n        else {\n            iVar3 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*((arg_8h_00 >> 5) * 4 + 0x5dd3c8) + 4 + iVar3) & 1) != 0) {\n                fcn.0040ba4c(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((arg_8h_00 >> 5) * 4 + 0x5dd3c8) + 4 + iVar3) & 1) == 0) {\n                    puVar1 = fcn.00405af7();\n                    *puVar1 = 9;\n                    puVar1 = fcn.00405ac3();\n                    *puVar1 = 0;\n                    uVar2 = 0xffffffff;\n                }\n                else {\n                    uVar2 = fcn.0040d9d9(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                }\n                *(unaff_EBP + -0x1c) = uVar2;\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040d9b1();\n                goto code_r0x0040d9d3;\n            }\n            puVar1 = fcn.00405ac3();\n            *puVar1 = 0;\n        }\n        puVar1 = fcn.00405af7();\n        *puVar1 = 9;\n        fcn.004057d3();\n    }\ncode_r0x0040d9d3:\n    fcn.00404f65();\n    return;\n}\n",
        "token_count": 661
    },
    "00410a45": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00410a45(uint arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00404f20(0x418600, 0x10);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.00405ac3();\n        *puVar1 = 0;\n        puVar1 = fcn.00405af7();\n        *puVar1 = 9;\n    }\n    else {\n        if ((arg_8h_00 < 0) || (*0x5dde18 <= arg_8h_00)) {\n            puVar1 = fcn.00405ac3();\n            *puVar1 = 0;\n        }\n        else {\n            iVar3 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*((arg_8h_00 >> 5) * 4 + 0x5dd3c8) + 4 + iVar3) & 1) != 0) {\n                fcn.0040ba4c(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((arg_8h_00 >> 5) * 4 + 0x5dd3c8) + 4 + iVar3) & 1) == 0) {\n                    puVar1 = fcn.00405af7();\n                    *puVar1 = 9;\n                    uVar2 = 0xffffffff;\n                }\n                else {\n                    uVar2 = fcn.00410b20(arg_8h_00);\n                }\n                *(unaff_EBP + -0x1c) = uVar2;\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00410af8();\n                goto code_r0x00410b1a;\n            }\n            puVar1 = fcn.00405ac3();\n            *puVar1 = 0;\n        }\n        puVar1 = fcn.00405af7();\n        *puVar1 = 9;\n        fcn.004057d3();\n    }\ncode_r0x00410b1a:\n    fcn.00404f65();\n    return;\n}\n",
        "token_count": 599
    },
    "0040519a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nushort fcn.0040519a(void)\n\n{\n    uint lpStartupInfo;\n    uint var_18h;\n    uint var_14h;\n    \n    (*_sym.imp.KERNEL32.dll_GetStartupInfoW)(&lpStartupInfo);\n    if ((var_18h & 1) == 0) {\n        var_14h._0_2_ = 10;\n    }\n    return var_14h;\n}\n",
        "token_count": 102
    },
    "004077d6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004077d6(uint32_t arg_8h)\n\n{\n    int32_t iStack8;\n    \n    if ((arg_8h & 0x20) == 0) {\n        if ((arg_8h & 8) != 0) {\n            return 1;\n        }\n        if ((arg_8h & 4) == 0) {\n            if ((arg_8h & 1) == 0) {\n                return (arg_8h & 2) * 2;\n            }\n            iStack8 = 3;\n        }\n        else {\n            iStack8 = 2;\n        }\n    }\n    else {\n        iStack8 = 5;\n    }\n    return iStack8;\n}\n",
        "token_count": 166
    },
    "00407f83": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00407f83(uint32_t arg_8h)\n\n{\n    return;\n}\n",
        "token_count": 39
    },
    "00409260": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint64_t fcn.00409260(uint *param_1, uint8_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    \n    if ((param_1 & 3) != 0) {\n        if ((param_1 & 1) != 0) {\n            uVar3 = *param_1;\n            param_1 = param_1 + 1;\n            bVar4 = uVar3 < *param_2;\n            if (uVar3 != *param_2) goto code_r0x004092a8;\n            param_2 = param_2 + 1;\n            if (uVar3 == 0) goto code_r0x004092a0;\n            if ((param_1 & 2) == 0) goto code_r0x00409270;\n        }\n        uVar1 = *param_1;\n        param_1 = param_1 + 2;\n        uVar3 = uVar1;\n        bVar4 = uVar3 < *param_2;\n        if (uVar3 != *param_2) {\ncode_r0x004092a8:\n            return CONCAT44(param_1, -bVar4) | 1;\n        }\n        if (uVar3 == 0) goto code_r0x004092a0;\n        uVar3 = uVar1 >> 8;\n        bVar4 = uVar3 < param_2[1];\n        if (uVar3 != param_2[1]) goto code_r0x004092a8;\n        if (uVar3 == 0) goto code_r0x004092a0;\n        param_2 = param_2 + 2;\n    }\ncode_r0x00409270:\n    do {\n        uVar2 = *param_1;\n        uVar3 = uVar2;\n        bVar4 = uVar3 < *param_2;\n        if (uVar3 != *param_2) goto code_r0x004092a8;\n        if (uVar3 == 0) break;\n        uVar3 = uVar2 >> 8;\n        bVar4 = uVar3 < param_2[1];\n        if (uVar3 != param_2[1]) goto code_r0x004092a8;\n        if (uVar3 == 0) break;\n        uVar3 = uVar2 >> 0x10;\n        bVar4 = uVar3 < param_2[2];\n        if (uVar3 != param_2[2]) goto code_r0x004092a8;\n        if (uVar3 == 0) break;\n        uVar3 = uVar2 >> 0x18;\n        bVar4 = uVar3 < param_2[3];\n        if (uVar3 != param_2[3]) goto code_r0x004092a8;\n        param_2 = param_2 + 4;\n        param_1 = param_1 + 1;\n    } while (uVar3 != 0);\ncode_r0x004092a0:\n    return ZEXT48(param_1) << 0x20;\n}\n",
        "token_count": 705
    },
    "0040b1bb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040b1bb(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *arg_ch;\n    uint *puVar4;\n    int32_t unaff_EBP;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00404f20(0x4184d8, 0x10);\n    iVar2 = fcn.00408120();\n    *(unaff_EBP + -0x20) = iVar2;\n    fcn.0040b115();\n    iVar2 = *(iVar2 + 0x68);\n    iVar3 = fcn.0040aeb6(*(unaff_EBP + 8));\n    *(unaff_EBP + 8) = iVar3;\n    if ((iVar3 != *(iVar2 + 4)) && (arg_ch = fcn.00404e84(0x220),  arg_ch != NULL)) {\n        piVar5 = *(*(unaff_EBP + -0x20) + 0x68);\n        piVar6 = arg_ch;\n        for (iVar2 = 0x88; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *piVar6 = *piVar5;\n            piVar5 = piVar5 + 1;\n            piVar6 = piVar6 + 1;\n        }\n        iVar3 = 0;\n        *arg_ch = 0;\n        iVar2 = fcn.0040b363(*(unaff_EBP + 8), arg_ch);\n        *(unaff_EBP + 8) = iVar2;\n        if (iVar2 == 0) {\n            iVar2 = *(unaff_EBP + -0x20);\n            LOCK();\n            iVar1 = **(iVar2 + 0x68) + -1;\n            **(iVar2 + 0x68) = iVar1;\n            if ((iVar1 == 0) && (*(iVar2 + 0x68) != 0x41e8c0)) {\n                fcn.00404ad2(*(iVar2 + 0x68));\n                iVar2 = *(unaff_EBP + -0x20);\n            }\n            *(iVar2 + 0x68) = arg_ch;\n            LOCK();\n            *arg_ch = *arg_ch + 1;\n            if (((*(*(unaff_EBP + -0x20) + 0x70) & 2) == 0) && ((*0x41ee30 & 1) == 0)) {\n                fcn.0040ab8a(0xd);\n                *(unaff_EBP + -4) = 0;\n                *0x5ddd8c = arg_ch[1];\n                *0x5ddd90 = arg_ch[2];\n                *0x5ddda0 = arg_ch[0x87];\n                for (iVar2 = 0; *(unaff_EBP + -0x1c) = iVar2,  iVar2 < 5; iVar2 = iVar2 + 1) {\n                    *(iVar2 * 2 + 0x5ddd94) = *(arg_ch + iVar2 * 2 + 0xc);\n                }\n                for (iVar2 = 0; *(unaff_EBP + -0x1c) = iVar2,  iVar2 < 0x101; iVar2 = iVar2 + 1) {\n                    *(iVar2 + 0x41e6b8) = *(iVar2 + 0x18 + arg_ch);\n                }\n                for (; *(unaff_EBP + -0x1c) = iVar3,  iVar3 < 0x100; iVar3 = iVar3 + 1) {\n                    *(iVar3 + 0x41e7c0) = *(iVar3 + 0x119 + arg_ch);\n                }\n                LOCK();\n                iVar2 = **0x41eae4;\n                **0x41eae4 = iVar2 + -1;\n                if ((iVar2 + -1 == 0) && (*0x41eae4 != 0x41e8c0)) {\n                    fcn.00404ad2(*0x41eae4);\n                }\n                LOCK();\n                *0x41eae4 = arg_ch;\n                *arg_ch = *arg_ch + 1;\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040b32d();\n            }\n        }\n        else if (iVar2 == -1) {\n            if (arg_ch != 0x41e8c0) {\n                fcn.00404ad2(arg_ch);\n            }\n            puVar4 = fcn.00405af7();\n            *puVar4 = 0x16;\n        }\n    }\n    fcn.00404f65();\n    return;\n}\n",
        "token_count": 1109
    },
    "0040bb60": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040bb60(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar2 = fcn.00405ac3();\n        *puVar2 = 0;\n        puVar2 = fcn.00405af7();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h) && (arg_8h < *0x5dde18)) {\n            iVar3 = (arg_8h & 0x1f) * 0x40;\n            iVar1 = *((arg_8h >> 5) * 4 + 0x5dd3c8);\n            if ((*(iVar1 + 4 + iVar3) & 1) != 0) {\n                return *(iVar1 + iVar3);\n            }\n        }\n        puVar2 = fcn.00405ac3();\n        *puVar2 = 0;\n        puVar2 = fcn.00405af7();\n        *puVar2 = 9;\n        fcn.004057d3();\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 276
    },
    "0040d184": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.0040d184(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    code *pcVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    uint arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    code *var_18h;\n    code *var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    pcVar6 = _sym.imp.KERNEL32.dll_EncodePointer;\n    var_4h = *0x41dec0 ^ &stack0xfffffffc;\n    var_1ch = arg_8h;\n    iVar7 = 0;\n    arg_8h_00 = 0;\n    var_20h = arg_ch;\n    pcVar1 = (*_sym.imp.KERNEL32.dll_EncodePointer)();\n    var_18h = pcVar1;\n    var_14h = fcn.004051eb();\n    if (*0x5dddf0 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"USER32.DLL\", 0, 0x800);\n        if (((iVar2 == 0) &&\n            ((iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 != 0x57 ||\n             (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"USER32.DLL\", 0, 0),  iVar2 == 0)))) ||\n           (iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxW\"),  iVar3 == 0)) goto code_r0x0040d359;\n        *0x5dddf0 = (*pcVar6)(iVar3);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetActiveWindow\");\n        *0x5dddf4 = (*pcVar6)(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetLastActivePopup\");\n        *0x5dddf8 = (*pcVar6)(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetUserObjectInformationW\");\n        *0x5dde00 = (*pcVar6)(uVar4);\n        pcVar1 = var_18h;\n        if (*0x5dde00 != NULL) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetProcessWindowStation\");\n            *0x5dddfc = (*pcVar6)(uVar4);\n            pcVar1 = var_18h;\n        }\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar2 == 0) {\n        if (var_14h != NULL) {\n            (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x5dddf0);\n            goto code_r0x0040d359;\n        }\n    }\n    else {\n        if (var_1ch != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(var_1ch);\n        }\n        if (var_14h != NULL) goto code_r0x0040d359;\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x5dddfc == pcVar1) || (*0x5dde00 == pcVar1)) {\ncode_r0x0040d30f:\n        if ((((*0x5dddf4 != pcVar1) && (pcVar5 = (*pcVar6)(*0x5dddf4),  pcVar5 != NULL)) &&\n            (iVar7 = (*pcVar5)(),  iVar7 != 0)) &&\n           ((*0x5dddf8 != pcVar1 && (pcVar1 = (*pcVar6)(*0x5dddf8),  pcVar1 != NULL)))) {\n            iVar7 = (*pcVar1)(iVar7);\n        }\n    }\n    else {\n        var_14h = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x5dddfc);\n        var_18h = (*pcVar6)(*0x5dde00);\n        if (((var_14h == NULL) || (var_18h == NULL)) ||\n           (((iVar2 = (*var_14h)(),  iVar2 != 0 && (iVar2 = (*var_18h)(iVar2, 1, &var_10h, 0xc, &var_24h),  iVar2 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x0040d30f;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x5dddf0);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(iVar7, var_1ch, var_20h, arg_10h);\n    }\ncode_r0x0040d359:\n    fcn.00403a01(arg_8h_00);\n    return;\n}\n",
        "token_count": 1221
    },
    "00410603": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t __cdecl fcn.00410603(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = 0;\n    if ((arg_8h & 0x10) != 0) {\n        uVar1 = 0x80;\n    }\n    if ((arg_8h & 8) != 0) {\n        uVar1 = uVar1 | 0x200;\n    }\n    if ((arg_8h & 4) != 0) {\n        uVar1 = uVar1 | 0x400;\n    }\n    if ((arg_8h & 2) != 0) {\n        uVar1 = uVar1 | 0x800;\n    }\n    if ((arg_8h & 1) != 0) {\n        uVar1 = uVar1 | 0x1000;\n    }\n    if ((arg_8h & 0x80000) != 0) {\n        uVar1 = uVar1 | 0x100;\n    }\n    uVar2 = arg_8h & 0x300;\n    if (uVar2 != 0) {\n        if (uVar2 == 0x100) {\n            uVar1 = uVar1 | 0x2000;\n        }\n        else if (uVar2 == 0x200) {\n            uVar1 = uVar1 | 0x4000;\n        }\n        else if (uVar2 == 0x300) {\n            uVar1 = uVar1 | 0x6000;\n        }\n    }\n    arg_8h = arg_8h & 0x3000000;\n    if (arg_8h == 0x1000000) {\n        uVar1 = uVar1 | 0x8040;\n    }\n    else {\n        if (arg_8h == 0x2000000) {\n            return uVar1 | 0x40;\n        }\n        if (arg_8h == 0x3000000) {\n            return uVar1 | 0x8000;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 497
    },
    "004109ae": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t __cdecl fcn.004109ae(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = (arg_8h & 0x10) != 0;\n    if ((arg_8h & 8) != 0) {\n        uVar1 = uVar1 | 4;\n    }\n    if ((arg_8h & 4) != 0) {\n        uVar1 = uVar1 | 8;\n    }\n    if ((arg_8h & 2) != 0) {\n        uVar1 = uVar1 | 0x10;\n    }\n    if ((arg_8h & 1) != 0) {\n        uVar1 = uVar1 | 0x20;\n    }\n    if ((arg_8h & 0x80000) != 0) {\n        uVar1 = uVar1 | 2;\n    }\n    uVar2 = arg_8h & 0x300;\n    if (uVar2 != 0) {\n        if (uVar2 == 0x100) {\n            uVar1 = uVar1 | 0x400;\n        }\n        else if (uVar2 == 0x200) {\n            uVar1 = uVar1 | 0x800;\n        }\n        else if (uVar2 == 0x300) {\n            uVar1 = uVar1 | 0xc00;\n        }\n    }\n    if ((arg_8h & 0x30000) == 0) {\n        uVar1 = uVar1 | 0x300;\n    }\n    else if ((arg_8h & 0x30000) == 0x10000) {\n        uVar1 = uVar1 | 0x200;\n    }\n    if ((arg_8h & 0x40000) != 0) {\n        uVar1 = uVar1 | 0x1000;\n    }\n    return uVar1;\n}\n",
        "token_count": 464
    },
    "0040ce10": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.0040ce10(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    bool bVar10;\n    char cVar11;\n    uint32_t uVar9;\n    \n    cVar11 = param_2 < 0;\n    if (cVar11) {\n        bVar10 = param_1 != 0;\n        param_1 = -param_1;\n        param_2 = -bVar10 - param_2;\n    }\n    if (param_4 < 0) {\n        cVar11 = cVar11 + '\\x01';\n        bVar10 = param_3 != 0;\n        param_3 = -param_3;\n        param_4 = -bVar10 - param_4;\n    }\n    uVar3 = param_1;\n    uVar5 = param_3;\n    uVar6 = param_2;\n    uVar9 = param_4;\n    if (param_4 == 0) {\n        uVar3 = param_2 / param_3;\n        iVar4 = (param_2 % param_3 << 0x20 | param_1) / param_3;\n    }\n    else {\n        do {\n            uVar8 = uVar9 >> 1;\n            uVar5 = uVar5 >> 1 | ((uVar9 & 1) != 0) << 0x1f;\n            uVar7 = uVar6 >> 1;\n            uVar3 = uVar3 >> 1 | ((uVar6 & 1) != 0) << 0x1f;\n            uVar6 = uVar7;\n            uVar9 = uVar8;\n        } while (uVar8 != 0);\n        uVar1 = CONCAT44(uVar7, uVar3) / uVar5;\n        iVar4 = uVar1;\n        iVar2 = param_3 * (uVar1 & 0xffffffff);\n        uVar3 = iVar2 >> 0x20;\n        uVar5 = uVar3 + iVar4 * param_4;\n        if (((CARRY4(uVar3, iVar4 * param_4)) || (param_2 < uVar5)) || ((param_2 <= uVar5 && (param_1 < iVar2)))) {\n            iVar4 = iVar4 + -1;\n        }\n        uVar3 = 0;\n    }\n    if (cVar11 == '\\x01') {\n        bVar10 = iVar4 != 0;\n        iVar4 = -iVar4;\n        uVar3 = -bVar10 - uVar3;\n    }\n    return CONCAT44(uVar3, iVar4);\n}\n",
        "token_count": 652
    },
    "00403234": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00403234(uint arg_8h)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t **arg_8h_00;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00404f20(0x418148, 0xc);\n    iVar5 = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == NULL) {\n        puVar2 = fcn.00405af7();\n        *puVar2 = 0x16;\n        fcn.004057d3();\n        goto code_r0x00403319;\n    }\n    fcn.004059ed(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar3 = fcn.0040592f(arg_8h_00);\n        if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n            iVar4 = 0x41e2d8;\n        }\n        else {\n            iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x5dd3c8);\n        }\n        if ((*(iVar4 + 0x24) & 0x7f) == 0) {\n            if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n                iVar4 = 0x41e2d8;\n            }\n            else {\n                iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x5dd3c8);\n            }\n            if ((*(iVar4 + 0x24) & 0x80) == 0) goto code_r0x004032ec;\n        }\n        puVar2 = fcn.00405af7();\n        *puVar2 = 0x16;\n        fcn.004057d3();\n        iVar5 = -1;\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x004032ec:\n    if (iVar5 == 0) {\n        ppuVar1 = arg_8h_00 + 1;\n        *ppuVar1 = *ppuVar1 + -1;\n        if (*ppuVar1 < 0) {\n            uVar3 = fcn.0040580e(arg_8h_00);\n        }\n        else {\n            uVar3 = **arg_8h_00;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar3;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00403325();\ncode_r0x00403319:\n    fcn.00404f65();\n    return;\n}\n",
        "token_count": 770
    },
    "00403c8f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.00403c8f(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t *arg_14h, uint32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = *(arg_8h + 0xc);\n    iVar1 = *(arg_8h + 0x10);\n    uVar3 = uVar2;\n    var_4h = uVar2;\n    if (-1 < arg_ch) {\n        do {\n            if (uVar2 == 0xffffffff) {\n                fcn.0040833c();\n            }\n            uVar2 = uVar2 - 1;\n            if (((*(uVar2 * 0x14 + 4 + iVar1) < arg_10h) && (arg_10h <= *(uVar2 * 0x14 + 8 + iVar1))) ||\n               (uVar2 == 0xffffffff)) {\n                arg_ch = arg_ch + -1;\n                uVar3 = var_4h;\n                var_4h = uVar2;\n            }\n        } while (-1 < arg_ch);\n    }\n    uVar2 = uVar2 + 1;\n    *arg_14h = uVar2;\n    *arg_18h = uVar3;\n    if ((*(arg_8h + 0xc) <= uVar3 && uVar3 != *(arg_8h + 0xc)) || (uVar3 < uVar2)) {\n        fcn.0040833c();\n    }\n    return uVar2 * 0x14 + iVar1;\n}\n",
        "token_count": 412
    },
    "00404e3c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.00404e3c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t dwMilliseconds;\n    \n    dwMilliseconds = 0;\n    while( true ) {\n        iVar1 = fcn.0040b5f9(arg_8h, arg_ch, 0);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x5dd3b4 == 0) break;\n        fcn.004054c4(dwMilliseconds);\n        dwMilliseconds = dwMilliseconds + 1000;\n        if (*0x5dd3b4 < dwMilliseconds) {\n            dwMilliseconds = 0xffffffff;\n        }\n        if (dwMilliseconds == 0xffffffff) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 198
    },
    "00404e84": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.00404e84(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t dwMilliseconds;\n    \n    dwMilliseconds = 0;\n    while( true ) {\n        uVar1 = *0x5dd3b4;\n        iVar2 = fcn.00404a0d(arg_8h);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        if (uVar1 == 0) break;\n        fcn.004054c4(dwMilliseconds);\n        dwMilliseconds = dwMilliseconds + 1000;\n        if (*0x5dd3b4 < dwMilliseconds) {\n            dwMilliseconds = 0xffffffff;\n        }\n        if (dwMilliseconds == 0xffffffff) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 204
    },
    "00404ecb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404ecb(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t dwMilliseconds;\n    \n    dwMilliseconds = 0;\n    do {\n        iVar1 = fcn.0040b54e(arg_8h, arg_ch);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (arg_ch == 0) {\n            return 0;\n        }\n        if (*0x5dd3b4 == 0) {\n            return 0;\n        }\n        fcn.004054c4(dwMilliseconds);\n        dwMilliseconds = dwMilliseconds + 1000;\n        if (*0x5dd3b4 < dwMilliseconds) {\n            dwMilliseconds = 0xffffffff;\n        }\n    } while (dwMilliseconds != 0xffffffff);\n    return 0;\n}\n",
        "token_count": 191
    },
    "00405676": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_328h\n// WARNING: Variable defined which should be unmapped: var_22ch\n// WARNING: Variable defined which should be unmapped: var_20ch\n// WARNING: Variable defined which should be unmapped: var_230h\n// WARNING: Variable defined which should be unmapped: var_234h\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00405676(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint extraout_EDX;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint *puStackY828;\n    uint uStackY824;\n    uint *var_328h;\n    uint *var_324h;\n    uint var_320h;\n    uint var_31ch;\n    uint var_314h;\n    uint var_2d0h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint *var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint32_t var_210h;\n    uchar *var_20ch;\n    uint var_208h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41dec0 ^ &stack0xfffffffc;\n    if (arg_8h != -1) {\n        uStackY824 = 0x405698;\n        fcn.00405114();\n    }\n    var_320h = 0;\n    puStackY828 = &fcn.00405676::var_31ch;\n    uStackY824 = 0;\n    fcn.004044c0();\n    var_328h = &fcn.00405676::var_320h;\n    var_324h = &fcn.00405676::var_2d0h;\n    var_210h = (in_NT & 1) * 0x4000 | SCARRY4(&stack0xfffffcc4, 0xc) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100\n               | (&stack0xfffffcd0 < 0) * 0x80 | (*0x10 == 0x330) * 0x40 | (in_AF & 1) * 0x10 |\n               ((POPCOUNT(&stack0xfffffcd0 & 0xff) & 1U) == 0) * 4 | 0xfffffff3 < &stack0xfffffcc4 |\n               (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    var_2d0h = 0x10001;\n    var_320h = arg_ch;\n    var_31ch = arg_10h;\n    var_228h = extraout_EDX;\n    var_220h = var_324h;\n    var_20ch = *0x10;\n    iVar1 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    uStackY824 = 0x405774;\n    iVar2 = fcn.004054e7(&fcn.00405676::var_328h);\n    if (((iVar2 == 0) && (iVar1 == 0)) && (arg_8h != -1)) {\n        uStackY824 = 0x40578b;\n        fcn.00405114();\n    }\n    fcn.00403a01(var_328h);\n    return;\n}\n",
        "token_count": 930
    },
    "0040580e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t __cdecl fcn.0040580e(uint8_t **arg_8h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint arg_8h_00;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t *arg_ch;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.00405af7();\n        *puVar2 = 0x16;\n        fcn.004057d3();\n    }\n    else {\n        puVar3 = arg_8h[3];\n        if (((puVar3 & 0x83) != 0) && ((puVar3 & 0x40) == 0)) {\n            if ((puVar3 & 2) == 0) {\n                arg_8h[3] = puVar3 | 1;\n                if ((puVar3 & 0x10c) == 0) {\n                    fcn.0040b7d2(arg_8h);\n                }\n                else {\n                    *arg_8h = arg_8h[2];\n                }\n                puVar3 = arg_8h[6];\n                arg_ch = arg_8h[2];\n                arg_8h_00 = fcn.0040592f(arg_8h);\n                puVar3 = fcn.0040613b(arg_8h_00, arg_ch, puVar3);\n                arg_8h[1] = puVar3;\n                if ((puVar3 != NULL) && (puVar3 != 0xffffffff)) {\n                    if ((*(arg_8h + 3) & 0x82) == 0) {\n                        iVar4 = fcn.0040592f(arg_8h);\n                        if ((iVar4 == -1) || (iVar4 = fcn.0040592f(arg_8h),  iVar4 == -2)) {\n                            iVar4 = 0x41e2d8;\n                        }\n                        else {\n                            iVar4 = fcn.0040592f(arg_8h);\n                            uVar5 = fcn.0040592f(arg_8h);\n                            iVar4 = (uVar5 & 0x1f) * 0x40 + *((iVar4 >> 5) * 4 + 0x5dd3c8);\n                        }\n                        if ((*(iVar4 + 4) & 0x82) == 0x82) {\n                            arg_8h[3] = arg_8h[3] | 0x2000;\n                        }\n                    }\n                    if (((arg_8h[6] == 0x200) && ((*(arg_8h + 3) & 8) != 0)) && ((arg_8h[3] & 0x400) == 0)) {\n                        arg_8h[6] = 0x1000;\n                    }\n                    arg_8h[1] = arg_8h[1] + -1;\n                    uVar1 = **arg_8h;\n                    *arg_8h = *arg_8h + 1;\n                    return uVar1;\n                }\n                arg_8h[3] = arg_8h[3] | (-(puVar3 != NULL) & 0x10) + 0x10;\n                arg_8h[1] = NULL;\n            }\n            else {\n                arg_8h[3] = puVar3 | 0x20;\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 803
    },
    "0040825a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040825a(void)\n\n{\n    int32_t iVar1;\n    uint *arg_ch;\n    uint uVar2;\n    \n    fcn.00404c26();\n    iVar1 = fcn.0040acbb();\n    if (iVar1 != 0) {\n        *0x41e564 = fcn.0040511c(0x407feb);\n        if (*0x41e564 != -1) {\n            arg_ch = fcn.00404e3c(1, 0x3bc);\n            if (arg_ch != NULL) {\n                iVar1 = fcn.00405178(*0x41e564, arg_ch);\n                if (iVar1 != 0) {\n                    fcn.004081a7(arg_ch, 0);\n                    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n                    arg_ch[1] = 0xffffffff;\n                    *arg_ch = uVar2;\n                    return 1;\n                }\n            }\n            fcn.004082d0();\n            return 0;\n        }\n    }\n    fcn.004082d0();\n    return 0;\n}\n",
        "token_count": 250
    },
    "0040d0c6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d0c6(int16_t *arg_8h, int32_t arg_ch, int16_t *arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x0040d0e5:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = 0;\n                    return 0;\n                }\n                if (arg_10h != NULL) {\n                    iVar5 = arg_ch;\n                    if (arg_14h == -1) {\n                        iVar3 = arg_8h - arg_10h;\n                        do {\n                            iVar1 = *arg_10h;\n                            *(iVar3 + arg_10h) = iVar1;\n                            arg_10h = arg_10h + 1;\n                            if (iVar1 == 0) break;\n                            iVar5 = iVar5 + -1;\n                        } while (iVar5 != 0);\n                    }\n                    else {\n                        piVar4 = arg_8h;\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar4);\n                            *piVar4 = iVar1;\n                            piVar4 = piVar4 + 1;\n                            if ((iVar1 == 0) || (iVar5 = iVar5 + -1,  iVar5 == 0)) break;\n                            arg_14h = arg_14h + -1;\n                        } while (arg_14h != 0);\n                        if (arg_14h == 0) {\n                            *piVar4 = 0;\n                        }\n                    }\n                    if (iVar5 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = 0;\n                        return 0x50;\n                    }\n                    *arg_8h = 0;\n                    puVar2 = fcn.00405af7();\n                    uVar6 = 0x22;\n                    goto code_r0x0040d10a;\n                }\n                *arg_8h = 0;\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x0040d0e5;\n    puVar2 = fcn.00405af7();\n    uVar6 = 0x16;\ncode_r0x0040d10a:\n    *puVar2 = uVar6;\n    fcn.004057d3();\n    return uVar6;\n}\n",
        "token_count": 638
    },
    "00410cf7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t __cdecl fcn.00410cf7(uint32_t lpBuffer)\n\n{\n    uint32_t uVar1;\n    uint lpNumberOfCharsWritten;\n    \n    if (*0x41f1a4 == -2) {\n        fcn.00410f31();\n    }\n    if ((*0x41f1a4 != -1) &&\n       (uVar1 = (*_sym.imp.KERNEL32.dll_WriteConsoleW)(*0x41f1a4, &lpBuffer, 1, &lpNumberOfCharsWritten, 0),  uVar1 != 0\n       )) {\n        return uVar1 & 0xffff0000 | lpBuffer & 0xffff;\n    }\n    return 0xffff;\n}\n",
        "token_count": 173
    },
    "00401ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __fastcall fcn.00401ce0(uint32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint8_t uVar5;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = *param_1;\n    var_10h = param_1[1];\n    iVar1 = *param_2;\n    if (*0x5dcfb0 == 0xe5a) {\n        (*_sym.imp.KERNEL32.dll_PurgeComm)(0, 0);\n    }\n    iVar2 = param_2[1];\n    if (*0x5dcfb0 == 0xfb2) {\n        (*_sym.imp.KERNEL32.dll_GetOverlappedResult)(0, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)(0, 0, 0, 0);\n    }\n    iVar3 = param_2[2];\n    iVar4 = param_2[3];\n    for (var_1ch = 0; var_1ch < 0x20; var_1ch = var_1ch + 1) {\n        if (*0x5dcfb0 == 0x55e) {\n            (*_sym.imp.KERNEL32.dll_ConnectNamedPipe)(0, 0);\n            (*_sym.imp.KERNEL32.dll_DisconnectNamedPipe)(0);\n        }\n        *0x5dcfe0 = 0xdf3a1ab4;\n        *0x5dcfe8 = 0;\n        var_10h = var_10h - (var_ch * 0x10 + iVar3 ^ var_ch + 0xc6ef3720 ^ (var_ch >> 5) + iVar4);\n        uVar5 = fcn.00401760();\n        if (*0x5dcfb0 == 0x572) {\n            *0x5dcff8 = 0xa0948356;\n            *0x5dcffc = 0xffffffff;\n        }\n        var_ch = var_ch - ((var_10h << (uVar5 & 0x1f)) + iVar1 ^ var_10h + 0xc6ef3720 ^ (var_10h >> 5) + iVar2);\n        if (*0x5dcfb0 == 0x6bb) {\n            (*_sym.imp.KERNEL32.dll_ReadConsoleInputA)(0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_FatalAppExitW)(0, 0);\n            (*_sym.imp.KERNEL32.dll_GetSystemPowerStatus)(0);\n            (*_sym.imp.KERNEL32.dll_AddAtomA)(0);\n            (*_sym.imp.KERNEL32.dll_SetProcessPriorityBoost)(0, 0);\n            (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesA)(0, 0, 0, 0, 0);\n        }\n        fcn.00401cb0();\n    }\n    *param_1 = var_ch;\n    param_1[1] = var_10h;\n    return;\n}\n",
        "token_count": 819
    },
    "0040bcb7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040bcb7(uint param_1, int32_t param_2)\n\n{\n    float10 fVar1;\n    char cVar2;\n    uint8_t uVar3;\n    ushort uVar4;\n    int32_t unaff_EBP;\n    float10 in_ST0;\n    float10 in_ST1;\n    uint var_a2h;\n    uint var_94h;\n    uint var_90h;\n    \n    if (*(param_2 + 0xe) == '\\x05') {\n        uVar4 = CONCAT31(*(unaff_EBP + -0xa4) >> 8 & 0xfe | 2, 0x3f);\n    }\n    else {\n        uVar4 = 0x133f;\n    }\n    *(unaff_EBP + -0xa2) = uVar4;\n    fVar1 = 0;\n    *(unaff_EBP + -0x94) = param_2;\n    *(unaff_EBP + -0xa0) = (in_ST0 < fVar1) << 9 | (in_ST0 != fVar1) << 10 | (in_ST0 == fVar1) << 0xe;\n    *(unaff_EBP + -0x90) = 0;\n    fVar1 = 0;\n    *(unaff_EBP + -0xa0) = (in_ST1 < fVar1) << 9 | (in_ST1 != fVar1) << 10 | (in_ST1 == fVar1) << 0xe;\n    uVar3 = (*(unaff_EBP + -0x9f) << 1) >> 1;\n    cVar2 = (*(unaff_EBP + -0x9f) << 1) >> 1;\n    // WARNING: Could not recover jumptable at 0x0040bd41. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(param_2 + (*(((cVar2 << 1 | cVar2 < '\\0') & 0xf) + 0x41678c) |\n                  *(((uVar3 & 7) << 1 | uVar3 < '\\0') + 0x41678c) << 2) + 0x10))();\n    return;\n}\n",
        "token_count": 504
    },
    "00401f40": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_820h\n\nvoid __cdecl fcn.00401f40(uint arg_8h)\n\n{\n    uint32_t in_EDX;\n    uint var_820h;\n    uint var_81ch;\n    uint var_818h;\n    uint var_814h;\n    uint var_810h;\n    uint var_80ch;\n    uint32_t var_808h;\n    uint var_804h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41dec0 ^ &stack0xfffffffc;\n    for (var_808h = 0; var_808h < in_EDX >> 3; var_808h = var_808h + 1) {\n        if (*0x5dcfb0 == 0xff7) {\n            (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(0, &var_804h, 0);\n        }\n        if (*0x5dcfb0 == 0x7a2) {\n            (*_sym.imp.KERNEL32.dll_SetConsoleTextAttribute)(0, 0);\n            (*_sym.imp.KERNEL32.dll_ClearCommError)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_SetVolumeMountPointA)(0, 0);\n            (*_sym.imp.KERNEL32.dll_GetVolumePathNameW)(0, 0, 0);\n        }\n        fcn.00401ce0();\n        *0x5dd000 = 0x83ae4290;\n    }\n    fcn.00403a01(in_EDX);\n    return;\n}\n",
        "token_count": 355
    },
    "00402bf0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nulong * fcn.00402bf0(ulong *param_1, ulong *param_2, uint32_t param_3)\n\n{\n    ulong uVar1;\n    uchar auVar2 [32];\n    uchar auVar3 [32];\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    int32_t iVar16;\n    ulong *puVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    int32_t iVar20;\n    ulong *puVar21;\n    uint *puVar22;\n    uint *puVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    \n    if ((param_2 < param_1) && (param_1 < param_3 + param_2)) {\n        puVar22 = (param_3 - 4) + param_2;\n        puVar23 = (param_3 - 4) + param_1;\n        if ((puVar23 & 3) == 0) {\n            uVar19 = param_3 >> 2;\n            if (uVar19 < 8) goto code_r0x00402fa0;\n            for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                *puVar23 = *puVar22;\n                puVar22 = puVar22 + -1;\n                puVar23 = puVar23 + -1;\n            }\n    // switch table (4 cases) at 0x4030c4\n            switch(param_3 & 3) {\n            case 1:\n                goto code_r0x004030dc;\n            case 2:\n                goto code_r0x004030ec;\n            case 3:\n                goto code_r0x00403100;\n            }\n        }\n        else {\n    // switch table (4 cases) at 0x4030c4\n            switch(param_3) {\n            case 0:\n                break;\n            case 1:\ncode_r0x004030dc:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                return param_1;\n            case 2:\ncode_r0x004030ec:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                *(puVar23 + 2) = *(puVar22 + 2);\n                return param_1;\n            case 3:\ncode_r0x00403100:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                *(puVar23 + 2) = *(puVar22 + 2);\n                *(puVar23 + 1) = *(puVar22 + 1);\n                return param_1;\n            default:\n                param_3 = param_3 - (puVar23 & 3);\n                switch(puVar23 & 3) {\n                case 1:\n                    *(puVar23 + 3) = *(puVar22 + 3);\n                    puVar22 = puVar22 + -1;\n                    uVar19 = param_3 >> 2;\n                    puVar23 = puVar23 - 1;\n                    if (uVar19 < 8) {\ncode_r0x00402fa0:\n    // WARNING: Could not recover jumptable at 0x00402fa2. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x403074\n                        puVar17 = (**(uVar19 * -4 + 0x403074))();\n                        return puVar17;\n                    }\n                    for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                        *puVar23 = *puVar22;\n                        puVar22 = puVar22 + -1;\n                        puVar23 = puVar23 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x004030dc;\n                    case 2:\n                        goto code_r0x004030ec;\n                    case 3:\n                        goto code_r0x00403100;\n                    }\n                    break;\n                case 2:\n                    *(puVar23 + 3) = *(puVar22 + 3);\n                    uVar19 = param_3 >> 2;\n                    *(puVar23 + 2) = *(puVar22 + 2);\n                    puVar22 = puVar22 + -2;\n                    puVar23 = puVar23 - 2;\n                    if (uVar19 < 8) goto code_r0x00402fa0;\n                    for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                        *puVar23 = *puVar22;\n                        puVar22 = puVar22 + -1;\n                        puVar23 = puVar23 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x004030dc;\n                    case 2:\n                        goto code_r0x004030ec;\n                    case 3:\n                        goto code_r0x00403100;\n                    }\n                    break;\n                case 3:\n                    *(puVar23 + 3) = *(puVar22 + 3);\n                    *(puVar23 + 2) = *(puVar22 + 2);\n                    uVar19 = param_3 >> 2;\n                    *(puVar23 + 1) = *(puVar22 + 1);\n                    puVar22 = puVar22 + -3;\n                    puVar23 = puVar23 - 3;\n                    if (uVar19 < 8) goto code_r0x00402fa0;\n                    for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                        *puVar23 = *puVar22;\n                        puVar22 = puVar22 + -1;\n                        puVar23 = puVar23 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x004030dc;\n                    case 2:\n                        goto code_r0x004030ec;\n                    case 3:\n                        goto code_r0x00403100;\n                    }\n                }\n            }\n        }\n        return param_1;\n    }\n    puVar17 = param_1;\n    if ((*0x5dd3bc >> 1 & 1) != 0) {\n        for (; param_3 != 0; param_3 = param_3 - 1) {\n            *puVar17 = *param_2;\n            param_2 = param_2 + 1;\n            puVar17 = puVar17 + 1;\n        }\n        return param_1;\n    }\n    if (param_3 < 0x80) {\ncode_r0x00402dfb:\n        if ((param_1 & 3) != 0) {\ncode_r0x00402e18:\n            switch(param_3) {\n            case 0:\n                return param_1;\n            case 1:\n                break;\n            case 2:\n                goto code_r0x00402f4c;\n            case 3:\n                goto code_r0x00402f60;\n            default:\n                uVar19 = (param_3 - 4) + (param_1 & 3);\n                switch(param_1 & 3) {\n                case 0:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 1:\n                    *param_1 = *param_2;\n                    *(param_1 + 1) = *(param_2 + 1);\n                    uVar18 = uVar19 >> 2;\n                    *(param_1 + 2) = *(param_2 + 2);\n                    param_2 = param_2 + 3;\n                    puVar17 = param_1 + 3;\n                    if (7 < uVar18) {\n                        for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n                            *puVar17 = *param_2;\n                            param_2 = param_2 + 4;\n                            puVar17 = puVar17 + 4;\n                        }\n                        switch(uVar19 & 3) {\n                        case 0:\n                            return param_1;\n                        case 2:\n                            goto code_r0x00402f4c;\n                        case 3:\n                            goto code_r0x00402f60;\n                        }\n                        break;\n                    }\n                    goto code_r0x00402e38;\n                case 2:\n                    *param_1 = *param_2;\n                    uVar18 = uVar19 >> 2;\n                    *(param_1 + 1) = *(param_2 + 1);\n                    param_2 = param_2 + 2;\n                    puVar17 = param_1 + 2;\n                    if (uVar18 < 8) goto code_r0x00402e38;\n                    for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n                        *puVar17 = *param_2;\n                        param_2 = param_2 + 4;\n                        puVar17 = puVar17 + 4;\n                    }\n                    switch(uVar19 & 3) {\n                    case 0:\n                        return param_1;\n                    case 2:\n                        goto code_r0x00402f4c;\n                    case 3:\n                        goto code_r0x00402f60;\n                    }\n                    break;\n                case 3:\n                    *param_1 = *param_2;\n                    uVar18 = uVar19 >> 2;\n                    param_2 = param_2 + 1;\n                    puVar17 = param_1 + 1;\n                    if (uVar18 < 8) goto code_r0x00402e38;\n                    for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n                        *puVar17 = *param_2;\n                        param_2 = param_2 + 4;\n                        puVar17 = puVar17 + 4;\n                    }\n                    switch(uVar19 & 3) {\n                    case 0:\n                        return param_1;\n                    case 2:\n                        goto code_r0x00402f4c;\n                    case 3:\n                        goto code_r0x00402f60;\n                    }\n                }\n            }\n            goto code_r0x00402f40;\n        }\n    }\n    else {\n        if ((((param_1 ^ param_2) & 0xf) == 0) && ((*0x41dee4 >> 1 & 1) != 0)) {\n            if ((param_2 & 0xf) != 0) {\n                uVar18 = 0x10 - (param_2 & 0xf);\n                param_3 = param_3 - uVar18;\n                for (uVar19 = uVar18 & 3; uVar19 != 0; uVar19 = uVar19 - 1) {\n                    *puVar17 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar17 = puVar17 + 1;\n                }\n                for (uVar18 = uVar18 >> 2; uVar18 != 0; uVar18 = uVar18 - 1) {\n                    *puVar17 = *param_2;\n                    param_2 = param_2 + 4;\n                    puVar17 = puVar17 + 4;\n                }\n            }\n            for (uVar19 = param_3 >> 7; uVar19 != 0; uVar19 = uVar19 - 1) {\n                uVar24 = *(param_2 + 4);\n                uVar25 = *(param_2 + 1);\n                uVar26 = *(param_2 + 0xc);\n                uVar4 = *(param_2 + 2);\n                uVar5 = *(param_2 + 0x14);\n                uVar6 = *(param_2 + 3);\n                uVar7 = *(param_2 + 0x1c);\n                uVar8 = *(param_2 + 4);\n                uVar9 = *(param_2 + 0x24);\n                uVar10 = *(param_2 + 5);\n                uVar11 = *(param_2 + 0x2c);\n                uVar12 = *(param_2 + 6);\n                uVar13 = *(param_2 + 0x34);\n                uVar14 = *(param_2 + 7);\n                uVar15 = *(param_2 + 0x3c);\n                *puVar17 = *param_2;\n                *(puVar17 + 4) = uVar24;\n                *(puVar17 + 1) = uVar25;\n                *(puVar17 + 0xc) = uVar26;\n                *(puVar17 + 2) = uVar4;\n                *(puVar17 + 0x14) = uVar5;\n                *(puVar17 + 3) = uVar6;\n                *(puVar17 + 0x1c) = uVar7;\n                *(puVar17 + 4) = uVar8;\n                *(puVar17 + 0x24) = uVar9;\n                *(puVar17 + 5) = uVar10;\n                *(puVar17 + 0x2c) = uVar11;\n                *(puVar17 + 6) = uVar12;\n                *(puVar17 + 0x34) = uVar13;\n                *(puVar17 + 7) = uVar14;\n                *(puVar17 + 0x3c) = uVar15;\n                uVar24 = *(param_2 + 0x44);\n                uVar25 = *(param_2 + 9);\n                uVar26 = *(param_2 + 0x4c);\n                uVar4 = *(param_2 + 10);\n                uVar5 = *(param_2 + 0x54);\n                uVar6 = *(param_2 + 0xb);\n                uVar7 = *(param_2 + 0x5c);\n                uVar8 = *(param_2 + 0xc);\n                uVar9 = *(param_2 + 100);\n                uVar10 = *(param_2 + 0xd);\n                uVar11 = *(param_2 + 0x6c);\n                uVar12 = *(param_2 + 0xe);\n                uVar13 = *(param_2 + 0x74);\n                uVar14 = *(param_2 + 0xf);\n                uVar15 = *(param_2 + 0x7c);\n                *(puVar17 + 8) = *(param_2 + 8);\n                *(puVar17 + 0x44) = uVar24;\n                *(puVar17 + 9) = uVar25;\n                *(puVar17 + 0x4c) = uVar26;\n                *(puVar17 + 10) = uVar4;\n                *(puVar17 + 0x54) = uVar5;\n                *(puVar17 + 0xb) = uVar6;\n                *(puVar17 + 0x5c) = uVar7;\n                *(puVar17 + 0xc) = uVar8;\n                *(puVar17 + 100) = uVar9;\n                *(puVar17 + 0xd) = uVar10;\n                *(puVar17 + 0x6c) = uVar11;\n                *(puVar17 + 0xe) = uVar12;\n                *(puVar17 + 0x74) = uVar13;\n                *(puVar17 + 0xf) = uVar14;\n                *(puVar17 + 0x7c) = uVar15;\n                param_2 = param_2 + 0x10;\n                puVar17 = puVar17 + 0x10;\n            }\n            if ((param_3 & 0x7f) != 0) {\n                for (uVar19 = (param_3 & 0x7f) >> 4; uVar19 != 0; uVar19 = uVar19 - 1) {\n                    uVar24 = *(param_2 + 4);\n                    uVar25 = *(param_2 + 1);\n                    uVar26 = *(param_2 + 0xc);\n                    *puVar17 = *param_2;\n                    *(puVar17 + 4) = uVar24;\n                    *(puVar17 + 1) = uVar25;\n                    *(puVar17 + 0xc) = uVar26;\n                    param_2 = param_2 + 2;\n                    puVar17 = puVar17 + 2;\n                }\n                if ((param_3 & 0xf) != 0) {\n                    for (uVar19 = (param_3 & 0xf) >> 2; uVar19 != 0; uVar19 = uVar19 - 1) {\n                        *puVar17 = *param_2;\n                        param_2 = param_2 + 4;\n                        puVar17 = puVar17 + 4;\n                    }\n                    for (param_3 = param_3 & 3; param_3 != 0; param_3 = param_3 - 1) {\n                        *puVar17 = *param_2;\n                        param_2 = param_2 + 1;\n                        puVar17 = puVar17 + 1;\n                    }\n                }\n            }\n            return param_1;\n        }\n        if ((*0x5dd3bc & 1) == 0) goto code_r0x00402dfb;\n        if ((param_1 & 3) != 0) goto code_r0x00402e18;\n        if ((param_2 & 3) == 0) {\n            if ((param_1 >> 2 & 1) != 0) {\n                uVar24 = *param_2;\n                param_3 = param_3 - 4;\n                param_2 = param_2 + 4;\n                *param_1 = uVar24;\n                param_1 = param_1 + 4;\n            }\n            if ((param_1 >> 3 & 1) != 0) {\n                uVar1 = *param_2;\n                param_3 = param_3 - 8;\n                param_2 = param_2 + 1;\n                *param_1 = uVar1;\n                param_1 = param_1 + 1;\n            }\n            if ((param_2 & 7) == 0) {\n                puVar17 = param_2 + -1;\n                uVar24 = *param_2;\n                uVar25 = *(param_2 + 4);\n                do {\n                    puVar21 = puVar17;\n                    uVar5 = *(puVar21 + 4);\n                    uVar6 = *(puVar21 + 0x24);\n                    param_3 = param_3 - 0x30;\n                    auVar2 = *(puVar21 + 2);\n                    uVar26 = *(puVar21 + 7);\n                    uVar4 = *(puVar21 + 0x3c);\n                    auVar3 = *(puVar21 + 4);\n                    *(param_1 + 1) = uVar24;\n                    *(param_1 + 0xc) = uVar25;\n                    *(param_1 + 2) = uVar5;\n                    *(param_1 + 0x14) = uVar6;\n                    *(param_1 + 2) = SUB3216(auVar2 >> 0x40, 0);\n                    *(param_1 + 4) = SUB3216(auVar3 >> 0x40, 0);\n                    param_1 = param_1 + 6;\n                    puVar17 = puVar21 + 6;\n                    uVar24 = uVar26;\n                    uVar25 = uVar4;\n                } while (0x2f < param_3);\n                puVar21 = puVar21 + 7;\n            }\n            else if ((param_2 >> 3 & 1) == 0) {\n                iVar16 = param_2 + -4;\n                uVar24 = *param_2;\n                uVar25 = *(param_2 + 4);\n                uVar26 = *(param_2 + 1);\n                do {\n                    iVar20 = iVar16;\n                    uVar7 = *(iVar20 + 0x20);\n                    param_3 = param_3 - 0x30;\n                    auVar2 = *(iVar20 + 0x10);\n                    uVar4 = *(iVar20 + 0x34);\n                    uVar5 = *(iVar20 + 0x38);\n                    uVar6 = *(iVar20 + 0x3c);\n                    auVar3 = *(iVar20 + 0x20);\n                    *(param_1 + 4) = uVar24;\n                    *(param_1 + 1) = uVar25;\n                    *(param_1 + 0xc) = uVar26;\n                    *(param_1 + 2) = uVar7;\n                    *(param_1 + 2) = SUB3216(auVar2 >> 0x20, 0);\n                    *(param_1 + 4) = SUB3216(auVar3 >> 0x20, 0);\n                    param_1 = param_1 + 6;\n                    iVar16 = iVar20 + 0x30;\n                    uVar24 = uVar4;\n                    uVar25 = uVar5;\n                    uVar26 = uVar6;\n                } while (0x2f < param_3);\n                puVar21 = iVar20 + 0x34;\n            }\n            else {\n                iVar16 = param_2 + -0xc;\n                uVar24 = *param_2;\n                do {\n                    iVar20 = iVar16;\n                    uVar26 = *(iVar20 + 0x20);\n                    uVar4 = *(iVar20 + 0x24);\n                    uVar5 = *(iVar20 + 0x28);\n                    param_3 = param_3 - 0x30;\n                    auVar2 = *(iVar20 + 0x10);\n                    uVar25 = *(iVar20 + 0x3c);\n                    auVar3 = *(iVar20 + 0x20);\n                    *(param_1 + 0xc) = uVar24;\n                    *(param_1 + 2) = uVar26;\n                    *(param_1 + 0x14) = uVar4;\n                    *(param_1 + 3) = uVar5;\n                    *(param_1 + 2) = SUB3216(auVar2 >> 0x60, 0);\n                    *(param_1 + 4) = SUB3216(auVar3 >> 0x60, 0);\n                    param_1 = param_1 + 6;\n                    iVar16 = iVar20 + 0x30;\n                    uVar24 = uVar25;\n                } while (0x2f < param_3);\n                puVar21 = iVar20 + 0x3c;\n            }\n            for (; 0xf < param_3; param_3 = param_3 - 0x10) {\n                uVar24 = *puVar21;\n                uVar25 = *(puVar21 + 4);\n                uVar26 = *(puVar21 + 1);\n                uVar4 = *(puVar21 + 0xc);\n                puVar21 = puVar21 + 2;\n                *param_1 = uVar24;\n                *(param_1 + 4) = uVar25;\n                *(param_1 + 1) = uVar26;\n                *(param_1 + 0xc) = uVar4;\n                param_1 = param_1 + 2;\n            }\n            if ((param_3 >> 2 & 1) != 0) {\n                uVar24 = *puVar21;\n                param_3 = param_3 - 4;\n                puVar21 = puVar21 + 4;\n                *param_1 = uVar24;\n                param_1 = param_1 + 4;\n            }\n            if ((param_3 >> 3 & 1) != 0) {\n                param_3 = param_3 - 8;\n                *param_1 = *puVar21;\n            }\n    // WARNING: Could not recover jumptable at 0x00402df9. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (4 cases) at 0x402f28\n            puVar17 = (**(param_3 * 4 + 0x402f28))();\n            return puVar17;\n        }\n    }\n    uVar18 = param_3 >> 2;\n    if (uVar18 < 8) {\ncode_r0x00402e38:\n    // WARNING: Could not recover jumptable at 0x00402e38. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x402ebc\n        puVar17 = (**(uVar18 * 4 + 0x402ebc))();\n        return puVar17;\n    }\n    for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n        *puVar17 = *param_2;\n        param_2 = param_2 + 4;\n        puVar17 = puVar17 + 4;\n    }\n    // switch table (4 cases) at 0x402f28\n    switch(param_3 & 3) {\n    case 0:\n        return param_1;\n    case 2:\ncode_r0x00402f4c:\n        *puVar17 = *param_2;\n        *(puVar17 + 1) = *(param_2 + 1);\n        return param_1;\n    case 3:\ncode_r0x00402f60:\n        *puVar17 = *param_2;\n        *(puVar17 + 1) = *(param_2 + 1);\n        *(puVar17 + 2) = *(param_2 + 2);\n        return param_1;\n    }\ncode_r0x00402f40:\n    *puVar17 = *param_2;\n    return param_1;\n}\n",
        "token_count": 5829
    },
    "00403e70": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nulong * fcn.00403e70(ulong *param_1, ulong *param_2, uint32_t param_3)\n\n{\n    ulong uVar1;\n    uchar auVar2 [32];\n    uchar auVar3 [32];\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    int32_t iVar16;\n    ulong *puVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    int32_t iVar20;\n    ulong *puVar21;\n    uint *puVar22;\n    uint *puVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    \n    if ((param_2 < param_1) && (param_1 < param_3 + param_2)) {\n        puVar22 = (param_3 - 4) + param_2;\n        puVar23 = (param_3 - 4) + param_1;\n        if ((puVar23 & 3) == 0) {\n            uVar19 = param_3 >> 2;\n            if (uVar19 < 8) goto code_r0x00404220;\n            for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                *puVar23 = *puVar22;\n                puVar22 = puVar22 + -1;\n                puVar23 = puVar23 + -1;\n            }\n    // switch table (4 cases) at 0x404344\n            switch(param_3 & 3) {\n            case 1:\n                goto code_r0x0040435c;\n            case 2:\n                goto code_r0x0040436c;\n            case 3:\n                goto code_r0x00404380;\n            }\n        }\n        else {\n    // switch table (4 cases) at 0x404344\n            switch(param_3) {\n            case 0:\n                break;\n            case 1:\ncode_r0x0040435c:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                return param_1;\n            case 2:\ncode_r0x0040436c:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                *(puVar23 + 2) = *(puVar22 + 2);\n                return param_1;\n            case 3:\ncode_r0x00404380:\n                *(puVar23 + 3) = *(puVar22 + 3);\n                *(puVar23 + 2) = *(puVar22 + 2);\n                *(puVar23 + 1) = *(puVar22 + 1);\n                return param_1;\n            default:\n                param_3 = param_3 - (puVar23 & 3);\n                switch(puVar23 & 3) {\n                case 1:\n                    *(puVar23 + 3) = *(puVar22 + 3);\n                    puVar22 = puVar22 + -1;\n                    uVar19 = param_3 >> 2;\n                    puVar23 = puVar23 - 1;\n                    if (uVar19 < 8) {\ncode_r0x00404220:\n    // WARNING: Could not recover jumptable at 0x00404222. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x4042f4\n                        puVar17 = (**(uVar19 * -4 + 0x4042f4))();\n                        return puVar17;\n                    }\n                    for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                        *puVar23 = *puVar22;\n                        puVar22 = puVar22 + -1;\n                        puVar23 = puVar23 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x0040435c;\n                    case 2:\n                        goto code_r0x0040436c;\n                    case 3:\n                        goto code_r0x00404380;\n                    }\n                    break;\n                case 2:\n                    *(puVar23 + 3) = *(puVar22 + 3);\n                    uVar19 = param_3 >> 2;\n                    *(puVar23 + 2) = *(puVar22 + 2);\n                    puVar22 = puVar22 + -2;\n                    puVar23 = puVar23 - 2;\n                    if (uVar19 < 8) goto code_r0x00404220;\n                    for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                        *puVar23 = *puVar22;\n                        puVar22 = puVar22 + -1;\n                        puVar23 = puVar23 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x0040435c;\n                    case 2:\n                        goto code_r0x0040436c;\n                    case 3:\n                        goto code_r0x00404380;\n                    }\n                    break;\n                case 3:\n                    *(puVar23 + 3) = *(puVar22 + 3);\n                    *(puVar23 + 2) = *(puVar22 + 2);\n                    uVar19 = param_3 >> 2;\n                    *(puVar23 + 1) = *(puVar22 + 1);\n                    puVar22 = puVar22 + -3;\n                    puVar23 = puVar23 - 3;\n                    if (uVar19 < 8) goto code_r0x00404220;\n                    for (; uVar19 != 0; uVar19 = uVar19 - 1) {\n                        *puVar23 = *puVar22;\n                        puVar22 = puVar22 + -1;\n                        puVar23 = puVar23 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x0040435c;\n                    case 2:\n                        goto code_r0x0040436c;\n                    case 3:\n                        goto code_r0x00404380;\n                    }\n                }\n            }\n        }\n        return param_1;\n    }\n    puVar17 = param_1;\n    if ((*0x5dd3bc >> 1 & 1) != 0) {\n        for (; param_3 != 0; param_3 = param_3 - 1) {\n            *puVar17 = *param_2;\n            param_2 = param_2 + 1;\n            puVar17 = puVar17 + 1;\n        }\n        return param_1;\n    }\n    if (param_3 < 0x80) {\ncode_r0x0040407b:\n        if ((param_1 & 3) != 0) {\ncode_r0x00404098:\n            switch(param_3) {\n            case 0:\n                return param_1;\n            case 1:\n                break;\n            case 2:\n                goto code_r0x004041cc;\n            case 3:\n                goto code_r0x004041e0;\n            default:\n                uVar19 = (param_3 - 4) + (param_1 & 3);\n                switch(param_1 & 3) {\n                case 0:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 1:\n                    *param_1 = *param_2;\n                    *(param_1 + 1) = *(param_2 + 1);\n                    uVar18 = uVar19 >> 2;\n                    *(param_1 + 2) = *(param_2 + 2);\n                    param_2 = param_2 + 3;\n                    puVar17 = param_1 + 3;\n                    if (7 < uVar18) {\n                        for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n                            *puVar17 = *param_2;\n                            param_2 = param_2 + 4;\n                            puVar17 = puVar17 + 4;\n                        }\n                        switch(uVar19 & 3) {\n                        case 0:\n                            return param_1;\n                        case 2:\n                            goto code_r0x004041cc;\n                        case 3:\n                            goto code_r0x004041e0;\n                        }\n                        break;\n                    }\n                    goto code_r0x004040b8;\n                case 2:\n                    *param_1 = *param_2;\n                    uVar18 = uVar19 >> 2;\n                    *(param_1 + 1) = *(param_2 + 1);\n                    param_2 = param_2 + 2;\n                    puVar17 = param_1 + 2;\n                    if (uVar18 < 8) goto code_r0x004040b8;\n                    for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n                        *puVar17 = *param_2;\n                        param_2 = param_2 + 4;\n                        puVar17 = puVar17 + 4;\n                    }\n                    switch(uVar19 & 3) {\n                    case 0:\n                        return param_1;\n                    case 2:\n                        goto code_r0x004041cc;\n                    case 3:\n                        goto code_r0x004041e0;\n                    }\n                    break;\n                case 3:\n                    *param_1 = *param_2;\n                    uVar18 = uVar19 >> 2;\n                    param_2 = param_2 + 1;\n                    puVar17 = param_1 + 1;\n                    if (uVar18 < 8) goto code_r0x004040b8;\n                    for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n                        *puVar17 = *param_2;\n                        param_2 = param_2 + 4;\n                        puVar17 = puVar17 + 4;\n                    }\n                    switch(uVar19 & 3) {\n                    case 0:\n                        return param_1;\n                    case 2:\n                        goto code_r0x004041cc;\n                    case 3:\n                        goto code_r0x004041e0;\n                    }\n                }\n            }\n            goto code_r0x004041c0;\n        }\n    }\n    else {\n        if ((((param_1 ^ param_2) & 0xf) == 0) && ((*0x41dee4 >> 1 & 1) != 0)) {\n            if ((param_2 & 0xf) != 0) {\n                uVar18 = 0x10 - (param_2 & 0xf);\n                param_3 = param_3 - uVar18;\n                for (uVar19 = uVar18 & 3; uVar19 != 0; uVar19 = uVar19 - 1) {\n                    *puVar17 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar17 = puVar17 + 1;\n                }\n                for (uVar18 = uVar18 >> 2; uVar18 != 0; uVar18 = uVar18 - 1) {\n                    *puVar17 = *param_2;\n                    param_2 = param_2 + 4;\n                    puVar17 = puVar17 + 4;\n                }\n            }\n            for (uVar19 = param_3 >> 7; uVar19 != 0; uVar19 = uVar19 - 1) {\n                uVar24 = *(param_2 + 4);\n                uVar25 = *(param_2 + 1);\n                uVar26 = *(param_2 + 0xc);\n                uVar4 = *(param_2 + 2);\n                uVar5 = *(param_2 + 0x14);\n                uVar6 = *(param_2 + 3);\n                uVar7 = *(param_2 + 0x1c);\n                uVar8 = *(param_2 + 4);\n                uVar9 = *(param_2 + 0x24);\n                uVar10 = *(param_2 + 5);\n                uVar11 = *(param_2 + 0x2c);\n                uVar12 = *(param_2 + 6);\n                uVar13 = *(param_2 + 0x34);\n                uVar14 = *(param_2 + 7);\n                uVar15 = *(param_2 + 0x3c);\n                *puVar17 = *param_2;\n                *(puVar17 + 4) = uVar24;\n                *(puVar17 + 1) = uVar25;\n                *(puVar17 + 0xc) = uVar26;\n                *(puVar17 + 2) = uVar4;\n                *(puVar17 + 0x14) = uVar5;\n                *(puVar17 + 3) = uVar6;\n                *(puVar17 + 0x1c) = uVar7;\n                *(puVar17 + 4) = uVar8;\n                *(puVar17 + 0x24) = uVar9;\n                *(puVar17 + 5) = uVar10;\n                *(puVar17 + 0x2c) = uVar11;\n                *(puVar17 + 6) = uVar12;\n                *(puVar17 + 0x34) = uVar13;\n                *(puVar17 + 7) = uVar14;\n                *(puVar17 + 0x3c) = uVar15;\n                uVar24 = *(param_2 + 0x44);\n                uVar25 = *(param_2 + 9);\n                uVar26 = *(param_2 + 0x4c);\n                uVar4 = *(param_2 + 10);\n                uVar5 = *(param_2 + 0x54);\n                uVar6 = *(param_2 + 0xb);\n                uVar7 = *(param_2 + 0x5c);\n                uVar8 = *(param_2 + 0xc);\n                uVar9 = *(param_2 + 100);\n                uVar10 = *(param_2 + 0xd);\n                uVar11 = *(param_2 + 0x6c);\n                uVar12 = *(param_2 + 0xe);\n                uVar13 = *(param_2 + 0x74);\n                uVar14 = *(param_2 + 0xf);\n                uVar15 = *(param_2 + 0x7c);\n                *(puVar17 + 8) = *(param_2 + 8);\n                *(puVar17 + 0x44) = uVar24;\n                *(puVar17 + 9) = uVar25;\n                *(puVar17 + 0x4c) = uVar26;\n                *(puVar17 + 10) = uVar4;\n                *(puVar17 + 0x54) = uVar5;\n                *(puVar17 + 0xb) = uVar6;\n                *(puVar17 + 0x5c) = uVar7;\n                *(puVar17 + 0xc) = uVar8;\n                *(puVar17 + 100) = uVar9;\n                *(puVar17 + 0xd) = uVar10;\n                *(puVar17 + 0x6c) = uVar11;\n                *(puVar17 + 0xe) = uVar12;\n                *(puVar17 + 0x74) = uVar13;\n                *(puVar17 + 0xf) = uVar14;\n                *(puVar17 + 0x7c) = uVar15;\n                param_2 = param_2 + 0x10;\n                puVar17 = puVar17 + 0x10;\n            }\n            if ((param_3 & 0x7f) != 0) {\n                for (uVar19 = (param_3 & 0x7f) >> 4; uVar19 != 0; uVar19 = uVar19 - 1) {\n                    uVar24 = *(param_2 + 4);\n                    uVar25 = *(param_2 + 1);\n                    uVar26 = *(param_2 + 0xc);\n                    *puVar17 = *param_2;\n                    *(puVar17 + 4) = uVar24;\n                    *(puVar17 + 1) = uVar25;\n                    *(puVar17 + 0xc) = uVar26;\n                    param_2 = param_2 + 2;\n                    puVar17 = puVar17 + 2;\n                }\n                if ((param_3 & 0xf) != 0) {\n                    for (uVar19 = (param_3 & 0xf) >> 2; uVar19 != 0; uVar19 = uVar19 - 1) {\n                        *puVar17 = *param_2;\n                        param_2 = param_2 + 4;\n                        puVar17 = puVar17 + 4;\n                    }\n                    for (param_3 = param_3 & 3; param_3 != 0; param_3 = param_3 - 1) {\n                        *puVar17 = *param_2;\n                        param_2 = param_2 + 1;\n                        puVar17 = puVar17 + 1;\n                    }\n                }\n            }\n            return param_1;\n        }\n        if ((*0x5dd3bc & 1) == 0) goto code_r0x0040407b;\n        if ((param_1 & 3) != 0) goto code_r0x00404098;\n        if ((param_2 & 3) == 0) {\n            if ((param_1 >> 2 & 1) != 0) {\n                uVar24 = *param_2;\n                param_3 = param_3 - 4;\n                param_2 = param_2 + 4;\n                *param_1 = uVar24;\n                param_1 = param_1 + 4;\n            }\n            if ((param_1 >> 3 & 1) != 0) {\n                uVar1 = *param_2;\n                param_3 = param_3 - 8;\n                param_2 = param_2 + 1;\n                *param_1 = uVar1;\n                param_1 = param_1 + 1;\n            }\n            if ((param_2 & 7) == 0) {\n                puVar17 = param_2 + -1;\n                uVar24 = *param_2;\n                uVar25 = *(param_2 + 4);\n                do {\n                    puVar21 = puVar17;\n                    uVar5 = *(puVar21 + 4);\n                    uVar6 = *(puVar21 + 0x24);\n                    param_3 = param_3 - 0x30;\n                    auVar2 = *(puVar21 + 2);\n                    uVar26 = *(puVar21 + 7);\n                    uVar4 = *(puVar21 + 0x3c);\n                    auVar3 = *(puVar21 + 4);\n                    *(param_1 + 1) = uVar24;\n                    *(param_1 + 0xc) = uVar25;\n                    *(param_1 + 2) = uVar5;\n                    *(param_1 + 0x14) = uVar6;\n                    *(param_1 + 2) = SUB3216(auVar2 >> 0x40, 0);\n                    *(param_1 + 4) = SUB3216(auVar3 >> 0x40, 0);\n                    param_1 = param_1 + 6;\n                    puVar17 = puVar21 + 6;\n                    uVar24 = uVar26;\n                    uVar25 = uVar4;\n                } while (0x2f < param_3);\n                puVar21 = puVar21 + 7;\n            }\n            else if ((param_2 >> 3 & 1) == 0) {\n                iVar16 = param_2 + -4;\n                uVar24 = *param_2;\n                uVar25 = *(param_2 + 4);\n                uVar26 = *(param_2 + 1);\n                do {\n                    iVar20 = iVar16;\n                    uVar7 = *(iVar20 + 0x20);\n                    param_3 = param_3 - 0x30;\n                    auVar2 = *(iVar20 + 0x10);\n                    uVar4 = *(iVar20 + 0x34);\n                    uVar5 = *(iVar20 + 0x38);\n                    uVar6 = *(iVar20 + 0x3c);\n                    auVar3 = *(iVar20 + 0x20);\n                    *(param_1 + 4) = uVar24;\n                    *(param_1 + 1) = uVar25;\n                    *(param_1 + 0xc) = uVar26;\n                    *(param_1 + 2) = uVar7;\n                    *(param_1 + 2) = SUB3216(auVar2 >> 0x20, 0);\n                    *(param_1 + 4) = SUB3216(auVar3 >> 0x20, 0);\n                    param_1 = param_1 + 6;\n                    iVar16 = iVar20 + 0x30;\n                    uVar24 = uVar4;\n                    uVar25 = uVar5;\n                    uVar26 = uVar6;\n                } while (0x2f < param_3);\n                puVar21 = iVar20 + 0x34;\n            }\n            else {\n                iVar16 = param_2 + -0xc;\n                uVar24 = *param_2;\n                do {\n                    iVar20 = iVar16;\n                    uVar26 = *(iVar20 + 0x20);\n                    uVar4 = *(iVar20 + 0x24);\n                    uVar5 = *(iVar20 + 0x28);\n                    param_3 = param_3 - 0x30;\n                    auVar2 = *(iVar20 + 0x10);\n                    uVar25 = *(iVar20 + 0x3c);\n                    auVar3 = *(iVar20 + 0x20);\n                    *(param_1 + 0xc) = uVar24;\n                    *(param_1 + 2) = uVar26;\n                    *(param_1 + 0x14) = uVar4;\n                    *(param_1 + 3) = uVar5;\n                    *(param_1 + 2) = SUB3216(auVar2 >> 0x60, 0);\n                    *(param_1 + 4) = SUB3216(auVar3 >> 0x60, 0);\n                    param_1 = param_1 + 6;\n                    iVar16 = iVar20 + 0x30;\n                    uVar24 = uVar25;\n                } while (0x2f < param_3);\n                puVar21 = iVar20 + 0x3c;\n            }\n            for (; 0xf < param_3; param_3 = param_3 - 0x10) {\n                uVar24 = *puVar21;\n                uVar25 = *(puVar21 + 4);\n                uVar26 = *(puVar21 + 1);\n                uVar4 = *(puVar21 + 0xc);\n                puVar21 = puVar21 + 2;\n                *param_1 = uVar24;\n                *(param_1 + 4) = uVar25;\n                *(param_1 + 1) = uVar26;\n                *(param_1 + 0xc) = uVar4;\n                param_1 = param_1 + 2;\n            }\n            if ((param_3 >> 2 & 1) != 0) {\n                uVar24 = *puVar21;\n                param_3 = param_3 - 4;\n                puVar21 = puVar21 + 4;\n                *param_1 = uVar24;\n                param_1 = param_1 + 4;\n            }\n            if ((param_3 >> 3 & 1) != 0) {\n                param_3 = param_3 - 8;\n                *param_1 = *puVar21;\n            }\n    // WARNING: Could not recover jumptable at 0x00404079. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (4 cases) at 0x4041a8\n            puVar17 = (**(param_3 * 4 + 0x4041a8))();\n            return puVar17;\n        }\n    }\n    uVar18 = param_3 >> 2;\n    if (uVar18 < 8) {\ncode_r0x004040b8:\n    // WARNING: Could not recover jumptable at 0x004040b8. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x40413c\n        puVar17 = (**(uVar18 * 4 + 0x40413c))();\n        return puVar17;\n    }\n    for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n        *puVar17 = *param_2;\n        param_2 = param_2 + 4;\n        puVar17 = puVar17 + 4;\n    }\n    // switch table (4 cases) at 0x4041a8\n    switch(param_3 & 3) {\n    case 0:\n        return param_1;\n    case 2:\ncode_r0x004041cc:\n        *puVar17 = *param_2;\n        *(puVar17 + 1) = *(param_2 + 1);\n        return param_1;\n    case 3:\ncode_r0x004041e0:\n        *puVar17 = *param_2;\n        *(puVar17 + 1) = *(param_2 + 1);\n        *(puVar17 + 2) = *(param_2 + 2);\n        return param_1;\n    }\ncode_r0x004041c0:\n    *puVar17 = *param_2;\n    return param_1;\n}\n",
        "token_count": 5824
    },
    "00403a10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00403a10(int32_t *arg_8h, uint8_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint dwExceptionCode;\n    uint dwExceptionFlags;\n    uint nNumberOfArguments;\n    uint lpArguments;\n    int32_t *var_8h;\n    uint8_t *var_4h;\n    \n    var_4h = &stack0xfffffffc;\n    puVar2 = 0x413140;\n    puVar3 = &dwExceptionCode;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    if ((arg_ch != NULL) && ((*arg_ch & 0x10) != 0)) {\n        iVar1 = *(*arg_8h + -4);\n        arg_ch = *(iVar1 + 0x18);\n        (**(iVar1 + 0x20))(*arg_8h + -4);\n    }\n    var_8h = arg_8h;\n    if ((arg_ch != NULL) && ((*arg_ch & 8) != 0)) {\n        lpArguments = 0x1994000;\n    }\n    var_4h = arg_ch;\n    (*_sym.imp.KERNEL32.dll_RaiseException)(dwExceptionCode, dwExceptionFlags, nNumberOfArguments, &lpArguments);\n    return;\n}\n",
        "token_count": 361
    },
    "0040ae7c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ae7c(int32_t arg_8h)\n\n{\n    if (arg_8h == 0x3a4) {\n        return *0x416754;\n    }\n    if (arg_8h == 0x3a8) {\n        return *0x416758;\n    }\n    if (arg_8h == 0x3b5) {\n        return *0x41675c;\n    }\n    if (arg_8h != 0x3b6) {\n        return 0;\n    }\n    return *0x416760;\n}\n",
        "token_count": 132
    },
    "00404c5e": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00404c5e(code **arg_8h, code **arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = 0;\n    uVar2 = ~-(arg_ch < arg_8h) & arg_ch + (3 - arg_8h) >> 2;\n    if (uVar2 != 0) {\n        do {\n            if (*arg_8h != NULL) {\n                (**arg_8h)();\n            }\n            arg_8h = arg_8h + 1;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < uVar2);\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "00406091": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00406091(uint32_t arg_8h, uint liDistanceToMove, uint lpNewFilePointer, uint arg_14h)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint arg_8h_00;\n    uint dwMoveMethod;\n    uint var_4h;\n    \n    iVar2 = fcn.0040bb60(arg_8h);\n    if (iVar2 == -1) {\n        puVar3 = fcn.00405af7();\n        *puVar3 = 9;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)\n                          (iVar2, liDistanceToMove, lpNewFilePointer, &dwMoveMethod, arg_14h);\n        if (iVar2 != 0) {\n            puVar1 = *((arg_8h >> 5) * 4 + 0x5dd3c8) + 4 + (arg_8h & 0x1f) * 0x40;\n            *puVar1 = *puVar1 & 0xfd;\n            goto code_r0x004060fe;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00405ad6(arg_8h_00);\n    }\n    dwMoveMethod = 0xffffffff;\n    var_4h = 0xffffffff;\ncode_r0x004060fe:\n    return CONCAT44(var_4h, dwMoveMethod);\n}\n",
        "token_count": 341
    },
    "0040ba4c": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040ba4c(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t unaff_EBP;\n    int32_t iVar2;\n    uint var_4h;\n    \n    fcn.00404f20(0x418540, 8);\n    uVar1 = *(unaff_EBP + 8);\n    iVar2 = (uVar1 & 0x1f) * 0x40 + *((uVar1 >> 5) * 4 + 0x5dd3c8);\n    if (*(iVar2 + 8) == 0) {\n        fcn.0040ab8a(10);\n        *(unaff_EBP + -4) = 0;\n        if (*(iVar2 + 8) == 0) {\n            fcn.004051bd(iVar2 + 0xc, 4000, 0);\n            *(iVar2 + 8) = *(iVar2 + 8) + 1;\n        }\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0040bad1();\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(*((uVar1 >> 5) * 4 + 0x5dd3c8) + 0xc + (uVar1 & 0x1f) * 0x40);\n    fcn.00404f65();\n    return;\n}\n",
        "token_count": 333
    },
    "0040bbc7": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.0040bbc7(uint32_t arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(*((arg_8h >> 5) * 4 + 0x5dd3c8) + (arg_8h & 0x1f) * 0x40 + 0xc);\n    return;\n}\n",
        "token_count": 97
    },
    "0040bbed": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint8_t __cdecl fcn.0040bbed(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar1 = fcn.00405af7();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < arg_8h) && (arg_8h < *0x5dde18)) {\n            return *(*((arg_8h >> 5) * 4 + 0x5dd3c8) + 4 + (arg_8h & 0x1f) * 0x40) & 0x40;\n        }\n        puVar1 = fcn.00405af7();\n        *puVar1 = 9;\n        fcn.004057d3();\n    }\n    return 0;\n}\n",
        "token_count": 206
    },
    "0040cef0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0040cef0(uint8_t param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    if (0x3f < param_1) {\n        return 0;\n    }\n    if (param_1 < 0x20) {\n        return CONCAT44(param_2 >> (param_1 & 0x1f), in_EAX >> (param_1 & 0x1f) | param_2 << 0x20 - (param_1 & 0x1f));\n    }\n    return param_2 >> (param_1 & 0x1f);\n}\n",
        "token_count": 145
    },
    "0040ccb1": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ccb1(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint16_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = 0x80000000;\n    uVar1 = *arg_ch;\n    uVar6 = *(arg_ch + 6) & 0x8000;\n    uVar2 = *(arg_ch + 6) >> 4;\n    uVar3 = uVar2 & 0x7ff;\n    if ((uVar2 & 0x7ff) == 0) {\n        if (((arg_ch[1] & 0xfffff) == 0) && (uVar1 == 0)) {\n            arg_8h[1] = 0;\n            *arg_8h = 0;\n            *(arg_8h + 2) = uVar6;\n            return;\n        }\n        uVar3 = uVar3 + 0x3c01;\n        uVar4 = 0;\n    }\n    else if (uVar3 == 0x7ff) {\n        uVar3 = 0x7fff;\n    }\n    else {\n        uVar3 = uVar3 + 0x3c00;\n    }\n    uVar5 = uVar1 >> 0x15 | (arg_ch[1] & 0xfffff) << 0xb | uVar4;\n    arg_8h[1] = uVar5;\n    *arg_8h = uVar1 << 0xb;\n    if (uVar4 == 0) {\n        do {\n            uVar3 = uVar3 - 1;\n            uVar5 = uVar5 * 2 | *arg_8h >> 0x1f;\n            *arg_8h = *arg_8h * 2;\n        } while (-1 < uVar5);\n        arg_8h[1] = uVar5;\n    }\n    *(arg_8h + 2) = uVar6 | uVar3;\n    return;\n}\n",
        "token_count": 502
    },
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401000(void)\n\n{\n    // [00] -r-x section size 69632 named .text\n    *0x5dd024 = vtable.std::_Generic_error_category.0;\n    fcn.004029b8(fcn.00410fe0);\n    return;\n}\n",
        "token_count": 66
    },
    "00401030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401030(void)\n\n{\n    *0x5dd028 = vtable.std::_Iostream_error_category.0;\n    fcn.004029b8(fcn.00410ff0);\n    return;\n}\n",
        "token_count": 50
    },
    "00401060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401060(void)\n\n{\n    *0x5dd02c = vtable.std::_System_error_category.0;\n    fcn.004029b8(fcn.00411000);\n    return;\n}\n",
        "token_count": 49
    },
    "00401530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00401530(int32_t arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    // WARNING: Ignoring partial resolution of indirect\n    in_ECX[4] = arg_8h;\n    var_ch = in_ECX;\n    if (0xf < in_ECX[5]) {\n        var_ch = *in_ECX;\n    }\n    *(var_ch + arg_8h) = 0;\n    return;\n}\n",
        "token_count": 159
    },
    "00401760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401760(void)\n\n{\n    uint var_4h;\n    \n    return 4;\n}\n",
        "token_count": 25
    },
    "00401a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401a00(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "00401b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401b60(void)\n\n{\n    *0x5dcfb0 = *0x5dcfb0 + 0x3cdf9;\n    return;\n}\n",
        "token_count": 40
    },
    "00401cb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401cb0(int32_t *param_1, int32_t param_2)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *param_1 = *param_1 - param_2;\n    return;\n}\n",
        "token_count": 66
    },
    "00402070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402070(uint param_1)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = param_1;\n    var_4h = param_1;\n    (**0x5dcfc8)(*0x5dcfb4, *0x5dcfb0, param_1, &var_ch);\n    return;\n}\n",
        "token_count": 92
    },
    "00402900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402900(uint Ptr)\n\n{\n    code *pcVar1;\n    uint *arg_8h;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_DecodePointer;\n    arg_8h = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x5deed0);\n    puVar2 = (*pcVar1)(*0x5deecc);\n    if ((puVar2 < arg_8h) || (iVar7 = puVar2 - arg_8h,  iVar7 + 4U < 4)) {\n        return 0;\n    }\n    uVar3 = fcn.00404e0b(arg_8h);\n    if (uVar3 < iVar7 + 4U) {\n        uVar4 = 0x800;\n        if (uVar3 < 0x800) {\n            uVar4 = uVar3;\n        }\n        if ((uVar4 + uVar3 < uVar3) || (iVar5 = fcn.00404ecb(arg_8h, uVar4 + uVar3),  iVar5 == 0)) {\n            if (uVar3 + 0x10 < uVar3) {\n                return 0;\n            }\n            iVar5 = fcn.00404ecb(arg_8h, uVar3 + 0x10);\n            if (iVar5 == 0) {\n                return 0;\n            }\n        }\n        puVar2 = iVar5 + (iVar7 >> 2) * 4;\n        *0x5deed0 = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar5);\n    }\n    uVar6 = (*_sym.imp.KERNEL32.dll_EncodePointer)(Ptr);\n    *puVar2 = uVar6;\n    *0x5deecc = (*_sym.imp.KERNEL32.dll_EncodePointer)(puVar2 + 1);\n    return Ptr;\n}\n",
        "token_count": 471
    },
    "00403d0d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403d0d(code *UNRECOVERED_JUMPTABLE)\n\n{\n    uint *in_FS_OFFSET;\n    \n    *in_FS_OFFSET = **in_FS_OFFSET;\n    // WARNING: Could not recover jumptable at 0x00403d36. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 90
    },
    "0040455e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool __cdecl fcn.0040455e(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.00409260(arg_8h + 9, in_ECX + 9);\n    return iVar1 == 0;\n}\n",
        "token_count": 85
    },
    "00404c26": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nvoid fcn.00404c26(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_EncodePointer)(0);\n    fcn.00404ac5(uVar2);\n    fcn.0040579b(uVar2);\n    fcn.00404a00(uVar2);\n    fcn.0040a829(uVar2);\n    fcn.004083bb(uVar2);\n    fcn.0040ae51(uVar2);\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"kernel32.dll\");\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    *0x5dee40 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2, \"FlsAlloc\");\n    *0x5dee40 = *0x5dee40 ^ *0x41dec0;\n    *0x5dee44 = (*pcVar1)(uVar2, \"FlsFree\");\n    *0x5dee44 = *0x5dee44 ^ *0x41dec0;\n    *0x5dee48 = (*pcVar1)(uVar2, \"FlsGetValue\");\n    *0x5dee48 = *0x5dee48 ^ *0x41dec0;\n    *0x5dee4c = (*pcVar1)(uVar2, \"FlsSetValue\");\n    *0x5dee4c = *0x5dee4c ^ *0x41dec0;\n    *0x5dee50 = (*pcVar1)(uVar2, \"InitializeCriticalSectionEx\");\n    *0x5dee50 = *0x5dee50 ^ *0x41dec0;\n    *0x5dee54 = (*pcVar1)(uVar2, \"CreateEventExW\");\n    *0x5dee54 = *0x5dee54 ^ *0x41dec0;\n    *0x5dee58 = (*pcVar1)(uVar2, \"CreateSemaphoreExW\");\n    *0x5dee58 = *0x5dee58 ^ *0x41dec0;\n    *0x5dee5c = (*pcVar1)(uVar2, \"SetThreadStackGuarantee\");\n    *0x5dee5c = *0x5dee5c ^ *0x41dec0;\n    *0x5dee60 = (*pcVar1)(uVar2, \"CreateThreadpoolTimer\");\n    *0x5dee60 = *0x5dee60 ^ *0x41dec0;\n    *0x5dee64 = (*pcVar1)(uVar2, \"SetThreadpoolTimer\");\n    *0x5dee64 = *0x5dee64 ^ *0x41dec0;\n    *0x5dee68 = (*pcVar1)(uVar2, \"WaitForThreadpoolTimerCallbacks\");\n    *0x5dee68 = *0x5dee68 ^ *0x41dec0;\n    *0x5dee6c = (*pcVar1)(uVar2, \"CloseThreadpoolTimer\");\n    *0x5dee6c = *0x5dee6c ^ *0x41dec0;\n    *0x5dee70 = (*pcVar1)(uVar2, \"CreateThreadpoolWait\");\n    *0x5dee70 = *0x5dee70 ^ *0x41dec0;\n    *0x5dee74 = (*pcVar1)(uVar2, \"SetThreadpoolWait\");\n    *0x5dee74 = *0x5dee74 ^ *0x41dec0;\n    *0x5dee78 = (*pcVar1)(uVar2, \"CloseThreadpoolWait\");\n    *0x5dee78 = *0x5dee78 ^ *0x41dec0;\n    *0x5dee7c = (*pcVar1)(uVar2, \"FlushProcessWriteBuffers\");\n    *0x5dee7c = *0x5dee7c ^ *0x41dec0;\n    *0x5dee80 = (*pcVar1)(uVar2, \"FreeLibraryWhenCallbackReturns\");\n    *0x5dee80 = *0x5dee80 ^ *0x41dec0;\n    *0x5dee84 = (*pcVar1)(uVar2, \"GetCurrentProcessorNumber\");\n    *0x5dee84 = *0x5dee84 ^ *0x41dec0;\n    *0x5dee88 = (*pcVar1)(uVar2, \"GetLogicalProcessorInformation\");\n    *0x5dee88 = *0x5dee88 ^ *0x41dec0;\n    *0x5dee8c = (*pcVar1)(uVar2, \"CreateSymbolicLinkW\");\n    *0x5dee8c = *0x5dee8c ^ *0x41dec0;\n    *0x5dee90 = (*pcVar1)(uVar2, \"SetDefaultDllDirectories\");\n    *0x5dee90 = *0x5dee90 ^ *0x41dec0;\n    *0x5dee98 = (*pcVar1)(uVar2, \"EnumSystemLocalesEx\");\n    *0x5dee98 = *0x5dee98 ^ *0x41dec0;\n    *0x5dee94 = (*pcVar1)(uVar2, \"CompareStringEx\");\n    *0x5dee94 = *0x5dee94 ^ *0x41dec0;\n    *0x5dee9c = (*pcVar1)(uVar2, \"GetDateFormatEx\");\n    *0x5dee9c = *0x5dee9c ^ *0x41dec0;\n    *0x5deea0 = (*pcVar1)(uVar2, \"GetLocaleInfoEx\");\n    *0x5deea0 = *0x5deea0 ^ *0x41dec0;\n    *0x5deea4 = (*pcVar1)(uVar2, \"GetTimeFormatEx\");\n    *0x5deea4 = *0x5deea4 ^ *0x41dec0;\n    *0x5deea8 = (*pcVar1)(uVar2, \"GetUserDefaultLocaleName\");\n    *0x5deea8 = *0x5deea8 ^ *0x41dec0;\n    *0x5deeac = (*pcVar1)(uVar2, \"IsValidLocaleName\");\n    *0x5deeac = *0x5deeac ^ *0x41dec0;\n    *0x5deeb0 = (*pcVar1)(uVar2, \"LCMapStringEx\");\n    *0x5deeb0 = *0x5deeb0 ^ *0x41dec0;\n    *0x5deeb4 = (*pcVar1)(uVar2, \"GetCurrentPackageId\");\n    *0x5deeb4 = *0x5deeb4 ^ *0x41dec0;\n    *0x5deeb8 = (*pcVar1)(uVar2, \"GetTickCount64\");\n    *0x5deeb8 = *0x5deeb8 ^ *0x41dec0;\n    *0x5deebc = (*pcVar1)(uVar2, \"GetFileInformationByHandleExW\");\n    *0x5deebc = *0x5deebc ^ *0x41dec0;\n    uVar3 = (*pcVar1)(uVar2, \"SetFileInformationByHandleW\");\n    *0x5deec0 = uVar3 ^ *0x41dec0;\n    return;\n}\n",
        "token_count": 1694
    },
    "00404c94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404c94(code **arg_8h, code **arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    while ((arg_8h < arg_ch && (iVar1 == 0))) {\n        if (*arg_8h != NULL) {\n            iVar1 = (**arg_8h)();\n        }\n        arg_8h = arg_8h + 1;\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "00404df7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00404df7(uint arg_8h)\n\n{\n    fcn.00404cc8(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 56
    },
    "004057e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004057e3(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = sub.KERNEL32.dll_IsProcessorFeaturePresent(0x17);\n    if (iVar2 != 0) {\n        pcVar1 = swi(0x29);\n        (*pcVar1)();\n    }\n    fcn.00405676(2, 0xc0000417, 1);\n    fcn.004054d2(0xc0000417);\n    return;\n}\n",
        "token_count": 114
    },
    "004059ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.004059ed(uint32_t arg_8h)\n\n{\n    if ((arg_8h < 0x41dee8) || (0x41e148 < arg_8h)) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg_8h + 0x20);\n    }\n    else {\n        fcn.0040ab8a((arg_8h - 0x41dee8 >> 5) + 0x10);\n        *(arg_8h + 0xc) = *(arg_8h + 0xc) | 0x8000;\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00405a5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00405a5c(uint32_t arg_8h)\n\n{\n    if ((0x41dee7 < arg_8h) && (arg_8h < 0x41e149)) {\n        *(arg_8h + 0xc) = *(arg_8h + 0xc) & 0xffff7fff;\n        fcn.0040acf4((arg_8h - 0x41dee8 >> 5) + 0x10);\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg_8h + 0x20);\n    return;\n}\n",
        "token_count": 156
    },
    "00405a96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00405a96(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if (arg_8h < 0x14) {\n        *(arg_ch + 0xc) = *(arg_ch + 0xc) & 0xffff7fff;\n        fcn.0040acf4(arg_8h + 0x10);\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg_ch + 0x20);\n    return;\n}\n",
        "token_count": 128
    },
    "00405ac3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00405ac3(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00408138();\n    if (iVar1 == 0) {\n        return 0x41e2d4;\n    }\n    return iVar1 + 0xc;\n}\n",
        "token_count": 66
    },
    "00405b0a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.00405b0a(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    do {\n        if (arg_8h == *(uVar1 * 8 + 0x41e168)) {\n            return *(uVar1 * 8 + 0x41e16c);\n        }\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x2d);\n    if (arg_8h - 0x13U < 0x12) {\n        return 0xd;\n    }\n    return (-(0xe < arg_8h - 0xbcU) & 0xe) + 8;\n}\n",
        "token_count": 183
    },
    "00406f2b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406f2b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_2c8h;\n    \n    fcn.004070ed(arg_8h, arg_ch);\n    fcn.004070ed(arg_10h, arg_14h);\n    fcn.0040bcb7();\n    fcn.00406f6c();\n    return;\n}\n",
        "token_count": 101
    },
    "00407129": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00407129(double *arg_8h, ulong *arg_ch, double *arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_28h;\n    char *var_24h;\n    double dStack36;\n    ulong uStack28;\n    double dStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    if (*0x5dd4c8 == 0) {\n        pcVar1 = fcn.0040c0c1;\n    }\n    else {\n        pcVar1 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x5dde10);\n    }\n    if (arg_14h < 0xa7) {\n        if (arg_14h == 0xa6) {\n            var_28h = 3;\n            var_24h = \"exp10\";\n        }\n        else if (arg_14h < 0x1a) {\n            if (arg_14h == 0x19) {\n                var_24h = 0x413aa8;\ncode_r0x004071fd:\n                var_28h = 4;\n                dStack36 = *arg_8h;\n                uStack28 = *arg_ch;\n                dStack20 = *arg_10h;\n                (*pcVar1)(&var_28h);\n                goto code_r0x004073cf;\n            }\n            if (arg_14h == 2) {\n                var_28h = 2;\n                var_24h = 0x413a98;\n            }\n            else {\n                if (arg_14h == 3) {\n                    var_24h = 0x413a98;\n                    goto code_r0x004073a0;\n                }\n                if (arg_14h == 8) {\n                    var_28h = 2;\n                    var_24h = \"log10\";\n                }\n                else {\n                    if (arg_14h == 9) {\n                        var_24h = \"log10\";\n                        goto code_r0x004073a0;\n                    }\n                    if (arg_14h != 0xe) {\n                        if (arg_14h != 0xf) {\n                            if (arg_14h != 0x18) {\n                                return;\n                            }\n                            var_28h = 3;\n                            goto code_r0x004071b8;\n                        }\n                        var_24h = 0x413aa4;\n                        goto code_r0x004071fd;\n                    }\n                    var_28h = 3;\n                    var_24h = 0x413aa4;\n                }\n            }\n        }\n        else {\n            if (arg_14h == 0x1a) {\n                *arg_10h = 1.0;\n                return;\n            }\n            if (arg_14h != 0x1b) {\n                if (arg_14h == 0x1c) goto code_r0x004072ca;\n                if (arg_14h != 0x1d) {\n                    if (arg_14h == 0x31) goto code_r0x00407393;\n                    if (arg_14h != 0x3a) {\n                        if (arg_14h != 0x3d) {\n                            return;\n                        }\n                        goto code_r0x0040729c;\n                    }\n                    goto code_r0x004072a8;\n                }\n                var_24h = 0x413aa8;\n                goto code_r0x004072bb;\n            }\n            var_28h = 2;\ncode_r0x004071b8:\n            var_24h = 0x413aa8;\n        }\n        dStack36 = *arg_8h;\n        uStack28 = *arg_ch;\n        dStack20 = *arg_10h;\n        iVar2 = (*pcVar1)(&var_28h);\n        if (iVar2 == 0) {\n            puVar3 = fcn.00405af7();\n            *puVar3 = 0x22;\n        }\n        goto code_r0x004073cf;\n    }\n    if (0xd < arg_14h - 1000U) {\n        return;\n    }\n    // switch table (14 cases) at 0x4073d9\n    switch(*((arg_14h - 1000U) * 4 + 0x4073d9)) {\n    case 0x40729c:\ncode_r0x0040729c:\n        var_24h = \"asin\";\n        goto code_r0x004073a0;\n    case 0x4072a8:\ncode_r0x004072a8:\n        var_24h = \"acos\";\n        goto code_r0x004073a0;\n    case 0x4072ca:\ncode_r0x004072ca:\n        var_24h = 0x413aa8;\n        goto code_r0x004073a0;\n    case 0x407316:\n        var_24h = 0x413a98;\n        break;\n    case 0x40731f:\n        var_24h = \"log10\";\n        break;\n    case 0x407328:\n        var_24h = 0x413aa4;\n        break;\n    case 0x407331:\n        var_24h = \"atan\";\n        break;\n    case 0x40733a:\n        var_24h = \"ceil\";\n        break;\n    case 0x407346:\n        var_24h = \"floor\";\n        break;\n    case 0x407352:\n        var_24h = \"modf\";\n        break;\n    case 0x40735e:\n        var_24h = 0x413ae4;\n        goto code_r0x00407365;\n    case 0x407381:\n        var_24h = 0x413ae8;\n        goto code_r0x00407365;\n    case 0x40738a:\n        var_24h = 0x413aec;\ncode_r0x00407365:\n        dStack20 = *arg_8h * CONCAT44(var_4h, var_8h);\n        *arg_10h = dStack20;\n        dStack36 = *arg_8h;\n        uStack28 = *arg_ch;\n        goto code_r0x004073af;\n    case 0x407393:\ncode_r0x00407393:\n        var_24h = 0x413af0;\n        goto code_r0x004073a0;\n    }\ncode_r0x004072bb:\n    *arg_10h = *arg_8h;\ncode_r0x004073a0:\n    dStack36 = *arg_8h;\n    uStack28 = *arg_ch;\n    dStack20 = *arg_10h;\ncode_r0x004073af:\n    var_28h = 1;\n    iVar2 = (*pcVar1)(&var_28h);\n    if (iVar2 == 0) {\n        puVar3 = fcn.00405af7();\n        *puVar3 = 0x21;\n    }\ncode_r0x004073cf:\n    *arg_10h = dStack20;\n    return;\n}\n",
        "token_count": 1657
    },
    "0040767a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040767a(int32_t arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    double dVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    \n    dVar2 = CONCAT17(arg_ch._3_1_, CONCAT16(arg_ch._2_1_, CONCAT24(arg_ch, arg_8h)));\n    if (dVar2 == 0.0) {\n        iVar4 = 0;\n    }\n    else if (((arg_ch & 0x7ff00000) == 0) && (((arg_ch & 0xfffff) != 0 || (arg_8h != 0)))) {\n        iVar4 = -0x3fd;\n        if ((arg_ch & 0x100000) == 0) {\n            do {\n                uVar1 = arg_ch * 2;\n                arg_ch._0_2_ = uVar1;\n                arg_ch = uVar1;\n                if (arg_8h < 0) {\n                    arg_ch = uVar1 | 1;\n                }\n                arg_8h = arg_8h * 2;\n                iVar4 = iVar4 + -1;\n            } while ((uVar1 & 0x100000) == 0);\n            arg_ch = uVar1 & 0xffff0000 | arg_ch;\n        }\n        uVar3 = arg_ch >> 0x10 & 0xffef;\n        arg_ch._2_1_ = uVar3;\n        arg_ch._3_1_ = uVar3 >> 8;\n        if (((0.0 < dVar2) << 8 | (dVar2 == 0.0) << 0xe) == 0) {\n            arg_ch._3_1_ = arg_ch._3_1_ | 0x80;\n        }\n        fcn.0040774c(arg_8h, CONCAT17(arg_ch._3_1_, CONCAT16(arg_ch._2_1_, CONCAT24(arg_ch, arg_8h))) >> 0x20, 0);\n    }\n    else {\n        fcn.0040774c(arg_8h, dVar2 >> 0x20, 0);\n        iVar4 = (arg_ch >> 0x14 & 0x7ff) - 0x3fe;\n    }\n    *arg_10h = iVar4;\n    return;\n}\n",
        "token_count": 539
    },
    "00407afe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407afe(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    fcn.00407b1f(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, 0);\n    return;\n}\n",
        "token_count": 89
    },
    "00407e31": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nfloat10 __cdecl\nfcn.00407e31(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    double dVar1;\n    int32_t iVar2;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uchar *var_4h;\n    \n    var_4h = &stack0xfffffffc;\n    var_1ch = 0;\n    iVar2 = 0;\n    do {\n        if (*(iVar2 * 8 + 0x41e460) == arg_ch) {\n            var_1ch = *(iVar2 * 8 + 0x41e464);\n            break;\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x1d);\n    if (var_1ch == 0) {\n        fcn.00407f58(arg_28h, 0xffff);\n        fcn.00407e04(arg_8h);\n        dVar1 = CONCAT44(arg_24h, arg_20h);\n    }\n    else {\n        var_18h = arg_10h;\n        var_14h = arg_14h;\n        var_10h = arg_18h;\n        var_ch = arg_1ch;\n        var_8h = arg_20h;\n        var_20h = arg_8h;\n        var_4h = arg_24h;\n        fcn.00407f58(arg_28h, 0xffff);\n        iVar2 = fcn.0040c0c1(&var_20h);\n        if (iVar2 == 0) {\n            fcn.00407e04(arg_8h);\n        }\n        dVar1 = CONCAT44(var_4h, var_8h);\n    }\n    return dVar1;\n}\n",
        "token_count": 481
    },
    "00408c29": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00408c29(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar2 = arg_ch;\n    if (arg_ch == NULL) {\n        fcn.0040833c();\n        fcn.00408374();\n        pcVar1 = swi(3);\n        uVar5 = (*pcVar1)();\n        return uVar5;\n    }\n    uVar5 = 0;\n    iVar6 = 0;\n    if (0 < *arg_ch) {\n        arg_ch = NULL;\n        do {\n            puVar4 = *(*(arg_8h + 0x1c) + 0xc);\n            for (uVar3 = *puVar4; in_EAX = uVar3,  0 < uVar3; uVar3 = uVar3 - 1) {\n                puVar4 = puVar4 + 1;\n                in_EAX = fcn.0040912e(piVar2[1] + arg_ch, *puVar4, *(arg_8h + 0x1c));\n                if (in_EAX != 0) {\n                    uVar5 = 1;\n                    break;\n                }\n            }\n            iVar6 = iVar6 + 1;\n            arg_ch = arg_ch + 0x10;\n        } while (iVar6 < *piVar2);\n    }\n    return in_EAX & 0xffffff00 | uVar5;\n}\n",
        "token_count": 388
    },
    "00408cb1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408cb1(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = arg_ch[1];\n    iVar2 = *arg_ch + arg_8h;\n    if (-1 < iVar1) {\n        iVar2 = iVar2 + *(*(iVar1 + arg_8h) + arg_ch[2]) + iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 110
    },
    "004093e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004093e5(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    fcn.00409406(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, 0);\n    return;\n}\n",
        "token_count": 88
    },
    "00409406": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl\nfcn.00409406(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    if ((arg_14h == 0x65) || (arg_14h == 0x45)) {\n        fcn.00409957(arg_8h, arg_ch, arg_10h, arg_18h, arg_1ch, arg_20h);\n    }\n    else {\n        if (arg_14h == 0x66) {\n            fcn.00409b11(arg_8h, arg_ch, arg_10h, arg_18h, arg_20h);\n            return;\n        }\n        if ((arg_14h == 0x61) || (arg_14h == 0x41)) {\n            fcn.0040948c(arg_8h, arg_ch, arg_10h, arg_18h, arg_1ch, arg_20h);\n        }\n        else {\n            fcn.00409bd2(arg_8h, arg_ch, arg_10h, arg_18h, arg_1ch, arg_20h);\n        }\n    }\n    return;\n}\n",
        "token_count": 295
    },
    "004097e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.004097e8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00409957(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0);\n    return;\n}\n",
        "token_count": 92
    },
    "00409dcd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409dcd(uint8_t *arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.0040935d(arg_ch);\n    iVar2 = fcn.0040c954(*arg_8h);\n    bVar4 = iVar2 == 0x65;\n    while (!bVar4) {\n        arg_8h = arg_8h + 1;\n        iVar2 = fcn.0040c7e6(*arg_8h);\n        bVar4 = iVar2 == 0;\n    }\n    iVar2 = fcn.0040c954(*arg_8h);\n    if (iVar2 == 0x78) {\n        arg_8h = arg_8h + 2;\n    }\n    uVar3 = *arg_8h;\n    *arg_8h = ***(var_10h + 0x84);\n    do {\n        arg_8h = arg_8h + 1;\n        uVar1 = *arg_8h;\n        *arg_8h = uVar3;\n        uVar3 = uVar1;\n    } while (*arg_8h != 0);\n    if (var_4h != '\\0') {\n        *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n    }\n    return;\n}\n",
        "token_count": 368
    },
    "00409e5b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00409e5b(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_ch != 0) {\n        iVar1 = fcn.004047b0(arg_8h);\n        fcn.00402bf0(arg_8h + arg_ch, arg_8h, iVar1 + 1);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00409e83": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409e83(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0040cf0f(0, 0x10000, 0x30000);\n    if (iVar2 == 0) {\n        return;\n    }\n    fcn.004057e3(0, 0, 0, 0, 0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 112
    },
    "00409eaa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409eaa(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    do {\n        uVar1 = (*_sym.imp.KERNEL32.dll_EncodePointer)(*(uVar2 + 0x41e570));\n        *(uVar2 + 0x41e570) = uVar1;\n        uVar2 = uVar2 + 4;\n    } while (uVar2 < 0x28);\n    return;\n}\n",
        "token_count": 114
    },
    "0040a69b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a69b(void)\n\n{\n    code **ppcVar1;\n    \n    for (ppcVar1 = 0x417fa0; ppcVar1 < 0x417fa0; ppcVar1 = ppcVar1 + 1) {\n        if (*ppcVar1 != NULL) {\n            (**ppcVar1)();\n        }\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0040a6db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t fcn.0040a6db(void)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t arg_8h;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int32_t iVar6;\n    uint var_4h;\n    int16_t *piVar5;\n    \n    piVar2 = (*_sym.imp.KERNEL32.dll_GetEnvironmentStringsW)();\n    arg_8h = 0;\n    if (piVar2 != NULL) {\n        iVar1 = *piVar2;\n        piVar4 = piVar2;\n        while (iVar1 != 0) {\n            do {\n                piVar5 = piVar4;\n                piVar4 = piVar5 + 1;\n            } while (*piVar4 != 0);\n            piVar4 = piVar5 + 2;\n            iVar1 = *piVar4;\n        }\n        iVar6 = (piVar4 - piVar2 >> 1) + 1;\n        iVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, piVar2, iVar6, 0, 0, 0, 0);\n        if ((iVar3 == 0) || (arg_8h = fcn.00404e84(iVar3),  arg_8h == 0)) {\n            (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(piVar2);\n            arg_8h = 0;\n        }\n        else {\n            iVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, piVar2, iVar6, arg_8h, iVar3, 0, 0);\n            if (iVar3 == 0) {\n                fcn.00404ad2(arg_8h);\n                arg_8h = 0;\n            }\n            (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(piVar2);\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 459
    },
    "0040aa58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.0040aa58(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    iVar2 = 0xe3;\n    do {\n        iVar3 = (iVar2 + iVar4) / 2;\n        iVar1 = fcn.0040ab1c(arg_8h, *(iVar3 * 8 + 0x414dc0), 0x55);\n        if (iVar1 == 0) {\n            return *(iVar3 * 8 + 0x414dc4);\n        }\n        if (iVar1 < 0) {\n            iVar2 = iVar3 + -1;\n        }\n        else {\n            iVar4 = iVar3 + 1;\n        }\n    } while (iVar4 <= iVar2);\n    return 0xffffffff;\n}\n",
        "token_count": 214
    },
    "0040ad10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.0040ad10(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    arg_8h = *(arg_8h + 0x3c) + arg_8h;\n    iVar1 = *(arg_8h + 0x14) + 0x18 + arg_8h;\n    if (*(arg_8h + 6) != 0) {\n        do {\n            if ((*(iVar1 + 0xc) <= arg_ch) && (arg_ch < *(iVar1 + 8) + *(iVar1 + 0xc))) {\n                return iVar1;\n            }\n            uVar2 = uVar2 + 1;\n            iVar1 = iVar1 + 0x28;\n        } while (uVar2 < *(arg_8h + 6));\n    }\n    return 0;\n}\n",
        "token_count": 229
    },
    "0040ae20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool __cdecl fcn.0040ae20(int16_t *arg_8h)\n\n{\n    bool bVar1;\n    \n    if (*arg_8h != 0x5a4d) {\n        return false;\n    }\n    bVar1 = false;\n    if (*(*(arg_8h + 0x1e) + arg_8h) == 0x4550) {\n        bVar1 = *(*(arg_8h + 0x1e) + arg_8h + 6) == 0x10b;\n    }\n    return bVar1;\n}\n",
        "token_count": 145
    },
    "0040af24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.0040af24(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    \n    puVar2 = arg_8h + 0x18;\n    fcn.004044c0(puVar2, 0, 0x101);\n    *(arg_8h + 4) = 0;\n    *(arg_8h + 8) = 0;\n    *(arg_8h + 0x21c) = 0;\n    iVar1 = 0x101;\n    *(arg_8h + 0xc) = 0;\n    *(arg_8h + 0x10) = 0;\n    *(arg_8h + 0x14) = 0;\n    do {\n        *puVar2 = puVar2[0x41e8c0 - arg_8h];\n        puVar2 = puVar2 + 1;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    puVar2 = arg_8h + 0x119;\n    iVar1 = 0x100;\n    do {\n        *puVar2 = puVar2[0x41e8c0 - arg_8h];\n        puVar2 = puVar2 + 1;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 331
    },
    "0040cc99": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.0040cc99(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040cb67(arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 71
    },
    "0040d0ad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.0040d0ad(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    piVar2 = arg_8h;\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    return (piVar2 - arg_8h >> 1) + -1;\n}\n",
        "token_count": 120
    },
    "0040d5e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl\nfcn.0040d5e6(int32_t *arg_8h, uint dwInfoType, uint lpMultiByteStr, uint cbMultiByte, uint lpCharType, int32_t CodePage\n            , int32_t arg_20h)\n\n{\n    uint32_t arg_8h_00;\n    uint32_t arg_8h_01;\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint *arg_8h_02;\n    int32_t iStack44;\n    int32_t iStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_10h;\n    uint var_4h;\n    \n    arg_8h_01 = *0x41dec0 ^ &stack0xfffffffc;\n    if (CodePage == 0) {\n        CodePage = *(*arg_8h + 4);\n    }\n    uStack24 = 0;\n    uStack28 = 0;\n    uStack32 = cbMultiByte;\n    uStack36 = lpMultiByteStr;\n    iStack40 = (arg_20h != 0) * 8 + 1;\n    piVar2 = &iStack44;\n    iStack44 = CodePage;\n    uVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n    if (uVar1 == 0) goto code_r0x0040d6ca;\n    if (((uVar1 < 1) || (0x7ffffff0 < uVar1)) || (uVar1 * 2 + 8 <= uVar1 * 2)) {\n        arg_8h_02 = NULL;\n    }\n    else {\n        arg_8h_00 = uVar1 * 2 + 8;\n        if (arg_8h_00 < 0x401) {\n            fcn.0040d370();\n            if (*0x10 == 0x2c) goto code_r0x0040d6ca;\n            iStack44 = 0xcccc;\n        }\n        else {\n            piVar2 = fcn.00404a0d(arg_8h_00);\n            if (piVar2 == NULL) goto code_r0x0040d6ca;\n            *piVar2 = 0xdddd;\n        }\n        arg_8h_02 = piVar2 + 2;\n    }\n    if (arg_8h_02 != NULL) {\n        fcn.004044c0(arg_8h_02, 0, uVar1 * 2);\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(CodePage, 1, lpMultiByteStr, cbMultiByte, arg_8h_02, uVar1)\n        ;\n        if (iVar3 != 0) {\n            (*_sym.imp.KERNEL32.dll_GetStringTypeW)(dwInfoType, arg_8h_02, iVar3, lpCharType);\n        }\n        fcn.0040aa3a(arg_8h_02);\n    }\ncode_r0x0040d6ca:\n    fcn.00403a01(arg_8h_01);\n    return;\n}\n",
        "token_count": 776
    },
    "0040e43d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e43d(uint *arg_8h)\n\n{\n    if (arg_8h != NULL) {\n        fcn.00404ad2(arg_8h[1]);\n        fcn.00404ad2(arg_8h[2]);\n        fcn.00404ad2(arg_8h[3]);\n        fcn.00404ad2(arg_8h[4]);\n        fcn.00404ad2(arg_8h[5]);\n        fcn.00404ad2(arg_8h[6]);\n        fcn.00404ad2(*arg_8h);\n        fcn.00404ad2(arg_8h[8]);\n        fcn.00404ad2(arg_8h[9]);\n        fcn.00404ad2(arg_8h[10]);\n        fcn.00404ad2(arg_8h[0xb]);\n        fcn.00404ad2(arg_8h[0xc]);\n        fcn.00404ad2(arg_8h[0xd]);\n        fcn.00404ad2(arg_8h[7]);\n        fcn.00404ad2(arg_8h[0xe]);\n        fcn.00404ad2(arg_8h[0xf]);\n        fcn.00404ad2(arg_8h[0x10]);\n        fcn.00404ad2(arg_8h[0x11]);\n        fcn.00404ad2(arg_8h[0x12]);\n        fcn.00404ad2(arg_8h[0x13]);\n        fcn.00404ad2(arg_8h[0x14]);\n        fcn.00404ad2(arg_8h[0x15]);\n        fcn.00404ad2(arg_8h[0x16]);\n        fcn.00404ad2(arg_8h[0x17]);\n        fcn.00404ad2(arg_8h[0x18]);\n        fcn.00404ad2(arg_8h[0x19]);\n        fcn.00404ad2(arg_8h[0x1a]);\n        fcn.00404ad2(arg_8h[0x1b]);\n        fcn.00404ad2(arg_8h[0x1c]);\n        fcn.00404ad2(arg_8h[0x1d]);\n        fcn.00404ad2(arg_8h[0x1e]);\n        fcn.00404ad2(arg_8h[0x1f]);\n        fcn.00404ad2(arg_8h[0x20]);\n        fcn.00404ad2(arg_8h[0x21]);\n        fcn.00404ad2(arg_8h[0x22]);\n        fcn.00404ad2(arg_8h[0x23]);\n        fcn.00404ad2(arg_8h[0x24]);\n        fcn.00404ad2(arg_8h[0x25]);\n        fcn.00404ad2(arg_8h[0x26]);\n        fcn.00404ad2(arg_8h[0x27]);\n        fcn.00404ad2(arg_8h[0x28]);\n        fcn.00404ad2(arg_8h[0x29]);\n        fcn.00404ad2(arg_8h[0x2a]);\n        fcn.00404ad2(arg_8h[0x2e]);\n        fcn.00404ad2(arg_8h[0x2f]);\n        fcn.00404ad2(arg_8h[0x30]);\n        fcn.00404ad2(arg_8h[0x31]);\n        fcn.00404ad2(arg_8h[0x32]);\n        fcn.00404ad2(arg_8h[0x33]);\n        fcn.00404ad2(arg_8h[0x2d]);\n        fcn.00404ad2(arg_8h[0x35]);\n        fcn.00404ad2(arg_8h[0x36]);\n        fcn.00404ad2(arg_8h[0x37]);\n        fcn.00404ad2(arg_8h[0x38]);\n        fcn.00404ad2(arg_8h[0x39]);\n        fcn.00404ad2(arg_8h[0x3a]);\n        fcn.00404ad2(arg_8h[0x34]);\n        fcn.00404ad2(arg_8h[0x3b]);\n        fcn.00404ad2(arg_8h[0x3c]);\n        fcn.00404ad2(arg_8h[0x3d]);\n        fcn.00404ad2(arg_8h[0x3e]);\n        fcn.00404ad2(arg_8h[0x3f]);\n        fcn.00404ad2(arg_8h[0x40]);\n        fcn.00404ad2(arg_8h[0x41]);\n        fcn.00404ad2(arg_8h[0x42]);\n        fcn.00404ad2(arg_8h[0x43]);\n        fcn.00404ad2(arg_8h[0x44]);\n        fcn.00404ad2(arg_8h[0x45]);\n        fcn.00404ad2(arg_8h[0x46]);\n        fcn.00404ad2(arg_8h[0x47]);\n        fcn.00404ad2(arg_8h[0x48]);\n        fcn.00404ad2(arg_8h[0x49]);\n        fcn.00404ad2(arg_8h[0x4a]);\n        fcn.00404ad2(arg_8h[0x4b]);\n        fcn.00404ad2(arg_8h[0x4c]);\n        fcn.00404ad2(arg_8h[0x4d]);\n        fcn.00404ad2(arg_8h[0x4e]);\n        fcn.00404ad2(arg_8h[0x4f]);\n        fcn.00404ad2(arg_8h[0x50]);\n        fcn.00404ad2(arg_8h[0x51]);\n        fcn.00404ad2(arg_8h[0x52]);\n        fcn.00404ad2(arg_8h[0x53]);\n        fcn.00404ad2(arg_8h[0x54]);\n        fcn.00404ad2(arg_8h[0x55]);\n        fcn.00404ad2(arg_8h[0x56]);\n        fcn.00404ad2(arg_8h[0x57]);\n        fcn.00404ad2(arg_8h[0x58]);\n    }\n    return;\n}\n",
        "token_count": 1510
    },
    "00410cdf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410cdf(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00410bea(arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 55
    },
    "00401180": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401180(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_ECX;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = in_ECX[1];\n    if ((uVar1 == arg_8h[1]) && (uVar1 = *arg_8h,  *in_ECX == uVar1)) {\n        var_ch = 1;\n    }\n    else {\n        var_ch = 0;\n    }\n    return uVar1 & 0xffffff00 | var_ch;\n}\n",
        "token_count": 173
    },
    "0040aa3a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040aa3a(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.00404ad2(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "004054c4": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004054c4(uint dwMilliseconds)\n\n{\n    (*_sym.imp.KERNEL32.dll_Sleep)(dwMilliseconds);\n    return;\n}\n",
        "token_count": 35
    },
    "0040b7d2": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.0040b7d2(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    *0x5dd3c4 = *0x5dd3c4 + 1;\n    iVar1 = fcn.00404e84(0x1000);\n    arg_8h[2] = iVar1;\n    if (iVar1 == 0) {\n        arg_8h[3] = arg_8h[3] | 4;\n        arg_8h[2] = arg_8h + 5;\n        arg_8h[6] = 2;\n    }\n    else {\n        arg_8h[3] = arg_8h[3] | 8;\n        arg_8h[6] = 0x1000;\n    }\n    arg_8h[1] = 0;\n    *arg_8h = arg_8h[2];\n    return;\n}\n",
        "token_count": 226
    },
    "00410f31": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00410f31(void)\n\n{\n    *0x41f1a4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 65
    },
    "00402837": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00402837(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *arg_8h_00;\n    uint uVar4;\n    code *var_10h;\n    char *var_4h;\n    \n    var_4h = &stack0xfffffffc;\n    do {\n        iVar2 = fcn.00404a0d(arg_8h);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.00404a9f(arg_8h);\n    } while (iVar2 != 0);\n    uVar4 = 1;\n    arg_8h_00 = &var_4h;\n    var_4h = \"bad allocation\";\n    fcn.00404860(arg_8h_00);\n    uVar3 = 0x41803c;\n    var_10h = vtable.std::bad_alloc.0;\n    fcn.00403a10(&var_10h, 0x41803c);\n    pcVar1 = swi(3);\n    (*pcVar1)(uVar3, arg_8h_00, uVar4);\n    return;\n}\n",
        "token_count": 288
    },
    "00403e0e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403e0e(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00408120();\n    piVar1 = *(iVar2 + 0x98);\n    while( true ) {\n        if (piVar1 == NULL) {\n            return 1;\n        }\n        if (*piVar1 == arg_8h) break;\n        piVar1 = piVar1[1];\n    }\n    return 0;\n}\n",
        "token_count": 119
    },
    "00404a0d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.00404a0d(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    \n    if (arg_8h < 0xffffffe1) {\n        do {\n            if (*0x5dd4dc == 0) {\n                fcn.0040a398();\n                fcn.0040a3f5(0x1e);\n                fcn.00404b3e(0xff);\n            }\n            uVar4 = arg_8h;\n            if (arg_8h == 0) {\n                uVar4 = 1;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x5dd4dc, 0, uVar4);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            if (*0x5ddc34 == 0) {\n                puVar3 = fcn.00405af7();\n                *puVar3 = 0xc;\n                break;\n            }\n            iVar2 = fcn.00404a9f(arg_8h);\n        } while (iVar2 != 0);\n        puVar3 = fcn.00405af7();\n        *puVar3 = 0xc;\n    }\n    else {\n        fcn.00404a9f(arg_8h);\n        puVar3 = fcn.00405af7();\n        *puVar3 = 0xc;\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 368
    },
    "00406110": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406110(void)\n\n{\n    uchar *in_EAX;\n    uint *puVar1;\n    uint *puVar2;\n    uint unaff_retaddr;\n    uchar auStack4 [4];\n    \n    puVar2 = &stack0x00000000 - in_EAX & ~-(*0x10 < in_EAX);\n    for (puVar1 = auStack4 & 0xfffff000; puVar2 < puVar1; puVar1 = puVar1 + -0x400) {\n    }\n    *puVar2 = unaff_retaddr;\n    return;\n}\n",
        "token_count": 132
    },
    "004092ec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004092ec(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00404f20(0x418438, 0xc);\n    fcn.0040ab8a(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x5dd4d8;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x5dd4d4;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00409331;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00404ad2(arg_8h_00);\ncode_r0x00409331:\n        fcn.00404ad2(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00409354();\n    fcn.00404f65();\n    return;\n}\n",
        "token_count": 397
    },
    "0040a3d1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.0040a3d1(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    do {\n        if (arg_8h == *(uVar1 * 8 + 0x413c38)) {\n            return *(uVar1 * 8 + 0x413c3c);\n        }\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x17);\n    return 0;\n}\n",
        "token_count": 132
    },
    "0040a768": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint8_t * fcn.0040a768(void)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    \n    bVar2 = false;\n    if (*0x5deed4 == 0) {\n        fcn.0040ae5e();\n    }\n    puVar4 = *0x5deedc;\n    if (*0x5deedc == NULL) {\n        puVar4 = 0x41469a;\n    }\n    do {\n        uVar1 = *puVar4;\n        if (uVar1 < 0x21) {\n            if (uVar1 == 0) {\n                return puVar4;\n            }\n            if (!bVar2) {\n                for (; (*puVar4 != 0 && (*puVar4 < 0x21)); puVar4 = puVar4 + 1) {\n                }\n                return puVar4;\n            }\n        }\n        if (uVar1 == 0x22) {\n            bVar2 = !bVar2;\n        }\n        iVar3 = fcn.0040cfcf(uVar1);\n        if (iVar3 != 0) {\n            puVar4 = puVar4 + 1;\n        }\n        puVar4 = puVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 301
    },
    "0040a7c7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a7c7(uchar *arg_8h, int32_t arg_ch, char *arg_10h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        if (arg_10h != NULL) {\n            iVar3 = arg_8h - arg_10h;\n            do {\n                cVar1 = *arg_10h;\n                arg_10h[iVar3] = cVar1;\n                arg_10h = arg_10h + 1;\n                if (cVar1 == '\\0') break;\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n            if (arg_ch != 0) {\n                return 0;\n            }\n            *arg_8h = 0;\n            puVar2 = fcn.00405af7();\n            uVar4 = 0x22;\n            goto code_r0x0040a7e9;\n        }\n        *arg_8h = 0;\n    }\n    puVar2 = fcn.00405af7();\n    uVar4 = 0x16;\ncode_r0x0040a7e9:\n    *puVar2 = uVar4;\n    fcn.004057d3();\n    return uVar4;\n}\n",
        "token_count": 316
    },
    "0040d051": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.0040d051(ushort *arg_8h, int32_t arg_ch, int16_t *arg_10h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        if (arg_10h != NULL) {\n            iVar3 = arg_8h - arg_10h;\n            do {\n                iVar1 = *arg_10h;\n                *(iVar3 + arg_10h) = iVar1;\n                arg_10h = arg_10h + 1;\n                if (iVar1 == 0) break;\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n            if (arg_ch != 0) {\n                return 0;\n            }\n            *arg_8h = 0;\n            puVar2 = fcn.00405af7();\n            uVar4 = 0x22;\n            goto code_r0x0040d076;\n        }\n        *arg_8h = 0;\n    }\n    puVar2 = fcn.00405af7();\n    uVar4 = 0x16;\ncode_r0x0040d076:\n    *puVar2 = uVar4;\n    fcn.004057d3();\n    return uVar4;\n}\n",
        "token_count": 327
    },
    "00404b0a": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00404b0a(uint arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint hModule;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleExW)(0, L\"mscoree.dll\", &hModule);\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(hModule, \"CorExitProcess\");\n        if (pcVar2 != NULL) {\n            (*pcVar2)(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "00405159": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00405159(uint arg_8h)\n\n{\n    if ((*0x5dee48 ^ *0x41dec0) != NULL) {\n        (*(*0x5dee48 ^ *0x41dec0))();\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_TlsGetValue)(arg_8h);\n    return;\n}\n",
        "token_count": 96
    }
}