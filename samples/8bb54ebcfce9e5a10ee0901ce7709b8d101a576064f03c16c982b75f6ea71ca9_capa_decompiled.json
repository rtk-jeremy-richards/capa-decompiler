{
    "004015e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401604) overlaps instruction at (ram,0x004015ff)\n// \n\nuint fcn.004015e0(void)\n\n{\n    int32_t iVar1;\n    uint8_t extraout_CL;\n    \n    iVar1 = fcn.00401620(0x4230d0);\n    if (iVar1 == -1) {\n        return 0;\n    }\n    *(iVar1 + 0x5039da56) = *(iVar1 + 0x5039da56) ^ extraout_CL;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    return 1;\n}\n",
        "token_count": 140
    },
    "004016b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401827) overlaps instruction at (ram,0x00401824)\n// \n// WARNING: Unable to track spacebase fully for stack\n\nuint32_t fcn.004016b0(void)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    char cVar3;\n    code *pcVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uchar *arg_ch;\n    char unaff_BL;\n    uint *puVar9;\n    uchar *puVar10;\n    uint *unaff_ESI;\n    uint8_t *unaff_EDI;\n    uchar *puVar11;\n    uint *puVar12;\n    uint8_t in_AF;\n    bool bVar13;\n    uint8_t uVar14;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    bool bVar15;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    float10 extraout_ST0;\n    ulong uVar16;\n    uchar *arg_14h;\n    uchar uStack132;\n    uint auStack131 [7];\n    uchar uStack100;\n    uint auStack99 [7];\n    uchar uStack68;\n    uint auStack67 [7];\n    uchar uStack36;\n    uint auStack35 [7];\n    \n    bVar15 = false;\n    puVar10 = &stack0xfffffffc;\n    iVar6 = fcn.00402690(unaff_EDI, unaff_ESI);\n    if (iVar6 == 0) {\n        return 0;\n    }\n    uVar14 = iVar6 + -0x6e32 < 0;\n    bVar13 = iVar6 == 0x6e32;\n    fcn.00401340();\n    if ((!bVar13) && (bVar13)) {\n        uVar8 = (in_IF & 1) * 0x200;\n        uVar2 = uVar8 | (in_TF & 1) * 0x100;\n        in_NT = ((in_NT & 1) * 0x4000 & 0x4000) != 0;\n        bVar15 = (uVar8 & 0x400) != 0;\n        in_IF = (uVar2 & 0x200) != 0;\n        in_TF = ((uVar2 | (uVar14 & 1) * 0x80) & 0x100) != 0;\n        in_AF = ((in_AF & 1) * '\\x10' & 0x10) != 0;\n        in_ID = (((in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000) & 0x200000) != 0;\n        in_AC = ((in_AC & 1) * 0x40000 & 0x40000) != 0;\n        in_VIP = 0;\n        in_VIF = 0;\n    }\n    iVar6 = fcn.00402d40(0x423134);\n    bVar13 = iVar6 != -1;\n    if (iVar6 != -1) {\n        return 0;\n    }\n    uVar14 = fcn.00404800();\n    *0x423588 = 1;\n    if ((!bVar13) && (bVar13)) {\n        cVar3 = uVar14 - *unaff_EDI;\n        func_0x101876c6((in_NT & 1) * 0x4000 | SBORROW1(uVar14, *unaff_EDI) * 0x800 | bVar15 * 0x400 |\n                        (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 | (cVar3 < '\\0') * 0x80 | (cVar3 == '\\0') * 0x40 |\n                        (in_AF & 1) * 0x10 | ((POPCOUNT(cVar3) & 1U) == 0) * 4 | uVar14 < *unaff_EDI |\n                        (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n                        (in_AC & 1) * 0x40000);\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar6 = fcn.004015e0();\n    if (iVar6 != 0) {\n        return 0;\n    }\n    uStack36 = 0;\n    uStack132 = 0;\n    puVar12 = &stack0xffffffdd;\n    for (iVar6 = 7; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar12 = 0;\n        puVar12 = puVar12 + bVar15 * -2 + 1;\n    }\n    *puVar12 = 0;\n    *(puVar12 + bVar15 * -4 + 2) = 0;\n    uStack100 = 0;\n    puVar12 = &stack0xffffff7d;\n    for (iVar6 = 7; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar12 = 0;\n        puVar12 = puVar12 + bVar15 * -2 + 1;\n    }\n    *puVar12 = 0;\n    *(puVar12 + bVar15 * -4 + 2) = 0;\n    uStack68 = 0;\n    puVar12 = &stack0xffffff9d;\n    for (iVar6 = 7; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar12 = 0;\n        puVar12 = puVar12 + bVar15 * -2 + 1;\n    }\n    *puVar12 = 0;\n    *(puVar12 + bVar15 * -4 + 2) = 0;\n    puVar12 = &stack0xffffffbd;\n    for (iVar6 = 7; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar12 = 0;\n        puVar12 = puVar12 + bVar15 * -2 + 1;\n    }\n    puVar11 = puVar12 + bVar15 * -4 + 2;\n    *puVar12 = 0;\n    puVar12 = puVar11 + bVar15 * -2 + 1;\n    *puVar11 = 0;\n    puVar11 = &stack0xffffffbc;\n    iVar6 = fcn.00402140(&stack0xffffff7c, &stack0xffffff9c, &stack0xffffffdc, puVar11);\n    bVar13 = iVar6 == 0;\n    if (bVar13) {\n        return 0;\n    }\n    if ((bVar13) || (!bVar13)) {\n        puVar11 = &stack0xffffffdc;\n    }\n    else {\n        *puVar12 = *unaff_ESI;\n        puVar10 = 0x8de181cf;\n        if (extraout_ECX != 1) {\n            bVar13 = (CONCAT11(((&stack0xffffff70 >> 8) - unaff_BL) + 'M', 0x70) & 0x26ae) - 1 < 0;\n            *0xfffffff8 = 0xf003f;\n            *0xfffffff4 = 0;\n            *0xfffffff0 = 0;\n            puVar9 = 0xffffffec;\n            *0xffffffec = 0x40187c;\n            *0xfffffffc = puVar12 + bVar15 * -2 + 1;\n            iVar6 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)();\n            if ((!bVar13) && (*(puVar9 + -4) = iVar6,  bVar13)) {\n                *(puVar12 + bVar15 * -2 + 1 + bVar15 * -2 + 7) = extraout_ST0;\n                puVar9 = puVar9 + 4;\n                iVar6 = iVar6 + bVar15 * -8 + 5 + bVar15 * -2;\n            }\n            uVar5 = *0x8de181d7;\n            puVar9[-1] = *0x8de181d7;\n            puVar9[-2] = iVar6;\n            puVar9[-3] = 0x401899;\n            uVar7 = fcn.00401df0(puVar9[-2], puVar9[-1]);\n            puVar9[-1] = uVar7;\n            puVar9[-1] = *0x8de181db;\n            puVar9[-2] = uVar5;\n            puVar9[-3] = iVar6;\n            puVar9[-4] = 0x4018bc;\n            uVar8 = fcn.00401c90(puVar9[-3], puVar9[-2], puVar9[-1], *puVar9);\n            puVar9[-1] = iVar6;\n            pcVar4 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n            puVar9[-2] = 0x4018c8;\n            (*pcVar4)();\n            return uVar8;\n        }\n    }\n    arg_14h = 0x401808;\n    uVar16 = fcn.00403080(puVar11);\n    puVar11 = uVar16 >> 0x20;\n    bVar15 = uVar16 == 0;\n    if (bVar15) {\n        return 0;\n    }\n    if ((bVar15) || (arg_ch = (extraout_ECX_00 >> 8 & 0xffff00) << 8 | extraout_ECX_00 & 0xffff,  !bVar15)) {\n        arg_14h = puVar10 + -0x20;\n        arg_ch = puVar10 + -0x60;\n        puVar11 = puVar10 + -0x80;\n    }\n    puVar1 = puVar10 + -0x72ad1fbb;\n    *puVar1 = *puVar1 >> 5 | *puVar1 << 3;\n    iVar6 = fcn.00402800(puVar11, arg_ch, 0x47, arg_14h);\n    return iVar6 != 0;\n}\n",
        "token_count": 2381
    },
    "00401a70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401a70(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint *puVar9;\n    char lpBuffer;\n    uint var_22fh;\n    uchar var_12ch;\n    uint var_12bh;\n    uint var_28h;\n    uint lpCreationTime;\n    uint var_1ch;\n    uint var_14h;\n    int32_t var_4h;\n    \n    var_4h = arg_ch;\n    lpBuffer = '\\0';\n    puVar5 = &var_22fh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_12ch = '\\0';\n    puVar5 = &var_12bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    uVar3 = 0xffffffff;\n    pcVar7 = &lpBuffer;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = &var_12ch;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    uVar3 = 0xffffffff;\n    pcVar7 = 0x423108;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar7 = &var_12ch;\n    do {\n        pcVar8 = pcVar7;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar8 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar8;\n    } while (cVar1 != '\\0');\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = pcVar8 + -1;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(&var_12ch, 0, &var_28h);\n    iVar2 = var_4h;\n    if ((arg_ch == -1) && (iVar2 = fcn.00401620(arg_8h),  iVar2 == -1)) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar2, &lpCreationTime, &var_1ch, &var_14h);\n    if (arg_ch == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    return 1;\n}\n",
        "token_count": 1154
    },
    "00401da0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nunkbyte6 __cdecl fcn.00401da0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll__access)();\n    if (iVar1 != -1) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 67
    },
    "00402010": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00402010(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uchar *puVar5;\n    bool bVar6;\n    uint var_10ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar3 = &stack0xfffffffc;\n    var_4h = 0x104;\n    iVar2 = fcn.00404e90(0x80000002, 0x4233b0, 0x4233f0, &var_8h, &var_10ch, &var_4h);\n    bVar6 = iVar2 == 0;\n    if (!bVar6) {\n        puVar5 = &stack0xfffffffc;\n        if ((!bVar6) && (puVar5 = &stack0xfffffffc,  bVar6)) {\n            puVar4 = &stack0xfffffee8;\n            puVar5 = &stack0xfffffee8;\n            cVar1 = '\\x10';\n            do {\n                puVar3 = puVar3 + -1;\n                puVar4 = puVar4 + -1;\n                *puVar4 = *puVar3;\n                cVar1 = cVar1 + -1;\n            } while ('\\0' < cVar1);\n        }\n        iVar2 = (*_sym.imp.MSVCRT.dll__access)(puVar5 + -0x10c, 0);\n        return iVar2 != -1;\n    }\n    return false;\n}\n",
        "token_count": 342
    },
    "00402800": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402ab6) overlaps instruction at (ram,0x00402ab2)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint * __cdecl fcn.00402800(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    bool bVar5;\n    unkbyte6 Var6;\n    uint var_213h;\n    uchar s;\n    uint var_10fh;\n    uint *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puVar3 = &var_213h;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    s = 0;\n    puVar3 = &var_10fh;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    var_ch = 0x1;\n    *(puVar3 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)();\n    fcn.00401000(&var_4h, &var_8h);\n    iVar4 = fcn.00402440(arg_8h, arg_ch, arg_10h, arg_14h, var_4h, var_8h);\n    bVar5 = iVar4 == 0;\n    if (bVar5) {\n        return NULL;\n    }\n    if ((!bVar5) && (bVar5)) {\n        var_8h = iVar4;\n    }\n    iVar4 = fcn.00402c20(&s, var_4h, var_8h);\n    if (iVar4 == 0) {\n        return NULL;\n    }\n    fcn.00401260();\n    iVar4 = fcn.00402d40(0x423128);\n    if ((iVar4 != -1) || (iVar4 = fcn.00402d40(0x42311c),  iVar4 != -1)) {\n        iVar4 = fcn.004027d0(arg_8h);\n        if (iVar4 != 0) {\n            fcn.00402e40();\n            fcn.00404e80();\n            return 0x1;\n        }\n        if (*0x423584 == 0) {\n            return NULL;\n        }\n    }\n    Var6 = fcn.00401850(arg_8h, &s);\n    bVar5 = Var6 == 0;\n    if (bVar5) {\n        puVar3 = NULL;\ncode_r0x00402a11:\n        puVar2 = arg_8h;\n        if (puVar3 != NULL) goto code_r0x00402a09;\n    }\n    else {\n        puVar3 = var_ch;\n        if (!bVar5) goto code_r0x00402a11;\n        puVar3 = var_ch + 1;\n        uVar1 = in(Var6 >> 0x20);\n        *var_ch = uVar1;\n        puVar2 = var_ch;\n        if (&stack0xfffffdd0 < 1) goto code_r0x00402a7e;\ncode_r0x00402a09:\n        puVar2 = fcn.00401f90(puVar2);\n        if (puVar2 == NULL) {\n            var_ch = NULL;\n            puVar3 = puVar2;\n        }\n    }\n    if (puVar3 == NULL) {\n        puVar3 = fcn.004018d0(arg_8h, 0);\n        var_ch = puVar3;\n    }\n    if (puVar3 != NULL) {\n        fcn.00404e80();\n    }\ncode_r0x00402a7e:\n    (*_sym.imp.KERNEL32.dll_Sleep)();\n    (*_sym.imp.KERNEL32.dll_WinExec)();\n    return puVar3;\n}\n",
        "token_count": 987
    },
    "00402b60": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402ba0)\n// WARNING: Removing unreachable block (ram,0x00402ba4)\n// WARNING: Removing unreachable block (ram,0x00402ba5)\n\nuint __cdecl fcn.00402b60(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    bool in_OF;\n    \n    if ((!in_OF) && (in_OF)) {\n        LOCK();\n    }\n    iVar1 = fcn.00402d40(0x42313c);\n    if (iVar1 == -1) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x40, 0, iVar1);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(arg_8h, iVar1, 0, 0, 0, 2);\n    iVar3 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar2);\n    if (iVar3 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 281
    },
    "00402d40": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402dd9) overlaps instruction at (ram,0x00402dd8)\n// \n\nuint __cdecl fcn.00402d40(uint8_t *arg_8h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_108h;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    iVar4 = (**0x423578)(2, 0);\n    if (iVar4 == -1) {\n        return 0xffffffff;\n    }\n    var_12ch = 0x128;\n    puVar6 = &var_128h;\n    for (iVar5 = 0x49; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    iVar5 = (**0x42357c)(iVar4, &var_12ch);\n    pcVar2 = _sym.imp.MSVCRT.dll__stricmp;\n    do {\n        if (iVar5 == 0) {\ncode_r0x00402e26:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n            return var_4h;\n        }\n        uVar3 = iVar5;\n        cVar1 = uVar3 - *arg_8h;\n        iVar4 = iVar4 + -1;\n        func_0x10188d4b((in_NT & 1) * 0x4000 | SBORROW1(uVar3, *arg_8h) * 0x800 | (in_IF & 1) * 0x200 |\n                        (in_TF & 1) * 0x100 | (cVar1 < '\\0') * 0x80 | (cVar1 == '\\0') * 0x40 | (in_AF & 1) * 0x10 |\n                        ((POPCOUNT(cVar1) & 1U) == 0) * 4 | uVar3 < *arg_8h | (in_ID & 1) * 0x200000 |\n                        (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000);\n        (**(arg_8h + 0x52))();\n        iVar5 = (*pcVar2)();\n        if (iVar5 == 0) {\n            var_4h = var_124h;\n            goto code_r0x00402e26;\n        }\n        iVar5 = (**0x423580)(iVar4);\n        arg_8h = arg_8h + 1;\n    } while( true );\n}\n",
        "token_count": 714
    },
    "00401650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00401650(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00402ad0;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x423550;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 217
    },
    "00401850": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401850(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    int32_t hSCManager;\n    char unaff_BL;\n    int32_t unaff_EDI;\n    bool bVar1;\n    float10 extraout_ST0;\n    uint uVar2;\n    \n    bVar1 = (CONCAT11(((in_EAX >> 8) - unaff_BL) + 'M', in_EAX) & 0x26ae) - 1 < 0;\n    uVar2 = 0;\n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    if ((!bVar1) && (bVar1)) {\n        *(unaff_EDI + 0x1c) = extraout_ST0;\n        hSCManager = hSCManager + 5;\n    }\n    fcn.00401df0(hSCManager, arg_8h);\n    uVar2 = fcn.00401c90(hSCManager, arg_8h, arg_ch, uVar2);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar2;\n}\n",
        "token_count": 270
    },
    "00402580": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004025ac) overlaps instruction at (ram,0x004025ab)\n// \n\nvoid __fastcall\nfcn.00402580(uint param_1, int32_t *param_2, int32_t *param_3, uint32_t param_4, int32_t param_5, uint32_t param_6, \n            int32_t *param_7)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    uint32_t unaff_EBX;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t *unaff_EDI;\n    bool bVar10;\n    uint8_t in_AF;\n    bool bVar11;\n    int32_t iStack12;\n    \n    uVar4 = param_6 * 2;\n    iStack12 = 0;\n    if (0 < param_6) {\n        iVar9 = 1;\n        uVar5 = uVar4;\n        do {\n            bVar10 = unaff_EBX >> 8 < param_2 >> 8;\n            bVar11 = unaff_EDI == 1;\n            uVar8 = unaff_EBX & 0xffffff00 | *(iStack12 + param_5);\n            if ((!bVar10) && (bVar10)) {\n                if (uVar5 != 1 && bVar11) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                *unaff_EDI = iVar9 + 4;\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            uVar5 = iVar9 / param_4;\n            uVar3 = *(iVar9 % param_4 + param_3);\n            param_2 = iVar9 % param_4 & 0xffffff00U | uVar3;\n            if ((bVar11) || (!bVar11)) {\ncode_r0x004025fb:\n                iVar2 = iVar9 + -1;\n                iVar9 = iVar2 / param_4;\n                param_2 = iVar2 % param_4;\n                uVar7 = uVar8;\n                uVar8 = uVar8 & 0xffffff00;\n                uVar5 = uVar4 ^ uVar7 ^ *(param_2 + param_3);\n                uVar6 = uVar4 & 0xff;\n                unaff_EDI = param_7;\n            }\n            else {\n                uVar8 = uVar8 + 1;\n                if (!bVar10 && uVar8 != 0) {\n                    in_AF = 9 < (uVar5 & 0xf) | in_AF;\n                    piVar1 = (uVar5 & 0xffff0000 | CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f) +\n                             0x2a;\n                    *piVar1 = *piVar1 - uVar8;\n                    iVar9 = iVar9 + 1;\n                    goto code_r0x004025fb;\n                }\n                *param_2 = *param_2 << 3;\n                uVar6 = param_4;\n                unaff_EDI = param_3;\n            }\n            *(unaff_EDI + iVar9 + -1) = uVar5;\n            unaff_EBX = uVar8 & 0xffffff00;\n            iStack12 = iStack12 + 1;\n            *(iVar9 + unaff_EDI) = uVar6 ^ uVar3;\n            iVar9 = iVar9 + 2;\n            uVar5 = param_6;\n        } while (iStack12 < param_6);\n    }\n    return;\n}\n",
        "token_count": 864
    },
    "004018d0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040193c) overlaps instruction at (ram,0x00401938)\n// \n\nuint __cdecl fcn.004018d0(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    code *pcVar8;\n    uint8_t in_AF;\n    unkbyte10 in_ST0;\n    uchar in_stack_fffffd87;\n    uchar uVar9;\n    uchar var_264h;\n    uint var_263h;\n    char var_160h;\n    uint var_15fh;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_264h = 0;\n    puVar7 = &var_263h;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    var_160h = '\\0';\n    puVar7 = &var_15fh;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    var_ch = 1;\n    var_4h = 0;\n    var_8h = 1;\n    if ((arg_ch < 0) || (arg_ch >= 0)) {\n        uVar9 = arg_8h >> 0x18;\n        pcVar4 = &var_160h;\n        iVar5 = arg_8h << 8;\n        pcVar8 = _sym.imp.MSVCRT.dll_sprintf;\n    }\n    else {\n        *(arg_ch + -0x7ce92414) = in_ST0;\n        iVar5 = CONCAT31(1, in_stack_fffffd87);\n        uVar9 = 0;\n        uVar3 = arg_ch - 1U;\n        uVar2 = 9 < (uVar3 & 0xf) | in_AF;\n        uVar3 = uVar3 + uVar2 * '\\x06';\n        pcVar4 = arg_ch - 1U & 0xffffff00 | uVar3 + (0x90 < (uVar3 & 0xf0) | uVar2 * (0xf9 < uVar3)) * '`';\n        _pe_dos_header = _pe_dos_header + 0x5d8bdf84 ^ pcVar4;\n        arg_8h = 0x1;\n        pcVar8 = puVar7 + 3;\n    }\n    (*pcVar8)(pcVar4, iVar5, uVar9);\n    (*pcVar8)(&var_264h, 0x423164, arg_8h);\n    pcVar8 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_20h = &var_160h;\n    var_18h = &var_ch;\n    var_14h = &var_4h;\n    var_10h = &var_8h;\n    uVar6 = 0xffffffff;\n    pcVar4 = &var_160h;\n    do {\n        if (uVar6 == 0) break;\n        uVar6 = uVar6 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    var_48h = ~uVar6 - 1;\n    uVar6 = 0xffffffff;\n    pcVar4 = arg_8h;\n    do {\n        if (uVar6 == 0) break;\n        uVar6 = uVar6 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    var_34h = 0x42318c;\n    var_30h = 0x423198;\n    var_2ch = 0x4231a4;\n    var_28h = 0x4231b4;\n    var_24h = 0x4231bc;\n    var_5ch = 2;\n    var_58h = 1;\n    var_54h = 4;\n    var_50h = 4;\n    var_4ch = 4;\n    var_1ch = arg_8h;\n    var_44h = ~uVar6 - 1;\n    var_40h = 4;\n    var_3ch = 4;\n    var_38h = 4;\n    if ((arg_ch != 0) < 5) {\n        uVar6 = (arg_ch != 0) * 4;\n        do {\n            iVar5 = (*pcVar8)(0x80000002, &var_264h, *(&var_34h + uVar6), *(&var_5ch + uVar6), *(&var_20h + uVar6), \n                              *(&var_48h + uVar6));\n            if (iVar5 != 0) {\n                return 0;\n            }\n            uVar6 = uVar6 + 4;\n        } while (uVar6 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1411
    },
    "00402690": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004026c2) overlaps instruction at (ram,0x004026bd)\n// \n\nuint __cdecl fcn.00402690(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t extraout_ECX;\n    uint *unaff_EBX;\n    int32_t iVar8;\n    uint *unaff_EDI;\n    uint16_t in_ES;\n    uint8_t in_AF;\n    bool bVar9;\n    bool bVar10;\n    bool bVar11;\n    unkbyte6 Var12;\n    char in_stack_00000048;\n    uint *puVar13;\n    uchar uStack161;\n    uint *puStack160;\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    char *pcVar5;\n    \n    bVar9 = *0x10 == 0x98;\n    puStack160 = &lpVersionInformation;\n    lpVersionInformation = 0x94;\n    uStack161 = 0;\n    Var12 = (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n    uVar4 = Var12;\n    if ((bVar9) || (uStack161 = unaff_EDI >> 0x18,  !bVar9)) {\n        if (var_90h != 5) {\n            if ((var_90h == 6) && (var_8ch == 0)) {\n                return 1;\n            }\n            return 0;\n        }\n        uVar4 = 1;\n        unaff_EBX = puStack160;\n    }\n    else {\n        puVar1 = unaff_EDI + 1;\n        uVar6 = in(Var12 >> 0x20);\n        *unaff_EDI = uVar6;\n        bVar10 = &uStack161 < 0;\n        bVar9 = *0x10 == 0xa1;\n        bVar11 = SBORROW4(&puStack160, 1);\n        while (bVar11 != bVar10) {\n            if (!bVar9 && bVar11 == bVar10) {\n                iVar7 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(arg_8h, arg_ch, 0xff);\n                if (iVar7 == 0) {\n                    return 0;\n                }\n                iVar8 = iVar7;\n                puVar13 = puVar1;\n                if ((-1 < iVar7) && (-1 >= iVar7)) {\n                    puVar13 = puVar1 & 0xffff0000 | in_ES;\n                    iVar8 = iVar7 + -1;\n                    *(puVar1 | &stack0xfffffffc) = iVar7;\n                }\n                iVar7 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar8, 0, 0, puVar13);\n                pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n                if (((iVar7 == 0) && (iVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar7 != 0x420)) &&\n                   (iVar7 = (*pcVar2)(),  iVar7 != 0x422)) {\n                    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar8);\n                    return 0;\n                }\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar8);\n                return 1;\n            }\n            in_AF = 9 < (uVar4 & 0xf) | in_AF;\n            uVar4 = uVar4 & 0xffff0000 | CONCAT11((uVar4 >> 8) + in_AF, uVar4 + in_AF * '\\x06') & 0xff0f;\n            if (extraout_ECX != 0) {\n                do {\n    // WARNING: Do nothing block with infinite loop\n                } while( true );\n            }\n            bVar10 = in_stack_00000048 < '\\0';\n            bVar9 = in_stack_00000048 == '\\0';\n            bVar11 = SCARRY1(in_stack_00000048, '\\0');\n        }\n    }\n    uVar4 = uVar4 ^ 0xdee0ed6d;\n    uVar3 = uVar4 + (uVar4 >> 8) * -0x31;\n    pcVar5 = uVar4 & 0xffff0000 | uVar3;\n    *(unaff_EBX + -0x8f43) = *(unaff_EBX + -0x8f43) ^ uVar3;\n    *0x1b80a75 = *0x1b80a75 + 1;\n    *pcVar5 = *pcVar5 + uVar3;\n    *(unaff_EBX + -0x75) = *(unaff_EBX + -0x75) + unaff_EBX;\n    uVar6 = in(0x5d);\n    return uVar6;\n}\n",
        "token_count": 1113
    },
    "00403080": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403080(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar lpBuffer;\n    uint var_20fh;\n    uchar s;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    lpBuffer = 0;\n    puVar2 = &var_20fh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    s = 0;\n    puVar2 = &var_10bh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x4230e4, &lpBuffer, arg_8h);\n    fcn.00401400(&var_4h, &var_8h);\n    fcn.004031c0(var_4h);\n    iVar1 = fcn.00402c20(&s, var_4h, var_8h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    fcn.00401a70(&s, 0xffffffff);\n    return 1;\n}\n",
        "token_count": 404
    },
    "004033f0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.004033f0(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    uStack12 = 4;\n    iVar1 = fcn.00404e90(0x80000002, 0x423298, 0x4232e4, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 134
    },
    "004041d0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004044a0) overlaps instruction at (ram,0x0040449f)\n// \n// WARNING: Removing unreachable block (ram,0x00404732)\n\nvoid __fastcall fcn.004041d0(char *param_1, uint16_t param_2, uint32_t param_3, uint *param_4)\n\n{\n    uint32_t *puVar1;\n    char *pcVar2;\n    uint16_t uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    char extraout_CH;\n    uint8_t extraout_CH_00;\n    char extraout_CH_01;\n    uint8_t uVar5;\n    uint16_t extraout_DX;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint *puVar10;\n    uint unaff_EDI;\n    uint *puVar11;\n    ushort in_SS;\n    bool bVar12;\n    uchar uVar13;\n    bool bVar14;\n    char cVar15;\n    bool bVar16;\n    uchar uVar17;\n    char cVar18;\n    float10 in_ST0;\n    float10 extraout_ST0;\n    float10 fVar19;\n    ulong uVar20;\n    uint in_stack_ffffa15b;\n    uint *in_stack_ffffa15f;\n    ushort uVar21;\n    ushort uVar22;\n    ushort uVar23;\n    ushort uVar24;\n    ushort uVar25;\n    ushort uVar26;\n    uint uVar27;\n    \n    uVar21 = unaff_EDI;\n    uVar22 = unaff_EDI >> 0x10;\n    uVar7 = param_2;\n    puVar10 = NULL;\n    bVar12 = false;\n    bVar16 = false;\n    bVar14 = param_4 == NULL;\n    if (bVar14) {\n        return;\n    }\ncode_r0x00404200:\n    if (bVar16) {\ncode_r0x00404224:\n        iVar4 = (*_sym.imp.MSVCRT.dll_rand)();\n        param_1 = 0x1a;\n        in_EAX = iVar4 / 0x1a;\n        uVar6 = iVar4 % 0x1a;\n        in_ST0 = extraout_ST0;\n    }\n    else {\n        uVar6 = uVar7 & 0xffff;\n        if (!bVar16) goto code_r0x00404224;\n        puVar11 = param_4 + 1;\n        uVar17 = in(uVar7);\n        *param_4 = uVar17;\n        uVar8 = CONCAT31(param_3 >> 8, 0xbc);\n        if (!bVar12 && !bVar14) {\n            puVar10 = CONCAT22(uVar22, uVar21);\n            fcos(in_ST0);\n            *(uVar8 + 0x526610c4) = *(uVar8 + 0x526610c4) + 1;\n            uVar5 = uVar7;\n            bVar12 = uVar5 < 0x51;\n            uVar17 = SBORROW1(uVar5, 'Q');\n            bVar14 = uVar5 == 0x51;\n            fcn.00401bf0(0x423554, 0x18, 0x423104, 4);\n            if ((!bVar12 && !bVar14) && (bVar12 || bVar14)) {\n                uVar17 = 0;\n            }\n            uVar27 = 0x4042df;\n            fcn.00401bf0(0x423554, 0x18, 0x423108, 0xc);\n            if ((uVar17) || (!uVar17)) {\n                uVar27 = 7;\n            }\n            fcn.00401bf0(0x423554, 0x18, 0x423114, uVar27);\n            uVar8 = uVar8 & 0xffff;\n            fcn.00401bf0(0x423554, 0x18, 0x42311c, 0xb);\n            fcn.00401bf0(0x423554, 0x18, 0x423128, 0xc);\n            fcn.00401bf0(0x423554, 0x18, 0x423134, 8);\n            fcn.00401bf0(0x423554, 0x18, 0x42313c, 0xd);\n            fcn.00401bf0(0x423554, 0x18, 0x42314c, 0x18);\n            fcn.00401bf0(0x423554, 0x18, 0x423164, 0x25);\n            fcn.00401bf0(0x423554, 0x18, 0x42318c, 10);\n            fcn.00401bf0(0x423554, 0x18, 0x423198, 0xc);\n            fcn.00401bf0(0x423554, 0x18, 0x4231a4, 0xd);\n            bVar12 = (POPCOUNT(uVar8 + 1 ^ 0x50) & 1U) == 0;\n            uVar20 = fcn.00401bf0(0x423554, 0x18, 0x4231b4, 6);\n            if ((!bVar12) && (bVar12)) {\n                puVar1 = (uVar20 >> 0x20) + 5;\n                uVar7 = *puVar1;\n                *puVar1 = *puVar1 - 0x68;\n                pcVar2 = uVar20 + 0x54;\n                *pcVar2 = (*pcVar2 - extraout_CH) - (uVar7 < 0x68);\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            uVar3 = fcn.00401bf0(0x423554, 0x18, 0x4231bc, 5);\n            uVar3 = (extraout_DX & 0xff00 | (extraout_DX & 0x4e | 0x38) & uVar3) & uVar3 ^ 0x3c00;\n            uVar7 = (uVar3 & 0xff | (uVar3 >> 8) + (uVar8 >> 8) << 8) | 0x604;\n            bVar12 = (uVar7 >> 8) + uVar7 == '\\0';\n            fcn.00401bf0(0x423554, 0x18, 0x4231c4, 0xd);\n            if ((!bVar12) && (bVar12)) {\n                puVar9 = &stack0xffffffe2;\n                cVar15 = '\\x10';\n                do {\n                    puVar10 = puVar10 + -1;\n                    puVar9 = puVar9 + -1;\n                    *puVar9 = *puVar10;\n                    cVar15 = cVar15 + -1;\n                } while ('\\0' < cVar15);\n            }\n            iVar4 = fcn.00401bf0(0x423554, 0x18, 0x4231d4, 0x19);\n            bVar12 = iVar4 + 1 < 0;\n            fVar19 = fcn.00401bf0(0x423554, 0x18, 0x4231f0, 0xf);\n            if ((!bVar12) && (bVar12)) {\n                *(param_4 + 0x1d) = fVar19;\n                puVar11 = param_4 + 6;\n            }\n            fcn.00401bf0(0x423554, 0x18, 0x423200, 0xe);\n            fcn.00401bf0(0x423554, 0x18, 0x423210, 0xb);\n            fcn.00401bf0(0x423554, 0x18, 0x42321c, 0xb);\n            fcn.00401bf0(0x423554, 0x18, 0x423228, 0xb);\n            uVar25 = 10;\n            uVar26 = 0;\n            uVar23 = 0x3234;\n            uVar24 = 0x42;\n            uVar21 = 0x18;\n            uVar22 = 0;\n            while( true ) {\n                fcn.00401bf0(0x423554, CONCAT22(uVar22, uVar21), CONCAT22(uVar24, uVar23), CONCAT22(uVar26, uVar25));\n                uVar17 = 0;\n                uVar13 = (POPCOUNT(extraout_CH_00 ^ uVar8) & 1U) == 0;\n                uVar25 = 0xc;\n                uVar26 = 0;\n                uVar23 = 0x3240;\n                uVar24 = 0x42;\n                uVar21 = 0x18;\n                uVar22 = 0;\n                fcn.00401bf0(0x423554, 0x18, 0x423240, 0xc);\n                fcn.00401bf0(0x423554, 0x18, 0x42324c, 0xe);\n                puVar10 = puVar11;\n                if ((uVar13) || (!uVar13)) goto code_r0x00404664;\n                segment(in_SS, *0x10 + -0x5e8d);\n                if (uVar17) {\n                    puVar10 = puVar11 + 1;\n                    uVar17 = in(0x9ea5);\n                    *puVar11 = uVar17;\n                    goto code_r0x00404695;\n                }\n                if (!uVar13) break;\n                *0xb7bc9ebe = *0xb7bc9ebe + extraout_CH_01;\n            }\n            uVar13 = (POPCOUNT(&stack0xffffa177 & 0xff) & 1U) == 0;\ncode_r0x00404664:\n            do {\n                fcn.00401bf0(0x423554, 0x18, 0x42325c, 0x11);\n                if ((uVar13) || (in_stack_ffffa15f = puVar10,  !uVar13)) {\n                    in_stack_ffffa15b = 0x423270;\n                    in_stack_ffffa15f = 0x13;\n                }\ncode_r0x00404695:\n                uVar3 = fcn.00401bf0(0x423554, 0x18, in_stack_ffffa15b, in_stack_ffffa15f);\n                bVar12 = false;\n                cVar18 = '\\0';\n                uVar3 = uVar3 ^ uVar8;\n                cVar15 = uVar3 < 0;\n                bVar14 = (POPCOUNT(uVar3 & 0xff) & 1U) == 0;\n                fcn.00401bf0(0x423554, 0x18, 0x423284, 0x14);\n                if ((bVar14) || (!bVar14)) goto code_r0x004046e0;\n                puVar11 = segment(in_SS, *0x10 + -0x5e7d);\n                if (bVar12) {\n                    cVar18 = '\\0';\n                    cVar15 = (*puVar11 ^ *0xb7bc9ea5) < '\\0';\n                    goto code_r0x004046fd;\n                }\n                if (!bVar14) {\n                    cVar18 = '\\0';\n                    cVar15 = &stack0xffffa187 < 0;\ncode_r0x004046e0:\n                    fcn.00401bf0(0x423554, 0x18, 0x423298, 0x33);\ncode_r0x004046fd:\n                    uVar27 = fcn.00401bf0(0x423554, 0x18, 0x4232cc, 10);\n                    if ((cVar18 == cVar15) && (cVar18 != cVar15)) {\n                        out(0xc4, uVar27);\n                        *puVar10 = uVar27;\n                    }\n                    fcn.00401bf0(0x423554, 0x18, 0x4232d8, 4);\n                    fcn.00401bf0(0x423554, 0x18, 0x4232dc, 5);\n                    fcn.00401bf0(0x423554, 0x18, 0x4232e4, 6);\n                    bVar12 = 0xffffffef < &stack0xffffa177;\n                    uVar27 = fcn.00401bf0(0x423554, 0x18, 0x423318, 0x2a);\n                    if ((!bVar12) && (bVar12)) {\n                        out(0xbd, uVar27);\n                        return;\n                    }\n                    fcn.00401bf0(0x423554, 0x18, 0x423344, 0xb);\n                    return;\n                }\n                uVar13 = (POPCOUNT(*puVar11 ^ *0xb7bc9ea5) & 1U) == 0;\n            } while( true );\n        }\n        in_ST0 = in_ST0 / *(in_EAX + -0x7f6a6a73);\n        in_EAX = 0x60f41600;\n        param_1[0x1ab9] = param_1[0x1ab9] + -0x44;\n        param_3 = uVar8 & 0xffff0000 | CONCAT11(*param_1 + (uVar6 >> 8), 0xbc);\n        param_4 = puVar11;\n    }\n    uVar5 = uVar6 + 0x61;\n    uVar7 = uVar6 & 0xffffff00 | uVar5;\n    *(puVar10 + param_3) = uVar5;\n    puVar10 = puVar10 + 1;\n    bVar12 = puVar10 < param_4;\n    bVar16 = SBORROW4(puVar10, param_4);\n    bVar14 = puVar10 == param_4;\n    if (!bVar12) {\n        return;\n    }\n    goto code_r0x00404200;\n}\n",
        "token_count": 3274
    },
    "00404bb0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404dc3) overlaps instruction at (ram,0x00404dbf)\n// \n// WARNING: Removing unreachable block (ram,0x00404c51)\n\nvoid fcn.00404bb0(void)\n\n{\n    uchar uVar1;\n    uint16_t extraout_CX;\n    uint16_t extraout_CX_00;\n    char extraout_CH;\n    int32_t extraout_EDX;\n    int32_t *piVar2;\n    uint unaff_EBX;\n    uint32_t unaff_EBP;\n    int32_t unaff_ESI;\n    uint32_t unaff_EDI;\n    char cVar3;\n    bool bVar4;\n    char cVar5;\n    unkbyte10 extraout_ST0;\n    ulong uVar6;\n    uint arg_14h;\n    \n    fcn.00401bf0(0x423554, 0x18, 0x42344c, 0x20);\n    fcn.00401bf0(0x423554, 0x18, 0x42346c, 0x26);\n    cVar5 = '\\0';\n    cVar3 = (extraout_CX | 0x31fd) < 0;\n    uVar1 = fcn.00401bf0(0x423554, 0x18, 0x423494, 8);\n    if ((cVar5 == cVar3) && (cVar5 != cVar3)) {\n        unaff_ESI = unaff_ESI + -1;\n        *(unaff_EDI | unaff_EBP) = uVar1;\n    }\n    fcn.00401bf0(0x423554, 0x18, 0x42349c, 0x19);\n    bVar4 = (extraout_CX_00 | 0x31fd) < 0;\n    arg_14h = 0x404c85;\n    fcn.00401bf0(0x423554, 0x18, 0x4234b8, 0xb);\n    if ((bVar4) || (!bVar4)) {\n        arg_14h = 0x12;\n        unaff_EBP = 0x4234c4;\n        unaff_ESI = 0x18;\n    }\n    *(extraout_EDX + 0x18) = *(extraout_EDX + 0x18) + extraout_CH;\n    fcn.00401bf0(0x423554, unaff_ESI, unaff_EBP, arg_14h);\n    fcn.00401bf0(0x423554, 0x18, 0x4234d8, 0x12);\n    fcn.00401bf0(0x423554, 0x18, 0x4234ec, 2);\n    fcn.00401bf0(0x423554, 0x18, 0x4234f0, 8);\n    fcn.00401bf0(0x423554, 0x18, 0x4234f8, 8);\n    uVar6 = fcn.00401bf0(0x423554, 0x18, 0x423500, 6);\n    piVar2 = uVar6 >> 0x20;\n    *(uVar6 + -0x7ce92414) = extraout_ST0;\n    *piVar2 = *piVar2 + 0x76adf84;\n    fcn.00401bf0(0x423554, 0x18, 0x423508, unaff_EBX);\n    fcn.00401bf0(0x423554, 0x18, 0x423510, 7);\n    fcn.00401bf0(0x423554, 0x18, 0x423518, 6);\n    fcn.00401bf0(0x423554, 0x18, 0x423520, 0x25);\n    fcn.00401bf0(0x423554, 0x18, 0x423548, 8);\n    return;\n}\n",
        "token_count": 922
    },
    "00402e70": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00402e70(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x423588 == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.004041d0(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x4233a4, acStack1304, &uStack2112);\n    uStack2088 = 0x42342c;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x423444;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.004023b0(auStack1564, 0x4233a0, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1869
    },
    "00402140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402169)\n// WARNING: Removing unreachable block (ram,0x0040216f)\n\nbool __cdecl fcn.00402140(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    lpBuffer = 0;\n    puVar6 = &var_10bh;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    fcn.00404f30();\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 4);\n    var_4h = 0;\n    do {\n        uVar2 = fcn.00401310();\n        uVar3 = fcn.00401310();\n        uVar4 = fcn.00401310();\n        fcn.004041d0(arg_10h, uVar2);\n        fcn.004041d0(arg_8h, uVar3);\n        fcn.004041d0(arg_ch, uVar4);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x4230e4, &lpBuffer, arg_10h);\n        iVar5 = fcn.00401da0(&var_314h);\n        if (iVar5 != 0) {\n            (*pcVar1)(&var_210h, 0x4230f0, &lpBuffer, arg_8h);\n            iVar5 = fcn.00401da0(&var_210h);\n            if (iVar5 != 0) {\n                (*pcVar1)(&var_210h, 0x4230f0, &lpBuffer, arg_ch);\n                iVar5 = fcn.00401da0(&var_210h);\n                if (iVar5 != 0) {\n                    iVar5 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar5 = var_8h;\n    } while (var_4h < 3);\n    fcn.004041d0(arg_14h, 4);\n    return iVar5 != 0;\n}\n",
        "token_count": 639
    },
    "00404000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404196) overlaps instruction at (ram,0x00404194)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00404000(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    char *unaff_EBX;\n    uint *unaff_ESI;\n    uint *puVar3;\n    uint *puVar4;\n    uchar uVar5;\n    uint var_25fh;\n    uint uStack607;\n    uchar var_15ch;\n    uint var_15bh;\n    uint var_58h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_14h;\n    uint hProcess;\n    uint var_ch;\n    uint lParam;\n    uint var_4h;\n    \n    fcn.00404bb0();\n    iVar2 = fcn.004037e0();\n    if (iVar2 != 0) {\n        puVar3 = unaff_ESI + 1;\n        var_25fh = *unaff_ESI;\n        *unaff_EBX = *unaff_EBX + '@';\n        puVar4 = &var_25fh;\n        for (iVar2 = 0x40; puVar1 = puVar4 + 1,  iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar1 = 1;\n            puVar4 = puVar1;\n        }\n        *puVar1 = 1;\n        *(puVar4 + 6) = 1;\n        iVar2 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathA)();\n        if (iVar2 != 0) {\n            fcn.00404f30();\n            var_15ch = 0;\n            puVar4 = &var_15bh;\n            for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar4 = 0;\n                puVar4 = puVar4 + 1;\n            }\n            *puVar4 = 0;\n            *(puVar4 + 2) = 0;\n            do {\n                (*_sym.imp.MSVCRT.dll_sprintf)();\n                var_14h = 0;\n                while( true ) {\n                    puVar4 = &var_58h;\n                    for (iVar2 = 0x11; iVar2 != 0; iVar2 = iVar2 + -1) {\n                        *puVar4 = 0;\n                        puVar4 = puVar4 + 1;\n                    }\n                    var_28h._0_2_ = 0;\n                    hProcess = 0;\n                    var_ch = 0;\n                    var_58h = 0x44;\n                    lParam = 0;\n                    var_2ch = 1;\n                    var_4h = 0;\n                    iVar2 = (*_sym.imp.KERNEL32.dll_CreateProcessA)();\n                    if (iVar2 == 0) {\n                        return;\n                    }\n                    if ((0 < iVar2) && (iVar2 < 1)) break;\n                    (*_sym.imp.KERNEL32.dll_Sleep)();\n                    (*_sym.imp.USER32.dll_EnumWindows)();\n                    iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)();\n                    uVar5 = iVar2 + -0x102 < 0;\n                    if (iVar2 == 0x102) {\n                        (*_sym.imp.KERNEL32.dll_TerminateProcess)();\n                    }\n                    puVar4 = _sym.imp.KERNEL32.dll_CloseHandle;\n                    if ((!uVar5) && (uVar5)) {\n                        puVar4 = puVar3;\n                    }\n                    (*puVar4)();\n                    (*puVar4)();\n                    var_14h = var_14h + 1;\n                    puVar3 = puVar4;\n                    if (0 < var_14h) {\n                        return;\n                    }\n                }\n                if (extraout_ECX != 0) {\n                    do {\n    // WARNING: Do nothing block with infinite loop\n                    } while( true );\n                }\n            } while( true );\n        }\n    }\n    return;\n}\n",
        "token_count": 910
    },
    "00402310": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402310(uint32_t arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        do {\n            arg_8h = arg_8h + *arg_ch;\n            if (arg_8h >> 0x10 != 0) {\n                arg_8h = (arg_8h >> 0x10) + (arg_8h & 0xffff);\n            }\n            arg_ch = arg_ch + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return (arg_8h >> 0x10) + arg_8h;\n}\n",
        "token_count": 171
    },
    "00403660": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004036ed) overlaps instruction at (ram,0x004036ea)\n// \n\nuint32_t * fcn.00403660(uint param_1, uint32_t param_2, int32_t *param_3, int32_t *param_4)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    int32_t *piVar5;\n    uint16_t extraout_CX;\n    uint32_t uVar6;\n    char *unaff_EBX;\n    int32_t unaff_ESI;\n    uint32_t uVar7;\n    int32_t iVar8;\n    bool bVar9;\n    \n    uVar2 = fcn.00402310(0, param_1, param_2 + 1 >> 1);\n    uVar7 = uVar2;\n    puVar3 = (*_sym.imp.dbghelp.dll_ImageNtHeader)();\n    puVar4 = puVar3[0x16];\n    uVar6 = extraout_CX;\n    bVar9 = uVar2 < puVar4;\n    if (bVar9) {\n        if ((!bVar9) && (bVar9)) {\n            out(0xbd, puVar4);\n            return puVar4;\n        }\n        bVar9 = false;\n        uVar7 = (uVar7 - puVar4 & 0xffff) - 1;\n    }\n    else {\n        uVar6 = puVar4 & 0xffff;\n        bVar9 = uVar7 < uVar6;\n        uVar7 = uVar7 - uVar6;\n    }\n    if ((!bVar9) && (bVar9)) {\n        piVar5 = puVar4 + 1;\n        if (*puVar4 <= &stack0xffffffec && piVar5 != NULL) {\n            *piVar5 = *piVar5 + 1;\n            *unaff_EBX = *unaff_EBX + (uVar6 >> 8);\n            pcVar1 = swi(1);\n            puVar4 = (*pcVar1)();\n            return puVar4;\n        }\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    piVar5 = puVar4 >> 0x10;\n    bVar9 = uVar7 < puVar4 >> 0x10;\n    if (bVar9) {\n        if ((bVar9) || (!bVar9)) {\n            uVar7 = (uVar7 - piVar5 & 0xffff) - 1;\n        }\n        else {\n            unaff_EBX = &stack0x81f02b72;\n            out(0xff, puVar4 >> 0x10);\n            *piVar5 = *piVar5 + 1;\n            *(uVar7 + 0x50) = *(uVar7 + 0x50) + uVar6;\n        }\n    }\n    else {\n        uVar7 = uVar7 - piVar5;\n    }\n    bVar9 = CARRY4(uVar7, param_2);\n    *param_4 = uVar7 + param_2;\n    if ((bVar9) || (iVar8 = uVar7 + param_2,  !bVar9)) {\n        param_2 = puVar3[0x16];\n        param_4 = param_3;\n        iVar8 = unaff_ESI;\n    }\n    *(iVar8 + 0x43d1773a) = *(iVar8 + 0x43d1773a) ^ 0x8b27e95e;\n    unaff_EBX[0x5e5f5842] = unaff_EBX[0x5e5f5842] + param_4;\n    *param_4 = param_2 + 0x7c8ecb0d + (bVar9 == false);\n    return puVar3;\n}\n",
        "token_count": 886
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid entry0(void)\n\n{\n    uint *puVar1;\n    uint argv;\n    uint8_t *puVar2;\n    uint *in_FS_OFFSET;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint lpStartupInfo;\n    uint32_t var_30h;\n    uint var_2ch;\n    uchar *var_18h;\n    uint *var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x4061c0;\n    uStack16 = 0x405130;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    var_18h = &stack0xffffff78;\n    var_4h = 0;\n    (*_sym.imp.MSVCRT.dll___set_app_type)(2);\n    *0x4235c0 = 0xffffffff;\n    *0x4235c4 = 0xffffffff;\n    puVar1 = (*_sym.imp.MSVCRT.dll___p__fmode)();\n    *puVar1 = *0x4235bc;\n    puVar1 = (*_sym.imp.MSVCRT.dll___p__commode)();\n    *puVar1 = *0x4235b8;\n    *0x4235c8 = *_sym.imp.MSVCRT.dll__adjust_fdiv;\n    fcn.0040512f();\n    if (*0x423570 == 0) {\n        (*_sym.imp.MSVCRT.dll___setusermatherr)(0x40512c);\n    }\n    fcn.0040511a();\n    sub.MSVCRT.dll__initterm(0x407008, 0x40700c);\n    var_6ch = *0x4235b4;\n    (*_sym.imp.MSVCRT.dll___getmainargs)(&var_60h, &var_70h, &var_64h, *0x4235b0, &var_6ch);\n    sub.MSVCRT.dll__initterm(0x407000, 0x407004);\n    puVar2 = *_sym.imp.MSVCRT.dll__acmdln;\n    if (*puVar2 != 0x22) {\n        do {\n            if (*puVar2 < 0x21) goto code_r0x004050a3;\n            puVar2 = puVar2 + 1;\n        } while( true );\n    }\n    do {\n        puVar2 = puVar2 + 1;\n        if (*puVar2 == 0) break;\n    } while (*puVar2 != 0x22);\n    if (*puVar2 != 0x22) goto code_r0x004050a3;\n    do {\n        puVar2 = puVar2 + 1;\ncode_r0x004050a3:\n    } while ((*puVar2 != 0) && (*puVar2 < 0x21));\n    var_30h = 0;\n    (*_sym.imp.KERNEL32.dll_GetStartupInfoA)(&lpStartupInfo);\n    if ((var_30h & 1) == 0) {\n        var_2ch._0_2_ = 10;\n    }\n    argv = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0, 0, puVar2, var_2ch);\n    var_68h = main(argv);\n    (*_sym.imp.MSVCRT.dll_exit)(var_68h);\n    sub.MSVCRT.dll__XcptFilter(**var_14h, var_14h);\n    return;\n}\n",
        "token_count": 841
    },
    "004035f0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004035f0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n    return 1;\n}\n",
        "token_count": 97
    },
    "004037e0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x0040381e)\n// WARNING: Removing unreachable block (ram,0x0040382b)\n// WARNING: Removing unreachable block (ram,0x004038a2)\n\nbool fcn.004037e0(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_10bh;\n    uint pdwType;\n    uint pcbData;\n    uchar uVar4;\n    uchar var_10ch_2;\n    uint var_10bh_2;\n    uint var_4h_2;\n    \n    var_10ch_2 = 0;\n    var_4h_2 = 0x104;\n    puVar3 = &var_10bh_2;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    uVar4 = 0;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)();\n    if (iVar2 != 0) {\n        return false;\n    }\n    puVar1 = (*_sym.imp.MSVCRT.dll_strchr)(&var_10ch_2, 0x2e, uVar4);\n    if (puVar1 == NULL) {\n        return false;\n    }\n    *puVar1 = 0;\n    iVar2 = (*_sym.imp.MSVCRT.dll_atoi)(&var_10ch_2);\n    if (iVar2 == 6) {\n        return true;\n    }\n    return iVar2 == 7;\n}\n",
        "token_count": 402
    },
    "00403ef0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403ef0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_108h;\n    uint var_107h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(arg_8h, &var_4h);\n    if (arg_ch != var_4h) {\n        return 1;\n    }\n    var_108h = 0;\n    puVar2 = &var_107h;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    (*_sym.imp.USER32.dll_GetClassNameA)(arg_8h, &var_108h, 0x104);\n    iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_108h, 0x423494);\n    if (iVar1 != 0) {\n        return 1;\n    }\n    (*_sym.imp.USER32.dll_EnumChildWindows)(arg_8h, 0x403e70, 0);\n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    (*_sym.imp.KERNEL32.dll_Sleep)((iVar1 % 10 + 4) * 1000);\n    (*_sym.imp.USER32.dll_PostMessageA)(arg_8h, 0x10, 0, 0);\n    return 0;\n}\n",
        "token_count": 375
    },
    "00404f30": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404f4f) overlaps instruction at (ram,0x00404f4e)\n// \n\nvoid __fastcall fcn.00404f30(char *param_1, ushort param_2)\n\n{\n    ushort uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    char *pcVar3;\n    uint *puVar4;\n    uint uVar5;\n    int32_t unaff_EBP;\n    uint8_t *puVar6;\n    uint *unaff_EDI;\n    bool in_ZF;\n    uint *puStack125;\n    \n    uVar2 = *0x4235ac;\n    if ((!in_ZF) && (in_ZF)) {\n        puStack125 = unaff_EDI + 1;\n        uVar5 = in(param_2);\n        *unaff_EDI = uVar5;\n        uVar2 = in_EAX;\n        if (&stack0xfffffffc < 1) {\n            *(in_EAX + 0x30) = *(in_EAX + 0x30) + (param_1 >> 8);\n            _pe_dos_header = &stack0xfffffff7;\n            pcVar3 = in_EAX + 1;\n            *param_1 = *param_1 + (pcVar3 >> 8);\n            *pcVar3 = *pcVar3 + pcVar3;\n            *(in_EAX + 0x65) = *(in_EAX + 0x65) + param_2;\n            *(unaff_EBP + -0x18) = &puStack125;\n            *(unaff_EBP + -4) = 0;\n            (*_sym.imp.MSVCRT.dll___set_app_type)(2);\n            *0x4235c0 = 0xffffffff;\n            *0x4235c4 = 0xffffffff;\n            puVar4 = (*_sym.imp.MSVCRT.dll___p__fmode)();\n            *puVar4 = *0x4235bc;\n            puVar4 = (*_sym.imp.MSVCRT.dll___p__commode)();\n            *puVar4 = *0x4235b8;\n            *0x4235c8 = *_sym.imp.MSVCRT.dll__adjust_fdiv;\n            fcn.0040512f();\n            if (*0x423570 == 0) {\n                (*_sym.imp.MSVCRT.dll___setusermatherr)(0x40512c);\n            }\n            fcn.0040511a();\n            sub.MSVCRT.dll__initterm(0x407008, 0x40700c);\n            *(unaff_EBP + -0x6c) = *0x4235b4;\n            (*_sym.imp.MSVCRT.dll___getmainargs)\n                      (unaff_EBP + -0x60, unaff_EBP + -0x70, unaff_EBP + -100, *0x4235b0, unaff_EBP + -0x6c);\n            sub.MSVCRT.dll__initterm(0x407000, 0x407004);\n            puVar6 = *_sym.imp.MSVCRT.dll__acmdln;\n            *(unaff_EBP + -0x74) = puVar6;\n            if (*puVar6 != 0x22) {\n                do {\n                    if (*puVar6 < 0x21) goto code_r0x004050a3;\n                    puVar6 = puVar6 + 1;\n                    *(unaff_EBP + -0x74) = puVar6;\n                } while( true );\n            }\n            do {\n                puVar6 = puVar6 + 1;\n                *(unaff_EBP + -0x74) = puVar6;\n                if (*puVar6 == 0) break;\n            } while (*puVar6 != 0x22);\n            if (*puVar6 != 0x22) goto code_r0x004050a3;\n            do {\n                puVar6 = puVar6 + 1;\n                *(unaff_EBP + -0x74) = puVar6;\ncode_r0x004050a3:\n            } while ((*puVar6 != 0) && (*puVar6 < 0x21));\n            *(unaff_EBP + -0x30) = 0;\n            (*_sym.imp.KERNEL32.dll_GetStartupInfoA)(unaff_EBP + -0x5c);\n            if ((*(unaff_EBP + -0x30) & 1) == 0) {\n                uVar1 = 10;\n            }\n            else {\n                uVar1 = *(unaff_EBP + -0x2c);\n            }\n            uVar5 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0, 0, puVar6, uVar1);\n            uVar5 = main(uVar5);\n            *(unaff_EBP + -0x68) = uVar5;\n            (*_sym.imp.MSVCRT.dll_exit)(uVar5);\n            uVar5 = ***(unaff_EBP + -0x14);\n            *(unaff_EBP + -0x78) = uVar5;\n            sub.MSVCRT.dll__XcptFilter(uVar5, *(unaff_EBP + -0x14));\n            return;\n        }\n    }\n    uVar2 = uVar2 ^ 0xdee0ed6d;\n    param_1[0x4235ac] = param_1[0x4235ac];\n    if ((uVar2 & 0xffff0000 | uVar2 + (uVar2 >> 8) * -0x31) == 0) {\n        (*_sym.imp.MSVCRT.dll_time)();\n        (*_sym.imp.MSVCRT.dll_srand)();\n        *0x4235ac = 1;\n    }\n    return;\n}\n",
        "token_count": 1292
    },
    "00404800": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404b92) overlaps instruction at (ram,0x00404b8e)\n// \n\nvoid __fastcall fcn.00404800(uint param_1, uint8_t *param_2)\n\n{\n    char in_AL;\n    ushort uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    char extraout_CL;\n    uint16_t extraout_CX;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    uint8_t extraout_DL;\n    char *pcVar4;\n    int32_t *piVar5;\n    uint8_t *unaff_EBX;\n    uint16_t uVar6;\n    uint *unaff_ESI;\n    int32_t *unaff_EDI;\n    uchar in_CF;\n    bool bVar7;\n    uint8_t uVar8;\n    uchar uVar9;\n    uint8_t in_AF;\n    char in_ZF;\n    bool bVar10;\n    bool in_SF;\n    char cVar11;\n    char cVar12;\n    float10 fVar13;\n    unkbyte10 extraout_ST0;\n    ulong uVar14;\n    uint noname_2;\n    uint in_stack_ffffffdc;\n    uint32_t uVar15;\n    uint uVar16;\n    uint noname_2_00;\n    ushort in_stack_ffffffec;\n    ushort in_stack_ffffffee;\n    ushort uVar17;\n    \n    if (in_SF) goto code_r0x00404813;\n    if (!in_SF) goto code_r0x00404813;\n    in_CF = 0;\n    *param_2 = *param_2 ^ in_AL + 0x6aU;\n    in_ZF = *param_2 == 0;\n    while( true ) {\n        uVar16 = 0x404824;\n        fcn.00401bf0(0x423554, 0x18, CONCAT22(in_stack_ffffffee, in_stack_ffffffec), 0x423554);\n        if ((in_CF) || (!in_CF)) break;\n        if (extraout_ECX == 1 || in_ZF == '\\0') {\n            *unaff_EDI = unaff_ESI + 1;\n            unaff_ESI = 0x6ab8ec44;\n            goto code_r0x00404844;\n        }\ncode_r0x00404813:\n        in_stack_ffffffec = 0x30d0;\n        in_stack_ffffffee = 0x42;\n    }\n    uVar16 = 0xf;\n    in_stack_ffffffdc = 0x4232ec;\ncode_r0x00404844:\n    fcn.00401bf0(0x423554, 0x18, in_stack_ffffffdc, uVar16);\n    fcn.00401bf0(0x423554, 0x18, 0x4232fc, 0x1a);\n    uVar1 = fcn.00401bf0(0x423554, 0x18, 0x423350, 10);\n    bVar7 = false;\n    bVar10 = (CONCAT11((uVar1 >> 8) - extraout_CL, uVar1 + '\\x01') - 1U & 0x637b) == 0;\n    fcn.00401bf0(0x423554, 0x18, 0x42335c, 0xb);\n    if ((!bVar7 && !bVar10) && (bVar7 || bVar10)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    fcn.00401bf0(0x423554, 0x18, 0x423368, 8);\n    fcn.00401bf0(0x423554, 0x18, 0x423370, 9);\n    bVar7 = SBORROW2(unaff_EDI, 1);\n    fcn.00401bf0(0x423554, 0x18, 0x42337c, 9);\n    if ((!bVar7) && (bVar7)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    fcn.00401bf0(0x423554, 0x18, 0x423388, 9);\n    fcn.00401bf0(0x423554, 0x18, 0x423394, 0xc);\n    bVar7 = (extraout_DL ^ unaff_EBX >> 8 | 0x67) < '\\0';\n    fVar13 = fcn.00401bf0(0x423554, 0x18, 0x4233a0, 3);\n    if ((!bVar7) && (bVar7)) {\n        *(unaff_EDI + 7) = fVar13;\n        unaff_EDI = unaff_EDI + 5;\n        unaff_ESI = unaff_ESI + 5;\n    }\n    noname_2 = 0x423554;\n    uVar16 = 0x404a01;\n    fcn.00401bf0(0x423554, 0x18, 0x4233a4, 10);\n    fcn.00401bf0(0x423554, 0x18, 0x4233b0, 0x40);\n    uVar8 = 0;\n    cVar12 = '\\0';\n    uVar6 = unaff_ESI & extraout_CX;\n    cVar11 = uVar6 < 0;\n    uVar9 = (POPCOUNT(uVar6 & 0xff) & 1U) == 0;\n    uVar1 = 0x18;\n    uVar17 = 0;\n    noname_2_00 = 0x423554;\n    uVar14 = fcn.00401bf0(0x423554, 0x18, 0x4233f0, 0xc);\n    if ((cVar12 == cVar11) && (cVar12 != cVar11)) {\n        uVar8 = 0;\n        uVar9 = (POPCOUNT((uVar14 >> 0x20 ^ *uVar14) & 0xff) & 1U) == 0;\n    }\n    uVar15 = 0x404a73;\n    uVar14 = fcn.00401bf0(0x423554, 0x18, noname_2_00, CONCAT22(uVar17, uVar1));\n    pcVar4 = uVar14 >> 0x20;\n    uVar2 = uVar14;\n    if ((uVar9) || (uVar15 = uVar15 & 0xffff | unaff_ESI << 0x10,  !uVar9)) {\n        uVar15 = 4;\n        noname_2 = 0x423408;\n        uVar16 = 0x18;\n    }\n    else {\n        out(*unaff_ESI, uVar14 >> 0x20);\n        uVar8 = in_AF;\n        do {\n            cVar11 = uVar2 >> 8;\n            uVar8 = 9 < (uVar2 & 0xf) | uVar8;\n            uVar2 = CONCAT31(CONCAT21(uVar2 >> 0x10, cVar11 - uVar8), -uVar8);\n        } while (uVar8 || cVar11 == *pcVar4);\n    }\n    piVar5 = unaff_EDI + pcVar4 * 2;\n    *piVar5 = (*piVar5 + 0x7b) - uVar8;\n    *(extraout_ECX_00 + 0x6a) = uVar2;\n    pcVar4[(uVar2 & 0xffffff00 | uVar2 + 0x68) * 2] = pcVar4[(uVar2 & 0xffffff00 | uVar2 + 0x68) * 2] | uVar14 >> 0x28;\n    pcVar4[0x18] = pcVar4[0x18] + (extraout_ECX_00 >> 8);\n    iVar3 = fcn.00401bf0(0x423554, uVar16, noname_2, uVar15);\n    iVar3 = extraout_ECX_01 - iVar3;\n    uVar6 = iVar3 & 0xff00 | iVar3 ^ iVar3 >> 8 | 0x3d00 | unaff_EBX;\n    bVar7 = (uVar6 >> 8) - uVar6 < '\\0';\n    uVar1 = 0x4ad2;\n    uVar17 = 0x40;\n    fcn.00401bf0(0x423554, 0x18, 0x42340c, 4);\n    if ((bVar7) || (!bVar7)) {\n        uVar1 = 0xc;\n        uVar17 = 0;\n    }\n    *unaff_EBX = *unaff_EBX & 0xc3;\n    fcn.00401bf0(0x423554, 0x18, 0x423410, CONCAT22(uVar17, uVar1));\n    fcn.00401bf0(0x423554, 0x18, 0x42341c, 4);\n    fcn.00401bf0(0x423554, 0x18, 0x423420, 9);\n    uVar14 = fcn.00401bf0(0x423554, 0x18, 0x42342c, 0x16);\n    piVar5 = uVar14 >> 0x20;\n    *(uVar14 + -0x7ce92414) = extraout_ST0;\n    *piVar5 = *piVar5 + 0x76adf84;\n    fcn.00401bf0(0x423554, 0x18, 0x423444, unaff_EBX);\n    return;\n}\n",
        "token_count": 2263
    },
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401022)\n// WARNING: Removing unreachable block (ram,0x0040102c)\n\nvoid __cdecl fcn.00401000(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    // [00] -r-x section size 20480 named .text\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00401090(&var_68h, &var_4h);\n    fcn.004022a0(&var_68h, var_4h, 0x407010, 0xa0c0);\n    *arg_8h = 0x407010;\n    *arg_ch = 0xa0c0;\n    return;\n}\n",
        "token_count": 288
    },
    "00401090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040119a) overlaps instruction at (ram,0x00401199)\n// \n// WARNING: Removing unreachable block (ram,0x0040119a)\n// WARNING: Removing unreachable block (ram,0x0040118c)\n// WARNING: Removing unreachable block (ram,0x00401196)\n// WARNING: Removing unreachable block (ram,0x004011d3)\n// WARNING: Removing unreachable block (ram,0x00401209)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl fcn.00401090(uchar *arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint uVar3;\n    uint in_ECX;\n    uint32_t in_EDX;\n    uint8_t unaff_BL;\n    uint *puVar4;\n    uint *puVar5;\n    uchar *unaff_ESI;\n    bool bVar6;\n    uint auStack24 [2];\n    \n    puVar4 = &stack0xfffffffc;\n    *arg_8h = 0xcf;\n    uVar2 = in_ECX >> 8;\n    arg_8h[1] = 0xb3;\n    bVar6 = (POPCOUNT(uVar2 ^ unaff_BL) & 1U) != 0;\n    arg_8h[2] = 0xdd;\n    if ((bVar6) && (!bVar6)) {\n        puVar5 = auStack24 + 1;\n        cVar1 = '\\x1e';\n        do {\n            puVar4 = puVar4 + -1;\n            puVar5 = puVar5 + -1;\n            *puVar5 = *puVar4;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n        uVar3 = in(0x78);\n        return CONCAT44(in_EDX, uVar3);\n    }\n    arg_8h[3] = 0xd2;\n    arg_8h[4] = 0xca;\n    arg_8h[5] = 200;\n    bVar6 = (in_ECX - 5U & 0x44) == 0;\n    arg_8h[6] = 0xcb;\n    arg_8h[7] = 0xbf;\n    if ((!bVar6) && (bVar6)) {\n        out(*unaff_ESI, in_EDX);\n    }\n    arg_8h[8] = 0x1a;\n    arg_8h[9] = 0xd8;\n    arg_8h[10] = 0xdc;\n    bVar6 = (uVar2 ^ unaff_BL) < '\\0';\n    arg_8h[0xb] = 7;\n    arg_8h[0xc] = 0x13;\n    if (!bVar6) {\n        if (bVar6) {\n            *(arg_8h | &stack0xfffffffc) = arg_8h;\n            in_EDX = in_EDX & 0xffffff00;\n            arg_8h = arg_8h & 0xffff0000 | arg_8h + (arg_8h >> 8) * 'y';\n        }\n    }\n    arg_8h[0xd] = 0xb5;\n    *arg_ch = 0xe;\n    return CONCAT44(in_EDX, arg_ch);\n}\n",
        "token_count": 762
    },
    "00401260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004012db) overlaps instruction at (ram,0x004012d8)\n// \n\nbool fcn.00401260(void)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint16_t extraout_CX;\n    uint32_t uVar4;\n    char *pcVar5;\n    bool bVar6;\n    ulong uVar7;\n    uint *StringSid;\n    char *var_4h;\n    \n    var_4h = NULL;\n    StringSid = &var_4h;\n    uVar7 = fcn.00401e90(StringSid);\n    pcVar2 = uVar7;\n    if (pcVar2 == NULL) {\n        return false;\n    }\n    if ((pcVar2 < 0) || (pcVar2 >= 0)) {\n        pcVar2 = var_4h;\n    }\n    bVar6 = pcVar2 == 0x3ba74d1;\n    if (bVar6) {\n        return false;\n    }\n    pcVar2 = var_4h;\n    if ((!bVar6) && (StringSid = StringSid & 0xffff | extraout_CX << 0x10,  bVar6)) {\n        StringSid = 0x47;\n        pcVar2 = uVar7 >> 0x20;\n    }\n    uVar4 = 0xffffffff;\n    pcVar5 = pcVar2;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    iVar3 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x423298, 0x4232d8, 1, pcVar2, ~uVar4 - 1, StringSid);\n    return iVar3 == 0;\n}\n",
        "token_count": 445
    },
    "00401310": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401310(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 48
    },
    "00401340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.00401340(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x4231c4);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    *0x423578 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x4231d4);\n    *0x42357c = (*pcVar1)(iVar2, 0x4231f0);\n    *0x423580 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x423200);\n    if (((*0x423578 != 0) && (*0x42357c != 0)) && (*0x423580 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 208
    },
    "00401400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401461) overlaps instruction at (ram,0x0040145d)\n// \n\nvoid __cdecl fcn.00401400(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint extraout_EDX;\n    uint arg_ch_00;\n    uchar *puVar2;\n    uint *unaff_ESI;\n    uint *puVar3;\n    bool bVar4;\n    bool bVar5;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar3 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    bVar4 = false;\n    bVar5 = true;\n    fcn.004014a0(&var_68h, &var_4h);\n    arg_ch_00 = var_4h;\n    puVar2 = &stack0xfffffffc;\n    if ((!bVar4 && !bVar5) && (puVar2 = &stack0xfffffffc,  bVar4 || bVar5)) {\n        *(puVar3 + 3) = *unaff_ESI;\n        arg_ch_00 = extraout_EDX;\n        puVar2 = 0x8be181d0;\n    }\n    fcn.004022a0(puVar2 + -0x68, arg_ch_00, 0x4110d0, 0x12000);\n    puVar3 = *(puVar2 + 0xc);\n    **(puVar2 + 8) = 0x4110d0;\n    *puVar3 = 0x12000;\n    return;\n}\n",
        "token_count": 447
    },
    "004014a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004014f9) overlaps instruction at (ram,0x004014f7)\n// \n\nulong __cdecl fcn.004014a0(uint *arg_8h, uint *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint32_t *puVar5;\n    uint *in_EAX;\n    uint *puVar6;\n    uint uVar7;\n    uint16_t in_CX;\n    uint32_t in_EDX;\n    uint16_t unaff_BX;\n    uint *puVar8;\n    uchar *puVar9;\n    uint *unaff_ESI;\n    uint *puVar10;\n    uint16_t in_ES;\n    uint16_t in_SS;\n    bool in_PF;\n    bool bVar11;\n    bool in_ZF;\n    char in_SF;\n    char in_OF;\n    uint var_68h;\n    uint uStackY36;\n    uint32_t in_stack_ffffffe8;\n    uint in_stack_ffffffec;\n    uint32_t *puStack16;\n    \n    puVar10 = &stack0xfffffffc;\n    puVar8 = &stack0xfffffffc;\n    if ((in_ZF) || (puStack16 = in_CX << 0x10,  puVar6 = in_EAX,  !in_ZF)) {\n        *arg_8h = 0xd3;\n        if ((!in_PF) && (in_PF)) {\n            puVar6 = segment(in_SS, *0x10 + -0xc);\n            puVar6 = *puVar6;\n            unaff_ESI = arg_8h;\n            puStack16 = in_EAX;\n            goto code_r0x004014af;\n        }\n    }\n    else {\ncode_r0x004014af:\n        puStack16 = puStack16 & 0xffff0000 | in_SS;\n        puVar5 = puStack16;\n        puStack16 = 0x47;\n        uVar4 = in_CX & 0x1f;\n        *puVar5 = *puVar5 >> uVar4 | *puVar5 << 0x20 - uVar4;\n        uVar4 = *unaff_ESI;\n        unaff_BX = uVar4;\n        *puVar6 = *puVar6 + puVar6;\n        *(puVar6 + 0x66) = *(puVar6 + 0x66) + in_EDX;\n        *0xf58ea42 = *0xf58ea42 & 0xffffff00 | *0xf58ea42 + 0x42;\n        puVar1 = puVar5 + 0x16;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 - 0x16;\n        in_EDX = 0xb7bc9ea5;\n        if (0x15 < uVar2) {\n            *puVar5 = 0x42;\n            in_EDX = in_stack_ffffffe8 & 0xffff0000 | in_ES;\n            goto code_r0x0040150c;\n        }\n        if ((POPCOUNT(*puVar1) & 1U) == 0) {\n            *0xf58ea42 = *0xf58ea42 + 0xf58ea42;\n            uStackY36 = 0x401478;\n            uVar7 = fcn.004022a0(&fcn.004014a0::var_68h, 0xb7bc9ea5, 0x4110d0, in_stack_ffffffec);\n            *arg_8h = 0x4110d0;\n            *arg_ch = 0x12000;\n            return CONCAT44(arg_ch, uVar7);\n        }\n        in_OF = '\\0';\n        in_SF = &stack0xfffffff8 < 0;\n        in_EAX = 0xffffea42;\n        arg_8h = unaff_ESI;\n        unaff_BX = uVar4;\n    }\n    *(arg_8h + 1) = 0xeb;\n    if ((in_OF == in_SF) && (in_OF != in_SF)) {\n        unaff_BX = unaff_BX + (in_CX >> 8);\n        unaff_ESI = in_EAX + 1;\n        puStack16 = arg_8h;\n    }\n    else {\n        *(arg_8h + 2) = 0xdd;\n        unaff_ESI = arg_8h;\n        puStack16 = in_EAX;\n    }\ncode_r0x0040150c:\n    *(unaff_ESI + 3) = 0x87;\n    bVar11 = (POPCOUNT((puStack16 ^ unaff_BX) & 0xff) & 1U) != 0;\n    *(unaff_ESI + 1) = 0x74;\n    if ((bVar11) && (!bVar11)) {\n        puVar8 = &stack0xfffffff0;\n        cVar3 = '\\x1e';\n        do {\n            puVar10 = puVar10 + -1;\n            puVar8 = puVar8 + -1;\n            *puVar8 = *puVar10;\n            cVar3 = cVar3 + -1;\n        } while ('\\0' < cVar3);\n        uVar7 = in(0x78);\n        return CONCAT44(in_EDX, uVar7);\n    }\n    *(unaff_ESI + 5) = 0x9f;\n    bVar11 = (puStack16 & 0x11cb) != 0;\n    *(unaff_ESI + 6) = 0x3b;\n    puVar9 = &stack0xfffffffc;\n    if ((bVar11) && (puVar9 = &stack0xfffffffc,  !bVar11)) {\n        puVar10 = &stack0xfffffff0;\n        puVar9 = &stack0xfffffff0;\n        cVar3 = '\\x10';\n        do {\n            puVar8 = puVar8 + -1;\n            puVar10 = puVar10 + -1;\n            *puVar10 = *puVar8;\n            cVar3 = cVar3 + -1;\n        } while ('\\0' < cVar3);\n    }\n    *(unaff_ESI + 7) = 0x3f;\n    bVar11 = ((CONCAT11((puStack16 >> 8) + -0x2b, puStack16) ^ 0x3d) + 0x7c28 ^ CONCAT11(in_EDX >> 8 | in_EDX, in_EDX))\n             != 0x4001;\n    *(unaff_ESI + 2) = 0x1e;\n    puVar10 = unaff_ESI;\n    if ((bVar11) && (!bVar11)) {\n        puVar10 = unaff_ESI + 1;\n        out(*unaff_ESI, in_EDX);\n    }\n    *(puVar10 + 9) = 0x6c;\n    puVar10 = *(puVar9 + 0xc);\n    *puVar10 = 10;\n    return CONCAT44(in_EDX, puVar10);\n}\n",
        "token_count": 1598
    },
    "00401c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401c90(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t in_ECX;\n    uint32_t uVar2;\n    int32_t unaff_ESI;\n    ushort in_SS;\n    bool in_CF;\n    bool in_PF;\n    \n    uVar2 = arg_8h;\n    if ((((!in_PF) && (in_PF)) && (segment(in_SS, *0x10 + -4),  uVar2 = in_ECX,  !in_CF)) && (uVar2 = arg_8h,  in_PF)) {\n        while( true ) {\n            *(unaff_ESI + arg_10h) = arg_14h ^ in_ECX ^ *(unaff_ESI % arg_ch + arg_8h);\n            unaff_ESI = unaff_ESI + 1;\n            if (arg_14h <= unaff_ESI) break;\n            in_ECX = *(unaff_ESI + arg_10h);\n        }\n        return arg_14h;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)(uVar2);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return 1;\n}\n",
        "token_count": 317
    },
    "00401d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nchar * __cdecl fcn.00401d10(char *arg_8h, int32_t arg_ch, char *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    bool bVar5;\n    \n    pcVar2 = arg_8h + (arg_ch - arg_14h);\n    if (arg_14h != 0) {\n        if (arg_8h <= pcVar2) {\n            do {\n                if (*arg_8h == *arg_10h) {\n                    bVar5 = true;\n                    iVar1 = arg_14h;\n                    pcVar3 = arg_8h;\n                    pcVar4 = arg_10h;\n                    do {\n                        pcVar4 = pcVar4 + 1;\n                        pcVar3 = pcVar3 + 1;\n                        iVar1 = iVar1 + -1;\n                        if (iVar1 == 0) break;\n                        bVar5 = *pcVar3 == *pcVar4;\n                    } while (bVar5);\n                    if (bVar5) {\n                        return arg_8h;\n                    }\n                }\n                arg_8h = arg_8h + 1;\n            } while (arg_8h <= pcVar2);\n        }\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 326
    },
    "00401df0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401df0(uint hSCManager, uint lpServiceName)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ushort unaff_BX;\n    int32_t iVar4;\n    char cVar5;\n    char cVar6;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (iVar1 != 0) {\n        uVar2 = ((iVar1 & 0xff00 | iVar1 & unaff_BX >> 8) ^ 0x6200) - 0x3488 & 0x7ee5;\n        cVar6 = SCARRY4(uVar2, uVar2);\n        cVar5 = '\\0';\n        iVar3 = (*_sym.imp.ADVAPI32.dll_DeleteService)(iVar1);\n        iVar4 = iVar3;\n        if ((cVar6 == cVar5) && (cVar6 != cVar5)) {\n            out(0xc4, iVar3);\n            iVar4 = iVar3 + 4;\n            *iVar3 = iVar3;\n        }\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n        return iVar4;\n    }\n    return 0;\n}\n",
        "token_count": 292
    },
    "00401e90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401f7a) overlaps instruction at (ram,0x00401f76)\n// \n// WARNING: Removing unreachable block (ram,0x00401f3f)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401e90(uint StringSid)\n\n{\n    int32_t iVar1;\n    uint var_31ch;\n    uint lpBuffer;\n    uint Sid;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&lpBuffer, &var_ch);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    var_4h = 0x104;\n    var_8h = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)(0, &lpBuffer, &Sid, &var_4h, &var_31ch, &var_8h, &var_10h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)(&Sid, StringSid);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 321
    },
    "00401f90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nuint __cdecl fcn.00401f90(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t *puVar1;\n    uint uVar2;\n    uint16_t uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    uint16_t unaff_BX;\n    bool bVar5;\n    uint uStack16;\n    \n    while( true ) {\n        iVar4 = in_ECX - in_EAX;\n        uVar3 = iVar4 & 0xff00 | iVar4 ^ iVar4 >> 8 | 0x3d00 | unaff_BX;\n        bVar5 = uVar3 >> 8 < uVar3;\n        uStack16 = 0xf003f;\n        puVar1 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0);\n        if (bVar5) break;\n        if (!bVar5) break;\n        in_EAX = puVar1 + 1;\n        in_ECX = extraout_ECX;\n        if (&uStack16 < *puVar1 || in_EAX == 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    uVar2 = fcn.00402730(puVar1, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(puVar1);\n    return uVar2;\n}\n",
        "token_count": 337
    },
    "004023b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file",
            "write file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004023b0(uint filename, uint mode, uint ptr, uint nitems)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_fopen)(filename, mode);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.MSVCRT.dll_fwrite)(ptr, 1, nitems, iVar1);\n    bVar3 = false;\n    uVar2 = (*_sym.imp.MSVCRT.dll_fflush)(iVar1);\n    if ((!bVar3) && (bVar3)) {\n        out(0xbd, uVar2);\n        return uVar2;\n    }\n    (*_sym.imp.MSVCRT.dll_fclose)(iVar1);\n    return 1;\n}\n",
        "token_count": 187
    },
    "00402440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402462) overlaps instruction at (ram,0x0040245f)\n// \n// WARNING: Removing unreachable block (ram,0x004024ad)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00402440(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint in_EDX;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    bool bVar9;\n    bool bVar10;\n    bool bVar11;\n    uchar var_24h;\n    uint var_23h;\n    uint *var_4h;\n    \n    bVar9 = in_EDX + (in_EDX >> 8) != '\\0';\n    if (bVar9) {\n        if (!bVar9) {\n            bVar9 = false;\n            uVar2 = (*_sym.imp.MSVCRT.dll_fflush)();\n            if ((!bVar9) && (bVar9)) {\n                out(0xbd, uVar2);\n                return uVar2;\n            }\n            (*_sym.imp.MSVCRT.dll_fclose)();\n            return 1;\n        }\n    }\n    puVar3 = fcn.00401d10(arg_18h, arg_1ch, 0x423114, 7);\n    pcVar1 = _sym.imp.MSVCRT.dll_rand;\n    var_4h = puVar3;\n    if (puVar3 != NULL) {\n        uVar4 = 0;\n        var_24h = 0;\n        puVar8 = &var_23h;\n        for (iVar5 = 7; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar8 = 0;\n            puVar8 = puVar8 + 1;\n        }\n        *puVar8 = 0;\n        *(puVar8 + 2) = 0;\n        bVar11 = false;\n        bVar10 = false;\n        bVar9 = true;\n        uVar6 = 0;\n        do {\n            if ((bVar9 || bVar11 != bVar10) || (!bVar9 && bVar11 == bVar10)) {\n                uVar4 = (*pcVar1)();\n            }\n            uVar4 = uVar4 & 0x800000ff;\n            if (uVar4 < 0) {\n                uVar4 = (uVar4 - 1 | 0xffffff00) + 1;\n            }\n            (&var_24h)[uVar6] = uVar4;\n            uVar7 = uVar6 + 1;\n            bVar11 = SBORROW4(uVar7, 0x20);\n            bVar10 = uVar6 - 0x1f < 0;\n            bVar9 = uVar7 == 0x20;\n            uVar6 = uVar7;\n        } while (uVar7 < 0x20);\n        puVar8 = &var_24h;\n        for (iVar5 = 8; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar3 = *puVar8;\n            puVar8 = puVar8 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        fcn.00403440(arg_8h, arg_ch, arg_10h, arg_14h, &var_24h, 0x20, var_4h);\n        fcn.00403370(arg_18h, arg_1ch);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 857
    },
    "004027d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004027d0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004018d0(arg_8h, 1);\n    return iVar1 != 0;\n}\n",
        "token_count": 54
    },
    "00402ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402b32) overlaps instruction at (ram,0x00402b31)\n// \n\nvoid __cdecl fcn.00402ad0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    ushort in_SS;\n    bool in_CF;\n    uchar uVar2;\n    \n    uVar2 = (POPCOUNT(arg_ch - 1U & 0xff) & 1U) == 0;\n    if (arg_ch - 1U != 0) goto code_r0x00402b48;\n    if ((uVar2) || (!uVar2)) {\ncode_r0x00402b00:\n        iVar1 = fcn.00404250();\n        uVar2 = (POPCOUNT(iVar1 - extraout_ECX & 0xff) & 1U) == 0;\n        fcn.004016b0();\n    }\n    else {\n        segment(in_SS, *0x10 + -8);\n        if (!in_CF) {\n            if (uVar2) {\n                (*_sym.imp.KERNEL32.dll_Sleep)();\n                (*_sym.imp.KERNEL32.dll_WinExec)(0x3c);\n                return;\n            }\n            goto code_r0x00402b00;\n        }\n    }\n    fcn.00404000();\n    if ((uVar2) || (!uVar2)) {\n        if (*0x423584 != 0) goto code_r0x00402b48;\n        (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n    }\n    else {\n        *(extraout_ECX_00 + 0x423584) = *(extraout_ECX_00 + 0x423584) & 0xffffff85;\n    }\n    fcn.00402e70();\ncode_r0x00402b48:\n    (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 472
    },
    "00403370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004033be) overlaps instruction at (ram,0x004033bd)\n// \n// WARNING: Removing unreachable block (ram,0x004033ae)\n// WARNING: Removing unreachable block (ram,0x00403429)\n// WARNING: Removing unreachable block (ram,0x0040342e)\n// WARNING: Removing unreachable block (ram,0x00403431)\n// WARNING: Removing unreachable block (ram,0x004033b3)\n\nuint __cdecl fcn.00403370(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    uVar1 = arg_ch;\n    iVar2 = fcn.00403660(arg_8h, arg_ch, &var_4h, &arg_ch);\n    if (iVar2 != 0) {\n        *(iVar2 + 0x58) = arg_ch;\n        fcn.00403660(arg_8h, uVar1, &var_4h, &arg_ch);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 246
    },
    "00403440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403513) overlaps instruction at (ram,0x00403512)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl\nfcn.00403440(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint8_t *arg_1ch, int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_10ch;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00402580(arg_18h, arg_1ch, arg_8h, 0x20, arg_20h + 0x20);\n    fcn.00402580(arg_18h, arg_1ch, arg_ch, 0x20, arg_20h + 0x60);\n    fcn.00402580(arg_18h, arg_1ch, arg_10h, 0x20, arg_20h + 0xa0);\n    fcn.00402580(arg_18h, arg_1ch, arg_14h, 0x20, arg_20h + 0xe0);\n    if ((-1 < &stack0xfffffee4) && (-1 >= &stack0xfffffee4)) {\n        *arg_1ch = *arg_1ch & 0xc3;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar1 = fcn.004033f0();\n    if (iVar1 == -1) {\n        iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n        *(arg_20h + 0x120) = iVar1 % 5;\n    }\n    else {\n        *(arg_20h + 0x120) = iVar1;\n    }\n    var_10ch = 0;\n    puVar2 = &var_10bh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    var_4h = 0x104;\n    *(puVar2 + 2) = 0;\n    iVar1 = fcn.00404e90(0x80000001, 0x423318, 0x423344, &var_8h, &var_10ch, &var_4h);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_10ch, 0x423394);\n        if (iVar1 == 0) {\n            *(arg_20h + 0x120) = *(arg_20h + 0x120) | 0x80;\n        }\n    }\n    return;\n}\n",
        "token_count": 679
    },
    "004037b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004037b0(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 103
    },
    "004038e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040390d) overlaps instruction at (ram,0x0040390b)\n// \n\nbool fcn.004038e0(uint param_1)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    ushort uVar5;\n    char *pcVar6;\n    uint *unaff_ESI;\n    uint32_t unaff_EDI;\n    bool bVar7;\n    uint8_t in_AF;\n    ulong uVar8;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    char cVar4;\n    \n    uVar8 = (*_sym.imp.MSVCRT.dll__strlwr)();\n    pcVar6 = uVar8 >> 0x20;\n    uVar2 = uVar8;\n    bVar7 = (POPCOUNT(&stack0xffffffdc & 0xff) & 1U) != 0;\n    uVar5 = uVar8 >> 0x20;\n    if (bVar7) {\n        if (!bVar7) {\n            out(*unaff_ESI, uVar5);\n            do {\n                cVar4 = uVar2 >> 8;\n                in_AF = 9 < (uVar2 & 0xf) | in_AF;\n                uVar2 = CONCAT31(CONCAT21(uVar2 >> 0x10, cVar4 - in_AF), -in_AF);\n            } while (in_AF || cVar4 == *pcVar6);\n            piVar1 = unaff_EDI + pcVar6 * 2;\n            *piVar1 = (*piVar1 + 0x7b) - in_AF;\n            *(extraout_ECX + -0x39) = uVar2;\n            in(uVar5);\n            LOCK();\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    uStack24 = 0x423500;\n    uStack20 = 0x4234f8;\n    uStack16 = 0x423508;\n    uStack12 = 0x423510;\n    uStack8 = 0x423518;\n    if ((&stack0xffffffdc < 0) || (&stack0xffffffdc >= 0)) {\n        unaff_EDI = 0;\n        unaff_ESI = &uStack24;\n    }\n    else {\n        in(uVar5);\n    }\n    do {\n        iVar3 = (*_sym.imp.MSVCRT.dll_strstr)(param_1, *unaff_ESI);\n        if (iVar3 != 0) {\n            return true;\n        }\n        unaff_EDI = unaff_EDI + 1;\n        unaff_ESI = unaff_ESI + 1;\n    } while (unaff_EDI < 5);\n    iVar3 = (*_sym.imp.MSVCRT.dll_strstr)(param_1, 0x4234f0);\n    return iVar3 == 0;\n}\n",
        "token_count": 678
    },
    "004039a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403a41) overlaps instruction at (ram,0x00403a38)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004039a0(int32_t *hWnd)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    uint8_t extraout_DL;\n    int32_t unaff_ESI;\n    uint *puVar8;\n    uint *in_FS_OFFSET;\n    bool bVar9;\n    bool bVar10;\n    uint uVar11;\n    uint var_24ch;\n    uchar var_148h;\n    uint var_147h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t pbstr;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint lpdwResult;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x405170;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x4234b8);\n    bVar9 = false;\n    bVar10 = iVar3 == 0;\n    if (bVar10) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    uVar11 = 0x4234c4;\n    var_44h = iVar3;\n    uVar4 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(0x4234c4);\n    if ((!bVar9 && !bVar10) && (bVar9 || bVar10)) {\n        uVar4 = uVar11;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_SendMessageTimeoutA)(hWnd, uVar4, 0, 0, 2, 1000, &lpdwResult);\n    if ((bVar9) || (!bVar9)) {\n        pcVar6 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, 0x4234d8);\n    }\n    else {\n        *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x6827e95e;\n        puVar1 = iVar3 + -1;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 + extraout_DL;\n        pcVar6 = iVar5 + (bVar9 == false) + 0x7ccf2b7d + CARRY1(uVar2, extraout_DL);\n    }\n    if (pcVar6 == NULL) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_20h = NULL;\n    var_4h = 0;\n    iVar5 = (*pcVar6)(lpdwResult, str._D_3, 0, &var_20h);\n    if ((iVar5 < 0) || (var_20h == NULL)) {\n        var_4h = 0xffffffff;\n        if (var_20h != NULL) {\n            (**(*var_20h + 8))(var_20h);\n        }\n    }\n    else {\n        var_24h = NULL;\n        var_4h._0_1_ = 1;\n        iVar5 = (**(*var_20h + 0x20))(var_20h, &var_24h);\n        if ((iVar5 < 0) || (var_24h == NULL)) {\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n            }\n        }\n        else {\n            var_1ch = 0;\n            (**(*var_24h + 0x24))(var_24h, &var_1ch);\n            var_40h = 0;\n            if (0 < var_1ch) {\n                do {\n                    var_2ch = (*_sym.imp.MSVCRT.dll_rand)();\n                    var_2ch = var_2ch % var_1ch;\n                    var_34h = CONCAT22(var_34h._2_2_, 3);\n                    hWnd = NULL;\n                    var_10h = NULL;\n                    var_4h._0_1_ = 4;\n                    iVar5 = (**(*var_24h + 0x2c))\n                                      (var_24h, var_34h, var_30h, var_2ch, var_28h, var_34h, var_30h, var_2ch, var_28h, \n                                       &hWnd);\n                    if ((iVar5 < 0) || (hWnd == NULL)) {\n                        var_4h._0_1_ = 3;\n                        if (var_10h != NULL) {\n                            (**(*var_10h + 8))(var_10h);\n                        }\njoined_r0x00403dcb:\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\ncode_r0x00403dd7:\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                        break;\n                    }\n                    iVar5 = (***hWnd)(hWnd, 0x4061b0, &var_10h);\n                    if (((iVar5 < 0) || (var_10h == NULL)) ||\n                       (iVar5 = (**(*var_10h + 0x38))(var_10h, &pbstr),  iVar5 < 0)) {\njoined_r0x00403d92:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                        goto code_r0x00403dd7;\n                    }\n                    if (pbstr == 0) {\njoined_r0x00403bce:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    else {\n                        fcn.004037b0(pbstr, &var_24ch, 0x104);\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(pbstr);\n                        iVar3 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_24ch, 0x4234ec);\n                        if (iVar3 != 0) goto joined_r0x00403bce;\n                        var_14h = NULL;\n                        var_4h._0_1_ = 5;\n                        iVar5 = (***hWnd)(hWnd, 0x4061a0, &var_14h);\n                        if ((iVar5 < 0) || (var_14h == NULL)) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\njoined_r0x00403d77:\n                            if (var_10h != NULL) {\n                                var_4h._0_1_ = 3;\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                            goto joined_r0x00403dcb;\n                        }\n                        iVar5 = (**(*var_14h + 0x20))(var_14h, &var_3ch);\n                        iVar3 = var_3ch;\n                        if (iVar5 < 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            goto joined_r0x00403d77;\n                        }\n                        if (var_3ch == 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        else {\n                            var_148h = 0;\n                            puVar8 = &var_147h;\n                            for (iVar7 = 0x40; iVar7 != 0; iVar7 = iVar7 + -1) {\n                                *puVar8 = 0;\n                                puVar8 = puVar8 + 1;\n                            }\n                            *puVar8 = 0;\n                            *(puVar8 + 2) = 0;\n                            fcn.004037b0(iVar3, &var_148h, 0x104);\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)(var_3ch);\n                            iVar3 = fcn.004038e0(&var_148h);\n                            if (iVar3 == 0) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                                (**(*var_10h + 0x114))(var_10h);\n                                var_4h._0_1_ = 4;\n                                if (var_14h != NULL) {\n                                    (**(*var_14h + 8))(var_14h);\n                                }\n                                goto joined_r0x00403d92;\n                            }\n                            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                    var_40h = var_40h + 1;\n                } while (var_40h < var_1ch);\n            }\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            iVar3 = var_44h;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n                iVar3 = var_44h;\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    *in_FS_OFFSET = var_ch;\n    return iVar5;\n}\n",
        "token_count": 2744
    },
    "00404250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004044a0) overlaps instruction at (ram,0x0040449f)\n// \n// WARNING: Removing unreachable block (ram,0x00404732)\n\nvoid fcn.00404250(void)\n\n{\n    uint32_t *puVar1;\n    char *pcVar2;\n    uint *puVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    char extraout_CH;\n    uint8_t extraout_CH_00;\n    char extraout_CH_01;\n    uint8_t extraout_DL;\n    uint16_t extraout_DX;\n    uint32_t uVar6;\n    uint16_t unaff_BX;\n    uint *unaff_EBP;\n    uint *unaff_EDI;\n    uint *puVar7;\n    ushort in_SS;\n    bool bVar8;\n    uchar uVar9;\n    bool bVar10;\n    char cVar11;\n    uchar uVar12;\n    char cVar13;\n    float10 fVar14;\n    ulong uVar15;\n    uint in_stack_ffffa159;\n    uint *in_stack_ffffa15d;\n    ushort uVar16;\n    ushort uVar17;\n    ushort uVar18;\n    ushort uVar19;\n    ushort uVar20;\n    ushort uVar21;\n    uint uVar22;\n    \n    fcn.00401bf0(0x423554, 0x18, 0x4230e4, 10);\n    fcn.00401bf0(0x423554, 0x18, 0x4230f0, 0x12);\n    bVar8 = extraout_DL < 0x51;\n    uVar12 = SBORROW1(extraout_DL, 'Q');\n    bVar10 = extraout_DL == 0x51;\n    fcn.00401bf0(0x423554, 0x18, 0x423104, 4);\n    if ((!bVar8 && !bVar10) && (bVar8 || bVar10)) {\n        uVar12 = 0;\n    }\n    uVar22 = 0x4042df;\n    fcn.00401bf0(0x423554, 0x18, 0x423108, 0xc);\n    if ((uVar12) || (!uVar12)) {\n        uVar22 = 7;\n    }\n    fcn.00401bf0(0x423554, 0x18, 0x423114, uVar22);\n    fcn.00401bf0(0x423554, 0x18, 0x42311c, 0xb);\n    fcn.00401bf0(0x423554, 0x18, 0x423128, 0xc);\n    fcn.00401bf0(0x423554, 0x18, 0x423134, 8);\n    fcn.00401bf0(0x423554, 0x18, 0x42313c, 0xd);\n    fcn.00401bf0(0x423554, 0x18, 0x42314c, 0x18);\n    fcn.00401bf0(0x423554, 0x18, 0x423164, 0x25);\n    fcn.00401bf0(0x423554, 0x18, 0x42318c, 10);\n    fcn.00401bf0(0x423554, 0x18, 0x423198, 0xc);\n    fcn.00401bf0(0x423554, 0x18, 0x4231a4, 0xd);\n    bVar8 = (POPCOUNT(unaff_BX + 1 ^ 0x50) & 1U) == 0;\n    uVar15 = fcn.00401bf0(0x423554, 0x18, 0x4231b4, 6);\n    if ((!bVar8) && (bVar8)) {\n        puVar1 = (uVar15 >> 0x20) + 5;\n        uVar6 = *puVar1;\n        *puVar1 = *puVar1 - 0x68;\n        pcVar2 = uVar15 + 0x54;\n        *pcVar2 = (*pcVar2 - extraout_CH) - (uVar6 < 0x68);\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uVar4 = fcn.00401bf0(0x423554, 0x18, 0x4231bc, 5);\n    uVar4 = (extraout_DX & 0xff00 | (extraout_DX & 0x4e | 0x38) & uVar4) & uVar4 ^ 0x3c00;\n    uVar6 = (uVar4 & 0xff | (uVar4 >> 8) + (unaff_BX >> 8) << 8) | 0x604;\n    bVar8 = (uVar6 >> 8) + uVar6 == '\\0';\n    fcn.00401bf0(0x423554, 0x18, 0x4231c4, 0xd);\n    if ((!bVar8) && (bVar8)) {\n        puVar7 = &stack0xffffffe0;\n        cVar11 = '\\x10';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar7 = puVar7 + -1;\n            *puVar7 = *unaff_EBP;\n            cVar11 = cVar11 + -1;\n        } while ('\\0' < cVar11);\n    }\n    iVar5 = fcn.00401bf0(0x423554, 0x18, 0x4231d4, 0x19);\n    bVar8 = iVar5 + 1 < 0;\n    fVar14 = fcn.00401bf0(0x423554, 0x18, 0x4231f0, 0xf);\n    if ((!bVar8) && (bVar8)) {\n        *(unaff_EDI + 7) = fVar14;\n        unaff_EDI = unaff_EDI + 5;\n    }\n    fcn.00401bf0(0x423554, 0x18, 0x423200, 0xe);\n    fcn.00401bf0(0x423554, 0x18, 0x423210, 0xb);\n    fcn.00401bf0(0x423554, 0x18, 0x42321c, 0xb);\n    fcn.00401bf0(0x423554, 0x18, 0x423228, 0xb);\n    uVar20 = 10;\n    uVar21 = 0;\n    uVar18 = 0x3234;\n    uVar19 = 0x42;\n    uVar16 = 0x18;\n    uVar17 = 0;\n    while( true ) {\n        fcn.00401bf0(0x423554, CONCAT22(uVar17, uVar16), CONCAT22(uVar19, uVar18), CONCAT22(uVar21, uVar20));\n        uVar12 = 0;\n        uVar9 = (POPCOUNT(extraout_CH_00 ^ unaff_BX) & 1U) == 0;\n        uVar20 = 0xc;\n        uVar21 = 0;\n        uVar18 = 0x3240;\n        uVar19 = 0x42;\n        uVar16 = 0x18;\n        uVar17 = 0;\n        fcn.00401bf0(0x423554, 0x18, 0x423240, 0xc);\n        fcn.00401bf0(0x423554, 0x18, 0x42324c, 0xe);\n        puVar7 = unaff_EDI;\n        if ((uVar9) || (!uVar9)) goto code_r0x00404664;\n        segment(in_SS, *0x10 + -0x5e8f);\n        if (uVar12) {\n            puVar7 = unaff_EDI + 1;\n            uVar12 = in(0x9ea5);\n            *unaff_EDI = uVar12;\n            goto code_r0x00404695;\n        }\n        if (!uVar9) break;\n        *0xb7bc9ebe = *0xb7bc9ebe + extraout_CH_01;\n    }\n    uVar9 = (POPCOUNT(&stack0xffffa175 & 0xff) & 1U) == 0;\ncode_r0x00404664:\n    do {\n        fcn.00401bf0(0x423554, 0x18, 0x42325c, 0x11);\n        if ((uVar9) || (in_stack_ffffa15d = puVar7,  !uVar9)) {\n            in_stack_ffffa159 = 0x423270;\n            in_stack_ffffa15d = 0x13;\n        }\ncode_r0x00404695:\n        uVar4 = fcn.00401bf0(0x423554, 0x18, in_stack_ffffa159, in_stack_ffffa15d);\n        bVar8 = false;\n        cVar13 = '\\0';\n        cVar11 = (uVar4 ^ unaff_BX) < 0;\n        bVar10 = (POPCOUNT((uVar4 ^ unaff_BX) & 0xff) & 1U) == 0;\n        fcn.00401bf0(0x423554, 0x18, 0x423284, 0x14);\n        if ((bVar10) || (!bVar10)) goto code_r0x004046e0;\n        puVar3 = segment(in_SS, *0x10 + -0x5e7f);\n        if (bVar8) {\n            cVar13 = '\\0';\n            cVar11 = (*puVar3 ^ *0xb7bc9ea5) < '\\0';\n            goto code_r0x004046fd;\n        }\n        if (!bVar10) {\n            cVar13 = '\\0';\n            cVar11 = &stack0xffffa185 < 0;\ncode_r0x004046e0:\n            fcn.00401bf0(0x423554, 0x18, 0x423298, 0x33);\ncode_r0x004046fd:\n            uVar22 = fcn.00401bf0(0x423554, 0x18, 0x4232cc, 10);\n            if ((cVar13 == cVar11) && (cVar13 != cVar11)) {\n                out(0xc4, uVar22);\n                *puVar7 = uVar22;\n            }\n            fcn.00401bf0(0x423554, 0x18, 0x4232d8, 4);\n            fcn.00401bf0(0x423554, 0x18, 0x4232dc, 5);\n            fcn.00401bf0(0x423554, 0x18, 0x4232e4, 6);\n            bVar8 = 0xffffffef < &stack0xffffa175;\n            uVar22 = fcn.00401bf0(0x423554, 0x18, 0x423318, 0x2a);\n            if ((!bVar8) && (bVar8)) {\n                out(0xbd, uVar22);\n                return;\n            }\n            fcn.00401bf0(0x423554, 0x18, 0x423344, 0xb);\n            return;\n        }\n        uVar9 = (POPCOUNT(*puVar3 ^ *0xb7bc9ea5) & 1U) == 0;\n    } while( true );\n}\n",
        "token_count": 2703
    },
    "00404e90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool __cdecl fcn.00404e90(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint hKey;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(arg_8h, arg_ch, 0, 0xf003f, &hKey);\n    if (iVar1 != 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, arg_10h, 0, arg_14h, arg_18h, arg_1ch);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    return iVar1 == 0;\n}\n",
        "token_count": 208
    },
    "004022a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004022fa) overlaps instruction at (ram,0x004022f9)\n// \n// WARNING: Removing unreachable block (ram,0x004022f7)\n\nvoid __cdecl fcn.004022a0(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (arg_14h != 0) {\n        do {\n            *(uVar1 + arg_10h) = *(uVar1 + arg_10h) ^ *(uVar1 % arg_ch + arg_8h);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00401620": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401620(uint arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "00402e40": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00402e40(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x423298, 0x4232dc, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 79
    },
    "00401bf0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401bf0(int32_t noname_0, int32_t noname_1, int32_t noname_2, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < arg_14h) {\n        do {\n            *(iVar1 + noname_2) = arg_14h ^ *(iVar1 + noname_2) ^ *(iVar1 % noname_1 + noname_0);\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "00402730": {
        "rules": [
            "contain loop",
            "get service handle",
            "start service"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00402730(int32_t param_1, uint param_2, uint param_3)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint uVar5;\n    uint32_t in_EAX;\n    int32_t iVar6;\n    int32_t unaff_EBX;\n    int32_t iVar7;\n    uint32_t unaff_EDI;\n    uint8_t in_AF;\n    bool in_ZF;\n    char in_SF;\n    char in_OF;\n    char in_stack_00000048;\n    char *pcVar4;\n    \n    if (!in_ZF && in_OF == in_SF) {\n        while (in_ZF || in_OF != in_SF) {\n            in_AF = 9 < (in_EAX & 0xf) | in_AF;\n            in_EAX = in_EAX & 0xffff0000 | CONCAT11((in_EAX >> 8) + in_AF, in_EAX + in_AF * '\\x06') & 0xff0f;\n            if (param_1 != 0) {\n                do {\n    // WARNING: Do nothing block with infinite loop\n                } while( true );\n            }\n            in_OF = SCARRY1(in_stack_00000048, '\\0');\n            in_SF = in_stack_00000048 < '\\0';\n            in_ZF = in_stack_00000048 == '\\0';\n            if (in_OF == in_SF) {\n                uVar3 = in_EAX ^ 0xdee0ed6d;\n                uVar2 = uVar3 + (uVar3 >> 8) * -0x31;\n                pcVar4 = uVar3 & 0xffff0000 | uVar2;\n                *(unaff_EBX + -0x8f43) = *(unaff_EBX + -0x8f43) ^ uVar2;\n                *0x1b80a75 = *0x1b80a75 + 1;\n                *pcVar4 = *pcVar4 + uVar2;\n                *(unaff_EBX + -0x75) = *(unaff_EBX + -0x75) + unaff_EBX;\n                uVar5 = in(0x5d);\n                return uVar5;\n            }\n        }\n    }\n    iVar6 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(param_2, param_3, 0xf01ff);\n    if (iVar6 == 0) {\n        return 0;\n    }\n    iVar7 = iVar6;\n    if ((-1 < iVar6) && (-1 >= iVar6)) {\n        iVar7 = iVar6 + -1;\n        *(unaff_EDI | &stack0xfffffffc) = iVar6;\n    }\n    iVar6 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar7, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (((iVar6 == 0) && (iVar6 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar6 != 0x420)) &&\n       (iVar6 = (*pcVar1)(),  iVar6 != 0x422)) {\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar7);\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar7);\n    return 1;\n}\n",
        "token_count": 752
    },
    "00402c20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402c3d) overlaps instruction at (ram,0x00402c3b)\n// \n// WARNING: Removing unreachable block (ram,0x00402c5e)\n\nuint __cdecl fcn.00402c20(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    char cVar5;\n    uint in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint8_t extraout_DH;\n    char *in_EDX;\n    uint *unaff_ESI;\n    int32_t unaff_EDI;\n    bool bVar6;\n    bool in_PF;\n    uint8_t in_AF;\n    int32_t iVar7;\n    uint var_4h;\n    \n    if ((!in_PF) && (in_PF)) {\n        out(*unaff_ESI, in_EDX);\n        do {\n            cVar5 = in_EAX >> 8;\n            in_AF = 9 < (in_EAX & 0xf) | in_AF;\n            in_EAX = CONCAT31(CONCAT21(in_EAX >> 0x10, cVar5 - in_AF), -in_AF);\n        } while (in_AF || cVar5 == *in_EDX);\n        piVar1 = unaff_EDI + in_EDX * 2;\n        iVar3 = *piVar1;\n        iVar7 = *piVar1;\n        *piVar1 = (iVar7 + 0x7b) - in_AF;\n        *(in_ECX + -0x18) = in_EAX;\n        pcVar2 = swi(4);\n        if (SBORROW4(iVar3, -0x7b) != SBORROW4(iVar7 + 0x7b, in_AF)) {\n            (*pcVar2)();\n        }\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    *0x423584 = fcn.00402010();\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0x40000000, 1);\n    if (iVar3 == -1) {\n        return 0;\n    }\n    if ((iVar3 == -1) && (iVar3 != -1)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar7 = iVar3;\n    iVar4 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n    if (iVar4 == 0) {\n        return 0;\n    }\n    *(unaff_EDI + -0x5f) = *(unaff_EDI + -0x5f) - &stack0xffffffe0;\n    bVar6 = false;\n    if ((*0xc0850042 & extraout_DH) != 0) {\n        iVar4 = fcn.00402b60(iVar3);\n        bVar6 = (iVar4 != 0) != 0;\n        *0x423584 = 1 - (iVar4 != 0);\n    }\n    *(iVar3 + 0x6a) = *(iVar3 + 0x6a) + bVar6;\n    fcn.00401a70(iVar7, arg_ch);\n    if (*0x423584 == 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    }\n    return 1;\n}\n",
        "token_count": 776
    }
}