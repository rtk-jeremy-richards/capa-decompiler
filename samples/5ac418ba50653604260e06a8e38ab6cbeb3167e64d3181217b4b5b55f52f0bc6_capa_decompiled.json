{
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00403400": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403400(double *arg_8h, double *arg_ch, double *arg_10h)\n\n{\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    float10 fVar2;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x4082a8;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    sub.MFC42.DLL_CString::CString();\n    uStack12 = 0;\n    sub.MFC42.DLL_CWnd::GetWindowTextA(&uStack24);\n    fVar1 = (*_sym.imp.MSVCRT.dll_atof)(uStack28);\n    *arg_8h = fVar1;\n    if (fVar1 < *0x409b90) {\n        *arg_8h = 0;\n        *(arg_8h + 4) = 0;\n    }\n    if (((*arg_8h < *0x409b88) << 8 | (*arg_8h == *0x409b88) << 0xe) == 0) {\n        *arg_8h = 0;\n        *(arg_8h + 4) = 0x40767000;\n    }\n    sub.MFC42.DLL_CWnd::GetWindowTextA(&uStack28);\n    fVar2 = (*_sym.imp.MSVCRT.dll_atof)(unaff_EBX);\n    fVar1 = *0x409b80;\n    *arg_ch = fVar2 * fVar1;\n    if (fVar2 * fVar1 < *0x409b90) {\n        *arg_ch = 0;\n        *(arg_ch + 4) = 0;\n    }\n    if (((*arg_ch < *0x409b78) << 8 | (*arg_ch == *0x409b78) << 0xe) == 0) {\n        *arg_ch = 0;\n        *(arg_ch + 4) = 0x3ff00000;\n    }\n    sub.MFC42.DLL_CWnd::GetWindowTextA(&stack0xffffffe0);\n    fVar2 = (*_sym.imp.MSVCRT.dll_atof)(unaff_ESI);\n    fVar1 = *0x409b80;\n    *arg_10h = fVar2 * fVar1;\n    if (fVar2 * fVar1 < *0x409b90) {\n        *arg_10h = 0;\n        *(arg_10h + 4) = 0;\n    }\n    if (((*arg_10h < *0x409b78) << 8 | (*arg_10h == *0x409b78) << 0xe) == 0) {\n        *arg_10h = 0;\n        *(arg_10h + 4) = 0x3ff00000;\n    }\n    uStack24 = 0xffffffff;\n    fcn.004079b2();\n    *in_FS_OFFSET = unaff_EBX;\n    return;\n}\n",
        "token_count": 716
    },
    "004069b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004069b0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, double *arg_20h, \n            double *arg_24h, double *arg_28h)\n\n{\n    double dVar1;\n    double dVar2;\n    double dVar3;\n    uint uVar4;\n    float10 fVar5;\n    uchar auStack16 [12];\n    \n    if ((((*0x409b90 <= CONCAT44(noname_3, noname_2)) &&\n         (((CONCAT44(noname_3, noname_2) < *0x409b78) << 8 | (CONCAT44(noname_3, noname_2) == *0x409b78) << 0xe) != 0))\n        && (*0x409b90 <= CONCAT44(noname_5, noname_4))) &&\n       (((((CONCAT44(noname_5, noname_4) < *0x409b78) << 8 | (CONCAT44(noname_5, noname_4) == *0x409b78) << 0xe) != 0 &&\n         (dVar1 = CONCAT44(noname_1, noname_0),  *0x409b90 <= dVar1)) &&\n        (((dVar1 < *0x40a490) << 8 | (dVar1 == *0x40a490) << 0xe) != 0)))) {\n        if (CONCAT44(noname_3, noname_2) == *0x409b90) {\n            *arg_28h = CONCAT44(noname_5, noname_4);\n            *arg_24h = CONCAT44(noname_5, noname_4);\n            *arg_20h = CONCAT44(noname_5, noname_4);\n            return 0;\n        }\n        if (dVar1 == *0x40a490) {\n            dVar1 = *0x409b90;\n        }\n        fVar5 = (*_sym.imp.MSVCRT.dll_modf)(dVar1 * *0x40a488, auStack16);\n        dVar3 = (*0x409b78 - CONCAT44(noname_3, noname_2)) * CONCAT44(noname_5, noname_4);\n        dVar1 = (*0x409b78 - fVar5 * CONCAT44(noname_3, noname_2)) * CONCAT44(noname_5, noname_4);\n        dVar2 = (*0x409b78 - (*0x409b78 - fVar5) * CONCAT44(noname_3, noname_2)) * CONCAT44(noname_5, noname_4);\n        uVar4 = sub.MSVCRT.dll__ftol();\n    // switch table (6 cases) at 0x406bac\n        switch(uVar4) {\n        case 0:\n            *arg_20h = CONCAT44(noname_5, noname_4);\n            *arg_24h = dVar2;\n            *arg_28h = dVar3;\n            return 0;\n        case 1:\n            *arg_20h = dVar1;\n            *arg_24h = CONCAT44(noname_5, noname_4);\n            *arg_28h = dVar3;\n            return 0;\n        case 2:\n            *arg_20h = dVar3;\n            *arg_24h = CONCAT44(noname_5, noname_4);\n            *arg_28h = dVar2;\n            return 0;\n        case 3:\n            *arg_20h = dVar3;\n            *arg_24h = dVar1;\n            *arg_28h = CONCAT44(noname_5, noname_4);\n            return 0;\n        case 4:\n            *arg_20h = dVar2;\n            *arg_24h = dVar3;\n            *arg_28h = CONCAT44(noname_5, noname_4);\n            return 0;\n        case 5:\n            *arg_20h = CONCAT44(noname_5, noname_4);\n            *arg_24h = dVar3;\n            *arg_28h = dVar1;\n        }\n        return 0;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 974
    },
    "00406c80": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00406c80(double param_1, double param_2, double param_3, double *param_4, double *param_5, double *param_6)\n\n{\n    bool bVar1;\n    double dVar2;\n    double dVar3;\n    double dVar4;\n    \n    dVar2 = param_3;\n    if (((param_2 < param_3) << 8 | (param_2 == param_3) << 0xe) == 0) {\n        dVar2 = param_2;\n    }\n    dVar4 = param_1;\n    if ((((param_1 < dVar2) << 8 | (param_1 == dVar2) << 0xe) != 0) &&\n       (dVar4 = param_3,  ((param_2 < param_3) << 8 | (param_2 == param_3) << 0xe) == 0)) {\n        dVar4 = param_2;\n    }\n    dVar2 = param_3;\n    if (param_2 < param_3) {\n        dVar2 = param_2;\n    }\n    dVar3 = param_1;\n    if ((dVar2 <= param_1) && (dVar3 = param_3,  param_2 < param_3)) {\n        dVar3 = param_2;\n    }\n    if ((dVar3 < *0x409b90) || (((dVar4 < *0x409b78) << 8 | (dVar4 == *0x409b78) << 0xe) == 0)) {\n        return 0xffffffff;\n    }\n    *param_6 = dVar4;\n    if (((dVar4 < *0x409b90) << 8 | (dVar4 == *0x409b90) << 0xe) == 0) {\n        *param_5 = (dVar4 - dVar3) / dVar4;\n    }\n    else {\n        *param_5 = 0;\n        *(param_5 + 4) = 0;\n    }\n    if (*param_5 == *0x409b90) {\n        *param_4 = 0;\n        *(param_4 + 4) = 0;\n        return 0;\n    }\n    dVar3 = dVar4 - dVar3;\n    if (param_1 == dVar4) {\n        *param_4 = (param_2 - param_3) / dVar3;\n    }\n    else if (param_2 == dVar4) {\n        *param_4 = (param_3 - param_1) / dVar3 + *0x40a4b0;\n    }\n    else {\n        *param_4 = (param_1 - param_2) / dVar3 + *0x40a4a8;\n    }\n    dVar2 = *param_4 * *0x40a4a0;\n    bVar1 = *0x409b90 <= dVar2;\n    *param_4 = dVar2;\n    if (bVar1) {\n        return 0;\n    }\n    *param_4 = dVar2 + *0x40a490;\n    return 0;\n}\n",
        "token_count": 714
    },
    "004030e0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004030e0(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint8_t uVar4;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint32_t uStack76;\n    uint32_t uStack72;\n    uint uStack56;\n    uchar auStack52 [8];\n    uchar auStack44 [8];\n    uchar uStack36;\n    uint uStack32;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x408260;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    uStack72 = 0x403108;\n    uVar1 = fcn.00402ff0();\n    uStack72 = 0x403113;\n    sub.MFC42.DLL_CString::CString();\n    uStack12 = 0;\n    uVar4 = uVar1 >> 8;\n    if (*(param_1 + 0x460) == 0) {\n        *(param_1 + 0x460) = 1;\n        uStack72 = uVar1 & 0xff;\n        uStack76 = 0x40c4e8;\n        sub.MFC42.DLL_CString::Format(&stack0xffffffc8);\n        uStack72 = uStack56;\n        uStack76 = 0x40315b;\n        sub.MFC42.DLL_CWnd::SetWindowTextA();\n        uStack76 = uVar4;\n        uVar2 = unaff_EBX;\n        sub.MFC42.DLL_CString::Format(&stack0xffffffc4, 0x40c4e8);\n        uStack76 = uVar2;\n        sub.MFC42.DLL_CWnd::SetWindowTextA();\n        sub.MFC42.DLL_CString::Format(&stack0xffffffc0, 0x40c4e8, uVar1 >> 0x10 & 0xff);\n        sub.MFC42.DLL_CWnd::SetWindowTextA(unaff_ESI);\n        *(param_1 + 0x460) = 0;\n    }\n    fcn.00406c80((uVar1 & 0xff) * *0x409b70, uVar4 * *0x409b70, (uVar1 >> 0x10 & 0xff) * *0x409b70, &stack0xffffffc4, \n                 &stack0xffffffcc, &stack0xffffffd4);\n    if (*(param_1 + 0x45c) == 0) {\n        *(param_1 + 0x45c) = 1;\n        sub.MFC42.DLL_CString::Format();\n        sub.MFC42.DLL_CWnd::SetWindowTextA(unaff_EDI);\n        sub.MSVCRT.dll__ftol();\n        sub.MFC42.DLL_CString::Format();\n        sub.MFC42.DLL_CWnd::SetWindowTextA(uStack72);\n        uVar2 = sub.MSVCRT.dll__ftol();\n        sub.MFC42.DLL_CString::Format(&stack0xffffffb4, 0x40c4e8, uVar2);\n        sub.MFC42.DLL_CWnd::SetWindowTextA(uStack76);\n        *(param_1 + 0x45c) = 0;\n    }\n    if (*(param_1 + 0x464) == 0) {\n        *(param_1 + 0x464) = 1;\n        puVar3 = fcn.00403350(&stack0xffffffc0, uVar1);\n        uStack32 = CONCAT31(uStack32._1_3_, 1);\n        sub.MFC42.DLL_CWnd::SetWindowTextA(*puVar3);\n        uStack36 = 0;\n        fcn.004079b2();\n        *(param_1 + 0x464) = 0;\n    }\n    uStack24 = 0xffffffff;\n    fcn.004079b2();\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 947
    },
    "00403350": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint fcn.00403350(uint param_1, uint32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint32_t uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x40828f;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    uStack16 = 0;\n    sub.MFC42.DLL_CString::CString();\n    uStack4 = 1;\n    sub.MFC42.DLL_CString::Format\n              (&uStack20, \"#%.2x%.2x%.2x\", param_2 & 0xff, param_2 >> 8 & 0xff, param_2 >> 0x10 & 0xff);\n    sub.MFC42.DLL_CString::MakeUpper();\n    sub.MFC42.DLL_CString::CString_1(&uStack20);\n    uStack20 = 1;\n    uStack8 = uStack8 & 0xffffff00;\n    fcn.004079b2();\n    *in_FS_OFFSET = uStack16;\n    return param_1;\n}\n",
        "token_count": 271
    },
    "00404aa0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404aa0(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint32_t uStack76;\n    double dStack48;\n    double dStack40;\n    double dStack32;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x4083a8;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    uVar3 = arg_8h >> 8 & 0xff;\n    uVar4 = arg_8h >> 0x10 & 0xff;\n    // switch table (6 cases) at 0x404f70\n    switch(in_ECX[0x10]) {\n    case 0:\n        goto code_r0x00404c1a;\n    case 1:\n        uVar4 = (uVar4 * 0xff) / 0xff;\n        uStack76 = ((arg_8h & 0xff) * 0xff) / 0xff;\n        uVar3 = (uVar3 * 0xff) / 0xff;\n        break;\n    case 2:\n        uVar2 = arg_8h & 0xff;\n        arg_8h = uVar4;\n        uVar4 = uVar2;\ncode_r0x00404c1a:\n        uStack76 = (uVar3 * 0xff) / 0xff;\n        uVar4 = (uVar4 * 0xff) / 0xff;\n        uVar3 = ((arg_8h & 0xff) * 0xff) / 0xff;\n        break;\n    case 3:\n        fcn.004066c0();\n        uStack12 = 0;\n        fcn.00406c80((arg_8h & 0xff) * *0x409b70, uVar3 * *0x409b70, uVar4 * *0x409b70, &dStack48, &dStack40, &dStack32)\n        ;\n        (*_sym.imp.MSVCRT.dll_ceil)(dStack40 * *0x409ea8);\n        uVar4 = sub.MSVCRT.dll__ftol();\n        (*_sym.imp.MSVCRT.dll_ceil)(dStack32 * *0x409ea8);\n        uStack76 = sub.MSVCRT.dll__ftol();\n        (*_sym.imp.MSVCRT.dll_ceil)(dStack48 * *0x409ea0);\n        uVar3 = sub.MSVCRT.dll__ftol();\n        uStack12 = 0xffffffff;\n        fcn.00406720();\n        break;\n    case 4:\n        fcn.004066c0();\n        uStack12 = 1;\n        fcn.00406c80((arg_8h & 0xff) * *0x409b70, uVar3 * *0x409b70, uVar4 * *0x409b70, &dStack48, &dStack40, &dStack32)\n        ;\n        (*_sym.imp.MSVCRT.dll_ceil)(dStack48 * *0x409ea0);\n        uVar4 = sub.MSVCRT.dll__ftol();\n        (*_sym.imp.MSVCRT.dll_ceil)(dStack32 * *0x409ea8);\n        uStack76 = sub.MSVCRT.dll__ftol();\n        (*_sym.imp.MSVCRT.dll_ceil)(dStack40 * *0x409ea8);\n        uVar3 = sub.MSVCRT.dll__ftol();\n        uStack12 = 0xffffffff;\n        fcn.00406720();\n        break;\n    case 5:\n        fcn.004066c0();\n        uStack12 = 2;\n        fcn.00406c80((arg_8h & 0xff) * *0x409b70, uVar3 * *0x409b70, uVar4 * *0x409b70, &dStack48, &dStack40, &dStack32)\n        ;\n        (*_sym.imp.MSVCRT.dll_ceil)(dStack48 * *0x409ea0);\n        uVar4 = sub.MSVCRT.dll__ftol();\n        (*_sym.imp.MSVCRT.dll_ceil)(dStack40 * *0x409ea8);\n        uStack76 = sub.MSVCRT.dll__ftol();\n        (*_sym.imp.MSVCRT.dll_ceil)(dStack32 * *0x409ea8);\n        uVar3 = sub.MSVCRT.dll__ftol();\n        uStack12 = 0xffffffff;\n        fcn.00406720();\n        break;\n    default:\n        uVar3 = 0;\n        uVar4 = 0;\n        uStack76 = 0;\n    }\n    if (((in_ECX[0x12] != uVar4) || (in_ECX[0x13] != uStack76)) || (in_ECX[0x11] != uVar3)) {\n        uVar2 = in_ECX[0x11];\n        in_ECX[0x12] = uVar4;\n        in_ECX[0x11] = uVar3;\n        *(in_ECX + 0x18) = *(in_ECX + 0x18) | uVar2 != uVar3;\n        in_ECX[0x13] = uStack76;\n        iVar1 = fcn.00404750();\n        in_ECX[0x19] = iVar1;\n        (**(*in_ECX + 0xc0))();\n        (*_sym.imp.USER32.dll_InvalidateRect)();\n    }\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 1319
    },
    "00406e10": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.00406e10(uint32_t *param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    \n    uVar5 = param_3 >> 8 & 0xff;\n    uVar2 = param_3 >> 0x10 & 0xff;\n    iVar3 = uVar2 * 0x100000;\n    iVar1 = param_2 + -1;\n    iVar4 = (param_3 & 0xff) * 0x100000;\n    iVar6 = uVar5 * 0x100000;\n    if (param_2 != 0) {\n        do {\n            *param_1 = CONCAT11(iVar4 >> 0x14, iVar6 >> 0x14) << 8 | iVar3 >> 0x14 & 0xffU;\n            iVar6 = iVar6 + ((param_4 >> 8 & 0xff) * 0x100000 + uVar5 * -0x100000) / iVar1;\n            iVar4 = iVar4 + ((param_4 & 0xff) * 0x100000 + (param_3 & 0xff) * -0x100000) / iVar1;\n            iVar3 = iVar3 + ((param_4 >> 0x10 & 0xff) * 0x100000 + uVar2 * -0x100000) / iVar1;\n            param_2 = param_2 + -1;\n            param_1 = param_1 + 1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 399
    },
    "004037f0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint32_t fcn.004037f0(char *param_1)\n\n{\n    uchar uVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    if (*param_1 != '#') {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_1);\n    if (iVar3 != 7) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_CharUpperBuffA)(param_1, 7);\n    uVar4 = fcn.004037b0(param_1 + 1);\n    uVar1 = fcn.004037b0(param_1 + 3);\n    uVar2 = fcn.004037b0(param_1 + 5);\n    return CONCAT11(uVar2, uVar1) << 8 | uVar4 & 0xff;\n}\n",
        "token_count": 202
    },
    "00404180": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __thiscall\nfcn.00404180(int32_t param_1, uint32_t *param_2, uint32_t *param_3, uint32_t *param_4, uint32_t *param_5)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint32_t uStack4;\n    \n    iVar1 = *(param_1 + 0x40);\n    iVar2 = *(param_1 + 0x44) * 0xff;\n    uVar3 = (iVar2 / 0xff + (iVar2 >> 0x1f)) - (iVar2 * 0x80808081 >> 0x3f);\n    uStack4 = uVar3;\n    if (iVar1 == 0) {\n        *param_2 = CONCAT11(0xff, uVar3);\n        *param_3 = uStack4 | 0xffff00;\n        *param_4 = uStack4;\n        *param_5 = uStack4 | 0xff0000;\n    }\n    else {\n        if (iVar1 == 1) {\n            *param_2 = CONCAT31(uVar3, 0xff);\n            *param_3 = uStack4 << 8 | 0xff00ff;\n            *param_4 = uStack4 << 8;\n            *param_5 = CONCAT11(0xff, uVar3) << 8;\n            return;\n        }\n        if (iVar1 == 2) {\n            uStack4 = uStack4 << 0x10;\n            *param_2 = CONCAT12(uVar3, 0xff00);\n            *param_3 = uStack4 | 0xffff;\n            *param_4 = uStack4;\n            *param_5 = CONCAT31(uStack4 >> 8, 0xff);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 415
    },
    "00404750": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00404750(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x408378;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    // switch table (6 cases) at 0x4049e4\n    switch(*(param_1 + 0x40)) {\n    case 0:\n        iVar1 = *(param_1 + 0x48) * 0xff;\n        iVar2 = *(param_1 + 0x4c) * 0xff;\n        iVar4 = *(param_1 + 0x44);\n        uVar3 = CONCAT11((iVar1 / 0xff + (iVar1 >> 0x1f)) - (iVar1 * 0x80808081 >> 0x3f), \n                         (iVar2 / 0xff + (iVar2 >> 0x1f)) - (iVar2 * 0x80808081 >> 0x3f)) << 8;\n        break;\n    case 1:\n        iVar1 = *(param_1 + 0x48) * 0xff;\n        iVar2 = *(param_1 + 0x44) * 0xff;\n        iVar4 = *(param_1 + 0x4c);\n        uVar3 = CONCAT11((iVar1 / 0xff + (iVar1 >> 0x1f)) - (iVar1 * 0x80808081 >> 0x3f), \n                         (iVar2 / 0xff + (iVar2 >> 0x1f)) - (iVar2 * 0x80808081 >> 0x3f)) << 8;\n        break;\n    case 2:\n        iVar1 = *(param_1 + 0x44) * 0xff;\n        iVar2 = *(param_1 + 0x4c) * 0xff;\n        iVar4 = *(param_1 + 0x48);\n        uVar3 = CONCAT11((iVar1 / 0xff + (iVar1 >> 0x1f)) - (iVar1 * 0x80808081 >> 0x3f), \n                         (iVar2 / 0xff + (iVar2 >> 0x1f)) - (iVar2 * 0x80808081 >> 0x3f)) << 8;\n        break;\n    case 3:\n        fcn.004066c0();\n        uStack12 = 0;\n        uVar3 = fcn.00406bd0(*(param_1 + 0x44) * *0x409e90, *(param_1 + 0x48) / *(param_1 + 0x50), \n                             *(param_1 + 0x4c) / *(param_1 + 0x54));\n        uStack12 = 0xffffffff;\n        fcn.00406720();\n        *in_FS_OFFSET = uStack20;\n        return uVar3;\n    case 4:\n        fcn.004066c0();\n        uStack12 = 1;\n        uVar3 = fcn.00406bd0(*(param_1 + 0x48) * *0x409e90, *(param_1 + 0x44) * *0x409e98, \n                             *(param_1 + 0x4c) / *(param_1 + 0x54));\n        uStack12 = 0xffffffff;\n        fcn.00406720();\n        *in_FS_OFFSET = uStack20;\n        return uVar3;\n    case 5:\n        fcn.004066c0();\n        uStack12 = 2;\n        uVar3 = fcn.00406bd0(*(param_1 + 0x48) * *0x409e90, *(param_1 + 0x4c) / *(param_1 + 0x54), \n                             *(param_1 + 0x44) * *0x409e98);\n        uStack12 = 0xffffffff;\n        fcn.00406720();\n        *in_FS_OFFSET = uStack20;\n        return uVar3;\n    default:\n        *in_FS_OFFSET = uStack20;\n        return 0;\n    }\n    *in_FS_OFFSET = uStack20;\n    return uVar3 | (iVar4 * 0xff) / 0xff & 0xffU;\n}\n",
        "token_count": 1023
    },
    "00405ed0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405ed0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    uint8_t uVar5;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x408458;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    iVar1 = *(param_1 + 0x84) * 0xff;\n    uVar5 = (iVar1 / 0xff + (iVar1 >> 0x1f)) - (iVar1 * 0x80808081 >> 0x3f);\n    iVar1 = *(param_1 + 0x88) * 0xff;\n    uVar2 = *(param_1 + 0x40) & 0x7f;\n    uVar4 = (iVar1 / 0xff + (iVar1 >> 0x1f)) - (iVar1 * 0x80808081 >> 0x3f);\n    if (uVar2 == 0) {\n        uVar2 = CONCAT11(uVar4, uVar5) << 8;\n        uVar3 = CONCAT31(CONCAT11(uVar4, uVar5), 0xff);\n    }\n    else if (uVar2 == 1) {\n        uVar2 = uVar4 << 0x10 | uVar5;\n        uVar3 = CONCAT12(uVar4, CONCAT11(0xff, uVar5));\n    }\n    else {\n        if (uVar2 != 2) goto code_r0x00405fd9;\n        uVar2 = CONCAT11(uVar4, uVar5);\n        uVar3 = CONCAT21(CONCAT11(0xff, uVar4), uVar5);\n    }\n    fcn.004066c0();\n    uStack4 = 0;\n    fcn.00406e10(*(param_1 + 0x94), *(param_1 + 0x98), uVar2, uVar3);\n    fcn.00406720();\ncode_r0x00405fd9:\n    *in_FS_OFFSET = unaff_ESI;\n    return;\n}\n",
        "token_count": 528
    },
    "00406bd0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint32_t fcn.00406bd0(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6)\n\n{\n    uchar uVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = fcn.004069b0(param_1, param_2, param_3, param_4, param_5, param_6, &param_1, &param_3, &param_5);\n    if (iVar3 == 0) {\n        (*_sym.imp.MSVCRT.dll_ceil)(CONCAT44(param_6, param_5) * *0x40a498 - *0x40a1b0);\n        uVar1 = sub.MSVCRT.dll__ftol();\n        (*_sym.imp.MSVCRT.dll_ceil)(CONCAT44(param_4, param_3) * *0x40a498 - *0x40a1b0);\n        uVar2 = sub.MSVCRT.dll__ftol();\n        (*_sym.imp.MSVCRT.dll_ceil)(CONCAT44(param_2, param_1) * *0x40a498 - *0x40a1b0);\n        uVar4 = sub.MSVCRT.dll__ftol();\n        return uVar4 & 0xff | CONCAT11(uVar1, uVar2) << 8;\n    }\n    return 0;\n}\n",
        "token_count": 330
    },
    "00406ee0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00406ee0(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t *puVar10;\n    uint32_t *puVar11;\n    int32_t iStack00000008;\n    int32_t iStack00000014;\n    \n    iVar1 = sub.MSVCRT.dll__ftol();\n    iVar1 = iVar1 * 0x100000;\n    iVar2 = sub.MSVCRT.dll__ftol();\n    iVar3 = sub.MSVCRT.dll__ftol();\n    iVar4 = iVar1 - iVar2;\n    uVar8 = iVar2 >> 0x14;\n    uVar6 = iVar1 >> 0x14;\n    puVar11 = param_1;\n    if (iVar3 != 0) {\n        iVar9 = iVar2;\n        iStack00000014 = iVar3;\n        do {\n            puVar11 = param_1 + 1;\n            *param_1 = (iVar9 >> 0x14 & 0xffU | (uVar6 & 0xff) << 8) << 8 | uVar8 & 0xff;\n            iVar9 = iVar9 + iVar4 / (iVar3 + -1);\n            iStack00000014 = iStack00000014 + -1;\n            param_1 = puVar11;\n        } while (iStack00000014 != 0);\n    }\n    iVar9 = sub.MSVCRT.dll__ftol();\n    param_1 = iVar9 - iVar3;\n    iVar3 = sub.MSVCRT.dll__ftol();\n    if (param_1 != NULL) {\n        puVar10 = puVar11;\n        iStack00000008 = iVar1;\n        do {\n            puVar11 = puVar10 + 1;\n            *puVar10 = ((iStack00000008 >> 0x14 & 0xffU) << 8 | uVar6 & 0xff) << 8 | uVar8 & 0xff;\n            iStack00000008 = iStack00000008 + iVar3;\n            param_1 = param_1 + -1;\n            puVar10 = puVar11;\n        } while (param_1 != NULL);\n    }\n    iVar3 = sub.MSVCRT.dll__ftol();\n    iVar9 = sub.MSVCRT.dll__ftol();\n    iVar9 = iVar9 - iVar3;\n    iVar3 = iVar9 + -1;\n    if (iVar9 != 0) {\n        iVar7 = iVar2;\n        puVar10 = puVar11;\n        do {\n            puVar11 = puVar10 + 1;\n            *puVar10 = iVar7 >> 0x14 & 0xffU | CONCAT11(uVar8, uVar6) << 8;\n            iVar7 = iVar7 + iVar4 / iVar3;\n            iVar9 = iVar9 + -1;\n            puVar10 = puVar11;\n        } while (iVar9 != 0);\n    }\n    iVar3 = sub.MSVCRT.dll__ftol();\n    iVar9 = sub.MSVCRT.dll__ftol();\n    param_1 = iVar9 - iVar3;\n    iVar3 = sub.MSVCRT.dll__ftol();\n    if (param_1 != NULL) {\n        iVar9 = iVar1;\n        puVar10 = puVar11;\n        do {\n            puVar11 = puVar10 + 1;\n            *puVar10 = (iVar9 >> 0x14 & 0xffU | (uVar8 & 0xff) << 8) << 8 | uVar6 & 0xff;\n            iVar9 = iVar9 + iVar3;\n            param_1 = param_1 + -1;\n            puVar10 = puVar11;\n        } while (param_1 != NULL);\n    }\n    iVar3 = sub.MSVCRT.dll__ftol();\n    iVar9 = sub.MSVCRT.dll__ftol();\n    param_1 = iVar9 - iVar3;\n    iVar3 = param_1 + -1;\n    if (param_1 != NULL) {\n        puVar10 = puVar11;\n        iStack00000014 = iVar2;\n        do {\n            puVar11 = puVar10 + 1;\n            *puVar10 = ((iStack00000014 >> 0x14 & 0xffU) << 8 | uVar8 & 0xff) << 8 | uVar6 & 0xff;\n            iStack00000014 = iStack00000014 + iVar4 / iVar3;\n            param_1 = param_1 + -1;\n            puVar10 = puVar11;\n        } while (param_1 != NULL);\n    }\n    iVar2 = sub.MSVCRT.dll__ftol();\n    iVar3 = sub.MSVCRT.dll__ftol();\n    iVar2 = iVar2 - iVar3;\n    iVar3 = sub.MSVCRT.dll__ftol();\n    if (iVar2 != 0) {\n        do {\n            uVar5 = iVar1 >> 0x14;\n            iVar1 = iVar1 + iVar3;\n            iVar2 = iVar2 + -1;\n            *puVar11 = uVar5 & 0xff | CONCAT11(uVar6, uVar8) << 8;\n            puVar11 = puVar11 + 1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 1241
    },
    "00407230": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00407230(uint32_t *param_1, int32_t param_2, uint param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iStack00000014;\n    uchar auStack8 [8];\n    \n    iVar1 = sub.MSVCRT.dll__ftol();\n    iVar1 = iVar1 << 0x14;\n    (*_sym.imp.MSVCRT.dll_modf)(CONCAT44(param_4, param_3) * *0x40a488, auStack8);\n    iVar6 = -(iVar1 / param_2);\n    iVar2 = sub.MSVCRT.dll__ftol();\n    iVar2 = iVar2 / param_2;\n    iVar3 = sub.MSVCRT.dll__ftol();\n    iVar3 = iVar3 / param_2;\n    uVar4 = sub.MSVCRT.dll__ftol();\n    if (uVar4 < 6) {\n        uVar7 = iVar1 >> 0x14;\n        iStack00000014 = iVar1;\n    // switch table (6 cases) at 0x407508\n        switch(uVar4) {\n        case 0:\n            if (param_2 != 0) {\n                do {\n                    *param_1 = (iStack00000014 >> 0x14 & 0xffU | (uVar7 & 0xff) << 8) << 8 | iVar1 >> 0x14 & 0xffU;\n                    iStack00000014 = iStack00000014 + iVar3;\n                    param_2 = param_2 + -1;\n                    param_1 = param_1 + 1;\n                    iVar1 = iVar1 + iVar6;\n                } while (param_2 != 0);\n                return;\n            }\n            break;\n        case 1:\n            if (param_2 != 0) {\n                iVar3 = iVar1;\n                do {\n                    uVar4 = iVar3 >> 0x14;\n                    iVar3 = iVar3 + iVar6;\n                    *param_1 = ((iVar1 >> 0x14 & 0xffU) << 8 | uVar7 & 0xff) << 8 | uVar4 & 0xff;\n                    iVar1 = iVar1 + iVar2;\n                    param_2 = param_2 + -1;\n                    param_1 = param_1 + 1;\n                } while (param_2 != 0);\n                return;\n            }\n            break;\n        case 2:\n            if (param_2 != 0) {\n                do {\n                    uVar4 = iVar1 >> 0x14;\n                    iVar1 = iVar1 + iVar6;\n                    *param_1 = ((uVar4 & 0xff) << 8 | uVar7 & 0xff) << 8 | iStack00000014 >> 0x14 & 0xffU;\n                    iStack00000014 = iStack00000014 + iVar3;\n                    param_2 = param_2 + -1;\n                    param_1 = param_1 + 1;\n                } while (param_2 != 0);\n                return;\n            }\n            break;\n        case 3:\n            if (param_2 != 0) {\n                iVar3 = iVar1;\n                do {\n                    iVar5 = iVar3 >> 0x14;\n                    iVar3 = iVar3 + iVar6;\n                    *param_1 = CONCAT11(iVar5, iVar1 >> 0x14) << 8 | uVar7 & 0xff;\n                    param_1 = param_1 + 1;\n                    iVar1 = iVar1 + iVar2;\n                    param_2 = param_2 + -1;\n                } while (param_2 != 0);\n                return;\n            }\n            break;\n        case 4:\n            if (param_2 != 0) {\n                do {\n                    iVar2 = iVar1 >> 0x14;\n                    iVar1 = iVar1 + iVar6;\n                    *param_1 = CONCAT11(iStack00000014 >> 0x14, iVar2) << 8 | uVar7 & 0xff;\n                    iStack00000014 = iStack00000014 + iVar3;\n                    param_2 = param_2 + -1;\n                    param_1 = param_1 + 1;\n                } while (param_2 != 0);\n                return;\n            }\n            break;\n        case 5:\n            if (param_2 != 0) {\n                iVar3 = iVar1;\n                do {\n                    uVar4 = iVar3 >> 0x14;\n                    iVar3 = iVar3 + iVar6;\n                    *param_1 = (uVar4 & 0xff | (uVar7 & 0xff) << 8) << 8 | iVar1 >> 0x14 & 0xffU;\n                    iVar1 = iVar1 + iVar2;\n                    param_2 = param_2 + -1;\n                    param_1 = param_1 + 1;\n                } while (param_2 != 0);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1150
    },
    "00407520": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00407520(uint32_t *param_1, int32_t param_2, uint param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uchar auStack8 [8];\n    \n    (*_sym.imp.MSVCRT.dll_modf)(CONCAT44(param_4, param_3) * *0x40a488, auStack8);\n    iVar8 = 0;\n    iVar1 = sub.MSVCRT.dll__ftol();\n    iVar6 = 0;\n    iVar1 = iVar1 / param_2;\n    iVar2 = sub.MSVCRT.dll__ftol();\n    iVar2 = iVar2 / param_2;\n    iVar7 = 0;\n    iVar3 = sub.MSVCRT.dll__ftol();\n    iVar3 = iVar3 / param_2;\n    iVar9 = 0;\n    iVar4 = 0xff00000 / param_2;\n    uVar5 = sub.MSVCRT.dll__ftol();\n    // switch table (6 cases) at 0x4077d8\n    switch(uVar5) {\n    case 0:\n        if (param_2 != 0) {\n            do {\n                *param_1 = CONCAT11(iVar9 >> 0x14, iVar7 >> 0x14) << 8 | iVar8 >> 0x14 & 0xffU;\n                iVar8 = iVar8 + iVar1;\n                iVar7 = iVar7 + iVar3;\n                iVar9 = iVar9 + iVar4;\n                param_2 = param_2 + -1;\n                param_1 = param_1 + 1;\n            } while (param_2 != 0);\n            return;\n        }\n        break;\n    case 1:\n        if (param_2 != 0) {\n            do {\n                *param_1 = CONCAT11(iVar6 >> 0x14, iVar9 >> 0x14) << 8 | iVar8 >> 0x14 & 0xffU;\n                iVar8 = iVar8 + iVar1;\n                iVar6 = iVar6 + iVar2;\n                iVar9 = iVar9 + iVar4;\n                param_2 = param_2 + -1;\n                param_1 = param_1 + 1;\n            } while (param_2 != 0);\n            return;\n        }\n        break;\n    case 2:\n        if (param_2 != 0) {\n            do {\n                *param_1 = CONCAT11(iVar8 >> 0x14, iVar9 >> 0x14) << 8 | iVar7 >> 0x14 & 0xffU;\n                iVar8 = iVar8 + iVar1;\n                iVar7 = iVar7 + iVar3;\n                iVar9 = iVar9 + iVar4;\n                param_2 = param_2 + -1;\n                param_1 = param_1 + 1;\n            } while (param_2 != 0);\n            return;\n        }\n        break;\n    case 3:\n        if (param_2 != 0) {\n            do {\n                *param_1 = CONCAT11(iVar8 >> 0x14, iVar6 >> 0x14) << 8 | iVar9 >> 0x14 & 0xffU;\n                iVar8 = iVar8 + iVar1;\n                iVar6 = iVar6 + iVar2;\n                iVar9 = iVar9 + iVar4;\n                param_2 = param_2 + -1;\n                param_1 = param_1 + 1;\n            } while (param_2 != 0);\n            return;\n        }\n        break;\n    case 4:\n        if (param_2 != 0) {\n            do {\n                *param_1 = CONCAT11(iVar7 >> 0x14, iVar8 >> 0x14) << 8 | iVar9 >> 0x14 & 0xffU;\n                iVar8 = iVar8 + iVar1;\n                iVar7 = iVar7 + iVar3;\n                iVar9 = iVar9 + iVar4;\n                param_2 = param_2 + -1;\n                param_1 = param_1 + 1;\n            } while (param_2 != 0);\n            return;\n        }\n        break;\n    case 5:\n        if (param_2 != 0) {\n            do {\n                *param_1 = CONCAT11(iVar9 >> 0x14, iVar8 >> 0x14) << 8 | iVar6 >> 0x14 & 0xffU;\n                iVar8 = iVar8 + iVar1;\n                iVar6 = iVar6 + iVar2;\n                iVar9 = iVar9 + iVar4;\n                param_2 = param_2 + -1;\n                param_1 = param_1 + 1;\n            } while (param_2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 1101
    },
    "004037b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t fcn.004037b0(char *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    if (param_1[1] < 'A') {\n        iVar2 = -0x30;\n    }\n    else {\n        iVar2 = -0x37;\n    }\n    iVar2 = param_1[1] + iVar2;\n    cVar1 = *param_1;\n    if ('@' < cVar1) {\n        return (cVar1 + -0x37) * 0x10 + iVar2;\n    }\n    return (cVar1 + -0x30) * 0x10 + iVar2;\n}\n",
        "token_count": 151
    },
    "00406860": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.00406860(uint param_1, uint param_2, int32_t param_3, uint param_4, int32_t param_5, uint param_6)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    int32_t iStack12;\n    \n    param_5 = param_5 + -1;\n    // switch table (8 cases) at 0x406990\n    switch(param_4) {\n    case 1:\n        iStack12 = param_3 + param_5;\n        break;\n    case 2:\n        iStack12 = param_3 + param_5;\n        break;\n    case 3:\n        iStack12 = param_3 - param_5;\n        break;\n    case 4:\n        iStack12 = param_3 - param_5;\n        break;\n    case 5:\n        iStack12 = param_3;\n        break;\n    case 6:\n        goto code_r0x0040690e;\n    case 7:\n        iStack12 = param_3;\n        break;\n    case 8:\ncode_r0x0040690e:\n        iStack12 = param_3;\n        break;\n    default:\n        goto code_r0x00406988;\n    }\n    uStack44 = param_6;\n    uStack48 = 0;\n    uStack52 = 0;\n    uStack56 = 0x406932;\n    uVar2 = (*_sym.imp.GDI32.dll_CreatePen)();\n    uStack56 = param_4;\n    uVar3 = (*_sym.imp.GDI32.dll_CreateSolidBrush)();\n    pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n    (*_sym.imp.GDI32.dll_SelectObject)(iStack12, uVar2);\n    uVar4 = (*pcVar1)(iStack12, uVar3);\n    (*_sym.imp.GDI32.dll_Polygon)(iStack12, &stack0xffffffc8, 3);\n    (*pcVar1)(iStack12, uVar4);\n    (*pcVar1)(iStack12, uStack44);\n    pcVar1 = _sym.imp.GDI32.dll_DeleteObject;\n    (*_sym.imp.GDI32.dll_DeleteObject)(uVar2);\n    (*pcVar1)(uVar3);\ncode_r0x00406988:\n    return;\n}\n",
        "token_count": 548
    },
    "00403a90": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403a90(int32_t param_1, uint32_t param_2)\n\n{\n    if ((*(param_1 + 0x40) != param_2) && (param_2 = param_2 & 0x7f,  param_2 < 7)) {\n        *(param_1 + 0x40) = param_2;\n        *(param_1 + 0x48) = 0;\n        *(param_1 + 0x4c) = 0;\n        *(param_1 + 0x44) = 0;\n        *(param_1 + 0x60) = 1;\n        *(param_1 + 0x50) = *(param_2 * 0xc + 0x409b9c);\n        *(param_1 + 0x54) = *(param_2 * 0xc + 0x409ba0);\n        (*_sym.imp.USER32.dll_InvalidateRect)(*(param_1 + 0x20), 0, 0);\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "00405b40": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00405b40(int32_t param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    \n    if (6 < (param_2 & 0x7f)) {\n        return;\n    }\n    *(param_1 + 0x40) = param_2;\n    // switch table (6 cases) at 0x405be8\n    switch(param_2 & 0x7f) {\n    case 0:\n    case 1:\n    case 2:\n        *(param_1 + 0x48) = 0;\n        *(param_1 + 0x4c) = 0xff;\n        *(param_1 + 0x58) = 1;\n        *(param_1 + 0x5c) = 10;\n        goto code_r0x00405ba8;\n    case 3:\n        *(param_1 + 0x48) = 0;\n        *(param_1 + 0x4c) = 0xe0f;\n        break;\n    case 4:\n    case 5:\n        *(param_1 + 0x48) = 0;\n        *(param_1 + 0x4c) = 1000;\n        break;\n    default:\n        goto code_r0x00405ba8;\n    }\n    *(param_1 + 0x58) = 10;\n    *(param_1 + 0x5c) = 100;\ncode_r0x00405ba8:\n    *(param_1 + 0x54) = 0xffffd8f1;\n    if ((param_2 & 0x80) == 0) {\n        uVar1 = *(param_1 + 0x48);\n    }\n    else {\n        uVar1 = *(param_1 + 0x4c);\n    }\n    *(param_1 + 0x50) = uVar1;\n    *(param_1 + 0x90) = 0;\n    *(param_1 + 0x8c) = 0;\n    *(param_1 + 0x88) = 0;\n    *(param_1 + 0x84) = 0;\n    (*_sym.imp.USER32.dll_InvalidateRect)(*(param_1 + 0x20), 0, 0);\n    return;\n}\n",
        "token_count": 517
    },
    "00405c70": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00405c70(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    if ((((-1 < param_2) && (param_2 < 2)) && (*(param_1 + 0x84 + param_2 * 4) != param_3)) &&\n       ((-1 < param_3 && (param_3 <= *((param_2 + (*(param_1 + 0x40) & 0x7f) * 3) * 4 + 0x409eb4))))) {\n        *(param_1 + 0x84 + param_2 * 4) = param_3;\n        (*_sym.imp.USER32.dll_InvalidateRect)(*(param_1 + 0x20), 0, 0);\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00405cd0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405cd0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar3;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x408438;\n    iStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack12;\n    iVar3 = *(param_1 + 0xdc);\n    iVar1 = *(param_1 + 0xd4);\n    iVar2 = (*(param_1 + 0x7c) - *(param_1 + 0x74)) + 1;\n    // switch table (6 cases) at 0x405eac\n    switch(*(param_1 + 0x40) & 0x7f) {\n    case 0:\n    case 1:\n    case 2:\n        fcn.00405ed0();\n        break;\n    case 3:\n        fcn.00405ff0();\n        break;\n    case 4:\n        fcn.00406080();\n        break;\n    case 5:\n        fcn.00406110();\n        break;\n    default:\n        goto code_r0x00405e96;\n    }\n    if ((((*(param_1 + 0x44) & 0x4000) != 0) && ((*(param_1 + 0x40) & 0x80) == 0)) ||\n       (((*(param_1 + 0x44) & 0x8000) != 0 && ((*(param_1 + 0x40) & 0x80) != 0)))) {\n        fcn.004066c0();\n        uStack4 = 0;\n        fcn.00407870(*(param_1 + 0x94), *(param_1 + 0x98));\n        iStack12 = -1;\n        fcn.00406720();\n    }\n    iVar3 = *(param_1 + 0xcc) + ((((iVar3 - iVar1) - *(param_1 + 0x7c)) + -1) * iStack24 + *(param_1 + 0x70)) * 4;\n    if ((*(param_1 + 0x44) & 0x8000) == 0) {\n        for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n            fcn.004066c0();\n            iStack12 = 2;\n            fcn.004077f0();\n            fcn.00406720();\n        }\n    }\n    else if (iVar2 != 0) {\n        do {\n            fcn.004066c0();\n            iStack12 = 1;\n            fcn.00407830();\n            fcn.00406720();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n        *in_FS_OFFSET = iVar3;\n        return;\n    }\ncode_r0x00405e96:\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 708
    },
    "00404140": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00404140(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint unaff_EBX;\n    uint32_t *puVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    int32_t iVar17;\n    uint32_t unaff_EDI;\n    uint32_t uVar18;\n    int32_t iVar19;\n    int32_t *in_FS_OFFSET;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    int32_t iStack76;\n    uchar auStack72 [4];\n    uint32_t in_stack_ffffffc8;\n    uint uStack44;\n    ulong uStack40;\n    double dStack32;\n    int32_t iStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    // switch table (6 cases) at 0x404164\n    switch(*(param_1 + 0x40)) {\n    case 0:\n    case 1:\n    case 2:\n        uVar18 = (*(param_1 + 0xb4) - *(param_1 + 0xac)) + 1;\n        iVar19 = *(param_1 + 0xb8) - *(param_1 + 0xb0);\n        puVar12 = *(param_1 + 0x98) +\n                  ((((*(param_1 + 0xd8) - *(param_1 + 0xd0)) - *(param_1 + 0xb8)) + -1) *\n                   (*(param_1 + 0xd4) - *(param_1 + 0xcc)) + *(param_1 + 0xac)) * 4;\n        fcn.00404180(&iStack76, auStack72, &uStack44, &uStack40);\n        uVar8 = uVar18 >> 8 & 0xff;\n        uVar2 = uVar18 >> 0x10 & 0xff;\n        iVar15 = uVar2 * 0x100000;\n        iVar7 = (uVar18 & 0xff) * 0x100000;\n        iVar11 = uVar8 * 0x100000;\n        iVar14 = (in_stack_ffffffc8 & 0xff) * 0x100000;\n        uVar9 = in_stack_ffffffc8 >> 8 & 0xff;\n        uVar3 = in_stack_ffffffc8 >> 0x10 & 0xff;\n        iVar4 = uVar3 * 0x100000;\n        iVar13 = uVar9 * 0x100000;\n        if (iVar19 != -1) {\n            iVar16 = iVar19 + 1;\n            iVar1 = iStack76 + -1;\n            do {\n                iVar17 = iVar7;\n                iVar5 = iVar11;\n                iVar10 = iVar15;\n                for (iVar6 = iStack76; iVar6 != 0; iVar6 = iVar6 + -1) {\n                    *puVar12 = CONCAT11(iVar17 >> 0x14, iVar5 >> 0x14) << 8 | iVar10 >> 0x14 & 0xffU;\n                    iVar17 = iVar17 + (iVar14 - iVar7) / iVar1;\n                    iVar5 = iVar5 + (iVar13 - iVar11) / iVar1;\n                    iVar10 = iVar10 + (iVar4 - iVar15) / iVar1;\n                    puVar12 = puVar12 + 1;\n                }\n                iVar7 = iVar7 + ((uStack92 & 0xff) * 0x100000 + (uVar18 & 0xff) * -0x100000) / iVar19;\n                iVar11 = iVar11 + ((uStack92 >> 8 & 0xff) * 0x100000 + uVar8 * -0x100000) / iVar19;\n                iVar14 = iVar14 + ((uStack88 & 0xff) * 0x100000 + (in_stack_ffffffc8 & 0xff) * -0x100000) / iVar19;\n                iVar13 = iVar13 + ((uStack88 >> 8 & 0xff) * 0x100000 + uVar9 * -0x100000) / iVar19;\n                iVar15 = iVar15 + ((uStack92 >> 0x10 & 0xff) * 0x100000 + uVar2 * -0x100000) / iVar19;\n                puVar12 = puVar12 + iStack20;\n                iVar4 = iVar4 + ((uStack88 >> 0x10 & 0xff) * 0x100000 + uVar3 * -0x100000) / iVar19;\n                iVar16 = iVar16 + -1;\n            } while (iVar16 != 0);\n        }\n        return;\n    case 3:\n        uStack12 = 0xffffffff;\n        uStack16 = 0x408328;\n        iStack20 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &iStack20;\n        _auStack72 = unaff_EDI << 0x20;\n        iVar4 = *(param_1 + 0xb4);\n        iVar13 = *(param_1 + 0xd4) - *(param_1 + 0xcc);\n        iVar11 = *(param_1 + 0xb8) - *(param_1 + 0xb0);\n        uStack40 = *(param_1 + 0x44) * *0x409e90;\n        uStack44 = 0;\n        iVar15 = *(param_1 + 0x98) +\n                 ((((*(param_1 + 0xd8) - *(param_1 + 0xd0)) - *(param_1 + 0xb8)) + -1) * iVar13 + *(param_1 + 0xac)) * 4\n        ;\n        iVar7 = *(param_1 + 0xb4);\n        dStack32 = *0x409b78 / iVar11;\n        if (iVar11 != -1) {\n            iVar14 = iVar11 + 1;\n            do {\n                _auStack72 = CONCAT44(_auStack72 >> 0x20, 0x4045d1);\n                fcn.004066c0();\n                iStack76 = 0;\n                _auStack72 = CONCAT44(iVar15, uStack44);\n                uStack12 = 0;\n                fcn.00407230();\n                _auStack72 = CONCAT44(iVar11, unaff_EBX) + _auStack72;\n                iVar15 = iVar15 + iVar7 * -4 + iVar13 * 4 + iVar4 * 4;\n                uStack40 = CONCAT44(0xffffffff, uStack40);\n                fcn.00406720();\n                iVar14 = iVar14 + -1;\n            } while (iVar14 != 0);\n        }\n        break;\n    case 4:\n        uStack12 = 0xffffffff;\n        uStack16 = 0x408348;\n        iStack20 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &iStack20;\n        _auStack72 = unaff_EDI << 0x20;\n        iVar4 = *(param_1 + 0xb4);\n        iVar13 = *(param_1 + 0xd4) - *(param_1 + 0xcc);\n        iVar11 = *(param_1 + 0xb8) - *(param_1 + 0xb0);\n        uStack40 = *(param_1 + 0x44) * *0x409e98;\n        uStack44 = 0;\n        iVar15 = *(param_1 + 0x98) +\n                 ((((*(param_1 + 0xd8) - *(param_1 + 0xd0)) - *(param_1 + 0xb8)) + -1) * iVar13 + *(param_1 + 0xac)) * 4\n        ;\n        iVar7 = *(param_1 + 0xb4);\n        dStack32 = *0x409b78 / iVar11;\n        if (iVar11 != -1) {\n            iVar14 = iVar11 + 1;\n            do {\n                _auStack72 = CONCAT44(_auStack72 >> 0x20, 0x4046f1);\n                fcn.004066c0();\n                iStack76 = 0;\n                _auStack72 = CONCAT44(iVar15, uStack44);\n                uStack12 = 0;\n                fcn.00406ee0();\n                _auStack72 = CONCAT44(iVar11, unaff_EBX) + _auStack72;\n                iVar15 = iVar15 + iVar7 * -4 + iVar13 * 4 + iVar4 * 4;\n                uStack40 = CONCAT44(0xffffffff, uStack40);\n                fcn.00406720();\n                iVar14 = iVar14 + -1;\n            } while (iVar14 != 0);\n        }\n        *in_FS_OFFSET = iStack20;\n        return;\n    case 5:\n        uStack12 = 0xffffffff;\n        uStack16 = 0x4083c8;\n        iStack20 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &iStack20;\n        _auStack72 = unaff_EDI << 0x20;\n        iVar4 = *(param_1 + 0xb4);\n        iVar13 = *(param_1 + 0xd4) - *(param_1 + 0xcc);\n        iVar11 = *(param_1 + 0xb8) - *(param_1 + 0xb0);\n        uStack40 = *(param_1 + 0x44) * *0x409e98;\n        uStack44 = 0;\n        iVar15 = *(param_1 + 0x98) +\n                 ((((*(param_1 + 0xd8) - *(param_1 + 0xd0)) - *(param_1 + 0xb8)) + -1) * iVar13 + *(param_1 + 0xac)) * 4\n        ;\n        iVar7 = *(param_1 + 0xb4);\n        dStack32 = *0x409b78 / iVar11;\n        if (iVar11 != -1) {\n            iVar14 = iVar11 + 1;\n            do {\n                _auStack72 = CONCAT44(_auStack72 >> 0x20, 0x4050a1);\n                fcn.004066c0();\n                iStack76 = uStack40;\n                _auStack72 = CONCAT44(iVar15, uStack40._4_4_);\n                uStack12 = 0;\n                fcn.00406ee0();\n                _auStack72 = CONCAT44(iVar11, unaff_EBX) + _auStack72;\n                iVar15 = iVar15 + iVar7 * -4 + iVar13 * 4 + iVar4 * 4;\n                uStack40 = CONCAT44(0xffffffff, uStack40);\n                fcn.00406720();\n                iVar14 = iVar14 + -1;\n            } while (iVar14 != 0);\n        }\n        *in_FS_OFFSET = iStack20;\n        return;\n    default:\n        return;\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 2547
    },
    "00407870": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00407870(uint32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    \n    puVar3 = param_1 + param_2 + -1;\n    if (param_1 < puVar3) {\n        do {\n            uVar5 = *puVar3;\n            uVar1 = *param_1;\n            puVar4 = puVar3 + -1;\n            *param_1 = uVar1 ^ uVar5;\n            puVar2 = param_1 + 1;\n            uVar5 = *puVar3 ^ uVar1 ^ uVar5;\n            *puVar3 = uVar5;\n            *param_1 = *param_1 ^ uVar5;\n            param_1 = puVar2;\n            puVar3 = puVar4;\n        } while (puVar2 < puVar4);\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __fastcall fcn.00401000(uint *param_1)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    // [00] -r-x section size 32768 named .text\n    uStack4 = 0xffffffff;\n    uStack8 = 0x407e79;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.004079d0();\n    *param_1 = 0x409570;\n    uStack4 = 0;\n    sub.MFC42.DLL_CString::CString();\n    param_1[0x19] = 0;\n    param_1[0x18] = 0x40955c;\n    uStack4._0_1_ = 2;\n    sub.MFC42.DLL_CToolTipCtrl::CToolTipCtrl();\n    uStack4 = CONCAT31(uStack4._1_3_, 3);\n    *param_1 = 0x409450;\n    param_1[0x1a] = 0;\n    param_1[0x10] = 0xee0000;\n    param_1[0x11] = 0x8b1a55;\n    uVar1 = (*_sym.imp.USER32.dll_GetSysColor)(0xd);\n    param_1[0x12] = uVar1;\n    param_1[0x13] = 0;\n    param_1[0x14] = 0;\n    param_1[0x15] = 1;\n    param_1[0x16] = 1;\n    sub.MFC42.DLL_CString::Empty();\n    *in_FS_OFFSET = param_1;\n    return param_1;\n}\n",
        "token_count": 412
    },
    "004010d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004010d0(uint *param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x407ec1;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x409450;\n    uStack4 = 3;\n    sub.MFC42.DLL_CGdiObject::DeleteObject();\n    if (param_1[0x1a] != 0) {\n        (*_sym.imp.USER32.dll_DestroyCursor)(param_1[0x1a]);\n    }\n    uStack4._0_1_ = 2;\n    fcn.004079ac();\n    param_1[0x18] = 0x409644;\n    uStack4._0_1_ = 4;\n    sub.MFC42.DLL_CGdiObject::DeleteObject();\n    param_1[0x18] = 0x409630;\n    uStack4 = uStack4._1_3_ << 8;\n    fcn.004079b2();\n    uStack4 = 0xffffffff;\n    sub.MFC42.DLL_CStatic::CStatic();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 304
    },
    "00401d90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401d90(uint *param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x407f78;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x409644;\n    uStack4 = 0;\n    sub.MFC42.DLL_CGdiObject::DeleteObject();\n    *param_1 = 0x409630;\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 138
    },
    "00401e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401e00(uint *param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x407f98;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x409644;\n    uStack4 = 0;\n    sub.MFC42.DLL_CGdiObject::DeleteObject();\n    *param_1 = 0x409630;\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 138
    },
    "00401fb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nint32_t fcn.00401fb0(int32_t param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint8_t *puVar8;\n    bool bVar9;\n    \n    uVar7 = 0;\n    iVar3 = *(*(param_1 + 0x3c) + 0x78 + param_1) + param_1;\n    uVar2 = *(iVar3 + 0x18);\n    piVar6 = *(iVar3 + 0x20) + param_1;\n    if (uVar2 != 0) {\n        do {\n            puVar4 = *piVar6 + param_1;\n            puVar8 = param_2;\n            do {\n                uVar1 = *puVar8;\n                bVar9 = uVar1 < *puVar4;\n                if (uVar1 != *puVar4) {\ncode_r0x00402016:\n                    iVar5 = (1 - bVar9) - (bVar9 != 0);\n                    goto code_r0x0040201b;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar8[1];\n                bVar9 = uVar1 < puVar4[1];\n                if (uVar1 != puVar4[1]) goto code_r0x00402016;\n                puVar8 = puVar8 + 2;\n                puVar4 = puVar4 + 2;\n            } while (uVar1 != 0);\n            iVar5 = 0;\ncode_r0x0040201b:\n            if (iVar5 == 0) break;\n            uVar7 = uVar7 + 1;\n            piVar6 = piVar6 + 1;\n        } while (uVar7 < uVar2);\n    }\n    if (uVar7 != uVar2) {\n        return *(*(iVar3 + 0x1c) + param_1 + *(*(iVar3 + 0x24) + param_1 + uVar7 * 2) * 4) + param_1;\n    }\n    return 0;\n}\n",
        "token_count": 518
    },
    "004025b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with lookup table/f2e93a0d9a164553a93d71878df6b782"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004025b0(int32_t param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x4080e9;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *(param_1 + 0x44c) = 0x409644;\n    uStack4._0_1_ = 0xb;\n    uStack4._1_3_ = 0;\n    sub.MFC42.DLL_CGdiObject::DeleteObject();\n    *(param_1 + 0x44c) = 0x409630;\n    uStack4._0_1_ = 9;\n    fcn.00405190();\n    uStack4._0_1_ = 8;\n    fcn.00406210();\n    uStack4._0_1_ = 7;\n    fcn.00403920();\n    uStack4._0_1_ = 6;\n    sub.MFC42.DLL_CEdit::CEdit();\n    uStack4._0_1_ = 5;\n    sub.MFC42.DLL_CEdit::CEdit();\n    uStack4._0_1_ = 4;\n    sub.MFC42.DLL_CEdit::CEdit();\n    uStack4._0_1_ = 3;\n    sub.MFC42.DLL_CEdit::CEdit();\n    uStack4._0_1_ = 2;\n    sub.MFC42.DLL_CEdit::CEdit();\n    uStack4._0_1_ = 1;\n    sub.MFC42.DLL_CEdit::CEdit();\n    uStack4 = uStack4._1_3_ << 8;\n    sub.MFC42.DLL_CEdit::CEdit();\n    uStack4 = 0xffffffff;\n    fcn.00407b02();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 450
    },
    "004026c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004026c0(uint *param_1)\n\n{\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x408108;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    sub.MFC42.DLL_CDialog::CDialog(100, 0);\n    uStack12 = 0;\n    fcn.00401000();\n    *param_1 = 0x4098f8;\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 159
    },
    "00402730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402730(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x408128;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 0;\n    fcn.004010d0();\n    uStack4 = 0xffffffff;\n    fcn.00407b02();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 118
    },
    "004027b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __thiscall fcn.004027b0(uint *param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x4081df;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    uVar2 = 0x66;\n    sub.MFC42.DLL_CDialog::CDialog(0x66, param_2);\n    uStack12 = 0;\n    fcn.004079d0();\n    param_1[0x18] = 0x409aa8;\n    uStack12._0_1_ = 1;\n    fcn.004079d0();\n    param_1[0x28] = 0x409aa8;\n    uStack12._0_1_ = 2;\n    fcn.004079d0();\n    param_1[0x38] = 0x409aa8;\n    uStack12._0_1_ = 3;\n    fcn.004079d0();\n    param_1[0x48] = 0x409aa8;\n    uStack12._0_1_ = 4;\n    fcn.004079d0();\n    param_1[0x58] = 0x409aa8;\n    uStack12._0_1_ = 5;\n    fcn.004079d0();\n    param_1[0x68] = 0x409aa8;\n    uStack12._0_1_ = 6;\n    fcn.004079d0();\n    param_1[0x78] = 0x409aa8;\n    uStack12._0_1_ = 7;\n    fcn.00403890();\n    uStack12._0_1_ = 8;\n    fcn.004061c0();\n    uStack12._0_1_ = 9;\n    fcn.00405100();\n    param_1[0x114] = 0;\n    param_1[0x113] = 0x40955c;\n    uStack12 = CONCAT31(uStack12._1_3_, 0xb);\n    *param_1 = 0x4099d0;\n    sub.MFC42.DLL_AfxGetModuleState();\n    uVar1 = sub.MFC42.DLL_AfxFindResourceHandle(0x80, 0xe, 0x80);\n    uVar1 = (*_sym.imp.USER32.dll_LoadIconA)(uVar1);\n    param_1[0x115] = uVar1;\n    param_1[0x116] = 0xff;\n    param_1[0x117] = 0;\n    param_1[0x118] = 0;\n    param_1[0x119] = 0;\n    *in_FS_OFFSET = uVar2;\n    return param_1;\n}\n",
        "token_count": 688
    },
    "00403550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403550(int32_t param_1)\n\n{\n    uint arg_8h;\n    uint unaff_ESI;\n    uint *arg_10h;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint auStack24 [2];\n    uchar auStack16 [12];\n    \n    if (*(param_1 + 0x45c) == 0) {\n        arg_10h = &uStack32;\n        fcn.00403400(auStack16, auStack24, arg_10h);\n        arg_8h = fcn.00406bd0(uStack28, auStack24[0], uStack36, uStack32, arg_10h, unaff_ESI);\n        *(param_1 + 0x45c) = 1;\n        *(param_1 + 0x45c) = 1;\n        fcn.00404aa0(arg_8h);\n        *(param_1 + 0x45c) = 0;\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "00403b30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403b30(int32_t *param_1, int32_t param_2, int32_t param_3, uint param_4)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    \n    if (*(param_1 + 0x61) == '\\0') {\n        iVar4 = (*_sym.imp.USER32.dll_PtInRect)(param_1 + 0x2f, param_3, param_4);\n        if (iVar4 != 0) {\n            (*_sym.imp.USER32.dll_SetCursor)();\n            return;\n        }\n        uVar5 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f00);\n        (*_sym.imp.USER32.dll_SetCursor)(uVar5);\n    }\n    else {\n        (*_sym.imp.USER32.dll_SetCursor)(param_1[0x37]);\n        iVar4 = param_1[0x2b];\n        iVar3 = param_1[0x2d];\n        if (param_2 < iVar4) {\n            param_2 = iVar4;\n        }\n        if (iVar3 < param_2) {\n            param_2 = iVar3;\n        }\n        if (param_3 < param_1[0x2c]) {\n            param_3 = param_1[0x2c];\n        }\n        if (param_1[0x2e] < param_3) {\n            param_3 = param_1[0x2e];\n        }\n        (*_sym.imp.MSVCRT.dll_ceil)(((param_2 - iVar4) * param_1[0x14]) / (iVar3 - iVar4));\n        iVar1 = sub.MSVCRT.dll__ftol();\n        (*_sym.imp.MSVCRT.dll_ceil)(((param_1[0x2e] - param_3) * param_1[0x15]) / (param_1[0x2e] - param_1[0x2c]));\n        iVar2 = sub.MSVCRT.dll__ftol();\n        if ((iVar1 != param_1[0x12]) || (iVar2 != param_1[0x13])) {\n            iVar4 = param_1[8];\n            uVar6 = 0;\n            uVar5 = 0;\n            param_1[0x12] = iVar1;\n            param_1[0x13] = iVar2;\n            (*_sym.imp.USER32.dll_InvalidateRect)();\n            iVar3 = fcn.00404750();\n            param_1[0x19] = iVar3;\n            (**(*param_1 + 0xc0))(iVar3, iVar4, uVar5, uVar6);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 632
    },
    "00405190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405190(uint *param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x4083e8;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x40a0e0;\n    uStack4 = 0;\n    if (param_1[0x32] != 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)(param_1[0x32]);\n    }\n    if (param_1[0x25] != 0) {\n        sub.MFC42.DLL_operatordelete(param_1[0x25]);\n    }\n    uStack4 = 0xffffffff;\n    fcn.00407bb0();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 205
    },
    "00405400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405400(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f00);\n    (*_sym.imp.USER32.dll_SetCursor)(uVar2);\n    if (*(param_1 + 0x3c) != '\\0') {\n        iVar1 = param_1[0x12];\n        iVar3 = sub.MSVCRT.dll__ftol();\n        if (iVar3 + iVar1 != param_1[0x14]) {\n            param_1[0x14] = iVar3 + iVar1;\n            (*_sym.imp.USER32.dll_InvalidateRect)(param_1[8], 0, 0);\n            (**(*param_1 + 0xc0))(param_1[0x14]);\n        }\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "00405ff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405ff0(int32_t param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    double dVar2;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x408478;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.004066c0();\n    uStack4 = 0;\n    dVar2 = *(param_1 + 0x84) * *0x409e98;\n    fcn.00406ee0(*(param_1 + 0x94), *(param_1 + 0x98), dVar2, *(param_1 + 0x88) * *0x409e98);\n    uVar1 = SUB84(dVar2, 0);\n    fcn.00406720();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 224
    },
    "00406080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406080(int32_t param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    double dVar2;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x408498;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.004066c0();\n    uStack4 = 0;\n    dVar2 = *(param_1 + 0x84) * *0x409e90;\n    fcn.00407230(*(param_1 + 0x94), *(param_1 + 0x98), dVar2, *(param_1 + 0x88) * *0x409e98);\n    uVar1 = SUB84(dVar2, 0);\n    fcn.00406720();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 222
    },
    "00406110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406110(int32_t param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    double dVar2;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x4084b8;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.004066c0();\n    uStack4 = 0;\n    dVar2 = *(param_1 + 0x84) * *0x409e90;\n    fcn.00407520(*(param_1 + 0x94), *(param_1 + 0x98), dVar2, *(param_1 + 0x88) * *0x409e98);\n    uVar1 = SUB84(dVar2, 0);\n    fcn.00406720();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 224
    },
    "00406670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406670(uint *param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x408518;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x409644;\n    uStack4 = 0;\n    sub.MFC42.DLL_CGdiObject::DeleteObject();\n    *param_1 = 0x409630;\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 136
    },
    "00407830": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407830(uint *param_1, uint *param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    \n    puVar2 = *param_1;\n    if (param_3 == 0) {\n        *param_1 = puVar2;\n        return;\n    }\n    do {\n        uVar1 = *param_2;\n        param_2 = param_2 + 1;\n        *puVar2 = uVar1;\n        puVar2 = puVar2 + 1;\n        param_3 = param_3 + -1;\n    } while (param_3 != 0);\n    *param_1 = puVar2;\n    return;\n}\n",
        "token_count": 162
    },
    "00401f40": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nuint fcn.00401f40(void)\n\n{\n    int32_t in_FS_OFFSET;\n    uint var_4h;\n    \n    return *(in_FS_OFFSET + 0x30);\n}\n",
        "token_count": 41
    },
    "00403960": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.00403960(int32_t param_1, uint param_2, int32_t param_3, int32_t param_4, int32_t param_5, int32_t param_6, \n            int32_t param_7, uint param_8)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (param_7 != 0) {\n        param_7 = *(param_7 + 0x20);\n    }\n    uVar1 = (*_sym.imp.USER32.dll_LoadCursorA)\n                      (0, 0x7f00, 0, 0, \"GTColorSelectorWnd\", param_2, param_3, param_4, param_5 - param_3, \n                       param_6 - param_4, param_7, param_8, 0);\n    uVar1 = sub.MFC42.DLL_AfxRegisterWndClass(8, uVar1);\n    iVar2 = sub.MFC42.DLL_CWnd::CreateEx(0, uVar1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    *(param_1 + 0xe0) = 0;\n    *(param_1 + 0xe4) = 0;\n    fcn.00403a90(0);\n    (*_sym.imp.USER32.dll_UpdateWindow)(*(param_1 + 0x20));\n    return 1;\n}\n",
        "token_count": 318
    },
    "00405220": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.00405220(int32_t param_1, uint param_2, int32_t param_3, int32_t param_4, int32_t param_5, int32_t param_6, \n            int32_t param_7, uint param_8)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (param_7 != 0) {\n        param_7 = *(param_7 + 0x20);\n    }\n    uVar1 = (*_sym.imp.USER32.dll_LoadCursorA)\n                      (0, 0x7f00, 0, 0, \"GTColorSliderWnd\", param_2, param_3, param_4, param_5 - param_3, \n                       param_6 - param_4, param_7, param_8, 0);\n    uVar1 = sub.MFC42.DLL_AfxRegisterWndClass(8, uVar1);\n    iVar2 = sub.MFC42.DLL_CWnd::CreateEx(0, uVar1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    *(param_1 + 0xf4) = 0;\n    fcn.00405b20(0x50017280);\n    fcn.00405b40(1);\n    (*_sym.imp.USER32.dll_UpdateWindow)(*(param_1 + 0x20));\n    return 1;\n}\n",
        "token_count": 318
    }
}