{
    "00401ad3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: dwMilliseconds\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint fcn.00401ad3(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    ulong uVar3;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint dwMilliseconds;\n    uint var_8h;\n    \n    while( true ) {\n        if (*(unaff_EBP + -0x30) < *(unaff_EBP + -8) || *(unaff_EBP + -0x30) == *(unaff_EBP + -8)) {\n            *0x456008 = *(unaff_EBP + -0x28) + 1 + *(unaff_EBP + -0x2c);\n            (*_sym.imp.KERNEL32.dll_Sleep)(*(unaff_EBP + -0xc));\n            *0x45603c = *0x45603c - (*0x456008 * 2 + *(unaff_EBP + -0x28));\n        }\n        *0x45603c = (*(unaff_EBP + -0x18) * 0xf9f7 - *0x456008) + *0x45603c * 2;\n        if (*(unaff_EBP + -0x18) < 2) {\n            *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + -1;\n            *0x456034 = *(unaff_EBP + -0x2c) + 6 + *0x456008;\n            iVar1 = fcn.00436fa0(*(unaff_EBP + -0x28), *(unaff_EBP + -0x24), 0x43, 0);\n            *0x45603c = *0x45603c + (iVar1 - *(unaff_EBP + -0x18));\n        }\n        *0x456008 = *0x456040 * 4 - *(unaff_EBP + -0x1c);\n        if (*(unaff_EBP + -0x1c) < 8) {\n            uVar3 = fcn.00436fa0(*(unaff_EBP + -0x2c), 0, *(unaff_EBP + -0x28), *(unaff_EBP + -0x24));\n            bVar2 = uVar3 < *0x456040;\n            *(unaff_EBP + -0x28) = uVar3 - *0x456040;\n            *(unaff_EBP + -0x24) = (uVar3 >> 0x20) - bVar2;\n            *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -1;\n            *0x45603c = (*(unaff_EBP + -0x1c) * 0xf9f7 - *(unaff_EBP + -0x28)) + *0x45603c * 2;\n        }\n        iVar1 = fcn.00436fa0();\n        *0x45603c = *0x45603c + (iVar1 - *(unaff_EBP + -0x10));\n        if (*0x45603c == *0x456008) {\n            *(unaff_EBP + -0x38) = *0x456034;\n            *(unaff_EBP + -0x34) = 0;\n        }\n        if (*(unaff_EBP + -0x10) < 0x10) {\n            *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + -1;\n        }\n        *0x456034 = *(unaff_EBP + -0x2c) + 6 + *0x456008;\n        if (*(unaff_EBP + -0x30) == 0) break;\n        fcn.004016c0();\n        if (*0x456008 == 0x3e12c) {\n            *(unaff_EBP + -0x2c) = *0x456034 + 0x3e12d;\n        }\n        uVar3 = fcn.00436fa0();\n        *(unaff_EBP + -0x28) = uVar3 - *(unaff_EBP + -0x30);\n        *(unaff_EBP + -0x24) = (uVar3 >> 0x20) - (uVar3 < *(unaff_EBP + -0x30));\n        *(unaff_EBP + -0x30) = *(unaff_EBP + -0x30) + -1;\n        *(unaff_EBP + -0x2c) = *0x456008 == 0;\n        if (*(unaff_EBP + -0x2c) != 0) {\n            *(unaff_EBP + -0x2c) = *0x456034 + 1 + *0x456008;\n            *0x456008 = *(unaff_EBP + -0x28) + 1 + *(unaff_EBP + -0x30);\n        }\n    }\n    *(unaff_EBP + -0x2c) = (*0x456034 * 0x43 - *0x456008) + *(unaff_EBP + -0x2c);\n    *0x456034 = *0x45603c + 6 + *0x456008;\n    *0x456040 = fcn.004013f0(*0x469940, *0x456008);\n    *(unaff_EBP + -0x2c) = *0x456008 + 1 + *0x456040;\n    return *(unaff_EBP + -0x2c);\n}\n",
        "token_count": 1330
    },
    "004021bb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004021bb(uint32_t param_1, char param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    char cVar6;\n    uint8_t uVar7;\n    uint32_t uVar5;\n    uint8_t uVar8;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t iVar9;\n    \n    cVar6 = param_1 >> 8;\n    uVar8 = unaff_EBX + cVar6;\n    uVar3 = CONCAT11(cVar6 - *(in_EAX + 0x39000029), param_1);\n    uVar5 = param_1 & 0xffff0000 | uVar3;\n    uVar7 = in_EAX + 0x39000001 >> 8;\n    iVar9 = unaff_EBP + *(uVar5 + 0x20) + CARRY1(uVar8, uVar7);\n    pcVar1 = uVar5 + 0x5eb0042;\n    *pcVar1 = *pcVar1 - (param_2 + '\\x02');\n    iVar4 = func_0x003f7fee(unaff_EBX & 0xffffff00 | uVar8 + uVar7 + (uVar3 >> 8), *(iVar9 + 0x1c), 0x429110);\n    if (iVar4 == 0) {\n        if (*(iVar9 + -0x78c) != '\\0') {\n            fcn.004041d4();\n        }\n        func_0x003eed88();\n        return;\n    }\n    func_0x003f8d13(0, 0, 0, 0, 0);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 426
    },
    "0042d150": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042d150(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint *arg_8h_00;\n    uint var_30h;\n    uint lpModuleName;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint lpProcName;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    \n    var_ch = *0x45d5bc ^ &stack0xfffffffc;\n    *0x456008 = *0x456008 - (*0x456038 + *0x456034 * 2);\n    lpModuleName = str.KERNEL32._0_4_;\n    var_28h = str.KERNEL32._4_4_;\n    var_24h._0_1_ = str.KERNEL32[8];\n    *0x456040 = *0x456038 + 1 + *0x456004;\n    lpProcName = *0x44f7c8;\n    var_18h = *0x44f7cc;\n    var_14h = *0x44f7d0;\n    var_10h._0_2_ = *0x44f7d4;\n    var_10h._2_1_ = *0x44f7d6;\n    *0x45603c = *0x456004 + 6 + *0x456008;\n    *0x456038 = *0x456040 * 4 - *0x456008;\n    arg_8h_00 = &lpModuleName;\n    *0x46994c = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    *0x45603c = *0x456034 * 0x1d * *0x456038;\n    if (*0x46994c != 0) {\n        *0x456040 = var_20h * 0x1d * *0x456038;\n        pcVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x46994c, &lpProcName);\n        *0x456008 = (var_20h * 0xf9f7 - *0x456038) + *0x456008 * 2;\n        if (pcVar1 != NULL) {\n            var_20h = 0x40;\n            *0x456034 = *0x456038 + 6 + *0x456008;\n            (*pcVar1)(*0x469940, arg_8h, 0x40, &var_20h);\n            *0x456040 = (*0x456038 * 0x43 - var_20h) + *0x456040;\n        }\n        *0x456008 = (*0x456038 * 0x43 - var_20h) + *0x456008;\n    }\n    var_20h = (*0x456034 * 0x43 - *0x456004) + var_20h;\n    fcn.00436f55(arg_8h_00);\n    return;\n}\n",
        "token_count": 698
    },
    "0042d410": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d410(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_10h;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_8h != '\\0') && (0xf < *(in_ECX + 0x18))) {\n        arg_10h = *(in_ECX + 4);\n        if (arg_ch != 0) {\n            fcn.0042dc80(in_ECX + 4, 0x10, arg_10h, arg_ch);\n        }\n        fcn.0042d8d0(arg_10h);\n    }\n    *(in_ECX + 0x18) = 0xf;\n    fcn.0042d7b0(arg_ch);\n    return;\n}\n",
        "token_count": 185
    },
    "0042d710": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042d710(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch_00;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t arg_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x14) < arg_8h) {\n        fcn.004481f1();\n    }\n    if (*(in_ECX + 0x14) - arg_8h < arg_ch) {\n        arg_ch = *(in_ECX + 0x14) - arg_8h;\n    }\n    if (arg_ch != 0) {\n        arg_14h = (*(in_ECX + 0x14) - arg_8h) - arg_ch;\n        iVar1 = fcn.0042d8a0();\n        iVar1 = iVar1 + arg_8h + arg_ch;\n        arg_ch_00 = *(in_ECX + 0x18) - arg_8h;\n        iVar2 = fcn.0042d8a0();\n        fcn.0042dcb0(iVar2 + arg_8h, arg_ch_00, iVar1, arg_14h);\n        fcn.0042d7b0(*(in_ECX + 0x14) - arg_ch);\n    }\n    return in_ECX;\n}\n",
        "token_count": 322
    },
    "0042d800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0042d800(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0042d9c0();\n    if (uVar1 < arg_8h) {\n        fcn.00448160();\n    }\n    if (*(in_ECX + 0x18) < arg_8h) {\n        fcn.0042da00(arg_8h, *(in_ECX + 0x14));\n    }\n    else if ((arg_ch == '\\0') || (0xf < arg_8h)) {\n        if (arg_8h == 0) {\n            fcn.0042d7b0(0);\n        }\n    }\n    else {\n        if (arg_8h < *(in_ECX + 0x14)) {\n            var_8h = arg_8h;\n        }\n        else {\n            var_8h = *(in_ECX + 0x14);\n        }\n        fcn.0042d410(1, var_8h);\n    }\n    return arg_8h != 0;\n}\n",
        "token_count": 274
    },
    "0042d9c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0042d9c0(void)\n\n{\n    uint32_t uVar1;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0042dbd0();\n    if (uVar1 < 2) {\n        var_ch = 1;\n    }\n    else {\n        var_ch = uVar1 - 1;\n    }\n    return var_ch;\n}\n",
        "token_count": 102
    },
    "0042da00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042da00(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint arg_10h;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_8h;\n    int32_t var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4482a0;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    var_18h = var_8h | 0xf;\n    uVar1 = fcn.0042d9c0();\n    if (uVar1 < var_18h) {\n        var_18h = var_8h;\n    }\n    else if (var_18h / 3 < *(param_1 + 0x18) >> 1) {\n        iVar2 = fcn.0042d9c0();\n        uVar1 = iVar2 - (*(param_1 + 0x18) >> 1);\n        if (*(param_1 + 0x18) < uVar1 || *(param_1 + 0x18) == uVar1) {\n            var_18h = (*(param_1 + 0x18) >> 1) + *(param_1 + 0x18);\n        }\n    }\n    var_4h = 0;\n    arg_8h = fcn.0042dbb0(var_18h + 1);\n    var_4h = 0xffffffff;\n    if (var_ch_2 != 0) {\n        iVar2 = var_ch_2;\n        arg_10h = fcn.0042d8a0();\n        fcn.0042dc80(arg_8h, var_18h + 1, arg_10h, iVar2);\n    }\n    fcn.0042d410(1, 0);\n    *(param_1 + 4) = arg_8h;\n    *(param_1 + 0x18) = var_18h;\n    fcn.0042d7b0(var_ch_2);\n    *in_FS_OFFSET = var_ch_3;\n    return;\n}\n",
        "token_count": 566
    },
    "0042dc00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042dc00(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.0042dc40(&var_4h, arg_8h, arg_ch);\n    if (arg_8h_00 < 0) {\n        fcn.00401000(arg_8h_00);\n    }\n    return var_4h;\n}\n",
        "token_count": 115
    },
    "0042dc40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042dc40(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch * arg_10h >> 0x20 == 0) {\n        *arg_8h = arg_ch * arg_10h;\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 0x80070057;\n    }\n    return uVar1;\n}\n",
        "token_count": 123
    },
    "004379d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004379d0(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00439cb8(0x453d28, 0xc);\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        if (*0x46d720 == 3) {\n            fcn.0043da80(4);\n            *(unaff_EBP + -4) = 0;\n            arg_8h_00 = fcn.0043daf9(iVar1);\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 != 0) {\n                fcn.0043db24(arg_8h_00, iVar1);\n            }\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.00437a26();\n            if (*(unaff_EBP + -0x1c) != 0) goto code_r0x00437a58;\n            iVar1 = *(unaff_EBP + 8);\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x46c0a4, 0, iVar1);\n        if (iVar1 == 0) {\n            puVar2 = fcn.004383fa();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.004383bf(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\ncode_r0x00437a58:\n    fcn.00439cfd();\n    return;\n}\n",
        "token_count": 430
    },
    "0042e2d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042e2d5(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (param_2 < *(iVar1 + -0xc)) {\n        param_2 = *(iVar1 + -0xc);\n    }\n    if (*(iVar1 + -4) < 2) {\n        iVar1 = *(iVar1 + -8);\n        if (iVar1 < param_2) {\n            if (iVar1 < 0x401) {\n                iVar1 = iVar1 * 2;\n            }\n            else {\n                iVar1 = iVar1 + 0x400;\n            }\n            if (iVar1 < param_2) {\n                iVar1 = param_2;\n            }\n            fcn.0042e1ec(iVar1);\n        }\n    }\n    else {\n        fcn.0042e26d(param_2);\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "0042e3c7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e3c7(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h_00;\n    int32_t *in_ECX;\n    uint32_t uVar2;\n    \n    if (arg_ch == 0) {\n        fcn.0042e22a();\n    }\n    else {\n        if (arg_8h == 0) {\n            fcn.00401000(0x80070057);\n        }\n        uVar1 = *(*in_ECX + -0xc);\n        uVar2 = arg_8h - *in_ECX;\n        arg_8h_00 = fcn.0042e31c(arg_ch);\n        if (uVar1 < uVar2) {\n            fcn.00437f63(arg_8h_00, arg_ch, arg_8h, arg_ch);\n        }\n        else {\n            fcn.00437fde(arg_8h_00, arg_ch, arg_8h_00 + uVar2, arg_ch);\n        }\n        fcn.0042e1bb(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 261
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl method.COleException.virtual_20(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_208h;\n    uint var_204h;\n    uint32_t var_4h;\n    \n    var_4h = *0x45d5bc ^ &stack0xfffffffc;\n    iVar1 = (**(*in_ECX + 0xc))(&var_204h, 0x200, &var_208h);\n    if (iVar1 == 0) {\n        if (arg_ch == NULL) {\n            arg_ch = 0xf020;\n        }\n        fcn.0042f6c3(arg_ch, arg_8h, var_208h);\n    }\n    else {\n        arg_ch = &var_204h;\n        fcn.0042f692(arg_ch, arg_8h, var_208h);\n    }\n    fcn.00436f55(arg_ch);\n    return;\n}\n",
        "token_count": 220
    },
    "0042e82a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042e82a(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    piVar2 = (**(*in_ECX + 0x38))();\n    do {\n        for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n        }\n        for (piVar3 = piVar3 + 1; *piVar3 != -1; piVar3 = piVar3 + 2) {\n            puVar1 = *(in_ECX + *piVar3);\n            if (puVar1 != NULL) {\n                var_4h = 0;\n                iVar4 = (***puVar1)(puVar1, arg_8h, &var_4h);\n                if ((iVar4 == 0) && (var_4h != 0)) {\n                    return var_4h;\n                }\n            }\n        }\n        piVar2 = *piVar2;\n        if (piVar2 == NULL) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 294
    },
    "0042ec2a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar fcn.0042ec2a(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    \n    if (param_2 == 0) {\n        fcn.0042e629();\n    }\n    if (*0x469d40 == 0) {\n        uVar2 = 2;\n    }\n    else {\n        iVar1 = fcn.0042ec0a(param_1, param_2);\n        uVar2 = iVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 125
    },
    "0042eca8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042eca8(code **param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.AFX_MODULE_THREAD_STATE.0;\n    if (param_1[0xf] != NULL) {\n        (**(*param_1[0xf] + 0x13c))();\n    }\n    fcn.0042df88(param_1[0x12]);\n    if (param_1[5] != NULL) {\n        (***param_1[5])(1);\n    }\n    if (param_1[6] != NULL) {\n        (***param_1[6])(1);\n    }\n    if (param_1[7] != NULL) {\n        (***param_1[7])(1);\n    }\n    if (param_1[8] != NULL) {\n        (***param_1[8])(1);\n    }\n    if (param_1[9] != NULL) {\n        (***param_1[9])(1);\n    }\n    pcVar2 = param_1[0xe];\n    if (pcVar2 != NULL) {\n        while (*(pcVar2 + 0xc) != 0) {\n            uVar1 = fcn.004307ca();\n            fcn.0042df88(uVar1);\n            pcVar2 = param_1[0xe];\n        }\n    }\n    if (param_1[0xc] != NULL) {\n        (**(*param_1[0xc] + 4))(1);\n    }\n    if (param_1[0xd] != NULL) {\n        (**(*param_1[0xd] + 4))(1);\n    }\n    if (param_1[0xe] != NULL) {\n        (**(*param_1[0xe] + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 406
    },
    "0042eeee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042eeee(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.CDllIsolationWrapperBase.0;\n    if (*(param_1 + 2) != '\\0') {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(param_1[1]);\n    }\n    ppiVar3 = param_1[3] + -0x10;\n    piVar1 = param_1[3] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "0042f37c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0042f37c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0042f330();\n    if ((*(iVar1 + 0x7c) == 0) || (*(param_2 + 0x80) == -1)) {\n        *(param_1 + 4) = 0;\n    }\n    else {\n        uVar2 = fcn.0042ec0a(*(param_2 + 0x80), param_1);\n        *(param_1 + 4) = uVar2;\n    }\n    return param_1;\n}\n",
        "token_count": 157
    },
    "0042f41d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0042f41d(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042ec1a();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "0042f465": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042f465(uint param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0042f452();\n    if (piVar1 != NULL) {\n        iVar2 = (**(*piVar1 + 0x120))();\n        if ((iVar2 != 0) && (piVar1[0x20] != NULL)) {\n            (**(*piVar1[0x20] + 100))(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "0042f537": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042f537(int32_t param_1, uint param_2, uint32_t param_3, int32_t param_4)\n\n{\n    int32_t hWnd;\n    int32_t iVar1;\n    int32_t *piVar2;\n    uchar *lpCaption;\n    int32_t *arg_8h;\n    int32_t iStack280;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [108];\n    uchar auStack160 [151];\n    uchar uStack9;\n    uint32_t uStack8;\n    \n    uStack8 = *0x45d5bc ^ auStack160;\n    fcn.0042f465(0);\n    arg_8h = &iStack272;\n    hWnd = fcn.0042f499(0);\n    if (hWnd != iStack272) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 1);\n    }\n    iStack280 = 0;\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(hWnd, &iStack280);\n    if ((((hWnd == 0) || (iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)(),  iStack280 != iVar1)) ||\n        (piVar2 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x376, 0, 0),  piVar2 == NULL)) &&\n       (piVar2 = NULL,  param_1 != 0)) {\n        piVar2 = param_1 + 0x78;\n    }\n    iStack276 = 0;\n    if ((piVar2 != NULL) && (iStack276 = *piVar2,  param_4 != 0)) {\n        *piVar2 = param_4 + 0x30000;\n    }\n    if ((param_3 & 0xf0) == 0) {\n        if ((param_3 & 0xf) < 2) {\n            param_3 = param_3 | 0x30;\n        }\n        else if ((param_3 & 0xf) - 3 < 2) {\n            param_3 = param_3 | 0x20;\n        }\n    }\n    auStack268[0] = 0;\n    if (param_1 == 0) {\n        lpCaption = auStack268;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, lpCaption, 0x104);\n        if (iVar1 == 0x104) {\n            uStack9 = 0;\n        }\n    }\n    else {\n        lpCaption = *(param_1 + 0x50);\n    }\n    fcn.0042f3bb(hWnd, param_2, lpCaption, param_3);\n    if (piVar2 != NULL) {\n        *piVar2 = iStack276;\n    }\n    if (iStack272 != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(iStack272, 1);\n    }\n    fcn.0042f465(1);\n    fcn.00436f55(arg_8h);\n    return;\n}\n",
        "token_count": 695
    },
    "0042f730": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042f730(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n    // WARNING: Could not recover jumptable at 0x0042f737. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_LocalFree)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0042f804": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0042f804(int32_t param_1, int32_t param_2)\n\n{\n    int32_t extraout_ECX;\n    \n    if (param_2 == 0) {\n        fcn.0042e629();\n        param_1 = extraout_ECX;\n    }\n    return *(param_1 + 4) + param_2;\n}\n",
        "token_count": 87
    },
    "0042fb30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042fb30(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004382a3(4);\n    if (*(unaff_EBP + 8) != 0) goto code_r0x0042fb4f;\ncode_r0x0042fb4a:\n    do {\n        fcn.0042e629();\ncode_r0x0042fb4f:\n        if (*extraout_ECX != 0) goto code_r0x0042fb8a;\n        if (*0x469d50 == 0) {\n            *(unaff_EBP + -0x10) = 0x469d54;\n            *(unaff_EBP + -4) = 0;\n            *0x469d50 = fcn.0042f943();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x469d50 == 0) goto code_r0x0042fb4a;\n        }\n        iVar1 = fcn.0042f833();\n        *extraout_ECX = iVar1;\n        if (iVar1 != 0) {\ncode_r0x0042fb8a:\n            iVar1 = fcn.0042f740(*extraout_ECX);\n            if (iVar1 == 0) {\n                arg_ch = (**(unaff_EBP + 8))();\n                fcn.0042f9e5(*extraout_ECX, arg_ch);\n            }\n            fcn.00438342();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 399
    },
    "0042fbd8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0042fbd8(void)\n\n{\n    if (*0x469d88 == 0) {\n        *0x469d88 = 1;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x469f28);\n    }\n    return *0x469d88;\n}\n",
        "token_count": 70
    },
    "0042fbfc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042fbfc(uint32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    \n    if (0x10 < param_1) {\n        fcn.0042e629();\n    }\n    if (*0x469d88 == 0) {\n        fcn.0042fbd8();\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    piVar1 = param_1 * 4 + 0x469f40;\n    if (*piVar1 == 0) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x469f28);\n        if (*piVar1 == 0) {\n            (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(param_1 * 0x18 + 0x469d90);\n            *piVar1 = *piVar1 + 1;\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x469f28);\n    }\n    (*pcVar2)(param_1 * 0x18 + 0x469d90);\n    return;\n}\n",
        "token_count": 248
    },
    "0042fe7a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042fe7a(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iStack12;\n    uint32_t uStack8;\n    \n    if ((arg_ch == 0) || (arg_8h == 0)) {\n        iVar1 = 0;\n    }\n    else {\n        if ((*(in_ECX + 0x18) & 1) == 0) {\n            fcn.0043046d(4, *(in_ECX + 0x14));\n        }\n        uVar3 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        if (arg_ch < uVar3) {\n            uVar3 = arg_ch;\n        }\n        fcn.0042df93(arg_8h, arg_ch, *(in_ECX + 0x28), uVar3);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar3;\n        arg_8h = arg_8h + uVar3;\n        uVar3 = arg_ch - uVar3;\n        if (uVar3 != 0) {\n            iVar1 = uVar3 - uVar3 % *(in_ECX + 0x20);\n            iStack12 = 0;\n            uStack8 = iVar1;\n            do {\n                iVar2 = (**(**(in_ECX + 0x24) + 0x34))(arg_8h, uStack8);\n                arg_8h = arg_8h + iVar2;\n                iStack12 = iStack12 + iVar2;\n                uStack8 = uStack8 - iVar2;\n                if (iVar2 == 0) break;\n            } while (uStack8 != 0);\n            uVar3 = uVar3 - iStack12;\n            if ((uVar3 != 0) && (iStack12 == iVar1)) {\n                uVar4 = 0;\n                if (*(in_ECX + 8) == 0) {\n                    if ((*(in_ECX + 0xc) != 0) || (uStack8 = *(in_ECX + 0x20),  *(in_ECX + 0x20) < uVar3)) {\n                        uStack8 = uVar3;\n                    }\n                    iStack12 = *(in_ECX + 0x30);\n                    do {\n                        iVar1 = (**(**(in_ECX + 0x24) + 0x34))(iStack12, uStack8);\n                        iStack12 = iStack12 + iVar1;\n                        uStack8 = uStack8 - iVar1;\n                        uVar4 = uVar4 + iVar1;\n                        if ((iVar1 == 0) || (uStack8 == 0)) break;\n                    } while (uVar4 < uVar3);\n                    iVar1 = *(in_ECX + 0x30);\n                    *(in_ECX + 0x2c) = iVar1 + uVar4;\n                }\n                else {\n                    (**(**(in_ECX + 0x24) + 0x50))(0, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                    iVar1 = *(in_ECX + 0x30);\n                }\n                uVar4 = *(in_ECX + 0x2c) - iVar1;\n                *(in_ECX + 0x28) = iVar1;\n                if (uVar3 < uVar4) {\n                    uVar4 = uVar3;\n                }\n                fcn.0042df93(arg_8h, uVar3, iVar1, uVar4);\n                *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar4;\n                uVar3 = uVar3 - uVar4;\n            }\n        }\n        iVar1 = arg_ch - uVar3;\n    }\n    return iVar1;\n}\n",
        "token_count": 918
    },
    "0042fec4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042fec4(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    uint32_t uVar3;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uStack0000000c;\n    uint var_8h;\n    uint var_4h;\n    \n    *(unaff_EBP + 8) = *(unaff_EBP + 8) + unaff_EDI;\n    uVar3 = unaff_EBX - unaff_EDI;\n    if (uVar3 != 0) {\n        iVar4 = uVar3 - uVar3 % *(unaff_ESI + 0x20);\n        *(unaff_EBP + -8) = 0;\n        *(unaff_EBP + -4) = iVar4;\n        do {\n            uStack0000000c = *(unaff_EBP + -4);\n            iVar2 = (**(**(unaff_ESI + 0x24) + 0x34))();\n            *(unaff_EBP + 8) = *(unaff_EBP + 8) + iVar2;\n            *(unaff_EBP + -8) = *(unaff_EBP + -8) + iVar2;\n            *(unaff_EBP + -4) = *(unaff_EBP + -4) - iVar2;\n            if (iVar2 == 0) break;\n        } while (*(unaff_EBP + -4) != 0);\n        uVar3 = uVar3 - *(unaff_EBP + -8);\n        if ((uVar3 != 0) && (*(unaff_EBP + -8) == iVar4)) {\n            uVar5 = 0;\n            if (*(unaff_ESI + 8) == 0) {\n                if ((*(unaff_ESI + 0xc) != 0) ||\n                   (uVar1 = *(unaff_ESI + 0x20),  *(unaff_EBP + -4) = uVar1,  uVar1 < uVar3)) {\n                    *(unaff_EBP + -4) = uVar3;\n                }\n                *(unaff_EBP + -8) = *(unaff_ESI + 0x30);\n                do {\n                    uStack0000000c = *(unaff_EBP + -4);\n                    iVar4 = (**(**(unaff_ESI + 0x24) + 0x34))();\n                    *(unaff_EBP + -8) = *(unaff_EBP + -8) + iVar4;\n                    *(unaff_EBP + -4) = *(unaff_EBP + -4) - iVar4;\n                    uVar5 = uVar5 + iVar4;\n                    if ((iVar4 == 0) || (*(unaff_EBP + -4) == 0)) break;\n                } while (uVar5 < uVar3);\n                iVar4 = *(unaff_ESI + 0x30);\n                *(unaff_ESI + 0x2c) = iVar4 + uVar5;\n            }\n            else {\n                uStack0000000c = unaff_ESI + 0x2c;\n                (**(**(unaff_ESI + 0x24) + 0x50))();\n                iVar4 = *(unaff_ESI + 0x30);\n            }\n            uVar5 = *(unaff_ESI + 0x2c) - iVar4;\n            *(unaff_ESI + 0x28) = iVar4;\n            if (uVar3 < uVar5) {\n                uVar5 = uVar3;\n            }\n            uStack0000000c = uVar5;\n            fcn.0042df93();\n            *(unaff_ESI + 0x28) = *(unaff_ESI + 0x28) + uVar5;\n            uVar3 = uVar3 - uVar5;\n        }\n    }\n    return *(unaff_EBP + 0xc) - uVar3;\n}\n",
        "token_count": 920
    },
    "00430020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430020(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint arg_8h_00;\n    int32_t in_stack_ffffffe4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar6 = in_ECX;\n    if ((*(in_ECX + 0x18) & 1) != 0) goto code_r0x0043003a;\n    arg_8h_00 = 4;\n    in_stack_ffffffe4 = *(in_ECX + 0x14);\n    do {\n        fcn.0043046d(arg_8h_00, in_stack_ffffffe4);\n        iVar6 = in_ECX;\ncode_r0x0043003a:\n        in_ECX = in_stack_ffffffe4;\n        uVar2 = *(iVar6 + 0x28);\n        piVar1 = iVar6 + 0x2c;\n        var_4h = *piVar1 - uVar2;\n        uVar3 = arg_8h + var_4h;\n        if (*(iVar6 + 8) == 0) {\n            uVar4 = *(iVar6 + 0x30);\n            if (uVar4 < uVar2) {\n                if (0 < var_4h) {\n                    fcn.0042fe5b(uVar4, *piVar1 - uVar4, uVar2, var_4h);\n                    uVar4 = *(iVar6 + 0x30);\n                    *(iVar6 + 0x28) = uVar4;\n                    *piVar1 = uVar4 + var_4h;\n                }\n                if (*(iVar6 + 0xc) == 0) {\n                    arg_8h = *(iVar6 + 0x20);\n                }\n                arg_8h = arg_8h - var_4h;\n                iVar7 = var_4h + uVar4;\n                do {\n                    iVar5 = (**(**(iVar6 + 0x24) + 0x34))(iVar7, arg_8h);\n                    var_4h = var_4h + iVar5;\n                    arg_8h = arg_8h - iVar5;\n                    iVar7 = iVar7 + iVar5;\n                    if ((iVar5 == 0) || (arg_8h == 0)) break;\n                } while (var_4h < uVar3);\n                *(iVar6 + 0x28) = *(iVar6 + 0x30);\n                *piVar1 = *(iVar6 + 0x30) + var_4h;\n            }\n        }\n        else {\n            if (var_4h != 0) {\n                (**(**(iVar6 + 0x24) + 0x28))(-var_4h, -var_4h >> 0x1f, 1);\n            }\n            (**(**(iVar6 + 0x24) + 0x50))(0, *(iVar6 + 0x20), iVar6 + 0x30, piVar1);\n            *(iVar6 + 0x28) = *(iVar6 + 0x30);\n        }\n        if (uVar3 <= *piVar1 - *(iVar6 + 0x28)) {\n            return;\n        }\n        arg_8h_00 = 3;\n        in_stack_ffffffe4 = in_ECX;\n    } while( true );\n}\n",
        "token_count": 812
    },
    "00430205": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430205(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        if ((~*(in_ECX + 0x18) & 1) == 0) {\n            fcn.0043046d(2, *(in_ECX + 0x14));\n        }\n        uVar1 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        uVar2 = arg_ch;\n        if (uVar1 <= arg_ch) {\n            uVar2 = uVar1;\n        }\n        fcn.0042df93(*(in_ECX + 0x28), uVar1, arg_8h, uVar2);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar2;\n        arg_ch = arg_ch - uVar2;\n        if (arg_ch != 0) {\n            fcn.0042ffa9();\n            iVar3 = arg_ch - arg_ch % *(in_ECX + 0x20);\n            (**(**(in_ECX + 0x24) + 0x38))(arg_8h + uVar2, iVar3);\n            arg_ch = arg_ch - iVar3;\n            if (*(in_ECX + 8) != 0) {\n                (**(**(in_ECX + 0x24) + 0x50))(1, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                *(in_ECX + 0x28) = *(in_ECX + 0x30);\n            }\n            if (arg_ch < *(in_ECX + 0x20)) goto code_r0x004302aa;\n            do {\n                fcn.0042e629();\ncode_r0x004302aa:\n            } while (*(in_ECX + 0x28) != *(in_ECX + 0x30));\n            fcn.0042df93(*(in_ECX + 0x28), arg_ch, arg_8h + uVar2 + iVar3, arg_ch);\n            *(in_ECX + 0x28) = *(in_ECX + 0x28) + arg_ch;\n        }\n    }\n    return;\n}\n",
        "token_count": 557
    },
    "004304b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004304b0(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        param_2 = 0x11;\n    }\n    if (*(param_1 + 4) != 0) {\n        fcn.0042df88(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (param_3 != 0) {\n        uVar1 = fcn.0042df5d(-(param_2 * 4 >> 0x20 != 0) | param_2 * 4);\n        *(param_1 + 4) = uVar1;\n        fcn.00439d20(uVar1, 0, param_2 << 2);\n    }\n    *(param_1 + 8) = param_2;\n    return;\n}\n",
        "token_count": 214
    },
    "004306c3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004306c3(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar3 = fcn.00430ceb(param_1 + 0x14, *(param_1 + 0x18), 0xc);\n        iVar1 = *(param_1 + 0x18);\n        puVar4 = iVar3 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar4;\n            puVar4 = puVar4 + -3;\n        }\n    }\n    puVar4 = *(param_1 + 0x10);\n    uVar2 = *puVar4;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar2;\n    puVar4[1] = 0;\n    puVar4[2] = 0;\n    return;\n}\n",
        "token_count": 288
    },
    "00430a33": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430a33(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(param_1 + 0x20), 0xfffffff0);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00430a4a. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x78))();\n    return;\n}\n",
        "token_count": 129
    },
    "00430a4d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430a4d(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(param_1 + 0x20), 0xffffffec);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00430a64. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x7c))();\n    return;\n}\n",
        "token_count": 129
    },
    "00430a67": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430a67(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_IsWindowEnabled)(*(param_1 + 0x20));\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00430a7c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa4))();\n    return;\n}\n",
        "token_count": 122
    },
    "00430a82": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00430a82(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(*(param_1 + 0x20), param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00430a9d. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa8))();\n    return;\n}\n",
        "token_count": 131
    },
    "00430aa3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430aa3(int32_t arg_8h, uint X, uint Y, uint cx, uint cy, uint uFlags)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        if (arg_8h != 0) {\n            arg_8h = *(arg_8h + 0x20);\n        }\n        (*_sym.imp.USER32.dll_SetWindowPos)(*(in_ECX + 0x20), arg_8h, X, Y, cx, cy, uFlags);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00430ad9. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x9c))();\n    return;\n}\n",
        "token_count": 195
    },
    "00430adf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430adf(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((param_1 != 0) && (*(param_1 + 0x50) == 0)) {\n        uVar1 = (*_sym.imp.USER32.dll_GetParent)(*(param_1 + 0x20));\n        iVar2 = fcn.00430586(uVar1);\n        if ((iVar2 != 0) && (*(iVar2 + 0x4c) != 0)) {\n            (**(**(iVar2 + 0x4c) + 0x9c))(param_1, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00430b3b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430b3b(int32_t *arg_8h, char *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_4h;\n    \n    pcVar4 = arg_ch;\n    if (arg_ch != NULL) goto code_r0x00430b4e;\n    do {\n        fcn.0042e629();\ncode_r0x00430b4e:\n    } while (arg_10h == 0);\n    arg_ch = NULL;\n    cVar2 = *pcVar4;\n    pcVar5 = pcVar4;\n    while (cVar2 != '\\0') {\n        if (*pcVar5 == '%') {\n            cVar2 = pcVar5[1];\n            if ((cVar2 < '1') || ('9' < cVar2)) {\n                if ((cVar2 < 'A') || ('Z' < cVar2)) goto code_r0x00430ba6;\n                if (cVar2 < ':') goto code_r0x00430b86;\n                iVar3 = cVar2 + -0x38;\n            }\n            else {\ncode_r0x00430b86:\n                iVar3 = cVar2 + -0x31;\n            }\n            pcVar5 = pcVar5 + 2;\n            if (arg_14h <= iVar3) goto code_r0x00430bb9;\n            iVar3 = *(arg_10h + iVar3 * 4);\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3);\n                arg_ch = arg_ch + iVar3;\n            }\n        }\n        else {\ncode_r0x00430ba6:\n            iVar3 = fcn.0043a360(*pcVar5);\n            if (iVar3 != 0) {\n                arg_ch = arg_ch + 1;\n                pcVar5 = pcVar5 + 1;\n            }\n            pcVar5 = pcVar5 + 1;\ncode_r0x00430bb9:\n            arg_ch = arg_ch + 1;\n        }\n        cVar2 = *pcVar5;\n    }\n    pcVar5 = fcn.0042e31c(arg_ch);\n    cVar2 = *pcVar4;\n    do {\n        if (cVar2 == '\\0') {\n            fcn.0042e757(pcVar5 - *arg_8h);\n            return;\n        }\n        if (*pcVar4 == '%') {\n            cVar2 = pcVar4[1];\n            if ((cVar2 < '1') || ('9' < cVar2)) {\n                if ((cVar2 < 'A') || ('Z' < cVar2)) goto code_r0x00430c42;\n                if (cVar2 < ':') goto code_r0x00430bff;\n                iVar3 = cVar2 + -0x38;\n            }\n            else {\ncode_r0x00430bff:\n                iVar3 = cVar2 + -0x31;\n            }\n            pcVar4 = pcVar4 + 2;\n            if (arg_14h <= iVar3) {\n                *pcVar5 = '?';\n                goto code_r0x00430c5f;\n            }\n            piVar1 = arg_10h + iVar3 * 4;\n            iVar3 = *piVar1;\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3);\n                fcn.00430b20(pcVar5, arg_ch + 1, *piVar1);\n                arg_ch = arg_ch - iVar3;\n                pcVar5 = pcVar5 + iVar3;\n            }\n        }\n        else {\ncode_r0x00430c42:\n            iVar3 = fcn.0043a360(*pcVar4);\n            if (iVar3 != 0) {\n                *pcVar5 = *pcVar4;\n                pcVar5 = pcVar5 + 1;\n                pcVar4 = pcVar4 + 1;\n                arg_ch = arg_ch + -1;\n            }\n            *pcVar5 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\ncode_r0x00430c5f:\n            pcVar5 = pcVar5 + 1;\n            arg_ch = arg_ch + -1;\n        }\n        cVar2 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 1014
    },
    "00430ceb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00430ceb(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    \n    if ((param_2 != 0) && (param_3 != 0)) {\n        puVar2 = fcn.0042df5d(param_2 * param_3 + 4);\n        *puVar2 = *param_1;\n        *param_1 = puVar2;\n        return;\n    }\n    fcn.0042e629();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 143
    },
    "00430e6a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00430e6a(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    code **ppcVar4;\n    int32_t *in_ECX;\n    uint32_t arg_ch_00;\n    int32_t *piVar5;\n    \n    if (arg_ch == 0xfffffffe) {\n        iVar1 = fcn.0042f330();\n        if (*(iVar1 + 0x3c) != 0) goto code_r0x00430e88;\n    }\n    else {\n        if (arg_ch != 0xfffffffd) {\n            if (arg_ch != 0xffffffff) {\n                arg_ch_00 = arg_ch >> 0x10;\n                arg_ch = arg_ch & 0xffff;\n                if (arg_ch_00 != 0) goto code_r0x00430f3e;\n            }\n            arg_ch_00 = 0x111;\ncode_r0x00430f3e:\n            ppcVar4 = (**(*in_ECX + 0x28))();\n            while( true ) {\n                if (*ppcVar4 == NULL) {\n                    return 0;\n                }\n                iVar1 = fcn.00431f2d(ppcVar4[1], arg_ch_00, arg_ch, arg_8h);\n                if (iVar1 != 0) break;\n                ppcVar4 = (**ppcVar4)();\n            }\n            iVar1 = fcn.00430d32(in_ECX, arg_8h, arg_ch, *(iVar1 + 0x14), arg_10h, *(iVar1 + 0x10), arg_14h);\n            return iVar1;\n        }\n        arg_ch = 0;\n        if (arg_10h != 0) {\n            iVar1 = *(arg_10h + 0x30);\n            puVar2 = (**(*in_ECX + 0x2c))();\n            do {\n                if (puVar2 == NULL) {\n                    return arg_ch;\n                }\n                if (arg_ch != 0) {\n                    return arg_ch;\n                }\n                piVar5 = puVar2[1];\n                while (((piVar5[1] != 0 && (piVar5[2] != 0)) && (arg_ch == 0))) {\n                    if (arg_8h == piVar5[1]) {\n                        if (iVar1 == 0) {\n                            if (*piVar5 == 0) {\ncode_r0x00430f05:\n                                *(arg_10h + 4) = piVar5[2];\n                                arg_ch = 1;\n                            }\n                        }\n                        else if ((*piVar5 != 0) && (iVar3 = fcn.0042e88a(iVar1, *piVar5),  iVar3 != 0))\n                        goto code_r0x00430f05;\n                    }\n                    piVar5 = piVar5 + 3;\n                }\n                puVar2 = *puVar2;\n            } while( true );\n        }\n    }\n    fcn.0042e629();\ncode_r0x00430e88:\n    iVar1 = fcn.0042f330();\n    iVar1 = (**(**(iVar1 + 0x3c) + 4))();\n    return iVar1;\n}\n",
        "token_count": 755
    },
    "004313b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004313b4(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t *piVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.004382d6(8);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if ((arg_8h_00 != 0) && (iVar1 = fcn.00430586(arg_8h_00),  iVar1 == 0)) {\n        iVar1 = fcn.00430586(arg_8h_00);\n        if (iVar1 == 0) {\n            uVar2 = fcn.0042df4b(0x42fd74);\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + 8) = uVar2;\n            iVar1 = fcn.00436896();\n            if (iVar1 == 0) {\n                fcn.0042e60f();\n            }\n            (**(extraout_ECX + 0x14))(iVar1);\n            piVar3 = fcn.00430711(arg_8h_00);\n            uVar2 = *(unaff_EBP + 8);\n            *(unaff_EBP + -4) = 0xffffffff;\n            *piVar3 = iVar1;\n            fcn.0042df4b(uVar2);\n            piVar3 = *(extraout_ECX + 0x58) + iVar1;\n            *piVar3 = arg_8h_00;\n            if (*(extraout_ECX + 0x5c) == 2) {\n                piVar3[1] = arg_8h_00;\n            }\n        }\n        else {\n            piVar3 = *(extraout_ECX + 0x58) + iVar1;\n            *piVar3 = arg_8h_00;\n            if (*(extraout_ECX + 0x5c) == 2) {\n                piVar3[1] = arg_8h_00;\n            }\n        }\n    }\n    fcn.00438342();\n    return;\n}\n",
        "token_count": 513
    },
    "00431467": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431467(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (param_1 != 0) {\n        var_8h = -(*(param_1 + 0x44) != 0);\n        while (var_8h != 0) {\n            fcn.00430609(&var_8h, &var_ch, &var_4h);\n            puVar1 = *(param_1 + 0x58) + var_4h;\n            *puVar1 = 0;\n            if (*(param_1 + 0x5c) == 2) {\n                puVar1[1] = 0;\n            }\n            (**(param_1 + 0x18))(var_4h);\n        }\n        fcn.0043050a();\n        fcn.0043687c();\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "00431533": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00431533(void)\n\n{\n    uint *arg_8h;\n    uint lpVersionInformation;\n    uint var_94h;\n    uint var_88h;\n    uint32_t var_4h;\n    \n    var_4h = *0x45d5bc ^ &stack0xfffffffc;\n    fcn.00439d20(&var_94h, 0, 0x90);\n    arg_8h = &lpVersionInformation;\n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n    fcn.00436f55(arg_8h);\n    return;\n}\n",
        "token_count": 143
    },
    "004317d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.004317d0(int32_t *arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint32_t arg_18h, uint32_t *arg_1ch, \n            uint *arg_20h, uint noname_7, uint *arg_28h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    int32_t *piVar5;\n    uint32_t *puVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t *piVar10;\n    uint var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_34h;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    int32_t vtime;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar6 = arg_1ch;\n    piVar5 = arg_8h;\n    iVar9 = 0;\n    var_20h._0_2_ = 0;\n    if (arg_8h == NULL) {\n        return -0x7ff8ffa9;\n    }\n    if (arg_1ch == NULL) {\n        return -0x7ffdfff8;\n    }\n    uVar2 = arg_1ch[2];\n    if (5 < uVar2) {\n        return -0x7ffdfff2;\n    }\n    arg_8h = NULL;\n    if (arg_1ch[3] != 0) {\n        arg_1ch = arg_1ch[1];\n        do {\n            uVar3 = *arg_1ch;\n            if (uVar2 <= uVar3) {\n                return -0x7ffdfff2;\n            }\n            arg_1ch = arg_1ch + 1;\n            arg_8h = arg_8h + 1;\n            (&var_44h)[uVar3] = *puVar6 + iVar9;\n            iVar9 = iVar9 + 0x10;\n        } while (arg_8h < puVar6[3]);\n    }\n    if (arg_8h < uVar2) {\n        iVar9 = arg_8h * 0x10 + *puVar6;\n        iVar8 = uVar2 - arg_8h;\n        piVar10 = &var_48h + (uVar2 - arg_8h);\n        do {\n            *piVar10 = iVar9;\n            iVar9 = iVar9 + 0x10;\n            piVar10 = piVar10 + -1;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    iVar9 = -0x7ffdfffd;\n    if (arg_28h == NULL) {\n        arg_28h = &arg_18h;\n    }\n    if (arg_20h == NULL) {\n        arg_20h = &var_20h;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&vtime);\n    pcVar4 = _sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime;\n    if (0x12 < arg_ch + 0x139aU) goto code_r0x00431d3a;\n    // switch table (19 cases) at 0x431d50\n    switch(*((arg_ch + 0x139aU) * 4 + 0x431d50)) {\n    case 0x4318ad:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 100))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3]);\n            goto code_r0x00431d3a;\n        }\n        break;\n    case 0x4318ce:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&vtime, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x00431ac6;\n                var_44h = &vtime;\n            }\n            arg_18h = var_44h[2];\n            if (*var_40h != 3) {\n                iVar9 = (*pcVar4)(&vtime, var_40h, 0, 3);\n                if (iVar9 < 0) {\ncode_r0x00431cb2:\n                    *arg_28h = 1;\n                    goto code_r0x00431d3a;\n                }\n                var_40h = &vtime;\n            }\n            iVar9 = (**(*piVar5 + 0x60))(piVar5, arg_18h, var_40h[2], arg_20h);\n            goto code_r0x00431d3a;\n        }\n        break;\n    case 0x43193b:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&vtime, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x00431ac6;\n                var_44h = &vtime;\n            }\n            iVar9 = (**(*piVar5 + 0x5c))(piVar5, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h);\n            goto code_r0x00431d3a;\n        }\n        break;\n    case 0x431988:\n        if (puVar6[2] == 5) {\n            while ((uVar1 = *var_44h,  (uVar1 & 0x4000) != 0 && ((uVar1 & 0xf) != 0))) {\n                if ((uVar1 & 0xc) == 0) {\n                    vtime = var_44h[2];\n                }\n                else {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h[2]);\n                    *var_44h[2] = 3;\n                    vtime = var_44h[2] + 8;\n                }\n            }\n            *arg_28h = 0;\n            iVar9 = (**(*piVar5 + 0x58))\n                              (piVar5, vtime, var_ch, var_8h, var_4h, *var_34h, var_34h[1], var_34h[2], var_34h[3]);\n            goto code_r0x00431d3a;\n        }\n        break;\n    case 0x4319f1:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&vtime, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x00431ac6;\n                var_44h = &vtime;\n            }\n            iVar9 = (**(*piVar5 + 0x54))(piVar5, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3]);\n            goto code_r0x00431d3a;\n        }\n        break;\n    case 0x431a3b:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x50))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\ncode_r0x00431c69:\n            if (-1 < iVar9) {\n                *arg_20h = 8;\n            }\n            goto code_r0x00431d3a;\n        }\n        break;\n    case 0x431a63:\n        iVar9 = (**(*piVar5 + 0x4c))(piVar5, arg_20h);\n        goto code_r0x00431d3a;\n    case 0x431a71:\n        iVar9 = (**(*piVar5 + 0x48))(piVar5, arg_20h);\n        goto code_r0x00431d3a;\n    case 0x431a7f:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x44))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00431c69;\n        }\n        break;\n    case 0x431aa7:\n        if (puVar6[2] == 2) {\n            uVar1 = *var_44h;\n            if (((uVar1 & 0x4000) != 0) && ((uVar1 & 0xc) == 0)) {\n                iVar9 = -0x7ffdfffb;\ncode_r0x00431ac6:\n                *arg_28h = 0;\n                goto code_r0x00431d3a;\n            }\n            if (uVar1 == 0x400c) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h[2]);\n                *var_44h[2] = 8;\n                puVar7 = var_44h[2] + 8;\n            }\n            else if (uVar1 == 0x4008) {\n                puVar7 = var_44h[2];\n            }\n            else {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h);\n                puVar7 = var_44h + 2;\n                *var_44h = 8;\n            }\n            iVar9 = (**(*piVar5 + 0x40))(piVar5, puVar7, *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h + 2);\n            goto code_r0x00431d0f;\n        }\n        break;\n    case 0x431b29:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x3c))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00431c69;\n        }\n        break;\n    case 0x431b51:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x38))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x00431d3a;\n        }\n        break;\n    case 0x431b75:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x34))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x00431d3a;\n        }\n        break;\n    case 0x431b99:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x30))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00431c69;\n        }\n        break;\n    case 0x431bc1:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x00431c42;\n            if (puVar6[2] == 2) {\n                var_30h = *var_44h;\n                uStack48 = var_44h[1];\n                uStack44 = var_44h[2];\n                uStack40 = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&vtime, var_40h, 0, 3);\n                    if (iVar9 < 0) goto code_r0x00431cb2;\n                    var_40h = &vtime;\n                }\n                iVar9 = (**(*piVar5 + 0x6c))(piVar5, var_30h, uStack48, uStack44, uStack40, var_40h[2]);\n                goto code_r0x00431d3a;\n            }\n        }\n        else if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x2c))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00431c69;\n        }\n        break;\n    case 0x431c42:\ncode_r0x00431c42:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x00431cda;\n            if (puVar6[2] == 2) {\n                var_30h = *var_44h;\n                uStack48 = var_44h[1];\n                uStack44 = var_44h[2];\n                uStack40 = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&vtime, var_40h, 0, 3);\n                    if (iVar9 < 0) goto code_r0x00431cb2;\n                    var_40h = &vtime;\n                }\n                iVar9 = (**(*piVar5 + 0x68))(piVar5, var_30h, uStack48, uStack44, uStack40, var_40h[2]);\n                goto code_r0x00431d3a;\n            }\n        }\n        else if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x28))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00431c69;\n        }\n        break;\n    case 0x431cda:\ncode_r0x00431cda:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x24))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00431d2c;\n        }\n        break;\n    case 0x431d02:\n        iVar9 = (**(*piVar5 + 0x20))(piVar5, arg_20h + 2);\ncode_r0x00431d0f:\n        if (-1 < iVar9) {\n            *arg_20h = 3;\n        }\n        goto code_r0x00431d3a;\n    case 0x431d1f:\n        iVar9 = (**(*piVar5 + 0x1c))(piVar5, arg_20h + 2);\ncode_r0x00431d2c:\n        if (-1 < iVar9) {\n            *arg_20h = 9;\n        }\n        goto code_r0x00431d3a;\n    }\n    iVar9 = -0x7ffdfff2;\ncode_r0x00431d3a:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&vtime);\n    return iVar9;\n}\n",
        "token_count": 3771
    },
    "00431a7e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00431a7e(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint arg_20h)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    int32_t *unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint pvargDest;\n    \n    *(unaff_EBX + 0xf01087f) = *(unaff_EBX + 0xf01087f) + in_EAX;\n    *in_EAX = *in_EAX + in_EAX;\n    iVar1 = (**(*unaff_EBX + 0x44))();\n    if (-1 < iVar1) {\n        **(unaff_EBP + 0x20) = 8;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x10);\n    return iVar1;\n}\n",
        "token_count": 227
    },
    "00431b6f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint __cdecl\nfcn.00431b6f(uint noname_0, uint noname_1, uint noname_2, int32_t *noname_3, uint noname_4, uint noname_5, \n            char **arg_20h)\n\n{\n    uint uVar1;\n    uint var_44h;\n    \n    *arg_20h = *arg_20h + arg_20h;\n    *(noname_3 + 0xf01087f) = *(noname_3 + 0xf01087f) + arg_20h;\n    *arg_20h = *arg_20h + arg_20h;\n    uVar1 = (**(*noname_3 + 0x34))();\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n    return uVar1;\n}\n",
        "token_count": 193
    },
    "00431d9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00431d9c(uint noname_0, int32_t arg_ch, uint32_t arg_10h, uint noname_3, int32_t arg_18h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_1h;\n    \n    uVar3 = 0;\n    if (arg_10h != 0) {\n        do {\n            bVar1 = false;\n            uVar4 = 0;\n            do {\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(*(arg_ch + uVar3 * 4), *(uVar4 + 0x45d2c8));\n                if (iVar2 == 0) {\n                    bVar1 = true;\n                    *(arg_18h + uVar3 * 4) = *(uVar4 + 0x45d278);\n                }\n                uVar4 = uVar4 + 4;\n            } while (uVar4 < 0x4c);\n            if (!bVar1) {\n                return 0x80020006;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_10h);\n    }\n    return 0;\n}\n",
        "token_count": 306
    },
    "00431f2d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00431f2d(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    while( true ) {\n        if (arg_8h[4] == 0) {\n            return NULL;\n        }\n        if ((((arg_ch == *arg_8h) && (arg_10h == arg_8h[1])) && (arg_8h[2] <= arg_14h)) &&\n           (arg_14h < arg_8h[3] || arg_14h == arg_8h[3])) break;\n        arg_8h = arg_8h + 6;\n    }\n    return arg_8h;\n}\n",
        "token_count": 169
    },
    "0043238c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0043238c(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042ec1a(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00432422": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00432422(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042ec1a();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "004324b6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004324b6(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042ec1a();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00432565": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00432565(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042ec1a();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "004325f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004325f3(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042ec1a();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00433529": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00433529(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(*(param_1 + 0xc));\n        *(param_1 + 4) = iVar1;\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(*(param_1 + 0xc));\n            *(param_1 + 4) = iVar1;\n            *(param_1 + 8) = iVar1 != 0;\n        }\n    }\n    return *(param_1 + 4);\n}\n",
        "token_count": 159
    },
    "0043355b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043355b(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uVar1 = fcn.00433529(\"InitCommonControls\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x10) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x10);\n    return;\n}\n",
        "token_count": 124
    },
    "004335e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004335e8(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) != 2) {\n        fcn.0042ec1a(0, *(unaff_EBP + -0x1c));\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "004335f9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004335f9(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x14) == 0) {\n        uVar1 = fcn.00433529(\"InitCommonControlsEx\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x14) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x14);\n    return;\n}\n",
        "token_count": 125
    },
    "00433698": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00433698(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042ec1a(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00433757": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00433757(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.004382a3(0);\n    iVar1 = fcn.0042f363();\n    if ((*(iVar1 + 0x14) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0042df4b(0x42fd74);\n        iVar3 = fcn.0042df5d(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.0043132b(0x44fc80, 0x433502, 0x436292, 0x20, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x14) = uVar4;\n        fcn.0042df4b(uVar2);\n    }\n    fcn.00438342();\n    return;\n}\n",
        "token_count": 316
    },
    "00433873": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00433873(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uStack16;\n    \n    iVar3 = fcn.0042fb30(0x42e643);\n    if (iVar3 == 0) {\n        uStack16 = 0x45cf68;\n        fcn.00437a5e(&stack0xfffffff0, 0x4534c0);\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    iVar4 = fcn.0042f330();\n    if ((*(iVar4 + 0x14) != '\\0') && (*(iVar3 + 0x28) != 0)) {\n        uStack16 = 0x4338a7;\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)();\n        *(iVar3 + 0x28) = 0;\n    }\n    if (*(iVar3 + 0x14) != 0) {\n        *(iVar3 + 0x14) = 0;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 266
    },
    "004338f9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004338f9(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    \n    iVar2 = fcn.004307fb();\n    if (iVar2 == 0) goto code_r0x00433944;\n    if (*(iVar2 + 0x20) == param_1) {\n        iVar3 = fcn.0042f330();\n        if (*(iVar3 + 0x14) == '\\0') {\n            iVar3 = fcn.0042f330();\n            if (iVar2 == *(iVar3 + 4)) {\n                iVar3 = fcn.00436ac3();\n                if (iVar3 == 0) goto code_r0x00433939;\n            }\n            fcn.00436a09(0);\n        }\ncode_r0x00433939:\n        *(iVar2 + 0x20) = 0;\n    }\n    if (*(iVar2 + 0x24) == param_1) {\n        *(iVar2 + 0x24) = 0;\n    }\ncode_r0x00433944:\n    if (param_1[0x12] != NULL) {\n        (**(*param_1[0x12] + 0x50))();\n        param_1[0x12] = 0;\n    }\n    if (param_1[0x13] != NULL) {\n        (**(*param_1[0x13] + 4))(1);\n    }\n    param_1[0x13] = 0;\n    if ((*(param_1 + 0xf) & 1) != 0) {\n        iVar2 = fcn.0042f363();\n        iVar2 = *(iVar2 + 0x3c);\n        if ((iVar2 != 0) && (*(iVar2 + 0x20) != 0)) {\n            fcn.00439d20(&var_30h, 0, 0x30);\n            var_28h = param_1[8];\n            var_30h = 0x28;\n            var_2ch = 1;\n            var_24h = var_28h;\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x20), 0x405, 0, &var_30h);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    iVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1[8], 0xfffffffc);\n    fcn.00433727();\n    iVar3 = (*pcVar1)(param_1[8], 0xfffffffc);\n    if (iVar3 == iVar2) {\n        piVar4 = (**(*param_1 + 0xf0))();\n        if (*piVar4 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowLongA)(param_1[8], 0xfffffffc, *piVar4);\n        }\n    }\n    fcn.00433845();\n    (**(*param_1 + 0x114))();\n    return;\n}\n",
        "token_count": 730
    },
    "00433bf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00433bf0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    if (*(in_ECX + 9) != '\\0') {\n        var_4h = NULL;\n        iVar2 = (**(*in_ECX + 0xe4))(arg_8h, arg_ch, &var_4h);\n        if (-1 < iVar2) {\n            return var_4h;\n        }\n    }\n    piVar1 = fcn.00433727();\n    return piVar1;\n}\n",
        "token_count": 162
    },
    "00433d9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00433d9c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_44h;\n    uint var_28h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.004382d6(0x38);\n    iVar1 = fcn.0042fb30(0x42e643);\n    iVar4 = 0;\n    *(unaff_EBP + -0x14) = iVar1;\n    if (iVar1 == 0) {\n        fcn.0042e629();\n        iVar4 = extraout_EDX;\n    }\n    puVar5 = iVar1 + 0x58;\n    puVar6 = unaff_EBP + -0x44;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    iVar3 = *(unaff_EBP + 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(iVar1 + 0x58) = *(unaff_EBP + 0xc);\n    *(iVar1 + 0x60) = *(unaff_EBP + 0x14);\n    uVar2 = *(unaff_EBP + 0x18);\n    *(iVar1 + 0x5c) = iVar3;\n    *(iVar1 + 100) = uVar2;\n    *(unaff_EBP + -4) = iVar4;\n    if ((iVar3 == 2) && (arg_8h_00[0x13] != iVar4)) {\n        (**(*arg_8h_00[0x13] + 0x60))(iVar4);\n    }\n    *(unaff_EBP + 8) = 0;\n    if (iVar3 == 0x110) {\n        fcn.004326e2(arg_8h_00, unaff_EBP + -0x28, unaff_EBP + 8);\n    }\n    uVar2 = (**(*arg_8h_00 + 0x108))(iVar3, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18));\n    *(unaff_EBP + 0x18) = uVar2;\n    if (iVar3 == 0x110) {\n        fcn.00433d20(arg_8h_00, unaff_EBP + -0x28, *(unaff_EBP + 8));\n    }\n    puVar5 = unaff_EBP + -0x44;\n    puVar6 = iVar1 + 0x58;\n    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    fcn.00438342();\n    return;\n}\n",
        "token_count": 804
    },
    "00433ed4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00433ed4(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004382a3(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWnd.0;\n    *(unaff_EBP + -4) = 0;\n    if ((((extraout_ECX[8] != NULL) && (extraout_ECX != 0x46b7c0)) && (extraout_ECX != 0x46b818)) &&\n       ((extraout_ECX != 0x46b870 && (extraout_ECX != 0x46b8c8)))) {\n        fcn.00433a0a();\n    }\n    if (extraout_ECX[0x13] != NULL) {\n        (**(*extraout_ECX[0x13] + 4))(1);\n    }\n    pcVar1 = extraout_ECX[0x14];\n    if ((pcVar1 != NULL) && (*(pcVar1 + 0x28) == extraout_ECX)) {\n        *(pcVar1 + 0x28) = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00431020();\n    fcn.00438342();\n    return;\n}\n",
        "token_count": 339
    },
    "0043400b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043400b(uint noname_0, uint Msg, uint wParam, uint lParam, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    code *unaff_EDI;\n    \n    do {\n        if (*(unaff_EBP + 0x1c) == 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)(unaff_ESI, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14))\n            ;\n        }\n        else {\n            iVar1 = fcn.004337f2(unaff_ESI);\n            if (iVar1 != 0) {\n                fcn.00433d9c(iVar1, *(iVar1 + 0x20), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n            }\n        }\n        if (*(unaff_EBP + 0x18) != 0) {\n            iVar1 = (*unaff_EDI)(unaff_ESI);\n            if (iVar1 != 0) {\n                fcn.00433ff9(unaff_ESI);\n            }\n        }\n        unaff_ESI = (*_sym.imp.USER32.dll_GetWindow)(unaff_ESI, 2);\n    } while (unaff_ESI != 0);\n    return;\n}\n",
        "token_count": 335
    },
    "00434a5b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434a5b(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_8h == 0) {\n        fcn.00401000(0x80070057);\n    }\n    iVar1 = fcn.0043a5aa(arg_8h, arg_ch);\n    uVar2 = fcn.0042e31c(iVar1);\n    fcn.0043a27a(uVar2, iVar1 + 1, arg_8h, arg_ch);\n    fcn.0042e1bb(iVar1);\n    return;\n}\n",
        "token_count": 148
    },
    "00434b11": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00434b11(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0xc) == 0) {\n        return 0;\n    }\n    uVar1 = (**(**(param_1 + 0xc) + 0xc))(*(param_1 + 0xc), 0);\n    return uVar1;\n}\n",
        "token_count": 89
    },
    "00434b26": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00434b26(int32_t *param_1)\n\n{\n    uint uVar1;\n    \n    if ((((*param_1 == 0) && (param_1[1] == 0)) && (param_1[2] == 0xc0)) && (param_1[3] == 0x46000000)) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 109
    },
    "00434b51": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00434b51(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    if ((arg_8h == 0) || (arg_ch == NULL)) {\n        iVar2 = -0x7ff8ffa9;\n    }\n    else if (arg_14h == NULL) {\n        iVar2 = -0x7fffbffd;\n    }\n    else {\n        *arg_14h = NULL;\n        iVar2 = fcn.00434b26(arg_10h);\n        if (iVar2 == 0) {\n            for (; pcVar1 = arg_ch[2],  pcVar1 != NULL; arg_ch = arg_ch + 3) {\n                iVar2 = *arg_ch;\n                if ((iVar2 == 0) || (iVar3 = fcn.00434ad7(iVar2, arg_10h),  iVar3 != 0)) {\n                    if (pcVar1 == 0x1) goto code_r0x00434b85;\n                    iVar3 = (*pcVar1)(arg_8h, arg_10h, arg_14h, arg_ch[1]);\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    if ((iVar2 != 0) && (iVar3 < 0)) {\n                        return iVar3;\n                    }\n                }\n            }\n            iVar2 = -0x7fffbffe;\n        }\n        else {\ncode_r0x00434b85:\n            piVar4 = arg_ch[1] + arg_8h;\n            (**(*piVar4 + 4))(piVar4);\n            *arg_14h = piVar4;\n            iVar2 = 0;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 429
    },
    "00434bf2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434bf2(code **param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    param_1[5] = 0xc0000001;\n    fcn.00434b11();\n    iVar2 = fcn.0042f330();\n    iVar2 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(iVar2 + 0x2c);\n    if (iVar2 != 0) {\n        return;\n    }\n    iVar2 = fcn.0042f330();\n    if (*(iVar2 + 0x30) == 0) {\n        fcn.00436ae3(1);\n        iVar2 = fcn.0042f330();\n        iVar2 = *(iVar2 + 4);\n        if ((iVar2 == 0) || (*(iVar2 + 0x20) == 0)) {\n            iVar2 = fcn.0042f330();\n            if (*(iVar2 + 0x14) == '\\0') {\n                fcn.00436a09(0);\n            }\n        }\n        else {\n            iVar1 = fcn.00430a67();\n            if (iVar1 != 0) {\n    // WARNING: Could not recover jumptable at 0x00436b27. Too many branches\n    // WARNING: Treating indirect jump as call\n                (**(**(iVar2 + 0x20) + 0x60))();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 410
    },
    "00435149": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00435149(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar1 = fcn.0042fb30(0x42e643);\n    if (iVar1 == 0) {\n        fcn.0042e629();\n    }\n    if (*(iVar1 + 0x14) != unaff_retaddr) {\n        if (*(iVar1 + 0x28) == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            iVar3 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(5, 0x434ef6, 0, uVar2);\n            *(iVar1 + 0x28) = iVar3;\n            if (iVar3 == 0) {\n                fcn.0042e60f();\n            }\n        }\n        *(iVar1 + 0x14) = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "004352f7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl fcn.004352f7(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    code **ppcVar6;\n    uint32_t uVar7;\n    int32_t *arg_8h_00;\n    int32_t iVar8;\n    code *pcVar9;\n    int32_t unaff_EBP;\n    int16_t iVar10;\n    int16_t iVar11;\n    uint var_7ch;\n    uint var_5ch;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint *var_24h;\n    uint *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004382a3(0x70);\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = 0x7fffffff;\n    uVar7 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    if (uVar7 == 0x111) {\n        iVar3 = (**(*arg_8h_00 + 0xe8))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n        if (iVar3 != 0) {\ncode_r0x00435335:\n            *(unaff_EBP + -0x10) = 1;\n            goto code_r0x004357ee;\n        }\n        goto code_r0x00435507;\n    }\n    if (uVar7 == 0x4e) {\n        if (**(unaff_EBP + 0x10) != 0) {\n            iVar3 = (**(*arg_8h_00 + 0xec))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), unaff_EBP + -0x10);\n            goto joined_r0x004357cb;\n        }\n        goto code_r0x00435507;\n    }\n    var_24h = *(unaff_EBP + 0x10);\n    if (uVar7 == 6) {\n        uVar4 = fcn.004337cb(var_24h);\n        fcn.00434cc6(arg_8h_00, *(unaff_EBP + 0xc), uVar4);\n    }\n    iVar10 = var_24h;\n    if ((uVar7 == 0x20) && (iVar3 = fcn.00434d3c(arg_8h_00, iVar10, var_24h >> 0x10),  iVar3 != 0))\n    goto code_r0x00435335;\n    if ((((arg_8h_00[0x13] != 0) && (0 < *(arg_8h_00[0x13] + 0x74))) &&\n        ((((0x1ff < uVar7 && (uVar7 < 0x20a)) || ((0xff < uVar7 && (uVar7 < 0x110)))) || (uVar7 - 0x281 < 0x11)))) &&\n       (iVar3 = (**(*arg_8h_00[0x13] + 0x94))(uVar7, *(unaff_EBP + 0xc), var_24h, unaff_EBP + -0x10),  iVar3 != 0))\n    goto code_r0x004357ee;\n    uVar5 = (**(*arg_8h_00 + 0x28))();\n    uVar7 = *(unaff_EBP + 8);\n    *(unaff_EBP + 0x10) = uVar5;\n    fcn.00432656(7);\n    iVar8 = ((uVar5 ^ uVar7) & 0x1ff) * 0xc;\n    iVar3 = *(iVar8 + 0x469f90);\n    *(unaff_EBP + -0x18) = iVar8 + 0x469f90;\n    if ((*(unaff_EBP + 8) != iVar3) || (*(unaff_EBP + 0x10) != *(iVar8 + 0x469f98))) {\n        puVar1 = *(unaff_EBP + -0x18);\n        ppcVar6 = *(unaff_EBP + 0x10);\n        *puVar1 = *(unaff_EBP + 8);\n        puVar1[2] = ppcVar6;\n        while (*ppcVar6 != NULL) {\n            if (*(unaff_EBP + 8) < 0xc000) {\n                iVar3 = fcn.00431f2d(ppcVar6[1], *(unaff_EBP + 8), 0, 0);\n                *(unaff_EBP + 0x10) = iVar3;\n                if (iVar3 != 0) {\n                    *(*(unaff_EBP + -0x18) + 4) = iVar3;\n                    fcn.00432685();\n                    goto code_r0x00435495;\n                }\n            }\n            else {\n                iVar3 = *(*(unaff_EBP + 0x10) + 4);\n                uVar4 = 0xc000;\n                while (iVar3 = fcn.00431f2d(iVar3, uVar4, 0, 0),  iVar3 != 0) {\n                    if (**(iVar3 + 0x10) == *(unaff_EBP + 8)) {\n                        *(*(unaff_EBP + -0x18) + 4) = iVar3;\n                        fcn.00432685();\n                        goto code_r0x004357e0;\n                    }\n                    iVar3 = iVar3 + 0x18;\n                }\n                ppcVar6 = *(unaff_EBP + 0x10);\n            }\n            ppcVar6 = (**ppcVar6)();\n            *(unaff_EBP + 0x10) = ppcVar6;\n        }\n        *(*(unaff_EBP + -0x18) + 4) = 0;\n        fcn.00432685();\n        goto code_r0x00435507;\n    }\n    iVar3 = *(iVar8 + 0x469f94);\n    *(unaff_EBP + 0x10) = iVar3;\n    fcn.00432685();\n    if (iVar3 == 0) goto code_r0x00435507;\n    if (0xbfff < *(unaff_EBP + 8)) {\ncode_r0x004357e0:\n        pcVar9 = *(iVar3 + 0x14);\ncode_r0x004357e3:\n        var_28h = *(unaff_EBP + 0xc);\n        goto code_r0x004357e7;\n    }\ncode_r0x00435495:\n    pcVar9 = *(*(unaff_EBP + 0x10) + 0x14);\n    iVar3 = *(*(unaff_EBP + 0x10) + 0x10);\n    iVar11 = var_24h >> 0x10;\n    var_14h = var_24h;\n    // switch table (69 cases) at 0x43580f\n    switch(iVar3) {\n    case 1:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.00436678(var_14h);\n        goto code_r0x00435536;\n    case 2:\n    case 3:\n    case 4:\n    case 0x1b:\n    case 0x1c:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x00435536;\n    case 5:\n    case 0xc:\n        var_18h = var_24h & 0xffff;\n        uVar7 = *(unaff_EBP + 0xc);\n        uVar5 = fcn.004337cb(uVar7, var_18h, var_24h >> 0x10);\n        goto code_r0x0043556b;\n    case 6:\n        var_24h = *(unaff_EBP + 0xc);\n        var_28h = fcn.004337cb();\n        goto code_r0x004357e7;\n    case 7:\n    case 0xd:\ncode_r0x00435536:\n        uVar4 = (*pcVar9)(var_14h);\ncode_r0x004357eb:\n        *(unaff_EBP + -0x10) = uVar4;\n        break;\n    case 8:\n        fcn.004362a0();\n        uVar4 = var_24h[1];\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0x24) = uVar4;\n        fcn.0043269f();\n        uVar4 = *var_24h;\n        uVar2 = var_24h[2];\n        *(unaff_EBP + -4) = 2;\n        *(unaff_EBP + -0x5c) = uVar4;\n        iVar3 = fcn.004337f2(uVar4);\n        if (iVar3 == 0) {\n            if ((arg_8h_00[0x13] != 0) && (iVar3 = fcn.00430586(*(unaff_EBP + -0x5c)),  iVar3 != 0)) {\n                *(unaff_EBP + -0x2c) = iVar3;\n            }\n            iVar3 = unaff_EBP + -0x7c;\n        }\n        uVar4 = (*pcVar9)(unaff_EBP + -0x28, iVar3, uVar2);\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x5c) = 0;\n        *(unaff_EBP + -0x10) = uVar4;\n        *(unaff_EBP + -4) = 1;\n        fcn.00433ed4();\n        goto code_r0x00435616;\n    case 9:\n        fcn.004362a0();\n        uVar4 = var_24h[2];\n        *(unaff_EBP + -0x24) = var_24h[1];\n        *(unaff_EBP + -4) = 3;\n        uVar4 = (*pcVar9)(unaff_EBP + -0x28, uVar4);\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x10) = uVar4;\ncode_r0x00435616:\n        *(unaff_EBP + -4) = 0;\n        fcn.004366b7();\n        break;\n    case 10:\n        uVar7 = fcn.004337cb(var_24h, *(unaff_EBP + 0xc) >> 0x10);\n        var_18h = var_24h;\n        goto code_r0x00435634;\n    case 0xb:\n        var_24h = *(unaff_EBP + 0xc) >> 0x10;\n        var_28h = *(unaff_EBP + 0xc);\n        goto code_r0x004357e7;\n    case 0xe:\n    case 0x2f:\n        goto code_r0x004357e3;\n    case 0xf:\n        var_18h = fcn.0043697f(var_24h);\n        uVar7 = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x00435634:\n        uVar5 = *(unaff_EBP + 0xc);\ncode_r0x0043556b:\n        uVar4 = (*pcVar9)(uVar5, uVar7, var_18h);\n        goto code_r0x004357eb;\n    case 0x10:\n    case 0x12:\n    case 0x15:\n    case 0x1e:\n    case 0x2d:\n    case 0x32:\n        goto code_r0x0043575c;\n    case 0x11:\n    case 0x14:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x00435769;\n    case 0x13:\n        (*pcVar9)();\n        break;\n    case 0x16:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        var_18h = *(unaff_EBP + 0xc);\n        goto code_r0x0043575f;\n    case 0x17:\n        var_14h = iVar11;\n        var_18h = iVar10;\n        goto code_r0x0043575f;\n    case 0x18:\n    case 0x19:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        goto code_r0x00435788;\n    case 0x1a:\n        fcn.004337cb(var_24h);\ncode_r0x0043575c:\n        var_18h = *(unaff_EBP + 0xc);\n        goto code_r0x0043575f;\n    case 0x1d:\n    case 0x28:\n    case 0x31:\n        uVar4 = (*pcVar9)();\n        goto code_r0x004357eb;\n    case 0x1f:\n        var_14h = *(unaff_EBP + 0xc);\n        var_18h = fcn.004337cb(var_14h);\n        fcn.004337cb(var_24h, var_18h);\n        uVar7 = arg_8h_00[8] == var_24h;\n        goto code_r0x0043578c;\n    case 0x20:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.00436678(var_14h);\n        goto code_r0x00435769;\n    case 0x21:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.0043697f(var_14h);\n        goto code_r0x00435769;\n    case 0x22:\n        var_14h = iVar11;\n        var_18h = iVar10;\n        uVar7 = fcn.0043697f(*(unaff_EBP + 0xc), var_18h, var_14h);\n        goto code_r0x0043578c;\n    case 0x23:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x004356ee;\n    case 0x24:\ncode_r0x004356ee:\n        fcn.004337cb(var_14h);\n        goto code_r0x00435769;\n    case 0x25:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        goto code_r0x0043570b;\n    case 0x26:\n        var_18h = iVar10;\n        var_14h = iVar11;\ncode_r0x0043570b:\n        uVar7 = fcn.004337cb(*(unaff_EBP + 0xc), var_18h, var_14h);\n        goto code_r0x0043578c;\n    case 0x27:\n        var_18h = fcn.004337cb(*(unaff_EBP + 0xc), var_24h);\n        goto code_r0x0043575f;\n    case 0x29:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        var_18h = fcn.004337cb(var_24h, var_14h);\n        goto code_r0x00435776;\n    case 0x2a:\n    case 0x2b:\n        var_18h = *(unaff_EBP + 0xc);\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        *(unaff_EBP + 8) = var_18h;\n        *(unaff_EBP + 0xc) = var_14h;\n        if (iVar3 == 0x2a) {\n            var_18h = fcn.004337cb(var_24h);\n            uVar7 = *(unaff_EBP + 0xc);\n            var_14h = var_24h;\n            goto code_r0x0043578c;\n        }\ncode_r0x0043575f:\n        (*pcVar9)(var_18h, var_14h);\n        break;\n    case 0x2c:\n    case 0x33:\ncode_r0x00435769:\n        (*pcVar9)(var_14h);\n        break;\n    case 0x2e:\n    case 0x36:\n        (*pcVar9)(*(unaff_EBP + 0xc), var_24h);\n        goto code_r0x00435335;\n    case 0x30:\n    case 0x45:\n        var_28h = iVar10;\n        var_24h = iVar11;\ncode_r0x004357e7:\n        uVar4 = (*pcVar9)(var_28h, var_24h);\n        goto code_r0x004357eb;\n    case 0x34:\n        var_18h = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x00435776:\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0043578c;\n    case 0x35:\n        var_18h = iVar10;\n        var_14h = iVar11;\ncode_r0x00435788:\n        uVar7 = *(unaff_EBP + 0xc);\ncode_r0x0043578c:\n        (*pcVar9)(uVar7, var_18h, var_14h);\n        break;\n    case 0x37:\n        iVar3 = (*pcVar9)(*(unaff_EBP + 0xc), *(unaff_EBP + 0xc) >> 0x10, iVar10, iVar11);\n        *(unaff_EBP + -0x10) = iVar3;\n        goto joined_r0x004357cb;\n    case 0x44:\n        iVar3 = (*pcVar9)();\n        *(unaff_EBP + -0x10) = iVar3;\njoined_r0x004357cb:\n        if (iVar3 != 0) {\ncode_r0x00435507:\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00432685();\n            goto code_r0x00435515;\n        }\n    }\ncode_r0x004357ee:\n    if (*(unaff_EBP + 0x14) != NULL) {\n        **(unaff_EBP + 0x14) = *(unaff_EBP + -0x10);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00432685();\ncode_r0x00435515:\n    fcn.00438342();\n    return;\n}\n",
        "token_count": 4417
    },
    "00435d8f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00435d8f(uint arg_8h)\n\n{\n    int32_t lpWndClass;\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_38h;\n    uint var_4h;\n    \n    fcn.004382d6(0x30);\n    lpWndClass = *(unaff_EBP + 8);\n    iVar2 = fcn.004323c3(*(lpWndClass + 0x10), *(lpWndClass + 0x24), unaff_EBP + -0x38);\n    if (((iVar2 == 0) && (iVar1 = fcn.00432330(lpWndClass),  iVar1 != 0)) &&\n       (iVar2 = fcn.0042f330(),  *(iVar2 + 0x14) != '\\0')) {\n        fcn.0042fbfc(1);\n        *(unaff_EBP + -4) = 0;\n        fcn.0042f330();\n        fcn.0042e4e6(*(lpWndClass + 0x24));\n        fcn.0042e39f(10);\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0042fc69(1);\n    }\n    fcn.00438342();\n    return;\n}\n",
        "token_count": 315
    },
    "00436604": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00436604(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.004382a3(0);\n    iVar1 = fcn.0042f363();\n    if ((*(iVar1 + 0x1c) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0042df4b(0x42fd74);\n        iVar3 = fcn.0042df5d(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.0043132b(0x45062c, 0x436599, 0x436292, 4, 2);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x1c) = uVar4;\n        fcn.0042df4b(uVar2);\n    }\n    fcn.00438342();\n    return;\n}\n",
        "token_count": 316
    },
    "004366b7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004366b7(code **param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = vtable.CDC.0;\n    if (param_1[1] != NULL) {\n        uVar1 = fcn.00436686();\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "004366d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004366d0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.004382a3(0);\n    iVar1 = fcn.0042f363();\n    if ((*(iVar1 + 0x20) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0042df4b(0x42fd74);\n        iVar3 = fcn.0042df5d(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.0043132b(0x450648, 0x4365b5, 0x436292, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x20) = uVar4;\n        fcn.0042df4b(uVar2);\n    }\n    fcn.00438342();\n    return;\n}\n",
        "token_count": 316
    },
    "0043677c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043677c(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.00436752();\n    uVar1 = (*_sym.imp.GDI32.dll_DeleteObject)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 87
    },
    "00436852": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00436852(uint32_t *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    if (param_2 < 4) {\n        param_2 = 4;\n    }\n    if (param_3 < 2) {\n        param_3 = 0x40;\n    }\n    param_1[3] = 0;\n    param_1[2] = 0;\n    *param_1 = param_2;\n    param_1[1] = param_3;\n    return;\n}\n",
        "token_count": 126
    },
    "00436896": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436896(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_1[3] == 0) {\n        iVar1 = fcn.00430ceb(param_1 + 2, param_1[1], *param_1);\n        iVar3 = param_1[1] + -1;\n        piVar2 = iVar1 + 4 + *param_1 * iVar3;\n        for (; -1 < iVar3; iVar3 = iVar3 + -1) {\n            *piVar2 = param_1[3];\n            param_1[3] = piVar2;\n            piVar2 = piVar2 - *param_1;\n        }\n    }\n    param_1[3] = *param_1[3];\n    return;\n}\n",
        "token_count": 198
    },
    "0043690b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043690b(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.004382a3(0);\n    iVar1 = fcn.0042f363();\n    if ((*(iVar1 + 0x18) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0042df4b(0x42fd74);\n        iVar3 = fcn.0042df5d(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.0043132b(0x450734, 0x4368f6, 0x436292, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x18) = uVar4;\n        fcn.0042df4b(uVar2);\n    }\n    fcn.00438342();\n    return;\n}\n",
        "token_count": 316
    },
    "004369d1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004369d1(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.004369a7();\n    uVar1 = (*_sym.imp.USER32.dll_DestroyMenu)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 87
    },
    "00436a25": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436a25(uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalLock;\n    if (*(in_ECX + 0x74) != 0) {\n        var_4h = in_ECX;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(in_ECX + 0x74));\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*(iVar2 + 2) + iVar2, lpString2);\n        if ((iVar2 == 0) && (iVar2 = sub.WINSPOOL.DRV_OpenPrinterA(lpString2, &var_4h, 0),  iVar2 != 0)) {\n            if (*(in_ECX + 0x70) != 0) {\n                fcn.0042fd41(*(in_ECX + 0x70));\n            }\n            uVar3 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, 0, 0, 0);\n            uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, uVar3);\n            *(in_ECX + 0x70) = uVar3;\n            uVar3 = (*pcVar1)(uVar3);\n            iVar2 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, uVar3, 0, 2);\n            if (iVar2 != 1) {\n                fcn.0042fd41(*(in_ECX + 0x70));\n                *(in_ECX + 0x70) = 0;\n            }\n            sub.WINSPOOL.DRV_ClosePrinter(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 427
    },
    "00436c7d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00436c7d(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x436d26;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.00436d52;\n        uStack36 = *0x45d5bc ^ &fcn.00436c7d::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00436c7d::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0043b8bc();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.00436c7d::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 729
    },
    "00436f55": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436f55(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x45d5bc) {\n        return;\n    }\n    *0x46bc28 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x46bc2c = &arg_8h;\n    *0x46bb68 = 0x10001;\n    *0x46bb10 = 0xc0000409;\n    *0x46bb14 = 1;\n    var_328h = *0x45d5bc;\n    var_324h = *0x45d5c0;\n    *0x46bb1c = unaff_retaddr;\n    *0x46bbf4 = in_GS;\n    *0x46bbf8 = in_FS;\n    *0x46bbfc = in_ES;\n    *0x46bc00 = in_DS;\n    *0x46bc04 = unaff_EDI;\n    *0x46bc08 = unaff_ESI;\n    *0x46bc0c = unaff_EBX;\n    *0x46bc10 = in_EDX;\n    *0x46bc14 = in_ECX;\n    *0x46bc18 = in_EAX;\n    *0x46bc1c = unaff_EBP;\n    *0x46bc20 = unaff_retaddr;\n    *0x46bc24 = in_CS;\n    *0x46bc30 = in_SS;\n    *0x46bb60 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.004425e3(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x450878);\n    if (*0x46bb60 == 0) {\n        fcn.004425e3(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 835
    },
    "00437f24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00437f24(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.004379d0(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0043a770": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0043a805: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0043a80a)\n// WARNING: Removing unreachable block (ram,0x0043a838)\n// WARNING: Removing unreachable block (ram,0x0043a810)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043a770(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00439cb8(0x453e10, 0xc);\n    fcn.0043da80(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x46baf8 != 1) {\n        *0x46baf4 = 1;\n        *0x46baf0 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            uVar1 = fcn.0043b6b2(*0x46d744);\n            uVar2 = fcn.0043b6b2(*0x46d740);\n            *(unaff_EBP + -0x1c) = uVar2;\n            if (uVar1 != 0) {\n                while (*(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -4,  uVar1 <= *(unaff_EBP + -0x1c)) {\n                    if (**(unaff_EBP + -0x1c) != NULL) {\n                        (***(unaff_EBP + -0x1c))();\n                    }\n                }\n            }\n            fcn.0043a633(0x449484);\n        }\n        fcn.0043a633(0x449490);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0043d9a8(8);\n    }\n    return;\n}\n",
        "token_count": 503
    },
    "0043ab4f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043ab4f(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043b8bc();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0043b8bc();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "0043ae10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ae10(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00436eab(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0043b8bc();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0043b8bc();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00436e8a(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0043abaf(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 385
    },
    "0044234a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044234a(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0043d9a8(0);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "00442f75": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00442f75(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = fcn.0043b6a9();\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    if (*0x46c51c == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x4519cc),  iVar2 == 0)) {\n            return 0;\n        }\n        *0x46c51c = fcn.0043b646(iVar2);\n        uVar3 = (*pcVar4)(iVar1, \"GetActiveWindow\");\n        *0x46c520 = fcn.0043b646(uVar3);\n        uVar3 = (*pcVar4)(iVar1, 0x4519a8);\n        *0x46c524 = fcn.0043b646(uVar3);\n        iVar2 = fcn.0043a66b(&var_8h);\n        if (iVar2 != 0) {\n            fcn.0043bd6a(0, 0, 0, 0, 0);\n        }\n        if (var_8h == 2) {\n            uVar3 = (*pcVar4)(iVar1, \"GetUserObjectInformationA\");\n            *0x46c52c = fcn.0043b646(uVar3);\n            if (*0x46c52c != 0) {\n                uVar3 = (*pcVar4)(iVar1, \"GetProcessWindowStation\");\n                *0x46c528 = fcn.0043b646(uVar3);\n            }\n        }\n    }\n    iVar1 = var_10h;\n    if ((*0x46c528 == var_10h) || (*0x46c52c == var_10h)) {\ncode_r0x004430c3:\n        if (*0x46c520 != iVar1) {\n            pcVar4 = fcn.0043b6b2(*0x46c520);\n            var_4h = (*pcVar4)();\n            if ((var_4h != 0) && (*0x46c524 != iVar1)) {\n                pcVar4 = fcn.0043b6b2(*0x46c524, var_4h);\n                var_4h = (*pcVar4)();\n            }\n        }\n    }\n    else {\n        pcVar4 = fcn.0043b6b2(*0x46c528);\n        iVar2 = (*pcVar4)();\n        if (iVar2 != 0) {\n            pcVar4 = fcn.0043b6b2(*0x46c52c, iVar2, 1, &var_20h, 0xc, &var_14h);\n            iVar2 = (*pcVar4)();\n            if ((iVar2 != 0) && ((var_18h & 1) != 0)) goto code_r0x004430c3;\n        }\n        iVar1 = fcn.0043a6a2(&var_ch);\n        if (iVar1 != 0) {\n            fcn.0043bd6a(0, 0, 0, 0, 0);\n        }\n        if (var_ch < 4) {\n            arg_10h = arg_10h | 0x40000;\n        }\n        else {\n            arg_10h = arg_10h | 0x200000;\n        }\n    }\n    pcVar4 = fcn.0043b6b2(*0x46c51c, var_4h, arg_8h, arg_ch, arg_10h);\n    uVar3 = (*pcVar4)();\n    return uVar3;\n}\n",
        "token_count": 977
    },
    "00444198": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00444198(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x45d5bc ^ &stack0xfffffffc;\n    fcn.00437176(arg_10h);\n    var_14h = fcn.00445b7d(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.004450f9(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x004441ef:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0044422f;\n        }\n        if (iVar1 != 2) {\ncode_r0x00444221:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0044422f;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00444221;\n        goto code_r0x004441ef;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0044422f:\n    fcn.00436f55(unaff_EBX);\n    return;\n}\n",
        "token_count": 499
    },
    "0044423e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044423e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x45d5bc ^ &stack0xfffffffc;\n    fcn.00437176(arg_10h);\n    var_14h = fcn.00445b7d(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0044563b(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00444295:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x004442d5;\n        }\n        if (iVar1 != 2) {\ncode_r0x004442c7:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x004442d5;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x004442c7;\n        goto code_r0x00444295;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x004442d5:\n    fcn.00436f55(unaff_EBX);\n    return;\n}\n",
        "token_count": 502
    },
    "004450f9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004450f9(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x004455f8;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0044522c;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00445233;\ncode_r0x0044522c:\n                        do {\n                            var_4h = 1;\ncode_r0x00445233:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00445241;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00445241:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x45e578 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x45e578 < iVar12) {\n                if (iVar12 < *0x45e574) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x45e574;\n                    uVar5 = 1;\n                }\n                goto code_r0x004455f8;\n            }\n            var_10h = *0x45e578 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x004453e4;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x004453e4:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x004455f8:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3660
    },
    "0044563b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044563b(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00445b3a;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x45e594 - 1;\n        iVar4 = *0x45e594 + (*0x45e594 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x45e594 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0044576e;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00445775;\ncode_r0x0044576e:\n                        do {\n                            var_4h = 1;\ncode_r0x00445775:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00445783;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00445783:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x45e590 - *0x45e594) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x45e590 < iVar12) {\n                if (iVar12 < *0x45e58c) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x45e5a0;\n                    iVar4 = *0x45e598 + (*0x45e598 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x45e598 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x45e598 + (*0x45e598 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x45e598 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x45e5a0 + *0x45e58c;\n                    uVar5 = 1;\n                }\n                goto code_r0x00445b3a;\n            }\n            var_10h = *0x45e590 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x45e594 - 1;\n            iVar12 = *0x45e594 + (*0x45e594 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x45e594 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00445926;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00445926:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x45e598 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00445b3a:\n    var_20h = iVar12 << (0x1fU - *0x45e598 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x45e59c == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x45e59c == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3643
    },
    "00447da3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00447da3(void)\n\n{\n    code *pcVar1;\n    uint arg_8h;\n    uint var_98h;\n    uint32_t var_94h;\n    int32_t var_88h;\n    uint32_t var_4h;\n    \n    var_4h = *0x45d5bc ^ &stack0xfffffffc;\n    var_98h = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&var_98h);\n    if ((var_88h != 2) || (pcVar1 = 0x447d9f,  var_94h < 5)) {\n        pcVar1 = fcn.00447d3a;\n    }\n    arg_8h = 0x45e990;\n    (*_sym.imp.KERNEL32.dll_InterlockedExchange)(0x45e990, pcVar1);\n    (**0x45e990)();\n    fcn.00436f55(arg_8h);\n    return;\n}\n",
        "token_count": 224
    },
    "00447f9d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447f9d(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    uint uStack156;\n    uint32_t uStack152;\n    int32_t iStack148;\n    int32_t iStack140;\n    uchar auStack124 [116];\n    uint32_t uStack8;\n    \n    uStack8 = *0x45d5bc ^ auStack124;\n    fcn.00447f47();\n    param_1[2] = 0x400000;\n    param_1[1] = 0x400000;\n    *param_1 = 0x3c;\n    *(param_1 + 3) = 0;\n    fcn.00439d20(&uStack156, 0, 0x94);\n    uStack156 = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&uStack156);\n    if (iStack140 == 2) {\n        if (uStack152 < 5) goto code_r0x00448019;\n    }\n    else if ((iStack140 != 1) || ((uStack152 < 5 && ((uStack152 != 4 || (iStack148 == 0)))))) goto code_r0x00448019;\n    *(param_1 + 3) = 1;\ncode_r0x00448019:\n    param_1[4] = 0x800;\n    param_1[5] = 0x452158;\n    iVar1 = fcn.00447e38();\n    if (iVar1 < 0) {\n        *0x469cc0 = 1;\n    }\n    fcn.00436f55(unaff_ESI);\n    return;\n}\n",
        "token_count": 387
    },
    "004041d4": {
        "rules": [
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040422c) overlaps instruction at (ram,0x00404227)\n// \n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n\nvoid __fastcall fcn.004041d4(int32_t param_1, int32_t param_2)\n\n{\n    ushort uVar1;\n    code *pcVar2;\n    uint8_t uVar3;\n    char cVar4;\n    uint8_t uVar5;\n    uint32_t in_EAX;\n    int32_t unaff_EBX;\n    uint32_t unaff_EBP;\n    code *unaff_EDI;\n    ushort in_CS;\n    char in_SF;\n    char in_OF;\n    char cStack1;\n    \n    if (in_OF == in_SF) {\n        (&cStack1)[in_EAX] = (&cStack1)[in_EAX] + (param_2 >> 8);\n    }\n    else {\n        uVar1 = TaskRegister();\n        *(unaff_EBX + 0x66ddc200) = uVar1;\n        uVar3 = in_EAX | 1;\n        uVar5 = in_EAX >> 8;\n        if ((*(param_2 + -0x22) & unaff_EBP) != 0) {\n            LOCK();\n            cVar4 = uVar3 - uVar5;\n            *(*(param_1 + 0x42) + -4) = param_1;\n            unaff_EDI[0x5a] = unaff_EDI[0x5a] + param_1;\n            *(unaff_EBX + 0x30f0200) = *(unaff_EBX + 0x30f0200) + cVar4;\n            *0x37004c00 = in_EAX & 0xffff0000 | cVar4 + (param_1 >> 8);\n    // WARNING: Could not recover jumptable at 0x004042c4. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(param_1 + 0x14f0749a))();\n            return;\n        }\n        in_EAX = in_EAX & 0xffffff00 | (uVar3 - CARRY1(param_2 + -1 >> 8, uVar5)) + 0x7f;\n    }\n    cStack1 = '\\0';\n    func_0x003f44bd();\n    *(in_EAX + 0xeca1000f) = *(in_EAX + 0xeca1000f) + -1;\n    cStack1 = in_CS >> 8;\n    (*unaff_EDI)(in_CS);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 616
    },
    "004044e5": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid __fastcall fcn.004044e5(uint param_1, int32_t *param_2)\n\n{\n    char *pcVar1;\n    uchar uVar2;\n    code *pcVar3;\n    char cVar4;\n    uint32_t in_EAX;\n    char **unaff_ESI;\n    char *unaff_EDI;\n    uchar *puVar5;\n    bool in_SF;\n    uint8_t uStack0000003a;\n    uint in_stack_00000038;\n    uchar auStack9 [9];\n    \n    cVar4 = in_EAX;\n    *unaff_EDI = cVar4;\n    if (in_SF) {\n        puVar5 = unaff_EDI + 1 >> 0xd;\n        pcVar1 = (in_EAX & 0xffff0000 | CONCAT11(param_2, cVar4)) + 0x68;\n        *pcVar1 = *pcVar1 + (param_1 >> 8);\n        *(unaff_ESI + -0x1727dd7e) = *(unaff_ESI + -0x1727dd7e) + param_1;\n        pcVar1 = *unaff_ESI;\n        *puVar5 = pcVar1;\n        uVar2 = in(param_2);\n        puVar5[1] = uVar2;\n        *param_2 = (*param_2 - (unaff_ESI + 1)) - CARRY1(uStack0000003a, pcVar1 >> 8);\n        *(puVar5 + 2) = unaff_ESI[1];\n        *pcVar1 = *pcVar1 + (auStack9 >> 8);\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    *0x3ad6942b = cVar4 + '2';\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 433
    },
    "0042e757": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042e757(int32_t *param_1, int32_t param_2)\n\n{\n    if ((param_2 == -1) && (param_2 = *param_1,  param_2 != 0)) {\n        param_2 = fcn.00437450(param_2);\n    }\n    fcn.0042e1bb(param_2);\n    return;\n}\n",
        "token_count": 92
    },
    "0042ee14": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0042ee14(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004382a3(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_STATE.0;\n    puVar1 = extraout_ECX[0x12];\n    *(unaff_EBP + -4) = 1;\n    if (puVar1 != NULL) {\n        (***puVar1)(1);\n    }\n    if (extraout_ECX[0x1c] != NULL) {\n        (**(*extraout_ECX[0x1c] + 0xc))(extraout_ECX + 0x13);\n        if (extraout_ECX[0x1c] != NULL) {\n            (**(*extraout_ECX[0x1c] + 4))(1);\n        }\n    }\n    if (*extraout_ECX[0x1e] != NULL) {\n        (****extraout_ECX[0x1e])(1);\n    }\n    if (*(extraout_ECX[0x1e] + 4) != NULL) {\n        (****(extraout_ECX[0x1e] + 4))(1);\n    }\n    fcn.0042df88(extraout_ECX[0x1e]);\n    pcVar2 = extraout_ECX[0x20];\n    if ((pcVar2 != NULL) && (pcVar2 != 0xffffffff)) {\n        fcn.0042ebfc(pcVar2);\n        extraout_ECX[0x20] = 0xffffffff;\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.0042fbba();\n    fcn.0042e05c();\n    fcn.00438342();\n    return;\n}\n",
        "token_count": 456
    },
    "0042f6c3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0042f6c3(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t arg_10h_00;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004382a3(4);\n    uVar1 = fcn.0042eaeb();\n    fcn.0042e196(uVar1);\n    *(unaff_EBP + -4) = 0;\n    fcn.0042e432(*(unaff_EBP + 8));\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    if (arg_10h_00 == -1) {\n        arg_10h_00 = *(unaff_EBP + 8);\n    }\n    fcn.0042f692(*(unaff_EBP + -0x10), *(unaff_EBP + 0xc), arg_10h_00);\n    fcn.0042e05c();\n    fcn.00438342();\n    return;\n}\n",
        "token_count": 280
    },
    "0042f943": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0042f943(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uStack12;\n    \n    param_1[5] = 0;\n    param_1[6] = 4;\n    param_1[1] = 0;\n    param_1[2] = 1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    iVar3 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    *param_1 = iVar3;\n    if (iVar3 == -1) {\n        uStack12 = 0x45ce38;\n        fcn.00437a5e(&stack0xfffffff4, 0x453460);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    uStack12 = 0x42f97e;\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)();\n    return param_1;\n}\n",
        "token_count": 249
    },
    "00430609": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00430609(int32_t param_1, int32_t **param_2, int32_t *param_3, int32_t *param_4)\n\n{\n    int32_t **ppiVar1;\n    int32_t extraout_ECX;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    \n    piVar3 = *param_2;\n    if (piVar3 != NULL) {\n        if (piVar3 == 0xffffffff) {\n            uVar4 = 0;\n            if (*(param_1 + 8) != 0) {\n                ppiVar1 = *(param_1 + 4);\n                do {\n                    piVar3 = *ppiVar1;\n                    if (piVar3 != NULL) goto code_r0x00430639;\n                    uVar4 = uVar4 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar4 < *(param_1 + 8));\n                fcn.0042e629();\n                param_1 = extraout_ECX;\n            }\n        }\ncode_r0x00430639:\n        piVar5 = *piVar3;\n        if (piVar5 == NULL) {\n            uVar4 = *(param_1 + 8);\n            uVar2 = (piVar3[1] >> 4) % uVar4 + 1;\n            if (uVar2 < uVar4) {\n                ppiVar1 = *(param_1 + 4) + uVar2 * 4;\n                do {\n                    piVar5 = *ppiVar1;\n                    if (piVar5 != NULL) break;\n                    uVar2 = uVar2 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar2 < uVar4);\n            }\n        }\n        *param_2 = piVar5;\n        *param_3 = piVar3[1];\n        *param_4 = piVar3[2];\n    }\n    return;\n}\n",
        "token_count": 466
    },
    "0043086c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043086c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar1 = arg_8h;\n    iVar4 = 0;\n    if (-1 < arg_8h) goto code_r0x00430882;\n    do {\n        fcn.0042e629();\ncode_r0x00430882:\n        if (iVar4 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == iVar4) {\n            fcn.0042df88(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar4;\n            *(in_ECX + 8) = iVar4;\n            goto code_r0x00430972;\n        }\n        if (*(in_ECX + 4) == iVar4) {\n            uVar2 = fcn.0042df5d(iVar1);\n            *(in_ECX + 4) = uVar2;\n            fcn.00439d20(uVar2, iVar4, iVar1);\n            *(in_ECX + 0xc) = iVar1;\ncode_r0x004308e9:\n            *(in_ECX + 8) = iVar1;\n            return;\n        }\n        iVar4 = *(in_ECX + 0xc);\n        if (iVar1 <= iVar4) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.00439d20(iVar4 + *(in_ECX + 4), 0, iVar1 - iVar4);\n            }\n            goto code_r0x004308e9;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\ncode_r0x0043091b:\n                iVar3 = 4;\n            }\n            else if (iVar3 < 0x401) {\n                if (iVar3 < 4) goto code_r0x0043091b;\n            }\n            else {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + iVar4;\n        if (iVar3 + iVar4 <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < iVar4);\n    iVar4 = fcn.0042df5d(arg_8h);\n    fcn.0042df93(iVar4, arg_8h, *(in_ECX + 4), *(in_ECX + 8));\n    fcn.00439d20(*(in_ECX + 8) + iVar4, 0, iVar1 - *(in_ECX + 8));\n    fcn.0042df88(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x00430972:\n    *(in_ECX + 4) = iVar4;\n    return;\n}\n",
        "token_count": 743
    },
    "00443a25": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00443a25(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00439cb8(0x454198, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0043840d();\n        *puVar2 = 0;\n        puVar2 = fcn.004383fa();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x46d610)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x46d620;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x28;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00444d4f(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.004383fa();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0043840d();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0044345f(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00443af7(0x454198);\n                goto code_r0x00443af1;\n            }\n        }\n        puVar2 = fcn.0043840d();\n        *puVar2 = 0;\n        puVar2 = fcn.004383fa();\n        *puVar2 = 9;\n        fcn.0043be66(0, 0, 0, 0, 0);\n    }\ncode_r0x00443af1:\n    fcn.00439cfd();\n    return;\n}\n",
        "token_count": 628
    },
    "0042f833": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042f833(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    iVar3 = *(param_1 + 4);\n    iVar7 = *(param_1 + 8);\n    if ((iVar3 <= iVar7) || ((*(*(param_1 + 0x10) + iVar7 * 8) & 1) != 0)) {\n        iVar7 = 1;\n        if (1 < iVar3) {\n            puVar6 = *(param_1 + 0x10);\n            do {\n                puVar6 = puVar6 + 8;\n                if ((*puVar6 & 1) == 0) break;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < iVar3);\n            if (iVar7 < iVar3) goto code_r0x0042f917;\n        }\n        iVar3 = iVar3 + 0x20;\n        if (*(param_1 + 0x10) == 0) {\n            fcn.0042dc00(iVar3, 8);\n            iVar4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)();\n            fcn.0042dc00(iVar3, 8);\n            iVar4 = (*_sym.imp.KERNEL32.dll_GlobalReAlloc)();\n        }\n        if (iVar4 == 0) {\n            if (*(param_1 + 0x10) != 0) {\n                (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n                (*_sym.imp.KERNEL32.dll_GlobalLock)();\n            }\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n            fcn.00437a5e(&stack0xffffffd4, 0x453460);\n            pcVar2 = swi(3);\n            iVar3 = (*pcVar2)();\n            return iVar3;\n        }\n        uVar5 = (*_sym.imp.KERNEL32.dll_GlobalLock)();\n        fcn.00439d20();\n        *(param_1 + 4) = iVar3;\n        *(param_1 + 0x10) = uVar5;\n    }\ncode_r0x0042f917:\n    if (*(param_1 + 0xc) <= iVar7) {\n        *(param_1 + 0xc) = iVar7 + 1;\n    }\n    puVar1 = *(param_1 + 0x10) + iVar7 * 8;\n    *puVar1 = *puVar1 | 1;\n    *(param_1 + 8) = iVar7 + 1;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n    return iVar7;\n}\n",
        "token_count": 656
    },
    "0042ffa9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ffa9(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(param_1 + 0x28);\n    if ((*(param_1 + 0x18) & 1) == 0) {\n        piVar1 = param_1 + 0x30;\n        iVar2 = *piVar1;\n        if (*(param_1 + 8) == 0) {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x38))(iVar2, iVar3 - iVar2);\n            }\n        }\n        else {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x50))(2, iVar3 - iVar2, 0, 0);\n            }\n            (**(**(param_1 + 0x24) + 0x50))(1, *(param_1 + 0x20), piVar1, param_1 + 0x2c);\n        }\n        iVar3 = *piVar1;\n    }\n    else {\n        if (*(param_1 + 0x2c) != iVar3) {\n            iVar3 = iVar3 - *(param_1 + 0x2c);\n            (**(**(param_1 + 0x24) + 0x28))(iVar3, iVar3 >> 0x1f, 1);\n        }\n        iVar3 = *(param_1 + 0x2c);\n    }\n    *(param_1 + 0x28) = iVar3;\n    return;\n}\n",
        "token_count": 376
    },
    "0043010d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043010d(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    ushort unaff_SI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.0043046d(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 2;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.0042ffa9();\n    }\n    **(param_1 + 0x28) = unaff_SI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 2;\n    return param_1;\n}\n",
        "token_count": 196
    },
    "00430147": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00430147(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.0043046d(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 4;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.0042ffa9();\n    }\n    **(param_1 + 0x28) = unaff_ESI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 197
    },
    "00430180": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00430180(int32_t param_1)\n\n{\n    ushort *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.0043046d(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 2U) {\n        fcn.00430020((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 2);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 2;\n    return param_1;\n}\n",
        "token_count": 191
    },
    "004301c3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004301c3(int32_t param_1)\n\n{\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.0043046d(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 4U) {\n        fcn.00430020((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 4);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 192
    },
    "00435e5e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00435e5e(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    char *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0042f330();\n    arg_8h = arg_8h & ~*(var_4h + 0x18);\n    if (arg_8h == 0) {\n        bVar4 = true;\n    }\n    else {\n        uVar3 = 0;\n        fcn.00439d20(&var_34h, 0, 0x28);\n        var_30h = _sym.imp.USER32.dll_DefWindowProcA;\n        iVar1 = fcn.0042f330();\n        var_24h = *(iVar1 + 8);\n        var_1ch = *0x469d08;\n        var_ch = 8;\n        if ((arg_8h & 1) != 0) {\n            var_34h = 0xb;\n            var_10h = \"AfxWnd80s\";\n            iVar1 = fcn.00435d8f(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        if ((arg_8h & 0x20) != 0) {\n            var_34h = var_34h | 0x8b;\n            var_10h = \"AfxOleControl80s\";\n            iVar1 = fcn.00435d8f(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 0x20;\n            }\n        }\n        if ((arg_8h & 2) != 0) {\n            var_34h = 0;\n            var_10h = \"AfxControlBar80s\";\n            var_18h = 0x10;\n            iVar1 = fcn.00435d8f(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 2;\n            }\n        }\n        if ((arg_8h & 4) != 0) {\n            var_34h = 8;\n            var_18h = 0;\n            iVar1 = fcn.00435e1d(&var_34h, \"AfxMDIFrame80s\", 0x7a01);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 4;\n            }\n        }\n        if ((arg_8h & 8) != 0) {\n            var_34h = 0xb;\n            var_18h = 6;\n            iVar1 = fcn.00435e1d(&var_34h, \"AfxFrameOrView80s\", 0x7a02);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 8;\n            }\n        }\n        if ((arg_8h & 0x10) != 0) {\n            var_8h = 0xff;\n            uVar2 = fcn.00433cb4(&var_ch, 0x3fc0);\n            uVar3 = uVar3 | uVar2;\n            arg_8h = arg_8h & 0xffffc03f;\n        }\n        if ((arg_8h & 0x40) != 0) {\n            var_8h = 0x10;\n            uVar2 = fcn.00433cb4(&var_ch, 0x40);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x80) != 0) {\n            var_8h = 2;\n            uVar2 = fcn.00433cb4(&var_ch, 0x80);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x100) != 0) {\n            var_8h = 8;\n            uVar2 = fcn.00433cb4(&var_ch, 0x100);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x200) != 0) {\n            var_8h = 0x20;\n            uVar2 = fcn.00433cb4(&var_ch, 0x200);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x400) != 0) {\n            var_8h = 1;\n            uVar2 = fcn.00433cb4(&var_ch, 0x400);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x800) != 0) {\n            var_8h = 0x40;\n            uVar2 = fcn.00433cb4(&var_ch, 0x800);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x1000) != 0) {\n            var_8h = 4;\n            uVar2 = fcn.00433cb4(&var_ch, 0x1000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x2000) != 0) {\n            var_8h = 0x80;\n            uVar2 = fcn.00433cb4(&var_ch, 0x2000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x4000) != 0) {\n            var_8h = 0x800;\n            uVar2 = fcn.00433cb4(&var_ch, 0x4000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x8000) != 0) {\n            var_8h = 0x400;\n            uVar2 = fcn.00433cb4(&var_ch, 0x8000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x10000) != 0) {\n            var_8h = 0x200;\n            uVar2 = fcn.00433cb4(&var_ch, 0x10000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x20000) != 0) {\n            var_8h = 0x100;\n            uVar2 = fcn.00433cb4(&var_ch, 0x20000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x40000) != 0) {\n            var_8h = 0x8000;\n            uVar2 = fcn.00433cb4(&var_ch, 0x40000);\n            uVar3 = uVar3 | uVar2;\n        }\n        *(var_4h + 0x18) = *(var_4h + 0x18) | uVar3;\n        if ((*(var_4h + 0x18) & 0x3fc0) == 0x3fc0) {\n            *(var_4h + 0x18) = *(var_4h + 0x18) | 0x10;\n            uVar3 = uVar3 | 0x10;\n        }\n        bVar4 = (uVar3 & arg_8h) == arg_8h;\n    }\n    return bVar4;\n}\n",
        "token_count": 1800
    },
    "0042fd41": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0042fd41(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFlags)(param_1);\n        for (uVar1 = uVar1 & 0xff; uVar1 != 0; uVar1 = uVar1 - 1) {\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(param_1);\n        }\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(param_1);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "004311ca": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.004311ca(void)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint16_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iStack148;\n    int32_t iStack140;\n    uchar auStack136 [12];\n    uchar auStack124 [116];\n    uint32_t uStack8;\n    \n    uStack8 = *0x45d5bc ^ auStack124;\n    uVar3 = (*_sym.imp.USER32.dll_GetMenuCheckMarkDimensions)();\n    iVar6 = uVar3;\n    iStack148 = uVar3 >> 0x10;\n    if ((4 < iVar6) && (5 < iStack148)) {\n        if (0x20 < iVar6) {\n            iVar6 = 0x20;\n        }\n        iVar8 = iVar6 + 0xf >> 4;\n        iVar9 = ((iVar6 + -4) / 2 + iVar8 * 0x10) - iVar6;\n        if (0xc < iVar9) {\n            iVar9 = 0xc;\n        }\n        if (0x20 < iStack148) {\n            iStack148 = 0x20;\n        }\n        fcn.00439d20(auStack136);\n        puVar4 = auStack136 + (iStack148 + -6 >> 1) * iVar8 * 2;\n        puVar5 = 0x44fb9c;\n        iStack140 = 5;\n        do {\n            uVar1 = *puVar5;\n            puVar5 = puVar5 + 1;\n            uVar7 = ~(uVar1 << (iVar9 & 0x1f));\n            *puVar4 = uVar7 >> 8;\n            puVar4[1] = uVar7;\n            puVar4 = puVar4 + iVar8 * 2;\n            iStack140 = iStack140 + -1;\n        } while (iStack140 != 0);\n        uVar3 = 1;\n        *0x469d18 = (*_sym.imp.GDI32.dll_CreateBitmap)(iVar6, iStack148, 1);\n        if (*0x469d18 == 0) {\n            *0x469d18 = (*_sym.imp.USER32.dll_LoadBitmapA)(0, 0x7fe3);\n        }\n        fcn.00436f55(uVar3);\n        return;\n    }\n    fcn.00437a5e(&stack0xffffff54, 0x4534c0);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 608
    },
    "004336e9": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.004336e9(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uStack16;\n    \n    iVar2 = fcn.0042fb30(0x42e643);\n    if (iVar2 == 0) {\n        uStack16 = 0x45cf68;\n        fcn.00437a5e(&uStack16, 0x4534c0);\n        pcVar1 = swi(3);\n        iVar2 = (*pcVar1)();\n        return iVar2;\n    }\n    uVar3 = (*_sym.imp.USER32.dll_GetMessageTime)();\n    *(iVar2 + 0x68) = uVar3;\n    uVar3 = (*_sym.imp.USER32.dll_GetMessagePos)();\n    *(iVar2 + 0x70) = uVar3 >> 0x10;\n    *(iVar2 + 0x6c) = uVar3;\n    return iVar2 + 0x58;\n}\n",
        "token_count": 223
    },
    "00435923": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00435923(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h < 0x112) {\n        if (arg_8h == 0x111) {\n            iVar2 = fcn.00430e6a(0, arg_ch >> 0x10 | 0xbd110000, 0, 0);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (arg_14h != NULL) {\n                *arg_14h = 1;\n                return 1;\n            }\n            return 1;\n        }\n        if (0x2a < arg_8h) {\n            if ((arg_8h < 0x30) || (arg_8h == 0x39)) goto code_r0x004359b7;\n            if (arg_8h == 0x4e) {\n                var_8h = arg_14h;\n                var_4h = arg_10h;\n                uVar1 = fcn.00430e6a(0, *(arg_10h + 8) & 0xffff | 0xbc4e0000, &var_8h, 0);\n                return uVar1;\n            }\n        }\n    }\n    else if ((0x113 < arg_8h) && ((arg_8h < 0x116 || (arg_8h == 0x210)))) {\ncode_r0x004359b7:\n        uVar1 = fcn.004352f7(arg_8h + 0xbc00, arg_ch, arg_10h, arg_14h);\n        return uVar1;\n    }\n    if (arg_8h - 0x132 < 7) {\n        var_4h = arg_8h - 0x132;\n        var_8h = arg_ch;\n        uVar1 = fcn.004352f7(0xbc19, 0, &var_ch, arg_14h);\n        if (*arg_14h != 0) {\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 528
    },
    "0043fee0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t * fcn.0043fee0(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 591
    },
    "00447d3a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00447d3a(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint arg_8h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x45d5bc ^ &stack0xfffffffc;\n    iVar4 = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetThreadLocale)();\n    arg_8h = 0x1004;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(uVar1, 0x1004, &var_ch, 7);\n    if (iVar2 != 0) {\n        puVar3 = &var_ch;\n        if (var_ch != '\\0') {\n            do {\n                puVar3 = puVar3 + 1;\n                iVar4 = iVar4 * 10 + -0x30 + var_ch;\n                var_ch._0_1_ = *puVar3;\n            } while (var_ch != '\\0');\n            if (iVar4 != 0) goto code_r0x00447d90;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_GetACP)();\ncode_r0x00447d90:\n    fcn.00436f55(arg_8h);\n    return;\n}\n",
        "token_count": 309
    },
    "00401390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401390(uint arg_8h)\n\n{\n    fcn.00437555(arg_8h);\n    return;\n}\n",
        "token_count": 33
    },
    "004013b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004013b0(uint arg_8h)\n\n{\n    fcn.0043785e(arg_8h);\n    return;\n}\n",
        "token_count": 35
    },
    "004013d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004013d0(uint arg_8h)\n\n{\n    fcn.00437882(arg_8h);\n    return;\n}\n",
        "token_count": 34
    },
    "004013f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004013f0(code *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    \n    *0x456034 = *0x456008 * 4;\n    *0x456040 = *0x45603c * *0x456040 + -0xa5037;\n    *0x456008 = *0x456008 * 0x219 + 0xbf78b3b;\n    *0x456034 = *0x456034 + -0x1a8607a8;\n    iVar1 = -*0x456034;\n    fcn.0042d150(0x205a);\n    *0x456034 = iVar1 + 0x4b2feb + iVar1 + 0x4b2fe5;\n    *0x456008 = (*0x456034 * 0x43 - (iVar1 + 0x4b2fe5)) + arg_ch + 0xf9cd + *0x456008;\n    (*arg_8h)();\n    *0x456034 = iVar1 + 0x4c29b2 + *0x456034;\n    return *0x456034;\n}\n",
        "token_count": 289
    },
    "004015b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.004015b0(uchar *arg_8h, uchar *arg_ch, int32_t arg_10h)\n\n{\n    uchar *var_10h;\n    uchar *var_4h;\n    \n    var_4h = arg_8h;\n    var_10h = arg_ch;\n    *0x456008 = *0x456038 * 4 - *0x456004;\n    *0x456040 = *0x456008 * 0x42 + *0x456034 * 0xf9f6 + *0x456040 * 2;\n    while (arg_10h != 0) {\n        *0x456038 = *0x456038 - (*0x456008 + (arg_10h + -1) * 2);\n        *var_4h = *var_10h;\n        var_4h = var_4h + 1;\n        var_10h = var_10h + 1;\n        *0x456004 = *0x456038 * 0x1d * *0x456008;\n        arg_10h = arg_10h + -1;\n    }\n    *0x456004 = *0x456004 - (*0x456008 + *0x456040 * 2);\n    *0x456040 = *0x456008 + 1 + *0x456034;\n    return arg_8h;\n}\n",
        "token_count": 317
    },
    "004016c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004017c4)\n\nint32_t fcn.004016c0(void)\n\n{\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    *0x456008 = *0x456008 + 0xf9dd;\n    for (var_10h = 0x107d; var_10h < 0x117d; var_10h = var_10h + 4) {\n        if (*0x469c80 + *0x456008 == 0x365) {\n            *0x456008 = *0x456004 * 0x1d * ((*0x456038 * 0x43 - *0x456034) + *0x456008);\n        }\n        *0x45603c = (*0x456040 * 0x43 - *0x456034) + *0x456004 + 6 + *0x456038;\n        *0x456004 = *0x456004 + ((*0x456004 * *0x456008 * -3 + *0x456038) - *0x456034);\n        *0x469c80 = *(*0x469940 + var_10h + -0x107d) + 0x1313a64;\n        *(*0x469940 + var_10h + -0x107d) = *0x469c80;\n        *0x456008 = *0x456004 * 2 + 6;\n        *0x456004 = *0x456004 * 2 + 7 + *0x456040;\n    }\n    return *0x456004;\n}\n",
        "token_count": 373
    },
    "00401860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00401860(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_28h = 0x17f0b;\n    var_24h = 0;\n    var_2ch = *0x456008 * 0x1d * *0x456034;\n    var_30h = 0x433b86;\n    *0x456034 = *0x45603c * 4 + -0x62;\n    *0x456008 = var_2ch * 4 - *0x456040;\n    var_18h = 0xc;\n    *0x45603c = (*0x456008 * 0xf9f7 - *0x456034) + *0x45603c * 2;\n    var_1ch = 0xbb;\n    var_10h = 0xb9;\n    while( true ) {\n        if (var_1ch < 8) {\n            uVar2 = fcn.00436fa0(var_2ch, 0, var_28h, var_24h);\n            var_28h = uVar2 - *0x456040;\n            var_24h = (uVar2 >> 0x20) - (uVar2 < *0x456040);\n            var_1ch = var_1ch - 1;\n            *0x45603c = (var_1ch * 0xf9f7 - var_28h) + *0x45603c * 2;\n        }\n        iVar1 = fcn.00436fa0();\n        *0x45603c = *0x45603c + (iVar1 - var_10h);\n        if (var_10h < 0x10) {\n            var_10h = var_10h - 1;\n        }\n        *0x456034 = var_2ch + 6 + *0x456008;\n        if (var_30h == 0) break;\n        fcn.004016c0();\n        uVar2 = fcn.00436fa0(*0x456008, 0, var_28h, var_24h);\n        var_28h = uVar2 - var_30h;\n        var_24h = (uVar2 >> 0x20) - (uVar2 < var_30h);\n        var_30h = var_30h - 1;\n        var_2ch = *0x456008 == 0;\n        if (var_2ch != 0) {\n            var_2ch = *0x456034 + 1 + *0x456008;\n            *0x456008 = var_28h + 1 + var_30h;\n        }\n        if (var_30h < 0x71) {\n            *0x456008 = var_28h + 1 + var_2ch;\n            (*_sym.imp.KERNEL32.dll_Sleep)(0x62);\n            *0x45603c = *0x45603c - (*0x456008 * 2 + var_28h);\n        }\n        *0x45603c = (var_18h * 0xf9f7 - *0x456008) + *0x45603c * 2;\n        if (var_18h < 2) {\n            var_18h = var_18h - 1;\n            *0x456034 = var_2ch + 6 + *0x456008;\n            iVar1 = fcn.00436fa0(var_28h, var_24h, 0x43, 0);\n            *0x45603c = *0x45603c + (iVar1 - var_18h);\n        }\n        *0x456008 = *0x456040 * 4 - var_1ch;\n    }\n    *0x456034 = *0x45603c + 6 + *0x456008;\n    *0x456040 = fcn.004013f0(*0x469940, *0x456008);\n    return *0x456008 + 1 + *0x456040;\n}\n",
        "token_count": 1003
    },
    "00402c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402c3a) overlaps instruction at (ram,0x00402c39)\n// \n// WARNING: Removing unreachable block (ram,0x00402c72)\n// WARNING: Removing unreachable block (ram,0x00402c7a)\n// WARNING: Removing unreachable block (ram,0x00402c3a)\n\nunkbyte10 fcn.00402c00(void)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint8_t uVar6;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint extraout_ECX;\n    uint8_t uVar7;\n    uint8_t *puVar8;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    unkbyte10 Var9;\n    ulong uVar10;\n    uchar uStack1;\n    \n    _uStack1 = _uStack1 & 0xffffff00;\n    uVar10 = func_0x72d477d3();\n    iVar4 = uVar10 + *(uVar10 + -0x72179734);\n    uVar7 = (uVar10 >> 0x20) + *(unaff_ESI + 0x39);\n    uVar3 = uVar10 >> 0x20 & 0xffffff00;\n    *(unaff_EBX + -0x21f81701) = extraout_ECX;\n    puVar8 = uVar3 | uVar7 + *((uVar3 | uVar7) + 0x657dfe72);\n    out(0xe8, iVar4);\n    pcVar1 = iVar4 + 0x45;\n    *pcVar1 = *pcVar1 + (*(unaff_EBP + -0xec70699) >> 8);\n    puVar8[0x5a] = puVar8[0x5a];\n    uVar7 = *puVar8;\n    uVar6 = _uStack1 >> 8;\n    *puVar8 = *puVar8 + uVar6;\n    piVar5 = _uStack1 & 0xffffff00 | _uStack1 + (&uStack1 >> 8) + CARRY1(uVar7, uVar6);\n    *piVar5 = *piVar5 + '4';\n    *piVar5 = *piVar5 + 1;\n    pcVar2 = swi(3);\n    Var9 = (*pcVar2)();\n    return Var9;\n}\n",
        "token_count": 562
    },
    "0040a2ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a2ff(void)\n\n{\n    unkbyte6 Var1;\n    char cVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    ushort extraout_CX;\n    code **unaff_EBX;\n    unkbyte6 *unaff_EBP;\n    int32_t unaff_EDI;\n    \n    iVar4 = func_0x254c28ce();\n    *(unaff_EBX + -0x6400ff7b) = *(unaff_EBX + -0x6400ff7b) + extraout_CX;\n    Var1 = *unaff_EBP;\n    cVar2 = iVar4 + 0xf2ff0069U;\n    if ((extraout_CX >> 8) + cVar2 == '\\0') {\n    // WARNING: Could not recover jumptable at 0x0040a2f1. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**unaff_EBX)();\n        return;\n    }\n    puVar3 = iVar4 + 0xf2ff0069U ^ 0x8b00;\n    *puVar3 = *puVar3 | 0x3b;\n    *(unaff_EDI + 1) = cVar2;\n    // WARNING: Could not recover jumptable at 0x0040a33c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(unaff_EBP + (unaff_EDI + 2) * 2 + -0x75))(Var1);\n    return;\n}\n",
        "token_count": 347
    },
    "0042d3e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d3e0(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.0042d3c0(arg_8h);\n    fcn.0042d5a0(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 73
    },
    "0042d5a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042d5a0(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint arg_ch_00;\n    uint arg_14h;\n    uint var_4h;\n    \n    cVar1 = fcn.0042db70(arg_8h);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.0042d800(arg_ch, 0);\n        if (cVar1 != '\\0') {\n            arg_ch_00 = *(in_ECX + 0x18);\n            arg_14h = arg_ch;\n            arg_8h_00 = fcn.0042d8a0();\n            fcn.0042dc80(arg_8h_00, arg_ch_00, arg_8h, arg_14h);\n            fcn.0042d7b0(arg_ch);\n        }\n    }\n    else {\n        iVar2 = fcn.0042d8a0();\n        in_ECX = fcn.0042d630(in_ECX, arg_8h - iVar2, arg_ch);\n    }\n    return in_ECX;\n}\n",
        "token_count": 280
    },
    "0042d630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042d630(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint arg_ch_00;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = fcn.0042d6f0();\n    if (uVar2 < arg_ch) {\n        fcn.004481f1();\n    }\n    iVar3 = fcn.0042d6f0();\n    var_4h = iVar3 - arg_ch;\n    if (arg_10h < var_4h) {\n        var_4h = arg_10h;\n    }\n    if (in_ECX == arg_8h) {\n        fcn.0042d710(arg_ch + var_4h, *0x44f7e4);\n        fcn.0042d710(0, arg_ch);\n    }\n    else {\n        cVar1 = fcn.0042d800(var_4h, 0);\n        if (cVar1 != '\\0') {\n            uVar2 = var_4h;\n            iVar3 = fcn.0042d8a0();\n            iVar3 = iVar3 + arg_ch;\n            arg_ch_00 = *(in_ECX + 0x18);\n            arg_8h_00 = fcn.0042d8a0();\n            fcn.0042dc80(arg_8h_00, arg_ch_00, iVar3, uVar2);\n            fcn.0042d7b0(var_4h);\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 397
    },
    "0042d8a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042d8a0(int32_t param_1)\n\n{\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*(param_1 + 0x18) < 0x10) {\n        var_8h = param_1 + 4;\n    }\n    else {\n        var_8h = *(param_1 + 4);\n    }\n    return var_8h;\n}\n",
        "token_count": 101
    },
    "0042d8d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d8d0(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.0042df88(arg_8h);\n    return;\n}\n",
        "token_count": 45
    },
    "0042db70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042db70(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    uVar1 = fcn.0042d8a0();\n    if (uVar1 <= arg_8h) {\n        iVar2 = fcn.0042d8a0();\n        uVar1 = iVar2 + *(in_ECX + 0x14);\n        if (arg_8h < uVar1) {\n            return CONCAT31(uVar1 >> 8, 1);\n        }\n    }\n    return uVar1 & 0xffffff00;\n}\n",
        "token_count": 156
    },
    "0042df93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042df93(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint arg_8h;\n    \n    arg_8h = fcn.00437f63(param_1, param_2, param_3, param_4);\n    fcn.00401020(arg_8h);\n    return;\n}\n",
        "token_count": 83
    },
    "0042dfb2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042dfb2(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint arg_8h;\n    \n    arg_8h = fcn.00438288(param_1, param_2, param_3, param_4);\n    fcn.00401020(arg_8h);\n    return;\n}\n",
        "token_count": 83
    },
    "0042dfd1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042dfd1(uint hModule, uint hResInfo, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(hModule, hResInfo);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    puVar2 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1);\n    if (puVar2 != NULL) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_SizeofResource)(hModule, hResInfo);\n        puVar3 = iVar1 + puVar2;\n        for (arg_10h = arg_10h & 0xf; arg_10h != 0; arg_10h = arg_10h - 1) {\n            if (puVar3 <= puVar2) {\n                return 0;\n            }\n            puVar2 = puVar2 + *puVar2 + 1;\n        }\n        if (puVar2 < puVar3) {\n            return -(*puVar2 != 0) & puVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 276
    },
    "0042e02d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042e02d(uint param_1, uint32_t param_2)\n\n{\n    int32_t hResInfo;\n    \n    hResInfo = (*_sym.imp.KERNEL32.dll_FindResourceA)(param_1);\n    if (hResInfo == 0) {\n        return;\n    }\n    fcn.0042dfd1((param_2 >> 4) + 1 & 0xffff, hResInfo, 6);\n    return;\n}\n",
        "token_count": 104
    },
    "0042e196": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0042e196(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    if (param_2 == NULL) {\n        fcn.00401000(0x80004005);\n        param_2 = extraout_ECX;\n    }\n    iVar1 = (**(*param_2 + 0xc))();\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 122
    },
    "0042e1ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042e1ec(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    ppiVar1 = *param_1 + -0x10;\n    if ((*(*param_1 + -8) < param_2) && (0 < param_2)) {\n        iVar2 = (**(**ppiVar1 + 8))(ppiVar1, param_2, 1);\n        if (iVar2 != 0) goto code_r0x0042e217;\n    }\n    iVar2 = fcn.0042e1e1();\ncode_r0x0042e217:\n    *param_1 = iVar2 + 0x10;\n    return;\n}\n",
        "token_count": 173
    },
    "0042e22a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042e22a(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    \n    uVar1 = *param_1;\n    uVar4 = uVar1;\n    piVar2 = *(uVar1 - 0x10);\n    if (*(uVar1 - 0xc) != 0) {\n        if (*(uVar1 - 4) < 0) {\n            if (*(uVar1 - 8) < 0) {\n                uVar4 = fcn.00401000(0x80070057);\n            }\n            *(uVar4 + -0xc) = uVar4 >> 0x20;\n            **param_1 = uVar4 >> 0x20;\n        }\n        else {\n            fcn.0042e05c();\n            iVar3 = (**(*piVar2 + 0xc))();\n            *param_1 = iVar3 + 0x10;\n        }\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "0042e26d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e26d(int32_t arg_8h)\n\n{\n    int32_t arg_10h;\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h = *in_ECX;\n    iVar1 = *(arg_10h + -0xc);\n    puVar2 = (**(**(arg_10h + -0x10) + 0x10))();\n    iVar3 = (***puVar2)(arg_8h, 1);\n    if (iVar3 == 0) {\n        fcn.0042e1e1();\n    }\n    if (iVar1 < arg_8h) {\n        arg_8h = iVar1;\n    }\n    fcn.00437f63(iVar3 + 0x10, arg_8h + 1, arg_10h, arg_8h + 1);\n    *(iVar3 + 4) = iVar1;\n    fcn.0042e05c();\n    *in_ECX = iVar3 + 0x10;\n    return;\n}\n",
        "token_count": 267
    },
    "0042e346": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nushort * __cdecl fcn.0042e346(uint arg_8h, uint arg_ch)\n\n{\n    ushort *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    puVar1 = fcn.0042e02d(arg_8h, arg_ch);\n    if (puVar1 != NULL) {\n        uVar2 = fcn.0042e09c(puVar1 + 1, *puVar1);\n        uVar3 = fcn.0042e31c(uVar2);\n        fcn.0042e0b9(uVar3, uVar2, puVar1 + 1, *puVar1);\n        fcn.0042e1bb(uVar2);\n        puVar1 = 0x1;\n    }\n    return puVar1;\n}\n",
        "token_count": 186
    },
    "0042e452": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e452(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar1 = *(*in_ECX + -0xc);\n    uVar3 = arg_8h - *in_ECX;\n    iVar2 = fcn.0042e31c(arg_ch + uVar1);\n    if (uVar3 <= uVar1) {\n        arg_8h = uVar3 + iVar2;\n    }\n    fcn.00437f63(iVar2 + uVar1, arg_ch, arg_8h, arg_ch);\n    fcn.0042e1bb(arg_ch + uVar1);\n    return;\n}\n",
        "token_count": 188
    },
    "0042e88a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0042e88a(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00438568(param_1, param_2, 0x10);\n    return iVar1 == 0;\n}\n",
        "token_count": 61
    },
    "0042ea89": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0042ea89(uint param_1, uchar *param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    \n    if ((param_2 != NULL) && (param_3 != 0)) {\n        iVar2 = fcn.0042f330();\n        puVar3 = fcn.0042e02d(*(iVar2 + 0xc), param_1);\n        if (puVar3 == NULL) {\n            *param_2 = 0;\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, puVar3 + 1, *puVar3, param_2, param_3 + -1, 0, 0)\n            ;\n            param_2[iVar2] = 0;\n        }\n        return iVar2;\n    }\n    fcn.0042e629();\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 248
    },
    "0042f363": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f363(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uStack8;\n    \n    fcn.0042f330();\n    iVar2 = fcn.0042eeb7();\n    if (iVar2 == 0) {\n        uStack8 = 0x45cf68;\n        fcn.00437a5e(&uStack8, 0x4534c0);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "0042f692": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f692(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042f330();\n    if (*(iVar1 + 4) != NULL) {\n    // WARNING: Could not recover jumptable at 0x0042f6a6. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(iVar1 + 4) + 0x98))();\n        return;\n    }\n    fcn.0042f537(0, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 147
    },
    "0042f9e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: lpCriticalSection\n\nvoid __cdecl fcn.0042f9e5(uint arg_8h, uint arg_ch)\n\n{\n    code **ppcVar1;\n    uint uVar2;\n    code *pcVar3;\n    uint *extraout_ECX;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint lpCriticalSection;\n    uint uVar5;\n    uint *puVar6;\n    uint var_4h;\n    \n    fcn.004382d6(0x10);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    puVar6 = extraout_ECX + 7;\n    *(unaff_EBP + -0x14) = puVar6;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar6);\n    if ((*(unaff_EBP + 8) < 1) || (extraout_ECX[3] <= *(unaff_EBP + 8))) goto code_r0x0042fb0c;\n    ppcVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*extraout_ECX);\n    if (ppcVar1 == NULL) {\n        *(unaff_EBP + -4) = 0;\n        ppcVar1 = fcn.0042f718(0x10);\n        if (ppcVar1 == NULL) {\n            ppcVar1 = NULL;\n        }\n        else {\n            *ppcVar1 = vtable.CThreadData.0;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        ppcVar1[2] = NULL;\n        ppcVar1[3] = NULL;\n        fcn.0042f81a(ppcVar1);\ncode_r0x0042fa3c:\n        if (ppcVar1[3] == NULL) {\n            uVar2 = fcn.0042dc00(extraout_ECX[3], 4);\n            pcVar3 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, uVar2);\n        }\n        else {\n            uVar5 = 2;\n            uVar2 = fcn.0042dc00(extraout_ECX[3], 4);\n            pcVar3 = (*_sym.imp.KERNEL32.dll_LocalReAlloc)(ppcVar1[3], uVar2, uVar5);\n        }\n        if (pcVar3 == NULL) {\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(*(unaff_EBP + -0x14));\n            pcVar3 = fcn.0042e60f();\n        }\n        ppcVar1[3] = pcVar3;\n        fcn.00439d20(pcVar3 + ppcVar1[2] * 4, 0, (extraout_ECX[3] - ppcVar1[2]) * 4);\n        ppcVar1[2] = extraout_ECX[3];\n        (*_sym.imp.KERNEL32.dll_TlsSetValue)(*extraout_ECX, ppcVar1);\n        iVar4 = *(unaff_EBP + 8);\n    }\n    else {\n        iVar4 = *(unaff_EBP + 8);\n        if ((ppcVar1[2] <= iVar4) && (*(unaff_EBP + 0xc) != 0)) goto code_r0x0042fa3c;\n    }\n    if ((ppcVar1[3] != NULL) && (iVar4 < ppcVar1[2])) {\n        *(ppcVar1[3] + iVar4 * 4) = *(unaff_EBP + 0xc);\n    }\n    puVar6 = *(unaff_EBP + -0x14);\ncode_r0x0042fb0c:\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar6);\n    fcn.00438342();\n    return;\n}\n",
        "token_count": 897
    },
    "0042fc69": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042fc69(uint32_t param_1)\n\n{\n    if (0x10 < param_1) {\n        param_1 = fcn.0042e629();\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 * 0x18 + 0x469d90);\n    return;\n}\n",
        "token_count": 77
    },
    "0042fc89": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042fc89(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uchar lpString1;\n    uint var_103h;\n    uint32_t var_4h;\n    \n    var_4h = *0x45d5bc ^ &stack0xfffffffc;\n    if (arg_8h != 0) goto code_r0x0042fcae;\n    do {\n        fcn.0042e629();\ncode_r0x0042fcae:\n    } while (arg_ch == 0);\n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n    lpString1 = 0;\n    fcn.00439d20(&var_103h, 0, 0xff);\n    if (uVar1 < 0x101) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowTextA)(arg_8h, &lpString1, 0x100);\n        if (uVar2 == uVar1) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&lpString1, arg_ch);\n            if (iVar3 == 0) goto code_r0x0042fd0e;\n        }\n    }\n    (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, arg_ch);\ncode_r0x0042fd0e:\n    fcn.00436f55(unaff_EBX);\n    return;\n}\n",
        "token_count": 351
    },
    "0042fe5b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042fe5b(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint arg_8h;\n    \n    arg_8h = fcn.00437fde(param_1, param_2, param_3, param_4);\n    fcn.00401020(arg_8h);\n    return;\n}\n",
        "token_count": 84
    },
    "00430711": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00430711(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    puVar2 = fcn.0043054e(arg_8h, &arg_8h, &var_4h);\n    if (puVar2 == NULL) {\n        if (*(in_ECX + 4) == 0) {\n            fcn.004304b0(*(in_ECX + 8), 1);\n        }\n        puVar2 = fcn.004306c3();\n        puVar2[1] = iVar1;\n        *puVar2 = *(arg_8h * 4 + *(in_ECX + 4));\n        *(arg_8h * 4 + *(in_ECX + 4)) = puVar2;\n    }\n    return puVar2 + 2;\n}\n",
        "token_count": 216
    },
    "00430b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430b20(uint param_1, uint param_2, uint param_3)\n\n{\n    uint arg_8h;\n    \n    arg_8h = fcn.0043a295(param_1, param_2, param_3);\n    fcn.00401020(arg_8h);\n    return;\n}\n",
        "token_count": 74
    },
    "00430d32": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00430d32(int32_t arg_8h, uint *arg_ch, uint noname_2, code *arg_14h, uint *arg_18h, int32_t arg_1ch, \n            int32_t *arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uint uVar3;\n    uint *unaff_ESI;\n    uint *puVar4;\n    \n    uVar3 = unaff_EBX;\n    puVar4 = unaff_ESI;\n    if (arg_8h != 0) goto code_r0x00430d41;\ncode_r0x00430d3c:\n    fcn.0042e629();\n    arg_8h = extraout_ECX;\n    uVar3 = unaff_EBX;\n    puVar4 = unaff_ESI;\ncode_r0x00430d41:\n    unaff_EBX = 1;\n    if (arg_20h != NULL) {\n        *arg_20h = arg_8h;\n        arg_20h[1] = arg_14h;\n        return 1;\n    }\n    if (0xb < arg_1ch - 0x38U) {\n        return 0;\n    }\n    // switch table (12 cases) at 0x430e3a\n    unaff_ESI = puVar4;\n    switch(*((arg_1ch - 0x38U) * 4 + 0x430e3a)) {\n    case 0x430d72:\n        (*arg_14h)();\n        return 1;\n    case 0x430d7a:\n        uVar2 = (*arg_14h)();\n        return uVar2;\n    case 0x430d82:\n        arg_18h = arg_ch;\n        break;\n    case 0x430d8d:\n        arg_18h = arg_ch;\n        goto code_r0x00430e26;\n    case 0x430d95:\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_18h[1], *arg_18h);\n            return 1;\n        }\n        goto code_r0x00430d3c;\n    case 0x430da9:\n        if (arg_18h != NULL) {\n            uVar2 = (*arg_14h)(arg_18h[1], *arg_18h);\n            return uVar2;\n        }\n        goto code_r0x00430d3c;\n    case 0x430dba:\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n            return 1;\n        }\n        goto code_r0x00430d3c;\n    case 0x430dd2:\n        if (arg_18h != NULL) {\n            uVar2 = (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n            return uVar2;\n        }\n        goto code_r0x00430d3c;\n    case 0x430dea:\n        unaff_ESI = arg_18h;\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_18h);\n            goto code_r0x00430df9;\n        }\n        goto code_r0x00430d3c;\n    case 0x430e07:\n        goto code_r0x00430e07;\n    case 0x430e1b:\n        break;\n    case 0x430e23:\ncode_r0x00430e26:\n        uVar2 = (*arg_14h)(arg_18h);\n        return uVar2;\n    }\n    (*arg_14h)(arg_18h);\n    return 1;\ncode_r0x00430e07:\n    unaff_ESI = arg_18h;\n    if (arg_18h != NULL) {\n        (*arg_14h)(arg_18h, arg_ch, puVar4, uVar3);\ncode_r0x00430df9:\n        iVar1 = arg_18h[7];\n        arg_18h[7] = 0;\n        return iVar1 == 0;\n    }\n    goto code_r0x00430d3c;\n}\n",
        "token_count": 970
    },
    "00431737": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00431737(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t pvParam;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    iVar2 = fcn.0043158b();\n    if (iVar2 == 0) {\n        if ((((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) &&\n           (iVar2 = (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &pvParam, 0),  iVar2 != 0)) {\n            arg_ch[1] = 0;\n            arg_ch[2] = 0;\n            pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n            uVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n            arg_ch[3] = uVar4;\n            uVar4 = (*pcVar1)(1);\n            arg_ch[5] = pvParam;\n            arg_ch[6] = uStack16;\n            arg_ch[7] = uStack12;\n            arg_ch[8] = uStack8;\n            uVar3 = 1;\n            arg_ch[4] = uVar4;\n            arg_ch[9] = 1;\n            if (0x47 < *arg_ch) {\n                fcn.0043a4a2(arg_ch + 10, 0x20, \"DISPLAY\", 0x1f);\n            }\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = (**0x46b7a0)(arg_8h, arg_ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 423
    },
    "004332ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004332ee(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_60h;\n    uint lprcSrc;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t lpPoints;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lprcDst;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.00430a33();\n    if (arg_8h == 0) {\n        if ((var_4h & 0x40000000) == 0) {\n            iVar5 = (*_sym.imp.USER32.dll_GetWindow)(*(in_ECX + 0x20), 4);\n        }\n        else {\n            iVar5 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20));\n        }\n        if ((iVar5 != 0) && (iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x36b, 0, 0),  iVar4 != 0)) {\n            iVar5 = iVar4;\n        }\n    }\n    else {\n        iVar5 = *(arg_8h + 0x20);\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowRect;\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x20), &var_38h);\n    if ((var_4h & 0x40000000) == 0) {\n        if ((iVar5 != 0) &&\n           ((uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0),  (uVar2 & 0x10000000) == 0 ||\n            ((uVar2 & 0x20000000) != 0)))) {\n            iVar5 = 0;\n        }\n        if (iVar5 == 0) {\n            iVar5 = fcn.0042f452();\n            if (iVar5 != 0) {\n                iVar5 = *(iVar5 + 0x20);\n            }\n            uVar3 = fcn.004316cc(iVar5, 1);\n            fcn.00431737(uVar3, iVar5);\n            pcVar1 = _sym.imp.USER32.dll_CopyRect;\n            (*_sym.imp.USER32.dll_CopyRect)(&lpPoints, &lprcSrc);\n            (*pcVar1)(&lprcDst, &lprcSrc);\n        }\n        else {\n            (*pcVar1)(iVar5, &lpPoints);\n            uVar3 = fcn.004316cc(iVar5, 2);\n            fcn.00431737(uVar3, iVar5);\n            (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20));\n        pcVar1 = _sym.imp.USER32.dll_GetClientRect;\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar3, &lprcDst);\n        (*pcVar1)(iVar5, &lpPoints);\n        (*_sym.imp.USER32.dll_MapWindowPoints)(iVar5, uVar3, &lpPoints, 2);\n    }\n    iVar5 = (lpPoints + var_20h) / 2 - (var_30h - var_38h) / 2;\n    iVar4 = (var_24h + var_1ch) / 2 - (var_2ch - var_34h) / 2;\n    if ((lprcDst <= iVar5) && (lprcDst = iVar5,  var_10h < (var_30h - var_38h) + iVar5)) {\n        lprcDst = (var_38h - var_30h) + var_10h;\n    }\n    if ((var_14h <= iVar4) && (var_14h = iVar4,  var_ch < (var_2ch - var_34h) + iVar4)) {\n        var_14h = (var_34h - var_2ch) + var_ch;\n    }\n    fcn.00430aa3(0, lprcDst, var_14h, 0xffffffff, 0xffffffff, 0x15);\n    return;\n}\n",
        "token_count": 1073
    },
    "004337f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004337f2(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    \n    iVar1 = fcn.00433757(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = iVar1 + 0x1c;\n    if (iVar1 == 0) {\n        fcn.0042e629();\n        iVar1 = extraout_ECX;\n    }\n    if (*(iVar1 + 4) != 0) {\n        for (puVar2 = *(*(iVar1 + 4) + ((unaff_retaddr >> 4) % *(iVar1 + 8)) * 4); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 221
    },
    "00435aa6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435aa6(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY532;\n    uint in_stack_fffffe08;\n    \n    fcn.004382d6();\n    fcn.0042f330();\n    fcn.0043104a();\n    *in_FS_OFFSET = uStackY532;\n    fcn.00436f55(in_stack_fffffe08);\n    return;\n}\n",
        "token_count": 93
    },
    "0043698d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0043698d(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    \n    iVar1 = fcn.0043690b(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = iVar1 + 0x1c;\n    if (iVar1 == 0) {\n        fcn.0042e629();\n        iVar1 = extraout_ECX;\n    }\n    if (*(iVar1 + 4) != 0) {\n        for (puVar2 = *(*(iVar1 + 4) + ((unaff_retaddr >> 4) % *(iVar1 + 8)) * 4); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 222
    },
    "00436ad3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00436ad3(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042f330();\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(iVar1 + 0x2c);\n    return;\n}\n",
        "token_count": 58
    },
    "0043a006": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0043a006(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    float fVar4;\n    float10 in_ST0;\n    uint32_t uStack32;\n    float fStack28;\n    \n    uVar1 = ROUND(in_ST0);\n    uStack32 = uVar1;\n    fStack28 = uVar1 >> 0x20;\n    fVar4 = in_ST0;\n    if ((uStack32 != 0) || (fVar4 = fStack28,  (uVar1 & 0x7fffffff00000000) != 0)) {\n        if (fVar4 < 0) {\n            uVar2 = 0x80000000 < (in_ST0 - uVar1 ^ 0x80000000);\n            bVar3 = CARRY4(uStack32, uVar2);\n            uStack32 = uStack32 + uVar2;\n            fStack28 = fStack28 + bVar3;\n        }\n        else {\n            uVar2 = 0x80000000 < in_ST0 - uVar1;\n            bVar3 = uStack32 < uVar2;\n            uStack32 = uStack32 - uVar2;\n            fStack28 = fStack28 - bVar3;\n        }\n    }\n    return CONCAT44(fStack28, uStack32);\n}\n",
        "token_count": 306
    },
    "0043a5aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043a5aa(uint param_1, uint param_2)\n\n{\n    fcn.0043a555(0x440c96, param_1, 0, param_2);\n    return;\n}\n",
        "token_count": 51
    },
    "0043a66b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0043a66b(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    if ((param_1 != NULL) && (*0x46bab8 != 0)) {\n        *param_1 = *0x46bab8;\n        return 0;\n    }\n    puVar1 = fcn.004383fa();\n    *puVar1 = 0x16;\n    fcn.0043be66(0, 0, 0, 0, 0);\n    return 0x16;\n}\n",
        "token_count": 122
    },
    "0043a6a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0043a6a2(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if ((param_1 != NULL) && (*0x46bab8 != 0)) {\n        *param_1 = *0x46bac4;\n        return 0;\n    }\n    puVar1 = fcn.004383fa();\n    *puVar1 = 0x16;\n    fcn.0043be66(0, 0, 0, 0, 0);\n    return 0x16;\n}\n",
        "token_count": 121
    },
    "0043d75b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0043d75b(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1 == NULL) {\n        puVar1 = fcn.004383fa();\n        *puVar1 = 0x16;\n        fcn.0043be66(0, 0, 0, 0, 0);\n        return 0x16;\n    }\n    *param_1 = *0x45ddfc;\n    return 0;\n}\n",
        "token_count": 109
    },
    "0043d78f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0043d78f(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1 == NULL) {\n        puVar1 = fcn.004383fa();\n        *puVar1 = 0x16;\n        fcn.0043be66(0, 0, 0, 0, 0);\n        return 0x16;\n    }\n    *param_1 = *0x45de00;\n    return 0;\n}\n",
        "token_count": 109
    },
    "0043d7c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0043d7c3(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1 == NULL) {\n        puVar1 = fcn.004383fa();\n        *puVar1 = 0x16;\n        fcn.0043be66(0, 0, 0, 0, 0);\n        return 0x16;\n    }\n    *param_1 = *0x45ddf8;\n    return 0;\n}\n",
        "token_count": 110
    },
    "0043f962": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043f974)\n// WARNING: Removing unreachable block (ram,0x0043f97a)\n// WARNING: Removing unreachable block (ram,0x0043f97c)\n\nvoid fcn.0043f962(void)\n\n{\n    return;\n}\n",
        "token_count": 66
    },
    "00447e24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00447e24(uint param_1)\n\n{\n    fcn.00439d20(param_1, 0, 0x18);\n    return param_1;\n}\n",
        "token_count": 44
    },
    "00436c17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00436c17(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0043b562(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "00436b57": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00436b57(void)\n\n{\n    uint arg_8h;\n    uint var_18h;\n    uint32_t var_4h;\n    \n    var_4h = *0x45d5bc ^ &stack0xfffffffc;\n    arg_8h = (*_sym.imp.KERNEL32.dll_GetOEMCP)(&var_18h);\n    (*_sym.imp.KERNEL32.dll_GetCPInfo)();\n    fcn.00436f55(arg_8h);\n    return;\n}\n",
        "token_count": 111
    },
    "0043068a": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043068a(code **param_1, code *param_2)\n\n{\n    *param_1 = vtable.CMapPtrToPtr.0;\n    if (param_2 < 1) {\n        param_2 = 0xa;\n    }\n    param_1[1] = NULL;\n    param_1[2] = 0x11;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 132
    },
    "00430fb8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430fb8(code **param_1)\n\n{\n    *param_1 = vtable.CCmdUI.0;\n    param_1[8] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[9] = NULL;\n    param_1[4] = NULL;\n    param_1[3] = NULL;\n    param_1[5] = NULL;\n    param_1[7] = NULL;\n    param_1[6] = NULL;\n    return;\n}\n",
        "token_count": 126
    },
    "00430ffa": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00430ffa(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0042f330();\n    *(param_1 + 0x1c) = uVar1;\n    *(param_1 + 4) = 1;\n    *(param_1 + 0x14) = 1;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x18) = 0;\n    return param_1;\n}\n",
        "token_count": 149
    },
    "0043132b": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0043132b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004382a3(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    pcVar1 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CHandleMap.0;\n    fcn.00436852(*(pcVar1 + 4), 0x40);\n    *(unaff_EBP + -4) = 0;\n    fcn.0043068a(10);\n    *(unaff_EBP + -4) = 1;\n    fcn.0043068a(4);\n    iVar2 = 0;\n    *(unaff_EBP + -4) = 2;\n    if (*(unaff_EBP + 0xc) != 0) goto code_r0x00431380;\n    do {\n        iVar2 = fcn.0042e629();\ncode_r0x00431380:\n    } while (*(unaff_EBP + 0x10) == iVar2);\n    fcn.004304b0(7, iVar2);\n    extraout_ECX[5] = *(unaff_EBP + 0xc);\n    extraout_ECX[6] = *(unaff_EBP + 0x10);\n    extraout_ECX[0x16] = *(unaff_EBP + 0x14);\n    extraout_ECX[0x17] = *(unaff_EBP + 0x18);\n    extraout_ECX[0x15] = pcVar1;\n    fcn.00438342();\n    return;\n}\n",
        "token_count": 457
    },
    "0042e5e6": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042e5e6(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0xc) = 1;\n    iVar1 = fcn.0042ea89(*(param_1 + 0x94), param_1 + 0x14, 0x80);\n    *(param_1 + 0x10) = iVar1 != 0;\n    return;\n}\n",
        "token_count": 100
    },
    "0043050a": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043050a(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != 0) {\n        fcn.0042df88(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    fcn.00430d1c();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 123
    },
    "00430788": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430788(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.00430d1c();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 102
    },
    "00434aaa": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00434aaa(code **param_1)\n\n{\n    param_1[5] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    fcn.00436ad3();\n    return param_1;\n}\n",
        "token_count": 144
    },
    "00447753": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00447753(void)\n\n{\n    *0x45e6b4 = (*_sym.imp.KERNEL32.dll_CreateFileA)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 62
    },
    "0042df5d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0042df5d(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.0043790d(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x45cc90 == NULL) break;\n        iVar1 = (**0x45cc90)(param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "0042f499": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0042f499(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetParent;\n    iVar3 = param_1;\n    if (param_1 != 0) goto code_r0x0042f4c8;\n    iVar3 = fcn.0042f3af();\n    if ((iVar3 == 0) && (iVar3 = fcn.0042f452(),  iVar3 == 0)) {\n        iVar3 = 0;\n        iVar5 = iVar3;\n        iVar6 = iVar3;\n    }\n    else {\n        for (iVar3 = *(iVar3 + 0x20); iVar5 = iVar3,  iVar6 = iVar3,  iVar3 != 0; iVar3 = (*pcVar2)(iVar3)) {\ncode_r0x0042f4c8:\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar3, 0xfffffff0);\n            iVar5 = iVar3;\n            iVar6 = iVar3;\n            if ((uVar4 & 0x40000000) == 0) break;\n        }\n    }\n    while (iVar1 = iVar5,  iVar1 != 0) {\n        iVar5 = (*pcVar2)(iVar1);\n        iVar3 = iVar1;\n    }\n    if ((param_1 == 0) && (iVar6 != 0)) {\n        iVar6 = (*_sym.imp.USER32.dll_GetLastActivePopup)(iVar6);\n    }\n    if (param_2 != NULL) {\n        if (((iVar3 == 0) || (iVar5 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar3),  iVar5 == 0)) || (iVar3 == iVar6))\n        {\n            *param_2 = 0;\n        }\n        else {\n            *param_2 = iVar3;\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar3, 0);\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 489
    },
    "0042f982": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f982(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint lpCriticalSection;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 0x1c);\n    if ((0 < arg_8h) && (arg_8h < *(in_ECX + 0xc))) {\n        for (iVar3 = *(in_ECX + 0x14); iVar3 != 0; iVar3 = *(iVar3 + 4)) {\n            if (arg_8h < *(iVar3 + 8)) {\n                puVar2 = *(*(iVar3 + 0xc) + arg_8h * 4);\n                if (puVar2 != NULL) {\n                    (***puVar2)(1);\n                }\n                *(*(iVar3 + 0xc) + arg_8h * 4) = 0;\n            }\n        }\n        puVar1 = *(in_ECX + 0x10) + arg_8h * 8;\n        *puVar1 = *puVar1 & 0xfffffffe;\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 0x1c);\n    }\n    return;\n}\n",
        "token_count": 295
    },
    "0042fddd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042fddd(int32_t hWnd, uint lpPoint, uint arg_10h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint lpRect;\n    \n    (*_sym.imp.USER32.dll_ClientToScreen)(hWnd, &lpPoint);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    uVar5 = 5;\n    do {\n        hWnd = (*pcVar1)(hWnd, uVar5);\n        if (hWnd == 0) {\n            return 0;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(hWnd);\n        if ((iVar2 != 0) &&\n           (uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar3 & 0x10000000) != 0)) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n            iVar4 = (*_sym.imp.USER32.dll_PtInRect)(&lpRect, lpPoint, arg_10h);\n            if (iVar4 != 0) {\n                return hWnd;\n            }\n        }\n        uVar5 = 2;\n    } while( true );\n}\n",
        "token_count": 300
    },
    "0043054e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0043054e(int32_t param_1, uint32_t param_2, uint32_t *param_3, uint32_t *param_4)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    *param_4 = param_2 >> 4;\n    uVar2 = (param_2 >> 4) % *(param_1 + 8);\n    *param_3 = uVar2;\n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + uVar2 * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 192
    },
    "00430586": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00430586(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t extraout_ECX;\n    uint *puVar1;\n    \n    if (param_1 == 0) {\n        fcn.0042e629();\n        param_1 = extraout_ECX;\n    }\n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 179
    },
    "004305c6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004305c6(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    \n    if (*(param_1 + 4) == 0) {\n        puVar2 = NULL;\n    }\n    else {\n        puVar3 = *(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4;\n        puVar1 = *puVar3;\n        while (puVar2 = puVar1,  puVar2 != NULL) {\n            if (puVar2[1] == param_2) {\n                *puVar3 = *puVar2;\n                fcn.00430535(puVar2);\n                return 0x1;\n            }\n            puVar3 = puVar2;\n            puVar1 = *puVar2;\n        }\n    }\n    return puVar2;\n}\n",
        "token_count": 218
    },
    "00430d1c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430d1c(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1 != NULL) {\n        do {\n            piVar1 = *param_1;\n            fcn.0042df88(param_1);\n            param_1 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "00432656": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00432656(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    iVar1 = 0x7fffffff;\n    if (param_2 == 0x7fffffff) goto code_r0x00432675;\n    if (*param_1 == 0x7fffffff) goto code_r0x00432673;\n    if (*param_1 == param_2) goto code_r0x00432673;\n    do {\n        iVar1 = fcn.0042e629();\n        param_1 = extraout_ECX;\ncode_r0x00432673:\n        *param_1 = param_2;\ncode_r0x00432675:\n    } while (*param_1 == iVar1);\n    fcn.0042fbfc(*param_1);\n    return;\n}\n",
        "token_count": 198
    },
    "004327ed": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004327ed(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (arg_8h == 0) {\n        fcn.0042e629();\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n    iVar3 = 0;\n    if (0 < iVar1) {\n        do {\n            iVar2 = fcn.00432628(iVar3);\n            if (iVar2 == 0) {\n                iVar2 = (*_sym.imp.USER32.dll_GetMenuItemID)(*(arg_8h + 4), iVar3);\n                if (iVar2 == arg_ch) goto code_r0x0043284f;\n            }\n            else {\n                if (*(iVar2 + 4) == arg_ch) {\ncode_r0x0043284f:\n                    iVar1 = fcn.0043698d(*(arg_8h + 4));\n                    return iVar1;\n                }\n                iVar2 = fcn.004327ed(iVar2, arg_ch);\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 304
    },
    "00433ab6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433ab6(uint hDlg, uint nIDDlgItem, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(hDlg, nIDDlgItem);\n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(iVar2);\n        if ((iVar3 != 0) && (iVar3 = fcn.00433ab6(iVar2, nIDDlgItem, arg_10h),  iVar3 != 0)) {\n            return;\n        }\n        if (arg_10h == 0) {\n            fcn.004337cb();\n            return;\n        }\n        iVar2 = fcn.004337f2(iVar2);\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    iVar2 = (*pcVar1)(hDlg);\n    while( true ) {\n        if (iVar2 == 0) {\n            return;\n        }\n        iVar3 = fcn.00433ab6(iVar2, nIDDlgItem, arg_10h);\n        if (iVar3 != 0) break;\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    }\n    return;\n}\n",
        "token_count": 317
    },
    "00433c4d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00433c4d(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_1ch;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&var_1ch, 0, 0x121, 0x121, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&var_1ch);\n    }\n    fcn.00433727();\n    return;\n}\n",
        "token_count": 133
    },
    "00433ff9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433ff9(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint in_stack_00000008;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    int32_t in_stack_00000014;\n    int32_t in_stack_00000018;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    for (arg_8h_00 = (*_sym.imp.USER32.dll_GetTopWindow)(arg_8h); arg_8h_00 != 0;\n        arg_8h_00 = (*_sym.imp.USER32.dll_GetWindow)(arg_8h_00, 2)) {\n        if (in_stack_00000018 == 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, in_stack_00000008, in_stack_0000000c, in_stack_00000010);\n        }\n        else {\n            iVar2 = fcn.004337f2(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.00433d9c(iVar2, *(iVar2 + 0x20), in_stack_00000008, in_stack_0000000c, in_stack_00000010);\n            }\n        }\n        if (in_stack_00000014 != 0) {\n            iVar2 = (*pcVar1)(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.00433ff9(arg_8h_00);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 375
    },
    "00434959": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00434959(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if ((param_1 != 0) && (iVar1 = *(param_1 + 0x20),  *(param_1 + 0x20) != 0)) {\n        do {\n            iVar3 = iVar1;\n            iVar1 = fcn.00434914(iVar3);\n        } while (iVar1 != 0);\n        uVar2 = fcn.004337cb(iVar3);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 143
    },
    "0043ec85": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043ec85(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00439cb8(0x4540f8, 0xc);\n    fcn.0043da80(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x46c3d0;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x46c3cc;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0043ecc9;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.004379d0(arg_8h_00);\ncode_r0x0043ecc9:\n        fcn.004379d0(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0043ecec();\n    fcn.00439cfd();\n    return;\n}\n",
        "token_count": 401
    },
    "0043158b": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nbool fcn.0043158b(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*0x46b7ac != 0) {\n        return *0x46b7a0 != 0;\n    }\n    *0x46b7b0 = fcn.00431533();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"USER32\");\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (((((iVar2 != 0) && (*0x46b790 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x44fd0c),  *0x46b790 != 0)) &&\n         (*0x46b794 = (*pcVar1)(iVar2, \"MonitorFromWindow\"),  *0x46b794 != 0)) &&\n        ((*0x46b798 = (*pcVar1)(iVar2, \"MonitorFromRect\"),  *0x46b798 != 0 &&\n         (*0x46b79c = (*pcVar1)(iVar2, \"MonitorFromPoint\"),  *0x46b79c != 0)))) &&\n       ((*0x46b7a4 = (*pcVar1)(iVar2, \"EnumDisplayMonitors\"),  *0x46b7a4 != 0 &&\n        ((*0x46b7a0 = (*pcVar1)(iVar2, \"GetMonitorInfoA\"),  *0x46b7a0 != 0 &&\n         (*0x46b7a8 = (*pcVar1)(iVar2, \"EnumDisplayDevicesA\"),  *0x46b7a8 != 0)))))) {\n        *0x46b7ac = 1;\n        return true;\n    }\n    *0x46b790 = 0;\n    *0x46b794 = 0;\n    *0x46b798 = 0;\n    *0x46b79c = 0;\n    *0x46b7a0 = 0;\n    *0x46b7a4 = 0;\n    *0x46b7a8 = 0;\n    *0x46b7ac = 1;\n    return false;\n}\n",
        "token_count": 493
    },
    "0042ec73": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ec73(code **param_1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    *param_1 = vtable._AFX_THREAD_STATE.0;\n    if (param_1[0xb] != NULL) {\n        (*pcVar1)(param_1[0xb]);\n    }\n    if (param_1[10] != NULL) {\n        (*pcVar1)(param_1[10]);\n    }\n    if (param_1[3] != NULL) {\n        fcn.004379d0(param_1[3]);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0042f740": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042f740(uint *param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    puVar1 = param_1 + 7;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n    if ((((0 < unaff_retaddr) && (unaff_retaddr < param_1[3])) &&\n        (iVar3 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*param_1),  iVar3 != 0)) && (unaff_retaddr < *(iVar3 + 8))) {\n        uVar2 = *(*(iVar3 + 0xc) + unaff_retaddr * 4);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n        return uVar2;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n    return 0;\n}\n",
        "token_count": 214
    }
}