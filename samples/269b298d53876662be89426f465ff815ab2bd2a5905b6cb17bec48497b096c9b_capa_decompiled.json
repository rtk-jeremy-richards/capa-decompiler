{
    "00401000": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401000(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_5ch;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    // [00] -r-x section size 28672 named .text\n    iVar3 = *0x430850;\n    if (arg_ch == 0xf) {\n        uVar4 = (*_sym.imp.USER32.dll_BeginPaint)(arg_8h, &var_5ch);\n        var_ch = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(arg_8h, &var_1ch);\n        iVar5 = var_10h;\n        pcVar2 = _sym.imp.GDI32.dll_DeleteObject;\n        var_10h = 0;\n        for (; var_18h < iVar5; var_18h = var_18h + 4) {\n            iVar7 = iVar5 - var_18h;\n            var_8h = CONCAT11((*(iVar3 + 0x52) * iVar7 + *(iVar3 + 0x56) * var_18h) / iVar5, \n                              (*(iVar3 + 0x51) * iVar7 + *(iVar3 + 0x55) * var_18h) / iVar5) << 8 |\n                     (*(iVar3 + 0x50) * iVar7 + *(iVar3 + 0x54) * var_18h) / iVar5 & 0xffU;\n            uVar6 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            var_10h = var_10h + 4;\n            (*_sym.imp.USER32.dll_FillRect)(uVar4, &var_1ch, uVar6);\n            (*pcVar2)(uVar6);\n        }\n        if (*(iVar3 + 0x58) != -1) {\n            iVar5 = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(*(iVar3 + 0x34));\n            if (iVar5 != 0) {\n                var_1ch = 0x10;\n                var_18h = 8;\n                (*_sym.imp.GDI32.dll_SetBkMode)(uVar4, 1);\n                (*_sym.imp.GDI32.dll_SetTextColor)(uVar4, *(iVar3 + 0x58));\n                pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n                uVar6 = (*_sym.imp.GDI32.dll_SelectObject)(uVar4, iVar5);\n                (*_sym.imp.USER32.dll_DrawTextA)(uVar4, 0x430040, 0xffffffff, &var_1ch, 0x820);\n                (*pcVar1)(uVar4, uVar6);\n                (*pcVar2)(iVar5);\n            }\n        }\n        (*_sym.imp.USER32.dll_EndPaint)(arg_8h, &var_5ch);\n        uVar4 = 0;\n    }\n    else {\n        if (arg_ch == 0x46) {\n            *(arg_14h + 0x18) = *(arg_14h + 0x18) | 0x10;\n            *(arg_14h + 4) = *0x430848;\n        }\n        uVar4 = (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar4;\n}\n",
        "token_count": 846
    },
    "null": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid entry0(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    code *pcVar8;\n    code *pcVar9;\n    code *pcVar10;\n    uint uVar11;\n    uint uVar12;\n    char *pcVar13;\n    uint uStack464;\n    uint32_t *puStack460;\n    char *pcStack456;\n    int32_t iStack452;\n    uint uStack448;\n    uint uStack444;\n    char *pcStack440;\n    uint uStack436;\n    uint uStack432;\n    uchar *puStack428;\n    uint uStack424;\n    uint uStack420;\n    uint uStack416;\n    uint uStack412;\n    uint32_t *puStack408;\n    uchar auStack364 [364];\n    \n    puStack408 = 0x403588;\n    (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n    puStack408 = 0x8001;\n    uStack412 = 0x403593;\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    uStack412 = 0;\n    uStack416 = 0x40359a;\n    *0x4308f8 = (*_sym.imp.ole32.dll_OleInitialize)();\n    uStack416 = 8;\n    uStack420 = 0x4035a6;\n    *0x430844 = fcn.00406618();\n    uStack420 = 0;\n    puStack428 = &stack0xfffffe94;\n    uStack424 = 0x160;\n    uStack432 = 0;\n    uStack436 = 0x42a060;\n    pcStack440 = 0x4035c2;\n    (*_sym.imp.SHELL32.dll_SHGetFileInfoA)();\n    pcStack440 = \"NSIS Error\";\n    uStack444 = 0x430040;\n    uStack448 = 0x4035d1;\n    fcn.00406140();\n    uStack448 = 0x4035d7;\n    uStack448 = (*_sym.imp.KERNEL32.dll_GetCommandLineA)();\n    iStack452 = 0x436000;\n    pcStack456 = 0x4035e3;\n    fcn.00406140();\n    pcStack456 = NULL;\n    puStack460 = 0x4035ea;\n    *0x430840 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    uStack464 = 0x436000;\n    if (*0x436000 == '\\\"') {\n        uStack436 = CONCAT31(uStack436._1_3_, 0x22);\n        uStack464 = 0x436001;\n    }\n    puStack460 = uStack436;\n    puVar3 = fcn.00405bfb();\n    puVar4 = (*_sym.imp.USER32.dll_CharNextA)(puVar3);\n    pcStack440 = puVar4;\n    while (uVar2 = uStack448,  cVar1 = *puVar4,  cVar1 != '\\0') {\n        while (cVar1 == ' ') {\n            puVar4 = puVar4 + 1;\n            cVar1 = *puVar4;\n        }\n        uStack448 = CONCAT31(uStack448._1_3_, 0x20);\n        if (*puVar4 == '\\\"') {\n            puVar4 = puVar4 + 1;\n            uStack448 = uVar2 & 0xffffff00 | 0x22;\n        }\n        puVar5 = puVar4;\n        if (*puVar4 == '/') {\n            puVar5 = puVar4 + 1;\n            if ((*puVar5 == 'S') && ((*(puVar4 + 2) == ' ' || (*(puVar4 + 2) == '\\0')))) {\n                *0x4308e0 = 1;\n            }\n            if ((*puVar5 == (((str.NCRC[3] << 8 | str.NCRC[2]) << 8 | str.NCRC[1]) << 8 | str.NCRC[0])) &&\n               ((*(puVar4 + 5) == ' ' || (*(puVar4 + 5) == '\\0')))) {\n                uStack436 = uStack436 | 4;\n            }\n            if (*(puVar4 + -1) == (((str.__D[3] << 8 | str.__D[2]) << 8 | str.__D[1]) << 8 | str.__D[0])) {\n                *(puVar4 + -1) = '\\0';\n                fcn.00406140(0x436400, puVar4 + 3);\n                break;\n            }\n        }\n        puVar4 = fcn.00405bfb();\n        puVar3 = puVar5;\n        if (*puVar4 == '\\\"') {\n            puVar4 = puVar4 + 1;\n        }\n    }\n    pcVar8 = _sym.imp.KERNEL32.dll_GetTempPathA;\n    pcVar13 = 0x437400;\n    (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x400, 0x437400, puVar3);\n    iVar6 = fcn.0040352d();\n    if (iVar6 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(0x437400, 0x3fb);\n        pcVar13 = \"\\\\Temp\";\n        puVar4 = 0x437400;\n        sub.KERNEL32.dll_lstrcatA(0x437400, \"\\\\Temp\");\n        iVar6 = fcn.0040352d();\n        if (iVar6 == 0) {\n            (*pcVar8)(0x3fc, 0x437400);\n            sub.KERNEL32.dll_lstrcatA(0x437400, 0x40a7e4);\n            pcVar8 = _sym.imp.KERNEL32.dll_SetEnvironmentVariableA;\n            (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableA)(\"TEMP\", 0x437400);\n            (*pcVar8)(0x40a7d8, 0x437400);\n            iVar6 = fcn.0040352d();\n            if (iVar6 == 0) goto code_r0x00403822;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteFileA)(0x437000);\n    uStack448 = 0x403781;\n    puVar4 = puStack408;\n    puStack428 = fcn.004030a5(puStack408);\n    if (puStack428 == NULL) {\n        if (*0x43085c != 0) {\n            uStack448 = 0;\n            iStack452 = 0x436000;\n            pcStack456 = 0x40379c;\n            puVar3 = fcn.00405bfb();\n            if (0x435fff < puVar3) {\n                do {\n                    if (*puVar3 == (((str.___[3] << 8 | str.___[2]) << 8 | str.___[1]) << 8 | str.___[0])) break;\n                    puVar3 = puVar3 + -1;\n                } while (0x435fff < puVar3);\n            }\n            uStack436 = \"Error launching installer\";\n            if (puVar3 < 0x436000) goto code_r0x0040384d;\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n            puStack460 = 0x4037ed;\n            puVar4 = puVar3;\n            iVar6 = fcn.00405cbe();\n            if (iVar6 == 0) goto code_r0x00403822;\n            uStack464 = 0x436400;\n            puStack460 = puVar3;\n            fcn.00406140();\n            pcVar13 = 0x436800;\n            fcn.00406140(0x436800, puVar3);\n            pcStack456 = NULL;\n        }\n        *0x4308ec = -1;\n        uStack448 = fcn.00403ac1();\n        puVar4 = 0x1;\n        fcn.00406444(1);\n    }\ncode_r0x00403822:\n    while( true ) {\n        fcn.004039c6(puVar4);\n        (*_sym.imp.ole32.dll_OleUninitialize)();\n        if (puStack460 == NULL) break;\n        fcn.004058ff(puStack460, 0x200010);\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(2);\ncode_r0x0040384d:\n        pcStack456 = \"~nsu.tmp\";\n        puStack460 = 0x437400;\n        uStack464 = 0x403858;\n        sub.KERNEL32.dll_lstrcatA();\n        uStack464 = 0x436c00;\n        pcVar13 = 0x403865;\n        iVar6 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(0x437400);\n        if (iVar6 != 0) {\n            (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(0x437400, 0);\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(0x437400);\n            if (*0x436400 == '\\0') {\n                uStack464 = 0x436c00;\n                puStack460 = 0x436400;\n                fcn.00406140();\n            }\n            uStack464 = uStack432;\n            fcn.00406140(0x431000);\n            iVar6 = 0x1a;\n            *0x431400 = *0x40a7c1 << 8 | *0x40a7c0;\n            do {\n                fcn.00406162(0x429c60, *(*0x430850 + 0x120));\n                (*_sym.imp.KERNEL32.dll_DeleteFileA)(0x429c60);\n                if ((iStack452 != 0) && (iVar7 = (*_sym.imp.KERNEL32.dll_CopyFileA)(0x437c00, 0x429c60, 1),  iVar7 != 0)\n                   ) {\n                    fcn.00405ff4(0x429c60, 0);\n                    fcn.00406162(0x429c60, *(*0x430850 + 0x124));\n                    iVar7 = fcn.0040589e(0x429c60);\n                    if (iVar7 != 0) {\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar7);\n                        iStack452 = 0;\n                    }\n                }\n                *0x431400 = *0x431400 + 1;\n                *0x431400 = *0x431400 & 0xff00 | *0x431400;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n            pcVar13 = NULL;\n            puVar4 = 0x437400;\n            fcn.00405ff4();\n        }\n    }\n    if (*0x4308d4 != 0) {\n        uVar12 = 3;\n        pcVar8 = fcn.00406618(3);\n        pcVar9 = fcn.00406618(4);\n        pcVar10 = fcn.00406618(5);\n        if (((pcVar8 != NULL) && (pcVar9 != NULL)) && (pcVar10 != NULL)) {\n            uVar11 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &stack0xfffffe34);\n            iVar6 = (*pcVar8)(uVar11);\n            if (iVar6 != 0) {\n                (*pcVar9)(0, \"SeShutdownPrivilege\", &stack0xfffffe40);\n                uStack464 = 1;\n                iStack452 = 2;\n                (*pcVar10)(pcVar13, 0, &stack0xfffffe30, 0, 0, 0);\n            }\n        }\n        iVar6 = (*_sym.imp.USER32.dll_ExitWindowsEx)(2, 0);\n        if (iVar6 == 0) {\n            fcn.0040140b(uVar12, 9);\n        }\n    }\n    if (*0x4308ec != -1) {\n        iStack452 = *0x4308ec;\n    }\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(iStack452);\n    if (*0x40a694 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x40a694);\n        *0x40a694 = -1;\n    }\n    fcn.00403a0b();\n    fcn.004059ab(0x437800, 7);\n    return;\n}\n",
        "token_count": 2842
    },
    "00401434": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t ** __cdecl fcn.00401434(int32_t **hWndChildAfter)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    int32_t **ppiVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t *arg_10h;\n    uint uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t **ppiVar14;\n    uint *puVar15;\n    int32_t **ppiVar16;\n    bool bVar17;\n    uint in_stack_fffffd7c;\n    uint in_stack_fffffd80;\n    uint uVar18;\n    uint uVar19;\n    char *pcVar20;\n    int32_t **ppiVar21;\n    uint lpFindFileData;\n    uint *puStack536;\n    uint *puStack532;\n    uint uStack524;\n    int32_t **ppiStack520;\n    int32_t **ppiStack516;\n    uint var_1ech;\n    uint var_d8h;\n    int32_t lpFileOp;\n    uint var_54h;\n    int32_t var_50h;\n    int32_t lpRect;\n    uint var_48h;\n    int32_t var_44h;\n    uint lpWideCharStr;\n    ushort uStack64;\n    int32_t *lpdwHandle;\n    int32_t lpMultiByteStr;\n    uint8_t var_2dh;\n    int32_t *var_2ch;\n    int32_t **var_28h;\n    int32_t **dwFileAttributes;\n    int32_t **var_20h;\n    int32_t **lpLastWriteTime;\n    int32_t **var_18h;\n    int32_t **var_14h;\n    int32_t **lpNumberOfBytesWritten;\n    int32_t **nNumberOfBytesToWrite;\n    int32_t lpValueName;\n    int32_t **var_4h;\n    \n    ppiVar8 = *0x40c044;\n    pcVar6 = _sym.imp.USER32.dll_ShowWindow;\n    ppiVar14 = hWndChildAfter;\n    ppiVar16 = &fcn.00401434::var_2ch;\n    for (iVar13 = 7; iVar13 != 0; iVar13 = iVar13 + -1) {\n        *ppiVar16 = *ppiVar14;\n        ppiVar14 = ppiVar14 + 1;\n        ppiVar16 = ppiVar16 + 1;\n    }\n    lpValueName = *0x430848;\n    iVar13 = var_28h * 0x400;\n    ppiVar14 = iVar13 + 0x431000;\n    ppiVar16 = dwFileAttributes * 0x400 + 0x431000;\n    *0x40c040 = &fcn.00401434::var_28h;\n    var_4h = NULL;\n    if (0x42 < var_2ch - 2U) goto code_r0x00402d0a;\n    // switch table (67 cases) at 0x402d1c\n    switch(*((var_2ch - 2U) * 4 + 0x402d1c)) {\n    case 0x40148f:\n        fcn.004065c3(\"Jump: %d\", var_28h);\n        return var_28h;\n    case 0x4014a4:\n        uVar11 = fcn.00402e79(0);\n        fcn.004065c3(\"Aborting: \\\"%s\\\"\", uVar11);\n        goto code_r0x004014bb;\n    case 0x4014c5:\n        *0x43000c = *0x43000c + 1;\n        if (*0x430848 == 0) {\n            return 0x7fffffff;\n        }\n        (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        return 0x7fffffff;\n    case 0x4014e0:\n        iVar13 = fcn.0040136d(var_28h);\n        fcn.004065c3(\"Call: %d\", iVar13 + -1);\n        ppiVar8 = fcn.00401389(iVar13 + -1, 0);\n        return ppiVar8;\n    case 0x401502:\n        uVar11 = fcn.00402e79(0);\n        fcn.004065c3(\"detailprint: %s\", uVar11);\n        fcn.004053a1(var_28h, 0);\n        break;\n    case 0x401523:\n        iVar13 = fcn.00402e5c(0);\n        fcn.004065c3(\"Sleep(%d)\", iVar13);\n        if (iVar13 < 2) {\n            iVar13 = 1;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(iVar13);\n        break;\n    case 0x40154c:\n        fcn.004065c3(\"BringToFront\");\n        (*_sym.imp.USER32.dll_SetForegroundWindow)(lpValueName);\n        break;\n    case 0x401565:\n        iVar13 = var_28h * 4;\n        if (var_20h == NULL) {\n            *(iVar13 + 0x430900) = *(iVar13 + 0x4308c0);\n            uVar11 = fcn.00402e5c(1);\n            *(var_28h * 4 + 0x4308c0) = uVar11;\n        }\n        else {\n            *(iVar13 + 0x4308c0) = *(iVar13 + 0x430900);\n        }\n        break;\n    case 0x4015a2:\n        puVar1 = var_20h * 4 + 0x4308c0;\n        uVar12 = *puVar1;\n        ppiVar8 = (&fcn.00401434::var_28h)[uVar12 == 0];\n        *puVar1 = uVar12 & lpLastWriteTime;\n        return ppiVar8;\n    case 0x4015c3:\n        goto code_r0x00402cb3;\n    case 0x4015d0:\n        if (*0x430010 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x430010, dwFileAttributes);\n        }\n        if (*0x430024 != 0) {\n            (*pcVar6)(*0x430024, var_28h);\n        }\n        break;\n    case 0x4015fc:\n        uVar11 = fcn.00402e79(0xfffffff0);\n        fcn.004065c3(\"SetFileAttributes: \\\"%s\\\":%08X\", uVar11, dwFileAttributes);\n        iVar13 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(uVar11, dwFileAttributes);\n        if (iVar13 != 0) break;\n        var_4h = 0x1;\n        pcVar20 = \"SetFileAttributes failed.\";\n        goto code_r0x00401634;\n    case 0x40163e:\n        uVar11 = fcn.00402e79(0xfffffff0);\n        fcn.004065c3(\"CreateDirectory: \\\"%s\\\" (%d)\", uVar11, dwFileAttributes);\n        puVar3 = fcn.00405c69(uVar11);\n        if (puVar3 != NULL) {\n            do {\n                puVar3 = fcn.00405bfb(puVar3, 0x5c);\n                uVar2 = *puVar3;\n                *puVar3 = 0;\n                hWndChildAfter = hWndChildAfter & 0xffffff | uVar2 << 0x18;\n                iVar13 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(uVar11, 0);\n                if (iVar13 == 0) {\n                    iVar13 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    if (iVar13 == 0xb7) {\n                        uVar12 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(uVar11);\n                        if ((uVar12 & 0x10) == 0) {\n                            fcn.004065c3(\"CreateDirectory: can\\'t create \\\"%s\\\" - a file already exists\", uVar11);\n                            var_4h = var_4h + 1;\n                        }\n                    }\n                    else {\n                        uVar9 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        fcn.004065c3(\"CreateDirectory: can\\'t create \\\"%s\\\" (err=%d)\", uVar11, uVar9);\n                        var_4h = var_4h + 1;\n                    }\n                }\n                else {\n                    fcn.004065c3(\"CreateDirectory: \\\"%s\\\" created\", uVar11);\n                }\n                *puVar3 = hWndChildAfter._3_1_;\n                puVar3 = puVar3 + 1;\n            } while (hWndChildAfter._3_1_ != 0);\n        }\n        if (dwFileAttributes != NULL) {\n            fcn.00401423(0xffffffe6);\n            fcn.00406140(0x436800, uVar11);\n            iVar13 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(uVar11);\n            if (iVar13 == 0) {\n                uVar9 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.004065c3(\"SetCurrentDirectory(%s) failed (%d)\", uVar11, uVar9);\n                var_4h = var_4h + 1;\n            }\n            break;\n        }\n        uVar11 = 0xfffffff5;\n        goto code_r0x00402448;\n    case 0x401724:\n        uVar11 = fcn.00402e79(0);\n        iVar13 = fcn.004065f1(uVar11);\n        if (iVar13 == 0) {\n            fcn.004065c3(\"IfFileExists: file \\\"%s\\\" does not exist, jumping %d\", uVar11, var_20h);\n            return var_20h;\n        }\n        fcn.004065c3(\"IfFileExists: file \\\"%s\\\" exists, jumping %d\", uVar11, dwFileAttributes);\n        return dwFileAttributes;\n    case 0x401765:\n        uVar9 = fcn.00402e79(0xffffffd0);\n        uVar18 = 0xffffffdf;\n        hWndChildAfter = fcn.00402e79(0xffffffdf);\n        uVar11 = fcn.00402e79(0x13);\n        fcn.004065c3(\"Rename: %s\", uVar11);\n        iVar13 = (*_sym.imp.KERNEL32.dll_MoveFileA)(uVar9, hWndChildAfter);\n        if (iVar13 == 0) {\n            if ((var_20h == NULL) || (iVar13 = fcn.004065f1(uVar18, uVar9),  iVar13 == 0)) {\n                var_4h = 0x1;\n                pcVar20 = \"Rename failed: %s\";\n            }\n            else {\n                fcn.00405ff4(uVar9, hWndChildAfter);\n                fcn.00401423(0xffffffe4);\n                pcVar20 = \"Rename on reboot: %s\";\n                uVar11 = uVar18;\n            }\n            goto code_r0x004022b5;\n        }\n        uVar11 = 0xffffffe3;\n        goto code_r0x00402448;\n    case 0x4017df:\n        ppiVar8 = fcn.00402e79(0);\n        iVar13 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(ppiVar8, 0x400, ppiVar16, &fcn.00401434::hWndChildAfter);\n        if (iVar13 == 0) {\ncode_r0x0040181f:\n            var_4h = 0x1;\n            *ppiVar16 = 0;\n        }\n        else if ((ppiVar8 < hWndChildAfter) && (*hWndChildAfter != '\\0')) {\n            iVar13 = fcn.004065f1(ppiVar8);\n            if (iVar13 == 0) goto code_r0x0040181f;\n            fcn.00406140(hWndChildAfter, iVar13 + 0x2c);\n        }\n        if (var_20h == NULL) {\n            (*_sym.imp.KERNEL32.dll_GetShortPathNameA)(ppiVar16, ppiVar16, 0x400);\n        }\n        break;\n    case 0x401843:\n        uVar11 = fcn.00402e79(0xffffffff);\n        iVar13 = (*_sym.imp.KERNEL32.dll_SearchPathA)(0, uVar11, 0, 0x400, ppiVar14, &fcn.00401434::hWndChildAfter);\n        bVar17 = iVar13 == 0;\n        goto code_r0x0040185f;\n    case 0x40186a:\n        uVar11 = fcn.00402e79(0xffffffef);\n        iVar13 = fcn.00405e00(ppiVar14, uVar11);\n        goto code_r0x0040187a;\n    case 0x401885:\n        iVar13 = fcn.00402e79(0x31);\n        hWndChildAfter = var_28h & 7;\n        lpValueName = iVar13;\n        fcn.004065c3(\"File: overwriteflag=%d, allowskipfilesflag=%d, name=\\\"%s\\\"\", hWndChildAfter, var_28h >> 3 & 2, \n                     iVar13);\n        iVar10 = fcn.00405c3d(iVar13);\n        if (iVar10 == 0) {\n            uVar9 = 0x436800;\n            uVar11 = fcn.00406140(0x40ac40, 0x436800, iVar13);\n            uVar11 = fcn.00405bd0(uVar11);\n            sub.KERNEL32.dll_lstrcatA(uVar11);\n        }\n        else {\n            uVar9 = 0x40ac40;\n            fcn.00406140(0x40ac40);\n        }\n        fcn.004063ab(0x40ac40);\n        while( true ) {\n            if (2 < hWndChildAfter) {\n                iVar13 = fcn.004065f1(0x40ac40);\n                uVar12 = 0;\n                if (iVar13 != 0) {\n                    uVar12 = (*_sym.imp.KERNEL32.dll_CompareFileTime)(iVar13 + 0x14, &fcn.00401434::lpLastWriteTime);\n                }\n                hWndChildAfter = ((hWndChildAfter - 3U | 0x80000000) & uVar12) == 0;\n            }\n            if (hWndChildAfter == NULL) {\n                fcn.00405dac(0x40ac40);\n            }\n            iVar13 = fcn.00405dd1(0x40ac40, 0x40000000, (hWndChildAfter != 0x1) + '\\x01');\n            lpWideCharStr._0_2_ = iVar13;\n            lpWideCharStr._2_2_ = iVar13 >> 0x10;\n            if (iVar13 != -1) {\n                fcn.004053a1(0xffffffea, lpValueName);\n                *0x4308f4 = *0x4308f4 + 1;\n                iVar13 = fcn.004032de(var_20h, CONCAT22(lpWideCharStr._2_2_, lpWideCharStr), 0, 0);\n                *0x4308f4 = *0x4308f4 + -1;\n                fcn.004065c3(\"File: wrote %d to \\\"%s\\\"\", iVar13, 0x40ac40);\n                if ((lpLastWriteTime != 0xffffffff) || (var_18h != 0xffffffff)) {\n                    (*_sym.imp.KERNEL32.dll_SetFileTime)\n                              (CONCAT22(lpWideCharStr._2_2_, lpWideCharStr), &fcn.00401434::lpLastWriteTime, 0, \n                               &fcn.00401434::lpLastWriteTime);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(CONCAT22(lpWideCharStr._2_2_, lpWideCharStr));\n                if (-1 < iVar13) goto code_r0x00402d0a;\n                if (iVar13 == -2) {\n                    uVar19 = 0xffffffe9;\n                    fcn.00406162(0x40ac40, 0xffffffe9);\n                    uVar18 = 0x40ac40;\n                    sub.KERNEL32.dll_lstrcatA(uVar9, lpValueName, 0x40ac40);\n                }\n                else {\n                    uVar19 = 0xffffffee;\n                    uVar18 = 0x40ac40;\n                    fcn.00406162(0x40ac40, 0xffffffee);\n                }\n                fcn.004065c3(0x40a3bc, 0x40ac40);\n                uVar9 = 0x200010;\n                uVar11 = 0x40ac40;\n                goto code_r0x004024fd;\n            }\n            if (hWndChildAfter != NULL) {\n                fcn.004053a1(0xffffffe2, lpValueName);\n                if (hWndChildAfter == 0x2) {\n                    var_4h = 0x1;\n                }\n                uVar11 = 0x40ac40;\n                pcVar20 = \"File: skipped: \\\"%s\\\" (overwriteflag=%d)\";\n                goto code_r0x004027cf;\n            }\n            fcn.004065c3(\"File: error creating \\\"%s\\\"\", 0x40ac40);\n            fcn.00406140(0x40b440, 0x431000);\n            fcn.00406140(0x431000, 0x40ac40);\n            fcn.00406162(0x40b040, var_14h);\n            fcn.00406140(0x431000, 0x40b440);\n            iVar13 = fcn.004058ff();\n            if (iVar13 != 4) break;\n            fcn.004065c3(\"File: error, user retry\");\n        }\n        if (iVar13 == 5) {\n            fcn.004065c3(\"File: error, user cancel\");\n            *0x4308c8 = *0x4308c8 + 1;\n            return 0;\n        }\n        fcn.004065c3(\"File: error, user abort\");\n        in_stack_fffffd80 = 0x40ac40;\n        in_stack_fffffd7c = 0xfffffffa;\ncode_r0x004014bb:\n        fcn.004053a1(in_stack_fffffd7c, in_stack_fffffd80);\n        return 0x7fffffff;\n    case 0x401aa2:\n        uVar11 = fcn.00402e79(0);\n        pcVar20 = \"Delete: \\\"%s\\\"\";\n        goto code_r0x00401b06;\n    case 0x401ab2:\n        uVar11 = fcn.00402e79(0x31);\n        fcn.004065c3(\"MessageBox: %d,\\\"%s\\\"\", var_28h, uVar11);\n        ppiVar8 = fcn.004058ff(uVar11, var_28h);\n        if (ppiVar8 != NULL) {\n            if (ppiVar8 == var_20h) {\n                return lpLastWriteTime;\n            }\n            if (ppiVar8 == var_18h) {\n                return var_14h;\n            }\n            break;\n        }\n        goto code_r0x00402a77;\n    case 0x401af7:\n        uVar11 = fcn.00402e79(0xfffffff0);\n        pcVar20 = \"RMDir: \\\"%s\\\"\";\ncode_r0x00401b06:\n        fcn.004065c3(pcVar20, uVar11);\n        fcn.004059ab(uVar11, dwFileAttributes);\n        break;\n    case 0x401b1b:\n        uVar11 = fcn.00402e79(1);\n        sub.KERNEL32.dll_lstrlenA(uVar11);\n        goto code_r0x00402cb3;\n    case 0x401b2d:\n        hWndChildAfter = fcn.00402e5c(2);\n        iVar13 = fcn.00402e5c(3);\n        nNumberOfBytesToWrite = fcn.00402e79(1);\n        *ppiVar14 = 0;\n        if (((var_20h == NULL) || (hWndChildAfter != NULL)) &&\n           ((iVar10 = sub.KERNEL32.dll_lstrlenA(nNumberOfBytesToWrite),  -1 < iVar13 ||\n            (iVar13 = iVar13 + iVar10,  -1 < iVar13)))) {\n            if (iVar10 < iVar13) {\n                iVar13 = iVar10;\n            }\n            fcn.00406140(ppiVar14, nNumberOfBytesToWrite + iVar13);\n            iVar13 = hWndChildAfter;\n            if (hWndChildAfter != NULL) {\n                if (hWndChildAfter < 0) {\n                    iVar10 = sub.KERNEL32.dll_lstrlenA(ppiVar14);\n                    hWndChildAfter = iVar13 + iVar10;\n                    if (hWndChildAfter < 0) {\n                        hWndChildAfter = NULL;\n                    }\n                }\n                if (hWndChildAfter < 0x400) {\n                    *(hWndChildAfter + ppiVar14) = 0;\n                }\n            }\n        }\n        break;\n    case 0x401bae:\n        uVar11 = fcn.00402e79(0x20);\n        uVar9 = fcn.00402e79(0x31);\n        if (var_18h == NULL) {\n            iVar13 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)();\n            dwFileAttributes = lpLastWriteTime;\n        }\n        else {\n            iVar13 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(uVar11, uVar9);\n            dwFileAttributes = lpLastWriteTime;\n        }\n        goto joined_r0x00401e8f;\n    case 0x401bdc:\n        hWndChildAfter = fcn.00402e79(1);\n        iVar10 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsA)(hWndChildAfter, ppiVar14, 0x400);\n        if ((iVar10 == 0) ||\n           ((var_20h != NULL && (iVar10 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(hWndChildAfter, ppiVar14),  iVar10 == 0))))\n        {\n            var_4h = 0x1;\n            *ppiVar14 = 0;\n        }\n        *(iVar13 + 0x4313ff) = 0;\n        break;\n    case 0x401c1c:\n        uVar12 = fcn.00402e5c(0);\n        uVar4 = fcn.00402e5c(1);\n        if (var_14h != NULL) {\n            if (uVar12 < uVar4) {\n                return lpLastWriteTime;\n            }\n            if (uVar12 <= uVar4) {\n                return var_20h;\n            }\n            return var_18h;\n        }\n        if (uVar12 < uVar4) {\n            return lpLastWriteTime;\n        }\n        if (uVar12 <= uVar4) {\n            return var_20h;\n        }\n        return var_18h;\n    case 0x401c56:\n        fcn.00402e5c(1);\n        iVar13 = fcn.00402e5c(2);\n        if (0xc < lpLastWriteTime) goto code_r0x00402cb3;\n    // switch table (13 cases) at 0x402e28\n        switch(*(lpLastWriteTime * 4 + 0x402e28)) {\n        case 0x401c77:\n            break;\n        case 0x401c7b:\n            break;\n        case 0x401c7f:\n            break;\n        case 0x401c86:\n            goto joined_r0x00401cc1;\n        case 0x401c93:\n            break;\n        case 0x401c97:\n            break;\n        case 0x401c9b:\n            break;\n        case 0x401c9f:\n            break;\n        case 0x401ca8:\n            break;\n        case 0x401cb2:\n            break;\n        case 0x401cbf:\njoined_r0x00401cc1:\n            if (iVar13 == 0) {\n                var_4h = 0x1;\n            }\n            break;\n        case 0x401cd7:\n            break;\n        case 0x401cdb:\n        }\n        goto code_r0x00402cb3;\n    case 0x401ce3:\n        uVar11 = fcn.00402e79(1);\n        uVar9 = fcn.00402e5c(2);\n        (*_sym.imp.USER32.dll_wsprintfA)(ppiVar14, uVar11, uVar9);\n        break;\n    case 0x401d01:\n        ppiVar16 = var_20h;\n        if (var_20h != NULL) {\n            do {\n                ppiVar16 = ppiVar16 + -1;\n                if (ppiVar8 == NULL) goto code_r0x00401d1d;\n                ppiVar8 = *ppiVar8;\n            } while (ppiVar16 != NULL);\n            if (ppiVar8 == NULL) {\ncode_r0x00401d1d:\n                fcn.004065c3(\"Exch: stack < %d elements\", var_20h);\n                goto code_r0x004024ef;\n            }\n            puVar15 = 0x40ac40;\n            fcn.00406140(0x40ac40, ppiVar8 + 1);\n            ppiVar14 = *0x40c044 + 1;\n            fcn.00406140(ppiVar8 + 1, ppiVar14);\n            goto code_r0x00402c31;\n        }\n        if (dwFileAttributes == NULL) {\n            ppiVar8 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, 0x404);\n            fcn.00406162(ppiVar8 + 1, var_28h);\n            *ppiVar8 = *0x40c044;\n            *0x40c044 = ppiVar8;\n            break;\n        }\n        if (*0x40c044 != NULL) {\n            fcn.00406140(ppiVar14, *0x40c044 + 1);\n            *0x40c044 = *ppiVar8;\n            ppiVar21 = ppiVar14;\n            goto code_r0x00401d88;\n        }\n        fcn.004065c3(\"Pop: stack empty\");\n        goto code_r0x00402a77;\n    case 0x401dc0:\n        uVar11 = fcn.00402e5c(3);\n        lpWideCharStr._0_2_ = uVar11;\n        lpWideCharStr._2_2_ = uVar11 >> 0x10;\n        hWndChildAfter = fcn.00402e5c(4);\n        if ((var_14h & 1) != 0) {\n            uVar11 = fcn.00402e79(0x33);\n            lpWideCharStr._0_2_ = uVar11;\n            lpWideCharStr._2_2_ = uVar11 >> 0x10;\n        }\n        if ((var_14h & 2) != 0) {\n            hWndChildAfter = fcn.00402e79(0x44);\n        }\n        if (var_2ch == 0x21) {\n            uVar11 = fcn.00402e5c();\n            uVar9 = fcn.00402e5c(2);\n            if (var_14h >> 2 == 0) {\n                lpValueName = (*_sym.imp.USER32.dll_SendMessageA)\n                                        (uVar11, uVar9, CONCAT22(lpWideCharStr._2_2_, lpWideCharStr), hWndChildAfter);\n                dwFileAttributes = var_28h;\n            }\n            else {\n                iVar13 = (*_sym.imp.USER32.dll_SendMessageTimeoutA)\n                                   (uVar11, uVar9, CONCAT22(lpWideCharStr._2_2_, lpWideCharStr), hWndChildAfter, 0, \n                                    var_14h >> 2, &fcn.00401434::lpValueName);\n                var_4h = iVar13 == 0;\n                dwFileAttributes = var_28h;\n            }\n        }\n        else {\n            pcVar20 = fcn.00402e79(1);\n            pcVar5 = fcn.00402e79(0x12);\n            lpValueName = (*_sym.imp.USER32.dll_FindWindowExA)\n                                    (CONCAT22(lpWideCharStr._2_2_, lpWideCharStr), hWndChildAfter, \n                                     -(*pcVar20 != '\\0') & pcVar20, -(*pcVar5 != '\\0') & pcVar5);\n            dwFileAttributes = var_28h;\n        }\n        goto joined_r0x00402a0a;\n    case 0x401e80:\n        uVar11 = fcn.00402e5c(0);\n        iVar13 = (*_sym.imp.USER32.dll_IsWindow)(uVar11);\njoined_r0x00401e8f:\n        if (iVar13 == 0) {\n            return var_20h;\n        }\n        return dwFileAttributes;\n    case 0x401e9d:\n        uVar11 = fcn.00402e5c(2);\n        uVar11 = fcn.00402e5c(1, uVar11);\n        (*_sym.imp.USER32.dll_GetDlgItem)(uVar11);\n        goto code_r0x00402cb3;\n    case 0x401eb8:\n        uVar11 = fcn.00402e5c(0, 0xffffffeb, *0x430888 + dwFileAttributes);\n        (*_sym.imp.USER32.dll_SetWindowLongA)(uVar11);\n        break;\n    case 0x401ed4:\n        uVar11 = (*_sym.imp.USER32.dll_GetDlgItem)(*0x430848, dwFileAttributes);\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar11, &fcn.00401434::lpRect);\n        uVar9 = fcn.00402e79(0, 0, var_44h * var_20h, CONCAT22(lpWideCharStr._2_2_, lpWideCharStr) * var_20h, 0x10);\n        uVar9 = (*_sym.imp.USER32.dll_LoadImageA)(0, uVar9);\n        iVar13 = (*_sym.imp.USER32.dll_SendMessageA)(uVar11, 0x172, 0, uVar9);\n        if (iVar13 != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar13);\n        }\n        break;\n    case 0x401f2e:\n        uVar11 = (*_sym.imp.USER32.dll_GetDC)(*0x430848);\n        uVar9 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar11, 0x5a, 0x48);\n        uVar9 = fcn.00402e5c(2, uVar9);\n        *0x40c048 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar9);\n        *0x40c048 = -*0x40c048;\n        (*_sym.imp.USER32.dll_ReleaseDC)(lpValueName, uVar11);\n        *0x40c058 = fcn.00402e5c(3);\n        *0x40c05c = var_18h & 1;\n        *0x40c05f = 1;\n        *0x40c05d = var_18h & 2;\n        *0x40c05e = var_18h & 4;\n        fcn.00406162(0x40c064, dwFileAttributes);\n        (*_sym.imp.GDI32.dll_CreateFontIndirectA)(0x40c048);\n        goto code_r0x00402cb3;\n    case 0x401fb4:\n        uVar11 = fcn.00402e5c(0);\n        uVar9 = fcn.00402e5c(1);\n        if (var_20h != NULL) {\n            fcn.004065c3(\"HideWindow\");\n        }\n        if (lpLastWriteTime == NULL) {\n            (*_sym.imp.USER32.dll_ShowWindow)();\n        }\n        else {\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar11, uVar9);\n        }\n        break;\n    case 0x401ff2:\n        pcVar20 = fcn.00402e79(0);\n        uVar11 = fcn.00402e79(0x31);\n        pcVar5 = fcn.00402e79(0x22);\n        fcn.00402e79(0x15);\n        fcn.00401423(0xffffffec);\n        iVar13 = (*_sym.imp.SHELL32.dll_ShellExecuteA)\n                           (lpValueName, -(*pcVar20 != '\\0') & pcVar20, uVar11, -(*pcVar5 != '\\0') & pcVar5, 0x436800, \n                            lpLastWriteTime);\n        if (0x20 < iVar13) {\n            fcn.004065c3(\"ExecShell: success (\\\"%s\\\": file:\\\"%s\\\" params:\\\"%s\\\")\", pcVar20, uVar11, pcVar5);\n            break;\n        }\n        fcn.004065c3(\"ExecShell: warning: error (\\\"%s\\\": file:\\\"%s\\\" params:\\\"%s\\\")=%d\", pcVar20, uVar11, pcVar5, iVar13\n                    );\n        goto code_r0x00402a77;\n    case 0x40206e:\n        uVar9 = fcn.00402e79(0);\n        fcn.004065c3(\"Exec: command=\\\"%s\\\"\", uVar9);\n        pcVar20 = 0xffffffeb;\n        uVar11 = uVar9;\n        fcn.004053a1(0xffffffeb, uVar9);\n        hWndChildAfter = fcn.0040589e(uVar9);\n        if (hWndChildAfter != NULL) {\n            fcn.004065c3(\"Exec: success (\\\"%s\\\")\", uVar9);\n            pcVar6 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n            ppiVar8 = hWndChildAfter;\n            if (var_20h != NULL) {\n                while (iVar13 = (*pcVar6)(hWndChildAfter, 100),  iVar13 == 0x102) {\n                    fcn.00406651(0xf);\n                }\n                (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(hWndChildAfter, &fcn.00401434::lpNumberOfBytesWritten);\n                if (dwFileAttributes < 0) {\n                    ppiVar8 = hWndChildAfter;\n                    if (lpNumberOfBytesWritten != NULL) {\n                        var_4h = 0x1;\n                    }\n                }\n                else {\n                    fcn.0040609e(pcVar20, lpNumberOfBytesWritten, ppiVar16);\n                    ppiVar8 = hWndChildAfter;\n                }\n            }\n            goto code_r0x004020f3;\n        }\n        var_4h = 0x1;\n        goto code_r0x004022b5;\n    case 0x40210f:\n        uVar11 = fcn.00402e79(2);\n        hWndChildAfter = fcn.004065f1(uVar11);\n        if (hWndChildAfter == NULL) {\n            *ppiVar14 = 0;\n            *ppiVar16 = 0;\n            goto code_r0x00402a77;\n        }\n        fcn.0040609e(ppiVar16, hWndChildAfter[5]);\n        goto code_r0x00402cb3;\n    case 0x40213f:\n        nNumberOfBytesToWrite = fcn.00402e79(0xffffffee);\n        lpNumberOfBytesWritten =\n             sub.VERSION.dll_GetFileVersionInfoSizeA(nNumberOfBytesToWrite, &fcn.00401434::lpdwHandle);\n        *ppiVar14 = 0;\n        *ppiVar16 = 0;\n        var_4h = 0x1;\n        if ((lpNumberOfBytesWritten == NULL) ||\n           (hWndChildAfter = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, lpNumberOfBytesWritten),  hWndChildAfter == NULL\n           )) break;\n        ppiStack520 = lpNumberOfBytesWritten;\n        uStack524 = 0;\n        puStack532 = 0x40218a;\n        ppiVar21 = nNumberOfBytesToWrite;\n        ppiStack516 = hWndChildAfter;\n        iVar13 = sub.VERSION.dll_GetFileVersionInfoA();\n        ppiVar8 = hWndChildAfter;\n        if (iVar13 != 0) {\n            puStack532 = &fcn.00401434::nNumberOfBytesToWrite;\n            puStack536 = &fcn.00401434::lpWideCharStr;\n            lpFindFileData = 0x40a28c;\n            ppiVar21 = hWndChildAfter;\n            iVar13 = sub.VERSION.dll_VerQueryValueA();\n            ppiVar8 = hWndChildAfter;\n            if (iVar13 != 0) {\n                fcn.0040609e(ppiVar14, *(CONCAT22(lpWideCharStr._2_2_, lpWideCharStr) + 8));\n                fcn.0040609e(ppiVar16, *(CONCAT22(lpWideCharStr._2_2_, lpWideCharStr) + 0xc));\n                var_4h = NULL;\n                ppiVar8 = hWndChildAfter;\n                ppiVar21 = ppiVar16;\n            }\n        }\ncode_r0x00401d88:\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(ppiVar8, ppiVar21);\n        break;\n    case 0x4021ca:\n        var_4h = 0x1;\n        if (-1 < *0x4308f8) {\n            uVar11 = fcn.00402e79(0xfffffff0);\n            uVar9 = fcn.00402e79(1);\n            lpWideCharStr._0_2_ = uVar9;\n            lpWideCharStr._2_2_ = uVar9 >> 0x10;\n            if (((var_18h != NULL) &&\n                (hWndChildAfter = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar11),  hWndChildAfter != NULL)) ||\n               (hWndChildAfter = (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(uVar11, 0, 8),  hWndChildAfter != NULL)) {\n                pcVar6 = sub.KERNEL32.dll_GetProcAddress(hWndChildAfter, CONCAT22(lpWideCharStr._2_2_, lpWideCharStr));\n                if (pcVar6 == NULL) {\n                    fcn.004053a1(0xfffffff7, CONCAT22(lpWideCharStr._2_2_, lpWideCharStr));\n                    fcn.004065c3(\"Error registering DLL: %s not found in %s\", \n                                 CONCAT22(lpWideCharStr._2_2_, lpWideCharStr), uVar11);\n                }\n                else {\n                    var_4h = NULL;\n                    if (var_20h == NULL) {\n                        (*pcVar6)(lpValueName, 0x400, 0x431000, 0x40c044, 0x40a000);\n                    }\n                    else {\n                        fcn.00401423(var_20h);\n                        iVar13 = (*pcVar6)();\n                        if (iVar13 != 0) {\n                            var_4h = 0x1;\n                        }\n                    }\n                }\n                if ((lpLastWriteTime == NULL) && (iVar13 = fcn.00403a40(hWndChildAfter),  iVar13 != 0)) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(hWndChildAfter);\n                }\n                break;\n            }\n            fcn.00401423(0xfffffff6);\n            pcVar20 = \"Error registering DLL: Could not load %s\";\n            goto code_r0x004022b5;\n        }\n        fcn.00401423(0xffffffe7);\n        pcVar20 = \"Error registering DLL: Could not initialize OLE\";\ncode_r0x00401634:\n        fcn.004065c3(pcVar20);\n        break;\n    case 0x4022d2:\n        lpMultiByteStr = fcn.00402e79(0xfffffff0);\n        uVar11 = fcn.00402e79(0xffffffdf);\n        lpWideCharStr._0_2_ = uVar11;\n        lpWideCharStr._2_2_ = uVar11 >> 0x10;\n        lpNumberOfBytesWritten = fcn.00402e79(2);\n        pcVar20 = fcn.00402e79(0xffffffcd);\n        lpdwHandle = fcn.00402e79(0x45);\n        iVar13 = fcn.00405c3d(CONCAT22(lpWideCharStr._2_2_, lpWideCharStr));\n        if (iVar13 == 0) {\n            fcn.00402e79(0x21);\n        }\n        fcn.004065c3(\"CreateShortcut: out: \\\"%s\\\", in: \\\"%s %s\\\", icon: %s,%d, sw=%d, hk=%d\", lpMultiByteStr, \n                     CONCAT22(lpWideCharStr._2_2_, lpWideCharStr), lpNumberOfBytesWritten, pcVar20, var_18h & 0xff, \n                     var_18h >> 8 & 0xff, var_18h >> 0x10);\n        iVar13 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x40849c, 0, 1, 0x40848c, &fcn.00401434::hWndChildAfter);\n        if (-1 < iVar13) {\n            lpValueName = (***hWndChildAfter)(hWndChildAfter, 0x4084ac, &fcn.00401434::nNumberOfBytesToWrite);\n            if (-1 < lpValueName) {\n                lpValueName = (*(*hWndChildAfter)[0x14])(hWndChildAfter, CONCAT22(lpWideCharStr._2_2_, lpWideCharStr));\n                if ((var_18h & 0x8000) == 0) {\n                    (*(*hWndChildAfter)[9])(hWndChildAfter, 0x436800);\n                }\n                uVar12 = var_18h >> 8 & 0x7f;\n                if (uVar12 != 0) {\n                    (*(*hWndChildAfter)[0xf])(hWndChildAfter, uVar12);\n                }\n                (*(*hWndChildAfter)[0xd])(hWndChildAfter, var_18h >> 0x10);\n                if (*pcVar20 != '\\0') {\n                    (*(*hWndChildAfter)[0x11])(hWndChildAfter, pcVar20, var_18h & 0xff);\n                }\n                (*(*hWndChildAfter)[0xb])(hWndChildAfter, lpNumberOfBytesWritten);\n                (*(*hWndChildAfter)[7])(hWndChildAfter, lpdwHandle);\n                if (-1 < lpValueName) {\n                    lpValueName = -0x7fffbffb;\n                    iVar13 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                       (0, 0, lpMultiByteStr, 0xffffffff, CONCAT22(lpWideCharStr._2_2_, lpWideCharStr), \n                                        0x400);\n                    if (iVar13 != 0) {\n                        lpValueName = (*(*nNumberOfBytesToWrite)[6])\n                                                (nNumberOfBytesToWrite, CONCAT22(lpWideCharStr._2_2_, lpWideCharStr), 1)\n                        ;\n                    }\n                }\n                (*(*nNumberOfBytesToWrite)[2])(nNumberOfBytesToWrite);\n            }\n            (*(*hWndChildAfter)[2])(hWndChildAfter);\n            if (-1 < lpValueName) {\n                uVar11 = 0xfffffff4;\n                goto code_r0x00402448;\n            }\n        }\n        var_4h = 0x1;\n        uVar11 = 0xfffffff0;\n        goto code_r0x00402448;\n    case 0x402456:\n        iVar13 = fcn.00402e79(0);\n        iVar10 = fcn.00402e79(0x11);\n        hWndChildAfter = fcn.00402e79(0x23);\n        fcn.004065c3(\"CopyFiles \\\"%s\\\"->\\\"%s\\\"\", iVar13, iVar10);\n        iVar7 = fcn.004065f1(iVar13);\n        if (iVar7 != 0) {\n            lpFileOp = lpValueName;\n            var_54h = 2;\n            iVar7 = sub.KERNEL32.dll_lstrlenA(iVar13);\n            *(iVar7 + 1 + iVar13) = 0;\n            iVar7 = sub.KERNEL32.dll_lstrlenA(iVar10);\n            *(iVar7 + 1 + iVar10) = 0;\n            lpWideCharStr._2_2_ = SUB42(hWndChildAfter, 0);\n            uStack64 = hWndChildAfter >> 0x10;\n            var_48h._0_2_ = var_20h._0_2_;\n            var_50h = iVar13;\n            lpRect = iVar10;\n            fcn.004053a1(0, hWndChildAfter);\n            iVar13 = (*_sym.imp.SHELL32.dll_SHFileOperationA)(&fcn.00401434::lpFileOp);\n            if (iVar13 == 0) break;\n        }\n        fcn.004053a1(0xfffffff9, 0);\n        goto code_r0x00402a77;\n    case 0x4024e7:\n        if (var_28h != 0xbadf00d) {\ncode_r0x004024ef:\n            uVar19 = 0x200010;\n            uVar18 = 0xffffffe8;\n            uVar9 = 0;\n            uVar11 = fcn.00406162(0, 0xffffffe8);\ncode_r0x004024fd:\n            fcn.004058ff(uVar11, uVar9, uVar18, uVar19);\n            return 0x7fffffff;\n        }\n        *0x4308d4 = *0x4308d4 + 1;\n        break;\n    case 0x402517:\n        lpMultiByteStr = 0;\n        nNumberOfBytesToWrite = NULL;\n        hWndChildAfter = NULL;\n        fcn.00406140(0x40b040, \"<RM>\");\n        fcn.00406140(0x40b440, 0x40b040);\n        if (var_28h != NULL) {\n            lpMultiByteStr = fcn.00402e79(0);\n        }\n        if (dwFileAttributes != NULL) {\n            nNumberOfBytesToWrite = fcn.00402e79(0x11);\n        }\n        if (var_18h != NULL) {\n            hWndChildAfter = fcn.00402e79(0x22);\n        }\n        uVar11 = fcn.00402e79(0xffffffcd);\n        fcn.004065c3(\"WriteINIStr: wrote [%s] %s=%s in %s\", 0x40ac40, 0x40b040, 0x40b440, uVar11);\n        iVar13 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)\n                           (lpMultiByteStr, nNumberOfBytesToWrite, hWndChildAfter, uVar11);\n        goto code_r0x0040187a;\n    case 0x40259b:\n        hWndChildAfter = hWndChildAfter & 0xffff | *0x40a178 << 0x10;\n        uVar11 = fcn.00402e79(1);\n        lpdwHandle = fcn.00402e79(0x12);\n        uVar9 = fcn.00402e79(0xffffffdd);\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)\n                  (uVar11, lpdwHandle, &fcn.00401434::hWndChildAfter + 2, ppiVar14, 0x3ff, uVar9);\n        bVar17 = *ppiVar14 == '\\n';\ncode_r0x0040185f:\n        if (bVar17) {\ncode_r0x00402a4b:\n            var_4h = 0x1;\n            *ppiVar14 = 0;\n        }\n        break;\n    case 0x4025dc:\n        hWndChildAfter = fcn.004064e1(dwFileAttributes);\n        if (var_18h == NULL) {\n            iVar13 = fcn.00402f83(2);\n            if (iVar13 == 0) goto code_r0x00402a77;\n            uVar11 = fcn.00402e79(0x33);\n            nNumberOfBytesToWrite = (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(iVar13, uVar11);\n            fcn.004065c3(\"DeleteRegValue: \\\"%s\\\\%s\\\" \\\"%s\\\"\", hWndChildAfter, 0x40b440, uVar11);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar13);\n        }\n        else {\n            uVar11 = fcn.00402e79(0x22);\n            fcn.004065c3(\"DeleteRegKey: \\\"%s\\\\%s\\\"\", hWndChildAfter, uVar11);\n            uVar9 = fcn.00402f6e(dwFileAttributes, uVar11, var_18h & 2);\n            nNumberOfBytesToWrite = fcn.00402eb9(uVar9, dwFileAttributes, uVar11);\n        }\n        if (nNumberOfBytesToWrite == NULL) break;\n        goto code_r0x00402a77;\n    case 0x402670:\n        uVar11 = fcn.00402f6e(var_28h);\n        lpNumberOfBytesWritten = var_18h;\n        nNumberOfBytesToWrite = var_14h;\n        lpValueName = fcn.00402e79(2);\n        hWndChildAfter = fcn.00402e79(0x11);\n        uVar9 = fcn.004064e1(uVar11);\n        lpWideCharStr._0_2_ = uVar9;\n        lpWideCharStr._2_2_ = uVar9 >> 0x10;\n        var_4h = 0x1;\n        iVar13 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                           (uVar11, hWndChildAfter, 0, 0, 0, *0x4308f0 | 2, 0, &fcn.00401434::lpMultiByteStr, 0);\n        if (iVar13 != 0) {\n            uVar11 = CONCAT22(lpWideCharStr._2_2_, lpWideCharStr);\n            pcVar20 = \"WriteReg: error creating key \\\"%s\\\\%s\\\"\";\ncode_r0x004027cf:\n            fcn.004065c3(pcVar20, uVar11, hWndChildAfter);\n            break;\n        }\n        iVar13 = 0;\n        if (lpNumberOfBytesWritten == 0x1) {\n            fcn.00402e79(0x23);\n            iVar13 = sub.KERNEL32.dll_lstrlenA(0x40b440);\n            iVar13 = iVar13 + 1;\n            if (nNumberOfBytesToWrite != 0x1) {\n                fcn.004065c3(\"WriteRegExpandStr: \\\"%s\\\\%s\\\" \\\"%s\\\"=\\\"%s\\\"\", CONCAT22(lpWideCharStr._2_2_, lpWideCharStr)\n                             , hWndChildAfter, lpValueName, 0x40b440);\n                goto code_r0x00402718;\n            }\n            fcn.004065c3(\"WriteRegStr: \\\"%s\\\\%s\\\" \\\"%s\\\"=\\\"%s\\\"\", CONCAT22(lpWideCharStr._2_2_, lpWideCharStr), \n                         hWndChildAfter, lpValueName, 0x40b440);\n        }\n        else {\ncode_r0x00402718:\n            if (lpNumberOfBytesWritten == 0x4) {\n                *0x40b440 = fcn.00402e5c(3);\n                iVar13 = 4;\n                fcn.004065c3(\"WriteRegDWORD: \\\"%s\\\\%s\\\" \\\"%s\\\"=\\\"0x%08x\\\"\", CONCAT22(lpWideCharStr._2_2_, lpWideCharStr)\n                             , hWndChildAfter, lpValueName, *0x40b440);\n            }\n            if (lpNumberOfBytesWritten == 0x3) {\n                iVar13 = fcn.004032de(lpLastWriteTime, 0, 0x40b440, 0xc00);\n                fcn.00406545(&fcn.00401434::var_d8h, 0x80, 0x40b440, iVar13);\n                fcn.004065c3(\"WriteRegBin: \\\"%s\\\\%s\\\" \\\"%s\\\"=\\\"%s\\\"\", CONCAT22(lpWideCharStr._2_2_, lpWideCharStr), \n                             hWndChildAfter, lpValueName, &fcn.00401434::var_d8h);\n            }\n        }\n        iVar13 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)\n                           (lpMultiByteStr, lpValueName, 0, nNumberOfBytesToWrite, 0x40b440, iVar13);\n        if (iVar13 == 0) {\n            var_4h = NULL;\n        }\n        else {\n            fcn.004065c3(\"WriteReg: error writing into \\\"%s\\\\%s\\\" \\\"%s\\\"\", CONCAT22(lpWideCharStr._2_2_, lpWideCharStr)\n                         , hWndChildAfter, lpValueName);\n        }\ncode_r0x004028a4:\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(lpMultiByteStr);\n        break;\n    case 0x4027dc:\n        lpMultiByteStr = fcn.00402f83(0x20019);\n        uVar11 = fcn.00402e79(0x33);\n        *ppiVar14 = 0;\n        if (lpMultiByteStr != 0) {\n            lpdwHandle = 0x400;\n            iVar10 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)\n                               (lpMultiByteStr, uVar11, 0, &fcn.00401434::hWndChildAfter, ppiVar14, \n                                &fcn.00401434::lpdwHandle);\n            if (iVar10 == 0) {\n                if (hWndChildAfter == 0x4) {\n                    var_4h = var_18h == NULL;\n                    fcn.0040609e();\n                    goto code_r0x004028a4;\n                }\n                if ((hWndChildAfter == 0x1) || (hWndChildAfter == 0x2)) {\n                    var_4h = var_18h;\n                    goto code_r0x0040289d;\n                }\n            }\n            *ppiVar14 = 0;\n            var_4h = 0x1;\n            goto code_r0x004028a4;\n        }\n        goto code_r0x00402a77;\n    case 0x40284e:\n        lpMultiByteStr = fcn.00402f83(0x20019);\n        uVar11 = fcn.00402e5c(3);\n        *ppiVar14 = 0;\n        if (lpMultiByteStr != 0) {\n            hWndChildAfter = 0x3ff;\n            if (var_18h == NULL) {\n                iVar10 = (*_sym.imp.ADVAPI32.dll_RegEnumValueA)\n                                   (lpMultiByteStr, uVar11, ppiVar14, &fcn.00401434::hWndChildAfter, 0, 0, 0, 0);\n                if (iVar10 != 0) goto code_r0x00402a77;\n            }\n            else {\n                (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(lpMultiByteStr, uVar11, ppiVar14, 0x3ff);\n            }\ncode_r0x0040289d:\n            *(iVar13 + 0x4313ff) = 0;\n            goto code_r0x004028a4;\n        }\n        goto code_r0x00402a77;\n    case 0x4028af:\n        if (*ppiVar14 == '\\0') break;\n        ppiVar8 = fcn.004060b7(ppiVar14);\ncode_r0x004020f3:\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(ppiVar8);\n        break;\n    case 0x4028c3:\n        uVar11 = fcn.00402e79(0xffffffed);\n        iVar13 = fcn.00405dd1(uVar11, dwFileAttributes, var_20h);\n        if (iVar13 == -1) {\ncode_r0x00402a75:\n            *ppiVar14 = 0;\n            goto code_r0x00402a77;\n        }\n        goto code_r0x00402cb3;\n    case 0x4028e5:\n        if (var_20h == NULL) {\n            uVar11 = fcn.00402e79(0x11);\n            uVar11 = sub.KERNEL32.dll_lstrlenA(uVar11);\n        }\n        else {\n            *0x40b040 = fcn.00402e5c(1);\n            uVar11 = 1;\n        }\n        if (*ppiVar14 != '\\0') {\n            puVar15 = &fcn.00401434::hWndChildAfter;\n            uVar19 = 0;\n            uVar18 = 0x40b040;\n            uVar9 = fcn.004060b7(ppiVar14);\n            iVar13 = (*_sym.imp.KERNEL32.dll_WriteFile)(uVar9, ppiVar14, uVar18, uVar11, puVar15, uVar19);\n            goto code_r0x0040187a;\n        }\n        goto code_r0x00402a77;\n    case 0x40292d:\n        lpMultiByteStr = 0;\n        iVar13 = fcn.00402e5c(2);\n        lpWideCharStr._0_2_ = iVar13;\n        lpWideCharStr._2_2_ = iVar13 >> 0x10;\n        if (iVar13 < 1) break;\n        if (0x3ff < iVar13) {\n            lpWideCharStr._0_2_ = 0x3ff;\n            lpWideCharStr._2_2_ = 0;\n        }\n        iVar13 = lpMultiByteStr;\n        if (*ppiVar14 != '\\0') {\n            hWndChildAfter = hWndChildAfter & 0xffffff;\n            nNumberOfBytesToWrite = fcn.004060b7(ppiVar14);\n            iVar13 = lpMultiByteStr;\n            if (0 < CONCAT22(lpWideCharStr._2_2_, lpWideCharStr)) {\n                while (iVar10 = fcn.00405e49(nNumberOfBytesToWrite, &stack0xffffffcf, 1),  iVar10 != 0) {\n                    if (lpLastWriteTime != NULL) {\n                        fcn.0040609e(ppiVar16, var_2dh);\n                        return 0;\n                    }\n                    if ((hWndChildAfter._3_1_ == 0xd) || (hWndChildAfter._3_1_ == 10)) {\n                        if ((hWndChildAfter._3_1_ == var_2dh) || ((var_2dh != 0xd && (var_2dh != 10)))) {\n                            (*_sym.imp.KERNEL32.dll_SetFilePointer)(nNumberOfBytesToWrite, 0xffffffff, 0, 1);\n                        }\n                        else {\n                            *(iVar13 + ppiVar16) = var_2dh;\n                            iVar13 = iVar13 + 1;\n                        }\n                        break;\n                    }\n                    *(iVar13 + ppiVar16) = var_2dh;\n                    iVar13 = iVar13 + 1;\n                    hWndChildAfter = hWndChildAfter & 0xffffff | var_2dh << 0x18;\n                    if ((var_2dh == 0) || (CONCAT22(lpWideCharStr._2_2_, lpWideCharStr) <= iVar13)) break;\n                }\n            }\n        }\n        *(iVar13 + ppiVar16) = 0;\ncode_r0x0040187a:\n        if (iVar13 != 0) break;\ncode_r0x00402a77:\n        var_4h = 0x1;\n        break;\n    case 0x4029e6:\n        if (*ppiVar14 == '\\0') break;\n        uVar11 = fcn.00402e5c(2, 0, lpLastWriteTime);\n        uVar9 = fcn.004060b7(ppiVar14);\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(uVar9, ppiVar14, uVar11);\n        ppiVar14 = ppiVar16;\njoined_r0x00402a0a:\n        if (dwFileAttributes < 0) break;\n        goto code_r0x00402cb3;\n    case 0x402a15:\n        if (*ppiVar14 != '\\0') {\n            uVar11 = fcn.004060b7(ppiVar14);\n            (*_sym.imp.KERNEL32.dll_FindClose)(uVar11);\n        }\n        break;\n    case 0x402a2f:\n        if (*ppiVar16 != '\\0') {\n            puVar15 = &fcn.00401434::lpFindFileData;\n            uVar11 = fcn.004060b7(ppiVar16);\n            iVar13 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(uVar11, ppiVar16, puVar15);\n            if (iVar13 != 0) goto code_r0x00402a8a;\n        }\n        goto code_r0x00402a4b;\n    case 0x402a59:\n        uVar11 = fcn.00402e79(2);\n        iVar13 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(uVar11, &fcn.00401434::lpFindFileData);\n        if (iVar13 == -1) {\n            *ppiVar16 = 0;\n            goto code_r0x00402a75;\n        }\n        fcn.0040609e(ppiVar16, iVar13);\ncode_r0x00402a8a:\n        puVar15 = &fcn.00401434::var_1ech;\ncode_r0x00402c31:\n        fcn.00406140(ppiVar14, puVar15);\n        break;\n    case 0x402a97:\n        lpNumberOfBytesWritten = 0xfffffd66;\n        iVar13 = fcn.00402e79(0xfffffff0);\n        lpMultiByteStr = iVar13;\n        iVar10 = fcn.00405c3d(iVar13);\n        if (iVar10 == 0) {\n            fcn.00402e79(0xffffffed);\n        }\n        fcn.00405dac(iVar13);\n        hWndChildAfter = fcn.00405dd1(iVar13, 0x40000000, 2);\n        pcVar6 = _sym.imp.KERNEL32.dll_GlobalAlloc;\n        if (hWndChildAfter != 0xffffffff) {\n            nNumberOfBytesToWrite = *0x430854;\n            iVar13 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x430854);\n            if (iVar13 != 0) {\n                fcn.00403516(0);\n                fcn.00403500(iVar13, nNumberOfBytesToWrite);\n                arg_10h = (*pcVar6)(0x40, var_20h);\n                lpdwHandle = arg_10h;\n                if (arg_10h != NULL) {\n                    fcn.004032de(dwFileAttributes, 0, arg_10h, var_20h);\n                    for (; *arg_10h != '\\0'; arg_10h = arg_10h + var_44h + 8) {\n                        var_44h = *arg_10h;\n                        dwFileAttributes = arg_10h[1] + iVar13;\n                        fcn.00405d8c();\n                    }\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(lpdwHandle, dwFileAttributes);\n                }\n                (*_sym.imp.KERNEL32.dll_WriteFile)\n                          (hWndChildAfter, iVar13, nNumberOfBytesToWrite, &fcn.00401434::lpNumberOfBytesWritten, 0);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar13);\n                lpNumberOfBytesWritten = fcn.004032de(0xffffffff, hWndChildAfter, 0, 0);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hWndChildAfter);\n        }\n        fcn.004065c3(\"created uninstaller: %d, \\\"%s\\\"\", lpNumberOfBytesWritten, lpMultiByteStr);\n        uVar11 = 0xfffffff3;\n        if (lpNumberOfBytesWritten < 0) {\n            uVar11 = 0xffffffef;\n            (*_sym.imp.KERNEL32.dll_DeleteFileA)(lpMultiByteStr);\n            var_4h = 0x1;\n        }\ncode_r0x00402448:\n        fcn.00401423(uVar11);\n        break;\n    case 0x402bab:\n        if (var_28h != NULL) {\n            fcn.004065c3(\"settings logging to %d\", dwFileAttributes);\n            *0x42efc0 = dwFileAttributes;\n            fcn.004065c3(\"logging set to %d\", dwFileAttributes);\n            if (dwFileAttributes == NULL) {\n                fcn.00406444(1);\n            }\n            else {\n                fcn.00403aa0();\n            }\n            break;\n        }\n        uVar11 = fcn.00402e79(1);\n        pcVar20 = 0x40a3bc;\ncode_r0x004022b5:\n        fcn.004065c3(pcVar20, uVar11);\n        break;\n    case 0x402bfd:\n        hWndChildAfter = fcn.00402e5c(0);\n        if (*0x43086c <= hWndChildAfter) goto code_r0x00402a77;\n        iVar13 = hWndChildAfter * 0x418 + *0x430868;\n        if (var_20h < 0) {\n            var_20h = -1 - var_20h;\n            if (var_20h == NULL) {\n                fcn.00406162(iVar13 + 0x18, var_18h);\n                *(iVar13 + 9) = *(iVar13 + 9) | 1;\n            }\n            else {\n                dwFileAttributes = fcn.00402e5c(1);\n            }\n            *(iVar13 + var_20h * 4) = dwFileAttributes;\n            if (lpLastWriteTime != NULL) {\n                fcn.0040117d(hWndChildAfter);\n            }\n            break;\n        }\n        ppiVar14 = ppiVar16;\n        if (var_20h == NULL) {\n            puVar15 = iVar13 + 0x18;\n            goto code_r0x00402c31;\n        }\n        goto code_r0x00402cb3;\n    case 0x402c83:\n        uVar12 = fcn.00402e5c(0);\n        if (0x1f < uVar12) goto code_r0x00402a77;\n        if (lpLastWriteTime == NULL) {\n            if (var_20h == NULL) {\n                fcn.00406162(ppiVar16, *(*0x430850 + 0x94 + uVar12 * 4));\n            }\n            else {\n                *(*0x430850 + 0x94 + uVar12 * 4) = dwFileAttributes;\n            }\n            break;\n        }\n        if (var_20h != NULL) {\n            fcn.00401299(uVar12);\n            fcn.004011ef(0, 0);\n            break;\n        }\n        fcn.004012e2(0);\n        ppiVar14 = ppiVar16;\ncode_r0x00402cb3:\n        fcn.0040609e(ppiVar14);\n        break;\n    case 0x402ce6:\n        (*_sym.imp.USER32.dll_SendMessageA)(*0x430848, 0xb, *0x42c098 & var_28h, 0);\n        if (var_28h != NULL) {\n            (*_sym.imp.USER32.dll_InvalidateRect)(lpValueName, 0, 0);\n        }\n    }\ncode_r0x00402d0a:\n    *0x4308c8 = *0x4308c8 + var_4h;\n    return NULL;\n}\n",
        "token_count": 15585
    },
    "004030a5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.004030a5(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t dwBytes;\n    int32_t var_10h;\n    uint *hFile;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_8h = NULL;\n    var_4h = 0;\n    *0x43084c = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    *0x43084c = *0x43084c + 1000;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, 0x437c00, 0x400);\n    puVar1 = fcn.00405dd1(0x437c00, 0x80000000, 3);\n    if (puVar1 == 0xffffffff) {\n        *0x40a694 = puVar1;\n        return \"Error launching installer\";\n    }\n    *0x40a694 = puVar1;\n    hFile = puVar1;\n    fcn.00406140(0x436c00, 0x437c00);\n    uVar2 = fcn.00405c17(0x436c00);\n    fcn.00406140(0x438000, uVar2);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(puVar1, 0);\n    *0x429c58 = uVar3;\n    for (; 0 < uVar3; uVar3 = uVar3 - uVar8) {\n        uVar4 = (-(*0x430854 != 0) & 0x7e00) + 0x200;\n        uVar8 = uVar3;\n        if (uVar4 <= uVar3) {\n            uVar8 = uVar4;\n        }\n        puVar1 = 0x421c58;\n        iVar5 = fcn.00403500();\n        if (iVar5 == 0) {\n            fcn.00403041(1);\n            goto code_r0x0040327d;\n        }\n        if (*0x430854 == 0) {\n            puVar1 = &var_28h;\n            fcn.00405d8c();\n            if (((((var_28h & 0xfffffff0) == 0) && (var_24h == -0x21524111)) && (var_18h == 0x74736e49)) &&\n               ((var_1ch == 0x74666f73 && (var_20h == 0x6c6c754e)))) {\n                arg_8h = arg_8h | var_28h;\n                *0x4308e0 = *0x4308e0 | arg_8h & 2;\n                *0x430854 = *0x415c48;\n                if (uVar3 < var_10h) goto code_r0x0040327d;\n                if (((arg_8h & 8) == 0) && ((arg_8h & 4) != 0)) break;\n                var_4h = var_4h + 1;\n                uVar3 = var_10h - 4;\n                if (uVar3 < uVar8) {\n                    uVar8 = uVar3;\n                }\n            }\n        }\n        else if ((arg_8h & 2) == 0) {\n            fcn.00403041(0);\n        }\n        if (uVar3 < *0x429c58) {\n            puVar6 = fcn.0040668a();\n            puVar1 = var_8h;\n            var_8h = puVar6;\n        }\n        *0x415c48 = *0x415c48 + uVar8;\n    }\n    fcn.00403041(1, puVar1);\n    if (*0x430854 != 0) {\n        if (var_4h != 0) {\n            fcn.00403516(*0x415c48);\n            iVar5 = fcn.00403500(&arg_8h, 4);\n            if ((iVar5 == 0) || (var_8h != arg_8h)) goto code_r0x0040327d;\n        }\n        puVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, dwBytes);\n        fcn.00403516(*0x430854 + 0x1c);\n        iVar5 = fcn.004032de(0xffffffff, 0, puVar1, dwBytes);\n        if (iVar5 == dwBytes) {\n            *0x430858 = *puVar1;\n            if ((var_28h & 1) != 0) {\n                *0x43085c = *0x43085c + 1;\n            }\n            piVar7 = puVar1 + 0x11;\n            iVar5 = 8;\n            *0x430850 = puVar1;\n            do {\n                piVar7 = piVar7 + -2;\n                *piVar7 = *piVar7 + puVar1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n            uVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, 0, 0, 1);\n            puVar1[0xf] = uVar2;\n            fcn.00405d8c(0x430860, puVar1 + 1, 0x40);\n            return NULL;\n        }\n    }\ncode_r0x0040327d:\n    return \n    \"Installer integrity check has failed. Common causes include\\nincomplete download and damaged media. Contact the\\ninstaller\\'s author to obtain a new copy.\\n\\nMore information at:\\nhttp://nsis.sf.net/NSIS_Error\"\n    ;\n}\n",
        "token_count": 1390
    },
    "004039c6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004039c6(void)\n\n{\n    if (*0x40a694 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x40a694);\n        *0x40a694 = -1;\n    }\n    fcn.00403a0b();\n    fcn.004059ab(0x437800, 7);\n    return;\n}\n",
        "token_count": 86
    },
    "00403ac1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00403ac1(void)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    \n    iVar7 = *0x430850;\n    pcVar2 = fcn.00406618();\n    if (pcVar2 == NULL) {\n        *0x437000 = 0x30;\n        *0x437001 = 0x78;\n        *0x437002 = 0;\n        fcn.00406027(0x80000001, \"Control Panel\\\\Desktop\\\\ResourceLocale\", 0, 0x42b098, 0);\n        if (*0x42b098 == '\\0') {\n            fcn.00406027(0x80000003, \".DEFAULT\\\\Control Panel\\\\International\", \"Locale\", 0x42b098, 0);\n        }\n        sub.KERNEL32.dll_lstrcatA();\n    }\n    else {\n        (*pcVar2)();\n        fcn.0040609e();\n    }\n    fcn.00403da6();\n    *0x4308c0 = *0x430858 & 0x20;\n    *0x4308dc = 0x10000;\n    iVar3 = fcn.00405cbe();\n    if ((iVar3 == 0) && (*(iVar7 + 0x48) != 0)) {\n        uVar6 = 0x42efe0;\n        fcn.00406027(*(iVar7 + 0x44), *(iVar7 + 0x48) + *0x430878, *(iVar7 + 0x4c) + *0x430878, 0x42efe0, 0);\n        if (*0x42efe0 != '\\0') {\n            if (*0x42efe0 == '\\\"') {\n                uVar6 = 0x42efe1;\n                puVar4 = fcn.00405bfb();\n                *puVar4 = 0;\n            }\n            iVar3 = sub.KERNEL32.dll_lstrlenA();\n            if (((uVar6 < iVar3 + -4 + uVar6) && (iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(),  iVar3 == 0)) &&\n               ((uVar6 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(),  uVar6 == 0xffffffff || ((uVar6 & 0x10) == 0))))\n            {\n                fcn.00405c17();\n            }\n            fcn.00405bd0();\n            fcn.00406140();\n        }\n    }\n    iVar3 = fcn.00405cbe();\n    if (iVar3 == 0) {\n        uStack148 = 0x403c07;\n        fcn.00406162(0x436400, *(iVar7 + 0x118));\n    }\n    if (((*0x430858 & 0x10) != 0) && (*0x43085c == 0)) {\n        uStack148 = 0x403c1d;\n        fcn.00403aa0();\n        *0x42efc0 = 1;\n    }\n    uStack148 = 0x8040;\n    uStack152 = 0;\n    uStack156 = 0;\n    iVar9 = 1;\n    iVar8 = 0x67;\n    iVar3 = *0x430840;\n    *0x430028 = (*_sym.imp.USER32.dll_LoadImageA)(*0x430840, 0x67, 1);\n    if (*(iVar7 + 0x50) == -1) {\ncode_r0x00403ccd:\n        iVar7 = fcn.0040140b(0);\n        if (iVar7 == 0) {\n            fcn.00403da6();\n            if (*0x4308e0 == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x42ac78, 5);\n                pcVar2 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n                iVar7 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"RichEd20\");\n                if (iVar7 == 0) {\n                    (*pcVar2)(\"RichEd32\");\n                }\n                pcVar2 = _sym.imp.USER32.dll_GetClassInfoA;\n                iVar7 = (*_sym.imp.USER32.dll_GetClassInfoA)(0, \"RichEdit20A\", 0x42ffe0);\n                if (iVar7 == 0) {\n                    (*pcVar2)(0, \"RichEdit\", 0x42ffe0);\n                    *0x430004 = \"RichEdit20A\";\n                    (*_sym.imp.USER32.dll_RegisterClassA)(0x42ffe0);\n                }\n                uVar5 = (*_sym.imp.USER32.dll_DialogBoxParamA)(*0x430840, *0x430020 + 0x69U & 0xffff, 0, 0x403e73, 0);\n                fcn.0040140b(5);\n                fcn.004039f0(1);\n                return uVar5;\n            }\n            iVar7 = fcn.00405473(0);\n            if (iVar7 == 0) {\n                fcn.0040140b(1);\n                goto code_r0x00403d9c;\n            }\n            if (*0x43000c == 0) {\n                fcn.0040140b(2);\n            }\n        }\n        uVar5 = 2;\n    }\n    else {\n        iVar7 = 0x42ffe0;\n        *0x42ffe4 = fcn.00401000;\n        *0x42fff0 = *0x430840;\n        *0x430004 = 0x40a878;\n        *0x42fff4 = *0x430028;\n        iVar1 = (*_sym.imp.USER32.dll_RegisterClassA)(0x42ffe0);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &stack0xffffff64, 0);\n            *0x42ac78 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                                  (0x80, 0x40a878, 0, 0x80000000, iVar7, iVar3, iVar8 - iVar7, iVar9 - iVar3, 0, 0, \n                                   *0x430840, 0);\n            goto code_r0x00403ccd;\n        }\ncode_r0x00403d9c:\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 1506
    },
    "00404d1e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404d1e(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t *var_38h;\n    uint32_t *var_34h;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_1ch;\n    uint32_t *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    var_8h = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3f9);\n    var_4h = (*pcVar1)(arg_8h, 0x408);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    var_10h = *0x430868;\n    var_14h = *0x430850 + 0x94;\n    if (arg_ch == 0x110) {\n        var_1ch = 0;\n        var_ch = 2;\n        *0x4308a0 = arg_8h;\n        *0x42b090 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x43086c << 2);\n        uVar2 = (*_sym.imp.USER32.dll_LoadBitmapA)(*0x430840, 0x6e);\n        *0x42b084 = 0xffffffff;\n        *0x42b08c = (*_sym.imp.USER32.dll_SetWindowLongA)(var_4h, 0xfffffffc, fcn.00405315);\n        *0x42ac7c = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 6, 0);\n        (*_sym.imp.COMCTL32.dll_ImageList_AddMasked)(*0x42ac7c, uVar2, 0xff00ff);\n        (*pcVar1)(var_4h, 0x1109, 2, *0x42ac7c);\n        iVar3 = (*pcVar1)(var_4h, 0x111c, 0, 0);\n        if (iVar3 < 0x10) {\n            (*pcVar1)(var_4h, 0x111b, 0x10, 0);\n        }\n        (*_sym.imp.GDI32.dll_DeleteObject)(uVar2);\n        iVar3 = 0;\n        do {\n            iVar7 = *(var_14h + iVar3 * 4);\n            if (iVar7 != 0) {\n                if (iVar3 != 0x20) {\n                    var_ch = 0;\n                }\n                uVar2 = fcn.00406162(0, iVar7);\n                uVar2 = (*pcVar1)(var_8h, 0x143, 0, uVar2);\n                (*pcVar1)(var_8h, 0x151, uVar2, iVar3);\n            }\n            uVar5 = var_ch;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x21);\n        fcn.00404346(arg_8h, 0x15, *(arg_14h + 0x30 + var_ch * 4));\n        fcn.00404346(arg_8h, 0x16, *(arg_14h + 0x34 + uVar5 * 4));\n        iVar3 = 0;\n        uVar2 = 0;\n        if (*0x43086c < 1) {\ncode_r0x00404f49:\n            uVar5 = (*_sym.imp.USER32.dll_GetWindowLongA)(var_4h, 0xfffffff0);\n            (*_sym.imp.USER32.dll_SetWindowLongA)(var_4h, 0xfffffff0, uVar5 & 0xfffffffb);\n        }\n        else {\n            var_18h = var_10h + 8;\n            do {\n                puVar8 = var_18h + 4;\n                if (*puVar8 != '\\0') {\n                    uVar5 = *var_18h;\n                    var_40h = uVar5 & 0x20;\n                    var_4ch = 0xffff0002;\n                    var_48h = 0xd;\n                    var_3ch = 0x20;\n                    var_50h = uVar2;\n                    var_38h = puVar8;\n                    var_24h = iVar3;\n                    if ((uVar5 & 2) == 0) {\n                        if ((uVar5 & 4) == 0) {\n                            uVar4 = (*pcVar1)(var_4h, 0x1100, 0, &var_50h);\n                            *(*0x42b090 + iVar3 * 4) = uVar4;\n                        }\n                        else {\n                            uVar2 = (*pcVar1)(var_4h, 0x110a, 3, uVar2);\n                        }\n                    }\n                    else {\n                        var_48h = 0x4d;\n                        var_28h = 1;\n                        uVar2 = (*pcVar1)(var_4h, 0x1100, 0, &var_50h);\n                        var_1ch = 1;\n                        *(*0x42b090 + iVar3 * 4) = uVar2;\n                        uVar2 = *(*0x42b090 + iVar3 * 4);\n                    }\n                }\n                iVar3 = iVar3 + 1;\n                var_18h = var_18h + 0x106;\n            } while (iVar3 < *0x43086c);\n            if (var_1ch == 0) goto code_r0x00404f49;\n        }\n        if (var_ch == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(var_8h, 5);\n            fcn.0040437b(var_8h);\n            goto code_r0x00405300;\n        }\n        fcn.0040437b(var_4h);\n    }\n    if (arg_ch == 0x405) {\n        arg_10h = 0;\n        arg_ch = 0x40f;\n        arg_14h = 1;\n    }\n    if (((arg_ch == 0x4e) || (arg_ch == 0x413)) && ((var_ch = arg_14h,  arg_ch == 0x413 || (*(arg_14h + 4) == 0x408))))\n    {\n        if (((*0x430858 & 0x200) == 0) &&\n           (((arg_ch == 0x413 || (*(arg_14h + 8) == -2)) && (iVar3 = fcn.00404c6c(var_4h, arg_ch != 0x413),  -1 < iVar3)\n            ))) {\n            puVar8 = iVar3 * 0x418 + 8 + var_10h;\n            uVar5 = *puVar8;\n            if ((uVar5 & 0x10) == 0) {\n                if ((uVar5 & 0x40) == 0) {\n                    uVar5 = uVar5 ^ 1;\n                }\n                else {\n                    uVar6 = uVar5 ^ 0x80;\n                    if (uVar6 < '\\0') {\n                        uVar5 = uVar5 & 0xffffff00 | uVar6 & 0xff | 1;\n                    }\n                    else {\n                        uVar5 = uVar5 & 0xffffff00 | uVar6 & 0xfe;\n                    }\n                }\n                *puVar8 = uVar5;\n                fcn.0040117d(iVar3);\n                arg_10h = iVar3 + 1;\n                arg_14h = ~*0x430858 >> 8 & 1;\n                arg_ch = 0x40f;\n            }\n        }\n        if (var_ch != 0) {\n            if (*(var_ch + 8) == -0x192) {\n                (*pcVar1)(var_4h, 0x419, 0, *(var_ch + 0x5c));\n            }\n            if (*(var_ch + 8) == -0x196) {\n                if (*(var_ch + 0xc) == 2) {\n                    puVar8 = *(var_ch + 0x5c) * 0x418 + 8 + var_10h;\n                    *puVar8 = *puVar8 | 0x20;\n                }\n                else {\n                    puVar8 = *(var_ch + 0x5c) * 0x418 + 8 + var_10h;\n                    *puVar8 = *puVar8 & 0xffffffdf;\n                }\n            }\n        }\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h != 0x3f9) || (arg_10h >> 0x10 != 1)) || (iVar3 = (*pcVar1)(var_8h, 0x147, 0, 0),  iVar3 == -1))\n        goto code_r0x00405300;\n        iVar3 = (*pcVar1)(var_8h, 0x150, iVar3, 0);\n        if ((iVar3 == -1) || (*(var_14h + iVar3 * 4) == 0)) {\n            iVar3 = 0x20;\n        }\n        fcn.00401299(iVar3);\n        (*pcVar1)(arg_8h, 0x420, 0, iVar3);\n        arg_10h = -1;\n        arg_14h = 0;\n        arg_ch = 0x40f;\n    }\n    if (arg_ch == 0x200) {\n        (*pcVar1)(var_4h, 0x200, 0, 0);\n    }\n    if (arg_ch == 0x40b) {\n        if (*0x42ac7c != 0) {\n            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(*0x42ac7c);\n        }\n        if (*0x42b090 != 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(*0x42b090);\n        }\n        *0x42ac7c = 0;\n        *0x42b090 = 0;\n        *0x4308a0 = 0;\n    }\n    if (arg_ch == 0x40f) {\n        fcn.004011ef(0, 0);\n        if (arg_10h != 0) {\n            iVar3 = arg_10h;\n            if (arg_10h != -1) {\n                iVar3 = arg_10h + -1;\n            }\n            fcn.00404cec(8, iVar3);\n        }\n        if (arg_14h != 0) {\n            arg_14h = fcn.004012e2(*0x42b090);\n            fcn.00401299(arg_14h);\n            iVar3 = 0;\n            iVar7 = 0;\n            if (0 < arg_14h) {\n                do {\n                    if (*(var_14h + iVar3 * 4) != 0) {\n                        iVar7 = iVar7 + 1;\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < arg_14h);\n            }\n            (*pcVar1)(var_8h, 0x14e, iVar7, 0);\n            arg_ch = 0x420;\n        }\n        fcn.004011ef(0, 0);\n        var_1ch = *0x42b090;\n        var_38h = 0xf030;\n        var_10h = 0;\n        if (0 < *0x43086c) {\n            puVar8 = *0x430868 + 8;\n            do {\n                uVar5 = *(var_1ch + var_10h * 4);\n                if (uVar5 != 0) {\n                    uVar6 = *puVar8;\n                    var_44h = 8;\n                    if ((uVar6 & 0x100) != 0) {\n                        var_34h = puVar8 + 4;\n                        var_44h = 9;\n                        *(puVar8 + 1) = *(puVar8 + 1) & 0xfe;\n                    }\n                    if ((uVar6 & 0x40) == 0) {\n                        iVar3 = (uVar6 & 1) + 1;\n                        if ((uVar6 & 0x10) != 0) {\n                            iVar3 = (uVar6 & 1) + 4;\n                        }\n                    }\n                    else {\n                        iVar3 = 3;\n                    }\n                    var_3ch = (iVar3 << 0xb | uVar6 & 8) * 2 | uVar6 & 0x20;\n                    var_40h = uVar5;\n                    (*pcVar1)(var_4h, 0x1102, (uVar6 >> 5 & 1U) + 1, uVar5);\n                    (*pcVar1)(var_4h, 0x110d, 0, &var_44h);\n                }\n                var_10h = var_10h + 1;\n                puVar8 = puVar8 + 0x106;\n            } while (var_10h < *0x43086c);\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(var_4h, 0, 1);\n        if (*(*0x43001c + 0x10) != 0) {\n            uVar2 = fcn.00404c3f(5);\n            fcn.00404b8a(0x3ff, 0xfffffffb, uVar2);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n    if ((arg_ch == 0x420) && ((*0x430858 & 0x100) != 0)) {\n        iVar3 = (arg_14h == 0x20) << 3;\n        (*_sym.imp.USER32.dll_ShowWindow)(var_4h, iVar3);\n        uVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fe, iVar3);\n        (*pcVar1)(uVar2);\n    }\ncode_r0x00405300:\n    fcn.004043ad(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 3370
    },
    "004054f9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004054f9(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uchar *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint uStack28;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_4h;\n    \n    iVar4 = arg_ch;\n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    iVar7 = 0;\n    var_4h = *0x430024;\n    if (arg_ch == 0x110) {\n        var_2ch = 0xffffffff;\n        var_20h = 0xffffffff;\n        var_34h = 2;\n        var_30h = 0;\n        var_28h = NULL;\n        var_24h = 0;\n        var_1ch = 0;\n        uStack28 = 0;\n        arg_10h = *(*0x430850 + 0x5c);\n        arg_ch = *(*0x430850 + 0x60);\n        *0x430010 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x403);\n        *0x430008 = (*pcVar1)(arg_8h, 0x3ee);\n        *0x430024 = (*pcVar1)(arg_8h, 0x3f8);\n        var_4h = *0x430024;\n        fcn.0040437b(*0x430010);\n        *0x430014 = fcn.00404c3f(4);\n        uVar10 = 0x436400;\n        uVar9 = 0xfffffffd;\n        uVar8 = 0;\n        *0x43002c = 0;\n        uVar3 = fcn.00406162(0, 0xfffffffd);\n        fcn.004065c3(\"New install of \\\"%s\\\" to \\\"%s\\\"\", uVar3, uVar8, uVar9, uVar10);\n        (*_sym.imp.USER32.dll_GetClientRect)(var_4h, &var_14h);\n        var_2ch = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x15);\n        pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n        var_2ch = var_ch - var_2ch;\n        (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x101b, 0, &var_34h);\n        (*pcVar2)(var_4h, 0x1036, 0x4000, 0x4000);\n        if (-1 < arg_10h) {\n            (*pcVar2)(var_4h, 0x1001, 0, arg_10h);\n            (*pcVar2)(var_4h, 0x1026, 0, arg_10h);\n        }\n        if (-1 < arg_ch) {\n            (*pcVar2)(var_4h, 0x1024, 0, arg_ch);\n        }\n        fcn.00404346(arg_8h, 0x1b, *(arg_14h + 0x30));\n        if ((*0x430858 & 3) != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x430010, 0);\n            if ((*0x430858 & 2) == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(var_4h, 8);\n            }\n            else {\n                *0x430010 = 0;\n            }\n            fcn.0040437b(*0x430008);\n        }\n        uVar3 = (*pcVar1)(arg_8h, 0x3ec);\n        (*pcVar2)(uVar3, 0x401, 0, 0x75300000);\n        if ((*0x430858 & 4) != 0) {\n            (*pcVar2)(uVar3, 0x409, 0, arg_ch);\n            (*pcVar2)(uVar3, 0x2001, 0, arg_10h);\n        }\ncode_r0x00405897:\n        uVar3 = 0;\n    }\n    else {\n        if (arg_ch == 0x405) {\n            uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3ec, 0, &arg_ch);\n            uVar3 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00405473, uVar3);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n        }\n        pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n        if (iVar4 == 0x111) {\n            if (arg_10h == 0x403) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x430010, 0);\n                (*pcVar1)(var_4h, 8);\n                fcn.0040437b(var_4h);\n                goto code_r0x0040571f;\n            }\n        }\n        else {\ncode_r0x0040571f:\n            if (iVar4 == 0x404) {\n                if (*0x43000c != 0) {\n                    *0x42a070 = 2;\n                    fcn.0040431f();\n                    goto code_r0x00405740;\n                }\n                (*pcVar1)(*0x430848, 8);\n                if (*0x4308cc == 0) {\n                    fcn.004053a1(*(*0x42a074 + 0x34), 0);\n                }\n                fcn.0040431f(1);\n            }\n            if ((iVar4 == 0x7b) && (arg_10h == var_4h)) {\n                arg_10h = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x1004, 0, 0);\n                if (0 < arg_10h) {\n                    uVar3 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                    uVar8 = fcn.00406162(0, 0xffffffe1);\n                    (*_sym.imp.USER32.dll_AppendMenuA)(uVar3, 0, 1, uVar8);\n                    iVar4 = arg_14h;\n                    iVar5 = arg_14h >> 0x10;\n                    if (arg_14h == -1) {\n                        (*_sym.imp.USER32.dll_GetWindowRect)(var_4h, &var_14h);\n                        iVar4 = var_14h;\n                        iVar5 = var_10h;\n                    }\n                    iVar4 = (*_sym.imp.USER32.dll_TrackPopupMenu)(uVar3, 0x180, iVar4, iVar5, 0, arg_8h, 0);\n                    if (iVar4 == 1) {\n                        iVar4 = 1;\n                        var_34h = 0;\n                        var_28h = 0x42b098;\n                        var_24h = 0xfff;\n                        arg_8h = arg_10h;\n                        do {\n                            arg_8h = arg_8h + -1;\n                            iVar5 = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x102d, arg_8h, &var_3ch);\n                            iVar4 = iVar4 + 2 + iVar5;\n                        } while (arg_8h != 0);\n                        (*_sym.imp.USER32.dll_OpenClipboard)(0);\n                        (*_sym.imp.USER32.dll_EmptyClipboard)();\n                        uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, iVar4);\n                        puVar6 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar3);\n                        do {\n                            var_28h = puVar6;\n                            iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x102d, iVar7, &var_3ch);\n                            puVar6 = puVar6 + iVar4;\n                            *puVar6 = 0xd;\n                            puVar6[1] = 10;\n                            puVar6 = puVar6 + 2;\n                            iVar7 = iVar7 + 1;\n                        } while (iVar7 < arg_10h);\n                        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar3);\n                        (*_sym.imp.USER32.dll_SetClipboardData)(1, uVar3);\n                        (*_sym.imp.USER32.dll_CloseClipboard)();\n                    }\n                }\n                goto code_r0x00405897;\n            }\n        }\ncode_r0x00405740:\n        uVar3 = fcn.004043ad(iVar4, arg_10h, arg_14h);\n    }\n    return uVar3;\n}\n",
        "token_count": 2078
    },
    "00405963": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00405963(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t unaff_retaddr;\n    \n    iVar1 = fcn.00405dac(param_1);\n    if (iVar1 != -1) {\n        if ((param_1 & 1) == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(param_1);\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)();\n        }\n        if (iVar2 != 0) {\n            return 1;\n        }\n        if ((unaff_retaddr & 4) == 0) {\n            (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(param_1, iVar1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 186
    },
    "004059ab": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004059ab(char *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint lpFindFileData;\n    uint var_120h;\n    uint var_1ch;\n    int32_t var_ch;\n    int32_t hFindFile;\n    uint32_t var_4h;\n    \n    var_4h = arg_ch & 4;\n    var_ch = fcn.00405cbe(arg_8h);\n    if ((arg_ch & 8) == 0) {\n        uVar1 = arg_ch & 1;\n        if ((uVar1 == 0) || ((var_ch != 0 && ((arg_ch & 2) != 0)))) {\n            fcn.00406140(0x42c0a0, arg_8h);\n            if (uVar1 == 0) {\n                fcn.00405c17(arg_8h);\n            }\n            else {\n                sub.KERNEL32.dll_lstrcatA(0x42c0a0, \"\\\\*.*\");\n            }\n            if ((*arg_8h != '\\0') || (*0x42c0a0 == '\\\\')) {\n                sub.KERNEL32.dll_lstrcatA(arg_8h, 0x40a28c);\n            }\n            iVar2 = sub.KERNEL32.dll_lstrlenA(arg_8h);\n            hFindFile = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(0x42c0a0, &lpFindFileData);\n            if (hFindFile != -1) {\n                do {\n                    puVar5 = &var_120h;\n                    pcVar3 = fcn.00405bfb(&var_120h, 0x3f);\n                    if ((*pcVar3 != '\\0') && (var_1ch != '\\0')) {\n                        puVar5 = &var_1ch;\n                    }\n                    if ((*puVar5 != '.') ||\n                       ((*(puVar5 + 1) != '\\0' && ((*(puVar5 + 1) != '.' || (*(puVar5 + 2) != '\\0')))))) {\n                        fcn.00406140(arg_8h + iVar2, puVar5);\n                        if ((lpFindFileData & 0x10) == 0) {\n                            fcn.004065c3(\"Delete: DeleteFile(\\\"%s\\\")\", arg_8h);\n                            iVar4 = fcn.00405963(arg_8h, var_4h);\n                            if (iVar4 == 0) {\n                                if (var_4h == 0) {\n                                    fcn.004065c3(\"Delete: DeleteFile failed(\\\"%s\\\")\");\n                                    *0x4308c8 = *0x4308c8 + 1;\n                                }\n                                else {\n                                    fcn.004065c3(\"Delete: DeleteFile on Reboot(\\\"%s\\\")\");\n                                    fcn.004053a1(0xfffffff1, arg_8h);\n                                    fcn.00405ff4(arg_8h, 0);\n                                }\n                            }\n                            else {\n                                fcn.004053a1(0xfffffff2, arg_8h);\n                            }\n                        }\n                        else if ((arg_ch & 3) == 3) {\n                            fcn.004059ab(arg_8h, arg_ch);\n                        }\n                    }\n                    iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(hFindFile, &lpFindFileData);\n                } while (iVar4 != 0);\n                (*_sym.imp.KERNEL32.dll_FindClose)(hFindFile);\n            }\n            if (uVar1 != 0) {\n                (arg_8h + iVar2)[-1] = '\\0';\n            }\n        }\n        if (uVar1 != 0) {\n            if (var_ch != 0) {\n                iVar2 = fcn.004065f1(arg_8h);\n                if (iVar2 == 0) {\n                    return;\n                }\n                fcn.00405bd0(arg_8h);\n                fcn.004065c3(\"RMDir: RemoveDirectory(\\\"%s\\\")\", arg_8h);\n                iVar2 = fcn.00405963(arg_8h, var_4h | 1);\n                if (iVar2 != 0) {\n                    fcn.004053a1(0xffffffe5, arg_8h);\n                    return;\n                }\n                if (var_4h != 0) {\n                    fcn.004065c3(\"RMDir: RemoveDirectory on Reboot(\\\"%s\\\")\");\n                    fcn.004053a1(0xfffffff1, arg_8h);\n                    fcn.00405ff4(arg_8h, 0);\n                    return;\n                }\n            }\n            fcn.004065c3();\n            *0x4308c8 = *0x4308c8 + 1;\n        }\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(arg_8h);\n        *0x4308c8 = *0x4308c8 + (iVar2 == 0);\n    }\n    return;\n}\n",
        "token_count": 1168
    },
    "00405cbe": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00405cbe(uint param_1)\n\n{\n    char *pcVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    char *pcVar5;\n    \n    fcn.00406140(0x42c4a0, param_1);\n    pcVar1 = fcn.00405c69(0x42c4a0);\n    if ((pcVar1 != NULL) &&\n       ((pcVar5 = pcVar1,  fcn.004063ab(pcVar1),  (*0x430858 & 0x80) == 0 || ((*pcVar1 != '\\0' && (*pcVar1 != '\\\\'))))))\n    {\n        while( true ) {\n            uVar4 = 0x42c4a0;\n            iVar3 = sub.KERNEL32.dll_lstrlenA(0x42c4a0);\n            if (iVar3 <= pcVar1 + -0x42c4a0) {\n                fcn.00405bd0(0x42c4a0, uVar4, pcVar5);\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(0x42c4a0);\n                return iVar3 != -1;\n            }\n            puVar2 = fcn.004065f1(0x42c4a0);\n            if ((puVar2 != NULL) && ((*puVar2 & 0x10) == 0)) break;\n            pcVar5 = 0x42c4a0;\n            fcn.00405c17();\n        }\n    }\n    return false;\n}\n",
        "token_count": 359
    },
    "00405dac": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00405dac(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n    if (uVar1 != 0xffffffff) {\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(unaff_retaddr, uVar1 & 0xfffffffe);\n    }\n    return uVar1;\n}\n",
        "token_count": 103
    },
    "00405e78": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00405e78(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *arg_10h;\n    int32_t lpBuffer;\n    int32_t iVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int32_t unaff_retaddr;\n    uchar *puStack116;\n    uint uStack112;\n    int32_t iStack108;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpyA)();\n    pcVar1 = _sym.imp.KERNEL32.dll_GetShortPathNameA;\n    if (unaff_retaddr != 0) {\n        fcn.00405dd1();\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        iVar2 = (*pcVar1)();\n        if (iVar2 == 0) {\n            return;\n        }\n        if (0x400 < iVar2) {\n            return;\n        }\n    }\n    iVar2 = (*pcVar1)();\n    if ((iVar2 != 0) && (iVar2 < 0x401)) {\n        iVar3 = (*_sym.imp.USER32.dll_wsprintfA)();\n        fcn.00406162(0x42d228, *(*0x430850 + 0x128));\n        iVar2 = fcn.00405dd1();\n        if (iVar2 != -1) {\n            arg_10h = (*_sym.imp.KERNEL32.dll_GetFileSize)();\n            lpBuffer = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n            if ((lpBuffer != 0) && (iVar4 = fcn.00405e49(iVar2, lpBuffer, arg_10h),  iVar4 != 0)) {\n                iVar4 = fcn.00405d36(lpBuffer, \"[Rename]\\r\\n\");\n                if (iVar4 == 0) {\n                    iStack108 = 0x405f78;\n                    (*_sym.imp.KERNEL32.dll_lstrcpyA)();\n                    arg_10h = arg_10h + 10;\n                    puStack116 = arg_10h;\n                }\n                else {\n                    iStack108 = 0x405f8b;\n                    puVar5 = fcn.00405d36(iVar4 + 10, 0x40ab3c);\n                    if (puVar5 == NULL) {\n                        iVar2 = 0x40;\n                        puStack116 = arg_10h;\n                    }\n                    else {\n                        puVar7 = arg_10h + lpBuffer;\n                        puVar6 = puVar7 + iVar3;\n                        for (; puVar5 < puVar7; puVar7 = puVar7 + -1) {\n                            *puVar6 = *puVar7;\n                            puVar6 = puVar6 + -1;\n                        }\n                        iVar2 = 0x40;\n                        puStack116 = puVar5 + (1 - lpBuffer);\n                    }\n                }\n                puStack116 = puStack116 + lpBuffer;\n                uStack112 = 0x42ca28;\n                iStack108 = iVar3;\n                fcn.00405d8c();\n                (*_sym.imp.KERNEL32.dll_SetFilePointer)(iVar2, 0, 0, 0);\n                (*_sym.imp.KERNEL32.dll_WriteFile)(iVar2, lpBuffer, arg_10h + iVar3, &stack0xffffff8c, 0);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(lpBuffer);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n    }\n    return;\n}\n",
        "token_count": 776
    },
    "00406444": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406444(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (arg_8h != 0) {\n        if (*0x40a908 != -1) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x40a908);\n        }\n        *0x40a908 = 0xffffffff;\n        return;\n    }\n    if (*0x42efc0 == 0) {\n        return;\n    }\n    if (*0x42ebc0 != '\\0') {\n        if (*0x40a908 != -1) goto code_r0x004064b1;\n        *0x40a908 = fcn.00405dd1(0x42ebc0, 0x40000000, 4);\n        if (*0x40a908 == -1) {\n            return;\n        }\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x40a908, 0, 0, 2);\n    }\n    if (*0x40a908 == -1) {\n        return;\n    }\ncode_r0x004064b1:\n    sub.KERNEL32.dll_lstrcatA(0x42f7e0, 0x40ab64);\n    uVar1 = sub.KERNEL32.dll_lstrlenA(0x42f7e0, &arg_8h, 0);\n    (*_sym.imp.KERNEL32.dll_WriteFile)(*0x40a908, 0x42f7e0, uVar1);\n    return;\n}\n",
        "token_count": 343
    },
    "004065f1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004065f1(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(param_1, 0x42c8e8);\n    if (iVar1 == -1) {\n        uVar2 = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n        uVar2 = 0x42c8e8;\n    }\n    return uVar2;\n}\n",
        "token_count": 120
    },
    "0040117d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.0040117d(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    uVar1 = *(param_1 * 0x418 + 8 + *0x430868);\n    if ((uVar1 & 2) != 0) {\n        uVar4 = param_1 + 1;\n        if (uVar4 < *0x43086c) {\n            puVar3 = uVar4 * 0x418 + 8 + *0x430868;\n            iVar5 = 0;\n            do {\n                uVar2 = *puVar3;\n                if ((uVar2 & 2) == 0) {\n                    if ((uVar2 & 4) == 0) {\n                        iVar6 = iVar5;\n                        if ((uVar2 & 0x10) == 0) {\n                            *puVar3 = (uVar2 ^ uVar1) & 1 ^ uVar2;\n                        }\n                    }\n                    else {\n                        iVar6 = iVar5 + -1;\n                        if (iVar5 == 0) {\n                            return;\n                        }\n                    }\n                }\n                else {\n                    iVar6 = iVar5 + 1;\n                }\n                uVar4 = uVar4 + 1;\n                puVar3 = puVar3 + 0x106;\n                iVar5 = iVar6;\n            } while (uVar4 < *0x43086c);\n        }\n    }\n    return;\n}\n",
        "token_count": 358
    },
    "004011ef": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004011ef(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = *0x430868;\n    iVar5 = arg_8h * 0x418 + *0x430868;\n    var_4h = 0;\n    var_8h = 0;\n    if (((*(iVar5 + 8) & 2) != 0) && (arg_ch != 0)) {\n        arg_8h = arg_8h + 1;\n        *(iVar5 + 8) = *(iVar5 + 8) & 0xffffffbe;\n    }\n    if (arg_8h < *0x43086c) {\n        do {\n            puVar1 = arg_8h * 0x418 + 8 + iVar2;\n            uVar3 = arg_8h + 1;\n            uVar4 = *puVar1;\n            if ((uVar4 & 2) != 0) {\n                uVar3 = fcn.004011ef(arg_8h, 1);\n                uVar4 = *puVar1;\n            }\n            if ((uVar4 & 4) != 0) {\n                if (var_4h == 0) {\n                    return uVar3;\n                }\n                if (var_8h != 0) {\n                    *(iVar5 + 8) = *(iVar5 + 8) | 0x40;\n                    return uVar3;\n                }\n                *(iVar5 + 8) = *(iVar5 + 8) & 0xffffff7f | 1;\n                return uVar3;\n            }\n            if ((uVar4 & 0x40) != 0) {\n                var_4h = var_4h + 1;\n            }\n            if ((uVar4 & 1) == 0) {\n                var_8h = var_8h + 1;\n            }\n            else {\n                var_4h = var_4h + 1;\n            }\n            arg_8h = uVar3;\n        } while (uVar3 < *0x43086c);\n    }\n    return 0;\n}\n",
        "token_count": 534
    },
    "004012e2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004012e2(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    bool bVar3;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = *0x430850 + 0x94;\n    do {\n        uVar1 = 0;\n        if (*var_8h != 0) {\n            bVar3 = *0x43086c == 0;\n            if (*0x43086c != 0) {\n                puVar2 = *0x430868 + 8;\n                do {\n                    if (((*puVar2 & 6) == 0) &&\n                       (((arg_8h == 0 || (*(arg_8h + uVar1 * 4) != 0)) &&\n                        ((puVar2[-1] & 1 << (var_4h & 0x1f)) != (*puVar2 & 1) << (var_4h & 0x1f))))) break;\n                    uVar1 = uVar1 + 1;\n                    puVar2 = puVar2 + 0x106;\n                } while (uVar1 < *0x43086c);\n                bVar3 = uVar1 == *0x43086c;\n            }\n            if (bVar3) {\n                return var_4h;\n            }\n        }\n        var_4h = var_4h + 1;\n        var_8h = var_8h + 1;\n        if (0x1f < var_4h) {\n            return var_4h;\n        }\n    } while( true );\n}\n",
        "token_count": 388
    },
    "004032de": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004032de(int32_t nDenominator, uint hFile, uint32_t arg_10h, uint32_t nNumber)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_58h;\n    int32_t var_18h;\n    int32_t lpNumberOfBytesWritten;\n    int32_t var_10h;\n    uint32_t lpBuffer;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar5 = nNumber;\n    uVar6 = arg_10h;\n    var_8h = nNumber;\n    if (arg_10h == 0) {\n        var_8h = 0x8000;\n    }\n    var_4h = 0;\n    lpBuffer = arg_10h;\n    if (arg_10h == 0) {\n        lpBuffer = 0x419c50;\n    }\n    if (-1 < nDenominator) {\n        fcn.00403516(*0x430898 + nDenominator);\n    }\n    iVar2 = fcn.00403500(&nNumber, 4);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetTickCount;\n    if (iVar2 != 0) {\n        if ((nNumber & 0x80000000) == 0) {\n            if (uVar6 == 0) {\n                while( true ) {\n                    if (nNumber < 1) {\n                        return var_4h;\n                    }\n                    uVar6 = var_8h;\n                    if (nNumber < var_8h) {\n                        uVar6 = nNumber;\n                    }\n                    iVar2 = fcn.00403500();\n                    if (iVar2 == 0) break;\n                    iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, 0x415c50, uVar6, &arg_10h, 0);\n                    if ((iVar2 == 0) || (uVar6 != arg_10h)) {\n                        return 0xfffffffe;\n                    }\n                    var_4h = var_4h + uVar6;\n                    nNumber = nNumber - uVar6;\n                }\n            }\n            else {\n                if (nNumber < uVar5) {\n                    uVar5 = nNumber;\n                }\n                iVar2 = fcn.00403500(uVar6, uVar5);\n                if (iVar2 != 0) {\n                    return uVar5;\n                }\n            }\n        }\n        else {\n            var_10h = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            *0x40c5b4 = 0;\n            *0x40c5b0 = 0;\n            uVar6 = nNumber & 0x7fffffff;\n            *0x40c098 = 8;\n            *0x415c40 = 0x40dc38;\n            *0x415c3c = 0x40dc38;\n            *0x415c38 = 0x415c38;\n            nNumber = uVar6;\n            if (uVar6 == 0) {\n                *0x40c098 = 8;\n                *0x40c5b0 = 0;\n                *0x40c5b4 = 0;\n                *0x415c38 = 0x415c38;\n                *0x415c3c = 0x40dc38;\n                *0x415c40 = 0x40dc38;\n                return var_4h;\n            }\n            while( true ) {\n                uVar5 = 0x4000;\n                if (nNumber < 0x4000) {\n                    uVar5 = nNumber;\n                }\n                iVar2 = fcn.00403500();\n                if (iVar2 == 0) break;\n                nNumber = nNumber - uVar5;\n                *0x40c088 = 0x415c50;\n                *0x40c08c = uVar5;\n                while( true ) {\n                    uVar5 = lpBuffer;\n                    *0x40c090 = lpBuffer;\n                    *0x40c094 = var_8h;\n                    var_18h = fcn.004066f8(0x40c088);\n                    if (var_18h < 0) {\n                        return 0xfffffffc;\n                    }\n                    iVar4 = *0x40c090 - uVar5;\n                    iVar2 = (*pcVar1)();\n                    if (((*0x4308f4 & 1) != 0) && ((200 < iVar2 - var_10h || (nNumber == 0)))) {\n                        uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar6 - nNumber, 100, uVar6);\n                        (*_sym.imp.USER32.dll_wsprintfA)(&var_58h, \"... %d%%\", uVar3);\n                        fcn.004053a1(0, &var_58h);\n                        var_10h = iVar2;\n                    }\n                    if (iVar4 == 0) break;\n                    if (arg_10h == 0) {\n                        iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, lpBuffer, iVar4, &lpNumberOfBytesWritten, 0);\n                        if (iVar2 == 0) {\n                            return 0xfffffffe;\n                        }\n                        if (lpNumberOfBytesWritten != iVar4) {\n                            return 0xfffffffe;\n                        }\n                    }\n                    else {\n                        var_8h = var_8h - iVar4;\n                        lpBuffer = *0x40c090;\n                    }\n                    var_4h = var_4h + iVar4;\n                    if (var_18h == 1) {\n                        return var_4h;\n                    }\n                }\n                if (nNumber < 1) {\n                    return var_4h;\n                }\n            }\n        }\n    }\n    return 0xfffffffd;\n}\n",
        "token_count": 1332
    },
    "004043ad": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004043ad(int32_t arg_8h, uint hdc, uint hWnd)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    \n    if ((arg_8h - 0x133U < 6) &&\n       (puVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xffffffeb),  pcVar1 = _sym.imp.USER32.dll_GetSysColor, \n       puVar2 != NULL)) {\n        uVar3 = *puVar2;\n        if ((*(puVar2 + 5) & 2) != 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetSysColor)(uVar3);\n        }\n        if ((*(puVar2 + 5) & 1) != 0) {\n            (*_sym.imp.GDI32.dll_SetTextColor)(hdc, uVar3);\n        }\n        (*_sym.imp.GDI32.dll_SetBkMode)(hdc, puVar2[4]);\n        var_8h = puVar2[1];\n        if ((*(puVar2 + 5) & 8) != 0) {\n            var_8h = (*pcVar1)(var_8h);\n        }\n        if ((*(puVar2 + 5) & 4) != 0) {\n            (*_sym.imp.GDI32.dll_SetBkColor)(hdc, var_8h);\n        }\n        if ((*(puVar2 + 5) & 0x10) != 0) {\n            var_ch = puVar2[2];\n            if (puVar2[3] != 0) {\n                (*_sym.imp.GDI32.dll_DeleteObject)(puVar2[3]);\n            }\n            uVar3 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            puVar2[3] = uVar3;\n        }\n        return puVar2[3];\n    }\n    return 0;\n}\n",
        "token_count": 454
    },
    "0040448f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040448f(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    char *pcVar10;\n    char *var_ch;\n    int32_t var_8h;\n    code *var_4h;\n    \n    pcVar5 = _sym.imp.USER32.dll_SendMessageA;\n    pcVar3 = _sym.imp.USER32.dll_GetDlgItem;\n    if (arg_ch == 0x110) {\n        iVar7 = *(arg_14h + 0x30);\n        if (iVar7 < 0) {\n            iVar7 = *(*0x43001c - (iVar7 * 4 + 4));\n        }\n        cVar2 = *(iVar7 + *0x430878);\n        var_8h = 0;\n        pcVar10 = iVar7 + *0x430878 + 1;\n        var_4h = fcn.0040445a;\n        uVar9 = ~*(arg_14h + 0x14) >> 5 & 1 | *(arg_14h + 0x14) & 1;\n        var_ch = pcVar10;\n        fcn.00404346(arg_8h, 0x22, *(arg_14h + 0x34));\n        fcn.00404346(arg_8h, 0x23, *(arg_14h + 0x38));\n        (*_sym.imp.USER32.dll_CheckDlgButton)(arg_8h, (uVar9 == 0) + 0x40a, 1);\n        fcn.00404368(uVar9);\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n        fcn.0040437b(uVar6);\n        pcVar3 = _sym.imp.USER32.dll_SendMessageA;\n        (*_sym.imp.USER32.dll_SendMessageA)(uVar6, 0x45b, 1, 0);\n        iVar7 = *(*0x430850 + 0x68);\n        if (iVar7 < 0) {\n            iVar7 = (*_sym.imp.USER32.dll_GetSysColor)(-iVar7);\n        }\n        (*pcVar3)(uVar6, 0x443, 0, iVar7);\n        (*pcVar3)(uVar6, 0x445, 0, 0x4010000);\n        uVar8 = sub.KERNEL32.dll_lstrlenA(pcVar10);\n        (*pcVar3)(uVar6, 0x435, 0, uVar8);\n        *0x42a06c = 0;\n        (*pcVar3)(uVar6, 0x449, cVar2, &var_ch);\n        *0x42a06c = 0;\n        return 0;\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h >> 0x10 != 0) || (*0x42a06c != 0)) || (puVar1 = *0x42a074 + 0x14,  (*puVar1 & 0x20) == 0))\n        goto code_r0x00404706;\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x40a, 0xf0, 0, 0);\n        uVar9 = (*pcVar5)(uVar6);\n        *puVar1 = *puVar1 & 0xfffffffe | uVar9 & 1;\n        fcn.00404368(uVar9 & 1);\n        fcn.00404719();\n    }\n    if (arg_ch == 0x4e) {\n        uVar6 = (*pcVar3)(arg_8h, 1000);\n        if ((*(arg_14h + 8) == 0x70b) && (*(arg_14h + 0xc) == 0x201)) {\n            var_8h = *(arg_14h + 0x1c);\n            var_ch = *(arg_14h + 0x18);\n            var_4h = 0x42efe0;\n            if (var_8h - var_ch < 0x800) {\n                (*pcVar5)(uVar6, 1099, 0, &var_ch);\n                pcVar4 = _sym.imp.USER32.dll_LoadCursorA;\n                uVar6 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f02);\n                pcVar3 = _sym.imp.USER32.dll_SetCursor;\n                (*_sym.imp.USER32.dll_SetCursor)(uVar6);\n                (*_sym.imp.SHELL32.dll_ShellExecuteA)(arg_8h, \"open\", var_4h, 0, 0, 1);\n                uVar6 = (*pcVar4)(0, 0x7f00);\n                (*pcVar3)(uVar6);\n            }\n        }\n        if ((*(arg_14h + 8) == 0x700) && (*(arg_14h + 0xc) == 0x100)) {\n            if (*(arg_14h + 0x10) == 0xd) {\n                (*pcVar5)(*0x430848, 0x111, 1, 0);\n            }\n            if (*(arg_14h + 0x10) == 0x1b) {\n                (*pcVar5)(*0x430848, 0x10, 0, 0);\n            }\n            return 1;\n        }\n    }\n    else if (arg_ch == 0x40b) {\n        *0x42a06c = *0x42a06c + 1;\n    }\ncode_r0x00404706:\n    uVar6 = fcn.004043ad(arg_ch, arg_10h, arg_14h);\n    return uVar6;\n}\n",
        "token_count": 1369
    },
    "00404c3f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00404c3f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    iVar2 = *0x430868;\n    iVar3 = *0x43086c;\n    if (*0x43086c != 0) {\n        do {\n            if ((*(iVar2 + 8) & 1) != 0) {\n                iVar1 = iVar1 + *(iVar2 + param_1 * 4);\n            }\n            iVar3 = iVar3 + -1;\n            iVar2 = iVar2 + 0x418;\n        } while (iVar3 != 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 165
    },
    "004053a1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004053a1(uint arg_8h, int32_t lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *0x430024;\n    if (*0x430024 != 0) {\n        var_8h = *0x4308f4;\n        uVar4 = *0x4308f4 & 1;\n        if (uVar4 == 0) {\n            fcn.00406162(0x42a078, arg_8h);\n        }\n        iVar2 = sub.KERNEL32.dll_lstrlenA(0x42a078);\n        if (lpString2 != 0) {\n            iVar3 = sub.KERNEL32.dll_lstrlenA(lpString2);\n            if (0x7ff < iVar3 + iVar2) {\n                return;\n            }\n            sub.KERNEL32.dll_lstrcatA(0x42a078, lpString2);\n        }\n        if ((var_8h & 4) == 0) {\n            (*_sym.imp.USER32.dll_SetWindowTextA)(*0x430008, 0x42a078);\n        }\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        if ((var_8h & 2) == 0) {\n            var_1ch = 0x42a078;\n            var_30h = 1;\n            var_2ch = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x1004, 0, 0);\n            var_2ch = var_2ch - uVar4;\n            var_28h = 0;\n            (*pcVar1)(var_4h, 0x1007 - uVar4, 0, &var_30h);\n            (*pcVar1)(var_4h, 0x1013, var_2ch, 0);\n        }\n        if (uVar4 != 0) {\n            *(iVar2 + 0x42a078) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 523
    },
    "00405473": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00405473(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    int32_t iVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    \n    iVar4 = *0x43086c;\n    iVar3 = *0x430868;\n    uVar1 = (*_sym.imp.ole32.dll_OleInitialize)(0);\n    *0x4308f8 = *0x4308f8 | uVar1;\n    fcn.00404392(0);\n    if (iVar4 != 0) {\n        iVar3 = iVar3 + 0x18;\n        do {\n            iVar4 = iVar4 + -1;\n            if ((*(iVar3 + -0x10) & 1) == 0) {\n                fcn.004065c3(\"Skipping section: \\\"%s\\\"\", iVar3);\n            }\n            else {\n                pcVar5 = \"Section: \\\"%s\\\"\";\n                fcn.004065c3(\"Section: \\\"%s\\\"\", iVar3);\n                iVar2 = fcn.00401389(pcVar5, unaff_ESI, *(iVar3 + -0xc));\n                if (iVar2 != 0) {\n                    *0x4308cc = *0x4308cc + 1;\n                    break;\n                }\n            }\n            iVar3 = iVar3 + 0x418;\n        } while (iVar4 != 0);\n    }\n    fcn.00404392(0x404);\n    (*_sym.imp.ole32.dll_OleUninitialize)();\n    return *0x4308cc;\n}\n",
        "token_count": 357
    },
    "0040668a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t fcn.0040668a(uint32_t param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (*0x42d62c == 0) {\n        uVar2 = 0;\n        do {\n            iVar3 = 8;\n            uVar1 = uVar2;\n            do {\n                uVar1 = uVar1 >> 1 ^ -((uVar1 & 1) != 0) & 0xedb88320;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            *(uVar2 * 4 + 0x42d628) = uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0x100);\n    }\n    param_1 = ~param_1;\n    if (param_3 != 0) {\n        do {\n            param_1 = param_1 >> 8 ^ *((param_1 & 0xff ^ *param_2) * 4 + 0x42d628);\n            param_2 = param_2 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return ~param_1;\n}\n",
        "token_count": 309
    },
    "004066f8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004066f8(uint8_t **arg_8h)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t uVar2;\n    uint8_t **ppuVar3;\n    int32_t *piVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint8_t **ppuVar7;\n    char cVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    uint uVar11;\n    uint *puVar12;\n    uint8_t *puVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint8_t *var_40h;\n    uint8_t *var_38h;\n    uint8_t *var_34h;\n    uint8_t **var_30h;\n    uint8_t *var_2ch;\n    uint8_t **var_20h;\n    uint8_t *var_1ch;\n    uint8_t *var_18h;\n    uint8_t *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint8_t **var_8h;\n    int32_t var_4h;\n    \n    var_38h = *arg_8h;\n    ppuVar1 = arg_8h + 4;\n    var_34h = arg_8h[1];\n    var_30h = arg_8h[0x26ee];\n    puVar10 = arg_8h[0x14a];\n    var_40h = arg_8h[0x14b];\n    if (var_30h < arg_8h[0x26ed]) {\n        var_2ch = arg_8h[0x26ed] + (-1 - var_30h);\n    }\n    else {\n        var_2ch = arg_8h[0x26ec] + -var_30h;\n    }\ncode_r0x0040710c:\n    while (*ppuVar1 < 0x10) {\n    // switch table (16 cases) at 0x407147\n        switch(*(*ppuVar1 * 4 + 0x407147)) {\n        case 0x406770:\n            for (; puVar10 < 0x3; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x0040711c;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            puVar10 = puVar10 + -3;\n            puVar5 = var_40h >> 3;\n            uVar14 = (var_40h & 7) >> 1;\n            arg_8h[0x149] = (-((var_40h & 1) != 0) & 7) + 8;\n            if (uVar14 == 0) {\n                *ppuVar1 = 0x9;\n                var_40h = puVar5 >> (puVar10 & 7);\n                puVar10 = puVar10 + -(puVar10 & 7);\n            }\n            else {\n                var_40h = puVar5;\n                if (uVar14 == 1) {\n                    if (*0x42ebb0 == '\\0') {\n                        var_8h = NULL;\n                        piVar4 = 0x42da30;\n                        do {\n                            cVar8 = '\\b';\n                            if (0x42dc6c < piVar4) {\n                                if (piVar4 < 0x42de30) {\n                                    cVar8 = '\\t';\n                                }\n                                else if (piVar4 < 0x42de90) {\n                                    cVar8 = '\\a';\n                                }\n                            }\n                            *piVar4 = cVar8;\n                            piVar4 = piVar4 + 1;\n                        } while (piVar4 < 0x42deb0);\n                        fcn.004071ef(0x42da30, 0x120, 0x101, 0x408394, 0x4083d4, 0x42da2c, 0x40ac34, 0x42e330, &var_8h);\n                        puVar12 = 0x42da30;\n                        for (iVar6 = 0x1e; iVar6 != 0; iVar6 = iVar6 + -1) {\n                            *puVar12 = 5;\n                            puVar12 = puVar12 + 1;\n                        }\n                        fcn.004071ef(0x42da30, 0x1e, 0, 0x408414, 0x408450, 0x42da28, 0x40ac38, 0x42e330, &var_8h);\n                        *0x42ebb0 = *0x42ebb0 + '\\x01';\n                    }\n                    *(arg_8h + 8) = *0x40ac34;\n                    *(arg_8h + 0x21) = *0x40ac38;\n                    arg_8h[9] = *0x42da2c;\n                    arg_8h[10] = *0x42da28;\n                    goto code_r0x004068c8;\n                }\n                if (uVar14 != 2) goto code_r0x004067a8;\n                *ppuVar1 = 0xb;\n            }\n            break;\n        case 0x4067af:\n            goto code_r0x004067af;\n        case 0x406905:\n            for (; puVar10 < 0x20; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x0040711c;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            puVar10 = NULL;\n            puVar5 = var_40h & 0xffff;\n            var_40h = NULL;\n            arg_8h[5] = puVar5;\n            if (puVar5 == NULL) goto code_r0x00406a0b;\n            puVar5 = 0xa;\n            goto code_r0x00406a11;\n        case 0x40692a:\n            if (var_34h == NULL) {\ncode_r0x0040711c:\n                uVar11 = 0;\n                arg_8h[0x14b] = var_40h;\n                arg_8h[0x14a] = puVar10;\n                arg_8h[1] = NULL;\n                goto code_r0x004067d0;\n            }\n            if (var_2ch == NULL) {\n                if (var_30h == arg_8h[0x26ec]) {\n                    ppuVar3 = arg_8h[0x26ed];\n                    ppuVar7 = arg_8h + 0x6ec;\n                    if (ppuVar3 != ppuVar7) {\n                        if (ppuVar7 < ppuVar3) {\n                            var_2ch = ppuVar3 + (-1 - ppuVar7);\n                        }\n                        else {\n                            var_2ch = arg_8h[0x26ec] - ppuVar7;\n                        }\n                        var_30h = ppuVar7;\n                        if (var_2ch != NULL) goto code_r0x004069d7;\n                    }\n                }\n                arg_8h[0x26ee] = var_30h;\n                fcn.00407187(arg_8h);\n                var_30h = arg_8h[0x26ee];\n                ppuVar7 = arg_8h[0x26ed];\n                if (var_30h < ppuVar7) {\n                    var_2ch = ppuVar7 + (-1 - var_30h);\n                }\n                else {\n                    var_2ch = arg_8h[0x26ec] + -var_30h;\n                }\n                if (var_30h == arg_8h[0x26ec]) {\n                    ppuVar3 = arg_8h + 0x6ec;\n                    if (ppuVar3 != ppuVar7) {\n                        var_30h = ppuVar3;\n                        if (ppuVar3 < ppuVar7) {\n                            var_2ch = ppuVar7 + (-1 - ppuVar3);\n                        }\n                        else {\n                            var_2ch = arg_8h[0x26ec] - ppuVar3;\n                        }\n                    }\n                }\n                if (var_2ch == NULL) goto code_r0x00407138;\n            }\ncode_r0x004069d7:\n            puVar5 = var_2ch;\n            if (var_34h <= var_2ch) {\n                puVar5 = var_34h;\n            }\n            puVar9 = arg_8h[5];\n            if (puVar5 <= arg_8h[5]) {\n                puVar9 = puVar5;\n            }\n            fcn.00405d8c();\n            var_38h = var_38h + puVar9;\n            var_34h = var_34h + -puVar9;\n            var_30h = var_30h + puVar9;\n            var_2ch = var_2ch + -puVar9;\n            ppuVar7 = arg_8h + 5;\n            *ppuVar7 = *ppuVar7 + -puVar9;\n            if (*ppuVar7 == NULL) {\ncode_r0x00406a0b:\n                puVar5 = arg_8h[0x149];\ncode_r0x00406a11:\n                *ppuVar1 = puVar5;\n            }\n            break;\n        case 0x406a38:\n            for (; puVar10 < 0xe; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x0040711c;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            arg_8h[5] = var_40h & 0x3fff;\n            if (((var_40h & 0x3fff & 0x1f) < 0x1e) && ((var_40h & 0x3e0) < 0x3a1)) {\n                var_40h = var_40h >> 0xe;\n                puVar10 = puVar10 + -0xe;\n                arg_8h[6] = NULL;\n                *ppuVar1 = 0xc;\n                goto code_r0x00406a77;\n            }\n            goto code_r0x004067af;\n        case 0x406a77:\ncode_r0x00406a77:\n            if (arg_8h[6] < (arg_8h[5] >> 10) + 4) {\n                do {\n                    for (; puVar10 < 0x3; puVar10 = puVar10 + 8) {\n                        if (var_34h == NULL) goto code_r0x0040711c;\n                        var_34h = var_34h + -1;\n                        var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                        var_38h = var_38h + 1;\n                    }\n                    puVar5 = var_40h & 7;\n                    puVar10 = puVar10 + -3;\n                    var_40h = var_40h >> 3;\n                    arg_8h[arg_8h[6][0x408380] + 7] = puVar5;\n                    arg_8h[6] = arg_8h[6] + 1;\n                } while (arg_8h[6] < (arg_8h[5] >> 10) + 4);\n            }\n            while (arg_8h[6] < 0x13) {\n                arg_8h[arg_8h[6][0x408380] + 7] = NULL;\n                arg_8h[6] = arg_8h[6] + 1;\n            }\n            ppuVar7 = arg_8h + 0x147;\n            var_8h = NULL;\n            *ppuVar7 = 0x7;\n            iVar6 = fcn.004071ef(arg_8h + 7, 0x13, 0x13, 0, 0, arg_8h + 0x148, ppuVar7, arg_8h + 0x14c, &var_8h);\n            if ((iVar6 == 0) && (*ppuVar7 != NULL)) {\n                arg_8h[6] = NULL;\n                *ppuVar1 = 0xd;\ncode_r0x00406c5a:\n                while (arg_8h[6] < (arg_8h[5] >> 5 & 0x1f) + 0x102 + (arg_8h[5] & 0x1f)) {\n                    for (; puVar10 < arg_8h[0x147]; puVar10 = puVar10 + 8) {\n                        if (var_34h == NULL) goto code_r0x0040711c;\n                        var_34h = var_34h + -1;\n                        var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                        var_38h = var_38h + 1;\n                    }\n                    uVar14 = *(arg_8h[0x147] * 2 + 0x40ac10) & var_40h;\n                    uVar2 = arg_8h[0x148][uVar14 * 4 + 1];\n                    uVar15 = uVar2;\n                    var_14h = *(arg_8h[0x148] + uVar14 * 4 + 2);\n                    if (var_14h < 0x10) {\n                        puVar10 = puVar10 + -uVar15;\n                        var_40h = var_40h >> (uVar2 & 0x1f);\n                        arg_8h[arg_8h[6] + 7] = var_14h;\n                        arg_8h[6] = arg_8h[6] + 1;\n                    }\n                    else {\n                        if (var_14h == 0x12) {\n                            var_8h = 0xb;\n                            puVar5 = 0x7;\n                        }\n                        else {\n                            puVar5 = var_14h + -0xe;\n                            var_8h = 0x3;\n                        }\n                        for (; puVar10 < puVar5 + uVar15; puVar10 = puVar10 + 8) {\n                            if (var_34h == NULL) goto code_r0x0040711c;\n                            var_34h = var_34h + -1;\n                            var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                            var_38h = var_38h + 1;\n                        }\n                        uVar14 = var_40h >> (uVar2 & 0x1f);\n                        puVar10 = puVar10 + (-puVar5 - uVar15);\n                        puVar9 = var_8h + (*(puVar5 * 2 + 0x40ac10) & uVar14);\n                        var_40h = uVar14 >> (puVar5 & 0x1f);\n                        puVar5 = arg_8h[6];\n                        if ((arg_8h[5] >> 5 & 0x1f) + 0x102 + (arg_8h[5] & 0x1f) < puVar9 + puVar5)\n                        goto code_r0x004067af;\n                        if (var_14h == 0x10) {\n                            if (puVar5 == NULL) goto code_r0x004067af;\n                            puVar13 = arg_8h[puVar5 + 6];\n                        }\n                        else {\n                            puVar13 = NULL;\n                        }\n                        ppuVar7 = arg_8h + puVar5 + 7;\n                        do {\n                            *ppuVar7 = puVar13;\n                            puVar5 = puVar5 + 1;\n                            ppuVar7 = ppuVar7 + 1;\n                            puVar9 = puVar9 + -1;\n                        } while (puVar9 != NULL);\n                        arg_8h[6] = puVar5;\n                    }\n                }\n                arg_8h[0x148] = NULL;\n                var_ch = 0;\n                uVar14 = arg_8h[5] & 0x1f;\n                uVar15 = uVar14 + 0x101;\n                var_14h = (arg_8h[5] >> 5 & 0x1f) + 1;\n                var_4h = 9;\n                var_10h = 6;\n                iVar6 = fcn.004071ef(arg_8h + 7, uVar15, 0x101, 0x408394, 0x4083d4, &var_18h, &var_4h, arg_8h + 0x14c, \n                                     &var_ch);\n                if (var_4h == 0) {\n                    iVar6 = -1;\n                }\n                if (((iVar6 != 0) ||\n                    (iVar6 = fcn.004071ef(arg_8h + uVar14 + 0x108, var_14h, 0, 0x408414, 0x408450, &var_1ch, &var_10h, \n                                          arg_8h + 0x14c, &var_ch),  iVar6 != 0)) ||\n                   ((var_10h == 0 && (0x101 < uVar15)))) goto code_r0x004067af;\n                *ppuVar1 = NULL;\n                *(arg_8h + 0x21) = var_10h;\n                arg_8h[9] = var_18h;\n                *(arg_8h + 8) = var_4h;\n                arg_8h[10] = var_1ch;\ncode_r0x00406d44:\n                arg_8h[7] = *(arg_8h + 8);\n                arg_8h[6] = arg_8h[9];\n                *ppuVar1 = 0x1;\ncode_r0x00406d57:\n                for (; puVar10 < arg_8h[7]; puVar10 = puVar10 + 8) {\n                    if (var_34h == NULL) goto code_r0x0040711c;\n                    var_34h = var_34h + -1;\n                    var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                    var_38h = var_38h + 1;\n                }\n                puVar5 = arg_8h[6] + (*(arg_8h[7] * 2 + 0x40ac10) & var_40h) * 4;\n                var_40h = var_40h >> (puVar5[1] & 0x1f);\n                puVar10 = puVar10 + -puVar5[1];\n                uVar2 = *puVar5;\n                puVar9 = uVar2;\n                if (puVar9 == NULL) {\n                    arg_8h[6] = *(puVar5 + 2);\n                    *ppuVar1 = 0x6;\n                }\n                else if ((uVar2 & 0x10) == 0) {\n                    if ((uVar2 & 0x40) == 0) goto code_r0x00406eaa;\n                    if ((uVar2 & 0x20) == 0) goto code_r0x004067af;\n                    *ppuVar1 = 0x7;\n                }\n                else {\n                    arg_8h[6] = puVar9 & 0xf;\n                    arg_8h[5] = *(puVar5 + 2);\n                    *ppuVar1 = 0x2;\n                }\n            }\n            else {\n                *ppuVar1 = 0x11;\n            }\n            break;\n        case 0x406c5a:\n            goto code_r0x00406c5a;\n        case 0x406d44:\n            goto code_r0x00406d44;\n        case 0x406d57:\n            goto code_r0x00406d57;\n        case 0x406ded:\n            puVar5 = arg_8h[6];\n            for (; puVar10 < puVar5; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x0040711c;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            arg_8h[5] = arg_8h[5] + (*(puVar5 * 2 + 0x40ac10) & var_40h);\n            var_40h = var_40h >> (puVar5 & 0x1f);\n            puVar10 = puVar10 + -puVar5;\n            arg_8h[7] = *(arg_8h + 0x21);\n            arg_8h[6] = arg_8h[10];\n            *ppuVar1 = 0x3;\n        case 0x406e3e:\n            for (; puVar10 < arg_8h[7]; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x0040711c;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            puVar5 = arg_8h[6] + (*(arg_8h[7] * 2 + 0x40ac10) & var_40h) * 4;\n            var_40h = var_40h >> (puVar5[1] & 0x1f);\n            puVar10 = puVar10 + -puVar5[1];\n            uVar2 = *puVar5;\n            puVar9 = uVar2;\n            if ((uVar2 & 0x10) == 0) {\n                if ((uVar2 & 0x40) != 0) goto code_r0x004067af;\ncode_r0x00406eaa:\n                arg_8h[7] = puVar9;\n                arg_8h[6] = puVar5 + *(puVar5 + 2) * 4;\n            }\n            else {\n                arg_8h[6] = puVar9 & 0xf;\n                arg_8h[7] = *(puVar5 + 2);\n                *ppuVar1 = 0x4;\n            }\n            break;\n        case 0x406ebc:\n            puVar5 = arg_8h[6];\n            for (; puVar10 < puVar5; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x0040711c;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            arg_8h[7] = arg_8h[7] + (*(puVar5 * 2 + 0x40ac10) & var_40h);\n            var_40h = var_40h >> (puVar5 & 0x1f);\n            puVar10 = puVar10 + -puVar5;\n            *ppuVar1 = 0x5;\n        case 0x406f00:\n            puVar5 = arg_8h[7];\n            if (var_30h + (-0x1ba0 - ppuVar1) < puVar5) {\n                puVar5 = arg_8h[0x26ec] + (-ppuVar1 - puVar5) + -0x1ba0;\n            }\n            else {\n                puVar5 = -puVar5;\n            }\n            var_20h = puVar5 + var_30h;\n            puVar5 = arg_8h[5];\n            ppuVar7 = var_30h;\n            while (var_30h = ppuVar7,  puVar5 != NULL) {\n                if (var_2ch == NULL) {\n                    if (ppuVar7 == arg_8h[0x26ec]) {\n                        ppuVar3 = arg_8h[0x26ed];\n                        var_30h = arg_8h + 0x6ec;\n                        if (ppuVar3 != var_30h) {\n                            if (var_30h < ppuVar3) {\n                                var_2ch = ppuVar3 + (-1 - var_30h);\n                            }\n                            else {\n                                var_2ch = arg_8h[0x26ec] - var_30h;\n                            }\n                            ppuVar7 = var_30h;\n                            if (var_2ch != NULL) goto code_r0x00406fd4;\n                        }\n                    }\n                    arg_8h[0x26ee] = ppuVar7;\n                    fcn.00407187();\n                    var_30h = arg_8h[0x26ee];\n                    ppuVar7 = arg_8h[0x26ed];\n                    if (var_30h < ppuVar7) {\n                        var_2ch = ppuVar7 + (-1 - var_30h);\n                    }\n                    else {\n                        var_2ch = arg_8h[0x26ec] + -var_30h;\n                    }\n                    var_8h = arg_8h[0x26ec];\n                    if ((var_30h == var_8h) && (ppuVar3 = arg_8h + 0x6ec,  ppuVar7 != ppuVar3)) {\n                        var_30h = ppuVar3;\n                        if (ppuVar3 < ppuVar7) {\n                            var_2ch = ppuVar7 + (-1 - ppuVar3);\n                        }\n                        else {\n                            var_2ch = var_8h - ppuVar3;\n                        }\n                    }\n                    if (var_2ch == NULL) goto code_r0x00407138;\n                }\ncode_r0x00406fd4:\n                *var_30h = *var_20h;\n                ppuVar7 = var_30h + 1;\n                var_20h = var_20h + 1;\n                var_2ch = var_2ch + -1;\n                if (var_20h == arg_8h[0x26ec]) {\n                    var_20h = arg_8h + 0x6ec;\n                }\n                ppuVar3 = arg_8h + 5;\n                *ppuVar3 = *ppuVar3 + -1;\n                puVar5 = *ppuVar3;\n            }\ncode_r0x004068c8:\n            *ppuVar1 = NULL;\n            break;\n        case 0x407006:\n            if (var_2ch == NULL) {\n                if (var_30h == arg_8h[0x26ec]) {\n                    ppuVar3 = arg_8h[0x26ed];\n                    ppuVar7 = arg_8h + 0x6ec;\n                    if (ppuVar3 != ppuVar7) {\n                        if (ppuVar7 < ppuVar3) {\n                            var_2ch = ppuVar3 + (-1 - ppuVar7);\n                        }\n                        else {\n                            var_2ch = arg_8h[0x26ec] - ppuVar7;\n                        }\n                        var_30h = ppuVar7;\n                        if (var_2ch != NULL) goto code_r0x004070a5;\n                    }\n                }\n                arg_8h[0x26ee] = var_30h;\n                fcn.00407187(arg_8h);\n                var_30h = arg_8h[0x26ee];\n                ppuVar7 = arg_8h[0x26ed];\n                if (var_30h < ppuVar7) {\n                    var_2ch = ppuVar7 + (-1 - var_30h);\n                }\n                else {\n                    var_2ch = arg_8h[0x26ec] + -var_30h;\n                }\n                var_8h = arg_8h[0x26ec];\n                if ((var_30h == var_8h) && (ppuVar3 = arg_8h + 0x6ec,  ppuVar7 != ppuVar3)) {\n                    var_30h = ppuVar3;\n                    if (ppuVar3 < ppuVar7) {\n                        var_2ch = ppuVar7 + (-1 - ppuVar3);\n                    }\n                    else {\n                        var_2ch = var_8h - ppuVar3;\n                    }\n                }\n                if (var_2ch != NULL) goto code_r0x004070a5;\n                goto code_r0x00407138;\n            }\ncode_r0x004070a5:\n            *var_30h = *(arg_8h + 6);\n            var_2ch = var_2ch + -1;\n            var_30h = var_30h + 1;\n            goto code_r0x004068c8;\n        case 0x4070b7:\n            if (0x7 < puVar10) {\n                puVar10 = puVar10 + -8;\n                var_34h = var_34h + 1;\n                var_38h = var_38h + -1;\n            }\n        case 0x4070c5:\n            arg_8h[0x26ee] = var_30h;\n            fcn.00407187();\n            var_30h = arg_8h[0x26ee];\n            ppuVar7 = arg_8h[0x26ed];\n            if (var_30h < ppuVar7) {\n                var_2ch = ppuVar7 + (-1 - var_30h);\n            }\n            else {\n                var_2ch = arg_8h[0x26ec] + -var_30h;\n            }\n            if (var_30h != ppuVar7) {\ncode_r0x00407138:\n                uVar11 = 0;\n                goto code_r0x004067b8;\n            }\n            *ppuVar1 = arg_8h[0x149];\n            if (arg_8h[0x149] != 0x8) {\n                uVar11 = 1;\n                goto code_r0x004067b8;\n            }\n        }\n    }\n    goto code_r0x004067af;\ncode_r0x004067a8:\n    if (uVar14 == 3) {\ncode_r0x004067af:\n        uVar11 = 0xffffffff;\n        *ppuVar1 = 0x11;\ncode_r0x004067b8:\n        arg_8h[0x14b] = var_40h;\n        arg_8h[0x14a] = puVar10;\n        arg_8h[1] = var_34h;\ncode_r0x004067d0:\n        *arg_8h = var_38h;\n        arg_8h[0x26ee] = var_30h;\n        fcn.00407187(arg_8h);\n        return uVar11;\n    }\n    goto code_r0x0040710c;\n}\n",
        "token_count": 7384
    },
    "00401389": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00401389(int32_t param_1)\n\n{\n    int32_t *hWndChildAfter;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_retaddr;\n    \n    while ((-1 < param_1 && (hWndChildAfter = param_1 * 0x1c + *0x430870,  *hWndChildAfter != 1))) {\n        iVar1 = fcn.00401434(hWndChildAfter);\n        if (iVar1 == 0x7fffffff) {\n            return 0x7fffffff;\n        }\n        iVar1 = fcn.0040136d();\n        if (iVar1 == 0) {\n            iVar2 = 1;\n            iVar1 = param_1 + 1;\n        }\n        else {\n            iVar1 = iVar1 + -1;\n            iVar2 = iVar1 - param_1;\n        }\n        param_1 = iVar1;\n        if (unaff_retaddr != 0) {\n            *0x43002c = *0x43002c + iVar2;\n            uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*0x43002c, 30000, *0x430014, 0);\n            (*_sym.imp.USER32.dll_SendMessageA)(0x4013a8, 0x402, uVar3);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 316
    },
    "00404719": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00404719(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = *0x42a068;\n    if (*0x4308cc == 0) {\n        uVar1 = *0x42b094;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(uVar1, 0xf4, 1, 1);\n    return;\n}\n",
        "token_count": 88
    },
    "00404c6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00404c6c(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_38h;\n    uint var_34h;\n    uint var_14h;\n    int32_t lpPoint;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    var_34h = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x110a, 9, 0);\n    if (arg_ch != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n        lpPoint = uVar2;\n        var_ch = uVar2 >> 0x10;\n        (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &lpPoint);\n        (*pcVar1)(arg_8h, 0x1111, 0, &lpPoint);\n        var_34h = var_4h;\n        if ((var_8h & 0x66) == 0) {\n            return 0xffffffff;\n        }\n    }\n    var_38h = 4;\n    (*pcVar1)(arg_8h, 0x110c, 0, &var_38h);\n    return var_14h;\n}\n",
        "token_count": 322
    },
    "004058ff": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004058ff(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_2 & 0x1fffff;\n    if ((*0x4308e0 == 0) || (param_2 >> 0x15 == 0)) {\n        if (*0x4308e8 != 0) {\n            uVar1 = uVar1 ^ 0x180000;\n        }\n        *0x40a8e4 = *0x430848;\n        *0x40a8e8 = *0x430840;\n        *0x40a8ec = param_1;\n        *0x40a8f0 = 0x430040;\n        *0x40a8f4 = uVar1;\n        (*_sym.imp.USER32.dll_MessageBoxIndirectA)(0x40a8e0);\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "00405c69": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nchar * fcn.00405c69(char *param_1)\n\n{\n    code *pcVar1;\n    char *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_CharNextA;\n    pcVar2 = (*_sym.imp.USER32.dll_CharNextA)(param_1);\n    uVar3 = (*pcVar1)(pcVar2);\n    if (((*param_1 == '\\0') || (*pcVar2 != ':')) || (pcVar2[1] != '\\\\')) {\n        if ((*param_1 == '\\\\') && (param_1[1] == '\\\\')) {\n            iVar4 = 2;\n            do {\n                iVar4 = iVar4 + -1;\n                pcVar2 = fcn.00405bfb();\n                if (*pcVar2 == '\\0') goto code_r0x00405cb6;\n                pcVar2 = pcVar2 + 1;\n            } while (iVar4 != 0);\n        }\n        else {\ncode_r0x00405cb6:\n            pcVar2 = NULL;\n        }\n    }\n    else {\n        pcVar2 = (*pcVar1)(uVar3);\n    }\n    return pcVar2;\n}\n",
        "token_count": 272
    },
    "00406162": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00406162(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint *arg_8h_00;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    uint *ppidl;\n    int32_t var_4h;\n    \n    puVar7 = arg_8h;\n    if (arg_ch < 0) {\n        arg_ch = *(*0x43001c - (arg_ch * 4 + 4));\n    }\n    puVar5 = *0x430878 + arg_ch;\n    arg_8h_00 = 0x42efe0;\n    if ((0x42efdf < arg_8h) && (arg_8h + -0x10bbf8 < 0x800)) {\n        arg_8h = NULL;\n        arg_8h_00 = puVar7;\n    }\n    do {\n        while( true ) {\n            uVar1 = *puVar5;\n            if ((uVar1 == 0) || (0x3ff < arg_8h_00 + -0x10bbf8)) {\n                *arg_8h_00 = 0;\n                if (arg_8h != NULL) {\n                    fcn.00406140(arg_8h, 0x42efe0);\n                }\n                return;\n            }\n            puVar6 = puVar5 + 1;\n            if (uVar1 < 4) break;\n            if (uVar1 == 4) {\n                *arg_8h_00 = *puVar6;\n                arg_8h_00 = arg_8h_00 + 1;\n                puVar5 = puVar5 + 2;\n            }\n            else {\n                *arg_8h_00 = uVar1;\n                arg_8h_00 = arg_8h_00 + 1;\n                puVar5 = puVar6;\n            }\n        }\n        uVar2 = puVar5[2];\n        var_ch = uVar2;\n        uVar3 = *puVar6;\n        puVar7 = uVar3;\n        uVar8 = (var_ch & 0x7f) << 7 | puVar7 & 0x7f;\n        var_18h = CONCAT22(uVar3 >> 7, uVar3) | 0x8000;\n        var_10h = CONCAT22(uVar2 >> 7, uVar2) | 0x8000;\n        var_14h = puVar7;\n        if (uVar1 == 2) {\n            iVar9 = 2;\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n            if ((((iVar4 < 0) && (iVar4 != 0x5a04)) && (var_ch != 0x23)) && (var_ch != 0x2e)) {\n                var_4h = 0;\n            }\n            else {\n                var_4h = 1;\n            }\n            if (*0x4308c4 != 0) {\n                var_10h = 0x4;\n                iVar9 = 4;\n            }\n            if (uVar3 < '\\0') {\n                var_18h = (puVar7 & 0x3f) + *0x430878;\n                var_10h = puVar7 & 0x40;\n                var_14h = arg_8h_00;\n                fcn.00406027(0x80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\", var_18h, arg_8h_00, var_10h);\n                if (*arg_8h_00 == 0) {\n                    fcn.00406162(arg_8h_00, var_ch);\n                    goto code_r0x00406307;\n                }\ncode_r0x0040630c:\n                if (var_ch == 0x1a) {\n                    sub.KERNEL32.dll_lstrcatA();\n                }\n            }\n            else {\n                if (puVar7 == 0x25) {\n                    var_10h = 0x400;\n                    var_18h = 0x406294;\n                    var_14h = arg_8h_00;\n                    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n                }\n                else {\n                    if (puVar7 == 0x24) {\n                        var_10h = 0x400;\n                        var_18h = 0x4062a7;\n                        var_14h = arg_8h_00;\n                        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)();\n                        iVar9 = 0;\n                    }\n                    while (iVar9 != 0) {\n                        iVar9 = iVar9 + -1;\n                        if ((*0x430844 != NULL) && (var_4h != 0)) {\n                            var_10h = arg_8h_00;\n                            var_14h = NULL;\n                            var_18h = NULL;\n                            iVar4 = (**0x430844)(*0x430848, (&fcn.00406162::var_18h)[iVar9]);\n                            if (iVar4 == 0) break;\n                        }\n                        var_10h = &fcn.00406162::ppidl;\n                        var_14h = (&fcn.00406162::var_18h)[iVar9];\n                        var_18h = *0x430848;\n                        iVar4 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderLocation)();\n                        if (iVar4 == 0) {\n                            var_14h = ppidl;\n                            var_18h = 0x4062f1;\n                            var_10h = arg_8h_00;\n                            iVar4 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListA)();\n                            var_18h = ppidl;\n                            (*_sym.imp.ole32.dll_CoTaskMemFree)();\n                            if (iVar4 != 0) break;\n                        }\n                        *arg_8h_00 = 0;\n                    }\n                }\ncode_r0x00406307:\n                if (*arg_8h_00 != 0) goto code_r0x0040630c;\n            }\ncode_r0x0040631d:\n            fcn.004063ab(arg_8h_00);\n        }\n        else if (uVar1 == 3) {\n            if (uVar8 == 0x1d) {\n                fcn.0040609e(arg_8h_00, *0x430848);\n            }\n            else {\n                fcn.00406140(arg_8h_00, uVar8 * 0x400 + 0x431000);\n            }\n            if (uVar8 - 0x15 < 7) goto code_r0x0040631d;\n        }\n        else if (uVar1 == 1) {\n            fcn.00406162(arg_8h_00, -1 - uVar8);\n        }\n        iVar4 = sub.KERNEL32.dll_lstrlenA();\n        arg_8h_00 = arg_8h_00 + iVar4;\n        puVar5 = puVar5 + 3;\n    } while( true );\n}\n",
        "token_count": 1705
    },
    "004063ab": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004063ab(uint8_t *param_1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    \n    if ((((*param_1 == 0x5c) && (param_1[1] == 0x5c)) && (param_1[2] == 0x3f)) && (param_1[3] == 0x5c)) {\n        param_1 = param_1 + 4;\n    }\n    if ((*param_1 != 0) && (in_EAX = fcn.00405c3d(param_1),  in_EAX != 0)) {\n        param_1 = param_1 + 2;\n    }\n    pcVar2 = _sym.imp.USER32.dll_CharNextA;\n    uVar1 = *param_1;\n    uVar3 = in_EAX & 0xffffff00 | uVar1;\n    puVar7 = param_1;\n    puVar6 = param_1;\n    while (uVar1 != 0) {\n        if ((0x1f < uVar3) && (pcVar4 = fcn.00405bfb(\"*?|<>/\\\":\", uVar3),  *pcVar4 == '\\0')) {\n            iVar5 = (*pcVar2)(puVar7);\n            fcn.00405d8c(puVar6, puVar7, iVar5 - puVar7);\n            puVar6 = (*pcVar2)(puVar6);\n        }\n        puVar7 = (*pcVar2)(puVar7);\n        uVar1 = *puVar7;\n        uVar3 = puVar7 & 0xffffff00 | uVar1;\n    }\n    *puVar6 = 0;\n    while( true ) {\n        puVar6 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, puVar6);\n        if ((*puVar6 != 0x20) && (*puVar6 != 0x5c)) break;\n        *puVar6 = 0;\n        if (puVar6 <= param_1) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 519
    },
    "00406545": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406545(int32_t lpString1, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    int32_t ARG_0;\n    \n    ARG_0 = lpString1;\n    arg_ch = arg_ch / 3;\n    uVar2 = 0;\n    bVar1 = arg_ch < arg_14h;\n    if (bVar1) {\n        arg_14h = arg_ch - 1;\n    }\n    if (arg_14h != 0) {\n        do {\n            (*_sym.imp.USER32.dll_wsprintfA)(ARG_0, \"%02x%c\", *(uVar2 + arg_10h), -(uVar2 != arg_14h - 1) & 0x20);\n            ARG_0 = ARG_0 + 3;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_14h);\n    }\n    if (bVar1) {\n        sub.KERNEL32.dll_lstrcatA(lpString1, 0x40ac04);\n    }\n    return;\n}\n",
        "token_count": 271
    },
    "004071ef": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.004071ef(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t *arg_1ch, \n            uint32_t *arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    int32_t iVar1;\n    unkbyte3 Var2;\n    uint uVar3;\n    ushort uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint8_t uVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    uint32_t *puVar15;\n    uint var_ech;\n    uint var_b0h;\n    uint var_ach;\n    int32_t aiStack172 [14];\n    uint32_t var_70h;\n    uint var_6ch;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint32_t *var_20h;\n    uint32_t *var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar15 = arg_20h;\n    puVar13 = &var_70h;\n    for (iVar5 = 0x10; piVar6 = arg_8h,  uVar8 = arg_ch,  iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar13 = 0;\n        puVar13 = puVar13 + 1;\n    }\n    do {\n        (&var_70h)[*piVar6] = (&var_70h)[*piVar6] + 1;\n        uVar8 = uVar8 - 1;\n        piVar6 = piVar6 + 1;\n    } while (uVar8 != 0);\n    if (var_70h == arg_ch) {\n        *arg_1ch = 0;\n        *arg_20h = 0;\n        uVar3 = 0;\n    }\n    else {\n        uVar8 = 1;\n        arg_20h = *arg_20h;\n        uVar9 = 0xf;\n        do {\n            iVar5 = 0;\n            if ((&var_70h)[uVar8] != 0) break;\n            uVar8 = uVar8 + 1;\n        } while (uVar8 < 0x10);\n        var_4h = uVar8;\n        if (arg_20h < uVar8) {\n            arg_20h = uVar8;\n        }\n        do {\n            if ((&var_70h)[uVar9] != 0) break;\n            uVar9 = uVar9 - 1;\n        } while (uVar9 != 0);\n        var_18h = uVar9;\n        if (uVar9 < arg_20h) {\n            arg_20h = uVar9;\n        }\n        *puVar15 = arg_20h;\n        var_30h = 1 << (uVar8 & 0x1f);\n        for (; uVar8 < uVar9; uVar8 = uVar8 + 1) {\n            if (var_30h - (&var_70h)[uVar8] < 0) goto code_r0x00407520;\n            var_30h = (var_30h - (&var_70h)[uVar8]) * 2;\n        }\n        iVar7 = (&var_70h)[uVar9];\n        var_30h = var_30h - iVar7;\n        if (-1 < var_30h) {\n            var_ach = 0;\n            (&var_70h)[uVar9] = iVar7 + var_30h;\n            iVar7 = 0;\n            iVar10 = uVar9 - 1;\n            if (iVar10 != 0) {\n                iVar14 = 0;\n                do {\n                    iVar7 = iVar7 + *(&var_6ch + iVar14);\n                    iVar10 = iVar10 + -1;\n                    *(aiStack172 + iVar14) = iVar7;\n                    iVar14 = iVar14 + 4;\n                } while (iVar10 != 0);\n            }\n            uVar8 = 0;\n            piVar6 = arg_8h;\n            do {\n                iVar7 = *piVar6;\n                piVar6 = piVar6 + 1;\n                if (iVar7 != 0) {\n                    iVar10 = (&var_b0h)[iVar7];\n                    *(iVar10 * 4 + 0x42deb0) = uVar8;\n                    (&var_b0h)[iVar7] = iVar10 + 1;\n                }\n                uVar8 = uVar8 + 1;\n            } while (uVar8 < arg_ch);\n            iVar7 = (&var_b0h)[uVar9];\n            var_ch = -1;\n            var_24h = 0;\n            iVar10 = -arg_20h;\n            var_8h = 0;\n            var_b0h = 0;\n            var_20h = 0x42deb0;\n            var_ech = 0;\n            if (var_4h <= var_18h) {\n                var_28h = var_4h - 1;\n                var_1ch = &var_70h + var_4h;\n                do {\n                    var_10h = *var_1ch;\n                    while (var_10h != 0) {\n                        arg_8h._2_2_ = arg_8h >> 0x10;\n                        var_2ch = var_10h - 1;\n                        var_14h = arg_20h + iVar10;\n                        if (arg_20h + iVar10 < var_4h) {\n                            do {\n                                iVar14 = var_ch + 1;\n                                var_ch = iVar14;\n                                uVar8 = var_18h - var_14h;\n                                if (arg_20h < var_18h - var_14h) {\n                                    uVar8 = arg_20h;\n                                }\n                                uVar9 = var_4h - var_14h;\n                                uVar11 = 1 << (uVar9 & 0x1f);\n                                if ((var_10h < uVar11) &&\n                                   (iVar5 = uVar11 + (-1 - var_2ch),  puVar15 = var_1ch,  uVar9 < uVar8)) {\n                                    while (uVar9 = uVar9 + 1,  uVar9 < uVar8) {\n                                        uVar11 = puVar15[1];\n                                        if (iVar5 * 2 <= uVar11) break;\n                                        iVar5 = iVar5 * 2 - uVar11;\n                                        puVar15 = puVar15 + 1;\n                                    }\n                                }\n                                var_24h = 1 << (uVar9 & 0x1f);\n                                uVar8 = *arg_28h + var_24h;\n                                if (0x5a0 < uVar8) goto code_r0x00407520;\n                                iVar5 = arg_24h + *arg_28h * 4;\n                                *arg_28h = uVar8;\n                                (&var_ech)[iVar14] = iVar5;\n                                uVar8 = var_8h;\n                                if (iVar14 == 0) {\n                                    *arg_1ch = iVar5;\n                                }\n                                else {\n                                    iVar1 = *(&stack0xffffff0c + iVar14 * 4);\n                                    (&var_b0h)[iVar14] = var_8h;\n                                    arg_8h._0_2_ = uVar9 & 0xff | (arg_20h & 0xff) << 8;\n                                    uVar8 = uVar8 >> (iVar10 & 0x1f);\n                                    arg_8h = CONCAT22((iVar5 - iVar1 >> 2) - uVar8, arg_8h);\n                                    *(iVar1 + uVar8 * 4) = arg_8h;\n                                }\n                                iVar10 = var_14h;\n                                var_14h = var_14h + arg_20h;\n                            } while (var_14h < var_4h);\n                        }\n                        uVar12 = iVar10;\n                        Var2 = CONCAT21(arg_8h._2_2_, var_4h - uVar12);\n                        if (var_20h < iVar7 * 4 + 0x42deb0U) {\n                            uVar8 = *var_20h;\n                            if (uVar8 < arg_10h) {\n                                arg_8h._0_2_ = CONCAT31(Var2, (uVar8 < 0x100) + -1) & 0xff60;\n                                uVar4 = *var_20h;\n                                var_20h = var_20h + 1;\n                            }\n                            else {\n                                iVar14 = (uVar8 - arg_10h) * 2;\n                                var_20h = var_20h + 1;\n                                arg_8h = CONCAT31(Var2, *(iVar14 + arg_18h) + 'P');\n                                uVar4 = *(iVar14 + arg_14h);\n                            }\n                            arg_8h = CONCAT22(uVar4, arg_8h);\n                        }\n                        else {\n                            arg_8h = CONCAT31(Var2, 0xc0);\n                        }\n                        for (uVar8 = var_8h >> (uVar12 & 0x1f); uVar8 < var_24h;\n                            uVar8 = uVar8 + (1 << (var_4h - uVar12 & 0x1f))) {\n                            *(iVar5 + uVar8 * 4) = arg_8h;\n                        }\n                        uVar8 = 1 << (var_28h & 0x1f);\n                        while ((var_8h & uVar8) != 0) {\n                            var_8h = var_8h ^ uVar8;\n                            uVar8 = uVar8 >> 1;\n                        }\n                        var_8h = var_8h ^ uVar8;\n                        var_10h = 1;\n                        var_10h = var_2ch;\n                        if (((1 << (uVar12 & 0x1f)) - 1U & var_8h) != (&var_b0h)[var_ch]) {\n                            do {\n                                iVar10 = iVar10 - arg_20h;\n                                var_ch = var_ch + -1;\n                            } while (((1 << (iVar10 & 0x1f)) - 1U & var_8h) != (&var_b0h)[var_ch]);\n                        }\n                    }\n                    var_4h = var_4h + 1;\n                    var_1ch = var_1ch + 1;\n                    var_28h = var_28h + 1;\n                } while (var_4h <= var_18h);\n            }\n            if (var_30h == 0) {\n                return 0;\n            }\n            if (var_18h == 1) {\n                return 0;\n            }\n        }\ncode_r0x00407520:\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 2592
    },
    "00404b24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404b24(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (arg_ch == 1) {\n        fcn.004058e3(0x3fb, arg_14h);\n        (*pcVar1)(arg_8h, 0x466, 1, arg_14h);\n    }\n    if (arg_ch == 2) {\n        iVar2 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListA)(arg_10h, arg_14h);\n        if ((iVar2 == 0) || (iVar2 = fcn.0040140b(7),  iVar2 != 0)) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 1;\n        }\n        (*pcVar1)(arg_8h, 0x465, 0, uVar3);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 258
    },
    "00406027": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406027(uint hKey, uint lpcbData, uint lpValueName, uchar *lpType, int32_t samDesired)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = lpType;\n    *lpType = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(hKey, lpcbData, 0, -(samDesired != 0) & 0x100 | 0x20019, &samDesired)\n    ;\n    if (iVar2 == 0) {\n        lpcbData = 0x400;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(samDesired, lpValueName, 0, &lpType, puVar1, &lpcbData);\n        if ((iVar2 != 0) || ((lpType != 0x1 && (lpType != 0x2)))) {\n            *puVar1 = 0;\n        }\n        puVar1[0x3ff] = 0;\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(samDesired);\n    }\n    return;\n}\n",
        "token_count": 265
    },
    "00404784": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_48h\n\nvoid __cdecl fcn.00404784(uint *arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    char extraout_AH;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    uint *arg_10h_00;\n    int32_t iVar5;\n    uchar *puVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint *var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_3ch;\n    uint var_38h;\n    code *var_34h;\n    uint *var_30h;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    code *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar4 = _sym.imp.USER32.dll_GetDlgItem;\n    var_20h = *0x42a074;\n    var_4h = *(*0x42a074 + 0x38);\n    puVar7 = *(*0x42a074 + 0x3c) * 0x400 + 0x431000;\n    if (arg_ch == 0x40b) {\n        fcn.004058e3(0x3fb, puVar7);\n        fcn.004063ab(puVar7);\n        fcn.00403aa0();\n        iVar2 = (*pcVar4)(arg_8h, 0x3f0);\n        if (iVar2 == 0) goto code_r0x00404b0f;\n        *0x42efc0 = (*_sym.imp.USER32.dll_IsDlgButtonChecked)(arg_8h, 0x3f0);\n    }\n    if (arg_ch == 0x110) {\n        var_8h = (*pcVar4)(arg_8h, 0x3fb);\n        (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n        if (extraout_AH < '\\0') {\n            uVar3 = (*pcVar4)(arg_8h, 0x3f0);\n            fcn.00404346(arg_8h, 8, 0xffffffe0);\n            (*_sym.imp.USER32.dll_ShowWindow)(uVar3, 8);\n        }\n        iVar2 = fcn.00405c3d(puVar7);\n        if ((iVar2 != 0) && (iVar2 = fcn.00405c69(puVar7),  iVar2 == 0)) {\n            fcn.00405bd0(puVar7);\n        }\n        *0x430018 = arg_8h;\n        (*_sym.imp.USER32.dll_SetWindowTextA)(var_8h, puVar7);\n        var_38h = *(arg_14h + 0x34);\n        var_3ch = 0x1;\n        var_40h = arg_8h;\n        var_44h = 0x40486d;\n        fcn.00404346();\n        var_44h = *(arg_14h + 0x30);\n        var_48h = 0x14;\n        fcn.00404346(arg_8h);\n        fcn.0040437b(var_8h);\n        pcVar4 = fcn.00406618(7);\n        if (pcVar4 == NULL) goto code_r0x00404b0f;\n        (*pcVar4)(var_8h, 1);\n    }\n    iVar2 = var_4h;\n    if (arg_ch == 0x111) {\n        if ((arg_10h & 0xffff) == 0x3fb) {\n            if (arg_10h >> 0x10 != 0x300) goto code_r0x00404b0f;\n            arg_ch = 0x40f;\n        }\n        if ((arg_10h & 0xffff) == 0x3e9) {\n            puVar8 = &fcn.00404784::var_44h;\n            for (iVar5 = 7; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n            var_48h = arg_8h;\n            var_40h = 0x42b098;\n            var_34h = fcn.00404b24;\n            var_30h = puVar7;\n            var_3ch = fcn.00406162(0x42ac80, iVar2);\n            var_38h = 0x41;\n            iVar2 = (*_sym.imp.SHELL32.dll_SHBrowseForFolderA)(&fcn.00404784::var_48h);\n            if (iVar2 == 0) {\n                arg_ch = 0x40f;\n            }\n            else {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar2);\n                var_48h = puVar7;\n                fcn.00405bd0();\n                if ((*(*0x430850 + 0x11c) != 0) && (puVar7 == 0x436400)) {\n                    uVar3 = 0;\n                    fcn.00406162(0, *(*0x430850 + 0x11c));\n                    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(0x42efe0, 0x42b098);\n                    if (iVar2 != 0) {\n                        var_48h = puVar7;\n                        sub.KERNEL32.dll_lstrcatA(uVar3, 0x42efe0);\n                    }\n                }\n                *0x42b088 = *0x42b088 + 1;\n                sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x3fb, puVar7);\n            }\n        }\n    }\n    if ((arg_ch == 0x40f) || (arg_ch == 0x405)) {\n        var_4h = 0;\n        var_8h = 0;\n        fcn.004058e3(0x3fb, puVar7);\n        iVar2 = fcn.00405cbe(puVar7);\n        if (iVar2 == 0) {\n            var_4h = 1;\n        }\n        fcn.00406140(0x42a878, puVar7);\n        puVar6 = NULL;\n        var_38h = 0;\n        var_ch = fcn.00406618();\n        if (var_ch != NULL) {\n            do {\n                var_3ch = &fcn.00404784::var_14h;\n                var_40h = &fcn.00404784::var_1ch;\n                var_44h = &fcn.00404784::var_28h;\n                var_48h = 0x42a878;\n                iVar2 = (*var_ch)();\n                if (iVar2 != 0) {\n                    var_ch = 0xa;\n                    uVar1 = var_24h << 0x16;\n                    var_24h = var_24h >> 10;\n                    var_8h = 1;\n                    puVar7 = var_28h >> 10 | uVar1;\n                    goto code_r0x00404a7b;\n                }\n                if (puVar6 != NULL) {\n                    *puVar6 = 0;\n                }\n                var_38h = 0x42a878;\n                var_3ch = 0x4049ee;\n                puVar6 = fcn.00405c17();\n                *puVar6 = 0;\n                puVar6 = puVar6 + -1;\n                *puVar6 = 0x5c;\n            } while (puVar6 != 0x42a878);\n        }\n        var_40h = 0x42a878;\n        var_44h = 0x404a04;\n        var_3ch = puVar7;\n        fcn.00406140();\n        var_44h = 0x42a878;\n        var_48h = 0x404a0a;\n        puVar6 = fcn.00405c69();\n        if (puVar6 != NULL) {\n            *puVar6 = 0;\n        }\n        var_48h = &fcn.00404784::var_24h;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)\n                          (0x42a878, &fcn.00404784::var_10h, &fcn.00404784::var_18h, &fcn.00404784::var_ch);\n        puVar7 = arg_8h;\n        if (iVar2 != 0) {\n            var_40h = var_10h * var_18h;\n            var_38h = 0x400;\n            var_3ch = var_ch;\n            var_44h = 0x404a43;\n            puVar7 = (*_sym.imp.KERNEL32.dll_MulDiv)();\n            var_8h = 1;\n        }\ncode_r0x00404a7b:\n        puVar8 = 0x5;\n        var_3ch = 0x404a82;\n        arg_10h_00 = fcn.00404c3f();\n        if ((var_8h != 0) && (puVar7 < arg_10h_00)) {\n            var_4h = 2;\n        }\n        if (*(*0x43001c + 0x10) != 0) {\n            var_40h = 0xfffffffb;\n            var_44h = 0x3ff;\n            var_48h = 0x404aaa;\n            var_3ch = arg_10h_00;\n            fcn.00404b8a(0x3ff, 0xfffffffb, arg_10h_00);\n            if (var_8h == 0) {\n                var_48h = 0x42a060;\n                sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x400);\n                puVar8 = arg_8h;\n            }\n            else {\n                puVar8 = 0x400;\n                var_48h = puVar7;\n                fcn.00404b8a(0x400, 0xfffffffc, puVar7);\n            }\n        }\n        *0x4308e4 = var_4h;\n        if (var_4h == 0) {\n            puVar8 = 0x7;\n            var_4h = fcn.0040140b();\n        }\n        if ((*(var_20h + 0x14) & 0x400) != 0) {\n            var_4h = 0;\n        }\n        fcn.00404368(var_4h == 0, puVar8);\n        if ((var_4h == 0) && (*0x42b088 == 0)) {\n            fcn.00404719();\n        }\n        *0x42b088 = 0;\n    }\ncode_r0x00404b0f:\n    fcn.004043ad(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 2612
    },
    "004060b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004060b7(uint8_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    char cVar6;\n    int32_t iVar7;\n    int32_t var_4h;\n    \n    iVar7 = 0;\n    var_4h = 1;\n    cVar2 = '\\n';\n    cVar6 = '9';\n    if (*arg_8h == 0x2d) {\n        arg_8h = arg_8h + 1;\n        var_4h = -1;\n    }\n    puVar3 = arg_8h;\n    if (*arg_8h == 0x30) {\n        puVar3 = arg_8h + 1;\n        uVar1 = *puVar3;\n        if (('/' < uVar1) && (uVar1 < '8')) {\n            cVar2 = '\\b';\n            cVar6 = '7';\n        }\n        if ((uVar1 & 0xdf) == 0x58) {\n            cVar2 = '\\x10';\n            puVar3 = arg_8h + 2;\n        }\n    }\n    do {\n        uVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if ((uVar4 < 0x30) || (cVar6 < uVar4)) {\n            if ((cVar2 != '\\x10') || (((uVar4 & 0xffffffdf) < 0x41 || (0x46 < (uVar4 & 0xffffffdf))))) {\n                return var_4h * iVar7;\n            }\n            iVar5 = (uVar4 & 7) + 9;\n        }\n        else {\n            iVar5 = uVar4 - 0x30;\n        }\n        iVar7 = cVar2 * iVar7 + iVar5;\n    } while( true );\n}\n",
        "token_count": 447
    },
    "00402eb9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key",
            "delete registry key"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402eb9(uint hKey, uint lpSubKey, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_10ch;\n    uint phkResult;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(hKey, lpSubKey, 0, *0x4308f0 | 8, &phkResult);\n    pcVar2 = _sym.imp.ADVAPI32.dll_RegEnumKeyA;\n    if (iVar1 == 0) {\n        do {\n            iVar1 = (*pcVar2)(phkResult, 0, &var_10ch, 0x105);\n            if (iVar1 != 0) break;\n            if (arg_10h != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n                goto code_r0x00402f4a;\n            }\n            iVar1 = fcn.00402eb9(phkResult, &var_10ch, 0);\n        } while (iVar1 == 0);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n        pcVar2 = fcn.00406618(2);\n        if (pcVar2 == NULL) {\n            if ((*0x4308f0 != 0) || (iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(hKey, lpSubKey),  iVar1 != 0)) {\ncode_r0x00402f4a:\n                iVar1 = 1;\n            }\n        }\n        else {\n            iVar1 = (*pcVar2)(hKey, lpSubKey, *0x4308f0, 0);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 401
    },
    "00402fbe": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402fbe(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_40h;\n    \n    if (arg_ch == 0x110) {\n        (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0xfa, 0);\n        arg_ch = 0x113;\n    }\n    if (arg_ch == 0x113) {\n        iVar2 = *0x415c48;\n        if (*0x429c58 <= *0x415c48) {\n            iVar2 = *0x429c58;\n        }\n        uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(iVar2, 100, *0x429c58);\n        (*_sym.imp.USER32.dll_wsprintfA)(&var_40h, \"verifying installer: %d%%\", uVar1);\n        (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, &var_40h);\n        sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x406, &var_40h);\n    }\n    return 0;\n}\n",
        "token_count": 263
    },
    "00404b8a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404b8a(uint nIDDlgItem, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint arg_ch_00;\n    int8_t iVar6;\n    uint uVar7;\n    char *pcVar8;\n    uint *arg_8h;\n    uint var_40h;\n    uint var_20h;\n    \n    iVar6 = 0x14;\n    arg_ch_00 = 0xffffffdc;\n    if (arg_10h < 0x100000) {\n        iVar6 = 10;\n        arg_ch_00 = 0xffffffdd;\n    }\n    if (arg_10h < 0x400) {\n        iVar6 = 0;\n        arg_ch_00 = 0xffffffde;\n    }\n    if (arg_10h < 0xffff3333) {\n        arg_10h = arg_10h + (1 << iVar6) / 0x14;\n    }\n    uVar1 = fcn.00406162(&var_20h, 0xffffffdf);\n    arg_8h = &var_40h;\n    uVar2 = fcn.00406162(arg_8h, arg_ch_00);\n    uVar5 = ((arg_10h & 0xffffff) * 10 >> iVar6) % 10;\n    arg_10h = arg_10h >> iVar6;\n    pcVar8 = \"%u.%u%s%s\";\n    uVar7 = 0x42b098;\n    iVar3 = fcn.00406162(0x42b098, arg_ch);\n    iVar4 = sub.KERNEL32.dll_lstrlenA(0x42b098, uVar7, arg_ch, pcVar8, arg_10h, uVar5, uVar2, arg_8h, arg_ch_00, uVar1);\n    (*_sym.imp.USER32.dll_wsprintfA)(iVar3 + iVar4);\n    sub.USER32.dll_SetDlgItemTextA(*0x430018, nIDDlgItem, 0x42b098);\n    return;\n}\n",
        "token_count": 489
    },
    "00407187": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00407187(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = *(param_1 + 0x9bb4);\n    while( true ) {\n        uVar2 = *(param_1 + 0x9bb8);\n        if (uVar2 < uVar4) {\n            uVar2 = *(param_1 + 0x9bb0);\n        }\n        uVar1 = *(param_1 + 0xc);\n        uVar3 = uVar2 - uVar4;\n        if (uVar1 <= uVar2 - uVar4) {\n            uVar3 = uVar1;\n        }\n        *(param_1 + 0xc) = uVar1 - uVar3;\n        fcn.00405d8c();\n        *(param_1 + 8) = *(param_1 + 8) + uVar3;\n        if (uVar4 + uVar3 != *(param_1 + 0x9bb0)) break;\n        uVar4 = param_1 + 0x1bb0;\n        if (*(param_1 + 0x9bb8) == *(param_1 + 0x9bb0)) {\n            *(param_1 + 0x9bb8) = uVar4;\n        }\n    }\n    *(param_1 + 0x9bb4) = uVar4 + uVar3;\n    return;\n}\n",
        "token_count": 343
    },
    "00401299": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401299(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if ((param_1 < 0x20) && (*0x43086c != 0)) {\n        puVar2 = *0x430868 + 8;\n        do {\n            uVar1 = *puVar2;\n            if ((uVar1 & 6) == 0) {\n                if ((puVar2[-1] & 1 << (param_1 & 0x1f)) == 0) {\n                    uVar1 = uVar1 & 0xfffffffe;\n                }\n                else {\n                    uVar1 = uVar1 | 1;\n                }\n                *puVar2 = uVar1;\n            }\n            uVar3 = uVar3 + 1;\n            puVar2 = puVar2 + 0x106;\n        } while (uVar3 < *0x43086c);\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "00402e79": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00402e79(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = param_1;\n    if (param_1 < 0) {\n        uVar1 = -param_1;\n    }\n    uVar2 = fcn.00406162((uVar1 >> 4) * 0x400 + 0x40ac40, *(*0x40c040 + (uVar1 & 0xf) * 4));\n    if (param_1 < 0) {\n        fcn.004063ab(uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 147
    },
    "00402f6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00402f6e(int32_t param_1)\n\n{\n    if (param_1 == 0) {\n        param_1 = *0x4308c4 + -0x7fffffff;\n    }\n    return param_1;\n}\n",
        "token_count": 59
    },
    "00403da6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403da6(void)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    uint16_t *puVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    \n    uVar4 = 0xffff;\n    uVar1 = fcn.004060b7(0x437000);\n    do {\n        if (*0x430884 != 0) {\n            puVar3 = *(*0x430850 + 100) * *0x430884 + *0x430880;\n            iVar5 = *0x430884;\n            do {\n                puVar3 = puVar3 - *(*0x430850 + 100);\n                iVar5 = iVar5 + -1;\n                if (((*puVar3 ^ uVar1) & uVar4) == 0) {\n                    *0x430020 = *(puVar3 + 1);\n                    *0x4308e8 = *(puVar3 + 3);\n                    *0x43001c = puVar3 + 5;\n                    if (*0x43001c != NULL) {\n                        fcn.0040609e(0x437000, *puVar3);\n                        uVar2 = fcn.00406162(0x430040, 0xfffffffe);\n                        (*_sym.imp.USER32.dll_SetWindowTextA)(*0x42ac78, uVar2);\n                        piVar6 = *0x430868;\n                        for (iVar5 = *0x43086c; iVar5 != 0; iVar5 = iVar5 + -1) {\n                            if (*piVar6 != 0) {\n                                fcn.00406162(piVar6 + 6, *piVar6);\n                            }\n                            piVar6 = piVar6 + 0x106;\n                        }\n                        return;\n                    }\n                    break;\n                }\n            } while (iVar5 != 0);\n        }\n        if (uVar4 == 0xffff) {\n            uVar4 = 0x3ff;\n        }\n        else {\n            uVar4 = 0;\n        }\n    } while( true );\n}\n",
        "token_count": 469
    },
    "00404346": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404346(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    int32_t unaff_retaddr;\n    \n    uVar1 = fcn.00406162(0, param_3);\n    sub.USER32.dll_SetDlgItemTextA(param_3, unaff_retaddr + 1000, uVar1);\n    return;\n}\n",
        "token_count": 88
    },
    "0040445a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040445a(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_ch, *0x42a06c + arg_8h, arg_10h);\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n    *arg_14h = iVar1;\n    *0x42a06c = *0x42a06c + iVar1;\n    return 0;\n}\n",
        "token_count": 138
    },
    "0040473d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040473d(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_ch == 0x110) {\n        fcn.00404346(arg_8h, 0x1d, *(arg_14h + 0x30));\n        sub.USER32.dll_SetDlgItemTextA(arg_8h, 1000, *(arg_14h + 0x3c) * 0x400 + 0x431000);\n    }\n    fcn.004043ad(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 147
    },
    "00405bd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00405bd0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    iVar1 = sub.KERNEL32.dll_lstrlenA(param_1);\n    pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, iVar1 + param_1);\n    if (*pcVar2 != '\\\\') {\n        sub.KERNEL32.dll_lstrcatA(param_1, 0x40a28c);\n    }\n    return param_1;\n}\n",
        "token_count": 118
    },
    "00405c17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.00405c17(char *param_1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    iVar1 = sub.KERNEL32.dll_lstrlenA(param_1);\n    pcVar2 = param_1 + iVar1;\n    do {\n        if (*pcVar2 == '\\\\') break;\n        pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, pcVar2);\n    } while (param_1 < pcVar2);\n    *pcVar2 = '\\0';\n    return pcVar2 + 1;\n}\n",
        "token_count": 129
    },
    "00405e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00405e00(uchar *arg_8h, uint lpPathName)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    puVar1 = arg_8h;\n    iVar4 = 100;\n    do {\n        iVar4 = iVar4 + -1;\n        arg_8h = *0x40ab38;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        arg_8h._0_3_ = CONCAT12(arg_8h._2_1_ + uVar2 % 0x1a, arg_8h._0_2_);\n        arg_8h = arg_8h & 0xff000000 | arg_8h;\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetTempFileNameA)(lpPathName, &arg_8h, 0, puVar1);\n        if (iVar3 != 0) {\n            return puVar1;\n        }\n    } while (iVar4 != 0);\n    *puVar1 = 0;\n    return NULL;\n}\n",
        "token_count": 255
    },
    "0040609e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040609e(uint param_1, uint param_2)\n\n{\n    (*_sym.imp.USER32.dll_wsprintfA)(param_1, 0x408324, param_2);\n    return;\n}\n",
        "token_count": 50
    },
    "004065c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004065c3(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    *0x42f7e0 = 0;\n    iVar1 = sub.KERNEL32.dll_lstrlenA(0x42f7e0, param_1, &stack0x00000008);\n    (*_sym.imp.USER32.dll_wvsprintfA)(iVar1 + 0x42f7e0);\n    fcn.00406444(0);\n    return;\n}\n",
        "token_count": 108
    },
    "00405dd1": {
        "rules": [
            "get file attributes",
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00405dd1(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(unaff_retaddr, param_1, 1, 0, param_2, -(uVar1 != 0xffffffff) & uVar1, 0);\n    return;\n}\n",
        "token_count": 111
    },
    "0040589e": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040589e(uint lpCommandLine)\n\n{\n    int32_t iVar1;\n    int32_t lpProcessAttributes;\n    uint hObject;\n    \n    *0x42c8a0 = 0x44;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, lpCommandLine, 0, 0, 0, 0, 0, 0, 0x42c8a0, &lpProcessAttributes);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        iVar1 = lpProcessAttributes;\n    }\n    return iVar1;\n}\n",
        "token_count": 147
    },
    "00402f83": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402f83(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.00402e79(0x22, 0, *0x4308f0 | arg_8h, &arg_8h);\n    uVar1 = fcn.00402f6e(*(*0x40c040 + 4), uVar1);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(uVar1);\n    return ~-(iVar2 != 0) & arg_8h;\n}\n",
        "token_count": 143
    },
    "004039f0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004039f0(uint param_1)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *0x42a064; puVar1 != NULL; puVar1 = *puVar1) {\n        (*puVar1[1])(param_1);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00403a0b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403a0b(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *0x42a064;\n    fcn.004039f0(0);\n    if (piVar2 != NULL) {\n        do {\n            piVar1 = *piVar2;\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(piVar2[2]);\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(piVar2);\n            piVar2 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    *0x42a064 = NULL;\n    return;\n}\n",
        "token_count": 147
    },
    "00403a40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00403a40(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *0x42a064;\n    while( true ) {\n        if (puVar1 == NULL) {\n            return 1;\n        }\n        if (puVar1[2] == param_1) break;\n        puVar1 = *puVar1;\n    }\n    return 0;\n}\n",
        "token_count": 94
    },
    "00405bfb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405bfb(char *param_1, char param_2)\n\n{\n    for (; (*param_1 != '\\0' && (*param_1 != param_2)); param_1 = (*_sym.imp.USER32.dll_CharNextA)(param_1)) {\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00405d36": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405d36(int32_t arg_8h, uint lpString2)\n\n{\n    uchar uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString2);\n    while( true ) {\n        iVar4 = (*pcVar2)(arg_8h);\n        if (iVar4 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(iVar3 + arg_8h);\n        *(iVar3 + arg_8h) = 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(arg_8h, lpString2);\n        *(iVar3 + arg_8h) = uVar1;\n        if (iVar4 == 0) break;\n        arg_8h = (*_sym.imp.USER32.dll_CharNextA)(arg_8h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 247
    },
    "00405d8c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405d8c(uchar *param_1, int32_t param_2, int32_t param_3)\n\n{\n    if (param_3 != 0) {\n        param_2 = param_2 - param_1;\n        do {\n            *param_1 = param_1[param_2];\n            param_1 = param_1 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00406651": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406651(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, arg_8h, arg_8h, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "0040352d": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\nvoid fcn.0040352d(void)\n\n{\n    int32_t iVar1;\n    \n    fcn.004063ab(0x437400);\n    iVar1 = fcn.00405c3d(0x437400);\n    if (iVar1 == 0) {\n        return;\n    }\n    fcn.00405bd0(0x437400);\n    (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(0x437400, 0);\n    fcn.00405e00(0x437000, 0x437400);\n    return;\n}\n",
        "token_count": 125
    },
    "00406618": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00406618(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = *(param_1 * 8 + 0x40a910);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar1);\n    if ((iVar2 == 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar1),  iVar2 == 0)) {\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, *(param_1 * 8 + 0x40a914));\n    return;\n}\n",
        "token_count": 148
    },
    "00405e49": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405e49(uint hFile, uint lpBuffer, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = arg_10h;\n    iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(hFile, lpBuffer, arg_10h, &arg_10h, 0);\n    if ((iVar2 == 0) || (iVar1 != arg_10h)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 143
    }
}