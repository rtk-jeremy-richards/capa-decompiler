{
    "0040ddcd": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040ddcd(char *arg_8h)\n\n{\n    return 0x33 < *arg_8h - 0x23U;\n}\n",
        "token_count": 39
    },
    "0040e064": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint8_t __cdecl fcn.0040e064(uint arg_8h, uint arg_ch)\n\n{\n    return (arg_8h | arg_ch) & 1;\n}\n",
        "token_count": 40
    },
    "0040f21f": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.0040f21f(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int32_t in_FS_OFFSET;\n    bool bVar4;\n    int32_t *piStack72;\n    uint32_t uStack60;\n    uint var_ch;\n    \n    iVar1 = *(*(*(in_FS_OFFSET + 0x18) + 0x30) + 0xc);\n    piVar2 = iVar1 + 0x14;\n    piStack72 = *(iVar1 + 0x14);\n    if (piStack72 != piVar2) {\n        do {\n            if (piStack72[4] == arg_ch && arg_ch != NULL) {\n                return piStack72 + -2;\n            }\n            if (*(piStack72 + 9) >> 1 != 0) {\n                uStack60 = 0;\n                do {\n                    iVar3 = *(piStack72[10] + uStack60 * 2);\n                    if (iVar3 - 0x41U < 0x1a) {\n                        iVar3 = iVar3 + 0x20;\n                    }\n                    bVar4 = *(arg_8h + uStack60 * 2) == iVar3;\n                    uStack60 = uStack60 + 1;\n                } while ((bVar4 && iVar3 != 0) && uStack60 < *(piStack72 + 9) >> 1);\n                if (bVar4) {\n                    return piStack72[4];\n                }\n            }\n            piStack72 = *piStack72;\n        } while (piStack72 != piVar2);\n    }\n    return NULL;\n}\n",
        "token_count": 398
    },
    "00411078": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x00411109)\n\nbool fcn.00411078(void)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iStack76;\n    uint32_t uStack64;\n    uint32_t uStack48;\n    uint16_t uStack28;\n    uint var_bp_ch;\n    \n    uStack64 = in_EAX & 0xffff0000 | uStack28;\n    iStack76 = 0;\n    uStack48 = uStack64;\n    do {\n        uVar1 = rdtsc();\n        uVar2 = rdtsc();\n        uVar3 = uVar2 - uVar1;\n        if (iStack76 == 0) {\n            uStack64 = uVar3;\n            uStack48 = uVar3;\n        }\n        if (uVar3 < uStack64) {\n            uStack64 = uVar3;\n        }\n        if (uStack48 < uVar3) {\n            uStack48 = uVar3;\n        }\n        iStack76 = iStack76 + 1;\n    } while (iStack76 != 100);\n    return uStack48 == uStack64 && (uStack64 == 0 || (uStack64 == 0x53 || uStack64 == 3));\n}\n",
        "token_count": 314
    },
    "0040ddfe": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0040ddfe(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    char acStack92 [32];\n    code *pcStack60;\n    int32_t iStack56;\n    uint uStack52;\n    uint uStack48;\n    int32_t iStack44;\n    uint32_t uStack40;\n    int32_t iStack36;\n    uchar uStack29;\n    int32_t iStack28;\n    uint16_t uStack22;\n    uint var_ch;\n    \n    uVar2 = uStack22;\n    iVar1 = iStack44;\n    iStack28 = 0x2b501bf2;\n    iStack56 = 0;\n    iStack36 = 0;\n    uStack40 = 0x5ffebfff;\n    do {\n        uStack22 = uVar2 ^ 0xffff;\n        iStack44 = 0x5712db3e;\n        iVar3 = 0x2b501bf3 - iStack28;\n        acStack92[iStack56] = *(iStack56 + 0x40dbfd) - *(iStack56 + 0x40dc35);\n        iStack56 = iStack56 + iVar3;\n    } while (iStack56 != 0xe);\n    uStack48 = fcn.00411bf4();\n    pcStack60 = fcn.0040ed64(uStack48, acStack92);\n    iStack36 = iStack36 * 2 + CARRY4(uStack40, uStack40);\n    uStack52 = 0;\n    iStack44 = iVar1 * iVar1;\n    if (0xff < pcStack60) {\n        uStack29 = 0xaf;\n        uStack52 = 0;\n        uStack40 = uStack40 * 2 ^ 0x1bec5f2;\n        uStack52 = (*pcStack60)(0, arg_ch, 0x1000, arg_8h);\n    }\n    return uStack52;\n}\n",
        "token_count": 469
    },
    "0040e200": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x0040e8ad)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0040e200(void)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t in_FS_OFFSET;\n    uint8_t uStack133;\n    uint32_t uStack132;\n    int32_t iStack124;\n    uchar uStack117;\n    uint uStack116;\n    uint uStack112;\n    int32_t *piStack104;\n    uint32_t uStack100;\n    uint32_t uStack96;\n    int32_t iStack92;\n    int32_t *piStack88;\n    int32_t iStack84;\n    int32_t iStack80;\n    uint32_t uStack76;\n    uint32_t uStack72;\n    uint uStack68;\n    uint16_t uStack64;\n    uint16_t uStack62;\n    int32_t iStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t iStack48;\n    uint32_t uStack44;\n    uint8_t uStack37;\n    uint uStack36;\n    uint32_t uStack32;\n    uint uStack28;\n    uint var_ch;\n    \n    uStack44 = 0;\n    iStack48 = 0x3e937981;\n    uStack52 = CONCAT22(uStack52._2_2_, 0x4ab5);\n    uStack56 = 0x840ae18;\n    uStack68 = 0;\n    uStack72 = 0x2b996d10;\n    uStack132 = uStack36 & 0xff000000 | uStack132;\n    uStack36 = uStack36 & 0xffffff | uStack36._3_1_ * -0x5b << 0x18;\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    uVar3 = uStack56;\n    uVar1 = *(in_FS_OFFSET + 0x18);\n    uStack44 = uVar1 | 0x549ab216;\n    uStack56 = uStack56 & 0xffff | uStack56._2_2_ * 0x2bf1 << 0x10;\n    uStack133 = uStack28 >> 0x18;\n    if (5 < *(*(uVar1 + 0x30) + 0xa4)) {\n        uStack36 = 0x5248798d;\n        uStack37 = uStack133 * '\\x02';\n        iVar4 = fcn.0041140e();\n        uStack56 = (uStack56 & 0xffff | uStack56._2_2_ << 0x10) ^ 0x8f5a0000;\n        iStack84 = 0;\n        if (*(iVar4 + *(iVar4 + 0x3c)) == 0x4550) {\n            iStack84 = iVar4 + *(iVar4 + 0x3c);\n        }\n        uStack64 = *(iStack84 + 0x48);\n        if (5 < uStack64) {\n            uStack36 = uStack132;\n            uStack32 = 0;\n            uStack37 = uStack133 + 0x81;\n            uStack44 = uVar1;\n            if (uStack64 != 6 || *(iStack84 + 0x4a) != uStack56 + -0x4ab5) {\n                do {\n                    uVar6 = 0x7db00800 - uStack52;\n                    uVar5 = -(0x7db00800 < uStack52) - iStack48;\n                    uStack100 = uVar6;\n                    uStack96 = uVar5;\n                    iVar4 = fcn.00411078();\n                } while ((uVar6 < 0x58234b29) <= uVar5);\n                uStack37 = uStack133;\n                if (iVar4 == 0) {\n                    iVar4 = (*_sym.imp.KERNEL32.dll_IsSystemResumeAutomatic)();\n                    uStack56 = uStack56 & 0xffff;\n                    if (iVar4 != 0) {\n                        uStack37 = -0x78 - uStack133;\n                        iStack124 = iStack60 + -0x840a6bd;\n                        uStack44 = uVar1 + 0x770d3646;\n                        (*_sym.imp.KERNEL32.dll_GetCalendarInfoEx)\n                                  (0x40dc46, 0xdb4, 0x40dc46, iStack60 + -0x840a72f, 0x40dc46, 0x7a7, &iStack124);\n                    }\n                }\n            }\n        }\n    }\n    iStack80 = *(in_FS_OFFSET + (0x840ae30 - iStack60));\n    uStack32 = 0;\n    uStack36 = 0x218a089;\n    uStack37 = uStack133 + 0xa9;\n    uStack112 = 0;\n    uStack116 = 0x4f65bc82;\n    uStack44 = uVar1 ^ 0xffffffff;\n    iStack92 = 0x62;\n    if (5 < *(*(iStack80 + 0x30) + 0xa4)) {\n        uStack56 = uStack56 & 0xffff | uStack56._2_2_ + 0xdd59 << 0x10;\n        iVar4 = fcn.0041140e();\n        uVar5 = uStack56;\n        uStack37 = uStack133 << 5;\n        piStack88 = iVar4 + *(iVar4 + 0x3c);\n        iVar2 = uStack56;\n        uStack56 = uVar3 & 0xffff0000 | uStack56 & 0xffff | 0x55fa0000;\n        uStack44 = uVar1 & 0x1f725780;\n        uStack117 = *piStack88 == 0x4550;\n        uStack36 = uStack132 + 0x5b55beaa;\n        uStack32 = 0xa4aa4155 < uStack132;\n        if (uStack72 < (uStack76 < 0x5e968ae6)) {\n            uStack56 = uVar5 & 0xffff;\n            piStack104 = NULL;\n            if (uStack117) {\n                piStack104 = piStack88;\n            }\n            uStack62 = *(piStack104 + 0x12);\n            if (uStack62 < iVar2 + 0xb551U) {\n                return 0x62;\n            }\n            uStack37 = uStack133 & 0x6f;\n            iStack92 = iStack60 + -0x840adb6;\n            uStack32 = 0;\n            uStack36 = 0x5f94e142;\n            uStack44 = uVar1 + 0xbc5ac25;\n            if (uStack62 == 6 && *(piStack104 + 0x4a) == 0) {\n                return iStack92;\n            }\n        }\n        iVar4 = fcn.00411078();\n        uStack44 = uVar1 & 0x2be21151;\n        uStack37 = uStack133 + 0x75;\n        iStack92 = iStack60 + -0x840adb6;\n        if (iVar4 == 0) {\n            uStack56 = uStack56 & 0xffff | uStack56._2_2_ * 0x3f50 << 0x10;\n            fcn.00411927();\n            iStack92 = 1;\n        }\n        return iStack92;\n    }\n    return 0x62;\n}\n",
        "token_count": 1731
    },
    "0040e9a1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0040e9a1(int32_t arg_8h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uStack164;\n    uint16_t *puStack160;\n    uint32_t uStack144;\n    uint var_ch;\n    \n    iVar4 = fcn.0041140e();\n    iVar5 = 0;\n    if (*(iVar4 + *(iVar4 + 0x3c)) == 0x4550) {\n        iVar5 = iVar4 + *(iVar4 + 0x3c);\n    }\n    iVar5 = *(iVar5 + 0x78);\n    uVar3 = *(iVar4 + 0x18 + iVar5);\n    if (uVar3 != 0) {\n        puStack160 = iVar4 + *(iVar4 + iVar5 + 0x24);\n        uStack164 = 0;\n        do {\n            uStack144 = 0;\n            do {\n                cVar1 = *(arg_8h + uStack144);\n                cVar2 = *(iVar4 + *(iVar4 + *(iVar4 + 0x20 + iVar5) + uStack164 * 4) + uStack144);\n                if (cVar2 == '\\0') break;\n                uStack144 = uStack144 + 1;\n            } while ((cVar2 == cVar1 && cVar1 != '\\0') && uStack144 < 0x20);\n            if (cVar2 == cVar1) {\n                return iVar4 + *(iVar4 + *(iVar4 + iVar5 + 0x1c) + *puStack160 * 4);\n            }\n            puStack160 = puStack160 + 1;\n            uStack164 = uStack164 + 1;\n        } while (uStack164 < uVar3);\n    }\n    return 0;\n}\n",
        "token_count": 443
    },
    "00411bf4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t fcn.00411bf4(void)\n\n{\n    uint64_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uchar in_XMM1 [16];\n    uint32_t uStack188;\n    int32_t iStack168;\n    int16_t aiStack160 [32];\n    int32_t iStack96;\n    uint32_t uStack92;\n    ushort uStack86;\n    uint64_t auStack84 [4];\n    int32_t iStack52;\n    ushort uStack46;\n    int32_t iStack44;\n    uint8_t uStack25;\n    uint32_t uStack24;\n    uint var_ch;\n    \n    uVar3 = uStack24;\n    uVar2 = uStack25;\n    iStack44 = 0x65e3a28e;\n    uStack86 = 0x7f13;\n    uStack92 = 0x7b920787;\n    uStack188 = 6;\n    while( true ) {\n        iStack168 = 0;\n        do {\n            *(auStack84 + iStack168) = *(iStack168 + 0x40dbd7) - *(iStack168 + 0x40dc35);\n            iStack168 = iStack168 + 1;\n        } while (iStack168 != 0xe);\n        iStack96 = 0;\n        do {\n            uStack24 = uVar3 + 0x455fa25;\n            uStack46 = 0x45a5;\n            iVar4 = iStack44 + -0x65e3a26e;\n            uStack24 = uVar3 | 0x5e24da95;\n            uVar1 = *(auStack84 + iStack96);\n            in_XMM1 = psraw(CONCAT142(SUB1614(CONCAT133(CONCAT121(SUB1612(CONCAT115(CONCAT101(SUB1610(CONCAT97(SUB169(\n                                                            CONCAT88(SUB168(CONCAT79(SUB167(CONCAT610(SUB166(CONCAT511(\n                                                            SUB165(CONCAT412(SUB164(CONCAT313(SUB163(CONCAT214(SUB162(\n                                                            CONCAT115(uVar1 >> 0x38, \n                                                                      CONCAT114(SUB161(in_XMM1 >> 0x38, 0), \n                                                                                SUB1614(in_XMM1, 0))) >> 0x70, 0), \n                                                            CONCAT113(uVar1 >> 0x30, SUB1613(in_XMM1, 0))) >> 0x68, 0), \n                                                            CONCAT112(SUB161(in_XMM1 >> 0x30, 0), SUB1612(in_XMM1, 0)))\n                                                            >> 0x60, 0), CONCAT111(uVar1 >> 0x28, SUB1611(in_XMM1, 0)))\n                                                            >> 0x58, 0), \n                                                            CONCAT110(SUB161(in_XMM1 >> 0x28, 0), SUB1610(in_XMM1, 0)))\n                                                            >> 0x50, 0), CONCAT19(uVar1 >> 0x20, SUB169(in_XMM1, 0))) >>\n                                                            0x48, 0), \n                                                            CONCAT18(SUB161(in_XMM1 >> 0x20, 0), SUB168(in_XMM1, 0))) >>\n                                                            0x40, 0), (uVar1 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (SUB167(in_XMM1, 0) >> 0x18) << 0x30) >> 0x30, 0), \n                                                            uVar1 >> 0x10), (SUB165(in_XMM1, 0) >> 0x10) << 0x20) >>\n                                                            0x20, 0), uVar1 >> 8), (SUB163(in_XMM1, 0) >> 8) << 0x10) >>\n                                              0x10, 0), SUB162(in_XMM1, 0) & 0xff | uVar1 << 8), 8);\n            *(aiStack160 + iStack96) = in_XMM1;\n            uStack25 = uVar2 & 0xe3;\n            iStack96 = iStack96 + 8;\n        } while (iStack96 != iVar4);\n        iStack52 = 0;\n        if (aiStack160[0] == 0) break;\n        uStack46 = 0xf5b7;\n        if ((uStack188 < 5) && (iStack52 = fcn.0040f21f(aiStack160, 0),  uStack188 - 1 < 2)) {\n            if (iStack52 + *(iStack52 + 0x3c) == 0 || *(iStack52 + *(iStack52 + 0x3c)) != iStack44 + -0x65e35d3e) {\n                iStack52 = 0;\n            }\n            return iStack52;\n        }\n        uStack92 = uStack188 - 1;\n        uStack188 = uStack92;\n    }\n    return 0;\n}\n",
        "token_count": 1163
    },
    "0040e07b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl fcn.0040e07b(int32_t arg_8h, uint noname_1, int32_t arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    int32_t iStack60;\n    uint uStack28;\n    uint var_bp_ch;\n    \n    uStack28 = 0;\n    if (arg_8h != 0) {\n        iStack60 = 0;\n        do {\n            *(arg_10h + iStack60) = *(iStack60 + 0x40dbfd) - *(iStack60 + 0x40dc35);\n            iStack60 = iStack60 + 1;\n        } while (iStack60 != 0xe);\n        uVar1 = fcn.00411bf4();\n        uVar1 = fcn.0040ed64(uVar1, arg_10h);\n        *arg_14h = uVar1;\n        *(arg_8h + 4) = 0x13a00;\n        *(arg_8h + 0xc) = 0x4610;\n        uStack28 = 1;\n    }\n    return uStack28;\n}\n",
        "token_count": 274
    },
    "0040e94c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e94c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    \n    var_20h = 0;\n    iVar1 = var_20h;\n    do {\n        var_20h = iVar1;\n        iVar1 = var_20h + 1;\n    } while (*(arg_8h + var_20h) != '\\0');\n    return var_20h;\n}\n",
        "token_count": 136
    },
    "0040ed64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0040ed64(uint arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uStack128;\n    uint uStack124;\n    code *pcStack120;\n    ushort *puStack116;\n    char acStack112 [32];\n    uint32_t uStack80;\n    uint uStack76;\n    uint32_t uStack72;\n    uint32_t uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    ushort uStack52;\n    ushort uStack50;\n    int32_t iStack48;\n    int32_t iStack44;\n    uint uStack40;\n    uchar uStack35;\n    int16_t iStack34;\n    uint uStack32;\n    uint uStack28;\n    uint16_t uStack22;\n    uint var_ch;\n    \n    iStack34 = -0x5093;\n    iStack44 = 0x7aeafd34;\n    iStack60 = 0;\n    uStack64 = 0xa6b2ccb;\n    uStack72 = 0;\n    do {\n        acStack112[uStack72] = *(uStack72 + 0x40dbe5) - *((uStack72 & 0xf) + 0x40dc35);\n        uStack72 = uStack72 + 1;\n        uStack35 = 0x10;\n    } while (uStack72 != 0x18);\n    uStack28 = 0;\n    uStack32 = 0x528c0adf;\n    uStack124 = 0;\n    if (arg_ch != 0) {\n        pcStack120 = fcn.0040e9a1(acStack112);\n        uStack22 = uStack22 * uStack22;\n        uStack124 = 0;\n        if (pcStack120 == NULL) {\n            return 0;\n        }\n        puStack116 = &uStack52;\n        iStack48 = arg_ch;\n        uVar1 = iStack44 + 0x851502cc;\n        do {\n            uStack80 = uVar1;\n            uStack68 = uStack80;\n            uStack40 = 0x1c398824;\n            uVar1 = uStack80 + 1;\n        } while (*(arg_ch + uStack80) != '\\0');\n        uStack35 = 0x90;\n        if (iStack60 == 0 && (0x2c0f0097 < uStack64) <= -iStack60) {\n            uStack52 = uStack80;\n            uStack22 = uStack22 | 0x8189;\n            uStack76 = 0;\n            uStack50 = uStack52;\n            if ((uStack80 & 0xffff) == 0) {\n                return 0;\n            }\n        }\n        uStack128 = 0;\n        uStack28 = 0xffffffff;\n        uStack32 = 0xfba75f3a;\n        uStack80 = uStack80 + 1;\n        (*pcStack120)(arg_8h, &uStack52, -0x5093 - iStack34, &uStack128);\n        return uStack128;\n    }\n    return 0;\n}\n",
        "token_count": 715
    },
    "0040f60b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint16_t * __cdecl fcn.0040f60b(int32_t arg_8h)\n\n{\n    int16_t *piStack60;\n    code *pcStack56;\n    uint var_8h;\n    \n    if (arg_8h == 0) {\n        for (pcStack56 = fcn.00411346;\n            (*pcStack56 != 0x5a4d || (piStack60 = pcStack56,  *(pcStack56 + *(pcStack56 + 0x3c)) != 0x4550));\n            pcStack56 = pcStack56 + -0x1000 & 0xfffff000) {\n        }\n    }\n    else {\n        piStack60 = fcn.0040f21f(arg_8h, 0);\n    }\n    return piStack60;\n}\n",
        "token_count": 196
    },
    "0040f7de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0040f7de(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t iStack332;\n    uint8_t auStack326 [77];\n    uchar uStack249;\n    uint8_t uStack70;\n    uint8_t uStack69;\n    uint8_t *puStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    uint32_t uStack52;\n    uint8_t uStack46;\n    uint8_t uStack45;\n    char cStack44;\n    uchar uStack43;\n    ushort uStack42;\n    uint32_t uStack40;\n    uint32_t uStack32;\n    int32_t iStack28;\n    uchar uStack21;\n    uint var_ch;\n    \n    iVar4 = iStack28;\n    uVar5 = uStack32;\n    uStack40 = 0x40f6f056;\n    uStack43 = 0x39;\n    cStack44 = -0x48;\n    uStack69 = 0x37;\n    puStack68 = auStack326;\n    iStack332 = 0;\n    uStack45 = uStack32 * '`';\n    do {\n        uStack46 = uStack45;\n        uStack52 = *(iStack332 * 4 + 0x416338);\n        uStack69 = uStack45;\n        if (uStack52 < arg_10h) {\n            uStack64 = uStack52;\n            uStack70 = uStack45;\n            do {\n                uStack69 = uStack64 * iStack332 + 4U ^ uStack70;\n                uVar2 = auStack326[uStack69];\n                uVar3 = *(*0x416334 + uStack64 % 0x29);\n                *(arg_8h + uStack64) = *(arg_ch + uStack64) - uVar3;\n                uStack32 = uVar5 | 0x50d00c2d;\n                iStack60 = uStack40 + 0x2a325b6;\n                if (cStack44 == '\\x19') goto code_r0x0040f8c7;\n                auStack326[uStack69] = uVar3 ^ uVar2 + 1;\n                uStack64 = uStack64 + 0x25;\n                uStack70 = uStack69;\n            } while (uStack64 < arg_10h);\n        }\n        uStack249 = 0;\n        iStack28 = iVar4 + (0xa40b7afc < uVar5);\n        uStack32 = uVar5 + 0x5bf48503;\n        iStack332 = iStack332 + 1;\n        uStack45 = uStack69;\n    } while (iStack332 != 0x25);\n    iStack60 = 0;\ncode_r0x0040f8c7:\n    do {\n        iVar4 = iStack60;\n        iStack56 = iStack60;\n        uStack21 = 0x95;\n        uStack42 = 0x2d72;\n        puVar1 = auStack326 + iStack60;\n        iStack60 = (uStack40 ^ 0x40f6f057) + iStack60;\n    } while (*puVar1 != 0);\n    uVar6 = 0;\n    if (iVar4 == 0x100) {\n        uVar6 = 0x42;\n    }\n    return uVar6;\n}\n",
        "token_count": 832
    },
    "0040fcf3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.0040fcf3(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uStack52;\n    uint var_bp_ch;\n    \n    if (arg_10h != 0) {\n        uStack52 = 0;\n        do {\n            *(arg_8h + uStack52) = *(arg_ch + uStack52) - *((uStack52 & 0xf) + 0x40dc35);\n            uStack52 = uStack52 + 1;\n        } while (uStack52 != arg_10h);\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00410fd1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t __cdecl fcn.00410fd1(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iStack60;\n    uint var_bp_ch;\n    \n    if (arg_10h != 0) {\n        iStack60 = 0;\n        do {\n            *(arg_8h + iStack60) = *(arg_ch + iStack60);\n            iStack60 = iStack60 + 1;\n        } while (iStack60 != arg_10h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 144
    },
    "004114f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00411680)\n\nvoid __cdecl fcn.004114f2(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uStack56;\n    int32_t iStack52;\n    uint var_ch;\n    \n    iVar1 = 0;\n    if (*(arg_ch + *(arg_ch + 0x3c)) == 0x4550) {\n        iVar1 = arg_ch + *(arg_ch + 0x3c);\n    }\n    if (*(iVar1 + 6) != 0) {\n        iStack52 = *(iVar1 + 0x14) + 0x18 + iVar1;\n        uStack56 = 0;\n        do {\n            fcn.00410fd1(arg_8h + *(iStack52 + 0xc), arg_ch + *(iStack52 + 0x14), *(iStack52 + 0x10));\n            uStack56 = uStack56 + 1;\n            iStack52 = iStack52 + 0x28;\n        } while (uStack56 < *(iVar1 + 6));\n    }\n    fcn.00410fd1(arg_8h, arg_ch, *(iVar1 + 0x54));\n    return;\n}\n",
        "token_count": 299
    },
    "00411857": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00411857(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_19h;\n    uint var_10h;\n    \n    arg_8h_00 = fcn.0040ddfe(0x40, 0x1a000);\n    var_20h = 0;\n    if (arg_8h_00 != 0) {\n        fcn.004114f2(arg_8h_00, arg_ch);\n        *(arg_8h + 0x48) = arg_8h_00;\n        *(arg_8h + 0x4c) = arg_8h_00 + -0x400000;\n        var_20h = arg_8h_00 + 0x1857;\n    }\n    return var_20h;\n}\n",
        "token_count": 232
    },
    "00411927": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint fcn.00411927(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint uStack216;\n    code *pcStack208;\n    uint auStack172 [2];\n    uint uStack164;\n    uchar auStack156 [40];\n    uint uStack116;\n    uint uStack112;\n    int16_t *piStack92;\n    uint uStack88;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint32_t uStack48;\n    ushort uStack42;\n    uint32_t uStack40;\n    int32_t iStack36;\n    int32_t iStack28;\n    uint var_ch;\n    \n    uVar3 = uStack48;\n    iStack28 = 0x6acdd086;\n    fcn.00410ab4(auStack172);\n    uStack116 = auStack172[0];\n    uStack112 = 0x13a00;\n    uStack56 = *0x416324;\n    uStack60 = *0x416320;\n    uStack64 = *0x41632c;\n    uStack48 = uStack48 | 0x4052e916;\n    uStack52 = *0x416328;\n    uStack68 = *0x416330;\n    pcStack208 = fcn.00411346;\n    do {\n        if (*pcStack208 == 0x5a4d) {\n            iVar5 = uStack40 * iStack36;\n            uVar1 = uStack40;\n            uVar2 = uStack40;\n            if (*(pcStack208 + *(pcStack208 + 0x3c)) == iStack28 + -0x6acd8b36) {\n                piStack92 = pcStack208;\n                uStack42 = 0;\n                uStack88 = *(pcStack208 + *(pcStack208 + 0x3c) + 0x50);\n                uStack40 = uVar1 * uVar2;\n                iStack36 = (uVar1 * uVar2 >> 0x20) + iVar5 * 2;\n                pcVar4 = fcn.00411857(auStack156, uStack164);\n                uStack216 = 0;\n                if (pcVar4 != NULL) {\n                    uStack42 = 0x9919;\n                    (*pcVar4)(auStack156);\n                    uStack216 = 0xca;\n                }\n                return uStack216;\n            }\n        }\n        uStack48 = uVar3 + 0x1015d8a1;\n        pcStack208 = pcStack208 + -0x1000 & 0xfffff000;\n    } while( true );\n}\n",
        "token_count": 634
    },
    "0040dcdc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.0040dcdc(int32_t *arg_8h)\n\n{\n    uint var_4h;\n    \n    return *arg_8h * 2;\n}\n",
        "token_count": 59
    },
    "0040fe4b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040fe4b(void)\n\n{\n    int32_t unaff_EBX;\n    \n    (*_sym.imp.USER32.dll_GetSystemMenu)();\n    *(unaff_EBX + 0xf) = *(unaff_EBX + 0xf) + 0x35;\n    return;\n}\n",
        "token_count": 67
    },
    "00410ab4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00410ab4(int32_t *arg_8h)\n\n{\n    uchar *arg_ch;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint16_t uVar3;\n    uint arg_8h_00;\n    int32_t arg_10h;\n    uint in_stack_ffffff1c;\n    int32_t iStack116;\n    int32_t iStack112;\n    uchar auStack104 [32];\n    int32_t iStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    code *pcStack56;\n    int32_t iStack52;\n    char cStack45;\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t iStack36;\n    uint16_t uStack26;\n    uint uStack24;\n    uint var_ch;\n    \n    uVar3 = uStack26;\n    iVar1 = iStack36;\n    uVar2 = uStack40;\n    uStack24 = 0x16c837b6;\n    iStack116 = 0;\n    uStack44 = 0x803116;\n    iStack60 = 0;\n    do {\n        uStack26 = 0x150d;\n        iStack116 = (*(iStack60 * 0xcc + 0x4150c8) + iStack116) - *(iStack60 * 0xcc + 0x4150c0);\n        iStack72 = iStack60 + 1;\n        iStack60 = iStack72;\n    } while (iStack72 != 0x18);\n    iStack36 = 0;\n    uStack40 = 0;\n    cStack45 = '}';\n    iStack68 = iStack116;\n    fcn.0040e07b(arg_8h, in_stack_ffffff1c, auStack104, &pcStack56);\n    uStack40 = uVar2 + 0x4cb075de;\n    iStack36 = iVar1 + (0xb34f8a21 < uVar2);\n    iStack52 = (*pcStack56)(0, iStack68, 0x1000, 4);\n    *arg_8h = iStack52 + 0x7540;\n    arg_8h[2] = iStack52 + 0x2a96;\n    iStack64 = 0;\n    iStack112 = 0;\n    do {\n        iVar1 = iStack64;\n        cStack45 = cStack45 + -0x68;\n        arg_ch = *(iStack112 * 0xcc + 0x4150c4);\n        iStack36 = 0xffffffff;\n        uStack40 = 0xdafa558d;\n        uStack26 = uVar3 | 0x4b04;\n        arg_10h = *(iStack112 * 0xcc + 0x4150c8) - *(iStack112 * 0xcc + 0x4150c0);\n        *(iStack52 + iStack64) = *arg_ch;\n        fcn.00410fd1(iStack52 + iStack64, arg_ch, arg_10h);\n        arg_8h_00 = fcn.00411bf4();\n        fcn.0040ed64(arg_8h_00, auStack104);\n        iStack64 = arg_10h + iVar1;\n        iStack112 = iStack112 + 1;\n        uStack44 = 0x90034d8d;\n    } while (iStack112 != 0x18);\n    uStack44 = 0x60a94c45;\n    fcn.0040f7de(iStack52, iStack52, iStack68);\n    return 0;\n}\n",
        "token_count": 838
    },
    "0041140e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid fcn.0041140e(void)\n\n{\n    uint64_t uVar1;\n    uchar in_XMM1 [16];\n    int32_t iStack156;\n    int32_t iStack152;\n    uchar auStack130 [64];\n    ushort uStack66;\n    uint64_t auStack57 [5];\n    uint var_bp_8h;\n    \n    iStack152 = 0;\n    do {\n        *(auStack57 + iStack152) = *(iStack152 + 0x40dbcc) - *(iStack152 + 0x40dc35);\n        iStack152 = iStack152 + 1;\n    } while (iStack152 != 0xb);\n    iStack156 = 0;\n    do {\n        uVar1 = *(auStack57 + iStack156);\n        in_XMM1 = psraw(CONCAT142(SUB1614(CONCAT133(CONCAT121(SUB1612(CONCAT115(CONCAT101(SUB1610(CONCAT97(SUB169(\n                                                            CONCAT88(SUB168(CONCAT79(SUB167(CONCAT610(SUB166(CONCAT511(\n                                                            SUB165(CONCAT412(SUB164(CONCAT313(SUB163(CONCAT214(SUB162(\n                                                            CONCAT115(uVar1 >> 0x38, \n                                                                      CONCAT114(SUB161(in_XMM1 >> 0x38, 0), \n                                                                                SUB1614(in_XMM1, 0))) >> 0x70, 0), \n                                                            CONCAT113(uVar1 >> 0x30, SUB1613(in_XMM1, 0))) >> 0x68, 0), \n                                                            CONCAT112(SUB161(in_XMM1 >> 0x30, 0), SUB1612(in_XMM1, 0)))\n                                                            >> 0x60, 0), CONCAT111(uVar1 >> 0x28, SUB1611(in_XMM1, 0)))\n                                                            >> 0x58, 0), \n                                                            CONCAT110(SUB161(in_XMM1 >> 0x28, 0), SUB1610(in_XMM1, 0)))\n                                                            >> 0x50, 0), CONCAT19(uVar1 >> 0x20, SUB169(in_XMM1, 0))) >>\n                                                            0x48, 0), \n                                                            CONCAT18(SUB161(in_XMM1 >> 0x20, 0), SUB168(in_XMM1, 0))) >>\n                                                            0x40, 0), (uVar1 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (SUB167(in_XMM1, 0) >> 0x18) << 0x30) >> 0x30, 0), \n                                                            uVar1 >> 0x10), (SUB165(in_XMM1, 0) >> 0x10) << 0x20) >>\n                                                            0x20, 0), uVar1 >> 8), (SUB163(in_XMM1, 0) >> 8) << 0x10) >>\n                                          0x10, 0), SUB162(in_XMM1, 0) & 0xff | uVar1 << 8), 8);\n        *(auStack130 + iStack156 * 2) = in_XMM1;\n        iStack156 = iStack156 + 8;\n        uStack66 = 0;\n    } while (iStack156 != 0x20);\n    fcn.0040f21f(auStack130, 0);\n    return;\n}\n",
        "token_count": 792
    },
    "0040dd77": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0040dd77(uint *arg_8h, uint8_t *arg_ch, uint *arg_10h)\n\n{\n    uint var_ch;\n    \n    *arg_ch = *arg_8h * *arg_10h + 4U ^ *arg_ch;\n    return;\n}\n",
        "token_count": 82
    },
    "0040e012": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0040e012(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_8h;\n    \n    return arg_ch * arg_ch * arg_ch + arg_8h * arg_8h * arg_8h;\n}\n",
        "token_count": 79
    },
    "0040f1ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040f1ac(int32_t arg_8h)\n\n{\n    int32_t in_FS_OFFSET;\n    uint var_8h;\n    \n    return *(in_FS_OFFSET + arg_8h);\n}\n",
        "token_count": 50
    },
    "0040f1ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5h\n\nuint fcn.0040f1ee(void)\n\n{\n    int32_t in_FS_OFFSET;\n    uint var_14h;\n    uint var_ch;\n    uint var_5h;\n    \n    return *(*(in_FS_OFFSET + 0x18) + 0x30);\n}\n",
        "token_count": 77
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid entry0(void)\n\n{\n    code *pcVar1;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    \n    *0x4163d0 = *0x4163d0 + -0x270;\n    fcn.0040dfb9(unaff_EBX, unaff_EBP, *0x10);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 95
    },
    "004109a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00410a4b)\n\nvoid __cdecl fcn.004109a6(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint var_ch;\n    \n    *(arg_8h + arg_10h) = *(arg_ch + arg_10h) - arg_14h;\n    return;\n}\n",
        "token_count": 109
    },
    "00410a96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00410a96(void)\n\n{\n    int32_t in_FS_OFFSET;\n    uint var_4h;\n    \n    return *(in_FS_OFFSET + 0x18);\n}\n",
        "token_count": 41
    },
    "0040dfb9": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dfb9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    *0x416328 = arg_8h;\n    *0x416330 = arg_10h;\n    *0x41632c = arg_ch;\n    fcn.0040e200();\n    return;\n}\n",
        "token_count": 77
    }
}