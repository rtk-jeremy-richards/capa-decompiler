{
    "00401001": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00401001(void)\n\n{\n    uint extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -4) = 3;\n    fcn.004097f1();\n    *(unaff_EBP + -4) = 2;\n    fcn.004097f1();\n    *(unaff_EBP + -4) = 1;\n    fcn.004097f1();\n    *(unaff_EBP + -4) = 0;\n    fcn.00405df5();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00405df5();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 233
    },
    "00404c45": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404c45(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int32_t arg_8h_00;\n    uint32_t uVar3;\n    int32_t unaff_ESI;\n    uint32_t arg_10h;\n    \n    if (arg_ch != 0) {\n        do {\n            arg_10h = 0x80 - *(unaff_ESI + 0x100);\n            arg_8h_00 = *(unaff_ESI + 0xf0) + *(unaff_ESI + 0x100);\n            if (arg_10h < arg_ch) {\n                fcn.0041bb00(arg_8h_00, arg_8h, arg_10h);\n                *(unaff_ESI + 0x100) = *(unaff_ESI + 0x100) + arg_10h;\n                puVar1 = *(unaff_ESI + 0xf8);\n                *puVar1 = *puVar1 + 0x40;\n                puVar2 = *(unaff_ESI + 0xf8);\n                puVar1 = puVar2 + 1;\n                *puVar1 = *puVar1 + (*puVar2 < 0x40);\n                if (*0x44b738 < 2) {\n                    fcn.0040490e(unaff_ESI);\n                }\n                else {\n                    fcn.00403772(unaff_ESI, *(unaff_ESI + 0xf0));\n                }\n                fcn.0041bb00(*(unaff_ESI + 0xf0), *(unaff_ESI + 0xf0) + 0x40, 0x40);\n                *(unaff_ESI + 0x100) = *(unaff_ESI + 0x100) + -0x40;\n                uVar3 = arg_ch - arg_10h;\n                arg_ch = arg_10h;\n            }\n            else {\n                fcn.0041bb00(arg_8h_00, arg_8h, arg_ch);\n                *(unaff_ESI + 0x100) = *(unaff_ESI + 0x100) + arg_ch;\n                uVar3 = 0;\n            }\n            arg_8h = arg_8h + arg_ch;\n            arg_ch = uVar3;\n        } while (uVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 550
    },
    "00404d04": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00404d04(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t iVar5;\n    \n    if (0x40 < *(unaff_ESI + 0x100)) {\n        puVar1 = *(unaff_ESI + 0xf8);\n        *puVar1 = *puVar1 + 0x40;\n        puVar2 = *(unaff_ESI + 0xf8);\n        puVar1 = puVar2 + 1;\n        *puVar1 = *puVar1 + (*puVar2 < 0x40);\n        fcn.0040490e(unaff_ESI);\n        *(unaff_ESI + 0x100) = *(unaff_ESI + 0x100) + -0x40;\n        fcn.0041bb00(*(unaff_ESI + 0xf0), *(unaff_ESI + 0xf0) + 0x40, *(unaff_ESI + 0x100));\n    }\n    uVar3 = *(unaff_ESI + 0x100);\n    puVar1 = *(unaff_ESI + 0xf8);\n    *puVar1 = *puVar1 + uVar3;\n    puVar2 = *(unaff_ESI + 0xf8);\n    puVar1 = puVar2 + 1;\n    *puVar1 = *puVar1 + (*puVar2 < uVar3);\n    if (*(unaff_ESI + 0x104) != '\\0') {\n        *(*(unaff_ESI + 0xfc) + 4) = 0xffffffff;\n    }\n    **(unaff_ESI + 0xfc) = 0xffffffff;\n    iVar4 = *(unaff_ESI + 0xf0) + *(unaff_ESI + 0x100);\n    fcn.0041a0c0(iVar4, 0, 0x80 - *(unaff_ESI + 0x100));\n    fcn.0040490e(unaff_ESI);\n    iVar5 = 0;\n    do {\n        fcn.00404897(iVar4, unaff_EDI + iVar5, *(*(unaff_ESI + 0xf4) + iVar5));\n        iVar5 = iVar5 + 4;\n    } while (iVar5 < 0x20);\n    return;\n}\n",
        "token_count": 560
    },
    "0040b20a": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b20a(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    char cVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint *puVar6;\n    \n    puVar2 = arg_8h;\n    fcn.0041bb00(in_ECX + 0x14, arg_8h + 0xe, 0x1c);\n    arg_8h = arg_8h[7];\n    if (0x1fff < arg_8h) {\n        arg_8h = 0x2000;\n    }\n    if (arg_8h != NULL) {\n        fcn.0041bb00(*(in_ECX + 0x10) + 0x3c000, puVar2[6], arg_8h);\n    }\n    uVar4 = puVar2[0xb];\n    if (0x2000U - arg_8h <= puVar2[0xb]) {\n        uVar4 = 0x2000U - arg_8h;\n    }\n    if (uVar4 != 0) {\n        fcn.0041bb00(*(in_ECX + 0x10) + 0x3c000 + arg_8h, puVar2[10], uVar4);\n    }\n    *(in_ECX + 0x34) = 0;\n    *(in_ECX + 0x30) = 0x40000;\n    puVar6 = puVar2[4];\n    if (puVar6 == NULL) {\n        puVar6 = *puVar2;\n    }\n    if (0 < puVar2[5]) {\n        cVar3 = fcn.0040b1a8(puVar6, puVar2[5]);\n        if (cVar3 == '\\0') {\n            *puVar6 = 0x16;\n        }\n    }\n    iVar1 = *(in_ECX + 0x10);\n    uVar5 = *(iVar1 + 0x3c020) & 0x3ffff;\n    uVar4 = *(iVar1 + 0x3c01c) & 0x3ffff;\n    if (0x3ffff < uVar4 + uVar5) {\n        uVar4 = 0;\n        uVar5 = 0;\n    }\n    puVar2[0x15] = iVar1 + uVar5;\n    puVar2[0x16] = uVar4;\n    fcn.0041228a();\n    uVar4 = *(*(in_ECX + 0x10) + 0x3c030);\n    uVar5 = 0x1fc0;\n    if (uVar4 < 0x1fc0) {\n        uVar5 = uVar4;\n    }\n    if (uVar5 != 0) {\n        fcn.00401106(uVar5 + 0x40);\n        fcn.0041bb00(puVar2[6], *(in_ECX + 0x10) + 0x3c000, uVar5 + 0x40);\n    }\n    return;\n}\n",
        "token_count": 714
    },
    "0040b6e1": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040b6e1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uchar uVar1;\n    int32_t in_ECX;\n    \n    if (arg_8h == '\\0') {\n        uVar1 = fcn.00405f53(0, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_24h, arg_20h);\n        *(in_ECX + 0x3ac5) = uVar1;\n    }\n    else {\n        uVar1 = fcn.00405f53(1, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_24h, arg_20h);\n        *(in_ECX + 0x3ac4) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "0040b741": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint fcn.0040b741(void)\n\n{\n    uint extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00405edd();\n    *(unaff_EBP + -4) = 0;\n    fcn.00405edd();\n    *(unaff_EBP + -4) = 1;\n    fcn.00409a0d();\n    *(unaff_EBP + -4) = 2;\n    fcn.00409a0d();\n    *(unaff_EBP + -4) = 3;\n    fcn.00409a0d();\n    fcn.0040b5b6();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 235
    },
    "004163de": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n\nuint __cdecl fcn.004163de(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    uint8_t uVar3;\n    uchar uVar4;\n    uchar extraout_AH;\n    uchar extraout_AH_00;\n    uint uVar5;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int32_t extraout_ECX;\n    int32_t iVar10;\n    uint32_t *puVar11;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_30h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    puVar1 = extraout_ECX + 0xe6b0;\n    *(extraout_ECX + 0xe6b4) = 0;\n    *puVar1 = 0;\n    uVar5 = 0x8000;\n    *(unaff_EBP + -0x10) = puVar1;\n    if (*(unaff_EBP + 0x10) < 0x8001) {\n        uVar5 = *(unaff_EBP + 0x10);\n    }\n    fcn.0041bb00(*(extraout_ECX + 0xe6bc), *(unaff_EBP + 0xc), uVar5);\n    *(unaff_EBP + -0x14) = extraout_ECX + 59000;\n    fcn.0040a9fd();\n    if ((*(unaff_EBP + 8) & 0x80) == 0) {\n        uVar6 = *(extraout_ECX + 0xe6f0);\n        *(unaff_EBP + 0xc) = uVar6;\n    }\n    else {\n        uVar6 = fcn.0040aa23(puVar1);\n        *(unaff_EBP + 0xc) = uVar6;\n        if (uVar6 == 0) {\n            fcn.00414f0b();\n        }\n        else {\n            uVar6 = uVar6 - 1;\n            *(unaff_EBP + 0xc) = uVar6;\n        }\n    }\n    if ((uVar6 <= *(extraout_ECX + 0xe6c4)) && (uVar6 < *(extraout_ECX + 0xe6e4) || uVar6 == *(extraout_ECX + 0xe6e4)))\n    {\n        *(extraout_ECX + 0xe6f0) = uVar6;\n        *(unaff_EBP + 0x13) = uVar6 == *(extraout_ECX + 0xe6c4);\n        puVar7 = fcn.0041a13a(0x70);\n        if (puVar7 == NULL) {\n            puVar7 = NULL;\n        }\n        else {\n            fcn.00415313();\n        }\n        if (*(unaff_EBP + 0x13) == '\\0') {\n            iVar8 = *(*(extraout_ECX + 0xe6c0) + uVar6 * 4);\n            puVar7[4] = uVar6;\n            puVar11 = iVar8 + 8;\n            *puVar11 = *puVar11 + 1;\n            *(unaff_EBP + -0x1c) = iVar8;\n        }\n        else {\n            if (0x400 < uVar6) {\n                if (puVar7 != NULL) {\n                    fcn.00414ba2(1);\n                }\n                goto code_r0x004164b3;\n            }\n            fcn.00412212(1);\n            iVar8 = fcn.0041a13a(0x70);\n            if (iVar8 == 0) {\n                iVar8 = 0;\n            }\n            else {\n                fcn.00415313();\n            }\n            *(*(extraout_ECX + 0xe6c0) + -4 + *(extraout_ECX + 0xe6c4) * 4) = iVar8;\n            iVar10 = *(extraout_ECX + 0xe6c4);\n            *(unaff_EBP + -0x1c) = iVar8;\n            puVar7[4] = iVar10 - 1;\n            fcn.004144ec(0);\n            puVar11 = iVar8 + 8;\n            *puVar11 = 0;\n        }\n        uVar6 = 0;\n        *(unaff_EBP + -0x18) = 0;\n        *(unaff_EBP + -0x20) = 0;\n        if (*(extraout_ECX + 0xe6d4) == 0) {\ncode_r0x00416588:\n            fcn.00412212(1);\n            iVar10 = 1;\n        }\n        else {\n            do {\n                *(*(extraout_ECX + 0xe6d0) + (uVar6 - *(unaff_EBP + -0x18)) * 4) =\n                     *(*(extraout_ECX + 0xe6d0) + uVar6 * 4);\n                iVar8 = *(unaff_EBP + -0x20);\n                piVar2 = *(extraout_ECX + 0xe6d0) + iVar8 * 4;\n                if (*piVar2 == 0) {\n                    *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + 1;\n                }\n                iVar10 = *(unaff_EBP + -0x18);\n                if (0 < iVar10) {\n                    *piVar2 = 0;\n                }\n                uVar6 = iVar8 + 1;\n                *(unaff_EBP + -0x20) = uVar6;\n            } while (uVar6 < *(extraout_ECX + 0xe6d4));\n            if (iVar10 == 0) goto code_r0x00416588;\n        }\n        uVar5 = *(unaff_EBP + -0x10);\n        *(*(extraout_ECX + 0xe6d0) + (*(extraout_ECX + 0xe6d4) - iVar10) * 4) = puVar7;\n        puVar7[2] = *puVar11;\n        uVar6 = fcn.0040aa23(uVar5);\n        if ((*(unaff_EBP + 8) & 0x40) != 0) {\n            uVar6 = uVar6 + 0x102;\n        }\n        uVar3 = *(unaff_EBP + 8);\n        *puVar7 = *(extraout_ECX + 0x70) + uVar6 & *(extraout_ECX + 0xe6f8);\n        if ((uVar3 & 0x20) == 0) {\n            if (*(unaff_EBP + 0xc) < *(extraout_ECX + 0xe6e4)) {\n                uVar9 = *(*(extraout_ECX + 0xe6e0) + *(unaff_EBP + 0xc) * 4);\n            }\n            else {\n                uVar9 = 0;\n            }\n            puVar7[1] = uVar9;\n        }\n        else {\n            uVar9 = fcn.0040aa23(*(unaff_EBP + -0x10));\n            iVar8 = *(unaff_EBP + 0xc);\n            puVar7[1] = uVar9;\n            *(*(extraout_ECX + 0xe6e0) + iVar8 * 4) = uVar9;\n        }\n        if ((*(extraout_ECX + 0x74) == *(extraout_ECX + 0x70)) ||\n           (uVar6 < (*(extraout_ECX + 0x74) - *(extraout_ECX + 0x70) & *(extraout_ECX + 0xe6f8)))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        puVar11 = puVar7 + 0x13;\n        *(puVar7 + 3) = uVar4;\n        fcn.0041a0c0(puVar11, 0, 0x1c);\n        puVar7[0x17] = puVar7[1];\n        uVar3 = *(unaff_EBP + 8);\n        puVar7[0x16] = 0x3c000;\n        puVar7[0x18] = puVar7[2];\n        if ((uVar3 & 0x10) != 0) {\n            uVar6 = fcn.00409766();\n            uVar5 = 7;\n            fcn.0040974f(7);\n            *(unaff_EBP + 0xc) = 0;\n            do {\n                if ((uVar6 >> 9 & 1 << (*(unaff_EBP + 0xc) & 0x1f)) != 0) {\n                    uVar9 = fcn.0040aa23(uVar5, *(unaff_EBP + -0x10));\n                    *puVar11 = uVar9;\n                }\n                *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) + 1;\n                puVar11 = puVar11 + 1;\n            } while (*(unaff_EBP + 0xc) < 7);\n        }\n        if (*(unaff_EBP + 0x13) == '\\0') {\n            iVar8 = *(unaff_EBP + -0x1c);\n        }\n        else {\n            uVar6 = fcn.0040aa23(*(unaff_EBP + -0x10));\n            *(unaff_EBP + 0x10) = uVar6;\n            if ((0xffff < uVar6) || (uVar9 = 0,  uVar6 == 0)) goto code_r0x004164b3;\n            fcn.004012e7(uVar6);\n            iVar10 = *(unaff_EBP + -0x30);\n            *(unaff_EBP + -4) = 0;\n            if (uVar6 != 0) {\n                do {\n                    if (0x7fff < **(unaff_EBP + -0x10) + 3U) {\n                        if (iVar10 != 0) {\n                            fcn.00419d72(iVar10);\n                        }\n                        goto code_r0x004164b3;\n                    }\n                    fcn.00409766();\n                    *(iVar10 + uVar9) = extraout_AH;\n                    fcn.0040974f(8);\n                    uVar9 = uVar9 + 1;\n                } while (uVar9 < *(unaff_EBP + 0x10));\n            }\n            iVar8 = *(unaff_EBP + -0x1c);\n            fcn.0040ac00(iVar10, *(unaff_EBP + 0x10), iVar8 + 0x14);\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (iVar10 != 0) {\n                fcn.00419d72(iVar10);\n            }\n        }\n        puVar7[9] = *(iVar8 + 0x14);\n        puVar7[10] = *(iVar8 + 0x28);\n        iVar10 = *(iVar8 + 0x40);\n        *(unaff_EBP + 0x10) = iVar10;\n        if (iVar10 - 1U < 0x1fff) {\n            fcn.00401106(iVar10);\n            fcn.0041bb00(puVar7[0xf], *(iVar8 + 0x3c), *(unaff_EBP + 0x10));\n        }\n        if (puVar7[0xc] < 0x40) {\n            fcn.0041228a();\n            fcn.00401106(0x40);\n        }\n        uVar6 = puVar7[0xb];\n        *(unaff_EBP + 0xc) = uVar6;\n        *(unaff_EBP + 0x10) = puVar7 + 0x13;\n        *(unaff_EBP + -0x20) = 7;\n        do {\n            fcn.0040aa16();\n            *(unaff_EBP + 0x10) = *(unaff_EBP + 0x10) + 4;\n            *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) + 4;\n            piVar2 = unaff_EBP + -0x20;\n            *piVar2 = *piVar2 + -1;\n        } while (*piVar2 != 0);\n        fcn.0040aa16(uVar6 + 0x1c, puVar7[1]);\n        fcn.0040aa16(uVar6 + 0x20, 0);\n        fcn.0040aa16(uVar6 + 0x2c, puVar7[2]);\n        fcn.0041a0c0(uVar6 + 0x30, 0, 0x10);\n        if ((*(unaff_EBP + 8) & 8) == 0) {\ncode_r0x00416875:\n            uVar5 = 1;\n            goto code_r0x004164b5;\n        }\n        if (**(unaff_EBP + -0x10) + 3U < 0x8000) {\n            uVar6 = fcn.0040aa23(*(unaff_EBP + -0x10));\n            *(unaff_EBP + 8) = uVar6;\n            if (uVar6 < 0x1fc1) {\n                if (puVar7[0xc] < uVar6 + 0x40) {\n                    fcn.00401106(uVar6 + (0x40 - puVar7[0xc]));\n                }\n                uVar6 = puVar7[0xb];\n                uVar9 = 0;\n                if (*(unaff_EBP + 8) != 0) {\n                    do {\n                        if (0x7fff < **(unaff_EBP + -0x10) + 3U) goto code_r0x004164b3;\n                        fcn.00409766();\n                        *(uVar9 + uVar6 + 0x40) = extraout_AH_00;\n                        fcn.0040974f();\n                        uVar9 = uVar9 + 1;\n                    } while (uVar9 < *(unaff_EBP + 8));\n                }\n                goto code_r0x00416875;\n            }\n        }\n    }\ncode_r0x004164b3:\n    uVar5 = 0;\ncode_r0x004164b5:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar5;\n}\n",
        "token_count": 3368
    },
    "0040106a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040106a(char *param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    uint uStack4;\n    \n    uStack4 = 0;\n    if (((((param_2 != 0) && (*param_1 == 'R')) && (6 < param_2)) && ((param_1[1] == 'a' && (param_1[2] == 'r')))) &&\n       ((param_1[3] == '!' && ((param_1[4] == '\\x1a' && (param_1[5] == '\\a')))))) {\n        cVar1 = param_1[6];\n        if (cVar1 == '\\0') {\n            uStack4 = 2;\n        }\n        else if (cVar1 == '\\x01') {\n            uStack4 = 3;\n        }\n        else if (cVar1 == '\\x02') {\n            uStack4 = 4;\n        }\n    }\n    return uStack4;\n}\n",
        "token_count": 224
    },
    "004010d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004010d4(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0xa234) != '\\0') {\n        iVar1 = arg_8h + (~arg_8h + 1 & 0xf);\n        if (*(in_ECX + 0xa228) == 3) {\n            arg_8h = iVar1 + 0x10;\n        }\n        else {\n            arg_8h = iVar1 + 8;\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 137
    },
    "0040123f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040123f(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = 0x427468;\n    cVar1 = *(extraout_ECX + 0x15be);\n    *(unaff_EBP + -4) = 4;\n    if ((cVar1 != '\\0') && (iVar2 = extraout_ECX[0x15bf],  iVar2 != 0)) {\n        fcn.00409f2c();\n        fcn.00419d67(iVar2);\n    }\n    fcn.004122a7();\n    fcn.004122a7();\n    *(unaff_EBP + -4) = 1;\n    fcn.00401001();\n    *(unaff_EBP + -4) = 0;\n    fcn.00405df5();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00408c21();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 334
    },
    "00401320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint __cdecl fcn.00401320(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -4) = 0;\n    cVar3 = fcn.00402c2f(unaff_EBP + -0x1c, 0);\n    if (cVar3 == '\\0') {\n        if (*(unaff_EBP + -0x1c) != 0) {\n            fcn.00419d72(*(unaff_EBP + -0x1c));\n        }\n        uVar4 = 0;\n    }\n    else {\n        uVar1 = *(unaff_EBP + -0x18);\n        fcn.004012cc(0);\n        piVar2 = *(unaff_EBP + 8);\n        fcn.00401306(uVar1 + 1);\n        if (*(extraout_ECX + 0xa228) == 3) {\n            fcn.00411512(*(unaff_EBP + -0x1c), *piVar2, piVar2[1]);\n        }\n        else if ((*(extraout_ECX + 0x7b1c) & 1) == 0) {\n            fcn.0041137d(*(unaff_EBP + -0x1c), *piVar2, piVar2[1]);\n        }\n        else {\n            fcn.004113e8(*(unaff_EBP + -0x1c), *piVar2, uVar1 >> 1);\n            *(*piVar2 + (uVar1 & 0xfffffffe)) = 0;\n        }\n        uVar4 = fcn.0041a052(*piVar2);\n        fcn.00401306(uVar4);\n        if (*(unaff_EBP + -0x1c) != 0) {\n            fcn.00419d72(*(unaff_EBP + -0x1c));\n        }\n        uVar4 = 1;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar4;\n}\n",
        "token_count": 679
    },
    "0040146a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nuint __cdecl fcn.0040146a(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint64_t uVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int32_t *extraout_ECX;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint64_t uVar11;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    *(extraout_ECX + 0x288d) = 0;\n    *(extraout_ECX + 0x288f) = 0;\n    (**(*extraout_ECX + 8))(0, 0, 0);\n    iVar5 = (**(*extraout_ECX + 4))(extraout_ECX + 0x15ce, 7);\n    if (iVar5 == 7) {\n        extraout_ECX[0x288e] = 0;\n        iVar5 = fcn.0040106a(extraout_ECX + 0x15ce, 7);\n        if (iVar5 == 0) {\n            fcn.004012e7(0x100000);\n            iVar5 = *extraout_ECX;\n            *(unaff_EBP + -4) = 0;\n            iVar5 = (**(iVar5 + 0xc))();\n            iVar9 = *(unaff_EBP + -0x20) + -0x10;\n            iVar8 = (**(*extraout_ECX + 4))(*(unaff_EBP + -0x24), iVar9);\n            iVar10 = 0;\n            *(unaff_EBP + -0x10) = iVar8;\n            if (0 < iVar8) {\n                do {\n                    pcVar6 = *(unaff_EBP + -0x24) + iVar10;\n                    uVar3 = CONCAT44(iVar10, pcVar6);\n                    if (*pcVar6 == 'R') {\n                        uVar11 = fcn.0040106a(iVar9, *(unaff_EBP + -0x10) - iVar10, pcVar6);\n                        iVar8 = uVar11;\n                        uVar3 = uVar11;\n                        if (iVar8 != 0) {\n                            extraout_ECX[0x288a] = iVar8;\n                            if ((((iVar8 == 1) && (0xffffffff < uVar11)) && (iVar5 < 0x1c)) &&\n                               (0x1f < *(unaff_EBP + -0x10))) {\n                                iVar8 = *(unaff_EBP + -0x24) - iVar5;\n                                uVar3 = uVar11 & 0xffffffff00000000;\n                                if (((*(iVar8 + 0x1c) != 'R') ||\n                                    (uVar3 = uVar11 & 0xffffffff00000000,  *(iVar8 + 0x1d) != 'S')) ||\n                                   ((uVar3 = uVar11 & 0xffffffff00000000,  *(iVar8 + 0x1e) != 'F' ||\n                                    (uVar3 = uVar11 & 0xffffffff00000000,  *(iVar8 + 0x1f) != 'X'))))\n                                goto code_r0x0040156c;\n                            }\n                            iVar5 = (uVar11 >> 0x20) + iVar5;\n                            extraout_ECX[0x288e] = iVar5;\n                            (**(*extraout_ECX + 8))(iVar5, 0, 0);\n                            if ((extraout_ECX[0x288a] == 2) || (extraout_ECX[0x288a] == 3)) {\n                                (**(*extraout_ECX + 4))(extraout_ECX + 0x15ce, 7);\n                            }\n                            break;\n                        }\n                    }\ncode_r0x0040156c:\n                    iVar10 = (uVar3 >> 0x20) + 1;\n                } while (iVar10 < *(unaff_EBP + -0x10));\n            }\n            if (extraout_ECX[0x288e] == 0) {\n                if (*(unaff_EBP + -0x24) != 0) {\n                    fcn.00419d72(*(unaff_EBP + -0x24));\n                }\n                goto code_r0x004014a7;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*(unaff_EBP + -0x24) != 0) {\n                fcn.00419d72(*(unaff_EBP + -0x24));\n            }\n        }\n        else {\n            extraout_ECX[0x288a] = iVar5;\n            if (iVar5 == 1) {\n                (**(*extraout_ECX + 8))(0, 0, 0);\n            }\n        }\n        if (extraout_ECX[0x288a] != 4) {\n            if (extraout_ECX[0x288a] == 3) {\n                (**(*extraout_ECX + 4))(extraout_ECX + 0x573f, 1);\n                if (*(extraout_ECX + 0x573f) != '\\0') goto code_r0x004014a7;\n                extraout_ECX[0x15d0] = 8;\n            }\n            else {\n                extraout_ECX[0x15d0] = 7;\n            }\n            while ((iVar5 = fcn.00403662(),  iVar5 != 0 && (extraout_ECX[0x15c7] != 1))) {\n                fcn.004010c0();\n            }\n            if ((*(extraout_ECX + 0xa23d) == '\\0') || (*(unaff_EBP + 8) != '\\0')) {\n                fcn.004010c0();\n                if (*(extraout_ECX + 0x288f) != '\\0') {\n                    uVar7 = fcn.0040c1b1(0x6a);\n                    fcn.0040e0c1(extraout_ECX + 0x1e, uVar7);\n                    if (*(unaff_EBP + 8) == '\\0') goto code_r0x004014a7;\n                }\n                *(extraout_ECX + 0xa22e) = *(extraout_ECX + 0x15d9);\n                if ((*(extraout_ECX + 0x15c8) == '\\0') || (*(extraout_ECX + 0x288d) == '\\0')) {\n                    fcn.00401192(extraout_ECX);\n                    iVar5 = extraout_ECX[0x2886];\n                    *(unaff_EBP + -0x18) = extraout_ECX[0x2887];\n                    *(unaff_EBP + -0x14) = extraout_ECX[0x2888];\n                    iVar8 = extraout_ECX[0x2889];\n                    *(unaff_EBP + -4) = 1;\n                    *(unaff_EBP + -0x10) = iVar8;\n                    while (iVar8 = fcn.00403662(),  iVar8 != 0) {\n                        if (extraout_ECX[0x15c7] != 3) {\n                            if ((extraout_ECX[0x15c7] == 2) && (*(extraout_ECX + 0x1a12) == '\\0')) {\n                                uVar4 = 1;\n                            }\n                            else {\n                                uVar4 = 0;\n                            }\n                            *(extraout_ECX + 0xa231) = uVar4;\n                            break;\n                        }\n                        iVar8 = fcn.0041a01b(extraout_ECX + 0x1ec8, 0x427478);\n                        if (iVar8 == 0) {\n                            *(extraout_ECX + 0xa22e) = 1;\n                        }\n                        *(extraout_ECX + 0xa231) = *(extraout_ECX + 0x22e2) == '\\0';\n                        fcn.004010c0();\n                    }\n                    piVar1 = *(unaff_EBP + -0x34);\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    extraout_ECX[0x2887] = *(unaff_EBP + -0x18);\n                    uVar7 = *(unaff_EBP + -0x28);\n                    extraout_ECX[0x2888] = *(unaff_EBP + -0x14);\n                    iVar8 = *(unaff_EBP + -0x10);\n                    uVar2 = *(unaff_EBP + -0x2c);\n                    extraout_ECX[0x2886] = iVar5;\n                    extraout_ECX[0x2889] = iVar8;\n                    (**(*piVar1 + 8))(uVar2, uVar7, 0);\n                }\n                if ((*(extraout_ECX + 0xa22d) == '\\0') || (*(extraout_ECX + 0xa231) != '\\0')) {\n                    fcn.0041a09a(extraout_ECX + 0xa272, extraout_ECX + 0x1e);\n                }\n                uVar7 = 1;\n                goto code_r0x00401784;\n            }\n        }\n    }\ncode_r0x004014a7:\n    uVar7 = 0;\ncode_r0x00401784:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar7;\n}\n",
        "token_count": 2238
    },
    "00401b51": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401b51(int32_t param_1)\n\n{\n    if (*(param_1 + 0x68ac) != 0) {\n        *(param_1 + 0x57dc) = ((*(param_1 + 0x68a1) == '\\0') - 1 & 0xfffffff0) + 0x20;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00401b73": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401b73(int32_t param_1, int32_t param_2)\n\n{\n    int16_t *piVar1;\n    \n    if (((*(param_1 + 0xa228) == 2) && (*(param_2 + 0x19) < 0x14)) && ((*(param_2 + 0x1c) & 0x10) != 0)) {\n        *(param_2 + 0x10e1) = 1;\n    }\n    if (*(param_2 + 0x10ec) == 2) {\n        *(param_2 + 0x1c) = ((*(param_2 + 0x10e1) == '\\0') - 1 & 0xfffffff0) + 0x20;\n    }\n    for (piVar1 = param_2 + 0x20; *piVar1 != 0; piVar1 = piVar1 + 1) {\n        if ((*piVar1 == 0x5c) && (*(param_1 + 0xa228) == 3)) {\n            *piVar1 = 0x5f;\n        }\n        if (*piVar1 == 0x3a) {\n            *piVar1 = 0x5f;\n        }\n        if ((*piVar1 == 0x2f) || ((*piVar1 == 0x5c && (*(param_1 + 0xa228) != 3)))) {\n            *piVar1 = 0x5c;\n        }\n    }\n    return;\n}\n",
        "token_count": 347
    },
    "00401c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00401c00(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = *(param_1 + 0x5740) + *(param_1 + 0xa238);\n    if (*(param_1 + 0xa228) == 2) {\n        uVar2 = *(param_1 + 0x5754);\n    }\n    else {\n        iVar1 = fcn.004010d4(*(param_1 + 0x5754));\n        uVar2 = iVar1 + *(param_1 + 0x5794);\n    }\n    return CONCAT14(CARRY4(uVar3, uVar2), uVar3 + uVar2);\n}\n",
        "token_count": 177
    },
    "00401c46": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401c46(int32_t param_1)\n\n{\n    char cVar1;\n    \n    if (*(*(param_1 + 0x56fc) + 0x4120) == '\\0') {\n        cVar1 = fcn.00410acb(2, param_1 + 0x1e, *(param_1 + 0x56fc) + 0x4020);\n        if (cVar1 == '\\0') {\n            fcn.004089d9();\n            fcn.004064c5(0xff);\n        }\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "00401c9f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_eh\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_6ch\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nuint fcn.00401c9f(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint arg_14h;\n    uint arg_10h;\n    uchar uVar3;\n    char cVar4;\n    ushort uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t *piVar10;\n    uint8_t uVar11;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t *piVar12;\n    int32_t iVar13;\n    uint *in_FS_OFFSET;\n    bool bVar14;\n    int64_t iVar15;\n    ulong uVar16;\n    uint var_880h;\n    uint var_80h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    fcn.00419d48();\n    fcn.0041a360();\n    fcn.0040b594(extraout_ECX);\n    cVar4 = *(extraout_ECX + 0x288d);\n    *(unaff_EBP + -4) = 0;\n    if (cVar4 == '\\0') {\ncode_r0x00401d2b:\n        *(unaff_EBP + -0xe) = 0;\ncode_r0x00401d58:\n        fcn.0040b326(7);\n        if (*(unaff_EBP + -0x34) == 0) goto code_r0x00401d0f;\n        uVar8 = fcn.0040b3d8();\n        extraout_ECX[0x15c9] = uVar8 & 0xffff;\n        *(extraout_ECX + 0x15cd) = 0;\n        uVar8 = fcn.0040b3c0();\n        uVar8 = uVar8 & 0xff;\n        uVar9 = fcn.0040b3d8();\n        extraout_ECX[0x15cb] = uVar9 & 0xffff;\n        *(extraout_ECX + 0x15cd) = (uVar9 & 0xffff) >> 0xe & 1;\n        uVar9 = fcn.0040b3d8();\n        uVar9 = uVar9 & 0xffff;\n        extraout_ECX[0x15cc] = uVar9;\n        extraout_ECX[0x15ca] = uVar8;\n        if (uVar9 < 7) {\ncode_r0x00401dc2:\n            fcn.00401af1();\n        }\n        else {\n            if (uVar8 == 0x73) {\n                extraout_ECX[0x15ca] = 1;\n            }\n            else if (uVar8 == 0x74) {\n                extraout_ECX[0x15ca] = 2;\n            }\n            else if (uVar8 == 0x7a) {\n                extraout_ECX[0x15ca] = 3;\n            }\n            else if (uVar8 == 0x7b) {\n                extraout_ECX[0x15ca] = 5;\n            }\n            iVar6 = extraout_ECX[0x15ca];\n            extraout_ECX[0x15c7] = iVar6;\n            if ((iVar6 == 0x75) || ((iVar6 == 1 && ((*(extraout_ECX + 0x15cb) & 2) != 0)))) {\n                var_14h = 6;\n            }\n            else {\n                var_14h = uVar9 - 7;\n            }\n            fcn.0040b326(var_14h);\n            uVar8 = fcn.004010d4(extraout_ECX[0x15cc]);\n            extraout_ECX[0x2888] = uVar8 + extraout_ECX[0x2886];\n            iVar6 = extraout_ECX[0x15ca];\n            extraout_ECX[0x2889] = extraout_ECX[0x2887] + CARRY4(uVar8, extraout_ECX[0x2886]);\n            if (iVar6 == 1) {\n                fcn.00409aae();\n                piVar10 = extraout_ECX + 0x15c9;\n                piVar12 = extraout_ECX + 0x15d2;\n                for (iVar6 = 5; iVar6 != 0; iVar6 = iVar6 + -1) {\n                    *piVar12 = *piVar10;\n                    piVar10 = piVar10 + 1;\n                    piVar12 = piVar12 + 1;\n                }\n                uVar5 = fcn.0040b3d8();\n                *(extraout_ECX + 0x15d7) = uVar5;\n                iVar6 = fcn.0040b40d();\n                uVar8 = extraout_ECX[0x15d4];\n                *(extraout_ECX + 0xa22d) = *(extraout_ECX + 0x15d4) & 1;\n                *(extraout_ECX + 0x288b) = uVar8 >> 3 & 1;\n                *(extraout_ECX + 0xa22f) = uVar8 >> 2 & 1;\n                *(extraout_ECX + 0xa233) = uVar8 >> 6 & 1;\n                extraout_ECX[0x15d8] = iVar6;\n                *(extraout_ECX + 0x288d) = uVar8 >> 7 & 1;\n                if ((iVar6 != 0) || (uVar3 = 0,  *(extraout_ECX + 0x15d7) != 0)) {\n                    uVar3 = 1;\n                }\n                *(extraout_ECX + 0x288c) = uVar3;\n                *(extraout_ECX + 0x15d9) = uVar8 >> 1 & 1;\n                *(extraout_ECX + 0xa231) = uVar8 >> 8 & 1;\n                *(extraout_ECX + 0xa232) = uVar8 >> 4 & 1;\n            }\n            else if (iVar6 < 2) {\ncode_r0x00402526:\n                if ((extraout_ECX[0x15cb] & 0x8000U) != 0) {\n                    uVar9 = fcn.0040b40d();\n                    puVar2 = extraout_ECX + 0x2888;\n                    uVar8 = *puVar2;\n                    *puVar2 = *puVar2 + uVar9;\n                    extraout_ECX[0x2889] = extraout_ECX[0x2889] + CARRY4(uVar8, uVar9);\n                }\n            }\n            else if (iVar6 < 4) {\n                *(unaff_EBP + -0xd) = iVar6 == 2;\n                piVar10 = extraout_ECX + 0x15f0;\n                if (*(unaff_EBP + -0xd) == '\\0') {\n                    piVar10 = extraout_ECX + 0x1ec0;\n                }\n                *(unaff_EBP + -0x14) = piVar10;\n                fcn.00409ad9(0);\n                piVar12 = extraout_ECX + 0x15c9;\n                for (iVar6 = 5; iVar6 != 0; iVar6 = iVar6 + -1) {\n                    *piVar10 = *piVar12;\n                    piVar12 = piVar12 + 1;\n                    piVar10 = piVar10 + 1;\n                }\n                iVar6 = *(unaff_EBP + -0x14);\n                *(iVar6 + 0x1088) = *(iVar6 + 8) & 1;\n                uVar8 = *(iVar6 + 8);\n                *(iVar6 + 0x1089) = uVar8 >> 1 & 1;\n                *(iVar6 + 0x108b) = uVar8 >> 2 & 1;\n                cVar4 = *(unaff_EBP + -0xd);\n                *(iVar6 + 0x1090) = uVar8 >> 10 & 1;\n                if ((cVar4 == '\\0') || ((uVar8 & 0x10) == 0)) {\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = 1;\n                }\n                cVar4 = *(unaff_EBP + -0xd);\n                puVar2 = *(unaff_EBP + -0x14);\n                *(puVar2 + 0x438) = uVar3;\n                if ((cVar4 == '\\0') && ((uVar8 & 0x10) != 0)) {\n                    uVar3 = 1;\n                }\n                else {\n                    uVar3 = 0;\n                }\n                *(puVar2 + 0x10ea) = uVar3;\n                bVar14 = (uVar8 & 0xe0) == 0xe0;\n                *(puVar2 + 0x10e1) = bVar14;\n                if (bVar14) {\n                    uVar9 = 0;\n                }\n                else {\n                    uVar9 = 0x10000 << (uVar8 >> 5 & 7);\n                }\n                *(puVar2 + 0x10e2) = uVar8 >> 3 & 1;\n                puVar2[0x439] = uVar9;\n                *(puVar2 + 0x10e3) = uVar8 >> 0xb & 1;\n                uVar8 = fcn.0040b40d();\n                puVar2[5] = uVar8;\n                uVar7 = fcn.0040b40d();\n                *(unaff_EBP + -0x1c) = uVar7;\n                uVar3 = fcn.0040b3c0();\n                *(puVar2 + 6) = uVar3;\n                puVar2[0x418] = 2;\n                uVar8 = fcn.0040b40d();\n                puVar2[0x419] = uVar8;\n                uVar7 = fcn.0040b40d();\n                *(unaff_EBP + -0x20) = uVar7;\n                uVar3 = fcn.0040b3c0();\n                *(puVar2 + 0x19) = uVar3;\n                cVar4 = fcn.0040b3c0();\n                *(puVar2 + 0x1a) = cVar4 + -0x30;\n                uVar8 = fcn.0040b3d8();\n                *(unaff_EBP + -0x18) = uVar8 & 0xffff;\n                uVar8 = fcn.0040b40d();\n                puVar2[0x423] = 0;\n                puVar2[7] = uVar8;\n                if (*(puVar2 + 0x108b) != '\\0') {\n                    cVar4 = *(puVar2 + 0x19);\n                    if (cVar4 == '\\r') {\n                        puVar2[0x423] = 1;\n                    }\n                    else if (cVar4 == '\\x0f') {\n                        puVar2[0x423] = 2;\n                    }\n                    else if ((cVar4 == '\\x14') || (cVar4 == '\\x1a')) {\n                        puVar2[0x423] = 3;\n                    }\n                    else {\n                        puVar2[0x423] = 4;\n                    }\n                }\n                uVar11 = *(puVar2 + 6);\n                puVar2[0x43b] = 2;\n                if ((uVar11 == 3) || (uVar11 == 5)) {\n                    puVar2[0x43b] = 1;\n                }\n                else if (uVar11 < 6) {\n                    puVar2[0x43b] = 0;\n                }\n                uVar7 = 0;\n                puVar2[0x43c] = 0;\n                if ((uVar11 == 3) && ((uVar8 & 0xf000) == 0xa000)) {\n                    puVar2[0x43c] = 1;\n                    *(puVar2 + 0x43d) = 0;\n                }\n                if ((*(unaff_EBP + -0xd) == '\\0') && (uVar8 < 0)) {\n                    uVar3 = 1;\n                }\n                else {\n                    uVar3 = 0;\n                }\n                *(puVar2 + 0x43a) = uVar3;\n                *(puVar2 + 0x10e9) = puVar2[2] >> 8 & 1;\n                if ((puVar2[2] & 0x100) == 0) {\n                    bVar14 = *(unaff_EBP + -0x1c) == -1;\n                    *(unaff_EBP + -0x14) = 0;\n                }\n                else {\n                    uVar7 = fcn.0040b40d();\n                    iVar6 = fcn.0040b40d();\n                    *(unaff_EBP + -0x14) = iVar6;\n                    if ((*(unaff_EBP + -0x1c) == -1) && (iVar6 == -1)) {\n                        bVar14 = true;\n                    }\n                    else {\n                        bVar14 = false;\n                    }\n                }\n                *(puVar2 + 0x108a) = bVar14;\n                iVar15 = fcn.0041a440(uVar7, 0, 0, 1);\n                uVar7 = *(unaff_EBP + -0x14);\n                puVar2[0x412] = iVar15 + 0x7a00;\n                puVar2[0x413] = iVar15 + 0x7a00 >> 0x20;\n                uVar16 = fcn.0041a440(uVar7, 0, 0, 1);\n                uVar8 = *(unaff_EBP + -0x1c);\n                puVar2[0x414] = uVar16 + *(unaff_EBP + -0x1c);\n                puVar2[0x415] = (uVar16 >> 0x20) + CARRY4(uVar16, uVar8);\n                if (*(puVar2 + 0x108a) != '\\0') {\n                    puVar2[0x414] = 0x7fffffff;\n                    puVar2[0x415] = 0x7fffffff;\n                }\n                iVar6 = 0x1fff;\n                if (*(unaff_EBP + -0x18) < 0x1fff) {\n                    iVar6 = *(unaff_EBP + -0x18);\n                }\n                fcn.0040b4f4(unaff_EBP + -0x2880, iVar6);\n                cVar4 = *(unaff_EBP + -0xd);\n                *(unaff_EBP + -0x2880 + iVar6) = 0;\n                if (cVar4 == '\\0') {\n                    *(unaff_EBP + -0x14) = puVar2 + 8;\n                    fcn.0041137d(unaff_EBP + -0x2880, puVar2 + 8, 0x800);\n                    iVar6 = puVar2[3] - *(unaff_EBP + -0x18);\n                    iVar13 = iVar6 + -0x20;\n                    if ((puVar2[2] & 0x400) != 0) {\n                        iVar13 = iVar6 + -0x28;\n                    }\n                    if (0 < iVar13) {\n                        fcn.00401c85(iVar13);\n                        fcn.0040b4f4(puVar2[0x408], iVar13);\n                        iVar6 = fcn.0041a01b(*(unaff_EBP + -0x14), 0x427480);\n                        if (iVar6 == 0) {\n                            uVar7 = *(puVar2[0x408] + 8);\n                            extraout_ECX[0x15c1] = 0;\n                            uVar16 = fcn.0041a440(uVar7, extraout_ECX[0x15c1], 0x200, 0);\n                            extraout_ECX[0x15c0] = uVar16;\n                            extraout_ECX[0x15c1] = uVar16 >> 0x20;\n                            uVar16 = (**(*extraout_ECX + 0xc))();\n                            uVar7 = uVar16 >> 0x20;\n                            iVar6 = extraout_ECX[0x15c1];\n                            *(unaff_EBP + -0x28) = uVar16;\n                            iVar13 = extraout_ECX[0x15c0];\n                            *(unaff_EBP + -0x24) = uVar7;\n                            iVar6 = fcn.004108e1(iVar13, iVar6, uVar16, uVar7);\n                            uVar7 = *(unaff_EBP + -0x24);\n                            extraout_ECX[0x15c2] = iVar6;\n                            arg_14h = *(unaff_EBP + -0x24);\n                            arg_10h = *(unaff_EBP + -0x28);\n                            uVar16 = fcn.0041a390(arg_10h, arg_14h, 200, 0, *(unaff_EBP + -0x28), uVar7);\n                            iVar13 = fcn.004108e1(uVar16 + extraout_ECX[0x15c0], \n                                                  (uVar16 >> 0x20) + extraout_ECX[0x15c1] +\n                                                  CARRY4(uVar16, extraout_ECX[0x15c0]), arg_10h, arg_14h);\n                            if (iVar6 < iVar13) {\n                                extraout_ECX[0x15c2] = iVar6 + 1;\n                            }\n                        }\n                    }\n                }\n                else {\n                    if ((puVar2[2] & 0x200) == 0) {\n                        *(unaff_EBP + -0x14) = puVar2 + 8;\n                        *(puVar2 + 8) = 0;\n                    }\n                    else {\n                        fcn.0040609a();\n                        iVar6 = fcn.0041a2d0(unaff_EBP + -0x2880);\n                        puVar1 = puVar2 + 8;\n                        *(unaff_EBP + -0x14) = puVar1;\n                        if (iVar6 == *(unaff_EBP + -0x18)) {\n                            fcn.00411512(unaff_EBP + -0x2880, puVar1, 0x7ff);\n                        }\n                        else {\n                            fcn.004060ab(unaff_EBP + -0x2880, unaff_EBP + -0x2880 + iVar6 + 1, \n                                         *(unaff_EBP + -0x18) - (iVar6 + 1), puVar1, 0x800);\n                        }\n                    }\n                    fcn.0041090c(unaff_EBP + -0x2880, unaff_EBP + -0x880, 0x800);\n                    fcn.0040a26e(unaff_EBP + -0x880, puVar2 + 8, puVar2 + 8, 0x800);\n                    fcn.00401b73(puVar2);\n                }\n                if ((puVar2[2] & 0x400) != 0) {\n                    fcn.0040b4f4(puVar2 + 0x1091, 8);\n                }\n                fcn.004112e3(*(unaff_EBP + -0x20));\n                if ((puVar2[2] & 0x1000) != 0) {\n                    uVar8 = fcn.0040b3d8();\n                    *(unaff_EBP + -0x4c) = 0;\n                    *(unaff_EBP + -0x18) = 0;\n                    *(unaff_EBP + -0x58) = extraout_ECX + 0x19fc;\n                    *(unaff_EBP + -0x54) = extraout_ECX + 0x19fe;\n                    *(unaff_EBP + -0x50) = extraout_ECX + 0x1a00;\n                    *(unaff_EBP + -0x24) = uVar8 & 0xffff;\n                    *(unaff_EBP + -0x1c) = 0xc;\n                    do {\n                        iVar6 = *(unaff_EBP + -0x58 + *(unaff_EBP + -0x18) * 4);\n                        uVar8 = *(unaff_EBP + -0x24) >> (*(unaff_EBP + -0x1c) & 0x1f);\n                        *(unaff_EBP + -0x20) = uVar8;\n                        if (((uVar8 & 8) != 0) && (iVar6 != 0)) {\n                            if (*(unaff_EBP + -0x18) != 0) {\n                                uVar7 = fcn.0040b40d();\n                                fcn.004112e3(uVar7);\n                            }\n                            fcn.00411159(unaff_EBP + -0x80);\n                            if ((*(unaff_EBP + -0x20) & 4) != 0) {\n                                *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x6c) + 1;\n                            }\n                            *(unaff_EBP + -0x68) = 0;\n                            uVar8 = *(unaff_EBP + -0x20) & 3;\n                            if (uVar8 != 0) {\n                                iVar6 = (3 - uVar8) * 8;\n                                *(unaff_EBP + -0x20) = uVar8;\n                                do {\n                                    uVar8 = fcn.0040b3c0();\n                                    uVar11 = iVar6;\n                                    iVar6 = iVar6 + 8;\n                                    *(unaff_EBP + -0x68) = *(unaff_EBP + -0x68) | (uVar8 & 0xff) << (uVar11 & 0x1f);\n                                    piVar10 = unaff_EBP + -0x20;\n                                    *piVar10 = *piVar10 + -1;\n                                } while (*piVar10 != 0);\n                            }\n                            fcn.00411220(unaff_EBP + -0x80);\n                        }\n                        *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -4;\n                        *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + 1;\n                    } while (-4 < *(unaff_EBP + -0x1c));\n                }\n                uVar8 = puVar2[0x412];\n                puVar1 = extraout_ECX + 0x2888;\n                uVar9 = *puVar1;\n                *puVar1 = *puVar1 + uVar8;\n                extraout_ECX[0x2889] = extraout_ECX[0x2889] + puVar2[0x413] + CARRY4(uVar9, uVar8);\n                *(unaff_EBP + -0x24) = *(puVar2 + 0x10e2);\n                uVar8 = fcn.0040b544(*(unaff_EBP + -0x24));\n                if (*puVar2 != (uVar8 & 0xffff)) {\n                    *(extraout_ECX + 0x288f) = 1;\n                    fcn.004062af(1);\n                    if (*(unaff_EBP + -0xe) == '\\0') {\n                        uVar7 = fcn.0040c1b1(0x68, *(unaff_EBP + -0x14));\n                        fcn.0040e0c1(extraout_ECX + 0x1e, uVar7);\n                    }\n                }\n            }\n            else {\n                if (iVar6 != 5) goto code_r0x00402526;\n                piVar10 = extraout_ECX + 0x15c9;\n                piVar12 = extraout_ECX + 0x1eb0;\n                for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n                    *piVar12 = *piVar10;\n                    piVar10 = piVar10 + 1;\n                    piVar12 = piVar12 + 1;\n                }\n                uVar8 = extraout_ECX[0x1eb2];\n                *(extraout_ECX + 0x1eb7) = *(extraout_ECX + 0x1eb2) & 1;\n                *(extraout_ECX + 0x7ade) = uVar8 >> 2 & 1;\n                *(extraout_ECX + 0x7add) = uVar8 >> 1 & 1;\n                *(extraout_ECX + 0x7adf) = uVar8 >> 3 & 1;\n                if ((uVar8 >> 1 & 1) != 0) {\n                    iVar6 = fcn.0040b40d();\n                    extraout_ECX[0x1eb5] = iVar6;\n                }\n                if (*(extraout_ECX + 0x7adf) != 0) {\n                    uVar8 = fcn.0040b3d8();\n                    extraout_ECX[0x1eb6] = uVar8 & 0xffff;\n                    extraout_ECX[0x2894] = uVar8 & 0xffff;\n                }\n            }\n            uVar8 = fcn.0040b544(0);\n            if (((extraout_ECX[0x15c9] == (uVar8 & 0xffff)) || (iVar6 = extraout_ECX[0x15ca],  iVar6 == 0x79)) ||\n               (iVar6 == 0x76)) {\ncode_r0x004026d8:\n                if ((extraout_ECX[0x2887] < extraout_ECX[0x2889]) ||\n                   ((extraout_ECX[0x2887] <= extraout_ECX[0x2889] &&\n                    (extraout_ECX[0x2886] <= extraout_ECX[0x2888] && extraout_ECX[0x2888] != extraout_ECX[0x2886])))) {\n                    uVar7 = *(unaff_EBP + -0x34);\n                    if (*(unaff_EBP + -0x48) != 0) {\n                        fcn.00419d72(*(unaff_EBP + -0x48));\n                    }\n                    goto code_r0x00402711;\n                }\n                goto code_r0x00401dc2;\n            }\n            if ((iVar6 == 5) && (*(extraout_ECX + 0x7ade) != '\\0')) {\n                fcn.00401192(extraout_ECX);\n                iVar6 = *extraout_ECX;\n                *(unaff_EBP + -4) = 1;\n                uVar16 = (**(iVar6 + 0xc))();\n                iVar6 = 7;\n                (**(*extraout_ECX + 8))(uVar16 - 7, (uVar16 >> 0x20) - (uVar16 < 7), 0);\n                *(unaff_EBP + -0xd) = 1;\n                do {\n                    cVar4 = fcn.00408bd3();\n                    if (cVar4 != '\\0') {\n                        *(unaff_EBP + -0xd) = 0;\n                    }\n                    iVar6 = iVar6 + -1;\n                } while (iVar6 != 0);\n                iVar6 = **(unaff_EBP + -0x58);\n                *(unaff_EBP + -4) = 0;\n                (**(iVar6 + 8))(*(unaff_EBP + -0x50), *(unaff_EBP + -0x4c), 0);\n                if (*(unaff_EBP + -0xd) != '\\0') goto code_r0x004026d8;\n            }\n            *(extraout_ECX + 0x288f) = 1;\n            fcn.004062af();\n            if (*(unaff_EBP + -0xe) == '\\0') goto code_r0x004026d8;\n            uVar7 = fcn.0040c1b1(0x7a, extraout_ECX + 0x1e);\n            fcn.0040e0c1(extraout_ECX + 0x1e, uVar7);\n            *(extraout_ECX + 0xa23d) = 1;\n        }\n    }\n    else {\n        uVar8 = 0xfffffff8 < extraout_ECX[0x288e];\n        if ((extraout_ECX[0x2887] < uVar8) ||\n           ((extraout_ECX[0x2887] <= uVar8 && (extraout_ECX[0x2886] <= extraout_ECX[0x288e] + 7U))))\n        goto code_r0x00401d2b;\n        *(unaff_EBP + -0xe) = 1;\n        fcn.00401c46();\n        iVar6 = (**(*extraout_ECX + 4))(unaff_EBP + -0x28, 8);\n        if (iVar6 == 8) {\n            fcn.00405f53(0, 4, extraout_ECX[0x15bf] + 0x4020, unaff_EBP + -0x28, 0, 0, 0, 0);\n            *(unaff_EBP + -0x2c) = extraout_ECX + 0x409;\n            goto code_r0x00401d58;\n        }\ncode_r0x00401d0f:\n        fcn.00401a9c();\n    }\n    if (*(unaff_EBP + -0x48) != 0) {\n        fcn.00419d72(*(unaff_EBP + -0x48));\n    }\n    uVar7 = 0;\ncode_r0x00402711:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar7;\n}\n",
        "token_count": 7231
    },
    "00402720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00402720(uint32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    int32_t iVar9;\n    int32_t extraout_ECX;\n    uint32_t extraout_EDX;\n    uint32_t extraout_EDX_00;\n    uint32_t extraout_EDX_01;\n    uint32_t uVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    uchar auStackY8388 [8192];\n    uchar auStackY196 [108];\n    uint uStackY88;\n    int32_t iVar13;\n    \n    iVar2 = param_1;\n    fcn.0041a360();\n    iVar3 = param_3;\n    uVar6 = *(param_1 + 0x14) - param_2;\n    if (*(param_1 + 0x18) <= uVar6) {\n        *(param_1 + 0x18) = uVar6;\n        uVar6 = *(param_1 + 0x14) - uVar6;\n        iVar13 = extraout_ECX;\n        while (1 < uVar6) {\n            iVar11 = fcn.0040b46b();\n            if (iVar11 == 0) {\n                return;\n            }\n            if (*(iVar2 + 0x14) == *(iVar2 + 0x18)) {\n                return;\n            }\n            if (0xffffffff < iVar11) {\n                return;\n            }\n            if ((-1 < iVar11) && (*(iVar2 + 0x14) - *(iVar2 + 0x18) < iVar11)) {\n                return;\n            }\n            uVar6 = 0x40279d;\n            iVar11 = fcn.0040b46b();\n            uVar10 = *(iVar2 + 0x14) - *(iVar2 + 0x18);\n            if ((*(iVar3 + 4) == 1) && (iVar11 == 1)) {\n                *(iVar3 + 0x1e) = 1;\n                uVar6 = 0x4027c2;\n                uVar7 = fcn.0040b46b();\n                if ((uVar7 & 1) != 0) {\n                    uVar6 = 0x4027d0;\n                    iVar12 = fcn.0040b46b();\n                    if (iVar12 != 0) {\n                        uVar1 = *(iVar13 + 0xa218);\n                        iVar9 = *(iVar13 + 0xa21c);\n                        *(iVar3 + 0x20) = uVar1 + iVar12;\n                        *(iVar3 + 0x24) = iVar9 + (iVar12 >> 0x20) + CARRY4(uVar1, iVar12);\n                    }\n                }\n                if ((uVar7 & 2) != 0) {\n                    uVar6 = 0x4027fe;\n                    iVar12 = fcn.0040b46b();\n                    if (iVar12 != 0) {\n                        uVar7 = *(iVar13 + 0xa218);\n                        iVar9 = *(iVar13 + 0xa21c);\n                        *(iVar3 + 0x30) = uVar7 + iVar12;\n                        *(iVar3 + 0x34) = iVar9 + (iVar12 >> 0x20) + CARRY4(uVar7, iVar12);\n                    }\n                }\n            }\n            uVar7 = iVar11;\n            if ((((*(iVar3 + 4) == 2) || (*(iVar3 + 4) == 3)) && (iVar11 >> 0x20 == 0)) && (uVar7 < 8)) {\n                if (uVar7 == 1) {\n                    iVar9 = fcn.0040b46b();\n                    if (iVar9 == 0) {\n                        uVar6 = fcn.0040b46b();\n                        *(iVar3 + 0x10b1) = uVar6 & 1;\n                        *(iVar3 + 0x10ba) = uVar6 >> 1 & 1;\n                        uVar6 = fcn.0040b3c0();\n                        *(iVar3 + 0x10dc) = uVar6 & 0xff;\n                        if (0x18 < (uVar6 & 0xff)) {\n                            fcn.00401b1c();\n                        }\n                        uVar6 = 0x10;\n                        fcn.0040b4f4();\n                        fcn.0040b4f4();\n                        if (*(iVar3 + 0x10b1) != '\\0') {\n                            fcn.0040b4f4();\n                            fcn.0040b4f4();\n                            fcn.00410488();\n                            fcn.0041078a(&stack0xffffff3c, iVar3 + 0x10b2, 8);\n                            fcn.00410803(&stack0xffffff3c, &stack0xffffffb4);\n                            uStackY88 = 0x402be9;\n                            iVar9 = fcn.0041a474(&stack0x0000000c, &stack0xffffffb4, 4);\n                            *(iVar3 + 0x10b1) = '\\x01' - (iVar9 != 0);\n                        }\n                        *(iVar3 + 0x1090) = 1;\n                        *(iVar3 + 0x108c) = 5;\n                        *(iVar3 + 0x108b) = 1;\n                    }\n                    else {\n                        uVar6 = iVar3 + 0x20;\n                        fcn.00401b1c();\n                    }\n                }\n                else if (uVar7 == 2) {\n                    uVar6 = 0x402af2;\n                    iVar9 = fcn.0040b46b();\n                    if (iVar9 == 0) {\n                        uVar6 = 0x20;\n                        *(iVar3 + 0x1060) = 3;\ncode_r0x00402b0d:\n                        fcn.0040b4f4();\n                    }\n                }\n                else if (uVar7 == 3) {\n                    if (8 < uVar10) {\n                        uVar6 = 0x402a40;\n                        uVar5 = fcn.0040b46b();\n                        uVar4 = uVar5 & 1;\n                        if ((uVar5 & 2) != 0) {\n                            if (uVar4 == 0) {\n                                fcn.0040b44a();\n                                uVar6 = extraout_EDX;\n                                fcn.004110e1();\n                            }\n                            else {\n                                fcn.0040b40d();\n                                uVar6 = 0;\n                                fcn.004110b5();\n                            }\n                        }\n                        if ((uVar5 & 4) != 0) {\n                            if (uVar4 == 0) {\n                                fcn.0040b44a();\n                                uVar6 = extraout_EDX_00;\n                                fcn.004110e1();\n                            }\n                            else {\n                                fcn.0040b40d();\n                                uVar6 = 0;\n                                fcn.004110b5();\n                            }\n                        }\n                        if ((uVar5 & 8) != 0) {\n                            if (uVar4 == 0) {\n                                fcn.0040b44a();\n                                uVar6 = extraout_EDX_01;\n                                fcn.004110e1();\n                            }\n                            else {\n                                fcn.0040b40d();\n                                uVar6 = 0;\n                                fcn.004110b5();\n                            }\n                        }\n                    }\n                }\n                else if (uVar7 == 4) {\n                    if (uVar10 != 0) {\n                        fcn.0040b46b();\n                        uVar6 = 0x4029e7;\n                        iVar9 = fcn.0040b46b();\n                        if (iVar9 != 0) {\n                            *(iVar3 + 0x10e3) = 1;\n                            fcn.004082d4();\n                            uVar6 = 0x800;\n                            fcn.004109a3(iVar13 + 0x57e0, &stack0xffffffac, 0x800);\n                        }\n                    }\n                }\n                else if (uVar7 == 5) {\n                    uVar8 = fcn.0040b46b();\n                    *(iVar3 + 0x10f0) = uVar8;\n                    uVar4 = fcn.0040b46b();\n                    *(iVar3 + 0x20f4) = uVar4 & 1;\n                    uVar6 = fcn.0040b46b();\n                    auStackY8388[0] = 0;\n                    if (uVar6 < 0x1fff) {\n                        fcn.0040b4f4();\n                        (&stack0xffffdf3c)[uVar6] = 0;\n                    }\n                    uVar6 = 0x800;\n                    fcn.00411512(&stack0xffffdf3c, iVar3 + 0x10f4, 0x800);\n                }\n                else if (uVar7 == 6) {\n                    uVar6 = 0x402895;\n                    uVar10 = fcn.0040b46b();\n                    *(iVar3 + 0x20f6) = uVar10 >> 2 & 1;\n                    *(iVar3 + 0x20f7) = uVar10 >> 3 & 1;\n                    *(iVar3 + 0x21f8) = 0;\n                    *(iVar3 + 0x20f8) = 0;\n                    if ((uVar10 & 1) != 0) {\n                        param_1 = fcn.0040b46b();\n                        if (0xfe < param_1) {\n                            param_1 = 0xff;\n                        }\n                        uVar6 = param_1;\n                        fcn.0040b4f4();\n                        (iVar3 + 0x20f8)[param_1] = 0;\n                    }\n                    if ((uVar10 & 2) != 0) {\n                        param_1 = fcn.0040b46b();\n                        if (0xfe < param_1) {\n                            param_1 = 0xff;\n                        }\n                        uVar6 = param_1;\n                        fcn.0040b4f4();\n                        *(iVar3 + 0x21f8 + param_1) = 0;\n                    }\n                    if (*(iVar3 + 0x20f6) != '\\0') {\n                        uVar6 = 0x402936;\n                        uVar8 = fcn.0040b46b();\n                        *(iVar3 + 0x22f8) = uVar8;\n                    }\n                    if (*(iVar3 + 0x20f7) != '\\0') {\n                        uVar6 = 0x40294c;\n                        uVar8 = fcn.0040b46b();\n                        *(iVar3 + 0x22fc) = uVar8;\n                    }\n                    *(iVar3 + 0x20f5) = 1;\n                }\n                else if (uVar7 == 7) {\n                    fcn.00401c85();\n                    uVar6 = uVar10;\n                    goto code_r0x00402b0d;\n                }\n            }\n            *(iVar2 + 0x18) = uVar6;\n            uVar6 = *(iVar2 + 0x14) - *(iVar2 + 0x18);\n        }\n    }\n    return;\n}\n",
        "token_count": 2597
    },
    "00402c2f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00402c2f(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint arg_10h;\n    char cVar2;\n    uint uVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    fcn.0041a360();\n    if (*(extraout_ECX + 0xa23c) == '\\0') {\n        if ((*(extraout_ECX + 0x7b1a) < 6) && (*(extraout_ECX + 0x7b19) <= (-(*(extraout_ECX + 0xa228) != 3) & 0x1dU)))\n        {\n            if (((*(extraout_ECX + 0x8b48) | *(extraout_ECX + 0x8b4c)) == 0) && (*(extraout_ECX + 0x8b89) == '\\0')) {\ncode_r0x00402cba:\n                uVar3 = 1;\n                goto code_r0x00402ee0;\n            }\n            fcn.0040b5b6();\n            fcn.004172c7(extraout_ECX + 0x1c30);\n            uVar3 = *(extraout_ECX + 0x8be4);\n            *(unaff_EBP + -4) = 0;\n            fcn.00411f36(uVar3, 0);\n            if (*(unaff_EBP + 0xc) == 0) {\n                if ((*(extraout_ECX + 0x8b54) < 0) ||\n                   ((*(extraout_ECX + 0x8b54) < 1 && (*(extraout_ECX + 0x8b50) < 0x1000001)))) {\n                    puVar1 = *(unaff_EBP + 8);\n                    fcn.00401c85(*(extraout_ECX + 0x8b50));\n                    fcn.0040b72c(*puVar1, *(extraout_ECX + 0x8b50));\n                    goto code_r0x00402d57;\n                }\n                uVar3 = fcn.0040c1b1(0x470);\n                fcn.0040e0c1(extraout_ECX + 0x1e, uVar3);\n            }\n            else {\ncode_r0x00402d57:\n                if (*(extraout_ECX + 0x8b8b) != '\\0') {\n                    if (*(*(extraout_ECX + 0x56fc) + 0x4120) == '\\0') goto code_r0x00402d22;\n                    fcn.0040b6e1(0, *(extraout_ECX + 0x8b8c), *(extraout_ECX + 0x56fc) + 0x4020, \n                                 -(*(extraout_ECX + 0x8b90) != '\\0') & extraout_ECX + 0x8b91U, extraout_ECX + 0x8ba1, \n                                 *(extraout_ECX + 0x8bdc), extraout_ECX + 0x8bb2, extraout_ECX + 0x8bbb);\n                }\n                fcn.0040981a(*(extraout_ECX + 0x8b60), 1);\n                uVar3 = *(unaff_EBP + 0xc);\n                *(extraout_ECX + 0x1c54) = *(extraout_ECX + 0x8b4c);\n                *(extraout_ECX + 0x1c50) = *(extraout_ECX + 0x8b48);\n                *(extraout_ECX + 0x1c58) = 0;\n                fcn.0040b6c1(extraout_ECX, uVar3);\n                *(extraout_ECX + 0x3487) = *(extraout_ECX + 0x8b89);\n                *(extraout_ECX + 0x1c6c) = 0;\n                *(extraout_ECX + 0x1c68) = extraout_ECX + 0x7b00;\n                cVar2 = *(extraout_ECX + 0x7b1a);\n                uVar3 = *(extraout_ECX + 0x8b50);\n                arg_10h = *(extraout_ECX + 0x8b54);\n                *(unaff_EBP + -0x9acc) = uVar3;\n                *(unaff_EBP + -0x9ac8) = arg_10h;\n                *(unaff_EBP + -0x9ab4) = 0;\n                if (cVar2 == '\\0') {\n                    fcn.00407362(extraout_ECX + 0x1c30, uVar3, arg_10h);\n                }\n                else {\n                    fcn.00418730(*(extraout_ECX + 0x7b19), 0);\n                }\n                cVar2 = fcn.00409a7e(extraout_ECX + 0x8b60, -(*(extraout_ECX + 0x8bba) != '\\0') & extraout_ECX + 0x8bbbU\n                                    );\n                if (cVar2 != '\\0') {\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    fcn.00415240();\n                    goto code_r0x00402cba;\n                }\n                uVar3 = fcn.0040c1b1(0x471, extraout_ECX + 0x7b20);\n                fcn.0040e0c1(extraout_ECX + 0x1e, uVar3);\n                fcn.004062af(3);\n                if (*(unaff_EBP + 8) != 0) {\n                    fcn.0041228a();\n                }\n            }\ncode_r0x00402d22:\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00415240();\n        }\n        else {\n            uVar3 = fcn.0040c1b1(0x470);\n            fcn.0040e0c1(extraout_ECX + 0x1e, uVar3);\n        }\n    }\n    else {\n        uVar3 = fcn.0040c1b1(0x46f);\n        fcn.0040e0c1(extraout_ECX + 0x1e, uVar3);\n        fcn.004062af(3);\n    }\n    uVar3 = 0;\ncode_r0x00402ee0:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 1549
    },
    "00402ef1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00402ef1(void)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    uint uVar10;\n    int32_t *extraout_ECX;\n    int32_t iVar11;\n    int32_t unaff_EBP;\n    int32_t *piVar12;\n    uint *in_FS_OFFSET;\n    int64_t iVar13;\n    ulong uVar14;\n    int32_t iVar15;\n    \n    fcn.00419d48();\n    fcn.0041a360();\n    fcn.0040b594(extraout_ECX);\n    cVar2 = *(extraout_ECX + 0x288d);\n    *(unaff_EBP + -4) = 0;\n    if (cVar2 == '\\0') {\ncode_r0x00402f74:\n        *(unaff_EBP + 0x53) = 0;\ncode_r0x00403002:\n        fcn.0040b326(7);\n        *(extraout_ECX + 0x15cd) = 0;\n        piVar12 = extraout_ECX + 0x15c9;\n        iVar5 = fcn.0040b40d();\n        *piVar12 = iVar5;\n        iVar5 = fcn.0040b4ce(4);\n        iVar13 = fcn.0040b46b();\n        if ((iVar13 == 0) || (iVar5 == 0)) {\ncode_r0x00403638:\n            fcn.00401a9c();\n        }\n        else {\n            iVar5 = iVar13 + iVar5;\n            iVar11 = iVar5 + -3;\n            uVar8 = iVar5 + 4;\n            if ((-1 < iVar11) && (6 < uVar8)) {\n                fcn.0040b326(iVar11);\n                if (*(unaff_EBP + 0x3c) < uVar8) goto code_r0x00403638;\n                uVar10 = fcn.0040b574();\n                *(unaff_EBP + 0x4c) = uVar10;\n                iVar5 = fcn.0040b46b();\n                extraout_ECX[0x15ca] = iVar5;\n                uVar6 = fcn.0040b46b();\n                extraout_ECX[0x15cb] = uVar6;\n                *(extraout_ECX + 0x15cd) = uVar6 >> 2 & 1;\n                extraout_ECX[0x15c7] = extraout_ECX[0x15ca];\n                iVar5 = *(unaff_EBP + 0x4c);\n                extraout_ECX[0x15cc] = uVar8;\n                *(unaff_EBP + 0x4b) = *piVar12 != iVar5;\n                if (*(unaff_EBP + 0x4b) != '\\0') {\n                    fcn.00401af1();\n                    *(extraout_ECX + 0x288f) = 1;\n                    fcn.004062af(3);\n                    if (*(unaff_EBP + 0x53) != '\\0') {\n                        uVar10 = fcn.0040c1b1(0x7a, extraout_ECX + 0x1e);\n                        fcn.0040e0c1(extraout_ECX + 0x1e, uVar10);\n                        *(extraout_ECX + 0xa23d) = 1;\n                        goto code_r0x0040363f;\n                    }\n                }\n                uVar3 = *(extraout_ECX + 0x15cb);\n                *(unaff_EBP + 0x18) = 0;\n                *(unaff_EBP + 0x1c) = 0;\n                if ((uVar3 & 1) != 0) {\n                    uVar14 = fcn.0040b46b();\n                    iVar5 = uVar14 >> 0x20;\n                    *(unaff_EBP + 0x18) = uVar14;\n                    uVar8 = extraout_ECX[0x15cc];\n                    *(unaff_EBP + 0x1c) = iVar5;\n                    if ((iVar5 != 0) || (uVar8 <= *(unaff_EBP + 0x18))) {\n                        fcn.00401af1();\n                        goto code_r0x00402f6c;\n                    }\n                }\n                uVar3 = *(extraout_ECX + 0x15cb);\n                *(unaff_EBP + 0x20) = 0;\n                *(unaff_EBP + 0x24) = 0;\n                if ((uVar3 & 2) != 0) {\n                    uVar14 = fcn.0040b46b();\n                    *(unaff_EBP + 0x20) = uVar14;\n                    *(unaff_EBP + 0x24) = uVar14 >> 0x20;\n                }\n                uVar6 = fcn.004010d4(extraout_ECX[0x15cc]);\n                uVar7 = uVar6 + extraout_ECX[0x2886];\n                uVar8 = *(unaff_EBP + 0x20);\n                iVar5 = *(unaff_EBP + 0x24);\n                extraout_ECX[0x2888] = uVar7 + *(unaff_EBP + 0x20);\n                iVar11 = extraout_ECX[0x15ca];\n                extraout_ECX[0x2889] =\n                     extraout_ECX[0x2887] + CARRY4(uVar6, extraout_ECX[0x2886]) + iVar5 + CARRY4(uVar7, uVar8);\n                if (iVar11 == 1) {\n                    fcn.00409aae();\n                    piVar9 = extraout_ECX + 0x15d2;\n                    for (iVar5 = 5; iVar5 != 0; iVar5 = iVar5 + -1) {\n                        *piVar9 = *piVar12;\n                        piVar12 = piVar12 + 1;\n                        piVar9 = piVar9 + 1;\n                    }\n                    uVar8 = fcn.0040b46b();\n                    *(extraout_ECX + 0xa22d) = uVar8 & 1;\n                    *(extraout_ECX + 0x288b) = uVar8 >> 2 & 1;\n                    *(extraout_ECX + 0xa22f) = uVar8 >> 4 & 1;\n                    *(extraout_ECX + 0xa233) = uVar8 >> 3 & 1;\n                    *(extraout_ECX + 0x288c) = 0;\n                    *(extraout_ECX + 0xa232) = 1;\n                    if ((uVar8 & 2) == 0) {\n                        extraout_ECX[0x2894] = 0;\n                    }\n                    else {\n                        iVar5 = fcn.0040b46b();\n                        extraout_ECX[0x2894] = iVar5;\n                    }\n                    if ((*(extraout_ECX + 0xa22d) == '\\0') || (extraout_ECX[0x2894] != 0)) {\n                        uVar4 = 0;\n                    }\n                    else {\n                        uVar4 = 1;\n                    }\n                    *(extraout_ECX + 0xa231) = uVar4;\n                    if ((*(unaff_EBP + 0x18) | *(unaff_EBP + 0x1c)) != 0) {\n                        fcn.00402720(unaff_EBP + 0x28, *(unaff_EBP + 0x18), extraout_ECX + 0x15d2);\n                    }\n                }\n                else if (1 < iVar11) {\n                    if (iVar11 < 4) {\n                        piVar9 = extraout_ECX + 0x15f0;\n                        if (iVar11 != 2) {\n                            piVar9 = extraout_ECX + 0x1ec0;\n                        }\n                        *(unaff_EBP + 0x4c) = piVar9;\n                        fcn.00409ad9(0);\n                        uVar10 = *(unaff_EBP + 0x20);\n                        for (iVar5 = 5; iVar5 != 0; iVar5 = iVar5 + -1) {\n                            *piVar9 = *piVar12;\n                            piVar12 = piVar12 + 1;\n                            piVar9 = piVar9 + 1;\n                        }\n                        iVar11 = extraout_ECX[0x15ca];\n                        iVar5 = *(unaff_EBP + 0x4c);\n                        *(iVar5 + 0x1048) = uVar10;\n                        uVar10 = *(unaff_EBP + 0x24);\n                        *(unaff_EBP + 0x53) = iVar11 == 2;\n                        *(iVar5 + 0x10e9) = 1;\n                        *(iVar5 + 0x104c) = uVar10;\n                        uVar10 = fcn.0040b46b();\n                        *(iVar5 + 0x1084) = uVar10;\n                        uVar14 = fcn.0040b46b();\n                        *(iVar5 + 0x1050) = uVar14;\n                        uVar8 = *(iVar5 + 0x1084) >> 3;\n                        *(iVar5 + 0x1054) = uVar14 >> 0x20;\n                        *(iVar5 + 0x108a) = uVar8 & 1;\n                        if ((uVar8 & 1) != 0) {\n                            *(iVar5 + 0x1050) = 0x7fffffff;\n                            *(iVar5 + 0x1054) = 0x7fffffff;\n                        }\n                        iVar11 = *(iVar5 + 0x104c);\n                        iVar15 = *(iVar5 + 0x1054);\n                        uVar8 = *(iVar5 + 0x1048);\n                        if ((iVar11 < iVar15) || ((iVar11 <= iVar15 && (uVar8 <= *(iVar5 + 0x1050))))) {\n                            iVar11 = iVar15;\n                            uVar8 = *(iVar5 + 0x1050);\n                        }\n                        *(iVar5 + 0x1058) = uVar8;\n                        *(iVar5 + 0x105c) = iVar11;\n                        uVar10 = fcn.0040b46b();\n                        *(iVar5 + 0x1c) = uVar10;\n                        if ((*(iVar5 + 0x1084) & 2) != 0) {\n                            uVar10 = fcn.0040b40d();\n                            fcn.004110b5(uVar10, 0);\n                        }\n                        *(iVar5 + 0x1060) = 0;\n                        if ((*(iVar5 + 0x1084) & 4) != 0) {\n                            *(iVar5 + 0x1060) = 2;\n                            uVar10 = fcn.0040b40d();\n                            *(iVar5 + 0x1064) = uVar10;\n                        }\n                        *(iVar5 + 0x10f0) = 0;\n                        uVar8 = fcn.0040b46b();\n                        *(unaff_EBP + 0x4c) = uVar8;\n                        *(iVar5 + 0x1a) = uVar8 >> 7 & 7;\n                        *(iVar5 + 0x19) = uVar8 & 0x3f;\n                        uVar4 = fcn.0040b46b();\n                        *(iVar5 + 0x18) = uVar4;\n                        uVar8 = fcn.0040b46b();\n                        puVar1 = iVar5 + 0x10ec;\n                        *(iVar5 + 0x10e8) = extraout_ECX[0x15cb] >> 6 & 1;\n                        *puVar1 = 2;\n                        if (*(iVar5 + 0x18) == '\\x01') {\n                            *puVar1 = 1;\n                        }\n                        else if (*(iVar5 + 0x18) == '\\0') {\n                            *puVar1 = 0;\n                        }\n                        uVar6 = *(iVar5 + 8);\n                        *(iVar5 + 0x1088) = uVar6 >> 3 & 1;\n                        cVar2 = *(unaff_EBP + 0x53);\n                        *(iVar5 + 0x1089) = uVar6 >> 4 & 1;\n                        *(iVar5 + 0x10ea) = uVar6 >> 5 & 1;\n                        if ((cVar2 == '\\0') || ((*(unaff_EBP + 0x4c) & 0x40) == 0)) {\n                            uVar4 = 0;\n                        }\n                        else {\n                            uVar4 = 1;\n                        }\n                        *(iVar5 + 0x10e0) = uVar4;\n                        uVar3 = *(iVar5 + 0x1084) & 1;\n                        *(iVar5 + 0x10e4) = ~-(uVar3 != 0) & 0x20000 << (*(unaff_EBP + 0x4c) >> 10 & 0xf);\n                        *(iVar5 + 0x10e1) = uVar3;\n                        *(iVar5 + 0x108c) = -(*(iVar5 + 0x108b) != '\\0') & 5;\n                        if (0x1ffe < uVar8) {\n                            uVar8 = 0x1fff;\n                        }\n                        fcn.0040b4f4(unaff_EBP + -0x207c, uVar8);\n                        *(unaff_EBP + -0x207c + uVar8) = 0;\n                        iVar11 = iVar5 + 0x20;\n                        iVar15 = unaff_EBP + -0x207c;\n                        fcn.00411512(iVar15, iVar11, 0x7ff);\n                        if ((*(unaff_EBP + 0x18) | *(unaff_EBP + 0x1c)) != 0) {\n                            iVar15 = unaff_EBP + 0x28;\n                            fcn.00402720(iVar15, *(unaff_EBP + 0x18), iVar5);\n                        }\n                        if (*(unaff_EBP + 0x53) != '\\0') {\n                            fcn.00401b73();\n                            iVar15 = iVar5;\n                        }\n                        if (*(unaff_EBP + 0x4b) != '\\0') {\n                            uVar10 = fcn.0040c1b1(0x68, iVar11, iVar15);\n                            fcn.0040e0c1(extraout_ECX + 0x1e, uVar10);\n                        }\n                    }\n                    else {\n                        if (iVar11 == 4) {\n                            piVar9 = extraout_ECX + 0x15e2;\n                            for (iVar5 = 5; iVar5 != 0; iVar5 = iVar5 + -1) {\n                                *piVar9 = *piVar12;\n                                piVar12 = piVar12 + 1;\n                                piVar9 = piVar9 + 1;\n                            }\n                            iVar5 = fcn.0040b46b();\n                            if (iVar5 == 0) {\n                                uVar3 = fcn.0040b46b();\n                                *(extraout_ECX + 0x15e7) = uVar3 & 1;\n                                uVar8 = fcn.0040b3c0();\n                                extraout_ECX[0x15e8] = uVar8 & 0xff;\n                                if ((uVar8 & 0xff) < 0x19) {\n                                    fcn.0040b4f4(extraout_ECX + 0x15e9, 0x10);\n                                    if (*(extraout_ECX + 0x15e7) != '\\0') {\n                                        fcn.0040b4f4(extraout_ECX + 0x15ed, 8);\n                                        fcn.0040b4f4(unaff_EBP + 0x4c, 4);\n                                        fcn.00410488(unaff_EBP + -0x7c);\n                                        fcn.0041078a(unaff_EBP + -0x7c, extraout_ECX + 0x15ed, 8);\n                                        fcn.00410803(unaff_EBP + -0x7c, unaff_EBP);\n                                        iVar5 = fcn.0041a474(unaff_EBP + 0x4c, unaff_EBP, 4);\n                                        *(extraout_ECX + 0x15e7) = '\\x01' - (iVar5 != 0);\n                                    }\n                                    *(extraout_ECX + 0x288d) = 1;\n                                    goto code_r0x004035fb;\n                                }\n                            }\n                            fcn.00401b1c();\n                            goto code_r0x0040363f;\n                        }\n                        if (iVar11 == 5) {\n                            piVar9 = extraout_ECX + 0x1eb0;\n                            for (; iVar11 != 0; iVar11 = iVar11 + -1) {\n                                *piVar9 = *piVar12;\n                                piVar12 = piVar12 + 1;\n                                piVar9 = piVar9 + 1;\n                            }\n                            uVar3 = fcn.0040b46b();\n                            *(extraout_ECX + 0x1eb7) = uVar3 & 1;\n                            *(extraout_ECX + 0x7adf) = 0;\n                            *(extraout_ECX + 0x7add) = 0;\n                            *(extraout_ECX + 0x7ade) = 0;\n                        }\n                    }\n                }\ncode_r0x004035fb:\n                if ((extraout_ECX[0x2887] < extraout_ECX[0x2889]) ||\n                   ((extraout_ECX[0x2887] <= extraout_ECX[0x2889] &&\n                    (extraout_ECX[0x2886] <= extraout_ECX[0x2888] && extraout_ECX[0x2888] != extraout_ECX[0x2886])))) {\n                    uVar10 = *(unaff_EBP + 0x3c);\n                    if (*(unaff_EBP + 0x28) != 0) {\n                        fcn.00419d72(*(unaff_EBP + 0x28));\n                    }\n                    goto code_r0x00403650;\n                }\n            }\n            fcn.00401af1();\n        }\ncode_r0x0040363f:\n        iVar5 = *(unaff_EBP + 0x28);\n    }\n    else {\n        uVar8 = 0xfffffff7 < extraout_ECX[0x288e];\n        if ((extraout_ECX[0x2887] < uVar8) ||\n           ((extraout_ECX[0x2887] <= uVar8 && (extraout_ECX[0x2886] <= extraout_ECX[0x288e] + 8U))))\n        goto code_r0x00402f74;\n        *(unaff_EBP + 0x53) = 1;\n        fcn.00401c46();\n        iVar5 = (**(*extraout_ECX + 4))(unaff_EBP + 0x10, 0x10);\n        if (iVar5 == 0x10) {\n            fcn.00405f53(0, 5, extraout_ECX[0x15bf] + 0x4020, extraout_ECX + 0x15e9, unaff_EBP + 0x10, \n                         extraout_ECX[0x15e8], 0, unaff_EBP + 0x20);\n            if ((*(extraout_ECX + 0x15e7) != '\\0') &&\n               (iVar5 = fcn.0041a474(unaff_EBP + 0x20, extraout_ECX + 0x15ed, 8),  iVar5 != 0)) {\n                uVar10 = fcn.0040c1b1(0xc9);\n                fcn.0040e0c1(extraout_ECX + 0x1e, uVar10);\n                *(extraout_ECX + 0xa23d) = 1;\n                fcn.004062af();\n                goto code_r0x00402f6c;\n            }\n            *(unaff_EBP + 0x44) = extraout_ECX + 0x409;\n            goto code_r0x00403002;\n        }\n        fcn.00401a9c();\ncode_r0x00402f6c:\n        iVar5 = *(unaff_EBP + 0x28);\n    }\n    if (iVar5 != 0) {\n        fcn.00419d72(*(unaff_EBP + 0x28));\n    }\n    uVar10 = 0;\ncode_r0x00403650:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar10;\n}\n",
        "token_count": 4758
    },
    "00403662": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00403662(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    ulong uVar2;\n    \n    if (*(param_1 + 0xa23d) == '\\0') {\n        uVar2 = (**(*param_1 + 0xc))();\n        param_1[0x2886] = uVar2;\n        param_1[0x2887] = uVar2 >> 0x20;\n        if (param_1[0x288a] == 2) {\n            piVar1 = fcn.00401c9f();\n        }\n        else {\n            piVar1 = param_1;\n            if (param_1[0x288a] == 3) {\n                piVar1 = fcn.00402ef1();\n            }\n        }\n        if (piVar1 == NULL) {\n            return NULL;\n        }\n        if (param_1[0x2887] < param_1[0x2889]) {\n            return piVar1;\n        }\n        if ((param_1[0x2887] <= param_1[0x2889]) &&\n           (param_1[0x2886] <= param_1[0x2888] && param_1[0x2888] != param_1[0x2886])) {\n            return piVar1;\n        }\n        fcn.00401af1();\n    }\n    return NULL;\n}\n",
        "token_count": 322
    },
    "0040372a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040372a(int32_t param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    while( true ) {\n        iVar2 = fcn.00403662();\n        if ((iVar2 == 0) || (*(param_1 + 0x571c) == 5)) {\n            return 0;\n        }\n        if ((*(param_1 + 0x571c) == 3) && (cVar1 = fcn.0040117b(param_2),  cVar1 != '\\0')) break;\n        fcn.004010c0();\n    }\n    return iVar2;\n}\n",
        "token_count": 153
    },
    "00404e36": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404e36(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int32_t unaff_EBP;\n    uint32_t uVar1;\n    \n    arg_8h = *(param_1 + 4);\n    for (uVar1 = *(param_1 + 8); 0x1ff < uVar1; uVar1 = uVar1 - 0x200) {\n        fcn.00404c45(arg_8h, 0x40);\n        arg_8h = unaff_EBP + 0x200;\n        unaff_EBP = arg_8h;\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00404e94": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404e94(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    uint var_70h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = arg_8h;\n    var_4h = *(arg_8h + 0xb48);\n    uVar5 = 0x200 - var_4h;\n    if ((var_4h != 0) && (uVar5 <= arg_10h)) {\n        fcn.0041bb00(var_4h + 0x948 + arg_8h, arg_ch, uVar5);\n        arg_8h = arg_8h + 0x948;\n        var_10h = 8;\n        do {\n            fcn.00404c45(arg_8h, 0x40);\n            arg_8h = arg_8h + 0x40;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n        arg_ch = arg_ch + uVar5;\n        arg_10h = arg_10h - uVar5;\n        var_4h = 0;\n    }\n    if (arg_10h < 0x1000) {\n        arg_8h = 1;\n    }\n    else {\n        arg_8h = *(iVar1 + 0xb50);\n        if ((arg_8h == 6) || (arg_8h == 7)) {\n            arg_8h = 4;\n        }\n    }\n    var_8h = 0;\n    iVar4 = var_4h;\n    do {\n        var_10h = 0;\n        if (arg_8h != 0) {\n            iVar3 = var_8h * 0x108 + iVar1;\n            iVar2 = var_8h * 0x40 + arg_ch;\n            piVar6 = &var_70h;\n            do {\n                iVar4 = var_4h;\n                var_ch = iVar2;\n                if (7 < var_8h) break;\n                piVar6[2] = arg_10h;\n                piVar6[1] = iVar2;\n                *piVar6 = iVar3;\n                if (arg_8h < 2) {\n                    fcn.00404e36();\n                }\n                else {\n                    fcn.00410e94(0x404e88, piVar6);\n                }\n                var_8h = var_8h + 1;\n                iVar2 = var_ch + 0x40;\n                iVar3 = iVar3 + 0x108;\n                var_10h = var_10h + 1;\n                piVar6 = piVar6 + 3;\n                iVar4 = var_4h;\n                var_ch = iVar2;\n            } while (var_10h < arg_8h);\n        }\n        if (*(iVar1 + 0xb4c) != 0) {\n            fcn.00410d91();\n        }\n        if (7 < var_8h) {\n            uVar5 = arg_10h & 0x1ff;\n            if (uVar5 != 0) {\n                fcn.0041bb00(iVar4 + 0x948 + iVar1, arg_ch + (arg_10h - uVar5), uVar5);\n            }\n            *(iVar1 + 0xb48) = iVar4 + uVar5;\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 848
    },
    "00405107": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405107(uint arg_8h, uint arg_ch, ushort *arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_ch_00;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *arg_8h_00;\n    bool bVar6;\n    uint var_458h;\n    uint auStack1112 [255];\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint *var_4ch;\n    ushort *var_3ch;\n    uint var_38h;\n    uint var_28h;\n    uint var_24h;\n    \n    arg_8h_00 = &var_458h;\n    if (arg_14h != 0) {\n        fcn.0041a09a(arg_8h_00, arg_14h);\n        iVar2 = fcn.0041a052(arg_8h_00);\n        iVar3 = auStack1112 + iVar2 * 2 + -2;\n        fcn.0041a09a(iVar3, arg_14h);\n        iVar3 = fcn.0041a052(iVar3);\n        arg_8h_00 = auStack1112 + iVar3 * 2 + iVar2 * 2;\n    }\n    arg_ch_00 = fcn.0040c1b1(0xa2);\n    fcn.0041a09a(arg_8h_00, arg_ch_00);\n    iVar3 = fcn.0041a052(arg_8h_00);\n    iVar3 = arg_8h_00 + iVar3 * 2 + 2;\n    fcn.0041a09a(iVar3, 0x427550);\n    iVar2 = fcn.0041a052(iVar3);\n    *(iVar3 + 2 + iVar2 * 2) = 0;\n    fcn.0041a0c0(&var_58h, 0, 0x58);\n    pcVar1 = _sym.imp.COMDLG32.dll_GetOpenFileNameW;\n    var_54h = arg_8h;\n    var_50h = *0x42f768;\n    var_4ch = &var_458h;\n    var_58h = 0x58;\n    var_28h = arg_ch;\n    var_3ch = arg_10h;\n    var_38h = 0x800;\n    var_24h = 0x1080c;\n    if (arg_18h == '\\0') {\n        uVar4 = (*_sym.imp.COMDLG32.dll_GetOpenFileNameW)(&var_58h);\n    }\n    else {\n        uVar4 = (*_sym.imp.COMDLG32.dll_GetSaveFileNameW)();\n    }\n    bVar6 = uVar4 == 0;\n    uVar5 = uVar4;\n    if (bVar6) {\n        uVar5 = (*_sym.imp.COMDLG32.dll_CommDlgExtendedError)();\n        if (uVar5 == 0x3002) {\n            *arg_10h = 0;\n            if (arg_18h == '\\0') {\n                uVar5 = (*pcVar1)(&var_58h);\n                uVar4 = uVar5;\n            }\n            else {\n                uVar5 = (*_sym.imp.COMDLG32.dll_GetSaveFileNameW)();\n                uVar4 = uVar5;\n            }\n        }\n        bVar6 = uVar4 == 0;\n    }\n    return uVar5 & 0xffffff00 | !bVar6;\n}\n",
        "token_count": 826
    },
    "0040521b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.0040521b(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h)\n\n{\n    char cVar1;\n    ushort *puVar2;\n    uint arg_8h_00;\n    uint var_1004h;\n    uint uStackY60;\n    uint uStackY56;\n    uint *arg_8h_01;\n    uint arg_10h_00;\n    \n    fcn.0041a360();\n    fcn.0040a301(arg_10h, 0);\n    fcn.00410ae1();\ncode_r0x00405302:\n    do {\n        cVar1 = fcn.00410b8d(&fcn.0040521b::var_1004h, 0x800);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        puVar2 = fcn.00409fb8();\n        cVar1 = fcn.00409ff3();\n        if (arg_ch == '\\0') {\n            if (cVar1 != '\\0') {\n                fcn.0041a06c(&fcn.0040521b::var_1004h, 0x427550);\n            }\n        }\n        else if (cVar1 == '\\0') {\n            fcn.0040a2c4();\n            cVar1 = fcn.00409fd2();\n            if (cVar1 != '\\0') goto code_r0x00405302;\n        }\n        else {\n            *puVar2 = 0;\n        }\n        if ((var_1004h == 0x2a) && (cVar1 = fcn.00409ff3(),  cVar1 != '\\0')) {\n            uStackY56 = 0x4052e0;\n            fcn.00410976();\n        }\n        arg_8h_01 = &fcn.0040521b::var_1004h;\n        arg_10h_00 = 0;\n        uStackY56 = 0x4052f8;\n        arg_8h_00 = fcn.0040a301(arg_8h_01, 0);\n        uStackY60 = 0x4052fe;\n        cVar1 = fcn.00409d20(arg_8h_00, arg_8h_01, arg_10h_00);\n        if (cVar1 != '\\0') {\n            return 1;\n        }\n    } while( true );\n}\n",
        "token_count": 565
    },
    "004056f7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004056f7(uint param_1, uint param_2, uint *param_3, uint32_t param_4, int32_t param_5)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uchar *puVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    bool bVar10;\n    uchar auStackY131116 [130372];\n    uint auStack660 [39];\n    uchar auStack504 [264];\n    uint auStack240 [39];\n    uint32_t auStack84 [5];\n    uchar auStack64 [16];\n    uchar uStack48;\n    uchar auStack44 [16];\n    uchar auStack28 [16];\n    uint uStack12;\n    uint32_t uStack8;\n    \n    iVar5 = 0;\n    uVar8 = 0;\n    uStack12 = param_1;\n    do {\n        cVar2 = fcn.0040cd82(param_3);\n        if (cVar2 != '\\0') {\n            if (param_5 == 0) {\n                bVar10 = *(uVar8 + 0x42f3d2) == '\\0';\n            }\n            else {\n                if (*(uVar8 + 0x42f3d2) == '\\0') goto code_r0x00405752;\n                iVar4 = fcn.0041a474(uVar8 + 0x42f3d3, param_5, 8);\n                bVar10 = iVar4 == 0;\n            }\n            if (bVar10) {\n                fcn.0041bb00(auStack28, iVar5 * 300 + 0x42f2b0, 0x10);\n                fcn.0041bb00(auStack44, iVar5 * 300 + 0x42f2c0, 0x10);\n                goto code_r0x0040591e;\n            }\n        }\ncode_r0x00405752:\n        uVar8 = uVar8 + 300;\n        iVar5 = iVar5 + 1;\n        if (0x4af < uVar8) {\n            fcn.004113b8(param_4, auStack504, 0x108);\n            iVar5 = fcn.0041a052(param_4);\n            iVar5 = iVar5 * 2;\n            if (param_5 != 0) {\n                fcn.0041bb00(auStack504 + iVar5, param_5, 8);\n                iVar5 = iVar5 + 8;\n            }\n            fcn.004102b2(auStack240);\n            uStack8 = 0;\n            do {\n                fcn.004102e3(auStack240, auStack504, iVar5, 0);\n                param_4._0_3_ = uStack8 & 0xff00ff;\n                param_4._0_2_ = uStack8 & 0xff | (uStack8 >> 8) << 8;\n                param_4 = param_4 & 0xff000000 | param_4 & 0xffff0000 | param_4;\n                fcn.004102e3(auStack240, &param_4, 3, 0);\n                uVar8 = uStack8 & 0x80003fff;\n                bVar10 = uVar8 == 0;\n                if (uVar8 < 0) {\n                    bVar10 = (uVar8 - 1 | 0xffffc000) == 0xffffffff;\n                }\n                if (bVar10) {\n                    puVar6 = auStack240;\n                    puVar9 = auStack660;\n                    for (iVar4 = 0x27; iVar4 != 0; iVar4 = iVar4 + -1) {\n                        *puVar9 = *puVar6;\n                        puVar6 = puVar6 + 1;\n                        puVar9 = puVar9 + 1;\n                    }\n                    fcn.00410397(auStack660, auStack64, 0);\n                    auStack44[uStack8 + (uStack8 >> 0x1f & 0x3fffU) >> 0xe] = uStack48;\n                }\n                uStack8 = uStack8 + 1;\n            } while (uStack8 < 0x40000);\n            fcn.00410397(auStack240, auStack84, 0);\n            uVar8 = *0x42f2a8;\n            iVar5 = 0;\n            do {\n                uVar1 = *(auStack84 + iVar5);\n                puVar7 = auStack28 + iVar5;\n                iVar4 = 0;\n                do {\n                    uVar3 = iVar4;\n                    iVar4 = iVar4 + 8;\n                    *puVar7 = uVar1 >> (uVar3 & 0x1f);\n                    puVar7 = puVar7 + 1;\n                } while (iVar4 < 0x20);\n                iVar5 = iVar5 + 4;\n            } while (iVar5 < 0x10);\n            iVar5 = *0x42f2a8 * 300;\n            puVar6 = iVar5 + 0x42f2d0;\n            for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar6 = *param_3;\n                param_3 = param_3 + 1;\n                puVar6 = puVar6 + 1;\n            }\n            *puVar6 = *param_3;\n            *(iVar5 + 0x42f3d2) = param_5 != 0;\n            if (param_5 != 0) {\n                fcn.0041bb00(iVar5 + 0x42f3d3, param_5, 8);\n                uVar8 = *0x42f2a8;\n            }\n            fcn.0041bb00(uVar8 * 300 + 0x42f2b0, auStack28, 0x10);\n            fcn.0041bb00(*0x42f2a8 * 300 + 0x42f2c0, auStack44, 0x10);\n            *0x42f2a8 = *0x42f2a8 + 1 & 3;\n            fcn.0040ccb3(auStack504, 0x108);\ncode_r0x0040591e:\n            fcn.0040ca60(param_2, auStack28, 0x80, auStack44);\n            fcn.0040ccb3(auStack28, 0x10);\n            fcn.0040ccb3(auStack44, 0x10);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 1526
    },
    "00405e36": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00405e36(int32_t param_1, uint param_2, uint param_3)\n\n{\n    if (*(param_1 + 0x5e4) - 4U < 2) {\n        fcn.0040caf6(param_2, param_3, param_2);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "00405e5e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405e5e(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_20h;\n    \n    piVar1 = arg_8h;\n    if (*arg_8h == 2) {\n        fcn.00404897(arg_8h[1], &arg_8h);\n        fcn.0040598a(arg_ch, 0x20, &arg_8h, 4, &var_20h);\n        uVar3 = 0;\n        piVar1[1] = 0;\n        uVar2 = 0;\n        do {\n            uVar3 = uVar3 ^ *(&var_20h + uVar2) << ((uVar2 & 3) << 3);\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0x20);\n        piVar1[1] = uVar3;\n    }\n    if (*piVar1 == 3) {\n        fcn.0040598a(arg_ch, 0x20, piVar1 + 1, 0x20, &var_20h);\n        fcn.0041bb00(piVar1 + 1, &var_20h, 0x20);\n    }\n    return;\n}\n",
        "token_count": 311
    },
    "00405f53": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00405f53(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_180h;\n    uint var_100h;\n    \n    if ((*(arg_10h + 0x100) == '\\0') || (arg_ch == 0)) {\n        uVar1 = 0;\n    }\n    else {\n        *(in_ECX + 0x5e4) = arg_ch;\n        fcn.0040ccfe(&var_100h, 0x80);\n        fcn.0041133e(&var_100h, &var_180h, 0x80);\n        if (arg_ch == 4) {\n            fcn.004056f7(arg_8h, arg_10h, &var_100h, arg_14h);\n        }\n        else if (arg_ch == 5) {\n            fcn.00405be2(arg_8h, arg_10h, &var_100h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h);\n        }\n        fcn.0040ccb3(&var_180h, 0x80);\n        fcn.0040ccb3(&var_100h, 0x100);\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 352
    },
    "004060ab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004060ab(int32_t arg_8h, uint8_t *arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar1 = *arg_ch;\n    uVar6 = 1;\n    uVar4 = 0;\n    if (1 < arg_10h) {\n        do {\n            if (arg_18h <= uVar4) goto code_r0x00406184;\n            uVar7 = uVar6;\n            if (*(in_ECX + 8) == 0) {\n                *(in_ECX + 4) = arg_ch[uVar6];\n                uVar7 = uVar6 + 1;\n                *(in_ECX + 8) = 8;\n            }\n            uVar3 = *(in_ECX + 4) >> 6;\n            if (uVar3 == 0) {\n                *(arg_14h + uVar4 * 2) = arg_ch[uVar7];\n                uVar4 = uVar4 + 1;\n                uVar6 = uVar7 + 1;\n            }\n            else if (uVar3 == 1) {\n                *(arg_14h + uVar4 * 2) = arg_ch[uVar7] + uVar1 * 0x100;\n                uVar4 = uVar4 + 1;\n                uVar6 = uVar7 + 1;\n            }\n            else if (uVar3 == 2) {\n                *(arg_14h + uVar4 * 2) = arg_ch[uVar7 + 1] * 0x100 + arg_ch[uVar7];\n                uVar4 = uVar4 + 1;\n                uVar6 = uVar7 + 2;\n            }\n            else {\n                uVar6 = uVar7;\n                if (uVar3 == 3) {\n                    uVar3 = arg_ch[uVar7];\n                    uVar6 = uVar7 + 1;\n                    if (uVar3 < '\\0') {\n                        uVar2 = arg_ch[uVar6];\n                        uVar6 = uVar7 + 2;\n                        var_ch = (uVar3 & 0x7f) + 2;\n                        if (var_ch != 0) {\n                            do {\n                                if (arg_18h <= uVar4) break;\n                                var_ch = var_ch + -1;\n                                *(arg_14h + uVar4 * 2) = (*(uVar4 + arg_8h) + uVar2 & 0xff) + uVar1 * 0x100;\n                                uVar4 = uVar4 + 1;\n                            } while (0 < var_ch);\n                        }\n                    }\n                    else {\n                        iVar5 = uVar3 + 2;\n                        for (; (0 < iVar5 && (uVar4 < arg_18h)); uVar4 = uVar4 + 1) {\n                            *(arg_14h + uVar4 * 2) = *(uVar4 + arg_8h);\n                            iVar5 = iVar5 + -1;\n                        }\n                    }\n                }\n            }\n            *(in_ECX + 4) = *(in_ECX + 4) << 2;\n            *(in_ECX + 8) = *(in_ECX + 8) + -2;\n        } while (uVar6 < arg_10h);\n    }\n    if (arg_18h <= uVar4) {\ncode_r0x00406184:\n        uVar4 = arg_18h - 1;\n    }\n    *(arg_14h + uVar4 * 2) = 0;\n    return;\n}\n",
        "token_count": 906
    },
    "00406235": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406235(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint lpBuffer;\n    uint uStackY28;\n    uint uStackY24;\n    uint uStackY20;\n    \n    fcn.0041a360();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (iVar2 == 3) {\n        uVar3 = fcn.0041a052(arg_8h);\n        cVar1 = fcn.0040a6b4();\n        if (cVar1 == '\\0') {\n            uStackY20 = 0x800;\n            uStackY24 = 0x406277;\n            (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)();\n            uStackY20 = 0x406283;\n            iVar2 = fcn.0041a052(&fcn.00406235::lpBuffer);\n            uVar3 = uVar3 + 1 + iVar2;\n        }\n        if (0x104 < uVar3) {\n            uStackY20 = 0x40629d;\n            uStackY20 = fcn.0040c1b1();\n            uStackY24 = 0x427558;\n            uStackY28 = 0x4062a8;\n            fcn.0040e0c1();\n        }\n    }\n    return;\n}\n",
        "token_count": 315
    },
    "004062af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004062af(int32_t *param_1, int32_t param_2)\n\n{\n    if (param_2 == 1) {\ncode_r0x004062c2:\n        if (*param_1 != 0) goto code_r0x004062c9;\n    }\n    else {\n        if (param_2 == 2) {\n            if ((*param_1 == 0) || (*param_1 == 1)) {\n                *param_1 = 2;\n            }\n            goto code_r0x004062c9;\n        }\n        if (param_2 == 0xff) goto code_r0x004062c2;\n    }\n    *param_1 = param_2;\ncode_r0x004062c9:\n    param_1[1] = param_1[1] + 1;\n    return;\n}\n",
        "token_count": 191
    },
    "004062e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004062e2(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = arg_8h;\n    if ((arg_8h != 0xff) || (*(in_ECX + 8) != '\\0')) {\n        fcn.004062af(arg_8h);\n        arg_8h = iVar1;\n        fcn.0041c172(&arg_8h, 0x42a0d4);\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "00406333": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00406333(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0xb) == '\\0') {\n        uVar1 = fcn.0040c1b1(0x85, param_2);\n        fcn.0040e0c1(0, uVar1);\n    }\n    fcn.004062e2(2);\n    return;\n}\n",
        "token_count": 104
    },
    "00406362": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406362(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uint lpText;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    uVar1 = fcn.0041a360();\n    if (*(extraout_ECX + 9) == '\\0') {\n        uStack16 = arg_8h;\n        uStack20 = 0x83;\n        uStack24 = 0x406384;\n        uStack24 = fcn.0040c1b1();\n        puStack32 = &fcn.00406362::lpText;\n        uStack28 = 0x900;\n        uStack36 = 0x406396;\n        fcn.004082d4();\n        uStack20 = 0x40639f;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uStack20 = 0x35;\n        uStack24 = 0x96;\n        uStack28 = 0x4063ad;\n        uStack28 = fcn.0040c1b1();\n        puStack32 = &fcn.00406362::lpText;\n        uStack36 = *0x43d9f4;\n        uStack40 = 0x4063c1;\n        iVar3 = (*_sym.imp.USER32.dll_MessageBoxW)();\n        uStack44 = 0x4063ce;\n        uStack40 = uVar2;\n        uVar1 = (*_sym.imp.KERNEL32.dll_SetLastError)();\n        uVar1 = uVar1 & 0xffffff00 | iVar3 == 4;\n    }\n    else {\n        uVar1 = uVar1 & 0xffffff00;\n    }\n    return uVar1;\n}\n",
        "token_count": 441
    },
    "004063da": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004063da(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0xb) == '\\0') {\n        uVar1 = fcn.0040c1b1(0x204, param_2);\n        fcn.0040e0c1(0, uVar1);\n    }\n    fcn.004062e2(2);\n    return;\n}\n",
        "token_count": 104
    },
    "00406633": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406633(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t arg_10h_00;\n    uint32_t arg_10h_01;\n    uchar auStackY8196 [8168];\n    uint uStackY28;\n    \n    fcn.0041a360();\n    arg_10h_01 = *(arg_8h + 0x8b24);\n    if (*(arg_8h + 0xa228) == 2) {\n        arg_10h_00 = arg_10h_01 >> 1;\n        if (arg_10h - 1U <= arg_10h_01 >> 1) {\n            arg_10h_00 = arg_10h - 1U;\n        }\n        uStackY28 = 0x406673;\n        fcn.004113e8(*(arg_8h + 0x8b20), arg_ch, arg_10h_00);\n        *(arg_ch + arg_10h_00 * 2) = 0;\n    }\n    else {\n        if (0x1ffe < arg_10h_01) {\n            arg_10h_01 = 0x1fff;\n        }\n        fcn.0041bb00(&stack0xffffdffc, *(arg_8h + 0x8b20), arg_10h_01);\n        (&stack0xffffdffc)[arg_10h_01] = 0;\n        fcn.00411512(&stack0xffffdffc, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 363
    },
    "004066b9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004066b9(uint arg_8h, uint arg_ch)\n\n{\n    int16_t *arg_8h_00;\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1070h;\n    uint lpCreationTime;\n    uint lpLastAccessTime;\n    uint lpLastWriteTime;\n    uint var_1030h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    fcn.0041a360();\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    if ((*arg_8h_00 == 0) || (arg_8h_00[1] != 0)) {\n        var_ch = 0x802;\n        iVar3 = unaff_EBP + -0x307c;\n    }\n    else {\n        fcn.0041a09a(unaff_EBP + -0x307c, 0x4275b4);\n        var_ch = 0x800;\n        iVar3 = unaff_EBP + -0x3078;\n    }\n    fcn.00410976(iVar3, arg_8h_00, var_ch);\n    fcn.00406633(*(unaff_EBP + 8), unaff_EBP + -0x407c, 0x800);\n    if (*(unaff_EBP + -0x407c) == 0x3a) {\n        fcn.004109a3(unaff_EBP + -0x307c, unaff_EBP + -0x407c, 0x802);\n        fcn.0040659a();\n        cVar1 = fcn.00409651(arg_8h_00, unaff_EBP + -0x2078, 0);\n        if ((*(unaff_EBP + -0x1070) & 1) != 0) {\n            fcn.00409036(arg_8h_00, *(unaff_EBP + -0x1070) & 0xfffffffe);\n        }\n        fcn.00408765();\n        *(unaff_EBP + -4) = 0;\n        cVar2 = fcn.004089a4(unaff_EBP + -0x307c, 9);\n        if (cVar2 != '\\0') {\n            cVar2 = fcn.00402c2f(0, unaff_EBP + -0x1030);\n            if (cVar2 != '\\0') {\n                fcn.004089d9();\n            }\n        }\n        fcn.00408765();\n        *(unaff_EBP + -4) = 1;\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.004087a2(arg_8h_00, 5);\n            if (cVar1 != '\\0') {\n                (*_sym.imp.KERNEL32.dll_SetFileTime)\n                          (*(unaff_EBP + -0x509c), unaff_EBP + -0x1050, unaff_EBP + -0x1048, unaff_EBP + -0x1040);\n            }\n        }\n        fcn.00409036(arg_8h_00, *(unaff_EBP + -0x1070));\n        *(unaff_EBP + -4) = 0;\n        fcn.00408c21();\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00408c21();\n    }\n    else {\n        fcn.004062af(3);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 854
    },
    "00406915": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t __cdecl fcn.00406915(uint arg_8h, uint lpFileName, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint8_t uVar8;\n    int16_t iVar9;\n    int32_t unaff_EBP;\n    uint *arg_8h_00;\n    uint *in_FS_OFFSET;\n    uint var_1024h;\n    uint var_101ch;\n    uint var_1016h;\n    uint var_24h;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    fcn.0041a360();\n    if (*0x42f762 == '\\0') {\n        fcn.004065c2(0x427564);\n        fcn.004065c2(L\"SeCreateSymbolicLinkPrivilege\");\n        *0x42f762 = '\\x01';\n    }\n    fcn.004092f3(*(unaff_EBP + 0xc), 1);\n    iVar1 = *(unaff_EBP + 0x10);\n    if ((*(iVar1 + 0x10e1) == '\\0') && (*(iVar1 + 0x20f4) == '\\0')) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(unaff_EBP + 0xc), 0x40000000, 0, 0, 1, 0x80, 0);\n        if (uVar2 == 0xffffffff) {\ncode_r0x00406a4b:\n            uVar2 = uVar2 & 0xffffff00;\n            goto code_r0x00406b91;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar2);\n    }\n    else {\n        uVar2 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(*(unaff_EBP + 0xc), 0);\n        if (uVar2 == 0) goto code_r0x00406a4b;\n    }\n    fcn.004012e7(0x1418);\n    *(unaff_EBP + -4) = 0;\n    fcn.00410976(unaff_EBP + -0x1024, iVar1 + 0x10f4, 0x800);\n    uVar3 = fcn.0041a052(unaff_EBP + -0x1024);\n    *(unaff_EBP + 0x10) = uVar3;\n    iVar6 = unaff_EBP + -0x1024;\n    *(unaff_EBP + -0x10) = unaff_EBP + -0x2024;\n    iVar4 = fcn.0041c259(iVar6, 0x4275c8, 4);\n    if (iVar4 != 0) {\ncode_r0x00406a52:\n        iVar5 = *(unaff_EBP + -0x10);\n    }\n    else {\n        iVar6 = unaff_EBP + -0x101c;\n        iVar5 = fcn.0041c259(iVar6, L\"UNC\\\\\", 4);\n        if (iVar5 != 0) goto code_r0x00406a52;\n        *(unaff_EBP + -0x2024) = 0x5c;\n        iVar5 = unaff_EBP + -0x2022;\n        iVar6 = unaff_EBP + -0x1016;\n    }\n    fcn.0041a09a(iVar5, iVar6);\n    uVar2 = fcn.0041a052(unaff_EBP + -0x2024);\n    iVar6 = *(iVar1 + 0x10f0);\n    *(unaff_EBP + -0x10) = uVar2;\n    if (iVar6 == 3) {\n        arg_8h_00 = *(unaff_EBP + -0x20);\n        iVar9 = *(unaff_EBP + 0x10);\n        *(arg_8h_00 + 1) = (uVar2 + iVar9) * 2 + 0xc;\n        *(arg_8h_00 + 6) = 0;\n        *(arg_8h_00 + 2) = 0;\n        iVar9 = iVar9 * 2;\n        *arg_8h_00 = 0xa0000003;\n        *(arg_8h_00 + 10) = iVar9;\n        fcn.0041a09a(arg_8h_00 + 4, unaff_EBP + -0x1024);\n        *(arg_8h_00 + 0xe) = *(unaff_EBP + -0x10) * 2;\n        iVar6 = *(unaff_EBP + 0x10);\n        *(arg_8h_00 + 3) = iVar9 + 2;\n        fcn.0041a09a(arg_8h_00 + iVar6 * 2 + 0x12, unaff_EBP + -0x2024);\ncode_r0x00406b65:\n        iVar6 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(unaff_EBP + 0xc), 0xc0000000, 0, 0, 3, 0x2200000, 0);\n        if (iVar6 != -1) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_DeviceIoControl)\n                              (iVar6, 0x900a4, arg_8h_00, *(arg_8h_00 + 1) + 8, 0, 0, unaff_EBP + -0x24, 0);\n            if (iVar4 == 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar6);\n                uVar3 = *(unaff_EBP + 0xc);\n                uVar7 = fcn.0040c1b1(0xdc, uVar3);\n                fcn.0040e0c1(0, uVar7);\n                iVar6 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                if (iVar6 == 0x522) {\n                    uVar3 = fcn.0040c1b1(0xe1, uVar3);\n                    fcn.0040e0c1(0, uVar3);\n                }\n                fcn.00401000();\n                fcn.004062af(9);\n                if (*(iVar1 + 0x10e1) == '\\0') {\n                    (*_sym.imp.KERNEL32.dll_DeleteFileW)(*(unaff_EBP + 0xc));\n                }\n                else {\n                    (*_sym.imp.KERNEL32.dll_RemoveDirectoryW)();\n                }\n                uVar8 = 0;\n            }\n            else {\n                fcn.00408765();\n                *(unaff_EBP + -4) = 1;\n                fcn.004089d9();\n                *(unaff_EBP + -0x3044) = iVar6;\n                iVar6 = *(unaff_EBP + 8);\n                fcn.00408cde(-(*(iVar6 + 0x628c) != 0) & iVar1 + 0x1030U, -(*(iVar6 + 0x6290) != 0) & iVar1 + 0x1038U, \n                             -(*(iVar6 + 0x6294) != 0) & iVar1 + 0x1040U);\n                fcn.004089d9();\n                if (*(iVar6 + 0x519b) == '\\0') {\n                    fcn.00409036(*(unaff_EBP + 0xc), *(iVar1 + 0x1c));\n                }\n                *(unaff_EBP + -4) = 0;\n                fcn.00408c21();\n                uVar8 = 1;\n            }\n            uVar2 = fcn.00419d72(arg_8h_00);\n            uVar2 = uVar2 & 0xffffff00 | uVar8;\n            goto code_r0x00406b91;\n        }\ncode_r0x00406b87:\n        uVar2 = fcn.00419d72(arg_8h_00);\n    }\n    else {\n        if ((iVar6 == 2) || (iVar6 == 1)) {\n            arg_8h_00 = *(unaff_EBP + -0x20);\n            iVar9 = *(unaff_EBP + 0x10);\n            *(arg_8h_00 + 1) = (uVar2 + iVar9) * 2 + 0x10;\n            *(arg_8h_00 + 6) = 0;\n            *(arg_8h_00 + 2) = 0;\n            *(arg_8h_00 + 10) = iVar9 * 2;\n            *arg_8h_00 = 0xa000000c;\n            fcn.0041a09a(arg_8h_00 + 5, unaff_EBP + -0x1024);\n            *(arg_8h_00 + 3) = *(unaff_EBP + 0x10) * 2 + 2;\n            *(arg_8h_00 + 0xe) = *(unaff_EBP + -0x10) * 2;\n            fcn.0041a09a(arg_8h_00 + *(unaff_EBP + 0x10) * 2 + 0x16, unaff_EBP + -0x2024);\n            arg_8h_00[4] = iVar4 != 0;\n            goto code_r0x00406b65;\n        }\n        if (*(unaff_EBP + -0x20) != 0) {\n            arg_8h_00 = *(unaff_EBP + -0x20);\n            goto code_r0x00406b87;\n        }\n    }\n    uVar2 = uVar2 & 0xffffff00;\ncode_r0x00406b91:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 2352
    },
    "00406cdd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406cdd(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 0x5188) != '\\0') {\n        iVar1 = fcn.0041a01b(param_2 + 0x7b20, 0x427618);\n        if (iVar1 == 0) {\n            fcn.00406848(param_2, param_3);\n        }\n    }\n    iVar1 = fcn.0041a01b(param_2 + 0x7b20, 0x427610);\n    if (iVar1 == 0) {\n        fcn.004066b9(param_2, param_1);\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "00406d35": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint32_t fcn.00406d35(uint param_1, uint param_2, uint32_t param_3, uint param_4)\n\n{\n    if (*(param_3 + 0xa228) == 3) {\n        param_3 = fcn.00406915(param_1, param_4, param_3 + 0x57c0);\n    }\n    else {\n        param_3 = param_3 & 0xffffff00;\n    }\n    return param_3;\n}\n",
        "token_count": 109
    },
    "00406d5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406d5c(int32_t arg_8h, uint noname_1, uint arg_10h, int16_t *arg_14h, uint arg_18h)\n\n{\n    int16_t *piVar1;\n    bool bVar2;\n    char cVar3;\n    int16_t iVar4;\n    ushort *puVar5;\n    uint in_stack_ffffffc8;\n    \n    piVar1 = arg_8h + 0x1012;\n    fcn.00410976(arg_14h, piVar1, arg_18h);\n    if (*piVar1 != 0) {\n        puVar5 = fcn.00409fb8(piVar1);\n        cVar3 = fcn.00409ff3(*puVar5);\n        if (cVar3 == '\\0') {\n            fcn.0040a018(arg_14h, arg_18h);\n        }\n    }\n    iVar4 = *(arg_8h + 0x72b2);\n    if (((*(arg_8h + 0x5154) == 4) && (iVar4 == 0x58)) && (cVar3 = fcn.0040a00b(0x3a),  cVar3 != '\\0')) {\n        bVar2 = true;\n        *arg_14h = 0;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((iVar4 == 0x45) || (*(arg_8h + 0x5154) == 1)) {\n        in_stack_ffffffc8 = fcn.0040a2c4(arg_10h, arg_18h);\n    }\n    fcn.004109a3(arg_14h, in_stack_ffffffc8, arg_10h);\n    iVar4 = sub.USER32.dll_CharUpperW(*arg_14h);\n    if (bVar2) {\n        if (((arg_14h[1] == 0x5f) && (cVar3 = fcn.00409ff3(arg_14h[2]),  cVar3 != '\\0')) && (iVar4 - 0x41U < 0x1a)) {\n            iVar4 = 0x3a;\n        }\n        else {\n            if (*arg_14h != 0x5f) {\n                return;\n            }\n            if (arg_14h[1] != 0x5f) {\n                return;\n            }\n            *arg_14h = 0x5c;\n            iVar4 = 0x5c;\n        }\n        arg_14h[1] = iVar4;\n    }\n    return;\n}\n",
        "token_count": 585
    },
    "00406e47": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406e47(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint32_t arg_8h_01;\n    int32_t iVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = arg_ch;\n    arg_8h_01 = arg_8h;\n    if (*(arg_8h + 0x51c1) != '\\0') {\n        return;\n    }\n    arg_8h_00 = in_ECX + 0x4be8;\n    arg_ch = fcn.00409272(arg_8h_00, *(arg_8h + 0x519b) == '\\0', *(arg_ch + 0x57dc));\n    if (arg_ch != 0) {\n        uVar2 = fcn.0040924e(arg_8h_00);\n        arg_8h = arg_8h & 0xffffff | uVar2 << 0x18;\n        if (uVar2 == 0) {\ncode_r0x00406ee3:\n            fcn.004092f3(arg_8h_00, 1);\n            arg_ch = fcn.00409272(arg_8h_00, *(arg_8h_01 + 0x519b) == '\\0', *(iVar1 + 0x57dc));\n        }\n        else {\n            uVar4 = fcn.00408fea(arg_8h_00);\n            cVar3 = fcn.00408fc5(uVar4);\n            if (cVar3 == '\\0') {\n                fcn.0040857d(arg_8h_01, 0, arg_8h_00, 0x800, *(arg_8h_01 + 0x512c), &arg_8h + 3, *(iVar1 + 0x6810), \n                             *(iVar1 + 0x6814), iVar1 + 0x67f0, 0);\n                arg_8h = arg_8h & 0xffffff;\n            }\n            if (arg_8h._3_1_ == '\\0') goto code_r0x00406ee3;\n        }\n        if (arg_ch != 0) {\n            if (arg_8h._3_1_ == '\\0') {\n                uVar4 = fcn.0040c1b1(0x79, arg_8h_00);\n                fcn.0040e0c1(iVar1 + 0x1e, uVar4);\n                fcn.00406235(arg_8h_00);\n                fcn.00401000();\n                fcn.004062af(9);\n                goto code_r0x00406f6b;\n            }\n            if (*(arg_8h_01 + 0x519b) == '\\0') {\n                fcn.00409036(arg_8h_00, *(iVar1 + 0x57dc));\n            }\n        }\n    }\n    *(in_ECX + 0x4be7) = 1;\ncode_r0x00406f6b:\n    if (*(in_ECX + 0x4be7) != '\\0') {\n        fcn.004090de(arg_8h_00, -(*(arg_8h_01 + 0x628c) != 0) & iVar1 + 0x67f0U, \n                     -(*(arg_8h_01 + 0x6290) != 0) & iVar1 + 0x67f8U, -(*(arg_8h_01 + 0x6294) != 0) & iVar1 + 0x6800U);\n    }\n    return;\n}\n",
        "token_count": 851
    },
    "00406fbd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint32_t __cdecl fcn.00406fbd(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t arg_28h;\n    uint *puVar1;\n    uint *puVar2;\n    uint16_t uVar3;\n    int32_t arg_8h_00;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t extraout_ECX;\n    uint var_1008h;\n    uint var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    fcn.0041a360();\n    iVar4 = arg_ch;\n    arg_8h_00 = arg_8h;\n    uVar3 = *(arg_8h + 0x72b2);\n    uVar5 = uVar3;\n    _auStack8 = 0x1000000;\n    if (((uVar3 == 0x45) || (uVar3 == 0x58)) && (*(arg_8h + 0x51c1) == '\\0')) {\n        arg_28h = arg_ch + 0x67f0;\n        puVar1 = arg_ch + 0x6814;\n        puVar2 = arg_ch + 0x6810;\n        arg_ch = extraout_ECX + 0x4be8;\n        uVar5 = fcn.0040857d(arg_8h, arg_10h, arg_ch, 0x800, *(arg_8h + 0x512c), &arg_8h + 3, *puVar2, *puVar1, arg_28h\n                             , 1);\n        if (uVar5 == '\\0') {\n            _auStack8 = 0;\n            if (arg_8h._3_1_ == '\\0') {\n                fcn.0040645f();\n                fcn.004062af();\n                uVar5 = fcn.0040a09f();\n                if (uVar5 == '\\0') {\n                    fcn.0040c1b1();\n                    fcn.0040e0c1();\n                    fcn.00410976();\n                    fcn.0040a113();\n                    fcn.004092f3(arg_ch, 1);\n                    uVar5 = fcn.0040857d(arg_8h_00, arg_10h, arg_ch, 0x800, *(arg_8h_00 + 0x512c), &arg_8h + 3, \n                                         *(iVar4 + 0x6810), *(iVar4 + 0x6814), iVar4 + 0x67f0, 1);\n                    if (uVar5 == '\\0') {\n                        uVar5 = fcn.0040645f();\n                    }\n                    else {\n                        _auStack8 = 0x1000000;\n                    }\n                }\n            }\n        }\n    }\n    return uVar5 & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 701
    },
    "004070fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nbool fcn.004070fc(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    bool bVar2;\n    \n    if (*(param_1 + 0xa228) == 3) {\n        bVar2 = *(param_1 + 0x57d9) != '\\0';\n    }\n    else {\n        bVar2 = *(param_1 + 0x57d9) != '\\x1d';\n    }\n    if (*(param_1 + 0x57da) == '\\0') {\n        bVar2 = false;\n    }\n    if (bVar2) {\n        uVar1 = fcn.0040c1b1(0x71, param_2);\n        fcn.0040e0c1(param_1 + 0x1e, uVar1);\n    }\n    return !bVar2;\n}\n",
        "token_count": 194
    },
    "0040731c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040731c(int32_t param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    char cVar1;\n    uint unaff_retaddr;\n    uint arglist;\n    uint uVar2;\n    \n    if (*(param_1 + 0x4be4) == '\\0') {\n        uVar2 = 1;\n        cVar1 = fcn.00410acb(1, param_4, param_1 + 0x4ae4);\n        if (cVar1 == '\\0') {\n            fcn.0040d211(0, uVar2);\n            arglist = 0x82;\n            uVar2 = fcn.0040c1b1(0x82, unaff_retaddr);\n            fcn.0040d211(uVar2, arglist);\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 205
    },
    "00407362": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00407362(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint var_1ch;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    fcn.004012e7(0x100000);\n    arg_8h_00 = *(unaff_EBP + -0x1c);\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.0040b7ac(arg_8h_00, *(unaff_EBP + -0x18));\n    if (uVar1 != 0) {\n        uVar2 = *(unaff_EBP + 0xc);\n        do {\n            if (uVar1 == 0xffffffff) break;\n            if ((*(unaff_EBP + 0x10) < 1) && ((0x7fffffff < *(unaff_EBP + 0x10) || (uVar2 <= uVar1)))) {\n                uVar1 = uVar2;\n            }\n            fcn.0040b914(arg_8h_00, uVar1);\n            if (-1 < *(unaff_EBP + 0x10)) {\n                bVar3 = uVar2 < uVar1;\n                uVar2 = uVar2 - uVar1;\n                *(unaff_EBP + 0x10) = *(unaff_EBP + 0x10) - bVar3;\n            }\n            uVar1 = fcn.0040b7ac(arg_8h_00, *(unaff_EBP + -0x18));\n        } while (uVar1 != 0);\n    }\n    if (arg_8h_00 != 0) {\n        fcn.00419d72(arg_8h_00);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 511
    },
    "004074d2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuchar __cdecl fcn.004074d2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t *arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    uchar uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int32_t extraout_ECX;\n    uint32_t uVar9;\n    int32_t unaff_EBP;\n    uint *puVar10;\n    uint *puVar11;\n    uint *in_FS_OFFSET;\n    ulong uVar12;\n    uint var_1158h;\n    uint var_1145h;\n    uint var_113ah;\n    uint var_134h;\n    uint var_30h;\n    int32_t var_28h;\n    uint32_t var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_11h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    fcn.0041a360();\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    iVar8 = *(unaff_EBP + 8);\n    uVar1 = *(iVar8 + 0x72b2);\n    *(unaff_EBP + -0x24) = extraout_ECX;\n    *(unaff_EBP + -0x18) = uVar1;\n    if (*(unaff_EBP + 0x10) == 0) {\n        if (*(extraout_ECX + 0x185f) == '\\0') goto code_r0x0040752a;\n        cVar4 = fcn.00418773(arg_8h_00, extraout_ECX + 8, 0, uVar1);\n        if (cVar4 != '\\0') goto code_r0x00407531;\ncode_r0x0040751e:\n        fcn.004062af(1);\ncode_r0x0040752a:\n        uVar5 = 0;\n    }\n    else {\ncode_r0x00407531:\n        iVar6 = arg_8h_00[0x15c7];\n        *(unaff_EBP + 0x10) = iVar6;\n        if (iVar6 == 2) {\n            *(extraout_ECX + 0x4be7) = 0;\n            if (((*(iVar8 + 0x5158) == 0) && (*(iVar8 + 0x92e8) <= *(extraout_ECX + 0x3adc))) &&\n               (*(extraout_ECX + 0x3ae1) != '\\0')) goto code_r0x0040752a;\n            *(unaff_EBP + -0x11) = 0;\n            iVar6 = fcn.00405407(arg_8h_00 + 0x15f0, unaff_EBP + -0x11, 5);\n            *(unaff_EBP + 0xf) = iVar6 != 0;\n            if ((*(unaff_EBP + 0xf) != '\\0') && (*(unaff_EBP + -0x11) == '\\0')) {\n                *(extraout_ECX + 0x3ae1) = 0;\n            }\n            fcn.00401b51();\n            fcn.0040a301(arg_8h_00 + 0x15f8, unaff_EBP + -0x2158);\n            if (*(arg_8h_00 + 0x68a3) == '\\0') {\n                cVar4 = fcn.00401b4a();\n                if ((cVar4 == '\\0') && (1 < *(iVar8 + 0x6284))) {\ncode_r0x00407673:\n                    *(unaff_EBP + 0xf) = 0;\n                }\n            }\n            else if ((*(iVar8 + 0x6284) != 1) && (*(unaff_EBP + -0x11) == '\\0')) {\n                if (*(iVar8 + 0x6284) == 0) {\n                    *(unaff_EBP + 0xf) = 0;\n                }\n                iVar6 = fcn.0040a239(unaff_EBP + -0x2158, 0);\n                if (*(iVar8 + 0x6284) + -1 != iVar6) goto code_r0x00407673;\n                fcn.0040a239(unaff_EBP + -0x2158, 1);\n            }\n            *(extraout_ECX + 0x185f) = *(arg_8h_00 + 0x6849);\n            *(extraout_ECX + 0x1860) = 0;\n            (**(*arg_8h_00 + 8))\n                      (arg_8h_00[0x2888] - arg_8h_00[0x1a02], \n                       (arg_8h_00[0x2889] - arg_8h_00[0x1a03]) - (arg_8h_00[0x2888] < arg_8h_00[0x1a02]), 0);\n            *(unaff_EBP + 0x13) = 0;\n            *(unaff_EBP + -0x1c) = 0;\n            iVar6 = extraout_ECX;\n            if (*(unaff_EBP + 0xf) == '\\0') {\n                cVar4 = *(arg_8h_00 + 0x288b);\n                *(unaff_EBP + -0x1c) = cVar4;\n                if (cVar4 != '\\0') goto code_r0x004076cc;\ncode_r0x00407f51:\n                if (*(iVar6 + 0x1860) == '\\0') {\n                    if (*(unaff_EBP + 0x13) == '\\0') {\n                        if (*(arg_8h_00 + 0x288b) == '\\0') goto code_r0x00407f6d;\n                        if (*(unaff_EBP + -0x1c) == '\\0') goto code_r0x0040752a;\n                    }\n                    goto code_r0x00407f80;\n                }\n                goto code_r0x0040752a;\n            }\ncode_r0x004076cc:\n            var_24h = *(iVar8 + 0x51c1);\n            cVar4 = fcn.0040dc25(0, unaff_EBP + -0x2158, var_24h, *(unaff_EBP + -0x18) == 0x49, *(unaff_EBP + -0x1c));\n            if (cVar4 == '\\0') goto code_r0x0040752a;\n            fcn.00406d5c(iVar8, arg_8h_00, unaff_EBP + -0x2158, extraout_ECX + 0x4be8, 0x800);\n            if (((*(unaff_EBP + -0x1c) != '\\0') || (*(extraout_ECX + 0x4be8) == 0)) ||\n               (cVar4 = *(arg_8h_00 + 0x1a12),  *(unaff_EBP + 0x13) = 1,  cVar4 != '\\0')) {\n                *(unaff_EBP + 0x13) = 0;\n            }\n            if (((*(iVar8 + 0x514f) != '\\0') || (*(iVar8 + 0x5150) != '\\0')) &&\n               ((*(unaff_EBP + -0x18) == 0x45 || (*(unaff_EBP + -0x18) == 0x58)))) {\n                fcn.0040659a();\n                cVar4 = fcn.00409651();\n                if (cVar4 == '\\0') {\n                    cVar4 = *(iVar8 + 0x514f);\ncode_r0x004077b0:\n                    if (cVar4 != '\\0') {\ncode_r0x004077b2:\n                        *(unaff_EBP + 0x13) = 0;\n                    }\n                }\n                else {\n                    cVar4 = fcn.00407172();\n                    if (cVar4 != '\\0') {\n                        if (*(unaff_EBP + -0x2194) != '\\0') {\n                            cVar4 = fcn.00407154();\n                            goto code_r0x004077b0;\n                        }\n                        goto code_r0x004077b2;\n                    }\n                }\n            }\n            if (*(arg_8h_00 + 0x684b) != '\\0') {\n                cVar4 = fcn.0040731c();\n                if (cVar4 == '\\0') {\n                    *(extraout_ECX + 0x5be8) = 1;\n                    goto code_r0x0040752a;\n                }\n                if (*(extraout_ECX + 0x4be4) == '\\0') {\n                    fcn.004062af();\n                    *(unaff_EBP + 0x13) = 0;\n                }\n            }\n            cVar4 = fcn.004070fc();\n            if (cVar4 == '\\0') {\n                *(unaff_EBP + 0x13) = 0;\n                fcn.004062af(1);\n            }\n            fcn.00408765();\n            *(unaff_EBP + -4) = 0;\n            iVar2 = arg_8h_00[0x1a2c];\n            *(unaff_EBP + -0x12) = iVar2 != 0;\n            if ((*(unaff_EBP + -0x12) != '\\0') && (iVar2 != 5)) {\n                if (*(unaff_EBP + 0x13) != '\\0') {\n                    if ((*(unaff_EBP + -0x18) == 0x50) || (*(iVar8 + 0x51c1) != '\\0')) goto code_r0x00407954;\n                    *(unaff_EBP + -0xd) = 0;\n                    cVar4 = fcn.0040924e();\n                    if (cVar4 == '\\0') {\ncode_r0x004078b7:\n                        if (*(unaff_EBP + -0xd) == '\\0') goto code_r0x00407954;\n                    }\n                    else if (*(unaff_EBP + -0xd) == '\\0') {\n                        fcn.0040857d(iVar8, 0, extraout_ECX + 0x4be8, 0x800, *(iVar8 + 0x512c), unaff_EBP + -0xd, \n                                     arg_8h_00[0x1a04], arg_8h_00[0x1a05], arg_8h_00 + 0x19fc, 0);\n                        goto code_r0x004078b7;\n                    }\n                    *(unaff_EBP + 0x13) = 0;\n                    goto code_r0x00407954;\n                }\ncode_r0x0040795a:\n                if (*(arg_8h_00 + 0x288b) == '\\0') {\n                    if (*(unaff_EBP + 0x13) != '\\0') goto code_r0x00407990;\n                }\n                else {\n                    var_1ch = 1;\n                    var_20h = NULL;\n                    var_24h = 0;\n                    var_28h = unaff_EBP + -0x2158;\n                    iVar6 = 0;\n                    *(unaff_EBP + -0x1c) = 1;\n                    *(unaff_EBP + 0x13) = 1;\n                    cVar4 = fcn.0040dc25(0, var_28h, 0, 0, 1);\n                    if (cVar4 == '\\0') {\n                        uVar5 = 0;\n                        iVar8 = iVar6;\n                        goto code_r0x00407911;\n                    }\ncode_r0x00407990:\n                    if ((*(iVar8 + 0x51c1) == '\\0') && (*(unaff_EBP + -0x1c) == '\\0')) {\n                        *(unaff_EBP + -0xd) = 0;\n                        if ((*(unaff_EBP + -0x18) != 0x50) && (cVar4 = fcn.00408bfe(),  cVar4 != '\\0')) {\n                            uVar7 = fcn.0040c1b1(0x406, extraout_ECX + 0x4be8);\n                            fcn.0040e0c1(arg_8h_00 + 0x1e, uVar7);\n                            fcn.004064ca(arg_8h_00 + 0x1e, extraout_ECX + 0x4be8);\n                        }\ncode_r0x004079f1:\n                        *(extraout_ECX + 0x3ad4) = *(extraout_ECX + 0x3ad4) + 1;\n                    }\n                    else {\n                        *(unaff_EBP + -0xd) = 1;\n                        if (*(unaff_EBP + -0x1c) == '\\0') goto code_r0x004079f1;\n                    }\n                    iVar8 = *(unaff_EBP + -0x24);\n                    *(iVar8 + 0x3ad8) = *(iVar8 + 0x3ad8) + 1;\n                    puVar11 = iVar8 + 0x4ae4;\n                    puVar10 = unaff_EBP + -0x134;\n                    for (iVar6 = 0x40; iVar6 != 0; iVar6 = iVar6 + -1) {\n                        *puVar10 = *puVar11;\n                        puVar11 = puVar11 + 1;\n                        puVar10 = puVar10 + 1;\n                    }\n                    *puVar10 = *puVar11;\n                    cVar4 = *(arg_8h_00 + 0x1a14);\n                    iVar6 = arg_8h_00[0x1a27];\n                    iVar2 = arg_8h_00[0x1a13];\n                    *(unaff_EBP + -4) = 1;\n                    *(unaff_EBP + -0x20) = iVar8 + 8;\n                    fcn.0040b6e1(0, iVar2, unaff_EBP + -0x134, -(cVar4 != '\\0') & arg_8h_00 + 0x6851U, \n                                 arg_8h_00 + 0x6861, iVar6, unaff_EBP + -0x30, arg_8h_00 + 0x687b);\n                    cVar4 = *(arg_8h_00 + 0x684b);\n                    *(unaff_EBP + -0xf) = 0;\n                    if ((((cVar4 != '\\0') && (*(arg_8h_00 + 0x6871) != '\\0')) &&\n                        (iVar8 = fcn.0041a474(arg_8h_00 + 0x6872, unaff_EBP + -0x30, 8),  iVar8 != 0)) &&\n                       (*(arg_8h_00 + 0x288f) == '\\0')) {\n                        uVar7 = fcn.0040c1b1(0xc9);\n                        fcn.0040e0c1(arg_8h_00 + 0x1e, uVar7);\n                        fcn.004062af(0xb);\n                        *(unaff_EBP + -0xf) = 1;\n                    }\n                    iVar6 = *(unaff_EBP + -0x24);\n                    iVar8 = *(unaff_EBP + 8);\n                    *(iVar6 + 0x1880) = 0;\n                    *(iVar6 + 0x1884) = 0;\n                    *(iVar6 + 0x1888) = 0;\n                    *(iVar6 + 0x188c) = 0;\n                    puVar11 = iVar8 + 0x7298;\n                    fcn.0040981a(arg_8h_00[0x1a08], *puVar11);\n                    fcn.0040981a(arg_8h_00[0x1a08], *puVar11);\n                    iVar8 = arg_8h_00[0x1a03];\n                    *(iVar6 + 0x28) = arg_8h_00[0x1a02];\n                    *(iVar6 + 0x2c) = iVar8;\n                    fcn.0040b6c1(arg_8h_00, unaff_EBP + -0x1158);\n                    cVar4 = *(unaff_EBP + -0xd);\n                    uVar5 = *(unaff_EBP + -0x1c);\n                    *(iVar6 + 0x31) = cVar4;\n                    *(iVar6 + 0x32) = uVar5;\n                    if (((cVar4 == '\\0') && (*(unaff_EBP + -0xf) == '\\0')) && (*(arg_8h_00 + 0x288f) == '\\0')) {\n                        iVar8 = arg_8h_00[0x1a05];\n                        uVar9 = arg_8h_00[0x1a03] << 0xb | arg_8h_00[0x1a02] >> 0x15;\n                        if ((iVar8 <= uVar9) && ((iVar8 < uVar9 || (arg_8h_00[0x1a04] < arg_8h_00[0x1a02] << 0xb)))) {\n                            if ((-1 < iVar8) && ((0 < iVar8 || (99999999 < arg_8h_00[0x1a04])))) {\n                                uVar12 = fcn.00408dac();\n                                iVar8 = uVar12 >> 0x20;\n                                if ((iVar8 < arg_8h_00[0x1a03]) ||\n                                   ((iVar8 <= arg_8h_00[0x1a03] &&\n                                    (uVar12 < arg_8h_00[0x1a02] || uVar12 == arg_8h_00[0x1a02]))))\n                                goto code_r0x00407bad;\n                            }\n                            fcn.00408f68(arg_8h_00[0x1a04], arg_8h_00[0x1a05]);\n                        }\n                    }\ncode_r0x00407bad:\n                    iVar8 = *(unaff_EBP + 8);\n                    *(unaff_EBP + -0x1145) = *(iVar8 + 0x5194) == '\\0';\n                    if (((*(unaff_EBP + -0xd) != '\\0') || (*(unaff_EBP + -0x1c) != '\\0')) ||\n                       (*(unaff_EBP + -0x10) = 1,  *(unaff_EBP + -0x18) == 0x50)) {\n                        *(unaff_EBP + -0x10) = 0;\n                    }\n                    if (*(unaff_EBP + -0x12) == '\\0') {\n                        if ((*(arg_8h_00 + 0x1a12) == '\\0') && (*(unaff_EBP + -0xf) == '\\0')) {\n                            if (*(arg_8h_00 + 0x57da) == '\\0') {\n                                fcn.00407362(*(unaff_EBP + -0x20), arg_8h_00[0x1a04], arg_8h_00[0x1a05]);\n                            }\n                            else {\n                                fcn.00411f36(arg_8h_00[0x1a29], *(arg_8h_00 + 0x1a28));\n                                iVar2 = *(iVar6 + 0x3ad0);\n                                iVar3 = arg_8h_00[0x1a05];\n                                *(iVar2 + 0x4c40) = arg_8h_00[0x1a04];\n                                *(iVar2 + 0x4c44) = iVar3;\n                                *(iVar2 + 0x4c58) = 0;\n                                fcn.00418730(*(arg_8h_00 + 0x57d9), *(arg_8h_00 + 0x1a28));\n                            }\n                        }\n                    }\n                    else {\n                        iVar2 = arg_8h_00[0x1a2c];\n                        *(unaff_EBP + -0x28) = iVar2;\n                        *(unaff_EBP + -0xe) = 1;\n                        if ((iVar2 == 4) || (iVar2 == 5)) {\n                            fcn.00406d5c(*(unaff_EBP + 8), arg_8h_00, arg_8h_00 + 0x1a2d, unaff_EBP + -0x41a0, 0x800);\n                            if (*(unaff_EBP + -0x10) != '\\0') {\n                                if (*(unaff_EBP + -0x41a0) != 0) {\n                                    if (*(unaff_EBP + -0x28) == 4) {\n                                        uVar5 = fcn.0040652a(iVar6 + 0x4be8, unaff_EBP + -0x41a0, 0x800);\n                                    }\n                                    else {\n                                        uVar5 = fcn.004073f9(unaff_EBP + -0x1158, arg_8h_00 + 0x1e, iVar6 + 0x4be8, \n                                                             unaff_EBP + -0x41a0, 0x800);\n                                    }\n                                    goto code_r0x00407ca1;\n                                }\n                                goto code_r0x00407ca4;\n                            }\ncode_r0x00407cb5:\n                            uVar5 = 0;\n                        }\n                        else {\n                            if (((iVar2 == 1) || (iVar2 == 2)) || (iVar2 == 3)) {\n                                if (*(unaff_EBP + -0x10) == '\\0') goto code_r0x00407cb5;\n                                uVar5 = fcn.00406d35(iVar8, *(unaff_EBP + -0x20), arg_8h_00, iVar6 + 0x4be8);\ncode_r0x00407ca1:\n                                *(unaff_EBP + -0xe) = uVar5;\n                            }\n                            else {\n                                *(unaff_EBP + -0xe) = 0;\n                            }\ncode_r0x00407ca4:\n                            if ((*(unaff_EBP + -0x10) == '\\0') || (*(unaff_EBP + -0xe) == '\\0')) goto code_r0x00407cb5;\n                            uVar5 = 1;\n                        }\n                        iVar8 = *(unaff_EBP + 8);\n                        *(iVar6 + 0x4be7) = uVar5;\n                    }\n                    fcn.004010c0();\n                    cVar4 = fcn.00409a7e(arg_8h_00 + 0x1a08, -(*(arg_8h_00 + 0x687a) != '\\0') & arg_8h_00 + 0x687bU);\n                    if (*(arg_8h_00 + 0x1a28) == '\\0') {\n                        *(iVar6 + 0x3ae3) = 0;\n                    }\n                    else if ((((*(arg_8h_00 + 0x57da) != '\\0') && (-1 < arg_8h_00[0x1a05])) &&\n                             ((0 < arg_8h_00[0x1a05] || (arg_8h_00[0x1a04] != 0)))) && (cVar4 != '\\0')) {\n                        *(iVar6 + 0x3ae3) = 1;\n                    }\n                    *(unaff_EBP + 0xb) = 0;\n                    if (*(unaff_EBP + -0x1c) == '\\0') {\n                        if (*(unaff_EBP + -0xf) == '\\0') {\n                            if (cVar4 != '\\0') goto code_r0x00407e1e;\n                            if ((*(arg_8h_00 + 0x684b) == '\\0') ||\n                               (((*(arg_8h_00 + 0x6871) != '\\0' && (*(arg_8h_00 + 0x288f) == '\\0')) ||\n                                (*(iVar6 + 0x3ae3) != '\\0')))) {\n                                uVar7 = 0x7b;\n                            }\n                            else {\n                                uVar7 = 0x7a;\n                            }\n                            uVar7 = fcn.0040c1b1(uVar7, unaff_EBP + -0x2158);\n                            fcn.0040e0c1(arg_8h_00 + 0x1e, uVar7);\n                        }\n                        *(unaff_EBP + 0xb) = 1;\n                        fcn.004062af(3);\n                    }\ncode_r0x00407e1e:\n                    if (((*(unaff_EBP + -0xd) == '\\0') && (*(unaff_EBP + -0xf) == '\\0')) &&\n                       (((*(unaff_EBP + -0x18) == 0x58 || (*(unaff_EBP + -0x18) == 0x45)) &&\n                        ((*(unaff_EBP + -0x12) == '\\0' || (arg_8h_00[0x1a2c] == 5)))))) {\n                        if (*(unaff_EBP + 0xb) != '\\0') {\n                            if (*(iVar8 + 0x5194) == '\\0') goto code_r0x00407f27;\n                            fcn.00408beb();\n                        }\n                        if (*(iVar8 + 0x514c) != '\\0') {\n                            arg_8h_00[0x15f7] = arg_8h_00[0x15f7] & 0xffffffdf;\n                        }\n                        fcn.00408cde(-(*(iVar8 + 0x628c) != 0) & arg_8h_00 + 0x19fc, \n                                     -(*(iVar8 + 0x6290) != 0) & arg_8h_00 + 0x19fe, \n                                     -(*(iVar8 + 0x6294) != 0) & arg_8h_00 + 0x1a00);\n                        fcn.004089d9();\n                        fcn.00408bfb(-(*(iVar8 + 0x628c) != 0) & arg_8h_00 + 0x19fc, \n                                     -(*(iVar8 + 0x6294) != 0) & arg_8h_00 + 0x1a00);\n                        if (*(iVar8 + 0x519b) == '\\0') {\n                            fcn.00409036(unaff_EBP + -0x113a, arg_8h_00[0x15f7]);\n                        }\n                        *(iVar6 + 0x4be7) = 1;\n                    }\ncode_r0x00407f27:\n                    *(unaff_EBP + -4) = 0;\n                    fcn.0040ce0e();\n                }\n                *(unaff_EBP + -4) = 0xffffffff;\n                fcn.00408c21();\n                if (*(unaff_EBP + 0xf) != '\\0') {\n                    *(iVar6 + 0x3adc) = *(iVar6 + 0x3adc) + 1;\n                }\n                goto code_r0x00407f51;\n            }\n            cVar4 = fcn.00401b4a();\n            if (cVar4 == '\\0') {\n                if (*(unaff_EBP + 0x13) == '\\0') goto code_r0x0040795a;\n                uVar5 = fcn.00406fbd(iVar8, arg_8h_00, unaff_EBP + -0x1158);\n                *(unaff_EBP + 0x13) = uVar5;\ncode_r0x00407954:\n                if (*(unaff_EBP + 0x13) == '\\0') goto code_r0x0040795a;\n                goto code_r0x00407990;\n            }\n            if ((((*(unaff_EBP + 0x13) != '\\0') && (*(unaff_EBP + -0x18) != 0x50)) && (*(unaff_EBP + -0x18) != 0x49)) &&\n               ((*(unaff_EBP + -0x18) != 0x45 && (*(iVar8 + 0x5154) != 1)))) {\n                *(extraout_ECX + 0x3ad4) = *(extraout_ECX + 0x3ad4) + 1;\n                var_1ch = unaff_EBP + -0x2158;\n                var_28h = 0x40790f;\n                fcn.00406e47(iVar8, arg_8h_00);\n                uVar5 = 1;\n                var_20h = arg_8h_00;\ncode_r0x00407911:\n                *(unaff_EBP + -4) = 0xffffffff;\n                fcn.00408c21(iVar8, var_28h, var_24h, var_20h, var_1ch);\n                goto code_r0x00407f82;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00408c21();\n        }\n        else {\n            if (iVar6 == 3) {\n                if (*(extraout_ECX + 0x4be7) != '\\0') {\n                    fcn.00406cdd(iVar8, arg_8h_00, extraout_ECX + 0x4be8);\n                    goto code_r0x0040755f;\n                }\n            }\n            else {\ncode_r0x0040755f:\n                if (*(unaff_EBP + 0x10) == 5) {\n                    if (*(arg_8h_00 + 0x1eb7) == '\\0') goto code_r0x0040752a;\n                    cVar4 = fcn.00418773(arg_8h_00, extraout_ECX + 8, 0, *(unaff_EBP + -0x18));\n                    if (cVar4 != '\\0') {\n                        (**(*arg_8h_00 + 8))(arg_8h_00[0x2886], arg_8h_00[0x2887], 0);\n                        goto code_r0x00407f80;\n                    }\n                    goto code_r0x0040751e;\n                }\n            }\ncode_r0x00407f6d:\n            fcn.004010c0();\n        }\ncode_r0x00407f80:\n        uVar5 = 1;\n    }\ncode_r0x00407f82:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar5;\n}\n",
        "token_count": 7140
    },
    "00408126": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00408126(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    char cVar4;\n    uint uVar5;\n    int32_t extraout_ECX;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    uint *puVar8;\n    int32_t iVar9;\n    uint *puVar10;\n    uint *in_FS_OFFSET;\n    uint var_115ch;\n    uint var_15ch;\n    uint var_158h;\n    uint var_114h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    fcn.0041a360();\n    iVar9 = *(unaff_EBP + 8);\n    *(extraout_ECX + 0x5be8) = 0;\n    *(extraout_ECX + 0x185c) = *(iVar9 + 0x72b2);\n    fcn.0040659a();\n    var_10h = extraout_ECX + 0x3ae4;\n    *(unaff_EBP + -0x10) = var_10h;\n    while( true ) {\n        cVar4 = fcn.0040532f(var_10h, 0x800);\n        if (cVar4 == '\\0') break;\n        cVar4 = fcn.00409651(*(unaff_EBP + -0x10), unaff_EBP + -0x115c, 0);\n        if (cVar4 != '\\0') {\n            uVar2 = *(unaff_EBP + -0x15c);\n            puVar1 = extraout_ECX + 0x1898;\n            uVar3 = *puVar1;\n            *puVar1 = *puVar1 + uVar2;\n            *(extraout_ECX + 0x189c) = *(extraout_ECX + 0x189c) + *(unaff_EBP + -0x158) + CARRY4(uVar3, uVar2);\n        }\n        var_10h = *(unaff_EBP + -0x10);\n    }\n    fcn.00410ae1();\n    uVar5 = *(unaff_EBP + -0x10);\n    cVar4 = fcn.0040532f(uVar5, 0x800);\n    while (cVar4 != '\\0') {\n        fcn.0040cdea();\n        while( true ) {\n            *(unaff_EBP + -4) = 0;\n            puVar8 = iVar9 + 0x4020;\n            puVar10 = unaff_EBP + -0x114;\n            for (iVar6 = 0x40; iVar6 != 0; iVar6 = iVar6 + -1) {\n                *puVar10 = *puVar8;\n                puVar8 = puVar8 + 1;\n                puVar10 = puVar10 + 1;\n            }\n            *puVar10 = *puVar8;\n            iVar9 = *(unaff_EBP + 8);\n            iVar6 = fcn.00407f93(iVar9);\n            puVar8 = unaff_EBP + -0x114;\n            puVar10 = iVar9 + 0x4020;\n            for (iVar7 = 0x40; iVar7 != 0; iVar7 = iVar7 + -1) {\n                *puVar10 = *puVar8;\n                puVar8 = puVar8 + 1;\n                puVar10 = puVar10 + 1;\n            }\n            *puVar10 = *puVar8;\n            if (iVar6 != 1) break;\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0040ce0e();\n            fcn.0040cdea();\n            iVar9 = *(unaff_EBP + 8);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0040ce0e();\n        cVar4 = fcn.00409651(*(unaff_EBP + -0x10), unaff_EBP + -0x115c, 0);\n        if (cVar4 != '\\0') {\n            uVar2 = *(unaff_EBP + -0x15c);\n            puVar1 = extraout_ECX + 0x1890;\n            uVar3 = *puVar1;\n            *puVar1 = *puVar1 + uVar2;\n            *(extraout_ECX + 0x1894) = *(extraout_ECX + 0x1894) + *(unaff_EBP + -0x158) + CARRY4(uVar3, uVar2);\n        }\n        uVar5 = *(unaff_EBP + -0x10);\n        cVar4 = fcn.0040532f();\n        iVar9 = *(unaff_EBP + 8);\n    }\n    if (((*(extraout_ECX + 0x3ad4) == 0) && (*(iVar9 + 0x72b2) != 0x49)) && (*0x42f76c != 0xb)) {\n        if (*(extraout_ECX + 0x5be8) == '\\0') {\n            uVar5 = fcn.0040c1b1(0x343, uVar5);\n            fcn.0040e0c1(*(unaff_EBP + -0x10), uVar5);\n        }\n        fcn.004062af(10);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1307
    },
    "004083ad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.004083ad(uint lpszShortPath)\n\n{\n    code *pcVar1;\n    char cVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int16_t *piVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1010h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    fcn.0041a360();\n    uVar9 = *(unaff_EBP + 8);\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetLongPathNameW)(uVar9, unaff_EBP + -0x5034, 0x800);\n    if ((uVar4 != 0) && (uVar4 < 0x800)) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetShortPathNameW)(uVar9, unaff_EBP + -0x4034, 0x800);\n        if ((uVar4 != 0) && (uVar4 < 0x800)) {\n            uVar5 = fcn.0040a2c4(unaff_EBP + -0x5034);\n            *(unaff_EBP + -0x10) = uVar5;\n            piVar6 = fcn.0040a2c4(unaff_EBP + -0x4034);\n            if (*piVar6 != 0) {\n                iVar7 = fcn.004116a1(*(unaff_EBP + -0x10), piVar6);\n                if (iVar7 != 0) {\n                    iVar7 = fcn.0040a2c4(uVar9, piVar6);\n                    iVar8 = fcn.004116a1(iVar7);\n                    if (iVar8 == 0) {\n                        *(unaff_EBP + -0x1010) = 0;\n                        iVar8 = 0;\n                        do {\n                            if (*(unaff_EBP + -0x1010) != 0) goto code_r0x004084c6;\n                            fcn.00410976(unaff_EBP + -0x1010, uVar9, 0x800);\n                            uVar5 = fcn.0040a2c4(unaff_EBP + -0x1010, 0x800, L\"rtmp%d\", iVar8);\n                            fcn.004082d4(uVar5);\n                            iVar7 = unaff_EBP + -0x1010;\n                            cVar2 = fcn.0040924e();\n                            if (cVar2 != '\\0') {\n                                *(unaff_EBP + -0x1010) = 0;\n                            }\n                            iVar8 = iVar8 + 0x7b;\n                        } while (iVar8 < 10000);\n                        if (*(unaff_EBP + -0x1010) != 0) {\ncode_r0x004084c6:\n                            fcn.00410976(unaff_EBP + -0x3034, uVar9, 0x800, iVar7);\n                            fcn.0040a42e(unaff_EBP + -0x3034, *(unaff_EBP + -0x10), 0x800);\n                            pcVar1 = _sym.imp.KERNEL32.dll_MoveFileW;\n                            iVar7 = (*_sym.imp.KERNEL32.dll_MoveFileW)(unaff_EBP + -0x3034, unaff_EBP + -0x1010);\n                            if (iVar7 != 0) {\n                                fcn.00408765();\n                                *(unaff_EBP + -4) = 0;\n                                cVar3 = '\\0';\n                                cVar2 = fcn.0040924e(*(unaff_EBP + 8));\n                                if (cVar2 == '\\0') {\n                                    cVar3 = fcn.004088df(*(unaff_EBP + 8), 9);\n                                }\n                                (*pcVar1)(unaff_EBP + -0x1010, unaff_EBP + -0x3034);\n                                if (cVar3 != '\\0') {\n                                    fcn.004089d9();\n                                    fcn.00408a29();\n                                }\n                                *(unaff_EBP + -4) = 0xffffffff;\n                                fcn.00408c21();\n                                uVar9 = 1;\n                                goto code_r0x0040856c;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    uVar9 = 0;\ncode_r0x0040856c:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar9;\n}\n",
        "token_count": 1099
    },
    "0040857d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0040857d(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, uchar *arg_1ch, \n            uint arg_20h, uint arg_24h, int32_t arg_28h, uint arg_2ch)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint var_1004h;\n    uint uStackY64;\n    uint *puStackY56;\n    int32_t iStackY52;\n    uint *puStackY48;\n    uint uStackY44;\n    uint var_1h;\n    \n    fcn.0041a360();\n    if (arg_1ch != NULL) {\n        *arg_1ch = 0;\n    }\n    bVar1 = false;\n    cVar2 = fcn.0040924e();\n    do {\n        if (cVar2 == '\\0') {\ncode_r0x004086e5:\n            iVar5 = (arg_2ch != '\\0') + 9;\n            if ((arg_ch == 0) || (cVar2 = fcn.004088df(arg_10h, iVar5),  cVar2 == '\\0')) {\n                fcn.00409264();\n                fcn.004092f3(arg_10h, 1);\n                if (arg_ch == 0) {\n                    uVar6 = fcn.0040908d(arg_10h);\n                }\n                else {\n                    uStackY44 = 0x408756;\n                    uVar6 = fcn.004088df(arg_10h, iVar5);\n                }\n            }\n            else {\n                uVar6 = 1;\n            }\n            return uVar6;\n        }\n        if (bVar1) {\ncode_r0x004085c6:\n            bVar1 = false;\n            if (arg_18h == 2) {\ncode_r0x00408708:\n                if (arg_1ch != NULL) {\n                    *arg_1ch = 1;\n                }\n                return 0;\n            }\n            if (arg_18h == 3) {\n                cVar2 = fcn.004082f0(arg_10h, arg_14h);\n                if (cVar2 == '\\0') {\n                    arg_18h = 0;\n                }\n            }\n            else {\n                if ((*(arg_8h + 0x517c) != '\\0') || (arg_18h == 1)) goto code_r0x004086e5;\n                if ((arg_18h == 0) || (arg_18h == 4)) {\n                    var_1004h._0_2_ = 0;\n                    fcn.0041a09a(&fcn.0040857d::var_1004h, arg_10h);\n                    if (arg_28h == 0) {\n                        uVar6 = 0;\n                    }\n                    else {\n                        uVar6 = fcn.004112aa();\n                    }\n                    puStackY48 = 0x408659;\n                    cVar2 = fcn.0040e5f5(0, &fcn.0040857d::var_1004h, arg_20h, arg_24h, uVar6);\n                    puStackY48 = cVar2;\n                    iStackY52 = *0x42c018;\n                    puStackY56 = 0x408668;\n                    iVar5 = fcn.0041c2a0();\n                    iVar3 = iVar5 - *0x42c018;\n                    if (iVar5 == *0x42c018) goto code_r0x004086e5;\n                    puStackY48 = 0x2;\n                    if (iVar3 == 1) goto code_r0x00408708;\n                    if (iVar3 == 2) {\n                        *(arg_8h + 0x512c) = 1;\n                        goto code_r0x004086e5;\n                    }\n                    if (iVar3 == 3) {\n                        if (arg_1ch != NULL) {\n                            *arg_1ch = 1;\n                        }\n                        *(arg_8h + 0x512c) = 2;\n                        return 0;\n                    }\n                    if (iVar3 == 4) {\n                        puStackY48 = &fcn.0040857d::var_1004h;\n                        iStackY52 = 0x4086a4;\n                        puVar4 = fcn.0040a2c4();\n                        iStackY52 = arg_14h;\n                        puStackY56 = &fcn.0040857d::var_1004h;\n                        if (puVar4 == puStackY56) {\n                            uStackY64 = 0x4086ba;\n                            fcn.0040a42e();\n                        }\n                        else {\n                            uStackY64 = 0x4086c1;\n                            fcn.00410976();\n                        }\n                    }\n                    else if (iVar3 == 5) {\n                        iStackY52 = 0x4086d7;\n                        fcn.004064c5();\n                    }\n                }\n            }\n        }\n        else {\n            bVar1 = true;\n            cVar2 = fcn.004083ad(arg_10h);\n            if (cVar2 == '\\0') goto code_r0x004085c6;\n        }\n        cVar2 = fcn.0040924e();\n    } while( true );\n}\n",
        "token_count": 1259
    },
    "004087a2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint32_t __cdecl fcn.004087a2(uint arg_8h, uint32_t arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uint32_t uVar4;\n    bool bVar5;\n    uint var_100ch;\n    uint uStackY76;\n    uint *puStackY72;\n    uint32_t uStackY68;\n    uint uStackY64;\n    uint uStackY60;\n    uint uStackY56;\n    uint32_t uStackY52;\n    uint uStackY48;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    fcn.0041a360();\n    *(extraout_ECX + 0x1020) = 0;\n    pcVar1 = _sym.imp.KERNEL32.dll_CreateFileW;\n    if ((*(extraout_ECX + 0x1c) == '\\0') && ((arg_ch & 4) == 0)) {\n        bVar5 = false;\n    }\n    else {\n        bVar5 = true;\n    }\n    uVar4 = (-((arg_ch >> 1 & 1) != 0) & 0xc0000000) + 0x80000000;\n    if ((arg_ch & 1) != 0) {\n        uVar4 = uVar4 | 0x40000000;\n    }\n    arg_ch = 1;\n    if (bVar5) {\n        arg_ch = 3;\n    }\n    uStackY52 = (*(extraout_ECX + 0x15) != '\\0') - 1 & 0x8000000;\n    uStackY48 = 0x40882c;\n    var_4h = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n    if (var_4h == 0xffffffff) {\n        uStackY48 = 0x40883a;\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uStackY48 = 0x408851;\n        cVar2 = fcn.0040a778(arg_8h, &fcn.004087a2::var_100ch, 0x800);\n        if (cVar2 != '\\0') {\n            uStackY48 = 0;\n            puStackY72 = &fcn.004087a2::var_100ch;\n            uStackY56 = 3;\n            uStackY60 = 0;\n            uStackY64 = arg_ch;\n            uStackY76 = 0x40886b;\n            uStackY68 = uVar4;\n            var_4h = (*pcVar1)();\n            if (var_4h != 0xffffffff) goto code_r0x00408883;\n        }\n        if (iVar3 == 2) {\n            *(extraout_ECX + 0x1020) = 1;\n        }\n    }\ncode_r0x00408883:\n    *(extraout_ECX + 0xc) = 0;\n    bVar5 = var_4h != 0xffffffff;\n    *(extraout_ECX + 0x12) = 0;\n    *(extraout_ECX + 0x10) = 0;\n    if (bVar5) {\n        uStackY48 = arg_8h;\n        *(extraout_ECX + 4) = var_4h;\n        uStackY52 = extraout_ECX + 0x1e;\n        uStackY56 = 0x4088b1;\n        var_4h = fcn.00410976();\n    }\n    return var_4h & 0xffffff00 | bVar5;\n}\n",
        "token_count": 864
    },
    "004089d9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004089d9(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    uint8_t uVar1;\n    \n    uVar1 = 1;\n    if (*(param_1 + 0xc) == 0) {\n        in_EAX = *(param_1 + 4);\n        if (in_EAX != 0xffffffff) {\n            if (*(param_1 + 0x10) == '\\0') {\n                in_EAX = (*_sym.imp.KERNEL32.dll_CloseHandle)(in_EAX);\n                uVar1 = 1 - (in_EAX != 1);\n            }\n            *(param_1 + 4) = 0xffffffff;\n            if ((uVar1 == 0) && (*(param_1 + 0x14) != '\\0')) {\n                in_EAX = fcn.00406333(param_1 + 0x1e);\n            }\n        }\n    }\n    else {\n        *(param_1 + 0xc) = 0;\n    }\n    return in_EAX & 0xffffff00 | uVar1;\n}\n",
        "token_count": 244
    },
    "00408a29": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00408a29(int32_t param_1)\n\n{\n    uchar uVar1;\n    \n    if (*(param_1 + 0xc) == 0) {\n        if (*(param_1 + 4) != -1) {\n            fcn.004089d9();\n        }\n        if (*(param_1 + 0x13) != '\\0') {\n            uVar1 = fcn.0040908d(param_1 + 0x1e);\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 123
    },
    "00408bfe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00408bfe(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 4) == -1) {\n        return 0xffffff00;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileType)(*(param_1 + 4));\n    if ((iVar1 != 2) && (iVar1 != 3)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 105
    },
    "00408c21": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00408c21(uint *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    uint8_t uVar2;\n    \n    *param_1 = 0x42765c;\n    if ((param_1[1] == -1) || (*(param_1 + 4) != '\\0')) {\n        return in_EAX;\n    }\n    if (*(param_1 + 0x12) == '\\0') {\n        uVar2 = 1;\n        if (param_1[3] == 0) {\n            in_EAX = param_1[1];\n            if (in_EAX != 0xffffffff) {\n                if (*(param_1 + 4) == '\\0') {\n                    in_EAX = (*_sym.imp.KERNEL32.dll_CloseHandle)(in_EAX);\n                    uVar2 = 1 - (in_EAX != 1);\n                }\n                param_1[1] = 0xffffffff;\n                if ((uVar2 == 0) && (*(param_1 + 5) != '\\0')) {\n                    in_EAX = fcn.00406333(param_1 + 0x1e);\n                }\n            }\n        }\n        else {\n            param_1[3] = 0;\n        }\n        return in_EAX & 0xffffff00 | uVar2;\n    }\n    if (param_1[3] == 0) {\n        if (param_1[1] != -1) {\n            in_EAX = fcn.004089d9();\n        }\n        if (*(param_1 + 0x13) != '\\0') {\n            uVar1 = fcn.0040908d(param_1 + 0x1e);\n            return uVar1;\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 408
    },
    "00408c44": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408c44(uint lpBuffer, uint32_t nNumberOfBytesToRead)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint nNumberOfBytesToRead_00;\n    int32_t lpNumberOfBytesRead;\n    \n    nNumberOfBytesToRead_00 = 20000;\n    lpNumberOfBytesRead = in_ECX;\n    if (*(in_ECX + 0xc) == 1) {\n        if (20000 < nNumberOfBytesToRead) {\n            nNumberOfBytesToRead = 20000;\n        }\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff6);\n        *(in_ECX + 4) = uVar3;\n    }\n    iVar4 = (*_sym.imp.KERNEL32.dll_ReadFile)(*(in_ECX + 4), lpBuffer, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0);\n    if (iVar4 == 0) {\n        cVar2 = fcn.00408bfe();\n        pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n        if ((cVar2 == '\\0') || (nNumberOfBytesToRead < 0x4e21)) {\n            if ((*(in_ECX + 0xc) == 1) && (iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar4 == 0x6d)) {\n                return 0;\n            }\n            if (((*(in_ECX + 0xc) != 0) || (nNumberOfBytesToRead_00 = 0x8000,  nNumberOfBytesToRead < 0x8001)) ||\n               (iVar4 = (*pcVar1)(),  iVar4 != 0x21)) {\n                return -1;\n            }\n        }\n        iVar4 = fcn.00408c44(lpBuffer, nNumberOfBytesToRead_00);\n        return iVar4;\n    }\n    return lpNumberOfBytesRead;\n}\n",
        "token_count": 453
    },
    "00408cde": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408cde(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    bool bVar3;\n    int32_t in_ECX;\n    uint var_1ch;\n    uint var_14h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    if ((*(in_ECX + 0x18) != 0x100) && ((*(in_ECX + 0x18) & 2) == 0)) {\n        (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(*(in_ECX + 4));\n    }\n    if ((arg_8h == NULL) || (bVar2 = true,  (*arg_8h | arg_8h[1]) == 0)) {\n        bVar2 = false;\n    }\n    if ((arg_ch == NULL) || (bVar3 = true,  (*arg_ch | arg_ch[1]) == 0)) {\n        bVar3 = false;\n    }\n    if ((arg_10h == NULL) || ((*arg_10h | arg_10h[1]) == 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar2) {\n        fcn.004110a4(&var_ch);\n    }\n    if (bVar3) {\n        fcn.004110a4(&var_1ch);\n    }\n    if (bVar1) {\n        fcn.004110a4(&var_14h);\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(*(var_4h + 4), -bVar3 & &var_1ch, -bVar1 & &var_14h, -bVar2 & &var_ch);\n    return;\n}\n",
        "token_count": 429
    },
    "00408ef4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408ef4(uint lDistanceToMove, int32_t arg_ch, int32_t dwMoveMethod)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int64_t iVar3;\n    uint lpDistanceToMoveHigh;\n    \n    iVar1 = CONCAT44(arg_ch, lDistanceToMove);\n    if (in_ECX[1] != -1) {\n        if (((arg_ch < 1) && (arg_ch < 0)) && (dwMoveMethod != 0)) {\n            if (dwMoveMethod == 1) {\n                iVar3 = (**(*in_ECX + 0xc))();\n            }\n            else {\n                iVar3 = fcn.00408dac();\n            }\n            iVar1 = iVar3 + iVar1;\n            dwMoveMethod = 0;\n        }\n        lpDistanceToMoveHigh = iVar1 >> 0x20;\n        lDistanceToMove = iVar1;\n        iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(in_ECX[1], lDistanceToMove, &lpDistanceToMoveHigh, dwMoveMethod)\n        ;\n        if ((iVar2 == -1) && (iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 != 0)) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 302
    },
    "004090de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: lpLastWriteTime\n// WARNING: Variable defined which should be unmapped: hObject\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004090de(uint arg_8h, uint32_t *arg_ch, uint32_t *arg_10h, uint32_t *arg_14h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    bool bVar3;\n    bool bVar4;\n    code *pcVar5;\n    char cVar6;\n    uint32_t arg_ch_00;\n    int32_t iVar7;\n    uint var_1024h;\n    uint uStackY100;\n    uint *puStackY96;\n    uint uStackY92;\n    uint uStackY88;\n    uint var_24h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_ch;\n    uint lpLastWriteTime;\n    uint hObject;\n    \n    fcn.0041a360();\n    if ((arg_ch == NULL) || (bVar1 = true,  (*arg_ch | arg_ch[1]) == 0)) {\n        bVar1 = false;\n    }\n    if ((arg_10h == NULL) || (bVar3 = true,  (*arg_10h | arg_10h[1]) == 0)) {\n        bVar3 = false;\n    }\n    if ((arg_14h == NULL) || (bVar4 = true,  (*arg_14h | arg_14h[1]) == 0)) {\n        bVar4 = false;\n    }\n    arg_ch_00 = fcn.00408fea(arg_8h);\n    if ((arg_ch_00 == 0xffffffff) || ((arg_ch_00 & 1) == 0)) {\n        bVar2 = false;\n    }\n    else {\n        bVar2 = true;\n        fcn.00409036(arg_8h, 0);\n    }\n    pcVar5 = _sym.imp.KERNEL32.dll_CreateFileW;\n    iVar7 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n    if (iVar7 == -1) {\n        cVar6 = fcn.0040a778(arg_8h, &fcn.004090de::var_1024h, 0x800);\n        if (cVar6 == '\\0') {\n            return;\n        }\n        uStackY88 = 3;\n        uStackY92 = 0x40000000;\n        puStackY96 = &fcn.004090de::var_1024h;\n        uStackY100 = 0x4091af;\n        iVar7 = (*pcVar5)();\n        if (iVar7 == -1) {\n            return;\n        }\n    }\n    if (bVar1) {\n        fcn.004110a4();\n    }\n    if (bVar3) {\n        fcn.004110a4();\n    }\n    if (bVar4) {\n        fcn.004110a4();\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)();\n    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    if (bVar2) {\n        uStackY88 = 0x40923e;\n        fcn.00409036(arg_8h, arg_ch_00);\n    }\n    return;\n}\n",
        "token_count": 749
    },
    "00409272": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409272(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_1000h;\n    uint uStackY48;\n    uint *puStackY44;\n    uint uStackY40;\n    \n    fcn.0041a360();\n    pcVar1 = _sym.imp.KERNEL32.dll_CreateDirectoryW;\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)();\n    if (iVar3 == 0) {\n        cVar2 = fcn.0040924e();\n        if (cVar2 == '\\0') {\n            uStackY40 = 0x4092af;\n            cVar2 = fcn.0040a778(arg_8h, &fcn.00409272::var_1000h, 0x800);\n            if (cVar2 != '\\0') {\n                uStackY40 = 0;\n                puStackY44 = &fcn.00409272::var_1000h;\n                uStackY48 = 0x4092be;\n                iVar3 = (*pcVar1)();\n                if (iVar3 != 0) goto code_r0x004092c2;\n            }\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if ((iVar3 == 2) || (iVar3 == 3)) {\n            uVar4 = 2;\n        }\n        else {\n            uVar4 = 1;\n        }\n    }\n    else {\ncode_r0x004092c2:\n        if (arg_ch != '\\0') {\n            fcn.00409036(arg_8h, arg_10h);\n        }\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 407
    },
    "004092f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t __cdecl fcn.004092f3(int16_t *arg_8h, uint arg_ch)\n\n{\n    int16_t *arg_ch_00;\n    char cVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint var_1004h;\n    uint uStackY36;\n    uint arg_10h;\n    int32_t var_4h;\n    \n    arg_ch_00 = arg_8h;\n    piVar2 = fcn.0041a360();\n    if ((arg_8h == NULL) || (*arg_8h == 0)) {\n        uVar5 = piVar2 & 0xffffff00;\n    }\n    else {\n        var_4h = 0;\n        uVar4 = 1;\n        do {\n            uVar5 = var_4h >> 1;\n            if (0x7ff < uVar5) break;\n            cVar1 = fcn.00409ff3();\n            if ((cVar1 != '\\0') && ((arg_8h != arg_ch_00 + 2 || (arg_ch_00[1] != 0x3a)))) {\n                uStackY36 = 0x40935b;\n                fcn.0041c20f(&fcn.004092f3::var_1004h, arg_ch_00, uVar5);\n                arg_10h = 0;\n                *(&fcn.004092f3::var_1004h + uVar5 * 2) = 0;\n                uStackY36 = 0x409377;\n                iVar3 = fcn.00409272(&fcn.004092f3::var_1004h, 1, arg_10h);\n                uVar4 = 1 - (iVar3 != 0);\n            }\n            piVar2 = arg_8h + 1;\n            var_4h = var_4h + 2;\n            arg_8h = piVar2;\n        } while (*piVar2 != 0);\n        if (arg_ch == '\\0') {\n            fcn.00409fb8();\n            piVar2 = fcn.00409ff3();\n            if (piVar2 == '\\0') {\n                uStackY36 = 0x4093b4;\n                piVar2 = fcn.00409272(arg_ch_00, 1, 0);\n                uVar4 = 1 - (piVar2 != NULL);\n            }\n        }\n        uVar5 = piVar2 & 0xffffff00 | uVar4;\n    }\n    return uVar5;\n}\n",
        "token_count": 603
    },
    "0040940b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040940b(int32_t hFindFile, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uchar uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint var_1250h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_224h;\n    uint uStackY80;\n    uint *puStackY76;\n    uint *puStackY72;\n    uint *puStackY68;\n    uint uStackY64;\n    uint uStackY60;\n    uint uStackY56;\n    uint uStackY52;\n    int32_t iStackY48;\n    uint *puStackY44;\n    uint *puStackY40;\n    \n    fcn.0041a360();\n    pcVar1 = _sym.imp.KERNEL32.dll_FindFirstFileW;\n    if (hFindFile == -1) {\n        hFindFile = (*_sym.imp.KERNEL32.dll_FindFirstFileW)();\n        if (hFindFile == -1) {\n            puStackY40 = 0x409457;\n            cVar2 = fcn.0040a778(arg_ch, &fcn.0040940b::var_1250h, 0x800);\n            if (cVar2 != '\\0') {\n                puStackY40 = &fcn.0040940b::var_250h;\n                puStackY44 = &fcn.0040940b::var_1250h;\n                iStackY48 = 0x40946b;\n                hFindFile = (*pcVar1)();\n                if (hFindFile != -1) goto code_r0x004094c7;\n            }\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (((iVar4 == 2) || (iVar4 == 3)) || (iVar4 == 0x12)) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = 1;\n            }\n            *(arg_10h + 0x1044) = uVar3;\n            goto code_r0x00409592;\n        }\n    }\n    else {\n        iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)();\n        if (iVar4 == 0) {\n            hFindFile = -1;\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            *(arg_10h + 0x1044) = iVar4 != 0x12;\n        }\n        if (hFindFile == -1) goto code_r0x00409592;\n    }\ncode_r0x004094c7:\n    puStackY40 = 0x4094d1;\n    fcn.00410976();\n    puStackY40 = 0x800;\n    puStackY44 = &fcn.0040940b::var_224h;\n    iStackY48 = arg_10h;\n    uStackY52 = 0x4094df;\n    fcn.0040a42e();\n    uStackY52 = 1;\n    uStackY56 = 0;\n    uStackY60 = 0;\n    uStackY64 = var_234h;\n    puStackY68 = 0x4094f0;\n    iVar5 = fcn.0041a440();\n    *(arg_10h + 0x1000) = iVar5 + -0x234;\n    *(arg_10h + 0x1008) = var_250h;\n    *(arg_10h + 0x1028) = var_24ch;\n    *(arg_10h + 0x102c) = var_248h;\n    *(arg_10h + 0x1030) = var_244h;\n    *(arg_10h + 0x1034) = var_240h;\n    *(arg_10h + 0x1038) = var_23ch;\n    *(arg_10h + 0x103c) = var_238h;\n    puStackY68 = &fcn.0040940b::var_23ch;\n    *(arg_10h + 0x1004) = iVar5 + -0x234 >> 0x20;\n    puStackY72 = 0x40956e;\n    fcn.00411091();\n    puStackY72 = &fcn.0040940b::var_24ch;\n    puStackY76 = 0x409580;\n    fcn.00411091();\n    puStackY76 = &fcn.0040940b::var_244h;\n    uStackY80 = 0x409592;\n    fcn.00411091();\ncode_r0x00409592:\n    *(arg_10h + 0x1040) = 0;\n    return hFindFile;\n}\n",
        "token_count": 1123
    },
    "004096b5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004096b5(int32_t param_1, char param_2)\n\n{\n    uint uVar1;\n    \n    *(param_1 + 8) = 0;\n    if (param_2 == '\\0') {\n        *(param_1 + 0xc) = 0;\n    }\n    else {\n        uVar1 = fcn.00419956(0x8003);\n        *(param_1 + 0xc) = uVar1;\n        fcn.0041a0c0(uVar1, 0, 0x8003);\n    }\n    return param_1;\n}\n",
        "token_count": 141
    },
    "004096eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004096eb(int32_t param_1)\n\n{\n    if (*(param_1 + 8) == '\\0') {\n        fcn.0041c35e(*(param_1 + 0xc));\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "004096fb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004096fb(int32_t param_1, uint param_2)\n\n{\n    if ((*(param_1 + 0xc) != 0) && (*(param_1 + 8) == '\\0')) {\n        fcn.0041c35e(*(param_1 + 0xc));\n    }\n    *(param_1 + 0xc) = param_2;\n    *(param_1 + 8) = 1;\n    return;\n}\n",
        "token_count": 106
    },
    "0040976b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040976b(int32_t *param_1, int32_t param_2)\n\n{\n    *param_1 = param_2;\n    if ((param_2 == 1) || (param_2 == 2)) {\n        param_1[1] = 0;\n    }\n    if (param_2 == 3) {\n        fcn.0041bb00(param_1 + 1, 0x42c020, 0x20);\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "0040979a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __thiscall fcn.0040979a(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_1;\n    if ((iVar2 == 0) || (iVar1 = *param_2,  iVar1 == 0)) {\n        return true;\n    }\n    if (((iVar2 == 1) && (iVar1 == 1)) || ((iVar2 == 2 && (iVar1 == 2)))) {\n        iVar2 = param_1[1] - param_2[1];\n    }\n    else {\n        if ((iVar2 != 3) || (iVar1 != 3)) {\n            return false;\n        }\n        iVar2 = fcn.0041a474(param_1 + 1, param_2 + 1, 0x20);\n    }\n    return iVar2 == 0;\n}\n",
        "token_count": 206
    },
    "0040981a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040981a(uint32_t *param_1, uint32_t param_2)\n\n{\n    *param_1 = param_2;\n    if (param_2 == 1) {\n        param_1[1] = 0;\n    }\n    if (param_2 == 2) {\n        param_1[1] = 0xffffffff;\n    }\n    if (param_2 == 3) {\n        fcn.00404dd7(param_1 + 2);\n    }\n    if (7 < param_2) {\n        param_2 = 8;\n    }\n    param_1[0x2d8] = param_2;\n    return;\n}\n",
        "token_count": 155
    },
    "00409859": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00409859(int32_t *param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    uint in_stack_fffffff8;\n    \n    if (*param_1 == 2) {\n        iVar1 = fcn.00405593(param_1[1], param_2, param_3);\n        param_1[1] = iVar1;\n        in_stack_fffffff8 = param_3;\n    }\n    if (*param_1 == 3) {\n        if ((1 < param_1[0x2d8]) && (param_1[0x2d7] == 0)) {\n            iVar1 = fcn.00411041();\n            param_1[0x2d7] = iVar1;\n        }\n        param_1[0x2d5] = param_1[0x2d7];\n        param_1[0x2d6] = param_1[0x2d8];\n        fcn.00404e94(param_1 + 2, in_stack_fffffff8, unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "00409a2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409a2c(int32_t *arg_8h)\n\n{\n    int32_t *in_ECX;\n    uint var_b54h;\n    \n    *arg_8h = *in_ECX;\n    if (*in_ECX == 1) {\n        arg_8h[1] = in_ECX[1];\n    }\n    if (*in_ECX == 2) {\n        arg_8h[1] = ~in_ECX[1];\n    }\n    if (*in_ECX == 3) {\n        fcn.0040999e(in_ECX + 2);\n        fcn.00404ffc(&var_b54h, arg_8h + 1);\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "00409a7e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409a7e(uint arg_8h, int32_t arg_ch)\n\n{\n    uint var_24h;\n    \n    fcn.00409a2c(&var_24h);\n    if (arg_ch != 0) {\n        fcn.00405e5e(&var_24h, arg_ch);\n    }\n    fcn.0040979a(arg_8h);\n    return;\n}\n",
        "token_count": 95
    },
    "00409b9b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00409b9b(uint param_1, char param_2)\n\n{\n    if (param_2 == '\\0') {\n        param_1 = sub.USER32.dll_CharUpperW(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 57
    },
    "00409bb4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409bb4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    if (arg_10h == '\\0') {\n        fcn.00410971();\n    }\n    else {\n        fcn.0041a01b(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 76
    },
    "00409bd5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409bd5(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if (arg_14h == '\\0') {\n        fcn.004116c2(arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        fcn.0041c259(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "00409bfa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00409bfa(int16_t *arg_8h, int16_t *arg_ch, uint arg_10h)\n\n{\n    int16_t *arg_8h_00;\n    char cVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int16_t *arg_8h_01;\n    \n    do {\n        while( true ) {\n            iVar2 = fcn.00409b9b(*arg_ch, arg_10h);\n            iVar3 = fcn.00409b9b();\n            arg_8h_01 = arg_8h + 1;\n            if (iVar3 == 0) {\n                return iVar2 == 0;\n            }\n            if (iVar3 == 0x2a) {\n                if (*arg_8h_01 == 0) {\n                    return true;\n                }\n                if (*arg_8h_01 == 0x2e) {\n                    arg_8h_00 = arg_8h + 2;\n                    if ((*arg_8h_00 == 0x2a) && (arg_8h[3] == 0)) {\n                        return true;\n                    }\n                    piVar4 = fcn.0041c3ac(arg_ch, 0x2e);\n                    if (*arg_8h_00 == 0) {\n                        if ((piVar4 != NULL) && (piVar4[1] != 0)) {\n                            return false;\n                        }\n                        return true;\n                    }\n                    if ((piVar4 != NULL) && (iVar5 = fcn.0041c369(arg_8h_01, 0x427688),  arg_ch = piVar4,  iVar5 == 0))\n                    {\n                        iVar5 = fcn.0041c3ac(piVar4 + 1, 0x2e);\n                        if (iVar5 == 0) {\n                            iVar5 = fcn.00409bb4(arg_8h_00, piVar4 + 1, arg_10h);\n                            return iVar5 == 0;\n                        }\n                    }\n                }\n                do {\n                    if (*arg_ch == 0) {\n                        return false;\n                    }\n                    cVar1 = fcn.00409bfa(arg_8h_01, arg_ch, arg_10h);\n                    arg_ch = arg_ch + 1;\n                } while (cVar1 == '\\0');\n                return true;\n            }\n            arg_8h = arg_8h_01;\n            if (iVar3 != 0x3f) break;\n            if (iVar2 == 0) {\n                return false;\n            }\ncode_r0x00409c62:\n            arg_ch = arg_ch + 1;\n        }\n        if (iVar3 == iVar2) goto code_r0x00409c62;\n        if ((iVar3 != 0x2e) || (((iVar2 != 0 && (iVar2 != 0x5c)) && (iVar2 != 0x2e)))) {\n            return false;\n        }\n    } while( true );\n}\n",
        "token_count": 687
    },
    "00409d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00409d20(uint arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint32_t arg_10h_00;\n    uint32_t uVar3;\n    uint arg_10h_01;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uchar auStackY8196 [4096];\n    uint var_1000h;\n    uint uStackY104;\n    uint in_stack_ffffffa0;\n    uint32_t in_stack_ffffffa4;\n    \n    fcn.0041a360();\n    uVar5 = arg_10h & 0xffff;\n    arg_10h = arg_10h & 0xffffff00 | arg_10h >> 0x1f;\n    if (uVar5 != 0) {\n        arg_10h_00 = fcn.0041a052(arg_8h);\n        uVar3 = arg_10h_00;\n        if (((uVar5 != 2) && (uVar5 != 3)) && (uVar3 = fcn.00409bd5(arg_8h, arg_ch, arg_10h_00, arg_10h),  uVar3 == 0))\n        {\n            uVar1 = *(arg_ch + arg_10h_00 * 2);\n            uVar3 = uVar1;\n            if (((uVar1 == 0x5c) || (uVar1 == 0x2f)) || (uVar1 == 0)) {\n                return CONCAT31(uVar1 >> 8, 1);\n            }\n        }\n        if (uVar5 == 1) goto code_r0x00409d91;\n        fcn.0040a497();\n        fcn.0040a497();\n        if (((uVar5 == 2) || (uVar5 == 3)) &&\n           (uVar3 = fcn.00409bb4(&fcn.00409d20::var_1000h, &stack0xffffdffc, arg_10h),  uVar3 != 0))\n        goto code_r0x00409d91;\n        if ((uVar5 == 4) || (uVar5 == 5)) {\n            cVar2 = fcn.00409fd2();\n            if (cVar2 != '\\0') goto code_r0x00409e00;\n            if ((uVar5 == 4) || (cVar2 = fcn.00409fd2(),  cVar2 != '\\0')) {\n                if (var_1000h == 0) goto code_r0x00409e6a;\n                uVar3 = arg_10h;\n                arg_10h_01 = fcn.0041a052(&fcn.00409d20::var_1000h);\n                uVar3 = fcn.00409bd5(&fcn.00409d20::var_1000h, &stack0xffffdffc, arg_10h_01, uVar3);\n            }\n            else {\n                uVar3 = fcn.00409bb4(&fcn.00409d20::var_1000h, &stack0xffffdffc, arg_10h);\n            }\n            if (uVar3 != 0) goto code_r0x00409d91;\n        }\n    }\ncode_r0x00409e6a:\n    arg_8h = fcn.0040a2c4();\n    in_stack_ffffffa0 = fcn.0040a2c4();\n    uVar3 = fcn.004116c2(L\"__rar_\", in_stack_ffffffa0, 6);\n    if (uVar3 != 0) {\n        in_stack_ffffffa4 = arg_10h;\n        if (uVar5 == 2) {\n            uStackY104 = 0x409ea4;\n            iVar4 = fcn.00409bb4(arg_8h, in_stack_ffffffa0, arg_10h);\n            return iVar4 == 0;\n        }\ncode_r0x00409e00:\n        uStackY104 = 0x409e06;\n        uVar5 = fcn.00409bfa(arg_8h, in_stack_ffffffa0, in_stack_ffffffa4);\n        return uVar5;\n    }\ncode_r0x00409d91:\n    return uVar3 & 0xffffff00;\n}\n",
        "token_count": 1000
    },
    "0040a09f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.0040a09f(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint16_t *extraout_ECX;\n    uint16_t *puVar4;\n    \n    if (((*param_1 == 0) || (param_1[1] == 0)) || (uVar2 = fcn.0041c3ac(param_1 + 2, 0x3a),  uVar2 == 0)) {\n        uVar1 = *param_1;\n        puVar4 = param_1;\n        if (uVar1 != 0) {\n            do {\n                uVar2 = uVar1;\n                if ((uVar1 < 0x20) ||\n                   (((uVar1 == 0x20 || (uVar1 == 0x2e)) &&\n                    (uVar2 = fcn.00409ff3(puVar4[1]),  puVar4 = extraout_ECX,  uVar2 != '\\0')))) goto code_r0x0040a0c2;\n                uVar1 = puVar4[1];\n                puVar4 = puVar4 + 1;\n            } while (uVar1 != 0);\n            iVar3 = fcn.0041c369(param_1, 0x4276a4);\n            if (iVar3 == 0) {\n                return 1;\n            }\n        }\n        uVar2 = 0;\n    }\n    else {\ncode_r0x0040a0c2:\n        uVar2 = uVar2 & 0xffffff00;\n    }\n    return uVar2;\n}\n",
        "token_count": 375
    },
    "0040a113": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040a113(uint16_t *param_1, char param_2)\n\n{\n    char cVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    uint16_t *extraout_ECX;\n    uint16_t *puVar3;\n    uint16_t *puVar4;\n    \n    if (*param_1 != 0) {\n        puVar4 = param_1;\n        do {\n            arg_8h = 0x4276a4;\n            if (param_2 == '\\0') {\n                arg_8h = 0x4276b4;\n            }\n            iVar2 = fcn.0041c3ac(arg_8h, *puVar4);\n            if ((iVar2 != 0) || ((param_2 != '\\0' && (*puVar4 < 0x20)))) {\n                *puVar4 = 0x5f;\n            }\n            puVar3 = puVar4 + 1;\n            if ((2 < ((-2 - param_1) + puVar3 & 0xfffffffeU)) && (*puVar4 == 0x3a)) {\n                *puVar4 = 0x5f;\n            }\n            if (((*puVar4 == 0x20) || (*puVar4 == 0x2e)) &&\n               (cVar1 = fcn.00409ff3(*puVar3),  puVar3 = extraout_ECX,  cVar1 != '\\0')) {\n                *puVar4 = 0x5f;\n            }\n            puVar4 = puVar3;\n        } while (*puVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 368
    },
    "0040a1a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * fcn.0040a1a0(int16_t *param_1, int16_t *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    \n    if ((param_2 != NULL) && (param_2 != param_1)) {\n        uVar1 = fcn.0041a052(param_1);\n        if (param_3 <= uVar1) {\n            *param_2 = 0;\n            return param_2;\n        }\n        fcn.0041a09a(param_2, param_1);\n    }\n    if (*param_1 != 0) {\n        iVar3 = 0;\n        piVar2 = param_1;\n        do {\n            if (*piVar2 == 0x2f) {\n                if (param_2 == NULL) {\n                    *piVar2 = 0x5c;\n                }\n                else {\n                    param_2[iVar3 >> 1] = 0x5c;\n                }\n            }\n            piVar2 = piVar2 + 1;\n            iVar3 = iVar3 + 2;\n        } while (*piVar2 != 0);\n    }\n    if (param_2 != NULL) {\n        return param_2;\n    }\n    return param_1;\n}\n",
        "token_count": 299
    },
    "0040a239": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040a239(uint param_1)\n\n{\n    ushort *puVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    puVar1 = fcn.0041c3d2(param_1, 0x3b);\n    if (puVar1 != NULL) {\n        uVar2 = fcn.004117b9(puVar1 + 1);\n        if (param_1 != '\\0') {\n            *puVar1 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 122
    },
    "0040a26e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.0040a26e(int32_t arg_8h, int16_t *arg_ch, int16_t *arg_10h, int32_t arg_14h)\n\n{\n    if ((arg_ch == NULL) || (*arg_ch == 0)) {\n        if (arg_8h == 0) {\n            *arg_10h = 0;\n        }\n        else {\n            fcn.0041137d(arg_8h, arg_10h, arg_14h);\n        }\n    }\n    else if (arg_10h != arg_ch) {\n        fcn.0041c20f(arg_10h, arg_ch, arg_14h);\n    }\n    if (arg_14h != 0) {\n        arg_10h[arg_14h + -1] = 0;\n    }\n    return arg_10h;\n}\n",
        "token_count": 195
    },
    "0040a2c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * fcn.0040a2c4(int16_t *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    int16_t *piVar3;\n    \n    piVar3 = param_1;\n    iVar2 = fcn.0041a052(param_1);\n    while (-1 < iVar2 + -1) {\n        cVar1 = fcn.00409ff3(piVar3, param_1[iVar2 + -1]);\n        iVar2 = extraout_ECX;\n        if (cVar1 != '\\0') {\n            return param_1 + extraout_ECX + 1;\n        }\n    }\n    if ((*param_1 != 0) && (param_1[1] == 0x3a)) {\n        return param_1 + 2;\n    }\n    return param_1;\n}\n",
        "token_count": 198
    },
    "0040a301": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.0040a301(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int16_t extraout_CX;\n    int16_t *extraout_ECX;\n    int16_t *extraout_ECX_00;\n    int16_t *piVar4;\n    int32_t extraout_EDX;\n    uint var_1000h;\n    uint uStackY32;\n    \n    fcn.0041a360();\n    iVar1 = *arg_8h;\n    while (iVar1 != 0) {\n        cVar2 = fcn.00409ff3();\n        piVar4 = extraout_ECX;\n        if ((((cVar2 != '\\0') && (extraout_ECX[-1] == 0x2e)) && (*extraout_ECX == 0x2e)) &&\n           (cVar2 = fcn.00409ff3(),  piVar4 = extraout_ECX_00,  cVar2 != '\\0')) {\n            arg_8h = extraout_ECX_00 + 2;\n        }\n        iVar1 = piVar4[-1];\n    }\n    iVar1 = *arg_8h;\n    while (iVar1 != 0) {\n        piVar4 = arg_8h;\n        if ((*arg_8h != 0) && (arg_8h[1] == 0x3a)) {\n            piVar4 = arg_8h + 2;\n        }\n        if (((*piVar4 == 0x5c) && (piVar4[1] == 0x5c)) &&\n           ((iVar3 = fcn.0041c3ac(piVar4 + 2, 0x5c),  iVar3 != 0 && (iVar3 = fcn.0041c3ac(iVar3 + 2, 0x5c),  iVar3 != 0)\n            ))) {\n            piVar4 = iVar3 + 2;\n        }\n        iVar1 = *piVar4;\n        while (iVar1 != 0) {\n            cVar2 = fcn.00409ff3();\n            if (cVar2 == '\\0') {\n                if (extraout_CX != 0x2e) break;\n            }\n            else {\n                piVar4 = extraout_EDX + 2;\n            }\n            iVar1 = *(extraout_EDX + 2);\n        }\n        if (piVar4 == arg_8h) break;\n        arg_8h = piVar4;\n        iVar1 = *piVar4;\n    }\n    if (((*arg_8h == 0x2e) && (arg_8h[1] == 0x2e)) && (arg_8h[2] == 0)) {\n        arg_8h = arg_8h + 2;\n    }\n    if (arg_ch != 0) {\n        fcn.00410976();\n        uStackY32 = 0x40a425;\n        fcn.0041a09a(arg_ch, &fcn.0040a301::var_1000h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 713
    },
    "0040a58a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040a58a(int16_t *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    char unaff_SI;\n    int16_t *piVar6;\n    \n    iVar2 = fcn.0040a453(param_1);\n    if (iVar2 == 0) {\n        fcn.004109a3(param_1, L\".rar\", param_1);\n        iVar2 = fcn.0040a453(param_1);\n    }\n    else {\n        piVar5 = iVar2 + 2;\n        if ((((*piVar5 == 0) && (uVar3 = fcn.0041a052(param_1),  uVar3 < param_1 - 3U)) ||\n            (iVar4 = fcn.004116a1(piVar5, 0x4276cc),  iVar4 == 0)) ||\n           (iVar4 = fcn.004116a1(piVar5, 0x4276c4),  iVar4 == 0)) {\n            fcn.0041a09a(piVar5, 0x427620);\n        }\n    }\n    if (unaff_SI == '\\0') {\n        piVar5 = fcn.0040a507(param_1);\n        do {\n            piVar6 = piVar5;\n            *piVar6 = *piVar6 + 1;\n            if (*piVar6 != 0x3a) {\n                return;\n            }\n            *piVar6 = 0x30;\n            piVar5 = piVar6 + -1;\n        } while ((param_1 <= piVar5) && (cVar1 = fcn.00410947(0x30, *piVar5),  cVar1 != '\\0'));\n        iVar2 = fcn.0041a052(param_1);\n        for (param_1 = param_1 + iVar2; param_1 != piVar5; param_1 = param_1 + -1) {\n            param_1[1] = *param_1;\n        }\n        *piVar6 = 0x31;\n    }\n    else {\n        cVar1 = fcn.00410947(*(iVar2 + 4));\n        if (cVar1 != '\\0') {\n            piVar5 = iVar2 + 6;\n            cVar1 = fcn.00410947(*piVar5);\n            if (cVar1 != '\\0') {\n                while( true ) {\n                    *piVar5 = *piVar5 + 1;\n                    if (*piVar5 != 0x3a) {\n                        return;\n                    }\n                    if (piVar5[-1] == 0x2e) break;\n                    *piVar5 = 0x30;\n                    piVar5 = piVar5 + -1;\n                }\n                *piVar5 = 0x41;\n                return;\n            }\n        }\n        fcn.0041a09a(iVar2 + 4, 0x4276bc);\n    }\n    return;\n}\n",
        "token_count": 689
    },
    "0040a778": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a778(int16_t *arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint lpBuffer;\n    uint uStackY72;\n    \n    fcn.0041a360();\n    if (*arg_8h == 0) {\n        return 0;\n    }\n    fcn.0040a20d();\n    iVar2 = fcn.0041a052(arg_8h);\n    cVar1 = fcn.0040a6b4();\n    if (cVar1 == '\\0') {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)();\n        if ((uVar3 != 0) && (uVar3 < 0x800)) {\n            cVar1 = fcn.00409ff3();\n            if (cVar1 == '\\0') {\n                fcn.0040a018();\n                iVar4 = fcn.0041a052(&fcn.0040a778::lpBuffer);\n                if (iVar4 + 4 + iVar2 < arg_10h) {\n                    fcn.0041c20f(arg_ch, 0x4276f4, 4);\n                    fcn.0041a09a(arg_ch + 8, &fcn.0040a778::lpBuffer);\n                    if ((*arg_8h == 0x2e) && (cVar1 = fcn.00409ff3(),  cVar1 != '\\0')) {\n                        arg_8h = arg_8h + 2;\n                    }\n                    fcn.004109a3(arg_ch, arg_8h, arg_10h);\n                    return 1;\n                }\n            }\n            else if (iVar2 + 6U < arg_10h) {\n                fcn.0041c20f(arg_ch, 0x4276f4, 4);\n                fcn.0041c20f(arg_ch + 8, &fcn.0040a778::lpBuffer, 2);\n                uStackY72 = 0x40a8a8;\n                fcn.0041a09a(arg_ch + 0xc, arg_8h);\n                return 1;\n            }\n        }\n    }\n    else {\n        cVar1 = fcn.0040a20d();\n        if (cVar1 == '\\0') {\n            if (((*arg_8h == 0x5c) && (arg_8h[1] == 0x5c)) && (iVar2 + 6U < arg_10h)) {\n                fcn.0041c20f(arg_ch, 0x4276f4, 4);\n                fcn.0041a09a(arg_ch + 8, 0x4276ec);\n                fcn.0041a09a(arg_ch + 0xe, arg_8h + 1);\n                return 1;\n            }\n        }\n        else if (iVar2 + 4U < arg_10h) {\n            fcn.0041c20f(arg_ch, 0x4276f4, 4);\n            fcn.0041a09a(arg_ch + 8, arg_8h);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 744
    },
    "0040a925": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040a925(int16_t *arg_8h, int16_t *arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uchar auStackY8200 [4096];\n    uint var_1004h;\n    uint uStackY64;\n    uchar *puStackY60;\n    uint uStackY56;\n    uint *puStackY52;\n    uint *puStackY48;\n    uint var_4h;\n    \n    var_4h = 0x40a932;\n    fcn.0041a360();\n    pcVar1 = _sym.imp.KERNEL32.dll_GetFullPathNameW;\n    if ((arg_8h == NULL) || (*arg_8h == 0)) {\n        if (arg_10h != 0) {\n            *arg_ch = 0;\n        }\n    }\n    else {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetFullPathNameW)();\n        if ((uVar3 == 0) || (0x800 < uVar3)) {\n            puStackY48 = 0x40a97a;\n            cVar2 = fcn.0040a778(arg_8h, &stack0xffffdff8, 0x800);\n            if (cVar2 != '\\0') {\n                puStackY48 = &fcn.0040a925::var_4h;\n                puStackY52 = &fcn.0040a925::var_1004h;\n                uStackY56 = 0x800;\n                puStackY60 = &stack0xffffdff8;\n                uStackY64 = 0x40a993;\n                uVar3 = (*pcVar1)();\n            }\n        }\n        if (((uVar3 != 0) && (uVar3 < 0x800)) || (arg_8h != arg_ch)) {\n            fcn.00410976();\n        }\n    }\n    return;\n}\n",
        "token_count": 456
    },
    "0040a9fd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a9fd(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uVar1 = fcn.00419956(0x40004);\n        *(param_1 + 0x10) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0040ad04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ad04(uint8_t *arg_8h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    char cVar5;\n    uint8_t uVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t arg_8h_00;\n    uint8_t *puVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    bool bVar16;\n    uint32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint32_t var_34h;\n    uint8_t *var_30h;\n    int32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    char *var_1ch;\n    int32_t var_18h;\n    uint8_t *var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (0 < arg_8h) {\n        if (arg_8h < 3) {\n            uVar11 = *(in_ECX + 0x24);\n            if ((uVar11 < 0x3c000) && (3 < uVar11)) {\n                bVar16 = arg_8h == 0x2;\n                arg_8h = NULL;\n                piVar9 = *(in_ECX + 0x10);\n                iVar7 = *(in_ECX + 0x2c);\n                if (0 < uVar11 - 4) {\n                    do {\n                        piVar10 = piVar9 + 1;\n                        iVar12 = iVar7 + 1;\n                        if ((*piVar9 == -0x18) || (iVar14 = arg_8h + 1,  *piVar9 == bVar16 + -0x18)) {\n                            iVar14 = *piVar10;\n                            if (iVar14 < 0) {\n                                if (-1 < iVar12 + iVar14) {\n                                    iVar14 = iVar14 + 0x1000000;\ncode_r0x0040b190:\n                                    *piVar10 = iVar14;\n                                }\n                            }\n                            else if (iVar14 < 0x1000000) {\n                                iVar14 = iVar14 - iVar12;\n                                goto code_r0x0040b190;\n                            }\n                            piVar10 = piVar9 + 5;\n                            iVar12 = iVar7 + 5;\n                            iVar14 = arg_8h + 5;\n                        }\n                        arg_8h = iVar14;\n                        piVar9 = piVar10;\n                        iVar7 = iVar12;\n                    } while (arg_8h < uVar11 - 4);\n                }\n            }\n        }\n        else if (arg_8h == 0x3) {\n            arg_8h = *(in_ECX + 0x10);\n            uVar11 = *(in_ECX + 0x24);\n            if (((uVar11 < 0x3c000) && (0x14 < uVar11)) && (uVar15 = *(in_ECX + 0x2c) >> 4,  0 < uVar11 - 0x15)) {\n                var_2ch = (uVar11 - 0x16 >> 4) + 1;\n                do {\n                    if ((-1 < (*arg_8h & 0x1f) - 0x10) && (uVar2 = *((*arg_8h & 0x1f) + 0x42c0a8),  uVar2 != 0)) {\n                        var_1ch = NULL;\n                        var_34h = uVar2;\n                        iVar7 = 0x12;\n                        do {\n                            if (((var_34h & 1 << (var_1ch & 0x1f)) != 0) &&\n                               (iVar12 = fcn.0040ab36(arg_8h, iVar7 + 0x18, 4),  iVar12 == 5)) {\n                                puVar13 = arg_8h;\n                                iVar12 = iVar7;\n                                iVar14 = fcn.0040ab36(arg_8h, iVar7, 0x14, iVar7, 0x14);\n                                fcn.00411c9a(arg_8h, iVar14 - uVar15 & 0xfffff, puVar13, iVar12);\n                            }\n                            var_1ch = var_1ch + 1;\n                            iVar7 = iVar7 + 0x29;\n                        } while (iVar7 < 0x65);\n                    }\n                    arg_8h = arg_8h + 0x10;\n                    uVar15 = uVar15 + 1;\n                    var_2ch = var_2ch + -1;\n                } while (var_2ch != 0);\n            }\n        }\n        else if (arg_8h == 0x4) {\n            uVar11 = *(in_ECX + 0x24);\n            var_30h = *(in_ECX + 0x18);\n            pcVar4 = *(in_ECX + 0x10);\n            var_34h = *(in_ECX + 0x14) + -3;\n            *(pcVar4 + 0x3c020) = uVar11;\n            if ((uVar11 < 0x1e000) && (-1 < var_30h)) {\n                var_8h = 0;\n                var_14h = -var_34h;\n                var_1ch = pcVar4;\n                var_10h = uVar11;\n                do {\n                    arg_8h = NULL;\n                    if (var_8h < var_10h) {\n                        var_18h = var_14h;\n                        puVar13 = pcVar4 + var_14h + uVar11;\n                        var_ch = ((var_10h - var_8h) - 1) / 3 + 1;\n                        do {\n                            if (var_18h < 3) {\ncode_r0x0040b02e:\n                                cVar5 = arg_8h;\n                            }\n                            else {\n                                var_24h = *puVar13;\n                                var_20h = puVar13[-3];\n                                iVar7 = (var_24h - var_20h) + arg_8h;\n                                var_2ch = fcn.0041c865(iVar7 - arg_8h);\n                                var_28h = fcn.0041c865(iVar7 - var_24h);\n                                iVar7 = fcn.0041c865(iVar7 - var_20h);\n                                if ((var_2ch <= var_28h) && (var_2ch <= iVar7)) goto code_r0x0040b02e;\n                                if (iVar7 < var_28h) {\n                                    cVar5 = var_20h;\n                                }\n                                else {\n                                    cVar5 = var_24h;\n                                }\n                            }\n                            cVar1 = *var_1ch;\n                            var_1ch = var_1ch + 1;\n                            var_18h = var_18h + 3;\n                            arg_8h = cVar5 - cVar1;\n                            puVar13[var_34h] = cVar5 - cVar1;\n                            puVar13 = puVar13 + 3;\n                            var_ch = var_ch + -1;\n                        } while (var_ch != 0);\n                    }\n                    var_8h = var_8h + 1;\n                    var_14h = var_14h + 1;\n                } while (var_8h < 3);\n                for (; var_30h < var_10h - 2; var_30h = var_30h + 3) {\n                    pcVar4[var_30h + uVar11] = pcVar4[var_30h + uVar11] + pcVar4[var_30h + 1 + uVar11];\n                    pcVar4[var_30h + 2 + uVar11] = pcVar4[var_30h + 2 + uVar11] + pcVar4[var_30h + 1 + uVar11];\n                }\n            }\n        }\n        else if (arg_8h == 0x5) {\n            var_28h = *(in_ECX + 0x24);\n            var_2ch = *(in_ECX + 0x14);\n            var_14h = *(in_ECX + 0x10);\n            var_30h = var_14h + var_28h;\n            *(var_14h + 0x3c020) = var_28h;\n            if ((var_28h < 0x1e000) && (var_10h = 0,  0 < var_2ch)) {\n                do {\n                    uVar11 = var_28h;\n                    var_24h = 0;\n                    var_20h = 0;\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_4h = 0;\n                    arg_8h = NULL;\n                    fcn.0041a0c0(&var_50h, 0, 0x1c);\n                    var_1ch = NULL;\n                    iVar7 = var_10h - uVar11;\n                    bVar16 = SBORROW4(var_10h, uVar11);\n                    var_18h = var_10h;\n                    iVar12 = 0;\n                    while (bVar16 != iVar7 < 0) {\n                        iVar14 = var_20h - var_ch;\n                        uVar2 = *var_14h;\n                        var_34h = uVar2;\n                        var_14h = var_14h + 1;\n                        var_ch = var_20h;\n                        iVar7 = (iVar12 * arg_8h + var_4h * iVar14 + var_8h * var_20h + var_24h * 8 >> 3 & 0xff) -\n                                var_34h;\n                        uVar6 = iVar7;\n                        var_30h[var_18h] = uVar6;\n                        var_20h = uVar6 - var_24h;\n                        arg_8h_00 = uVar2 * 8;\n                        var_24h = iVar7;\n                        iVar7 = fcn.0041c865(arg_8h_00);\n                        var_50h = var_50h + iVar7;\n                        iVar7 = fcn.0041c865(arg_8h_00 - var_ch);\n                        var_4ch = var_4ch + iVar7;\n                        iVar7 = fcn.0041c865(var_ch + arg_8h_00);\n                        var_48h = var_48h + iVar7;\n                        iVar7 = fcn.0041c865(arg_8h_00 - iVar14);\n                        var_44h = var_44h + iVar7;\n                        iVar7 = fcn.0041c865(arg_8h_00 + iVar14);\n                        var_40h = var_40h + iVar7;\n                        iVar7 = fcn.0041c865(arg_8h_00 - iVar12);\n                        var_3ch = var_3ch + iVar7;\n                        iVar7 = fcn.0041c865(arg_8h_00 + iVar12);\n                        uVar11 = var_50h;\n                        var_38h = var_38h + iVar7;\n                        if ((var_1ch & 0x1f) == 0) {\n                            uVar15 = 0;\n                            var_50h = 0;\n                            uVar8 = 1;\n                            do {\n                                uVar3 = (&var_50h)[uVar8];\n                                if (uVar3 < uVar11) {\n                                    uVar11 = uVar3;\n                                    uVar15 = uVar8;\n                                }\n                                (&var_50h)[uVar8] = 0;\n                                uVar8 = uVar8 + 1;\n                            } while (uVar8 < 7);\n                            if (uVar15 == 1) {\n                                if (-0x11 < var_8h) {\n                                    var_8h = var_8h + -1;\n                                }\n                            }\n                            else if (uVar15 == 2) {\n                                if (var_8h < 0x10) {\n                                    var_8h = var_8h + 1;\n                                }\n                            }\n                            else if (uVar15 == 3) {\n                                if (-0x11 < var_4h) {\n                                    var_4h = var_4h + -1;\n                                }\n                            }\n                            else if (uVar15 == 4) {\n                                if (var_4h < 0x10) {\n                                    var_4h = var_4h + 1;\n                                }\n                            }\n                            else if (uVar15 == 5) {\n                                if (-0x11 < arg_8h) {\n                                    arg_8h = arg_8h + -1;\n                                }\n                            }\n                            else if ((uVar15 == 6) && (arg_8h < 0x10)) {\n                                arg_8h = arg_8h + 1;\n                            }\n                        }\n                        var_18h = var_18h + var_2ch;\n                        var_1ch = var_1ch + 1;\n                        iVar7 = var_18h - var_28h;\n                        iVar12 = iVar14;\n                        bVar16 = SBORROW4(var_18h, var_28h);\n                    }\n                    var_10h = var_10h + 1;\n                } while (var_10h < var_2ch);\n            }\n        }\n        else if (arg_8h == 0x6) {\n            uVar11 = *(in_ECX + 0x24);\n            iVar7 = *(in_ECX + 0x14);\n            iVar12 = 0;\n            *(*(in_ECX + 0x10) + 0x3c020) = uVar11;\n            if ((uVar11 < 0x1e000) && (arg_8h = NULL,  0 < iVar7)) {\n                do {\n                    cVar5 = '\\0';\n                    for (iVar14 = arg_8h + uVar11; iVar14 < uVar11 * 2; iVar14 = iVar14 + iVar7) {\n                        cVar5 = cVar5 - *(*(in_ECX + 0x10) + iVar12);\n                        iVar12 = iVar12 + 1;\n                        *(*(in_ECX + 0x10) + iVar14) = cVar5;\n                    }\n                    arg_8h = arg_8h + 1;\n                } while (arg_8h < iVar7);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 3386
    },
    "0040b544": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint16_t __thiscall fcn.0040b544(int32_t *param_1, char param_2)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    \n    uVar2 = param_1[5];\n    if (uVar2 < 3) {\n        uVar1 = 0;\n    }\n    else {\n        if (param_2 != '\\0') {\n            uVar2 = param_1[6];\n        }\n        uVar1 = fcn.00405593(0xffffffff, *param_1 + 2, uVar2 - 2);\n        uVar1 = ~uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 153
    },
    "0040b656": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b656(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    bool bVar2;\n    \n    if ((*(in_ECX + 0x28) != '\\0') && (iVar1 = *(in_ECX + 0x2c),  iVar1 != 0)) {\n        if ((*(in_ECX + 0x1890) | *(in_ECX + 0x1894)) != 0) {\n            bVar2 = CARRY4(arg_8h, *(in_ECX + 0x1888));\n            arg_8h = arg_8h + *(in_ECX + 0x1888);\n            arg_ch = arg_ch + *(in_ECX + 0x188c) + bVar2;\n            arg_10h = *(in_ECX + 0x1890);\n            arg_14h = *(in_ECX + 0x1894);\n        }\n        fcn.0040d39e(*(in_ECX + 0x1880), *(in_ECX + 0x1884), *(iVar1 + 0x6810), *(iVar1 + 0x6814), arg_8h, arg_ch, \n                     arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 318
    },
    "0040b7ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint32_t __cdecl fcn.0040b7ac(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t *arg_8h_00;\n    uint32_t uVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t *piVar5;\n    char *in_ECX;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if (in_ECX[0x3ac5] != '\\0') {\n        arg_ch = arg_ch & 0xfffffff0;\n    }\n    uVar6 = 0;\n    var_8h = 0;\n    iVar3 = arg_8h;\n    while (arg_ch != 0) {\n        arg_8h_00 = *(in_ECX + 0x2c);\n        if (*in_ECX == '\\0') {\n            uVar6 = arg_ch;\n            if ((*(in_ECX + 0x24) < 1) &&\n               ((0x7fffffff < *(in_ECX + 0x24) || (*(in_ECX + 0x20) <= arg_ch && arg_ch != *(in_ECX + 0x20))))) {\n                uVar6 = *(in_ECX + 0x20);\n            }\n            if (uVar6 == 0) {\n                return 0;\n            }\n            if (arg_8h_00[1] == -1) {\n                return 0xffffffff;\n            }\n            iVar7 = iVar3;\n            uVar6 = (**(*arg_8h_00 + 4))(iVar3, uVar6);\n            piVar5 = *(in_ECX + 0x38);\n            if (piVar5 == NULL) {\n                piVar5 = arg_8h_00 + 0x15f0;\n            }\n            if (*(piVar5 + 0x1089) != '\\0') {\n                fcn.00409859(iVar7, uVar6, iVar3);\n            }\n        }\n        else {\n            fcn.0041bb00(arg_8h, *(in_ECX + 8), *(in_ECX + 4));\n            uVar6 = *(in_ECX + 4);\n            *(in_ECX + 4) = 0;\n        }\n        puVar1 = in_ECX + 0x1878;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 + uVar6;\n        *(in_ECX + 0x187c) = *(in_ECX + 0x187c) + (uVar6 >> 0x1f) + CARRY4(uVar2, uVar6);\n        var_8h = var_8h + uVar6;\n        iVar3 = iVar3 + uVar6;\n        arg_ch = arg_ch - uVar6;\n        puVar1 = in_ECX + 0x20;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 - uVar6;\n        *(in_ECX + 0x24) = (*(in_ECX + 0x24) - (uVar6 >> 0x1f)) - (uVar2 < uVar6);\n        if (((*(in_ECX + 0x20) | *(in_ECX + 0x24)) != 0) || (in_ECX[0x1857] == '\\0')) break;\n        cVar4 = fcn.00418773(arg_8h_00, in_ECX, 1, *(in_ECX + 0x1854));\n        if (cVar4 == '\\0') {\n            in_ECX[0x1858] = '\\x01';\n            return 0xffffffff;\n        }\n    }\n    iVar3 = *(in_ECX + 0x2c);\n    if (iVar3 != 0) {\n        fcn.0040b656(*(iVar3 + 0xa218) + *(in_ECX + 0x1878), \n                     *(iVar3 + 0xa21c) + *(in_ECX + 0x187c) + CARRY4(*(iVar3 + 0xa218), *(in_ECX + 0x1878)), \n                     *(in_ECX + 0x1860), *(in_ECX + 0x1864));\n    }\n    if ((uVar6 != 0xffffffff) && (uVar6 = var_8h,  in_ECX[0x3ac5] != '\\0')) {\n        fcn.00405e36(arg_8h, var_8h);\n    }\n    fcn.00410bc4();\n    return uVar6;\n}\n",
        "token_count": 1071
    },
    "0040b914": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040b914(int32_t param_1, uint param_2, uint32_t param_3)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    \n    *(param_1 + 0x1c) = param_2;\n    *(param_1 + 0x18) = param_3;\n    if (*(param_1 + 0xc) == '\\0') {\n        if (*(param_1 + 0x29) == '\\0') {\n            fcn.00408a52(param_2, param_3);\n        }\n    }\n    else if (param_3 < *(param_1 + 0x10) || param_3 == *(param_1 + 0x10)) {\n        fcn.0041bb00(*(param_1 + 0x14), param_2, param_3);\n        *(param_1 + 0x14) = *(param_1 + 0x14) + param_3;\n        *(param_1 + 0x10) = *(param_1 + 0x10) - param_3;\n    }\n    puVar1 = param_1 + 0x1880;\n    uVar2 = *puVar1;\n    *puVar1 = *puVar1 + param_3;\n    *(param_1 + 0x1884) = *(param_1 + 0x1884) + CARRY4(uVar2, param_3);\n    if (*(param_1 + 0x2a) == '\\0') {\n        fcn.00409859(param_2, param_3);\n    }\n    fcn.00410bc4();\n    return;\n}\n",
        "token_count": 376
    },
    "0040ba05": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040ba05(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x10) != '\\0') {\n        uVar2 = 0xffffffec;\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(param_2, 0xffffffec);\n        (*_sym.imp.USER32.dll_SetWindowLongW)(uVar2, 0xffffffec, uVar1 | 0x400000);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0040ba2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040ba2c(uint arg_8h)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    int32_t *extraout_ECX;\n    int16_t iVar8;\n    uint32_t uVar9;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1040h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    fcn.0041a360();\n    iVar4 = fcn.0041c3ac(*(unaff_EBP + 8), 0x5c);\n    iVar5 = unaff_EBP + -0x2040;\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, iVar5, 0x800);\n        iVar5 = fcn.0041c3d2(unaff_EBP + -0x2040, 0x5c);\n        if (iVar5 == 0) goto code_r0x0040bd08;\n        iVar5 = iVar5 + 2;\n    }\n    fcn.0041a09a(iVar5, *(unaff_EBP + 8));\n    fcn.00408765();\n    *(unaff_EBP + -4) = 0;\n    cVar3 = fcn.004087a2(unaff_EBP + -0x2040, 4);\n    if (cVar3 == '\\0') {\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00408c21();\n        goto code_r0x0040bd08;\n    }\n    *(unaff_EBP + -0x10) = 0xffffffff;\n    *(unaff_EBP + 0xb) = 0;\n    *(unaff_EBP + -0x14) = 0;\n    do {\n        if (*(unaff_EBP + -0x10) != -1) goto code_r0x0040bbf6;\n        uVar6 = fcn.00408b52();\n        *(unaff_EBP + -0x1c) = uVar6;\n        iVar5 = fcn.00408e24(unaff_EBP + -0x4040, 0x2000);\n        *(unaff_EBP + -0x18) = iVar5;\n        iVar4 = 0;\n        if (-1 < iVar5 + -0x10) {\n            do {\n                piVar1 = unaff_EBP + -0x4040 + iVar4;\n                if (((*piVar1 == '*') && (*(unaff_EBP + -0x403f + iVar4) == '*')) &&\n                   (iVar5 = fcn.0041c9b8(unaff_EBP + -0x403e + iVar4, \"*messages***\", 0xb),  iVar5 == 0)) {\ncode_r0x0040bbba:\n                    *(unaff_EBP + -0x10) = iVar4 + *(unaff_EBP + -0x1c);\n                    break;\n                }\n                if (((*piVar1 == 0x2a) && (iVar5 = unaff_EBP + -0x403c + iVar4,  *(iVar5 + -2) == 0x2a)) &&\n                   ((iVar4 <= *(unaff_EBP + -0x18) + -0x20 && (iVar5 = fcn.0041c259(iVar5, 0x427708, 0xb),  iVar5 == 0))\n                   )) {\n                    *(unaff_EBP + 0xb) = 1;\n                    goto code_r0x0040bbba;\n                }\n                if (((*piVar1 == 'R') && (*(unaff_EBP + -0x403f + iVar4) == 'a')) &&\n                   (iVar5 = fcn.0041c9b8(unaff_EBP + -0x403e + iVar4, 0x427700, 4),  iVar5 == 0)) goto code_r0x0040bcfd;\n                iVar4 = iVar4 + 1;\n            } while (iVar4 <= *(unaff_EBP + -0x18) + -0x10);\n        }\n        fcn.00408f96();\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n    } while (*(unaff_EBP + -0x14) < 0x80);\n    if (*(unaff_EBP + -0x10) != -1) {\ncode_r0x0040bbf6:\n        fcn.00408f96(*(unaff_EBP + -0x10), *(unaff_EBP + -0x10) >> 0x1f, 0);\n        iVar5 = fcn.0041c8ee(0x80002);\n        *extraout_ECX = iVar5;\n        if (iVar5 != 0) {\n            uVar7 = fcn.00408e24(iVar5, 0x80000);\n            cVar3 = *(unaff_EBP + 0xb);\n            extraout_ECX[1] = uVar7;\n            if (cVar3 == '\\0') {\n                iVar5 = fcn.0041c8ee(uVar7 * 2 + 2);\n                if (iVar5 == 0) goto code_r0x0040bcfd;\n                *(extraout_ECX[1] + *extraout_ECX) = 0;\n                fcn.0041137d(*extraout_ECX, iVar5, extraout_ECX[1] + 1);\n                fcn.00419d72(*extraout_ECX);\n                *extraout_ECX = iVar5;\n            }\n            else {\n                extraout_ECX[1] = uVar7 >> 1;\n            }\n            uVar7 = 0x40000;\n            if (extraout_ECX[1] < 0x40001) {\n                uVar7 = extraout_ECX[1];\n            }\n            *(*extraout_ECX + uVar7 * 2) = 0;\n            iVar5 = 0;\n            uVar7 = 0;\n            if (extraout_ECX[1] != 0) {\n                do {\n                    iVar4 = *extraout_ECX;\n                    iVar8 = *(iVar4 + uVar7 * 2);\n                    uVar9 = uVar7 + 1;\n                    if (iVar8 == 0) break;\n                    if (iVar8 == 0x5c) {\n                        iVar2 = *(iVar4 + uVar9 * 2);\n                        if (iVar2 == 0x22) {\n                            iVar8 = 0x22;\n                        }\n                        else if (iVar2 == 0x5c) {\n                            iVar8 = 0x5c;\n                        }\n                        else if (iVar2 == 0x6e) {\n                            iVar8 = 10;\n                        }\n                        else if (iVar2 == 0x72) {\n                            iVar8 = 0xd;\n                        }\n                        else {\n                            if (iVar2 != 0x74) goto code_r0x0040bce2;\n                            iVar8 = 9;\n                        }\n                        uVar9 = uVar7 + 2;\n                    }\n                    else if ((iVar8 == 0xd) || (iVar8 == 10)) {\n                        iVar8 = 0xc;\n                    }\ncode_r0x0040bce2:\n                    *(iVar4 + iVar5 * 2) = iVar8;\n                    iVar5 = iVar5 + 1;\n                    uVar7 = uVar9;\n                } while (uVar9 < extraout_ECX[1]);\n            }\n            *(*extraout_ECX + iVar5 * 2) = 0;\n            extraout_ECX[1] = iVar5;\n        }\n    }\ncode_r0x0040bcfd:\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00408c21();\ncode_r0x0040bd08:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1954
    },
    "0040bd17": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_15h\n\nvoid __cdecl fcn.0040bd17(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t arg_10h_00;\n    ushort *puVar4;\n    int32_t *extraout_ECX;\n    uint uVar5;\n    uchar auStackY8216 [4096];\n    uint var_1014h;\n    uint uStackY96;\n    uint var_15h;\n    \n    fcn.0041a360();\n    if (*extraout_ECX != 0) {\n        uVar5 = 0x42774a;\n        if (arg_14h == 0) {\n            uVar5 = 0x427740;\n        }\n        else if (arg_14h == 1) {\n            uVar5 = 0x427744;\n        }\n        else if (arg_14h == 2) {\n            uVar5 = 0x427748;\n        }\n        uVar5 = fcn.00405593(0xffffffff, uVar5, 1);\n        if (arg_18h != 0) {\n            fcn.0041133e(arg_18h, &stack0xffffdfe8, 0x1000);\n            uVar1 = fcn.0041a2d0();\n            uVar5 = fcn.00405593(uVar5, &stack0xffffdfe8, uVar1);\n        }\n        fcn.0041133e(arg_8h, &fcn.0040bd17::var_1014h, 0x1000);\n        uVar1 = fcn.0041a2d0();\n        fcn.00405593(uVar5, &fcn.0040bd17::var_1014h, uVar1);\n        uStackY96 = 0x40bdde;\n        fcn.004082d4();\n        iVar2 = fcn.0040b99f();\n        if (iVar2 != 0) {\n            iVar2 = iVar2 + 0x14;\n            iVar3 = fcn.0041c3ac(iVar2, 0xc);\n            if (iVar3 == 0) {\n                arg_10h_00 = 0xff;\n            }\n            else {\n                arg_10h_00 = iVar3 - iVar2 >> 1;\n            }\n            if (arg_10h - 1U < arg_10h_00) {\n                arg_10h_00 = -(arg_10h != 0) & arg_10h - 1U;\n            }\n            if (arg_10h_00 != 0) {\n                uStackY96 = 0x40be2f;\n                fcn.0041c20f(arg_ch, iVar2, arg_10h_00);\n            }\n            *(arg_ch + arg_10h_00 * 2) = 0;\n            puVar4 = fcn.0041c3d2(arg_ch, 0x22);\n            if (puVar4 == NULL) {\n                return;\n            }\n            *puVar4 = 0;\n            return;\n        }\n    }\n    if (arg_8h != arg_ch) {\n        fcn.0041a09a(arg_ch, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 777
    },
    "0040bf4e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040bf4e(int32_t hWnd, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint lpString;\n    uint var_50h;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t lpRect;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = fcn.0040be67(arg_ch, &var_10h, &var_ch);\n    (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n    (*_sym.imp.USER32.dll_GetClientRect)(hWnd, &var_50h);\n    iVar2 = (var_28h - lpRect) + 1;\n    iVar4 = (var_24h - var_2ch) + 1;\n    iVar5 = iVar4 - var_44h;\n    iVar3 = iVar2 - var_48h;\n    var_8h = iVar3;\n    if (var_1h != '\\0') {\n        if (arg_10h != '\\0') goto code_r0x0040c093;\n        var_14h = (var_48h * var_10h) / 100 + iVar3;\n        var_18h = (var_44h * var_ch) / 100 + iVar5;\n        iVar3 = (iVar2 - var_14h) / 2 + lpRect;\n        iVar2 = (iVar4 - var_18h) / 2 + var_2ch;\n        if (iVar3 < 0) {\n            iVar3 = 0;\n        }\n        if (iVar2 < 0) {\n            iVar2 = 0;\n        }\n        var_1ch = 0x204;\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(hWnd, 0xfffffff0);\n        if ((uVar1 & 0x800) == 0) {\n            var_1ch = 0x206;\n        }\n        (*_sym.imp.USER32.dll_SetWindowPos)(hWnd, 0, iVar3, iVar2, var_14h, var_18h, var_1ch);\n        (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n    }\n    iVar3 = var_8h;\n    if (arg_10h == '\\0') {\n        (*_sym.imp.USER32.dll_GetWindowTextW)(hWnd, &lpString, 0x400);\n        fcn.0040bd17(&lpString, &lpString, 0x400, 1, arg_ch);\n        (*_sym.imp.USER32.dll_SetWindowTextW)(hWnd, &lpString);\n    }\ncode_r0x0040c093:\n    iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(8);\n    iVar4 = (*_sym.imp.USER32.dll_GetWindow)(hWnd, 5);\n    hWnd = 0;\n    var_8h = iVar4;\n    while( true ) {\n        if ((iVar4 == 0) || (0x1ff < hWnd)) {\n            return;\n        }\n        (*_sym.imp.USER32.dll_GetWindowTextW)(iVar4, &lpString, 0x400);\n        if (lpString != 0) {\n            fcn.0040bd17(&lpString, &lpString, 0x400, 1, arg_ch);\n            (*_sym.imp.USER32.dll_SetWindowTextW)(iVar4, &lpString);\n        }\n        if (var_1h != '\\0') {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar4, &var_40h);\n            (*_sym.imp.USER32.dll_SetWindowPos)\n                      (iVar4, 0, (((var_40h - iVar3 / 2) - lpRect) * var_10h) / 100, \n                       (((var_3ch - (iVar5 - iVar2)) - var_2ch) * var_ch) / 100, \n                       (((var_38h - var_40h) + 1) * var_10h) / 100, (((var_34h - var_3ch) + 1) * var_ch) / 100, 0x204);\n        }\n        iVar4 = (*_sym.imp.USER32.dll_GetWindow)(iVar4, 2);\n        if (iVar4 == var_8h) break;\n        hWnd = hWnd + 1;\n    }\n    return;\n}\n",
        "token_count": 1158
    },
    "0040c25f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c25f(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *in_ECX;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint var_38h;\n    uint8_t var_34h [8];\n    uint var_2ch;\n    uint var_28h;\n    uint8_t var_24h [12];\n    uint8_t *var_18h;\n    uint8_t *var_14h;\n    uint8_t *var_10h;\n    uint8_t *var_ch;\n    uint8_t *var_8h;\n    int32_t *var_4h;\n    \n    iVar2 = *in_ECX;\n    iVar7 = iVar2 + -6;\n    var_4h = in_ECX;\n    fcn.0041bb00(&var_38h, arg_8h, 0x20);\n    iVar3 = 0;\n    iVar6 = 0;\n    arg_8h = 0;\n    if (0 < iVar7) {\n        do {\n            if (*in_ECX < iVar6) {\n                return;\n            }\n            if (iVar3 < iVar7) {\n                piVar4 = var_34h + iVar3 * 4 + -4;\n                do {\n                    if (3 < arg_8h) break;\n                    iVar8 = arg_8h + iVar6 * 4;\n                    iVar3 = iVar3 + 1;\n                    arg_8h = arg_8h + 1;\n                    in_ECX[iVar8 + 5] = *piVar4;\n                    piVar4 = piVar4 + 1;\n                    in_ECX = var_4h;\n                } while (iVar3 < iVar7);\n            }\n            if (arg_8h == 4) {\n                iVar6 = iVar6 + 1;\n                arg_8h = 0;\n            }\n        } while (iVar3 < iVar7);\n    }\n    if (iVar6 <= *in_ECX) {\n        iVar3 = iVar7 * 4;\n        var_ch = var_24h + iVar3 + -0x17;\n        var_10h = var_24h + iVar3 + -0x16;\n        var_14h = var_24h + iVar3 + -0x15;\n        var_18h = var_24h + iVar3 + -0x18;\n        var_8h = 0x434798;\n        do {\n            var_38h._1_1_ = var_38h._1_1_ ^ *(*var_10h + 0x4348b8);\n            var_38h._2_1_ = var_38h._2_1_ ^ *(*var_14h + 0x4348b8);\n            var_38h._3_1_ = var_38h._3_1_ ^ *(*var_18h + 0x4348b8);\n            uVar1 = *var_8h;\n            var_8h = var_8h + 1;\n            var_38h._0_1_ = var_38h ^ *(*var_ch + 0x4348b8) ^ uVar1;\n            if (iVar7 == 8) {\n                puVar5 = var_34h;\n                iVar3 = 3;\n                do {\n                    iVar8 = 4;\n                    do {\n                        *puVar5 = *puVar5 ^ puVar5[-4];\n                        puVar5 = puVar5 + 1;\n                        iVar8 = iVar8 + -1;\n                    } while (iVar8 != 0);\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n                var_28h._0_1_ = var_28h ^ *(var_2ch + 0x4348b8);\n                var_28h._1_1_ = var_28h._1_1_ ^ *(var_2ch._1_1_ + 0x4348b8);\n                var_28h._2_1_ = var_28h._2_1_ ^ *(var_2ch._2_1_ + 0x4348b8);\n                var_28h._3_1_ = var_28h._3_1_ ^ *(var_2ch._3_1_ + 0x4348b8);\n                puVar5 = var_24h;\n                iVar3 = 3;\n                do {\n                    iVar8 = 4;\n                    do {\n                        *puVar5 = *puVar5 ^ puVar5[-4];\n                        puVar5 = puVar5 + 1;\n                        iVar8 = iVar8 + -1;\n                    } while (iVar8 != 0);\n                    iVar3 = iVar3 + -1;\n                    in_ECX = var_4h;\n                } while (iVar3 != 0);\n            }\n            else if (1 < iVar7) {\n                puVar5 = var_34h;\n                iVar3 = iVar2 + -7;\n                do {\n                    iVar8 = 0;\n                    do {\n                        puVar5[iVar8] = puVar5[iVar8] ^ puVar5[iVar8 + -4];\n                        iVar8 = iVar8 + 1;\n                    } while (iVar8 < 4);\n                    puVar5 = puVar5 + 4;\n                    iVar3 = iVar3 + -1;\n                    in_ECX = var_4h;\n                } while (iVar3 != 0);\n            }\n            iVar3 = 0;\n            if (0 < iVar7) {\n                do {\n                    if (*in_ECX < iVar6) {\n                        return;\n                    }\n                    if (iVar3 < iVar7) {\n                        piVar4 = var_34h + iVar3 * 4 + -4;\n                        do {\n                            if (3 < arg_8h) break;\n                            iVar8 = arg_8h + iVar6 * 4;\n                            iVar3 = iVar3 + 1;\n                            arg_8h = arg_8h + 1;\n                            in_ECX[iVar8 + 5] = *piVar4;\n                            piVar4 = piVar4 + 1;\n                            in_ECX = var_4h;\n                        } while (iVar3 < iVar7);\n                    }\n                    if (arg_8h == 4) {\n                        iVar6 = iVar6 + 1;\n                        arg_8h = 0;\n                    }\n                } while (iVar3 < iVar7);\n            }\n        } while (iVar6 <= *in_ECX);\n    }\n    return;\n}\n",
        "token_count": 1491
    },
    "0040c4af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c4af(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t *in_ECX;\n    uint var_10h;\n    uint8_t var_ch;\n    uint8_t var_bh;\n    uint8_t var_ah;\n    uint8_t var_9h;\n    uint8_t var_8h;\n    uint8_t var_7h;\n    uint8_t var_6h;\n    uint8_t var_5h;\n    uint8_t var_4h;\n    uint var_3h;\n    \n    fcn.0040c22d(&var_10h, arg_8h, in_ECX + *in_ECX * 4 + 5);\n    *arg_ch = *(var_10h * 4 + 0x433398) ^ *(var_3h * 4 + 0x432f98) ^ *(var_6h * 4 + 0x432b98) ^ *(var_9h * 4 + 0x432798)\n    ;\n    arg_ch[1] = *(var_ch * 4 + 0x433398) ^ *(var_10h._1_1_ * 4 + 0x432f98) ^ *(var_3h._1_1_ * 4 + 0x432b98) ^\n                *(var_5h * 4 + 0x432798);\n    arg_ch[2] = *(var_8h * 4 + 0x433398) ^ *(var_bh * 4 + 0x432f98) ^ *(var_10h._2_1_ * 4 + 0x432b98) ^\n                *(var_3h._2_1_ * 4 + 0x432798);\n    arg_ch[3] = *(var_4h * 4 + 0x433398) ^ *(var_7h * 4 + 0x432f98) ^ *(var_ah * 4 + 0x432b98) ^\n                *(var_10h._3_1_ * 4 + 0x432798);\n    if (1 < *in_ECX + -1) {\n        arg_8h = *in_ECX + -2;\n        do {\n            fcn.0040c22d();\n            *arg_ch = *(var_10h * 4 + 0x433398) ^ *(var_3h * 4 + 0x432f98) ^ *(var_6h * 4 + 0x432b98) ^\n                      *(var_9h * 4 + 0x432798);\n            arg_ch[1] = *(var_ch * 4 + 0x433398) ^ *(var_10h._1_1_ * 4 + 0x432f98) ^ *(var_3h._1_1_ * 4 + 0x432b98) ^\n                        *(var_5h * 4 + 0x432798);\n            arg_ch[2] = *(var_8h * 4 + 0x433398) ^ *(var_bh * 4 + 0x432f98) ^ *(var_10h._2_1_ * 4 + 0x432b98) ^\n                        *(var_3h._2_1_ * 4 + 0x432798);\n            arg_8h = arg_8h + -1;\n            arg_ch[3] = *(var_4h * 4 + 0x433398) ^ *(var_7h * 4 + 0x432f98) ^ *(var_ah * 4 + 0x432b98) ^\n                        *(var_10h._3_1_ * 4 + 0x432798);\n        } while (arg_8h != 0);\n    }\n    fcn.0040c22d(&var_10h, arg_ch, in_ECX + 9);\n    *arg_ch = *(var_10h + 0x4347b8);\n    *(arg_ch + 1) = *(var_3h + 0x4347b8);\n    *(arg_ch + 2) = *(var_6h + 0x4347b8);\n    *(arg_ch + 3) = *(var_9h + 0x4347b8);\n    *(arg_ch + 1) = *(var_ch + 0x4347b8);\n    *(arg_ch + 5) = *(var_10h._1_1_ + 0x4347b8);\n    *(arg_ch + 6) = *(var_3h._1_1_ + 0x4347b8);\n    *(arg_ch + 7) = *(var_5h + 0x4347b8);\n    *(arg_ch + 2) = *(var_8h + 0x4347b8);\n    *(arg_ch + 9) = *(var_bh + 0x4347b8);\n    *(arg_ch + 10) = *(var_10h._2_1_ + 0x4347b8);\n    *(arg_ch + 0xb) = *(var_3h._2_1_ + 0x4347b8);\n    *(arg_ch + 3) = *(var_4h + 0x4347b8);\n    *(arg_ch + 0xd) = *(var_7h + 0x4347b8);\n    *(arg_ch + 0xe) = *(var_ah + 0x4347b8);\n    *(arg_ch + 0xf) = *(var_10h._3_1_ + 0x4347b8);\n    fcn.0040c22d(arg_ch, arg_ch, in_ECX + 5);\n    return;\n}\n",
        "token_count": 1318
    },
    "0040c768": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040c768(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uchar uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uchar uStack776;\n    uint var_303h;\n    uint var_2ebh;\n    uint var_29ch;\n    uint var_23dh;\n    uint var_225h;\n    uint var_216h;\n    uint var_205h;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    iVar4 = 0;\n    uVar1 = 1;\n    do {\n        (&uStack776)[iVar4] = uVar1;\n        *(&var_205h + iVar4) = uVar1;\n        *(&var_104h + uVar1) = iVar4;\n        iVar4 = iVar4 + 1;\n        uVar1 = uVar1 ^ -((uVar1 & 0x80) != 0) & 0x11b ^ uVar1 * 2;\n    } while (uVar1 != 1);\n    uVar5 = 0;\n    do {\n        *(uVar5 + 0x434798) = uVar1;\n        uVar1 = uVar1 * 2 ^ -((uVar1 & 0x80) != 0) & 0x11b;\n        uVar5 = uVar5 + 1;\n    } while (uVar5 < 0x1e);\n    var_4h = 0;\n    do {\n        if (var_4h == '\\0') {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = *(&var_205h - *(&var_104h + (var_4h & 0xff)));\n        }\n        iVar4 = (((uVar1 * 2 ^ uVar1) * 2 ^ uVar1) * 2 ^ uVar1) * 2;\n        uVar2 = iVar4 >> 8 ^ uVar1 ^ iVar4 ^ 99;\n        iVar4 = var_4h * 4;\n        *(var_4h + 0x4348b8) = uVar2;\n        *(iVar4 + 0x433799) = uVar2;\n        *(iVar4 + 0x433798) = uVar2;\n        *(iVar4 + 0x433b9b) = uVar2;\n        *(iVar4 + 0x433b98) = uVar2;\n        *(iVar4 + 0x433f9b) = uVar2;\n        *(iVar4 + 0x433f9a) = uVar2;\n        *(iVar4 + 0x43439a) = uVar2;\n        *(iVar4 + 0x434399) = uVar2;\n        if (uVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = *(&var_2ebh + *(&var_104h + uVar2));\n        }\n        *(iVar4 + 0x43379b) = uVar3;\n        *(iVar4 + 0x433b9a) = uVar3;\n        *(iVar4 + 0x433f99) = uVar3;\n        *(iVar4 + 0x434398) = uVar3;\n        if (uVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = *(&var_303h + *(&var_104h + uVar2));\n        }\n        *(iVar4 + 0x43379a) = uVar3;\n        *(iVar4 + 0x433b99) = uVar3;\n        *(iVar4 + 0x433f98) = uVar3;\n        *(iVar4 + 0x43439b) = uVar3;\n        uVar1 = var_4h & 0xff;\n        iVar6 = ((uVar1 << 3 ^ uVar1) << 2 ^ uVar1) * 2;\n        if ((iVar6 >> 8 ^ iVar6) == 5) {\n            uVar2 = 0;\n        }\n        else {\n            uVar1 = ((uVar1 << 3 ^ uVar1) << 2 ^ uVar1) * 2;\n            uVar2 = *(&var_205h - *(&var_104h + (uVar1 >> 8 ^ uVar1 & 0xff ^ 5)));\n        }\n        *(var_4h + 0x4347b8) = uVar2;\n        if (uVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = *(&var_29ch + *(&var_104h + uVar2));\n        }\n        uVar1 = uVar2;\n        iVar6 = uVar1 * 4;\n        *(iVar4 + 0x43279a) = uVar3;\n        *(iVar4 + 0x432b99) = uVar3;\n        *(iVar4 + 0x432f98) = uVar3;\n        *(iVar4 + 0x43339b) = uVar3;\n        *(iVar6 + 0x43179a) = uVar3;\n        *(iVar6 + 0x431b99) = uVar3;\n        *(iVar6 + 0x431f98) = uVar3;\n        *(iVar6 + 0x43239b) = uVar3;\n        if (uVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = *(&var_23dh + *(&var_104h + uVar1));\n        }\n        *(iVar4 + 0x432798) = uVar3;\n        *(iVar4 + 0x432b9b) = uVar3;\n        *(iVar4 + 0x432f9a) = uVar3;\n        *(iVar4 + 0x433399) = uVar3;\n        *(iVar6 + 0x431798) = uVar3;\n        *(iVar6 + 0x431b9b) = uVar3;\n        *(iVar6 + 0x431f9a) = uVar3;\n        *(iVar6 + 0x432399) = uVar3;\n        if (uVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = *(&var_216h + *(&var_104h + uVar1));\n        }\n        *(iVar4 + 0x432799) = uVar3;\n        *(iVar4 + 0x432b98) = uVar3;\n        *(iVar4 + 0x432f9b) = uVar3;\n        *(iVar4 + 0x43339a) = uVar3;\n        *(iVar6 + 0x431799) = uVar3;\n        *(iVar6 + 0x431b98) = uVar3;\n        *(iVar6 + 0x431f9b) = uVar3;\n        *(iVar6 + 0x43239a) = uVar3;\n        if (uVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = *(&var_225h + *(&var_104h + uVar1));\n        }\n        var_4h = var_4h + 1;\n        *(iVar4 + 0x43279b) = uVar3;\n        *(iVar4 + 0x432b9a) = uVar3;\n        *(iVar4 + 0x432f99) = uVar3;\n        *(iVar4 + 0x433398) = uVar3;\n        *(iVar6 + 0x43179b) = uVar3;\n        *(iVar6 + 0x431b9a) = uVar3;\n        *(iVar6 + 0x431f99) = uVar3;\n        *(iVar6 + 0x432398) = uVar3;\n    } while (var_4h < 0x100);\n    return;\n}\n",
        "token_count": 1821
    },
    "0040ca4b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040ca4b(uint param_1)\n\n{\n    if (*0x4348b8 == '\\0') {\n        fcn.0040c768();\n    }\n    return param_1;\n}\n",
        "token_count": 50
    },
    "0040ca60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ca60(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    uint32_t uVar4;\n    uint var_20h;\n    \n    if (arg_10h == 0x80) {\n        *in_ECX = 10;\n        uVar4 = 0x10;\n    }\n    else if (arg_10h == 0xc0) {\n        *in_ECX = 0xc;\n        uVar4 = 0x18;\n    }\n    else {\n        uVar4 = arg_8h;\n        if (arg_10h == 0x100) {\n            *in_ECX = 0xe;\n            uVar4 = 0x20;\n        }\n    }\n    uVar1 = 0;\n    if (uVar4 != 0) {\n        do {\n            uVar2 = uVar1 + 1;\n            *(&var_20h + (uVar1 & 0xfffffffc) + (uVar1 & 3)) = *(uVar1 + arg_ch);\n            uVar1 = uVar2;\n        } while (uVar2 < uVar4);\n    }\n    iVar3 = 0;\n    do {\n        *(in_ECX + iVar3 + 4) = *(iVar3 + arg_14h);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x10);\n    fcn.0040c25f(&var_20h);\n    if (arg_8h == '\\0') {\n        fcn.0040c41f();\n    }\n    return;\n}\n",
        "token_count": 401
    },
    "0040cbce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040cbce(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 1) == '\\0') {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"Crypt32.dll\");\n        *param_1 = iVar2;\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"CryptProtectMemory\");\n            param_1[2] = iVar2;\n            iVar2 = (*pcVar1)(*param_1, \"CryptUnprotectMemory\");\n            param_1[3] = iVar2;\n        }\n        *(param_1 + 1) = 1;\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "0040ccfe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040ccfe(int32_t param_1, ushort *param_2, int32_t param_3)\n\n{\n    if (*(param_1 + 0x100) == '\\0') {\n        *param_2 = 0;\n    }\n    else {\n        fcn.0040ccc9(param_1, 0x80, param_2, param_3, 0);\n        param_2[param_3 + -1] = 0;\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0040ce52": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040ce52(uint arg_8h, uint arg_ch, ushort *arg_10h, int32_t arg_14h)\n\n{\n    uint lpLCData;\n    uint var_64h;\n    \n    if (*0x42c0dc == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(0x400, 0xf, &lpLCData, 100);\n        *0x4490dc = lpLCData;\n        *0x4490de = 0;\n        *0x42c0dc = 0x4490dc;\n    }\n    fcn.004109d2(arg_8h, arg_ch, &var_64h);\n    *arg_10h = 0;\n    (*_sym.imp.KERNEL32.dll_GetNumberFormatW)(0x400, 0, &var_64h, 0x42c0cc, arg_10h, arg_14h);\n    arg_10h[arg_14h + -1] = 0;\n    return;\n}\n",
        "token_count": 244
    },
    "0040ced9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040ced9(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    if (1000000 < arg_8h) {\n        arg_8h = arg_8h >> 8;\n        arg_ch = arg_ch >> 8;\n    }\n    if (arg_ch == 0) {\n        arg_ch = 0;\n    }\n    else if (arg_ch < arg_8h) {\n        arg_ch = 100;\n    }\n    else {\n        arg_ch = (arg_8h * 100) / arg_ch;\n    }\n    return arg_ch;\n}\n",
        "token_count": 136
    },
    "0040cf47": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040cf47(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    iVar1 = *param_1;\n    piVar2 = param_1;\n    do {\n        if (iVar1 == 0) {\n            *param_1 = 0;\n            return;\n        }\n        if (*piVar2 == 0x5c) {\n            if (piVar2[1] == 0x5c) {\n                iVar1 = 0x5c;\n            }\n            else {\n                if (piVar2[1] != 0x6e) goto code_r0x0040cf7d;\n                iVar1 = 10;\n            }\n            *param_1 = iVar1;\n            piVar2 = piVar2 + 2;\n        }\n        else {\ncode_r0x0040cf7d:\n            *param_1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        }\n        param_1 = param_1 + 1;\n        iVar1 = *piVar2;\n    } while( true );\n}\n",
        "token_count": 251
    },
    "0040d058": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0040d058(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if ((*0x4490e0 == 0) && (iVar1 = (*_sym.imp.USER32.dll_GetDC)(0),  iVar1 != 0)) {\n        *0x4490e0 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(iVar1, 0x58);\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, iVar1);\n    }\n    return (*0x4490e0 * param_1) / 0x60;\n}\n",
        "token_count": 133
    },
    "0040d09b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0040d09b(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if ((*0x4490e4 == 0) && (iVar1 = (*_sym.imp.USER32.dll_GetDC)(0),  iVar1 != 0)) {\n        *0x4490e4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(iVar1, 0x5a);\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, iVar1);\n    }\n    return (*0x4490e4 * param_1) / 0x60;\n}\n",
        "token_count": 135
    },
    "0040d0fd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040d0fd(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_60h;\n    uint var_5ch;\n    uint32_t var_58h;\n    uint var_4ch;\n    uint var_47h;\n    uint var_4h;\n    \n    uVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(*0x43d9f8, 0x68);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    var_4h = uVar2;\n    if (*0x43d9fc == '\\0') {\n        fcn.00418dc0();\n        (*_sym.imp.USER32.dll_ShowWindow)(uVar2, 5);\n        (*pcVar1)(uVar2, 0xb1, 0, 0xffffffff);\n        (*pcVar1)(uVar2, 0xc2, 0, 0x427554);\n        *0x43d9fc = '\\x01';\n    }\n    (*pcVar1)(var_4h, 0xb1, 100000000, 100000000);\n    var_60h = 0x5c;\n    (*pcVar1)(var_4h, 0x43a, 0, &var_60h);\n    var_47h._0_1_ = 0;\n    var_5ch = 1;\n    if (arg_8h != '\\0') {\n        var_58h = var_58h & 0xbfffffff | 1;\n        var_4ch = 0xa0;\n        var_5ch = 0x40000001;\n    }\n    (*pcVar1)(var_4h, 0x444, 1, &var_60h);\n    (*pcVar1)(var_4h, 0xc2, 0, arg_ch);\n    (*pcVar1)(var_4h, 0xb1, 100000000, 100000000);\n    if (arg_8h != '\\0') {\n        var_58h = var_58h & 0xfffffffe | 0x40000000;\n        (*pcVar1)(var_4h, 0x444, 1, &var_60h);\n    }\n    (*pcVar1)(var_4h, 0xc2, 0, 0x42781c);\n    return;\n}\n",
        "token_count": 555
    },
    "0040d211": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d211(int16_t *arg_8h, uint arglist)\n\n{\n    uchar auStackY10244 [10216];\n    uint uStackY28;\n    \n    fcn.0041a360();\n    if (arg_8h != NULL) {\n        if (*arg_8h == 0) {\n            return;\n        }\n        (*_sym.imp.USER32.dll_wvsprintfW)();\n        uStackY28 = 0x40d24b;\n        fcn.0040d0fd(1, &stack0xffffd7fc);\n    }\n    *0x43d9f0 = *0x43d9f0 + 1;\n    return;\n}\n",
        "token_count": 156
    },
    "0040d471": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040d471(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint var_804h;\n    ushort var_800h;\n    int16_t var_7feh;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    arg_8h_00 = fcn.00410a28(arg_8h, &var_804h, 0x400);\n    do {\n        if (arg_8h_00 == 0) {\n            return;\n        }\n        var_4h = var_4h + 1;\n        if ((var_4h != 1) && ((var_804h == 0x2f || (var_804h == 0x2d)))) {\n            iVar1 = sub.USER32.dll_CharUpperW(var_804h._2_2_);\n            if (iVar1 == 0x44) {\ncode_r0x0040d583:\n                fcn.00410976();\n            }\n            else if (iVar1 == 0x45) {\n                iVar1 = sub.USER32.dll_CharUpperW(var_800h);\n                if ((iVar1 == 0x4c) && (var_7feh == 0)) {\n                    *0x43da31 = 1;\n                }\n            }\n            else if (iVar1 == 0x50) {\n                fcn.0040cd37(&var_800h);\n            }\n            else if (iVar1 == 0x53) {\n                iVar1 = sub.USER32.dll_CharUpperW(var_800h);\n                if ((iVar1 == 0) || (iVar1 == 0x31)) {\n                    *0x43da2c = 1;\n                }\n                else {\n                    if (iVar1 != 0x32) {\n                        if (iVar1 == 0x50) goto code_r0x0040d583;\n                        goto code_r0x0040d588;\n                    }\n                    *0x43da2c = 2;\n                }\n                *0x43d9fe = 1;\n            }\n        }\ncode_r0x0040d588:\n        arg_8h_00 = fcn.00410a28(arg_8h_00, &var_804h, 0x400);\n    } while( true );\n}\n",
        "token_count": 532
    },
    "0040d5a7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.0040d5a7(int16_t *arg_8h, ushort *arg_ch, uchar *arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    uchar *extraout_ECX;\n    int32_t iVar3;\n    int16_t *extraout_EDX;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    uchar auStack8196 [8152];\n    uint uStack44;\n    ushort *puStack40;\n    uchar *puStack36;\n    int32_t iStack32;\n    int16_t *piStack28;\n    uchar *puStack24;\n    uint uStack20;\n    \n    fcn.0041a360();\n    if (extraout_ECX != NULL) {\n        *extraout_ECX = 0;\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = 0;\n    }\n    if ((arg_8h == NULL) || (iVar1 = *arg_8h,  iVar1 == 0)) {\n        piVar2 = NULL;\n    }\n    else {\n        piVar5 = NULL;\n        iVar3 = 0;\n        piVar4 = extraout_EDX;\n        do {\n            piVar2 = arg_8h + 1;\n            if (iVar1 == 0x3d) {\n                if ((arg_ch == NULL) || (piVar5 != NULL)) goto code_r0x0040d611;\n                piVar5 = piVar4;\n                if (extraout_ECX != NULL) {\n                    *extraout_ECX = 1;\n                }\n            }\n            else {\n                if (iVar1 == 0xd) {\n                    piVar2 = arg_8h + 2;\n                    break;\n                }\n                if (iVar1 == 10) break;\ncode_r0x0040d611:\n                *piVar4 = iVar1;\n                piVar4 = piVar4 + 1;\n                if (arg_14h + -2 < iVar3) {\n                    *arg_10h = 1;\n                    break;\n                }\n            }\n            iVar1 = *piVar2;\n            iVar3 = iVar3 + 1;\n            arg_8h = piVar2;\n        } while (iVar1 != 0);\n        *piVar4 = 0;\n        if ((arg_ch != NULL) && (*arg_ch = 0,  piVar5 != NULL)) {\n            uStack20 = 0x1000;\n            puStack24 = &stack0xffffdffc;\n            iStack32 = 0x40d65b;\n            piStack28 = piVar5;\n            (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)();\n            iStack32 = arg_14h;\n            puStack36 = &stack0xffffdffc;\n            puStack40 = arg_ch;\n            uStack44 = 0x40d66b;\n            fcn.00410976();\n            *piVar5 = 0;\n        }\n    }\n    return piVar2;\n}\n",
        "token_count": 683
    },
    "0040d6bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: lpFileOp\n\nvoid fcn.0040d6bc(void)\n\n{\n    uint arg_10h;\n    int32_t iVar1;\n    uint var_1020h;\n    uint uStackY52;\n    uint *puStackY48;\n    uint uStackY44;\n    uint uStackY40;\n    uint *lpFileOp;\n    uint var_1ch;\n    uint *var_18h;\n    uint *lpString2;\n    uint var_10h;\n    \n    fcn.0041a360();\n    fcn.0041985c();\n    arg_10h = *0x42c0c8;\n    if (*0x43d9fd == '\\0') {\n        lpString2 = &fcn.0040d6bc::var_1020h;\n        var_18h = 0x40d6f7;\n        var_18h = fcn.0040a2c4();\n        var_1ch = 0x40d6fd;\n        iVar1 = fcn.004116c2(var_18h, lpString2, arg_10h);\n        if (iVar1 == 0) {\n            var_1ch = 0x42766c;\n            lpFileOp = 0x40d70b;\n            fcn.00419849();\n            lpFileOp = &fcn.0040d6bc::var_1020h;\n            uStackY40 = 0x40d717;\n            iVar1 = fcn.0041a052(lpFileOp);\n            uStackY40 = 0x1e;\n            *(&fcn.0040d6bc::var_1020h + iVar1 * 2 + 2) = 0;\n            uStackY44 = 0;\n            puStackY48 = &fcn.0040d6bc::lpFileOp;\n            uStackY52 = 0x40d72d;\n            fcn.0041a0c0();\n            var_18h = &fcn.0040d6bc::var_1020h;\n            lpFileOp = &fcn.0040d6bc::lpFileOp;\n            var_1ch = 3;\n            uStackY40 = 0x40d751;\n            (*_sym.imp.SHELL32.dll_SHFileOperationW)();\n        }\n    }\n    return;\n}\n",
        "token_count": 555
    },
    "0040d753": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t * fcn.0040d753(void)\n\n{\n    int16_t *arg_8h;\n    int16_t *piVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    int32_t iVar3;\n    int32_t *unaff_EDI;\n    int16_t iStack8200;\n    uint uStack44;\n    uint var_1h;\n    \n    fcn.0041a360();\n    arg_8h = fcn.0041c8ee(0x20000);\n    if (arg_8h == NULL) {\n        fcn.00406320();\n    }\n    *arg_8h = 0;\n    iVar3 = 0;\n    do {\n        do {\n            iVar2 = fcn.0040d5a7(*unaff_EDI, 0, &fcn.0040d753::var_1h, 0x1000);\n            *unaff_EDI = iVar2;\n            if (iVar2 == 0) {\n                return arg_8h;\n            }\n        } while ((*arg_8h == 0) && (iStack8200 == 0x7b));\n        if (iStack8200 == 0x7d) {\n            return arg_8h;\n        }\n        iVar2 = fcn.0041a052(&stack0xffffdff8);\n        if (0xfffb < iVar2 + iVar3) {\n            return arg_8h;\n        }\n        fcn.0041a06c(arg_8h, &stack0xffffdff8);\n        uStack44 = 0x40d7c9;\n        iVar3 = fcn.0041a052(arg_8h);\n        if (iVar3 != 0) {\n            piVar1 = arg_8h + iVar3 + -1;\n            do {\n                if (*piVar1 != 0x20) break;\n                iVar3 = iVar3 + -1;\n                piVar1 = piVar1 + -1;\n            } while (iVar3 != 0);\n        }\n        var_1h._0_1_ = unaff_EBX >> 0x18;\n        if (var_1h == '\\0') {\n            fcn.0041a09a(arg_8h + iVar3, 0x42781c);\n        }\n    } while( true );\n}\n",
        "token_count": 541
    },
    "0040d875": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040d875(uint param_1)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int16_t *unaff_ESI;\n    \n    fcn.0041a09a(unaff_ESI, param_1);\n    iVar3 = 0;\n    iVar2 = *unaff_ESI;\n    piVar1 = unaff_ESI;\n    while (iVar2 != 0) {\n        iVar2 = *piVar1;\n        if (((iVar2 == 0x3a) || (iVar2 == 0x5c)) || (iVar2 == 0x2f)) {\n            *piVar1 = 0x25;\n        }\n        iVar3 = iVar3 + 1;\n        piVar1 = unaff_ESI + iVar3;\n        iVar2 = *piVar1;\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "0040d93c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040d93c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar auStack8208 [4096];\n    uint var_100ch;\n    uint uStack68;\n    uint uStack64;\n    uint *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint *puStack40;\n    uint *puStack36;\n    uint *puStack32;\n    char16_t *pcStack28;\n    uint uStack24;\n    uint uStack20;\n    uint *var_ch;\n    uint hKey;\n    uint32_t var_4h;\n    \n    var_4h = 0x40d949;\n    fcn.0041a360();\n    if (*0x43da30 != '\\0') {\n        hKey = arg_8h;\n        var_ch = 0x40d965;\n        fcn.0040d875();\n        var_ch = &fcn.0040d93c::hKey;\n        uStack20 = 1;\n        uStack24 = 0;\n        pcStack28 = L\"Software\\\\WinRAR SFX\";\n        puStack32 = 0x80000001;\n        puStack36 = 0x40d97d;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n        if (iVar1 == 0) {\n            puStack32 = &fcn.0040d93c::var_4h;\n            puStack36 = &fcn.0040d93c::var_100ch;\n            puStack40 = &fcn.0040d93c::var_ch;\n            uStack44 = 0;\n            puStack48 = &stack0xffffdff0;\n            uStack52 = hKey;\n            var_4h = 0x1000;\n            uStack56 = 0x40d9aa;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)();\n            if (iVar1 == 0) {\n                var_4h = var_4h >> 1;\n                uVar2 = 0x7ff;\n                if (var_4h < 0x7ff) {\n                    uVar2 = var_4h;\n                }\n                uStack56 = arg_ch;\n                *(&fcn.0040d93c::var_100ch + uVar2 * 2) = 0;\n                puStack60 = &fcn.0040d93c::var_100ch;\n                uStack64 = arg_8h;\n                uStack68 = 0x40d9da;\n                fcn.00410976();\n            }\n            uStack56 = hKey;\n            puStack60 = 0x40d9e3;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n        }\n    }\n    return;\n}\n",
        "token_count": 662
    },
    "0040dade": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.0040dade(int16_t *arg_8h, int16_t *arg_ch)\n\n{\n    int16_t *arg_8h_00;\n    int16_t iVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    bool bVar6;\n    uint uVar7;\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (iVar1 = *arg_8h,  iVar1 == 0)) {\n        piVar5 = NULL;\n        *arg_ch = 0;\n    }\n    else {\n        piVar5 = arg_8h;\n        bVar2 = false;\n        do {\n            uVar7 = 0x22;\n            bVar6 = bVar2;\n            if (iVar1 == 0x22) {\n                arg_8h_00 = piVar5 + 1;\n                if ((*arg_8h_00 == 0x22) &&\n                   (((bVar2 != false || (piVar5 != arg_8h)) || ((piVar5[2] != 0x2c && (piVar5[2] != 0)))))) {\n                    *arg_ch = 0x22;\n                    piVar5 = arg_8h_00;\n                    goto code_r0x0040db6a;\n                }\n                if (bVar2 == false) {\n                    uVar7 = 0x22;\n                    iVar4 = fcn.0041c3ac(arg_8h_00, 0x22);\n                    bVar6 = iVar4 != 0;\n                }\n                else {\n                    bVar6 = false;\n                }\n                if (bVar2 == bVar6) goto code_r0x0040db58;\n            }\n            else {\ncode_r0x0040db58:\n                if ((*piVar5 == 0x2c) && (!bVar6)) {\n                    *arg_ch = 0;\n                    do {\n                        piVar5 = piVar5 + 1;\n                        cVar3 = fcn.00410959(uVar7, *piVar5);\n                    } while (cVar3 != '\\0');\n                    return piVar5;\n                }\n                *arg_ch = *piVar5;\ncode_r0x0040db6a:\n                arg_ch = arg_ch + 1;\n            }\n            piVar5 = piVar5 + 1;\n            iVar1 = *piVar5;\n            bVar2 = bVar6;\n        } while (iVar1 != 0);\n        *arg_ch = 0;\n    }\n    return piVar5;\n}\n",
        "token_count": 586
    },
    "0040dc25": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040dc25(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    uchar auStackY9220 [5120];\n    uint var_1000h;\n    uint uStackY44;\n    uchar *puStackY40;\n    uint uStackY36;\n    uint uStackY32;\n    uchar *puStackY28;\n    uint *puStackY24;\n    \n    fcn.0041a360();\n    puStackY24 = 0x40dc49;\n    fcn.0040a26e(arg_8h, arg_ch, &fcn.0040dc25::var_1000h, 0x800);\n    puStackY24 = &fcn.0040dc25::var_1000h;\n    if (arg_18h == '\\0') {\n        puStackY28 = 0x65;\n    }\n    else {\n        puStackY28 = 0x66;\n    }\n    uStackY32 = 0x40dc61;\n    uStackY32 = fcn.0040c1b1();\n    puStackY40 = &stack0xffffdbfc;\n    uStackY36 = 0xa00;\n    uStackY44 = 0x40dc73;\n    fcn.004082d4();\n    puStackY28 = &stack0xffffdbfc;\n    uStackY32 = 0x65;\n    uStackY36 = *0x43d9f8;\n    puStackY40 = 0x40dc8b;\n    (*_sym.imp.USER32.dll_SetDlgItemTextW)();\n    puStackY40 = 0x40dc90;\n    fcn.0040ce13();\n    return *0x43d9ea == '\\0';\n}\n",
        "token_count": 401
    },
    "0040dff0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040dff0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_1000h;\n    uint uStackY56;\n    uint uStackY52;\n    char16_t *pcStackY48;\n    uint uStackY44;\n    code *pcStackY40;\n    uint *puStackY36;\n    uint uStackY28;\n    uint *puStackY24;\n    uint uStackY20;\n    \n    uVar1 = fcn.0041a360();\n    uStackY44 = *0x43d9f8;\n    if (*0x43fb32 == '\\0') {\n        if (arg_8h == 2) {\n            uStackY20 = *0x43d9f8;\n            puStackY24 = 0x40e02c;\n            iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)();\n            if (iVar2 == 0) {\n                uStackY44 = 0;\n            }\n        }\n        uStackY20 = 0x800;\n        puStackY24 = &fcn.0040dff0::var_1000h;\n        uStackY28 = arg_10h;\n        puStackY36 = 0x40e049;\n        uVar1 = fcn.0040a26e(arg_ch, arg_10h, puStackY24, 0x800);\n        if (*0x4490d8 == '\\0') {\n            puStackY36 = &fcn.0040dff0::var_1000h;\n            pcStackY40 = fcn.0040d2dc;\n            pcStackY48 = L\"GETPASSWORD1\";\n            uStackY52 = *0x42f764;\n            uStackY56 = 0x40e070;\n            uVar1 = (*_sym.imp.USER32.dll_DialogBoxParamW)();\n            if (uVar1 != 0) goto code_r0x0040e08c;\n            puStackY24 = 0x40e083;\n            uVar1 = fcn.0040cd37();\n            *0x43d9ea = 1;\n        }\n        else {\ncode_r0x0040e08c:\n            puVar3 = 0x448fd8;\n            puVar4 = arg_14h;\n            for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            *puVar4 = *puVar3;\n        }\n        if (*(arg_14h + 0x40) == '\\0') goto code_r0x0040e0b4;\n        puVar4 = 0x43fa32;\n        puVar3 = arg_14h;\n    }\n    else {\n        puVar3 = 0x43fa32;\n        puVar4 = arg_14h;\n    }\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar3;\ncode_r0x0040e0b4:\n    return uVar1 & 0xffffff00 | *(arg_14h + 0x40);\n}\n",
        "token_count": 819
    },
    "0040e0c1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040e0c1(uint param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    if ((*0x43d9ea == '\\0') && (*param_2 != 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.0041a297(0x4490f0, 0x1000, param_2, 0, &stack0x0000000c);\n        fcn.0040d211(0x427854, 0x4490f0);\n        if (iVar1 != 0) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "0040e28c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpExitCode\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0040e28c(int32_t hWnd, uint arg_ch)\n\n{\n    uint *puVar1;\n    int16_t *piVar2;\n    int16_t iVar3;\n    bool bVar4;\n    code *pcVar5;\n    uint *arg_8h;\n    char cVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint *arg_8h_00;\n    int32_t unaff_EDI;\n    uint auStackY8268 [1024];\n    uint var_1048h;\n    uint pExecInfo;\n    uint var_44h;\n    char16_t *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint var_2ch;\n    uint hProcess;\n    uint lpExitCode;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.0041a360();\n    if (*arg_8h_00 == 0) {\n        return;\n    }\n    uVar7 = fcn.0041a052(arg_8h_00);\n    if (0x7f5 < uVar7) {\n        return;\n    }\n    fcn.0041a0c0();\n    iVar3 = *arg_8h_00;\n    pExecInfo = 0x3c;\n    var_44h = 0x1c0;\n    var_38h = arg_8h_00;\n    if (iVar3 == 0x22) {\n        var_38h = arg_8h_00 + 2;\n    }\n    arg_8h = var_38h;\n    iVar8 = 0;\n    puVar1 = arg_8h_00;\n    while (iVar3 != 0) {\n        if (*puVar1 == 0x22) {\n            do {\n                iVar8 = iVar8 + 1;\n                if (*(arg_8h_00 + iVar8 * 2) == 0) goto code_r0x0040e312;\n            } while (*(arg_8h_00 + iVar8 * 2) != 0x22);\n            *(arg_8h_00 + iVar8 * 2) = 0x20;\n        }\ncode_r0x0040e312:\n        if ((*(arg_8h_00 + iVar8 * 2) == 0x20) || (*(arg_8h_00 + iVar8 * 2 + 2) == 0x2f)) {\n            piVar2 = arg_8h_00 + iVar8 * 2;\n            if (*piVar2 == 0x20) {\n                *piVar2 = 0;\n            }\n            var_34h = piVar2 + 1;\n            break;\n        }\n        iVar8 = iVar8 + 1;\n        puVar1 = arg_8h_00 + iVar8 * 2;\n        iVar3 = *puVar1;\n    }\n    if (((var_34h == NULL) && (arg_ch == '\\0')) && (*0x43ea32 != 0)) {\n        var_34h = 0x43ea32;\n    }\n    iVar8 = fcn.0040a453();\n    if ((iVar8 != 0) && (iVar9 = fcn.004116a1(),  iVar9 == 0)) {\n        var_3ch = L\"Install\";\n    }\n    cVar6 = fcn.0040924e();\n    if (cVar6 != '\\0') {\n        fcn.0040a925(var_38h, &stack0xffffdfb4, 0x800);\n        var_38h = &stack0xffffdfb4;\n    }\n    if ((arg_ch != '\\0') && (cVar6 == '\\0')) {\n        var_34h = 0x40e3cf;\n        fcn.0041a09a(&fcn.0040e28c::var_1048h, var_38h);\n        var_38h = &fcn.0040e28c::var_1048h;\n        var_34h = 0x4278f0;\n        var_3ch = 0x40e3dc;\n        fcn.0041a06c(var_38h, 0x4278f0);\n        cVar6 = fcn.0040924e();\n        if (cVar6 == '\\0') {\n            return;\n        }\n    }\n    iVar9 = (*_sym.imp.SHELL32.dll_ShellExecuteExW)();\n    pcVar5 = _sym.imp.USER32.dll_ShowWindow;\n    if (iVar9 == 0) {\n        return;\n    }\n    bVar4 = false;\n    if (((*0x43da28 != '\\0') || (arg_ch != '\\0')) || (*0x43da11 != '\\0')) {\n        if (hWnd != 0) {\n            var_34h = 0x40e43b;\n            iVar9 = (*_sym.imp.USER32.dll_IsWindowVisible)();\n            if (iVar9 != 0) {\n                var_34h = hWnd;\n                var_38h = 0x40e446;\n                (*pcVar5)();\n                bVar4 = true;\n            }\n        }\n        var_34h = arg_8h;\n        var_38h = 0x40e458;\n        (*_sym.imp.USER32.dll_WaitForInputIdle)();\n        fcn.0040d67d(arg_8h);\n        if (*0x43da11 != '\\0') {\n            var_34h = arg_8h;\n            var_38h = 0x40e476;\n            iVar9 = (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)();\n            if ((iVar9 != 0) && (*0x43da14 < unaff_EDI + 1000U)) {\n                *0x43da14 = unaff_EDI + 1000U;\n            }\n        }\n    }\n    var_34h = 0x40e495;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    if (iVar8 != 0) {\n        var_34h = 0x4278f0;\n        var_3ch = 0x40e4a4;\n        var_38h = iVar8;\n        iVar8 = fcn.004116a1();\n        if (iVar8 == 0) goto code_r0x0040e4d8;\n    }\n    if ((*0x43da28 == '\\0') || (arg_ch != '\\0')) {\n        *0x43da18 = ((arg_ch == '\\0') - 1 & 0xfffffce0) + 1000;\n    }\n    else {\n        *0x43da18 = 7000;\n    }\ncode_r0x0040e4d8:\n    if ((bVar4) && (arg_ch != '\\0')) {\n        var_34h = 0x1;\n        var_38h = hWnd;\n        var_3ch = 0x40e4eb;\n        (*pcVar5)();\n    }\n    return;\n}\n",
        "token_count": 1665
    },
    "0040e534": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e534(uint lpFileName, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_DialogBoxParamW;\n    do {\n        *0x43d9e0 = arg_ch;\n        *0x43d9e4 = arg_10h;\n        *0x43d9d8 = arg_14h;\n        if (*0x43d9de == '\\0') {\n            if (*0x43d9df == '\\0') {\n                iVar2 = (*pcVar1)(*0x42f764, L\"REPLACEFILEDLG\", *0x43d9f8, 0x40dc9f, lpFileName);\n            }\n            else {\n                iVar2 = 2;\n            }\n        }\n        else {\n            iVar2 = 1;\n        }\n        if (iVar2 == 1) {\ncode_r0x0040e5df:\n            (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(lpFileName, 0);\n            return 0x59;\n        }\n        if (iVar2 == 2) {\n            return 0x4e;\n        }\n        if (iVar2 == 3) {\n            *0x43d9de = '\\x01';\n            goto code_r0x0040e5df;\n        }\n        if (iVar2 != 4) {\n            if (iVar2 == 5) {\n                *0x43d9ea = 1;\n                return 0x43;\n            }\n            if (iVar2 != 6) {\n                return 0x4e;\n            }\n            *0x43d9df = 1;\n            return 0x4e;\n        }\n        iVar2 = (*pcVar1)(*0x42f764, L\"RENAMEDLG\", *0x43d9f8, fcn.0040d253, lpFileName);\n        if (iVar2 != 0) {\n            return 0x52;\n        }\n    } while( true );\n}\n",
        "token_count": 465
    },
    "0040e5f5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040e5f5(char *arg_8h, int16_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_1000h;\n    uint uStackY64;\n    \n    fcn.0041a360();\n    fcn.0040a26e(arg_8h, arg_ch, &fcn.0040e5f5::var_1000h, 0x800);\n    uVar1 = fcn.0040e534(&fcn.0040e5f5::var_1000h, arg_10h, arg_14h, arg_18h);\n    uVar2 = uVar1;\n    if ((arg_ch != NULL) && (*arg_ch != 0)) {\n        uVar2 = fcn.0041a09a(arg_ch, &fcn.0040e5f5::var_1000h);\n    }\n    if ((arg_8h != NULL) && (*arg_8h != '\\0')) {\n        uStackY64 = 0x40e667;\n        uVar2 = fcn.0041133e(&fcn.0040e5f5::var_1000h, arg_8h, 0x800);\n    }\n    return uVar2 & 0xffffff00 | uVar1 & 0xff;\n}\n",
        "token_count": 324
    },
    "0040e769": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: lpFileOp\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_11h\n\nvoid __cdecl fcn.0040e769(uint hWnd, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int16_t *piVar9;\n    ushort *puVar10;\n    uint uVar11;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpCaption;\n    uint lpExistingFileName;\n    uint lpFileOp;\n    uint var_3ch;\n    int16_t *var_38h;\n    uint var_30h;\n    uint var_20h;\n    uint hKey;\n    uint var_18h;\n    uint var_11h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    fcn.0041a360();\n    if (*(unaff_EBP + 0xc) != 0) {\n        iVar5 = fcn.0040d5a7(*(unaff_EBP + 0xc), unaff_EBP + -0x4440, unaff_EBP + 0xf, 0x1000);\n        *(unaff_EBP + 0xc) = iVar5;\n        if (iVar5 != 0) {\ncode_r0x0040e7bb:\n            pcVar3 = _sym.imp.KERNEL32.dll_GetFileAttributesW;\n            iVar5 = unaff_EBP + -0x4440;\n            *(unaff_EBP + -0x10) = unaff_EBP + -0x1bc90;\n            *(unaff_EBP + -0x18) = 6;\n            do {\n                iVar5 = fcn.0040dade(iVar5, *(unaff_EBP + -0x10));\n                *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 0x2000;\n                piVar1 = unaff_EBP + -0x18;\n                *piVar1 = *piVar1 + -1;\n            } while (*piVar1 != 0);\n            *(unaff_EBP + -0x10) = 0;\n            while (iVar5 = fcn.004116a1(),  puVar10 = *0x43da04,  iVar5 != 0) {\n                *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 1;\n                if (0xd < *(unaff_EBP + -0x10)) goto code_r0x0040f317;\n            }\n            if (0xd < *(unaff_EBP + -0x10)) goto code_r0x0040f317;\n    // switch table (14 cases) at 0x40f355\n            switch(*(unaff_EBP + -0x10)) {\n            case 0:\n                if (*(unaff_EBP + 0x10) == 2) {\n                    fcn.0041985c(unaff_EBP + -0x8c90, 0x800);\n                    fcn.0040a048(unaff_EBP + -0x8c90, unaff_EBP + -0x4440, unaff_EBP + -0xfc90, 0x800);\n                    fcn.004093c8();\n                    *(unaff_EBP + -4) = 0;\n                    fcn.004093f1(unaff_EBP + -0xfc90);\n                    fcn.0040659a();\n                    cVar4 = fcn.004095a3(unaff_EBP + -0x5c88, 0);\n                    if (cVar4 != '\\0') goto code_r0x0040e8b0;\n                    goto code_r0x0040ea04;\n                }\n                goto code_r0x0040f317;\n            case 1:\n                if (*(unaff_EBP + 0x10) == 0) {\n                    *(unaff_EBP + -0x12) = *0x43da04 == NULL;\n                    if (*(unaff_EBP + -0x12) == '\\0') {\n                        fcn.0041a06c(puVar10, L\"<br>\");\n                    }\n                    if (*(unaff_EBP + -0x11) == '\\0') {\n                        iVar5 = fcn.0040d753();\n                    }\n                    else {\n                        iVar5 = unaff_EBP + -0x4440;\n                    }\n                    if (*(unaff_EBP + -0x12) == '\\0') {\n                        iVar8 = fcn.0041a052(*0x43da04);\n                    }\n                    else {\n                        iVar8 = 0;\n                    }\n                    iVar6 = fcn.0041a052(iVar5);\n                    puVar10 = fcn.00419e00(*0x43da04, (iVar6 + iVar8) * 2 + 10);\n                    *0x43da04 = puVar10;\n                    if (*(unaff_EBP + -0x12) != '\\0') {\n                        *puVar10 = 0;\n                    }\n                    fcn.0041a06c(puVar10, iVar5);\n                    if (*(unaff_EBP + -0x11) == '\\0') {\n                        fcn.00419d72(iVar5);\n                    }\n                }\n                goto code_r0x0040f317;\n            case 2:\n                if (*(unaff_EBP + 0x10) == 0) {\n                    (*_sym.imp.USER32.dll_SetWindowTextW)(*(unaff_EBP + 8), unaff_EBP + -0x4440);\n                }\n                goto code_r0x0040f317;\n            case 3:\n                if ((*(unaff_EBP + 0x10) != 0) || (*0x43da32 != 0)) goto code_r0x0040f317;\n                piVar9 = unaff_EBP + -0x4440;\n                *(unaff_EBP + -0x18) = piVar9;\n                *(unaff_EBP + -0x1040) = 0;\n                if (*(unaff_EBP + -0x4440) == 0x22) {\n                    piVar9 = unaff_EBP + -0x443e;\n                    *(unaff_EBP + -0x18) = piVar9;\n                }\n                uVar7 = fcn.0041a052(piVar9);\n                if (0x7ff < uVar7) goto code_r0x0040f317;\n                iVar2 = *piVar9;\n                if ((iVar2 == 0x2e) && (piVar9[1] == 0x5c)) {\n                    piVar9 = piVar9 + 2;\n                    if (*piVar9 == 0) goto code_r0x0040f317;\ncode_r0x0040ec2e:\n                    fcn.0041a09a(unaff_EBP + -0x1040, piVar9);\n                }\n                else {\n                    if ((iVar2 == 0x5c) || ((iVar2 != 0 && (piVar9[1] == 0x3a)))) goto code_r0x0040ec2e;\n                    iVar5 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)\n                                      (0x80000002, L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\", 0, 1, \n                                       unaff_EBP + -0x1c);\n                    if (iVar5 == 0) {\n                        *(unaff_EBP + -0x10) = 0x1000;\n                        (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                                  (*(unaff_EBP + -0x1c), L\"ProgramFilesDir\", 0, unaff_EBP + -0x20, unaff_EBP + -0x1040, \n                                   unaff_EBP + -0x10);\n                        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*(unaff_EBP + -0x1c));\n                        *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) >> 1;\n                        iVar5 = 0x7ff;\n                        if (*(unaff_EBP + -0x10) < 0x7ff) {\n                            iVar5 = *(unaff_EBP + -0x10);\n                        }\n                        *(unaff_EBP + -0x1040 + iVar5 * 2) = 0;\n                    }\n                    if ((*(unaff_EBP + -0x1040) != 0) &&\n                       (iVar5 = fcn.0041a052(unaff_EBP + -0x1040),  *(unaff_EBP + -0x1042 + iVar5 * 2) != 0x5c)) {\n                        fcn.0041a06c(unaff_EBP + -0x1040, 0x4276a0);\n                    }\n                    iVar5 = fcn.0041a052(piVar9);\n                    iVar8 = fcn.0041a052(unaff_EBP + -0x1040);\n                    if (iVar5 + iVar8 < 0x7ff) {\n                        fcn.0041a06c(unaff_EBP + -0x1040, *(unaff_EBP + -0x18));\n                    }\n                }\n                puVar10 = fcn.0041c3d2(unaff_EBP + -0x1040, 0x22);\n                if ((puVar10 != NULL) && (puVar10[1] == 0)) {\n                    *puVar10 = 0;\n                }\n                fcn.0041a09a(0x4349d0, unaff_EBP + -0x1040);\n                fcn.0040d93c(unaff_EBP + -0x1040, 0x800);\n                uVar11 = (*_sym.imp.USER32.dll_GetDlgItem)(*(unaff_EBP + 8), 0x66);\n                (*_sym.imp.USER32.dll_SetWindowTextW)(uVar11, unaff_EBP + -0x1040);\n                (*_sym.imp.USER32.dll_SendMessageW)(uVar11, 0x143, 0, 0x4349d0);\n                iVar5 = fcn.0041a01b(0x4349d0, unaff_EBP + -0x1040);\n                if (iVar5 != 0) {\n                    (*_sym.imp.USER32.dll_SendMessageW)(uVar11, 0x143, 0, unaff_EBP + -0x1040);\n                }\n                goto code_r0x0040f317;\n            case 4:\n                if (*0x43da2c != 1) {\n                    cVar4 = fcn.00410947(*(unaff_EBP + -0x4440));\n                    if (cVar4 == '\\0') {\n                        *0x43da2c = 2;\n                    }\n                    else {\n                        *0x43da2c = *(unaff_EBP + -0x4440) - 0x30;\n                    }\n                }\n                goto code_r0x0040f317;\n            case 5:\n                iVar2 = *(unaff_EBP + -0x4440);\n                if (iVar2 == 0) {\ncode_r0x0040ed4b:\n                    *0x43d9df = 0;\n                    *0x43d9de = 1;\n                }\n                else {\n                    if (iVar2 == 0x30) {\n                        *0x43d9df = 0;\n                    }\n                    else {\n                        if (iVar2 == 0x31) goto code_r0x0040ed4b;\n                        if (iVar2 != 0x32) goto code_r0x0040f317;\n                        *0x43d9df = 1;\n                    }\n                    *0x43d9de = 0;\n                }\n                goto code_r0x0040f317;\n            case 6:\n                if ((*(unaff_EBP + 0x10) == 4) && (iVar5 = fcn.0041a01b(unaff_EBP + -0x4440, 0x427934),  iVar5 != 0)) {\n                    uVar11 = 0;\ncode_r0x0040edc0:\n                    fcn.0040e28c(*(unaff_EBP + 8), uVar11);\n                }\n                break;\n            case 7:\n                if (*(unaff_EBP + 0x10) != 1) goto code_r0x0040ef61;\n                (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x800, unaff_EBP + -0x8c90);\n                fcn.0040a018(unaff_EBP + -0x8c90, 0x800);\n                *(unaff_EBP + -0x10) = 0;\n                uVar11 = 0;\n                while( true ) {\n                    fcn.004082d4(unaff_EBP + -0x1040, 0x800, L\"%s%s%d\", unaff_EBP + -0x8c90, *0x42c0c8, uVar11);\n                    iVar5 = (*pcVar3)(unaff_EBP + -0x1040);\n                    if (iVar5 == -1) break;\n                    *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 1;\n                    uVar11 = *(unaff_EBP + -0x10);\n                }\n                (*_sym.imp.USER32.dll_SetDlgItemTextW)(*(unaff_EBP + 8), 0x66, unaff_EBP + -0x1040);\n                if ((*(unaff_EBP + -0x4440) != 0) && (*0x43d9fe == '\\0')) {\n                    *(unaff_EBP + -0x1440) = 0;\n                    iVar5 = fcn.0041c3ac(unaff_EBP + -0x4440, 0x2c);\n                    if ((iVar5 == 0) && (iVar5 = 0,  *(unaff_EBP + -0x4440) != 0)) {\n                        piVar9 = unaff_EBP + -0x4440;\n                        do {\n                            if (*piVar9 == 0x40) {\n                                fcn.0041a09a(unaff_EBP + -0x1440, unaff_EBP + -0x443e + iVar5 * 2);\n                                *(unaff_EBP + -0x4440 + iVar5 * 2) = 0;\n                                break;\n                            }\n                            iVar5 = iVar5 + 1;\n                            piVar9 = unaff_EBP + -0x4440 + iVar5 * 2;\n                        } while (*piVar9 != 0);\n                    }\n                    if (*(unaff_EBP + -0x1440) == 0) {\n                        fcn.0041a09a(unaff_EBP + -0x4440, unaff_EBP + -0x1bc90);\n                        fcn.0041a09a(unaff_EBP + -0x1440, unaff_EBP + -0x19c90);\n                    }\n                    fcn.0040cf47(unaff_EBP + -0x4440);\n                    *(unaff_EBP + -0x3440) = 0;\n                    iVar5 = (*_sym.imp.USER32.dll_MessageBoxW)\n                                      (*(unaff_EBP + 8), unaff_EBP + -0x4440, unaff_EBP + -0x1440, 0x24);\n                    if (iVar5 == 6) goto code_r0x0040f317;\n                    *0x43d9fd = 1;\n                    *0x43d9ea = 1;\n                    (*_sym.imp.USER32.dll_EndDialog)(*(unaff_EBP + 8), 1);\ncode_r0x0040ef61:\n                    if (*(unaff_EBP + 0x10) == 7) {\n                        if (*0x43da2c == 0) {\n                            *0x43da2c = 2;\n                        }\n                        *0x43da28 = 1;\n                    }\n                }\n                goto code_r0x0040f317;\n            case 8:\n                if (*(unaff_EBP + 0x10) == 3) {\n                    if (*(unaff_EBP + -0x4440) != 0) {\n                        (*_sym.imp.USER32.dll_SetWindowTextW)(*(unaff_EBP + 8), unaff_EBP + -0x4440);\n                    }\n                    *0x43da08 = fcn.0040d753();\n                }\n                *0x43d9ff = 1;\n                goto code_r0x0040f317;\n            case 9:\n                if (*(unaff_EBP + 0x10) == 5) {\n                    uVar11 = 1;\n                    goto code_r0x0040edc0;\n                }\n                break;\n            case 10:\n                if (*(unaff_EBP + 0x10) == 6) {\n                    *(unaff_EBP + -0x2440) = 0;\n                    iVar5 = fcn.0041cc15(*(unaff_EBP + -0x1bc90));\n                    if (iVar5 == 0x50) {\n                        fcn.00410976(unaff_EBP + -0x2440, 0x43b9d8, 0x800);\n                        *(unaff_EBP + -0x18) = 2;\n                    }\n                    else if (iVar5 == 0x54) {\n                        fcn.00410976(unaff_EBP + -0x2440, 0x43a9d8, 0x800);\n                        *(unaff_EBP + -0x18) = 7;\n                    }\n                    else {\n                        fcn.00410976(unaff_EBP + -0x2440, 0x43c9d8, 0x800);\n                        *(unaff_EBP + -0x18) = 0x10;\n                    }\n                    *(unaff_EBP + -0xbc90) = 0;\n                    *(unaff_EBP + -0x4c40) = 0;\n                    fcn.0041a09a(unaff_EBP + -0x6c88, unaff_EBP + -0x19c90);\n                    if (*(unaff_EBP + -0x6c88) == 0x22) {\n                        fcn.0041a09a(unaff_EBP + -0x6c88, unaff_EBP + -0x19c8e);\n                        puVar10 = fcn.0041c3ac(unaff_EBP + -0x6c86, 0x22);\n                        if (puVar10 != NULL) {\n                            *puVar10 = 0;\n                            fcn.0041a09a(unaff_EBP + -0x4c40, puVar10 + 1);\n                        }\n                    }\n                    else {\n                        cVar4 = fcn.0040924e(unaff_EBP + -0x6c88);\n                        if (cVar4 == '\\0') {\n                            *(unaff_EBP + -0x10) = 0;\n                            piVar9 = unaff_EBP + -0x6c88;\n                            if (*(unaff_EBP + -0x6c88) != 0) {\n                                do {\n                                    iVar2 = *piVar9;\n                                    if ((iVar2 == 0x20) || (iVar2 == 0x2f)) {\n                                        *piVar9 = 0;\n                                        cVar4 = fcn.0040924e();\n                                        if (cVar4 == '\\0') {\n                                            *piVar9 = iVar2;\n                                        }\n                                        else {\n                                            *(unaff_EBP + -0x10) = piVar9;\n                                            if (iVar2 == 0x2f) {\n                                                *(unaff_EBP + -0x4c40) = 0x2f;\n                                                iVar5 = unaff_EBP + -0x4c3e;\n                                                var_38h = piVar9 + 1;\n                                            }\n                                            else {\n                                                do {\n                                                    piVar9 = piVar9 + 1;\n                                                } while (*piVar9 == 0x20);\n                                                iVar5 = unaff_EBP + -0x4c40;\n                                                var_38h = piVar9;\n                                            }\n                                            fcn.0041a09a(iVar5, var_38h);\n                                            **(unaff_EBP + -0x10) = iVar2;\n                                        }\n                                    }\n                                    piVar9 = piVar9 + 1;\n                                } while (*piVar9 != 0);\n                                if (*(unaff_EBP + -0x10) != 0) {\n                                    **(unaff_EBP + -0x10) = 0;\n                                }\n                            }\n                        }\n                    }\n                    if (*(unaff_EBP + -0x11c90) != 0) {\n                        fcn.0040a925(unaff_EBP + -0x11c90, unaff_EBP + -0xbc90, 0x800);\n                    }\n                    fcn.0040a925(unaff_EBP + -0x6c88, unaff_EBP + -0xcc90, 0x800);\n                    if (*(unaff_EBP + -0x2440) == 0) {\n                        fcn.0040cf0d(unaff_EBP + -0x2440, *(unaff_EBP + -0x18));\n                    }\n                    fcn.0040a018(unaff_EBP + -0x2440, 0x800);\n                    if (*(unaff_EBP + -0x17c90) != 0) {\n                        fcn.004109a3(unaff_EBP + -0x2440, unaff_EBP + -0x17c90, 0x800);\n                        fcn.0040a018(unaff_EBP + -0x2440, 0x800);\n                    }\n                    fcn.0041a09a(unaff_EBP + -0xac90, unaff_EBP + -0x2440);\n                    iVar5 = unaff_EBP + -0x13c90;\n                    if (*(unaff_EBP + -0x13c90) == 0) {\n                        iVar5 = unaff_EBP + -0x19c90;\n                    }\n                    uVar11 = fcn.0040a2c4(iVar5, 0x800);\n                    fcn.004109a3(unaff_EBP + -0x2440, uVar11, iVar5);\n                    iVar5 = fcn.0040a453(unaff_EBP + -0x2440);\n                    if ((iVar5 == 0) || (iVar5 = fcn.004116a1(iVar5, L\".lnk\"),  iVar5 != 0)) {\n                        fcn.004109a3(unaff_EBP + -0x2440, L\".lnk\", 0x800);\n                    }\n                    fcn.004092f3(unaff_EBP + -0x2440, 1);\n                    fcn.0041a09a(unaff_EBP + -0x9c90, unaff_EBP + -0xcc90);\n                    fcn.0040a4dc(unaff_EBP + -0x9c90);\n                    fcn.00419771(0, unaff_EBP + -0xcc90, unaff_EBP + -0x2440, \n                                 -(*(unaff_EBP + -0x9c90) != 0) & unaff_EBP - 0x9c90U, \n                                 -(*(unaff_EBP + -0x15c90) != 0) & unaff_EBP - 0x15c90U, \n                                 -(*(unaff_EBP + -0xbc90) != 0) & unaff_EBP - 0xbc90U, \n                                 -(*(unaff_EBP + -0x4c40) != 0) & unaff_EBP - 0x4c40U);\n                    if (*(unaff_EBP + -0xac90) != 0) {\n                        (*_sym.imp.SHELL32.dll_SHChangeNotify)(0x1000, 5, unaff_EBP + -0xac90, 0);\n                    }\n                }\n                goto code_r0x0040f317;\n            case 0xb:\n                if (*(unaff_EBP + 0x10) == 7) {\n                    *0x43da30 = 1;\n                }\n                goto code_r0x0040f317;\n            case 0xc:\n                iVar5 = fcn.0041cc15(*(unaff_EBP + -0x4440));\n                if (iVar5 == 0x46) {\n                    *0x43d9dd = 1;\n                }\n                else if (iVar5 == 0x55) {\n                    *0x43d9dc = 1;\n                }\n                else {\n                    *0x43d9dd = 0;\n                    *0x43d9dc = 0;\n                }\n                goto code_r0x0040f317;\n            case 0xd:\n                *0x43da11 = 1;\n                goto code_r0x0040f317;\n            }\n            *0x43da10 = 1;\n            goto code_r0x0040f317;\n        }\n    }\ncode_r0x0040f346:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n    while( true ) {\n        iVar5 = (*pcVar3)(unaff_EBP + -0x5c88);\n        if ((iVar5 != -1) && (iVar5 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(unaff_EBP + -0x5c88),  iVar5 == 0)) {\n            *(unaff_EBP + -0x10) = 0;\n            while( true ) {\n                fcn.004082d4(unaff_EBP + -0x1040, 0x800, L\"%s.%d.tmp\", unaff_EBP + -0x5c88, iVar5);\n                iVar5 = (*pcVar3)(unaff_EBP + -0x1040);\n                if (iVar5 == -1) break;\n                *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 1;\n                iVar5 = *(unaff_EBP + -0x10);\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_MoveFileW)(unaff_EBP + -0x5c88, unaff_EBP + -0x1040);\n            if (iVar5 != 0) {\n                (*_sym.imp.KERNEL32.dll_MoveFileExW)(unaff_EBP + -0x1040, 0, 4);\n            }\n        }\n        cVar4 = fcn.004095a3(unaff_EBP + -0x5c88, 0);\n        if (cVar4 == '\\0') break;\ncode_r0x0040e8b0:\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(unaff_EBP + -0x5c88, 0);\n        if (*(unaff_EBP + -0x4c7c) != '\\0') {\n            fcn.0040a6e9(unaff_EBP + -0x8c90, unaff_EBP + -0x1040, 0x800);\n            fcn.0040a018();\n            uVar7 = fcn.0041a052(unaff_EBP + -0x8c90);\n            *(unaff_EBP + -0x18) = uVar7;\n            if (((uVar7 < 4) ||\n                (uVar7 = fcn.0041a052(unaff_EBP + -0x1040), \n                *(unaff_EBP + -0x18) < uVar7 || *(unaff_EBP + -0x18) == uVar7)) &&\n               (cVar4 = fcn.00409fd2(unaff_EBP + -0x4440),  cVar4 != '\\0')) break;\n            iVar5 = fcn.0041a052(unaff_EBP + -0x5c88);\n            *(unaff_EBP + -0x5c86 + iVar5 * 2) = 0;\n            fcn.0041a0c0(unaff_EBP + -0x40, 0, 0x1e);\n            *(unaff_EBP + -0x30) = 0x14;\n            *(unaff_EBP + -0x38) = unaff_EBP + -0x5c88;\n            *(unaff_EBP + -0x3c) = 3;\n            (*_sym.imp.SHELL32.dll_SHFileOperationW)(unaff_EBP + -0x40);\n        }\n    }\ncode_r0x0040ea04:\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004093de();\ncode_r0x0040f317:\n    iVar5 = fcn.0040d5a7(*(unaff_EBP + 0xc), unaff_EBP + -0x4440, unaff_EBP + 0xf, 0x1000);\n    *(unaff_EBP + 0xc) = iVar5;\n    if (iVar5 == 0) goto code_r0x0040f346;\n    goto code_r0x0040e7bb;\n}\n",
        "token_count": 6745
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0040ff52": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ff52(int32_t *arg_8h, uint32_t *arg_ch, uint32_t *arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint var_20h;\n    uint32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    puVar8 = arg_10h;\n    if (arg_14h != '\\0') {\n        fcn.0041bb00(arg_ch, arg_10h, 0x40);\n        puVar8 = arg_ch;\n    }\n    if (*0x44b730 == '\\0') {\n        iVar4 = 0;\n        piVar2 = 0x44b0f4;\n        do {\n            piVar2[-1] = iVar4;\n            *piVar2 = (iVar4 + 1) % 5;\n            piVar6 = piVar2 + 5;\n            piVar2[1] = (iVar4 + 2) % 5;\n            piVar2[2] = (iVar4 + 3) % 5;\n            piVar2[3] = (iVar4 + 4) % 5;\n            if (iVar4 == 0) {\n                iVar4 = 4;\n            }\n            else {\n                iVar4 = iVar4 + -1;\n            }\n            piVar2 = piVar6;\n        } while (piVar6 < 0x44b734);\n        *0x44b730 = '\\x01';\n    }\n    piVar2 = arg_8h;\n    piVar6 = &var_20h;\n    for (iVar4 = 5; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *piVar6 = *piVar2;\n        piVar2 = piVar2 + 1;\n        piVar6 = piVar6 + 1;\n    }\n    piVar2 = 0x44b0fc;\n    arg_14h = puVar8;\n    do {\n        uVar5 = *arg_14h;\n        uVar5 = uVar5 >> 8 & 0xff00ff00 | uVar5 << 0x18 | (uVar5 & 0xff00) << 8 | uVar5 >> 0x18;\n        *arg_14h = uVar5;\n        arg_14h = arg_14h + 1;\n        puVar1 = &var_20h + piVar2[-2];\n        var_4h = &var_20h + piVar2[1];\n        *var_4h = *var_4h + (((&var_20h)[piVar2[-1]] ^ (&var_20h)[*piVar2]) & *puVar1 ^ (&var_20h)[*piVar2]) +\n                            0x5a827999 + ((&var_20h)[piVar2[-3]] << 5 | (&var_20h)[piVar2[-3]] >> 0x1b) + uVar5;\n        *puVar1 = *puVar1 >> 2 | *puVar1 << 0x1e;\n        piVar2 = piVar2 + 5;\n        piVar6 = 0x44b23c;\n    } while (piVar2 < 0x44b23c);\n    arg_14h = 0x10;\n    do {\n        uVar5 = puVar8[arg_14h - 8U & 0xf] ^ puVar8[arg_14h + 2U & 0xf] ^ puVar8[arg_14h - 3U & 0xf] ^\n                puVar8[arg_14h & 0xf];\n        uVar5 = uVar5 << 1 | uVar5 < 0;\n        puVar8[arg_14h & 0xf] = uVar5;\n        puVar1 = &var_20h + piVar6[-2];\n        var_4h = &var_20h + piVar6[1];\n        *var_4h = *var_4h + (((&var_20h)[piVar6[-1]] ^ (&var_20h)[*piVar6]) & *puVar1 ^ (&var_20h)[*piVar6]) +\n                            0x5a827999 + ((&var_20h)[piVar6[-3]] << 5 | (&var_20h)[piVar6[-3]] >> 0x1b) + uVar5;\n        *puVar1 = *puVar1 >> 2 | *puVar1 << 0x1e;\n        arg_14h = arg_14h + 1;\n        piVar6 = piVar6 + 5;\n    } while (piVar6 < 0x44b28c);\n    arg_14h = 0x14;\n    piVar2 = 0x44b28c;\n    do {\n        uVar5 = puVar8[arg_14h - 8U & 0xf] ^ puVar8[arg_14h + 2U & 0xf] ^ puVar8[arg_14h - 3U & 0xf] ^\n                puVar8[arg_14h & 0xf];\n        uVar5 = uVar5 << 1 | uVar5 < 0;\n        puVar8[arg_14h & 0xf] = uVar5;\n        puVar1 = &var_20h + piVar2[-2];\n        var_4h = &var_20h + piVar2[1];\n        *var_4h = *var_4h + ((&var_20h)[piVar2[-1]] ^ (&var_20h)[*piVar2] ^ *puVar1) + 0x6ed9eba1 +\n                            ((&var_20h)[piVar2[-3]] << 5 | (&var_20h)[piVar2[-3]] >> 0x1b) + uVar5;\n        *puVar1 = *puVar1 >> 2 | *puVar1 << 0x1e;\n        arg_14h = arg_14h + 1;\n        piVar2 = piVar2 + 5;\n    } while (piVar2 < 0x44b41c);\n    arg_14h = 0x28;\n    arg_10h = 0x44b418;\n    do {\n        uVar5 = puVar8[arg_14h - 8U & 0xf] ^ puVar8[arg_14h + 2U & 0xf] ^ puVar8[arg_14h - 3U & 0xf] ^\n                puVar8[arg_14h & 0xf];\n        uVar3 = uVar5 << 1 | uVar5 < 0;\n        puVar8[arg_14h & 0xf] = uVar3;\n        var_8h = &var_20h + arg_10h[2];\n        var_ch = &var_20h + arg_10h[-1];\n        uVar5 = (&var_20h)[arg_10h[-1]];\n        *var_8h = *var_8h + ((&var_20h)[arg_10h[1]] & (uVar5 | (&var_20h)[*arg_10h]) | uVar5 & (&var_20h)[*arg_10h]) +\n                            0x8f1bbcdc + ((&var_20h)[arg_10h[-2]] << 5 | (&var_20h)[arg_10h[-2]] >> 0x1b) + uVar3;\n        *var_ch = *var_ch >> 2 | *var_ch << 0x1e;\n        arg_14h = arg_14h + 1;\n        arg_10h = arg_10h + 5;\n    } while (arg_10h < 0x44b5a8);\n    arg_14h = 0x3c;\n    piVar2 = 0x44b5ac;\n    do {\n        uVar5 = puVar8[arg_14h - 8U & 0xf] ^ puVar8[arg_14h + 2U & 0xf] ^ puVar8[arg_14h - 3U & 0xf] ^\n                puVar8[arg_14h & 0xf];\n        uVar5 = uVar5 << 1 | uVar5 < 0;\n        puVar8[arg_14h & 0xf] = uVar5;\n        puVar1 = &var_20h + piVar2[-2];\n        var_ch = &var_20h + piVar2[1];\n        *var_ch = *var_ch + ((&var_20h)[piVar2[-1]] ^ (&var_20h)[*piVar2] ^ *puVar1) + 0xca62c1d6 +\n                            ((&var_20h)[piVar2[-3]] << 5 | (&var_20h)[piVar2[-3]] >> 0x1b) + uVar5;\n        *puVar1 = *puVar1 >> 2 | *puVar1 << 0x1e;\n        arg_14h = arg_14h + 1;\n        piVar2 = piVar2 + 5;\n    } while (piVar2 < 0x44b73c);\n    iVar4 = &var_20h - arg_8h;\n    iVar7 = 5;\n    do {\n        *arg_8h = *arg_8h + *(iVar4 + arg_8h);\n        arg_8h = arg_8h + 1;\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    return;\n}\n",
        "token_count": 2251
    },
    "00410397": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410397(uint32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    arg_8h_00 = arg_8h;\n    uVar1 = 0;\n    do {\n        var_4h = uVar1 + 1;\n        *(&var_10h + uVar1) = *(arg_8h + 0x14 + (uVar1 < 4) * 4) >> (('\\x03' - (uVar1 & 3)) * '\\b' & 0x1f);\n        uVar1 = var_4h;\n    } while (var_4h < 8);\n    arg_8h = CONCAT13(0x80, arg_8h);\n    fcn.004102e3(arg_8h_00, &arg_8h + 3, 1, arg_10h);\n    while ((*(arg_8h_00 + 0x14) & 0x1f8) != 0x1c0) {\n        arg_8h = arg_8h & 0xffffff;\n        fcn.004102e3(arg_8h_00, &arg_8h + 3, 1, arg_10h);\n    }\n    fcn.004102e3(arg_8h_00, &var_10h, 8, arg_10h);\n    var_4h = 0;\n    do {\n        *(var_4h * 4 + arg_ch) = *(var_4h * 4 + arg_8h_00);\n        var_4h = var_4h + 1;\n    } while (var_4h < 5);\n    fcn.0040ccb3(&var_4h, 4);\n    fcn.0040ccb3(&var_8h, 4);\n    fcn.0040ccb3(arg_8h_00 + 0x1c, 0x40);\n    fcn.0040ccb3(arg_8h_00, 0x14);\n    fcn.0040ccb3(arg_8h_00 + 0x14, 8);\n    fcn.0040ccb3(&var_10h, 8);\n    if (arg_10h != '\\0') {\n        fcn.0041a0c0(arg_8h_00 + 0x5c, 0, 0x40);\n    }\n    return;\n}\n",
        "token_count": 593
    },
    "00410a28": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00410a28(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int16_t *piVar3;\n    int16_t extraout_CX;\n    int16_t iVar4;\n    int16_t *extraout_EDX;\n    int16_t *extraout_EDX_00;\n    int16_t *piVar5;\n    uint32_t uVar6;\n    \n    do {\n        cVar2 = fcn.00410959();\n    } while (cVar2 != '\\0');\n    iVar4 = *extraout_EDX;\n    if (iVar4 == 0) {\n        piVar3 = NULL;\n    }\n    else {\n        uVar6 = 0;\n        bVar1 = false;\n        piVar3 = extraout_EDX;\n        do {\n            if ((!bVar1) &&\n               (cVar2 = fcn.00410959(iVar4),  piVar3 = extraout_EDX_00,  iVar4 = extraout_CX,  cVar2 != '\\0')) break;\n            piVar5 = piVar3;\n            if (iVar4 == 0x22) {\n                piVar5 = piVar3 + 1;\n                if (*piVar5 == 0x22) {\n                    if ((arg_ch != 0) && (uVar6 < arg_10h - 1U)) {\n                        *(arg_ch + uVar6 * 2) = 0x22;\n                        uVar6 = uVar6 + 1;\n                    }\n                }\n                else {\n                    bVar1 = !bVar1;\n                    piVar5 = piVar3;\n                }\n            }\n            else if ((arg_ch != 0) && (uVar6 < arg_10h - 1U)) {\n                *(arg_ch + uVar6 * 2) = iVar4;\n                uVar6 = uVar6 + 1;\n            }\n            piVar3 = piVar5 + 1;\n            iVar4 = *piVar3;\n        } while (iVar4 != 0);\n        if (arg_ch != 0) {\n            *(arg_ch + uVar6 * 2) = 0;\n        }\n    }\n    return piVar3;\n}\n",
        "token_count": 508
    },
    "00410bc4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00410bc4(void)\n\n{\n    int32_t iVar1;\n    \n    if ((*0x44b740 & 1) == 0) {\n        *0x44b740 = *0x44b740 | 1;\n        *0x44b73c = fcn.0041bf26();\n    }\n    iVar1 = fcn.0041bf26();\n    if (0x32 < iVar1 - *0x44b73c) {\n        if (*0x43d9ea != '\\0') {\n            fcn.004064c5(0xff);\n        }\n        fcn.0040ce13();\n    }\n    if (*0x42f777 != '\\0') {\n        fcn.004064c5(0xff);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00410ce3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00410ce3(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(&var_4h, &var_8h);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetProcessAffinityMask)(uVar1);\n    if (iVar2 != 0) {\n        iVar2 = 0;\n        uVar3 = 1;\n        do {\n            if ((var_4h & uVar3) != 0) {\n                iVar2 = iVar2 + 1;\n            }\n            uVar3 = uVar3 * 2;\n        } while (uVar3 != 0);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 208
    },
    "00410d1a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.00410d1a(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00410ce3();\n    if (uVar1 == 0) {\n        return 1;\n    }\n    if (0x20 < uVar1) {\n        uVar1 = 0x20;\n    }\n    return uVar1;\n}\n",
        "token_count": 86
    },
    "00410d31": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00410d31(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint *unaff_ESI;\n    bool bVar3;\n    \n    fcn.00410ca8(*(param_1 + 0x194));\n    bVar3 = *(param_1 + 400) == '\\0';\n    if (bVar3) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 0x19c);\n        puVar1 = param_1 + 0x18c;\n        uVar2 = *puVar1;\n        *unaff_ESI = *(param_1 + 0x88 + uVar2 * 8);\n        unaff_ESI[1] = *(param_1 + 0x8c + uVar2 * 8);\n        *puVar1 = *puVar1 + 1 & 0x1f;\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 0x19c);\n    }\n    return bVar3;\n}\n",
        "token_count": 244
    },
    "00410ef2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00410ef2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *0x44b744;\n    if ((((param_1 != 0) && (param_1 == *0x44b744)) && (*0x44b748 != 0)) &&\n       ((*0x44b748 = *0x44b748 + -1,  *0x44b748 == 0 && (*0x44b744 != 0)))) {\n        fcn.00410dd8();\n        fcn.00419d67(iVar1);\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "00411159": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00411159(uint32_t *arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint lpSystemTime;\n    uint16_t var_24h;\n    uint16_t var_22h;\n    uint var_20h;\n    uint16_t var_1ch;\n    ushort var_1ah;\n    int32_t var_18h;\n    uint var_14h;\n    uint lpFileTime;\n    uint var_ch;\n    int32_t lpLocalFileTime;\n    uint var_4h;\n    \n    lpFileTime = *in_ECX;\n    var_ch = in_ECX[1];\n    (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(&lpFileTime, &lpLocalFileTime);\n    (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(&lpLocalFileTime, &lpSystemTime);\n    uVar3 = lpSystemTime._2_2_;\n    arg_8h[3] = var_20h;\n    arg_8h[2] = var_22h;\n    arg_8h[4] = var_20h._2_2_;\n    arg_8h[8] = var_22h - 1;\n    arg_8h[5] = var_1ch;\n    uVar2 = 1;\n    *arg_8h = lpSystemTime;\n    arg_8h[1] = uVar3;\n    arg_8h[7] = var_24h;\n    if (1 < uVar3) {\n        piVar4 = 0x42c138;\n        do {\n            if (0xc < uVar2) break;\n            arg_8h[8] = arg_8h[8] + *piVar4;\n            uVar2 = uVar2 + 1;\n            piVar4 = piVar4 + 1;\n        } while (uVar2 < uVar3);\n    }\n    if ((2 < uVar3) && (cVar1 = fcn.00411120(lpSystemTime),  cVar1 != '\\0')) {\n        arg_8h[8] = arg_8h[8] + 1;\n    }\n    var_1ah = 0;\n    (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&lpSystemTime, &var_18h);\n    arg_8h[6] = lpLocalFileTime - var_18h;\n    return var_4h;\n}\n",
        "token_count": 581
    },
    "004113b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004113b8(int16_t *param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (param_3 != 0) {\n        do {\n            *(param_2 + uVar1 * 2) = *param_1;\n            *(param_2 + 1 + uVar1 * 2) = *(param_1 + 1);\n            if (*param_1 == 0) {\n                return;\n            }\n            uVar1 = uVar1 + 1;\n            param_1 = param_1 + 1;\n        } while (uVar1 < param_3);\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "00411779": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411779(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t lpCPInfo;\n    \n    uVar2 = 0;\n    (*_sym.imp.KERNEL32.dll_GetCPInfo)(0, &lpCPInfo);\n    *(param_1 + 0x100) = 1 < lpCPInfo;\n    do {\n        iVar1 = (*_sym.imp.KERNEL32.dll_IsDBCSLeadByte)(uVar2);\n        *(uVar2 + param_1) = iVar1 != 0;\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 0x100);\n    return;\n}\n",
        "token_count": 160
    },
    "0041181e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041181e(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        *param_1 = 0;\n        fcn.00419d72(param_1[0x2b]);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00411e90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411e90(int32_t arg_8h, int32_t arg_ch, uint32_t *arg_10h, uint32_t arg_14h)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = *arg_10h - arg_ch;\n    if (arg_8h != 0) {\n        do {\n            arg_8h = arg_8h + -1;\n            puVar1 = fcn.00411e58(uVar3 & arg_14h);\n            puVar2 = fcn.00411e58();\n            *puVar2 = *puVar1;\n            uVar3 = uVar3 + 1;\n            *arg_10h = *arg_10h + 1 & arg_14h;\n        } while (arg_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "00411f36": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411f36(uint32_t arg_8h, uint arg_ch)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_10h;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        fcn.00406320();\n    }\n    if (arg_8h < 0x40000) {\n        arg_8h = 0x40000;\n    }\n    if ((*(in_ECX + 0xe6f4) <= arg_8h && arg_8h != *(in_ECX + 0xe6f4)) && (arg_8h >> 0x10 < 0x10001)) {\n        if ((arg_ch == '\\0') || ((*(in_ECX + 0x4b34) == 0 && (*(in_ECX + 0x4c38) == '\\0')))) {\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n        iVar2 = fcn.0041c8ee(arg_8h);\n        var_4h = iVar2;\n        if (!bVar1) goto code_r0x00411fd3;\n        if ((iVar2 != 0) && (*(in_ECX + 0x4c38) == '\\0')) goto code_r0x00411fd3;\n        do {\n            fcn.0041198d();\n            fcn.0041c172(&var_10h, 0x42a498);\ncode_r0x00411fd3:\n            if (iVar2 != 0) goto code_r0x00411ff2;\n        } while (arg_8h < 0x1000000);\n        fcn.00411d98(arg_8h);\n        *(in_ECX + 0x4c38) = 1;\ncode_r0x00411ff2:\n        if (*(in_ECX + 0x4c38) == '\\0') {\n            fcn.0041a0c0(iVar2, 0, arg_8h);\n            if ((bVar1) && (uVar4 = 1,  1 < *(in_ECX + 0xe6f4))) {\n                do {\n                    uVar3 = *(in_ECX + 0x70) - uVar4;\n                    uVar4 = uVar4 + 1;\n                    *((arg_8h - 1 & uVar3) + var_4h) = *((*(in_ECX + 0xe6f4) - 1U & uVar3) + *(in_ECX + 0x4b34));\n                } while (uVar4 < *(in_ECX + 0xe6f4));\n            }\n            iVar2 = *(in_ECX + 0x4b34);\n            if (iVar2 != 0) {\n                fcn.00419d72(iVar2);\n            }\n            *(in_ECX + 0x4b34) = var_4h;\n        }\n        *(in_ECX + 0xe6f4) = arg_8h;\n        *(in_ECX + 0xe6f8) = arg_8h - 1;\n    }\n    return;\n}\n",
        "token_count": 742
    },
    "00412433": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412433(int32_t param_1)\n\n{\n    int32_t **ppiVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint32_t uVar7;\n    uint var_10h;\n    int32_t **var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(param_1 + 0xb0) != *(param_1 + 0xb4)) {\n        **(param_1 + 0xb0) = 0;\n    }\n    puVar6 = param_1 + 4;\n    piVar3 = param_1 + 0xb8;\n    var_4h = 0x26;\n    var_ch = &var_10h;\n    do {\n        while (*piVar3 != 0) {\n            ppiVar4 = *piVar3;\n            *piVar3 = *ppiVar4;\n            ppiVar4[2] = &var_10h;\n            ppiVar4[1] = var_ch;\n            var_ch[2] = ppiVar4;\n            *ppiVar4 = 0xffff;\n            *(ppiVar4 + 2) = *puVar6;\n            var_ch = ppiVar4;\n        }\n        piVar3 = piVar3 + 1;\n        puVar6 = puVar6 + 1;\n        var_4h = var_4h + -1;\n    } while (var_4h != 0);\n    ppiVar4 = var_ch;\n    if (var_ch != &var_10h) {\n        do {\n            while ((ppiVar1 = ppiVar4 + *(ppiVar4 + 2) * 3,  *ppiVar1 == -1 &&\n                   (*(ppiVar1 + 2) + *(ppiVar4 + 2) < 0x10000))) {\n                ppiVar1[2][1] = ppiVar1[1];\n                ppiVar1[1][2] = ppiVar1[2];\n                *(ppiVar4 + 2) = *(ppiVar4 + 2) + *(ppiVar1 + 2);\n            }\n            ppiVar1 = ppiVar4 + 1;\n            ppiVar4 = *ppiVar1;\n        } while (*ppiVar1 != &var_10h);\n    }\n    while (var_ch != &var_10h) {\n        var_ch[2][1] = var_ch[1];\n        var_ch[1][2] = var_ch[2];\n        uVar2 = *(var_ch + 2);\n        ppiVar4 = var_ch;\n        if (0x80 < uVar2) {\n            iVar5 = (uVar2 - 0x81 >> 7) + 1;\n            uVar2 = uVar2 + iVar5 * -0x80;\n            do {\n                *ppiVar4 = *(param_1 + 0x14c);\n                *(param_1 + 0x14c) = ppiVar4;\n                ppiVar4 = ppiVar4 + 0x180;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        uVar7 = *(param_1 + 0x29 + uVar2);\n        if (*(param_1 + 4 + uVar7) != uVar2) {\n            puVar6 = param_1 + 3 + uVar7;\n            uVar7 = uVar7 - 1;\n            iVar5 = uVar2 - *puVar6;\n            ppiVar1 = param_1 + 0xb4 + iVar5 * 4;\n            ppiVar4[(uVar2 - iVar5) * 3] = *ppiVar1;\n            *ppiVar1 = ppiVar4 + (uVar2 - iVar5) * 3;\n        }\n        ppiVar1 = param_1 + 0xb8 + uVar7 * 4;\n        *ppiVar4 = *ppiVar1;\n        *ppiVar1 = ppiVar4;\n    }\n    return;\n}\n",
        "token_count": 936
    },
    "00412593": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00412593(int32_t param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    \n    if (*(param_1 + 0xaa) == '\\0') {\n        *(param_1 + 0xaa) = 0xff;\n        fcn.00412433();\n        piVar4 = param_1 + 0xb8 + param_2 * 4;\n        piVar2 = *piVar4;\n        if (piVar2 != NULL) {\n            *piVar4 = *piVar2;\n            return piVar2;\n        }\n    }\n    piVar4 = param_1 + 0xb8 + param_2 * 4;\n    iVar6 = param_2;\n    do {\n        iVar6 = iVar6 + 1;\n        piVar4 = piVar4 + 1;\n        if (iVar6 == 0x26) {\n            *(param_1 + 0xaa) = *(param_1 + 0xaa) + -1;\n            uVar5 = *(param_2 + 4 + param_1);\n            iVar6 = *(param_1 + 0x15c);\n            if (uVar5 * 0xc < iVar6 - *(param_1 + 0x150)) {\n                *(param_1 + 0x15c) = iVar6 + uVar5 * -0xc;\n                piVar4 = param_1 + 0x154;\n                *piVar4 = *piVar4 + uVar5 * -0xc;\n                return *piVar4;\n            }\n            return NULL;\n        }\n    } while (*piVar4 == 0);\n    puVar1 = param_1 + 0xb8 + iVar6 * 4;\n    puVar3 = *puVar1;\n    *puVar1 = *puVar3;\n    fcn.004117be(puVar3, iVar6, param_2);\n    return puVar3;\n}\n",
        "token_count": 473
    },
    "00412685": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412685(int32_t param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + 0xb4);\n    if (iVar2 != *(param_1 + 0xb0)) {\n        *(param_1 + 0xb4) = iVar2 + -0xc;\n        return;\n    }\n    ppiVar1 = param_1 + 0xb8;\n    if (*ppiVar1 != NULL) {\n        *ppiVar1 = **ppiVar1;\n        return;\n    }\n    fcn.00412593(0);\n    return;\n}\n",
        "token_count": 145
    },
    "004128db": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004128db(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar3 = 1;\n    *(param_1 + 0xa6c) = 1;\n    *(param_1 + 0x660) = param_2;\n    fcn.00412760();\n    *(param_1 + 0x86c) = 0;\n    *(param_1 + 0x86d) = 2;\n    fcn.0041a0c0(param_1 + 0x86e, 4, 9);\n    fcn.0041a0c0(param_1 + 0x877, 6, 0xf5);\n    iVar1 = 0;\n    do {\n        *(param_1 + 0x76c + iVar1) = iVar1;\n        iVar1 = iVar1 + 1;\n        iVar2 = iVar1;\n        iVar5 = iVar3;\n    } while (iVar1 < 3);\n    for (; iVar1 < 0x100; iVar1 = iVar1 + 1) {\n        *(param_1 + 0x76c + iVar1) = iVar2;\n        iVar4 = iVar5 + -1;\n        if (iVar5 + -1 == 0) {\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + 1;\n            iVar4 = iVar3;\n        }\n        iVar5 = iVar4;\n    }\n    fcn.0041a0c0(param_1 + 0x96c, 0, 0x40);\n    fcn.0041a0c0(param_1 + 0x9ac, 8, 0xc0);\n    *(param_1 + 0x642) = 7;\n    return;\n}\n",
        "token_count": 431
    },
    "0041298c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041298c(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t **ppuVar2;\n    ushort uVar3;\n    uint16_t uVar4;\n    uint32_t **ppuVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint *arg_8h_00;\n    char *pcVar8;\n    uint uVar9;\n    uint16_t *in_ECX;\n    int32_t arg_ch;\n    uint8_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    uint *puVar14;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar6 = *in_ECX;\n    var_4h = uVar6 - 1;\n    arg_8h_00 = *(arg_8h + 0x650);\n    while (arg_8h_00 != *(in_ECX + 2)) {\n        fcn.004121ea(arg_8h_00, arg_8h_00 + -6);\n        arg_8h_00 = arg_8h_00 + -6;\n    }\n    *(*(in_ECX + 2) + 1) = *(*(in_ECX + 2) + 1) + '\\x04';\n    puVar1 = in_ECX + 1;\n    *puVar1 = *puVar1 + 4;\n    var_8h = *puVar1 - *(arg_8h_00 + 1);\n    uVar11 = *(arg_8h + 0x65c) != 0;\n    iVar12 = *(arg_8h_00 + 1) + uVar11 >> 1;\n    *(arg_8h_00 + 1) = iVar12;\n    *puVar1 = iVar12;\n    do {\n        puVar7 = arg_8h_00;\n        var_8h = var_8h - *(puVar7 + 7);\n        arg_8h_00 = puVar7 + 6;\n        iVar12 = *(puVar7 + 7) + uVar11 >> 1;\n        *(puVar7 + 7) = iVar12;\n        *puVar1 = *puVar1 + iVar12;\n        if (*(puVar7 + 1) <= *(puVar7 + 7) && *(puVar7 + 7) != *(puVar7 + 1)) {\n            uVar9 = *arg_8h_00;\n            uVar3 = *(puVar7 + 10);\n            puVar14 = arg_8h_00;\n            do {\n                puVar13 = puVar14;\n                *puVar13 = *(puVar13 + -6);\n                puVar14 = puVar13 + -6;\n                *(puVar13 + 1) = *(puVar13 + -2);\n                if (puVar14 == *(in_ECX + 2)) break;\n                uVar10 = uVar9 >> 8;\n            } while (*(puVar13 + -0xb) <= uVar10 && uVar10 != *(puVar13 + -0xb));\n            *puVar14 = uVar9;\n            *(puVar13 + -2) = uVar3;\n        }\n        var_4h = var_4h + -1;\n        if (var_4h == 0) {\n            pcVar8 = puVar7 + 7;\n            if (*pcVar8 == '\\0') {\n                do {\n                    var_4h = var_4h + 1;\n                    pcVar8 = pcVar8 + -6;\n                } while (*pcVar8 == '\\0');\n                *in_ECX = *in_ECX - var_4h;\n                var_8h = var_8h + var_4h;\n                if (*in_ECX == 1) {\n                    ppuVar5 = *(in_ECX + 2);\n                    var_10h = *ppuVar5;\n                    uVar4 = *(ppuVar5 + 1);\n                    do {\n                        uVar10 = var_10h >> 8;\n                        var_8h = var_8h >> 1;\n                        var_10h._0_2_ = CONCAT11(uVar10 - (uVar10 >> 1), var_10h);\n                        var_10h = var_10h & 0xffff0000 | var_10h;\n                    } while (1 < var_8h);\n                    ppuVar2 = arg_8h + 0x4b44 + *((uVar6 + 1 >> 1) + 0x4ab5 + arg_8h) * 4;\n                    *ppuVar5 = *ppuVar2;\n                    *ppuVar2 = ppuVar5;\n                    *(arg_8h + 0x650) = puVar1;\n                    *puVar1 = var_10h;\n                    in_ECX[3] = uVar4;\n                    return;\n                }\n            }\n            *puVar1 = *puVar1 + (var_8h - (var_8h >> 1));\n            arg_ch = uVar6 + 1 >> 1;\n            iVar12 = *in_ECX + 1 >> 1;\n            if (arg_ch != iVar12) {\n                uVar9 = fcn.004119d3(*(in_ECX + 2), arg_ch, iVar12);\n                *(in_ECX + 2) = uVar9;\n            }\n            *(arg_8h + 0x650) = *(in_ECX + 2);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 1304
    },
    "00412b1b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.00412b1b(uint arg_8h, uint16_t *arg_ch)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint16_t **ppuVar6;\n    uint16_t *var_108h;\n    uint var_104h;\n    char var_8h;\n    char var_7h;\n    char *var_6h;\n    \n    puVar4 = *(in_ECX + 0x644);\n    pcVar1 = *(*(in_ECX + 0x650) + 1);\n    ppuVar6 = &var_108h;\n    if (arg_8h == '\\0') {\n        var_108h = *(in_ECX + 0x650);\n        ppuVar6 = &var_104h;\n        if (*(puVar4 + 4) == 0) goto code_r0x00412ba7;\n    }\n    if (arg_ch == NULL) goto code_r0x00412b62;\n    puVar4 = *(puVar4 + 4);\n    while (*(arg_ch + 1) == pcVar1) {\n        *ppuVar6 = arg_ch;\n        ppuVar6 = ppuVar6 + 1;\n        if (*(puVar4 + 4) == 0) goto code_r0x00412b99;\ncode_r0x00412b62:\n        puVar4 = *(puVar4 + 4);\n        if (*puVar4 == 1) {\n            arg_ch = puVar4 + 1;\n        }\n        else {\n            for (arg_ch = *(puVar4 + 2); *arg_ch != **(in_ECX + 0x650); arg_ch = arg_ch + 3) {\n            }\n        }\n    }\n    puVar4 = *(arg_ch + 1);\ncode_r0x00412b99:\n    if (ppuVar6 == &var_108h) {\n        return puVar4;\n    }\ncode_r0x00412ba7:\n    var_6h = pcVar1 + 1;\n    var_8h = *pcVar1;\n    if (*puVar4 == 1) {\n        var_7h = *(puVar4 + 3);\n    }\n    else {\n        if (puVar4 < *(in_ECX + 0x4bdc) || puVar4 == *(in_ECX + 0x4bdc)) {\n            return NULL;\n        }\n        for (pcVar2 = *(puVar4 + 2); *pcVar2 != *pcVar1; pcVar2 = pcVar2 + 6) {\n        }\n        iVar3 = pcVar2[1] - 1;\n        uVar5 = (puVar4[1] - *puVar4) - iVar3;\n        if (uVar5 < iVar3 * 2) {\n            var_7h = (uVar5 * 3 + -1 + iVar3 * 2) / (uVar5 * 2);\n        }\n        else {\n            var_7h = uVar5 < iVar3 * 5;\n        }\n        var_7h = var_7h + '\\x01';\n    }\n    do {\n        ppuVar6 = ppuVar6 + -1;\n        puVar4 = fcn.0041270b();\n        if (puVar4 == NULL) {\n            return NULL;\n        }\n    } while (ppuVar6 != &var_108h);\n    return puVar4;\n}\n",
        "token_count": 805
    },
    "00412c35": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00412c35(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int16_t *piVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    char *pcVar10;\n    uint16_t *puVar11;\n    int16_t iVar12;\n    uint16_t uVar13;\n    uint32_t uVar14;\n    int16_t *arg_8h;\n    int16_t *arg_ch;\n    uint32_t uVar15;\n    uint16_t *puVar16;\n    uint var_20h;\n    ushort uStack32;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = **(param_1 + 0x650);\n    var_20h._0_1_ = uVar6;\n    var_20h._1_1_ = uVar6 >> 8;\n    var_20h._2_2_ = uVar6 >> 0x10;\n    uStack32 = *(*(param_1 + 0x650) + 1);\n    arg_8h = NULL;\n    if ((var_20h._1_1_ < 0x1f) && (piVar4 = *(*(param_1 + 0x644) + 8),  piVar4 != NULL)) {\n        if (*piVar4 == 1) {\n            arg_8h = piVar4 + 1;\n            *(piVar4 + 3) = (*(piVar4 + 3) < 0x20) + *(piVar4 + 3);\n        }\n        else {\n            arg_8h = *(piVar4 + 2);\n            if (*arg_8h != var_20h) {\n                do {\n                    arg_ch = arg_8h;\n                    arg_8h = arg_ch + 3;\n                } while (*arg_8h != var_20h);\n                if (*(arg_ch + 1) <= *(arg_ch + 7)) {\n                    fcn.004121ea(arg_8h, arg_ch);\n                    arg_8h = arg_ch;\n                }\n            }\n            if (*(arg_8h + 1) < 0x73) {\n                *(arg_8h + 1) = *(arg_8h + 1) + 2;\n                piVar4[1] = piVar4[1] + 2;\n            }\n        }\n    }\n    if (*(param_1 + 0x65c) == 0) {\n        uVar6 = fcn.00412b1b(1, arg_8h);\n        *(*(param_1 + 0x650) + 2) = uVar6;\n        iVar7 = *(*(param_1 + 0x650) + 2);\n        *(param_1 + 0x64c) = iVar7;\n        *(param_1 + 0x644) = iVar7;\n        if (iVar7 != 0) {\n            return;\n        }\n    }\n    else {\n        **(param_1 + 0x4bdc) = var_20h;\n        *(param_1 + 0x4bdc) = *(param_1 + 0x4bdc) + 1;\n        var_14h = *(param_1 + 0x4bdc);\n        if (var_14h < *(param_1 + 0x4be8)) {\n            if (CONCAT22(uStack32, var_20h._2_2_) == 0) {\n                *(*(param_1 + 0x650) + 2) = var_14h;\n                var_20h._2_2_ = *(param_1 + 0x644);\n                uStack32 = *(param_1 + 0x644) >> 0x10;\n            }\n            else {\n                if (CONCAT22(uStack32, var_20h._2_2_) < var_14h || CONCAT22(uStack32, var_20h._2_2_) == var_14h) {\n                    iVar7 = fcn.00412b1b(0, arg_8h);\n                    var_20h._2_2_ = iVar7;\n                    uStack32 = iVar7 >> 0x10;\n                    if (iVar7 == 0) goto code_r0x00412cf3;\n                }\n                piVar1 = param_1 + 0x65c;\n                *piVar1 = *piVar1 + -1;\n                if (*piVar1 == 0) {\n                    var_14h = CONCAT22(uStack32, var_20h._2_2_);\n                    *(param_1 + 0x4bdc) = *(param_1 + 0x4bdc) - (*(param_1 + 0x64c) != *(param_1 + 0x644));\n                }\n            }\n            puVar11 = *(param_1 + 0x644);\n            uVar15 = *puVar11;\n            uVar2 = puVar11[1];\n            puVar16 = *(param_1 + 0x64c);\n            if (puVar16 != puVar11) {\n                do {\n                    uVar3 = *puVar16;\n                    uVar8 = uVar3;\n                    if (uVar8 == 1) {\n                        puVar9 = fcn.00412630(1);\n                        if (puVar9 == NULL) goto code_r0x00412cf3;\n                        *puVar9 = *(puVar16 + 1);\n                        *(puVar9 + 1) = puVar16[3];\n                        *(puVar16 + 2) = puVar9;\n                        if (*(puVar9 + 1) < 0x1e) {\n                            *(puVar9 + 1) = *(puVar9 + 1) * '\\x02';\n                        }\n                        else {\n                            *(puVar9 + 1) = 0x78;\n                        }\n                        uVar13 = *(puVar9 + 1);\n                        iVar12 = (3 < uVar15) + *(param_1 + 0x658);\n                    }\n                    else {\n                        if ((uVar3 & 1) == 0) {\n                            iVar7 = fcn.004126b5(*(puVar16 + 2), uVar3 >> 1);\n                            *(puVar16 + 2) = iVar7;\n                            if (iVar7 == 0) goto code_r0x00412cf3;\n                        }\n                        iVar12 = (puVar16[1] <= uVar8 << 3 && uVar8 << 2 <= uVar15) * 2 + (uVar8 * 2 < uVar15);\n                        uVar13 = puVar16[1];\n                    }\n                    puVar11 = puVar16 + 1;\n                    uVar13 = iVar12 + uVar13;\n                    *puVar11 = uVar13;\n                    uVar14 = uVar13 + ((uVar2 - var_20h._1_1_) - uVar15) + 1;\n                    uVar5 = (uVar13 + 6) * var_20h._1_1_ * 2;\n                    if (uVar5 < uVar14 * 6) {\n                        iVar12 = (2 - (uVar5 < uVar14 * 4)) + (uVar14 < uVar5);\n                        uVar13 = *puVar11 + 3;\n                    }\n                    else {\n                        iVar12 = (-(uVar5 < uVar14 * 0xc) - (uVar5 < uVar14 * 0xf)) + (7 - (uVar5 < uVar14 * 9));\n                        uVar13 = *puVar11 + iVar12;\n                    }\n                    *puVar11 = uVar13;\n                    pcVar10 = uVar8 * 6 + *(puVar16 + 2);\n                    *(pcVar10 + 2) = var_14h;\n                    *pcVar10 = var_20h;\n                    pcVar10[1] = iVar12;\n                    *puVar16 = uVar3 + 1;\n                    puVar16 = *(puVar16 + 4);\n                } while (puVar16 != *(param_1 + 0x644));\n            }\n            *(param_1 + 0x644) = CONCAT22(uStack32, var_20h._2_2_);\n            *(param_1 + 0x64c) = CONCAT22(uStack32, var_20h._2_2_);\n            return;\n        }\n    }\ncode_r0x00412cf3:\n    fcn.00412760();\n    *(param_1 + 0xa6c) = 0;\n    return;\n}\n",
        "token_count": 1996
    },
    "00412f5b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412f5b(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint16_t *in_ECX;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    \n    *(arg_8h + 0x4a84) = in_ECX[1];\n    uVar4 = *(arg_8h + 0x4a78) / *(arg_8h + 0x4a84);\n    puVar8 = *(in_ECX + 2);\n    *(arg_8h + 0x4a78) = uVar4;\n    uVar4 = (*(arg_8h + 0x4a74) - *(arg_8h + 0x4a70)) / uVar4;\n    uVar2 = *(arg_8h + 0x4a84);\n    if (uVar4 < uVar2) {\n        uVar6 = puVar8[1];\n        if (uVar4 < uVar6) {\n            bVar3 = uVar2 < uVar6 * 2;\n            *(arg_8h + 0xa6d) = bVar3;\n            *(arg_8h + 0x4a80) = uVar6;\n            *(arg_8h + 0x664) = *(arg_8h + 0x664) + bVar3;\n            *(arg_8h + 0x650) = puVar8;\n            puVar8[1] = uVar6 + 4;\n            in_ECX[1] = in_ECX[1] + 4;\n            if (0x7c < uVar6 + 4) {\n                fcn.0041298c(arg_8h);\n            }\n            *(arg_8h + 0x4a7c) = 0;\n        }\n        else {\n            if (*(arg_8h + 0x650) == 0) goto code_r0x00412f9d;\n            *(arg_8h + 0xa6d) = 0;\n            iVar7 = *in_ECX - 1;\n            do {\n                puVar9 = puVar8 + 6;\n                uVar6 = uVar6 + puVar8[7];\n                if (uVar4 < uVar6) {\n                    *(arg_8h + 0x4a80) = uVar6;\n                    *(arg_8h + 0x4a7c) = uVar6 - puVar8[7];\n                    fcn.00412f13(arg_8h, puVar9);\n                    goto code_r0x0041302f;\n                }\n                iVar7 = iVar7 + -1;\n                puVar8 = puVar9;\n            } while (iVar7 != 0);\n            *(arg_8h + 0xa6e) = *(**(arg_8h + 0x650) + 0x96c + arg_8h);\n            *(arg_8h + 0x4a7c) = uVar6;\n            *(*puVar9 + 0x66c + arg_8h) = *(arg_8h + 0xa6c);\n            uVar1 = *in_ECX;\n            *(arg_8h + 0x654) = uVar1;\n            iVar7 = uVar1 - 1;\n            *(arg_8h + 0x650) = 0;\n            do {\n                puVar9 = puVar9 + -6;\n                iVar7 = iVar7 + -1;\n                *(*puVar9 + 0x66c + arg_8h) = *(arg_8h + 0xa6c);\n            } while (iVar7 != 0);\n            *(arg_8h + 0x4a80) = *(arg_8h + 0x4a84);\n        }\ncode_r0x0041302f:\n        uVar5 = 1;\n    }\n    else {\ncode_r0x00412f9d:\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 951
    },
    "004132ca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004132ca(uint arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    uVar1 = fcn.004123de();\n    if ((uVar1 >> 5 & 1) == 0) {\n        var_4h = in_ECX;\n        if (*(in_ECX + 0x4a8c) != 0) goto code_r0x004132f4;\ncode_r0x00413345:\n        uVar1 = uVar1 & 0xffffff00;\n    }\n    else {\n        var_4h = fcn.004123de();\ncode_r0x004132f4:\n        if ((uVar1 & 0x40) != 0) {\n            uVar2 = fcn.004123de();\n            *arg_ch = uVar2;\n        }\n        fcn.004123ff(arg_8h);\n        if ((uVar1 >> 5 & 1) != 0) {\n            uVar1 = (uVar1 & 0x1f) + 1;\n            if (0x10 < uVar1) {\n                uVar1 = uVar1 * 3 - 0x20;\n            }\n            if (uVar1 == 1) {\n                uVar1 = fcn.0041181e();\n                goto code_r0x00413345;\n            }\n            fcn.00411833(var_4h + 1);\n            fcn.004128db(uVar1);\n        }\n        uVar1 = *(in_ECX + 0x644) != 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 387
    },
    "0041336d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0041336d(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    char cVar5;\n    uint32_t uVar6;\n    \n    piVar2 = *(param_1 + 0x644);\n    if ((*(param_1 + 0x4bdc) < piVar2) && (piVar2 <= *(param_1 + 0x4be4))) {\n        if (*piVar2 == 1) {\n            fcn.00411a43(param_1);\n            goto code_r0x004133b2;\n        }\n        if ((*(param_1 + 0x4bdc) < *(piVar2 + 2)) && (*(piVar2 + 2) <= *(param_1 + 0x4be4))) {\n            cVar5 = fcn.00412f5b(param_1);\ncode_r0x004133a2:\n            if (cVar5 != '\\0') {\ncode_r0x004133b2:\n                iVar3 = *(param_1 + 0x4a78);\n                *(param_1 + 0x4a70) = *(param_1 + 0x4a70) + iVar3 * *(param_1 + 0x4a7c);\n                *(param_1 + 0x4a78) = (*(param_1 + 0x4a80) - *(param_1 + 0x4a7c)) * iVar3;\n                if (*(param_1 + 0x650) != 0) {\n                    uVar1 = **(param_1 + 0x650);\n                    if ((*(param_1 + 0x65c) == 0) &&\n                       (uVar6 = *(*(param_1 + 0x650) + 2),  *(param_1 + 0x4bdc) <= uVar6 && uVar6 != *(param_1 + 0x4bdc)\n                       )) {\n                        *(param_1 + 0x64c) = uVar6;\n                        *(param_1 + 0x644) = uVar6;\n                    }\n                    else {\n                        fcn.00412c35();\n                        if (*(param_1 + 0xa6c) == '\\0') {\n                            fcn.00411b72();\n                        }\n                    }\n                    do {\n                        uVar6 = *(param_1 + 0x4a70);\n                        if (0xffffff < (uVar6 + *(param_1 + 0x4a78) ^ uVar6)) {\n                            if (0x7fff < *(param_1 + 0x4a78)) {\n                                return uVar1;\n                            }\n                            *(param_1 + 0x4a78) = -uVar6 & 0x7fff;\n                        }\n                        uVar6 = fcn.004123de();\n                        *(param_1 + 0x4a78) = *(param_1 + 0x4a78) << 8;\n                        *(param_1 + 0x4a70) = *(param_1 + 0x4a70) << 8;\n                        *(param_1 + 0x4a74) = uVar6 | *(param_1 + 0x4a74) << 8;\n                    } while( true );\n                }\n                do {\n                    uVar6 = *(param_1 + 0x4a70);\n                    if (0xffffff < (uVar6 + *(param_1 + 0x4a78) ^ uVar6)) {\n                        if (0x7fff < *(param_1 + 0x4a78)) goto code_r0x00413470;\n                        *(param_1 + 0x4a78) = -uVar6 & 0x7fff;\n                    }\n                    uVar6 = fcn.004123de();\n                    *(param_1 + 0x4a78) = *(param_1 + 0x4a78) << 8;\n                    *(param_1 + 0x4a70) = *(param_1 + 0x4a70) << 8;\n                    *(param_1 + 0x4a74) = uVar6 | *(param_1 + 0x4a74) << 8;\n                } while( true );\n            }\n        }\n    }\n    return 0xffffffff;\ncode_r0x00413470:\n    do {\n        *(param_1 + 0x65c) = *(param_1 + 0x65c) + 1;\n        puVar4 = *(*(param_1 + 0x644) + 8);\n        *(param_1 + 0x644) = puVar4;\n        if (puVar4 <= *(param_1 + 0x4bdc)) {\n            return 0xffffffff;\n        }\n        if (*(param_1 + 0x4be4) <= puVar4 && puVar4 != *(param_1 + 0x4be4)) {\n            return 0xffffffff;\n        }\n    } while (*puVar4 == *(param_1 + 0x654));\n    cVar5 = fcn.00413165(param_1);\n    goto code_r0x004133a2;\n}\n",
        "token_count": 1183
    },
    "0041352c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0041352c(void)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_10h;\n    uint uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    uint32_t uVar5;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    if (*(extraout_ECX + 0x20) == 0) {\n        uVar2 = fcn.00419956(0x400400);\n        *(extraout_ECX + 0x20) = uVar2;\n        fcn.0041a0c0(uVar2, 0, 0x400400);\n    }\n    if (*(extraout_ECX + 0x18) == 0) {\n        iVar4 = *(extraout_ECX + 0x1c);\n        arg_10h = iVar4 * 2;\n        uVar5 = -(arg_10h * 0x4ae4 >> 0x20 != 0) | arg_10h * 0x4ae4;\n        puVar3 = fcn.00419956(-(0xfffffffb < uVar5) | uVar5 + 4);\n        *(unaff_EBP + -0x10) = puVar3;\n        *(unaff_EBP + -4) = 0;\n        if (puVar3 == NULL) {\n            uVar2 = 0;\n        }\n        else {\n            *puVar3 = arg_10h;\n            *(unaff_EBP + -0x14) = puVar3 + 1;\n            fcn.0041bfcf(puVar3 + 1, 0x4ae4, arg_10h, 0x4123a9);\n            uVar2 = *(unaff_EBP + -0x14);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(extraout_ECX + 0x18) = uVar2;\n        fcn.0041a0c0(uVar2, 0, iVar4 * 0x95c8);\n        if (arg_10h != 0) {\n            *(unaff_EBP + -0x10) = 0;\n            *(unaff_EBP + -0x14) = arg_10h;\n            do {\n                iVar4 = *(extraout_ECX + 0x18) + *(unaff_EBP + -0x10);\n                piVar1 = iVar4 + 0x4ad4;\n                if (*piVar1 == 0) {\n                    *(iVar4 + 0x4adc) = 0x4100;\n                    iVar4 = fcn.0041c8ee(0x30c00);\n                    *piVar1 = iVar4;\n                    if (iVar4 == 0) {\n                        fcn.00406320();\n                    }\n                }\n                *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 0x4ae4;\n                piVar1 = unaff_EBP + -0x14;\n                *piVar1 = *piVar1 + -1;\n            } while (*piVar1 != 0);\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 822
    },
    "004136c5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004136c5(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_2 + 0x1c) != 0) {\n        *(param_2 + 0x50) = *(param_1 + 0x4c50);\n        fcn.0040aa16(*(param_2 + 0x18) + 0x24, *(param_1 + 0x4c50));\n        uVar1 = fcn.0041d180();\n        fcn.0040aa16(*(param_2 + 0x18) + 0x28, uVar1);\n        fcn.0040b20a(param_2);\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "00413727": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00413727(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t *arg_ch;\n    uchar *puVar2;\n    uint16_t uVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    uint var_1b0h;\n    uint var_85h;\n    uint var_49h;\n    uint var_38h;\n    uint var_1ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    piVar1 = param_1 + 4;\n    iVar5 = *(param_1 + 0x78) + -0x19;\n    if ((*piVar1 == iVar5 || *piVar1 < iVar5) || (cVar4 = fcn.00411b90(),  cVar4 != '\\0')) {\n        fcn.0040974f(-*(param_1 + 8) & 7);\n        uVar6 = fcn.00409766();\n        if ((uVar6 & 0x8000) == 0) {\n            *(param_1 + 0xe670) = 0;\n            *(param_1 + 0x98c8) = 0;\n            *(param_1 + 0x98cc) = 0;\n            if ((uVar6 & 0x4000) == 0) {\n                fcn.0041a0c0(param_1 + 0xe4c0, 0, 0x1ae);\n            }\n            fcn.0040974f(2);\n            var_4h = 0;\n            do {\n                uVar6 = fcn.00409766();\n                var_8h = uVar6 >> 0xc & 0xff;\n                fcn.0040974f(4);\n                if (var_8h == 0xf) {\n                    uVar6 = fcn.00409766();\n                    uVar6 = uVar6 >> 0xc & 0xff;\n                    fcn.0040974f(4);\n                    if (uVar6 == 0) {\n                        *(&var_1ch + var_4h) = 0xf;\n                    }\n                    else {\n                        iVar5 = uVar6 + 2;\n                        while ((0 < iVar5 && (iVar5 = iVar5 + -1,  var_4h < 0x14))) {\n                            *(&var_1ch + var_4h) = 0;\n                            var_4h = var_4h + 1;\n                        }\n                        var_4h = var_4h - 1;\n                    }\n                }\n                else {\n                    *(&var_1ch + var_4h) = var_8h;\n                }\n                var_4h = var_4h + 1;\n            } while (var_4h < 0x14);\n            arg_ch = param_1 + 0x3c44;\n            fcn.00412072(&var_1ch, arg_ch, 0x14);\n            var_4h = 0;\n            do {\n                iVar5 = *(param_1 + 0x78) + -5;\n                if ((*piVar1 != iVar5 && iVar5 <= *piVar1) && (cVar4 = fcn.00411b90(),  cVar4 == '\\0'))\n                goto code_r0x004139f0;\n                uVar6 = fcn.00409721();\n                iVar5 = *(param_1 + 0x3cc8);\n                uVar6 = uVar6 & 0xfffe;\n                if (uVar6 < *(param_1 + 0x3c48 + iVar5 * 4)) {\n                    uVar6 = uVar6 >> (0x10U - iVar5 & 0x1f);\n                    uVar7 = *(uVar6 + 0x88 + arg_ch) + *(param_1 + 8);\n                    *piVar1 = *piVar1 + (uVar7 >> 3);\n                    *(param_1 + 8) = uVar7 & 7;\n                    uVar3 = *(param_1 + 0x40cc + uVar6 * 2);\n                }\n                else {\n                    uVar9 = iVar5 + 1;\n                    var_8h = 0xf;\n                    uVar7 = var_8h;\n                    if (uVar9 < 0xf) {\n                        puVar8 = param_1 + 0x3c48 + uVar9 * 4;\n                        do {\n                            uVar7 = uVar9;\n                            if (uVar6 < *puVar8) break;\n                            uVar9 = uVar9 + 1;\n                            puVar8 = puVar8 + 1;\n                            uVar7 = var_8h;\n                        } while (uVar9 < 0xf);\n                    }\n                    var_8h = uVar7;\n                    uVar7 = *(param_1 + 8) + var_8h;\n                    *piVar1 = *piVar1 + (uVar7 >> 3);\n                    *(param_1 + 8) = uVar7 & 7;\n                    uVar6 = (uVar6 - arg_ch[var_8h] >> (0x10U - var_8h & 0x1f)) + *(param_1 + 0x3c88 + var_8h * 4);\n                    if (*arg_ch <= uVar6) {\n                        uVar6 = 0;\n                    }\n                    uVar3 = *(param_1 + 0x48cc + uVar6 * 2);\n                }\n                if (uVar3 < 0x10) {\n                    *(&var_1b0h + var_4h) = *(var_4h + 0xe4c0 + param_1) + uVar3 & 0xf;\n                    var_4h = var_4h + 1;\n                }\n                else if (uVar3 < 0x12) {\n                    if (uVar3 == 0x10) {\n                        uVar6 = fcn.00409766();\n                        var_8h = (uVar6 >> 0xd) + 3;\n                        uVar10 = 3;\n                    }\n                    else {\n                        uVar6 = fcn.00409766();\n                        var_8h = (uVar6 >> 9) + 0xb;\n                        uVar10 = 7;\n                    }\n                    fcn.0040974f(uVar10);\n                    if (0 < var_4h) {\n                        while (0 < var_8h) {\n                            var_8h = var_8h - 1;\n                            if (0x193 < var_4h) goto code_r0x004139e2;\n                            *(&var_1b0h + var_4h) = (&stack0xfffffe4b)[var_4h];\n                            var_4h = var_4h + 1;\n                        }\n                    }\n                }\n                else {\n                    if (uVar3 == 0x12) {\n                        uVar6 = fcn.00409766();\n                        var_8h = (uVar6 >> 0xd) + 3;\n                        uVar10 = 3;\n                    }\n                    else {\n                        uVar6 = fcn.00409766();\n                        var_8h = (uVar6 >> 9) + 0xb;\n                        uVar10 = 7;\n                    }\n                    fcn.0040974f(uVar10);\n                    while (0 < var_8h) {\n                        var_8h = var_8h - 1;\n                        if (0x193 < var_4h) goto code_r0x004139e2;\n                        puVar2 = &var_1b0h + var_4h;\n                        var_4h = var_4h + 1;\n                        *puVar2 = 0;\n                    }\n                }\n            } while (var_4h < 0x194);\ncode_r0x004139e2:\n            *(param_1 + 0xe674) = 1;\n            if (*(param_1 + 0x78) < *piVar1) {\ncode_r0x004139f0:\n                cVar4 = '\\0';\n            }\n            else {\n                fcn.00412072(&var_1b0h, param_1 + 0x94, 299);\n                fcn.00412072(&var_85h, param_1 + 0xf80, 0x3c);\n                fcn.00412072(&var_49h, param_1 + 0x1e6c, 0x11);\n                fcn.00412072(&var_38h, param_1 + 0x2d58, 0x1c);\n                fcn.0041bb00(param_1 + 0xe4c0, &var_1b0h, 0x1ae);\n                cVar4 = '\\x01';\n            }\n        }\n        else {\n            *(param_1 + 0xe670) = 1;\n            cVar4 = fcn.004132ca(param_1, param_1 + 0xe4bc);\n        }\n    }\n    return cVar4;\n}\n",
        "token_count": 2083
    },
    "00413ad4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar __thiscall fcn.00413ad4(int32_t param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (((*(param_2 + 2) == '\\0') && (iVar2 = *(param_1 + 0x78) + -0x10,  *param_2 != iVar2 && iVar2 <= *param_2)) &&\n       (cVar1 = fcn.00411bfc(),  cVar1 == '\\0')) {\n        return 0;\n    }\n    iVar2 = fcn.00413a6f(param_2);\n    param_2[1] = iVar2;\n    iVar2 = fcn.00413a6f(param_2);\n    param_2[2] = iVar2;\n    uVar3 = fcn.00409766();\n    *param_2 = uVar3 >> 0xd;\n    fcn.0040974f(3);\n    if ((*param_2 == '\\0') || (*param_2 == '\\x04')) {\n        uVar3 = fcn.00409766();\n        *(param_2 + 3) = (uVar3 >> 0xb) + '\\x01';\n        fcn.0040974f(5);\n    }\n    if (*param_2 == '\\x05') {\n        *(param_2 + 3) = '\\x03';\n        iVar2 = fcn.00409766();\n        param_2[4] = iVar2 + 1;\n        fcn.0040974f(0x10);\n        uVar3 = fcn.00409766();\n        *(param_2 + 5) = uVar3 >> 0xe;\n        fcn.0040974f(2);\n    }\n    return 1;\n}\n",
        "token_count": 408
    },
    "00413b86": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t * __cdecl fcn.00413b86(uint32_t *arg_8h, uint32_t arg_ch, uint8_t *arg_10h)\n\n{\n    char *pcVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint16_t *puVar7;\n    char cVar8;\n    int32_t in_ECX;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint8_t *puVar13;\n    uint32_t uVar14;\n    uint32_t *puVar15;\n    uint32_t *puVar16;\n    uint32_t *puVar17;\n    uint32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t *var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t *var_10h;\n    uint32_t *var_ch;\n    int32_t var_8h;\n    uint32_t *var_4h;\n    \n    puVar17 = arg_8h;\n    uVar2 = *arg_10h;\n    var_28h = arg_8h;\n    if (uVar2 == 0) {\n        uVar9 = arg_10h[0xc];\n        arg_10h = NULL;\n        fcn.00401c85(arg_ch);\n        arg_8h = NULL;\n        puVar15 = *(in_ECX + 0x34);\n        if (uVar9 == 0) {\n            return puVar15;\n        }\n        do {\n            cVar8 = '\\0';\n            for (uVar14 = arg_8h; uVar14 < arg_ch; uVar14 = uVar14 + uVar9) {\n                cVar8 = cVar8 - *(arg_10h + puVar17);\n                arg_10h = arg_10h + 1;\n                *(uVar14 + puVar15) = cVar8;\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < uVar9);\n        return puVar15;\n    }\n    if (uVar2 != 0) {\n        if (uVar2 < 3) {\n            uVar9 = *(in_ECX + 0x4c50);\n            arg_8h = NULL;\n            puVar15 = puVar17;\n            if (arg_ch - 4 < 1) {\n                return puVar17;\n            }\n            do {\n                puVar16 = puVar15 + 1;\n                uVar14 = uVar9 + 1;\n                if ((*puVar15 == 0xe8) || (iVar11 = arg_8h + 1,  *puVar15 == (uVar2 == 2) - 0x18U)) {\n                    uVar10 = *puVar16;\n                    if ((uVar10 & 0x80000000) == 0) {\n                        if ((uVar10 - 0x1000000 & 0x80000000) != 0) {\n                            uVar10 = uVar10 - (uVar14 & 0xffffff);\n                            goto code_r0x00413ff7;\n                        }\n                    }\n                    else if (((uVar14 & 0xffffff) + uVar10 & 0x80000000) == 0) {\n                        uVar10 = uVar10 + 0x1000000;\ncode_r0x00413ff7:\n                        *puVar16 = uVar10;\n                    }\n                    puVar16 = puVar15 + 5;\n                    uVar14 = uVar9 + 5;\n                    iVar11 = arg_8h + 5;\n                }\n                arg_8h = iVar11;\n                uVar9 = uVar14;\n                puVar15 = puVar16;\n                if (arg_ch - 4 <= arg_8h) {\n                    return puVar17;\n                }\n            } while( true );\n        }\n        if (uVar2 == 3) {\n            uVar9 = *(in_ECX + 0x4c50);\n            if (arg_ch == 3 || arg_ch - 3 < 0) {\n                return arg_8h;\n            }\n            puVar7 = arg_8h + 1;\n            iVar11 = (arg_ch - 4 >> 2) + 1;\n            do {\n                if (*(puVar7 + 1) == 0xeb) {\n                    iVar12 = (*puVar7 * 0x100 - (uVar9 >> 2)) + *(puVar7 + -1);\n                    *(puVar7 + -1) = iVar12;\n                    *puVar7 = iVar12 >> 8;\n                    *(puVar7 + 1) = iVar12 >> 0x10;\n                }\n                puVar7 = puVar7 + 2;\n                uVar9 = uVar9 + 4;\n                iVar11 = iVar11 + -1;\n            } while (iVar11 != 0);\n            return arg_8h;\n        }\n        if (uVar2 == 4) {\n            uVar2 = arg_10h[0xc];\n            var_10h = arg_8h;\n            var_24h = uVar2;\n            fcn.00401c85(arg_ch);\n            var_28h = *(in_ECX + 0x34);\n            var_ch = NULL;\n            if (uVar2 == 0) {\n                return var_28h;\n            }\n            do {\n                var_1ch = 0;\n                var_20h = 0;\n                var_8h = 0;\n                var_4h = NULL;\n                arg_10h = NULL;\n                arg_8h = NULL;\n                fcn.0041a0c0(&var_48h, 0, 0x1c);\n                var_18h = 0;\n                iVar11 = 0;\n                for (var_14h = var_ch; var_14h < arg_ch; var_14h = var_14h + var_24h) {\n                    iVar5 = var_20h - var_8h;\n                    uVar2 = *var_10h;\n                    var_2ch = uVar2;\n                    var_10h = var_10h + 1;\n                    var_8h = var_20h;\n                    iVar12 = (iVar11 * arg_8h + arg_10h * iVar5 + var_4h * var_20h + var_1ch * 8 >> 3 & 0xff) - var_2ch;\n                    cVar8 = iVar12;\n                    *(var_14h + var_28h) = cVar8;\n                    var_20h = cVar8 - var_1ch;\n                    iVar6 = uVar2 * 8;\n                    var_1ch = iVar12;\n                    iVar12 = fcn.0041c865(iVar6);\n                    var_48h = var_48h + iVar12;\n                    iVar12 = fcn.0041c865(iVar6 - var_8h);\n                    var_44h = var_44h + iVar12;\n                    iVar12 = fcn.0041c865(var_8h + iVar6);\n                    var_40h = var_40h + iVar12;\n                    iVar12 = fcn.0041c865(iVar6 - iVar5);\n                    var_3ch = var_3ch + iVar12;\n                    iVar12 = fcn.0041c865(iVar6 + iVar5);\n                    var_38h = var_38h + iVar12;\n                    iVar12 = fcn.0041c865(iVar6 - iVar11);\n                    var_34h = var_34h + iVar12;\n                    iVar11 = fcn.0041c865(iVar6 + iVar11);\n                    uVar9 = var_48h;\n                    var_30h = var_30h + iVar11;\n                    if ((var_18h & 0x1f) == 0) {\n                        uVar14 = 0;\n                        var_48h = 0;\n                        uVar10 = 1;\n                        do {\n                            uVar3 = (&var_48h)[uVar10];\n                            if (uVar3 < uVar9) {\n                                uVar9 = uVar3;\n                                uVar14 = uVar10;\n                            }\n                            (&var_48h)[uVar10] = 0;\n                            uVar10 = uVar10 + 1;\n                        } while (uVar10 < 7);\n                        if (uVar14 == 1) {\n                            if (-0x11 < var_4h) {\n                                var_4h = var_4h + -1;\n                            }\n                        }\n                        else if (uVar14 == 2) {\n                            if (var_4h < 0x10) {\n                                var_4h = var_4h + 1;\n                            }\n                        }\n                        else if (uVar14 == 3) {\n                            if (-0x11 < arg_10h) {\n                                arg_10h = arg_10h + -1;\n                            }\n                        }\n                        else if (uVar14 == 4) {\n                            if (arg_10h < 0x10) {\n                                arg_10h = arg_10h + 1;\n                            }\n                        }\n                        else if (uVar14 == 5) {\n                            if (-0x11 < arg_8h) {\n                                arg_8h = arg_8h + -1;\n                            }\n                        }\n                        else if ((uVar14 == 6) && (arg_8h < 0x10)) {\n                            arg_8h = arg_8h + 1;\n                        }\n                    }\n                    var_18h = var_18h + 1;\n                    iVar11 = iVar5;\n                }\n                var_ch = var_ch + 1;\n            } while (var_ch < var_24h);\n            return var_28h;\n        }\n        if (uVar2 == 5) {\n            iVar11 = *(arg_10h + 0x10);\n            var_24h = arg_10h[0x14];\n            var_ch = arg_8h;\n            var_28h = iVar11;\n            fcn.00401c85(arg_ch);\n            var_4h = *(in_ECX + 0x34);\n            arg_10h = NULL;\n            iVar11 = -iVar11;\n            do {\n                arg_8h = NULL;\n                if (arg_10h < arg_ch) {\n                    puVar13 = var_4h + iVar11;\n                    var_20h = ((arg_ch - arg_10h) - 1) / 3 + 1;\n                    var_8h = iVar11;\n                    do {\n                        if (var_8h < 3) {\ncode_r0x00413d34:\n                            cVar8 = arg_8h;\n                        }\n                        else {\n                            var_10h = *puVar13;\n                            var_1ch = puVar13[-3];\n                            iVar12 = (var_10h - var_1ch) + arg_8h;\n                            var_18h = fcn.0041c865(iVar12 - arg_8h);\n                            var_14h = fcn.0041c865(iVar12 - var_10h);\n                            iVar12 = fcn.0041c865(iVar12 - var_1ch);\n                            if ((var_18h <= var_14h) && (var_18h <= iVar12)) goto code_r0x00413d34;\n                            if (iVar12 < var_14h) {\n                                cVar8 = var_1ch;\n                            }\n                            else {\n                                cVar8 = var_10h;\n                            }\n                        }\n                        uVar2 = *var_ch;\n                        var_ch = var_ch + 1;\n                        var_8h = var_8h + 3;\n                        arg_8h = cVar8 - uVar2;\n                        puVar13[var_28h] = cVar8 - uVar2;\n                        puVar13 = puVar13 + 3;\n                        var_20h = var_20h + -1;\n                    } while (var_20h != 0);\n                }\n                arg_10h = arg_10h + 1;\n                iVar11 = iVar11 + 1;\n                if (2 < arg_10h) {\n                    for (; var_24h < arg_ch - 2; var_24h = var_24h + 3) {\n                        cVar8 = *(var_24h + 1 + var_4h);\n                        *(var_24h + var_4h) = *(var_24h + var_4h) + cVar8;\n                        pcVar1 = var_24h + 2 + var_4h;\n                        *pcVar1 = *pcVar1 + cVar8;\n                    }\n                    return var_4h;\n                }\n            } while( true );\n        }\n        if (uVar2 == 6) {\n            uVar9 = *(in_ECX + 0x4c50) >> 4;\n            if (arg_ch == 0x15 || arg_ch - 0x15 < 0) {\n                return arg_8h;\n            }\n            iVar11 = (arg_ch - 0x16 >> 4) + 1;\n            do {\n                if ((-1 < (*arg_8h & 0x1f) - 0x10) && (uVar2 = *((*arg_8h & 0x1f) + 0x42c178),  uVar2 != 0)) {\n                    uVar4 = 0;\n                    var_24h = uVar2;\n                    iVar12 = 0x12;\n                    do {\n                        if (((var_24h & 1 << (uVar4 & 0x1f)) != 0) &&\n                           (iVar5 = fcn.0040ab36(arg_8h, iVar12 + 0x18, 4),  iVar5 == 5)) {\n                            puVar17 = arg_8h;\n                            iVar5 = iVar12;\n                            iVar6 = fcn.0040ab36(arg_8h, iVar12, 0x14, iVar12, 0x14);\n                            fcn.00411c9a(arg_8h, iVar6 - uVar9 & 0xfffff, puVar17, iVar5);\n                        }\n                        uVar4 = uVar4 + 1;\n                        iVar12 = iVar12 + 0x29;\n                    } while (iVar12 < 0x65);\n                }\n                arg_8h = arg_8h + 4;\n                uVar9 = uVar9 + 1;\n                iVar11 = iVar11 + -1;\n            } while (iVar11 != 0);\n            return var_28h;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 3391
    },
    "00414064": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414064(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    \n    if ((arg_ch != arg_8h) && (*(in_ECX + 0x4c4a) = 1,  arg_ch < arg_8h)) {\n        *(in_ECX + 0x4c49) = 1;\n    }\n    if (*(in_ECX + 0x4c38) == '\\0') {\n        if (arg_ch < arg_8h) {\n            iVar1 = *(in_ECX + 0xe6f4) - arg_8h;\n            iVar2 = *(in_ECX + 0x4b34) + arg_8h;\n            fcn.00411cf3(iVar2, iVar1);\n        }\n        else {\n            iVar1 = arg_ch - arg_8h;\n            iVar2 = *(in_ECX + 0x4b34) + arg_8h;\n        }\n        fcn.00411cf3(iVar2, iVar1);\n    }\n    else {\n        for (uVar3 = arg_ch - arg_8h & *(in_ECX + 0xe6f8); uVar3 != 0; uVar3 = uVar3 - iVar1) {\n            iVar1 = fcn.00411f01(arg_8h, uVar3);\n            fcn.00411e58(arg_8h, iVar1);\n            fcn.00411cf3();\n            arg_8h = arg_8h + iVar1 & *(in_ECX + 0xe6f8);\n        }\n    }\n    return;\n}\n",
        "token_count": 390
    },
    "00414113": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar __cdecl fcn.00414113(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint8_t extraout_AH;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    arg_ch[3] = 0;\n    if (((*(arg_8h + 2) != '\\0') || (iVar4 = *(in_ECX + 0x78) + -7,  *arg_8h == iVar4 || *arg_8h < iVar4)) ||\n       (cVar3 = fcn.00411bfc(),  cVar3 != '\\0')) {\n        fcn.0040974f(-arg_8h[1] & 7);\n        uVar5 = fcn.00409766();\n        uVar1 = uVar5 >> 8;\n        fcn.0040974f(8);\n        uVar7 = (uVar5 >> 8 & 0xff) >> 3 & 3;\n        iVar4 = uVar7 + 1;\n        if (iVar4 != 4) {\n            arg_ch[3] = uVar7 + 3;\n            arg_ch[1] = (uVar5 >> 8 & 7) + 1;\n            fcn.00409766();\n            fcn.0040974f(8);\n            iVar6 = 0;\n            var_8h = 0;\n            if (iVar4 != 0) {\n                uVar2 = 0;\n                do {\n                    uVar5 = fcn.00409766();\n                    iVar6 = var_8h + ((uVar5 >> 8) << (uVar2 & 0x1f));\n                    *arg_8h = *arg_8h + (arg_8h[1] + 8U >> 3);\n                    iVar4 = iVar4 + -1;\n                    arg_8h[1] = arg_8h[1] + 8U & 7;\n                    var_8h = iVar6;\n                    uVar2 = uVar2 + 8;\n                } while (iVar4 != 0);\n            }\n            *arg_ch = iVar6;\n            if ((iVar6 >> 0x10 ^ iVar6 >> 8 ^ iVar6 ^ uVar1 ^ 0x5a) == extraout_AH) {\n                iVar6 = *arg_8h + -1 + iVar6;\n                arg_ch[2] = *arg_8h;\n                if (*(in_ECX + 0x7c) < iVar6) {\n                    iVar6 = *(in_ECX + 0x7c);\n                }\n                *(in_ECX + 0x7c) = iVar6;\n                *(arg_ch + 4) = uVar1 >> 6 & 1;\n                *(arg_ch + 0x11) = uVar1 >> 7;\n                return '\\x01';\n            }\n        }\n        cVar3 = '\\0';\n    }\n    return cVar3;\n}\n",
        "token_count": 724
    },
    "0041422f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar __cdecl fcn.0041422f(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uchar uVar7;\n    uint32_t uVar8;\n    uint32_t *arg_ch_00;\n    uint uVar9;\n    uint var_1c8h;\n    uint var_96h;\n    uint var_56h;\n    uint var_46h;\n    uint var_18h;\n    int32_t var_4h;\n    \n    if (*(arg_ch + 0x11) == '\\0') {\n        cVar2 = '\\x01';\n    }\n    else {\n        var_4h = in_ECX;\n        if (((*(arg_8h + 2) != '\\0') || (iVar3 = *(in_ECX + 0x78) + -0x19,  *arg_8h == iVar3 || *arg_8h < iVar3)) ||\n           (cVar2 = fcn.00411bfc(),  cVar2 != '\\0')) {\n            arg_ch = 0;\n            do {\n                uVar4 = fcn.00409766();\n                uVar4 = uVar4 >> 0xc & 0xff;\n                fcn.0040974f(4);\n                uVar7 = uVar4;\n                if (uVar4 == 0xf) {\n                    uVar4 = fcn.00409766();\n                    uVar4 = uVar4 >> 0xc & 0xff;\n                    fcn.0040974f(4);\n                    if (uVar4 == 0) {\n                        *(&var_18h + arg_ch) = uVar7;\n                    }\n                    else {\n                        iVar3 = uVar4 + 2;\n                        while ((0 < iVar3 && (iVar3 = iVar3 + -1,  arg_ch < 0x14))) {\n                            *(&var_18h + arg_ch) = 0;\n                            arg_ch = arg_ch + 1;\n                        }\n                        arg_ch = arg_ch - 1;\n                    }\n                }\n                else {\n                    *(&var_18h + arg_ch) = uVar7;\n                }\n                arg_ch = arg_ch + 1;\n            } while (arg_ch < 0x14);\n            arg_ch_00 = arg_10h + 0x3bb0;\n            fcn.00412072(&var_18h, arg_ch_00, 0x14);\n            arg_ch = 0;\n            do {\n                if (((*(arg_8h + 2) == '\\0') && (iVar3 = *(var_4h + 0x78) + -5,  *arg_8h != iVar3 && iVar3 <= *arg_8h))\n                   && (cVar2 = fcn.00411bfc(),  cVar2 == '\\0')) goto code_r0x0041447e;\n                uVar4 = fcn.00409721();\n                iVar3 = *(arg_10h + 0x3c34);\n                uVar4 = uVar4 & 0xfffe;\n                if (uVar4 < *(arg_10h + 0x3bb4 + iVar3 * 4)) {\n                    uVar4 = uVar4 >> (0x10U - iVar3 & 0x1f);\n                    uVar5 = *(uVar4 + 0x88 + arg_ch_00) + arg_8h[1];\n                    *arg_8h = *arg_8h + (uVar5 >> 3);\n                    arg_8h[1] = uVar5 & 7;\n                    uVar1 = *(arg_10h + 0x4038 + uVar4 * 2);\n                }\n                else {\n                    uVar8 = iVar3 + 1;\n                    uVar5 = 0xf;\n                    if (uVar8 < 0xf) {\n                        puVar6 = arg_10h + 0x3bb4 + uVar8 * 4;\n                        do {\n                            uVar5 = uVar8;\n                            if (uVar4 < *puVar6) break;\n                            uVar8 = uVar8 + 1;\n                            puVar6 = puVar6 + 1;\n                            uVar5 = 0xf;\n                        } while (uVar8 < 0xf);\n                    }\n                    iVar3 = arg_8h[1];\n                    arg_8h[1] = iVar3 + uVar5 & 7;\n                    *arg_8h = *arg_8h + (iVar3 + uVar5 >> 3);\n                    uVar4 = (uVar4 - arg_ch_00[uVar5] >> (0x10U - uVar5 & 0x1f)) + *(arg_10h + 0x3bf4 + uVar5 * 4);\n                    if (*arg_ch_00 <= uVar4) {\n                        uVar4 = 0;\n                    }\n                    uVar1 = *(arg_10h + 0x4838 + uVar4 * 2);\n                }\n                if (uVar1 < 0x10) {\n                    *(&var_1c8h + arg_ch) = uVar1;\n                    arg_ch = arg_ch + 1;\n                }\n                else if (uVar1 < 0x12) {\n                    if (uVar1 == 0x10) {\n                        uVar4 = fcn.00409766();\n                        iVar3 = (uVar4 >> 0xd) + 3;\n                        uVar9 = 3;\n                    }\n                    else {\n                        uVar4 = fcn.00409766();\n                        iVar3 = (uVar4 >> 9) + 0xb;\n                        uVar9 = 7;\n                    }\n                    fcn.0040974f(uVar9);\n                    if (0 < arg_ch) {\n                        while (0 < iVar3) {\n                            iVar3 = iVar3 + -1;\n                            if (0x1ad < arg_ch) goto code_r0x0041446e;\n                            *(&var_1c8h + arg_ch) = (&stack0xfffffe33)[arg_ch];\n                            arg_ch = arg_ch + 1;\n                        }\n                    }\n                }\n                else {\n                    if (uVar1 == 0x12) {\n                        uVar4 = fcn.00409766();\n                        iVar3 = (uVar4 >> 0xd) + 3;\n                        uVar9 = 3;\n                    }\n                    else {\n                        uVar4 = fcn.00409766();\n                        iVar3 = (uVar4 >> 9) + 0xb;\n                        uVar9 = 7;\n                    }\n                    fcn.0040974f(uVar9);\n                    while (0 < iVar3) {\n                        iVar3 = iVar3 + -1;\n                        if (0x1ad < arg_ch) goto code_r0x0041446e;\n                        *(&var_1c8h + arg_ch) = 0;\n                        arg_ch = arg_ch + 1;\n                    }\n                }\n            } while (arg_ch < 0x1ae);\ncode_r0x0041446e:\n            if ((*(arg_8h + 2) == '\\0') && (*(var_4h + 0x78) < *arg_8h)) {\ncode_r0x0041447e:\n                cVar2 = '\\0';\n            }\n            else {\n                fcn.00412072(&var_1c8h, arg_10h, 0x132);\n                fcn.00412072(&var_96h, arg_10h + 0xeec, 0x40);\n                fcn.00412072(&var_56h, arg_10h + 0x1dd8, 0x10);\n                fcn.00412072(&var_46h, arg_10h + 0x2cc4, 0x2c);\n                cVar2 = '\\x01';\n            }\n        }\n    }\n    return cVar2;\n}\n",
        "token_count": 1815
    },
    "00414546": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00414546(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    char cVar4;\n    int16_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint16_t uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint32_t *puVar13;\n    uint32_t uVar14;\n    uint *puVar15;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = arg_8h;\n    if (*(arg_8h + 0x2c) == '\\0') {\n        *(arg_8h + 0x2c) = 1;\n        cVar4 = fcn.0041422f(arg_8h + 4, arg_8h + 0x18, arg_8h + 0x30);\n        if (cVar4 == '\\0') {\n            *(arg_8h + 0x4ad0) = 1;\n            return;\n        }\n    }\n    piVar1 = arg_8h + 4;\n    iVar10 = *(arg_8h + 0x24) + *(arg_8h + 0x18);\n    if (*piVar1 != iVar10 && iVar10 <= *piVar1) {\n        *(arg_8h + 0x4ad0) = 1;\n        return;\n    }\n    *(arg_8h + 0x4ad8) = 0;\n    iVar10 = *(arg_8h + 0x20) + -1 + *(arg_8h + 0x18);\n    iVar11 = *(arg_8h + 0x4acc) + -0x10;\n    var_ch = iVar10;\n    if (iVar11 <= iVar10) {\n        var_ch = iVar11;\n    }\ncode_r0x004145c2:\n    do {\n        iVar6 = *piVar1;\n        if (var_ch <= iVar6) {\n            if (iVar10 < iVar6) {\n                return;\n            }\n            if ((iVar6 == iVar10) && (*(iVar3 + 0x1c) <= *(iVar3 + 8))) {\n                return;\n            }\n            if (((iVar11 <= iVar6) && (*(iVar3 + 0x4ad2) == '\\0')) || (*(iVar3 + 0x4acc) <= iVar6)) {\n                *(iVar3 + 0x4ad3) = 1;\n                return;\n            }\n        }\n        iVar6 = *(iVar3 + 0x4adc);\n        if (iVar6 - 8U <= *(iVar3 + 0x4ad8) && *(iVar3 + 0x4ad8) != iVar6 - 8U) {\n            *(iVar3 + 0x4adc) = iVar6 * 2;\n            iVar6 = fcn.00419e00(*(iVar3 + 0x4ad4), iVar6 * 0x18);\n            *(iVar3 + 0x4ad4) = iVar6;\n            if (iVar6 == 0) {\n                fcn.00406320();\n            }\n        }\n        puVar15 = *(iVar3 + 0x4ad8) * 0xc + *(iVar3 + 0x4ad4);\n        *(iVar3 + 0x4ad8) = *(iVar3 + 0x4ad8) + 1;\n        uVar7 = fcn.00409721();\n        iVar6 = *(iVar3 + 0xb4);\n        uVar7 = uVar7 & 0xfffe;\n        if (uVar7 < *(iVar3 + 0x34 + iVar6 * 4)) {\n            uVar7 = uVar7 >> (0x10U - iVar6 & 0x1f);\n            uVar12 = *(uVar7 + 0xb8 + iVar3) + *(iVar3 + 8);\n            *piVar1 = *piVar1 + (uVar12 >> 3);\n            *(iVar3 + 8) = uVar12 & 7;\n            uVar2 = *(iVar3 + 0x4b8 + uVar7 * 2);\n        }\n        else {\n            uVar14 = iVar6 + 1;\n            arg_8h = 0xf;\n            uVar12 = arg_8h;\n            if (uVar14 < 0xf) {\n                puVar13 = iVar3 + 0x34 + uVar14 * 4;\n                do {\n                    uVar12 = uVar14;\n                    if (uVar7 < *puVar13) break;\n                    uVar14 = uVar14 + 1;\n                    puVar13 = puVar13 + 1;\n                    uVar12 = arg_8h;\n                } while (uVar14 < 0xf);\n            }\n            arg_8h = uVar12;\n            uVar12 = *(iVar3 + 8) + arg_8h;\n            *piVar1 = *piVar1 + (uVar12 >> 3);\n            *(iVar3 + 8) = uVar12 & 7;\n            uVar7 = (uVar7 - *(iVar3 + 0x30 + arg_8h * 4) >> (0x10U - arg_8h & 0x1f)) + *(iVar3 + 0x74 + arg_8h * 4);\n            if (*(iVar3 + 0x30) <= uVar7) {\n                uVar7 = 0;\n            }\n            uVar2 = *(iVar3 + 0xcb8 + uVar7 * 2);\n        }\n        uVar7 = uVar2;\n        if (uVar7 < 0x100) {\n            if (((*(iVar3 + 0x4ad8) < 2) || (puVar15[-3] != 0)) || (2 < *(puVar15 + -2))) {\n                *puVar15 = 0;\n                *(puVar15 + 2) = uVar2;\n                iVar5 = 0;\ncode_r0x00414b31:\n                *(puVar15 + 1) = iVar5;\n            }\n            else {\n                uVar9 = *(puVar15 + -2) + 1;\n                *(puVar15 + -2) = uVar9;\n                *((uVar9 - 4) + puVar15) = uVar2;\n                *(iVar3 + 0x4ad8) = *(iVar3 + 0x4ad8) + -1;\n            }\n            goto code_r0x004145c2;\n        }\n        if (uVar7 < 0x106) {\n            if (uVar7 == 0x100) {\n                fcn.00413ad4();\n                *(puVar15 + 1) = var_34h;\n                puVar15[2] = var_30h;\n                *puVar15 = 4;\n                puVar15 = *(iVar3 + 0x4ad8) * 0xc + *(iVar3 + 0x4ad4);\n                *(iVar3 + 0x4ad8) = *(iVar3 + 0x4ad8) + 1;\n                *(puVar15 + 1) = var_28h;\n                *puVar15 = 4;\n                puVar15[2] = var_2ch;\n                puVar15 = *(iVar3 + 0x4ad8) * 0xc + *(iVar3 + 0x4ad4);\n                *(iVar3 + 0x4ad8) = *(iVar3 + 0x4ad8) + 1;\n                *puVar15 = 4;\n                *(puVar15 + 1) = var_20h;\n                puVar15[2] = var_24h;\n            }\n            else {\n                if (uVar7 != 0x101) {\n                    *puVar15 = 3;\n                    puVar15[2] = uVar7 - 0x102;\n                    uVar7 = fcn.00409721();\n                    iVar6 = *(iVar3 + 0x2d78);\n                    uVar7 = uVar7 & 0xfffe;\n                    if (uVar7 < *(iVar3 + 0x2cf8 + iVar6 * 4)) {\n                        uVar7 = uVar7 >> (0x10U - iVar6 & 0x1f);\n                        uVar12 = *(uVar7 + 0x2d7c + iVar3) + *(iVar3 + 8);\n                        *piVar1 = *piVar1 + (uVar12 >> 3);\n                        *(iVar3 + 8) = uVar12 & 7;\n                        uVar2 = *(iVar3 + 0x317c + uVar7 * 2);\n                    }\n                    else {\n                        uVar14 = iVar6 + 1;\n                        arg_8h = 0xf;\n                        uVar12 = arg_8h;\n                        if (uVar14 < 0xf) {\n                            puVar13 = iVar3 + 0x2cf8 + uVar14 * 4;\n                            do {\n                                uVar12 = uVar14;\n                                if (uVar7 < *puVar13) break;\n                                uVar14 = uVar14 + 1;\n                                puVar13 = puVar13 + 1;\n                                uVar12 = arg_8h;\n                            } while (uVar14 < 0xf);\n                        }\n                        arg_8h = uVar12;\n                        uVar12 = *(iVar3 + 8) + arg_8h;\n                        *piVar1 = *piVar1 + (uVar12 >> 3);\n                        *(iVar3 + 8) = uVar12 & 7;\n                        uVar7 = (uVar7 - *(iVar3 + 0x2cf4 + arg_8h * 4) >> (0x10U - arg_8h & 0x1f)) +\n                                *(iVar3 + 0x2d38 + arg_8h * 4);\n                        if (*(iVar3 + 0x2cf4) <= uVar7) {\n                            uVar7 = 0;\n                        }\n                        uVar2 = *(iVar3 + 0x397c + uVar7 * 2);\n                    }\n                    if (uVar2 < 8) {\n                        iVar5 = uVar2 + 2;\n                    }\n                    else {\n                        iVar6 = (uVar2 >> 2) - 1;\n                        iVar5 = ((uVar2 & 3 | 4) << (iVar6 & 0x1f)) + 2;\n                        if (iVar6 != 0) {\n                            uVar7 = fcn.00409721();\n                            iVar5 = iVar5 + (uVar7 >> (0x10 - iVar6 & 0x1f));\n                            uVar7 = *(iVar3 + 8) + iVar6;\n                            *piVar1 = *piVar1 + (uVar7 >> 3);\n                            *(iVar3 + 8) = uVar7 & 7;\n                        }\n                    }\n                    goto code_r0x00414b31;\n                }\n                *puVar15 = 2;\n            }\n        }\n        else {\n            uVar7 = uVar7 - 0x106;\n            if (uVar7 < 8) {\n                var_8h._0_2_ = uVar2 - 0x104;\n            }\n            else {\n                iVar6 = (uVar7 >> 2) - 1;\n                var_8h._0_2_ = ((uVar7 & 3 | 4) << (iVar6 & 0x1f)) + 2;\n                if (iVar6 != 0) {\n                    uVar7 = fcn.00409721();\n                    var_8h._0_2_ = var_8h + (uVar7 >> (0x10 - iVar6 & 0x1f));\n                    uVar7 = *(iVar3 + 8) + iVar6;\n                    *piVar1 = *piVar1 + (uVar7 >> 3);\n                    *(iVar3 + 8) = uVar7 & 7;\n                }\n            }\n            uVar7 = fcn.00409721();\n            iVar6 = *(iVar3 + 4000);\n            uVar7 = uVar7 & 0xfffe;\n            if (uVar7 < *(iVar3 + 0xf20 + iVar6 * 4)) {\n                uVar7 = uVar7 >> (0x10U - iVar6 & 0x1f);\n                uVar12 = *(uVar7 + 0xfa4 + iVar3) + *(iVar3 + 8);\n                *piVar1 = *piVar1 + (uVar12 >> 3);\n                *(iVar3 + 8) = uVar12 & 7;\n                uVar2 = *(iVar3 + 0x13a4 + uVar7 * 2);\n            }\n            else {\n                uVar14 = iVar6 + 1;\n                arg_8h = 0xf;\n                uVar12 = arg_8h;\n                if (uVar14 < 0xf) {\n                    puVar13 = iVar3 + 0xf20 + uVar14 * 4;\n                    do {\n                        uVar12 = uVar14;\n                        if (uVar7 < *puVar13) break;\n                        uVar14 = uVar14 + 1;\n                        puVar13 = puVar13 + 1;\n                        uVar12 = arg_8h;\n                    } while (uVar14 < 0xf);\n                }\n                arg_8h = uVar12;\n                uVar12 = *(iVar3 + 8) + arg_8h;\n                *piVar1 = *piVar1 + (uVar12 >> 3);\n                *(iVar3 + 8) = uVar12 & 7;\n                uVar7 = (uVar7 - *(iVar3 + 0xf1c + arg_8h * 4) >> (0x10U - arg_8h & 0x1f)) +\n                        *(iVar3 + 0xf60 + arg_8h * 4);\n                if (*(iVar3 + 0xf1c) <= uVar7) {\n                    uVar7 = 0;\n                }\n                uVar2 = *(iVar3 + 0x1ba4 + uVar7 * 2);\n            }\n            arg_8h = uVar2;\n            if (arg_8h < 4) {\n                arg_8h = arg_8h + 1;\n            }\n            else {\n                uVar7 = (uVar2 >> 1) - 1;\n                uVar8 = uVar7;\n                arg_8h = ((arg_8h & 1 | 2) << (uVar8 & 0x1f)) + 1;\n                if (uVar7 != 0) {\n                    if (uVar7 < 4) {\n                        uVar12 = fcn.0041232f();\n                        arg_8h = arg_8h + (uVar12 >> (0x20 - uVar8 & 0x1f));\n                        uVar7 = *(iVar3 + 8) + uVar7;\n                        *piVar1 = *piVar1 + (uVar7 >> 3);\n                        *(iVar3 + 8) = uVar7 & 7;\n                    }\n                    else {\n                        if (4 < uVar7) {\n                            uVar12 = fcn.0041232f();\n                            uVar7 = *(iVar3 + 8) + -4 + uVar7;\n                            arg_8h = arg_8h + (uVar12 >> (0x24 - uVar8 & 0x1f)) * 0x10;\n                            *piVar1 = *piVar1 + (uVar7 >> 3);\n                            *(iVar3 + 8) = uVar7 & 7;\n                        }\n                        uVar7 = fcn.00409721();\n                        iVar6 = *(iVar3 + 0x1e8c);\n                        uVar7 = uVar7 & 0xfffe;\n                        if (uVar7 < *(iVar3 + 0x1e0c + iVar6 * 4)) {\n                            uVar7 = uVar7 >> (0x10U - iVar6 & 0x1f);\n                            uVar12 = *(uVar7 + 0x1e90 + iVar3) + *(iVar3 + 8);\n                            *piVar1 = *piVar1 + (uVar12 >> 3);\n                            *(iVar3 + 8) = uVar12 & 7;\n                            uVar2 = *(iVar3 + 0x2290 + uVar7 * 2);\n                        }\n                        else {\n                            uVar14 = iVar6 + 1;\n                            var_4h = 0xf;\n                            uVar12 = var_4h;\n                            if (uVar14 < 0xf) {\n                                puVar13 = iVar3 + 0x1e0c + uVar14 * 4;\n                                do {\n                                    uVar12 = uVar14;\n                                    if (uVar7 < *puVar13) break;\n                                    uVar14 = uVar14 + 1;\n                                    puVar13 = puVar13 + 1;\n                                    uVar12 = var_4h;\n                                } while (uVar14 < 0xf);\n                            }\n                            var_4h = uVar12;\n                            uVar12 = *(iVar3 + 8) + var_4h;\n                            *piVar1 = *piVar1 + (uVar12 >> 3);\n                            *(iVar3 + 8) = uVar12 & 7;\n                            uVar7 = (uVar7 - *(iVar3 + 0x1e08 + var_4h * 4) >> (0x10U - var_4h & 0x1f)) +\n                                    *(iVar3 + 0x1e4c + var_4h * 4);\n                            if (*(iVar3 + 0x1e08) <= uVar7) {\n                                uVar7 = 0;\n                            }\n                            uVar2 = *(iVar3 + 0x2a90 + uVar7 * 2);\n                        }\n                        arg_8h = arg_8h + uVar2;\n                    }\n                }\n            }\n            iVar5 = var_8h;\n            if (((0x100 < arg_8h) && (iVar5 = var_8h + 1,  0x2000 < arg_8h)) && (iVar5 = var_8h + 2,  0x40000 < arg_8h))\n            {\n                iVar5 = var_8h + 3;\n            }\n            *puVar15 = 1;\n            *(puVar15 + 1) = iVar5;\n            puVar15[2] = arg_8h;\n        }\n    } while( true );\n}\n",
        "token_count": 4312
    },
    "00414bc1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __fastcall fcn.00414bc1(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint32_t *puVar6;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = *(param_1 + 0x74);\n    uVar3 = *(param_1 + 0x70) - var_8h & *(param_1 + 0xe6f8);\n    if (*(param_1 + 0xe6d4) != 0) {\n        do {\n            puVar1 = *(var_4h * 4 + *(param_1 + 0xe6d0));\n            if (puVar1 != NULL) {\n                if (*(puVar1 + 3) == '\\0') {\n                    var_14h = *puVar1;\n                    var_10h = puVar1[1];\n                    uVar4 = *(param_1 + 0xe6f8);\n                    if ((var_14h - var_8h & uVar4) < uVar3) {\n                        var_ch = var_14h;\n                        if (var_8h != var_14h) {\n                            var_ch = var_8h;\n                            fcn.00414064(var_8h, var_14h);\n                            uVar4 = *(param_1 + 0xe6f8);\n                            uVar3 = *(param_1 + 0x70) - var_14h & uVar4;\n                            var_8h = var_14h;\n                        }\n                        if (uVar3 < var_10h) {\n                            for (; var_4h < *(param_1 + 0xe6d4); var_4h = var_4h + 1) {\n                                iVar2 = *(*(param_1 + 0xe6d0) + var_4h * 4);\n                                if ((iVar2 != 0) && (*(iVar2 + 0xc) != '\\0')) {\n                                    *(iVar2 + 0xc) = 0;\n                                }\n                            }\n                            *(param_1 + 0x74) = var_8h;\n                            return;\n                        }\n                        uVar4 = var_10h + var_14h & uVar4;\n                        if ((var_14h < uVar4) || (uVar4 == 0)) {\n                            var_14h = *(param_1 + 0x4b34) + var_14h;\n                            var_18h = 0;\n                        }\n                        else {\n                            var_18h = *(param_1 + 0xe6f4) - var_ch;\n                            var_14h = *(param_1 + 0x4b34) + var_ch;\n                            fcn.0040aac1(0, var_14h, var_18h);\n                            var_10h = var_18h;\n                        }\n                        fcn.0040aac1(var_18h, var_14h, var_10h);\n                        iVar2 = *(*(param_1 + 0xe6c0) + puVar1[4] * 4);\n                        uVar3 = *(iVar2 + 0x30);\n                        puVar6 = puVar1 + 5;\n                        if (0x40 < uVar3) {\n                            fcn.00401c85();\n                            fcn.0041bb00(puVar1[0xb] + 0x40, *(iVar2 + 0x2c) + 0x40, *(iVar2 + 0x30) + -0x40);\n                            var_18h = uVar3;\n                        }\n                        fcn.004136c5(puVar6);\n                        uVar3 = puVar1[0xc];\n                        if (uVar3 < 0x41) {\n                            fcn.0041228a();\n                        }\n                        else {\n                            if (*(iVar2 + 0x30) < uVar3) {\n                                fcn.00401c85(uVar3);\n                            }\n                            fcn.0041bb00(*(iVar2 + 0x2c) + 0x40, puVar1[0xb] + 0x40, puVar1[0xc] - 0x40);\n                        }\n                        var_14h = puVar1[0x1a];\n                        uVar3 = puVar1[0x1b];\n                        if (*(var_10h + *(param_1 + 0xe6d0)) != 0) {\n                            puVar6 = 0x1;\n                            fcn.00414ba2();\n                        }\n                        *(var_10h + *(param_1 + 0xe6d0)) = 0;\n                        var_8h = var_4h + 1;\n                        if (var_8h < *(param_1 + 0xe6d4)) {\n                            do {\n                                puVar1 = *(*(param_1 + 0xe6d0) + 4 + var_10h);\n                                if ((((puVar1 == NULL) || (*puVar1 != var_ch)) || (puVar1[1] != uVar3)) ||\n                                   (*(puVar1 + 3) != '\\0')) break;\n                                var_18h = 0;\n                                uVar5 = 0x414dbe;\n                                fcn.0040aac1(0, var_14h, uVar3);\n                                iVar2 = *(*(param_1 + 0xe6c0) + puVar1[4] * 4);\n                                uVar3 = *(iVar2 + 0x30);\n                                puVar6 = puVar1 + 5;\n                                if (0x40 < uVar3) {\n                                    fcn.00401c85(uVar5);\n                                    fcn.0041bb00(puVar1[0xb] + 0x40, *(iVar2 + 0x2c) + 0x40, *(iVar2 + 0x30) + -0x40);\n                                    var_18h = uVar3;\n                                }\n                                fcn.004136c5(puVar6);\n                                uVar3 = puVar1[0xc];\n                                if (uVar3 < 0x41) {\n                                    fcn.0041228a();\n                                }\n                                else {\n                                    if (*(iVar2 + 0x30) < uVar3) {\n                                        fcn.00401c85(uVar3);\n                                    }\n                                    fcn.0041bb00(*(iVar2 + 0x2c) + 0x40, puVar1[0xb] + 0x40, puVar1[0xc] - 0x40);\n                                }\n                                var_14h = puVar1[0x1a];\n                                var_4h = var_4h + 1;\n                                uVar3 = puVar1[0x1b];\n                                var_8h = var_8h + 1;\n                                var_10h = var_4h * 4;\n                                if (*(var_10h + *(param_1 + 0xe6d0)) != 0) {\n                                    puVar6 = 0x1;\n                                    fcn.00414ba2();\n                                }\n                                *(var_10h + *(param_1 + 0xe6d0)) = 0;\n                            } while (var_8h < *(param_1 + 0xe6d4));\n                        }\n                        fcn.0040b914(var_14h, uVar3, puVar6);\n                        puVar1 = param_1 + 0x4c50;\n                        uVar4 = *puVar1;\n                        *puVar1 = *puVar1 + uVar3;\n                        *(param_1 + 0x4c4a) = 1;\n                        var_8h = var_18h;\n                        *(param_1 + 0x4c54) = *(param_1 + 0x4c54) + CARRY4(uVar4, uVar3);\n                        uVar3 = *(param_1 + 0x70) - var_18h & *(param_1 + 0xe6f8);\n                    }\n                }\n                else {\n                    *(puVar1 + 3) = 0;\n                }\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < *(param_1 + 0xe6d4));\n    }\n    fcn.00414064(var_8h, *(param_1 + 0x70));\n    *(param_1 + 0x74) = *(param_1 + 0x70);\n    return;\n}\n",
        "token_count": 2047
    },
    "00414f87": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.00414f87(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t arg_10h;\n    bool bVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint *puVar10;\n    uint *puVar11;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_8h = *(param_1 + 0x74);\n    uVar9 = *(param_1 + 0x70) - var_8h & *(param_1 + 0xe6f8);\n    bVar3 = false;\n    var_14h = 0;\n    if (*(param_1 + 0x48) != 0) {\n        var_10h = 0;\n        uVar4 = uVar9;\n        do {\n            pcVar6 = *(param_1 + 0x44) + var_10h;\n            if (*pcVar6 != '\\b') {\n                uVar2 = *(pcVar6 + 4);\n                if (pcVar6[0x15] == '\\0') {\n                    arg_10h = *(pcVar6 + 8);\n                    uVar7 = *(param_1 + 0xe6f8);\n                    if ((uVar2 - var_8h & uVar7) < uVar4) {\n                        if (var_8h != uVar2) {\n                            fcn.00414064(var_8h, uVar2);\n                            uVar7 = *(param_1 + 0xe6f8);\n                            uVar4 = *(param_1 + 0x70) - uVar2 & uVar7;\n                            var_8h = uVar2;\n                        }\n                        if (uVar4 < arg_10h) {\n                            *(param_1 + 0x74) = var_8h;\n                            if (var_14h < *(param_1 + 0x48)) {\n                                iVar5 = var_14h * 0x18;\n                                do {\n                                    pcVar6 = *(param_1 + 0x44) + iVar5;\n                                    if (*pcVar6 != '\\b') {\n                                        pcVar6[0x15] = '\\0';\n                                    }\n                                    var_14h = var_14h + 1;\n                                    iVar5 = iVar5 + 0x18;\n                                } while (var_14h < *(param_1 + 0x48));\n                            }\n                            bVar3 = true;\n                            break;\n                        }\n                        if (arg_10h != 0) {\n                            var_8h = arg_10h + uVar2 & uVar7;\n                            fcn.00401c85(arg_10h);\n                            iVar5 = *(param_1 + 0x24);\n                            if ((uVar2 < var_8h) || (var_8h == 0)) {\n                                if (*(param_1 + 0x4c38) == '\\0') {\n                                    fcn.0041bb00(iVar5, *(param_1 + 0x4b34) + uVar2, arg_10h);\n                                }\n                                else {\n                                    fcn.00411ed5(iVar5, uVar2);\n                                }\n                            }\n                            else {\n                                iVar8 = *(param_1 + 0xe6f4) - uVar2;\n                                if (*(param_1 + 0x4c38) == '\\0') {\n                                    fcn.0041bb00(iVar5, *(param_1 + 0x4b34) + uVar2, iVar8);\n                                    fcn.0041bb00(iVar8 + iVar5, *(param_1 + 0x4b34), var_8h);\n                                }\n                                else {\n                                    fcn.00411ed5(iVar5, uVar2);\n                                    fcn.00411ed5(iVar8 + iVar5, 0, var_8h);\n                                }\n                            }\n                            iVar5 = fcn.00413b86(iVar5, arg_10h, pcVar6);\n                            *(var_10h + *(param_1 + 0x44)) = 8;\n                            if (iVar5 != 0) {\n                                fcn.0040b914(iVar5, arg_10h);\n                            }\n                            puVar1 = param_1 + 0x4c50;\n                            uVar4 = *puVar1;\n                            *puVar1 = *puVar1 + arg_10h;\n                            *(param_1 + 0x4c4a) = 1;\n                            *(param_1 + 0x4c54) = *(param_1 + 0x4c54) + CARRY4(uVar4, arg_10h);\n                            uVar4 = *(param_1 + 0x70) - var_8h & *(param_1 + 0xe6f8);\n                        }\n                    }\n                }\n                else if ((uVar2 - *(param_1 + 0x74) & *(param_1 + 0xe6f8)) <= uVar9) {\n                    pcVar6[0x15] = '\\0';\n                }\n            }\n            var_14h = var_14h + 1;\n            var_10h = var_10h + 0x18;\n        } while (var_14h < *(param_1 + 0x48));\n    }\n    var_ch = 0;\n    var_10h = 0;\n    if (*(param_1 + 0x48) != 0) {\n        var_14h = 0;\n        do {\n            if (var_ch != 0) {\n                iVar5 = *(param_1 + 0x44);\n                puVar10 = var_14h + iVar5;\n                puVar11 = (var_10h - var_ch) * 0x18 + iVar5;\n                for (iVar8 = 6; iVar8 != 0; iVar8 = iVar8 + -1) {\n                    *puVar11 = *puVar10;\n                    puVar10 = puVar10 + 1;\n                    puVar11 = puVar11 + 1;\n                }\n            }\n            if (*(var_14h + *(param_1 + 0x44)) == '\\b') {\n                var_ch = var_ch + 1;\n            }\n            var_10h = var_10h + 1;\n            var_14h = var_14h + 0x18;\n        } while (var_10h < *(param_1 + 0x48));\n        if (var_ch != 0) {\n            fcn.00414507(*(param_1 + 0x48) - var_ch);\n        }\n    }\n    if (!bVar3) {\n        fcn.00414064(var_8h, *(param_1 + 0x70));\n        *(param_1 + 0x74) = *(param_1 + 0x70);\n    }\n    uVar9 = 0x400000;\n    if (*(param_1 + 0xe6f4) < 0x400000) {\n        uVar9 = *(param_1 + 0xe6f4);\n    }\n    uVar4 = *(param_1 + 0x70);\n    uVar2 = *(param_1 + 0xe6f8);\n    uVar9 = uVar9 + uVar4 & uVar2;\n    *(param_1 + 0x4b30) = uVar9;\n    if ((uVar9 == uVar4) ||\n       ((*(param_1 + 0x74) != uVar4 && ((*(param_1 + 0x74) - uVar4 & uVar2) < (uVar9 - uVar4 & uVar2))))) {\n        *(param_1 + 0x4b30) = *(param_1 + 0x74);\n    }\n    return;\n}\n",
        "token_count": 1845
    },
    "00415373": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00415373(int32_t param_1, char param_2)\n\n{\n    if (param_2 == '\\0') {\n        *(param_1 + 0xe674) = 0;\n        fcn.0041a0c0(param_1 + 0xe4c0, 0, 0x1ae);\n        *(param_1 + 0xe670) = 0;\n        *(param_1 + 0xe4bc) = 2;\n        fcn.00414f0b();\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "004154b9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004154b9(uint32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t in_ECX;\n    uint *puVar7;\n    uchar *arg_8h_00;\n    uint32_t uVar8;\n    uchar *arg_ch;\n    int32_t *piVar9;\n    bool bVar10;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint32_t var_8h;\n    int32_t *var_4h;\n    \n    piVar9 = *(arg_8h + 0x4ad4);\n    var_ch = piVar9 + *(arg_8h + 0x4ad8) * 3;\n    bVar10 = piVar9 < var_ch;\n    do {\n        if (!bVar10) {\n            return 1;\n        }\n        *(in_ECX + 0x70) = *(in_ECX + 0x70) & *(in_ECX + 0xe6f8);\n        var_4h = piVar9;\n        if (((*(in_ECX + 0x4b30) - *(in_ECX + 0x70) & *(in_ECX + 0xe6f8)) < 0x1004) &&\n           (*(in_ECX + 0x4b30) != *(in_ECX + 0x70))) {\n            fcn.00414f87();\n            if ((*(in_ECX + 0x4c44) < *(in_ECX + 0x4c54)) ||\n               ((*(in_ECX + 0x4c44) <= *(in_ECX + 0x4c54) &&\n                (*(in_ECX + 0x4c40) <= *(in_ECX + 0x4c50) && *(in_ECX + 0x4c50) != *(in_ECX + 0x4c40))))) {\n                return 0;\n            }\n        }\n        iVar5 = *piVar9;\n        if (iVar5 == 0) {\n            if ((*(piVar9 + 1) == 3) && (*(in_ECX + 0x70) < *(in_ECX + 0xe6f4) - 4U)) {\n                *(*(in_ECX + 0x70) + *(in_ECX + 0x4b34)) = piVar9[2];\n                *(in_ECX + 0x70) = *(in_ECX + 0x70) + 4;\n            }\n            else {\n                uVar3 = 0;\n                do {\n                    *((*(in_ECX + 0x70) & *(in_ECX + 0xe6f8)) + *(in_ECX + 0x4b34)) = *(piVar9 + 2 + uVar3);\n                    *(in_ECX + 0x70) = *(in_ECX + 0x70) + 1;\n                    uVar3 = uVar3 + 1;\n                } while (uVar3 <= *(piVar9 + 1));\n            }\n        }\n        else if (iVar5 == 1) {\n            iVar5 = piVar9[2];\n            *(in_ECX + 0x60) = *(in_ECX + 0x5c);\n            *(in_ECX + 0x5c) = *(in_ECX + 0x58);\n            uVar2 = *(in_ECX + 0x54);\n            *(in_ECX + 0x54) = iVar5;\n            *(in_ECX + 0x58) = uVar2;\n            uVar3 = *(in_ECX + 0x70);\n            *(in_ECX + 0x68) = *(piVar9 + 1);\n            uVar6 = piVar9[2];\n            uVar1 = *(piVar9 + 1);\n            arg_8h = uVar1;\n            uVar4 = uVar3 - uVar6;\n            uVar8 = *(in_ECX + 0xe6f4) - 0x1001;\n            if ((uVar4 < uVar8) && (uVar3 < uVar8)) {\n                arg_ch = *(in_ECX + 0x4b34) + uVar4;\n                arg_8h_00 = *(in_ECX + 0x4b34) + uVar3;\n                *(in_ECX + 0x70) = uVar3 + arg_8h;\n                if (uVar6 < arg_8h) {\n                    if (7 < arg_8h) {\n                        uVar3 = uVar1 >> 3;\n                        do {\n                            arg_8h = arg_8h - 8;\n                            *arg_8h_00 = *arg_ch;\n                            arg_8h_00[1] = arg_ch[1];\n                            arg_8h_00[2] = arg_ch[2];\n                            arg_8h_00[3] = arg_ch[3];\n                            arg_8h_00[4] = arg_ch[4];\n                            arg_8h_00[5] = arg_ch[5];\n                            arg_8h_00[6] = arg_ch[6];\n                            arg_8h_00[7] = arg_ch[7];\n                            arg_ch = arg_ch + 8;\n                            arg_8h_00 = arg_8h_00 + 8;\n                            uVar3 = uVar3 - 1;\n                        } while (uVar3 != 0);\n                    }\n                }\n                else if (7 < arg_8h) {\n                    var_8h = uVar1 >> 3;\n                    do {\n                        fcn.0041bb00(arg_8h_00, arg_ch, 8);\n                        arg_8h = arg_8h - 8;\n                        arg_ch = arg_ch + 8;\n                        arg_8h_00 = arg_8h_00 + 8;\n                        var_8h = var_8h - 1;\n                    } while (var_8h != 0);\n                }\ncode_r0x00415668:\n                if ((((arg_8h != 0) && (*arg_8h_00 = *arg_ch,  1 < arg_8h)) && (arg_8h_00[1] = arg_ch[1],  2 < arg_8h))\n                   && (((arg_8h_00[2] = arg_ch[2],  3 < arg_8h && (arg_8h_00[3] = arg_ch[3],  4 < arg_8h)) &&\n                       (arg_8h_00[4] = arg_ch[4],  5 < arg_8h)))) {\n                    arg_8h_00[5] = arg_ch[5];\ncode_r0x004156c5:\n                    if (6 < arg_8h) {\n                        arg_8h_00[6] = arg_ch[6];\n                    }\n                }\n            }\n            else if (arg_8h != 0) {\n                uVar3 = *(in_ECX + 0xe6f8);\n                do {\n                    *(*(in_ECX + 0x4b34) + *(in_ECX + 0x70)) = *((uVar3 & uVar4) + *(in_ECX + 0x4b34));\n                    uVar3 = *(in_ECX + 0xe6f8);\n                    arg_8h = arg_8h - 1;\n                    uVar4 = uVar4 + 1;\n                    *(in_ECX + 0x70) = *(in_ECX + 0x70) + 1U & uVar3;\n                } while (arg_8h != 0);\n            }\n        }\n        else if (iVar5 == 3) {\n            iVar5 = piVar9[2];\n            uVar3 = *(in_ECX + 0x54 + iVar5 * 4);\n            if (iVar5 != 0) {\n                puVar7 = in_ECX + 0x54 + iVar5 * 4;\n                do {\n                    *puVar7 = puVar7[-1];\n                    iVar5 = iVar5 + -1;\n                    puVar7 = puVar7 + -1;\n                } while (iVar5 != 0);\n            }\n            uVar6 = *(in_ECX + 0x70);\n            *(in_ECX + 0x54) = uVar3;\n            *(in_ECX + 0x68) = *(piVar9 + 1);\n            uVar1 = *(piVar9 + 1);\n            arg_8h = uVar1;\n            uVar4 = uVar6 - uVar3;\n            uVar8 = *(in_ECX + 0xe6f4) - 0x1001;\n            if ((uVar4 < uVar8) && (uVar6 < uVar8)) {\n                arg_ch = *(in_ECX + 0x4b34) + uVar4;\n                arg_8h_00 = *(in_ECX + 0x4b34) + uVar6;\n                *(in_ECX + 0x70) = uVar6 + arg_8h;\n                if (uVar3 < arg_8h) {\n                    if (7 < arg_8h) {\n                        uVar3 = uVar1 >> 3;\n                        do {\n                            arg_8h = arg_8h - 8;\n                            *arg_8h_00 = *arg_ch;\n                            arg_8h_00[1] = arg_ch[1];\n                            arg_8h_00[2] = arg_ch[2];\n                            arg_8h_00[3] = arg_ch[3];\n                            arg_8h_00[4] = arg_ch[4];\n                            arg_8h_00[5] = arg_ch[5];\n                            arg_8h_00[6] = arg_ch[6];\n                            arg_8h_00[7] = arg_ch[7];\n                            arg_ch = arg_ch + 8;\n                            arg_8h_00 = arg_8h_00 + 8;\n                            uVar3 = uVar3 - 1;\n                        } while (uVar3 != 0);\n                    }\n                }\n                else if (7 < arg_8h) {\n                    var_8h = uVar1 >> 3;\n                    do {\n                        fcn.0041bb00(arg_8h_00, arg_ch, 8);\n                        arg_8h = arg_8h - 8;\n                        arg_ch = arg_ch + 8;\n                        arg_8h_00 = arg_8h_00 + 8;\n                        var_8h = var_8h - 1;\n                    } while (var_8h != 0);\n                }\n                goto code_r0x00415668;\n            }\n            if (arg_8h != 0) {\n                uVar3 = *(in_ECX + 0xe6f8);\n                do {\n                    *(*(in_ECX + 0x4b34) + *(in_ECX + 0x70)) = *((uVar3 & uVar4) + *(in_ECX + 0x4b34));\n                    uVar3 = *(in_ECX + 0xe6f8);\n                    arg_8h = arg_8h - 1;\n                    uVar4 = uVar4 + 1;\n                    *(in_ECX + 0x70) = *(in_ECX + 0x70) + 1U & uVar3;\n                } while (arg_8h != 0);\n            }\n        }\n        else if (iVar5 == 2) {\n            arg_8h = *(in_ECX + 0x68);\n            if (arg_8h != 0) {\n                uVar3 = *(in_ECX + 0x70);\n                uVar6 = uVar3 - *(in_ECX + 0x54);\n                uVar4 = *(in_ECX + 0xe6f4) - 0x1001;\n                if ((uVar6 < uVar4) && (uVar3 < uVar4)) {\n                    arg_ch = *(in_ECX + 0x4b34) + uVar6;\n                    arg_8h_00 = *(in_ECX + 0x4b34) + uVar3;\n                    *(in_ECX + 0x70) = uVar3 + arg_8h;\n                    if (*(in_ECX + 0x54) < arg_8h) {\n                        if (7 < arg_8h) {\n                            uVar3 = arg_8h >> 3;\n                            do {\n                                arg_8h = arg_8h - 8;\n                                *arg_8h_00 = *arg_ch;\n                                arg_8h_00[1] = arg_ch[1];\n                                arg_8h_00[2] = arg_ch[2];\n                                arg_8h_00[3] = arg_ch[3];\n                                arg_8h_00[4] = arg_ch[4];\n                                arg_8h_00[5] = arg_ch[5];\n                                arg_8h_00[6] = arg_ch[6];\n                                arg_8h_00[7] = arg_ch[7];\n                                arg_ch = arg_ch + 8;\n                                arg_8h_00 = arg_8h_00 + 8;\n                                uVar3 = uVar3 - 1;\n                            } while (uVar3 != 0);\n                        }\n                    }\n                    else if (7 < arg_8h) {\n                        var_8h = arg_8h >> 3;\n                        do {\n                            fcn.0041bb00(arg_8h_00, arg_ch, 8);\n                            arg_8h = arg_8h - 8;\n                            arg_ch = arg_ch + 8;\n                            arg_8h_00 = arg_8h_00 + 8;\n                            var_8h = var_8h - 1;\n                        } while (var_8h != 0);\n                    }\n                    if (((((arg_8h != 0) && (*arg_8h_00 = *arg_ch,  1 < arg_8h)) &&\n                         (arg_8h_00[1] = arg_ch[1],  2 < arg_8h)) &&\n                        ((arg_8h_00[2] = arg_ch[2],  3 < arg_8h && (arg_8h_00[3] = arg_ch[3],  4 < arg_8h)))) &&\n                       (arg_8h_00[4] = arg_ch[4],  5 < arg_8h)) {\n                        arg_8h_00[5] = arg_ch[5];\n                        goto code_r0x004156c5;\n                    }\n                }\n                else if (arg_8h != 0) {\n                    uVar3 = *(in_ECX + 0xe6f8);\n                    do {\n                        *(*(in_ECX + 0x4b34) + *(in_ECX + 0x70)) = *((uVar3 & uVar6) + *(in_ECX + 0x4b34));\n                        uVar3 = *(in_ECX + 0xe6f8);\n                        arg_8h = arg_8h - 1;\n                        uVar6 = uVar6 + 1;\n                        *(in_ECX + 0x70) = *(in_ECX + 0x70) + 1U & uVar3;\n                    } while (arg_8h != 0);\n                }\n            }\n        }\n        else if (iVar5 == 4) {\n            var_24h._0_1_ = *(piVar9 + 1);\n            var_20h = piVar9[2];\n            var_18h._0_1_ = *(piVar9 + 4);\n            var_1ch = piVar9[5];\n            var_4h = piVar9 + 6;\n            var_10h._0_1_ = *(piVar9 + 7);\n            var_14h = piVar9[8];\n            fcn.004153b6(&var_24h);\n        }\n        piVar9 = var_4h + 3;\n        bVar10 = piVar9 < var_ch;\n    } while( true );\n}\n",
        "token_count": 3718
    },
    "004159e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.004159e8(uchar *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    int32_t in_ECX;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uchar *puVar11;\n    uint32_t uVar12;\n    uchar *puVar13;\n    uint var_38h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uchar *var_14h;\n    uchar *var_10h;\n    uchar *var_ch;\n    uchar *var_8h;\n    uchar *var_4h;\n    \n    iVar3 = arg_8h;\n    if (*(arg_8h + 0x2c) == '\\0') {\n        *(arg_8h + 0x2c) = 1;\n        cVar4 = fcn.0041422f(arg_8h + 4, arg_8h + 0x18, arg_8h + 0x30);\n        if (cVar4 == '\\0') {\n            *(arg_8h + 0x4ad0) = 1;\n            return 0;\n        }\n    }\n    piVar1 = arg_8h + 4;\n    iVar7 = *(arg_8h + 0x24) + *(arg_8h + 0x18);\n    if (*piVar1 != iVar7 && iVar7 <= *piVar1) {\n        *(arg_8h + 0x4ad0) = 1;\n        return 0;\n    }\n    var_1ch = *(arg_8h + 0x20) + -1 + *(arg_8h + 0x18);\n    var_20h = *(arg_8h + 0x4acc) + -0x10;\n    var_18h = var_1ch;\n    if (var_20h <= var_1ch) {\n        var_18h = var_20h;\n    }\ncode_r0x00415a5e:\n    do {\n        *(in_ECX + 0x70) = *(in_ECX + 0x70) & *(in_ECX + 0xe6f8);\n        iVar7 = *piVar1;\n        if (var_18h <= iVar7) {\n            if (var_1ch < iVar7) {\n                return 1;\n            }\n            if ((iVar7 == var_1ch) && (*(iVar3 + 0x1c) <= *(iVar3 + 8))) {\n                return 1;\n            }\n            if (((var_20h <= iVar7) && (*(iVar3 + 0x4ad2) == '\\0')) || (*(iVar3 + 0x4acc) <= iVar7)) {\n                *(iVar3 + 0x4ad3) = 1;\n                return 1;\n            }\n        }\n        if (((*(in_ECX + 0x4b30) - *(in_ECX + 0x70) & *(in_ECX + 0xe6f8)) < 0x1004) &&\n           (*(in_ECX + 0x4b30) != *(in_ECX + 0x70))) {\n            fcn.00414f87();\n            if (*(in_ECX + 0x4c44) < *(in_ECX + 0x4c54)) {\n                return 0;\n            }\n            if ((*(in_ECX + 0x4c44) <= *(in_ECX + 0x4c54)) &&\n               (*(in_ECX + 0x4c40) <= *(in_ECX + 0x4c50) && *(in_ECX + 0x4c50) != *(in_ECX + 0x4c40))) {\n                return 0;\n            }\n        }\n        uVar5 = fcn.00409721();\n        iVar7 = *(iVar3 + 0xb4);\n        uVar5 = uVar5 & 0xfffe;\n        if (uVar5 < *(iVar3 + 0x34 + iVar7 * 4)) {\n            uVar5 = uVar5 >> (0x10U - iVar7 & 0x1f);\n            uVar8 = *(uVar5 + 0xb8 + iVar3) + *(iVar3 + 8);\n            *piVar1 = *piVar1 + (uVar8 >> 3);\n            *(iVar3 + 8) = uVar8 & 7;\n            uVar2 = *(iVar3 + 0x4b8 + uVar5 * 2);\n        }\n        else {\n            uVar12 = iVar7 + 1;\n            arg_8h = 0xf;\n            uVar8 = arg_8h;\n            if (uVar12 < 0xf) {\n                puVar9 = iVar3 + 0x34 + uVar12 * 4;\n                do {\n                    uVar8 = uVar12;\n                    if (uVar5 < *puVar9) break;\n                    uVar12 = uVar12 + 1;\n                    puVar9 = puVar9 + 1;\n                    uVar8 = arg_8h;\n                } while (uVar12 < 0xf);\n            }\n            arg_8h = uVar8;\n            uVar8 = *(iVar3 + 8) + arg_8h;\n            *piVar1 = *piVar1 + (uVar8 >> 3);\n            *(iVar3 + 8) = uVar8 & 7;\n            uVar5 = (uVar5 - *(iVar3 + 0x30 + arg_8h * 4) >> (0x10U - arg_8h & 0x1f)) + *(iVar3 + 0x74 + arg_8h * 4);\n            if (*(iVar3 + 0x30) <= uVar5) {\n                uVar5 = 0;\n            }\n            uVar2 = *(iVar3 + 0xcb8 + uVar5 * 2);\n        }\n        uVar5 = uVar2;\n        if (uVar5 < 0x100) {\n            *(*(in_ECX + 0x4b34) + *(in_ECX + 0x70)) = uVar2;\n            *(in_ECX + 0x70) = *(in_ECX + 0x70) + 1;\n            goto code_r0x00415a5e;\n        }\n        if (0x105 < uVar5) {\n            uVar8 = uVar5 - 0x106;\n            if (uVar8 < 8) {\n                var_8h = uVar5 - 0x104;\n            }\n            else {\n                iVar7 = (uVar8 >> 2) - 1;\n                var_8h = ((uVar8 & 3 | 4) << (iVar7 & 0x1f)) + 2;\n                if (iVar7 != 0) {\n                    uVar5 = fcn.00409721();\n                    var_8h = var_8h + (uVar5 >> (0x10 - iVar7 & 0x1f));\n                    uVar5 = *(iVar3 + 8) + iVar7;\n                    *piVar1 = *piVar1 + (uVar5 >> 3);\n                    *(iVar3 + 8) = uVar5 & 7;\n                }\n            }\n            var_ch = var_8h;\n            uVar5 = fcn.00409721();\n            iVar7 = *(iVar3 + 4000);\n            uVar5 = uVar5 & 0xfffe;\n            if (uVar5 < *(iVar3 + 0xf20 + iVar7 * 4)) {\n                uVar5 = uVar5 >> (0x10U - iVar7 & 0x1f);\n                uVar8 = *(uVar5 + 0xfa4 + iVar3) + *(iVar3 + 8);\n                *piVar1 = *piVar1 + (uVar8 >> 3);\n                *(iVar3 + 8) = uVar8 & 7;\n                uVar2 = *(iVar3 + 0x13a4 + uVar5 * 2);\n            }\n            else {\n                uVar12 = iVar7 + 1;\n                arg_8h = 0xf;\n                uVar8 = arg_8h;\n                if (uVar12 < 0xf) {\n                    puVar9 = iVar3 + 0xf20 + uVar12 * 4;\n                    do {\n                        uVar8 = uVar12;\n                        if (uVar5 < *puVar9) break;\n                        uVar12 = uVar12 + 1;\n                        puVar9 = puVar9 + 1;\n                        uVar8 = arg_8h;\n                    } while (uVar12 < 0xf);\n                }\n                arg_8h = uVar8;\n                uVar8 = *(iVar3 + 8) + arg_8h;\n                *piVar1 = *piVar1 + (uVar8 >> 3);\n                *(iVar3 + 8) = uVar8 & 7;\n                uVar5 = (uVar5 - *(iVar3 + 0xf1c + arg_8h * 4) >> (0x10U - arg_8h & 0x1f)) +\n                        *(iVar3 + 0xf60 + arg_8h * 4);\n                if (*(iVar3 + 0xf1c) <= uVar5) {\n                    uVar5 = 0;\n                }\n                uVar2 = *(iVar3 + 0x1ba4 + uVar5 * 2);\n            }\n            uVar5 = uVar2;\n            if (uVar5 < 4) {\n                var_10h = uVar5 + 1;\n            }\n            else {\n                uVar8 = (uVar2 >> 1) - 1;\n                uVar6 = uVar8;\n                var_10h = ((uVar5 & 1 | 2) << (uVar6 & 0x1f)) + 1;\n                if (uVar8 != 0) {\n                    if (uVar8 < 4) {\n                        uVar5 = fcn.0041232f();\n                        var_10h = var_10h + (uVar5 >> (0x20 - uVar6 & 0x1f));\n                        uVar8 = *(iVar3 + 8) + uVar8;\n                        *piVar1 = *piVar1 + (uVar8 >> 3);\n                        *(iVar3 + 8) = uVar8 & 7;\n                    }\n                    else {\n                        if (4 < uVar8) {\n                            uVar8 = fcn.0041232f();\n                            uVar5 = ((uVar2 >> 1) - 5) + *(iVar3 + 8);\n                            var_10h = var_10h + (uVar8 >> (0x24 - uVar6 & 0x1f)) * 0x10;\n                            *piVar1 = *piVar1 + (uVar5 >> 3);\n                            *(iVar3 + 8) = uVar5 & 7;\n                        }\n                        uVar5 = fcn.00409721();\n                        iVar7 = *(iVar3 + 0x1e8c);\n                        uVar5 = uVar5 & 0xfffe;\n                        if (uVar5 < *(iVar3 + 0x1e0c + iVar7 * 4)) {\n                            uVar5 = uVar5 >> (0x10U - iVar7 & 0x1f);\n                            uVar8 = *(uVar5 + 0x1e90 + iVar3) + *(iVar3 + 8);\n                            *piVar1 = *piVar1 + (uVar8 >> 3);\n                            *(iVar3 + 8) = uVar8 & 7;\n                            uVar2 = *(iVar3 + 0x2290 + uVar5 * 2);\n                        }\n                        else {\n                            uVar12 = iVar7 + 1;\n                            arg_8h = 0xf;\n                            uVar8 = arg_8h;\n                            if (uVar12 < 0xf) {\n                                puVar9 = iVar3 + 0x1e0c + uVar12 * 4;\n                                do {\n                                    uVar8 = uVar12;\n                                    if (uVar5 < *puVar9) break;\n                                    uVar12 = uVar12 + 1;\n                                    puVar9 = puVar9 + 1;\n                                    uVar8 = arg_8h;\n                                } while (uVar12 < 0xf);\n                            }\n                            arg_8h = uVar8;\n                            uVar8 = *(iVar3 + 8) + arg_8h;\n                            *piVar1 = *piVar1 + (uVar8 >> 3);\n                            *(iVar3 + 8) = uVar8 & 7;\n                            uVar5 = (uVar5 - *(iVar3 + 0x1e08 + arg_8h * 4) >> (0x10U - arg_8h & 0x1f)) +\n                                    *(iVar3 + 0x1e4c + arg_8h * 4);\n                            if (*(iVar3 + 0x1e08) <= uVar5) {\n                                uVar5 = 0;\n                            }\n                            uVar2 = *(iVar3 + 0x2a90 + uVar5 * 2);\n                        }\n                        var_10h = var_10h + uVar2;\n                    }\n                }\n            }\n            if (((0x100 < var_10h) && (var_ch = var_8h + 1,  0x2000 < var_10h)) &&\n               (var_ch = var_8h + 2,  0x40000 < var_10h)) {\n                var_ch = var_8h + 3;\n            }\n            *(in_ECX + 0x60) = *(in_ECX + 0x5c);\n            *(in_ECX + 0x5c) = *(in_ECX + 0x58);\n            *(in_ECX + 0x58) = *(in_ECX + 0x54);\n            *(in_ECX + 0x68) = var_ch;\n            arg_8h = var_ch;\n            puVar11 = *(in_ECX + 0x70);\n            var_14h = puVar11 + -var_10h;\n            *(in_ECX + 0x54) = var_10h;\n            puVar13 = *(in_ECX + 0xe6f4) + -0x1001;\n            if ((var_14h < puVar13) && (puVar11 < puVar13)) {\n                var_4h = var_14h + *(in_ECX + 0x4b34);\n                var_8h = puVar11 + *(in_ECX + 0x4b34);\n                *(in_ECX + 0x70) = puVar11 + var_ch;\n                if (var_10h < var_ch) {\n                    if (0x7 < var_ch) {\n                        var_14h = var_ch >> 3;\n                        do {\n                            arg_8h = arg_8h + -8;\n                            *var_8h = *var_4h;\n                            var_8h[1] = var_4h[1];\n                            var_8h[2] = var_4h[2];\n                            var_8h[3] = var_4h[3];\n                            var_8h[4] = var_4h[4];\n                            var_8h[5] = var_4h[5];\n                            var_8h[6] = var_4h[6];\n                            var_8h[7] = var_4h[7];\n                            var_4h = var_4h + 8;\n                            var_8h = var_8h + 8;\n                            var_14h = var_14h + -1;\n                        } while (var_14h != NULL);\n                    }\n                }\n                else if (0x7 < var_ch) {\n                    var_14h = var_ch >> 3;\n                    do {\n                        fcn.0041bb00(var_8h, var_4h, 8);\n                        var_4h = var_4h + 8;\n                        var_8h = var_8h + 8;\n                        arg_8h = arg_8h + -8;\n                        var_14h = var_14h + -1;\n                    } while (var_14h != NULL);\n                }\n                if (((arg_8h != NULL) && (*var_8h = *var_4h,  0x1 < arg_8h)) &&\n                   ((var_8h[1] = var_4h[1],  0x2 < arg_8h &&\n                    (((var_8h[2] = var_4h[2],  0x3 < arg_8h && (var_8h[3] = var_4h[3],  0x4 < arg_8h)) &&\n                     (var_8h[4] = var_4h[4],  0x5 < arg_8h)))))) {\n                    var_8h[5] = var_4h[5];\n                    puVar11 = var_8h;\n                    puVar13 = var_4h;\njoined_r0x00415f68:\n                    if (0x6 < arg_8h) {\n                        puVar11[6] = puVar13[6];\n                    }\n                }\n            }\n            else if (var_ch != NULL) {\n                uVar5 = *(in_ECX + 0xe6f8);\n                do {\n                    arg_8h = arg_8h + -1;\n                    *(*(in_ECX + 0x4b34) + *(in_ECX + 0x70)) = *((var_14h & uVar5) + *(in_ECX + 0x4b34));\n                    uVar5 = *(in_ECX + 0xe6f8);\n                    var_14h = var_14h + 1;\n                    *(in_ECX + 0x70) = *(in_ECX + 0x70) + 1U & uVar5;\n                } while (arg_8h != NULL);\n            }\n            goto code_r0x00415a5e;\n        }\n        if (uVar5 != 0x100) {\n            if (uVar5 == 0x101) {\n                arg_8h = *(in_ECX + 0x68);\n                if (arg_8h == NULL) goto code_r0x00415a5e;\n                puVar11 = *(in_ECX + 0x70);\n                var_14h = puVar11 + -*(in_ECX + 0x54);\n                puVar13 = *(in_ECX + 0xe6f4) + -0x1001;\n                if ((puVar13 <= var_14h) || (puVar13 <= puVar11)) {\n                    if (arg_8h != NULL) {\n                        uVar5 = *(in_ECX + 0xe6f8);\n                        do {\n                            arg_8h = arg_8h + -1;\n                            *(*(in_ECX + 0x4b34) + *(in_ECX + 0x70)) = *((var_14h & uVar5) + *(in_ECX + 0x4b34));\n                            uVar5 = *(in_ECX + 0xe6f8);\n                            var_14h = var_14h + 1;\n                            *(in_ECX + 0x70) = *(in_ECX + 0x70) + 1U & uVar5;\n                        } while (arg_8h != NULL);\n                    }\n                    goto code_r0x00415a5e;\n                }\n                var_8h = var_14h + *(in_ECX + 0x4b34);\n                var_4h = puVar11 + *(in_ECX + 0x4b34);\n                *(in_ECX + 0x70) = puVar11 + arg_8h;\n                if (*(in_ECX + 0x54) < arg_8h) {\n                    if (0x7 < arg_8h) {\n                        var_14h = arg_8h >> 3;\n                        do {\n                            arg_8h = arg_8h + -8;\n                            *var_4h = *var_8h;\n                            var_4h[1] = var_8h[1];\n                            var_4h[2] = var_8h[2];\n                            var_4h[3] = var_8h[3];\n                            var_4h[4] = var_8h[4];\n                            var_4h[5] = var_8h[5];\n                            var_4h[6] = var_8h[6];\n                            var_4h[7] = var_8h[7];\n                            var_8h = var_8h + 8;\n                            var_4h = var_4h + 8;\n                            var_14h = var_14h + -1;\n                        } while (var_14h != NULL);\n                    }\n                }\n                else if (0x7 < arg_8h) {\n                    var_14h = arg_8h >> 3;\n                    do {\n                        fcn.0041bb00(var_4h, var_8h, 8);\n                        var_8h = var_8h + 8;\n                        var_4h = var_4h + 8;\n                        arg_8h = arg_8h + -8;\n                        var_14h = var_14h + -1;\n                    } while (var_14h != NULL);\n                }\n            }\n            else {\n                iVar7 = uVar5 - 0x102;\n                puVar10 = in_ECX + 0x54 + iVar7 * 4;\n                var_14h = *puVar10;\n                for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n                    *puVar10 = puVar10[-1];\n                    puVar10 = puVar10 + -1;\n                }\n                *(in_ECX + 0x54) = var_14h;\n                uVar5 = fcn.00409721();\n                iVar7 = *(iVar3 + 0x2d78);\n                uVar5 = uVar5 & 0xfffe;\n                if (uVar5 < *(iVar3 + 0x2cf8 + iVar7 * 4)) {\n                    uVar5 = uVar5 >> (0x10U - iVar7 & 0x1f);\n                    uVar8 = *(uVar5 + 0x2d7c + iVar3) + *(iVar3 + 8);\n                    *piVar1 = *piVar1 + (uVar8 >> 3);\n                    *(iVar3 + 8) = uVar8 & 7;\n                    uVar2 = *(iVar3 + 0x317c + uVar5 * 2);\n                }\n                else {\n                    uVar12 = iVar7 + 1;\n                    arg_8h = 0xf;\n                    uVar8 = arg_8h;\n                    if (uVar12 < 0xf) {\n                        puVar9 = iVar3 + 0x2cf8 + uVar12 * 4;\n                        do {\n                            uVar8 = uVar12;\n                            if (uVar5 < *puVar9) break;\n                            uVar12 = uVar12 + 1;\n                            puVar9 = puVar9 + 1;\n                            uVar8 = arg_8h;\n                        } while (uVar12 < 0xf);\n                    }\n                    arg_8h = uVar8;\n                    uVar8 = *(iVar3 + 8) + arg_8h;\n                    *piVar1 = *piVar1 + (uVar8 >> 3);\n                    *(iVar3 + 8) = uVar8 & 7;\n                    uVar5 = (uVar5 - *(iVar3 + 0x2cf4 + arg_8h * 4) >> (0x10U - arg_8h & 0x1f)) +\n                            *(iVar3 + 0x2d38 + arg_8h * 4);\n                    if (*(iVar3 + 0x2cf4) <= uVar5) {\n                        uVar5 = 0;\n                    }\n                    uVar2 = *(iVar3 + 0x397c + uVar5 * 2);\n                }\n                uVar5 = uVar2;\n                if (uVar5 < 8) {\n                    var_10h = uVar5 + 2;\n                }\n                else {\n                    iVar7 = (uVar2 >> 2) - 1;\n                    var_10h = ((uVar5 & 3 | 4) << (iVar7 & 0x1f)) + 2;\n                    if (iVar7 != 0) {\n                        uVar5 = fcn.00409721();\n                        var_10h = var_10h + (uVar5 >> (0x10 - iVar7 & 0x1f));\n                        uVar5 = *(iVar3 + 8) + iVar7;\n                        *piVar1 = *piVar1 + (uVar5 >> 3);\n                        *(iVar3 + 8) = uVar5 & 7;\n                    }\n                }\n                var_ch = *(in_ECX + 0x70) - var_14h;\n                puVar11 = *(in_ECX + 0xe6f4) + -0x1001;\n                *(in_ECX + 0x68) = var_10h;\n                arg_8h = var_10h;\n                if ((puVar11 <= var_ch) || (puVar11 <= *(in_ECX + 0x70))) {\n                    if (var_10h != NULL) {\n                        uVar5 = *(in_ECX + 0xe6f8);\n                        do {\n                            arg_8h = arg_8h + -1;\n                            uVar5 = var_ch & uVar5;\n                            var_ch = var_ch + 1;\n                            *(*(in_ECX + 0x4b34) + *(in_ECX + 0x70)) = *(uVar5 + *(in_ECX + 0x4b34));\n                            uVar5 = *(in_ECX + 0xe6f8);\n                            *(in_ECX + 0x70) = *(in_ECX + 0x70) + 1U & uVar5;\n                        } while (arg_8h != NULL);\n                    }\n                    goto code_r0x00415a5e;\n                }\n                var_8h = var_ch + *(in_ECX + 0x4b34);\n                var_4h = *(in_ECX + 0x4b34) + *(in_ECX + 0x70);\n                *(in_ECX + 0x70) = var_10h + *(in_ECX + 0x70);\n                if (var_14h < var_10h) {\n                    if (0x7 < var_10h) {\n                        var_14h = var_10h >> 3;\n                        do {\n                            arg_8h = arg_8h + -8;\n                            *var_4h = *var_8h;\n                            var_4h[1] = var_8h[1];\n                            var_4h[2] = var_8h[2];\n                            var_4h[3] = var_8h[3];\n                            var_4h[4] = var_8h[4];\n                            var_4h[5] = var_8h[5];\n                            var_4h[6] = var_8h[6];\n                            var_4h[7] = var_8h[7];\n                            var_8h = var_8h + 8;\n                            var_4h = var_4h + 8;\n                            var_14h = var_14h + -1;\n                        } while (var_14h != NULL);\n                    }\n                }\n                else if (0x7 < var_10h) {\n                    var_14h = var_10h >> 3;\n                    do {\n                        fcn.0041bb00(var_4h, var_8h, 8);\n                        var_8h = var_8h + 8;\n                        var_4h = var_4h + 8;\n                        arg_8h = arg_8h + -8;\n                        var_14h = var_14h + -1;\n                    } while (var_14h != NULL);\n                }\n            }\n            if (((((arg_8h != NULL) && (*var_4h = *var_8h,  0x1 < arg_8h)) && (var_4h[1] = var_8h[1],  0x2 < arg_8h)) &&\n                ((var_4h[2] = var_8h[2],  0x3 < arg_8h && (var_4h[3] = var_8h[3],  0x4 < arg_8h)))) &&\n               (var_4h[4] = var_8h[4],  0x5 < arg_8h)) {\n                var_4h[5] = var_8h[5];\n                puVar11 = var_4h;\n                puVar13 = var_8h;\n                goto joined_r0x00415f68;\n            }\n            goto code_r0x00415a5e;\n        }\n        cVar4 = fcn.00413ad4(piVar1, &var_38h);\n        if (cVar4 == '\\0') {\n            return 1;\n        }\n        cVar4 = fcn.004153b6();\n        if (cVar4 == '\\0') {\n            return 1;\n        }\n    } while( true );\n}\n",
        "token_count": 6738
    },
    "0041687c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041687c(uchar *arg_8h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t *arg_ch;\n    uint16_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uint *puVar5;\n    uint8_t uVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uchar *puVar11;\n    uint arg_14h;\n    int32_t *in_stack_ffffffb4;\n    uint var_24h;\n    uchar *var_ch;\n    uchar *var_8h;\n    uchar *var_4h;\n    \n    *(in_ECX + 0x4c58) = 1;\n    if (*(in_ECX + 0x4c48) == '\\0') {\n        fcn.00415417(arg_8h);\n        cVar2 = fcn.00411bfc();\n        if (cVar2 == '\\0') {\n            return;\n        }\n        in_stack_ffffffb4 = in_ECX + 4;\n        cVar2 = fcn.00414113(in_stack_ffffffb4, in_ECX + 0x80);\n        if (cVar2 == '\\0') {\n            return;\n        }\n        cVar2 = fcn.0041422f(in_stack_ffffffb4, in_ECX + 0x80, in_ECX + 0x94);\n        if (cVar2 == '\\0') {\n            return;\n        }\n    }\n    arg_8h_00 = in_ECX + 4;\ncode_r0x004168e3:\n    *(in_ECX + 0x70) = *(in_ECX + 0x70) & *(in_ECX + 0xe6f8);\n    if (*(in_ECX + 0x7c) <= *arg_8h_00) {\n        arg_ch = in_ECX + 0x80;\n        while ((iVar10 = *arg_ch + -1 + *(in_ECX + 0x88),  iVar10 < *arg_8h_00 ||\n               ((*arg_8h_00 == iVar10 && (*(in_ECX + 0x84) <= *(in_ECX + 8)))))) {\n            if (*(in_ECX + 0x90) != '\\0') goto code_r0x00416ebf;\n            cVar2 = fcn.00414113(arg_8h_00, arg_ch);\n            if (cVar2 == '\\0') {\n                return;\n            }\n            in_stack_ffffffb4 = arg_8h_00;\n            cVar2 = fcn.0041422f(arg_8h_00, arg_ch, in_ECX + 0x94);\n            if (cVar2 == '\\0') {\n                return;\n            }\n        }\n        cVar2 = fcn.00411bfc();\n        if (cVar2 == '\\0') goto code_r0x00416ebf;\n    }\n    if (((*(in_ECX + 0x4b30) - *(in_ECX + 0x70) & *(in_ECX + 0xe6f8)) < 0x1004) &&\n       (*(in_ECX + 0x4b30) != *(in_ECX + 0x70))) {\n        fcn.00414f87();\n        if (*(in_ECX + 0x4c44) < *(in_ECX + 0x4c54)) {\n            return;\n        }\n        if ((*(in_ECX + 0x4c44) <= *(in_ECX + 0x4c54)) &&\n           (*(in_ECX + 0x4c40) <= *(in_ECX + 0x4c50) && *(in_ECX + 0x4c50) != *(in_ECX + 0x4c40))) {\n            return;\n        }\n        if (*(in_ECX + 0x4c48) != '\\0') {\n            *(in_ECX + 0x4c58) = 0;\n            return;\n        }\n    }\n    uVar3 = fcn.00409721();\n    iVar10 = *(in_ECX + 0x118);\n    uVar3 = uVar3 & 0xfffe;\n    if (uVar3 < *(in_ECX + 0x98 + iVar10 * 4)) {\n        uVar3 = uVar3 >> (0x10U - iVar10 & 0x1f);\n        uVar7 = *(uVar3 + 0x11c + in_ECX) + *(in_ECX + 8);\n        *arg_8h_00 = *arg_8h_00 + (uVar7 >> 3);\n        *(in_ECX + 8) = uVar7 & 7;\n        uVar1 = *(in_ECX + 0x51c + uVar3 * 2);\n    }\n    else {\n        uVar7 = iVar10 + 1;\n        uVar9 = 0xf;\n        if (uVar7 < 0xf) {\n            puVar8 = in_ECX + 0x98 + uVar7 * 4;\n            do {\n                uVar9 = uVar7;\n                if (uVar3 < *puVar8) break;\n                uVar7 = uVar7 + 1;\n                puVar8 = puVar8 + 1;\n                uVar9 = 0xf;\n            } while (uVar7 < 0xf);\n        }\n        uVar7 = *(in_ECX + 8) + uVar9;\n        *(in_ECX + 8) = uVar7 & 7;\n        *arg_8h_00 = *arg_8h_00 + (uVar7 >> 3);\n        uVar3 = (uVar3 - *(in_ECX + 0x94 + uVar9 * 4) >> (0x10U - uVar9 & 0x1f)) + *(in_ECX + 0xd8 + uVar9 * 4);\n        if (*(in_ECX + 0x94) <= uVar3) {\n            uVar3 = 0;\n        }\n        uVar1 = *(in_ECX + 0xd1c + uVar3 * 2);\n    }\n    uVar3 = uVar1;\n    if (uVar3 < 0x100) {\n        if (*(in_ECX + 0x4c38) == '\\0') {\n            *(*(in_ECX + 0x4b34) + *(in_ECX + 0x70)) = uVar1;\n            *(in_ECX + 0x70) = *(in_ECX + 0x70) + 1;\n        }\n        else {\n            in_stack_ffffffb4 = *(in_ECX + 0x70);\n            *(in_ECX + 0x70) = in_stack_ffffffb4 + 1;\n            puVar4 = fcn.00411e58();\n            *puVar4 = uVar1;\n        }\n        goto code_r0x004168e3;\n    }\n    if (uVar3 < 0x106) {\n        if (uVar3 == 0x100) {\n            cVar2 = fcn.00413ad4();\n            if (cVar2 == '\\0') goto code_r0x00416ebf;\n            in_stack_ffffffb4 = &var_24h;\n            cVar2 = fcn.004153b6();\n            if (cVar2 == '\\0') {\ncode_r0x00416ebf:\n                fcn.00414f87();\n                return;\n            }\n            goto code_r0x004168e3;\n        }\n        if (uVar3 != 0x101) {\n            iVar10 = uVar3 - 0x102;\n            puVar5 = in_ECX + 0x54 + iVar10 * 4;\n            var_ch = *puVar5;\n            for (; iVar10 != 0; iVar10 = iVar10 + -1) {\n                *puVar5 = puVar5[-1];\n                puVar5 = puVar5 + -1;\n            }\n            *(in_ECX + 0x54) = var_ch;\n            uVar3 = fcn.00409721();\n            iVar10 = *(in_ECX + 0x2ddc);\n            uVar3 = uVar3 & 0xfffe;\n            if (uVar3 < *(in_ECX + 0x2d5c + iVar10 * 4)) {\n                uVar3 = uVar3 >> (0x10U - iVar10 & 0x1f);\n                uVar7 = *(uVar3 + 0x2de0 + in_ECX) + *(in_ECX + 8);\n                *arg_8h_00 = *arg_8h_00 + (uVar7 >> 3);\n                *(in_ECX + 8) = uVar7 & 7;\n                uVar1 = *(in_ECX + 0x31e0 + uVar3 * 2);\n            }\n            else {\n                uVar7 = iVar10 + 1;\n                uVar9 = 0xf;\n                if (uVar7 < 0xf) {\n                    puVar8 = in_ECX + 0x2d5c + uVar7 * 4;\n                    do {\n                        uVar9 = uVar7;\n                        if (uVar3 < *puVar8) break;\n                        uVar7 = uVar7 + 1;\n                        puVar8 = puVar8 + 1;\n                        uVar9 = 0xf;\n                    } while (uVar7 < 0xf);\n                }\n                uVar7 = *(in_ECX + 8) + uVar9;\n                *(in_ECX + 8) = uVar7 & 7;\n                *arg_8h_00 = *arg_8h_00 + (uVar7 >> 3);\n                uVar3 = (uVar3 - *(in_ECX + 0x2d58 + uVar9 * 4) >> (0x10U - uVar9 & 0x1f)) +\n                        *(in_ECX + 0x2d9c + uVar9 * 4);\n                if (*(in_ECX + 0x2d58) <= uVar3) {\n                    uVar3 = 0;\n                }\n                uVar1 = *(in_ECX + 0x39e0 + uVar3 * 2);\n            }\n            uVar3 = uVar1;\n            if (uVar3 < 8) {\n                var_8h = uVar3 + 2;\n            }\n            else {\n                iVar10 = (uVar1 >> 2) - 1;\n                var_8h = ((uVar3 & 3 | 4) << (iVar10 & 0x1f)) + 2;\n                if (iVar10 != 0) {\n                    uVar3 = fcn.00409721();\n                    var_8h = var_8h + (uVar3 >> (0x10 - iVar10 & 0x1f));\n                    uVar3 = *(in_ECX + 8) + iVar10;\n                    *arg_8h_00 = *arg_8h_00 + (uVar3 >> 3);\n                    *(in_ECX + 8) = uVar3 & 7;\n                }\n            }\n            *(in_ECX + 0x68) = var_8h;\n            if (*(in_ECX + 0x4c38) != '\\0') {\n                arg_14h = *(in_ECX + 0xe6f8);\n                puVar4 = var_ch;\n                goto code_r0x00416d13;\n            }\n            arg_8h = var_8h;\n            puVar8 = in_ECX + 0x70;\n            puVar4 = *puVar8;\n            var_4h = puVar4 + -var_ch;\n            puVar11 = *(in_ECX + 0xe6f4) + -0x1001;\n            if ((var_4h < puVar11) && (puVar4 < puVar11)) {\n                puVar11 = var_4h + *(in_ECX + 0x4b34);\n                var_4h = puVar4 + *(in_ECX + 0x4b34);\n                *(in_ECX + 0x70) = var_8h + puVar4;\n                if (var_ch < var_8h) {\n                    if (0x7 < var_8h) {\n                        uVar3 = var_8h >> 3;\n                        do {\n                            arg_8h = arg_8h + -8;\n                            *var_4h = *puVar11;\n                            var_4h[1] = puVar11[1];\n                            var_4h[2] = puVar11[2];\n                            var_4h[3] = puVar11[3];\n                            var_4h[4] = puVar11[4];\n                            var_4h[5] = puVar11[5];\n                            var_4h[6] = puVar11[6];\n                            var_4h[7] = puVar11[7];\n                            puVar11 = puVar11 + 8;\n                            var_4h = var_4h + 8;\n                            uVar3 = uVar3 - 1;\n                        } while (uVar3 != 0);\n                    }\n                }\n                else if (0x7 < var_8h) {\n                    var_ch = var_8h >> 3;\n                    do {\n                        fcn.0041bb00(var_4h, puVar11, 8);\n                        var_4h = var_4h + 8;\n                        arg_8h = arg_8h + -8;\n                        puVar11 = puVar11 + 8;\n                        var_ch = var_ch + -1;\n                    } while (var_ch != NULL);\n                }\n                if ((((arg_8h != NULL) && (*var_4h = *puVar11,  0x1 < arg_8h)) &&\n                    (var_4h[1] = puVar11[1],  0x2 < arg_8h)) &&\n                   (((var_4h[2] = puVar11[2],  0x3 < arg_8h && (var_4h[3] = puVar11[3],  0x4 < arg_8h)) &&\n                    ((var_4h[4] = puVar11[4],  0x5 < arg_8h && (var_4h[5] = puVar11[5],  0x6 < arg_8h)))))) {\n                    var_4h[6] = puVar11[6];\n                }\n            }\n            else if (var_8h != NULL) {\n                uVar3 = *(in_ECX + 0xe6f8);\n                do {\n                    arg_8h = arg_8h + -1;\n                    *(*(in_ECX + 0x4b34) + *puVar8) = *((var_4h & uVar3) + *(in_ECX + 0x4b34));\n                    uVar3 = *(in_ECX + 0xe6f8);\n                    var_4h = var_4h + 1;\n                    *puVar8 = *puVar8 + 1 & uVar3;\n                } while (arg_8h != NULL);\n            }\n            goto code_r0x004168e3;\n        }\n        arg_8h = *(in_ECX + 0x68);\n        if (arg_8h == NULL) goto code_r0x004168e3;\n        if (*(in_ECX + 0x4c38) == '\\0') {\n            puVar8 = in_ECX + 0x70;\n            puVar4 = *puVar8;\n            var_ch = puVar4 + -*(in_ECX + 0x54);\n            puVar11 = *(in_ECX + 0xe6f4) + -0x1001;\n            if ((var_ch < puVar11) && (puVar4 < puVar11)) {\n                puVar11 = var_ch + *(in_ECX + 0x4b34);\n                var_ch = puVar4 + *(in_ECX + 0x4b34);\n                *puVar8 = puVar4 + arg_8h;\n                puVar4 = arg_8h;\n                if (*(in_ECX + 0x54) < arg_8h) {\n                    if (0x7 < arg_8h) {\n                        uVar3 = arg_8h >> 3;\n                        do {\n                            arg_8h = arg_8h + -8;\n                            *var_ch = *puVar11;\n                            var_ch[1] = puVar11[1];\n                            var_ch[2] = puVar11[2];\n                            var_ch[3] = puVar11[3];\n                            var_ch[4] = puVar11[4];\n                            var_ch[5] = puVar11[5];\n                            var_ch[6] = puVar11[6];\n                            var_ch[7] = puVar11[7];\n                            puVar11 = puVar11 + 8;\n                            var_ch = var_ch + 8;\n                            uVar3 = uVar3 - 1;\n                            puVar4 = arg_8h;\n                        } while (uVar3 != 0);\n                    }\n                }\n                else if (0x7 < arg_8h) {\n                    var_8h = arg_8h >> 3;\n                    do {\n                        fcn.0041bb00(var_ch, puVar11, 8);\n                        var_ch = var_ch + 8;\n                        arg_8h = arg_8h + -8;\n                        puVar11 = puVar11 + 8;\n                        var_8h = var_8h + -1;\n                        puVar4 = arg_8h;\n                    } while (var_8h != NULL);\n                }\n                goto code_r0x00416de8;\n            }\n            if (arg_8h != NULL) {\n                uVar3 = *(in_ECX + 0xe6f8);\n                do {\n                    arg_8h = arg_8h + -1;\n                    *(*(in_ECX + 0x4b34) + *puVar8) = *((var_ch & uVar3) + *(in_ECX + 0x4b34));\n                    uVar3 = *(in_ECX + 0xe6f8);\n                    var_ch = var_ch + 1;\n                    *puVar8 = *puVar8 + 1 & uVar3;\n                } while (arg_8h != NULL);\n            }\n            goto code_r0x004168e3;\n        }\n        arg_14h = *(in_ECX + 0xe6f8);\n        puVar4 = *(in_ECX + 0x54);\n    }\n    else {\n        uVar7 = uVar3 - 0x106;\n        if (uVar7 < 8) {\n            var_ch = uVar3 - 0x104;\n        }\n        else {\n            iVar10 = (uVar7 >> 2) - 1;\n            var_ch = ((uVar7 & 3 | 4) << (iVar10 & 0x1f)) + 2;\n            if (iVar10 != 0) {\n                uVar3 = fcn.00409721();\n                var_ch = var_ch + (uVar3 >> (0x10 - iVar10 & 0x1f));\n                uVar3 = *(in_ECX + 8) + iVar10;\n                *arg_8h_00 = *arg_8h_00 + (uVar3 >> 3);\n                *(in_ECX + 8) = uVar3 & 7;\n            }\n        }\n        arg_8h = var_ch;\n        uVar3 = fcn.00409721();\n        iVar10 = *(in_ECX + 0x1004);\n        uVar3 = uVar3 & 0xfffe;\n        if (uVar3 < *(in_ECX + 0xf84 + iVar10 * 4)) {\n            uVar3 = uVar3 >> (0x10U - iVar10 & 0x1f);\n            uVar7 = *(uVar3 + 0x1008 + in_ECX) + *(in_ECX + 8);\n            *arg_8h_00 = *arg_8h_00 + (uVar7 >> 3);\n            *(in_ECX + 8) = uVar7 & 7;\n            uVar1 = *(in_ECX + 0x1408 + uVar3 * 2);\n        }\n        else {\n            uVar7 = iVar10 + 1;\n            uVar9 = 0xf;\n            if (uVar7 < 0xf) {\n                puVar8 = in_ECX + 0xf84 + uVar7 * 4;\n                do {\n                    uVar9 = uVar7;\n                    if (uVar3 < *puVar8) break;\n                    uVar7 = uVar7 + 1;\n                    puVar8 = puVar8 + 1;\n                    uVar9 = 0xf;\n                } while (uVar7 < 0xf);\n            }\n            uVar7 = *(in_ECX + 8) + uVar9;\n            *(in_ECX + 8) = uVar7 & 7;\n            *arg_8h_00 = *arg_8h_00 + (uVar7 >> 3);\n            uVar3 = (uVar3 - *(in_ECX + 0xf80 + uVar9 * 4) >> (0x10U - uVar9 & 0x1f)) + *(in_ECX + 0xfc4 + uVar9 * 4);\n            if (*(in_ECX + 0xf80) <= uVar3) {\n                uVar3 = 0;\n            }\n            uVar1 = *(in_ECX + 0x1c08 + uVar3 * 2);\n        }\n        uVar3 = uVar1;\n        if (uVar3 < 4) {\n            var_8h = uVar3 + 1;\n        }\n        else {\n            uVar7 = (uVar1 >> 1) - 1;\n            uVar6 = uVar7;\n            var_8h = ((uVar3 & 1 | 2) << (uVar6 & 0x1f)) + 1;\n            if (uVar7 != 0) {\n                if (uVar7 < 4) {\n                    uVar3 = fcn.0041232f();\n                    var_8h = var_8h + (uVar3 >> (0x20 - uVar6 & 0x1f));\n                    uVar7 = *(in_ECX + 8) + uVar7;\n                    *arg_8h_00 = *arg_8h_00 + (uVar7 >> 3);\n                    *(in_ECX + 8) = uVar7 & 7;\n                }\n                else {\n                    if (4 < uVar7) {\n                        uVar3 = fcn.0041232f();\n                        var_8h = var_8h + (uVar3 >> (0x24 - uVar6 & 0x1f)) * 0x10;\n                        uVar7 = *(in_ECX + 8) + -4 + uVar7;\n                        *arg_8h_00 = *arg_8h_00 + (uVar7 >> 3);\n                        *(in_ECX + 8) = uVar7 & 7;\n                    }\n                    uVar3 = fcn.00409721();\n                    iVar10 = *(in_ECX + 0x1ef0);\n                    uVar3 = uVar3 & 0xfffe;\n                    if (uVar3 < *(in_ECX + 0x1e70 + iVar10 * 4)) {\n                        uVar3 = uVar3 >> (0x10U - iVar10 & 0x1f);\n                        uVar7 = *(uVar3 + 0x1ef4 + in_ECX) + *(in_ECX + 8);\n                        *arg_8h_00 = *arg_8h_00 + (uVar7 >> 3);\n                        *(in_ECX + 8) = uVar7 & 7;\n                        uVar1 = *(in_ECX + 0x22f4 + uVar3 * 2);\n                    }\n                    else {\n                        uVar7 = iVar10 + 1;\n                        uVar9 = 0xf;\n                        if (uVar7 < 0xf) {\n                            puVar8 = in_ECX + 0x1e70 + uVar7 * 4;\n                            do {\n                                uVar9 = uVar7;\n                                if (uVar3 < *puVar8) break;\n                                uVar7 = uVar7 + 1;\n                                puVar8 = puVar8 + 1;\n                                uVar9 = 0xf;\n                            } while (uVar7 < 0xf);\n                        }\n                        uVar7 = *(in_ECX + 8) + uVar9;\n                        *(in_ECX + 8) = uVar7 & 7;\n                        *arg_8h_00 = *arg_8h_00 + (uVar7 >> 3);\n                        uVar3 = (uVar3 - *(in_ECX + 0x1e6c + uVar9 * 4) >> (0x10U - uVar9 & 0x1f)) +\n                                *(in_ECX + 0x1eb0 + uVar9 * 4);\n                        if (*(in_ECX + 0x1e6c) <= uVar3) {\n                            uVar3 = 0;\n                        }\n                        uVar1 = *(in_ECX + 0x2af4 + uVar3 * 2);\n                    }\n                    var_8h = var_8h + uVar1;\n                }\n            }\n        }\n        if (((0x100 < var_8h) && (arg_8h = var_ch + 1,  0x2000 < var_8h)) && (arg_8h = var_ch + 2,  0x40000 < var_8h)) {\n            arg_8h = var_ch + 3;\n        }\n        *(in_ECX + 0x60) = *(in_ECX + 0x5c);\n        *(in_ECX + 0x5c) = *(in_ECX + 0x58);\n        *(in_ECX + 0x58) = *(in_ECX + 0x54);\n        *(in_ECX + 0x54) = var_8h;\n        *(in_ECX + 0x68) = arg_8h;\n        puVar8 = in_ECX + 0x70;\n        if (*(in_ECX + 0x4c38) == '\\0') {\n            puVar4 = *puVar8;\n            var_4h = arg_8h;\n            var_ch = puVar4 + -var_8h;\n            puVar11 = *(in_ECX + 0xe6f4) + -0x1001;\n            if ((var_ch < puVar11) && (puVar4 < puVar11)) {\n                puVar11 = var_ch + *(in_ECX + 0x4b34);\n                var_ch = puVar4 + *(in_ECX + 0x4b34);\n                *puVar8 = puVar4 + arg_8h;\n                puVar4 = arg_8h;\n                if (var_8h < arg_8h) {\n                    if (0x7 < arg_8h) {\n                        uVar3 = arg_8h >> 3;\n                        do {\n                            puVar4 = var_4h + -8;\n                            *var_ch = *puVar11;\n                            var_ch[1] = puVar11[1];\n                            var_ch[2] = puVar11[2];\n                            var_ch[3] = puVar11[3];\n                            var_ch[4] = puVar11[4];\n                            var_ch[5] = puVar11[5];\n                            var_ch[6] = puVar11[6];\n                            var_ch[7] = puVar11[7];\n                            puVar11 = puVar11 + 8;\n                            var_ch = var_ch + 8;\n                            uVar3 = uVar3 - 1;\n                            var_4h = puVar4;\n                        } while (uVar3 != 0);\n                    }\n                }\n                else if (0x7 < arg_8h) {\n                    arg_8h = arg_8h >> 3;\n                    do {\n                        fcn.0041bb00(var_ch, puVar11, 8);\n                        var_ch = var_ch + 8;\n                        puVar4 = var_4h + -8;\n                        puVar11 = puVar11 + 8;\n                        arg_8h = arg_8h - 1;\n                        var_4h = puVar4;\n                    } while (arg_8h != NULL);\n                }\ncode_r0x00416de8:\n                if (((((puVar4 != NULL) && (*var_ch = *puVar11,  0x1 < puVar4)) &&\n                     (var_ch[1] = puVar11[1],  0x2 < puVar4)) &&\n                    ((var_ch[2] = puVar11[2],  0x3 < puVar4 && (var_ch[3] = puVar11[3],  0x4 < puVar4)))) &&\n                   ((var_ch[4] = puVar11[4],  0x5 < puVar4 && (var_ch[5] = puVar11[5],  0x6 < puVar4)))) {\n                    var_ch[6] = puVar11[6];\n                }\n            }\n            else if (arg_8h != NULL) {\n                uVar3 = *(in_ECX + 0xe6f8);\n                do {\n                    var_4h = var_4h + -1;\n                    *(*(in_ECX + 0x4b34) + *puVar8) = *((var_ch & uVar3) + *(in_ECX + 0x4b34));\n                    uVar3 = *(in_ECX + 0xe6f8);\n                    var_ch = var_ch + 1;\n                    *puVar8 = *puVar8 + 1 & uVar3;\n                } while (var_4h != NULL);\n            }\n            goto code_r0x004168e3;\n        }\n        arg_14h = *(in_ECX + 0xe6f8);\n        puVar4 = var_8h;\n    }\ncode_r0x00416d13:\n    fcn.00411e90(in_stack_ffffffb4, puVar4, in_ECX + 0x70, arg_14h);\n    goto code_r0x004168e3;\n}\n",
        "token_count": 6944
    },
    "004173d7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004173d7(uint arg_8h)\n\n{\n    uint uVar1;\n    bool bVar2;\n    int32_t *piVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int32_t *piVar10;\n    uint *puVar11;\n    uint *puVar12;\n    bool bVar13;\n    uint var_134h;\n    int32_t var_34h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t *var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_9h;\n    int32_t var_4h;\n    \n    fcn.0041352c();\n    fcn.00415417(arg_8h);\n    uVar7 = 0;\n    if ((*(in_ECX + 0x1c) & 0x7fffffff) != 0) {\n        iVar8 = 0;\n        do {\n            iVar5 = *(in_ECX + 0x18) + iVar8;\n            *(iVar5 + 0x4ad1) = 0;\n            *(iVar5 + 0x4ad3) = 0;\n            uVar7 = uVar7 + 1;\n            iVar8 = iVar8 + 0x4ae4;\n        } while (uVar7 < *(in_ECX + 0x1c) * 2);\n    }\n    var_30h = in_ECX + 0x80;\n    iVar8 = in_ECX + 0x94;\n    puVar11 = var_30h;\n    puVar12 = *(in_ECX + 0x18) + 0x18;\n    for (iVar5 = 5; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar12 = *puVar11;\n        puVar11 = puVar11 + 1;\n        puVar12 = puVar12 + 1;\n    }\n    var_34h = iVar8;\n    fcn.0041bb00(*(in_ECX + 0x18) + 0x30, iVar8, 0x4a9c);\n    var_2ch = 0;\n    var_4h = 0;\n    var_10h = 0;\n    var_9h._0_1_ = '\\0';\n    bVar2 = false;\n    do {\n        do {\n            var_24h = fcn.0040b7ac(*(in_ECX + 0x20) + var_4h, 0x400000U - var_4h & 0xfffffff0);\n            if ((var_24h < 0) || (var_4h = var_4h + var_24h,  var_4h == 0)) {\ncode_r0x0041778d:\n                fcn.00414f87();\n                iVar8 = var_2ch * 0x4ae4 + *(in_ECX + 0x18);\n                puVar11 = iVar8 + 0x18;\n                puVar12 = var_30h;\n                for (iVar5 = 5; iVar5 != 0; iVar5 = iVar5 + -1) {\n                    *puVar12 = *puVar11;\n                    puVar11 = puVar11 + 1;\n                    puVar12 = puVar12 + 1;\n                }\n                fcn.0041bb00(var_34h, iVar8 + 0x30, 0x4a9c);\n                return;\n            }\n        } while (var_4h <= var_10h);\n        do {\n            var_14h = 0;\n            var_1ch = 0;\n            if ((*(in_ECX + 0x1c) & 0x7fffffff) != 0) {\n                stack0xfffffff4 = 0;\n                do {\n                    piVar10 = *(in_ECX + 0x18) + stack0xfffffff4;\n                    var_2ch = var_14h;\n                    *piVar10 = in_ECX;\n                    if (*(piVar10 + 0x4ad3) == '\\0') {\n                        fcn.004096fb(*(in_ECX + 0x20) + var_10h);\n                        piVar10[2] = 0;\n                        piVar10[1] = 0;\n                        piVar10[0x12b3] = var_4h - var_10h;\n                        if (var_4h - var_10h == 0) break;\n                        *(piVar10 + 0x12b4) = 0;\n                        *(piVar10 + 5) = 0;\n                        *(piVar10 + 0xb) = 0;\n                    }\n                    else {\n                        piVar10[0x12b3] = var_4h;\n                    }\n                    *(piVar10 + 0x4ad3) = 0;\n                    *(piVar10 + 0x4ad2) = var_24h == 0;\n                    piVar10[0x12b8] = var_14h;\n                    if (*(piVar10 + 5) == '\\0') {\n                        *(piVar10 + 5) = 1;\n                        cVar4 = fcn.00414113(piVar10 + 1, piVar10 + 6);\n                        if (cVar4 == '\\0') {\n                            bVar2 = true;\n                            break;\n                        }\n                    }\n                    if ((var_9h == '\\0') && (piVar10[6] < 0x20001)) {\n                        var_1ch = var_1ch + 1;\n                    }\n                    else {\n                        *(piVar10 + 0x4ad1) = 1;\n                        var_9h._0_1_ = '\\x01';\n                    }\n                    unique0x00007a80 = stack0xfffffff4 + 0x4ae4;\n                    var_10h = var_10h + piVar10[9] + piVar10[6];\n                    var_14h = var_14h + 1;\n                    if ((((-1 < var_4h - var_10h) && (*(piVar10 + 10) != '\\0')) || (var_4h - var_10h < 0x400)) ||\n                       (*(in_ECX + 0x1c) * 2 <= var_14h)) break;\n                } while( true );\n            }\n            var_20h = var_1ch / *(in_ECX + 0x1c);\n            iVar5 = 0;\n            if (var_1ch % *(in_ECX + 0x1c) != 0) {\n                var_20h = var_20h + 1;\n            }\n            stack0xfffffff4 = 0;\n            if (var_1ch != 0) {\n                var_28h = var_20h * 0x4ae4;\n                var_18h = &fcn.004173d7::var_134h;\n                do {\n                    piVar10 = var_18h;\n                    uVar7 = var_20h;\n                    uVar9 = var_1ch - stack0xfffffff4;\n                    iVar6 = *(in_ECX + 0x18) + iVar5;\n                    piVar3 = var_18h + 2;\n                    *var_18h = iVar6;\n                    var_18h = piVar3;\n                    if (uVar7 < uVar9) {\n                        uVar9 = uVar7;\n                    }\n                    bVar13 = var_14h == 1;\n                    piVar10[1] = uVar9;\n                    if (bVar13) {\n                        iVar8 = 0x417602;\n                        fcn.00414546(iVar6);\n                    }\n                    else {\n                        fcn.00410e94(iVar8, piVar10, 0x415344);\n                    }\n                    unique0x00007a00 = stack0xfffffff4 + uVar7;\n                    iVar5 = iVar5 + var_28h;\n                } while (unique0x00007a00 < var_1ch);\n            }\n            if (var_14h == 0) {\ncode_r0x00417783:\n                if (bVar2) goto code_r0x0041778d;\n                break;\n            }\n            fcn.00410d91();\n            stack0xfffffff4 = 0;\n            if (var_14h != 0) {\n                var_18h = NULL;\n                do {\n                    iVar5 = *(in_ECX + 0x18) + var_18h;\n                    if (*(iVar5 + 0x4ad1) == '\\0') {\n                        cVar4 = fcn.004154b9(iVar5);\n                        if (cVar4 == '\\0') goto code_r0x0041778d;\n                        if (*(iVar5 + 0x4ad1) != '\\0') goto code_r0x00417664;\n                    }\n                    else {\ncode_r0x00417664:\n                        cVar4 = fcn.004159e8(iVar5);\n                        if (cVar4 == '\\0') goto code_r0x0041778d;\n                    }\n                    if (*(iVar5 + 0x4ad0) != '\\0') goto code_r0x0041778d;\n                    if (*(iVar5 + 0x4ad3) != '\\0') {\n                        iVar6 = *(in_ECX + 0x20);\n                        iVar8 = (*(iVar5 + 0x10) - iVar6) + *(iVar5 + 4);\n                        if (var_4h <= iVar8) goto code_r0x0041778d;\n                        var_24h = var_4h - iVar8;\n                        iVar8 = iVar8 + iVar6;\n                        fcn.0041c500(iVar6, iVar8, var_24h);\n                        *(iVar5 + 0x18) = *(iVar5 + 0x18) + (*(iVar5 + 0x20) - *(iVar5 + 4));\n                        *(iVar5 + 0x24) = 0;\n                        *(iVar5 + 0x20) = 0;\n                        *(iVar5 + 0x10) = *(in_ECX + 0x20);\n                        *(iVar5 + 4) = 0;\n                        if (stack0xfffffff4 != 0) {\n                            iVar6 = *(in_ECX + 0x18);\n                            var_28h = *(iVar6 + 0x4adc);\n                            uVar1 = *(iVar6 + 0x4ad4);\n                            iVar8 = iVar5;\n                            fcn.0041bb00(iVar6, iVar5, 0x4ae4);\n                            *(*(in_ECX + 0x18) + 0x4ad4) = uVar1;\n                            *(*(in_ECX + 0x18) + 0x4adc) = var_28h;\n                            *(iVar5 + 0x4ad3) = 0;\n                        }\n                        var_10h = 0;\n                        var_4h = var_24h;\n                        goto code_r0x00417783;\n                    }\n                    if (*(iVar5 + 0x28) != '\\0') {\n                        bVar2 = true;\n                        break;\n                    }\n                    unique0x00007a80 = stack0xfffffff4 + 1;\n                    var_18h = var_18h + 0x12b9;\n                } while (unique0x00007a80 < var_14h);\n            }\n            if (bVar2) goto code_r0x0041778d;\n            iVar5 = var_4h - var_10h;\n            if (iVar5 < 0x400) {\n                if (-1 < iVar5) {\n                    if (0 < iVar5) {\n                        iVar8 = var_10h + *(in_ECX + 0x20);\n                        fcn.0041c500(*(in_ECX + 0x20), iVar8, iVar5);\n                    }\n                    var_10h = 0;\n                    var_4h = iVar5;\n                    goto code_r0x00417783;\n                }\n                goto code_r0x0041778d;\n            }\n        } while (var_10h < var_4h);\n    } while( true );\n}\n",
        "token_count": 2818
    },
    "004177c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n\nuint32_t fcn.004177c8(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uchar extraout_AH;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t extraout_ECX;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    int32_t arg_10h;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    piVar1 = extraout_ECX + 4;\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    uVar3 = fcn.00409721();\n    uVar4 = *(extraout_ECX + 8) + 8;\n    *piVar1 = *piVar1 + (uVar4 >> 3);\n    *(unaff_EBP + -0x14) = uVar3 >> 8;\n    arg_10h = (uVar3 >> 8 & 7) + 1;\n    *(extraout_ECX + 8) = uVar4 & 7;\n    if (arg_10h == 7) {\n        uVar3 = fcn.00409721();\n        arg_10h = (uVar3 >> 8) + 7;\n        uVar3 = *(extraout_ECX + 8) + 8;\n    }\n    else {\n        if (arg_10h != 8) goto code_r0x0041783f;\n        arg_10h = fcn.00409721();\n        uVar3 = *(extraout_ECX + 8) + 0x10;\n    }\n    *piVar1 = *piVar1 + (uVar3 >> 3);\n    *(extraout_ECX + 8) = uVar3 & 7;\ncode_r0x0041783f:\n    fcn.004012e7(arg_10h);\n    iVar5 = 0;\n    *(unaff_EBP + -4) = 0;\n    if (0 < arg_10h) {\n        do {\n            if (*(*(unaff_EBP + -0x10) + 0x78) + -1 <= *piVar1) {\n                cVar2 = fcn.00411b90();\n                if ((cVar2 == '\\0') && (uVar3 = arg_10h - 1,  iVar5 < uVar3)) {\n                    if (*(unaff_EBP + -0x24) != 0) {\n                        uVar3 = fcn.00419d72(*(unaff_EBP + -0x24));\n                    }\n                    uVar3 = uVar3 & 0xffffff00;\n                    goto code_r0x004178b6;\n                }\n            }\n            fcn.00409721();\n            *(*(unaff_EBP + -0x24) + iVar5) = extraout_AH;\n            uVar3 = *(extraout_ECX + 8) + 8;\n            *piVar1 = *piVar1 + (uVar3 >> 3);\n            iVar5 = iVar5 + 1;\n            *(extraout_ECX + 8) = uVar3 & 7;\n        } while (iVar5 < arg_10h);\n    }\n    uVar4 = fcn.004163de(*(unaff_EBP + -0x14), *(unaff_EBP + -0x24), arg_10h);\n    uVar3 = uVar4;\n    if (*(unaff_EBP + -0x24) != 0) {\n        uVar3 = fcn.00419d72(*(unaff_EBP + -0x24));\n    }\n    uVar3 = uVar3 & 0xffffff00 | uVar4 & 0xff;\ncode_r0x004178b6:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 908
    },
    "004179a9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004179a9(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t in_ECX;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uchar *puVar11;\n    uint32_t uVar12;\n    uchar *puVar13;\n    int32_t iVar14;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uchar *var_8h;\n    uchar *var_4h;\n    \n    uVar12 = 0;\n    if (*0x44b89c == 0) {\n        var_8h = NULL;\n        iVar14 = 0;\n        do {\n            var_4h = *(uVar12 * 4 + 0x42c1e0);\n            if (0 < var_4h) {\n                fcn.0041a0c0(iVar14 + 0x44b858, uVar12, var_4h);\n                do {\n                    *(iVar14 * 4 + 0x44b898) = var_8h;\n                    var_8h = var_8h + (1 << (uVar12 & 0x1f));\n                    iVar14 = iVar14 + 1;\n                    var_4h = var_4h + -1;\n                } while (var_4h != NULL);\n            }\n            uVar12 = uVar12 + 1;\n        } while (uVar12 < 0x13);\n    }\n    *(in_ECX + 0x4c58) = 1;\n    if (*(in_ECX + 0x4c48) == '\\0') {\n        fcn.00415417(arg_8h);\n        cVar5 = fcn.00411b90();\n        if (cVar5 == '\\0') {\n            return;\n        }\n        if (((arg_8h == '\\0') || (*(in_ECX + 0xe674) == '\\0')) && (cVar5 = fcn.00413727(),  cVar5 == '\\0')) {\n            return;\n        }\n    }\n    piVar1 = in_ECX + 4;\ncode_r0x00417a54:\n    *(in_ECX + 0x70) = *(in_ECX + 0x70) & *(in_ECX + 0xe6f8);\n    if ((*(in_ECX + 0x7c) < *piVar1) && (cVar5 = fcn.00411b90(),  cVar5 == '\\0')) goto code_r0x00418722;\n    if (((*(in_ECX + 0x74) - *(in_ECX + 0x70) & *(in_ECX + 0xe6f8)) < 0x104) && (*(in_ECX + 0x74) != *(in_ECX + 0x70)))\n    {\n        fcn.00414bc1();\n        if (*(in_ECX + 0x4c44) < *(in_ECX + 0x4c54)) {\n            return;\n        }\n        if ((*(in_ECX + 0x4c44) <= *(in_ECX + 0x4c54)) &&\n           (*(in_ECX + 0x4c40) <= *(in_ECX + 0x4c50) && *(in_ECX + 0x4c50) != *(in_ECX + 0x4c40))) {\n            return;\n        }\n        if (*(in_ECX + 0x4c48) != '\\0') {\n            *(in_ECX + 0x4c58) = 0;\n            return;\n        }\n    }\n    if (*(in_ECX + 0xe670) == 1) {\n        iVar14 = fcn.0041336d();\n        if (iVar14 == -1) {\n            fcn.004132a4();\n            *(in_ECX + 0xe670) = 0;\n            goto code_r0x00418722;\n        }\n        if (iVar14 != *(in_ECX + 0xe4bc)) {\ncode_r0x00417e1e:\n            *(*(in_ECX + 0x4b34) + *(in_ECX + 0x70)) = iVar14;\n            goto code_r0x00417ee3;\n        }\n        iVar6 = fcn.0041367d();\n        if (iVar6 == 0) {\n            cVar5 = fcn.00413727();\n        }\n        else {\n            if ((iVar6 == -1) || (iVar6 == 2)) goto code_r0x00418722;\n            if (iVar6 != 3) {\n                if (iVar6 != 4) {\n                    if (iVar6 != 5) goto code_r0x00417e1e;\n                    iVar14 = fcn.0041367d();\n                    if (iVar14 == -1) goto code_r0x00418722;\n                    arg_8h = iVar14 + 4;\n                    uVar7 = *(in_ECX + 0x70);\n                    uVar12 = uVar7 - 1;\n                    uVar9 = *(in_ECX + 0xe6f4) - 0x1001;\n                    if ((uVar12 < uVar9) && (uVar7 < uVar9)) {\n                        puVar13 = *(in_ECX + 0x4b34) + uVar12;\n                        var_4h = *(in_ECX + 0x4b34) + uVar7;\n                        *(in_ECX + 0x70) = uVar7 + arg_8h;\n                        var_8h = var_4h;\n                        if (arg_8h < 2) {\n                            if (7 < arg_8h) {\n                                var_ch = arg_8h >> 3;\n                                do {\n                                    fcn.0041bb00(var_4h, puVar13, 8);\n                                    var_4h = var_4h + 8;\n                                    arg_8h = arg_8h - 8;\n                                    puVar13 = puVar13 + 8;\n                                    var_ch = var_ch - 1;\n                                    var_8h = var_4h;\n                                } while (var_ch != 0);\n                            }\n                        }\n                        else if (7 < arg_8h) {\n                            uVar12 = arg_8h >> 3;\n                            do {\n                                arg_8h = arg_8h - 8;\n                                *var_4h = *puVar13;\n                                var_4h[1] = puVar13[1];\n                                var_4h[2] = puVar13[2];\n                                var_4h[3] = puVar13[3];\n                                var_4h[4] = puVar13[4];\n                                var_4h[5] = puVar13[5];\n                                var_4h[6] = puVar13[6];\n                                var_4h[7] = puVar13[7];\n                                puVar13 = puVar13 + 8;\n                                var_4h = var_4h + 8;\n                                uVar12 = uVar12 - 1;\n                                var_8h = var_4h;\n                            } while (uVar12 != 0);\n                        }\n                        goto joined_r0x0041822c;\n                    }\n                    if (arg_8h != 0) {\n                        uVar7 = *(in_ECX + 0xe6f8);\n                        do {\n                            arg_8h = arg_8h - 1;\n                            *(*(in_ECX + 0x4b34) + *(in_ECX + 0x70)) = *((uVar7 & uVar12) + *(in_ECX + 0x4b34));\n                            uVar7 = *(in_ECX + 0xe6f8);\n                            uVar12 = uVar12 + 1;\n                            *(in_ECX + 0x70) = *(in_ECX + 0x70) + 1U & uVar7;\n                        } while (arg_8h != 0);\n                    }\n                    goto code_r0x00417a54;\n                }\n                iVar14 = 0;\n                bVar4 = false;\n                var_ch = 0;\n                do {\n                    if (bVar4) goto code_r0x00418722;\n                    uVar12 = fcn.0041367d();\n                    if (uVar12 == 0xffffffff) {\n                        bVar4 = true;\n                        uVar7 = var_10h;\n                    }\n                    else {\n                        uVar7 = uVar12 & 0xff;\n                        if (var_ch != 3) {\n                            iVar14 = iVar14 * 0x100 + (uVar12 & 0xff);\n                            uVar7 = var_10h;\n                        }\n                    }\n                    var_10h = uVar7;\n                    var_ch = var_ch + 1;\n                } while (var_ch < 4);\n                if (bVar4) goto code_r0x00418722;\n                uVar12 = *(in_ECX + 0x70);\n                arg_8h = var_10h + 0x20;\n                uVar7 = uVar12 - (iVar14 + 2U);\n                uVar9 = *(in_ECX + 0xe6f4) - 0x1001;\n                if ((uVar9 <= uVar7) || (uVar9 <= uVar12)) {\n                    if (arg_8h != 0) {\n                        uVar12 = *(in_ECX + 0xe6f8);\n                        do {\n                            arg_8h = arg_8h - 1;\n                            *(*(in_ECX + 0x4b34) + *(in_ECX + 0x70)) = *((uVar12 & uVar7) + *(in_ECX + 0x4b34));\n                            uVar12 = *(in_ECX + 0xe6f8);\n                            uVar7 = uVar7 + 1;\n                            *(in_ECX + 0x70) = *(in_ECX + 0x70) + 1U & uVar12;\n                        } while (arg_8h != 0);\n                    }\n                    goto code_r0x00417a54;\n                }\n                puVar13 = *(in_ECX + 0x4b34) + uVar7;\n                var_4h = *(in_ECX + 0x4b34) + uVar12;\n                *(in_ECX + 0x70) = uVar12 + arg_8h;\n                var_8h = var_4h;\n                if (iVar14 + 2U < arg_8h) {\n                    if (7 < arg_8h) {\n                        uVar12 = arg_8h >> 3;\n                        do {\n                            arg_8h = arg_8h - 8;\n                            *var_4h = *puVar13;\n                            var_4h[1] = puVar13[1];\n                            var_4h[2] = puVar13[2];\n                            var_4h[3] = puVar13[3];\n                            var_4h[4] = puVar13[4];\n                            var_4h[5] = puVar13[5];\n                            var_4h[6] = puVar13[6];\n                            var_4h[7] = puVar13[7];\n                            puVar13 = puVar13 + 8;\n                            var_4h = var_4h + 8;\n                            uVar12 = uVar12 - 1;\n                            var_8h = var_4h;\n                        } while (uVar12 != 0);\n                    }\n                }\n                else if (7 < arg_8h) {\n                    var_ch = arg_8h >> 3;\n                    do {\n                        fcn.0041bb00(var_4h, puVar13, 8);\n                        var_4h = var_4h + 8;\n                        arg_8h = arg_8h - 8;\n                        puVar13 = puVar13 + 8;\n                        var_ch = var_ch - 1;\n                        var_8h = var_4h;\n                    } while (var_ch != 0);\n                }\n                goto joined_r0x0041822c;\n            }\n            cVar5 = fcn.004178d8();\n        }\n    }\n    else {\n        uVar12 = fcn.00409721();\n        iVar14 = *(in_ECX + 0x118);\n        uVar12 = uVar12 & 0xfffe;\n        if (uVar12 < *(in_ECX + 0x98 + iVar14 * 4)) {\n            uVar12 = uVar12 >> (0x10U - iVar14 & 0x1f);\n            uVar7 = *(uVar12 + 0x11c + in_ECX) + *(in_ECX + 8);\n            *piVar1 = *piVar1 + (uVar7 >> 3);\n            *(in_ECX + 8) = uVar7 & 7;\n            uVar3 = *(in_ECX + 0x51c + uVar12 * 2);\n        }\n        else {\n            uVar7 = iVar14 + 1;\n            uVar9 = 0xf;\n            if (uVar7 < 0xf) {\n                puVar8 = in_ECX + 0x98 + uVar7 * 4;\n                do {\n                    uVar9 = uVar7;\n                    if (uVar12 < *puVar8) break;\n                    uVar7 = uVar7 + 1;\n                    puVar8 = puVar8 + 1;\n                    uVar9 = 0xf;\n                } while (uVar7 < 0xf);\n            }\n            uVar7 = *(in_ECX + 8) + uVar9;\n            *(in_ECX + 8) = uVar7 & 7;\n            *piVar1 = *piVar1 + (uVar7 >> 3);\n            uVar12 = (uVar12 - *(in_ECX + 0x94 + uVar9 * 4) >> (0x10U - uVar9 & 0x1f)) + *(in_ECX + 0xd8 + uVar9 * 4);\n            if (*(in_ECX + 0x94) <= uVar12) {\n                uVar12 = 0;\n            }\n            uVar3 = *(in_ECX + 0xd1c + uVar12 * 2);\n        }\n        uVar12 = uVar3;\n        if (uVar12 < 0x100) {\n            *(*(in_ECX + 0x4b34) + *(in_ECX + 0x70)) = uVar3;\ncode_r0x00417ee3:\n            *(in_ECX + 0x70) = *(in_ECX + 0x70) + 1;\n            goto code_r0x00417a54;\n        }\n        if (0x10e < uVar12) {\n            uVar2 = *(uVar12 + 0x42c099);\n            var_4h = *(uVar12 + 0x42c0b5) + 3;\n            if (uVar2 != 0) {\n                uVar12 = fcn.00409721();\n                var_4h = var_4h + (uVar12 >> (0x10 - uVar2 & 0x1f));\n                uVar12 = *(in_ECX + 8) + uVar2;\n                *piVar1 = *piVar1 + (uVar12 >> 3);\n                *(in_ECX + 8) = uVar12 & 7;\n            }\n            uVar12 = fcn.00409721();\n            iVar14 = *(in_ECX + 0x1004);\n            uVar12 = uVar12 & 0xfffe;\n            if (uVar12 < *(in_ECX + 0xf84 + iVar14 * 4)) {\n                uVar12 = uVar12 >> (0x10U - iVar14 & 0x1f);\n                uVar7 = *(uVar12 + 0x1008 + in_ECX) + *(in_ECX + 8);\n                *piVar1 = *piVar1 + (uVar7 >> 3);\n                *(in_ECX + 8) = uVar7 & 7;\n                uVar3 = *(in_ECX + 0x1408 + uVar12 * 2);\n            }\n            else {\n                uVar7 = iVar14 + 1;\n                uVar9 = 0xf;\n                if (uVar7 < 0xf) {\n                    puVar8 = in_ECX + 0xf84 + uVar7 * 4;\n                    do {\n                        uVar9 = uVar7;\n                        if (uVar12 < *puVar8) break;\n                        uVar7 = uVar7 + 1;\n                        puVar8 = puVar8 + 1;\n                        uVar9 = 0xf;\n                    } while (uVar7 < 0xf);\n                }\n                uVar7 = *(in_ECX + 8) + uVar9;\n                *(in_ECX + 8) = uVar7 & 7;\n                *piVar1 = *piVar1 + (uVar7 >> 3);\n                uVar12 = (uVar12 - *(in_ECX + 0xf80 + uVar9 * 4) >> (0x10U - uVar9 & 0x1f)) +\n                         *(in_ECX + 0xfc4 + uVar9 * 4);\n                if (*(in_ECX + 0xf80) <= uVar12) {\n                    uVar12 = 0;\n                }\n                uVar3 = *(in_ECX + 0x1c08 + uVar12 * 2);\n            }\n            uVar7 = uVar3;\n            uVar2 = *(uVar7 + 0x44b858);\n            uVar12 = uVar2;\n            uVar9 = *(uVar7 * 4 + 0x44b898) + 1;\n            if (uVar12 != 0) {\n                if (uVar7 < 10) {\n                    uVar7 = fcn.00409721();\n                    uVar9 = uVar9 + (uVar7 >> (0x10 - uVar2 & 0x1f));\n                    uVar12 = *(in_ECX + 8) + uVar12;\n                    *piVar1 = *piVar1 + (uVar12 >> 3);\n                    *(in_ECX + 8) = uVar12 & 7;\n                }\n                else {\n                    if (4 < uVar12) {\n                        uVar7 = fcn.00409721();\n                        uVar12 = *(in_ECX + 8) + -4 + uVar12;\n                        *piVar1 = *piVar1 + (uVar12 >> 3);\n                        uVar9 = uVar9 + (uVar7 >> (0x14 - uVar2 & 0x1f)) * 0x10;\n                        *(in_ECX + 8) = uVar12 & 7;\n                    }\n                    if (*(in_ECX + 0x98cc) < 1) {\n                        uVar12 = fcn.00409721();\n                        iVar14 = *(in_ECX + 0x1ef0);\n                        uVar12 = uVar12 & 0xfffe;\n                        if (uVar12 < *(in_ECX + 0x1e70 + iVar14 * 4)) {\n                            uVar12 = uVar12 >> (0x10U - iVar14 & 0x1f);\n                            uVar7 = *(uVar12 + 0x1ef4 + in_ECX) + *(in_ECX + 8);\n                            *piVar1 = *piVar1 + (uVar7 >> 3);\n                            *(in_ECX + 8) = uVar7 & 7;\n                            uVar3 = *(in_ECX + 0x22f4 + uVar12 * 2);\n                        }\n                        else {\n                            uVar10 = iVar14 + 1;\n                            arg_8h = 0xf;\n                            uVar7 = arg_8h;\n                            if (uVar10 < 0xf) {\n                                puVar8 = in_ECX + 0x1e70 + uVar10 * 4;\n                                do {\n                                    uVar7 = uVar10;\n                                    if (uVar12 < *puVar8) break;\n                                    uVar10 = uVar10 + 1;\n                                    puVar8 = puVar8 + 1;\n                                    uVar7 = arg_8h;\n                                } while (uVar10 < 0xf);\n                            }\n                            arg_8h = uVar7;\n                            uVar7 = *(in_ECX + 8) + arg_8h;\n                            *piVar1 = *piVar1 + (uVar7 >> 3);\n                            *(in_ECX + 8) = uVar7 & 7;\n                            uVar12 = (uVar12 - *(in_ECX + 0x1e6c + arg_8h * 4) >> (0x10U - arg_8h & 0x1f)) +\n                                     *(in_ECX + 0x1eb0 + arg_8h * 4);\n                            if (*(in_ECX + 0x1e6c) <= uVar12) {\n                                uVar12 = 0;\n                            }\n                            uVar3 = *(in_ECX + 0x2af4 + uVar12 * 2);\n                        }\n                        uVar12 = uVar3;\n                        if (uVar12 != 0x10) {\n                            uVar9 = uVar9 + uVar12;\n                            *(in_ECX + 0x98c8) = uVar12;\n                            goto code_r0x0041813b;\n                        }\n                        *(in_ECX + 0x98cc) = 0xf;\n                    }\n                    else {\n                        *(in_ECX + 0x98cc) = *(in_ECX + 0x98cc) + -1;\n                    }\n                    uVar9 = uVar9 + *(in_ECX + 0x98c8);\n                }\n            }\ncode_r0x0041813b:\n            uVar12 = var_4h;\n            if ((0x1fff < uVar9) && (uVar12 = var_4h + 1,  0x3ffff < uVar9)) {\n                uVar12 = var_4h + 2;\n            }\n            var_4h = uVar12;\n            uVar12 = *(in_ECX + 0x70);\n            *(in_ECX + 0x60) = *(in_ECX + 0x5c);\n            *(in_ECX + 0x5c) = *(in_ECX + 0x58);\n            *(in_ECX + 0x58) = *(in_ECX + 0x54);\n            *(in_ECX + 0x68) = var_4h;\n            arg_8h = var_4h;\n            uVar7 = uVar12 - uVar9;\n            uVar10 = *(in_ECX + 0xe6f4) - 0x1001;\n            *(in_ECX + 0x54) = uVar9;\n            if ((uVar10 <= uVar7) || (uVar10 <= uVar12)) {\n                if (var_4h != NULL) {\n                    uVar12 = *(in_ECX + 0xe6f8);\n                    do {\n                        arg_8h = arg_8h - 1;\n                        *(*(in_ECX + 0x4b34) + *(in_ECX + 0x70)) = *((uVar12 & uVar7) + *(in_ECX + 0x4b34));\n                        uVar12 = *(in_ECX + 0xe6f8);\n                        uVar7 = uVar7 + 1;\n                        *(in_ECX + 0x70) = *(in_ECX + 0x70) + 1U & uVar12;\n                    } while (arg_8h != 0);\n                }\n                goto code_r0x00417a54;\n            }\n            puVar13 = *(in_ECX + 0x4b34) + uVar7;\n            var_8h = *(in_ECX + 0x4b34) + uVar12;\n            *(in_ECX + 0x70) = uVar12 + var_4h;\n            if (uVar9 < var_4h) {\n                if (7 < var_4h) {\n                    var_ch = var_4h >> 3;\n                    do {\n                        arg_8h = arg_8h - 8;\n                        *var_8h = *puVar13;\n                        var_8h[1] = puVar13[1];\n                        var_8h[2] = puVar13[2];\n                        var_8h[3] = puVar13[3];\n                        var_8h[4] = puVar13[4];\n                        var_8h[5] = puVar13[5];\n                        var_8h[6] = puVar13[6];\n                        var_8h[7] = puVar13[7];\n                        puVar13 = puVar13 + 8;\n                        var_8h = var_8h + 8;\n                        var_ch = var_ch - 1;\n                    } while (var_ch != 0);\n                }\n            }\n            else if (7 < var_4h) {\n                var_ch = var_4h >> 3;\n                do {\n                    fcn.0041bb00(var_8h, puVar13, 8);\n                    var_8h = var_8h + 8;\n                    arg_8h = arg_8h - 8;\n                    puVar13 = puVar13 + 8;\n                    var_ch = var_ch - 1;\n                } while (var_ch != 0);\n            }\njoined_r0x0041822c:\n            if ((((arg_8h != 0) && (*var_8h = *puVar13,  1 < arg_8h)) && (var_8h[1] = puVar13[1],  2 < arg_8h)) &&\n               (((var_8h[2] = puVar13[2],  3 < arg_8h && (var_8h[3] = puVar13[3],  4 < arg_8h)) &&\n                ((var_8h[4] = puVar13[4],  5 < arg_8h && (var_8h[5] = puVar13[5],  6 < arg_8h)))))) {\n                var_8h[6] = puVar13[6];\n            }\n            goto code_r0x00417a54;\n        }\n        if (uVar12 != 0x100) {\n            if (uVar12 == 0x101) {\n                cVar5 = fcn.004177c8();\n                goto code_r0x00417b0a;\n            }\n            if (uVar12 == 0x102) {\n                arg_8h = *(in_ECX + 0x68);\n                if (arg_8h != 0) {\n                    uVar12 = *(in_ECX + 0x70);\n                    uVar7 = uVar12 - *(in_ECX + 0x54);\n                    uVar9 = *(in_ECX + 0xe6f4) - 0x1001;\n                    if ((uVar7 < uVar9) && (uVar12 < uVar9)) {\n                        puVar13 = *(in_ECX + 0x4b34) + uVar7;\n                        var_8h = *(in_ECX + 0x4b34) + uVar12;\n                        *(in_ECX + 0x70) = uVar12 + arg_8h;\n                        if (*(in_ECX + 0x54) < arg_8h) {\n                            if (7 < arg_8h) {\n                                uVar12 = arg_8h >> 3;\n                                do {\n                                    arg_8h = arg_8h - 8;\n                                    *var_8h = *puVar13;\n                                    var_8h[1] = puVar13[1];\n                                    var_8h[2] = puVar13[2];\n                                    var_8h[3] = puVar13[3];\n                                    var_8h[4] = puVar13[4];\n                                    var_8h[5] = puVar13[5];\n                                    var_8h[6] = puVar13[6];\n                                    var_8h[7] = puVar13[7];\n                                    puVar13 = puVar13 + 8;\n                                    var_8h = var_8h + 8;\n                                    uVar12 = uVar12 - 1;\n                                } while (uVar12 != 0);\n                            }\n                        }\n                        else if (7 < arg_8h) {\n                            var_ch = arg_8h >> 3;\n                            do {\n                                fcn.0041bb00(var_8h, puVar13, 8);\n                                var_8h = var_8h + 8;\n                                arg_8h = arg_8h - 8;\n                                puVar13 = puVar13 + 8;\n                                var_ch = var_ch - 1;\n                            } while (var_ch != 0);\n                        }\n                        goto joined_r0x0041822c;\n                    }\n                    if (arg_8h != 0) {\n                        uVar12 = *(in_ECX + 0xe6f8);\n                        do {\n                            arg_8h = arg_8h - 1;\n                            *(*(in_ECX + 0x4b34) + *(in_ECX + 0x70)) = *((uVar12 & uVar7) + *(in_ECX + 0x4b34));\n                            uVar12 = *(in_ECX + 0xe6f8);\n                            uVar7 = uVar7 + 1;\n                            *(in_ECX + 0x70) = *(in_ECX + 0x70) + 1U & uVar12;\n                        } while (arg_8h != 0);\n                    }\n                }\n            }\n            else if (uVar12 < 0x107) {\n                iVar14 = uVar12 - 0x103;\n                puVar8 = in_ECX + 0x54 + iVar14 * 4;\n                uVar12 = *puVar8;\n                for (; 0 < iVar14; iVar14 = iVar14 + -1) {\n                    *puVar8 = puVar8[-1];\n                    puVar8 = puVar8 + -1;\n                }\n                *(in_ECX + 0x54) = uVar12;\n                uVar7 = fcn.00409721();\n                iVar14 = *(in_ECX + 0x2ddc);\n                uVar7 = uVar7 & 0xfffe;\n                if (uVar7 < *(in_ECX + 0x2d5c + iVar14 * 4)) {\n                    uVar7 = uVar7 >> (0x10U - iVar14 & 0x1f);\n                    uVar9 = *(uVar7 + 0x2de0 + in_ECX) + *(in_ECX + 8);\n                    *piVar1 = *piVar1 + (uVar9 >> 3);\n                    *(in_ECX + 8) = uVar9 & 7;\n                    uVar3 = *(in_ECX + 0x31e0 + uVar7 * 2);\n                }\n                else {\n                    uVar10 = iVar14 + 1;\n                    uVar9 = 0xf;\n                    if (uVar10 < 0xf) {\n                        puVar8 = in_ECX + 0x2d5c + uVar10 * 4;\n                        do {\n                            uVar9 = uVar10;\n                            if (uVar7 < *puVar8) break;\n                            uVar10 = uVar10 + 1;\n                            puVar8 = puVar8 + 1;\n                            uVar9 = 0xf;\n                        } while (uVar10 < 0xf);\n                    }\n                    uVar10 = *(in_ECX + 8) + uVar9;\n                    *(in_ECX + 8) = uVar10 & 7;\n                    *piVar1 = *piVar1 + (uVar10 >> 3);\n                    uVar7 = (uVar7 - *(in_ECX + 0x2d58 + uVar9 * 4) >> (0x10U - uVar9 & 0x1f)) +\n                            *(in_ECX + 0x2d9c + uVar9 * 4);\n                    if (*(in_ECX + 0x2d58) <= uVar7) {\n                        uVar7 = 0;\n                    }\n                    uVar3 = *(in_ECX + 0x39e0 + uVar7 * 2);\n                }\n                uVar2 = *(uVar3 + 0x42c1a8);\n                arg_8h = *(uVar3 + 0x42c1c4) + 2;\n                if (uVar2 != 0) {\n                    uVar7 = fcn.00409721();\n                    arg_8h = arg_8h + (uVar7 >> (0x10 - uVar2 & 0x1f));\n                    uVar7 = *(in_ECX + 8) + uVar2;\n                    *piVar1 = *piVar1 + (uVar7 >> 3);\n                    *(in_ECX + 8) = uVar7 & 7;\n                }\n                uVar7 = *(in_ECX + 0x70);\n                uVar9 = uVar7 - uVar12;\n                uVar10 = *(in_ECX + 0xe6f4) - 0x1001;\n                *(in_ECX + 0x68) = arg_8h;\n                if ((uVar9 < uVar10) && (uVar7 < uVar10)) {\n                    puVar13 = *(in_ECX + 0x4b34) + uVar9;\n                    var_4h = *(in_ECX + 0x4b34) + uVar7;\n                    *(in_ECX + 0x70) = uVar7 + arg_8h;\n                    if (uVar12 < arg_8h) {\n                        if (7 < arg_8h) {\n                            uVar12 = arg_8h >> 3;\n                            do {\n                                arg_8h = arg_8h - 8;\n                                *var_4h = *puVar13;\n                                var_4h[1] = puVar13[1];\n                                var_4h[2] = puVar13[2];\n                                var_4h[3] = puVar13[3];\n                                var_4h[4] = puVar13[4];\n                                var_4h[5] = puVar13[5];\n                                var_4h[6] = puVar13[6];\n                                var_4h[7] = puVar13[7];\n                                puVar13 = puVar13 + 8;\n                                var_4h = var_4h + 8;\n                                uVar12 = uVar12 - 1;\n                            } while (uVar12 != 0);\n                        }\n                    }\n                    else if (7 < arg_8h) {\n                        var_ch = arg_8h >> 3;\n                        do {\n                            fcn.0041bb00(var_4h, puVar13, 8);\n                            var_4h = var_4h + 8;\n                            arg_8h = arg_8h - 8;\n                            puVar13 = puVar13 + 8;\n                            var_ch = var_ch - 1;\n                        } while (var_ch != 0);\n                    }\n                    if (((((arg_8h != 0) && (*var_4h = *puVar13,  1 < arg_8h)) && (var_4h[1] = puVar13[1],  2 < arg_8h))\n                        && ((var_4h[2] = puVar13[2],  3 < arg_8h && (var_4h[3] = puVar13[3],  4 < arg_8h)))) &&\n                       ((var_4h[4] = puVar13[4],  5 < arg_8h && (var_4h[5] = puVar13[5],  6 < arg_8h)))) {\n                        var_4h[6] = puVar13[6];\n                    }\n                }\n                else if (arg_8h != 0) {\n                    uVar12 = *(in_ECX + 0xe6f8);\n                    do {\n                        arg_8h = arg_8h - 1;\n                        *(*(in_ECX + 0x4b34) + *(in_ECX + 0x70)) = *((uVar12 & uVar9) + *(in_ECX + 0x4b34));\n                        uVar12 = *(in_ECX + 0xe6f8);\n                        uVar9 = uVar9 + 1;\n                        *(in_ECX + 0x70) = *(in_ECX + 0x70) + 1U & uVar12;\n                    } while (arg_8h != 0);\n                }\n            }\n            else if (uVar12 < 0x110) {\n                uVar2 = *(uVar12 + 0x42c091);\n                iVar14 = *(uVar12 + 0x42c099) + 1;\n                if (uVar2 != 0) {\n                    uVar12 = fcn.00409721();\n                    iVar14 = iVar14 + (uVar12 >> (0x10 - uVar2 & 0x1f));\n                    uVar12 = *(in_ECX + 8) + uVar2;\n                    *piVar1 = *piVar1 + (uVar12 >> 3);\n                    *(in_ECX + 8) = uVar12 & 7;\n                }\n                uVar12 = *(in_ECX + 0x70);\n                *(in_ECX + 0x60) = *(in_ECX + 0x5c);\n                *(in_ECX + 0x5c) = *(in_ECX + 0x58);\n                *(in_ECX + 0x58) = *(in_ECX + 0x54);\n                *(in_ECX + 0x68) = 2;\n                arg_8h = 2;\n                uVar7 = uVar12 - iVar14;\n                uVar9 = *(in_ECX + 0xe6f4) - 0x1001;\n                *(in_ECX + 0x54) = iVar14;\n                if ((uVar7 < uVar9) && (uVar12 < uVar9)) {\n                    puVar13 = uVar7 + *(in_ECX + 0x4b34);\n                    puVar11 = *(in_ECX + 0x4b34) + uVar12;\n                    *(in_ECX + 0x70) = uVar12 + 2;\n                    *puVar11 = *puVar13;\n                    puVar11[1] = puVar13[1];\n                }\n                else {\n                    uVar12 = *(in_ECX + 0xe6f8);\n                    do {\n                        arg_8h = arg_8h + -1;\n                        *(*(in_ECX + 0x4b34) + *(in_ECX + 0x70)) = *((uVar12 & uVar7) + *(in_ECX + 0x4b34));\n                        uVar12 = *(in_ECX + 0xe6f8);\n                        uVar7 = uVar7 + 1;\n                        *(in_ECX + 0x70) = *(in_ECX + 0x70) + 1U & uVar12;\n                    } while (arg_8h != 0);\n                }\n            }\n            goto code_r0x00417a54;\n        }\n        cVar5 = fcn.00414b48();\n    }\ncode_r0x00417b0a:\n    if (cVar5 == '\\0') {\ncode_r0x00418722:\n        fcn.00414bc1();\n        return;\n    }\n    goto code_r0x00417a54;\n}\n",
        "token_count": 9063
    },
    "00418730": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418730(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    if (arg_8h == 0) {\n        if (*(in_ECX + 0x1c) < 2) {\n            fcn.0041687c(arg_ch);\n        }\n        else {\n            fcn.004173d7(arg_ch);\n        }\n    }\n    else if (arg_8h == 0x1d) {\n        fcn.004179a9(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "00418773": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00418773(int32_t *arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    bool bVar6;\n    char cVar7;\n    ulong uVar8;\n    uchar auStackY8216 [4096];\n    uint var_1014h;\n    uint uStackY80;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    fcn.0041a360();\n    iVar2 = arg_8h[0x15bf];\n    iVar3 = arg_8h[0x15c7];\n    if (iVar3 == 3) {\n        var_4h = arg_8h + 0x1ec0;\ncode_r0x004187b8:\n        bVar6 = true;\n        if (*(var_4h + 0x1089) != '\\0') goto code_r0x004187c9;\n    }\n    else {\n        var_4h = arg_8h + 0x15f0;\n        if (iVar3 == 2) goto code_r0x004187b8;\n    }\n    bVar6 = false;\ncode_r0x004187c9:\n    if ((((arg_ch != 0) && (bVar6)) && ((arg_8h[0x288a] == 3 || ((0x13 < *(var_4h + 0x19) && (var_4h[0x419] != -1))))))\n       && (cVar7 = fcn.00409a7e(var_4h + 0x418, -(*(var_4h + 0x10ba) != '\\0') & var_4h + 0x10bbU),  cVar7 == '\\0')) {\n        fcn.0040c1b1();\n        fcn.0040e0c1();\n    }\n    (**(*arg_8h + 0xc))();\n    if (arg_ch != 0) {\n        puVar1 = arg_ch + 0x1888;\n        uVar8 = fcn.00408dac();\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 + uVar8;\n        *(arg_ch + 0x188c) = *(arg_ch + 0x188c) + (uVar8 >> 0x20) + CARRY4(uVar4, uVar8);\n    }\n    fcn.004089d9();\n    fcn.0041a09a(&fcn.00418773::var_1014h, arg_8h + 0x1e);\n    fcn.0040a58a();\n    bVar5 = false;\n    do {\n        cVar7 = fcn.004087a2(&fcn.00418773::var_1014h, 0);\n        if (cVar7 != '\\0') {\ncode_r0x00418917:\n            fcn.0040e231((arg_8h + 0x1eU & 0xffffff00 | arg_14h != 0x54) * 4 + 0x54, arg_8h + 0x1eU);\n            fcn.00401a18();\n            if (bVar6) {\n                fcn.004036d1();\n            }\n            else {\n                fcn.00403662();\n            }\n            if (arg_8h[0x15c7] == 2) {\n                fcn.00401b51();\n                uStackY80 = 0x4189d6;\n                (**(*arg_8h + 8))();\n            }\n            if (arg_ch != 0) {\n                if (iVar3 == 5) {\n                    *(arg_ch + 0x1857) = 0;\n                }\n                else {\n                    *(arg_ch + 0x1857) = *(var_4h + 0x1089);\n                    *(arg_ch + 0x20) = var_4h[0x412];\n                    *(arg_ch + 0x24) = var_4h[0x413];\n                }\n                uVar8 = fcn.00408dac();\n                *(arg_ch + 0x1878) = 0;\n                *(arg_ch + 0x187c) = 0;\n                *(arg_ch + 0x1860) = uVar8;\n                *(arg_ch + 0x1864) = uVar8 >> 0x20;\n                fcn.0040981a();\n            }\n            return 1;\n        }\n        if (arg_ch != 0) {\n            *(arg_ch + 0x1890) = 0;\n            *(arg_ch + 0x1894) = 0;\n        }\n        if (!bVar5) {\n            fcn.0041a09a(&stack0xffffdfe8, arg_8h + 0x1e);\n            fcn.0040a58a();\n            bVar5 = true;\n            cVar7 = fcn.004087a2(&stack0xffffdfe8, 0);\n            if (cVar7 != '\\0') {\n                uStackY80 = 0x41895e;\n                fcn.0041a09a(&fcn.00418773::var_1014h, &stack0xffffdfe8);\n                goto code_r0x00418917;\n            }\n        }\n        if ((*(iVar2 + 0x517c) != '\\0') || (cVar7 = fcn.00418762(),  cVar7 == '\\0')) {\n            fcn.0040c1b1();\n            fcn.0040e0c1();\n            fcn.004087a2(arg_8h + 0x1e, 0);\n            (**(*arg_8h + 8))();\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 1437
    },
    "00418b92": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418b92(int32_t *lpsz)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint rclsid;\n    int32_t *var_4h;\n    \n    (*_sym.imp.ole32.dll_CLSIDFromString)(lpsz, &rclsid);\n    piVar1 = in_ECX + 0x18;\n    (*_sym.imp.ole32.dll_CoCreateInstance)(&rclsid, 0, 5, 0x428148, piVar1);\n    if (*piVar1 != 0) {\n        iVar2 = (****piVar1)(*piVar1, 0x428108, &lpsz);\n        if (-1 < iVar2) {\n            (**(*lpsz + 0xc))(lpsz);\n            (**(*lpsz + 8))(lpsz);\n            iVar2 = (****piVar1)(*piVar1, 0x4280e8, &var_4h);\n            if (-1 < iVar2) {\n                (**(*var_4h + 0x20))(var_4h);\n                (**(*var_4h + 8))(var_4h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "00418d08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418d08(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 0x18) != 0) && (arg_8h != NULL)) {\n        iVar1 = (****(in_ECX + 0x18))(*(in_ECX + 0x18), 0x428108, &arg_8h);\n        if (-1 < iVar1) {\n            (**(*arg_8h + 0x2c))(arg_8h, 0xfffffffc, 0);\n            (**(*arg_8h + 8))(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "00418d54": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00418d54(int32_t param_1)\n\n{\n    if (*(param_1 + 0x18) == 0) {\n        return 0;\n    }\n    (**(**(param_1 + 0x18) + 4))(*(param_1 + 0x18));\n    return *(param_1 + 0x18);\n}\n",
        "token_count": 83
    },
    "00418ee4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00418ee4(int16_t *arg_8h)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int16_t *arg_8h_00;\n    int32_t iVar4;\n    int16_t *lpString1;\n    int16_t *piVar5;\n    uint var_8h;\n    int16_t *var_4h;\n    \n    iVar3 = fcn.0041a052(arg_8h);\n    arg_8h_00 = fcn.0041c8ee(iVar3 * 0xc + 0x200);\n    if (arg_8h_00 != NULL) {\n        fcn.0041a09a(arg_8h_00, L\"<style>body{font-family:\\\"Arial\\\";font-size:12;}</style>\");\n        iVar3 = fcn.0041a052(arg_8h_00);\n        iVar2 = *arg_8h;\n        lpString1 = arg_8h;\n        while (iVar2 != 0) {\n            iVar4 = fcn.004116c2(lpString1, L\"\\r\\n\\r\\n\", 4);\n            if (iVar4 == 0) {\n                if (lpString1[2] == 0xd) {\n                    var_4h = arg_8h_00 + iVar3;\n                    piVar5 = lpString1 + 2;\n                    do {\n                        if (lpString1[3] != 10) break;\n                        fcn.0041a09a(var_4h, L\"<br>\");\n                        var_4h = var_4h + 4;\n                        piVar1 = piVar5 + 2;\n                        iVar3 = iVar3 + 4;\n                        lpString1 = piVar5;\n                        piVar5 = piVar1;\n                    } while (*piVar1 == 0xd);\n                }\n                lpString1 = lpString1 + 1;\n            }\n            else if (((arg_8h < lpString1) && (*lpString1 == 0x20)) && (lpString1[-1] == 0x20)) {\n                fcn.0041a09a(arg_8h_00 + iVar3, 0x427eb0);\n                iVar3 = iVar3 + 6;\n            }\n            else {\n                arg_8h_00[iVar3] = *lpString1;\n                iVar3 = iVar3 + 1;\n            }\n            lpString1 = lpString1 + 1;\n            iVar2 = *lpString1;\n        }\n        arg_8h_00[iVar3] = 0;\n        fcn.00419d72(arg_8h);\n        arg_8h = arg_8h_00;\n    }\n    return arg_8h;\n}\n",
        "token_count": 621
    },
    "00419189": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419189(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    int32_t in_ECX;\n    uint var_ch;\n    int32_t *ppstm;\n    int16_t *var_4h;\n    \n    if (*(in_ECX + 0xc) != 0) {\n        ppstm = NULL;\n        cVar2 = fcn.00418eae(arg_8h);\n        iVar3 = fcn.0041a052(arg_8h);\n        iVar3 = fcn.0041c8ee(iVar3 * 2 + 0x200);\n        if (iVar3 != 0) {\n            fcn.0041a09a(iVar3, L\"<html>\");\n            fcn.0041a06c(iVar3, L\"<head><meta http-equiv=\\\"content-type\\\" content=\\\"text/html; charset=\");\n            fcn.0041a06c(iVar3, L\"utf-8\\\"></head>\");\n            iVar1 = *arg_8h;\n            var_4h = arg_8h;\n            while (iVar1 == 0x20) {\n                var_4h = var_4h + 1;\n                iVar1 = *var_4h;\n            }\n            iVar4 = fcn.004116c2(var_4h, L\"<html>\", 6);\n            if (iVar4 == 0) {\n                arg_8h = var_4h + 6;\n            }\n            fcn.0041a06c(iVar3, arg_8h);\n            if (iVar4 != 0) {\n                fcn.0041a06c(iVar3, L\"</html>\");\n            }\n            if (cVar2 == '\\0') {\n                iVar3 = fcn.00418ee4(iVar3);\n            }\n            iVar4 = fcn.0041a052(iVar3);\n            puVar5 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, iVar4 * 6 + 9);\n            if (puVar5 != NULL) {\n                iVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                  (0xfde9, 0, iVar3, 0xffffffff, puVar5 + 3, iVar4 * 6 + 6, 0, 0);\n                if (iVar4 == 0) {\n                    *puVar5 = 0;\n                }\n                else {\n                    *puVar5 = 0xef;\n                    puVar5[1] = 0xbb;\n                    puVar5[2] = 0xbf;\n                }\n            }\n            fcn.00419d72(iVar3);\n            iVar3 = (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(puVar5, 1, &ppstm);\n            if (-1 < iVar3) {\n                fcn.00418dd7(*(in_ECX + 0xc), ppstm);\n                (**(*ppstm + 8))(ppstm);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 693
    },
    "004192d2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.004192d2(int16_t *arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int16_t *piVar8;\n    int16_t *piVar9;\n    uint var_4h;\n    \n    iVar4 = fcn.0041a052(arg_8h);\n    piVar5 = fcn.0041c8ee(iVar4 * 2 + 2);\n    if (piVar5 != NULL) {\n        cVar2 = fcn.00418eae(arg_8h);\n        iVar3 = *arg_8h;\n        piVar9 = piVar5;\n        if (iVar3 != 0) {\n            do {\n                piVar8 = piVar9;\n                if (iVar3 != 0) goto code_r0x00419317;\n                do {\n                    do {\n                        iVar4 = fcn.004116c2(arg_8h, L\"</p>\", 4);\n                        if ((iVar4 == 0) || (iVar6 = fcn.004116c2(arg_8h, L\"<br>\", 4),  piVar9 = piVar8,  iVar6 == 0)) {\n                            *piVar8 = 0xd;\n                            piVar8[1] = 10;\n                            piVar9 = piVar8 + 2;\n                            if (iVar4 == 0) {\n                                *piVar9 = 0xd;\n                                piVar8[3] = 10;\n                                piVar9 = piVar8 + 4;\n                            }\n                        }\n                        *piVar9 = 0;\n                        iVar4 = fcn.004116c2(arg_8h, L\"<style>\", 7);\n                        if (iVar4 == 0) {\n                            piVar8 = arg_8h;\n                            if (*arg_8h == 0) {\n                                return piVar5;\n                            }\n                            do {\n                                iVar4 = fcn.004116c2(piVar8, L\"</style>\", 8);\n                                arg_8h = piVar8 + 1;\n                                if (iVar4 == 0) {\n                                    arg_8h = piVar8 + 8;\n                                    break;\n                                }\n                                piVar8 = arg_8h;\n                            } while (*arg_8h != 0);\n                        }\n                        else {\n                            for (; *arg_8h != 0; arg_8h = arg_8h + 1) {\n                                if (*arg_8h == 0x3e) goto code_r0x0041943c;\n                            }\n                            if (*arg_8h == 0x3e) {\ncode_r0x0041943c:\n                                arg_8h = arg_8h + 1;\n                            }\n                        }\n                        iVar3 = *arg_8h;\n                        if (iVar3 == 0) {\n                            return piVar5;\n                        }\ncode_r0x00419317:\n                        piVar8 = piVar9;\n                    } while (iVar3 == 0x3c);\n                    if ((cVar2 != '\\0') && ((iVar3 == 0xd || (iVar3 == 10)))) {\n                        if ((piVar9 != piVar5) && (piVar9[-1] == 0x20)) goto code_r0x0041938e;\n                        iVar3 = 0x20;\n                        goto code_r0x00419389;\n                    }\n                    bVar1 = false;\n                    if ((cVar2 != '\\0') && (iVar3 == 0x26)) {\n                        uVar7 = 0;\n                        do {\n                            iVar3 = *(uVar7 + arg_8h);\n                            if (iVar3 == 0) break;\n                            if (iVar3 == 0x3b) {\n                                arg_8h = uVar7 + arg_8h + 1;\n                                bVar1 = true;\n                            }\n                            uVar7 = uVar7 + 2;\n                        } while (uVar7 < 0x28);\n                        if (bVar1) goto code_r0x00419390;\n                    }\n                    iVar3 = *arg_8h;\n                } while (iVar3 == 0);\n                if (((iVar3 != 0x20) || (piVar9 == piVar5)) || (piVar9[-1] != 0x20)) {\ncode_r0x00419389:\n                    *piVar9 = iVar3;\n                    piVar9 = piVar9 + 1;\n                }\ncode_r0x0041938e:\n                arg_8h = arg_8h + 1;\ncode_r0x00419390:\n                iVar3 = *arg_8h;\n            } while( true );\n        }\n    }\n    return piVar5;\n}\n",
        "token_count": 1076
    },
    "00419454": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419454(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x14) == 0) && (*(param_1 + 0x20) == '\\0')) {\n        fcn.00419189(*(param_1 + 0x10));\n    }\n    *(param_1 + 0x20) = 1;\n    if (*(param_1 + 0x21) != '\\0') {\n        fcn.00418d08(1);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "00419a57": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00419a57(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x419b02;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.00419b2e;\n        uStack36 = *0x42c2a0 ^ &fcn.00419a57::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00419a57::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0041e2e1();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.00419a57::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 728
    },
    "0041bf0e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bf0e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        fcn.0041be65(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0041c01c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c01c(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) == 0) {\n        fcn.0041be65(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), *(unaff_EBP + 0x18));\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "00419d72": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00419d72(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0041f3cc(0x42a5f0, 0xc);\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        if (*0x44d5d8 == 3) {\n            fcn.0041e8d3(4);\n            *(unaff_EBP + -4) = 0;\n            arg_8h_00 = fcn.0041e906(iVar1);\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 != 0) {\n                fcn.0041e936(arg_8h_00, iVar1);\n            }\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.00419dc8();\n            if (*(unaff_EBP + -0x1c) != 0) goto code_r0x00419dfa;\n            iVar1 = *(unaff_EBP + 8);\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x44b9d8, 0, iVar1);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0041e6de();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0041e69c(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\ncode_r0x00419dfa:\n    fcn.0041f411();\n    return;\n}\n",
        "token_count": 439
    },
    "0041d135": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d135(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.00419d72(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0041d510": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041d510(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041e2e1();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0041e2e1();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "0041d7d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d7d8(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00419c95(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0041e2e1();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0041e2e1();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00419c6e(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0041d570(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 389
    },
    "0041e00b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e00b(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x42c2a0) {\n        return;\n    }\n    *0x44c108 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x44c10c = &arg_8h;\n    *0x44c048 = 0x10001;\n    *0x44bff0 = 0xc0000409;\n    *0x44bff4 = 1;\n    var_328h = *0x42c2a0;\n    var_324h = *0x42c2a4;\n    *0x44bffc = unaff_retaddr;\n    *0x44c0d4 = in_GS;\n    *0x44c0d8 = in_FS;\n    *0x44c0dc = in_ES;\n    *0x44c0e0 = in_DS;\n    *0x44c0e4 = unaff_EDI;\n    *0x44c0e8 = unaff_ESI;\n    *0x44c0ec = unaff_EBX;\n    *0x44c0f0 = in_EDX;\n    *0x44c0f4 = in_ECX;\n    *0x44c0f8 = in_EAX;\n    *0x44c0fc = unaff_EBP;\n    *0x44c100 = unaff_retaddr;\n    *0x44c104 = in_CS;\n    *0x44c110 = in_SS;\n    *0x44c040 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00423bb9(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x428998);\n    if (*0x44c040 == 0) {\n        fcn.00423bb9(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 852
    },
    "00420af9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00420bec: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00420bf1)\n// WARNING: Removing unreachable block (ram,0x00420c1f)\n// WARNING: Removing unreachable block (ram,0x00420bf7)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00420af9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0041f3cc(0x42a928, 0x18);\n    fcn.0041e8d3(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x44bb74 != 1) {\n        *0x44bb70 = 1;\n        *0x44bb6c = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.0041e095(*0x44d5ac);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.0041e095(*0x44d5a8);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.0041e08c();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.0041e095(*piVar2);\n                        iVar3 = fcn.0041e08c();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.0041e095(*0x44d5ac);\n                        piVar1 = fcn.0041e095(*0x44d5a8);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.00420a33(0x4273d8);\n        }\n        fcn.00420a33(0x4273e0);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0041e7f9(8);\n    }\n    return;\n}\n",
        "token_count": 814
    },
    "00424239": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00424239(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0041e7f9(0);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "004244c5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004244c5(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0041e08c();\n    var_4h = 0;\n    if (*0x44c380 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxA\");\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x44c380 = fcn.0041e01a(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, \"GetActiveWindow\");\n        *0x44c384 = fcn.0041e01a(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetLastActivePopup\");\n        *0x44c388 = fcn.0041e01a(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetUserObjectInformationA\");\n        *0x44c390 = fcn.0041e01a(uVar3);\n        if (*0x44c390 != 0) {\n            uVar3 = (*pcVar4)(iVar2, \"GetProcessWindowStation\");\n            *0x44c38c = fcn.0041e01a(uVar3);\n        }\n    }\n    if ((*0x44c38c != iVar1) && (*0x44c390 != iVar1)) {\n        pcVar4 = fcn.0041e095(*0x44c38c);\n        pcVar5 = fcn.0041e095(*0x44c390);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x00424607;\n        }\n    }\n    if ((((*0x44c384 != iVar1) && (pcVar4 = fcn.0041e095(*0x44c384),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x44c388 != iVar1 && (pcVar4 = fcn.0041e095(*0x44c388),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x00424607:\n    pcVar4 = fcn.0041e095(*0x44c380);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 828
    },
    "0041238a": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041238a(int16_t *param_1)\n\n{\n    char *pcVar1;\n    uint8_t uVar2;\n    \n    uVar2 = *(param_1 + 1);\n    if (uVar2 < 7) {\n        pcVar1 = param_1 + 3;\n        *pcVar1 = *pcVar1 + -1;\n        if (*pcVar1 == '\\0') {\n            *param_1 = *param_1 << 1;\n            *(param_1 + 1) = uVar2 + 1;\n            *(param_1 + 3) = '\\x03' << (uVar2 & 0x1f);\n        }\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "004178d8": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n\nuint32_t fcn.004178d8(void)\n\n{\n    int32_t arg_8h;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint extraout_ECX;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    int32_t arg_10h;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    uVar1 = fcn.0041367d();\n    *(unaff_EBP + -0x14) = uVar1;\n    if (uVar1 != 0xffffffff) {\n        arg_10h = (uVar1 & 7) + 1;\n        if (arg_10h == 7) {\n            uVar1 = fcn.0041367d();\n            if (uVar1 != 0xffffffff) {\n                arg_10h = uVar1 + 7;\ncode_r0x00417940:\n                fcn.004012e7(arg_10h);\n                arg_8h = *(unaff_EBP + -0x24);\n                iVar3 = 0;\n                *(unaff_EBP + -4) = 0;\n                if (0 < arg_10h) {\n                    do {\n                        uVar1 = fcn.0041367d();\n                        if (uVar1 == 0xffffffff) {\n                            if (arg_8h != 0) {\n                                uVar1 = fcn.00419d72(arg_8h);\n                            }\n                            goto code_r0x004178fe;\n                        }\n                        *(arg_8h + iVar3) = uVar1;\n                        iVar3 = iVar3 + 1;\n                    } while (iVar3 < arg_10h);\n                }\n                uVar2 = fcn.004163de(*(unaff_EBP + -0x14), arg_8h, arg_10h);\n                uVar1 = uVar2;\n                if (arg_8h != 0) {\n                    uVar1 = fcn.00419d72(arg_8h);\n                }\n                uVar1 = uVar1 & 0xffffff00 | uVar2 & 0xff;\n                goto code_r0x00417986;\n            }\n        }\n        else {\n            if (arg_10h != 8) goto code_r0x00417940;\n            uVar2 = fcn.0041367d();\n            uVar1 = uVar2;\n            if (uVar2 != 0xffffffff) {\n                uVar1 = fcn.0041367d();\n                if (uVar1 != 0xffffffff) {\n                    arg_10h = uVar2 * 0x100 + uVar1;\n                    goto code_r0x00417940;\n                }\n            }\n        }\n    }\ncode_r0x004178fe:\n    uVar1 = uVar1 & 0xffffff00;\ncode_r0x00417986:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar1;\n}\n",
        "token_count": 725
    },
    "00401106": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401106(int32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    param_1[1] = param_1[1] + param_2;\n    uVar1 = param_1[1];\n    if (param_1[2] <= uVar1 && uVar1 != param_1[2]) {\n        uVar3 = param_1[3];\n        if ((uVar3 != 0) && (uVar3 < uVar1)) {\n            fcn.00406409(0x42f76c, L\"Maximum allowed array size (%u) is exceeded\", uVar3);\n            fcn.00406320();\n        }\n        uVar1 = (param_1[2] >> 2) + 0x20 + param_1[2];\n        uVar3 = param_1[1];\n        if (param_1[1] <= uVar1) {\n            uVar3 = uVar1;\n        }\n        iVar2 = fcn.00419e00(*param_1, uVar3);\n        if (iVar2 == 0) {\n            fcn.00406320();\n        }\n        *param_1 = iVar2;\n        param_1[2] = uVar3;\n    }\n    return;\n}\n",
        "token_count": 311
    },
    "004011be": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004011be(int32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    param_1[1] = param_1[1] + param_2;\n    uVar1 = param_1[1];\n    if (param_1[2] <= uVar1 && uVar1 != param_1[2]) {\n        uVar3 = param_1[3];\n        if ((uVar3 != 0) && (uVar3 < uVar1)) {\n            fcn.00406409(0x42f76c, L\"Maximum allowed array size (%u) is exceeded\", uVar3);\n            fcn.00406320();\n        }\n        uVar1 = (param_1[2] >> 2) + 0x20 + param_1[2];\n        uVar3 = param_1[1];\n        if (param_1[1] <= uVar1) {\n            uVar3 = uVar1;\n        }\n        iVar2 = fcn.00419e00(*param_1, uVar3 * 2);\n        if (iVar2 == 0) {\n            fcn.00406320();\n        }\n        param_1[2] = uVar3;\n        *param_1 = iVar2;\n    }\n    return;\n}\n",
        "token_count": 314
    },
    "0040aa23": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint32_t fcn.0040aa23(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar1 = fcn.00409766();\n    uVar2 = uVar1 & 0xc000;\n    if (uVar2 == 0) {\n        fcn.0040974f(6);\n        uVar1 = uVar1 >> 10 & 0xf;\n    }\n    else {\n        if (uVar2 == 0x4000) {\n            if ((uVar1 & 0x3c00) == 0) {\n                uVar1 = uVar1 >> 2 | 0xffffff00;\n                uVar4 = 0xe;\n            }\n            else {\n                uVar1 = uVar1 >> 6 & 0xff;\n                uVar4 = 10;\n            }\n        }\n        else {\n            if (uVar2 == 0x8000) {\n                fcn.0040974f(2);\n                uVar1 = fcn.00409766();\n            }\n            else {\n                fcn.0040974f(2);\n                iVar3 = fcn.00409766();\n                fcn.0040974f(0x10);\n                uVar1 = fcn.00409766();\n                uVar1 = iVar3 << 0x10 | uVar1;\n            }\n            uVar4 = 0x10;\n        }\n        fcn.0040974f(uVar4);\n    }\n    return uVar1;\n}\n",
        "token_count": 349
    },
    "0040ab86": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040ab86(int32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    param_1[1] = param_1[1] + param_2;\n    uVar1 = param_1[1];\n    if (param_1[2] <= uVar1 && uVar1 != param_1[2]) {\n        uVar3 = param_1[3];\n        if ((uVar3 != 0) && (uVar3 < uVar1)) {\n            fcn.00406409(0x42f76c, L\"Maximum allowed array size (%u) is exceeded\", uVar3);\n            fcn.00406320();\n        }\n        uVar1 = (param_1[2] >> 2) + 0x20 + param_1[2];\n        uVar3 = param_1[1];\n        if (param_1[1] <= uVar1) {\n            uVar3 = uVar1;\n        }\n        iVar2 = fcn.00419e00(*param_1, uVar3 * 0x28);\n        if (iVar2 == 0) {\n            fcn.00406320();\n        }\n        *param_1 = iVar2;\n        param_1[2] = uVar3;\n    }\n    return;\n}\n",
        "token_count": 317
    },
    "00410803": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410803(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    int64_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = arg_8h + 0x2c;\n    *(arg_8h + 0x28) = iVar1;\n    iVar5 = fcn.0041a440(*(arg_8h + 0x20), *(arg_8h + 0x24), 8, 0);\n    uVar3 = *(arg_8h + 0x20) & 0x3f;\n    *(uVar3 + 0x2c + arg_8h) = 0x80;\n    while (uVar3 + 1 != 0x38) {\n        uVar3 = uVar3 + 1 & 0x3f;\n        if (uVar3 == 0) {\n            fcn.004104ce();\n        }\n        *(iVar1 + uVar3) = 0;\n    }\n    puVar4 = uVar3 + 0x2d + arg_8h;\n    iVar2 = 8;\n    do {\n        *puVar4 = iVar5 >> 0x38;\n        iVar5 = iVar5 << 8;\n        puVar4 = puVar4 + 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    fcn.004104ce();\n    uVar3 = 0;\n    do {\n        *(uVar3 + arg_ch) = *(arg_8h + (uVar3 & 0xfffffffc)) >> (('\\x03' - (uVar3 & 3)) * '\\b' & 0x1f);\n        uVar3 = uVar3 + 1;\n    } while (uVar3 < 0x20);\n    fcn.00410488(arg_8h);\n    fcn.004104ce();\n    fcn.0040ccb3(iVar1, 0x40);\n    return;\n}\n",
        "token_count": 485
    },
    "00412212": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00412212(int32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    param_1[1] = param_1[1] + param_2;\n    uVar1 = param_1[1];\n    if (param_1[2] <= uVar1 && uVar1 != param_1[2]) {\n        uVar3 = param_1[3];\n        if ((uVar3 != 0) && (uVar3 < uVar1)) {\n            fcn.00406409(0x42f76c, L\"Maximum allowed array size (%u) is exceeded\", uVar3);\n            fcn.00406320();\n        }\n        uVar1 = (param_1[2] >> 2) + 0x20 + param_1[2];\n        uVar3 = param_1[1];\n        if (param_1[1] <= uVar1) {\n            uVar3 = uVar1;\n        }\n        iVar2 = fcn.00419e00(*param_1, uVar3 << 2);\n        if (iVar2 == 0) {\n            fcn.00406320();\n        }\n        param_1[2] = uVar3;\n        *param_1 = iVar2;\n    }\n    return;\n}\n",
        "token_count": 314
    },
    "004122b5": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004122b5(int32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    param_1[1] = param_1[1] + param_2;\n    uVar1 = param_1[1];\n    if (param_1[2] <= uVar1 && uVar1 != param_1[2]) {\n        uVar3 = param_1[3];\n        if ((uVar3 != 0) && (uVar3 < uVar1)) {\n            fcn.00406409(0x42f76c, L\"Maximum allowed array size (%u) is exceeded\", uVar3);\n            fcn.00406320();\n        }\n        uVar1 = (param_1[2] >> 2) + 0x20 + param_1[2];\n        uVar3 = param_1[1];\n        if (param_1[1] <= uVar1) {\n            uVar3 = uVar1;\n        }\n        iVar2 = fcn.00419e00(*param_1, uVar3 * 0x18);\n        if (iVar2 == 0) {\n            fcn.00406320();\n        }\n        *param_1 = iVar2;\n        param_1[2] = uVar3;\n    }\n    return;\n}\n",
        "token_count": 317
    },
    "00405510": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00405510(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar1 = 0;\n    if (*(param_1 + 4) == 0) {\n        do {\n            iVar3 = 8;\n            uVar2 = uVar1;\n            do {\n                if ((uVar2 & 1) == 0) {\n                    uVar2 = uVar2 >> 1;\n                }\n                else {\n                    uVar2 = uVar2 >> 1 ^ 0xedb88320;\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            *(param_1 + uVar1 * 4) = uVar2;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < 0x100);\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "0040605a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0040605a(uint arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint arg_18h, uint noname_5, uint arg_20h)\n\n{\n    uint32_t in_EAX;\n    \n    if (arg_ch == 0x30) {\n        in_EAX = fcn.0040ba05(arg_8h);\n    }\n    else if (arg_ch == 0x110) {\n        in_EAX = fcn.0040bf4e(arg_8h, arg_18h, arg_20h & 1);\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 154
    },
    "004088df": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nbool __cdecl fcn.004088df(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t extraout_ECX;\n    uint var_1004h;\n    uint uStackY88;\n    uint *puStackY84;\n    int32_t iStackY80;\n    uint32_t uStackY76;\n    uint uStackY72;\n    uint uStackY68;\n    uint uStackY64;\n    uint uStackY60;\n    uint var_4h;\n    \n    fcn.0041a360();\n    if (((arg_ch & 8) == 0) && (*(extraout_ECX + 0x1c) == '\\0')) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    *(extraout_ECX + 0x18) = arg_ch;\n    pcVar2 = _sym.imp.KERNEL32.dll_CreateFileW;\n    iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n    *(extraout_ECX + 4) = iVar4;\n    if (iVar4 == -1) {\n        uStackY60 = 0x40895e;\n        cVar3 = fcn.0040a778(arg_8h, &fcn.004088df::var_1004h, 0x800);\n        if (cVar3 != '\\0') {\n            uStackY60 = 0;\n            uStackY64 = 0;\n            uStackY68 = 2;\n            uStackY72 = 0;\n            puStackY84 = &fcn.004088df::var_1004h;\n            uStackY88 = 0x408976;\n            iStackY80 = (((arg_ch >> 1 & 1) == 0) - 1 & 0x80000000) + 0xc0000000;\n            uStackY76 = uVar1;\n            uVar5 = (*pcVar2)();\n            *(extraout_ECX + 4) = uVar5;\n        }\n    }\n    *(extraout_ECX + 0x12) = 1;\n    *(extraout_ECX + 0xc) = 0;\n    *(extraout_ECX + 0x10) = 0;\n    uStackY60 = 0x408994;\n    fcn.00410976();\n    return *(extraout_ECX + 4) != -1;\n}\n",
        "token_count": 581
    },
    "00408fdd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t fcn.00408fdd(uint32_t param_1)\n\n{\n    return param_1 >> 10 & 1;\n}\n",
        "token_count": 32
    },
    "00410c58": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00410c64)\n\nuint32_t fcn.00410c58(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = cpuid_Version_info(1);\n    if ((*(iVar1 + 0xc) & 0x80000) == 0) {\n        if ((*(iVar1 + 0xc) & 0x200) == 0) {\n            if ((*(iVar1 + 8) & 0x4000000) == 0) {\n                return *(iVar1 + 8) >> 0x19 & 1;\n            }\n            uVar2 = 2;\n        }\n        else {\n            uVar2 = 3;\n        }\n    }\n    else {\n        uVar2 = 4;\n    }\n    return uVar2;\n}\n",
        "token_count": 211
    },
    "00413631": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00413631(uint *param_1, uint8_t param_2)\n\n{\n    uint *puVar1;\n    \n    if ((param_2 & 2) == 0) {\n        fcn.004123c1();\n        puVar1 = param_1;\n        if ((param_2 & 1) != 0) {\n            fcn.00419d67(param_1);\n        }\n    }\n    else {\n        puVar1 = param_1 + -1;\n        fcn.0041bec3(param_1, 0x4ae4, *puVar1, fcn.004123c1);\n        if ((param_2 & 1) != 0) {\n            fcn.0041c35e(puVar1);\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 185
    },
    "00414ba2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00414ba2(uint param_1, uint8_t param_2)\n\n{\n    fcn.004136aa();\n    if ((param_2 & 1) != 0) {\n        fcn.00419d67(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 69
    },
    "0041a13a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a13a(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_ch;\n    \n    do {\n        iVar2 = fcn.0041c8ee(arg_8h);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.0041f5cb(arg_8h);\n    } while (iVar2 != 0);\n    if ((*0x44b9a8 & 1) == 0) {\n        *0x44b9a8 = *0x44b9a8 | 1;\n        fcn.0041198d();\n        fcn.0041c15b(0x42616a);\n    }\n    fcn.00411e40(0x44b99c);\n    fcn.0041c172(&var_ch, 0x42a498);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 224
    },
    "004239fe": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004239fe(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0041f3cc(0x42aa48, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0041e6f1();\n        *puVar2 = 0;\n        puVar2 = fcn.0041e6de();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x44c468)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x44c480;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00425034(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0041e6de();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0041e6f1();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.004232cb(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00423ad0(0x42aa48);\n                goto code_r0x00423aca;\n            }\n        }\n        puVar2 = fcn.0041e6f1();\n        *puVar2 = 0;\n        puVar2 = fcn.0041e6de();\n        *puVar2 = 9;\n        fcn.0041fa33(0, 0, 0, 0, 0);\n    }\ncode_r0x00423aca:\n    fcn.0041f411();\n    return;\n}\n",
        "token_count": 637
    },
    "004112aa": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint32_t fcn.004112aa(void)\n\n{\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    \n    fcn.00411159(&var_24h);\n    return (((((var_24h + -0x3c) * 0x10 | var_20h) << 5 | var_1ch) << 5 | var_18h) << 6 | var_14h) << 5 | var_10h >> 1;\n}\n",
        "token_count": 147
    },
    "004036d1": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004036d1(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    iVar1 = fcn.00403662();\n    while( true ) {\n        if ((iVar1 == 0) || ((param_2 != 5 && (*(param_1 + 0x571c) == 5)))) {\n            return 0;\n        }\n        uVar2 = uVar2 + 1;\n        if ((uVar2 & 0x7f) == 0) {\n            fcn.00410bc4();\n        }\n        if (*(param_1 + 0x571c) == param_2) break;\n        fcn.004010c0();\n        iVar1 = fcn.00403662();\n    }\n    return iVar1;\n}\n",
        "token_count": 200
    },
    "00405593": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405593(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    for (; (arg_10h != 0 && ((arg_ch & 7) != 0)); arg_ch = arg_ch + 1) {\n        arg_10h = arg_10h - 1;\n    }\n    if (7 < arg_10h) {\n        arg_8h = arg_10h >> 3;\n        do {\n            arg_10h = arg_10h - 8;\n            arg_8h = arg_8h - 1;\n        } while (arg_8h != 0);\n    }\n    for (; arg_10h != 0; arg_10h = arg_10h - 1) {\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "0040974f": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040974f(int32_t *param_1, int32_t param_2)\n\n{\n    *param_1 = *param_1 + (param_1[1] + param_2 >> 3);\n    param_1[1] = param_1[1] + param_2 & 7;\n    return;\n}\n",
        "token_count": 80
    },
    "004102e3": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004102e3(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar2 = *(arg_8h + 0x14) + arg_10h * 8;\n    uVar1 = *(arg_8h + 0x14) >> 3 & 0x3f;\n    *(arg_8h + 0x14) = uVar2;\n    if (uVar2 < arg_10h * 8) {\n        *(arg_8h + 0x18) = *(arg_8h + 0x18) + 1;\n    }\n    *(arg_8h + 0x18) = *(arg_8h + 0x18) + (arg_10h >> 0x1d);\n    if (uVar1 + arg_10h < 0x40) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = -uVar1 + 0x40;\n        fcn.0041bb00(uVar1 + 0x1c + arg_8h, arg_ch, uVar2);\n        fcn.0040ff52(arg_8h, arg_8h + 0x5c, arg_8h + 0x1c, arg_14h);\n        for (uVar1 = -uVar1 + 0x7f; uVar1 < arg_10h; uVar1 = uVar1 + 0x40) {\n            fcn.0040ff52(arg_8h, arg_8h + 0x5c, arg_ch + -0x3f + uVar1, arg_14h);\n            uVar2 = uVar2 + 0x40;\n        }\n        uVar1 = 0;\n    }\n    if (uVar2 < arg_10h) {\n        fcn.0041bb00(uVar1 + 0x1c + arg_8h, uVar2 + arg_ch, arg_10h - uVar2);\n    }\n    return;\n}\n",
        "token_count": 491
    },
    "004104ce": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.004104ce(void)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t *unaff_ESI;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint32_t var_ech;\n    uint var_e8h;\n    uint32_t auStack232 [48];\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if (unaff_ESI == NULL) {\n        fcn.0040ccb3(&var_24h, 0x20);\n        fcn.0040ccb3(&var_124h, 0x100);\n        return;\n    }\n    var_124h = fcn.0041cc41(*unaff_ESI[10]);\n    var_120h = fcn.0041cc41(*(unaff_ESI[10] + 4));\n    var_11ch = fcn.0041cc41(*(unaff_ESI[10] + 8));\n    var_118h = fcn.0041cc41(*(unaff_ESI[10] + 0xc));\n    var_114h = fcn.0041cc41(*(unaff_ESI[10] + 0x10));\n    var_110h = fcn.0041cc41(*(unaff_ESI[10] + 0x14));\n    var_10ch = fcn.0041cc41(*(unaff_ESI[10] + 0x18));\n    var_108h = fcn.0041cc41(*(unaff_ESI[10] + 0x1c));\n    var_104h = fcn.0041cc41(*(unaff_ESI[10] + 0x20));\n    var_100h = fcn.0041cc41(*(unaff_ESI[10] + 0x24));\n    var_fch = fcn.0041cc41(*(unaff_ESI[10] + 0x28));\n    var_f8h = fcn.0041cc41(*(unaff_ESI[10] + 0x2c));\n    var_f4h = fcn.0041cc41(*(unaff_ESI[10] + 0x30));\n    var_f0h = fcn.0041cc41(*(unaff_ESI[10] + 0x34));\n    var_ech = fcn.0041cc41(*(unaff_ESI[10] + 0x38));\n    var_e8h = fcn.0041cc41(*(unaff_ESI[10] + 0x3c));\n    var_4h = 0x30;\n    puVar7 = &var_ech;\n    do {\n        uVar2 = puVar7[-0xd];\n        uVar3 = *puVar7;\n        iVar8 = var_4h + -1;\n        var_4h = iVar8;\n        puVar7[2] = ((uVar2 << 0xe | uVar2 >> 0x12) ^ (uVar2 >> 7 | uVar2 << 0x19) ^ uVar2 >> 3) +\n                    ((uVar3 << 0xf | uVar3 >> 0x11) ^ (uVar3 << 0xd | uVar3 >> 0x13) ^ uVar3 >> 10) + puVar7[-0xe] +\n                    puVar7[-5];\n        puVar7 = puVar7 + 1;\n    } while (iVar8 != 0);\n    var_4h = 0;\n    var_20h = unaff_ESI[1];\n    var_1ch = unaff_ESI[2];\n    var_18h = unaff_ESI[3];\n    var_10h = unaff_ESI[5];\n    var_ch = unaff_ESI[6];\n    var_24h = *unaff_ESI;\n    var_8h = unaff_ESI[7];\n    uVar2 = unaff_ESI[4];\n    do {\n        uVar11 = var_24h;\n        uVar9 = uVar2;\n        uVar2 = var_4h;\n        uVar6 = var_ch;\n        uVar5 = var_10h;\n        uVar4 = var_1ch;\n        uVar3 = var_20h;\n        piVar1 = var_4h + 0x427bd8;\n        var_4h = var_4h + 4;\n        iVar8 = ((uVar9 >> 0xb | uVar9 << 0x15) ^ (uVar9 << 7 | uVar9 >> 0x19) ^ (uVar9 >> 6 | uVar9 << 0x1a)) +\n                (~uVar9 & var_ch ^ var_10h & uVar9) + *piVar1 + *(&var_124h + uVar2) + var_8h;\n        var_8h = var_ch;\n        var_ch = var_10h;\n        var_10h = uVar9;\n        uVar2 = iVar8 + var_18h;\n        uVar10 = var_20h ^ uVar11;\n        uVar12 = var_20h & uVar11;\n        var_18h = var_1ch;\n        var_20h = uVar11;\n        var_24h = ((uVar11 >> 0xd | uVar11 << 0x13) ^ (uVar11 << 10 | uVar11 >> 0x16) ^ (uVar11 >> 2 | uVar11 << 0x1e))\n                  + (uVar10 & var_1ch ^ uVar12) + iVar8;\n        var_1ch = uVar3;\n    } while (var_4h < 0x100);\n    *unaff_ESI = *unaff_ESI + var_24h;\n    unaff_ESI[1] = unaff_ESI[1] + uVar11;\n    unaff_ESI[2] = unaff_ESI[2] + uVar3;\n    unaff_ESI[3] = unaff_ESI[3] + uVar4;\n    unaff_ESI[4] = unaff_ESI[4] + uVar2;\n    unaff_ESI[5] = unaff_ESI[5] + uVar9;\n    unaff_ESI[6] = unaff_ESI[6] + uVar5;\n    unaff_ESI[7] = unaff_ESI[7] + uVar6;\n    return;\n}\n",
        "token_count": 1666
    },
    "00413a6f": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00413a6f(int32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t uVar5;\n    \n    piVar2 = arg_8h;\n    uVar3 = fcn.00409766();\n    *arg_8h = *arg_8h + (arg_8h[1] + 2U >> 3);\n    uVar5 = 0;\n    arg_8h[1] = arg_8h[1] + 2U & 7;\n    arg_8h = NULL;\n    for (iVar4 = (uVar3 >> 0xe) + 1; iVar4 != 0; iVar4 = iVar4 + -1) {\n        uVar3 = fcn.00409766();\n        uVar1 = uVar5 & 0x1f;\n        uVar5 = uVar5 + 8;\n        arg_8h = arg_8h + ((uVar3 >> 8) << uVar1);\n        *piVar2 = *piVar2 + (piVar2[1] + 8U >> 3);\n        piVar2[1] = piVar2[1] + 8U & 7;\n    }\n    return arg_8h;\n}\n",
        "token_count": 312
    },
    "00414b48": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00414b48(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t *arg_ch;\n    uint16_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint32_t uVar10;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    bool bVar11;\n    uint uVar12;\n    uint8_t auStack436 [299];\n    uchar auStack137 [60];\n    uchar auStack77 [17];\n    uchar auStack60 [28];\n    uchar auStack32 [16];\n    uint uStack16;\n    int32_t iVar13;\n    \n    uStack16 = 0x414b57;\n    uVar7 = fcn.00409721();\n    bVar11 = (uVar7 & 0x8000) == 0;\n    if (bVar11) {\n        uVar8 = uVar7 >> 0xe & 1;\n        uVar7 = *(param_1 + 8) + 2;\n    }\n    else {\n        uVar8 = 1;\n        uVar7 = *(param_1 + 8) + 1;\n    }\n    *(param_1 + 4) = *(param_1 + 4) + (uVar7 >> 3);\n    *(param_1 + 8) = uVar7 & 7;\n    *(param_1 + 0xe674) = uVar8 == 0;\n    if (bVar11) {\n        return '\\0';\n    }\n    piVar1 = param_1 + 4;\n    iVar4 = *(param_1 + 0x78) + -0x19;\n    if ((*piVar1 == iVar4 || *piVar1 < iVar4) || (cVar3 = fcn.00411b90(unaff_ESI, unaff_EBX),  cVar3 != '\\0')) {\n        fcn.0040974f(-*(param_1 + 8) & 7);\n        uVar7 = fcn.00409766();\n        if ((uVar7 & 0x8000) == 0) {\n            *(param_1 + 0xe670) = 0;\n            *(param_1 + 0x98c8) = 0;\n            *(param_1 + 0x98cc) = 0;\n            if ((uVar7 & 0x4000) == 0) {\n                fcn.0041a0c0(param_1 + 0xe4c0, 0, 0x1ae, unaff_EDI);\n            }\n            fcn.0040974f(2);\n            uVar7 = 0;\n            do {\n                uVar5 = fcn.00409766();\n                uVar5 = uVar5 >> 0xc & 0xff;\n                fcn.0040974f(4);\n                if (uVar5 == 0xf) {\n                    uVar5 = fcn.00409766();\n                    uVar5 = uVar5 >> 0xc & 0xff;\n                    fcn.0040974f(4);\n                    if (uVar5 == 0) {\n                        (&stack0xffffffe0)[uVar7] = 0xf;\n                    }\n                    else {\n                        iVar4 = uVar5 + 2;\n                        for (; (0 < iVar4 && (iVar4 = iVar4 + -1,  uVar7 < 0x14)); uVar7 = uVar7 + 1) {\n                            (&stack0xffffffe0)[uVar7] = 0;\n                        }\n                        uVar7 = uVar7 - 1;\n                    }\n                }\n                else {\n                    (&stack0xffffffe0)[uVar7] = uVar5;\n                }\n                uVar7 = uVar7 + 1;\n            } while (uVar7 < 0x14);\n            arg_ch = param_1 + 0x3c44;\n            fcn.00412072(&stack0xffffffe0, arg_ch, 0x14);\n            iVar4 = 0;\n            do {\n                iVar6 = *(param_1 + 0x78) + -5;\n                if ((*piVar1 != iVar6 && iVar6 <= *piVar1) && (cVar3 = fcn.00411b90(),  cVar3 == '\\0'))\n                goto code_r0x004139f0;\n                uVar7 = fcn.00409721();\n                iVar6 = *(param_1 + 0x3cc8);\n                uVar7 = uVar7 & 0xfffe;\n                if (uVar7 < *(param_1 + 0x3c48 + iVar6 * 4)) {\n                    uVar7 = uVar7 >> (0x10U - iVar6 & 0x1f);\n                    uVar5 = *(uVar7 + 0x88 + arg_ch) + *(param_1 + 8);\n                    *piVar1 = *piVar1 + (uVar5 >> 3);\n                    *(param_1 + 8) = uVar5 & 7;\n                    uVar2 = *(param_1 + 0x40cc + uVar7 * 2);\n                }\n                else {\n                    uVar10 = iVar6 + 1;\n                    uVar5 = 0xf;\n                    if (uVar10 < 0xf) {\n                        puVar9 = param_1 + 0x3c48 + uVar10 * 4;\n                        do {\n                            uVar5 = uVar10;\n                            if (uVar7 < *puVar9) break;\n                            uVar10 = uVar10 + 1;\n                            puVar9 = puVar9 + 1;\n                            uVar5 = 0xf;\n                        } while (uVar10 < 0xf);\n                    }\n                    uVar10 = *(param_1 + 8) + uVar5;\n                    *piVar1 = *piVar1 + (uVar10 >> 3);\n                    *(param_1 + 8) = uVar10 & 7;\n                    uVar7 = (uVar7 - arg_ch[uVar5] >> (0x10U - uVar5 & 0x1f)) + *(param_1 + 0x3c88 + uVar5 * 4);\n                    if (*arg_ch <= uVar7) {\n                        uVar7 = 0;\n                    }\n                    uVar2 = *(param_1 + 0x48cc + uVar7 * 2);\n                }\n                if (uVar2 < 0x10) {\n                    (&stack0xfffffe4c)[iVar4] = *(iVar4 + 0xe4c0 + param_1) + uVar2 & 0xf;\n                    iVar4 = iVar4 + 1;\n                }\n                else if (uVar2 < 0x12) {\n                    if (uVar2 == 0x10) {\n                        uVar7 = fcn.00409766();\n                        iVar6 = (uVar7 >> 0xd) + 3;\n                        uVar12 = 3;\n                    }\n                    else {\n                        uVar7 = fcn.00409766();\n                        iVar6 = (uVar7 >> 9) + 0xb;\n                        uVar12 = 7;\n                    }\n                    fcn.0040974f(uVar12);\n                    if (0 < iVar4) {\n                        while (0 < iVar6) {\n                            iVar6 = iVar6 + -1;\n                            if (0x193 < iVar4) goto code_r0x004139e2;\n                            (&stack0xfffffe4c)[iVar4] = (&stack0xfffffe4b)[iVar4];\n                            iVar4 = iVar4 + 1;\n                        }\n                    }\n                }\n                else {\n                    if (uVar2 == 0x12) {\n                        uVar7 = fcn.00409766();\n                        iVar6 = (uVar7 >> 0xd) + 3;\n                        uVar12 = 3;\n                    }\n                    else {\n                        uVar7 = fcn.00409766();\n                        iVar6 = (uVar7 >> 9) + 0xb;\n                        uVar12 = 7;\n                    }\n                    fcn.0040974f(uVar12);\n                    while (0 < iVar6) {\n                        iVar6 = iVar6 + -1;\n                        if (0x193 < iVar4) goto code_r0x004139e2;\n                        iVar13 = iVar4 + 1;\n                        (&stack0xfffffe4c)[iVar4] = 0;\n                        iVar4 = iVar13;\n                    }\n                }\n            } while (iVar4 < 0x194);\ncode_r0x004139e2:\n            *(param_1 + 0xe674) = 1;\n            if (*(param_1 + 0x78) < *piVar1) {\ncode_r0x004139f0:\n                cVar3 = '\\0';\n            }\n            else {\n                fcn.00412072(&stack0xfffffe4c, param_1 + 0x94, 299);\n                fcn.00412072(&stack0xffffff77, param_1 + 0xf80, 0x3c);\n                fcn.00412072(&stack0xffffffb3, param_1 + 0x1e6c, 0x11);\n                fcn.00412072(&stack0xffffffc4, param_1 + 0x2d58, 0x1c);\n                fcn.0041bb00(param_1 + 0xe4c0, &stack0xfffffe4c, 0x1ae);\n                cVar3 = '\\x01';\n            }\n        }\n        else {\n            *(param_1 + 0xe670) = 1;\n            cVar3 = fcn.004132ca(param_1, param_1 + 0xe4bc);\n        }\n    }\n    return cVar3;\n}\n",
        "token_count": 2234
    },
    "00411512": {
        "rules": [
            "encrypt data using HC-128/11bb23636d2a4650a9dbaa6512d69580"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00411512(uint8_t *arg_8h, int16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    uint var_1h;\n    \n    uVar1 = *arg_8h;\n    arg_10h = arg_10h + -1;\n    uVar2 = 1;\n    do {\n        if (uVar1 == 0) {\ncode_r0x0041168d:\n            if (arg_ch != NULL) {\n                *arg_ch = 0;\n            }\n            return arg_ch & 0xffffff00 | uVar2;\n        }\n        uVar3 = uVar1;\n        puVar4 = arg_8h + 1;\n        if (0x7f < uVar3) {\n            if ((uVar3 & 0xe0) == 0xc0) {\n                if ((*puVar4 & 0xc0) != 0x80) goto code_r0x00411687;\n                uVar3 = *puVar4 & 0x3fU | (uVar3 & 0x1f) << 6;\n                puVar4 = arg_8h + 2;\n            }\n            else if ((uVar3 & 0xf0) == 0xe0) {\n                if (((*puVar4 & 0xc0) != 0x80) || ((arg_8h[2] & 0xc0) != 0x80)) {\ncode_r0x00411687:\n                    uVar2 = 0;\n                    goto code_r0x0041168d;\n                }\n                uVar3 = (*puVar4 & 0x3fU | (uVar3 & 0xf) << 6) << 6 | arg_8h[2] & 0x3fU;\n                puVar4 = arg_8h + 3;\n            }\n            else {\n                if (((((uVar3 & 0xf8) != 0xf0) || ((*puVar4 & 0xc0) != 0x80)) || ((arg_8h[2] & 0xc0) != 0x80)) ||\n                   ((arg_8h[3] & 0xc0) != 0x80)) goto code_r0x00411687;\n                uVar3 = ((*puVar4 & 0x3fU | (uVar3 & 7) << 6) << 6 | arg_8h[2] & 0x3fU) << 6 | arg_8h[3] & 0x3fU;\n                puVar4 = arg_8h + 4;\n            }\n        }\n        if ((arg_ch != NULL) && (arg_10h = arg_10h + -1,  arg_10h < 0)) goto code_r0x0041168d;\n        if (uVar3 < 0x10000) {\n            if (arg_ch != NULL) {\ncode_r0x00411673:\n                *arg_ch = uVar3;\n                arg_ch = arg_ch + 1;\n            }\n        }\n        else {\n            if ((arg_ch != NULL) && (arg_10h = arg_10h + -1,  arg_10h < 0)) goto code_r0x0041168d;\n            if (uVar3 < 0x110000) {\n                if (arg_ch != NULL) {\n                    *arg_ch = (uVar3 - 0x10000 >> 10) + -0x2800;\n                    arg_ch = arg_ch + 1;\n                    uVar3 = (uVar3 & 0x3ff) - 0x2400;\n                    goto code_r0x00411673;\n                }\n            }\n            else {\n                uVar2 = 0;\n            }\n        }\n        uVar1 = *puVar4;\n        arg_8h = puVar4;\n    } while( true );\n}\n",
        "token_count": 921
    },
    "00411a43": {
        "rules": [
            "encrypt data using HC-128/11bb23636d2a4650a9dbaa6512d69580"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00411a43(int32_t param_1, int32_t param_2)\n\n{\n    uint8_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    \n    uVar3 = *(**(param_2 + 0x650) + 0x96c + param_2);\n    *(param_2 + 0xa6e) = uVar3;\n    puVar1 = param_1 + 2;\n    uVar4 = *(*puVar1 + 0x96c + param_2);\n    uVar5 = *(param_1 + 3);\n    uVar6 = *(**(param_1 + 8) + 0x86b + param_2);\n    *(param_2 + 0x4a78) = *(param_2 + 0x4a78) >> 0xe;\n    puVar2 = param_2 + (uVar6 + 0x4f8 + (uVar4 + uVar5 * 0x20) * 2 + (*(param_2 + 0x664) >> 0x1a & 0x20U) +\n                        *(param_2 + 0xa6d) + uVar3) * 2;\n    if ((*(param_2 + 0x4a74) - *(param_2 + 0x4a70)) / *(param_2 + 0x4a78) < *puVar2) {\n        *(param_2 + 0x650) = puVar1;\n        *(param_1 + 3) = (*(param_1 + 3) < 0x80) + *(param_1 + 3);\n        *(param_2 + 0x4a7c) = 0;\n        *(param_2 + 0x4a80) = *puVar2;\n        *puVar2 = (*puVar2 - (*puVar2 + 0x20 >> 7)) + 0x80;\n        *(param_2 + 0x664) = *(param_2 + 0x664) + 1;\n        *(param_2 + 0xa6d) = 1;\n    }\n    else {\n        *(param_2 + 0x4a7c) = *puVar2;\n        *puVar2 = *puVar2 - (*puVar2 + 0x20 >> 7);\n        *(param_2 + 0x4a80) = 0x4000;\n        *(param_2 + 0x658) = *((*puVar2 >> 10) + 0x427dd8);\n        *(param_2 + 0x654) = 1;\n        *(*puVar1 + 0x66c + param_2) = *(param_2 + 0xa6c);\n        *(param_2 + 0x650) = 0;\n        *(param_2 + 0xa6d) = 0;\n    }\n    return;\n}\n",
        "token_count": 691
    },
    "004112e3": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004112e3(uint32_t arg_8h)\n\n{\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    \n    var_10h = (arg_8h & 0x1f) * 2;\n    var_14h = arg_8h >> 5 & 0x3f;\n    var_ch = 0;\n    var_18h = arg_8h >> 0xb & 0x1f;\n    var_1ch = arg_8h >> 0x10 & 0x1f;\n    var_24h = (arg_8h >> 0x19) + 0x7bc;\n    var_20h = arg_8h >> 0x15 & 0xf;\n    fcn.00411220(&var_24h);\n    return;\n}\n",
        "token_count": 233
    },
    "00411d98": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411d98(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    uint32_t unaff_ESI;\n    uint32_t uVar2;\n    uint var_18h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = 0;\n    var_4h = 0;\n    var_ch = in_ECX;\n    if (arg_8h != 0) {\n        do {\n            if (var_4h < 0x20) {\n                unaff_ESI = arg_8h - uVar2;\n                var_8h = unaff_ESI / (0x20 - var_4h);\n                if (var_8h < 0x400001) {\n                    var_8h = 0x400000;\n                }\n                for (; var_8h <= unaff_ESI; unaff_ESI = unaff_ESI - (unaff_ESI >> 5)) {\n                    unaff_EBX = fcn.0041c8ee(unaff_ESI);\n                    if (unaff_EBX != 0) goto code_r0x00411e09;\n                }\n            }\n            else if (arg_8h <= uVar2) {\n                return;\n            }\n            fcn.0041198d();\n            fcn.0041c172(&var_18h, 0x42a498);\ncode_r0x00411e09:\n            fcn.0041a0c0(unaff_EBX, 0, unaff_ESI);\n            iVar1 = var_4h * 4;\n            uVar2 = uVar2 + unaff_ESI;\n            var_4h = var_4h + 1;\n            *(iVar1 + var_ch) = unaff_EBX;\n            *(iVar1 + 0x80 + var_ch) = uVar2;\n        } while (uVar2 < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 462
    },
    "004117b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.004117b9(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    int64_t iVar2;\n    \n    iVar2 = 0;\n    uVar1 = *param_1;\n    while ((0x2f < uVar1 && (uVar1 < 0x3a))) {\n        iVar2 = fcn.0041a440();\n        iVar2 = iVar2 + (uVar1 - 0x30);\n        param_1 = param_1 + 1;\n        uVar1 = *param_1;\n    }\n    return iVar2;\n}\n",
        "token_count": 136
    },
    "004195f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004195f7(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint ARG_0;\n    uint var_2ch;\n    code *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    char16_t *var_8h;\n    uint var_4h;\n    \n    ARG_0 = 0x30;\n    var_2ch = 0x828;\n    var_28h = fcn.004195ad;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = arg_8h;\n    var_18h = 0;\n    var_14h = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f00);\n    var_10h = 6;\n    var_ch = 0;\n    var_8h = L\"RarHtmlClassName\";\n    var_4h = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExW)(&ARG_0);\n    *in_ECX = arg_8h;\n    return;\n}\n",
        "token_count": 280
    },
    "00408b52": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00408b52(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int32_t lpDistanceToMoveHigh;\n    \n    if (*(param_1 + 4) == -1) {\n        if (*(param_1 + 0x14) == '\\0') {\n            return 0xffffffffffffffff;\n        }\n        lpDistanceToMoveHigh = param_1;\n        fcn.004063da(param_1 + 0x1e);\n    }\n    iVar2 = *(param_1 + 4);\n    lpDistanceToMoveHigh = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(iVar2, 0, &lpDistanceToMoveHigh, 1);\n    if ((iVar1 == -1) && (iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar1 != 0)) {\n        if (*(param_1 + 0x14) == '\\0') {\n            return 0xffffffffffffffff;\n        }\n        iVar2 = param_1 + 0x1e;\n        fcn.004063da();\n    }\n    uVar3 = fcn.0041a440(lpDistanceToMoveHigh, lpDistanceToMoveHigh >> 0x1f, 0, 1, iVar2);\n    return uVar3;\n}\n",
        "token_count": 305
    },
    "00408e24": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408e24(uint arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t nNumberOfBytesToRead;\n    int32_t *in_ECX;\n    int64_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = 0;\n    if (*(in_ECX + 0x11) != '\\0') {\n        iVar3 = (**(*in_ECX + 0xc))();\n    }\n    do {\n        iVar2 = fcn.00408c44(arg_8h, arg_ch);\n        if (iVar2 != -1) {\n            return iVar2;\n        }\n        in_ECX[0x408] = 2;\n        if (*(in_ECX + 5) == '\\0') {\n            return -1;\n        }\n        if (*(in_ECX + 0x11) != '\\0') {\n            var_8h = 0;\n            var_4h = 0;\n            if (arg_ch == 0) {\n                return 0;\n            }\n            do {\n                (**(*in_ECX + 8))(iVar3 + -8, 0);\n                nNumberOfBytesToRead = arg_ch - var_4h;\n                if (0x1ff < nNumberOfBytesToRead) {\n                    nNumberOfBytesToRead = 0x200;\n                }\n                iVar2 = fcn.00408c44(arg_8h, nNumberOfBytesToRead);\n                if (iVar2 == -1) {\n                    iVar2 = 0x200;\n                }\n                var_4h = var_4h + 0x200;\n                var_8h = var_8h + iVar2;\n            } while (var_4h < arg_ch);\n            return var_8h;\n        }\n    } while ((in_ECX[3] == 0) && (cVar1 = fcn.00406221(),  cVar1 != '\\0'));\n    fcn.00406511(in_ECX + 0x1e);\n    return -1;\n}\n",
        "token_count": 481
    },
    "00408fc5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00408fc5(uint32_t param_1)\n\n{\n    uint uVar1;\n    \n    if ((param_1 == 0xffffffff) || ((param_1 & 0x10) == 0)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 81
    },
    "00408fea": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408fea(uint arg_8h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint var_1000h;\n    uint uStackY36;\n    uint *puStackY32;\n    \n    fcn.0041a360();\n    pcVar1 = _sym.imp.KERNEL32.dll_GetFileAttributesW;\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)();\n    if (iVar3 == -1) {\n        puStackY32 = 0x40901f;\n        cVar2 = fcn.0040a778(arg_8h, &fcn.00408fea::var_1000h, 0x800);\n        if (cVar2 != '\\0') {\n            puStackY32 = &fcn.00408fea::var_1000h;\n            uStackY36 = 0x40902c;\n            iVar3 = (*pcVar1)();\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 226
    },
    "0040924e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.0040924e(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00408fea(param_1);\n    return uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n}\n",
        "token_count": 61
    },
    "004093de": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004093de(int32_t param_1)\n\n{\n    if (*(param_1 + 0x1004) != -1) {\n        (*_sym.imp.KERNEL32.dll_FindClose)(*(param_1 + 0x1004));\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "004095a3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004095a3(int16_t *param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    \n    while( true ) {\n        *(param_2 + 0x1044) = 0;\n        if (*param_1 == 0) {\n            return 0;\n        }\n        if (*(param_1 + 0x800) == '\\0') {\n            iVar2 = fcn.0040940b(*(param_1 + 0x802), param_1, param_2);\n        }\n        else {\n            iVar2 = fcn.0040940b(0xffffffff, param_1, param_2);\n            *(param_1 + 0x802) = iVar2;\n        }\n        if (iVar2 == -1) break;\n        *(param_2 + 0x1040) = 0;\n        uVar1 = fcn.00408fc5(*(param_2 + 0x1008));\n        *(param_2 + 0x100c) = uVar1;\n        uVar1 = fcn.00408fdd(*(param_2 + 0x1008));\n        *(param_2 + 0x100d) = uVar1;\n        *(param_1 + 0x800) = 0;\n        arg_8h = fcn.0040a2c4();\n        iVar2 = fcn.0041a01b(arg_8h, 0x427674);\n        if ((iVar2 != 0) && (iVar2 = fcn.0041a01b(arg_8h, 0x42766c),  iVar2 != 0)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 398
    },
    "00409651": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00409651(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint unaff_retaddr;\n    \n    *(param_2 + 0x1044) = 0;\n    cVar1 = fcn.00409fd2(param_1);\n    if ((cVar1 == '\\0') && (iVar3 = fcn.0040940b(0xffffffff, unaff_retaddr, param_2),  iVar3 != -1)) {\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n        *(param_2 + 0x1040) = 0;\n        uVar2 = fcn.00408fc5(*(param_2 + 0x1008));\n        *(param_2 + 0x100c) = uVar2;\n        uVar2 = fcn.00408fdd(*(param_2 + 0x1008));\n        *(param_2 + 0x100d) = uVar2;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 247
    },
    "00410ca8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00410ca8(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(param_1, 0xffffffff);\n    if (iVar1 == -1) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00406409(0x42f76c, L\"\\nWaitForMultipleObjects error %d, GetLastError %d\", 0xffffffff);\n        fcn.004064c5(2);\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00411b90": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00411b90(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t arg_10h;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + 0x78);\n    uVar1 = *(param_1 + 4);\n    arg_10h = iVar2 - uVar1;\n    if (arg_10h < 0) {\n        uVar1 = uVar1 & 0xffffff00;\n    }\n    else {\n        if (0x4000 < uVar1) {\n            if (0 < arg_10h) {\n                fcn.0041c500(*(param_1 + 0x10), uVar1 + *(param_1 + 0x10), arg_10h);\n            }\n            *(param_1 + 4) = 0;\n            *(param_1 + 0x78) = arg_10h;\n            iVar2 = arg_10h;\n        }\n        uVar1 = fcn.0040b7ac(*(param_1 + 0x10) + iVar2, 0x8000 - iVar2);\n        if (0 < uVar1) {\n            *(param_1 + 0x78) = *(param_1 + 0x78) + uVar1;\n        }\n        *(param_1 + 0x7c) = *(param_1 + 0x78) + -0x1e;\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 357
    },
    "00411bfc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00411bfc(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(param_1 + 0x78);\n    uVar1 = *(param_1 + 4);\n    iVar2 = iVar3 - uVar1;\n    if (iVar2 < 0) {\n        uVar1 = uVar1 & 0xffffff00;\n    }\n    else {\n        *(param_1 + 0x80) = *(param_1 + 0x80) + (*(param_1 + 0x88) - uVar1);\n        if (0x4000 < uVar1) {\n            if (0 < iVar2) {\n                fcn.0041c500(*(param_1 + 0x10), uVar1 + *(param_1 + 0x10), iVar2);\n            }\n            *(param_1 + 4) = 0;\n            *(param_1 + 0x78) = iVar2;\n            iVar3 = iVar2;\n        }\n        uVar1 = fcn.0040b7ac(*(param_1 + 0x10) + iVar3, 0x8000 - iVar3);\n        if (0 < uVar1) {\n            *(param_1 + 0x78) = *(param_1 + 0x78) + uVar1;\n        }\n        iVar3 = *(param_1 + 0x78) + -0x1e;\n        *(param_1 + 0x7c) = iVar3;\n        *(param_1 + 0x88) = *(param_1 + 4);\n        if (*(param_1 + 0x80) != -1) {\n            iVar2 = *(param_1 + 0x80) + -1 + *(param_1 + 4);\n            if (iVar3 < iVar2) {\n                iVar2 = iVar3;\n            }\n            *(param_1 + 0x7c) = iVar2;\n        }\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 488
    },
    "0041367d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041367d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041336d();\n    if (iVar1 == -1) {\n        fcn.004132a4();\n        *(param_1 + 0xe670) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 83
    },
    "00404872": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint fcn.00404872(uint *param_1)\n\n{\n    return *param_1;\n}\n",
        "token_count": 23
    },
    "00409721": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454",
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nunkuint3 __fastcall fcn.00409721(int32_t *param_1)\n\n{\n    uchar *puVar1;\n    \n    puVar1 = *param_1 + param_1[3];\n    return CONCAT21(CONCAT11(*puVar1, puVar1[1]), puVar1[2]) >> (8U - param_1[1] & 0x1f) & 0xffff;\n}\n",
        "token_count": 93
    },
    "0040ab36": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t fcn.0040ab36(int32_t param_1, int32_t param_2, char param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = param_2 + (param_2 >> 0x1f & 7U) >> 3;\n    return CONCAT22(*(iVar1 + 2 + param_1), CONCAT11(*(iVar1 + 1 + param_1), *(iVar1 + param_1))) >> (param_2 & 7) &\n           0xffffffffU >> (0x20U - param_3 & 0x1f);\n}\n",
        "token_count": 135
    },
    "0040b40d": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b40d(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = param_1[6];\n    if (iVar1 + 3U < param_1[5]) {\n        uVar2 = *(iVar1 + *param_1);\n        param_1[6] = iVar1 + 4;\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 104
    },
    "0041232f": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0041232f(int32_t *param_1)\n\n{\n    uchar *puVar1;\n    \n    puVar1 = param_1[3] + *param_1;\n    return CONCAT31(CONCAT21(CONCAT11(*puVar1, puVar1[1]), puVar1[2]), puVar1[3]) << (param_1[1] & 0x1f) |\n           puVar1[4] >> (8 - param_1[1] & 0x1f);\n}\n",
        "token_count": 121
    },
    "004123ff": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004123ff(uint *param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    param_1[1] = 0;\n    *param_1 = 0;\n    param_1[2] = 0xffffffff;\n    param_1[6] = param_2;\n    iVar2 = 4;\n    do {\n        uVar1 = fcn.004123de();\n        iVar2 = iVar2 + -1;\n        param_1[1] = param_1[1] << 8 | uVar1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 151
    },
    "0041c2a0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t * fcn.0041c2a0(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 593
    },
    "00413165": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413165(uint8_t **arg_8h)\n\n{\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint8_t **ppuVar6;\n    uint16_t *in_ECX;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint8_t *var_408h;\n    uint8_t *apuStack1032 [255];\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    iVar1 = arg_8h;\n    iVar9 = *in_ECX - *(arg_8h + 0x654);\n    var_4h = fcn.004130d3(arg_8h, iVar9);\n    var_8h = 0;\n    puVar3 = *(in_ECX + 2) + -6;\n    arg_8h = &var_408h;\n    do {\n        do {\n            puVar2 = puVar3;\n            puVar3 = puVar2 + 6;\n        } while (*(*puVar3 + 0x66c + iVar1) == *(iVar1 + 0xa6c));\n        iVar7 = var_8h + puVar2[7];\n        iVar9 = iVar9 + -1;\n        var_8h = iVar7;\n        *arg_8h = puVar3;\n        arg_8h = arg_8h + 1;\n    } while (iVar9 != 0);\n    *(iVar1 + 0x4a84) = *(iVar1 + 0x4a84) + iVar7;\n    uVar4 = *(iVar1 + 0x4a78) / *(iVar1 + 0x4a84);\n    *(iVar1 + 0x4a78) = uVar4;\n    uVar4 = (*(iVar1 + 0x4a74) - *(iVar1 + 0x4a70)) / uVar4;\n    if (uVar4 < *(iVar1 + 0x4a84)) {\n        ppuVar6 = &var_408h;\n        if (uVar4 < iVar7) {\n            for (uVar8 = var_408h[1]; uVar8 <= uVar4; uVar8 = uVar8 + var_408h[1]) {\n                ppuVar6 = ppuVar6 + 1;\n                var_408h = *ppuVar6;\n            }\n            *(iVar1 + 0x4a80) = uVar8;\n            *(iVar1 + 0x4a7c) = uVar8 - var_408h[1];\n            fcn.0041238a();\n            fcn.00413099(iVar1, var_408h);\n        }\n        else {\n            *(iVar1 + 0x4a7c) = iVar7;\n            *(iVar1 + 0x4a80) = *(iVar1 + 0x4a84);\n            iVar9 = *in_ECX - *(iVar1 + 0x654);\n            ppuVar6 = &stack0xfffffbf0;\n            do {\n                ppuVar6 = ppuVar6 + 1;\n                iVar9 = iVar9 + -1;\n                *(**ppuVar6 + 0x66c + iVar1) = *(iVar1 + 0xa6c);\n            } while (iVar9 != 0);\n            *var_4h = *var_4h + *(iVar1 + 0x4a84);\n            *(iVar1 + 0x654) = *in_ECX;\n        }\n        uVar5 = 1;\n    }\n    else {\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 852
    },
    "00410959": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint fcn.00410959(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if ((param_1 == 0x20) || (param_1 == 9)) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 75
    },
    "004098ea": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004098ea(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (~param_1 + 1 & 0x3f) + param_1;\n    *(param_1 + 0xf0) = iVar1;\n    *(param_1 + 0xf4) = iVar1 + 0x80;\n    *(param_1 + 0xf8) = iVar1 + 0xa0;\n    *(param_1 + 0xfc) = iVar1 + 0xa8;\n    return;\n}\n",
        "token_count": 127
    },
    "0041078a": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041078a(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = *(arg_8h + 0x20) & 0x3f;\n    puVar1 = arg_8h + 0x20;\n    uVar2 = *puVar1;\n    *puVar1 = *puVar1 + arg_10h;\n    *(arg_8h + 0x24) = *(arg_8h + 0x24) + CARRY4(uVar2, arg_10h);\n    if (arg_10h != 0) {\n        do {\n            uVar2 = arg_10h;\n            if (0x40 - uVar3 < arg_10h) {\n                uVar2 = 0x40 - uVar3;\n            }\n            if (uVar2 == 0x40) {\n                *(arg_8h + 0x28) = arg_ch;\n            }\n            else {\n                *(arg_8h + 0x28) = arg_8h + 0x2c;\n                fcn.0041bb00(arg_8h + 0x2c + uVar3, arg_ch, uVar2);\n            }\n            arg_ch = arg_ch + uVar2;\n            arg_10h = arg_10h - uVar2;\n            uVar3 = uVar3 + uVar2;\n            if (uVar3 == 0x40) {\n                uVar3 = 0;\n                fcn.004104ce();\n            }\n        } while (arg_10h != 0);\n    }\n    fcn.004104ce();\n    return;\n}\n",
        "token_count": 405
    },
    "00411428": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411428(uint16_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    uint16_t *puVar5;\n    \n    uVar1 = *arg_8h;\n    iVar2 = arg_10h + -1;\n    do {\n        if ((uVar1 == 0) || (arg_10h = iVar2 + -1,  arg_10h < 0)) {\n            *arg_ch = 0;\n            return;\n        }\n        uVar3 = uVar1;\n        puVar5 = arg_8h + 1;\n        if (uVar3 < 0x80) {\ncode_r0x004114f9:\n            *arg_ch = uVar3;\n            arg_ch = arg_ch + 1;\n        }\n        else {\n            if ((uVar3 < 0x800) && (arg_10h = iVar2 + -2,  -1 < arg_10h)) {\n                uVar4 = uVar1 >> 6 | 0xc0;\ncode_r0x004114f2:\n                *arg_ch = uVar4;\n                arg_ch = arg_ch + 1;\n                uVar3 = uVar3 & 0x3f | 0x80;\n                goto code_r0x004114f9;\n            }\n            if (((uVar3 - 0xd800 < 0x400) && (uVar1 = *puVar5,  0xdbff < uVar1)) && (uVar1 < 0xe000)) {\n                uVar3 = (uVar3 - 0xd7f7) * 0x400 + uVar1;\n                puVar5 = arg_8h + 2;\n            }\n            if ((uVar3 < 0x10000) && (arg_10h = arg_10h + -2,  -1 < arg_10h)) {\n                uVar4 = uVar3 >> 0xc | 0xe0;\ncode_r0x004114e5:\n                *arg_ch = uVar4;\n                arg_ch = arg_ch + 1;\n                uVar4 = uVar3 >> 6 & 0x3f | 0x80;\n                goto code_r0x004114f2;\n            }\n            if ((uVar3 < 0x200000) && (arg_10h = arg_10h + -3,  -1 < arg_10h)) {\n                *arg_ch = uVar3 >> 0x12 | 0xf0;\n                arg_ch = arg_ch + 1;\n                uVar4 = uVar3 >> 0xc & 0x3f | 0x80;\n                goto code_r0x004114e5;\n            }\n        }\n        uVar1 = *puVar5;\n        iVar2 = arg_10h;\n        arg_8h = puVar5;\n    } while( true );\n}\n",
        "token_count": 683
    },
    "00404897": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.00404897(uint param_1, uchar *param_2)\n\n{\n    param_2[1] = param_1 >> 8;\n    *param_2 = param_1;\n    param_2[2] = param_1 >> 0x10;\n    param_2[3] = param_1 >> 0x18;\n    return;\n}\n",
        "token_count": 83
    },
    "004048ba": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004048ba(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    \n    fcn.0040484f();\n    iVar2 = 0;\n    do {\n        *(iVar2 + *(param_1 + 0xf4)) = *(iVar2 + 0x427490);\n        iVar2 = iVar2 + 4;\n    } while (iVar2 < 0x20);\n    **(param_1 + 0xf4) = **(param_1 + 0xf4) ^ 0x2080020;\n    puVar1 = *(param_1 + 0xf4) + 8;\n    *puVar1 = *puVar1 ^ param_2;\n    puVar1 = *(param_1 + 0xf4) + 0xc;\n    *puVar1 = *puVar1 ^ (in_EAX | 0x2000) << 0x10;\n    return;\n}\n",
        "token_count": 236
    },
    "0040b574": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040b574(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1[5] < 5) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.00405593(0xffffffff, *param_1 + 4, param_1[5] - 4);\n    return ~uVar1;\n}\n",
        "token_count": 94
    },
    "0040b46b": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t __fastcall fcn.0040b46b(int32_t *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    iVar4 = 0;\n    if (param_1[6] < param_1[5]) {\n        iVar2 = *param_1;\n        do {\n            iVar3 = param_1[6];\n            param_1[6] = iVar3 + 1;\n            cVar1 = *(iVar2 + iVar3);\n            iVar5 = fcn.0041c880();\n            iVar4 = iVar5 + iVar4;\n            if (-1 < cVar1) {\n                return iVar4;\n            }\n        } while (param_1[6] < param_1[5]);\n    }\n    return 0;\n}\n",
        "token_count": 194
    },
    "0040d9e7": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040d9e7(int32_t hWnd)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint nWidth;\n    uint lpClassName;\n    uint lpvObject;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0041a360();\n    cVar2 = fcn.0040d0de();\n    if (cVar2 != '\\0') {\n        iVar4 = (*_sym.imp.USER32.dll_GetWindow)();\n        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n        hWnd = 0;\n        if (iVar4 != 0) {\n            while (hWnd < 0x200) {\n                var_18h = 0x800;\n                (*_sym.imp.USER32.dll_GetClassNameW)();\n                iVar5 = fcn.004116a1();\n                if (((iVar5 == 0) && (uVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)(),  (uVar3 & 0x1f) == 0xe)) &&\n                   (iVar5 = (*pcVar1)(),  iVar5 != 0)) {\n                    (*_sym.imp.GDI32.dll_GetObjectW)();\n                    fcn.0040d09b();\n                    nWidth = fcn.0040d058();\n                    fcn.0040cf93(iVar5, nWidth, var_18h);\n                    (*pcVar1)();\n                    if (iVar5 != *0x4359d0) {\n                        (*_sym.imp.GDI32.dll_DeleteObject)();\n                    }\n                }\n                iVar5 = (*_sym.imp.USER32.dll_GetWindow)();\n                if (iVar5 == iVar4) {\n                    return;\n                }\n                hWnd = hWnd + 1;\n                if (iVar5 == 0) {\n                    return;\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 469
    },
    "00410d91": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410d91(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_1 + 0x188) - *(param_1 + 0x18c) & 0x1f;\n    *(param_1 + 0x84) = uVar1;\n    if (uVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_ResetEvent)(*(param_1 + 0x198));\n        (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*(param_1 + 0x194), *(param_1 + 0x84), 0);\n        fcn.00410ca8(*(param_1 + 0x198));\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "00410e94": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00410e94(int32_t param_1, uint param_2, uint param_3)\n\n{\n    if ((*(param_1 + 0x188) + 1U & 0x1f) == *(param_1 + 0x18c)) {\n        fcn.00410d91();\n    }\n    *(param_1 + 0x88 + *(param_1 + 0x188) * 8) = param_2;\n    *(param_1 + 0x8c + *(param_1 + 0x188) * 8) = param_3;\n    *(param_1 + 0x188) = *(param_1 + 0x188) + 1U & 0x1f;\n    return;\n}\n",
        "token_count": 176
    },
    "0040b99f": {
        "rules": [
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653",
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688"
        ],
        "decompiled_code": "\nint16_t * __thiscall fcn.0040b99f(int16_t **param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    \n    piVar3 = *param_1;\n    iVar1 = *piVar3;\n    while( true ) {\n        if (iVar1 == 0) {\n            return NULL;\n        }\n        if ((((iVar1 == *param_2) && (iVar2 = fcn.0041c259(piVar3 + 1, param_2 + 1, 7),  iVar2 == 0)) &&\n            (piVar3[8] == 0x3d)) && (piVar3[9] == 0x22)) break;\n        for (; *piVar3 != 0; piVar3 = piVar3 + 1) {\n            if (*piVar3 == 0xc) goto code_r0x0040b9ee;\n        }\n        for (; *piVar3 == 0xc; piVar3 = piVar3 + 1) {\ncode_r0x0040b9ee:\n        }\n        iVar1 = *piVar3;\n    }\n    return piVar3;\n}\n",
        "token_count": 278
    },
    "004109d2": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_6eh\n\nvoid __cdecl fcn.004109d2(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int16_t extraout_CX;\n    ushort *puVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint var_6eh;\n    uint var_4h;\n    \n    uVar3 = 0;\n    do {\n        iVar4 = fcn.0041cf20();\n        *(&var_6eh + uVar3 * 2 + 2) = extraout_CX + 0x30;\n        uVar3 = uVar3 + 1;\n        uVar1 = iVar4 | iVar4 >> 0x20;\n    } while (iVar4 != 0);\n    if (uVar3 != 0) {\n        puVar2 = &var_6eh + uVar3 * 2;\n        do {\n            *(arg_10h + uVar1 * 2) = *puVar2;\n            uVar1 = uVar1 + 1;\n            puVar2 = puVar2 + -1;\n        } while (uVar1 < uVar3);\n    }\n    *(arg_10h + uVar3 * 2) = 0;\n    return;\n}\n",
        "token_count": 318
    },
    "0040117b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.0040117b(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041a01b(param_1 + 0x20, param_2);\n    return iVar1 == 0;\n}\n",
        "token_count": 67
    },
    "00401795": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint32_t __cdecl fcn.00401795(uint arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    ulong uVar4;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar2 = fcn.00419d48();\n    if (*(extraout_ECX + 0xa22e) == '\\0') {\n        uVar2 = uVar2 & 0xffffff00;\n        goto code_r0x0040183f;\n    }\n    fcn.00401192(extraout_ECX);\n    *(unaff_EBP + -4) = 0;\n    if (*(extraout_ECX + 0x15d9) == '\\0') {\n        iVar3 = *extraout_ECX;\n        uVar4 = fcn.00401c00(0);\n        (**(iVar3 + 8))(uVar4);\n        iVar3 = fcn.0040372a(0x427478);\n        if (iVar3 != 0) {\n            cVar1 = fcn.00401320(*(unaff_EBP + 8));\n            *(unaff_EBP + 0xb) = 1;\n            if (cVar1 != '\\0') goto code_r0x00401829;\n        }\n        *(unaff_EBP + 0xb) = 0;\n    }\n    else {\n        (**(*extraout_ECX + 8))(extraout_ECX[0x288e] + 0x14, 0, 0);\n        fcn.00403662();\n        *(unaff_EBP + 0xb) = *(*(unaff_EBP + 8) + 4) != 0;\n    }\ncode_r0x00401829:\n    iVar3 = **(unaff_EBP + -0x1c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    uVar2 = (**(iVar3 + 8))(*(unaff_EBP + -0x14), *(unaff_EBP + -0x10), 0);\n    uVar2 = uVar2 & 0xffffff00 | *(unaff_EBP + 0xb);\ncode_r0x0040183f:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 607
    },
    "0040184f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.0040184f(uint arg_8h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    bool bVar4;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00408765();\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = 0x427468;\n    fcn.00405edd();\n    *(unaff_EBP + -4) = 1;\n    fcn.0040b741();\n    *(unaff_EBP + -4) = 2;\n    fcn.0041114f();\n    fcn.00401413();\n    *(unaff_EBP + -4) = 3;\n    fcn.00401413();\n    bVar4 = *(unaff_EBP + 8) == 0;\n    *(unaff_EBP + -4) = 4;\n    extraout_ECX[0x15bf] = 0;\n    *(extraout_ECX + 0x15be) = bVar4;\n    if (bVar4) {\n        iVar3 = fcn.0041a13a(0x72a8);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 5;\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.00409f56();\n        }\n    }\n    else {\n        iVar3 = *(unaff_EBP + 8);\n    }\n    extraout_ECX[0x15bf] = iVar3;\n    uVar1 = *(iVar3 + 0x5195);\n    extraout_ECX[0x15c0] = 0xffffffff;\n    extraout_ECX[0x15c1] = 0xffffffff;\n    extraout_ECX[0x15c2] = 0xffffffff;\n    *(extraout_ECX + 7) = uVar1;\n    extraout_ECX[0x288a] = 2;\n    *(extraout_ECX + 0x288b) = 0;\n    *(extraout_ECX + 0xa22d) = 0;\n    *(extraout_ECX + 0xa22e) = 0;\n    *(extraout_ECX + 0xa22f) = 0;\n    *(extraout_ECX + 0x288c) = 0;\n    *(extraout_ECX + 0xa231) = 0;\n    *(extraout_ECX + 0xa232) = 0;\n    extraout_ECX[0x288e] = 0;\n    extraout_ECX[0x15c4] = 0;\n    extraout_ECX[0x15c5] = 0;\n    *(extraout_ECX + 0xa233) = 0;\n    *(extraout_ECX + 0x288d) = 0;\n    *(extraout_ECX + 0xa23d) = 0;\n    *(extraout_ECX + 0x288f) = 0;\n    extraout_ECX[0x15c6] = 0;\n    extraout_ECX[0x2886] = 0;\n    extraout_ECX[0x2887] = 0;\n    extraout_ECX[0x2888] = 0;\n    extraout_ECX[0x2889] = 0;\n    fcn.0041a0c0(extraout_ECX + 0x15d2, 0, 0x40);\n    fcn.0041a0c0(extraout_ECX + 0x15e2, 0, 0x34);\n    fcn.0041a0c0(extraout_ECX + 0x1eb0, 0, 0x20);\n    uVar2 = *(unaff_EBP + -0xc);\n    *(extraout_ECX + 0xa272) = 0;\n    extraout_ECX[0x2894] = 0;\n    extraout_ECX[0x2896] = 0;\n    extraout_ECX[0x2897] = 0;\n    extraout_ECX[0x2898] = 0;\n    extraout_ECX[0x2899] = 0;\n    extraout_ECX[0x289a] = 0;\n    extraout_ECX[0x289b] = 0;\n    *(extraout_ECX + 0xa24e) = 0;\n    *(extraout_ECX + 0x289c) = 0;\n    *(extraout_ECX + 0x15c8) = 0;\n    *in_FS_OFFSET = uVar2;\n    return extraout_ECX;\n}\n",
        "token_count": 1170
    },
    "00401a18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401a18(int32_t param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    cVar1 = fcn.0040146a(param_2);\n    if (cVar1 == '\\0') {\n        if (*(param_1 + 0xa23d) == '\\0') {\n            uVar2 = fcn.0040c1b1(0x8c);\n            fcn.0040e0c1(param_1 + 0x1e, uVar2);\n        }\n        fcn.004064c5(2);\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "00401a9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401a9c(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    \n    uVar3 = fcn.00408dac();\n    iVar2 = uVar3 >> 0x20;\n    if (((iVar2 < *(param_1 + 0xa21c)) || ((iVar2 <= *(param_1 + 0xa21c) && (uVar3 < *(param_1 + 0xa218))))) ||\n       ((iVar2 <= *(param_1 + 0xa224) && ((iVar2 < *(param_1 + 0xa224) || (uVar3 < *(param_1 + 0xa220))))))) {\n        uVar1 = fcn.0040c1b1(0x67);\n        fcn.0040e0c1(param_1 + 0x1e, uVar1);\n        fcn.004062af(1);\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "00401b1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401b1c(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0040c1b1(200, param_2);\n    fcn.0040e0c1(param_1 + 0x1e, uVar1);\n    fcn.004062af(1);\n    return;\n}\n",
        "token_count": 92
    },
    "00403772": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403772(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uchar (*pauVar1) [16];\n    uint32_t *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uchar auVar13 [16];\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    uint32_t uVar23;\n    uint32_t uVar24;\n    int32_t iVar25;\n    int32_t iVar26;\n    int32_t iVar27;\n    uint32_t uVar28;\n    int32_t iVar30;\n    uint32_t uVar31;\n    int32_t iVar32;\n    uint32_t uVar33;\n    uint32_t uVar34;\n    int32_t iVar35;\n    uint32_t uVar36;\n    uchar auVar29 [16];\n    int32_t iVar37;\n    uint32_t uVar39;\n    int32_t iVar40;\n    uint32_t uVar41;\n    int32_t iVar42;\n    uint32_t uVar43;\n    int32_t iVar44;\n    uint32_t uVar45;\n    uchar auVar38 [16];\n    uchar auVar46 [16];\n    uchar auVar47 [16];\n    \n    pauVar1 = *(arg_8h + 0xf4);\n    uVar15 = *pauVar1[1];\n    auVar13 = pauVar1[1];\n    puVar2 = *(arg_8h + 0xf8);\n    iVar25 = arg_ch[6];\n    iVar37 = arg_ch[4];\n    iVar42 = arg_ch[7];\n    iVar26 = arg_ch[2];\n    iVar3 = *arg_ch;\n    iVar4 = arg_ch[5];\n    iVar5 = arg_ch[3];\n    iVar44 = arg_ch[1];\n    uVar14 = **pauVar1 + iVar3 + uVar15;\n    uVar16 = *(*pauVar1 + 4) + iVar26 + *(pauVar1[1] + 4);\n    uVar17 = *(*pauVar1 + 8) + iVar37 + *(pauVar1[1] + 8);\n    uVar18 = *(*pauVar1 + 0xc) + iVar25 + *(pauVar1[1] + 0xc);\n    uVar19 = *0x42d290 ^ *puVar2 ^ uVar14;\n    uVar20 = *0x42d294 ^ puVar2[1] ^ uVar16;\n    uVar45 = *0x42d298 ^ puVar2[2] ^ uVar17;\n    uVar21 = *0x42d29c ^ puVar2[3] ^ uVar18;\n    uVar33 = uVar19 >> 0x10 ^ uVar19 << 0x10;\n    uVar20 = uVar20 >> 0x10 ^ uVar20 << 0x10;\n    uVar45 = uVar45 >> 0x10 ^ uVar45 << 0x10;\n    uVar28 = uVar21 >> 0x10 ^ uVar21 << 0x10;\n    uVar21 = *0x42d280 + uVar33;\n    uVar22 = *0x42d284 + uVar20;\n    uVar23 = *0x42d288 + uVar45;\n    uVar24 = *0x42d28c + uVar28;\n    uVar15 = uVar15 ^ uVar21;\n    uVar19 = *(pauVar1[1] + 4) ^ uVar22;\n    uVar36 = *(pauVar1[1] + 8) ^ uVar23;\n    uVar31 = *(pauVar1[1] + 0xc) ^ uVar24;\n    uVar39 = uVar15 >> 0xc ^ uVar15 << 0x14;\n    uVar41 = uVar19 >> 0xc ^ uVar19 << 0x14;\n    uVar43 = uVar36 >> 0xc ^ uVar36 << 0x14;\n    uVar34 = uVar31 >> 0xc ^ uVar31 << 0x14;\n    iVar6 = arg_ch[0xe];\n    iVar7 = arg_ch[0xc];\n    iVar40 = arg_ch[10];\n    uVar15 = uVar14 + iVar44 + uVar39;\n    uVar14 = uVar16 + iVar5 + uVar41;\n    uVar17 = uVar17 + iVar4 + uVar43;\n    uVar19 = uVar18 + iVar42 + uVar34;\n    uVar33 = uVar33 ^ uVar15;\n    uVar20 = uVar20 ^ uVar14;\n    uVar45 = uVar45 ^ uVar17;\n    uVar28 = uVar28 ^ uVar19;\n    uVar33 = uVar33 >> 8 ^ uVar33 << 0x18;\n    uVar36 = uVar20 >> 8 ^ uVar20 << 0x18;\n    uVar31 = uVar45 >> 8 ^ uVar45 << 0x18;\n    uVar45 = uVar28 >> 8 ^ uVar28 << 0x18;\n    uVar21 = uVar21 + uVar33;\n    uVar22 = uVar22 + uVar36;\n    uVar23 = uVar23 + uVar31;\n    uVar24 = uVar24 + uVar45;\n    uVar39 = uVar39 ^ uVar21;\n    uVar41 = uVar41 ^ uVar22;\n    uVar43 = uVar43 ^ uVar23;\n    uVar34 = uVar34 ^ uVar24;\n    auVar46 = CONCAT412(uVar34 >> 7, CONCAT48(uVar43 >> 7, CONCAT44(uVar41 >> 7, uVar39 >> 7))) ^\n              CONCAT412(uVar34 << 0x19, CONCAT48(uVar43 << 0x19, CONCAT44(uVar41 << 0x19, uVar39 << 0x19)));\n    iVar8 = arg_ch[8];\n    iVar9 = arg_ch[0xf];\n    iVar10 = arg_ch[0xd];\n    iVar11 = arg_ch[0xb];\n    iVar12 = arg_ch[9];\n    uVar15 = uVar15 + iVar8 + SUB164(auVar46 >> 0x20, 0);\n    uVar16 = uVar14 + iVar40 + SUB164(auVar46 >> 0x40, 0);\n    uVar18 = uVar17 + iVar7 + SUB164(auVar46 >> 0x60, 0);\n    uVar20 = uVar19 + iVar6 + SUB164(auVar46, 0);\n    uVar45 = uVar45 ^ uVar15;\n    uVar33 = uVar33 ^ uVar16;\n    uVar36 = uVar36 ^ uVar18;\n    uVar31 = uVar31 ^ uVar20;\n    uVar14 = uVar45 >> 0x10 ^ uVar45 << 0x10;\n    uVar17 = uVar33 >> 0x10 ^ uVar33 << 0x10;\n    uVar19 = uVar36 >> 0x10 ^ uVar36 << 0x10;\n    uVar45 = uVar31 >> 0x10 ^ uVar31 << 0x10;\n    iVar27 = uVar23 + uVar14;\n    iVar30 = uVar24 + uVar17;\n    iVar32 = uVar21 + uVar19;\n    iVar35 = uVar22 + uVar45;\n    auVar46 = CONCAT412(SUB164(auVar46, 0), SUB1612(auVar46 >> 0x20, 0)) ^\n              CONCAT412(iVar35, CONCAT48(iVar32, CONCAT44(iVar30, iVar27)));\n    uVar22 = SUB164(auVar46 >> 0x20, 0);\n    uVar23 = SUB164(auVar46 >> 0x40, 0);\n    uVar24 = SUB164(auVar46 >> 0x60, 0);\n    uVar21 = SUB164(auVar46, 0) >> 0xc ^ SUB164(auVar46, 0) << 0x14;\n    uVar22 = uVar22 >> 0xc ^ uVar22 << 0x14;\n    uVar23 = uVar23 >> 0xc ^ uVar23 << 0x14;\n    uVar24 = uVar24 >> 0xc ^ uVar24 << 0x14;\n    uVar15 = uVar15 + iVar12 + uVar21;\n    uVar39 = uVar16 + iVar11 + uVar22;\n    uVar41 = uVar18 + iVar10 + uVar23;\n    uVar20 = uVar20 + iVar9 + uVar24;\n    uVar14 = uVar14 ^ uVar15;\n    uVar17 = uVar17 ^ uVar39;\n    uVar19 = uVar19 ^ uVar41;\n    uVar45 = uVar45 ^ uVar20;\n    auVar46 = CONCAT412(uVar45 >> 8, CONCAT48(uVar19 >> 8, CONCAT44(uVar17 >> 8, uVar14 >> 8))) ^\n              CONCAT412(uVar45 << 0x18, CONCAT48(uVar19 << 0x18, CONCAT44(uVar17 << 0x18, uVar14 << 0x18)));\n    uVar28 = iVar27 + SUB164(auVar46, 0);\n    uVar31 = iVar30 + SUB164(auVar46 >> 0x20, 0);\n    uVar33 = iVar32 + SUB164(auVar46 >> 0x40, 0);\n    uVar36 = iVar35 + SUB164(auVar46 >> 0x60, 0);\n    uVar21 = uVar21 ^ uVar28;\n    uVar22 = uVar22 ^ uVar31;\n    uVar23 = uVar23 ^ uVar33;\n    uVar24 = uVar24 ^ uVar36;\n    uVar18 = uVar21 >> 7 ^ uVar21 << 0x19;\n    uVar21 = uVar22 >> 7 ^ uVar22 << 0x19;\n    uVar22 = uVar23 >> 7 ^ uVar23 << 0x19;\n    uVar16 = uVar24 >> 7 ^ uVar24 << 0x19;\n    iVar27 = uVar15 + iVar6 + uVar16;\n    iVar30 = uVar39 + iVar37 + uVar18;\n    iVar32 = uVar41 + iVar12 + uVar21;\n    iVar35 = uVar20 + iVar10 + uVar22;\n    auVar46 = CONCAT412(SUB164(auVar46, 0), SUB1612(auVar46 >> 0x20, 0)) ^\n              CONCAT412(iVar35, CONCAT48(iVar32, CONCAT44(iVar30, iVar27)));\n    uVar14 = SUB164(auVar46 >> 0x20, 0);\n    uVar17 = SUB164(auVar46 >> 0x40, 0);\n    uVar19 = SUB164(auVar46 >> 0x60, 0);\n    uVar15 = SUB164(auVar46, 0) >> 0x10 ^ SUB164(auVar46, 0) << 0x10;\n    uVar14 = uVar14 >> 0x10 ^ uVar14 << 0x10;\n    uVar17 = uVar17 >> 0x10 ^ uVar17 << 0x10;\n    uVar19 = uVar19 >> 0x10 ^ uVar19 << 0x10;\n    uVar33 = uVar33 + uVar15;\n    uVar36 = uVar36 + uVar14;\n    uVar28 = uVar28 + uVar17;\n    uVar31 = uVar31 + uVar19;\n    uVar16 = uVar16 ^ uVar33;\n    uVar18 = uVar18 ^ uVar36;\n    uVar21 = uVar21 ^ uVar28;\n    uVar22 = uVar22 ^ uVar31;\n    uVar20 = uVar16 >> 0xc ^ uVar16 << 0x14;\n    uVar45 = uVar18 >> 0xc ^ uVar18 << 0x14;\n    uVar21 = uVar21 >> 0xc ^ uVar21 << 0x14;\n    uVar22 = uVar22 >> 0xc ^ uVar22 << 0x14;\n    uVar23 = iVar27 + iVar40 + uVar20;\n    uVar24 = iVar30 + iVar8 + uVar45;\n    uVar39 = iVar32 + iVar9 + uVar21;\n    uVar41 = iVar35 + iVar25 + uVar22;\n    uVar15 = uVar15 ^ uVar23;\n    uVar14 = uVar14 ^ uVar24;\n    uVar17 = uVar17 ^ uVar39;\n    uVar19 = uVar19 ^ uVar41;\n    uVar16 = uVar15 >> 8 ^ uVar15 << 0x18;\n    uVar18 = uVar14 >> 8 ^ uVar14 << 0x18;\n    uVar17 = uVar17 >> 8 ^ uVar17 << 0x18;\n    uVar15 = uVar19 >> 8 ^ uVar19 << 0x18;\n    uVar33 = uVar33 + uVar16;\n    uVar36 = uVar36 + uVar18;\n    uVar28 = uVar28 + uVar17;\n    uVar31 = uVar31 + uVar15;\n    uVar20 = uVar20 ^ uVar33;\n    uVar45 = uVar45 ^ uVar36;\n    uVar21 = uVar21 ^ uVar28;\n    uVar22 = uVar22 ^ uVar31;\n    auVar46 = CONCAT412(uVar22 >> 7, CONCAT48(uVar21 >> 7, CONCAT44(uVar45 >> 7, uVar20 >> 7))) ^\n              CONCAT412(uVar22 << 0x19, CONCAT48(uVar21 << 0x19, CONCAT44(uVar45 << 0x19, uVar20 << 0x19)));\n    uVar21 = uVar23 + iVar44 + SUB164(auVar46 >> 0x20, 0);\n    uVar22 = uVar24 + iVar3 + SUB164(auVar46 >> 0x40, 0);\n    uVar23 = uVar39 + iVar11 + SUB164(auVar46 >> 0x60, 0);\n    uVar24 = uVar41 + iVar4 + SUB164(auVar46, 0);\n    uVar15 = uVar15 ^ uVar21;\n    uVar16 = uVar16 ^ uVar22;\n    uVar18 = uVar18 ^ uVar23;\n    uVar17 = uVar17 ^ uVar24;\n    uVar15 = uVar15 >> 0x10 ^ uVar15 << 0x10;\n    uVar14 = uVar16 >> 0x10 ^ uVar16 << 0x10;\n    uVar16 = uVar18 >> 0x10 ^ uVar18 << 0x10;\n    uVar17 = uVar17 >> 0x10 ^ uVar17 << 0x10;\n    iVar27 = uVar28 + uVar15;\n    iVar30 = uVar31 + uVar14;\n    iVar32 = uVar33 + uVar16;\n    iVar35 = uVar36 + uVar17;\n    auVar46 = CONCAT412(SUB164(auVar46, 0), SUB1612(auVar46 >> 0x20, 0)) ^\n              CONCAT412(iVar35, CONCAT48(iVar32, CONCAT44(iVar30, iVar27)));\n    uVar19 = SUB164(auVar46 >> 0x20, 0);\n    uVar20 = SUB164(auVar46 >> 0x40, 0);\n    uVar45 = SUB164(auVar46 >> 0x60, 0);\n    uVar18 = SUB164(auVar46, 0) >> 0xc ^ SUB164(auVar46, 0) << 0x14;\n    uVar19 = uVar19 >> 0xc ^ uVar19 << 0x14;\n    uVar20 = uVar20 >> 0xc ^ uVar20 << 0x14;\n    uVar45 = uVar45 >> 0xc ^ uVar45 << 0x14;\n    uVar28 = uVar21 + iVar7 + uVar18;\n    uVar31 = uVar22 + *(arg_ch + 2) + uVar19;\n    uVar39 = uVar23 + iVar42 + uVar20;\n    uVar41 = uVar24 + iVar5 + uVar45;\n    uVar15 = uVar15 ^ uVar28;\n    uVar14 = uVar14 ^ uVar31;\n    uVar16 = uVar16 ^ uVar39;\n    uVar17 = uVar17 ^ uVar41;\n    auVar46 = CONCAT412(uVar17 >> 8, CONCAT48(uVar16 >> 8, CONCAT44(uVar14 >> 8, uVar15 >> 8))) ^\n              CONCAT412(uVar17 << 0x18, CONCAT48(uVar16 << 0x18, CONCAT44(uVar14 << 0x18, uVar15 << 0x18)));\n    uVar23 = iVar27 + SUB164(auVar46, 0);\n    uVar33 = iVar30 + SUB164(auVar46 >> 0x20, 0);\n    uVar24 = iVar32 + SUB164(auVar46 >> 0x40, 0);\n    uVar36 = iVar35 + SUB164(auVar46 >> 0x60, 0);\n    uVar18 = uVar18 ^ uVar23;\n    uVar19 = uVar19 ^ uVar33;\n    uVar20 = uVar20 ^ uVar24;\n    uVar45 = uVar45 ^ uVar36;\n    uVar18 = uVar18 >> 7 ^ uVar18 << 0x19;\n    uVar21 = uVar19 >> 7 ^ uVar19 << 0x19;\n    uVar22 = uVar20 >> 7 ^ uVar20 << 0x19;\n    uVar16 = uVar45 >> 7 ^ uVar45 << 0x19;\n    iVar27 = uVar28 + iVar11 + uVar16;\n    iVar30 = uVar31 + iVar7 + uVar18;\n    iVar32 = uVar39 + iVar4 + uVar21;\n    iVar35 = uVar41 + iVar9 + uVar22;\n    auVar46 = CONCAT412(SUB164(auVar46, 0), SUB1612(auVar46 >> 0x20, 0)) ^\n              CONCAT412(iVar35, CONCAT48(iVar32, CONCAT44(iVar30, iVar27)));\n    uVar14 = SUB164(auVar46 >> 0x20, 0);\n    uVar17 = SUB164(auVar46 >> 0x40, 0);\n    uVar19 = SUB164(auVar46 >> 0x60, 0);\n    uVar15 = SUB164(auVar46, 0) >> 0x10 ^ SUB164(auVar46, 0) << 0x10;\n    uVar14 = uVar14 >> 0x10 ^ uVar14 << 0x10;\n    uVar17 = uVar17 >> 0x10 ^ uVar17 << 0x10;\n    uVar19 = uVar19 >> 0x10 ^ uVar19 << 0x10;\n    uVar24 = uVar24 + uVar15;\n    uVar36 = uVar36 + uVar14;\n    uVar23 = uVar23 + uVar17;\n    uVar33 = uVar33 + uVar19;\n    uVar16 = uVar16 ^ uVar24;\n    uVar18 = uVar18 ^ uVar36;\n    uVar21 = uVar21 ^ uVar23;\n    uVar22 = uVar22 ^ uVar33;\n    uVar20 = uVar16 >> 0xc ^ uVar16 << 0x14;\n    uVar45 = uVar18 >> 0xc ^ uVar18 << 0x14;\n    uVar21 = uVar21 >> 0xc ^ uVar21 << 0x14;\n    uVar22 = uVar22 >> 0xc ^ uVar22 << 0x14;\n    uVar28 = iVar27 + iVar8 + uVar20;\n    uVar31 = iVar30 + iVar3 + uVar45;\n    uVar39 = iVar32 + iVar26 + uVar21;\n    uVar41 = iVar35 + iVar10 + uVar22;\n    uVar15 = uVar15 ^ uVar28;\n    uVar14 = uVar14 ^ uVar31;\n    uVar17 = uVar17 ^ uVar39;\n    uVar19 = uVar19 ^ uVar41;\n    uVar16 = uVar15 >> 8 ^ uVar15 << 0x18;\n    uVar18 = uVar14 >> 8 ^ uVar14 << 0x18;\n    uVar17 = uVar17 >> 8 ^ uVar17 << 0x18;\n    uVar15 = uVar19 >> 8 ^ uVar19 << 0x18;\n    uVar24 = uVar24 + uVar16;\n    uVar36 = uVar36 + uVar18;\n    uVar23 = uVar23 + uVar17;\n    uVar33 = uVar33 + uVar15;\n    uVar20 = uVar20 ^ uVar24;\n    uVar45 = uVar45 ^ uVar36;\n    uVar21 = uVar21 ^ uVar23;\n    uVar22 = uVar22 ^ uVar33;\n    auVar46 = CONCAT412(uVar22 >> 7, CONCAT48(uVar21 >> 7, CONCAT44(uVar45 >> 7, uVar20 >> 7))) ^\n              CONCAT412(uVar22 << 0x19, CONCAT48(uVar21 << 0x19, CONCAT44(uVar45 << 0x19, uVar20 << 0x19)));\n    uVar21 = uVar28 + iVar40 + SUB164(auVar46 >> 0x20, 0);\n    uVar22 = uVar31 + iVar5 + SUB164(auVar46 >> 0x40, 0);\n    uVar39 = uVar39 + iVar42 + SUB164(auVar46 >> 0x60, 0);\n    uVar41 = uVar41 + iVar12 + SUB164(auVar46, 0);\n    uVar15 = uVar15 ^ uVar21;\n    uVar16 = uVar16 ^ uVar22;\n    uVar18 = uVar18 ^ uVar39;\n    uVar17 = uVar17 ^ uVar41;\n    uVar15 = uVar15 >> 0x10 ^ uVar15 << 0x10;\n    uVar14 = uVar16 >> 0x10 ^ uVar16 << 0x10;\n    uVar16 = uVar18 >> 0x10 ^ uVar18 << 0x10;\n    uVar17 = uVar17 >> 0x10 ^ uVar17 << 0x10;\n    iVar27 = uVar23 + uVar15;\n    iVar30 = uVar33 + uVar14;\n    iVar32 = uVar24 + uVar16;\n    iVar35 = uVar36 + uVar17;\n    auVar46 = CONCAT412(SUB164(auVar46, 0), SUB1612(auVar46 >> 0x20, 0)) ^\n              CONCAT412(iVar35, CONCAT48(iVar32, CONCAT44(iVar30, iVar27)));\n    uVar19 = SUB164(auVar46 >> 0x20, 0);\n    uVar20 = SUB164(auVar46 >> 0x40, 0);\n    uVar45 = SUB164(auVar46 >> 0x60, 0);\n    uVar18 = SUB164(auVar46, 0) >> 0xc ^ SUB164(auVar46, 0) << 0x14;\n    uVar19 = uVar19 >> 0xc ^ uVar19 << 0x14;\n    uVar20 = uVar20 >> 0xc ^ uVar20 << 0x14;\n    uVar45 = uVar45 >> 0xc ^ uVar45 << 0x14;\n    uVar28 = uVar21 + iVar6 + uVar18;\n    uVar31 = uVar22 + iVar25 + uVar19;\n    uVar39 = uVar39 + iVar44 + uVar20;\n    uVar41 = uVar41 + iVar37 + uVar45;\n    uVar15 = uVar15 ^ uVar28;\n    uVar14 = uVar14 ^ uVar31;\n    uVar16 = uVar16 ^ uVar39;\n    uVar17 = uVar17 ^ uVar41;\n    auVar46 = CONCAT412(uVar17 >> 8, CONCAT48(uVar16 >> 8, CONCAT44(uVar14 >> 8, uVar15 >> 8))) ^\n              CONCAT412(uVar17 << 0x18, CONCAT48(uVar16 << 0x18, CONCAT44(uVar14 << 0x18, uVar15 << 0x18)));\n    uVar23 = iVar27 + SUB164(auVar46, 0);\n    uVar33 = iVar30 + SUB164(auVar46 >> 0x20, 0);\n    uVar24 = iVar32 + SUB164(auVar46 >> 0x40, 0);\n    uVar36 = iVar35 + SUB164(auVar46 >> 0x60, 0);\n    uVar18 = uVar18 ^ uVar23;\n    uVar19 = uVar19 ^ uVar33;\n    uVar20 = uVar20 ^ uVar24;\n    uVar45 = uVar45 ^ uVar36;\n    uVar18 = uVar18 >> 7 ^ uVar18 << 0x19;\n    uVar21 = uVar19 >> 7 ^ uVar19 << 0x19;\n    uVar22 = uVar20 >> 7 ^ uVar20 << 0x19;\n    uVar16 = uVar45 >> 7 ^ uVar45 << 0x19;\n    iVar27 = uVar28 + iVar42 + uVar16;\n    iVar30 = uVar31 + iVar5 + uVar18;\n    iVar32 = uVar39 + iVar10 + uVar21;\n    iVar35 = uVar41 + iVar11 + uVar22;\n    auVar46 = CONCAT412(SUB164(auVar46, 0), SUB1612(auVar46 >> 0x20, 0)) ^\n              CONCAT412(iVar35, CONCAT48(iVar32, CONCAT44(iVar30, iVar27)));\n    uVar14 = SUB164(auVar46 >> 0x20, 0);\n    uVar17 = SUB164(auVar46 >> 0x40, 0);\n    uVar19 = SUB164(auVar46 >> 0x60, 0);\n    uVar15 = SUB164(auVar46, 0) >> 0x10 ^ SUB164(auVar46, 0) << 0x10;\n    uVar14 = uVar14 >> 0x10 ^ uVar14 << 0x10;\n    uVar17 = uVar17 >> 0x10 ^ uVar17 << 0x10;\n    uVar19 = uVar19 >> 0x10 ^ uVar19 << 0x10;\n    uVar24 = uVar24 + uVar15;\n    uVar36 = uVar36 + uVar14;\n    uVar23 = uVar23 + uVar17;\n    uVar33 = uVar33 + uVar19;\n    uVar16 = uVar16 ^ uVar24;\n    uVar18 = uVar18 ^ uVar36;\n    uVar21 = uVar21 ^ uVar23;\n    uVar22 = uVar22 ^ uVar33;\n    uVar20 = uVar16 >> 0xc ^ uVar16 << 0x14;\n    uVar45 = uVar18 >> 0xc ^ uVar18 << 0x14;\n    uVar21 = uVar21 >> 0xc ^ uVar21 << 0x14;\n    uVar22 = uVar22 >> 0xc ^ uVar22 << 0x14;\n    uVar28 = iVar27 + iVar12 + uVar20;\n    uVar31 = iVar30 + iVar44 + uVar45;\n    uVar39 = iVar32 + iVar7 + uVar21;\n    uVar41 = iVar35 + iVar6 + uVar22;\n    uVar15 = uVar15 ^ uVar28;\n    uVar14 = uVar14 ^ uVar31;\n    uVar17 = uVar17 ^ uVar39;\n    uVar19 = uVar19 ^ uVar41;\n    uVar16 = uVar15 >> 8 ^ uVar15 << 0x18;\n    uVar18 = uVar14 >> 8 ^ uVar14 << 0x18;\n    uVar17 = uVar17 >> 8 ^ uVar17 << 0x18;\n    uVar15 = uVar19 >> 8 ^ uVar19 << 0x18;\n    uVar24 = uVar24 + uVar16;\n    uVar36 = uVar36 + uVar18;\n    uVar23 = uVar23 + uVar17;\n    uVar33 = uVar33 + uVar15;\n    uVar20 = uVar20 ^ uVar24;\n    uVar45 = uVar45 ^ uVar36;\n    uVar21 = uVar21 ^ uVar23;\n    uVar22 = uVar22 ^ uVar33;\n    auVar46 = CONCAT412(uVar22 >> 7, CONCAT48(uVar21 >> 7, CONCAT44(uVar45 >> 7, uVar20 >> 7))) ^\n              CONCAT412(uVar22 << 0x19, CONCAT48(uVar21 << 0x19, CONCAT44(uVar45 << 0x19, uVar20 << 0x19)));\n    uVar21 = uVar28 + iVar26 + SUB164(auVar46 >> 0x20, 0);\n    uVar22 = uVar31 + iVar4 + SUB164(auVar46 >> 0x40, 0);\n    uVar39 = uVar39 + iVar37 + SUB164(auVar46 >> 0x60, 0);\n    uVar41 = uVar41 + iVar9 + SUB164(auVar46, 0);\n    uVar15 = uVar15 ^ uVar21;\n    uVar16 = uVar16 ^ uVar22;\n    uVar18 = uVar18 ^ uVar39;\n    uVar17 = uVar17 ^ uVar41;\n    uVar15 = uVar15 >> 0x10 ^ uVar15 << 0x10;\n    uVar14 = uVar16 >> 0x10 ^ uVar16 << 0x10;\n    uVar16 = uVar18 >> 0x10 ^ uVar18 << 0x10;\n    uVar17 = uVar17 >> 0x10 ^ uVar17 << 0x10;\n    iVar27 = uVar23 + uVar15;\n    iVar30 = uVar33 + uVar14;\n    iVar32 = uVar24 + uVar16;\n    iVar35 = uVar36 + uVar17;\n    auVar46 = CONCAT412(SUB164(auVar46, 0), SUB1612(auVar46 >> 0x20, 0)) ^\n              CONCAT412(iVar35, CONCAT48(iVar32, CONCAT44(iVar30, iVar27)));\n    uVar19 = SUB164(auVar46 >> 0x20, 0);\n    uVar20 = SUB164(auVar46 >> 0x40, 0);\n    uVar45 = SUB164(auVar46 >> 0x60, 0);\n    uVar18 = SUB164(auVar46, 0) >> 0xc ^ SUB164(auVar46, 0) << 0x14;\n    uVar19 = uVar19 >> 0xc ^ uVar19 << 0x14;\n    uVar20 = uVar20 >> 0xc ^ uVar20 << 0x14;\n    uVar45 = uVar45 >> 0xc ^ uVar45 << 0x14;\n    uVar28 = uVar21 + iVar25 + uVar18;\n    uVar31 = uVar22 + iVar40 + uVar19;\n    uVar39 = uVar39 + iVar3 + uVar20;\n    uVar41 = uVar41 + iVar8 + uVar45;\n    uVar15 = uVar15 ^ uVar28;\n    uVar14 = uVar14 ^ uVar31;\n    uVar16 = uVar16 ^ uVar39;\n    uVar17 = uVar17 ^ uVar41;\n    auVar46 = CONCAT412(uVar17 >> 8, CONCAT48(uVar16 >> 8, CONCAT44(uVar14 >> 8, uVar15 >> 8))) ^\n              CONCAT412(uVar17 << 0x18, CONCAT48(uVar16 << 0x18, CONCAT44(uVar14 << 0x18, uVar15 << 0x18)));\n    uVar23 = iVar27 + SUB164(auVar46, 0);\n    uVar33 = iVar30 + SUB164(auVar46 >> 0x20, 0);\n    uVar24 = iVar32 + SUB164(auVar46 >> 0x40, 0);\n    uVar36 = iVar35 + SUB164(auVar46 >> 0x60, 0);\n    uVar18 = uVar18 ^ uVar23;\n    uVar19 = uVar19 ^ uVar33;\n    uVar20 = uVar20 ^ uVar24;\n    uVar45 = uVar45 ^ uVar36;\n    uVar18 = uVar18 >> 7 ^ uVar18 << 0x19;\n    uVar21 = uVar19 >> 7 ^ uVar19 << 0x19;\n    uVar22 = uVar20 >> 7 ^ uVar20 << 0x19;\n    uVar16 = uVar45 >> 7 ^ uVar45 << 0x19;\n    iVar27 = uVar28 + iVar12 + uVar16;\n    iVar30 = uVar31 + iVar4 + uVar18;\n    iVar32 = uVar39 + iVar26 + uVar21;\n    iVar35 = uVar41 + iVar40 + uVar22;\n    auVar46 = CONCAT412(SUB164(auVar46, 0), SUB1612(auVar46 >> 0x20, 0)) ^\n              CONCAT412(iVar35, CONCAT48(iVar32, CONCAT44(iVar30, iVar27)));\n    uVar14 = SUB164(auVar46 >> 0x20, 0);\n    uVar17 = SUB164(auVar46 >> 0x40, 0);\n    uVar19 = SUB164(auVar46 >> 0x60, 0);\n    uVar15 = SUB164(auVar46, 0) >> 0x10 ^ SUB164(auVar46, 0) << 0x10;\n    uVar14 = uVar14 >> 0x10 ^ uVar14 << 0x10;\n    uVar17 = uVar17 >> 0x10 ^ uVar17 << 0x10;\n    uVar19 = uVar19 >> 0x10 ^ uVar19 << 0x10;\n    uVar24 = uVar24 + uVar15;\n    uVar36 = uVar36 + uVar14;\n    uVar23 = uVar23 + uVar17;\n    uVar33 = uVar33 + uVar19;\n    uVar16 = uVar16 ^ uVar24;\n    uVar18 = uVar18 ^ uVar36;\n    uVar21 = uVar21 ^ uVar23;\n    uVar22 = uVar22 ^ uVar33;\n    uVar20 = uVar16 >> 0xc ^ uVar16 << 0x14;\n    uVar45 = uVar18 >> 0xc ^ uVar18 << 0x14;\n    uVar21 = uVar21 >> 0xc ^ uVar21 << 0x14;\n    uVar22 = uVar22 >> 0xc ^ uVar22 << 0x14;\n    uVar28 = iVar27 + iVar3 + uVar20;\n    uVar31 = iVar30 + iVar42 + uVar45;\n    uVar39 = iVar32 + iVar37 + uVar21;\n    uVar41 = iVar35 + iVar9 + uVar22;\n    uVar15 = uVar15 ^ uVar28;\n    uVar14 = uVar14 ^ uVar31;\n    uVar17 = uVar17 ^ uVar39;\n    uVar19 = uVar19 ^ uVar41;\n    uVar16 = uVar15 >> 8 ^ uVar15 << 0x18;\n    uVar18 = uVar14 >> 8 ^ uVar14 << 0x18;\n    uVar17 = uVar17 >> 8 ^ uVar17 << 0x18;\n    uVar15 = uVar19 >> 8 ^ uVar19 << 0x18;\n    uVar24 = uVar24 + uVar16;\n    uVar36 = uVar36 + uVar18;\n    uVar23 = uVar23 + uVar17;\n    uVar33 = uVar33 + uVar15;\n    uVar20 = uVar20 ^ uVar24;\n    uVar45 = uVar45 ^ uVar36;\n    uVar21 = uVar21 ^ uVar23;\n    uVar22 = uVar22 ^ uVar33;\n    auVar46 = CONCAT412(uVar22 >> 7, CONCAT48(uVar21 >> 7, CONCAT44(uVar45 >> 7, uVar20 >> 7))) ^\n              CONCAT412(uVar22 << 0x19, CONCAT48(uVar21 << 0x19, CONCAT44(uVar45 << 0x19, uVar20 << 0x19)));\n    uVar21 = uVar28 + iVar6 + SUB164(auVar46 >> 0x20, 0);\n    uVar22 = uVar31 + iVar11 + SUB164(auVar46 >> 0x40, 0);\n    uVar39 = uVar39 + iVar25 + SUB164(auVar46 >> 0x60, 0);\n    uVar41 = uVar41 + iVar5 + SUB164(auVar46, 0);\n    uVar15 = uVar15 ^ uVar21;\n    uVar16 = uVar16 ^ uVar22;\n    uVar18 = uVar18 ^ uVar39;\n    uVar17 = uVar17 ^ uVar41;\n    uVar15 = uVar15 >> 0x10 ^ uVar15 << 0x10;\n    uVar14 = uVar16 >> 0x10 ^ uVar16 << 0x10;\n    uVar16 = uVar18 >> 0x10 ^ uVar18 << 0x10;\n    uVar17 = uVar17 >> 0x10 ^ uVar17 << 0x10;\n    iVar27 = uVar23 + uVar15;\n    iVar30 = uVar33 + uVar14;\n    iVar32 = uVar24 + uVar16;\n    iVar35 = uVar36 + uVar17;\n    auVar46 = CONCAT412(SUB164(auVar46, 0), SUB1612(auVar46 >> 0x20, 0)) ^\n              CONCAT412(iVar35, CONCAT48(iVar32, CONCAT44(iVar30, iVar27)));\n    uVar19 = SUB164(auVar46 >> 0x20, 0);\n    uVar20 = SUB164(auVar46 >> 0x40, 0);\n    uVar45 = SUB164(auVar46 >> 0x60, 0);\n    uVar18 = SUB164(auVar46, 0) >> 0xc ^ SUB164(auVar46, 0) << 0x14;\n    uVar19 = uVar19 >> 0xc ^ uVar19 << 0x14;\n    uVar20 = uVar20 >> 0xc ^ uVar20 << 0x14;\n    uVar45 = uVar45 >> 0xc ^ uVar45 << 0x14;\n    uVar28 = uVar21 + iVar44 + uVar18;\n    uVar31 = uVar22 + iVar7 + uVar19;\n    uVar39 = uVar39 + iVar8 + uVar20;\n    uVar41 = uVar41 + iVar10 + uVar45;\n    uVar15 = uVar15 ^ uVar28;\n    uVar14 = uVar14 ^ uVar31;\n    uVar16 = uVar16 ^ uVar39;\n    uVar17 = uVar17 ^ uVar41;\n    auVar46 = CONCAT412(uVar17 >> 8, CONCAT48(uVar16 >> 8, CONCAT44(uVar14 >> 8, uVar15 >> 8))) ^\n              CONCAT412(uVar17 << 0x18, CONCAT48(uVar16 << 0x18, CONCAT44(uVar14 << 0x18, uVar15 << 0x18)));\n    uVar23 = iVar27 + SUB164(auVar46, 0);\n    uVar33 = iVar30 + SUB164(auVar46 >> 0x20, 0);\n    uVar24 = iVar32 + SUB164(auVar46 >> 0x40, 0);\n    uVar36 = iVar35 + SUB164(auVar46 >> 0x60, 0);\n    uVar18 = uVar18 ^ uVar23;\n    uVar19 = uVar19 ^ uVar33;\n    uVar20 = uVar20 ^ uVar24;\n    uVar45 = uVar45 ^ uVar36;\n    uVar18 = uVar18 >> 7 ^ uVar18 << 0x19;\n    uVar21 = uVar19 >> 7 ^ uVar19 << 0x19;\n    uVar22 = uVar20 >> 7 ^ uVar20 << 0x19;\n    uVar16 = uVar45 >> 7 ^ uVar45 << 0x19;\n    iVar27 = uVar28 + iVar26 + uVar16;\n    iVar30 = uVar31 + iVar25 + uVar18;\n    iVar32 = uVar39 + iVar3 + uVar21;\n    iVar35 = uVar41 + iVar8 + uVar22;\n    auVar46 = CONCAT412(SUB164(auVar46, 0), SUB1612(auVar46 >> 0x20, 0)) ^\n              CONCAT412(iVar35, CONCAT48(iVar32, CONCAT44(iVar30, iVar27)));\n    uVar14 = SUB164(auVar46 >> 0x20, 0);\n    uVar17 = SUB164(auVar46 >> 0x40, 0);\n    uVar19 = SUB164(auVar46 >> 0x60, 0);\n    uVar15 = SUB164(auVar46, 0) >> 0x10 ^ SUB164(auVar46, 0) << 0x10;\n    uVar14 = uVar14 >> 0x10 ^ uVar14 << 0x10;\n    uVar17 = uVar17 >> 0x10 ^ uVar17 << 0x10;\n    uVar19 = uVar19 >> 0x10 ^ uVar19 << 0x10;\n    uVar24 = uVar24 + uVar15;\n    uVar36 = uVar36 + uVar14;\n    uVar23 = uVar23 + uVar17;\n    uVar33 = uVar33 + uVar19;\n    uVar16 = uVar16 ^ uVar24;\n    uVar18 = uVar18 ^ uVar36;\n    uVar21 = uVar21 ^ uVar23;\n    uVar22 = uVar22 ^ uVar33;\n    uVar20 = uVar16 >> 0xc ^ uVar16 << 0x14;\n    uVar45 = uVar18 >> 0xc ^ uVar18 << 0x14;\n    uVar21 = uVar21 >> 0xc ^ uVar21 << 0x14;\n    uVar22 = uVar22 >> 0xc ^ uVar22 << 0x14;\n    uVar28 = iVar27 + iVar7 + uVar20;\n    uVar31 = iVar30 + iVar40 + uVar45;\n    uVar39 = iVar32 + iVar11 + uVar21;\n    uVar41 = iVar35 + iVar5 + uVar22;\n    uVar15 = uVar15 ^ uVar28;\n    uVar14 = uVar14 ^ uVar31;\n    uVar17 = uVar17 ^ uVar39;\n    uVar19 = uVar19 ^ uVar41;\n    uVar16 = uVar15 >> 8 ^ uVar15 << 0x18;\n    uVar18 = uVar14 >> 8 ^ uVar14 << 0x18;\n    uVar17 = uVar17 >> 8 ^ uVar17 << 0x18;\n    uVar15 = uVar19 >> 8 ^ uVar19 << 0x18;\n    uVar24 = uVar24 + uVar16;\n    uVar36 = uVar36 + uVar18;\n    uVar23 = uVar23 + uVar17;\n    uVar33 = uVar33 + uVar15;\n    uVar20 = uVar20 ^ uVar24;\n    uVar45 = uVar45 ^ uVar36;\n    uVar21 = uVar21 ^ uVar23;\n    uVar22 = uVar22 ^ uVar33;\n    auVar46 = CONCAT412(uVar22 >> 7, CONCAT48(uVar21 >> 7, CONCAT44(uVar45 >> 7, uVar20 >> 7))) ^\n              CONCAT412(uVar22 << 0x19, CONCAT48(uVar21 << 0x19, CONCAT44(uVar45 << 0x19, uVar20 << 0x19)));\n    uVar21 = uVar28 + iVar37 + SUB164(auVar46 >> 0x20, 0);\n    uVar22 = uVar31 + iVar42 + SUB164(auVar46 >> 0x40, 0);\n    uVar39 = uVar39 + iVar9 + SUB164(auVar46 >> 0x60, 0);\n    uVar41 = uVar41 + iVar44 + SUB164(auVar46, 0);\n    uVar15 = uVar15 ^ uVar21;\n    uVar16 = uVar16 ^ uVar22;\n    uVar18 = uVar18 ^ uVar39;\n    uVar17 = uVar17 ^ uVar41;\n    uVar15 = uVar15 >> 0x10 ^ uVar15 << 0x10;\n    uVar14 = uVar16 >> 0x10 ^ uVar16 << 0x10;\n    uVar16 = uVar18 >> 0x10 ^ uVar18 << 0x10;\n    uVar17 = uVar17 >> 0x10 ^ uVar17 << 0x10;\n    iVar27 = uVar23 + uVar15;\n    iVar30 = uVar33 + uVar14;\n    iVar32 = uVar24 + uVar16;\n    iVar35 = uVar36 + uVar17;\n    auVar46 = CONCAT412(SUB164(auVar46, 0), SUB1612(auVar46 >> 0x20, 0)) ^\n              CONCAT412(iVar35, CONCAT48(iVar32, CONCAT44(iVar30, iVar27)));\n    uVar19 = SUB164(auVar46 >> 0x20, 0);\n    uVar20 = SUB164(auVar46 >> 0x40, 0);\n    uVar45 = SUB164(auVar46 >> 0x60, 0);\n    uVar18 = SUB164(auVar46, 0) >> 0xc ^ SUB164(auVar46, 0) << 0x14;\n    uVar19 = uVar19 >> 0xc ^ uVar19 << 0x14;\n    uVar20 = uVar20 >> 0xc ^ uVar20 << 0x14;\n    uVar45 = uVar45 >> 0xc ^ uVar45 << 0x14;\n    uVar28 = uVar21 + iVar10 + uVar18;\n    uVar31 = uVar22 + iVar4 + uVar19;\n    uVar39 = uVar39 + iVar6 + uVar20;\n    uVar41 = uVar41 + iVar12 + uVar45;\n    uVar15 = uVar15 ^ uVar28;\n    uVar14 = uVar14 ^ uVar31;\n    uVar16 = uVar16 ^ uVar39;\n    uVar17 = uVar17 ^ uVar41;\n    auVar46 = CONCAT412(uVar17 >> 8, CONCAT48(uVar16 >> 8, CONCAT44(uVar14 >> 8, uVar15 >> 8))) ^\n              CONCAT412(uVar17 << 0x18, CONCAT48(uVar16 << 0x18, CONCAT44(uVar14 << 0x18, uVar15 << 0x18)));\n    uVar23 = iVar27 + SUB164(auVar46, 0);\n    uVar33 = iVar30 + SUB164(auVar46 >> 0x20, 0);\n    uVar24 = iVar32 + SUB164(auVar46 >> 0x40, 0);\n    uVar36 = iVar35 + SUB164(auVar46 >> 0x60, 0);\n    uVar18 = uVar18 ^ uVar23;\n    uVar19 = uVar19 ^ uVar33;\n    uVar20 = uVar20 ^ uVar24;\n    uVar45 = uVar45 ^ uVar36;\n    uVar18 = uVar18 >> 7 ^ uVar18 << 0x19;\n    uVar21 = uVar19 >> 7 ^ uVar19 << 0x19;\n    uVar22 = uVar20 >> 7 ^ uVar20 << 0x19;\n    uVar16 = uVar45 >> 7 ^ uVar45 << 0x19;\n    iVar27 = uVar28 + iVar7 + uVar16;\n    iVar30 = uVar31 + iVar44 + uVar18;\n    iVar32 = uVar39 + iVar6 + uVar21;\n    iVar35 = uVar41 + iVar37 + uVar22;\n    auVar46 = CONCAT412(SUB164(auVar46, 0), SUB1612(auVar46 >> 0x20, 0)) ^\n              CONCAT412(iVar35, CONCAT48(iVar32, CONCAT44(iVar30, iVar27)));\n    uVar14 = SUB164(auVar46 >> 0x20, 0);\n    uVar17 = SUB164(auVar46 >> 0x40, 0);\n    uVar19 = SUB164(auVar46 >> 0x60, 0);\n    uVar15 = SUB164(auVar46, 0) >> 0x10 ^ SUB164(auVar46, 0) << 0x10;\n    uVar14 = uVar14 >> 0x10 ^ uVar14 << 0x10;\n    uVar17 = uVar17 >> 0x10 ^ uVar17 << 0x10;\n    uVar19 = uVar19 >> 0x10 ^ uVar19 << 0x10;\n    uVar24 = uVar24 + uVar15;\n    uVar36 = uVar36 + uVar14;\n    uVar23 = uVar23 + uVar17;\n    uVar33 = uVar33 + uVar19;\n    uVar16 = uVar16 ^ uVar24;\n    uVar18 = uVar18 ^ uVar36;\n    uVar21 = uVar21 ^ uVar23;\n    uVar22 = uVar22 ^ uVar33;\n    uVar20 = uVar16 >> 0xc ^ uVar16 << 0x14;\n    uVar45 = uVar18 >> 0xc ^ uVar18 << 0x14;\n    uVar21 = uVar21 >> 0xc ^ uVar21 << 0x14;\n    uVar22 = uVar22 >> 0xc ^ uVar22 << 0x14;\n    uVar28 = iVar27 + iVar4 + uVar20;\n    uVar31 = iVar30 + iVar9 + uVar45;\n    uVar39 = iVar32 + iVar10 + uVar21;\n    uVar43 = iVar35 + iVar40 + uVar22;\n    uVar15 = uVar15 ^ uVar28;\n    uVar14 = uVar14 ^ uVar31;\n    uVar17 = uVar17 ^ uVar39;\n    uVar19 = uVar19 ^ uVar43;\n    uVar16 = uVar15 >> 8 ^ uVar15 << 0x18;\n    uVar18 = uVar14 >> 8 ^ uVar14 << 0x18;\n    uVar17 = uVar17 >> 8 ^ uVar17 << 0x18;\n    uVar15 = uVar19 >> 8 ^ uVar19 << 0x18;\n    uVar24 = uVar24 + uVar16;\n    uVar36 = uVar36 + uVar18;\n    uVar23 = uVar23 + uVar17;\n    uVar33 = uVar33 + uVar15;\n    uVar20 = uVar20 ^ uVar24;\n    uVar45 = uVar45 ^ uVar36;\n    uVar21 = uVar21 ^ uVar23;\n    uVar22 = uVar22 ^ uVar33;\n    auVar46 = CONCAT412(uVar22 >> 7, CONCAT48(uVar21 >> 7, CONCAT44(uVar45 >> 7, uVar20 >> 7))) ^\n              CONCAT412(uVar22 << 0x19, CONCAT48(uVar21 << 0x19, CONCAT44(uVar45 << 0x19, uVar20 << 0x19)));\n    uVar21 = uVar28 + iVar3 + SUB164(auVar46 >> 0x20, 0);\n    uVar28 = uVar31 + iVar25 + SUB164(auVar46 >> 0x40, 0);\n    uVar41 = uVar39 + iVar12 + SUB164(auVar46 >> 0x60, 0);\n    uVar43 = uVar43 + iVar8 + SUB164(auVar46, 0);\n    uVar15 = uVar15 ^ uVar21;\n    uVar16 = uVar16 ^ uVar28;\n    uVar18 = uVar18 ^ uVar41;\n    uVar17 = uVar17 ^ uVar43;\n    uVar15 = uVar15 >> 0x10 ^ uVar15 << 0x10;\n    uVar14 = uVar16 >> 0x10 ^ uVar16 << 0x10;\n    uVar16 = uVar18 >> 0x10 ^ uVar18 << 0x10;\n    uVar17 = uVar17 >> 0x10 ^ uVar17 << 0x10;\n    iVar27 = uVar23 + uVar15;\n    iVar30 = uVar33 + uVar14;\n    iVar32 = uVar24 + uVar16;\n    iVar35 = uVar36 + uVar17;\n    auVar46 = CONCAT412(SUB164(auVar46, 0), SUB1612(auVar46 >> 0x20, 0)) ^\n              CONCAT412(iVar35, CONCAT48(iVar32, CONCAT44(iVar30, iVar27)));\n    uVar19 = SUB164(auVar46 >> 0x20, 0);\n    uVar20 = SUB164(auVar46 >> 0x40, 0);\n    uVar45 = SUB164(auVar46 >> 0x60, 0);\n    uVar18 = SUB164(auVar46, 0) >> 0xc ^ SUB164(auVar46, 0) << 0x14;\n    uVar19 = uVar19 >> 0xc ^ uVar19 << 0x14;\n    uVar20 = uVar20 >> 0xc ^ uVar20 << 0x14;\n    uVar22 = uVar45 >> 0xc ^ uVar45 << 0x14;\n    uVar31 = uVar21 + iVar42 + uVar18;\n    uVar39 = uVar28 + iVar5 + uVar19;\n    uVar41 = uVar41 + iVar26 + uVar20;\n    uVar43 = uVar43 + iVar11 + uVar22;\n    uVar15 = uVar15 ^ uVar31;\n    uVar14 = uVar14 ^ uVar39;\n    uVar16 = uVar16 ^ uVar41;\n    uVar17 = uVar17 ^ uVar43;\n    auVar46 = CONCAT412(uVar17 >> 8, CONCAT48(uVar16 >> 8, CONCAT44(uVar14 >> 8, uVar15 >> 8))) ^\n              CONCAT412(uVar17 << 0x18, CONCAT48(uVar16 << 0x18, CONCAT44(uVar14 << 0x18, uVar15 << 0x18)));\n    uVar24 = iVar27 + SUB164(auVar46, 0);\n    uVar36 = iVar30 + SUB164(auVar46 >> 0x20, 0);\n    uVar33 = iVar32 + SUB164(auVar46 >> 0x40, 0);\n    uVar28 = iVar35 + SUB164(auVar46 >> 0x60, 0);\n    uVar18 = uVar18 ^ uVar24;\n    uVar19 = uVar19 ^ uVar36;\n    uVar20 = uVar20 ^ uVar33;\n    uVar22 = uVar22 ^ uVar28;\n    uVar45 = uVar18 >> 7 ^ uVar18 << 0x19;\n    uVar21 = uVar19 >> 7 ^ uVar19 << 0x19;\n    uVar23 = uVar20 >> 7 ^ uVar20 << 0x19;\n    uVar20 = uVar22 >> 7 ^ uVar22 << 0x19;\n    iVar27 = uVar31 + iVar10 + uVar20;\n    iVar30 = uVar39 + iVar42 + uVar45;\n    iVar32 = uVar41 + iVar7 + uVar21;\n    iVar35 = uVar43 + iVar5 + uVar23;\n    auVar46 = CONCAT412(SUB164(auVar46, 0), SUB1612(auVar46 >> 0x20, 0)) ^\n              CONCAT412(iVar35, CONCAT48(iVar32, CONCAT44(iVar30, iVar27)));\n    uVar14 = SUB164(auVar46 >> 0x20, 0);\n    uVar16 = SUB164(auVar46 >> 0x40, 0);\n    uVar18 = SUB164(auVar46 >> 0x60, 0);\n    uVar15 = SUB164(auVar46, 0) >> 0x10 ^ SUB164(auVar46, 0) << 0x10;\n    uVar14 = uVar14 >> 0x10 ^ uVar14 << 0x10;\n    uVar17 = uVar16 >> 0x10 ^ uVar16 << 0x10;\n    uVar19 = uVar18 >> 0x10 ^ uVar18 << 0x10;\n    uVar33 = uVar33 + uVar15;\n    uVar28 = uVar28 + uVar14;\n    uVar24 = uVar24 + uVar17;\n    uVar36 = uVar36 + uVar19;\n    uVar20 = uVar20 ^ uVar33;\n    uVar45 = uVar45 ^ uVar28;\n    uVar21 = uVar21 ^ uVar24;\n    uVar23 = uVar23 ^ uVar36;\n    uVar20 = uVar20 >> 0xc ^ uVar20 << 0x14;\n    uVar45 = uVar45 >> 0xc ^ uVar45 << 0x14;\n    uVar21 = uVar21 >> 0xc ^ uVar21 << 0x14;\n    uVar22 = uVar23 >> 0xc ^ uVar23 << 0x14;\n    uVar23 = iVar27 + iVar11 + uVar20;\n    uVar31 = iVar30 + iVar6 + uVar45;\n    uVar39 = iVar32 + iVar44 + uVar21;\n    uVar41 = iVar35 + iVar12 + uVar22;\n    uVar15 = uVar15 ^ uVar23;\n    uVar14 = uVar14 ^ uVar31;\n    uVar17 = uVar17 ^ uVar39;\n    uVar19 = uVar19 ^ uVar41;\n    uVar16 = uVar15 >> 8 ^ uVar15 << 0x18;\n    uVar18 = uVar14 >> 8 ^ uVar14 << 0x18;\n    uVar17 = uVar17 >> 8 ^ uVar17 << 0x18;\n    uVar15 = uVar19 >> 8 ^ uVar19 << 0x18;\n    uVar33 = uVar33 + uVar16;\n    uVar28 = uVar28 + uVar18;\n    uVar24 = uVar24 + uVar17;\n    uVar36 = uVar36 + uVar15;\n    uVar20 = uVar20 ^ uVar33;\n    uVar45 = uVar45 ^ uVar28;\n    uVar21 = uVar21 ^ uVar24;\n    uVar22 = uVar22 ^ uVar36;\n    auVar46 = CONCAT412(uVar22 >> 7, CONCAT48(uVar21 >> 7, CONCAT44(uVar45 >> 7, uVar20 >> 7))) ^\n              CONCAT412(uVar22 << 0x19, CONCAT48(uVar21 << 0x19, CONCAT44(uVar45 << 0x19, uVar20 << 0x19)));\n    uVar21 = uVar23 + iVar4 + SUB164(auVar46 >> 0x20, 0);\n    uVar22 = uVar31 + iVar9 + SUB164(auVar46 >> 0x40, 0);\n    uVar23 = uVar39 + iVar8 + SUB164(auVar46 >> 0x60, 0);\n    uVar41 = uVar41 + iVar26 + SUB164(auVar46, 0);\n    uVar15 = uVar15 ^ uVar21;\n    uVar16 = uVar16 ^ uVar22;\n    uVar18 = uVar18 ^ uVar23;\n    uVar17 = uVar17 ^ uVar41;\n    uVar15 = uVar15 >> 0x10 ^ uVar15 << 0x10;\n    uVar14 = uVar16 >> 0x10 ^ uVar16 << 0x10;\n    uVar16 = uVar18 >> 0x10 ^ uVar18 << 0x10;\n    uVar17 = uVar17 >> 0x10 ^ uVar17 << 0x10;\n    iVar27 = uVar24 + uVar15;\n    iVar30 = uVar36 + uVar14;\n    iVar32 = uVar33 + uVar16;\n    iVar35 = uVar28 + uVar17;\n    auVar46 = CONCAT412(SUB164(auVar46, 0), SUB1612(auVar46 >> 0x20, 0)) ^\n              CONCAT412(iVar35, CONCAT48(iVar32, CONCAT44(iVar30, iVar27)));\n    uVar19 = SUB164(auVar46 >> 0x20, 0);\n    uVar20 = SUB164(auVar46 >> 0x40, 0);\n    uVar45 = SUB164(auVar46 >> 0x60, 0);\n    uVar18 = SUB164(auVar46, 0) >> 0xc ^ SUB164(auVar46, 0) << 0x14;\n    uVar19 = uVar19 >> 0xc ^ uVar19 << 0x14;\n    uVar20 = uVar20 >> 0xc ^ uVar20 << 0x14;\n    uVar45 = uVar45 >> 0xc ^ uVar45 << 0x14;\n    uVar28 = uVar21 + iVar3 + uVar18;\n    uVar31 = uVar22 + iVar37 + uVar19;\n    uVar39 = uVar23 + iVar25 + uVar20;\n    uVar41 = uVar41 + iVar40 + uVar45;\n    uVar15 = uVar15 ^ uVar28;\n    uVar14 = uVar14 ^ uVar31;\n    uVar16 = uVar16 ^ uVar39;\n    uVar17 = uVar17 ^ uVar41;\n    auVar46 = CONCAT412(uVar17 >> 8, CONCAT48(uVar16 >> 8, CONCAT44(uVar14 >> 8, uVar15 >> 8))) ^\n              CONCAT412(uVar17 << 0x18, CONCAT48(uVar16 << 0x18, CONCAT44(uVar14 << 0x18, uVar15 << 0x18)));\n    uVar23 = iVar27 + SUB164(auVar46, 0);\n    uVar33 = iVar30 + SUB164(auVar46 >> 0x20, 0);\n    uVar24 = iVar32 + SUB164(auVar46 >> 0x40, 0);\n    uVar36 = iVar35 + SUB164(auVar46 >> 0x60, 0);\n    uVar18 = uVar18 ^ uVar23;\n    uVar19 = uVar19 ^ uVar33;\n    uVar20 = uVar20 ^ uVar24;\n    uVar45 = uVar45 ^ uVar36;\n    uVar18 = uVar18 >> 7 ^ uVar18 << 0x19;\n    uVar21 = uVar19 >> 7 ^ uVar19 << 0x19;\n    uVar22 = uVar20 >> 7 ^ uVar20 << 0x19;\n    uVar16 = uVar45 >> 7 ^ uVar45 << 0x19;\n    iVar27 = uVar28 + iVar25 + uVar16;\n    iVar30 = uVar31 + iVar6 + uVar18;\n    iVar32 = uVar39 + iVar11 + uVar21;\n    iVar35 = uVar41 + iVar3 + uVar22;\n    auVar46 = CONCAT412(SUB164(auVar46, 0), SUB1612(auVar46 >> 0x20, 0)) ^\n              CONCAT412(iVar35, CONCAT48(iVar32, CONCAT44(iVar30, iVar27)));\n    uVar14 = SUB164(auVar46 >> 0x20, 0);\n    uVar17 = SUB164(auVar46 >> 0x40, 0);\n    uVar19 = SUB164(auVar46 >> 0x60, 0);\n    uVar15 = SUB164(auVar46, 0) >> 0x10 ^ SUB164(auVar46, 0) << 0x10;\n    uVar14 = uVar14 >> 0x10 ^ uVar14 << 0x10;\n    uVar17 = uVar17 >> 0x10 ^ uVar17 << 0x10;\n    uVar19 = uVar19 >> 0x10 ^ uVar19 << 0x10;\n    uVar24 = uVar24 + uVar15;\n    uVar36 = uVar36 + uVar14;\n    uVar23 = uVar23 + uVar17;\n    uVar33 = uVar33 + uVar19;\n    uVar16 = uVar16 ^ uVar24;\n    uVar18 = uVar18 ^ uVar36;\n    uVar21 = uVar21 ^ uVar23;\n    uVar22 = uVar22 ^ uVar33;\n    uVar20 = uVar16 >> 0xc ^ uVar16 << 0x14;\n    uVar45 = uVar18 >> 0xc ^ uVar18 << 0x14;\n    uVar21 = uVar21 >> 0xc ^ uVar21 << 0x14;\n    uVar22 = uVar22 >> 0xc ^ uVar22 << 0x14;\n    uVar28 = iVar27 + iVar9 + uVar20;\n    uVar31 = iVar30 + iVar12 + uVar45;\n    uVar41 = iVar32 + iVar5 + uVar21;\n    uVar43 = iVar35 + iVar8 + uVar22;\n    uVar15 = uVar15 ^ uVar28;\n    uVar14 = uVar14 ^ uVar31;\n    uVar17 = uVar17 ^ uVar41;\n    uVar19 = uVar19 ^ uVar43;\n    uVar16 = uVar15 >> 8 ^ uVar15 << 0x18;\n    uVar18 = uVar14 >> 8 ^ uVar14 << 0x18;\n    uVar17 = uVar17 >> 8 ^ uVar17 << 0x18;\n    uVar15 = uVar19 >> 8 ^ uVar19 << 0x18;\n    uVar24 = uVar24 + uVar16;\n    uVar36 = uVar36 + uVar18;\n    uVar23 = uVar23 + uVar17;\n    uVar33 = uVar33 + uVar15;\n    uVar20 = uVar20 ^ uVar24;\n    uVar45 = uVar45 ^ uVar36;\n    uVar21 = uVar21 ^ uVar23;\n    uVar22 = uVar22 ^ uVar33;\n    auVar46 = CONCAT412(uVar22 >> 7, CONCAT48(uVar21 >> 7, CONCAT44(uVar45 >> 7, uVar20 >> 7))) ^\n              CONCAT412(uVar22 << 0x19, CONCAT48(uVar21 << 0x19, CONCAT44(uVar45 << 0x19, uVar20 << 0x19)));\n    uVar28 = uVar28 + iVar7 + SUB164(auVar46 >> 0x20, 0);\n    uVar39 = uVar31 + iVar10 + SUB164(auVar46 >> 0x40, 0);\n    uVar41 = uVar41 + iVar44 + SUB164(auVar46 >> 0x60, 0);\n    uVar43 = uVar43 + iVar40 + SUB164(auVar46, 0);\n    uVar15 = uVar15 ^ uVar28;\n    uVar16 = uVar16 ^ uVar39;\n    uVar18 = uVar18 ^ uVar41;\n    uVar17 = uVar17 ^ uVar43;\n    uVar15 = uVar15 >> 0x10 ^ uVar15 << 0x10;\n    uVar14 = uVar16 >> 0x10 ^ uVar16 << 0x10;\n    uVar16 = uVar18 >> 0x10 ^ uVar18 << 0x10;\n    uVar17 = uVar17 >> 0x10 ^ uVar17 << 0x10;\n    iVar27 = uVar23 + uVar15;\n    iVar30 = uVar33 + uVar14;\n    iVar32 = uVar24 + uVar16;\n    iVar35 = uVar36 + uVar17;\n    auVar46 = CONCAT412(SUB164(auVar46, 0), SUB1612(auVar46 >> 0x20, 0)) ^\n              CONCAT412(iVar35, CONCAT48(iVar32, CONCAT44(iVar30, iVar27)));\n    uVar19 = SUB164(auVar46 >> 0x20, 0);\n    uVar20 = SUB164(auVar46 >> 0x40, 0);\n    uVar21 = SUB164(auVar46 >> 0x60, 0);\n    uVar18 = SUB164(auVar46, 0) >> 0xc ^ SUB164(auVar46, 0) << 0x14;\n    uVar19 = uVar19 >> 0xc ^ uVar19 << 0x14;\n    uVar45 = uVar20 >> 0xc ^ uVar20 << 0x14;\n    uVar22 = uVar21 >> 0xc ^ uVar21 << 0x14;\n    uVar31 = uVar28 + iVar26 + uVar18;\n    uVar39 = uVar39 + iVar42 + uVar19;\n    uVar41 = uVar41 + iVar37 + uVar45;\n    uVar43 = uVar43 + iVar4 + uVar22;\n    uVar15 = uVar15 ^ uVar31;\n    uVar14 = uVar14 ^ uVar39;\n    uVar16 = uVar16 ^ uVar41;\n    uVar17 = uVar17 ^ uVar43;\n    auVar46 = CONCAT412(uVar17 >> 8, CONCAT48(uVar16 >> 8, CONCAT44(uVar14 >> 8, uVar15 >> 8))) ^\n              CONCAT412(uVar17 << 0x18, CONCAT48(uVar16 << 0x18, CONCAT44(uVar14 << 0x18, uVar15 << 0x18)));\n    uVar24 = iVar27 + SUB164(auVar46, 0);\n    uVar36 = iVar30 + SUB164(auVar46 >> 0x20, 0);\n    uVar33 = iVar32 + SUB164(auVar46 >> 0x40, 0);\n    uVar28 = iVar35 + SUB164(auVar46 >> 0x60, 0);\n    uVar18 = uVar18 ^ uVar24;\n    uVar19 = uVar19 ^ uVar36;\n    uVar45 = uVar45 ^ uVar33;\n    uVar22 = uVar22 ^ uVar28;\n    uVar20 = uVar18 >> 7 ^ uVar18 << 0x19;\n    uVar21 = uVar19 >> 7 ^ uVar19 << 0x19;\n    uVar23 = uVar45 >> 7 ^ uVar45 << 0x19;\n    uVar16 = uVar22 >> 7 ^ uVar22 << 0x19;\n    iVar37 = uVar31 + iVar40 + uVar16;\n    iVar40 = uVar39 + iVar8 + uVar20;\n    iVar42 = uVar41 + iVar42 + uVar21;\n    iVar44 = uVar43 + iVar44 + uVar23;\n    auVar46 = CONCAT412(SUB164(auVar46, 0), SUB1612(auVar46 >> 0x20, 0)) ^\n              CONCAT412(iVar44, CONCAT48(iVar42, CONCAT44(iVar40, iVar37)));\n    uVar14 = SUB164(auVar46 >> 0x20, 0);\n    uVar17 = SUB164(auVar46 >> 0x40, 0);\n    uVar18 = SUB164(auVar46 >> 0x60, 0);\n    uVar15 = SUB164(auVar46, 0) >> 0x10 ^ SUB164(auVar46, 0) << 0x10;\n    uVar14 = uVar14 >> 0x10 ^ uVar14 << 0x10;\n    uVar17 = uVar17 >> 0x10 ^ uVar17 << 0x10;\n    uVar18 = uVar18 >> 0x10 ^ uVar18 << 0x10;\n    uVar33 = uVar33 + uVar15;\n    uVar28 = uVar28 + uVar14;\n    uVar24 = uVar24 + uVar17;\n    uVar36 = uVar36 + uVar18;\n    uVar16 = uVar16 ^ uVar33;\n    uVar20 = uVar20 ^ uVar28;\n    uVar21 = uVar21 ^ uVar24;\n    uVar23 = uVar23 ^ uVar36;\n    uVar19 = uVar16 >> 0xc ^ uVar16 << 0x14;\n    uVar20 = uVar20 >> 0xc ^ uVar20 << 0x14;\n    uVar45 = uVar21 >> 0xc ^ uVar21 << 0x14;\n    uVar21 = uVar23 >> 0xc ^ uVar23 << 0x14;\n    uVar22 = iVar37 + iVar26 + uVar19;\n    uVar23 = iVar40 + *(arg_ch + 4) + uVar20;\n    uVar31 = iVar42 + iVar25 + uVar45;\n    uVar39 = iVar44 + iVar4 + uVar21;\n    uVar15 = uVar15 ^ uVar22;\n    uVar14 = uVar14 ^ uVar23;\n    uVar17 = uVar17 ^ uVar31;\n    uVar18 = uVar18 ^ uVar39;\n    uVar16 = uVar15 >> 8 ^ uVar15 << 0x18;\n    uVar14 = uVar14 >> 8 ^ uVar14 << 0x18;\n    uVar17 = uVar17 >> 8 ^ uVar17 << 0x18;\n    uVar15 = uVar18 >> 8 ^ uVar18 << 0x18;\n    uVar33 = uVar33 + uVar16;\n    uVar28 = uVar28 + uVar14;\n    uVar24 = uVar24 + uVar17;\n    uVar36 = uVar36 + uVar15;\n    uVar19 = uVar19 ^ uVar33;\n    uVar20 = uVar20 ^ uVar28;\n    uVar45 = uVar45 ^ uVar24;\n    uVar21 = uVar21 ^ uVar36;\n    auVar47 = CONCAT412(uVar21 >> 7, CONCAT48(uVar45 >> 7, CONCAT44(uVar20 >> 7, uVar19 >> 7))) ^\n              CONCAT412(uVar21 << 0x19, CONCAT48(uVar45 << 0x19, CONCAT44(uVar20 << 0x19, uVar19 << 0x19)));\n    uVar18 = uVar22 + iVar9 + SUB164(auVar47 >> 0x20, 0);\n    uVar19 = uVar23 + iVar12 + SUB164(auVar47 >> 0x40, 0);\n    uVar20 = uVar31 + iVar5 + SUB164(auVar47 >> 0x60, 0);\n    uVar45 = uVar39 + iVar10 + SUB164(auVar47, 0);\n    uVar15 = uVar15 ^ uVar18;\n    uVar16 = uVar16 ^ uVar19;\n    uVar14 = uVar14 ^ uVar20;\n    uVar17 = uVar17 ^ uVar45;\n    auVar46 = CONCAT412(uVar17 >> 0x10, CONCAT48(uVar14 >> 0x10, CONCAT44(uVar16 >> 0x10, uVar15 >> 0x10))) ^\n              CONCAT412(uVar17 << 0x10, CONCAT48(uVar14 << 0x10, CONCAT44(uVar16 << 0x10, uVar15 << 0x10)));\n    iVar25 = uVar24 + SUB164(auVar46, 0);\n    iVar37 = uVar36 + SUB164(auVar46 >> 0x20, 0);\n    iVar42 = uVar33 + SUB164(auVar46 >> 0x40, 0);\n    iVar26 = uVar28 + SUB164(auVar46 >> 0x60, 0);\n    auVar47 = CONCAT412(SUB164(auVar47, 0), SUB1612(auVar47 >> 0x20, 0)) ^\n              CONCAT412(iVar26, CONCAT48(iVar42, CONCAT44(iVar37, iVar25)));\n    uVar15 = SUB164(auVar47 >> 0x20, 0);\n    uVar14 = SUB164(auVar47 >> 0x40, 0);\n    uVar16 = SUB164(auVar47 >> 0x60, 0);\n    auVar47 = CONCAT412(uVar16 >> 0xc, CONCAT48(uVar14 >> 0xc, CONCAT44(uVar15 >> 0xc, SUB164(auVar47, 0) >> 0xc))) ^\n              CONCAT412(uVar16 << 0x14, CONCAT48(uVar14 << 0x14, CONCAT44(uVar15 << 0x14, SUB164(auVar47, 0) << 0x14)));\n    auVar38 = CONCAT412(uVar45 + iVar3 + SUB164(auVar47 >> 0x60, 0), \n                        CONCAT48(uVar20 + iVar7 + SUB164(auVar47 >> 0x40, 0), \n                                 CONCAT44(uVar19 + iVar6 + SUB164(auVar47 >> 0x20, 0), \n                                          uVar18 + iVar11 + SUB164(auVar47, 0))));\n    auVar46 = auVar46 ^ auVar38;\n    uVar15 = SUB164(auVar46 >> 0x20, 0);\n    uVar14 = SUB164(auVar46 >> 0x40, 0);\n    uVar16 = SUB164(auVar46 >> 0x60, 0);\n    auVar29 = CONCAT412(uVar16 >> 8, CONCAT48(uVar14 >> 8, CONCAT44(uVar15 >> 8, SUB164(auVar46, 0) >> 8))) ^\n              CONCAT412(uVar16 << 0x18, CONCAT48(uVar14 << 0x18, CONCAT44(uVar15 << 0x18, SUB164(auVar46, 0) << 0x18)));\n    iVar25 = iVar25 + SUB164(auVar29, 0);\n    iVar37 = iVar37 + SUB164(auVar29 >> 0x20, 0);\n    auVar46 = CONCAT412(iVar26 + SUB164(auVar29 >> 0x60, 0), \n                        CONCAT48(iVar42 + SUB164(auVar29 >> 0x40, 0), CONCAT44(iVar37, iVar25)));\n    auVar47 = auVar47 ^ auVar46;\n    uVar15 = SUB164(auVar47 >> 0x20, 0);\n    uVar14 = SUB164(auVar47 >> 0x40, 0);\n    uVar16 = SUB164(auVar47 >> 0x60, 0);\n    **(arg_8h + 0xf4) = *pauVar1 ^ auVar38 ^ CONCAT412(iVar37, CONCAT48(iVar25, SUB168(auVar46 >> 0x40, 0)));\n    *(*(arg_8h + 0xf4) + 0x10) =\n         auVar13 ^ CONCAT412(uVar14 >> 7 ^ uVar14 << 0x19, \n                             CONCAT48(uVar15 >> 7 ^ uVar15 << 0x19, \n                                      CONCAT44(SUB164(auVar47, 0) >> 7 ^ SUB164(auVar47, 0) << 0x19, \n                                               uVar16 >> 7 ^ uVar16 << 0x19))) ^\n                   CONCAT412(SUB164(auVar29, 0), SUB1612(auVar29 >> 0x20, 0));\n    return 0;\n}\n",
        "token_count": 18855
    },
    "0040484f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040484f(int32_t param_1)\n\n{\n    fcn.0041a0c0(param_1, 0, 0xf0);\n    *(param_1 + 0x100) = 0;\n    *(param_1 + 0x104) = 0;\n    return;\n}\n",
        "token_count": 75
    },
    "0040490e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040490e(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint *puVar10;\n    uint *puVar11;\n    uint var_80h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar9 = 0;\n    do {\n        uVar2 = fcn.00404872();\n        (&var_80h)[uVar9] = uVar2;\n        uVar9 = uVar9 + 1;\n    } while (uVar9 < 0x10);\n    puVar3 = *(arg_8h + 0xf8);\n    puVar10 = *(arg_8h + 0xf4);\n    puVar11 = &var_40h;\n    for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar11 = *puVar10;\n        puVar10 = puVar10 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    var_10h = *puVar3 ^ 0x510e527f;\n    var_ch = puVar3[1] ^ 0x9b05688c;\n    var_4h = (*(arg_8h + 0xfc))[1] ^ 0x5be0cd19;\n    var_20h = 0x6a09e667;\n    var_1ch = 0xbb67ae85;\n    var_18h = 0x3c6ef372;\n    var_14h = 0xa54ff53a;\n    var_8h = **(arg_8h + 0xfc) ^ 0x1f83d9ab;\n    uVar9 = 0;\n    do {\n        var_40h = var_40h + (&var_80h)[*(uVar9 + 0x4274b0)] + var_30h;\n        var_10h = var_40h ^ var_10h;\n        uVar6 = var_10h >> 0x10 | var_10h << 0x10;\n        var_20h = var_20h + uVar6;\n        uVar5 = (var_30h ^ var_20h) >> 0xc | (var_30h ^ var_20h) << 0x14;\n        var_40h = var_40h + (&var_80h)[*(uVar9 + 0x4274b1)] + uVar5;\n        uVar6 = var_40h ^ uVar6;\n        uVar8 = uVar6 >> 8 | uVar6 << 0x18;\n        var_3ch = var_3ch + (&var_80h)[*(uVar9 + 0x4274b2)] + var_2ch;\n        var_20h = var_20h + uVar8;\n        uVar5 = uVar5 ^ var_20h;\n        uVar5 = uVar5 >> 7 | uVar5 << 0x19;\n        uVar6 = (var_3ch ^ var_ch) >> 0x10 | (var_3ch ^ var_ch) << 0x10;\n        var_1ch = var_1ch + uVar6;\n        var_2ch = var_2ch ^ var_1ch;\n        uVar7 = var_2ch >> 0xc | var_2ch << 0x14;\n        var_3ch = var_3ch + (&var_80h)[*(uVar9 + 0x4274b3)] + uVar7;\n        uVar6 = var_3ch ^ uVar6;\n        var_ch = uVar6 >> 8 | uVar6 << 0x18;\n        var_1ch = var_1ch + var_ch;\n        uVar7 = uVar7 ^ var_1ch;\n        var_2ch = uVar7 >> 7 | uVar7 << 0x19;\n        var_38h = var_38h + (&var_80h)[*(uVar9 + 0x4274b4)] + var_28h;\n        var_8h = (var_38h ^ var_8h) >> 0x10 | (var_38h ^ var_8h) << 0x10;\n        var_18h = var_18h + var_8h;\n        uVar6 = (var_28h ^ var_18h) >> 0xc | (var_28h ^ var_18h) << 0x14;\n        var_38h = var_38h + (&var_80h)[*(uVar9 + 0x4274b5)] + uVar6;\n        var_8h = (var_38h ^ var_8h) >> 8 | (var_38h ^ var_8h) << 0x18;\n        var_18h = var_18h + var_8h;\n        uVar6 = uVar6 ^ var_18h;\n        var_34h = var_34h + (&var_80h)[*(uVar9 + 0x4274b6)] + var_24h;\n        var_28h = uVar6 >> 7 | uVar6 << 0x19;\n        var_4h = (var_34h ^ var_4h) >> 0x10 | (var_34h ^ var_4h) << 0x10;\n        var_14h = var_14h + var_4h;\n        uVar6 = (var_24h ^ var_14h) >> 0xc | (var_24h ^ var_14h) << 0x14;\n        var_34h = var_34h + (&var_80h)[*(uVar9 + 0x4274b7)] + uVar6;\n        var_4h = (var_34h ^ var_4h) >> 8 | (var_34h ^ var_4h) << 0x18;\n        var_14h = var_14h + var_4h;\n        uVar6 = uVar6 ^ var_14h;\n        var_40h = var_40h + (&var_80h)[*(uVar9 + 0x4274b8)] + var_2ch;\n        var_24h = uVar6 >> 7 | uVar6 << 0x19;\n        uVar6 = (var_40h ^ var_4h) >> 0x10 | (var_40h ^ var_4h) << 0x10;\n        var_18h = var_18h + uVar6;\n        var_2ch = (var_2ch ^ var_18h) >> 0xc | (var_2ch ^ var_18h) << 0x14;\n        var_40h = var_40h + (&var_80h)[*(uVar9 + 0x4274b9)] + var_2ch;\n        uVar6 = var_40h ^ uVar6;\n        var_4h = uVar6 >> 8 | uVar6 << 0x18;\n        var_18h = var_18h + var_4h;\n        var_2ch = var_2ch ^ var_18h;\n        var_2ch = var_2ch >> 7 | var_2ch << 0x19;\n        var_3ch = var_3ch + (&var_80h)[*(uVar9 + 0x4274ba)] + var_28h;\n        uVar8 = var_3ch ^ uVar8;\n        uVar7 = uVar8 >> 0x10 | uVar8 << 0x10;\n        var_14h = var_14h + uVar7;\n        var_28h = var_28h ^ var_14h;\n        uVar6 = var_28h >> 0xc | var_28h << 0x14;\n        var_3ch = var_3ch + (&var_80h)[*(uVar9 + 0x4274bb)] + uVar6;\n        uVar7 = var_3ch ^ uVar7;\n        var_10h = uVar7 >> 8 | uVar7 << 0x18;\n        var_14h = var_14h + var_10h;\n        uVar6 = uVar6 ^ var_14h;\n        var_28h = uVar6 >> 7 | uVar6 << 0x19;\n        var_38h = var_38h + (&var_80h)[*(uVar9 + 0x4274bc)] + var_24h;\n        var_ch = var_38h ^ var_ch;\n        uVar7 = var_ch >> 0x10 | var_ch << 0x10;\n        var_20h = var_20h + uVar7;\n        var_24h = var_24h ^ var_20h;\n        uVar6 = var_24h >> 0xc | var_24h << 0x14;\n        var_38h = var_38h + (&var_80h)[*(uVar9 + 0x4274bd)] + uVar6;\n        uVar7 = var_38h ^ uVar7;\n        var_ch = uVar7 >> 8 | uVar7 << 0x18;\n        var_20h = var_20h + var_ch;\n        uVar6 = uVar6 ^ var_20h;\n        puVar1 = uVar9 + 0x4274bf;\n        var_24h = uVar6 >> 7 | uVar6 << 0x19;\n        var_34h = var_34h + (&var_80h)[*(uVar9 + 0x4274be)] + uVar5;\n        var_8h = var_34h ^ var_8h;\n        uVar9 = uVar9 + 0x10;\n        uVar6 = var_8h >> 0x10 | var_8h << 0x10;\n        var_1ch = var_1ch + uVar6;\n        uVar5 = uVar5 ^ var_1ch;\n        uVar5 = uVar5 >> 0xc | uVar5 << 0x14;\n        var_34h = var_34h + (&var_80h)[*puVar1] + uVar5;\n        uVar6 = var_34h ^ uVar6;\n        var_8h = uVar6 >> 8 | uVar6 << 0x18;\n        var_1ch = var_1ch + var_8h;\n        uVar5 = uVar5 ^ var_1ch;\n        var_30h = uVar5 >> 7 | uVar5 << 0x19;\n    } while (uVar9 < 0x91);\n    uVar9 = 0;\n    do {\n        puVar3 = *(arg_8h + 0xf4) + uVar9;\n        uVar5 = uVar9 + 4;\n        *puVar3 = *(&var_20h + uVar9) ^ *puVar3 ^ *(&var_40h + uVar9);\n        uVar9 = uVar5;\n    } while (uVar5 < 0x20);\n    return;\n}\n",
        "token_count": 2734
    },
    "00404dd7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00404dd7(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    fcn.0041a0c0(param_1 + 0x948, 0, 0x200);\n    *(param_1 + 0xb48) = 0;\n    fcn.004048ba(0);\n    do {\n        fcn.004048ba();\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 8);\n    *(param_1 + 0x944) = 1;\n    *(param_1 + 0x83c) = 1;\n    return;\n}\n",
        "token_count": 155
    },
    "00404ffc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404ffc(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_ch_00;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *arg_8h_00;\n    uint var_104h;\n    uint *var_4h;\n    \n    iVar2 = arg_8h;\n    var_4h = &var_104h;\n    arg_8h = arg_8h + 0x948;\n    uVar1 = 0;\n    do {\n        if (uVar1 < *(iVar2 + 0xb48)) {\n            arg_ch_00 = *(iVar2 + 0xb48) - uVar1;\n            if (0x40 < arg_ch_00) {\n                arg_ch_00 = 0x40;\n            }\n            fcn.00404c45(arg_8h, arg_ch_00);\n        }\n        fcn.00404d04();\n        arg_8h = arg_8h + 0x40;\n        var_4h = var_4h + 8;\n        uVar1 = uVar1 + 0x40;\n    } while (uVar1 < 0x200);\n    arg_8h_00 = &var_104h;\n    iVar2 = 8;\n    do {\n        fcn.00404c45(arg_8h_00, 0x20);\n        arg_8h_00 = arg_8h_00 + 8;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    fcn.00404d04(arg_ch);\n    return;\n}\n",
        "token_count": 367
    },
    "00405324": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00405324(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (param_2 == 0) {\n        param_2 = 0x427554;\n    }\n    iVar1 = *(param_1 + 0x93ec);\n    iVar2 = fcn.0041a052(param_2);\n    fcn.004011be(iVar2 + 1);\n    fcn.0041a09a(*(param_1 + 0x93e8) + iVar1 * 2, param_2);\n    *(param_1 + 0x93fc) = *(param_1 + 0x93fc) + 1;\n    return;\n}\n",
        "token_count": 173
    },
    "0040532f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar __thiscall fcn.0040532f(int32_t param_1, uint param_2, uint param_3)\n\n{\n    char cVar1;\n    int32_t iStack8;\n    \n    iStack8 = param_1 + 0x93e8;\n    cVar1 = fcn.00410b38(&iStack8);\n    if (cVar1 != '\\0') {\n        fcn.00410976(param_2, iStack8, param_3);\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 126
    },
    "00405407": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405407(uint32_t arg_8h, char *arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    \n    iVar3 = arg_8h + 0x20;\n    uVar2 = fcn.0041a052(iVar3);\n    if (uVar2 < 0x800) {\n        arg_8h = arg_8h & 0xffffff00 | *(arg_8h + 0x10e1);\n        cVar1 = fcn.004053ad(iVar3, arg_8h, 0, 1);\n        if (cVar1 == '\\0') {\n            fcn.00410ae1();\n            arg_8h = 1;\n            while (arg_8h_00 = fcn.00410bb2(),  arg_8h_00 != 0) {\n                cVar1 = fcn.00409d20(arg_8h_00, iVar3, arg_10h);\n                if (cVar1 != '\\0') {\n                    if (arg_ch == NULL) {\n                        return arg_8h;\n                    }\n                    iVar3 = fcn.00410971(arg_8h_00, iVar3);\n                    *arg_ch = '\\x01' - (iVar3 != 0);\n                    return arg_8h;\n                }\n                arg_8h = arg_8h + 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 350
    },
    "00405544": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405544(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    fcn.00405510(0x42d2a0);\n    puVar2 = 0x42d6a0;\n    iVar5 = 0x100;\n    do {\n        uVar1 = puVar2[-0x100];\n        iVar4 = 7;\n        puVar3 = puVar2;\n        do {\n            uVar1 = uVar1 >> 8 ^ *((uVar1 & 0xff) * 4 + 0x42d2a0);\n            *puVar3 = uVar1;\n            puVar3 = puVar3 + 0x100;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        puVar2 = puVar2 + 1;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    return param_1;\n}\n",
        "token_count": 255
    },
    "0040598a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040598a(uint *arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    uint var_1d0h;\n    uint var_160h;\n    uint var_f0h;\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    \n    if (0x40 < arg_ch) {\n        fcn.00410488(&var_1d0h);\n        fcn.0041078a(&var_1d0h, arg_8h, arg_ch);\n        fcn.00410803(&var_1d0h, &var_80h);\n        arg_8h = &var_80h;\n        arg_ch = 0x20;\n    }\n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            puVar1 = &var_40h + uVar2;\n            uVar2 = uVar2 + 1;\n            *puVar1 = puVar1[arg_8h - &var_40h] ^ 0x36;\n        } while (uVar2 < arg_ch);\n    }\n    if (arg_ch < 0x40) {\n        fcn.0041a0c0(&var_40h + arg_ch, 0x36, 0x40 - arg_ch);\n    }\n    fcn.00410488(&var_f0h);\n    fcn.0041078a(&var_f0h, &var_40h, 0x40);\n    fcn.0041078a(&var_f0h, arg_10h, arg_14h);\n    fcn.00410803(&var_f0h, &var_60h);\n    fcn.00410488(&var_160h);\n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            puVar1 = &var_40h + uVar2;\n            uVar2 = uVar2 + 1;\n            *puVar1 = puVar1[arg_8h - &var_40h] ^ 0x5c;\n        } while (uVar2 < arg_ch);\n    }\n    if (arg_ch < 0x40) {\n        fcn.0041a0c0(&var_40h + arg_ch, 0x5c, 0x40 - arg_ch);\n    }\n    fcn.0041078a(&var_160h, &var_40h, 0x40);\n    fcn.0041078a(&var_160h, &var_60h, 0x20);\n    fcn.00410803(&var_160h, arg_18h);\n    return;\n}\n",
        "token_count": 633
    },
    "00405ac7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405ac7(uint param_1, uint param_2, uint param_3, uint32_t param_4, int32_t param_5, uint param_6, \n                 uint param_7, int32_t param_8)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uchar auStack192 [32];\n    uchar auStack160 [68];\n    uint8_t auStack92 [32];\n    uint8_t auStack60 [32];\n    int32_t aiStack28 [6];\n    \n    uVar4 = 0x40;\n    if (param_4 < 0x40) {\n        uVar4 = param_4;\n    }\n    fcn.0041bb00(auStack160, param_3, uVar4);\n    auStack160[param_4] = 0;\n    auStack160[param_4 + 1] = 0;\n    auStack160[param_4 + 2] = 0;\n    auStack160[param_4 + 3] = 1;\n    fcn.0040598a(param_1, param_2, auStack160, param_4 + 4, auStack60);\n    fcn.0041bb00(auStack92, auStack60, 0x20);\n    aiStack28[3] = param_8 + -1;\n    aiStack28[4] = 0x10;\n    aiStack28[5] = 0x10;\n    aiStack28[0] = param_5;\n    aiStack28[1] = param_6;\n    aiStack28[2] = param_7;\n    uVar4 = 0;\n    do {\n        for (iVar2 = *(aiStack28 + uVar4 + 0xc); iVar2 != 0; iVar2 = iVar2 + -1) {\n            fcn.0040598a(param_1, param_2, auStack60, 0x20, auStack192);\n            fcn.0041bb00(auStack60, auStack192, 0x20);\n            uVar3 = 0;\n            do {\n                puVar1 = auStack92 + uVar3;\n                *puVar1 = *puVar1 ^ auStack60[uVar3];\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < 0x20);\n        }\n        fcn.0041bb00(*(aiStack28 + uVar4), auStack92, 0x20);\n        uVar4 = uVar4 + 4;\n    } while (uVar4 < 0xc);\n    fcn.0040ccb3(auStack160, 0x44);\n    fcn.0040ccb3(auStack92, 0x20);\n    fcn.0040ccb3(auStack60, 0x20);\n    fcn.0040ccb3(auStack192, 0x20);\n    return;\n}\n",
        "token_count": 671
    },
    "00405be2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00405be2(uint arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t arg_1ch, int32_t arg_20h, \n            int32_t arg_24h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint8_t *puVar5;\n    int32_t in_ECX;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint var_264h;\n    uint var_64h;\n    uint var_44h;\n    uint var_24h;\n    int32_t var_4h;\n    \n    uVar6 = arg_1ch;\n    if (arg_1ch < 0x19) {\n        arg_1ch = 0;\n        var_4h = in_ECX;\n        do {\n            if (*(in_ECX + 0x114) == uVar6) {\n                cVar2 = fcn.0040cd82(arg_ch);\n                if (cVar2 != '\\0') {\n                    iVar3 = fcn.0041a474(in_ECX + 0x102, arg_14h, 0x10);\n                    if (iVar3 == 0) {\n                        iVar3 = in_ECX + 0x118;\n                        fcn.0040cc0d(iVar3, 0x20, 0);\n                        fcn.0041bb00(&var_24h, iVar3, 0x20);\n                        fcn.0040cc0d(iVar3, 0x20, 1);\n                        fcn.0041bb00(&var_44h, in_ECX + 0x138, 0x20);\n                        fcn.0041bb00(&var_64h, in_ECX + 0x158, 0x20);\n                        goto code_r0x00405d16;\n                    }\n                }\n            }\n            arg_1ch = arg_1ch + 1;\n            in_ECX = in_ECX + 0x178;\n        } while (arg_1ch < 4);\n        fcn.00411428(arg_10h, &var_264h, 0x200);\n        uVar4 = fcn.0041a2d0(&var_264h, arg_14h, 0x10, &var_24h, &var_64h, &var_44h, 1 << (uVar6 & 0x1f));\n        fcn.00405ac7(&var_264h, uVar4);\n        fcn.0040ccb3(&var_264h, 0x200);\n        uVar1 = *(var_4h + 0x5e0);\n        puVar7 = (uVar1 & 3) * 0x178 + var_4h;\n        *(var_4h + 0x5e0) = uVar1 + 1;\n        puVar7[0x45] = uVar6;\n        puVar8 = puVar7;\n        for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar8 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar8 = puVar8 + 1;\n        }\n        *puVar8 = *arg_ch;\n        fcn.0041bb00(puVar7 + 0x102, arg_14h, 0x10);\n        fcn.0041bb00(puVar7 + 0x46, &var_24h, 0x20);\n        fcn.0041bb00(puVar7 + 0x4e, &var_44h, 0x20);\n        fcn.0041bb00(puVar7 + 0x56, &var_64h, 0x20);\n        fcn.0040cc0d(puVar7 + 0x46, 0x20, 1);\ncode_r0x00405d16:\n        if (arg_20h != 0) {\n            fcn.0041bb00(arg_20h, &var_64h, 0x20);\n        }\n        if (arg_24h != 0) {\n            fcn.0041a0c0(arg_24h, 0, 8);\n            uVar6 = 0;\n            do {\n                puVar5 = (uVar6 & 7) + arg_24h;\n                *puVar5 = *puVar5 ^ *(&var_44h + uVar6);\n                uVar6 = uVar6 + 1;\n            } while (uVar6 < 0x20);\n            fcn.0040ccb3(&var_44h, 0x20);\n        }\n        if (arg_18h != 0) {\n            fcn.0040ca60(arg_8h, &var_24h, 0x100, arg_18h);\n        }\n        fcn.0040ccb3(&var_24h, 0x20);\n    }\n    return;\n}\n",
        "token_count": 1162
    },
    "00405edd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t fcn.00405edd(void)\n\n{\n    int32_t arg_8h;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    *(unaff_EBP + -0x10) = arg_8h;\n    fcn.0041bfcf(arg_8h, 0x178, 4, 0x405de4);\n    *(unaff_EBP + -4) = 0;\n    fcn.0040ca4b();\n    *(arg_8h + 0x5e4) = 0;\n    fcn.0041a0c0(arg_8h, 0, 0x5e0);\n    *(arg_8h + 0x5e0) = 0;\n    fcn.0041a0c0(arg_8h + 0x6ec, 0, 0x400);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return arg_8h;\n}\n",
        "token_count": 284
    },
    "00406409": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406409(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint var_800h;\n    \n    fcn.0041a297(&var_800h, 0x400, arg_ch, 0, &arg_10h);\n    fcn.0040e0c1(0, 0x42755c, &var_800h);\n    return;\n}\n",
        "token_count": 96
    },
    "00406444": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406444(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = fcn.0040c1b1(0x72, param_2);\n    fcn.0040e0c1(unaff_retaddr, uVar1);\n    return;\n}\n",
        "token_count": 79
    },
    "0040645f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040645f(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = fcn.0040c1b1(0x78, param_2);\n    fcn.0040e0c1(unaff_retaddr, uVar1);\n    fcn.00406235(param_1);\n    return;\n}\n",
        "token_count": 91
    },
    "00406489": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406489(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = fcn.0040c1b1(0x84, param_2);\n    fcn.0040e0c1(unaff_retaddr, uVar1);\n    return;\n}\n",
        "token_count": 79
    },
    "004064a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004064a7(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = fcn.0040c1b1(0x83, param_2);\n    fcn.0040e0c1(unaff_retaddr, uVar1);\n    return;\n}\n",
        "token_count": 80
    },
    "0040652a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040652a(uint lpFileName, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    uVar1 = fcn.0040924e(arg_ch);\n    if (uVar1 != '\\0') {\n        fcn.004092f3(lpFileName, 1);\n        fcn.0040a1a0(arg_ch, arg_ch, arg_10h);\n        uVar1 = (*_sym.imp.KERNEL32.dll_CreateHardLinkW)(lpFileName, arg_ch, 0);\n        bVar3 = uVar1 != 0;\n        if (!bVar3) {\n            uVar2 = fcn.0040c1b1(0xdd, lpFileName);\n            fcn.0040e0c1(0, uVar2);\n            fcn.00401000();\n            uVar1 = fcn.004062af(9);\n        }\n        uVar1 = uVar1 & 0xffffff00 | bVar3;\n    }\n    return uVar1;\n}\n",
        "token_count": 246
    },
    "00406848": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: pSecurityDescriptor\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00406848(uint arg_8h, uint lpFileName)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint pSecurityDescriptor;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x10) = 0;\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    cVar2 = fcn.00402c2f(unaff_EBP + -0x1c, 0);\n    if (cVar2 != '\\0') {\n        if (*0x42f761 == '\\0') {\n            cVar2 = fcn.004065c2(L\"SeSecurityPrivilege\");\n            if (cVar2 != '\\0') {\n                *0x42f760 = '\\x01';\n            }\n            fcn.004065c2(0x427564);\n            *0x42f761 = '\\x01';\n        }\n        uVar3 = 7;\n        if (*0x42f760 != '\\0') {\n            uVar3 = 0xf;\n        }\n        iVar4 = (*_sym.imp.ADVAPI32.dll_SetFileSecurityW)(*(unaff_EBP + 0xc), uVar3, *(unaff_EBP + -0x1c));\n        if (iVar4 == 0) {\n            uVar3 = fcn.0040c1b1(0x3e4, *(unaff_EBP + 0xc));\n            fcn.0040e0c1(iVar1 + 0x1e, uVar3);\n            fcn.00401000();\n            fcn.004062af();\n        }\n    }\n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00419d72(*(unaff_EBP + -0x1c));\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 612
    },
    "004073f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t __cdecl fcn.004073f9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_8h_00;\n    char cVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t nNumberOfBytesToWrite;\n    uint32_t uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1040h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    fcn.0041a360();\n    uVar2 = *(unaff_EBP + 0x14);\n    fcn.0040a1a0(uVar2, uVar2, *(unaff_EBP + 0x18));\n    fcn.00408765();\n    uVar4 = 0;\n    *(unaff_EBP + -4) = 0;\n    cVar1 = fcn.004087a2(uVar2, 0);\n    if (cVar1 == '\\0') {\n        fcn.00406444(*(unaff_EBP + 0xc), uVar2);\n        uVar2 = fcn.0040c1b1(0xd2, uVar2, *(unaff_EBP + 0x10));\n        fcn.0040e0c1(*(unaff_EBP + 0xc), uVar2);\n    }\n    else {\n        fcn.004012e7(0x100000);\n        *(unaff_EBP + -4) = 1;\n        fcn.00410bc4();\n        arg_8h_00 = *(unaff_EBP + -0x1c);\n        while( true ) {\n            nNumberOfBytesToWrite = fcn.00408e24(arg_8h_00, *(unaff_EBP + -0x18));\n            if (nNumberOfBytesToWrite == 0) break;\n            fcn.00408a52(arg_8h_00, nNumberOfBytesToWrite);\n            fcn.00410bc4();\n        }\n        if (arg_8h_00 != 0) {\n            fcn.00419d72(arg_8h_00);\n        }\n        uVar4 = 1;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    uVar3 = fcn.00408c21();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 653
    },
    "00407f93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint __cdecl fcn.00407f93(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    char cVar4;\n    uint arg_10h;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t arg_8h_00;\n    uint *in_FS_OFFSET;\n    uint var_105ch;\n    uint var_1058h;\n    uint var_1014h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    fcn.0041a360();\n    arg_8h_00 = *(unaff_EBP + 8);\n    fcn.0040184f(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = extraout_ECX + 0x3ae4;\n    cVar4 = fcn.004088b9(extraout_ECX + 0x3ae4);\n    if (cVar4 != '\\0') {\n        cVar4 = fcn.0040146a(1);\n        if (cVar4 != '\\0') {\n            if (*(unaff_EBP + -0x3097) == '\\0') {\n                *(unaff_EBP + -0x14) = 0;\n                *(unaff_EBP + -0x10) = 0;\n                if (*(unaff_EBP + -0x30a7) != '\\0') {\n                    fcn.0041a09a(unaff_EBP + -0x1014, unaff_EBP + -0xd2b6);\n                    while( true ) {\n                        fcn.0040a58a();\n                        fcn.0040659a();\n                        cVar4 = fcn.00409651(unaff_EBP + -0x1014, unaff_EBP + -0x205c, 0);\n                        if (cVar4 == '\\0') break;\n                        puVar1 = unaff_EBP + -0x14;\n                        uVar2 = *puVar1;\n                        *puVar1 = *puVar1 + *(unaff_EBP + -0x105c);\n                        *(unaff_EBP + -0x10) =\n                             *(unaff_EBP + -0x10) + *(unaff_EBP + -0x1058) + CARRY4(uVar2, *(unaff_EBP + -0x105c));\n                    }\n                    uVar2 = *(unaff_EBP + -0x14);\n                    arg_8h_00 = *(unaff_EBP + 8);\n                    puVar1 = extraout_ECX + 0x1898;\n                    uVar3 = *puVar1;\n                    *puVar1 = *puVar1 + uVar2;\n                    *(extraout_ECX + 0x189c) = *(extraout_ECX + 0x189c) + *(unaff_EBP + -0x10) + CARRY4(uVar3, uVar2);\n                }\n                fcn.004072a1(arg_8h_00, unaff_EBP + -0xd2d4);\n                if ((*(arg_8h_00 + 0x72b2) == 0x54) || (*(arg_8h_00 + 0x72b2) == 0x49)) {\n                    *(arg_8h_00 + 0x51c1) = 1;\n                }\n                fcn.00401000();\n                do {\n                    arg_10h = fcn.00403662();\n                    cVar4 = fcn.004074d2(arg_8h_00, unaff_EBP + -0xd2d4, arg_10h);\n                } while (cVar4 != '\\0');\n            }\n            goto code_r0x00408104;\n        }\n        cVar4 = fcn.0040a471(*(unaff_EBP + -0x10), 0x427620);\n        if (cVar4 == '\\0') goto code_r0x00408104;\n    }\n    fcn.004062af();\ncode_r0x00408104:\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040123f();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return 0;\n}\n",
        "token_count": 1057
    },
    "004082d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004082d4(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.0041a297(param_1, param_2, param_3, 0, &stack0x00000010);\n    return;\n}\n",
        "token_count": 60
    },
    "004082f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004082f0(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_1008h;\n    uint uStackY52;\n    uint *puStackY48;\n    uint uStackY44;\n    char16_t *pcStackY40;\n    int32_t iStackY36;\n    uint *puStackY32;\n    uint *puStackY28;\n    uint *puStackY24;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    fcn.0041a360();\n    uVar2 = fcn.0041a052(arg_8h);\n    if (uVar2 < 0x7f7) {\n        var_8h = fcn.0040a453();\n        if (var_8h == NULL) {\n            iVar4 = fcn.0041a052(arg_8h);\n            var_8h = arg_8h + iVar4 * 2;\n        }\n        puStackY24 = var_8h;\n        var_1008h._0_2_ = 0;\n        puStackY28 = 0x1;\n        var_4h = 1;\n        while( true ) {\n            puStackY32 = arg_8h;\n            pcStackY40 = L\"%.*ls(%u)%ls\";\n            puStackY48 = &fcn.004082f0::var_1008h;\n            uStackY44 = 0x800;\n            uStackY52 = 0x40837b;\n            iStackY36 = var_8h - arg_8h >> 1;\n            fcn.004082d4();\n            puStackY24 = &fcn.004082f0::var_1008h;\n            puStackY28 = 0x40838a;\n            cVar1 = fcn.0040924e();\n            if (cVar1 == '\\0') break;\n            if (999999 < var_4h) {\n                return 0;\n            }\n            puStackY28 = var_8h;\n            var_4h = var_4h + 1;\n        }\n        puStackY28 = arg_ch;\n        puStackY32 = &fcn.004082f0::var_1008h;\n        iStackY36 = arg_8h;\n        pcStackY40 = 0x4083a0;\n        fcn.00410976();\n        uVar3 = 1;\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 631
    },
    "00408a52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408a52(int32_t lpBuffer, uint32_t nNumberOfBytesToWrite)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    ulong uVar5;\n    uint uVar6;\n    uint32_t lpNumberOfBytesWritten;\n    \n    if (nNumberOfBytesToWrite == 0) {\n        return;\n    }\n    iVar2 = in_ECX[3];\n    if (iVar2 != 0) {\n        if (iVar2 == 1) {\n            uVar6 = 0xfffffff5;\n        }\n        else {\n            if (iVar2 != 2) goto code_r0x00408a82;\n            uVar6 = 0xfffffff4;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(uVar6);\n        in_ECX[1] = iVar2;\n    }\ncode_r0x00408a82:\n    do {\n        lpNumberOfBytesWritten = 0;\n        if (in_ECX[3] == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                              (in_ECX[1], lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n            cVar1 = '\\x01' - (iVar2 != 1);\ncode_r0x00408ae7:\n            if (cVar1 != '\\0') goto code_r0x00408b47;\n        }\n        else {\n            uVar4 = 0;\n            if (nNumberOfBytesToWrite != 0) {\n                do {\n                    uVar3 = nNumberOfBytesToWrite - uVar4;\n                    if (0x3fff < uVar3) {\n                        uVar3 = 0x4000;\n                    }\n                    iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                                      (in_ECX[1], lpBuffer + uVar4, uVar3, &lpNumberOfBytesWritten, 0);\n                    cVar1 = '\\x01' - (iVar2 != 1);\n                    if (cVar1 == '\\0') goto code_r0x00408aeb;\n                    uVar4 = uVar4 + 0x4000;\n                } while (uVar4 < nNumberOfBytesToWrite);\n                goto code_r0x00408ae7;\n            }\n        }\ncode_r0x00408aeb:\n        if ((*(in_ECX + 5) == '\\0') || (in_ECX[3] != 0)) goto code_r0x00408b47;\n        cVar1 = fcn.00406362(in_ECX + 0x1e);\n        if (cVar1 == '\\0') {\n            fcn.004064ca(0, in_ECX + 0x1e);\ncode_r0x00408b47:\n            *(in_ECX + 2) = 1;\n            return;\n        }\n        if ((lpNumberOfBytesWritten < nNumberOfBytesToWrite) && (lpNumberOfBytesWritten != 0)) {\n            iVar2 = *in_ECX;\n            uVar5 = (**(iVar2 + 0xc))(0);\n            (**(iVar2 + 8))(uVar5 - lpNumberOfBytesWritten, (uVar5 >> 0x20) - (uVar5 < lpNumberOfBytesWritten));\n        }\n    } while( true );\n}\n",
        "token_count": 755
    },
    "00408f96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00408f96(int32_t param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00408ef4(param_2, param_3, param_4);\n    if ((cVar1 == '\\0') && (*(param_1 + 0x14) != '\\0')) {\n        fcn.004063da(param_1 + 0x1e);\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "004097f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004097f1(int32_t param_1)\n\n{\n    fcn.00410ef2(*(param_1 + 0xb5c));\n    fcn.0040ccb3(param_1 + 8, 0xb54);\n    fcn.0040ccb3(param_1 + 4, 4);\n    return;\n}\n",
        "token_count": 80
    },
    "004098c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004098c3(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, code *arg_18h)\n\n{\n    for (arg_14h = arg_14h + -1; -1 < arg_14h; arg_14h = arg_14h + -1) {\n        (*arg_18h)(arg_ch);\n        arg_ch = arg_ch + arg_10h;\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00409916": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00409916(int32_t param_1, int32_t param_2)\n\n{\n    if (param_1 != param_2) {\n        fcn.0041bb00(*(param_1 + 0xf0), *(param_2 + 0xf0), 0xb0);\n        *(param_1 + 0x100) = *(param_2 + 0x100);\n        *(param_1 + 0x104) = *(param_2 + 0x104);\n    }\n    return param_1;\n}\n",
        "token_count": 126
    },
    "00409973": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00409973(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 7;\n    do {\n        fcn.004098ea();\n        iVar1 = iVar1 + -1;\n    } while (-1 < iVar1);\n    fcn.004098ea();\n    return param_1;\n}\n",
        "token_count": 76
    },
    "00409eae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409eae(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    fcn.0041a0c0(param_1, 0, 0x72a8);\n    *(param_1 + 0x512c) = 0;\n    *(param_1 + 0x5124) = 0;\n    *(param_1 + 0x5184) = 0;\n    *(param_1 + 0xc) = 0x2000000;\n    *(param_1 + 0x5130) = 3;\n    *(param_1 + 0x5198) = 1;\n    *(param_1 + 0x628c) = 4;\n    *(param_1 + 0x51b0) = 0x7fffffff;\n    *(param_1 + 0x51b4) = 0x7fffffff;\n    *(param_1 + 0x51b8) = 0x7fffffff;\n    *(param_1 + 0x51bc) = 0x7fffffff;\n    *(param_1 + 0x5134) = 2;\n    uVar1 = fcn.00410d1a();\n    *(param_1 + 0x7298) = uVar1;\n    return;\n}\n",
        "token_count": 294
    },
    "00409f2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409f2c(int32_t param_1)\n\n{\n    fcn.0041a0c0(param_1, 0, 0x72a8);\n    fcn.004122a7();\n    *(param_1 + 0x4120) = 0;\n    fcn.0040ccb3(param_1 + 0x4020, 0x100);\n    return;\n}\n",
        "token_count": 96
    },
    "0040a20d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint fcn.0040a20d(ushort *param_1)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0041092c(*param_1);\n    if ((iVar1 - 0x41U < 0x1a) && (param_1[1] == 0x3a)) {\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 112
    },
    "0040a471": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040a471(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040a453(param_1);\n    if ((iVar1 != 0) && (iVar1 = fcn.004116a1(iVar1 + 2, param_1),  iVar1 == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 91
    },
    "0040a497": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a497(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t arg_10h;\n    int32_t unaff_retaddr;\n    \n    if (param_3 != 0) {\n        arg_10h = param_3 - 1;\n        iVar1 = fcn.0040a2c4(param_1);\n        if (iVar1 - param_1 >> 1 <= arg_10h) {\n            iVar1 = fcn.0040a2c4(param_1);\n            arg_10h = iVar1 - param_1 >> 1;\n        }\n        fcn.0041c20f(unaff_retaddr, param_1, arg_10h);\n        *(unaff_retaddr + arg_10h * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "0040a4dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a4dc(int32_t param_1)\n\n{\n    ushort *puVar1;\n    \n    puVar1 = fcn.0040a2c4(param_1);\n    if ((param_1 + 4 <= puVar1) && ((*(param_1 + 2) != 0x3a || (param_1 + 8 <= puVar1)))) {\n        puVar1 = puVar1 + -1;\n    }\n    *puVar1 = 0;\n    return;\n}\n",
        "token_count": 115
    },
    "0040a6e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a6e9(int16_t *param_1, ushort *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    ushort *arg_10h;\n    \n    *param_2 = 0;\n    cVar1 = fcn.0040a20d(param_1);\n    if (cVar1 == '\\0') {\n        if (((*param_1 == 0x5c) && (param_1[1] == 0x5c)) && (iVar2 = fcn.0041c3ac(param_1 + 2, 0x5c),  iVar2 != 0)) {\n            iVar2 = fcn.0041c3ac(iVar2 + 2, 0x5c);\n            if (iVar2 == 0) {\n                arg_10h = fcn.0041a052(param_1);\n            }\n            else {\n                arg_10h = (iVar2 - param_1 >> 1) + 1;\n            }\n            if (param_2 <= arg_10h) {\n                arg_10h = NULL;\n            }\n            fcn.0041c20f(param_2, param_1, arg_10h);\n            param_2[arg_10h] = 0;\n        }\n    }\n    else {\n        fcn.004082d4(param_2, param_2, L\"%c:\\\\\", *param_1);\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "0040aac1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040aac1(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t arg_10h_00;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    \n    if ((arg_8h < 0x40000) && (arg_8h_00 = *(in_ECX + 0x10) + arg_8h,  arg_ch != arg_8h_00)) {\n        arg_10h_00 = 0x40000 - arg_8h;\n        if (arg_10h < 0x40000 - arg_8h) {\n            arg_10h_00 = arg_10h;\n        }\n        fcn.0041c500(arg_8h_00, arg_ch, arg_10h_00);\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "0040aaf5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040aaf5(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar1 = fcn.00405593(0xffffffff, param_1, param_2);\n    iVar3 = 0;\n    uVar2 = 0;\n    while ((*(uVar2 + 0x42c074) != ~uVar1 || (*(uVar2 + 0x42c070) != param_2))) {\n        uVar2 = uVar2 + 0xc;\n        iVar3 = iVar3 + 1;\n        if (0x47 < uVar2) {\n            return 0;\n        }\n    }\n    return *(iVar3 * 0xc + 0x42c078);\n}\n",
        "token_count": 186
    },
    "0040ac00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ac00(uint8_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *in_ECX;\n    uint8_t uVar5;\n    int32_t iVar6;\n    \n    in_ECX[1] = 0;\n    *in_ECX = 0;\n    uVar1 = 0x8000;\n    if (arg_ch < 0x8000) {\n        uVar1 = arg_ch;\n    }\n    fcn.0041bb00(in_ECX[3], arg_8h, uVar1);\n    uVar1 = 1;\n    uVar5 = 0;\n    if (1 < arg_ch) {\n        do {\n            uVar5 = uVar5 ^ arg_8h[uVar1];\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < arg_ch);\n    }\n    fcn.0040974f(8);\n    arg_10h[5] = 0;\n    if ((uVar5 == *arg_8h) && (iVar2 = fcn.0040aaf5(arg_8h, arg_ch),  iVar2 != 0)) {\n        fcn.0040ab86(1);\n        puVar3 = arg_10h[5] * 0x28 + *arg_10h;\n        arg_10h[5] = arg_10h[5] + 1;\n        puVar3[3] = iVar2;\n        puVar3[5] = puVar3 + 3;\n        puVar3[9] = puVar3 + 7;\n        *puVar3 = 0x28;\n        puVar3[6] = 3;\n        puVar3[2] = 3;\n        return;\n    }\n    fcn.0040ab86(1);\n    puVar3 = arg_10h[5] * 0x28 + *arg_10h;\n    arg_10h[5] = arg_10h[5] + 1;\n    puVar3[5] = puVar3 + 3;\n    puVar3[9] = puVar3 + 7;\n    puVar3[6] = 3;\n    puVar3[2] = 3;\n    *puVar3 = 0x16;\n    iVar2 = 0;\n    if (0 < arg_10h[5]) {\n        iVar6 = 0;\n        do {\n            iVar4 = *arg_10h + iVar6;\n            if (*(iVar4 + 0x14) == 0) {\n                *(iVar4 + 0x14) = iVar4 + 0xc;\n            }\n            if (*(iVar4 + 0x24) == 0) {\n                *(iVar4 + 0x24) = iVar4 + 0x1c;\n            }\n            iVar2 = iVar2 + 1;\n            iVar6 = iVar6 + 0x28;\n        } while (iVar2 < arg_10h[5]);\n    }\n    return;\n}\n",
        "token_count": 711
    },
    "0040b1a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040b1a8(int32_t param_1, int32_t *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    iVar4 = 25000000;\n    piVar3 = param_2;\n    while( true ) {\n        for (; *piVar3 != 0x16; piVar3 = piVar3 + 10) {\n            if (*piVar3 == 0x28) {\n                fcn.0040ad04(piVar3[3]);\n                return 1;\n            }\n            iVar4 = iVar4 + -1;\n        }\n        uVar1 = *(param_1 + 0x30);\n        if (0x3ffff < uVar1) {\n            return 1;\n        }\n        uVar2 = *((uVar1 & 0x3ffff) + *(param_1 + 0x10));\n        if (param_3 <= uVar2) break;\n        iVar4 = iVar4 + -1;\n        if (iVar4 < 1) {\n            return 0;\n        }\n        piVar3 = param_2 + uVar2 * 10;\n        *(param_1 + 0x30) = uVar1 + 4;\n    }\n    return 1;\n}\n",
        "token_count": 310
    },
    "0040b326": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040b326(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    uVar2 = 0;\n    if (in_ECX[7] == 0) {\n        if (arg_8h != 0) {\n            fcn.00401106(arg_8h);\n            uVar2 = (**(*in_ECX[4] + 4))(in_ECX[5] + *in_ECX, arg_8h);\n            in_ECX[5] = in_ECX[5] + uVar2;\n        }\n    }\n    else {\n        iVar1 = in_ECX[1];\n        uVar2 = iVar1 - in_ECX[5];\n        if (uVar2 < arg_8h) {\n            uVar2 = arg_8h - uVar2;\n            iVar3 = (~uVar2 + 1 & 0xf) + uVar2;\n            fcn.00401106(iVar3);\n            uVar2 = (**(*in_ECX[4] + 4))(*in_ECX + iVar1, iVar3);\n            fcn.00405e36(*in_ECX + iVar1, iVar3);\n            in_ECX[5] = in_ECX[5] + (-(uVar2 != 0) & arg_8h);\n        }\n        else {\n            in_ECX[5] = in_ECX[5] + arg_8h;\n            uVar2 = arg_8h;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 373
    },
    "0040b3d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint16_t __fastcall fcn.0040b3d8(int32_t *param_1)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = param_1[6];\n    if (iVar3 + 1U < param_1[5]) {\n        uVar1 = (*param_1 + iVar3)[1];\n        uVar2 = *(*param_1 + iVar3);\n        param_1[6] = iVar3 + 2;\n        return uVar1 * 0x100 + uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 140
    },
    "0040b44a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040b44a(void)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    \n    fcn.0040b40d();\n    uVar1 = fcn.0040b40d();\n    uVar2 = fcn.0041a440(uVar1, 0, 0, 1);\n    return uVar2;\n}\n",
        "token_count": 82
    },
    "0040b4f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0040b4f4(int32_t *param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t arg_10h;\n    \n    arg_10h = param_1[5] - param_1[6];\n    if (param_3 <= arg_10h) {\n        arg_10h = param_3;\n    }\n    if (arg_10h != 0) {\n        fcn.0041bb00(param_2, *param_1 + param_1[6], arg_10h);\n    }\n    if (arg_10h < param_3) {\n        fcn.0041a0c0(param_2 + arg_10h, 0, param_3 - arg_10h);\n    }\n    param_1[6] = param_1[6] + arg_10h;\n    return arg_10h;\n}\n",
        "token_count": 209
    },
    "0040be67": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040be67(uint arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_400h;\n    \n    fcn.0040bd17(0x427554, &var_400h, 0x200, 1, arg_8h);\n    iVar1 = fcn.0041c3ac(&var_400h, 0x2a);\n    if (iVar1 == 0) {\n        *arg_10h = 100;\n        *arg_ch = 100;\n    }\n    else {\n        iVar2 = fcn.004117b9(&var_400h);\n        *arg_ch = iVar2;\n        iVar1 = fcn.004117b9(iVar1 + 2);\n        *arg_10h = iVar1;\n    }\n    if ((*arg_ch == 100) && (*arg_10h == 100)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 257
    },
    "0040c1b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * fcn.0040c1b1(uint param_1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    ushort *arg_8h;\n    int32_t iVar3;\n    \n    *0x431790 = *0x431790 + 1;\n    if (7 < *0x431790) {\n        *0x431790 = 0;\n    }\n    arg_8h = *0x431790 * 0x400 + 0x42f790;\n    *arg_8h = 0;\n    cVar2 = fcn.0040b997();\n    pcVar1 = _sym.imp.USER32.dll_LoadStringW;\n    if (cVar2 == '\\0') {\n        iVar3 = (*_sym.imp.USER32.dll_LoadStringW)(*0x42f768, param_1, arg_8h, 0x200);\n        if (iVar3 != 0) goto code_r0x0040c216;\n    }\n    (*pcVar1)(*0x42f764, param_1, arg_8h, 0x200);\ncode_r0x0040c216:\n    fcn.0040bd17(arg_8h, arg_8h, 0x200, 0, 0);\n    return arg_8h;\n}\n",
        "token_count": 288
    },
    "0040c41f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c41f(int32_t *param_1)\n\n{\n    uint8_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint var_1ch;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_8h = 1;\n    if (1 < *param_1) {\n        var_4h = param_1 + 9;\n        do {\n            iVar5 = 0;\n            do {\n                puVar7 = &var_1ch + iVar5;\n                puVar6 = var_4h + 2;\n                var_ch = 4;\n                do {\n                    puVar1 = puVar6 + 1;\n                    puVar2 = puVar6 + -1;\n                    puVar3 = puVar6 + -2;\n                    uVar4 = *puVar6;\n                    puVar6 = puVar6 + 4;\n                    *puVar7 = *(iVar5 + 0x431798 + *puVar1 * 4) ^ *(iVar5 + 0x431f98 + *puVar2 * 4) ^\n                              *(iVar5 + 0x432398 + *puVar3 * 4) ^ *(iVar5 + 0x431b98 + uVar4 * 4);\n                    puVar7 = puVar7 + 4;\n                    var_ch = var_ch + -1;\n                } while (var_ch != 0);\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < 4);\n            fcn.0041bb00(var_4h, &var_1ch, 0x10);\n            var_4h = var_4h + 4;\n            var_8h = var_8h + 1;\n        } while (var_8h < *param_1);\n    }\n    return;\n}\n",
        "token_count": 463
    },
    "0040caf6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040caf6(uint *arg_8h, uint32_t arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_8h == NULL) || (arg_ch == 0)) {\n        iVar1 = 0;\n    }\n    else {\n        fcn.0041bb00(&var_24h, in_ECX + 4, 0x10);\n        arg_ch = arg_ch >> 4;\n        var_4h = arg_ch;\n        for (; arg_ch != 0; arg_ch = arg_ch - 1) {\n            fcn.0040c4af(arg_8h, &var_14h);\n            fcn.0040c22d();\n            var_24h = *arg_8h;\n            var_20h = arg_8h[1];\n            var_1ch = arg_8h[2];\n            var_18h = arg_8h[3];\n            *arg_10h = var_14h;\n            arg_10h[1] = var_10h;\n            arg_10h[2] = var_ch;\n            arg_10h[3] = var_8h;\n            arg_8h = arg_8h + 4;\n            arg_10h = arg_10h + 4;\n        }\n        fcn.0041bb00(in_ECX + 4, &var_24h, 0x10);\n        iVar1 = var_4h << 4;\n    }\n    return iVar1;\n}\n",
        "token_count": 417
    },
    "0040cc0d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cc0d(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char16_t *arg_ch_00;\n    \n    if (*0x4349c0 == NULL) {\n        fcn.0040cbce();\n    }\n    iVar2 = arg_ch - (arg_ch & 0xf);\n    if (arg_10h == '\\0') {\n        if (*0x4349c4 == NULL) goto code_r0x0040cc8c;\n        iVar2 = (**0x4349c4)(arg_8h, iVar2, 0);\n        if (iVar2 != 0) {\n            return;\n        }\n        arg_ch_00 = L\"CryptUnprotectMemory failed\";\n    }\n    else {\n        if (*0x4349c0 == NULL) {\ncode_r0x0040cc8c:\n            cVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n            uVar3 = 0;\n            if (arg_ch == 0) {\n                return;\n            }\n            do {\n                *(arg_8h + uVar3) = *(arg_8h + uVar3) ^ cVar1 + 'K' + uVar3;\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < arg_ch);\n            return;\n        }\n        iVar2 = (**0x4349c0)(arg_8h, iVar2, 0);\n        if (iVar2 != 0) {\n            return;\n        }\n        arg_ch_00 = L\"CryptProtectMemory failed\";\n    }\n    fcn.00406409(0x42f76c, arg_ch_00, arg_8h);\n    fcn.00401000();\n    fcn.004064c5(2);\n    return;\n}\n",
        "token_count": 427
    },
    "0040ccc9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ccc9(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    if (arg_14h <= arg_ch) {\n        arg_ch = arg_14h;\n    }\n    fcn.0041bb00(arg_10h, arg_8h, arg_ch * 2);\n    fcn.0040cc0d(arg_10h, arg_14h * 2, arg_18h);\n    return;\n}\n",
        "token_count": 122
    },
    "0040cd37": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040cd37(int32_t param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint arg_14h;\n    uint arg_18h;\n    \n    if (*param_2 == 0) {\n        *(param_1 + 0x100) = 0;\n        fcn.0041a0c0(param_1, 0, 0x100);\n    }\n    else {\n        arg_18h = 1;\n        arg_14h = 0x80;\n        *(param_1 + 0x100) = 1;\n        iVar1 = fcn.0041a052(param_2);\n        fcn.0040ccc9(param_2, iVar1 + 1, param_1, arg_14h, arg_18h);\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "0040dba4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.0040dba4(int16_t *param_1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    ushort *puVar4;\n    \n    iVar2 = fcn.0041c3ac(param_1, 0x20);\n    if (iVar2 != 0) {\n        if ((*param_1 == 0x22) && (piVar3 = fcn.00409fb8(param_1),  *piVar3 == 0x22)) {\n            return param_1;\n        }\n        iVar2 = fcn.0041a052(param_1);\n        iVar1 = (iVar2 + 3) * 2;\n        puVar4 = fcn.00419956(-(iVar1 >> 0x20 != 0) | iVar1);\n        fcn.0041a09a(puVar4 + 1, param_1);\n        puVar4[iVar2 + 1] = 0x22;\n        *puVar4 = 0x22;\n        puVar4[iVar2 + 2] = 0;\n        fcn.00410976(param_1, puVar4, param_1);\n        fcn.0041c35e(puVar4);\n    }\n    return param_1;\n}\n",
        "token_count": 293
    },
    "0040e231": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e231(uint arg_8h, uint arg_ch)\n\n{\n    uint var_1400h;\n    uint uStackY36;\n    uint *puStackY32;\n    uint uStackY28;\n    \n    fcn.0041a360();\n    fcn.0040a2c4();\n    fcn.0040c1b1();\n    puStackY32 = &fcn.0040e231::var_1400h;\n    uStackY28 = 0xa00;\n    uStackY36 = 0x40e276;\n    fcn.004082d4();\n    uStackY28 = 0x40e287;\n    fcn.0040d0fd(0, &fcn.0040e231::var_1400h);\n    return;\n}\n",
        "token_count": 180
    },
    "0040e671": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nvoid __cdecl fcn.0040e671(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t arg_10h_00;\n    char cVar1;\n    int32_t arg_8h;\n    int32_t unaff_EBP;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch_2;\n    uint var_4h;\n    uint var_10h;\n    \n    fcn.00419d48();\n    fcn.0041a360();\n    *(unaff_EBP + -0x10) = &var_ch_2;\n    *(unaff_EBP + -4) = 0;\n    fcn.0040184f(0);\n    *(unaff_EBP + -4) = 1;\n    fcn.00401a56(*(unaff_EBP + 0xc));\n    *(unaff_EBP + -0x20) = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -4) = 2;\n    cVar1 = fcn.00401795(unaff_EBP + -0x20);\n    if (cVar1 != '\\0') {\n        iVar2 = *(unaff_EBP + -0x1c);\n        arg_10h_00 = iVar2 * 2;\n        arg_8h = fcn.0041c8ee(arg_10h_00 + 2);\n        **(unaff_EBP + 0x10) = arg_8h;\n        if (arg_8h == 0) {\n            iVar2 = 0;\n        }\n        else {\n            *(arg_10h_00 + arg_8h) = 0;\n            fcn.0041bb00(arg_8h, *(unaff_EBP + -0x20), arg_10h_00);\n        }\n        **(unaff_EBP + 0x14) = iVar2;\n    }\n    if (*(unaff_EBP + -0x20) != 0) {\n        fcn.00419d72(*(unaff_EBP + -0x20));\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.0040123f();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 690
    },
    "00410947": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00410947(int32_t param_1)\n\n{\n    return param_1 - 0x30U < 10;\n}\n",
        "token_count": 32
    },
    "00410976": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00410976(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    if (param_3 != 0) {\n        fcn.0041c20f(param_1, param_2, param_3 + -1);\n        *(param_1 + -2 + param_3 * 2) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 94
    },
    "004109a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004109a3(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041a052(arg_8h);\n    if (iVar1 + 1U < arg_10h) {\n        fcn.0041ced5(arg_8h, arg_ch, (arg_10h - iVar1) + -1);\n    }\n    return arg_8h;\n}\n",
        "token_count": 109
    },
    "00410b38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00410b38(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (param_1[4] < param_1[1]) {\n        arg_8h = *param_1 + param_1[4] * 2;\n        iVar2 = fcn.0041a052(arg_8h);\n        param_1[4] = param_1[4] + iVar2 + 1;\n        if (param_2 != NULL) {\n            *param_2 = arg_8h;\n        }\n        uVar1 = 1;\n    }\n    else {\n        if (param_2 != NULL) {\n            *param_2 = 0;\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 201
    },
    "00410dd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410dd8(uint32_t *param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    \n    fcn.00410d91();\n    uVar2 = 0;\n    *(param_1 + 100) = 1;\n    (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(param_1[0x65], 0x20, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if (*param_1 != 0) {\n        puVar3 = param_1 + 1;\n        do {\n            fcn.00410ca8(*puVar3);\n            (*pcVar1)(*puVar3);\n            uVar2 = uVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (uVar2 < *param_1);\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(param_1 + 0x67);\n    (*pcVar1)(param_1[0x65]);\n    (*pcVar1)(param_1[0x66]);\n    return;\n}\n",
        "token_count": 259
    },
    "00410f2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * __thiscall fcn.00410f2d(uint32_t *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint unaff_EBP;\n    uint32_t *puVar2;\n    uint uStack40;\n    uint uStack36;\n    uint32_t uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    *param_1 = param_2;\n    if (0x20 < param_2) {\n        *param_1 = 0x20;\n    }\n    if (*param_1 == 0) {\n        *param_1 = 1;\n    }\n    if (0x20 < *param_1) {\n        *param_1 = 0x20;\n    }\n    uStack20 = 0;\n    uStack24 = 0x20;\n    uStack28 = 0;\n    uStack32 = 0;\n    *(param_1 + 100) = 0;\n    uStack36 = 0x410f63;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateSemaphoreW)();\n    uStack36 = 0;\n    uStack40 = 1;\n    param_1[0x65] = uVar1;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateEventW)(0, 1);\n    param_1[0x66] = uVar1;\n    puVar2 = param_1 + 0x67;\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)();\n    if ((param_1[0x65] == 0) || (param_1[0x66] == 0)) {\n        fcn.00406409(0x42f76c, L\"\\nThread pool initialization failed.\", puVar2);\n        fcn.004064c5(2);\n    }\n    uStack32 = 0;\n    if (*param_1 != 0) {\n        puVar2 = param_1 + 1;\n        do {\n            uVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0x10000, 0x410ee4, param_1, 0, &stack0xffffffd8);\n            if (uVar1 == 0) {\n                fcn.00406409(0x42f76c, L\"CreateThread failed\", unaff_EBP);\n                fcn.00401000();\n                unaff_EBP = 2;\n                fcn.004064c5();\n            }\n            *puVar2 = uVar1;\n            if (*0x44b74c != 0) {\n                (*_sym.imp.KERNEL32.dll_SetThreadPriority)(uVar1, *0x44b74c);\n            }\n            uStack32 = uStack32 + 1;\n            puVar2 = puVar2 + 1;\n        } while (uStack32 < *param_1);\n    }\n    param_1[0x62] = 0;\n    param_1[99] = 0;\n    param_1[0x21] = 0;\n    return param_1;\n}\n",
        "token_count": 695
    },
    "004110b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004110b5(uint *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.0041a440(param_2 + 0xb6109100, param_3 + 2 + (0x49ef6eff < param_2), 10000000, 0);\n    *param_1 = uVar1;\n    param_1[1] = uVar1 >> 0x20;\n    return param_1;\n}\n",
        "token_count": 125
    },
    "00411220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00411220(ushort *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint lpSystemTime;\n    uint var_1ah;\n    ushort var_16h;\n    ushort var_14h;\n    ushort var_12h;\n    uint lpFileTime;\n    uint var_ch;\n    uint32_t lpLocalFileTime;\n    int32_t var_4h;\n    \n    lpSystemTime._0_2_ = *arg_8h;\n    lpSystemTime._2_2_ = arg_8h[2];\n    var_1ah._0_2_ = arg_8h[4];\n    var_1ah._2_2_ = arg_8h[6];\n    var_16h = arg_8h[8];\n    var_14h = arg_8h[10];\n    var_12h = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&lpSystemTime, &lpLocalFileTime);\n    if (iVar1 == 0) {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        lpLocalFileTime = lpLocalFileTime + *(arg_8h + 0xc);\n        if (lpLocalFileTime < *(arg_8h + 0xc)) {\n            var_4h = var_4h + 1;\n        }\n        (*_sym.imp.KERNEL32.dll_LocalFileTimeToFileTime)(&lpLocalFileTime, &lpFileTime);\n        *in_ECX = lpFileTime;\n        in_ECX[1] = var_ch;\n    }\n    return;\n}\n",
        "token_count": 383
    },
    "004113e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004113e8(uint8_t *arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if (arg_10h != 0) {\n        iVar2 = arg_ch - arg_8h;\n        do {\n            iVar1 = arg_8h[1] * 0x100 + *arg_8h;\n            *(arg_8h + iVar2) = iVar1;\n            if (iVar1 == 0) {\n                return arg_ch;\n            }\n            uVar3 = uVar3 + 1;\n            arg_8h = arg_8h + 2;\n        } while (uVar3 < arg_10h);\n    }\n    return arg_ch;\n}\n",
        "token_count": 196
    },
    "004117be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004117be(int32_t param_1, int32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    uVar3 = *(param_4 + 4 + param_1);\n    uVar2 = *(param_3 + 4 + param_1) - uVar3;\n    puVar4 = uVar3 * 0xc + param_2;\n    uVar3 = *(uVar2 + 0x29 + param_1);\n    if (*(uVar3 + 4 + param_1) != uVar2) {\n        puVar1 = param_1 + 0xb8 + (uVar3 - 1) * 4;\n        *puVar4 = *puVar1;\n        *puVar1 = puVar4;\n        uVar3 = *(uVar3 + 3 + param_1);\n        puVar4 = puVar4 + uVar3 * 3;\n        uVar2 = uVar2 - uVar3;\n    }\n    puVar1 = param_1 + 0xb8 + *(uVar2 + 0x29 + param_1) * 4;\n    *puVar4 = *puVar1;\n    *puVar1 = puVar4;\n    return;\n}\n",
        "token_count": 318
    },
    "0041188f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041188f(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.0041a0c0(param_1 + 0x2e, 0, 0x98);\n    iVar5 = *param_1;\n    uVar1 = (iVar5 + (iVar5 >> 0x1f & 7U) >> 3) / 0xc;\n    iVar4 = param_1[0x2b];\n    param_1[0x54] = iVar4;\n    uVar7 = iVar5 + uVar1 * -0x54;\n    iVar5 = (uVar7 / 0xc + 1) * 0xc + iVar4;\n    param_1[0x57] = iVar4 + uVar7;\n    iVar6 = 4;\n    param_1[0x55] = iVar5;\n    param_1[0x2c] = iVar5;\n    iVar4 = 4;\n    param_1[0x2d] = ((uVar1 * 0x54) / 0xc) * 0xc + iVar5;\n    iVar5 = 1;\n    do {\n        iVar2 = iVar5;\n        *(param_1 + iVar2 + 3) = iVar2;\n        iVar6 = iVar6 + -1;\n        iVar5 = iVar2 + 1;\n    } while (iVar6 != 0);\n    do {\n        iVar2 = iVar2 + 2;\n        *(param_1 + iVar4 + 4) = iVar2;\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 8);\n    for (; iVar4 < 0xc; iVar4 = iVar4 + 1) {\n        *(param_1 + iVar4 + 4) = iVar2 + 3;\n        iVar2 = iVar2 + 3;\n    }\n    for (; iVar2 = iVar2 + 4,  iVar4 < 0x26; iVar4 = iVar4 + 1) {\n        *(param_1 + iVar4 + 4) = iVar2;\n    }\n    iVar5 = 0;\n    *(param_1 + 0xaa) = 0;\n    puVar3 = param_1 + 0x2a;\n    var_8h = 0x80;\n    do {\n        iVar5 = iVar5 + (*(param_1 + iVar5 + 4) < puVar3 + (-0x29 - param_1));\n        *puVar3 = iVar5;\n        puVar3 = puVar3 + 1;\n        var_8h = var_8h + -1;\n    } while (var_8h != 0);\n    return;\n}\n",
        "token_count": 661
    },
    "004119d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t ** __cdecl fcn.004119d3(int32_t **arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t **ppiVar1;\n    int32_t **arg_8h_00;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = *(arg_ch + 0x29 + in_ECX);\n    uVar2 = *(arg_10h + 0x29 + in_ECX);\n    if (uVar3 != uVar2) {\n        ppiVar1 = in_ECX + 0xb8 + uVar2 * 4;\n        arg_8h_00 = *ppiVar1;\n        if (arg_8h_00 == NULL) {\n            fcn.004117be(arg_8h, uVar3, uVar2);\n        }\n        else {\n            *ppiVar1 = *arg_8h_00;\n            fcn.0041bb00(arg_8h_00, arg_8h, arg_10h * 0xc);\n            ppiVar1 = in_ECX + 0xb8 + uVar3 * 4;\n            *arg_8h = *ppiVar1;\n            *ppiVar1 = arg_8h;\n            arg_8h = arg_8h_00;\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 320
    },
    "00411b72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411b72(int32_t param_1)\n\n{\n    *(param_1 + 0xa6c) = 1;\n    fcn.0041a0c0(param_1 + 0x66c, 0, 0x100);\n    return;\n}\n",
        "token_count": 67
    },
    "00411c9a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411c9a(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar1 = arg_10h & 7;\n    arg_ch = arg_ch << uVar1;\n    uVar3 = 0;\n    arg_8h = (arg_10h + (arg_10h >> 0x1f & 7U) >> 3) + arg_8h;\n    uVar2 = ~((0xffffffffU >> (0x20U - arg_14h & 0x1f)) << uVar1);\n    do {\n        uVar1 = uVar2;\n        arg_ch = arg_ch >> 8;\n        uVar2 = uVar2 >> 8 | 0xff000000;\n        *(arg_8h + uVar3) = *(arg_8h + uVar3) & uVar1 | arg_ch;\n        uVar3 = uVar3 + 1;\n    } while (uVar3 < 4);\n    return;\n}\n",
        "token_count": 266
    },
    "00411cf3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00411cf3(int32_t param_1, uint param_2, uint32_t param_3)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t unaff_retaddr;\n    \n    iVar2 = *(param_1 + 0x4c54);\n    iVar3 = *(param_1 + 0x4c44);\n    uVar4 = *(param_1 + 0x4c40);\n    uVar5 = *(param_1 + 0x4c50);\n    if ((iVar2 <= iVar3) && ((iVar2 < iVar3 || (uVar5 < uVar4)))) {\n        uVar6 = (iVar3 - iVar2) - (uVar4 < uVar5);\n        if ((uVar6 < 1) && ((0x7fffffff < uVar6 || (uVar4 - uVar5 < param_3)))) {\n            param_3 = uVar4 - uVar5;\n        }\n        fcn.0040b914(param_2, param_3);\n        puVar1 = param_1 + 0x4c50;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 + unaff_retaddr;\n        *(param_1 + 0x4c54) = *(param_1 + 0x4c54) + CARRY4(uVar4, unaff_retaddr);\n    }\n    return;\n}\n",
        "token_count": 357
    },
    "00411d52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00411d52(int32_t param_1)\n\n{\n    fcn.0041a0c0(param_1, 0, 0x80);\n    fcn.0041a0c0(param_1 + 0x80, 0, 0x80);\n    return param_1;\n}\n",
        "token_count": 77
    },
    "00411e58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00411e58(int32_t *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    if (param_2 < param_1[0x20]) {\n        iVar1 = *param_1;\ncode_r0x00411e67:\n        iVar1 = iVar1 + param_2;\n    }\n    else {\n        uVar3 = 1;\n        puVar2 = param_1 + 0x21;\n        do {\n            if (param_2 < *puVar2) {\n                iVar1 = param_1[uVar3] - param_1[uVar3 + 0x1f];\n                goto code_r0x00411e67;\n            }\n            uVar3 = uVar3 + 1;\n            puVar2 = puVar2 + 1;\n        } while (uVar3 < 0x20);\n        iVar1 = *param_1;\n    }\n    return iVar1;\n}\n",
        "token_count": 235
    },
    "00411f01": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00411f01(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    \n    uVar1 = 0;\n    puVar2 = param_1 + 0x80;\n    do {\n        if (param_2 < *puVar2) {\n            param_2 = *(param_1 + 0x80 + uVar1 * 4) - param_2;\n            if (param_2 < param_3) {\n                return param_2;\n            }\n            return param_3;\n        }\n        uVar1 = uVar1 + 1;\n        puVar2 = puVar2 + 1;\n    } while (uVar1 < 0x20);\n    return 0;\n}\n",
        "token_count": 190
    },
    "00412072": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412072(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint32_t *puVar3;\n    uint8_t uVar4;\n    ushort uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    uint32_t *puVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint var_80h;\n    int32_t aiStack128 [14];\n    uint var_44h;\n    uint var_40h;\n    int32_t aiStack64 [15];\n    \n    puVar3 = arg_ch;\n    *arg_ch = arg_10h;\n    fcn.0041a0c0(&var_40h, 0, 0x40);\n    uVar9 = 0;\n    if (arg_10h != 0) {\n        do {\n            aiStack64[(*(uVar9 + arg_8h) & 0xf) - 1] = aiStack64[(*(uVar9 + arg_8h) & 0xf) - 1] + 1;\n            uVar9 = uVar9 + 1;\n        } while (uVar9 < arg_10h);\n    }\n    var_40h = 0;\n    fcn.0041a0c0(arg_ch + 0x322, 0, arg_10h * 2);\n    puVar10 = arg_ch + 0x11;\n    *puVar10 = 0;\n    arg_ch[1] = 0;\n    iVar6 = 0;\n    arg_ch = 0x1;\n    puVar11 = puVar10;\n    do {\n        iVar7 = iVar6 + aiStack64[arg_ch - 1];\n        cVar2 = arg_ch;\n        iVar1 = (&var_44h)[arg_ch];\n        iVar6 = iVar7 * 2;\n        arg_ch = arg_ch + 1;\n        puVar11[-0xf] = iVar7 << (0x10U - cVar2 & 0x1f);\n        puVar11[1] = iVar1 + *puVar11;\n        puVar11 = puVar11 + 1;\n    } while (arg_ch < 0x10);\n    fcn.0041bb00(&var_80h, puVar10, 0x40);\n    uVar9 = 0;\n    if (arg_10h != 0) {\n        do {\n            uVar4 = *(uVar9 + arg_8h) & 0xf;\n            if (uVar4 != 0) {\n                iVar6 = aiStack128[uVar4 - 1];\n                *(puVar3 + iVar6 * 2 + 0xc88) = uVar9;\n                aiStack128[uVar4 - 1] = iVar6 + 1;\n            }\n            uVar9 = uVar9 + 1;\n        } while (uVar9 < arg_10h);\n    }\n    if ((arg_10h < 0x12a) || ((299 < arg_10h && (arg_10h != 0x132)))) {\n        puVar3[0x21] = 7;\n    }\n    else {\n        puVar3[0x21] = 10;\n    }\n    uVar9 = 1;\n    uVar12 = 1 << (puVar3[0x21] & 0x1f);\n    uVar13 = 0;\n    if (uVar12 != 0) {\n        arg_8h = puVar3 + 0x122;\n        do {\n            uVar8 = uVar13 << (0x10U - puVar3[0x21] & 0x1f);\n            puVar10 = puVar3 + uVar9 + 1;\n            for (; (*puVar10 <= uVar8 && (uVar9 < 0x10)); uVar9 = uVar9 + 1) {\n                puVar10 = puVar10 + 1;\n            }\n            *(puVar3 + uVar13 + 0x88) = uVar9;\n            uVar8 = (uVar8 - puVar3[uVar9] >> (0x10U - uVar9 & 0x1f)) + puVar3[uVar9 + 0x11];\n            if (uVar8 < arg_10h) {\n                uVar5 = *(puVar3 + uVar8 * 2 + 0xc88);\n            }\n            else {\n                uVar5 = 0;\n            }\n            uVar13 = uVar13 + 1;\n            *arg_8h = uVar5;\n            arg_8h = arg_8h + 2;\n        } while (uVar13 < uVar12);\n    }\n    return;\n}\n",
        "token_count": 1107
    },
    "0041236c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041236c(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    \n    uVar1 = *param_1 >> (*(param_1 + 1) & 0x1f);\n    *param_1 = *param_1 - uVar1;\n    return (uVar1 == 0) + uVar1;\n}\n",
        "token_count": 87
    },
    "00412630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00412630(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = *(param_2 + 0x29 + param_1);\n    piVar1 = param_1 + 0xb8 + uVar4 * 4;\n    piVar2 = *piVar1;\n    if (piVar2 == NULL) {\n        uVar3 = *(uVar4 + 4 + param_1) * 0xc + *(param_1 + 0xb0);\n        *(param_1 + 0xb0) = uVar3;\n        if (*(param_1 + 0xb4) <= uVar3 && uVar3 != *(param_1 + 0xb4)) {\n            *(param_1 + 0xb0) = uVar3 + *(uVar4 + 4 + param_1) * -0xc;\n            fcn.00412593(uVar4);\n        }\n    }\n    else {\n        *piVar1 = *piVar2;\n    }\n    return;\n}\n",
        "token_count": 269
    },
    "004126b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004126b5(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint *arg_8h_00;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    \n    uVar2 = *(arg_ch + 0x29 + in_ECX);\n    arg_8h_00 = arg_8h;\n    if ((uVar2 != *(arg_ch + 0x2a + in_ECX)) && (arg_8h_00 = fcn.00412630(arg_ch + 1),  arg_8h_00 != NULL)) {\n        fcn.0041bb00(arg_8h_00, arg_8h, arg_ch * 0xc);\n        puVar1 = in_ECX + 0xb8 + uVar2 * 4;\n        *arg_8h = *puVar1;\n        *puVar1 = arg_8h;\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 227
    },
    "0041270b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041270b(uint param_1, uint param_2, int32_t param_3, uint *param_4)\n\n{\n    ushort *puVar1;\n    \n    puVar1 = fcn.00412685();\n    if (puVar1 != NULL) {\n        *puVar1 = 1;\n        *(puVar1 + 1) = *param_4;\n        puVar1[3] = *(param_4 + 1);\n        *(puVar1 + 4) = param_1;\n        *(param_3 + 2) = puVar1;\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "00412760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412760(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    char cVar3;\n    uint16_t *puVar4;\n    uchar *puVar5;\n    int32_t iVar6;\n    int32_t var_14h;\n    int16_t *var_10h;\n    int16_t *var_ch;\n    int16_t *var_8h;\n    int32_t var_4h;\n    \n    fcn.0041a0c0(param_1 + 0x66c, 0, 0x100);\n    fcn.0041188f();\n    iVar1 = *(param_1 + 0x660);\n    if (0xb < iVar1) {\n        iVar1 = 0xc;\n    }\n    *(param_1 + 0x668) = -1 - iVar1;\n    iVar1 = fcn.00412685();\n    *(param_1 + 0x64c) = iVar1;\n    *(param_1 + 0x644) = iVar1;\n    *(iVar1 + 8) = 0;\n    *(param_1 + 0x65c) = *(param_1 + 0x660);\n    **(param_1 + 0x644) = 0x100;\n    *(*(param_1 + 0x644) + 2) = 0x101;\n    uVar2 = fcn.00412630(0x80);\n    *(*(param_1 + 0x644) + 4) = uVar2;\n    *(param_1 + 0x650) = *(*(param_1 + 0x644) + 4);\n    cVar3 = '\\0';\n    *(param_1 + 0x664) = *(param_1 + 0x668);\n    *(param_1 + 0xa6d) = 0;\n    iVar1 = 0;\n    do {\n        *(iVar1 + *(*(param_1 + 0x644) + 4)) = cVar3;\n        *(*(*(param_1 + 0x644) + 4) + 1 + iVar1) = 1;\n        *(*(*(param_1 + 0x644) + 4) + 2 + iVar1) = 0;\n        iVar1 = iVar1 + 6;\n        cVar3 = cVar3 + '\\x01';\n    } while (iVar1 < 0x600);\n    var_4h = 0;\n    var_10h = param_1 + 0xa70;\n    do {\n        puVar4 = 0x427de8;\n        var_ch = var_10h;\n        do {\n            var_8h = var_ch;\n            var_14h = 8;\n            do {\n                var_14h = var_14h + -1;\n                *var_8h = 0x4000 - *puVar4 / (var_4h + 2);\n                var_8h = var_8h + 8;\n            } while (var_14h != 0);\n            var_ch = var_ch + 1;\n            puVar4 = puVar4 + 1;\n        } while (puVar4 < 0x427df8);\n        var_4h = var_4h + 1;\n        var_10h = var_10h + 0x40;\n    } while (var_4h < 0x80);\n    iVar1 = 0;\n    puVar5 = param_1 + 3;\n    do {\n        iVar6 = 0x10;\n        do {\n            puVar5[-1] = 3;\n            *(puVar5 + -3) = (iVar1 + 2) * 0x28;\n            *puVar5 = 4;\n            puVar5 = puVar5 + 4;\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x19);\n    return;\n}\n",
        "token_count": 902
    },
    "00412f13": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00412f13(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    *(param_2 + 0x650) = param_3;\n    *(param_3 + 1) = *(param_3 + 1) + '\\x04';\n    *(param_1 + 2) = *(param_1 + 2) + 4;\n    if (*(param_3 + -5) <= *(param_3 + 1) && *(param_3 + 1) != *(param_3 + -5)) {\n        fcn.004121ea(param_3, param_3 + -6);\n        *(param_2 + 0x650) = param_3 + -6;\n        if (0x7c < *(param_3 + -5)) {\n            fcn.0041298c(param_2);\n        }\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "00413099": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00413099(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    *(param_2 + 0x650) = param_3;\n    *(param_3 + 1) = *(param_3 + 1) + '\\x04';\n    *(param_1 + 2) = *(param_1 + 2) + 4;\n    if (0x7c < *(param_3 + 1)) {\n        fcn.0041298c(param_2);\n    }\n    *(param_2 + 0xa6c) = *(param_2 + 0xa6c) + '\\x01';\n    *(param_2 + 0x664) = *(param_2 + 0x668);\n    return;\n}\n",
        "token_count": 180
    },
    "004130d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004130d3(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    uint16_t *in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    uVar1 = *in_ECX;\n    if (uVar1 == 0x100) {\n        iVar3 = arg_8h + 0x640;\n        *(arg_8h + 0x4a84) = 1;\n    }\n    else {\n        iVar3 = arg_8h + ((arg_ch < **(in_ECX + 4) - uVar1) +\n                          ((in_ECX[1] < uVar1 * 0xb) +\n                          ((*(arg_8h + 0x654) != arg_ch && arg_ch <= *(arg_8h + 0x654)) + *(arg_8h + 0x76b + arg_ch) * 4\n                          ) * 2) * 2 + *(arg_8h + 0xa6e)) * 4;\n        uVar2 = fcn.0041236c();\n        *(arg_8h + 0x4a84) = uVar2;\n    }\n    return iVar3;\n}\n",
        "token_count": 289
    },
    "004153b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004153b6(int32_t param_1, uint *param_2)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint auStack36 [5];\n    uint uStack16;\n    \n    if (0x1ffe < *(param_1 + 0x48)) {\n        uStack16 = 0x4153c9;\n        fcn.00414f87();\n    }\n    if ((*(param_1 + 0x74) == *(param_1 + 0x70)) ||\n       (uVar2 = *(param_1 + 0x74) - *(param_1 + 0x70) & *(param_1 + 0xe6f8),  param_2[1] <= uVar2 && uVar2 != param_2[1]\n       )) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    *(param_2 + 0x15) = uVar1;\n    param_2[1] = *(param_1 + 0x70) + param_2[1] & *(param_1 + 0xe6f8);\n    puVar4 = &stack0xffffffdc;\n    for (iVar3 = 6; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *param_2;\n        param_2 = param_2 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.00414521();\n    return 1;\n}\n",
        "token_count": 366
    },
    "00415417": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00415417(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    \n    if (param_2 == '\\0') {\n        fcn.0041a0c0(param_1 + 0x54, 0, 0x10);\n        *(param_1 + 100) = 0;\n        *(param_1 + 0x68) = 0;\n        *(param_1 + 0x6c) = 0;\n        fcn.0041a0c0(param_1 + 0x94, 0, 0x4a9c);\n        uVar1 = *(param_1 + 0xe6f4);\n        *(param_1 + 0x74) = 0;\n        *(param_1 + 0x70) = 0;\n        if (0x3fffff < uVar1) {\n            uVar1 = 0x400000;\n        }\n        *(param_1 + 0x4b30) = *(param_1 + 0xe6f8) & uVar1;\n        fcn.0041228a();\n    }\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    *(param_1 + 0x4c50) = 0;\n    *(param_1 + 0x4c54) = 0;\n    *(param_1 + 0x78) = 0;\n    *(param_1 + 0x7c) = 0;\n    fcn.0041a0c0(param_1 + 0x80, 0, 0x14);\n    *(param_1 + 0x80) = 0xffffffff;\n    fcn.00415373(param_2);\n    return;\n}\n",
        "token_count": 410
    },
    "00418b5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00418b5c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041a474(param_1, param_2, 0x10);\n    return iVar1 == 0;\n}\n",
        "token_count": 62
    },
    "004194bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004194bd(uint *param_1)\n\n{\n    param_1[5] = 0;\n    param_1[6] = 0;\n    *param_1 = 0x427e8c;\n    param_1[1] = 0x427e50;\n    param_1[2] = 0x427e14;\n    param_1[3] = 0x427df8;\n    param_1[4] = 1;\n    fcn.0041a0c0(param_1 + 7, 0, 0x10);\n    return param_1;\n}\n",
        "token_count": 142
    },
    "0041a297": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041a297(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041a19f(fcn.0041fb01, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 118
    },
    "00420c25": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420c25(uint arg_8h)\n\n{\n    fcn.00420af9(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "00422af1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00422b05)\n// WARNING: Removing unreachable block (ram,0x00422b0b)\n// WARNING: Removing unreachable block (ram,0x00422b0d)\n\nvoid fcn.00422af1(void)\n\n{\n    return;\n}\n",
        "token_count": 66
    },
    "004199ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004199ee(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0041df25(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "0040cf93": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cf93(uint hgdiobj, int32_t nWidth, int32_t nHeight)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint lpvObject;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint hDC;\n    uint hdcDest;\n    \n    hDC = (*_sym.imp.USER32.dll_GetDC)(0);\n    pcVar1 = _sym.imp.GDI32.dll_CreateCompatibleDC;\n    uVar2 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(hDC);\n    hdcDest = (*pcVar1)(hDC);\n    (*_sym.imp.GDI32.dll_GetObjectW)(hgdiobj, 0x18, &lpvObject);\n    iVar3 = (var_20h * nWidth) / var_24h;\n    if (iVar3 < nHeight) {\n        nHeight = iVar3;\n    }\n    var_ch = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(hDC, nWidth, nHeight);\n    pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n    uVar4 = (*_sym.imp.GDI32.dll_SelectObject)(uVar2, hgdiobj);\n    var_10h = (*pcVar1)(hdcDest, var_ch);\n    (*_sym.imp.GDI32.dll_StretchBlt)(hdcDest, 0, 0, nWidth, nHeight, uVar2, 0, 0, var_24h, var_20h, 0xcc0020);\n    (*pcVar1)(uVar2, uVar4);\n    (*pcVar1)(hdcDest, var_10h);\n    pcVar1 = _sym.imp.GDI32.dll_DeleteDC;\n    (*_sym.imp.GDI32.dll_DeleteDC)(uVar2);\n    (*pcVar1)(hdcDest);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, hDC);\n    return var_ch;\n}\n",
        "token_count": 461
    },
    "00418dd7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00418dd7(int32_t *arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetTickCount;\n    var_4h = NULL;\n    var_8h = NULL;\n    var_ch = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    while( true ) {\n        iVar2 = (**(*arg_8h + 0x48))(arg_8h, &var_4h);\n        if ((-1 < iVar2) && (var_4h != NULL)) break;\n        iVar2 = (*pcVar1)();\n        if (10000 < iVar2 - var_ch) break;\n        iVar2 = (*_sym.imp.USER32.dll_PeekMessageW)(&lpMsg, 0, 0, 0, 0);\n        if (iVar2 != 0) {\n            (*_sym.imp.USER32.dll_GetMessageW)(&lpMsg, 0, 0, 0);\n            (*_sym.imp.USER32.dll_TranslateMessage)(&lpMsg);\n            (*_sym.imp.USER32.dll_DispatchMessageW)(&lpMsg);\n        }\n    }\n    iVar2 = (**(*arg_8h + 0x48))(arg_8h, &var_4h);\n    if (-1 < iVar2) {\n        iVar2 = (***var_4h)(var_4h, 0x4280e8, &var_8h);\n        if (-1 < iVar2) {\n            iVar2 = (**(*var_8h + 0x20))(var_8h);\n            if (-1 < iVar2) {\n                iVar2 = (**(*var_8h + 0x14))(var_8h, arg_ch);\n            }\n            (**(*var_8h + 8))(var_8h);\n        }\n        (**(*var_4h + 8))(var_4h);\n    }\n    return -1 < iVar2;\n}\n",
        "token_count": 475
    },
    "0041965e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041965e(uint arg_8h, int32_t hWnd, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    int32_t lpRect;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *(in_ECX + 0x21) = arg_18h;\n    (*_sym.imp.USER32.dll_ShowWindow)(hWnd, 0);\n    fcn.004195f7(arg_8h);\n    in_ECX[4] = arg_10h;\n    in_ECX[5] = arg_14h;\n    (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    uVar2 = (*_sym.imp.USER32.dll_GetParent)(hWnd, &lpRect, 2);\n    (*_sym.imp.USER32.dll_MapWindowPoints)(0, uVar2);\n    if (in_ECX[1] != 0) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(in_ECX[1]);\n    }\n    uVar2 = (*pcVar1)(hWnd, 0, *in_ECX);\n    iVar3 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                      (0, L\"RarHtmlClassName\", 0, 0x40000000, lpRect + 1, var_ch, (var_8h - lpRect) + -2, \n                       var_4h - var_ch, uVar2);\n    in_ECX[1] = iVar3;\n    if (in_ECX[3] == 0) {\n        if (((hWnd != 0) && (in_ECX[5] == 0)) && (in_ECX[4] != 0)) {\n            iVar3 = fcn.004192d2(in_ECX[4]);\n            if (iVar3 != 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(hWnd, 5);\n                (*_sym.imp.USER32.dll_SetWindowTextW)(hWnd, iVar3);\n                fcn.00419d72(iVar3);\n            }\n        }\n    }\n    else {\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(iVar3, 5);\n            (*_sym.imp.USER32.dll_UpdateWindow)(in_ECX[1]);\n        }\n        if (100 < in_ECX[7]) {\n            fcn.00418fdc();\n        }\n    }\n    return;\n}\n",
        "token_count": 593
    },
    "00408765": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408765(uint *param_1)\n\n{\n    param_1[1] = 0xffffffff;\n    *param_1 = 0x42765c;\n    *(param_1 + 0x1e) = 0;\n    *(param_1 + 0x12) = 0;\n    *(param_1 + 2) = 0;\n    param_1[3] = 0;\n    *(param_1 + 4) = 0;\n    *(param_1 + 0x11) = 0;\n    param_1[0x408] = 0;\n    *(param_1 + 7) = 0;\n    *(param_1 + 0x13) = 1;\n    *(param_1 + 5) = 1;\n    *(param_1 + 0x15) = 0;\n    param_1[6] = 0x100;\n    return;\n}\n",
        "token_count": 211
    },
    "00409aae": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409aae(int32_t param_1)\n\n{\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x1c) = 0;\n    *(param_1 + 0x1d) = 0;\n    *(param_1 + 0x1e) = 0;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x28) = 0;\n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x30) = 0;\n    *(param_1 + 0x34) = 0;\n    *(param_1 + 0x38) = 0;\n    *(param_1 + 0x3c) = 0;\n    return;\n}\n",
        "token_count": 223
    },
    "0040b3c0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.0040b3c0(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_1[6];\n    if (uVar1 < param_1[5]) {\n        param_1[6] = uVar1 + 1;\n        return *(*param_1 + uVar1);\n    }\n    return 0;\n}\n",
        "token_count": 90
    },
    "0040b594": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040b594(uint *param_1, uint param_2)\n\n{\n    *param_1 = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = param_2;\n    param_1[1] = 0;\n    param_1[6] = 0;\n    param_1[5] = 0;\n    param_1[7] = 0;\n    return;\n}\n",
        "token_count": 115
    },
    "004102b2": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "hash data using SHA1"
        ],
        "decompiled_code": "\nvoid fcn.004102b2(uint *param_1)\n\n{\n    param_1[6] = 0;\n    param_1[5] = 0;\n    *param_1 = 0x67452301;\n    param_1[1] = 0xefcdab89;\n    param_1[2] = 0x98badcfe;\n    param_1[3] = 0x10325476;\n    param_1[4] = 0xc3d2e1f0;\n    return;\n}\n",
        "token_count": 120
    },
    "00410488": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "hash data using SHA256"
        ],
        "decompiled_code": "\nvoid fcn.00410488(uint *param_1)\n\n{\n    param_1[8] = 0;\n    param_1[9] = 0;\n    *param_1 = 0x6a09e667;\n    param_1[1] = 0xbb67ae85;\n    param_1[2] = 0x3c6ef372;\n    param_1[3] = 0xa54ff53a;\n    param_1[4] = 0x510e527f;\n    param_1[5] = 0x9b05688c;\n    param_1[6] = 0x1f83d9ab;\n    param_1[7] = 0x5be0cd19;\n    return;\n}\n",
        "token_count": 172
    },
    "00415240": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00415240(void)\n\n{\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -4) = 10;\n    fcn.00414f0b();\n    if (*(extraout_ECX + 0x4b34) != 0) {\n        fcn.00419d72(*(extraout_ECX + 0x4b34));\n    }\n    fcn.00410ef2(*(extraout_ECX + 0x14));\n    fcn.0041c35e(*(extraout_ECX + 0x20));\n    if (*(extraout_ECX + 0x18) != 0) {\n        fcn.00413631(3);\n    }\n    fcn.004122a7();\n    fcn.004122a7();\n    fcn.004122a7();\n    *(unaff_EBP + -4) = 6;\n    fcn.004096eb();\n    *(unaff_EBP + -4) = 5;\n    fcn.0040a9e9();\n    fcn.0041181e();\n    fcn.00411d7b();\n    fcn.004122a7();\n    fcn.004122a7();\n    fcn.004122a7();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004096eb();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 412
    },
    "00415313": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415313(uint *param_1)\n\n{\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[9] = 0;\n    param_1[10] = 0;\n    param_1[0xb] = 0;\n    param_1[0xc] = 0;\n    param_1[0xd] = 0;\n    param_1[4] = 0;\n    param_1[0x16] = 0;\n    param_1[5] = 0;\n    return;\n}\n",
        "token_count": 189
    },
    "004172c7": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint * __cdecl fcn.004172c7(uint arg_8h)\n\n{\n    uint uVar1;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419d48();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.004096b5(1);\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[9] = 0;\n    extraout_ECX[10] = 0;\n    extraout_ECX[0xb] = 0;\n    extraout_ECX[0xc] = 0;\n    extraout_ECX[0xd] = 0;\n    extraout_ECX[0xe] = 0;\n    extraout_ECX[0xf] = 0;\n    extraout_ECX[0x10] = 0;\n    extraout_ECX[0x11] = 0;\n    extraout_ECX[0x12] = 0;\n    extraout_ECX[0x13] = 0;\n    extraout_ECX[0x14] = 0;\n    fcn.00411d52();\n    fcn.00412743();\n    *(unaff_EBP + -4) = 5;\n    fcn.0040a9d7();\n    *(unaff_EBP + -4) = 6;\n    fcn.004096b5(1);\n    extraout_ECX[0x39b0] = 0;\n    extraout_ECX[0x39b1] = 0;\n    extraout_ECX[0x39b2] = 0;\n    extraout_ECX[0x39b3] = 0;\n    extraout_ECX[0x39b4] = 0;\n    extraout_ECX[0x39b5] = 0;\n    extraout_ECX[0x39b6] = 0;\n    extraout_ECX[0x39b7] = 0;\n    extraout_ECX[0x39b8] = 0;\n    extraout_ECX[0x39b9] = 0;\n    extraout_ECX[0x39ba] = 0;\n    extraout_ECX[0x39bb] = 0;\n    *(unaff_EBP + -4) = 10;\n    *extraout_ECX = *(unaff_EBP + 8);\n    extraout_ECX[0x12cd] = 0;\n    *(extraout_ECX + 0x130e) = 0;\n    *(extraout_ECX + 0x1312) = 0;\n    *(extraout_ECX + 0x4c49) = 0;\n    *(extraout_ECX + 0x4c4a) = 0;\n    extraout_ECX[7] = 1;\n    uVar1 = fcn.00411041();\n    extraout_ECX[5] = uVar1;\n    extraout_ECX[8] = 0;\n    extraout_ECX[6] = 0;\n    extraout_ECX[0x39bd] = 0;\n    extraout_ECX[0x39be] = 0;\n    fcn.00415417(0);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 824
    },
    "00418c18": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418c18(int32_t *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    puVar1 = param_1[6];\n    if (puVar1 != NULL) {\n        var_8h = param_1;\n        var_4h = param_1;\n        iVar2 = (***puVar1)(puVar1, 0x428108, &var_4h);\n        if (-1 < iVar2) {\n            (**(*var_4h + 0x18))(var_4h, 1);\n            (**(*var_4h + 0xc))(var_4h, 0);\n            (**(*var_4h + 8))(var_4h);\n        }\n        iVar2 = (***param_1[6])(param_1[6], 0x428128, &var_8h);\n        if (-1 < iVar2) {\n            (**(*var_8h + 0x18))(var_8h);\n            (**(*var_8h + 0x14))(var_8h);\n            (**(*var_8h + 8))(var_8h);\n        }\n        (**(*param_1[6] + 8))(param_1[6]);\n        param_1[6] = 0;\n    }\n    return;\n}\n",
        "token_count": 319
    },
    "00418d6f": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418d6f(uint *param_1)\n\n{\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    *(param_1 + 6) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0x21) = 0;\n    param_1[9] = 0;\n    return;\n}\n",
        "token_count": 139
    },
    "0040b72c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040b72c(int32_t param_1, uint param_2, uint param_3)\n\n{\n    *(param_1 + 0x14) = param_2;\n    *(param_1 + 0xc) = 1;\n    *(param_1 + 0x10) = param_3;\n    return;\n}\n",
        "token_count": 81
    },
    "00425a73": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00425a73(void)\n\n{\n    *0x42d20c = (*_sym.imp.KERNEL32.dll_CreateFileA)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 62
    },
    "00409036": {
        "rules": [
            "set file attributes"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00409036(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint var_1000h;\n    uint uStackY44;\n    uint *puStackY40;\n    uint uStackY36;\n    \n    fcn.0041a360();\n    pcVar1 = _sym.imp.KERNEL32.dll_SetFileAttributesW;\n    uVar2 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)();\n    bVar3 = uVar2 != 0;\n    if (!bVar3) {\n        uStackY36 = 0x409070;\n        uVar2 = fcn.0040a778(arg_8h, &fcn.00409036::var_1000h, 0x800);\n        if (uVar2 != '\\0') {\n            uStackY36 = arg_ch;\n            puStackY40 = &fcn.00409036::var_1000h;\n            uStackY44 = 0x409080;\n            uVar2 = (*pcVar1)();\n            bVar3 = uVar2 != 0;\n        }\n    }\n    return uVar2 & 0xffffff00 | bVar3;\n}\n",
        "token_count": 279
    },
    "0040d67d": {
        "rules": [
            "delay execution",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d67d(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n    iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(arg_8h, 10);\n    while (iVar2 == 0x102) {\n        (*_sym.imp.USER32.dll_PeekMessageW)(&lpMsg, 0, 0, 0, 1);\n        iVar2 = (*pcVar1)(arg_8h, 10);\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "0040d8b2": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: hKey\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0040d8b2(uint lpData)\n\n{\n    int32_t iVar1;\n    uint lpValueName;\n    uint uStackY80;\n    uint uStackY76;\n    uint *puStackY68;\n    uint uStackY64;\n    uint uStackY60;\n    uint uStackY56;\n    uint var_8h;\n    uint hKey;\n    \n    fcn.0041a360();\n    if ((*0x43da30 != '\\0') && (*0x4349d0 != 0)) {\n        fcn.0040d875();\n        uStackY56 = 0x40d905;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)();\n        if (iVar1 == 0) {\n            uStackY56 = 0x40d912;\n            fcn.0041a052(lpData);\n            uStackY56 = lpData;\n            puStackY68 = &fcn.0040d8b2::lpValueName;\n            uStackY60 = 1;\n            uStackY64 = 0;\n            uStackY76 = 0x40d92e;\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExW)();\n            uStackY80 = 0x40d937;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n        }\n    }\n    return;\n}\n",
        "token_count": 337
    },
    "00419771": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00419771(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, int32_t arg_20h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *var_8h;\n    int32_t *ppv;\n    \n    uVar3 = 0;\n    uVar1 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x428188, 0, 1, 0x4280d8, &ppv);\n    if (-1 < uVar1) {\n        iVar2 = (***ppv)(ppv, 0x428178, &var_8h);\n        if (-1 < iVar2) {\n            if (arg_8h != '\\0') {\n                (**(*var_8h + 0x14))(var_8h, arg_10h, 2);\n            }\n            (**(*ppv + 0x50))(ppv, arg_ch);\n            if (arg_18h != 0) {\n                (**(*ppv + 0x1c))(ppv, arg_18h);\n            }\n            if (arg_1ch == 0) {\n                arg_1ch = 0x427554;\n            }\n            (**(*ppv + 0x44))(ppv, arg_1ch, 0);\n            if (arg_20h != 0) {\n                (**(*ppv + 0x2c))(ppv, arg_20h);\n            }\n            if (arg_14h != 0) {\n                (**(*ppv + 0x24))(ppv, arg_14h);\n            }\n            iVar2 = (**(*var_8h + 0x18))(var_8h, arg_10h, 1);\n            uVar3 = -1 < iVar2;\n            (**(*var_8h + 8))(var_8h);\n        }\n        uVar1 = (**(*ppv + 8))(ppv);\n    }\n    return uVar1 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 477
    },
    "0040a507": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint16_t * fcn.0040a507(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint arg_8h;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    \n    piVar4 = param_1;\n    iVar3 = fcn.0041a052(param_1);\n    for (piVar6 = param_1 + iVar3 + -1; (cVar2 = fcn.00410947(piVar4, *piVar6),  cVar2 == '\\0' && (param_1 < piVar6));\n        piVar6 = piVar6 + -1) {\n    }\n    iVar1 = *piVar6;\n    piVar5 = piVar6;\n    while (cVar2 = fcn.00410947(piVar4, iVar1),  cVar2 != '\\0') {\n        if (piVar5 <= param_1) {\n            return piVar6;\n        }\n        piVar5 = piVar5 + -1;\n        iVar1 = *piVar5;\n    }\n    while( true ) {\n        if (piVar5 <= param_1) {\n            return piVar6;\n        }\n        if (*piVar5 == 0x2e) break;\n        cVar2 = fcn.00410947(piVar4, *piVar5);\n        if (cVar2 != '\\0') {\n            arg_8h = fcn.0040a2c4(param_1);\n            piVar4 = fcn.0041c3ac(arg_8h, 0x2e);\n            if ((piVar4 != NULL) && (piVar4 < piVar5)) {\n                piVar6 = piVar5;\n            }\n            return piVar6;\n        }\n        piVar5 = piVar5 + -1;\n    }\n    return piVar6;\n}\n",
        "token_count": 435
    },
    "0040b4ce": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040b4ce(int32_t *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    if (param_2 < param_1[5]) {\n        uVar1 = param_2;\n        do {\n            if ((*(*param_1 + uVar1) & 0x80) == 0) {\n                return (uVar1 - param_2) + 1;\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < param_1[5]);\n    }\n    return 0;\n}\n",
        "token_count": 140
    },
    "0040ccb3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040ccb3(uchar *param_1, int32_t param_2)\n\n{\n    if (param_2 != 0) {\n        do {\n            *param_1 = 0;\n            param_1 = param_1 + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0040cd82": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040cd82(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_200h;\n    uint var_100h;\n    \n    iVar4 = 0x80;\n    fcn.0040ccfe(&var_100h, 0x80);\n    fcn.0040ccfe(&var_200h, 0x80);\n    iVar1 = fcn.0041a01b(&var_100h, &var_200h);\n    iVar3 = 0x80;\n    puVar2 = &var_100h;\n    do {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    puVar2 = &var_200h;\n    do {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    return -iVar1 & 0xffffff00U | 1 - (iVar1 != 0);\n}\n",
        "token_count": 276
    },
    "00410e3d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410e3d(code *param_1)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    code *var_8h;\n    code *var_4h;\n    \n    var_8h = param_1;\n    var_4h = param_1;\n    cVar2 = fcn.00410d31(&var_8h);\n    if (cVar2 != '\\0') {\n        do {\n            (*var_8h)(var_4h);\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 0x19c);\n            piVar1 = param_1 + 0x84;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                (*_sym.imp.KERNEL32.dll_SetEvent)(*(param_1 + 0x198));\n            }\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 0x19c);\n            cVar2 = fcn.00410d31(&var_8h);\n        } while (cVar2 != '\\0');\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "00411d7b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411d7b(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    do {\n        arg_8h = *(param_1 + uVar1 * 4);\n        if (arg_8h != 0) {\n            fcn.00419d72(arg_8h);\n        }\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x20);\n    return;\n}\n",
        "token_count": 123
    },
    "00411ed5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00411ed5(uchar *param_1, uint param_2, int32_t param_3)\n\n{\n    uchar *puVar1;\n    \n    if (param_3 != 0) {\n        do {\n            puVar1 = fcn.00411e58();\n            *param_1 = *puVar1;\n            param_1 = param_1 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "00414f0b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414f0b(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    uint32_t uVar1;\n    \n    fcn.0041228a();\n    *(param_1 + 0xe6f0) = 0;\n    uVar1 = 0;\n    if (*(param_1 + 0xe6c4) != 0) {\n        do {\n            if (*(*(param_1 + 0xe6c0) + uVar1 * 4) != 0) {\n                fcn.00414ba2();\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(param_1 + 0xe6c4));\n    }\n    fcn.0041228a();\n    uVar1 = 0;\n    if (*(param_1 + 0xe6d4) != 0) {\n        do {\n            if (*(*(param_1 + 0xe6d0) + uVar1 * 4) != 0) {\n                fcn.00414ba2();\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(param_1 + 0xe6d4));\n    }\n    arg_8h = *(param_1 + 0xe6d0);\n    if (arg_8h != 0) {\n        fcn.00419d72(arg_8h);\n        *(param_1 + 0xe6d0) = 0;\n    }\n    *(param_1 + 0xe6d4) = 0;\n    *(param_1 + 0xe6d8) = 0;\n    return;\n}\n",
        "token_count": 379
    },
    "00418eae": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00418eae(int16_t *param_1)\n\n{\n    uint32_t uVar1;\n    \n    do {\n        if (*param_1 == 0) {\n            return 0;\n        }\n        if ((*param_1 == 0x3c) && (param_1[1] == 0x2f)) {\n            uVar1 = 2;\n            do {\n                if (param_1[uVar1] == 0x3e) {\n                    return 1;\n                }\n                uVar1 = uVar1 + 1;\n            } while (uVar1 < 0x14);\n        }\n        param_1 = param_1 + 1;\n    } while( true );\n}\n",
        "token_count": 159
    },
    "00418fdc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00418fdc(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint lpMsg;\n    uint pvarg;\n    uint var_14h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetTickCount;\n    var_4h = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    iVar2 = (*pcVar1)();\n    uVar3 = iVar2 - var_4h;\n    while (uVar3 < 0x2711) {\n        (**(**(var_8h + 0xc) + 0xe0))(*(var_8h + 0xc), &var_ch);\n        if (var_ch == 4) break;\n        iVar2 = (*_sym.imp.USER32.dll_PeekMessageW)(&lpMsg, 0, 0, 0, 0);\n        if (iVar2 != 0) {\n            (*_sym.imp.USER32.dll_TranslateMessage)(&lpMsg);\n            (*_sym.imp.USER32.dll_DispatchMessageW)(&lpMsg);\n            (*_sym.imp.USER32.dll_GetMessageW)(&lpMsg, 0, 0, 0);\n        }\n        iVar2 = (*pcVar1)();\n        uVar3 = iVar2 - var_4h;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvarg);\n    pvarg._0_2_ = 3;\n    var_14h = 0x96;\n    (**(**(var_8h + 0xc) + 0xd8))(*(var_8h + 0xc), 0x3f, 2, &pvarg, 0);\n    return;\n}\n",
        "token_count": 415
    },
    "00419956": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00419956(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar auStack16 [12];\n    \n    do {\n        iVar2 = fcn.0041c8ee(param_1);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.0041f5cb(param_1);\n    } while (iVar2 != 0);\n    if ((*0x44b9a8 & 1) == 0) {\n        *0x44b9a8 = *0x44b9a8 | 1;\n        fcn.0041198d();\n        fcn.0041c15b(0x42616a);\n    }\n    fcn.00411e40(0x44b99c);\n    fcn.0041c172(auStack16, 0x42a498);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 221
    },
    "00420cbd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00420cbd(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0041f3cc(0x42a948, 0xc);\n    fcn.0041e8d3(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x44bb7c;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x44bb78;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00420d01;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00419d72(arg_8h_00);\ncode_r0x00420d01:\n        fcn.00419d72(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00420d24();\n    fcn.0041f411();\n    return;\n}\n",
        "token_count": 400
    },
    "0040cf0d": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cf0d(uint pszPath, uint arg_ch)\n\n{\n    int32_t *var_8h;\n    uint pidl;\n    \n    (*_sym.imp.SHELL32.dll_SHGetMalloc)(&var_8h);\n    (*_sym.imp.SHELL32.dll_SHGetSpecialFolderLocation)(0, arg_ch, &pidl);\n    (*_sym.imp.SHELL32.dll_SHGetPathFromIDListW)(pidl, pszPath);\n    (**(*var_8h + 0x14))(var_8h, pidl);\n    return;\n}\n",
        "token_count": 128
    },
    "0041985c": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nbool fcn.0041985c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(param_2, param_1);\n    return iVar1 != 0;\n}\n",
        "token_count": 62
    },
    "004065c2": {
        "rules": [
            "modify access privileges"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004065c2(uint lpName)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint NewState;\n    uint lpLuid;\n    uint var_8h;\n    uint TokenHandle;\n    \n    uVar4 = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x20, &TokenHandle);\n    uVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar1);\n    if (uVar2 != 0) {\n        NewState = 1;\n        var_8h = 2;\n        iVar3 = (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, lpName, &lpLuid);\n        if (iVar3 != 0) {\n            iVar3 = (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(TokenHandle, 0, &NewState, 0, 0, 0);\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                if (iVar3 == 0) {\n                    uVar4 = 1;\n                }\n            }\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_CloseHandle)(TokenHandle);\n    }\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 317
    },
    "0040908d": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040908d(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint var_1000h;\n    uint uStackY36;\n    uint *puStackY32;\n    \n    fcn.0041a360();\n    pcVar1 = _sym.imp.KERNEL32.dll_DeleteFileW;\n    uVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n    bVar3 = uVar2 != 0;\n    if (!bVar3) {\n        puStackY32 = 0x4090c4;\n        uVar2 = fcn.0040a778(arg_8h, &fcn.0040908d::var_1000h, 0x800);\n        if (uVar2 != '\\0') {\n            puStackY32 = &fcn.0040908d::var_1000h;\n            uStackY36 = 0x4090d1;\n            uVar2 = (*pcVar1)();\n            bVar3 = uVar2 != 0;\n        }\n    }\n    return uVar2 & 0xffffff00 | bVar3;\n}\n",
        "token_count": 264
    },
    "00410c24": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00410c24(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"kernel32\");\n    if (iVar1 != 0) {\n        cVar3 = -0x28;\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"SetDllDirectoryW\");\n        if (pcVar2 != NULL) {\n            (*pcVar2)(-(cVar3 != '\\0') & 0x427554);\n        }\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "00419849": {
        "rules": [
            "set current directory"
        ],
        "decompiled_code": "\nbool fcn.00419849(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(param_1);\n    return iVar1 != 0;\n}\n",
        "token_count": 52
    },
    "00419873": {
        "rules": [
            "find graphical window"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419873(int32_t hWnd)\n\n{\n    int32_t iVar1;\n    uint lpClassName;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetClassNameW)(hWnd, &lpClassName, 0x50);\n    if ((iVar1 != 0) && (iVar1 = fcn.004116a1(&lpClassName, L\"EDIT\"),  iVar1 != 0)) {\n        hWnd = (*_sym.imp.USER32.dll_FindWindowExW)(hWnd, 0, L\"EDIT\", 0);\n    }\n    if (hWnd != 0) {\n        (*_sym.imp.SHLWAPI.dll_SHAutoComplete)(hWnd, 0x10);\n    }\n    return;\n}\n",
        "token_count": 161
    }
}