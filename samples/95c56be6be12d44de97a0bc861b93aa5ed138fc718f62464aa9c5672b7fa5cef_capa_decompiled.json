{
    "0040128e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040128e(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x867008) {\n        return;\n    }\n    *0x869458 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x86945c = &arg_8h;\n    *0x869398 = 0x10001;\n    *0x869340 = 0xc0000409;\n    *0x869344 = 1;\n    var_328h = *0x867008;\n    var_324h = *0x86700c;\n    *0x86934c = unaff_retaddr;\n    *0x869424 = in_GS;\n    *0x869428 = in_FS;\n    *0x86942c = in_ES;\n    *0x869430 = in_DS;\n    *0x869434 = unaff_EDI;\n    *0x869438 = unaff_ESI;\n    *0x86943c = unaff_EBX;\n    *0x869440 = in_EDX;\n    *0x869444 = in_ECX;\n    *0x869448 = in_EAX;\n    *0x86944c = unaff_EBP;\n    *0x869450 = unaff_retaddr;\n    *0x869454 = in_CS;\n    *0x869460 = in_SS;\n    *0x869390 = (**0x86310c)();\n    fcn.0040543f(1);\n    (**0x863108)(0);\n    (**0x863104)(0x8632a8);\n    if (*0x869390 == 0) {\n        fcn.0040543f(1);\n    }\n    uVar1 = (**0x863100)(0xc0000409);\n    (**0x8630fc)(uVar1);\n    return;\n}\n",
        "token_count": 777
    },
    "00401872": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401872(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t unaff_EBP;\n    \n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00403d73(8);\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "004048a7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004048a7(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00403d73(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "004094ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004094ea(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.004034c1();\n    var_4h = 0;\n    if (*0x869d78 == 0) {\n        iVar2 = (**0x863090)(\"USER32.DLL\");\n        pcVar4 = *0x8630f4;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (**0x8630f4)(iVar2, \"MessageBoxA\");\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x869d78 = fcn.0040344f(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, \"GetActiveWindow\");\n        *0x869d7c = fcn.0040344f(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetLastActivePopup\");\n        *0x869d80 = fcn.0040344f(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetUserObjectInformationA\");\n        *0x869d88 = fcn.0040344f(uVar3);\n        if (*0x869d88 != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x863acc);\n            *0x869d84 = fcn.0040344f(uVar3);\n        }\n    }\n    if ((*0x869d84 != iVar1) && (*0x869d88 != iVar1)) {\n        pcVar4 = fcn.004034ca(*0x869d84);\n        pcVar5 = fcn.004034ca(*0x869d88);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x0040962c;\n        }\n    }\n    if ((((*0x869d7c != iVar1) && (pcVar4 = fcn.004034ca(*0x869d7c),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x869d80 != iVar1 && (pcVar4 = fcn.004034ca(*0x869d80),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x0040962c:\n    pcVar4 = fcn.004034ca(*0x869d78);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 807
    },
    "0085c0ae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0085c0ae(void)\n\n{\n    uint unaff_EBX;\n    uint in_stack_fffffd2c;\n    uint in_stack_fffffd30;\n    uint var_2c8h;\n    \n    fcn.0085d750();\n    fcn.0085c13a(unaff_EBX, in_stack_fffffd2c, in_stack_fffffd30);\n    return;\n}\n",
        "token_count": 91
    },
    "0085c31d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0085c31d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x867008 ^ &stack0xfffffffc;\n    fcn.00401e65(arg_10h);\n    var_14h = fcn.0085f36b(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0085e237(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0085c376:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0085c3b6;\n        }\n        if (iVar1 != 2) {\ncode_r0x0085c3a8:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0085c3b6;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0085c3a8;\n        goto code_r0x0085c376;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0085c3b6:\n    fcn.0040128e(unaff_EBX);\n    return;\n}\n",
        "token_count": 514
    },
    "0085c49c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0085c49c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x867008 ^ &stack0xfffffffc;\n    fcn.00401e65(arg_10h);\n    var_14h = fcn.0085f36b(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0085e77b(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0085c4f5:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0085c535;\n        }\n        if (iVar1 != 2) {\ncode_r0x0085c527:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0085c535;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0085c527;\n        goto code_r0x0085c4f5;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0085c535:\n    fcn.0040128e(unaff_EBX);\n    return;\n}\n",
        "token_count": 509
    },
    "0085e237": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0085e237(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0085e738;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0085e36c;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0085e373;\ncode_r0x0085e36c:\n                        do {\n                            var_4h = 1;\ncode_r0x0085e373:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0085e381;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0085e381:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x868eb0 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x868eb0 < iVar12) {\n                if (iVar12 < *0x868eac) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x868eac;\n                    uVar5 = 1;\n                }\n                goto code_r0x0085e738;\n            }\n            var_10h = *0x868eb0 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0085e524;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0085e524:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0085e738:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3666
    },
    "0085e77b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0085e77b(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0085ec7c;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x868ecc - 1;\n        iVar4 = *0x868ecc + (*0x868ecc >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x868ecc & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0085e8b0;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0085e8b7;\ncode_r0x0085e8b0:\n                        do {\n                            var_4h = 1;\ncode_r0x0085e8b7:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0085e8c5;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0085e8c5:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x868ec8 - *0x868ecc) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x868ec8 < iVar12) {\n                if (iVar12 < *0x868ec4) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x868ed8;\n                    iVar4 = *0x868ed0 + (*0x868ed0 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x868ed0 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x868ed0 + (*0x868ed0 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x868ed0 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x868ed8 + *0x868ec4;\n                    uVar5 = 1;\n                }\n                goto code_r0x0085ec7c;\n            }\n            var_10h = *0x868ec8 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x868ecc - 1;\n            iVar12 = *0x868ecc + (*0x868ecc >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x868ecc & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0085ea68;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0085ea68:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x868ed0 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0085ec7c:\n    var_20h = iVar12 << (0x1fU - *0x868ed0 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x868ed4 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x868ed4 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3645
    },
    "00408b81": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00408b81(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) != unaff_ESI) {\n        if (*(unaff_EBP + -0x24) != unaff_ESI) {\n            puVar1 = *((*(unaff_EBP + -0x1c) >> 5) * 4 + 0x86b6c0) + 4 + (*(unaff_EBP + -0x1c) & 0x1f) * 0x40;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.004116f7(*(unaff_EBP + -0x1c));\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "00408c59": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00408c59(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    uint32_t *unaff_EDI;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != unaff_ESI) {\n        if (*(unaff_EBP + -0x20) != unaff_ESI) {\n            puVar1 = *((*unaff_EDI >> 5) * 4 + 0x86b6c0) + 4 + (*unaff_EDI & 0x1f) * 0x40;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.004116f7(*unaff_EDI);\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "004112ea": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004112ea(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00402c54(0x865818, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00401c71();\n        *puVar2 = 0;\n        puVar2 = fcn.00401c5e();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x86b6ac)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x86b6c0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00411657(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00401c5e();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00401c71();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00410bb7(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.004113bc(0x865818);\n                goto code_r0x004113b6;\n            }\n        }\n        puVar2 = fcn.00401c71();\n        *puVar2 = 0;\n        puVar2 = fcn.00401c5e();\n        *puVar2 = 9;\n        fcn.00402c11(0, 0, 0, 0, 0);\n    }\ncode_r0x004113b6:\n    fcn.00402c99();\n    return;\n}\n",
        "token_count": 633
    },
    "004119a6": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.004119a6(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == unaff_EDI) {\n        puVar1 = *((unaff_ESI >> 5) * 4 + 0x86b6c0) + 4 + (unaff_ESI & 0x1f) * 0x40;\n        *puVar1 = *puVar1 & 0xfe;\n    }\n    fcn.004116f7(unaff_ESI);\n    return;\n}\n",
        "token_count": 160
    },
    "null": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004150b0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t * fcn.004150b0(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 591
    },
    "00859ec0": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.00859ec0(void)\n\n{\n    uint auStack664 [2];\n    uint uStack656;\n    uint uStack652;\n    uint uStack648;\n    uint uStack644;\n    uint uStack640;\n    uint uStack636;\n    uint uStack632;\n    uint uStack628;\n    uint uStack624;\n    uint uStack620;\n    uint uStack616;\n    uint uStack612;\n    uint uStack608;\n    uint uStack604;\n    uint uStack600;\n    uint uStack596;\n    uint uStack592;\n    uint uStack588;\n    uint uStack584;\n    uint uStack580;\n    uint uStack576;\n    uint uStack572;\n    uint uStack568;\n    uint uStack564;\n    uint uStack560;\n    uint uStack556;\n    uint uStack552;\n    uint uStack548;\n    uint uStack544;\n    uint uStack540;\n    uint uStack536;\n    uint uStack532;\n    uint uStack528;\n    uint uStack524;\n    uint uStack520;\n    uint uStack516;\n    uint uStack512;\n    uint uStack508;\n    uint uStack504;\n    uint uStack500;\n    uint uStack496;\n    uint uStack492;\n    uint uStack488;\n    uint uStack484;\n    uint uStack480;\n    uint uStack476;\n    uint uStack472;\n    uint uStack468;\n    uint uStack464;\n    uint uStack460;\n    uint uStack456;\n    uint uStack452;\n    uint uStack448;\n    uint uStack444;\n    uint uStack440;\n    uint uStack436;\n    uint uStack432;\n    uint uStack428;\n    uint uStack424;\n    uint uStack420;\n    uint uStack416;\n    uint uStack412;\n    uint uStack408;\n    uint uStack404;\n    uint uStack400;\n    uint uStack396;\n    uint uStack392;\n    uint uStack388;\n    uint uStack384;\n    uint uStack380;\n    uint uStack376;\n    uint uStack372;\n    uint uStack368;\n    uint uStack364;\n    uint uStack360;\n    uint uStack356;\n    uint uStack352;\n    uint uStack348;\n    uint uStack344;\n    uint uStack340;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    auStack664[0] = 0x40;\n    uStack448 = 0x43fe4454;\n    uStack144 = 0x1e9f2aad;\n    uStack260 = 0x581b3ea3;\n    uStack452 = 0x19478104;\n    uStack92 = 0x7c2adb90;\n    uStack460 = 0x9ba427f;\n    uStack348 = 0x35619759;\n    uStack32 = 0x76af65dd;\n    uStack520 = 0x3d758bba;\n    uStack264 = 0x2c371c69;\n    uStack356 = 0x664052f;\n    uStack312 = 0x69f3ca8c;\n    uStack624 = 0x691c5ab2;\n    uStack408 = 0x48504f90;\n    uStack208 = 0x11a9e75d;\n    uStack456 = 0x2b28e646;\n    uStack232 = 0x6a45f89f;\n    uStack12 = 0x43a85881;\n    uStack100 = 0x43299b79;\n    uStack196 = 0x4f4fc3e8;\n    uStack160 = 0x2ed3f73a;\n    uStack108 = 0x4678f478;\n    uStack304 = 0x393c218f;\n    uStack204 = 0x425e03d1;\n    uStack360 = 0x11a69e6e;\n    uStack612 = 0xcedd9fa;\n    uStack116 = 0x908d1be;\n    uStack608 = 0x6e306b17;\n    uStack556 = 0x161de0e2;\n    uStack416 = 0x7f770de4;\n    uStack632 = 0x72427ed5;\n    uStack528 = 0x78393955;\n    uStack268 = 0x18d8f021;\n    uStack464 = 0x36e4ede9;\n    uStack620 = 0xd54f111;\n    uStack276 = 0x6f4f7f08;\n    uStack364 = 0x2bd7c0ba;\n    uStack20 = 0x4d051328;\n    uStack120 = 0x6abe47d;\n    uStack184 = 0x1c0951cd;\n    uStack628 = 0x34de506e;\n    uStack568 = 0x2a4e17df;\n    uStack284 = 0x59b4e2b1;\n    uStack140 = 0x5ee4e686;\n    uStack472 = 0x1cf7b40f;\n    uStack136 = 0xee7d6dc;\n    uStack564 = 0x6506578b;\n    uStack240 = 0x3aba1c07;\n    uStack636 = 0x7515ded8;\n    uStack468 = 0x32ed4197;\n    uStack480 = 0x2ed6fe01;\n    uStack476 = 0x5232e058;\n    uStack368 = 0x4f59cc31;\n    uStack288 = 0x47b186dd;\n    uStack28 = 0x2e5cd46e;\n    uStack80 = 0x303fc566;\n    uStack576 = 0x5cc97bd7;\n    uStack644 = 0x3517521b;\n    uStack212 = 0x72e5843e;\n    uStack64 = 0x3e296512;\n    uStack652 = 0x657529b9;\n    uStack372 = 0x2323384f;\n    uStack488 = 0x7cfdf384;\n    uStack292 = 0x4038eab0;\n    uStack96 = 0xcc06972;\n    uStack328 = 0x39ad0171;\n    uStack220 = 0x3e99fa7a;\n    uStack572 = 0x5ea4d6c8;\n    uStack536 = 0x371b48fc;\n    uStack656 = 0x6b5799d1;\n    uStack376 = 0x35f0aea8;\n    uStack484 = 0xd75a312;\n    uStack272 = 0x13a80c9c;\n    uStack580 = 0x73473e9d;\n    uStack148 = 0xb4bfc17;\n    uStack248 = 0x58664664;\n    uStack336 = 0x3851a0a7;\n    uStack496 = 0x58ee2f3a;\n    uStack36 = 0xe17ba87;\n    uStack156 = 0x3f080ff3;\n    uStack588 = 0x31bafc61;\n    uStack320 = 0x6c149b0a;\n    uStack192 = 0x5931c002;\n    uStack44 = 0x489548c0;\n    uStack544 = 0x5b1f4315;\n    uStack40 = 0xed59126;\n    uStack492 = 0x8f30861;\n    uStack300 = 0x56d88f3a;\n    uStack384 = 0xfd750f2;\n    uStack308 = 0x1e213ceb;\n    uStack596 = 0x4b9a8056;\n    uStack16 = 0x6e41f4fd;\n    uStack584 = 0x1a522682;\n    uStack88 = 0x59fe3af7;\n    uStack52 = 0x3f6adcfd;\n    uStack128 = 0x58ad2f91;\n    uStack228 = 0x5f2e2752;\n    uStack124 = 0x1f9175d3;\n    uStack132 = 0x4779a46b;\n    uStack60 = 0x54365493;\n    uStack504 = 0x322466f0;\n    uStack316 = 0x48b13290;\n    uStack236 = 0x5526ed81;\n    uStack344 = 0x36d9003;\n    uStack324 = 0x3a5e3b76;\n    uStack604 = 0x71e2bcb1;\n    uStack56 = 0x54227000;\n    uStack380 = 0x53c625db;\n    uStack296 = 0x1dc51fbc;\n    uStack640 = 0x1d159fa3;\n    uStack388 = 0x6ee3155a;\n    uStack424 = 0x18b37de6;\n    uStack72 = 0x5ab00d09;\n    uStack68 = 0x3033578d;\n    uStack500 = 0x4c28b0f2;\n    uStack216 = 0x6ca4a94f;\n    uStack508 = 0x559dd45;\n    uStack176 = 0x1dc47179;\n    uStack552 = 0xb3476a9;\n    uStack432 = 0x7dc64ea3;\n    uStack392 = 0x3364320f;\n    uStack396 = 0x94ea0d5;\n    uStack200 = 0x7af306ef;\n    uStack516 = 0x6ebb1e2b;\n    uStack404 = 0x176e460d;\n    uStack412 = 0x132b150e;\n    uStack76 = 0x7f9e54c1;\n    uStack24 = 0x65bdf411;\n    uStack400 = 0x35499e6a;\n    uStack420 = 0x55d4244d;\n    uStack104 = 0x6847db6;\n    uStack256 = 0x4c8d9182;\n    uStack524 = 0x1058d3a9;\n    uStack512 = 0x4e35abc3;\n    uStack8 = 0x60a81d3a;\n    uStack164 = 0x421e5f35;\n    uStack592 = 0x69fc9297;\n    uStack532 = 0x5cc699ae;\n    uStack428 = 0x716ea5d1;\n    uStack280 = 0x79998005;\n    uStack352 = 0x1133832b;\n    uStack648 = 0x5a811974;\n    uStack152 = 0x34c6f3c4;\n    uStack436 = 0x6056f4d9;\n    uStack168 = 0x1150c00;\n    uStack112 = 0x59f5d189;\n    uStack332 = 0x767b93b8;\n    uStack48 = 0x116bb154;\n    uStack540 = 0x680adde1;\n    uStack440 = 0x71815683;\n    uStack560 = 0x6c2881c7;\n    uStack244 = 0x73c481e;\n    uStack172 = 0xcb627fd;\n    uStack180 = 0x2e3aadc4;\n    uStack340 = 0x2645cc11;\n    uStack84 = 0x50a974a8;\n    uStack224 = 0x28bf979c;\n    uStack444 = 0x4a5737b0;\n    uStack616 = 0x1c946dfc;\n    uStack600 = 0x3f3a6fef;\n    uStack548 = 0x408c563c;\n    uStack188 = 0xf4d18b7;\n    uStack252 = 0x321bff7d;\n    uStack4 = 0x3716039c;\n    *0x869e61 = 0x65;\n    *0x869e64 = 0x65;\n    *0x869e60 = 0x6b;\n    *0x869e62 = 0x72;\n    *0x869e63 = 0x6e;\n    *0x869e65 = 0x6c;\n    *0x869e66 = 0x33;\n    *0x869e67 = 0x32;\n    *0x869e68 = 0x2e;\n    *0x869e69 = 100;\n    *0x869e6a = 0x6c;\n    *0x869e6b = 0x6c;\n    *0x869e6c = 0;\n    (**0x863090)(0x869e60);\n    (**0x8630b8)(*0x86a364, *0x86b650, 0x40, auStack664);\n    return;\n}\n",
        "token_count": 3484
    },
    "0085a630": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.0085a630(void)\n\n{\n    *0x869e62 = 0x69;\n    *0x869e66 = 0x32;\n    *0x869e67 = 0x2e;\n    *0x869e64 = 0x67;\n    *0x869e6a = 0x6c;\n    *0x869e6b = 0;\n    *0x869e60 = 0x6d;\n    *0x869e61 = 0x73;\n    *0x869e65 = 0x33;\n    *0x869e69 = 0x6c;\n    *0x869e68 = 100;\n    *0x869e63 = 0x6d;\n    (**0x863090)(0x869e60);\n    return;\n}\n",
        "token_count": 188
    },
    "0085a8b0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0085a8b0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint unaff_EBP;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_151ch;\n    uint var_1518h;\n    uint var_1514h;\n    int32_t var_1510h;\n    uint var_150ch;\n    uint var_1460h;\n    uint var_145ch;\n    int32_t var_1424h;\n    uint var_141ch;\n    uint var_1418h;\n    uint var_1414h;\n    uint var_1410h;\n    uint var_140ch;\n    uint var_1408h;\n    uint var_1404h;\n    uint var_1004h;\n    uint var_c04h;\n    uint var_804h;\n    uint var_404h;\n    uint uStackY128;\n    uint *puStackY124;\n    char16_t *pcStackY120;\n    uint *puStackY116;\n    uint uStackY112;\n    uint *puStackY108;\n    uint *puStackY104;\n    uint uStackY100;\n    char16_t *pcStackY96;\n    char16_t *pcStackY92;\n    uint uStackY88;\n    uint uStackY84;\n    uint uStackY80;\n    uint uStackY76;\n    char *pcStackY72;\n    uint *puStackY68;\n    uint uStackY64;\n    uint uStackY60;\n    uint *puStackY56;\n    uint *puStackY52;\n    char *pcStackY48;\n    uint *puStackY44;\n    uint var_4h;\n    \n    fcn.00413f40();\n    pcVar2 = *0x863030;\n    pcVar1 = *0x863014;\n    iVar3 = 0;\n    do {\n        if (*0x86b650 == 0xc31) {\n            (*pcVar1)();\n            puStackY44 = 0x85a8fa;\n            (*pcVar2)();\n        }\n        (**0x8630e4)();\n        if (0x9260216 < iVar3) goto code_r0x0085ab4d;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x3661b720);\n    while( true ) {\n        pcVar1 = *0x86306c;\n        iVar3 = 0;\n        do {\n            if (iVar3 == 0x562d05) {\n                *0x86b654 = *0x867fe8;\n            }\n            if (*0x86b650 == 0x3c) {\n                (*pcVar1)();\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x5f6c74);\n        if (*0x86b650 == 0x7c) {\n            (**0x86308c)();\n            var_1414h = 0;\n            var_1410h = 0;\n            var_140ch = 0;\n            var_1408h = 0;\n            puStackY44 = &fcn.0085a8b0::var_c04h;\n            pcStackY48 = NULL;\n            puStackY52 = NULL;\n            puStackY56 = NULL;\n            uStackY60 = 0;\n            var_1418h = 0;\n            uStackY64 = 0x85a9a7;\n            (**0x8630a0)();\n            uStackY64 = 0x2e;\n            pcStackY72 = &fcn.0085a8b0::var_145ch;\n            puStackY68 = NULL;\n            var_1460h = 0;\n            uStackY76 = 0x85a9bc;\n            fcn.00403050();\n            uStackY64 = 0;\n            puStackY68 = &fcn.0085a8b0::var_1460h;\n            pcStackY72 = \"kinadeyucocofobofugovo\";\n            uStackY76 = 0x85a9d2;\n            (**0x8630d8)();\n            uStackY76 = 0;\n            uStackY80 = 0;\n            uStackY84 = 0;\n            uStackY88 = 0;\n            pcStackY92 = L\"juyituyijivejocijavezibivi\";\n            pcStackY96 = L\"remudinodavusupurayi pozedijujafuz lamali wejekuremulecobedojeliyi\";\n            uStackY100 = 0x85a9e6;\n            (**0x863074)();\n            uStackY100 = 0;\n            puStackY104 = 0x85a9ed;\n            (**0x8630b4)();\n            puStackY104 = &fcn.0085a8b0::var_1004h;\n            puStackY108 = NULL;\n            uStackY112 = 0x85a9fb;\n            (**0x8630bc)();\n            uStackY112 = 0;\n            puStackY116 = 0x85aa02;\n            (**0x8630ac)();\n            puStackY116 = NULL;\n            pcStackY120 = 0x85aa09;\n            (**0x8630dc)();\n            pcStackY120 = NULL;\n            puStackY124 = &fcn.0085a8b0::var_151ch;\n            var_151ch = 0;\n            var_1518h = 0;\n            uStackY128 = 0x85aa23;\n            (**0x8630c4)();\n            if (*0x86b650 == 0x2d) {\n                (**0x86309c)();\n                puStackY44 = &fcn.0085a8b0::var_404h;\n                pcStackY48 = \"suvanezelomew pumubacubuzelosa\";\n                puStackY52 = 0x85aa4a;\n                (**0x863068)();\n            }\n            if (*0x86b650 == 0x54) {\n                (**0x863038)();\n                (**0x8630b0)();\n            }\n            fcn.0040130c();\n        }\n        if (*0x86b650 != 0x110a) break;\n        *0x86a950 = 0;\n        *0x86a954 = 0;\n        (**0x863050)();\n        (**0x863044)();\n        (**0x863078)();\n        puStackY44 = 0x85aab1;\n        (**0x8630a4)();\n        puStackY44 = NULL;\n        pcStackY48 = NULL;\n        puStackY52 = &fcn.0085a8b0::var_150ch;\n        puStackY56 = 0x85aac0;\n        (**0x863048)();\n        puStackY56 = &fcn.0085a8b0::var_404h;\n        uStackY60 = 0;\n        uStackY64 = 0;\n        puStackY68 = NULL;\n        pcStackY72 = 0x85aad0;\n        (**0x863088)();\n        pcStackY72 = NULL;\n        uStackY76 = 0;\n        uStackY80 = 0;\n        uStackY84 = 0x85aad9;\n        (**0x86302c)();\n        uStackY84 = 0;\n        uStackY88 = 0;\n        pcStackY92 = NULL;\n        pcStackY96 = NULL;\n        uStackY100 = 0;\n        puStackY104 = NULL;\n        puStackY108 = 0x85aae5;\n        (**0x863028)();\n        puStackY108 = &fcn.0085a8b0::var_1510h;\n        uStackY112 = 0x85aaf2;\n        (**0x863080)();\n        uStackY112 = 0;\n        puStackY116 = &fcn.0085a8b0::var_1404h;\n        pcStackY120 = L\"lugikocaxaresifulubatelep forefohivazel nipigitumurizatorin vavitekucaruzokinasi gufugukapel\";\n        puStackY124 = 0x85ab05;\n        (**0x86307c)();\n        var_1408h = 0xf;\n        var_140ch = 0;\n        var_141ch._0_1_ = 0;\n        fcn.0040129d(0, 0);\n        fcn.0040129d(0, 0);\n        puStackY44 = 0x85ab3a;\n        fcn.0040142c(0, \"0.txt\", 0x8650a4);\n        fcn.0040129d(0, 0);\n        fcn.00401887(0);\ncode_r0x0085ab4d:\n        if (*0x86b650 == 10) {\n            (**0x863060)();\n        }\n    }\n    fcn.00859e90();\n    pcVar2 = *0x86304c;\n    pcVar1 = *0x863008;\n    uVar4 = 0;\n    if (*0x86b650 != 0) {\n        do {\n            (*0x86a364)[uVar4] = *(uVar4 + 0xa231 + *0x86b654);\n            if (*0x86b650 == 0x5ab) {\n                (*pcVar2)();\n                puStackY44 = 0x85abc1;\n                (*pcVar1)();\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *0x86b650);\n    }\n    fcn.0085a630();\n    fcn.00859ec0();\n    fcn.0085a800();\n    pcVar2 = *0x863084;\n    pcVar1 = *0x863020;\n    iVar3 = 0;\n    do {\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x15a63d);\n    var_1510h = 0x6f479f;\n    do {\n        *0x86a958 = 0x8e55e61a;\n        if (*0x86b650 == 0x58) {\n            (*pcVar2)();\n            var_1514h = 0;\n            puStackY44 = NULL;\n            pcStackY48 = 0x85ac5d;\n            (*pcVar1)();\n        }\n        var_1510h = var_1510h + -1;\n    } while (var_1510h != 0);\n    (**0x86a364)();\n    pcVar1 = *0x863224;\n    iVar3 = 0;\n    do {\n        (**0x86308c)();\n        (*pcVar1)();\n        if ((0x1ac2b < iVar3) && (var_1424h != 0xf5bee1)) break;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x1ebc2db6);\n    fcn.0040128e(unaff_EBP);\n    return;\n}\n",
        "token_count": 2522
    },
    "0085a740": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0085a740(int32_t param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_EDI;\n    uchar auStack1028 [1024];\n    uint32_t uStack4;\n    \n    uStack4 = *0x867008 ^ &stack0xfffffbf8;\n    if (unaff_EDI == 0x182) {\n        (**0x86303c)(0, 0, 0);\n    }\n    pcVar2 = *0x863098;\n    pcVar1 = *0x863040;\n    iVar4 = 0;\n    if (0 < unaff_EDI) {\n        do {\n            if (unaff_EDI == 0x2d) {\n                (*pcVar2)(\"higijowicehocipuhufocanofarucega\", \"dusotikogadedofududobo\", \"cupogas\", \n                          \"pilovimerewofozajomahiyopotelam\");\n                (*pcVar1)(0);\n            }\n            uVar3 = fcn.0085a690();\n            *(param_1 + iVar4) = *(param_1 + iVar4) ^ uVar3;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < unaff_EDI);\n    }\n    if (unaff_EDI == 0x2d) {\n        (**0x863000)(0, \"xemakavodohogajumovusaraxalebu\", auStack1028, &stack0xfffffbf8);\n        *0x86b658 = 0xa62e7790;\n        *0x86b65c = 0xffffffff;\n    }\n    fcn.0040128e(param_1);\n    return;\n}\n",
        "token_count": 412
    },
    "0085a800": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "terminate process"
        ],
        "decompiled_code": "\nvoid fcn.0085a800(void)\n\n{\n    uint uVar1;\n    uint in_stack_fffffbdc;\n    uchar auStack1036 [1028];\n    uint32_t uStack8;\n    \n    uVar1 = *0x86a364;\n    uStack8 = *0x867008 ^ &stack0xfffffbdc;\n    if (*0x86b650 == 0x5dd) {\n        (**0x8630e0)(\"belanawok pegutu viloh\", 0, auStack1036, 0);\n    }\n    fcn.0085a6f0(*0x867ff0);\n    if (*0x86b650 == 0x2f) {\n        (**0x863054)(&stack0xfffffbdc);\n        (**0x8630e8)(0);\n    }\n    fcn.0085a740(uVar1);\n    if (*0x86b650 == 0x568) {\n        (**0x8630c0)(0, \"lobakoxepevihajegowowirig kopofazuyus momiz bucecinebuhugenayipuxuw\");\n    }\n    fcn.0040128e(in_stack_fffffbdc);\n    return;\n}\n",
        "token_count": 275
    },
    "00401415": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401415(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00401351(arg_8h, arg_ch, 0x40);\n    return;\n}\n",
        "token_count": 45
    },
    "0040165e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040165e(int32_t *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if ((arg_8h == NULL) || (*0x869324 == 0)) {\n        puVar1 = fcn.00401c5e();\n        *puVar1 = 0x16;\n        fcn.00402c11(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x869324;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 149
    },
    "0040169a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040169a(int32_t *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if ((arg_8h == NULL) || (*0x869320 == 0)) {\n        puVar1 = fcn.00401c5e();\n        *puVar1 = 0x16;\n        fcn.00402c11(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x869320;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 149
    },
    "00401887": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401887(uint arg_8h)\n\n{\n    fcn.0040175b(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 40
    },
    "00403fd6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403fea)\n// WARNING: Removing unreachable block (ram,0x00403ff0)\n// WARNING: Removing unreachable block (ram,0x00403ff2)\n\nvoid fcn.00403fd6(void)\n\n{\n    return;\n}\n",
        "token_count": 63
    },
    "00408bbb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00408bbb(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00402c54(0x865758, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.00401c5e();\n        *puVar1 = 0x16;\n        fcn.00402c11(0, 0, 0, 0, 0);\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.004083e6(unaff_EBP + -0x1c, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00408c59();\n        if (*(unaff_EBP + -0x20) != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.00402c99();\n    return;\n}\n",
        "token_count": 454
    },
    "00408c87": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408c87(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    iVar1 = fcn.00408bbb(arg_8h, arg_ch, arg_10h, arg_14h, &var_4h, 0);\n    if (iVar1 != 0) {\n        return 0xffffffff;\n    }\n    return var_4h;\n}\n",
        "token_count": 122
    },
    "00408cb9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408cb9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00408bbb(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 77
    },
    "004128ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004128ac(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.00401c5e();\n        *puVar1 = 0x16;\n        fcn.00402c11(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x869e58;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 137
    },
    "00412d59": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412d59(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.00401c5e();\n        *puVar1 = 0x16;\n        fcn.00402c11(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x867eb4;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 138
    },
    "00412d92": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412d92(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.00401c5e();\n        *puVar1 = 0x16;\n        fcn.00402c11(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x867eb8;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 138
    },
    "00412dcb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412dcb(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.00401c5e();\n        *puVar1 = 0x16;\n        fcn.00402c11(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x867eb0;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 138
    },
    "0085a690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0085a690(void)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x86b650 == 0xfc7) {\n        (**0x8630ac)(0);\n    }\n    *0x86a354 = *0x86a354 * 0x343fd + 0x269ec3;\n    uVar1 = *0x86a354 >> 0x10;\n    if (*0x86b650 == 0x1381) {\n        (**0x863024)(0, 0);\n    }\n    return uVar1 & 0x7fff;\n}\n",
        "token_count": 138
    },
    "0085c0eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0085c0eb(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_2c8h;\n    uint var_8fh;\n    \n    fcn.0085c2b4(arg_8h, arg_ch);\n    fcn.0085c2b4(arg_10h, arg_14h);\n    fcn.0085d7b7();\n    fcn.0085c133();\n    return;\n}\n",
        "token_count": 114
    },
    "0085c281": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0085c281(uint arg_8h, uint arg_ch)\n\n{\n    uint var_2c8h;\n    \n    fcn.0085c2b4(arg_8h, arg_ch);\n    fcn.0085d750();\n    fcn.0085c133();\n    return;\n}\n",
        "token_count": 72
    },
    "0085c2b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nfloat10 __cdecl fcn.0085c2b4(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    float10 fVar1;\n    uint var_ah;\n    uint var_6h;\n    uint var_2h;\n    \n    if ((arg_ch._2_2_ & 0x7ff0) == 0x7ff0) {\n        fVar1 = CONCAT28(arg_ch._2_2_, CONCAT44(arg_ch << 0xb | arg_8h >> 0x15, arg_8h)) | 0x7fff;\n    }\n    else {\n        fVar1 = CONCAT26(arg_ch._2_2_, CONCAT24(arg_ch, arg_8h));\n    }\n    return fVar1;\n}\n",
        "token_count": 183
    },
    "0085c3c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0085c3c5(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0085c31d(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 48
    },
    "0085c544": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0085c544(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0085c49c(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 46
    },
    "004145a2": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.004145a2(void)\n\n{\n    *0x867fdc = (**0x8631b8)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 56
    },
    "0085a6f0": {
        "rules": [
            "get file attributes"
        ],
        "decompiled_code": "\nvoid fcn.0085a6f0(uint param_1)\n\n{\n    if (*0x86b650 == 0x930) {\n        (**0x863070)(0, 0);\n        (**0x863034)(0, 0);\n    }\n    *0x86a354 = param_1;\n    if (*0x86b650 == 0x114e) {\n        (**0x863058)(0x864d30);\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "0040a0f4": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a0f4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    (**0x8631c0)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 67
    }
}