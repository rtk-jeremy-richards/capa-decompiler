{
    "00407e4b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407e4b(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.00407f6d(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 84
    },
    "00405140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00405140(void)\n\n{\n    int32_t iVar1;\n    uint extraout_var;\n    \n    if (*0x44f2d0 == 0) {\n        iVar1 = *0x44f2d0;\n        fcn.004077cf(0);\n        if (*0x44f2d0 == 0) {\n            *0x44f2c4 = *0x44f2c4 + 1;\n            *0x44f2d0 = *0x44f2c4;\n        }\n        fcn.004077f7(iVar1, extraout_var);\n    }\n    return *0x44f2d0;\n}\n",
        "token_count": 153
    },
    "00405290": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00405290(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t unaff_ESI;\n    \n    iVar1 = *in_EAX;\n    if (unaff_ESI < *(iVar1 + 0xc)) {\n        iVar2 = *(*(iVar1 + 8) + unaff_ESI * 4);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (*(iVar1 + 0x14) != '\\0') {\n        iVar1 = fcn.004074a5();\n        if (unaff_ESI < *(iVar1 + 0xc)) {\n            return *(*(iVar1 + 8) + unaff_ESI * 4);\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 205
    },
    "00405410": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405410(uint *param_1)\n\n{\n    *param_1 = 0x4043f4;\n    if (param_1[5] != 0) {\n        fcn.00407f6d(param_1[4]);\n    }\n    *param_1 = 0x4043ec;\n    *param_1 = 0x401344;\n    return;\n}\n",
        "token_count": 91
    },
    "00405b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00405ba4)\n// WARNING: Removing unreachable block (ram,0x00405bb1)\n\nint64_t __cdecl fcn.00405b60(ushort *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    ushort uVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    bool bVar5;\n    int64_t iVar6;\n    \n    if ((-1 < arg_10h) && ((iVar1 = 0,  0 < arg_10h || (iVar1 = 0,  arg_ch != 0)))) {\n        while( true ) {\n            do {\n                iVar6 = fcn.00406940();\n                if (iVar6 < 1) {\n                    (**(*in_ECX + 0x1c))();\n                    fcn.00404f70();\n                    cVar2 = fcn.00404f40();\n                    if (cVar2 != '\\0') {\n                        return iVar1;\n                    }\n                    uVar3 = fcn.00404f30();\n                    *arg_8h = uVar3;\n                    arg_8h = arg_8h + 1;\n                    iVar1 = iVar1 + 1;\n                    bVar5 = arg_ch != 0;\n                    arg_ch = arg_ch - 1;\n                    arg_10h = arg_10h + -1 + bVar5;\n                }\n                else {\n                    if (CONCAT44(arg_10h, arg_ch) < iVar6) {\n                        iVar6 = CONCAT44(arg_10h, arg_ch);\n                    }\n                    uVar4 = iVar6;\n                    fcn.004068b0(uVar4);\n                    fcn.00404f20();\n                    iVar1 = iVar6 + iVar1;\n                    arg_8h = arg_8h + uVar4;\n                    bVar5 = arg_ch < uVar4;\n                    arg_ch = arg_ch - uVar4;\n                    arg_10h = (arg_10h - (iVar6 >> 0x20)) - bVar5;\n                    fcn.004068f0();\n                }\n            } while (0 < arg_10h);\n            if (arg_10h < 0) break;\n            if (arg_ch == 0) {\n                return iVar1;\n            }\n        }\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 542
    },
    "00405c70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00405cb4)\n// WARNING: Removing unreachable block (ram,0x00405cc1)\n\nint64_t __cdecl fcn.00405c70(uint arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    char cVar3;\n    ushort uVar4;\n    int32_t *in_ECX;\n    uint32_t uVar5;\n    bool bVar6;\n    int64_t iVar7;\n    \n    if ((-1 < arg_10h) && ((iVar2 = 0,  0 < arg_10h || (iVar2 = 0,  arg_ch != 0)))) {\n        while( true ) {\n            do {\n                iVar7 = fcn.004069c0();\n                if (iVar7 < 1) {\n                    iVar1 = *in_ECX;\n                    uVar4 = fcn.00404f30();\n                    (**(iVar1 + 0xc))(uVar4);\n                    fcn.00404f70();\n                    cVar3 = fcn.00404f40();\n                    if (cVar3 != '\\0') {\n                        return iVar2;\n                    }\n                    iVar2 = iVar2 + 1;\n                    bVar6 = arg_ch != 0;\n                    arg_ch = arg_ch - 1;\n                    arg_10h = arg_10h + -1 + bVar6;\n                }\n                else {\n                    if (CONCAT44(arg_10h, arg_ch) < iVar7) {\n                        iVar7 = CONCAT44(arg_10h, arg_ch);\n                    }\n                    uVar5 = iVar7;\n                    fcn.004068d0(uVar5);\n                    fcn.00404f20();\n                    iVar2 = iVar7 + iVar2;\n                    bVar6 = arg_ch < uVar5;\n                    arg_ch = arg_ch - uVar5;\n                    arg_10h = (arg_10h - (iVar7 >> 0x20)) - bVar6;\n                    fcn.00406960();\n                }\n            } while (0 < arg_10h);\n            if (arg_10h < 0) break;\n            if (arg_ch == 0) {\n                return iVar2;\n            }\n        }\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 516
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00406870": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406870(uint param_1)\n\n{\n    fcn.00405810(param_1);\n    return;\n}\n",
        "token_count": 31
    },
    "00406940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406940(void)\n\n{\n    int32_t in_EAX;\n    \n    if (**(in_EAX + 0x20) != 0) {\n        return;\n    }\n    return;\n}\n",
        "token_count": 47
    },
    "004069c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004069c0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (**(in_EAX + 0x24) != 0) {\n        return;\n    }\n    return;\n}\n",
        "token_count": 48
    },
    "00406c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406c00(uint param_1)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    \n    fcn.004058f0();\n    *(in_EAX + 0x38) = param_1;\n    *(in_EAX + 0x3c) = 0;\n    uVar1 = fcn.00406c80();\n    *(in_EAX + 0x40) = uVar1;\n    if (*(in_EAX + 0x38) == 0) {\n        fcn.00405a60();\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "00407f6d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407f6d(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x44f4bc, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.004085e4();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.004085a2(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "00409333": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00409333(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x4093de;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.0040940a;\n        uStack36 = *0x41a344 ^ &fcn.00409333::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00409333::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0040b85f();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.00409333::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 720
    },
    "00409621": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409621(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x41a344) {\n        return;\n    }\n    *0x44fd70 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x44fd74 = &arg_8h;\n    *0x44fcb0 = 0x10001;\n    *0x44fc58 = 0xc0000409;\n    *0x44fc5c = 1;\n    var_328h = *0x41a344;\n    var_324h = *0x41a348;\n    *0x44fc64 = unaff_retaddr;\n    *0x44fd3c = in_GS;\n    *0x44fd40 = in_FS;\n    *0x44fd44 = in_ES;\n    *0x44fd48 = in_DS;\n    *0x44fd4c = unaff_EDI;\n    *0x44fd50 = unaff_ESI;\n    *0x44fd54 = unaff_EBX;\n    *0x44fd58 = in_EDX;\n    *0x44fd5c = in_ECX;\n    *0x44fd60 = in_EAX;\n    *0x44fd64 = unaff_EBP;\n    *0x44fd68 = unaff_retaddr;\n    *0x44fd6c = in_CS;\n    *0x44fd78 = in_SS;\n    *0x44fca8 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00413161(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x402bc8);\n    if (*0x44fca8 == 0) {\n        fcn.00413161(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 831
    },
    "0040b09f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040b1a5: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040b1aa)\n// WARNING: Removing unreachable block (ram,0x0040b1d9)\n// WARNING: Removing unreachable block (ram,0x0040b1b0)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040b09f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040b4c0(0x418330, 0x20);\n    fcn.0040f5f7(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x44f4f0 != 1) {\n        *0x44f4ec = 1;\n        *0x44f4e8 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x7f1fac);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x7f1fa8);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.0040b6af();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.0040b6af();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x7f1fac);\n                        piVar2 = (*pcVar1)(*0x7f1fa8);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x401228;\n            while (*(unaff_EBP + -0x1c) < 0x401234) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x401238;\n        while (*(unaff_EBP + -0x20) < 0x40123c) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040f51e(8);\n    }\n    return;\n}\n",
        "token_count": 1037
    },
    "0040d478": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040d478(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040b85f();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0040b85f();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "0040d73f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d73f(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.0040956f(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0040b85f();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0040b85f();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00409548(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0040d4d7(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 386
    },
    "0041203d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041203d(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040f51e(0);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "0041223c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041223c(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41a344 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.0040b6af();\n    var_14h = 0;\n    if (*0x45010c == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x403764);\n        pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x403758), \n           pcVar4 = _sym.imp.KERNEL32.dll_EncodePointer,  iVar2 == 0)) goto code_r0x00412399;\n        *0x45010c = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, 0x403748);\n        *0x450110 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x403734);\n        *0x450114 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x403718);\n        *0x45011c = (*pcVar4)(uVar3);\n        if (*0x45011c != 0) {\n            uVar3 = (*pcVar6)(iVar1, 0x403700);\n            *0x450118 = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x450118 == var_18h) || (*0x45011c == var_18h)) {\ncode_r0x00412348:\n        if ((((*0x450110 != var_18h) && (pcVar4 = (*pcVar6)(*0x450110),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x450114 != var_18h && (pcVar4 = (*pcVar6)(*0x450114),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x450118);\n        pcVar5 = (*pcVar6)(*0x45011c);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x00412348;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x45010c);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x00412399:\n    fcn.00409621(unaff_EBX);\n    return;\n}\n",
        "token_count": 915
    },
    "00414470": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.00414470(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint *in_FS_OFFSET;\n    uint uStack3872;\n    uint uStack3868;\n    uint uStack3864;\n    uint uStack3860;\n    uint uStack3856;\n    uint uStack3852;\n    uint uStack3848;\n    uchar *puStack3844;\n    uchar *puStack3840;\n    uint uStack3836;\n    uint uStack3832;\n    uint uStack3828;\n    uint uStack3824;\n    uint uStack3820;\n    uchar *puStack3816;\n    uint uStack3812;\n    uint uStack3808;\n    uchar *puStack3804;\n    uint uStack3800;\n    uint uStack3796;\n    uint uStack3792;\n    uint uStack3788;\n    uint uStack3784;\n    uint uStack3780;\n    uchar *puStack3776;\n    uint uStack3772;\n    uint uStack3768;\n    uint uStack3764;\n    uint uStack3760;\n    uint uStack3756;\n    uchar *puStack3752;\n    uint uStack3748;\n    uchar *puStack3744;\n    uchar *puStack3740;\n    uint uStack3736;\n    uchar *puStack3732;\n    uchar *puStack3728;\n    uchar *puStack3724;\n    int32_t iStack3696;\n    int32_t iStack3688;\n    int32_t iStack3636;\n    uchar auStack3424 [308];\n    uchar auStack3116 [988];\n    uchar auStack2128 [24];\n    uchar auStack2104 [2076];\n    uint uStack28;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x417bfb;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    uVar6 = 0;\n    do {\n        if (uVar6 < 0x1c428) {\n            (*pcVar1)();\n            (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        }\n    } while ((((uVar6 < 0x1ea07dba) || (iStack3688 == 0xad121a)) || (iStack3636 == 0x8c67878)) &&\n            (uVar6 = uVar6 + 1,  uVar6 < 0x8c70231e));\n    if (*0x7f0264 == 0x12) {\n        fcn.0040803b(0);\n        fcn.0040806b();\n        fcn.00405df0();\n        uStack16 = 0;\n        puStack3724 = 0x414512;\n        fcn.00408199(0);\n        fcn.004081bb();\n    }\n    *0x7f0264 = *0x7f0264 + 0x38d6;\n    puStack3724 = 0x414534;\n    *0x7ed2c4 = (*_sym.imp.KERNEL32.dll_LocalAlloc)();\n    pcVar5 = _sym.imp.KERNEL32.dll_GetConsoleTitleW;\n    pcVar4 = _sym.imp.KERNEL32.dll_EnumDateFormatsA;\n    pcVar3 = _sym.imp.KERNEL32.dll_GetOverlappedResult;\n    pcVar1 = _sym.imp.KERNEL32.dll_EnumCalendarInfoW;\n    iStack3696 = 0x963510;\n    uVar6 = *0x7f0264;\n    do {\n        if (uVar6 == 3) {\n            puStack3724 = NULL;\n            puStack3728 = 0x41456d;\n            (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)();\n            uVar6 = *0x7f0264;\n        }\n        if (uVar6 == 0xbc5) {\n            puStack3724 = NULL;\n            puStack3728 = NULL;\n            puStack3732 = NULL;\n            uStack3736 = 0;\n            puStack3740 = 0x414587;\n            (*pcVar1)();\n            puStack3740 = NULL;\n            puStack3744 = NULL;\n            uStack3748 = 0;\n            puStack3752 = NULL;\n            uStack3756 = 0x414591;\n            (*pcVar1)();\n            uStack3756 = 0;\n            uStack3760 = 0;\n            uStack3764 = 0;\n            uStack3768 = 0;\n            uStack3772 = 0x41459b;\n            (*pcVar3)();\n            uStack3772 = 0;\n            puStack3776 = &stack0xfffff7b0;\n            uStack3780 = 0x4145a7;\n            (*pcVar5)();\n            uStack3780 = 0x403fc8;\n            uStack3784 = 0x4145b2;\n            (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n            uStack3784 = 0;\n            uStack3788 = 0;\n            uStack3792 = 0;\n            uStack3796 = 0x4145ba;\n            (*pcVar4)();\n            uStack3796 = 0;\n            uStack3800 = 0;\n            puStack3804 = 0x4145c4;\n            (*_sym.imp.KERNEL32.dll_SetConsoleMode)();\n            puStack3804 = NULL;\n            uStack3808 = 0;\n            uStack3812 = 0;\n            puStack3816 = 0x4145cc;\n            (*pcVar4)();\n            puStack3816 = &stack0xfffff184;\n            uStack3820 = 0;\n            uStack3824 = 0x4145d9;\n            (*_sym.imp.KERNEL32.dll_GetConsoleScreenBufferInfo)();\n            uStack3824 = 0;\n            uStack3828 = 0;\n            uStack3832 = 0x4145e3;\n            (*_sym.imp.KERNEL32.dll_GetCommState)();\n            uStack3832 = 0;\n            uStack3836 = 0x4145eb;\n            (*_sym.imp.KERNEL32.dll_GlobalUnfix)();\n            uStack3836 = 0;\n            puStack3840 = 0x4145f3;\n            (*_sym.imp.KERNEL32.dll_SetComputerNameA)();\n            puStack3840 = &stack0xfffff130;\n            puStack3844 = &stack0xfffff144;\n            uStack3848 = 0;\n            uStack3792 = 0;\n            uStack3788 = 0;\n            uStack3784 = 0;\n            uStack3780 = 0;\n            puStack3776 = NULL;\n            uStack3852 = 0x41461a;\n            (*_sym.imp.KERNEL32.dll_BuildCommDCBAndTimeoutsA)();\n            uStack3852 = 0x404030;\n            uStack3856 = 0x414625;\n            (*_sym.imp.KERNEL32.dll_GetFileAttributesA)();\n            uStack3856 = 0x404048;\n            uStack3860 = 0x414630;\n            (*_sym.imp.KERNEL32.dll_GetDriveTypeW)();\n            uStack3860 = 0;\n            uStack3864 = 0;\n            uStack3868 = 0;\n            uStack3872 = 0x41463c;\n            (*_sym.imp.KERNEL32.dll_CreateJobSet)();\n            uStack3872 = 0x404140;\n            (*_sym.imp.KERNEL32.dll_GetFileAttributesW)();\n            (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0, 0x404184);\n            (*_sym.imp.KERNEL32.dll_GetStringTypeA)(0, 0, 0x404194, 0, &stack0xfffff0e8);\n            uStack3872 = 0;\n            uStack3868 = 0;\n            (*_sym.imp.KERNEL32.dll_InterlockedPopEntrySList)(&stack0xfffff0e0);\n            (*_sym.imp.KERNEL32.dll_EnumSystemLocalesA)(0, 0);\n            uVar6 = *0x7f0264;\n        }\n        pcVar2 = _sym.imp.KERNEL32.dll_GetEnvironmentStrings;\n        iStack3696 = iStack3696 + -1;\n    } while (iStack3696 != 0);\n    uVar7 = 0;\n    if (uVar6 != 0) {\n        do {\n            puStack3724 = 0x4146ab;\n            fcn.004141b0();\n            if (*0x7f0264 == 0x29) {\n                puStack3724 = 0x4146b7;\n                (*pcVar2)();\n            }\n            uVar7 = uVar7 + 1;\n            uVar6 = *0x7f0264;\n        } while (uVar7 < *0x7f0264);\n    }\n    if (uVar6 == 0x19c) {\n        puStack3724 = NULL;\n        puStack3728 = &stack0xfffff190;\n        puStack3732 = NULL;\n        uStack3736 = 0;\n        puStack3740 = NULL;\n        puStack3744 = 0x4146db;\n        (*_sym.imp.KERNEL32.dll_WriteConsoleA)();\n        puStack3744 = &stack0xfffff184;\n        uStack3748 = 0x4146e6;\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)();\n        uStack3748 = 0x4041d0;\n        puStack3752 = 0x4146f1;\n        (*_sym.imp.KERNEL32.dll_FindAtomW)();\n        puStack3752 = &stack0xfffff170;\n        uStack3756 = 0;\n        uStack3760 = 0x404200;\n        uStack3764 = 0;\n        uStack3768 = 0;\n        uStack3772 = 0x414707;\n        (*_sym.imp.KERNEL32.dll_GetStringTypeExA)();\n        uStack3772 = 0;\n        puStack3776 = 0x41470f;\n        (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)();\n        puStack3776 = 0x404270;\n        uStack3780 = 0;\n        uStack3784 = 0;\n        uStack3788 = 0;\n        uStack3792 = 0x414720;\n        (*_sym.imp.KERNEL32.dll_SetCalendarInfoA)();\n        uStack3792 = 0;\n        uStack3796 = 0x404290;\n        uStack3800 = 0x41472d;\n        (*_sym.imp.KERNEL32.dll_BeginUpdateResourceW)();\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetMenu;\n    iVar8 = 0x8dc;\n    do {\n        puStack3724 = NULL;\n        puStack3728 = 0x41473c;\n        (*pcVar1)();\n        pcVar3 = _sym.imp.KERNEL32.dll_SetFileShortNameA;\n        iVar8 = iVar8 + -1;\n    } while (iVar8 != 0);\n    iVar8 = 0x250a9;\n    do {\n        if (*0x7f0264 == 0x92) {\n            puStack3724 = 0x4042b4;\n            puStack3728 = NULL;\n            puStack3732 = 0x414761;\n            (*pcVar3)();\n        }\n        iVar8 = iVar8 + -1;\n    } while (iVar8 != 0);\n    *0x450160 = 0;\n    puStack3724 = 0x414770;\n    fcn.00413cc0();\n    puStack3724 = 0x414775;\n    fcn.00414440();\n    puStack3724 = 0x41477a;\n    fcn.00414190();\n    pcVar3 = _sym.imp.USER32.dll_DefDlgProcW;\n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n    iVar8 = 0xf2b8b;\n    do {\n        if (*0x7f0264 == 0x21) {\n            puStack3724 = NULL;\n            puStack3728 = NULL;\n            puStack3732 = NULL;\n            uStack3736 = 0;\n            puStack3740 = 0x4147a2;\n            (*pcVar3)();\n            puStack3740 = NULL;\n            puStack3744 = 0x4147a6;\n            (*pcVar1)();\n        }\n        iVar8 = iVar8 + -1;\n    } while (iVar8 != 0);\n    puStack3724 = 0x4147ae;\n    fcn.00414270();\n    *0x450161 = 0x73;\n    if (*0x7f0264 == 0xd5c) {\n        puStack3724 = &stack0xfffff2a0;\n        puStack3728 = NULL;\n        puStack3732 = 0x4147d6;\n        (*_sym.imp.KERNEL32.dll_FindNextFileA)();\n        puStack3732 = &stack0xfffff190;\n        uStack3736 = 0x4147e1;\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)();\n        uStack3736 = 0;\n        puStack3740 = &stack0xfffff3d4;\n        puStack3744 = NULL;\n        uStack3748 = 0x4147f1;\n        (*_sym.imp.KERNEL32.dll_GetVolumeNameForVolumeMountPointA)();\n        uStack3748 = 0;\n        puStack3752 = &stack0xfffff7c8;\n        uStack3756 = 0;\n        uStack3760 = 0x414801;\n        (*_sym.imp.KERNEL32.dll_GetVolumePathNameA)();\n        uStack3760 = 0x4042cc;\n        uStack3764 = 0x41480c;\n        (*_sym.imp.KERNEL32.dll_LoadLibraryW)();\n        uStack3764 = 0;\n        uStack3768 = 0;\n        uStack3772 = 0x414814;\n        (*_sym.imp.KERNEL32.dll_TerminateJobObject)();\n        uStack3772 = 0x41481a;\n        (*_sym.imp.KERNEL32.dll_DebugBreak)();\n        uStack3772 = 0;\n        puStack3776 = 0x414821;\n        (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)();\n        puStack3776 = 0x4042e8;\n        uStack3780 = 0x414828;\n        (*pcVar1)();\n        uStack3780 = 0;\n        uStack3784 = 0;\n        uStack3788 = 0x414830;\n        (*_sym.imp.KERNEL32.dll_SetProcessPriorityBoost)();\n        uStack3788 = 0;\n        uStack3792 = 0;\n        uStack3796 = 0x414838;\n        (*_sym.imp.KERNEL32.dll_EnumSystemLocalesA)();\n        uStack3796 = 0;\n        uStack3800 = 0x41483f;\n        (*_sym.imp.KERNEL32.dll_ReleaseActCtx)();\n        uStack3800 = 0;\n        puStack3804 = 0x414846;\n        (*_sym.imp.KERNEL32.dll_GetStdHandle)();\n        puStack3804 = &stack0xfffff140;\n        puStack3776 = NULL;\n        uStack3772 = 0;\n        uStack3808 = 0x414859;\n        (*_sym.imp.KERNEL32.dll_InterlockedPopEntrySList)();\n    }\n    puStack3724 = 0x41485e;\n    fcn.004141a0();\n    *in_FS_OFFSET = uStack28;\n    return 0;\n}\n",
        "token_count": 3570
    },
    "0041543d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041543d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41a344 ^ &stack0xfffffffc;\n    fcn.0040a880(arg_10h);\n    var_14h = fcn.00416390(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.004158ee(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00415496:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x004154d6;\n        }\n        if (iVar1 != 2) {\ncode_r0x004154c8:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x004154d6;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x004154c8;\n        goto code_r0x00415496;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x004154d6:\n    fcn.00409621(unaff_EBX);\n    return;\n}\n",
        "token_count": 498
    },
    "004154e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004154e5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41a344 ^ &stack0xfffffffc;\n    fcn.0040a880(arg_10h);\n    var_14h = fcn.00416390(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00415e3f(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0041553e:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0041557e;\n        }\n        if (iVar1 != 2) {\ncode_r0x00415570:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0041557e;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00415570;\n        goto code_r0x0041553e;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0041557e:\n    fcn.00409621(unaff_EBX);\n    return;\n}\n",
        "token_count": 500
    },
    "004158ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.004158ee(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41a344 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = str.5_v_[1];\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = str.5_v_[0] + L'\\xffffffff';\n        iVar14 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x00415a32;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x00415a39;\ncode_r0x00415a32:\n                        do {\n                            bVar6 = true;\ncode_r0x00415a39:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x00415a47;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x00415a47:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x44ef64 - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x44ef64 < iVar14) {\n                if (iVar14 < *0x44ef60) {\n                    iVar14 = iVar14 + str.5_v_[3];\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = str.5_v_[3] + *0x44ef60;\n                }\n                goto code_r0x00415df2;\n            }\n            iVar13 = *0x44ef64 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = str.5_v_[0] + L'\\xffffffff';\n            iVar13 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x00415be6;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x00415be6:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = str.5_v_[1] + L'\\x01' + (str.5_v_[1] + L'\\x01' >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x00415df2:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar15;\n    }\n    fcn.00409621(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3259
    },
    "00415e3f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.00415e3f(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41a344 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = *0x44ef84;\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = *0x44ef80 + -1;\n        iVar14 = *0x44ef80 + (*0x44ef80 >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (*0x44ef80 & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x00415f83;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x00415f8a;\ncode_r0x00415f83:\n                        do {\n                            bVar6 = true;\ncode_r0x00415f8a:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x00415f98;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x00415f98:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x44ef7c - *0x44ef80) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x44ef7c < iVar14) {\n                if (iVar14 < *0x44ef78) {\n                    iVar14 = iVar14 + *0x44ef8c;\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = *0x44ef84 + (*0x44ef84 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = *0x44ef84 + (*0x44ef84 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = *0x44ef8c + *0x44ef78;\n                }\n                goto code_r0x00416343;\n            }\n            iVar13 = *0x44ef7c - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = *0x44ef80 + -1;\n            iVar13 = *0x44ef80 + (*0x44ef80 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (*0x44ef80 & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x00416137;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x00416137:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = *0x44ef84 + 1 + (*0x44ef84 + 1 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x00416343:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x44ef88 == 0x40) {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (*0x44ef88 == 0x20) {\n        *arg_ch = uVar15;\n    }\n    fcn.00409621(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3233
    },
    "00405370": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00405370(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar auStack52 [4];\n    uchar auStack48 [32];\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x417b3b;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    if ((param_1 != NULL) && (*param_1 == 0)) {\n        iVar1 = fcn.00408382(0x20);\n        uStack4 = 0;\n        if (iVar1 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            fcn.00405280();\n            fcn.00404fd0(auStack48);\n            iVar2 = fcn.00405350();\n        }\n        uStack8 = 0xffffffff;\n        *param_1 = iVar2;\n        if (iVar1 != 0) {\n            fcn.00405070(auStack52);\n        }\n    }\n    *in_FS_OFFSET = uStack16;\n    return 2;\n}\n",
        "token_count": 280
    },
    "00406520": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040666f)\n// WARNING: Removing unreachable block (ram,0x004065bd)\n\nuint __cdecl\nfcn.00406520(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint32_t arg_24h)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    int64_t iVar5;\n    \n    iVar5 = fcn.00406b10();\n    iVar2 = fcn.004068d0();\n    if ((iVar2 != 0) && (uVar3 = fcn.004068d0(),  *(in_ECX + 0x3c) < uVar3)) {\n        uVar4 = fcn.004068d0();\n        *(in_ECX + 0x3c) = uVar4;\n    }\n    iVar1 = iVar5;\n    if (iVar5 != CONCAT44(*0x40133c, *0x401338)) {\n        if ((arg_24h & 1) != 0) {\n            iVar2 = fcn.004068b0();\n            if (iVar2 != 0) {\n                iVar1 = CONCAT44(*0x40133c, *0x401338);\n                if (-1 < iVar5) {\n                    iVar2 = fcn.004068a0();\n                    iVar2 = *(in_ECX + 0x3c) - iVar2;\n                    iVar1 = CONCAT44(*0x40133c, *0x401338);\n                    if (iVar5 <= CONCAT44(iVar2 >> 0x1f, iVar2 >> 1)) {\n                        fcn.004068a0();\n                        fcn.004068b0();\n                        fcn.004068f0();\n                        iVar1 = iVar5;\n                        if (((arg_24h & 2) != 0) && (iVar2 = fcn.004068d0(),  iVar2 != 0)) {\n                            fcn.00406920();\n                            fcn.004068b0();\n                            fcn.004068c0();\n                            fcn.00406990();\n                        }\n                    }\n                }\n                goto code_r0x00406626;\n            }\n        }\n        iVar1 = CONCAT44(*0x40133c, *0x401338);\n        if ((arg_24h & 2) != 0) {\n            iVar2 = fcn.004068d0();\n            iVar1 = CONCAT44(*0x40133c, *0x401338);\n            if ((iVar2 != 0) && (iVar1 = CONCAT44(*0x40133c, *0x401338),  -1 < iVar5)) {\n                iVar2 = fcn.004068a0();\n                iVar2 = *(in_ECX + 0x3c) - iVar2;\n                iVar1 = CONCAT44(*0x40133c, *0x401338);\n                if (iVar5 <= CONCAT44(iVar2 >> 0x1f, iVar2 >> 1)) {\n                    fcn.004068a0();\n                    fcn.004068d0();\n                    fcn.00406960();\n                    iVar1 = iVar5;\n                }\n            }\n        }\n    }\ncode_r0x00406626:\n    fcn.00406af0(iVar1);\n    return arg_8h;\n}\n",
        "token_count": 774
    },
    "00406700": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00406700(uint param_1, uint8_t param_2)\n\n{\n    fcn.00405260();\n    if ((param_2 & 1) != 0) {\n        fcn.004081b0(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 68
    },
    "00406ab0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00406ab0(void)\n\n{\n    int32_t unaff_ESI;\n    \n    if ((*(unaff_ESI + 0x40) & 1) != 0) {\n        fcn.004068a0();\n        fcn.004069e0();\n    }\n    fcn.00406900();\n    fcn.00406970();\n    *(unaff_ESI + 0x40) = *(unaff_ESI + 0x40) & 0xfffffffe;\n    *(unaff_ESI + 0x3c) = 0;\n    return;\n}\n",
        "token_count": 132
    },
    "00406ea6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406ea6(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x401260;\n    if ((arg_8h & 1) != 0) {\n        fcn.004081b0();\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00407d23": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407d23(uint32_t arg_8h)\n\n{\n    fcn.00407ee3();\n    if ((arg_8h & 1) != 0) {\n        fcn.004081b0();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00407eee": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407eee(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x40138c;\n    fcn.00407e4b();\n    if ((arg_8h & 1) != 0) {\n        fcn.004081b0();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00408260": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408260(uint32_t arg_8h)\n\n{\n    fcn.00408250();\n    if ((arg_8h & 1) != 0) {\n        fcn.004081b0();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "0040d2e1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d2e1(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x402bb0;\n    fcn.00407ee3();\n    if ((arg_8h & 1) != 0) {\n        fcn.004081b0();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00412fb4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00412fb4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040b4c0(0x418628, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.004085f7();\n        *puVar2 = 0;\n        puVar2 = fcn.004085e4();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x7f0e64)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x7f0e80;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.004127f1(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.004085e4();\n                    *puVar2 = 9;\n                    puVar2 = fcn.004085f7();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.004128b7(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00413080();\n                goto code_r0x00413077;\n            }\n        }\n        puVar2 = fcn.004085f7();\n        *puVar2 = 0;\n        puVar2 = fcn.004085e4();\n        *puVar2 = 9;\n        fcn.0040c0fc();\n    }\ncode_r0x00413077:\n    fcn.0040b505();\n    return;\n}\n",
        "token_count": 613
    },
    "00405180": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405180(int32_t param_1)\n\n{\n    fcn.004077cf(0);\n    if (*(param_1 + 4) != -1) {\n        *(param_1 + 4) = *(param_1 + 4) + 1;\n    }\n    fcn.004077f7();\n    return;\n}\n",
        "token_count": 80
    },
    "004051b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004051b0(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.004077cf(0);\n    iVar1 = *(param_1 + 4);\n    if ((iVar1 != 0) && (iVar1 != -1)) {\n        *(param_1 + 4) = iVar1 + -1;\n    }\n    iVar1 = *(param_1 + 4);\n    fcn.004077f7();\n    return ~-(iVar1 != 0) & param_1;\n}\n",
        "token_count": 124
    },
    "00406cf0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00406cf0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    int32_t iVar3;\n    int32_t iStack36;\n    uchar auStack32 [4];\n    uint uStack28;\n    uint uStack20;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x417b58;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    iVar3 = 0;\n    fcn.004077cf(0);\n    iVar2 = *0x7f0e4c;\n    uStack8 = 0;\n    iStack36 = *0x7f0e4c;\n    fcn.00405140();\n    iVar1 = fcn.00405290();\n    if ((iVar1 == 0) && (iVar1 = iVar2,  iVar2 == 0)) {\n        iVar2 = fcn.00405370(&iStack36);\n        if (iVar2 == -1) {\n            fcn.00407ec5(0x40431c);\n            fcn.004091f1(auStack32, 0x41875c);\n        }\n        *0x7f0e4c = iVar3;\n        fcn.00405180();\n        fcn.004051f0();\n        iVar1 = iVar3;\n    }\n    uStack20 = 0xffffffff;\n    fcn.004077f7();\n    *in_FS_OFFSET = uStack28;\n    return iVar1;\n}\n",
        "token_count": 365
    },
    "00413cc0": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\nvoid fcn.00413cc0(void)\n\n{\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    *0x7f0268 = 0x6b;\n    *0x7f026c = 0x72;\n    uStack164 = 0x7f0268;\n    *0x7f0274 = 0x320033;\n    *0x7f027c = 0x6c006c;\n    *0x7f026e = 0x6e;\n    *0x7f0270 = 0x6c0065;\n    *0x7f0278 = 0x64002e;\n    *0x7f026a = 0x65;\n    *0x7f0280 = 0;\n    uStack168 = 0x413d30;\n    *0x7ed2cc = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n    uStack68 = 0x3dceee0a;\n    uStack160 = 0x51873851;\n    uStack108 = 0x168b252;\n    uStack116 = 0x134402db;\n    uStack100 = 0x5c9ce3a5;\n    uStack64 = 0x62159a65;\n    uStack128 = 0x29cb708d;\n    uStack144 = 0x37c44d6b;\n    uStack148 = 0x176d7c10;\n    uStack132 = 0x3381d0c2;\n    uStack12 = 0x78c49a;\n    uStack48 = 0x1f02a601;\n    uStack136 = 0x955a5c;\n    uStack56 = 0x1ed8cec;\n    uStack152 = 0x3b1ff94f;\n    uStack88 = 0x16100971;\n    uStack112 = 0x41855dd5;\n    uStack124 = 0x108c577;\n    uStack92 = 0xd2f1089;\n    uStack96 = 0x44d48452;\n    uStack120 = 0x2022d08b;\n    uStack40 = 0x52e297e2;\n    uStack8 = 0x13fada42;\n    uStack104 = 0x50b5de3;\n    uStack76 = 0xcc89b0af;\n    uStack72 = 0xefbad8c4;\n    uStack60 = 0x575a1a0a;\n    uStack28 = 0xea390923;\n    uStack32 = 0x95738727;\n    uStack156 = 0xdb66a696;\n    uStack20 = 0x824e9a91;\n    uStack52 = 0x33b28d67;\n    uStack84 = 0x920f239e;\n    uStack24 = 0xcc14587c;\n    uStack44 = 0x27629035;\n    uStack16 = 0xd56e4fed;\n    uStack140 = 0xcd574015;\n    uStack80 = 0x6451d49;\n    uStack36 = 0x5813002a;\n    uStack168 = 0x450160;\n    *0x45016b = 0x65;\n    *0x450161 = 0x75747269;\n    *0x450165 = 0x6c61;\n    *0x450160 = 0x56;\n    *0x45016c = 0x7463;\n    *0x45016e = 0;\n    *0x450167 = 0x746f7250;\n    uStack172 = *0x7ed2cc;\n    *0x454ef4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    (**0x454ef4)(*0x7ed2c4, *0x7f0264, 0x40, &stack0xffffff54);\n    return;\n}\n",
        "token_count": 1136
    },
    "004142d0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.004142d0(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uStack1044;\n    int32_t iStack1036;\n    uchar auStack1024 [1024];\n    \n    iVar4 = *0x44cebc;\n    iVar3 = *0x44ceb8;\n    iVar2 = *0x44ceb4;\n    iVar1 = *0x44ceb0;\n    uStack1044 = *param_1;\n    uVar5 = param_1[1];\n    iStack1036 = 0x20;\n    do {\n        if (*0x7f0264 == 5) {\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasExesLengthA)();\n            (*_sym.imp.KERNEL32.dll_SetThreadIdealProcessor)(0, 0);\n        }\n        *0x7ed2c8 = 0;\n        if (*0x7f0264 == 0x5ba) {\n            (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0, 0x403f08);\n        }\n        uVar5 = uVar5 - ((uStack1044 >> 5) + iVar4 ^ uStack1044 * 0x10 + iVar3 ^ uStack1044 + 0xc6ef3720);\n        *0x7ed2d0 = 0xff6b3619;\n        *0x7ed2d4 = 0xffffffff;\n        uStack1044 = uStack1044 - (uVar5 * 0x10 + iVar1 ^ uVar5 + 0xc6ef3720 ^ (uVar5 >> 5) + iVar2);\n        if (*0x7f0264 == 0x93) {\n            (*_sym.imp.KERNEL32.dll_lstrcatA)(auStack1024, 0x403f24);\n        }\n        else {\n            fcn.00414260();\n        }\n        iStack1036 = iStack1036 + -1;\n    } while (iStack1036 != 0);\n    param_1[1] = uVar5;\n    *param_1 = uStack1044;\n    return;\n}\n",
        "token_count": 510
    },
    "00414440": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.00414440(void)\n\n{\n    uint32_t uVar1;\n    \n    for (uVar1 = *0x7f0264 >> 3; uVar1 != 0; uVar1 = uVar1 - 1) {\n        fcn.004142d0();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00404f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404f00(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00408b20(param_3, param_2, in_EAX * 2);\n    return;\n}\n",
        "token_count": 63
    },
    "00404f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404f20(void)\n\n{\n    fcn.00404f00();\n    return;\n}\n",
        "token_count": 25
    },
    "00404fd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00404fd0(uint param_1)\n\n{\n    uint unaff_ESI;\n    int32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x417ac4;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.004077cf(0);\n    uStack8 = 0;\n    fcn.00405a10();\n    fcn.00405a10();\n    fcn.00405a10();\n    fcn.00405a10();\n    uStack8 = CONCAT31(uStack8._1_3_, 4);\n    if (unaff_EDI == 0) {\n        fcn.00404f80(0x403eac);\n        fcn.004091f1(&stack0xffffffe0, 0x4186c8);\n    }\n    fcn.004075f6(param_1, unaff_EDI);\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 268
    },
    "00405070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00405070(uint param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack8 = 0x417ac4;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 4;\n    fcn.00407583(param_1);\n    fcn.00405a20();\n    fcn.00405a20();\n    fcn.00405a20();\n    fcn.00405a20();\n    uStack4 = 0xffffffff;\n    fcn.004077f7();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 160
    },
    "004050e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004050e0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint *unaff_ESI;\n    uchar auStack20 [20];\n    \n    puVar3 = fcn.00407bc2(auStack20);\n    uVar1 = puVar3[1];\n    *unaff_ESI = *puVar3;\n    uVar2 = puVar3[2];\n    unaff_ESI[1] = uVar1;\n    uVar1 = puVar3[3];\n    unaff_ESI[2] = uVar2;\n    unaff_ESI[3] = uVar1;\n    return;\n}\n",
        "token_count": 153
    },
    "00405280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00405280(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(*in_EAX + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = *in_EAX + 0x1c;\n    }\n    return iVar1;\n}\n",
        "token_count": 77
    },
    "00405440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00405440(void)\n\n{\n    uint *puVar1;\n    int32_t unaff_EDI;\n    \n    puVar1 = fcn.004050e0();\n    *(unaff_EDI + 8) = *puVar1;\n    *(unaff_EDI + 0xc) = puVar1[1];\n    *(unaff_EDI + 0x10) = puVar1[2];\n    *(unaff_EDI + 0x14) = puVar1[3];\n    puVar1 = fcn.00405110();\n    *(unaff_EDI + 0x18) = *puVar1;\n    *(unaff_EDI + 0x1c) = puVar1[1];\n    return;\n}\n",
        "token_count": 167
    },
    "00405810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405810(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t extraout_ECX;\n    uint uStack40;\n    uchar auStack28 [28];\n    \n    *(param_1 + 0xc) = in_EAX & 0x17;\n    uVar1 = *(param_1 + 0x10) & in_EAX & 0x17;\n    if (uVar1 != 0) {\n        if ((uVar1 & 4) != 0) {\n            uStack40 = 0x40582f;\n            fcn.00405770();\n            uStack40 = 0x403ebc;\n            fcn.004057f0();\n            fcn.004091f1(&stack0xffffffe4, 0x418724);\n            uVar1 = extraout_ECX;\n        }\n        if ((uVar1 & 2) != 0) {\n            fcn.00405770();\n            fcn.004057f0(0x403ed4);\n            fcn.004091f1(&stack0xffffffd8, 0x418724);\n        }\n        fcn.00405770();\n        fcn.004057f0(0x403eec);\n        fcn.004091f1(&stack0xffffffd8, 0x418724);\n    }\n    return;\n}\n",
        "token_count": 313
    },
    "004058f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.004058f0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EDI;\n    \n    *(unaff_EDI + 0x30) = 0;\n    *(unaff_EDI + 8) = 0;\n    *(unaff_EDI + 0x10) = 0;\n    *(unaff_EDI + 0x14) = 0x201;\n    *(unaff_EDI + 0x18) = 6;\n    *(unaff_EDI + 0x1c) = 0;\n    *(unaff_EDI + 0x20) = 0;\n    *(unaff_EDI + 0x24) = 0;\n    *(unaff_EDI + 0x28) = 0;\n    *(unaff_EDI + 0x2c) = 0;\n    fcn.004058a0();\n    iVar1 = fcn.00408382(4);\n    if (iVar1 != 0) {\n        uVar2 = fcn.00405240();\n        *(unaff_EDI + 0x30) = uVar2;\n        return;\n    }\n    *(unaff_EDI + 0x30) = 0;\n    return;\n}\n",
        "token_count": 283
    },
    "00405a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405a20(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        fcn.00407f6d(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 60
    },
    "00405df0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t * fcn.00405df0(int32_t *param_1)\n\n{\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x417bd7;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x4043d8;\n    param_1[4] = 0x4043e0;\n    fcn.00406890();\n    uStack4 = 0;\n    fcn.00406a00(param_1, param_1 + 6);\n    uStack12 = 1;\n    *(param_1 + *(*param_1 + 4)) = 0x4043d4;\n    fcn.00406a60(param_1 + 6);\n    *in_FS_OFFSET = unaff_EDI;\n    return param_1;\n}\n",
        "token_count": 225
    },
    "004068f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004068f0(int32_t param_1, int32_t param_2)\n\n{\n    **(param_2 + 0x30) = **(param_2 + 0x30) - param_1;\n    **(param_2 + 0x20) = **(param_2 + 0x20) + param_1 * 2;\n    return;\n}\n",
        "token_count": 91
    },
    "00406960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406960(int32_t param_1, int32_t param_2)\n\n{\n    **(param_2 + 0x34) = **(param_2 + 0x34) - param_1;\n    **(param_2 + 0x24) = **(param_2 + 0x24) + param_1 * 2;\n    return;\n}\n",
        "token_count": 90
    },
    "004069f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004069f0(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (param_1 != 0) {\n        if ((param_1 < 0x80000000) && (iVar1 = fcn.00408382(param_1 * 2),  iVar1 != 0)) {\n            return iVar1;\n        }\n        fcn.00404eb0();\n        iVar1 = fcn.004091f1(&stack0xfffffff0, 0x418794);\n    }\n    return iVar1;\n}\n",
        "token_count": 135
    },
    "00406a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t * fcn.00406a00(int32_t *param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x417b9b;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.00406b40(param_1);\n    uStack12 = 1;\n    fcn.00406b20(param_1 + 4);\n    *(param_1 + *(*param_1 + 4)) = 0x40438c;\n    *in_FS_OFFSET = param_2;\n    return param_1;\n}\n",
        "token_count": 169
    },
    "00406a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.00406a60(uint *param_1)\n\n{\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x417af8;\n    *in_FS_OFFSET = &uStack12;\n    fcn.00406b80(param_1);\n    uStack8 = 0;\n    *param_1 = 0x404394;\n    fcn.00405dd0();\n    fcn.00406bf0();\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 160
    },
    "00406b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t * fcn.00406b40(int32_t *param_1, uint param_2)\n\n{\n    *(param_1 + *(*param_1 + 4)) = 0x40437c;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    fcn.00406c00(param_2);\n    return param_1;\n}\n",
        "token_count": 89
    },
    "00406b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * fcn.00406b80(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x417adb;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x40433c;\n    fcn.0040780e();\n    uStack4 = 0;\n    iVar1 = fcn.00408382(4);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00405240();\n    }\n    param_1[0xe] = uVar2;\n    fcn.00406c40();\n    *in_FS_OFFSET = uStack12;\n    return param_1;\n}\n",
        "token_count": 216
    },
    "00406c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406c80(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x417b78;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.004058c0();\n    uStack4 = 0;\n    fcn.00406cf0();\n    uStack4 = 0xffffffff;\n    fcn.00405260();\n    fcn.00405340();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 145
    },
    "0040b1df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b1df(uint arg_8h)\n\n{\n    fcn.0040b09f(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 43
    },
    "0040cac1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040cad5)\n// WARNING: Removing unreachable block (ram,0x0040cadb)\n// WARNING: Removing unreachable block (ram,0x0040cadd)\n\nvoid fcn.0040cac1(void)\n\n{\n    return;\n}\n",
        "token_count": 64
    },
    "00414190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414190(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "004141b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004141b0(void)\n\n{\n    int32_t unaff_ESI;\n    \n    fcn.00413810();\n    if (*0x7f0264 == 0x37) {\n        (*_sym.imp.KERNEL32.dll_GetDriveTypeW)();\n        (*_sym.imp.KERNEL32.dll_GetNamedPipeHandleStateA)();\n        (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n        (*_sym.imp.KERNEL32.dll_RemoveDirectoryW)();\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileIntW)();\n        (*_sym.imp.KERNEL32.dll_SetTapePosition)();\n        (*_sym.imp.KERNEL32.dll_DebugBreak)();\n        (*_sym.imp.KERNEL32.dll_FindNextVolumeMountPointW)();\n    }\n    *(*0x7ed2c4 + unaff_ESI) = *(*0x7f0e48 + 0x38d6 + unaff_ESI);\n    return;\n}\n",
        "token_count": 216
    },
    "00414260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414260(void)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + 0x61c88647;\n    return;\n}\n",
        "token_count": 44
    },
    "00406c40": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00406c40(void)\n\n{\n    int32_t unaff_ESI;\n    \n    *(unaff_ESI + 0x10) = unaff_ESI + 8;\n    *(unaff_ESI + 0x14) = unaff_ESI + 0xc;\n    *(unaff_ESI + 0x20) = unaff_ESI + 0x18;\n    *(unaff_ESI + 0x24) = unaff_ESI + 0x1c;\n    *(unaff_ESI + 0x30) = unaff_ESI + 0x28;\n    *(unaff_ESI + 0x34) = unaff_ESI + 0x2c;\n    fcn.00406970();\n    fcn.00406900();\n    return;\n}\n",
        "token_count": 179
    },
    "0040a860": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a860(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.00407f6d(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00413c81": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00413c81(void)\n\n{\n    *0x41b050 = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x403e9c, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 65
    },
    "0040bb23": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040bb23(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040b4c0(0x4183a0, 0xc);\n    fcn.0040f5f7(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x44fb3c;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x44fb38;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040bb67;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00407f6d(arg_8h_00);\ncode_r0x0040bb67:\n        fcn.00407f6d(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040bb8a();\n    fcn.0040b505();\n    return;\n}\n",
        "token_count": 406
    },
    "0040803b": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040803b(uint lpFileName)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(lpFileName);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.0040860a(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 118
    },
    "0040806b": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint fcn.0040806b(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(param_1);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.0040860a(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 118
    }
}